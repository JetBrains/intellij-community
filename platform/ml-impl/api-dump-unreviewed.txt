f:com.intellij.filePrediction.features.history.FileHistoryFeatures
- <init>(java.lang.Integer,com.intellij.filePrediction.features.history.NextFileProbability,com.intellij.filePrediction.features.history.NextFileProbability):V
- f:component1():java.lang.Integer
- f:component2():com.intellij.filePrediction.features.history.NextFileProbability
- f:component3():com.intellij.filePrediction.features.history.NextFileProbability
- f:copy(java.lang.Integer,com.intellij.filePrediction.features.history.NextFileProbability,com.intellij.filePrediction.features.history.NextFileProbability):com.intellij.filePrediction.features.history.FileHistoryFeatures
- bs:copy$default(com.intellij.filePrediction.features.history.FileHistoryFeatures,java.lang.Integer,com.intellij.filePrediction.features.history.NextFileProbability,com.intellij.filePrediction.features.history.NextFileProbability,I,java.lang.Object):com.intellij.filePrediction.features.history.FileHistoryFeatures
- equals(java.lang.Object):Z
- f:getBiGram():com.intellij.filePrediction.features.history.NextFileProbability
- f:getPosition():java.lang.Integer
- f:getUniGram():com.intellij.filePrediction.features.history.NextFileProbability
- hashCode():I
- toString():java.lang.String
f:com.intellij.filePrediction.features.history.FileHistoryManager
- <init>(com.intellij.internal.ml.ngram.NGramIncrementalModelRunner):V
- f:calcNGramFeatures(java.util.List):com.intellij.filePrediction.features.history.FilePredictionNGramFeatures
- f:calcNextFileProbability(java.lang.String):D
- f:onFileOpened(java.lang.String):V
- f:saveFileHistoryAsync(com.intellij.openapi.project.Project):V
f:com.intellij.filePrediction.features.history.FileHistoryManagerWrapper
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.filePrediction.features.history.FileHistoryManagerWrapper$Companion
- <init>(com.intellij.openapi.project.Project):V
- f:calcNGramFeatures(java.util.List):com.intellij.filePrediction.features.history.FilePredictionNGramFeatures
- f:calcNextFileProbability(com.intellij.openapi.vfs.VirtualFile):D
- dispose():V
f:com.intellij.filePrediction.features.history.FileHistoryManagerWrapper$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.filePrediction.features.history.FileHistoryManagerWrapper
- f:getInstanceIfCreated(com.intellij.openapi.project.Project):com.intellij.filePrediction.features.history.FileHistoryManagerWrapper
f:com.intellij.filePrediction.features.history.FileHistoryPersistence
- sf:INSTANCE:com.intellij.filePrediction.features.history.FileHistoryPersistence
- f:deleteLegacyFile(com.intellij.openapi.project.Project):V
- f:loadNGrams(com.intellij.openapi.project.Project,I):com.intellij.internal.ml.ngram.NGramIncrementalModelRunner
- f:saveNGramsAsync(com.intellij.openapi.project.Project,com.intellij.internal.ml.ngram.NGramIncrementalModelRunner):V
f:com.intellij.filePrediction.features.history.FilePredictionNGramFeatures
- <init>(java.util.Map):V
- f:calculateFileFeatures(java.lang.String):com.intellij.filePrediction.features.history.NextFileProbability
f:com.intellij.filePrediction.features.history.NextFileProbability
- <init>(D,D,D,D,D):V
- f:component1():D
- f:component2():D
- f:component3():D
- f:component4():D
- f:component5():D
- f:copy(D,D,D,D,D):com.intellij.filePrediction.features.history.NextFileProbability
- bs:copy$default(com.intellij.filePrediction.features.history.NextFileProbability,D,D,D,D,D,I,java.lang.Object):com.intellij.filePrediction.features.history.NextFileProbability
- equals(java.lang.Object):Z
- f:getMaxMle():D
- f:getMinMle():D
- f:getMle():D
- f:getMleToMax():D
- f:getMleToMin():D
- hashCode():I
- toString():java.lang.String
f:com.intellij.internal.ml.models.local.LocalCatBoostModelMetadataReader
- com.intellij.internal.ml.ModelMetadataReader
- <init>(java.lang.String,java.lang.String):V
- allKnown():java.lang.String
- binaryFeatures():java.lang.String
- categoricalFeatures():java.lang.String
- extractVersion():java.lang.String
- featureOrderDirect():java.util.List
- floatFeatures():java.lang.String
- f:loadModel():com.intellij.internal.ml.catboost.NaiveCatBoostModel
f:com.intellij.internal.ml.models.local.LocalRandomForestModel
- com.intellij.internal.ml.completion.CompletionRankingModelBase
- sf:Companion:com.intellij.internal.ml.models.local.LocalRandomForestModel$Companion
- predict(D[]):D
f:com.intellij.internal.ml.models.local.LocalRandomForestModel$Companion
- f:loadModel(java.lang.String,com.intellij.internal.ml.FeaturesInfo):com.intellij.internal.ml.DecisionFunction
c:com.intellij.internal.ml.models.local.ZipModelMetadataReader
- com.intellij.internal.ml.ModelMetadataReader
- <init>(java.util.zip.ZipFile):V
- allKnown():java.lang.String
- binaryFeatures():java.lang.String
- categoricalFeatures():java.lang.String
- extractVersion():java.lang.String
- featureOrderDirect():java.util.List
- floatFeatures():java.lang.String
- f:resourceContent(java.lang.String):java.lang.String
- f:tryGetResourceAsStream(java.lang.String):java.io.InputStream
f:com.intellij.internal.ml.ngram.NGramIncrementalModelRunner
- com.intellij.completion.ngram.slp.modeling.runners.ModelRunner
- sf:Companion:com.intellij.internal.ml.ngram.NGramIncrementalModelRunner$Companion
- <init>(I,D,com.intellij.completion.ngram.slp.modeling.ngram.NGramModel,com.intellij.internal.ml.ngram.VocabularyWithLimit):V
- f:createScorer():com.intellij.internal.ml.ngram.NGramModelScorer
- f:getLambda():D
- f:learnNextToken(java.lang.String):V
f:com.intellij.internal.ml.ngram.NGramIncrementalModelRunner$Companion
- f:createModelRunner(I,D,com.intellij.completion.ngram.slp.counting.trie.ArrayTrieCounter,com.intellij.internal.ml.ngram.VocabularyWithLimit):com.intellij.internal.ml.ngram.NGramIncrementalModelRunner
- f:createNewModelRunner(I,D):com.intellij.internal.ml.ngram.NGramIncrementalModelRunner
- bs:createNewModelRunner$default(com.intellij.internal.ml.ngram.NGramIncrementalModelRunner$Companion,I,D,I,java.lang.Object):com.intellij.internal.ml.ngram.NGramIncrementalModelRunner
f:com.intellij.internal.ml.ngram.NGramModelScorer
- <init>(kotlin.jvm.functions.Function1,java.lang.String[]):V
- f:score(java.lang.String):D
f:com.intellij.internal.ml.ngram.NGramModelSerializer
- sf:INSTANCE:com.intellij.internal.ml.ngram.NGramModelSerializer
- f:loadNGrams(java.nio.file.Path,I):com.intellij.internal.ml.ngram.NGramIncrementalModelRunner
- f:saveNGrams(java.nio.file.Path,com.intellij.internal.ml.ngram.NGramIncrementalModelRunner):V
f:com.intellij.internal.ml.ngram.NGramRecentTokens
- java.io.Externalizable
- <init>(I):V
- f:contains(java.lang.String):Z
- f:getRecentTokens():java.util.List
- f:lastIndex():I
- readExternal(java.io.ObjectInput):V
- f:removeEldest():kotlin.Pair
- f:setMaxTokenIndex(I):V
- f:size():I
- f:update(java.lang.String):V
- writeExternal(java.io.ObjectOutput):V
f:com.intellij.internal.ml.ngram.NGramRecentTokensSequence
- java.io.Externalizable
- <init>(I,I,I):V
- f:getMaxSequenceLength():I
- readExternal(java.io.ObjectInput):V
- f:size():I
- f:subListFromStart(I):java.util.List
- writeExternal(java.io.ObjectOutput):V
f:com.intellij.internal.ml.ngram.VocabularyWithLimit
- com.intellij.completion.ngram.slp.translating.Vocabulary
- java.io.Externalizable
- sf:Companion:com.intellij.internal.ml.ngram.VocabularyWithLimit$Companion
- <init>(I,I,I,I):V
- b:<init>(I,I,I,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getMaxVocabularySize():I
- f:getRecent():com.intellij.internal.ml.ngram.NGramRecentTokens
- f:getRecentSequence():com.intellij.internal.ml.ngram.NGramRecentTokensSequence
- readExternal(java.io.ObjectInput):V
- f:setMaxVocabularySize(I):V
- f:toExistingIndices(java.util.List):java.util.List
- f:toIndicesWithLimit(java.util.List,com.intellij.completion.ngram.slp.modeling.ngram.NGramModel):java.util.List
- writeExternal(java.io.ObjectOutput):V
f:com.intellij.internal.ml.ngram.VocabularyWithLimit$Companion
f:com.intellij.platform.ml.impl.DumbMLTaskKt
f:com.intellij.platform.ml.impl.MLModelUsageSessionKt
f:com.intellij.platform.ml.impl.MLTaskKt
f:com.intellij.platform.ml.impl.UtilKt
com.intellij.platform.ml.impl.apiPlatform.MLTaskGroupListenerProvider
- sf:Companion:com.intellij.platform.ml.impl.apiPlatform.MLTaskGroupListenerProvider$Companion
f:com.intellij.platform.ml.impl.apiPlatform.MLTaskGroupListenerProvider$Companion
- f:getTOPIC():com.intellij.util.messages.Topic
f:com.intellij.platform.ml.impl.environment.ExtendedEnvironmentKt
f:com.intellij.platform.ml.impl.environment.TopologicalSortingResolverKt
f:com.intellij.platform.ml.impl.logs.CommonKt
f:com.intellij.platform.ml.impl.logs.MLSessionLoggerKt
f:com.intellij.platform.ml.impl.logs.SessionAsMultipleEventsLoggingStrategyKt
f:com.intellij.platform.ml.impl.logs.SessionFinishedKt
f:com.intellij.platform.ml.impl.model.RegressionModelKt
a:com.intellij.platform.ml.impl.ngram.model.NGramModel
- <init>(com.intellij.platform.ml.impl.ngram.model.counter.NGramCounter,I):V
- f:getAllNGramsWithCount():java.util.Map
- pf:getNGramCounter():com.intellij.platform.ml.impl.ngram.model.counter.NGramCounter
- pf:getNgramSize():I
- a:scoreToken(java.util.List,I):D
f:com.intellij.platform.ml.impl.ngram.model.NGramModelKt
com.intellij.platform.ml.impl.ngram.model.NGramToken
f:com.intellij.platform.ml.impl.ngram.model.NGramToken$EndOfSentence
- com.intellij.platform.ml.impl.ngram.model.NGramToken
- sf:INSTANCE:com.intellij.platform.ml.impl.ngram.model.NGramToken$EndOfSentence
- toString():java.lang.String
f:com.intellij.platform.ml.impl.ngram.model.NGramToken$StartOfSentence
- com.intellij.platform.ml.impl.ngram.model.NGramToken
- sf:INSTANCE:com.intellij.platform.ml.impl.ngram.model.NGramToken$StartOfSentence
- toString():java.lang.String
f:com.intellij.platform.ml.impl.ngram.model.NGramToken$Word
- com.intellij.platform.ml.impl.ngram.model.NGramToken
- bsf:box-impl(java.lang.Object):com.intellij.platform.ml.impl.ngram.model.NGramToken$Word
- s:constructor-impl(java.lang.Object):java.lang.Object
- equals(java.lang.Object):Z
- s:equals-impl(java.lang.Object,java.lang.Object):Z
- sf:equals-impl0(java.lang.Object,java.lang.Object):Z
- f:getWord():java.lang.Object
- hashCode():I
- s:hashCode-impl(java.lang.Object):I
- toString():java.lang.String
- s:toString-impl(java.lang.Object):java.lang.String
- bf:unbox-impl():java.lang.Object
f:com.intellij.platform.ml.impl.ngram.model.SimpleNGramModel
- com.intellij.platform.ml.impl.ngram.model.NGramModel
- sf:Companion:com.intellij.platform.ml.impl.ngram.model.SimpleNGramModel$Companion
- b:<init>(com.intellij.platform.ml.impl.ngram.model.counter.NGramCounter,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- scoreToken(java.util.List,I):D
f:com.intellij.platform.ml.impl.ngram.model.SimpleNGramModel$Companion
- f:train(java.util.Collection,I):com.intellij.platform.ml.impl.ngram.model.NGramModel
com.intellij.platform.ml.impl.ngram.model.counter.NGramCounter
- a:getAllNGramsWithCount():java.util.Map
- a:getFrequencyOf(java.util.List):I
f:com.intellij.platform.ml.impl.session.SessionStructureCollectorKt
f:com.intellij.platform.ml.impl.session.SessionTreeKt
f:com.intellij.platform.ml.impl.session.SessionUsageUtilKt
f:com.intellij.platform.ml.impl.session.analysis.AnalysersKt
f:com.intellij.platform.ml.impl.turboComplete.CompletionKind
- <init>(java.lang.Enum,com.intellij.platform.ml.impl.turboComplete.KindVariety):V
- f:component1():java.lang.Enum
- f:component2():com.intellij.platform.ml.impl.turboComplete.KindVariety
- f:copy(java.lang.Enum,com.intellij.platform.ml.impl.turboComplete.KindVariety):com.intellij.platform.ml.impl.turboComplete.CompletionKind
- bs:copy$default(com.intellij.platform.ml.impl.turboComplete.CompletionKind,java.lang.Enum,com.intellij.platform.ml.impl.turboComplete.KindVariety,I,java.lang.Object):com.intellij.platform.ml.impl.turboComplete.CompletionKind
- equals(java.lang.Object):Z
- f:getName():java.lang.Enum
- f:getVariety():com.intellij.platform.ml.impl.turboComplete.KindVariety
- hashCode():I
- toString():java.lang.String
com.intellij.platform.ml.impl.turboComplete.KindCollector
- a:collectKinds(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.platform.ml.impl.turboComplete.SuggestionGeneratorExecutor,com.intellij.codeInsight.completion.CompletionResultSet):V
- a:getKindVariety():com.intellij.platform.ml.impl.turboComplete.KindVariety
- a:shouldBeCalled(com.intellij.codeInsight.completion.CompletionParameters):Z
com.intellij.platform.ml.impl.turboComplete.KindExecutionListener
- onCollectionFinished():V
- onCollectionStarted():V
- onGenerationFinished(com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator):V
- onGenerationStarted(com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator):V
- onGeneratorCollected(com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator):V
- onInitialize(com.intellij.codeInsight.completion.CompletionParameters):V
com.intellij.platform.ml.impl.turboComplete.KindVariety
- a:getActualCompletionContributorClass():java.lang.Class
- a:kindsCorrespondToParameters(com.intellij.codeInsight.completion.CompletionParameters):Z
com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator
- sf:Companion:com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator$Companion
- s:fromGenerator(com.intellij.platform.ml.impl.turboComplete.CompletionKind,com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionResultSet,kotlin.jvm.functions.Function0):com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator
- a:generateCompletionVariants():V
- a:getKind():com.intellij.platform.ml.impl.turboComplete.CompletionKind
- s:getLOOKUP_ELEMENT_SUGGESTION_GENERATOR():com.intellij.openapi.util.Key
- a:getParameters():com.intellij.codeInsight.completion.CompletionParameters
- a:getResult():com.intellij.codeInsight.completion.CompletionResultSet
- s:withApplicability(com.intellij.platform.ml.impl.turboComplete.CompletionKind,com.intellij.codeInsight.completion.CompletionResultSet,com.intellij.codeInsight.completion.CompletionParameters,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0):com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator
f:com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator$Companion
- f:fromGenerator(com.intellij.platform.ml.impl.turboComplete.CompletionKind,com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionResultSet,kotlin.jvm.functions.Function0):com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator
- f:getLOOKUP_ELEMENT_SUGGESTION_GENERATOR():com.intellij.openapi.util.Key
- f:getSuggestionGenerator(com.intellij.codeInsight.lookup.LookupElement):com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator
- f:withApplicability(com.intellij.platform.ml.impl.turboComplete.CompletionKind,com.intellij.codeInsight.completion.CompletionResultSet,com.intellij.codeInsight.completion.CompletionParameters,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0):com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator
com.intellij.platform.ml.impl.turboComplete.SuggestionGeneratorConsumer
- a:pass(com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator):V
a:com.intellij.platform.ml.impl.turboComplete.SuggestionGeneratorWithArtifact
- com.intellij.platform.ml.impl.turboComplete.SuggestionGenerator
- <init>(com.intellij.platform.ml.impl.turboComplete.CompletionKind,com.intellij.codeInsight.completion.CompletionResultSet,com.intellij.codeInsight.completion.addingPolicy.PolicyController,com.intellij.codeInsight.completion.CompletionParameters):V
- generateCompletionVariants():V
- a:generateVariantsAndArtifact():java.lang.Object
- f:getArtifact():java.lang.Object
- getKind():com.intellij.platform.ml.impl.turboComplete.CompletionKind
- getParameters():com.intellij.codeInsight.completion.CompletionParameters
- getResult():com.intellij.codeInsight.completion.CompletionResultSet
f:com.intellij.platform.ml.impl.turboComplete.TierCompletionKind
- sf:INSTANCE:com.intellij.platform.ml.impl.turboComplete.TierCompletionKind
f:com.intellij.platform.ml.impl.turboComplete.addingPolicy.CollectionFillingPolicy
- <init>(java.util.Collection):V
- addAllElements(com.intellij.codeInsight.completion.CompletionResultSet,java.lang.Iterable):V
- addElement(com.intellij.codeInsight.completion.CompletionResultSet,com.intellij.codeInsight.lookup.LookupElement):V
com.intellij.platform.ml.impl.turboComplete.ranking.KindRankingListener
- onRanked(java.util.List):V
- onRankingFinished():V
- onRankingStarted():V
f:com.intellij.platform.ml.impl.turboComplete.ranking.RankedKind
- sf:Companion:com.intellij.platform.ml.impl.turboComplete.ranking.RankedKind$Companion
- <init>(com.intellij.platform.ml.impl.turboComplete.CompletionKind,java.lang.Double):V
- f:component1():com.intellij.platform.ml.impl.turboComplete.CompletionKind
- f:component2():java.lang.Double
- f:copy(com.intellij.platform.ml.impl.turboComplete.CompletionKind,java.lang.Double):com.intellij.platform.ml.impl.turboComplete.ranking.RankedKind
- bs:copy$default(com.intellij.platform.ml.impl.turboComplete.ranking.RankedKind,com.intellij.platform.ml.impl.turboComplete.CompletionKind,java.lang.Double,I,java.lang.Object):com.intellij.platform.ml.impl.turboComplete.ranking.RankedKind
- equals(java.lang.Object):Z
- f:getKind():com.intellij.platform.ml.impl.turboComplete.CompletionKind
- f:getRelevance():java.lang.Double
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.ml.impl.turboComplete.ranking.RankedKind$Companion
- f:fromWeights(java.lang.Iterable,Z):java.util.List
e:com.intellij.textMatching.PrefixMatchingType
- java.lang.Enum
- sf:GREEDY:com.intellij.textMatching.PrefixMatchingType
- sf:GREEDY_WITH_CASE:com.intellij.textMatching.PrefixMatchingType
- sf:START_WITH:com.intellij.textMatching.PrefixMatchingType
- sf:UNKNOWN:com.intellij.textMatching.PrefixMatchingType
- sf:WORDS_FIRST_CHAR:com.intellij.textMatching.PrefixMatchingType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.textMatching.PrefixMatchingType
- s:values():com.intellij.textMatching.PrefixMatchingType[]
f:com.intellij.textMatching.PrefixMatchingUtil
- sf:INSTANCE:com.intellij.textMatching.PrefixMatchingUtil
- sf:baseName:java.lang.String
- f:calculateFeatures(java.lang.String,java.lang.String,java.util.Map):V
f:com.intellij.textMatching.PrefixMatchingUtil$PrefixMatchingScores
- sf:Companion:com.intellij.textMatching.PrefixMatchingUtil$PrefixMatchingScores$Companion
- f:component1():Z
- f:component10():I
- f:component11():com.intellij.textMatching.PrefixMatchingType
- f:component2():Z
- f:component3():I
- f:component4():D
- f:component5():D
- f:component6():D
- f:component7():D
- f:component8():D
- f:component9():D
- f:copy(Z,Z,I,D,D,D,D,D,D,I,com.intellij.textMatching.PrefixMatchingType):com.intellij.textMatching.PrefixMatchingUtil$PrefixMatchingScores
- bs:copy$default(com.intellij.textMatching.PrefixMatchingUtil$PrefixMatchingScores,Z,Z,I,D,D,D,D,D,D,I,com.intellij.textMatching.PrefixMatchingType,I,java.lang.Object):com.intellij.textMatching.PrefixMatchingUtil$PrefixMatchingScores
- equals(java.lang.Object):Z
- f:getExact():Z
- f:getExactFinal():Z
- f:getGreedy():D
- f:getGreedyWithCase():D
- f:getSkippedWords():I
- f:getStart():I
- f:getType():com.intellij.textMatching.PrefixMatchingType
- f:getWords():D
- f:getWordsRelative():D
- f:getWordsWithCase():D
- f:getWordsWithCaseRelative():D
- hashCode():I
- toString():java.lang.String
f:com.intellij.textMatching.PrefixMatchingUtil$PrefixMatchingScores$Builder
- <init>():V
- f:build(java.lang.String,java.lang.String):com.intellij.textMatching.PrefixMatchingUtil$PrefixMatchingScores
f:com.intellij.textMatching.PrefixMatchingUtil$PrefixMatchingScores$Companion
f:com.intellij.textMatching.SimilarityScorer
- sf:Companion:com.intellij.textMatching.SimilarityScorer$Companion
- <init>(java.util.List,com.intellij.internal.ml.WordsSplitter):V
- b:<init>(java.util.List,com.intellij.internal.ml.WordsSplitter,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:score(java.lang.String):java.util.List
f:com.intellij.textMatching.SimilarityScorer$Companion
