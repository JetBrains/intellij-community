f:com.intellij.dependencytoolwindow.CoroutineUtilsKt
- sf:getExtensionsFlow(com.intellij.openapi.extensions.ExtensionPointName):kotlinx.coroutines.flow.Flow
com.intellij.dependencytoolwindow.DependenciesToolWindowTabProvider
- sf:Companion:com.intellij.dependencytoolwindow.DependenciesToolWindowTabProvider$Companion
- a:addIsAvailableChangesListener(com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):com.intellij.dependencytoolwindow.DependenciesToolWindowTabProvider$Subscription
- a:getId():com.intellij.dependencytoolwindow.DependenciesToolWindowTabProvider$Id
- a:isAvailable(com.intellij.openapi.project.Project):Z
- a:provideTab(com.intellij.openapi.project.Project):com.intellij.ui.content.Content
f:com.intellij.dependencytoolwindow.DependenciesToolWindowTabProvider$Companion
- f:extensions(com.intellij.openapi.project.Project):java.util.List
- f:hasAnyExtensions():Z
com.intellij.dependencytoolwindow.DependenciesToolWindowTabProvider$Id
com.intellij.dependencytoolwindow.DependenciesToolWindowTabProvider$Subscription
- a:unsubscribe():V
f:com.intellij.dependencytoolwindow.DependencyToolWindowOpener
- sf:INSTANCE:com.intellij.dependencytoolwindow.DependencyToolWindowOpener
- f:activateToolWindow(com.intellij.openapi.project.Project,com.intellij.dependencytoolwindow.DependenciesToolWindowTabProvider$Id,kotlin.jvm.functions.Function0):V
f:com.intellij.dependencytoolwindow.DependencyToolWindowViewModelExtractor
- com.intellij.ui.viewModel.extraction.ToolWindowViewModelExtractor
- <init>():V
- getMode():com.intellij.ui.viewModel.extraction.ToolWindowExtractorMode
- isApplicable(java.lang.String,com.intellij.openapi.client.ClientProjectSession):Z
com.intellij.dependencytoolwindow.HasToolWindowActions
- a:getGearActions():com.intellij.openapi.actionSystem.ActionGroup
- a:getTitleActions():java.util.List
f:com.intellij.dependencytoolwindow.UtilsKt
f:icons.PlatformDependencyToolwindowIcons
- sf:ArtifactSmall:javax.swing.Icon
- <init>():V
