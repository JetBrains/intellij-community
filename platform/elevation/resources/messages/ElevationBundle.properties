dialog.title.sudo.prompt.product.elevation.daemon={0} Elevation Service
dialog.message.handshake.init.failed=Unable to arrange initial communication channel with elevation service
dialog.message.failed.to.launch.daemon=Failed to launch elevation service:\n{0}
dialog.message.failed.to.launch.daemon.with.sudo=Failed to launch elevation service using ''{0}'':\n{1}
dialog.message.unable.to.configure.elevation.daemon.after.attempts=Unable to configure elevation service after {0} attempts
progress.title.starting.elevation.daemon=Starting elevation service

elevation.settings.configurable=Process Elevation

text.running.privileged.processes.requires.sudo.authorization=Running privileged processes requires 'sudo' authorization.
text.running.privileged.processes.requires.uac.authorization=Running privileged processes requires UAC authorization.

text.elevation.explanatory.comment.html=\
  {0} utilizes a\\&nbsp;special service process to do this. \
  For\\&nbsp;your\\&nbsp;convenience, you can set it to\\&nbsp;keep running for a\\&nbsp;certain amount of\\&nbsp;time \
  so\\&nbsp;that you don''t have\\&nbsp;to authorize it again each time you run\\&nbsp;or\\&nbsp;debug.
text.elevation.explanatory.warning.html=<b>Important:</b> \
  Enabling this option grants the IDE and all its\\&nbsp;components, \
  <b>including third-party plugins</b>, unrestricted access to\\&nbsp;your\\&nbsp;system.

checkbox.keep.sudo.authorization.for=Keep 'sudo' authorization for
checkbox.keep.uac.authorization.for=Keep UAC authorization for
checkbox.refresh.time.limit.after.each.process=Extend the time limit when starting a new process
text.elevation.settings.refresh.quota.explanatory.comment=The timeout will reset each\\&nbsp;time \
  a\\&nbsp;new\\&nbsp;elevated process is\\&nbsp;launched within the\\&nbsp;specified time frame.

text.you.are.about.to.run.privileges.process=You are about to start a process with elevated privileges.

update.elevation.settings=Update Elevation Settings
update.elevation.preferences=Update Elevation Preferences

authorize.every.time=Authorize every time
keep.authorized.for.0=Keep authorized for {0}
