### auto-generated section `build intellij.platform.syntax` start
load("//build:compiler-options.bzl", "create_kotlinc_options")
load("@rules_jvm//:jvm.bzl", "jvm_library", "jvm_provided_library")

create_kotlinc_options(
  name = "custom_syntax",
  jvm_target = "8",
  x_no_call_assertions = True,
  x_no_param_assertions = True
)

jvm_provided_library(
  name = "platform_syntax_multiplatformSupport_provided",
  lib = "//platform/syntax/syntax-multiplatformSupport:multiplatformSupport"
)

jvm_library(
  name = "syntax",
  module_name = "intellij.platform.syntax",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java", "srcJvm/**/*.kt", "srcJvm/**/*.java"], allow_empty = True),
  kotlinc_opts = ":custom_syntax",
  deps = [
    "@lib//:kotlin-stdlib",
    "@lib//:jetbrains-annotations",
    "//platform/util/multiplatform",
    ":platform_syntax_multiplatformSupport_provided",
  ]
)

jvm_library(
  name = "syntax_test_lib",
  visibility = ["//visibility:public"],
  srcs = glob(["test/**/*.kt", "test/**/*.java"], allow_empty = True),
  kotlinc_opts = ":custom_syntax",
  associates = [":syntax"],
  deps = [
    "@lib//:kotlin-stdlib",
    "@lib//:jetbrains-annotations",
    "//platform/util/multiplatform",
    "//platform/syntax/syntax-multiplatformSupport:multiplatformSupport",
    "@lib//:junit5",
    "@lib//:kotlin-test",
  ]
)
### auto-generated section `build intellij.platform.syntax` end

### auto-generated section `test intellij.platform.syntax` start
load("@community//build:tests-options.bzl", "jps_test")

jps_test(
  name = "syntax_test",
  runtime_deps = [":syntax_test_lib"]
)
### auto-generated section `test intellij.platform.syntax` end