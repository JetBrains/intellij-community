*:com.intellij.platform.syntax.util.cancellation.CancellationProviderExtension
- a:getCancellationProvider():com.intellij.platform.syntax.CancellationProvider
*f:com.intellij.platform.syntax.util.cancellation.CancellationProviderExtensionKt
- *sf:cancellationProvider():com.intellij.platform.syntax.CancellationProvider
*f:com.intellij.platform.syntax.util.language.FiniteSyntaxElementLanguageProvider
- com.intellij.platform.syntax.util.language.SyntaxElementLanguageProvider
- <init>(com.intellij.platform.syntax.SyntaxLanguage,com.intellij.platform.syntax.SyntaxElementTypeSet):V
- getLanguages(com.intellij.platform.syntax.SyntaxElementType):kotlin.sequences.Sequence
*:com.intellij.platform.syntax.util.language.SyntaxElementLanguageProvider
- a:getLanguages(com.intellij.platform.syntax.SyntaxElementType):kotlin.sequences.Sequence
*f:com.intellij.platform.syntax.util.language.SyntaxElementLanguageProviderKt
- *sf:getLanguage(com.intellij.platform.syntax.util.language.SyntaxElementLanguageProvider,com.intellij.platform.syntax.SyntaxElementType):com.intellij.platform.syntax.SyntaxLanguage
- *sf:syntaxElementLanguageProvider():com.intellij.platform.syntax.util.language.SyntaxElementLanguageProvider
*c:com.intellij.platform.syntax.util.lexer.DelegateLexer
- com.intellij.platform.syntax.util.lexer.LexerBase
- <init>(com.intellij.platform.syntax.lexer.Lexer):V
- advance():V
- getBufferEnd():I
- getBufferSequence():java.lang.CharSequence
- f:getDelegate():com.intellij.platform.syntax.lexer.Lexer
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.platform.syntax.SyntaxElementType
- start(java.lang.CharSequence,I,I,I):V
*c:com.intellij.platform.syntax.util.lexer.FlexAdapter
- com.intellij.platform.syntax.util.lexer.LexerBase
- <init>(com.intellij.platform.syntax.util.lexer.FlexLexer):V
- advance():V
- getBufferEnd():I
- getBufferSequence():java.lang.CharSequence
- f:getFlex():com.intellij.platform.syntax.util.lexer.FlexLexer
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.platform.syntax.SyntaxElementType
- pf:locateToken():V
- start(java.lang.CharSequence,I,I,I):V
*:com.intellij.platform.syntax.util.lexer.FlexLexer
- a:advance():com.intellij.platform.syntax.SyntaxElementType
- a:getTokenEnd():I
- a:getTokenStart():I
- a:reset(java.lang.CharSequence,I,I,I):V
- a:yybegin(I):V
- a:yystate():I
*a:com.intellij.platform.syntax.util.lexer.LexerBase
- com.intellij.platform.syntax.lexer.Lexer
- <init>():V
- getCurrentPosition():com.intellij.platform.syntax.lexer.LexerPosition
- restore(com.intellij.platform.syntax.lexer.LexerPosition):V
- start(java.lang.CharSequence):V
- start(java.lang.CharSequence,I,I):V
*c:com.intellij.platform.syntax.util.lexer.MergingLexerAdapter
- com.intellij.platform.syntax.util.lexer.MergingLexerAdapterBase
- <init>(com.intellij.platform.syntax.lexer.Lexer,com.intellij.platform.syntax.SyntaxElementTypeSet):V
- merge(com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.lexer.Lexer):com.intellij.platform.syntax.SyntaxElementType
*a:com.intellij.platform.syntax.util.lexer.MergingLexerAdapterBase
- com.intellij.platform.syntax.util.lexer.DelegateLexer
- <init>(com.intellij.platform.syntax.lexer.Lexer):V
- advance():V
- getCurrentPosition():com.intellij.platform.syntax.lexer.LexerPosition
- f:getOriginal():com.intellij.platform.syntax.lexer.Lexer
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.platform.syntax.SyntaxElementType
- a:merge(com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.lexer.Lexer):com.intellij.platform.syntax.SyntaxElementType
- restore(com.intellij.platform.syntax.lexer.LexerPosition):V
- start(java.lang.CharSequence,I,I,I):V
*f:com.intellij.platform.syntax.util.lexer.PrefixSuffixStripperLexer
- com.intellij.platform.syntax.util.lexer.LexerBase
- <init>(java.lang.String,com.intellij.platform.syntax.SyntaxElementType,java.lang.String,com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.SyntaxElementType):V
- advance():V
- getBufferEnd():I
- getBufferSequence():java.lang.CharSequence
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.platform.syntax.SyntaxElementType
- start(java.lang.CharSequence,I,I,I):V
*f:com.intellij.platform.syntax.util.lexer.StringEscapesTokenTypes
- sf:INSTANCE:com.intellij.platform.syntax.util.lexer.StringEscapesTokenTypes
- f:getINVALID_CHARACTER_ESCAPE_TOKEN():com.intellij.platform.syntax.SyntaxElementType
- f:getINVALID_UNICODE_ESCAPE_TOKEN():com.intellij.platform.syntax.SyntaxElementType
- f:getSTRING_LITERAL_ESCAPES():com.intellij.platform.syntax.SyntaxElementTypeSet
- f:getVALID_STRING_ESCAPE_TOKEN():com.intellij.platform.syntax.SyntaxElementType
*c:com.intellij.platform.syntax.util.lexer.StringLiteralLexer
- com.intellij.platform.syntax.util.lexer.LexerBase
- *sf:Companion:com.intellij.platform.syntax.util.lexer.StringLiteralLexer$Companion
- sf:NO_QUOTE_CHAR:C
- <init>(C,com.intellij.platform.syntax.SyntaxElementType,Z,java.lang.String,Z,Z):V
- b:<init>(C,com.intellij.platform.syntax.SyntaxElementType,Z,java.lang.String,Z,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- advance():V
- getBufferEnd():I
- getBufferSequence():java.lang.CharSequence
- p:getHexCodedEscapeSeq():com.intellij.platform.syntax.SyntaxElementType
- pf:getOriginalLiteralToken():com.intellij.platform.syntax.SyntaxElementType
- pf:getQuoteChar():C
- p:getShouldAllowSlashZero():Z
- pf:getStandardLimitedHexCodedEscapeSeq(I):com.intellij.platform.syntax.SyntaxElementType
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.platform.syntax.SyntaxElementType
- p:getUnicodeEscapeSequenceType():com.intellij.platform.syntax.SyntaxElementType
- p:handleSingleSlashEscapeSequence():com.intellij.platform.syntax.SyntaxElementType
- p:locateAdditionalEscapeSequence(I,I):I
- p:locateHexEscapeSequence(I,I):I
- p:locateUnicodeEscapeSequence(I,I):I
- start(java.lang.CharSequence,I,I,I):V
*f:com.intellij.platform.syntax.util.lexer.StringLiteralLexer$Companion
*f:com.intellij.platform.syntax.util.lexer.StringLiteralLexerKt
- *sf:isHexDigit(C):Z
- *sf:isOctalDigit(C):Z
*:com.intellij.platform.syntax.util.log.LogProvider
- a:getLogger(java.lang.String):com.intellij.platform.syntax.Logger
*f:com.intellij.platform.syntax.util.log.LogProviderExtensionKt
- *sf:logger(java.lang.String):com.intellij.platform.syntax.Logger
*f:com.intellij.platform.syntax.util.parser.SyntaxBuilderUtil
- sf:INSTANCE:com.intellij.platform.syntax.util.parser.SyntaxBuilderUtil
- sf:advance(com.intellij.platform.syntax.parser.SyntaxTreeBuilder,I):V
- sf:drop(com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker[]):V
- sf:expect(com.intellij.platform.syntax.parser.SyntaxTreeBuilder,com.intellij.platform.syntax.SyntaxElementType):Z
- sf:expect(com.intellij.platform.syntax.parser.SyntaxTreeBuilder,com.intellij.platform.syntax.SyntaxElementTypeSet):Z
- sf:hasProperBraceBalance(com.intellij.platform.syntax.lexer.TokenList,com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.CancellationProvider):Z
- sf:hasProperBraceBalance(java.lang.CharSequence,com.intellij.platform.syntax.lexer.Lexer,com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.CancellationProvider):Z
- sf:parseBlockLazy(com.intellij.platform.syntax.parser.SyntaxTreeBuilder,com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.SyntaxElementType):com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker
- sf:rawTokenText(com.intellij.platform.syntax.parser.SyntaxTreeBuilder,I):java.lang.CharSequence
*c:com.intellij.platform.syntax.util.parser.SyntaxTreeBuilderAdapter
- com.intellij.platform.syntax.parser.SyntaxTreeBuilder
- <init>(com.intellij.platform.syntax.parser.SyntaxTreeBuilder):V
- advanceLexer():V
- enforceCommentTokens(com.intellij.platform.syntax.SyntaxElementTypeSet):V
- eof():Z
- error(java.lang.String):V
- getCurrentOffset():I
- getLastDoneMarker():com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker
- getProductions():java.util.List
- getText():java.lang.CharSequence
- getTokenText():java.lang.String
- getTokenType():com.intellij.platform.syntax.SyntaxElementType
- getTokens():com.intellij.platform.syntax.lexer.TokenList
- hasErrorsAfter(com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker):Z
- isWhitespaceOrComment(com.intellij.platform.syntax.SyntaxElementType):Z
- lookAhead(I):com.intellij.platform.syntax.SyntaxElementType
- mark():com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker
- rawAdvanceLexer(I):V
- rawLookup(I):com.intellij.platform.syntax.SyntaxElementType
- rawTokenIndex():I
- rawTokenTypeStart(I):I
- remapCurrentToken(com.intellij.platform.syntax.SyntaxElementType):V
- setDebugMode(Z):V
- setTokenTypeRemapper(com.intellij.platform.syntax.parser.SyntaxElementTypeRemapper):V
- setWhitespaceSkippedCallback(com.intellij.platform.syntax.parser.WhitespaceSkippedCallback):V
*:com.intellij.platform.syntax.util.runtime.GrammarKitLanguageDefinition
- com.intellij.platform.syntax.LanguageSyntaxDefinition
- getPairedBraces():java.util.Collection
*f:com.intellij.platform.syntax.util.runtime.Modifiers
- *sf:Companion:com.intellij.platform.syntax.util.runtime.Modifiers$Companion
- sf:and-thSIBIw(I,I):I
- bsf:box-impl(I):com.intellij.platform.syntax.util.runtime.Modifiers
- equals(java.lang.Object):Z
- s:equals-impl(I,java.lang.Object):Z
- sf:equals-impl0(I,I):Z
- hashCode():I
- s:hashCode-impl(I):I
- sf:or-thSIBIw(I,I):I
- s:toString-impl(I):java.lang.String
- bf:unbox-impl():I
*f:com.intellij.platform.syntax.util.runtime.Modifiers$Companion
- f:get_AND_-4l0SqHU():I
- f:get_COLLAPSE_-4l0SqHU():I
- f:get_LEFT_-4l0SqHU():I
- f:get_LEFT_INNER_-4l0SqHU():I
- f:get_NONE_-4l0SqHU():I
- f:get_NOT_-4l0SqHU():I
- f:get_UPPER_-4l0SqHU():I
*f:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime
- <init>(com.intellij.platform.syntax.parser.SyntaxTreeBuilder,I,Z,java.util.Collection,com.intellij.platform.syntax.Logger,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$ParserUserState):V
- f:getParserUserState():com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$ParserUserState
- f:getSyntaxBuilder():com.intellij.platform.syntax.parser.SyntaxTreeBuilder
- f:init(kotlin.jvm.functions.Function2,com.intellij.platform.syntax.SyntaxElementTypeSet[]):V
- bs:init$default(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,kotlin.jvm.functions.Function2,com.intellij.platform.syntax.SyntaxElementTypeSet[],I,java.lang.Object):V
*f:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$BracePair
- <init>(com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.SyntaxElementType,Z):V
- f:component1():com.intellij.platform.syntax.SyntaxElementType
- f:component2():com.intellij.platform.syntax.SyntaxElementType
- f:copy(com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.SyntaxElementType,Z):com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$BracePair
- bs:copy$default(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$BracePair,com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.SyntaxElementType,Z,I,java.lang.Object):com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$BracePair
- equals(java.lang.Object):Z
- f:getMyLeftBrace():com.intellij.platform.syntax.SyntaxElementType
- f:getMyRightBrace():com.intellij.platform.syntax.SyntaxElementType
- hashCode():I
*f:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$ErrorState
- <init>():V
- f:clearVariants(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Frame):V
- f:clearVariants(Z,I):V
- f:getExpected(I,Z):java.lang.String
- f:initState(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementTypeSet[]):V
- f:typeExtends(com.intellij.platform.syntax.SyntaxElementType,com.intellij.platform.syntax.SyntaxElementType):Z
*f:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Frame
- <init>():V
- f:getElementType():com.intellij.platform.syntax.SyntaxElementType
- f:getErrorReportedAt():I
- f:getLastVariantAt():I
- f:getLeftMarker():com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker
- f:getLevel():I
- f:getModifiers-4l0SqHU():I
- f:getName():java.lang.String
- f:getOffset():I
- f:getParentFrame():com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Frame
- f:getPosition():I
- f:getVariantCount():I
- f:init-dWfhntA(com.intellij.platform.syntax.parser.SyntaxTreeBuilder,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$ErrorState,I,I,com.intellij.platform.syntax.SyntaxElementType,java.lang.String):com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Frame
- f:resetErrorReportedAt():V
- f:setElementType(com.intellij.platform.syntax.SyntaxElementType):V
- f:setModifiers-yW7z4XQ(I):V
*:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Hook
- a:run(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker,java.lang.Object):com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker
*:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Parser
- a:parse(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I):Z
*:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$ParserUserState
*f:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntimeKt
- *sf:DUMMY_BLOCK:com.intellij.platform.syntax.SyntaxElementType
- *sf:LEFT_BINDER:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Hook
- *sf:RIGHT_BINDER:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Hook
- *sf:TOKEN_ADVANCER:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Parser
- *sf:TRUE_CONDITION:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Parser
- *sf:WS_BINDERS:com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Hook
- *sf:addVariant(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String):V
- *sf:advanceToken(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I):Z
- *sf:consumeToken(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType):Z
- *sf:consumeToken(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String):Z
- *sf:consumeToken(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String,Z):Z
- *sf:consumeToken(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *bs:consumeToken$default(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String,Z,I,java.lang.Object):Z
- *sf:consumeTokenFast(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType):Z
- *sf:consumeTokenFast(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String):Z
- *sf:consumeTokenFast(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:consumeTokenSmart(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType):Z
- *sf:consumeTokenSmart(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String):Z
- *sf:consumeTokenSmart(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:consumeTokens(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:consumeTokensSmart(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:create_token_set_(com.intellij.platform.syntax.SyntaxElementType[]):com.intellij.platform.syntax.SyntaxElementTypeSet
- *sf:current_position_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime):I
- *sf:empty_element_parsed_guard_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String,I):Z
- *sf:enter_section_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime):com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker
- *sf:enter_section_-1XsqMUE(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,I,com.intellij.platform.syntax.SyntaxElementType,java.lang.String):com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker
- *sf:enter_section_-KZ0ahqk(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,I,java.lang.String):com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker
- *sf:enter_section_-OUVbDvk(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,I):com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker
- *sf:eof(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I):Z
- *sf:exit_section_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker,com.intellij.platform.syntax.SyntaxElementType,Z,Z,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Parser):V
- *sf:exit_section_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker,Z,Z,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Parser):V
- *sf:exit_section_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker,com.intellij.platform.syntax.SyntaxElementType,Z):V
- *sf:invalid_left_marker_guard_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.parser.SyntaxTreeBuilder$Marker,java.lang.String):Z
- *sf:isWhitespaceOrComment(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType):Z
- *sf:leftMarkerIs(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType):Z
- *sf:nextTokenIs(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType):Z
- *sf:nextTokenIs(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String):Z
- *sf:nextTokenIs(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:nextTokenIsFast(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType):Z
- *sf:nextTokenIsFast(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementTypeSet):Z
- *sf:nextTokenIsFast(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String):Z
- *sf:nextTokenIsFast(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String,Z):I
- *sf:nextTokenIsFast(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:nextTokenIsSlow(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,java.lang.String,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:nextTokenIsSmart(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType):Z
- *sf:nextTokenIsSmart(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:parseAsTree(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$ErrorState,I,com.intellij.platform.syntax.SyntaxElementType,Z,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Parser,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Parser):Z
- *sf:parseTokens(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:parseTokens(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,Z,I,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:parseTokensSmart(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,com.intellij.platform.syntax.SyntaxElementType[]):Z
- *sf:parseWithProtectedLastPos(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Parser):Z
- *sf:recursion_guard_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,I,java.lang.String):Z
- *sf:register_hook_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$Hook,java.lang.Object):V
- *sf:report_error_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$ErrorState,Z):V
- *sf:report_error_(com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime,Z):Z
*:com.intellij.platform.syntax.util.runtime.SyntaxParserRuntimeFactory
- a:buildParserRuntime(com.intellij.platform.syntax.parser.SyntaxTreeBuilder,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$ParserUserState):com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime
- bs:buildParserRuntime$default(com.intellij.platform.syntax.util.runtime.SyntaxParserRuntimeFactory,com.intellij.platform.syntax.parser.SyntaxTreeBuilder,com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime$ParserUserState,I,java.lang.Object):com.intellij.platform.syntax.util.runtime.SyntaxGeneratedParserRuntime
*f:com.intellij.platform.syntax.util.runtime.SyntaxRuntimeBundle
- sf:INSTANCE:com.intellij.platform.syntax.util.runtime.SyntaxRuntimeBundle
- sf:message(java.lang.String,java.lang.Object[]):java.lang.String
- sf:messagePointer(java.lang.String,java.lang.Object[]):kotlin.jvm.functions.Function0
