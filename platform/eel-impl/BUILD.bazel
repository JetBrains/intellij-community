### auto-generated section `build intellij.platform.eel.impl` start
load("@rules_jvm//:jvm.bzl", "jvm_library", "jvm_resources")

jvm_resources(
  name = "eel-impl_resources",
  files = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "eel-impl",
  module_name = "intellij.platform.eel.impl",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True),
  deps = [
    "@lib//:jetbrains-annotations",
    "@lib//:kotlinx-coroutines-core",
    "@lib//:kotlin-stdlib",
    "//platform/util/base",
    "//platform/extensions",
    "//platform/util",
    "//platform/platform-util-io:ide-util-io",
    "//platform/util/coroutines",
    "//platform/core-api:core",
    "@lib//:jna",
    "@lib//:pty4j",
    "//platform/ide-core",
    "//platform/eel-provider",
    "//platform/core-nio-fs",
  ],
  runtime_deps = [":eel-impl_resources"]
)
### auto-generated section `build intellij.platform.eel.impl` end

### auto-generated section `build intellij.platform.eel.impl.benchmarks` start
load("@rules_java//java:defs.bzl", "java_library")
load("@rules_jvm//:jvm.bzl", "jvm_library", "jvm_test")

jvm_library(
  name = "eel-impl-benchmarks_test_lib",
  visibility = ["//visibility:public"],
  srcs = glob(["benchmarks/**/*.kt", "benchmarks/**/*.java"], allow_empty = True),
  deps = [
    "@lib//:jmh-core",
    "@lib//:jmh-generator-annprocess",
    "//platform/eel-impl",
  ]
)

jvm_test(
  name = "eel-impl-benchmarks_test",
  runtime_deps = [":eel-impl-benchmarks_test_lib"]
)
### auto-generated section `build intellij.platform.eel.impl.benchmarks` end