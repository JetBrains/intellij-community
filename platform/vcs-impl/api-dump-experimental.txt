*:com.intellij.openapi.vcs.changes.ChangeListChangeAssigner
- sf:EP_NAME:com.intellij.openapi.extensions.ProjectExtensionPointName
- a:beforeChangesProcessing(com.intellij.openapi.vcs.changes.VcsDirtyScope):V
- a:getChangeListIdFor(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.ChangeListManagerGate):java.lang.String
- a:markChangesProcessed(com.intellij.openapi.vcs.changes.VcsDirtyScope):V
*:com.intellij.openapi.vcs.changes.ChangesListManagerStateProvider
- *sf:Companion:com.intellij.openapi.vcs.changes.ChangesListManagerStateProvider$Companion
- a:getState():kotlinx.coroutines.flow.StateFlow
*f:com.intellij.openapi.vcs.changes.ChangesListManagerStateProvider$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ChangesListManagerStateProvider
*:com.intellij.openapi.vcs.changes.shelf.ShelveSilentlyTitleProvider
- *sf:Companion:com.intellij.openapi.vcs.changes.shelf.ShelveSilentlyTitleProvider$Companion
- a:getTitle(com.intellij.openapi.project.Project,java.util.Collection,kotlin.coroutines.Continuation):java.lang.Object
- s:suggestTitle(com.intellij.openapi.project.Project,java.util.Collection):java.lang.String
*f:com.intellij.openapi.vcs.changes.shelf.ShelveSilentlyTitleProvider$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
- f:suggestTitle(com.intellij.openapi.project.Project,java.util.Collection):java.lang.String
*f:com.intellij.openapi.vcs.update.VcsUpdateProcess
- sf:INSTANCE:com.intellij.openapi.vcs.update.VcsUpdateProcess
- sf:checkUpdateHasCustomNotification(java.util.Collection):Z
- f:launchUpdate(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.update.ActionInfo,com.intellij.openapi.vcs.update.ScopeInfo,com.intellij.openapi.actionSystem.DataContext,java.lang.String,Z):V
- bs:launchUpdate$default(com.intellij.openapi.vcs.update.VcsUpdateProcess,com.intellij.openapi.project.Project,com.intellij.openapi.vcs.update.ActionInfo,com.intellij.openapi.vcs.update.ScopeInfo,com.intellij.openapi.actionSystem.DataContext,java.lang.String,Z,I,java.lang.Object):V
*:com.intellij.vcs.CacheableAnnotationProvider
- a:getFromCache(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.annotate.FileAnnotation
- a:populateCache(com.intellij.openapi.vfs.VirtualFile):V
*:com.intellij.vcs.commit.AmendCommitAware
- a:getAmendCommitDetails(com.intellij.openapi.vfs.VirtualFile):org.jetbrains.concurrency.CancellablePromise
- a:getLastCommitMessage(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- a:isAmendCommitSupported():Z
*:com.intellij.vcs.commit.CommitProgressUi
- a:addCommitCheckFailure(com.intellij.vcs.commit.CommitCheckFailure):V
- a:clearCommitCheckFailures():V
- a:getCommitCheckFailures():java.util.List
- a:isDumbMode():Z
- a:isEmptyChanges():Z
- a:isEmptyMessage():Z
- a:runWithProgress(Z,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- a:setDumbMode(Z):V
- a:setEmptyChanges(Z):V
- a:setEmptyMessage(Z):V
*:com.intellij.vcs.commit.DelayedCommitMessageProvider
- com.intellij.openapi.vcs.changes.ui.CommitMessageProvider
- a:init(com.intellij.openapi.project.Project,com.intellij.vcs.commit.CommitMessageUi,com.intellij.openapi.Disposable):V
