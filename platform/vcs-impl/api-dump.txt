f:com.intellij.analysis.VcsScopeItem
- com.intellij.analysis.dialog.ModelScopeItem
- <init>(com.intellij.openapi.project.Project):V
- s:createIfHasVCS(com.intellij.openapi.project.Project):com.intellij.analysis.VcsScopeItem
- getChangeListsModel():javax.swing.DefaultComboBoxModel
- getScope():com.intellij.analysis.AnalysisScope
f:com.intellij.codeInsight.CodeSmellInfo
- <init>(com.intellij.openapi.editor.Document,java.lang.String,com.intellij.openapi.util.TextRange,com.intellij.lang.annotation.HighlightSeverity):V
- getDescription():java.lang.String
- getDocument():com.intellij.openapi.editor.Document
- getSeverity():com.intellij.lang.annotation.HighlightSeverity
- getStartColumn():I
- getStartLine():I
- getTextRange():com.intellij.openapi.util.TextRange
c:com.intellij.diff.Block
- <init>(java.lang.String,I,I):V
- <init>(java.lang.String[],I,I):V
- createPreviousBlock(java.lang.String):com.intellij.diff.Block
- createPreviousBlock(java.lang.String[]):com.intellij.diff.Block
- equals(java.lang.Object):Z
- getBlockContent():java.lang.String
- getEnd():I
- getLines():java.util.List
- getStart():I
- hashCode():I
- s:tokenize(java.lang.String):java.lang.String[]
f:com.intellij.diff.DiffVcsDataKeys
- sf:INSTANCE:com.intellij.diff.DiffVcsDataKeys
- sf:REVISION_INFO:com.intellij.openapi.util.Key
a:com.intellij.execution.ExecutableValidator
- sf:TIMEOUT_MS:I
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String):V
- checkExecutableAndNotifyIfNeeded():Z
- checkExecutableAndShowMessageIfNeeded(java.awt.Component):Z
- p:createDefaultNotification():com.intellij.execution.ExecutableValidator$ExecutableNotValidNotification
- ps:doCheckExecutable(java.lang.String,java.util.List,java.util.Map):Z
- pa:getConfigurableDisplayName():java.lang.String
- pa:getCurrentExecutable():java.lang.String
- isExecutableValid():Z
- p:isExecutableValid(java.lang.String):Z
- p:notify(com.intellij.notification.Notification):Z
- p:prepareDescription(java.lang.String,Z):java.lang.String
- p:showSettings():V
- p:showSettingsAndExpireIfFixed(com.intellij.notification.Notification):V
- p:validate(java.lang.String):com.intellij.notification.Notification
c:com.intellij.execution.ExecutableValidator$ExecutableNotValidNotification
- com.intellij.notification.Notification
- <init>(com.intellij.execution.ExecutableValidator):V
- <init>(com.intellij.execution.ExecutableValidator,java.lang.String):V
- <init>(com.intellij.execution.ExecutableValidator,java.lang.String,com.intellij.notification.NotificationType):V
c:com.intellij.execution.ExecutableValidator$SafeModeErrorNotification
- com.intellij.notification.Notification
- <init>(com.intellij.execution.ExecutableValidator):V
f:com.intellij.ide.actions.StartUseVcsDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- getPreferredFocusedComponent():javax.swing.JComponent
- getVcs():com.intellij.openapi.vcs.AbstractVcs
com.intellij.openapi.diff.impl.DiffRevisionMetadataProvider
- sf:Companion:com.intellij.openapi.diff.impl.DiffRevisionMetadataProvider$Companion
- a:canApply(com.intellij.openapi.vcs.changes.ContentRevision):Z
- a:getMetadata(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ContentRevision,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.diff.impl.DiffRevisionMetadataProvider$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
f:com.intellij.openapi.diff.impl.DiffTitleWithDetailsCustomizers
- sf:INSTANCE:com.intellij.openapi.diff.impl.DiffTitleWithDetailsCustomizers
- sf:createDiffTitleDetails(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ContentRevision,java.lang.String,Z):com.intellij.diff.impl.DiffEditorTitleDetails
- sf:getTitleCustomizers(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change,java.lang.String,java.lang.String):java.util.List
- sf:getTitleCustomizers(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ContentRevision,java.lang.String,com.intellij.openapi.vcs.changes.ContentRevision,java.lang.String):java.util.List
- sf:getTitleCustomizers(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ContentRevision,java.lang.String,com.intellij.openapi.vcs.changes.ContentRevision,java.lang.String,com.intellij.openapi.vcs.changes.ContentRevision,java.lang.String):java.util.List
- sf:getTitleCustomizers(java.lang.String,java.lang.String):java.util.List
e:com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- java.lang.Enum
- sf:ABORT:com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- sf:ALREADY_APPLIED:com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- sf:FAILURE:com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- sf:PARTIAL:com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- sf:SKIP:com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- sf:SUCCESS:com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- s:and(com.intellij.openapi.diff.impl.patch.ApplyPatchStatus,com.intellij.openapi.diff.impl.patch.ApplyPatchStatus):com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- s:valueOf(java.lang.String):com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- s:values():com.intellij.openapi.diff.impl.patch.ApplyPatchStatus[]
f:com.intellij.openapi.diff.impl.patch.IdeaTextPatchBuilder
- s:buildPatch(com.intellij.openapi.project.Project,java.util.Collection,java.lang.String,Z):java.util.List
- s:buildPatch(com.intellij.openapi.project.Project,java.util.Collection,java.nio.file.Path,Z):java.util.List
- s:buildPatch(com.intellij.openapi.project.Project,java.util.Collection,java.nio.file.Path,Z,Z):java.util.List
- s:buildPatch(com.intellij.openapi.project.Project,java.util.Collection,java.nio.file.Path,Z,Z,java.lang.Runnable):java.util.List
- s:isBinaryRevision(com.intellij.openapi.vcs.changes.ContentRevision):Z
f:com.intellij.openapi.diff.impl.patch.PatchFileHeaderInfo
- equals(java.lang.Object):Z
- getAuthor():com.intellij.vcs.log.VcsUser
- getBaseRevision():java.lang.String
- getMessage():java.lang.String
- hashCode():I
f:com.intellij.openapi.diff.impl.patch.PatchReader
- sf:NO_NEWLINE_SIGNATURE:java.lang.String
- <init>(java.lang.CharSequence):V
- <init>(java.lang.CharSequence,Z):V
- <init>(java.nio.file.Path):V
- getAdditionalInfo(java.util.Set):com.intellij.openapi.util.ThrowableComputable
- getAllPatches():java.util.List
- getBaseRevision(java.lang.String):java.lang.CharSequence
- getPatchFileInfo():com.intellij.openapi.diff.impl.patch.PatchFileHeaderInfo
- getTextPatches():java.util.List
- s:isPatchContent(java.lang.String):Z
- parseAllPatches():V
- readTextPatches():java.util.List
c:com.intellij.openapi.diff.impl.patch.PatchSyntaxException
- java.lang.Exception
- <init>(I,java.lang.String):V
- <init>(java.lang.String):V
- getLine():I
- getMessage():java.lang.String
f:com.intellij.openapi.diff.impl.patch.TextPatchBuilder
- s:buildPatch(java.util.Collection,java.nio.file.Path,Z):java.util.List
- s:buildPatch(java.util.Collection,java.nio.file.Path,Z,java.lang.Runnable):java.util.List
- s:buildPatchHunks(java.lang.String,java.lang.String):java.util.List
- s:buildPatchHunks(java.lang.String,java.lang.String,I):java.util.List
- s:getRelativePath(java.nio.file.Path,com.intellij.openapi.vcs.FilePath):java.lang.String
f:com.intellij.openapi.diff.impl.patch.UnifiedDiffWriter
- sf:ADDITIONAL_PREFIX:java.lang.String
- sf:ADD_INFO_HEADER:java.lang.String
- sf:ADD_INFO_LINE_START:java.lang.String
- sf:A_PREFIX:java.lang.String
- sf:B_PREFIX:java.lang.String
- sf:DEV_NULL:java.lang.String
- sf:HEADER_END_MARKER:java.lang.String
- sf:NO_NEWLINE_SIGNATURE:java.lang.String
- sf:SUBJECT_HEADER:java.lang.String
- s:write(com.intellij.openapi.project.Project,java.nio.file.Path,java.util.Collection,java.io.Writer,java.lang.String,com.intellij.openapi.vcs.changes.CommitContext,java.util.List):V
- s:write(com.intellij.openapi.project.Project,java.util.Collection,java.io.Writer,java.lang.String,com.intellij.openapi.vcs.changes.CommitContext):V
- s:writeCommitMessageHeader(com.intellij.openapi.project.Project,java.io.Writer,java.lang.String,java.lang.String):V
c:com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier
- <init>(java.lang.CharSequence,java.util.List):V
- s:apply(java.lang.CharSequence,java.util.List):com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$AppliedPatch
- s:applySomehow(java.lang.CharSequence,java.util.List):com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$AppliedSomehowPatch
- execute():Z
- getAfter():java.lang.String
- getAppliedInfo():java.util.List
- getStatus():com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- getTransformations():java.util.TreeMap
- putCutIntoTransformations(com.intellij.openapi.util.TextRange,com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$MyAppliedData):V
- putCutIntoTransformations(com.intellij.openapi.util.TextRange,com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$SplitHunk,com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$MyAppliedData,com.intellij.util.IntPair):V
- trySolveSomehow():V
- weightContextMatch(I,I):I
c:com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$AppliedPatch
- f:patchedText:java.lang.String
- f:status:com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- <init>(java.lang.String,com.intellij.openapi.diff.impl.patch.ApplyPatchStatus):V
c:com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$AppliedSomehowPatch
- com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$AppliedPatch
- f:isAppliedSomehow:Z
- <init>(java.lang.String,com.intellij.openapi.diff.impl.patch.ApplyPatchStatus,Z):V
e:com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$ChangeType
- java.lang.Enum
- sf:REPLACE:com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$ChangeType
- s:valueOf(java.lang.String):com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$ChangeType
- s:values():com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$ChangeType[]
c:com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$LongTryMismatchSolver
- pf:myResult:java.util.ArrayList
- <init>(com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$SplitHunk):V
- getStartLineVariationsIterator():java.util.Iterator
- isAllowMismatch():Z
c:com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$MyAppliedData
- <init>(java.util.List,Z,Z,Z,com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$ChangeType):V
- cutToSize(I):V
- getList():java.util.List
- isChangedCoincide():Z
- isHaveAlreadyApplied():Z
- isPlaceCoincide():Z
c:com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$SplitHunk
- <init>(I,I,java.util.List,java.util.List,java.util.List):V
- cutSameTail():V
- getAfterAll():java.util.List
- getContextAfter():java.util.List
- getContextBefore():java.util.List
- getPatchSteps():java.util.List
- getStartLineAfter():I
- getStartLineBefore():I
- isInsertion():Z
- s:read(com.intellij.openapi.diff.impl.patch.PatchHunk):java.util.List
f:com.intellij.openapi.diff.impl.patch.formove.PatchApplier
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.util.List,com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.vcs.changes.CommitContext):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.util.List,com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.vcs.changes.CommitContext,Z,java.lang.String,java.lang.String,java.lang.String,com.intellij.history.ActivityId):V
- execute():V
- execute(Z,Z):com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- s:executePatchGroup(java.util.Collection,com.intellij.openapi.vcs.changes.LocalChangeList):com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- s:executePatchGroup(java.util.Collection,com.intellij.openapi.vcs.changes.LocalChangeList,java.lang.String,com.intellij.history.ActivityId):com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- getFailedPatches():java.util.Collection
- getRemainingPatches():java.util.List
- setIgnoreContentRootsCheck():V
- s:showError(com.intellij.openapi.project.Project,java.lang.String):V
a:com.intellij.openapi.vcs.CodeSmellDetector
- <init>():V
- a:findCodeSmells(java.util.List):java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.CodeSmellDetector
- a:showCodeSmellErrors(java.util.List):V
f:com.intellij.openapi.vcs.FilePathImpl
- com.intellij.openapi.vcs.FilePath
- <init>(java.lang.String,Z):V
- equals(java.lang.Object):Z
- getCharset():java.nio.charset.Charset
- getCharset(com.intellij.openapi.project.Project):java.nio.charset.Charset
- getFileType():com.intellij.openapi.fileTypes.FileType
- getIOFile():java.io.File
- getName():java.lang.String
- getParentPath():com.intellij.openapi.vcs.FilePath
- getPath():java.lang.String
- getPresentableUrl():java.lang.String
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- getVirtualFileParent():com.intellij.openapi.vfs.VirtualFile
- hashCode():I
- isDirectory():Z
- isNonLocal():Z
- isUnder(com.intellij.openapi.vcs.FilePath,Z):Z
c:com.intellij.openapi.vcs.RemoteFilePath
- com.intellij.openapi.vcs.FilePath
- <init>(java.lang.String,Z):V
- equals(java.lang.Object):Z
- getCharset():java.nio.charset.Charset
- getCharset(com.intellij.openapi.project.Project):java.nio.charset.Charset
- getFileType():com.intellij.openapi.fileTypes.FileType
- getIOFile():java.io.File
- getName():java.lang.String
- getParentPath():com.intellij.openapi.vcs.FilePath
- getPath():java.lang.String
- getPresentableUrl():java.lang.String
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- getVirtualFileParent():com.intellij.openapi.vfs.VirtualFile
- hashCode():I
- isDirectory():Z
- isNonLocal():Z
- isUnder(com.intellij.openapi.vcs.FilePath,Z):Z
c:com.intellij.openapi.vcs.VcsNotifier
- sf:IMPORTANT_ERROR_NOTIFICATION:com.intellij.notification.NotificationGroup
- sf:NOTIFICATION_GROUP_ID:com.intellij.notification.NotificationGroup
- sf:SILENT_NOTIFICATION:com.intellij.notification.NotificationGroup
- sf:STANDARD_NOTIFICATION:com.intellij.notification.NotificationGroup
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project):V
- s:addShowDetailsAction(com.intellij.openapi.project.Project,com.intellij.notification.Notification):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.VcsNotifier
- hideAllNotificationsById(java.lang.String):V
- s:importantNotification():com.intellij.notification.NotificationGroup
- logInfo(java.lang.String,java.lang.String,java.lang.String):com.intellij.notification.Notification
- notify(com.intellij.notification.Notification):com.intellij.notification.Notification
- notifyError(java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyError(java.lang.String,java.lang.String,com.intellij.notification.NotificationListener):com.intellij.notification.Notification
- notifyError(java.lang.String,java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyError(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationListener):com.intellij.notification.Notification
- notifyError(java.lang.String,java.lang.String,java.lang.String,java.util.Collection):com.intellij.notification.Notification
- notifyError(java.lang.String,java.lang.String,java.lang.String,Z):com.intellij.notification.Notification
- notifyError(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationAction[]):com.intellij.notification.Notification
- notifyImportantInfo(java.lang.String,java.lang.String,com.intellij.notification.NotificationListener):com.intellij.notification.Notification
- notifyImportantInfo(java.lang.String,java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyImportantInfo(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationListener):com.intellij.notification.Notification
- notifyImportantWarning(java.lang.String,java.lang.String,com.intellij.notification.NotificationListener):com.intellij.notification.Notification
- notifyImportantWarning(java.lang.String,java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyImportantWarning(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationListener):com.intellij.notification.Notification
- notifyImportantWarning(java.lang.String,java.lang.String,java.lang.String,java.util.Collection):com.intellij.notification.Notification
- notifyInfo(java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyInfo(java.lang.String,java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyInfo(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationListener):com.intellij.notification.Notification
- notifyMinorInfo(java.lang.String,java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyMinorInfo(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationAction[]):com.intellij.notification.Notification
- notifyMinorInfo(java.lang.String,Z,java.lang.String,java.lang.String,com.intellij.notification.NotificationAction[]):com.intellij.notification.Notification
- notifyMinorWarning(java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyMinorWarning(java.lang.String,java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyMinorWarning(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationListener):com.intellij.notification.Notification
- notifyMinorWarning(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationAction[]):com.intellij.notification.Notification
- notifySuccess(java.lang.String):com.intellij.notification.Notification
- notifySuccess(java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifySuccess(java.lang.String,java.lang.String,com.intellij.notification.NotificationListener):com.intellij.notification.Notification
- notifySuccess(java.lang.String,java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifySuccess(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationListener):com.intellij.notification.Notification
- notifyWarning(java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyWarning(java.lang.String,java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyWarning(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationAction[]):com.intellij.notification.Notification
- notifyWeakError(java.lang.String,java.lang.String):com.intellij.notification.Notification
- notifyWeakError(java.lang.String,java.lang.String,java.lang.String):com.intellij.notification.Notification
- showNotificationAndHideExisting(com.intellij.notification.Notification):V
- s:silentNotification():com.intellij.notification.NotificationGroup
- s:standardNotification():com.intellij.notification.NotificationGroup
- s:toolWindowNotification():com.intellij.notification.NotificationGroup
a:com.intellij.openapi.vcs.VcsVFSListener
- com.intellij.openapi.Disposable
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- pf:coroutineScope:kotlinx.coroutines.CoroutineScope
- pf:myAddOption:com.intellij.openapi.vcs.VcsShowConfirmationOption
- pf:myChangeListManager:com.intellij.openapi.vcs.changes.ChangeListManager
- pf:myProcessor:com.intellij.openapi.vcs.VcsVFSListener$StateProcessor
- pf:myProject:com.intellij.openapi.project.Project
- pf:myRemoveOption:com.intellij.openapi.vcs.VcsShowConfirmationOption
- pf:myVcs:com.intellij.openapi.vcs.AbstractVcs
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.AbstractVcs):V
- p:<init>(com.intellij.openapi.vcs.AbstractVcs,kotlinx.coroutines.CoroutineScope):V
- p:beforeContentsChange(java.util.List):V
- dispose():V
- p:executeAdd():V
- p:executeAdd(java.util.List,java.util.Map):V
- p:executeDelete():V
- p:filterOutByStatus(com.intellij.openapi.vcs.FileStatus):Z
- pa:getAddTitle():java.lang.String
- pa:getDeleteTitle():java.lang.String
- pa:getSingleFileAddPromptTemplate():java.lang.String
- pa:getSingleFileAddTitle():java.lang.String
- pa:getSingleFileDeletePromptTemplate():java.lang.String
- pa:getSingleFileDeleteTitle():java.lang.String
- p:installListeners():V
- p:isEventAccepted(com.intellij.openapi.vfs.newvfs.events.VFileEvent):Z
- p:isEventIgnored(com.intellij.openapi.vfs.newvfs.events.VFileEvent):Z
- p:isFileCopyingFromTrackingSupported():Z
- p:isRecursiveDeleteSupported():Z
- p:isUnderMyVcs(com.intellij.openapi.vcs.FilePath):Z
- p:isUnderMyVcs(com.intellij.openapi.vfs.VirtualFile):Z
- pa:performAdding(java.util.Collection,java.util.Map):V
- p:performAddingWithConfirmation(java.util.List,java.util.Map):V
- pa:performDeletion(java.util.List):V
- pa:performMoveRename(java.util.List):V
- p:processBeforeContentsChange():Z
- p:processMovedFile(com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.String):V
- p:saveUnsavedVcsIgnoreFiles():V
- p:selectFilePathsToAdd(java.util.List):java.util.List
- p:selectFilePathsToDelete(java.util.List):java.util.List
- p:selectFilesToAdd(java.util.List):java.util.List
- p:shouldIgnoreDeletion(com.intellij.openapi.vcs.FileStatus):Z
- pf:waitForEventsProcessedInTestMode():V
pf:com.intellij.openapi.vcs.VcsVFSListener$MovedFileInfo
- myNewPath:java.lang.String
- f:myOldPath:java.lang.String
- getNewPath():com.intellij.openapi.vcs.FilePath
- getOldPath():com.intellij.openapi.vcs.FilePath
- isCaseSensitive():Z
pf:com.intellij.openapi.vcs.VcsVFSListener$StateProcessor
- acquireAddedFiles():java.util.List
- acquireCopiedFiles():java.util.Map
- acquireDeletedFiles():java.util.List
- acquireMovedFiles():java.util.List
c:com.intellij.openapi.vcs.ZipAndQueue
- <init>(com.intellij.openapi.project.Project,I,java.lang.String,com.intellij.openapi.Disposable,java.lang.Runnable):V
- request():V
a:com.intellij.openapi.vcs.actions.AbstractShowDiffAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:getExecutor(com.intellij.openapi.vcs.diff.DiffProvider,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):com.intellij.openapi.vcs.actions.DiffActionExecutor
- ps:isEnabled(com.intellij.openapi.actionSystem.DataContext,Z):Z
- ps:isVisible(com.intellij.openapi.actionSystem.DataContext):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- ps:updateDiffAction(com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.openapi.vcs.actions.AnnotateActionGroup
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.vcs.annotate.FileAnnotation,java.util.List,com.intellij.openapi.util.Couple):V
- <init>(java.util.List,com.intellij.openapi.util.Couple):V
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
f:com.intellij.openapi.vcs.actions.AnnotateToggleAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- s:doAnnotate(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,com.intellij.openapi.vcs.annotate.FileAnnotation,com.intellij.openapi.vcs.AbstractVcs):V
- s:doAnnotate(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,com.intellij.openapi.vcs.annotate.FileAnnotation,com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.localVcs.UpToDateLineNumberProvider):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.openapi.vcs.actions.AnnotateToggleAction$Provider
- getActionName(com.intellij.openapi.actionSystem.AnActionEvent):java.lang.String
- a:isAnnotated(com.intellij.openapi.actionSystem.AnActionEvent):Z
- a:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent):Z
- a:isSuspended(com.intellij.openapi.actionSystem.AnActionEvent):Z
- a:perform(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
a:com.intellij.openapi.vcs.actions.AnnotationFieldGutter
- com.intellij.openapi.vcs.actions.ActiveAnnotationGutter
- pf:myAnnotation:com.intellij.openapi.vcs.annotate.FileAnnotation
- doAction(I):V
- getBgColor(I,com.intellij.openapi.editor.Editor):java.awt.Color
- getColor(I,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.colors.ColorKey
- getCursor(I):java.awt.Cursor
- getDisplayName():java.lang.String
- getFileAnnotation():com.intellij.openapi.vcs.annotate.FileAnnotation
- getID():java.lang.String
- getLeftMargin():I
- getPopupActions(I,com.intellij.openapi.editor.Editor):java.util.List
- getStyle(I,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.colors.EditorFontType
- getToolTip(I,com.intellij.openapi.editor.Editor):java.lang.String
- gutterClosed():V
- isAvailable():Z
- isGutterAction():Z
- isShowByDefault():Z
c:com.intellij.openapi.vcs.actions.AnnotationsSettings
- <init>():V
- getAuthorsColors(com.intellij.openapi.editor.colors.EditorColorsScheme):java.util.List
- s:getInstance():com.intellij.openapi.vcs.actions.AnnotationsSettings
- getOrderedColors(com.intellij.openapi.editor.colors.EditorColorsScheme):java.util.List
c:com.intellij.openapi.vcs.actions.CachedVcsContext
- com.intellij.openapi.vcs.actions.VcsContext
- <init>(com.intellij.openapi.vcs.actions.VcsContext):V
- getActionName():java.lang.String
- getEditor():com.intellij.openapi.editor.Editor
- getModifiers():I
- getPlace():java.lang.String
- getProject():com.intellij.openapi.project.Project
- getSelectedChangeLists():com.intellij.openapi.vcs.changes.ChangeList[]
- getSelectedChanges():com.intellij.openapi.vcs.changes.Change[]
- getSelectedFile():com.intellij.openapi.vfs.VirtualFile
- getSelectedFilePath():com.intellij.openapi.vcs.FilePath
- getSelectedFilePaths():com.intellij.openapi.vcs.FilePath[]
- getSelectedFiles():com.intellij.openapi.vfs.VirtualFile[]
- getSelectedFilesCollection():java.util.Collection
- getSelectedIOFile():java.io.File
- getSelectedIOFiles():java.io.File[]
- getSelectedUnversionedFilePaths():java.util.List
c:com.intellij.openapi.vcs.actions.CommonCheckinFilesAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- p:approximatelyHasRoots(com.intellij.openapi.vcs.actions.VcsContext):Z
- p:getActionName(com.intellij.openapi.vcs.actions.VcsContext):java.lang.String
- p:getInitiallySelectedChangeList(com.intellij.openapi.vcs.actions.VcsContext,com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.LocalChangeList
- p:getRoots(com.intellij.openapi.vcs.actions.VcsContext):com.intellij.openapi.vcs.FilePath[]
- p:isApplicableRoot(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.actions.VcsContext):Z
- p:isForceUpdateCommitStateFromContext():Z
c:com.intellij.openapi.vcs.actions.CommonCheckinProjectAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- p:approximatelyHasRoots(com.intellij.openapi.vcs.actions.VcsContext):Z
- p:getRoots(com.intellij.openapi.vcs.actions.VcsContext):com.intellij.openapi.vcs.FilePath[]
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.actions.DescindingFilesFilter
- s:filterDescindingFiles(com.intellij.openapi.vcs.FilePath[],com.intellij.openapi.project.Project):com.intellij.openapi.vcs.FilePath[]
a:com.intellij.openapi.vcs.actions.DiffActionExecutor
- pf:myDiffProvider:com.intellij.openapi.vcs.diff.DiffProvider
- pf:myProject:com.intellij.openapi.project.Project
- pf:mySelectedFile:com.intellij.openapi.vfs.VirtualFile
- p:<init>(com.intellij.openapi.vcs.diff.DiffProvider,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- p:createRemote(com.intellij.openapi.vcs.changes.ContentRevision):com.intellij.diff.contents.DiffContent
- pa:getContentRevision():com.intellij.openapi.vcs.changes.ContentRevision
- showDiff():V
- s:showDiff(com.intellij.openapi.vcs.diff.DiffProvider,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):V
c:com.intellij.openapi.vcs.actions.DiffActionExecutor$CompareToCurrentExecutor
- com.intellij.openapi.vcs.actions.DiffActionExecutor
- <init>(com.intellij.openapi.vcs.diff.DiffProvider,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- p:getContentRevision():com.intellij.openapi.vcs.changes.ContentRevision
c:com.intellij.openapi.vcs.actions.DiffActionExecutor$CompareToFixedExecutor
- com.intellij.openapi.vcs.actions.DiffActionExecutor
- <init>(com.intellij.openapi.vcs.diff.DiffProvider,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- p:getContentRevision():com.intellij.openapi.vcs.changes.ContentRevision
c:com.intellij.openapi.vcs.actions.DiffActionExecutor$DeletionAwareExecutor
- com.intellij.openapi.vcs.actions.DiffActionExecutor
- <init>(com.intellij.openapi.vcs.diff.DiffProvider,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- p:createRemote(com.intellij.openapi.vcs.changes.ContentRevision):com.intellij.diff.contents.DiffContent
- p:getContentRevision():com.intellij.openapi.vcs.changes.ContentRevision
e:com.intellij.openapi.vcs.actions.ShortNameType
- java.lang.Enum
- sf:Companion:com.intellij.openapi.vcs.actions.ShortNameType$Companion
- sf:EMAIL:com.intellij.openapi.vcs.actions.ShortNameType
- sf:FIRSTNAME:com.intellij.openapi.vcs.actions.ShortNameType
- sf:INITIALS:com.intellij.openapi.vcs.actions.ShortNameType
- sf:LASTNAME:com.intellij.openapi.vcs.actions.ShortNameType
- sf:NONE:com.intellij.openapi.vcs.actions.ShortNameType
- f:getDescription():java.lang.String
- s:getEntries():kotlin.enums.EnumEntries
- f:isSet():Z
- f:set():V
- sf:shorten(java.lang.String,com.intellij.openapi.vcs.actions.ShortNameType):java.lang.String
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.actions.ShortNameType
- s:values():com.intellij.openapi.vcs.actions.ShortNameType[]
f:com.intellij.openapi.vcs.actions.ShortNameType$Companion
- f:shorten(java.lang.String,com.intellij.openapi.vcs.actions.ShortNameType):java.lang.String
f:com.intellij.openapi.vcs.actions.ShowAnnotateOperationsPopup
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getAnnotationLineNumber(com.intellij.openapi.actionSystem.DataContext):I
- s:getAnnotationLineNumber(com.intellij.openapi.actionSystem.DataContext,Z):I
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.actions.ShowCommitOptionsAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.actions.ShowDiffFromAnnotation
- com.intellij.openapi.project.DumbAwareAction
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.actions.ShowShortenNames
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.project.DumbAware
- <init>():V
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- s:getType():com.intellij.openapi.vcs.actions.ShortNameType
c:com.intellij.openapi.vcs.actions.TabbedShowHistoryAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.openapi.actionSystem.DataContext):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.actions.VcsAnnotateUtil
- <init>():V
- s:getBackgroundableLock(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.impl.BackgroundableActionLock
- s:getEditorFor(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.editor.Editor
- s:getEditors(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.List
- s:isEditorForFile(com.intellij.openapi.editor.Editor,com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.openapi.vcs.actions.VcsContextUtil
- <init>():V
- s:selectedFile(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.vfs.VirtualFile
- s:selectedFilePaths(com.intellij.openapi.actionSystem.DataContext):java.util.List
- s:selectedFilePathsIterable(com.intellij.openapi.actionSystem.DataContext):com.intellij.util.containers.JBIterable
- s:selectedFiles(com.intellij.openapi.actionSystem.DataContext):java.util.List
- s:selectedFilesIterable(com.intellij.openapi.actionSystem.DataContext):com.intellij.util.containers.JBIterable
c:com.intellij.openapi.vcs.actions.VcsContextWrapper
- com.intellij.openapi.vcs.actions.VcsContext
- pf:myContext:com.intellij.openapi.actionSystem.DataContext
- pf:myModifiers:I
- <init>(com.intellij.openapi.actionSystem.DataContext,I,java.lang.String,java.lang.String):V
- s:createCachedInstanceOn(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.vcs.actions.VcsContext
- s:createInstanceOn(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.vcs.actions.VcsContextWrapper
- getActionName():java.lang.String
- getEditor():com.intellij.openapi.editor.Editor
- getModifiers():I
- getPlace():java.lang.String
- getProject():com.intellij.openapi.project.Project
- getSelectedChangeLists():com.intellij.openapi.vcs.changes.ChangeList[]
- getSelectedChanges():com.intellij.openapi.vcs.changes.Change[]
- getSelectedFile():com.intellij.openapi.vfs.VirtualFile
- getSelectedFilePath():com.intellij.openapi.vcs.FilePath
- getSelectedFilePaths():com.intellij.openapi.vcs.FilePath[]
- getSelectedFilePathsStream():java.util.stream.Stream
- getSelectedFiles():com.intellij.openapi.vfs.VirtualFile[]
- getSelectedFilesCollection():java.util.Collection
- getSelectedFilesStream():java.util.stream.Stream
- getSelectedIOFile():java.io.File
- getSelectedIOFiles():java.io.File[]
- getSelectedUnversionedFilePaths():java.util.List
c:com.intellij.openapi.vcs.actions.VcsQuickActionsToolbarPopup
- com.intellij.openapi.roots.ui.configuration.actions.IconWithTextAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- com.intellij.openapi.project.DumbAware
- sf:Companion:com.intellij.openapi.vcs.actions.VcsQuickActionsToolbarPopup$Companion
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getName(com.intellij.openapi.project.Project):java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- pf:updateVcs(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
f:com.intellij.openapi.vcs.actions.VcsQuickActionsToolbarPopup$Companion
f:com.intellij.openapi.vcs.actions.VcsQuickActionsToolbarPopup$MyActionButtonWithText
- com.intellij.openapi.actionSystem.impl.ActionButtonWithText
- <init>(com.intellij.openapi.vcs.actions.VcsQuickActionsToolbarPopup,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Presentation,java.lang.String):V
- getInactiveTextColor():java.awt.Color
- getInsets():java.awt.Insets
- f:getShortcut():java.lang.String
a:com.intellij.openapi.vcs.actions.commit.AbstractCommitChangesAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:getExecutor(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.CommitExecutor
- p:isActionEnabled(com.intellij.openapi.vcs.changes.ChangeListManager,com.intellij.openapi.vcs.changes.Change):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.actions.commit.CommonCheckinProjectAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.vcs.annotate.AnnotationTooltipBuilder
- <init>(com.intellij.openapi.project.Project,Z):V
- appendCommitMessageBlock(java.lang.String):V
- appendLine(java.lang.String):V
- appendRevisionLine(com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.util.containers.Convertor):V
- appendTextWithLinks(java.lang.String):V
- s:buildSimpleTooltip(com.intellij.openapi.project.Project,Z,java.lang.String,java.lang.String,java.lang.String):java.lang.String
f:com.intellij.openapi.vcs.annotate.DefaultLineModificationDetailsProvider
- com.intellij.openapi.vcs.annotate.FileAnnotation$LineModificationDetailsProvider
- s:create(com.intellij.openapi.vcs.annotate.FileAnnotation):com.intellij.openapi.vcs.annotate.FileAnnotation$LineModificationDetailsProvider
- s:createDetailsFor(java.lang.String,java.lang.String,I):com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails
- s:createDetailsFor(java.lang.String,java.lang.String,java.lang.String):com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails
- s:createModifiedLineDetails(java.lang.String):com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails
- s:createNewLineDetails(java.lang.String):com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails
- getDetails(I):com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails
- s:loadRevision(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.FilePath):java.lang.String
f:com.intellij.openapi.vcs.annotate.VcsRareLineAnnotationData
- com.intellij.openapi.vcs.annotate.VcsLineAnnotationData
- <init>(I):V
- getNumLines():I
- getRevision(I):com.intellij.openapi.vcs.history.VcsRevisionNumber
- isEmpty():Z
- put(I,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
c:com.intellij.openapi.vcs.changes.BaseRevision
- <init>(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.FilePath):V
- getFilePath():com.intellij.openapi.vcs.FilePath
- getPath():java.lang.String
- getRevision():com.intellij.openapi.vcs.history.VcsRevisionNumber
- getVcs():com.intellij.openapi.vcs.AbstractVcs
f:com.intellij.openapi.vcs.changes.ChangeListData
- sf:Companion:com.intellij.openapi.vcs.changes.ChangeListData$Companion
- <init>():V
- <init>(com.intellij.vcs.log.VcsUser):V
- <init>(com.intellij.vcs.log.VcsUser,java.util.Date):V
- <init>(com.intellij.vcs.log.VcsUser,java.util.Date,Z):V
- b:<init>(com.intellij.vcs.log.VcsUser,java.util.Date,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():com.intellij.vcs.log.VcsUser
- f:component2():java.util.Date
- f:component3():Z
- f:copy(com.intellij.vcs.log.VcsUser,java.util.Date,Z):com.intellij.openapi.vcs.changes.ChangeListData
- bs:copy$default(com.intellij.openapi.vcs.changes.ChangeListData,com.intellij.vcs.log.VcsUser,java.util.Date,Z,I,java.lang.Object):com.intellij.openapi.vcs.changes.ChangeListData
- equals(java.lang.Object):Z
- f:getAuthor():com.intellij.vcs.log.VcsUser
- f:getAutomatic():Z
- f:getDate():java.util.Date
- f:getPresentation():java.lang.String
- hashCode():I
- f:nullize():com.intellij.openapi.vcs.changes.ChangeListData
- sf:readExternal(org.jdom.Element):com.intellij.openapi.vcs.changes.ChangeListData
- sf:writeExternal(com.intellij.openapi.vcs.changes.ChangeListData):org.jdom.Element
f:com.intellij.openapi.vcs.changes.ChangeListData$Companion
- f:of(com.intellij.vcs.log.VcsUser,java.util.Date):com.intellij.openapi.vcs.changes.ChangeListData
- f:readExternal(org.jdom.Element):com.intellij.openapi.vcs.changes.ChangeListData
- f:writeExternal(com.intellij.openapi.vcs.changes.ChangeListData):org.jdom.Element
f:com.intellij.openapi.vcs.changes.ChangeListDataKt
- sf:getAuthor(com.intellij.openapi.vcs.changes.LocalChangeList):com.intellij.vcs.log.VcsUser
- sf:getAuthorDate(com.intellij.openapi.vcs.changes.LocalChangeList):java.util.Date
a:com.intellij.openapi.vcs.changes.ChangeListManagerEx
- com.intellij.openapi.vcs.changes.ChangeListManager
- <init>():V
- a:addChangeList(java.lang.String,java.lang.String,com.intellij.openapi.vcs.changes.ChangeListData):com.intellij.openapi.vcs.changes.LocalChangeList
- a:addUnversionedFiles(com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List):V
- a:blockModalNotifications():V
- a:editChangeListData(java.lang.String,com.intellij.openapi.vcs.changes.ChangeListData):Z
- a:freeze(java.lang.String):V
- a:getAffectedLists(java.util.Collection):java.util.Collection
- s:getInstanceEx(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ChangeListManagerEx
- a:isInUpdate():Z
- a:promiseWaitForUpdate():org.jetbrains.concurrency.Promise
- a:setDefaultChangeList(com.intellij.openapi.vcs.changes.LocalChangeList,Z):V
- a:unblockModalNotifications():V
- a:unfreeze():V
- a:waitForUpdate():V
f:com.intellij.openapi.vcs.changes.ChangeListManagerImpl
- com.intellij.openapi.vcs.changes.ChangeListManagerEx
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- sf:LISTS_LOADED:com.intellij.util.messages.Topic
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- addChangeList(java.lang.String,java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- addChangeList(java.lang.String,java.lang.String,com.intellij.openapi.vcs.changes.ChangeListData):com.intellij.openapi.vcs.changes.LocalChangeList
- addChangeListListener(com.intellij.openapi.vcs.changes.ChangeListListener):V
- addChangeListListener(com.intellij.openapi.vcs.changes.ChangeListListener,com.intellij.openapi.Disposable):V
- addDirectoryToIgnoreImplicitly(java.lang.String):V
- addUnversionedFiles(com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List):V
- areChangeListsEnabled():Z
- blockModalNotifications():V
- commitChanges(com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List):V
- commitChangesSynchronouslyWithResult(com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List):V
- dispose():V
- editChangeListData(java.lang.String,com.intellij.openapi.vcs.changes.ChangeListData):Z
- editComment(java.lang.String,java.lang.String):java.lang.String
- editName(java.lang.String,java.lang.String):Z
- ensureUpToDate():V
- executeOnUpdaterThread(java.lang.Runnable):V
- executeUnderDataLock(java.lang.Runnable):V
- findChangeList(java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- forceGoInTestMode():V
- forceStopInTestMode():V
- freeze(java.lang.String):V
- getAdditionalUpdateInfo():java.util.List
- getAffectedFiles():java.util.List
- getAffectedLists(java.util.Collection):java.util.List
- getAffectedPaths():java.util.List
- getAllChanges():java.util.Collection
- getChange(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.changes.Change
- getChange(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.changes.Change
- getChangeList(com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.vcs.changes.LocalChangeList
- getChangeList(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.changes.LocalChangeList
- getChangeList(java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- getChangeListNameIfOnlyOne(com.intellij.openapi.vcs.changes.Change[]):java.lang.String
- getChangeLists():java.util.List
- getChangeLists(com.intellij.openapi.vcs.changes.Change):java.util.List
- getChangeLists(com.intellij.openapi.vfs.VirtualFile):java.util.List
- getChangeListsNumber():I
- getChangesIn(com.intellij.openapi.vcs.FilePath):java.util.Collection
- getChangesIn(com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- getDefaultChangeList():com.intellij.openapi.vcs.changes.LocalChangeList
- getDefaultListName():java.lang.String
- getDeletedFiles():java.util.List
- getFilesToIgnore():com.intellij.openapi.vcs.changes.IgnoredFileBean[]
- getIgnoredFilePaths():java.util.List
- s:getInstanceImpl(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ChangeListManagerImpl
- getLockedFolders():java.util.List
- getLogicallyLockedFolders():java.util.Map
- getModifiedWithoutEditing():java.util.List
- getRegisteredExecutors():java.util.List
- getState():org.jdom.Element
- getStatus(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.FileStatus
- getStatus(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.FileStatus
- getSwitchedBranch(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getSwitchedFilesMap():com.intellij.util.containers.MultiMap
- getSwitchedRoots():java.util.Map
- getUnversionedFiles():java.util.List
- getUnversionedFilesPaths():java.util.List
- getUpdateException():com.intellij.openapi.vcs.VcsException
- haveChangesUnder(com.intellij.openapi.vfs.VirtualFile):com.intellij.util.ThreeState
- invokeAfterUpdate(java.lang.Runnable,com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode,java.lang.String,com.intellij.openapi.application.ModalityState):V
- isContainedInLocallyDeleted(com.intellij.openapi.vcs.FilePath):Z
- isFileAffected(com.intellij.openapi.vfs.VirtualFile):Z
- isFreezed():java.lang.String
- isFreezedWithNotification(java.lang.String):Z
- isIgnoredFile(com.intellij.openapi.vcs.FilePath):Z
- isIgnoredFile(com.intellij.openapi.vfs.VirtualFile):Z
- isIgnoredInUpdateMode():Z
- isInUpdate():Z
- isLogicallyLocked(com.intellij.openapi.vfs.VirtualFile):Z
- s:isUnder(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.VcsDirtyScope):Z
- isUnversioned(com.intellij.openapi.vfs.VirtualFile):Z
- isUnversionedInUpdateMode():Z
- loadState(org.jdom.Element):V
- moveChangesTo(com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List):V
- moveChangesTo(com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.vcs.changes.Change[]):V
- notifyUnchangedFileStatusChanged():V
- promiseWaitForUpdate():org.jetbrains.concurrency.Promise
- registerCommitExecutor(com.intellij.openapi.vcs.changes.CommitExecutor):V
- removeChangeList(com.intellij.openapi.vcs.changes.LocalChangeList):V
- removeChangeList(java.lang.String):V
- removeChangeListListener(com.intellij.openapi.vcs.changes.ChangeListListener):V
- reopenFiles(java.util.List):V
- replaceCommitMessage(java.lang.String,java.lang.String):V
- scheduleAutomaticEmptyChangeListDeletion(com.intellij.openapi.vcs.changes.LocalChangeList):V
- scheduleAutomaticEmptyChangeListDeletion(com.intellij.openapi.vcs.changes.LocalChangeList,Z):V
- setDefaultChangeList(com.intellij.openapi.vcs.changes.LocalChangeList):V
- setDefaultChangeList(com.intellij.openapi.vcs.changes.LocalChangeList,Z):V
- setDefaultChangeList(java.lang.String):V
- setDefaultChangeList(java.lang.String,Z):V
- setFilesToIgnore(com.intellij.openapi.vcs.changes.IgnoredFileBean[]):V
- setReadOnly(java.lang.String,Z):Z
- showLocalChangesInvalidated():V
- stopEveryThingIfInTestMode():V
- unblockModalNotifications():V
- unfreeze():V
- waitEverythingDoneAndStopInTestMode():V
- waitEverythingDoneInTestMode():V
- waitForUpdate():V
- waitUntilRefreshed():V
f:com.intellij.openapi.vcs.changes.ChangeListManagerImpl$DefaultIgnoredFileProvider
- com.intellij.openapi.vcs.changes.IgnoredFileProvider
- <init>():V
- getIgnoredFiles(com.intellij.openapi.project.Project):java.util.Set
- getIgnoredGroupDescription():java.lang.String
- isIgnoredFile(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):Z
f:com.intellij.openapi.vcs.changes.ChangeListUtil
- sf:createNameForChangeList(com.intellij.openapi.project.Project,java.lang.String):java.lang.String
- sf:createSystemShelvedChangeListName(java.lang.String,java.lang.String):java.lang.String
- sf:getChangeListNameForUnshelve(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList):java.lang.String
- sf:getPredefinedChangeList(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList,com.intellij.openapi.vcs.changes.ChangeListManager):com.intellij.openapi.vcs.changes.LocalChangeList
- sf:onChangeListAvailabilityChanged(com.intellij.util.messages.MessageBusConnection,java.lang.Runnable):V
a:com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor
- com.intellij.diff.impl.CacheDiffRequestProcessor$Simple
- com.intellij.platform.vcs.impl.shared.changes.DiffPreviewUpdateProcessor
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- clear():V
- collectDiffProducers(Z):com.intellij.openapi.ListSelection
- p:createGoToChangeAction():com.intellij.openapi.actionSystem.AnAction
- forceKeepCurrentFileWhileFocused():Z
- getAllChanges():java.util.stream.Stream
- getCurrentChange():com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$Wrapper
- getCurrentChangeName():java.lang.String
- p:getCurrentRequestProvider():com.intellij.diff.chains.DiffRequestProducer
- getProject():com.intellij.openapi.project.Project
- getSelectedChanges():java.util.stream.Stream
- p:goToNextChange(Z):V
- p:goToPrevChange(Z):V
- p:hasNextChange(Z):Z
- p:hasPrevChange(Z):Z
- p:isNavigationEnabled():Z
- isWindowFocused():Z
- iterateAllChanges():java.lang.Iterable
- iterateSelectedChanges():java.lang.Iterable
- p:loadRequestFast(com.intellij.diff.chains.DiffRequestProducer):com.intellij.diff.requests.DiffRequest
- refresh(Z):V
- pa:selectChange(com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$Wrapper):V
- setCurrentChange(com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$Wrapper):V
- p:showAllChangesForEmptySelection():Z
- s:toListIfNotMany(java.lang.Iterable,Z):java.util.List
- updatePreview(Z,Z):V
c:com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$ChangeWrapper
- com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$Wrapper
- pf:change:com.intellij.openapi.vcs.changes.Change
- pf:nodeTag:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- <init>(com.intellij.openapi.vcs.changes.Change):V
- <init>(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag):V
- createProducer(com.intellij.openapi.project.Project):com.intellij.diff.chains.DiffRequestProducer
- equals(java.lang.Object):Z
- getFilePath():com.intellij.openapi.vcs.FilePath
- getFileStatus():com.intellij.openapi.vcs.FileStatus
- getPresentableName():java.lang.String
- getTag():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- getUserObject():java.lang.Object
- hashCode():I
pc:com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$UnversionedFileWrapper
- com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$Wrapper
- pf:path:com.intellij.openapi.vcs.FilePath
- <init>(com.intellij.openapi.vcs.FilePath):V
- createProducer(com.intellij.openapi.project.Project):com.intellij.diff.chains.DiffRequestProducer
- getFilePath():com.intellij.openapi.vcs.FilePath
- getFileStatus():com.intellij.openapi.vcs.FileStatus
- getPresentableName():java.lang.String
- getTag():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- getUserObject():java.lang.Object
a:com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$Wrapper
- com.intellij.openapi.vcs.changes.ui.PresentableChange
- <init>():V
- a:createProducer(com.intellij.openapi.project.Project):com.intellij.diff.chains.DiffRequestProducer
- equals(java.lang.Object):Z
- a:getPresentableName():java.lang.String
- a:getUserObject():java.lang.Object
- hashCode():I
f:com.intellij.openapi.vcs.changes.ChangesPreprocess
- <init>():V
- s:preprocessChangesRemoveDeletedForDuplicateMoved(java.util.List):java.util.List
a:com.intellij.openapi.vcs.changes.ChangesTreeEditorDiffPreview
- com.intellij.openapi.vcs.changes.EditorTabDiffPreview
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesTree,javax.swing.JComponent):V
- b:<init>(com.intellij.openapi.vcs.changes.ui.ChangesTree,javax.swing.JComponent,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- pf:getTree():com.intellij.openapi.vcs.changes.ui.ChangesTree
- handleDoubleClick(java.awt.event.MouseEvent):Z
- handleEnterKey():Z
- p:handleEscapeKey():V
- p:handleNextDiffShortcut():V
- p:handleSingleClick():V
- p:isOpenPreviewWithNextDiffShortcut():Z
- p:isOpenPreviewWithSingleClick():Z
- p:isOpenPreviewWithSingleClickEnabled():Z
- p:isPreviewOnDoubleClick():Z
- p:isPreviewOnEnter():Z
- p:returnFocusToTree():V
com.intellij.openapi.vcs.changes.ChangesViewEx
- com.intellij.openapi.vcs.changes.ChangesViewI
- a:getCommitWorkflowHandler():com.intellij.vcs.commit.ChangesViewCommitWorkflowHandler
- a:isAllowExcludeFromCommit():Z
- promiseRefresh():org.jetbrains.concurrency.Promise
- a:promiseRefresh(com.intellij.openapi.application.ModalityState):org.jetbrains.concurrency.Promise
- a:refreshImmediately():V
- a:resetViewImmediatelyAndRefreshLater():V
com.intellij.openapi.vcs.changes.ChangesViewI
- a:scheduleRefresh():V
- a:selectChanges(java.util.List):V
- a:selectFile(com.intellij.openapi.vfs.VirtualFile):V
- a:setBusy(Z):V
- a:setGrouping(java.lang.String):V
- a:updateProgressText(java.lang.String,Z):V
c:com.intellij.openapi.vcs.changes.ChangesViewManager
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- com.intellij.openapi.vcs.changes.ChangesViewEx
- <init>(com.intellij.openapi.project.Project):V
- closeEditorPreview(Z):V
- s:createTextStatusFactory(java.lang.String,Z):com.intellij.openapi.util.Factory
- diffPreviewChanged(Z):V
- dispose():V
- getGrouping():java.util.Collection
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ChangesViewI
- s:getInstanceEx(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ChangesViewEx
- s:getLocalChangesToolWindowName(com.intellij.openapi.project.Project):java.lang.String
- getState():com.intellij.openapi.vcs.changes.ChangesViewManager$State
- isAllowExcludeFromCommit():Z
- isDiffPreviewAvailable():Z
- loadState(com.intellij.openapi.vcs.changes.ChangesViewManager$State):V
- promiseRefresh(com.intellij.openapi.application.ModalityState):org.jetbrains.concurrency.Promise
- refreshImmediately():V
- resetViewImmediatelyAndRefreshLater():V
- scheduleRefresh():V
- selectChanges(java.util.List):V
- selectFile(com.intellij.openapi.vfs.VirtualFile):V
- setBusy(Z):V
- setGrouping(java.lang.String):V
- setGrouping(java.util.Collection):V
- updateProgressText(java.lang.String,Z):V
f:com.intellij.openapi.vcs.changes.ChangesViewManager$ChangesViewToolWindowPanel
- com.intellij.openapi.ui.SimpleToolWindowPanel
- com.intellij.openapi.Disposable
- addListener(com.intellij.openapi.vcs.changes.ChangesViewManager$ChangesViewToolWindowPanel$Listener,com.intellij.openapi.Disposable):V
- dispose():V
- getActions(Z):java.util.List
- isAllowExcludeFromCommit():Z
- refreshChangesViewNodeAsync(com.intellij.openapi.vfs.VirtualFile):V
- scheduleRefresh():V
- selectChanges(java.util.List):V
- selectFile(com.intellij.openapi.vfs.VirtualFile):V
- setBusy(Z):V
- setGrouping(java.lang.String):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- updateCommitWorkflow():V
- updateProgressText(java.lang.String,Z):V
com.intellij.openapi.vcs.changes.ChangesViewManager$ChangesViewToolWindowPanel$Listener
- java.util.EventListener
- a:allowExcludeFromCommitChanged():V
c:com.intellij.openapi.vcs.changes.ChangesViewManager$ContentPreloader
- com.intellij.openapi.vcs.changes.ui.ChangesViewContentProvider$Preloader
- <init>(com.intellij.openapi.project.Project):V
- preloadTabContent(com.intellij.ui.content.Content):V
c:com.intellij.openapi.vcs.changes.ChangesViewManager$ContentProvider
- com.intellij.openapi.vcs.changes.ui.ChangesViewContentProvider
- <init>(com.intellij.openapi.project.Project):V
- initTabContent(com.intellij.ui.content.Content):V
c:com.intellij.openapi.vcs.changes.ChangesViewManager$DisplayNameSupplier
- java.util.function.Supplier
- <init>(com.intellij.openapi.project.Project):V
- get():java.lang.String
c:com.intellij.openapi.vcs.changes.ChangesViewManager$State
- groupingKeys:java.util.TreeSet
- myShowFlatten:Z
- myShowIgnored:Z
- <init>():V
com.intellij.openapi.vcs.changes.ChangesViewModifier
- sf:KEY:com.intellij.openapi.extensions.ProjectExtensionPointName
- sf:TOPIC:com.intellij.util.messages.Topic
- modifyTreeModelBuilder(com.intellij.openapi.vcs.changes.ui.ChangesViewModelBuilder):V
com.intellij.openapi.vcs.changes.ChangesViewModifier$ChangesViewModifierListener
- java.util.EventListener
- a:updated():V
f:com.intellij.openapi.vcs.changes.ChangesViewWorkflowManager
- com.intellij.openapi.Disposable
- sf:TOPIC:com.intellij.util.messages.Topic
- <init>(com.intellij.openapi.project.Project):V
- dispose():V
- getCommitWorkflowHandler():com.intellij.vcs.commit.ChangesViewCommitWorkflowHandler
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ChangesViewWorkflowManager
com.intellij.openapi.vcs.changes.ChangesViewWorkflowManager$ChangesViewWorkflowListener
- java.util.EventListener
- a:commitWorkflowChanged():V
com.intellij.openapi.vcs.changes.DiffPreviewProvider
- a:createDiffRequestProcessor():com.intellij.diff.impl.DiffRequestProcessor
- a:getEditorTabName(com.intellij.diff.impl.DiffRequestProcessor):java.lang.String
- a:getOwner():java.lang.Object
f:com.intellij.openapi.vcs.changes.EditorTabDiffPreviewManager
- sf:Companion:com.intellij.openapi.vcs.changes.EditorTabDiffPreviewManager$Companion
- sf:EDITOR_TAB_DIFF_PREVIEW:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.openapi.project.Project):V
- f:subscribeToPreviewVisibilityChange(com.intellij.openapi.Disposable,java.lang.Runnable):V
f:com.intellij.openapi.vcs.changes.EditorTabDiffPreviewManager$Companion
c:com.intellij.openapi.vcs.changes.FakeRevision
- com.intellij.openapi.vcs.changes.ByteBackedContentRevision
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,Z):V
- getContent():java.lang.String
- getContentAsBytes():B[]
- getFile():com.intellij.openapi.vcs.FilePath
- getRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
com.intellij.openapi.vcs.changes.FileHolder
- a:cleanAll():V
- a:cleanUnderScope(com.intellij.openapi.vcs.changes.VcsDirtyScope):V
- a:copy():com.intellij.openapi.vcs.changes.FileHolder
- notifyVcsStarted(com.intellij.openapi.vcs.AbstractVcs):V
f:com.intellij.openapi.vcs.changes.IgnoredViewDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project):V
f:com.intellij.openapi.vcs.changes.LastUnchangedContentTracker
- <init>():V
- s:forceSavedContent(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- s:getLastUnchangedContent(com.intellij.openapi.vfs.VirtualFile):B[]
- s:hasSavedContent(com.intellij.openapi.vfs.VirtualFile):Z
- s:markTouched(com.intellij.openapi.vfs.VirtualFile):V
- s:markUntouched(com.intellij.openapi.vfs.VirtualFile):V
- s:updateLastUnchangedContent(com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.openapi.vcs.changes.LocalChangeListImpl
- com.intellij.openapi.vcs.changes.LocalChangeList
- copy():com.intellij.openapi.vcs.changes.LocalChangeListImpl
- s:createEmptyChangeListImpl(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeListImpl
- equals(java.lang.Object):Z
- s:generateChangelistId():java.lang.String
- getChanges():java.util.Set
- getComment():java.lang.String
- getData():com.intellij.openapi.vcs.changes.ChangeListData
- getId():java.lang.String
- getName():java.lang.String
- hashCode():I
- isDefault():Z
- isReadOnly():Z
- setComment(java.lang.String):V
c:com.intellij.openapi.vcs.changes.LocalChangeListImpl$Builder
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- <init>(com.intellij.openapi.vcs.changes.LocalChangeListImpl):V
- build():com.intellij.openapi.vcs.changes.LocalChangeListImpl
- setChanges(java.util.Collection):com.intellij.openapi.vcs.changes.LocalChangeListImpl$Builder
- setChangesCollection(java.util.Set):com.intellij.openapi.vcs.changes.LocalChangeListImpl$Builder
- setComment(java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeListImpl$Builder
- setData(com.intellij.openapi.vcs.changes.ChangeListData):com.intellij.openapi.vcs.changes.LocalChangeListImpl$Builder
- setDefault(Z):com.intellij.openapi.vcs.changes.LocalChangeListImpl$Builder
- setId(java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeListImpl$Builder
- setReadOnly(Z):com.intellij.openapi.vcs.changes.LocalChangeListImpl$Builder
c:com.intellij.openapi.vcs.changes.PreviewDiffVirtualFile
- com.intellij.diff.editor.DiffVirtualFile
- com.intellij.diff.editor.DiffVirtualFileWithTabName
- <init>(com.intellij.openapi.vcs.changes.DiffPreviewProvider):V
- createProcessor(com.intellij.openapi.project.Project):com.intellij.diff.impl.DiffRequestProcessor
- equals(java.lang.Object):Z
- getEditorTabName(com.intellij.openapi.project.Project,java.util.List):java.lang.String
- getProvider():com.intellij.openapi.vcs.changes.DiffPreviewProvider
- hashCode():I
- isValid():Z
f:com.intellij.openapi.vcs.changes.RemoteRevisionsCache
- com.intellij.openapi.vcs.VcsListener
- sf:DEFAULT_REFRESH_INTERVAL:I
- sf:REMOTE_VERSION_CHANGED:com.intellij.util.messages.Topic
- changeRemoved(java.lang.String,com.intellij.openapi.vcs.AbstractVcs):V
- changeUpdated(java.lang.String,com.intellij.openapi.vcs.AbstractVcs):V
- directoryMappingChanged():V
- getChangesNodeDecorator():com.intellij.openapi.vcs.changes.ui.RemoteStatusChangeNodeDecorator
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.RemoteRevisionsCache
- invalidate(com.intellij.openapi.vcs.update.UpdatedFiles):V
- isUpToDate(com.intellij.openapi.vcs.changes.Change):Z
- updateAutomaticRefreshAlarmState(Z):V
c:com.intellij.openapi.vcs.changes.RunnableBackgroundableWrapper
- com.intellij.openapi.progress.Task$Backgroundable
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.Runnable):V
- run(com.intellij.openapi.progress.ProgressIndicator):V
c:com.intellij.openapi.vcs.changes.SimpleContentRevision
- com.intellij.openapi.vcs.changes.ContentRevision
- <init>(java.lang.String,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- <init>(java.lang.String,com.intellij.openapi.vcs.FilePath,java.lang.String):V
- getContent():java.lang.String
- getFile():com.intellij.openapi.vcs.FilePath
- getRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
c:com.intellij.openapi.vcs.changes.ToggleDetailsAction
- com.intellij.openapi.vcs.changes.actions.ShowDiffPreviewAction
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.UnversionedViewDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project):V
- s:getUnversionedPopupGroup():com.intellij.openapi.actionSystem.ActionGroup
- s:getUnversionedToolbarGroup():com.intellij.openapi.actionSystem.ActionGroup
- s:registerUnversionedPopupGroup(javax.swing.JComponent):com.intellij.openapi.actionSystem.ActionGroup
com.intellij.openapi.vcs.changes.VcsAnnotationRefresher
- sf:LOCAL_CHANGES_CHANGED:com.intellij.util.messages.Topic
- a:configurationChanged(com.intellij.openapi.vcs.VcsKey):V
- a:dirty(com.intellij.openapi.vcs.changes.BaseRevision):V
- a:dirty(java.lang.String):V
- a:dirtyUnder(com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.openapi.vcs.changes.VcsDirtyScopeImpl
- com.intellij.openapi.vcs.changes.VcsModifiableDirtyScope
- com.intellij.openapi.vcs.changes.VcsDirtyScopeBuilder
- <init>(com.intellij.openapi.vcs.AbstractVcs):V
- addDirtyDirRecursively(com.intellij.openapi.vcs.FilePath):V
- addDirtyFile(com.intellij.openapi.vcs.FilePath):V
- addDirtyPathFast(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.FilePath,Z):V
- belongsTo(com.intellij.openapi.vcs.FilePath):Z
- getAffectedContentRoots():java.util.Collection
- getDirtyFiles():java.util.Set
- getDirtyFilesNoExpand():java.util.Set
- getProject():com.intellij.openapi.project.Project
- getRecursivelyDirtyDirectories():java.util.Set
- getVcs():com.intellij.openapi.vcs.AbstractVcs
- isEmpty():Z
- markEverythingDirty():V
- pack():com.intellij.openapi.vcs.changes.VcsDirtyScopeImpl
- wasEveryThingDirty():Z
f:com.intellij.openapi.vcs.changes.VcsEditorTabFilesManager
- com.intellij.openapi.components.SimplePersistentStateComponent
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.openapi.vcs.changes.VcsEditorTabFilesManager$Companion
- <init>():V
- dispose():V
- sf:getInstance():com.intellij.openapi.vcs.changes.VcsEditorTabFilesManager
- f:getShouldOpenInNewWindow():Z
- f:openFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z):java.util.List
- f:openFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z,Z,Z):java.util.List
f:com.intellij.openapi.vcs.changes.VcsEditorTabFilesManager$Companion
- f:getInstance():com.intellij.openapi.vcs.changes.VcsEditorTabFilesManager
f:com.intellij.openapi.vcs.changes.VcsEditorTabFilesManager$State
- com.intellij.openapi.components.BaseState
- <init>():V
- f:getOpenInNewWindow():Z
- f:setOpenInNewWindow(Z):V
c:com.intellij.openapi.vcs.changes.VcsFreezingProcess
- sf:Companion:com.intellij.openapi.vcs.changes.VcsFreezingProcess$Companion
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.Runnable):V
- execute():V
f:com.intellij.openapi.vcs.changes.VcsFreezingProcess$Companion
- f:runFreezing(com.intellij.openapi.project.Project,java.lang.String,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
com.intellij.openapi.vcs.changes.VcsFreezingProcess$Listener
- sf:Companion:com.intellij.openapi.vcs.changes.VcsFreezingProcess$Listener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- onFreeze():V
- onUnfreeze():V
f:com.intellij.openapi.vcs.changes.VcsFreezingProcess$Listener$Companion
com.intellij.openapi.vcs.changes.VcsManagedFilesHolder
- com.intellij.openapi.vcs.changes.FileHolder
- sf:TOPIC:com.intellij.util.messages.Topic
- sf:VCS_IGNORED_FILES_HOLDER_EP:com.intellij.openapi.extensions.ProjectExtensionPointName
- sf:VCS_UNVERSIONED_FILES_HOLDER_EP:com.intellij.openapi.extensions.ProjectExtensionPointName
- isInUpdatingMode():Z
com.intellij.openapi.vcs.changes.VcsManagedFilesHolder$Provider
- a:createHolder():com.intellij.openapi.vcs.changes.VcsManagedFilesHolder
- a:getVcs():com.intellij.openapi.vcs.AbstractVcs
com.intellij.openapi.vcs.changes.VcsManagedFilesHolder$VcsManagedFilesHolderListener
- java.util.EventListener
- a:updatingModeChanged():V
c:com.intellij.openapi.vcs.changes.VcsShelveChangesSaver
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.progress.ProgressIndicator,java.lang.String):V
- p:doRollback(java.util.Collection,java.util.Collection):V
- getShelvedLists():java.util.List
- load():V
- save(java.util.Collection):V
a:com.intellij.openapi.vcs.changes.actions.AbstractCommitChangesAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- p:approximatelyHasRoots(com.intellij.openapi.vcs.actions.VcsContext):Z
- p:getRoots(com.intellij.openapi.vcs.actions.VcsContext):com.intellij.openapi.vcs.FilePath[]
- p:isActionEnabled(com.intellij.openapi.vcs.changes.ChangeListManager,com.intellij.openapi.vcs.changes.Change):Z
- p:update(com.intellij.openapi.vcs.actions.VcsContext,com.intellij.openapi.actionSystem.Presentation):V
f:com.intellij.openapi.vcs.changes.actions.AddChangeListAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.openapi.vcs.changes.actions.BaseCommitExecutorAction
- com.intellij.util.ui.JButtonAction
- <init>():V
- p:getCommitExecutor(com.intellij.vcs.commit.CommitWorkflowHandler):com.intellij.openapi.vcs.changes.CommitExecutor
- pa:getExecutorId():java.lang.String
a:com.intellij.openapi.vcs.changes.actions.CreatePatchFromChangesAction
- com.intellij.openapi.actionSystem.ExtendableAction
- com.intellij.openapi.project.DumbAware
- s:createPatch(com.intellij.openapi.project.Project,java.lang.String,java.util.List):V
- s:createPatch(com.intellij.openapi.project.Project,java.lang.String,java.util.List,Z):V
- s:createPatch(com.intellij.openapi.project.Project,java.lang.String,java.util.List,Z,com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor$PatchBuilder):V
- defaultActionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- defaultUpdate(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.vcs.changes.actions.CreatePatchFromChangesAction$Clipboard
- com.intellij.openapi.vcs.changes.actions.CreatePatchFromChangesAction
- <init>():V
c:com.intellij.openapi.vcs.changes.actions.CreatePatchFromChangesAction$Dialog
- com.intellij.openapi.vcs.changes.actions.CreatePatchFromChangesAction
- <init>():V
f:com.intellij.openapi.vcs.changes.actions.MoveChangesToAnotherListAction
- com.intellij.openapi.project.DumbAwareAction
- sf:Companion:com.intellij.openapi.vcs.changes.actions.MoveChangesToAnotherListAction$Companion
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- sf:askAndMove(com.intellij.openapi.project.Project,java.util.Collection,java.util.List):Z
- sf:askTargetChangelist(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker):com.intellij.openapi.vcs.changes.LocalChangeList
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.actions.MoveChangesToAnotherListAction$Companion
- f:askAndMove(com.intellij.openapi.project.Project,java.util.Collection,java.util.List):Z
- f:askTargetChangelist(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker):com.intellij.openapi.vcs.changes.LocalChangeList
f:com.intellij.openapi.vcs.changes.actions.OpenRepositoryVersionAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.actions.RefreshAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:doRefresh(com.intellij.openapi.project.Project):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.actions.RemoveChangeListAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.actions.RenameChangeListAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.actions.RollbackAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.actions.RollbackDialogAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.vcs.changes.actions.ScheduleForAdditionAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.actions.ScheduleForAdditionAction$Manager
- sf:INSTANCE:com.intellij.openapi.vcs.changes.actions.ScheduleForAdditionAction$Manager
- sf:addUnversionedFilesToVcs(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List):Z
- sf:addUnversionedFilesToVcs(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List,com.intellij.util.Consumer,com.intellij.util.PairConsumer):Z
- sf:addUnversionedFilesToVcsInBackground(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List):V
- sf:addUnversionedFilesToVcsInBackground(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List,com.intellij.util.Consumer,com.intellij.util.PairConsumer):V
- sf:addUnversionedFilesToVcsInSync(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List,com.intellij.util.Consumer):Z
- f:getUnversionedFiles(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.project.Project):com.intellij.util.containers.JBIterable
- f:getUnversionedFiles(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.project.Project):com.intellij.util.containers.JBIterable
com.intellij.openapi.vcs.changes.actions.ScheduleForAdditionActionExtension
- sf:Companion:com.intellij.openapi.vcs.changes.actions.ScheduleForAdditionActionExtension$Companion
- a:doAddFiles(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.util.List,Z):V
- a:getSupportedVcs(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.AbstractVcs
- a:isStatusForAddition(com.intellij.openapi.vcs.FileStatus):Z
- isStatusForDirectoryAddition(com.intellij.openapi.vcs.FileStatus):Z
f:com.intellij.openapi.vcs.changes.actions.ScheduleForAdditionActionExtension$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
a:com.intellij.openapi.vcs.changes.actions.SetChangesGroupingAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- a:getGroupingKey():java.lang.String
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.openapi.vcs.changes.actions.ShowDiffPreviewAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>():V
c:com.intellij.openapi.vcs.changes.actions.ShowDiffWithLocalAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.AnActionExtensionProvider
- com.intellij.openapi.project.DumbAware
- <init>():V
- <init>(Z):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getChangeWithLocal(com.intellij.openapi.vcs.changes.Change,Z):com.intellij.openapi.vcs.changes.Change
- s:getChangeWithLocal(com.intellij.openapi.vcs.changes.Change,Z,Z):com.intellij.openapi.vcs.changes.Change
- isActive(com.intellij.openapi.actionSystem.AnActionEvent):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.vcs.changes.actions.ShowDiffWithLocalAction$ShowDiffBeforeWithLocalAction
- com.intellij.openapi.vcs.changes.actions.ShowDiffWithLocalAction
- <init>():V
f:com.intellij.openapi.vcs.changes.actions.diff.ChangeDiffRequestProducer
- com.intellij.diff.chains.DiffRequestProducer
- com.intellij.openapi.vcs.changes.ui.ChangeDiffRequestChain$Producer
- sf:CHANGE_KEY:com.intellij.openapi.util.Key
- sf:TAG_KEY:com.intellij.openapi.util.Key
- s:canCreate(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change):Z
- s:checkContentRevision(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ContentRevision,com.intellij.openapi.util.UserDataHolder,com.intellij.openapi.progress.ProgressIndicator):V
- s:create(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.vcs.changes.actions.diff.ChangeDiffRequestProducer
- s:create(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change,java.util.Map):com.intellij.openapi.vcs.changes.actions.diff.ChangeDiffRequestProducer
- s:createContent(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ContentRevision,com.intellij.openapi.util.UserDataHolder,com.intellij.openapi.progress.ProgressIndicator):com.intellij.diff.contents.DiffContent
- equals(java.lang.Object):Z
- s:getBaseVersion():java.lang.String
- getChange():com.intellij.openapi.vcs.changes.Change
- getFilePath():com.intellij.openapi.vcs.FilePath
- getFileStatus():com.intellij.openapi.vcs.FileStatus
- s:getMergedVersion():java.lang.String
- getName():java.lang.String
- getProject():com.intellij.openapi.project.Project
- s:getRequestTitle(com.intellij.openapi.vcs.changes.Change):java.lang.String
- s:getRevisionTitle(com.intellij.openapi.vcs.changes.ContentRevision,java.lang.String):java.lang.String
- s:getRevisionTitleOrEmpty(com.intellij.openapi.vcs.changes.ContentRevision):java.lang.String
- s:getServerVersion():java.lang.String
- getTag():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- s:getYourVersion():java.lang.String
- hashCode():I
- s:hashCode(com.intellij.openapi.vcs.changes.Change):I
- s:isEquals(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.Change):Z
- process(com.intellij.openapi.util.UserDataHolder,com.intellij.openapi.progress.ProgressIndicator):com.intellij.diff.requests.DiffRequest
com.intellij.openapi.vcs.changes.actions.diff.ChangeDiffRequestProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:canCreate(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change):Z
- a:isEquals(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.Change):com.intellij.util.ThreeState
- a:process(com.intellij.openapi.vcs.changes.actions.diff.ChangeDiffRequestProducer,com.intellij.openapi.util.UserDataHolder,com.intellij.openapi.progress.ProgressIndicator):com.intellij.diff.requests.DiffRequest
f:com.intellij.openapi.vcs.changes.actions.diff.CombinedDiffPreviewModel
- sf:Companion:com.intellij.openapi.vcs.changes.actions.diff.CombinedDiffPreviewModel$Companion
- <init>():V
- sf:prepareCombinedDiffModelRequests(com.intellij.openapi.project.Project,java.util.List):java.util.List
- sf:prepareCombinedDiffModelRequestsFromProducers(java.util.List):java.util.List
f:com.intellij.openapi.vcs.changes.actions.diff.CombinedDiffPreviewModel$Companion
- f:prepareCombinedDiffModelRequests(com.intellij.openapi.project.Project,java.util.List):java.util.List
- f:prepareCombinedDiffModelRequestsFromProducers(java.util.List):java.util.List
a:com.intellij.openapi.vcs.changes.actions.diff.PresentableGoToChangePopupAction
- com.intellij.diff.actions.impl.GoToChangePopupBuilder$BaseGoToChangePopupAction
- <init>():V
- p:canNavigate():Z
- p:createPopup(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.ui.popup.JBPopup
- pa:getChanges():com.intellij.openapi.ListSelection
- pa:getPresentation(java.lang.Object):com.intellij.openapi.vcs.changes.ui.PresentableChange
- pa:onSelected(java.lang.Object):V
a:com.intellij.openapi.vcs.changes.actions.diff.PresentableGoToChangePopupAction$Default
- com.intellij.openapi.vcs.changes.actions.diff.PresentableGoToChangePopupAction
- <init>():V
- p:getPresentation(com.intellij.openapi.vcs.changes.ui.PresentableChange):com.intellij.openapi.vcs.changes.ui.PresentableChange
c:com.intellij.openapi.vcs.changes.actions.diff.ShowDiffAction
- com.intellij.openapi.actionSystem.AnActionExtensionProvider
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:canShowDiff(com.intellij.openapi.project.Project,java.util.List):Z
- s:canShowDiff(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change[]):Z
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isActive(com.intellij.openapi.actionSystem.AnActionEvent):Z
- s:showDiffForChange(com.intellij.openapi.project.Project,com.intellij.openapi.ListSelection):V
- s:showDiffForChange(com.intellij.openapi.project.Project,com.intellij.openapi.ListSelection,com.intellij.openapi.vcs.changes.actions.diff.ShowDiffContext):V
- s:showDiffForChange(com.intellij.openapi.project.Project,java.lang.Iterable):V
- s:showDiffForChange(com.intellij.openapi.project.Project,java.lang.Iterable,I):V
- s:showDiffForChange(com.intellij.openapi.project.Project,java.lang.Iterable,I,com.intellij.openapi.vcs.changes.actions.diff.ShowDiffContext):V
- s:showDiffForChange(com.intellij.openapi.project.Project,java.lang.Iterable,com.intellij.openapi.util.Condition,com.intellij.openapi.vcs.changes.actions.diff.ShowDiffContext):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.vcs.changes.actions.diff.ShowDiffContext
- <init>():V
- <init>(com.intellij.diff.DiffDialogHints):V
- addAction(com.intellij.openapi.actionSystem.AnAction):V
- addActions(java.util.List):V
- getActions():java.util.List
- getChainContext():java.util.Map
- getChangeContext(com.intellij.openapi.vcs.changes.Change):java.util.Map
- getDialogHints():com.intellij.diff.DiffDialogHints
- putChainContext(com.intellij.openapi.util.Key,java.lang.Object):V
- putChangeContext(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.util.Key,java.lang.Object):V
f:com.intellij.openapi.vcs.changes.actions.diff.UnversionedDiffRequestProducer
- com.intellij.openapi.vcs.changes.ui.ChangeDiffRequestChain$Producer
- s:create(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.changes.actions.diff.UnversionedDiffRequestProducer
- s:create(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag):com.intellij.openapi.vcs.changes.actions.diff.UnversionedDiffRequestProducer
- equals(java.lang.Object):Z
- getFilePath():com.intellij.openapi.vcs.FilePath
- getFileStatus():com.intellij.openapi.vcs.FileStatus
- getName():java.lang.String
- getTag():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- hashCode():I
- process(com.intellij.openapi.util.UserDataHolder,com.intellij.openapi.progress.ProgressIndicator):com.intellij.diff.requests.DiffRequest
c:com.intellij.openapi.vcs.changes.actions.diff.lst.LocalChangeListDiffRequest
- com.intellij.diff.requests.ContentDiffRequest
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.String,com.intellij.diff.requests.ContentDiffRequest):V
- getChangelistId():java.lang.String
- getChangelistName():java.lang.String
- getContentTitles():java.util.List
- getContents():java.util.List
- getLineStatusTracker():com.intellij.openapi.vcs.ex.LineStatusTracker
- getProject():com.intellij.openapi.project.Project
- getRequest():com.intellij.diff.requests.ContentDiffRequest
- getTitle():java.lang.String
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- onAssigned(Z):V
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
f:com.intellij.openapi.vcs.changes.committed.CacheSettingsDialog
- sf:INSTANCE:com.intellij.openapi.vcs.changes.committed.CacheSettingsDialog
- sf:showSettingsDialog(com.intellij.openapi.project.Project):Z
com.intellij.openapi.vcs.changes.committed.ChangeListGroupingStrategy
- sf:USER:com.intellij.openapi.vcs.changes.committed.ChangeListGroupingStrategy
- a:beforeStart():V
- a:changedSinceApply():Z
- a:getComparator():java.util.Comparator
- a:getGroupName(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):java.lang.String
- a:toString():java.lang.String
c:com.intellij.openapi.vcs.changes.committed.ChangesBrowserDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.committed.CommittedChangesTableModel,com.intellij.openapi.vcs.changes.committed.ChangesBrowserDialog$Mode,com.intellij.util.Consumer):V
- <init>(com.intellij.openapi.project.Project,java.awt.Component,com.intellij.openapi.vcs.changes.committed.CommittedChangesTableModel,com.intellij.openapi.vcs.changes.committed.ChangesBrowserDialog$Mode,com.intellij.util.Consumer):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createDefaultActions():V
- getAppender():com.intellij.util.AsynchConsumer
- p:getDimensionServiceKey():java.lang.String
- getSelectedChangeList():com.intellij.openapi.vcs.versionBrowser.CommittedChangeList
- startLoading():V
e:com.intellij.openapi.vcs.changes.committed.ChangesBrowserDialog$Mode
- java.lang.Enum
- sf:Browse:com.intellij.openapi.vcs.changes.committed.ChangesBrowserDialog$Mode
- sf:Choose:com.intellij.openapi.vcs.changes.committed.ChangesBrowserDialog$Mode
- sf:Simple:com.intellij.openapi.vcs.changes.committed.ChangesBrowserDialog$Mode
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.committed.ChangesBrowserDialog$Mode
- s:values():com.intellij.openapi.vcs.changes.committed.ChangesBrowserDialog$Mode[]
c:com.intellij.openapi.vcs.changes.committed.ChangesBunch
- <init>(java.util.List,Z):V
- getList():java.util.List
- isConsistentWithPrevious():Z
c:com.intellij.openapi.vcs.changes.committed.CommittedChangeListByDateComparator
- java.util.Comparator
- sf:ASCENDING:java.util.Comparator
- sf:DESCENDING:java.util.Comparator
- p:<init>():V
- compare(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList,com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):I
c:com.intellij.openapi.vcs.changes.committed.CommittedChangeListRenderer
- com.intellij.ui.ColoredTreeCellRenderer
- <init>(com.intellij.openapi.project.Project,java.util.List):V
- customize(javax.swing.JComponent,java.lang.Object,Z,Z,Z,I,Z):V
- customizeCellRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- s:getDescriptionOfChangeList(java.lang.String):java.lang.String
- s:getRowX(javax.swing.JTree,I):I
- renderChangeList(javax.swing.JComponent,com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):V
- s:truncateDescription(java.lang.String,java.awt.FontMetrics,I):java.lang.String
c:com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowser
- com.intellij.openapi.vcs.changes.ui.SimpleAsyncChangesBrowser
- <init>(com.intellij.openapi.project.Project):V
- p:createPopupMenuActions():java.util.List
- p:createToolbarActions():java.util.List
- setUseCase(com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowserUseCase):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
e:com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowserUseCase
- java.lang.Enum
- sf:COMMITTED:com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowserUseCase
- sf:DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:INCOMING:com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowserUseCase
- sf:IN_AIR:com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowserUseCase
- sf:UPDATE:com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowserUseCase
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowserUseCase
- s:values():com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowserUseCase[]
f:com.intellij.openapi.vcs.changes.committed.CommittedChangesCache
- com.intellij.openapi.components.SimplePersistentStateComponent
- sf:COMMITTED_TOPIC:com.intellij.util.messages.Topic
- <init>(com.intellij.openapi.project.Project):V
- clearCaches(java.lang.Runnable):V
- commitMessageChanged(com.intellij.openapi.vcs.RepositoryLocation,J,java.lang.String):V
- getBackBunchedIterator(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.RepositoryLocation,I):java.util.Iterator
- getCachedIncomingChanges():java.util.List
- getChanges(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.AbstractVcs,I,Z,com.intellij.openapi.vcs.CommittedChangesProvider,com.intellij.openapi.vcs.RepositoryLocation):java.util.List
- getIncomingChangeList(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.util.Pair
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.committed.CommittedChangesCache
- s:getInstanceIfCreated(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.committed.CommittedChangesCache
- getLocationCache():com.intellij.openapi.vcs.changes.committed.RepositoryLocationCache
- getProjectChangesAsync(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings,I,Z,com.intellij.util.Consumer,com.intellij.util.Consumer):V
- hasCachesForAnyRoot(com.intellij.util.Consumer):V
- hasEmptyCaches():Z
- isMaxCountSupportedForProject():Z
- isRefreshingIncomingChanges():Z
- loadIncomingChanges(Z):java.util.List
- loadIncomingChangesAsync(com.intellij.util.Consumer,Z):V
- processUpdatedFiles(com.intellij.openapi.vcs.update.UpdatedFiles):V
- processUpdatedFiles(com.intellij.openapi.vcs.update.UpdatedFiles,com.intellij.util.Consumer):V
- refreshAllCaches():V
- refreshAllCachesAsync(Z,Z):V
- refreshIncomingChanges():Z
- refreshIncomingChangesAsync():V
- submitExternallyLoaded(com.intellij.openapi.vcs.RepositoryLocation,J,java.util.List):V
f:com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.versionBrowser.ChangesBrowserSettingsEditor,com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings):V
- getSettings():com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings
com.intellij.openapi.vcs.changes.committed.CommittedChangesListener
- changesCleared():V
- changesLoaded(com.intellij.openapi.vcs.RepositoryLocation,java.util.List):V
- incomingChangesUpdated(java.util.List):V
- refreshErrorStatusChanged(com.intellij.openapi.vcs.VcsException):V
com.intellij.openapi.vcs.changes.committed.CommittedChangesNavigation
- a:canGoBack():Z
- a:canGoForward():Z
- a:goBack():V
- a:goForward():V
- a:onBeforeClose():V
c:com.intellij.openapi.vcs.changes.committed.CommittedChangesTableModel
- com.intellij.util.ui.ListTableModel
- <init>(java.util.List,Z):V
- <init>(java.util.List,com.intellij.openapi.vcs.ChangeListColumn[],Z):V
- getDefaultSortKey():javax.swing.RowSorter$SortKey
- isAsynchLoad():Z
- p:setSortKey(javax.swing.RowSorter$SortKey):V
c:com.intellij.openapi.vcs.changes.committed.CommittedChangesTreeBrowser
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiDataProvider
- com.intellij.openapi.vcs.changes.committed.DecoratorManager
- sf:COMMITTED_CHANGES_TREE_DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:ITEMS_RELOADED:com.intellij.util.messages.Topic
- sf:ourHelpId:java.lang.String
- <init>(com.intellij.openapi.project.Project,java.util.List):V
- addFilter(com.intellij.openapi.vcs.changes.committed.ChangeListFilteringStrategy):V
- append(java.util.List):V
- s:collectChanges(java.util.List,Z):java.util.List
- collectChangesWithMovedChildren():com.intellij.openapi.vcs.changes.Change[]
- collectSelectedChangesWithMovedChildren():com.intellij.openapi.vcs.changes.Change[]
- createGroupFilterToolbar(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.ActionGroup,java.util.List):com.intellij.openapi.actionSystem.ActionToolbar
- dispose():V
- getChangesTree():com.intellij.ui.treeStructure.Tree
- getEmptyText():com.intellij.util.ui.StatusText
- getGroupingStrategy():com.intellij.openapi.vcs.changes.committed.ChangeListGroupingStrategy
- getTreeExpander():com.intellij.ide.TreeExpander
- install(com.intellij.openapi.vcs.changes.committed.CommittedChangeListDecorator):V
- remove(com.intellij.openapi.vcs.changes.committed.CommittedChangeListDecorator):V
- removeFilteringStrategy(com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey):V
- repaintTree():V
- reportLoadedLists(com.intellij.openapi.vcs.changes.committed.CommittedChangeListsListener):V
- reset():V
- setFilteringStrategy(com.intellij.openapi.vcs.changes.committed.ChangeListFilteringStrategy):Z
- setGroupingStrategy(com.intellij.openapi.vcs.changes.committed.ChangeListGroupingStrategy):V
- setHelpId(java.lang.String):V
- setItems(java.util.List,com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowserUseCase):V
- setLoading(Z):V
- setTableContextMenu(com.intellij.openapi.actionSystem.ActionGroup,java.util.List):V
- setToolBar(javax.swing.JComponent):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- s:zipChanges(java.util.List):java.util.List
com.intellij.openapi.vcs.changes.committed.CommittedChangesTreeBrowser$CommittedChangesReloadListener
- a:emptyRefresh():V
- a:itemsReloaded():V
c:com.intellij.openapi.vcs.changes.committed.CommittedChangesTreeBrowser$MoreLauncher
- java.lang.Runnable
- run():V
c:com.intellij.openapi.vcs.changes.committed.CompositeChangeListFilteringStrategy
- com.intellij.openapi.vcs.changes.committed.ChangeListFilteringStrategy
- <init>():V
- addChangeListener(javax.swing.event.ChangeListener):V
- addStrategy(com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey,com.intellij.openapi.vcs.changes.committed.ChangeListFilteringStrategy):V
- appendFilterBase(java.util.List):V
- filterChangeLists(java.util.List):java.util.List
- getFilterUI():javax.swing.JComponent
- getKey():com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey
- removeChangeListener(javax.swing.event.ChangeListener):V
- removeStrategy(com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey):com.intellij.openapi.vcs.changes.committed.ChangeListFilteringStrategy
- resetFilterBase():V
- setFilterBase(java.util.List):V
f:com.intellij.openapi.vcs.changes.committed.DateChangeListGroupingStrategy
- com.intellij.openapi.vcs.changes.committed.ChangeListGroupingStrategy
- <init>():V
- beforeStart():V
- changedSinceApply():Z
- getComparator():java.util.Comparator
- getGroupName(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):java.lang.String
- getGroupName(java.util.Date):java.lang.String
a:com.intellij.openapi.vcs.changes.committed.LabeledComboBoxAction
- com.intellij.openapi.actionSystem.ex.ComboBoxAction
- p:<init>(java.lang.String):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
f:com.intellij.openapi.vcs.changes.committed.RefreshIncomingChangesAction
- com.intellij.openapi.project.DumbAwareAction
- sf:Companion:com.intellij.openapi.vcs.changes.committed.RefreshIncomingChangesAction$Companion
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- sf:doRefresh(com.intellij.openapi.project.Project):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.committed.RefreshIncomingChangesAction$Companion
- f:doRefresh(com.intellij.openapi.project.Project):V
c:com.intellij.openapi.vcs.changes.committed.RepositoryLocationCache
- <init>(com.intellij.openapi.project.Project):V
- getLocation(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vcs.FilePath,Z):com.intellij.openapi.vcs.RepositoryLocation
- reset():V
com.intellij.openapi.vcs.changes.committed.VcsConfigurationChangeListener
- sf:BRANCHES_CHANGED:com.intellij.util.messages.Topic
- sf:BRANCHES_CHANGED_RESPONSE:com.intellij.util.messages.Topic
com.intellij.openapi.vcs.changes.committed.VcsConfigurationChangeListener$DetailedNotification
- a:execute(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.util.List):V
com.intellij.openapi.vcs.changes.committed.VcsConfigurationChangeListener$Notification
- a:execute(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.openapi.vcs.changes.committed.WiseSplitter
- com.intellij.openapi.Disposable
- <init>(java.lang.Runnable,com.intellij.openapi.ui.Splitter):V
- add(com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey,javax.swing.JComponent):V
- canAdd():Z
- dispose():V
- remove(com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey):V
c:com.intellij.openapi.vcs.changes.ignore.IgnoredFileGeneratorImpl
- com.intellij.openapi.vcs.changes.IgnoredFileGenerator
- p:<init>(com.intellij.openapi.project.Project):V
- generateFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.AbstractVcs,Z):V
- s:markIgnoreFileRootAsGenerated(com.intellij.openapi.project.Project,java.lang.String):V
- s:needGenerateInternalIgnoreFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
c:com.intellij.openapi.vcs.changes.ignore.actions.IgnoreFileActionGroup
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.vcs.changes.ignore.lang.IgnoreFileType):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:createAdditionalActions(com.intellij.openapi.project.Project,java.util.List,java.util.List):java.util.List
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.ignore.actions.IgnoreFileActionKt
- sf:getSelectedFiles(com.intellij.openapi.actionSystem.AnActionEvent):java.util.List
- sf:writeIgnoreFileEntries(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.util.List,com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vfs.VirtualFile):V
- bs:writeIgnoreFileEntries$default(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.util.List,com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vfs.VirtualFile,I,java.lang.Object):V
c:com.intellij.openapi.vcs.changes.ignore.cache.PatternCache
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.project.Project):V
- clearCache():V
- createPattern(com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntry):java.util.regex.Pattern
- createPattern(com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntry,Z):java.util.regex.Pattern
- createPattern(java.lang.String,com.intellij.openapi.vcs.changes.ignore.lang.Syntax):java.util.regex.Pattern
- createPattern(java.lang.String,com.intellij.openapi.vcs.changes.ignore.lang.Syntax,Z):java.util.regex.Pattern
- dispose():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ignore.cache.PatternCache
- getOrCreatePattern(java.lang.String):java.util.regex.Pattern
- getPattern(java.lang.String):java.util.regex.Pattern
- getRegex(java.lang.String,com.intellij.openapi.vcs.changes.ignore.lang.Syntax,Z):java.lang.String
f:com.intellij.openapi.vcs.changes.ignore.codeInsight.IgnoreDirectoryMarkerProvider
- com.intellij.codeInsight.daemon.LineMarkerProviderDescriptor
- com.intellij.openapi.project.DumbAware
- <init>():V
- collectSlowLineMarkers(java.util.List,java.util.Collection):V
- getIcon():javax.swing.Icon
- getLineMarkerInfo(com.intellij.psi.PsiElement):com.intellij.codeInsight.daemon.LineMarkerInfo
- getName():java.lang.String
c:com.intellij.openapi.vcs.changes.ignore.lang.IgnoreBraceMatcher
- com.intellij.lang.PairedBraceMatcher
- <init>():V
- getCodeConstructStart(com.intellij.psi.PsiFile,I):I
- getPairs():com.intellij.lang.BracePair[]
- isPairedBracesAllowedBeforeType(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
c:com.intellij.openapi.vcs.changes.ignore.lang.IgnoreCommenter
- com.intellij.lang.Commenter
- <init>():V
- getBlockCommentPrefix():java.lang.String
- getBlockCommentSuffix():java.lang.String
- getCommentedBlockCommentPrefix():java.lang.String
- getCommentedBlockCommentSuffix():java.lang.String
- getLineCommentPrefix():java.lang.String
c:com.intellij.openapi.vcs.changes.ignore.lang.IgnoreFileType
- com.intellij.openapi.fileTypes.LanguageFileType
- sf:INSTANCE:com.intellij.openapi.vcs.changes.ignore.lang.IgnoreFileType
- p:<init>(com.intellij.openapi.vcs.changes.ignore.lang.IgnoreLanguage):V
- getDefaultExtension():java.lang.String
- getDescription():java.lang.String
- getIcon():javax.swing.Icon
- getIgnoreLanguage():com.intellij.openapi.vcs.changes.ignore.lang.IgnoreLanguage
- getName():java.lang.String
c:com.intellij.openapi.vcs.changes.ignore.lang.IgnoreLanguage
- com.intellij.lang.Language
- sf:INSTANCE:com.intellij.openapi.vcs.changes.ignore.lang.IgnoreLanguage
- p:<init>():V
- p:<init>(java.lang.String,java.lang.String):V
- f:createFile(com.intellij.psi.FileViewProvider):com.intellij.openapi.vcs.changes.ignore.psi.IgnoreFile
- getAffectedRoot(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- getDefaultSyntax():com.intellij.openapi.vcs.changes.ignore.lang.Syntax
- getDisplayName():java.lang.String
- getExtension():java.lang.String
- getFileType():com.intellij.openapi.vcs.changes.ignore.lang.IgnoreFileType
- getFilename():java.lang.String
- getIcon():javax.swing.Icon
- isSyntaxSupported():Z
c:com.intellij.openapi.vcs.changes.ignore.lang.IgnoreParserDefinition
- com.intellij.lang.ParserDefinition
- sf:FILE:com.intellij.psi.tree.IFileElementType
- <init>():V
- createElement(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
- createFile(com.intellij.psi.FileViewProvider):com.intellij.psi.PsiFile
- createLexer(com.intellij.openapi.project.Project):com.intellij.lexer.Lexer
- createParser(com.intellij.openapi.project.Project):com.intellij.lang.PsiParser
- getCommentTokens():com.intellij.psi.tree.TokenSet
- getFileNodeType():com.intellij.psi.tree.IFileElementType
- getStringLiteralElements():com.intellij.psi.tree.TokenSet
f:com.intellij.openapi.vcs.changes.ignore.lang.IgnoreParserDefinition$Lazy
- sf:COMMENTS:com.intellij.psi.tree.TokenSet
- sf:HEADERS:com.intellij.psi.tree.TokenSet
- sf:SECTIONS:com.intellij.psi.tree.TokenSet
- <init>():V
e:com.intellij.openapi.vcs.changes.ignore.lang.Syntax
- java.lang.Enum
- sf:GLOB:com.intellij.openapi.vcs.changes.ignore.lang.Syntax
- sf:REGEXP:com.intellij.openapi.vcs.changes.ignore.lang.Syntax
- s:find(java.lang.String):com.intellij.openapi.vcs.changes.ignore.lang.Syntax
- getPresentation():java.lang.String
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.ignore.lang.Syntax
- s:values():com.intellij.openapi.vcs.changes.ignore.lang.Syntax[]
com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntry
- com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntryBase
- a:getNegation():com.intellij.openapi.vcs.changes.ignore.psi.IgnoreNegation
com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntryBase
- com.intellij.psi.PsiElement
- a:getSyntax():com.intellij.openapi.vcs.changes.ignore.lang.Syntax
- a:getValue():java.lang.String
- a:isNegated():Z
com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntryDirectory
- com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntryFile
- a:getNegation():com.intellij.openapi.vcs.changes.ignore.psi.IgnoreNegation
com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntryFile
- com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntry
- a:getNegation():com.intellij.openapi.vcs.changes.ignore.psi.IgnoreNegation
c:com.intellij.openapi.vcs.changes.ignore.psi.IgnoreFile
- com.intellij.psi.impl.source.PsiFileImpl
- <init>(com.intellij.psi.FileViewProvider,com.intellij.openapi.vcs.changes.ignore.lang.IgnoreFileType):V
- accept(com.intellij.psi.PsiElementVisitor):V
- getFileType():com.intellij.openapi.fileTypes.FileType
- f:getLanguage():com.intellij.lang.Language
- getParserDefinition():com.intellij.lang.ParserDefinition
com.intellij.openapi.vcs.changes.ignore.psi.IgnoreNegation
- com.intellij.psi.PsiElement
com.intellij.openapi.vcs.changes.ignore.psi.IgnoreSyntax
- com.intellij.psi.PsiElement
- a:getValue():com.intellij.psi.PsiElement
com.intellij.openapi.vcs.changes.ignore.psi.IgnoreTypes
- sf:BRACKET_LEFT:com.intellij.psi.tree.IElementType
- sf:BRACKET_RIGHT:com.intellij.psi.tree.IElementType
- sf:COMMENT:com.intellij.psi.tree.IElementType
- sf:CRLF:com.intellij.psi.tree.IElementType
- sf:ENTRY:com.intellij.psi.tree.IElementType
- sf:ENTRY_DIRECTORY:com.intellij.psi.tree.IElementType
- sf:ENTRY_FILE:com.intellij.psi.tree.IElementType
- sf:HEADER:com.intellij.psi.tree.IElementType
- sf:NEGATION:com.intellij.psi.tree.IElementType
- sf:SECTION:com.intellij.psi.tree.IElementType
- sf:SLASH:com.intellij.psi.tree.IElementType
- sf:SYNTAX:com.intellij.psi.tree.IElementType
- sf:SYNTAX_KEY:com.intellij.psi.tree.IElementType
- sf:VALUE:com.intellij.psi.tree.IElementType
c:com.intellij.openapi.vcs.changes.ignore.psi.IgnoreTypes$Factory
- <init>():V
- s:createElement(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
c:com.intellij.openapi.vcs.changes.ignore.psi.IgnoreVisitor
- com.intellij.psi.PsiElementVisitor
- <init>():V
- visitEntry(com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntry):V
- visitEntryBase(com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntryBase):V
- visitEntryDirectory(com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntryDirectory):V
- visitEntryFile(com.intellij.openapi.vcs.changes.ignore.psi.IgnoreEntryFile):V
- visitNegation(com.intellij.openapi.vcs.changes.ignore.psi.IgnoreNegation):V
- visitPsiElement(com.intellij.psi.PsiElement):V
- visitSyntax(com.intellij.openapi.vcs.changes.ignore.psi.IgnoreSyntax):V
f:com.intellij.openapi.vcs.changes.ignore.psi.util.IgnoreFileUtilKt
- sf:addNewElements(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.util.List,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vfs.VirtualFile):V
- bs:addNewElements$default(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.util.List,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vfs.VirtualFile,I,java.lang.Object):V
- sf:addNewElementsToIgnoreBlock(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.changes.IgnoredFileDescriptor[]):V
- sf:addNewElementsToIgnoreBlock(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vcs.changes.IgnoredFileDescriptor[]):V
- bs:addNewElementsToIgnoreBlock$default(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.changes.IgnoredFileDescriptor[],I,java.lang.Object):V
- sf:updateIgnoreBlock(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vcs.changes.IgnoredFileDescriptor[]):V
a:com.intellij.openapi.vcs.changes.issueLinks.AbstractBaseTagMouseListener
- com.intellij.openapi.vcs.changes.issueLinks.LinkMouseListenerBase
- <init>():V
- onClick(java.awt.event.MouseEvent,I):Z
f:com.intellij.openapi.vcs.changes.issueLinks.IssueLinkHtmlRenderer
- s:formatTextIntoHtml(com.intellij.openapi.project.Project,java.lang.String):java.lang.String
- s:formatTextWithLinks(com.intellij.openapi.project.Project,java.lang.String):java.lang.String
- s:formatTextWithLinks(com.intellij.openapi.project.Project,java.lang.String,com.intellij.util.containers.Convertor):java.lang.String
c:com.intellij.openapi.vcs.changes.issueLinks.IssueLinkRenderer
- <init>(com.intellij.openapi.project.Project,com.intellij.ui.SimpleColoredComponent):V
- appendTextWithLinks(java.lang.String):java.util.List
- appendTextWithLinks(java.lang.String,com.intellij.ui.SimpleTextAttributes):java.util.List
c:com.intellij.openapi.vcs.changes.issueLinks.TableLinkMouseListener
- com.intellij.openapi.vcs.changes.issueLinks.AbstractBaseTagMouseListener
- <init>():V
- getTagAt(java.awt.event.MouseEvent):java.lang.Object
- p:tryGetTag(java.awt.event.MouseEvent,javax.swing.JTable,I,I,javax.swing.table.TableCellRenderer):java.lang.Object
a:com.intellij.openapi.vcs.changes.patch.AbstractFilePatchInProgress
- p:myConflicts:java.lang.Boolean
- p:myCurrentBase:com.intellij.openapi.vfs.VirtualFile
- p:myIoCurrentBase:java.io.File
- p:myNewContentRevision:com.intellij.openapi.vcs.changes.ContentRevision
- pf:myPatch:com.intellij.openapi.diff.impl.patch.FilePatch
- pf:myStatus:com.intellij.openapi.vcs.changes.patch.FilePatchStatus
- p:<init>(com.intellij.openapi.diff.impl.patch.FilePatch,java.util.Collection,com.intellij.openapi.vfs.VirtualFile):V
- baseExistsOrAdded():Z
- canDown():Z
- canUp():Z
- p:detectNewFilePathForMovedOrModified():com.intellij.openapi.vcs.FilePath
- down():V
- equals(java.lang.Object):Z
- getAutoBasesCopy():java.util.List
- getBase():com.intellij.openapi.vfs.VirtualFile
- getChange():com.intellij.openapi.vcs.changes.patch.AbstractFilePatchInProgress$PatchChange
- getCurrentBase():com.intellij.openapi.vfs.VirtualFile
- getCurrentPath():java.lang.String
- getCurrentStrip():I
- a:getDiffRequestProducers(com.intellij.openapi.project.Project,com.intellij.openapi.diff.impl.patch.PatchReader):com.intellij.diff.chains.DiffRequestProducer
- p:getFilePath():com.intellij.openapi.vcs.FilePath
- getIoCurrentBase():java.io.File
- getKey():com.intellij.openapi.util.Couple
- pa:getNewContentRevision():com.intellij.openapi.vcs.changes.ContentRevision
- getOriginalBeforePath():java.lang.String
- getPatch():com.intellij.openapi.diff.impl.patch.FilePatch
- getStatus():com.intellij.openapi.vcs.changes.patch.FilePatchStatus
- hashCode():I
- p:isConflictingChange():Z
- reset():V
- setAutoBases(java.util.Collection):V
- setCreatedCurrentBase(com.intellij.openapi.vfs.VirtualFile):V
- setNewBase(com.intellij.openapi.vfs.VirtualFile):V
- setZero():V
- up():V
f:com.intellij.openapi.vcs.changes.patch.AbstractFilePatchInProgress$PatchChange
- com.intellij.openapi.vcs.changes.Change
- <init>(com.intellij.openapi.vcs.changes.ContentRevision,com.intellij.openapi.vcs.changes.ContentRevision,com.intellij.openapi.vcs.changes.patch.AbstractFilePatchInProgress):V
- getPatchInProgress():com.intellij.openapi.vcs.changes.patch.AbstractFilePatchInProgress
- isValid():Z
f:com.intellij.openapi.vcs.changes.patch.AppliedTextPatch
- s:create(java.util.List):com.intellij.openapi.vcs.changes.patch.AppliedTextPatch
- getHunks():java.util.List
c:com.intellij.openapi.vcs.changes.patch.AppliedTextPatch$AppliedSplitPatchHunk
- <init>(com.intellij.openapi.diff.impl.patch.apply.GenericPatchApplier$SplitHunk,I,I,com.intellij.openapi.vcs.changes.patch.AppliedTextPatch$HunkStatus):V
- getAppliedTo():com.intellij.diff.util.LineRange
- getContextAfter():java.util.List
- getContextBefore():java.util.List
- getDeletedLines():java.util.List
- getInsertedLines():java.util.List
- getLineRangeAfter():com.intellij.diff.util.LineRange
- getLineRangeBefore():com.intellij.diff.util.LineRange
- getStatus():com.intellij.openapi.vcs.changes.patch.AppliedTextPatch$HunkStatus
e:com.intellij.openapi.vcs.changes.patch.AppliedTextPatch$HunkStatus
- java.lang.Enum
- sf:ALREADY_APPLIED:com.intellij.openapi.vcs.changes.patch.AppliedTextPatch$HunkStatus
- sf:EXACTLY_APPLIED:com.intellij.openapi.vcs.changes.patch.AppliedTextPatch$HunkStatus
- sf:NOT_APPLIED:com.intellij.openapi.vcs.changes.patch.AppliedTextPatch$HunkStatus
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.patch.AppliedTextPatch$HunkStatus
- s:values():com.intellij.openapi.vcs.changes.patch.AppliedTextPatch$HunkStatus[]
f:com.intellij.openapi.vcs.changes.patch.ApplyPatchAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:showAndGetApplyPatch(com.intellij.openapi.project.Project,java.io.File):java.lang.Boolean
- s:showApplyPatch(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.vcs.changes.patch.ApplyPatchDefaultExecutor
- com.intellij.openapi.vcs.changes.patch.ApplyPatchExecutor
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project):V
- apply(java.util.List,com.intellij.util.containers.MultiMap,com.intellij.openapi.vcs.changes.LocalChangeList,java.lang.String,com.intellij.openapi.util.ThrowableComputable):V
- s:applyAdditionalInfoBefore(com.intellij.openapi.project.Project,com.intellij.openapi.util.ThrowableComputable,com.intellij.openapi.vcs.changes.CommitContext):V
- getName():java.lang.String
- p:getPatchAppliers(com.intellij.util.containers.MultiMap,com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.vcs.changes.CommitContext):java.util.Collection
- s:pathsFromGroups(com.intellij.util.containers.MultiMap):java.util.Set
c:com.intellij.openapi.vcs.changes.patch.ApplyPatchDifferentiatedDialog
- com.intellij.openapi.ui.DialogWrapper
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.patch.ApplyPatchExecutor,java.util.List,com.intellij.openapi.vcs.changes.patch.ApplyPatchMode,com.intellij.openapi.vfs.VirtualFile):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.patch.ApplyPatchExecutor,java.util.List,com.intellij.openapi.vcs.changes.patch.ApplyPatchMode,com.intellij.openapi.vfs.VirtualFile,java.util.List,com.intellij.openapi.vcs.changes.ChangeList,java.util.List,java.util.Collection,java.lang.String,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.patch.ApplyPatchExecutor,java.util.List,com.intellij.openapi.vcs.changes.patch.ApplyPatchMode,java.util.List,com.intellij.openapi.vcs.changes.ChangeList):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- s:createSelectPatchDescriptor():com.intellij.openapi.fileChooser.FileChooserDescriptor
- p:doOKAction():V
- p:getDimensionServiceKey():java.lang.String
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- setHelpId(java.lang.String):V
com.intellij.openapi.vcs.changes.patch.ApplyPatchExecutor
- a:apply(java.util.List,com.intellij.util.containers.MultiMap,com.intellij.openapi.vcs.changes.LocalChangeList,java.lang.String,com.intellij.openapi.util.ThrowableComputable):V
- a:getName():java.lang.String
c:com.intellij.openapi.vcs.changes.patch.ApplyPatchForBaseRevisionTexts
- <init>(java.lang.String,java.lang.String,java.lang.String,Z):V
- s:create(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.diff.impl.patch.TextFilePatch,java.lang.CharSequence):com.intellij.openapi.vcs.changes.patch.ApplyPatchForBaseRevisionTexts
- getBase():java.lang.String
- getLocal():java.lang.String
- getPatched():java.lang.String
- isAppliedSomehow():Z
- isBaseRevisionLoaded():Z
e:com.intellij.openapi.vcs.changes.patch.ApplyPatchMode
- java.lang.Enum
- sf:APPLY:com.intellij.openapi.vcs.changes.patch.ApplyPatchMode
- sf:APPLY_PATCH_IN_MEMORY:com.intellij.openapi.vcs.changes.patch.ApplyPatchMode
- sf:UNSHELVE:com.intellij.openapi.vcs.changes.patch.ApplyPatchMode
- getTitle():java.lang.String
- isCanChangePatchFile():Z
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.patch.ApplyPatchMode
- s:values():com.intellij.openapi.vcs.changes.patch.ApplyPatchMode[]
f:com.intellij.openapi.vcs.changes.patch.BlobIndexUtil
- sf:NOT_COMMITTED_HASH:java.lang.String
- <init>():V
- s:getBeforeAfterSha1(com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.util.Couple
- s:getSha1(java.io.File):java.lang.String
- s:getSha1(B[]):java.lang.String
f:com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor
- com.intellij.openapi.vcs.changes.LocalCommitExecutor
- <init>(com.intellij.openapi.project.Project):V
- s:createCommitSession(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor$PatchBuilder,com.intellij.openapi.vcs.changes.CommitContext):com.intellij.openapi.vcs.changes.CommitSession
- createCommitSession(com.intellij.openapi.vcs.changes.CommitContext):com.intellij.openapi.vcs.changes.CommitSession
- getActionText():java.lang.String
- getHelpId():java.lang.String
- supportsPartialCommit():Z
- s:writePatchToClipboard(com.intellij.openapi.project.Project,java.nio.file.Path,java.util.Collection,java.lang.String,Z,Z,com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor$PatchBuilder,com.intellij.openapi.vcs.changes.CommitContext):V
f:com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor$DefaultPatchBuilder
- com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor$PatchBuilder
- <init>(com.intellij.openapi.project.Project):V
- buildPatches(java.nio.file.Path,java.util.Collection,Z,Z):java.util.List
com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor$PatchBuilder
- a:buildPatches(java.nio.file.Path,java.util.Collection,Z,Z):java.util.List
- isReverseSupported():Z
f:com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor$ShelfPatchBuilder
- com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor$PatchBuilder
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList,java.util.List):V
- buildPatches(java.nio.file.Path,java.util.Collection,Z,Z):java.util.List
- isReverseSupported():Z
e:com.intellij.openapi.vcs.changes.patch.FilePatchStatus
- java.lang.Enum
- sf:ADDED:com.intellij.openapi.vcs.changes.patch.FilePatchStatus
- sf:DELETED:com.intellij.openapi.vcs.changes.patch.FilePatchStatus
- sf:MODIFIED:com.intellij.openapi.vcs.changes.patch.FilePatchStatus
- sf:MOVED_OR_RENAMED:com.intellij.openapi.vcs.changes.patch.FilePatchStatus
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.patch.FilePatchStatus
- s:values():com.intellij.openapi.vcs.changes.patch.FilePatchStatus[]
f:com.intellij.openapi.vcs.changes.patch.GitPatchWriter
- <init>():V
- s:writeGitHeader(java.io.Writer,java.nio.file.Path,com.intellij.openapi.diff.impl.patch.FilePatch,java.lang.String):V
f:com.intellij.openapi.vcs.changes.patch.ImportToShelfExecutor
- com.intellij.openapi.vcs.changes.patch.ApplyPatchExecutor
- <init>(com.intellij.openapi.project.Project):V
- apply(java.util.List,com.intellij.util.containers.MultiMap,com.intellij.openapi.vcs.changes.LocalChangeList,java.lang.String,com.intellij.openapi.util.ThrowableComputable):V
- getName():java.lang.String
f:com.intellij.openapi.vcs.changes.patch.MatchPatchPaths
- <init>(com.intellij.openapi.project.Project):V
- execute(java.util.List):java.util.List
- execute(java.util.List,Z):java.util.List
f:com.intellij.openapi.vcs.changes.patch.PatchDiffRequestFactory
- <init>():V
- s:createBadDiffRequest(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vcs.changes.patch.AppliedTextPatch,java.lang.String,java.lang.String,java.lang.String,java.lang.String):com.intellij.diff.requests.DiffRequest
- s:createBadMergeRequest(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vcs.changes.patch.AppliedTextPatch,com.intellij.util.Consumer):com.intellij.diff.merge.MergeRequest
- s:createBadMergeRequest(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vcs.changes.patch.AppliedTextPatch,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.intellij.util.Consumer):com.intellij.diff.merge.MergeRequest
- s:createConflictDiffRequest(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.diff.impl.patch.TextFilePatch,java.lang.String,com.intellij.openapi.vcs.changes.patch.ApplyPatchForBaseRevisionTexts,java.lang.String):com.intellij.diff.requests.DiffRequest
- s:createDiffRequest(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change,java.lang.String,com.intellij.openapi.util.UserDataHolder,com.intellij.openapi.progress.ProgressIndicator):com.intellij.diff.requests.DiffRequest
- s:createMergeRequest(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.String,java.lang.String,com.intellij.util.Consumer):com.intellij.diff.merge.MergeRequest
- s:createMergeRequest(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.openapi.vfs.VirtualFile,java.util.List,java.lang.String,java.util.List,com.intellij.util.Consumer):com.intellij.diff.merge.MergeRequest
c:com.intellij.openapi.vcs.changes.patch.PatchFileType
- com.intellij.openapi.fileTypes.FileType
- sf:INSTANCE:com.intellij.openapi.vcs.changes.patch.PatchFileType
- sf:NAME:java.lang.String
- getDefaultExtension():java.lang.String
- getDescription():java.lang.String
- getDisplayName():java.lang.String
- getIcon():javax.swing.Icon
- getName():java.lang.String
- isBinary():Z
- s:isPatchFile(com.intellij.openapi.vfs.VirtualFile):Z
- s:isPatchFile(java.io.File):Z
f:com.intellij.openapi.vcs.changes.patch.PatchWriter
- <init>():V
- s:calculateBaseDirForWritingPatch(com.intellij.openapi.project.Project,java.util.Collection):java.nio.file.Path
- s:shouldForceUnixLineSeparator(com.intellij.openapi.project.Project):Z
- s:writeAsPatchToClipboard(com.intellij.openapi.project.Project,java.util.List,java.lang.String,java.nio.file.Path,com.intellij.openapi.vcs.changes.CommitContext):V
- s:writeAsPatchToClipboard(com.intellij.openapi.project.Project,java.util.List,java.nio.file.Path,com.intellij.openapi.vcs.changes.CommitContext):V
- s:writePatches(com.intellij.openapi.project.Project,java.nio.file.Path,java.nio.file.Path,java.util.List,com.intellij.openapi.vcs.changes.CommitContext):V
- s:writePatches(com.intellij.openapi.project.Project,java.nio.file.Path,java.nio.file.Path,java.util.List,com.intellij.openapi.vcs.changes.CommitContext,java.nio.charset.Charset):V
- s:writePatches(com.intellij.openapi.project.Project,java.nio.file.Path,java.nio.file.Path,java.util.List,java.lang.String,com.intellij.openapi.vcs.changes.CommitContext,java.nio.charset.Charset):V
f:com.intellij.openapi.vcs.changes.patch.TextFilePatchInProgress
- com.intellij.openapi.vcs.changes.patch.AbstractFilePatchInProgress
- getDiffRequestProducers(com.intellij.openapi.project.Project,com.intellij.openapi.diff.impl.patch.PatchReader):com.intellij.diff.chains.DiffRequestProducer
- getNewContentRevision():com.intellij.openapi.vcs.changes.ContentRevision
c:com.intellij.openapi.vcs.changes.patch.tool.ApplyPatchDiffRequest
- com.intellij.diff.requests.DiffRequest
- com.intellij.openapi.util.UserDataHolder
- <init>(com.intellij.diff.contents.DocumentContent,com.intellij.openapi.vcs.changes.patch.AppliedTextPatch,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- getLocalContent():java.lang.String
- getLocalTitle():java.lang.String
- getPatch():com.intellij.openapi.vcs.changes.patch.AppliedTextPatch
- getPatchTitle():java.lang.String
- getResultContent():com.intellij.diff.contents.DocumentContent
- getResultTitle():java.lang.String
- getTitle():java.lang.String
c:com.intellij.openapi.vcs.changes.patch.tool.ApplyPatchMergeRequest
- com.intellij.diff.merge.MergeRequest
- com.intellij.openapi.util.UserDataHolder
- <init>(com.intellij.openapi.project.Project,com.intellij.diff.contents.DocumentContent,com.intellij.openapi.vcs.changes.patch.AppliedTextPatch,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- applyResult(com.intellij.diff.merge.MergeResult):V
- getLocalContent():java.lang.String
- getLocalTitle():java.lang.String
- getPatch():com.intellij.openapi.vcs.changes.patch.AppliedTextPatch
- getPatchTitle():java.lang.String
- getProject():com.intellij.openapi.project.Project
- getResultContent():com.intellij.diff.contents.DocumentContent
- getResultTitle():java.lang.String
- getTitle():java.lang.String
f:com.intellij.openapi.vcs.changes.patch.tool.PatchDiffRequest
- com.intellij.diff.requests.DiffRequest
- <init>(com.intellij.openapi.diff.impl.patch.TextFilePatch):V
- <init>(com.intellij.openapi.diff.impl.patch.TextFilePatch,java.lang.String,java.lang.String,java.lang.String):V
- f:getContentTitle1():java.lang.String
- f:getContentTitle2():java.lang.String
- f:getPatch():com.intellij.openapi.diff.impl.patch.TextFilePatch
- getTitle():java.lang.String
a:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesOperationsGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:isApplicable(com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider$PatchObject):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider
- a:buildPatchesTree(com.intellij.openapi.vcs.changes.ui.TreeModelBuilder,Z):V
- a:getApplyAction():com.intellij.openapi.actionSystem.AnAction
- a:getDataClass():java.lang.Class
- a:getPopAction():com.intellij.openapi.actionSystem.AnAction
- a:getTag():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- a:isEmpty():Z
- a:subscribeToPatchesListChanges(com.intellij.openapi.Disposable,kotlin.jvm.functions.Function0):V
- a:uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink,java.lang.Iterable):V
com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider$ChangeObject
- com.intellij.openapi.vcs.changes.ui.PresentableChange
- asChange():com.intellij.openapi.vcs.changes.Change
- a:createDiffRequestProducer(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ui.ChangeDiffRequestChain$Producer
- a:createDiffWithLocalRequestProducer(com.intellij.openapi.project.Project,Z):com.intellij.openapi.vcs.changes.ui.ChangeDiffRequestChain$Producer
- getOriginalFilePath():com.intellij.openapi.vcs.FilePath
a:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider$LoadingResult
f:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider$LoadingResult$Changes
- com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider$LoadingResult
- <init>(java.util.Collection):V
- f:getChanges():java.util.Collection
f:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider$LoadingResult$Error
- com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider$LoadingResult
- <init>(java.lang.String):V
- <init>(java.lang.Throwable):V
- f:getMessage():java.lang.String
com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider$PatchObject
- a:cachedChanges():java.util.Collection
- a:getData():java.lang.Object
- a:getDiffPreviewTitle(java.lang.String):java.lang.String
- getLabelComponent(com.intellij.openapi.vcs.changes.ui.ChangesTree,I,Z):javax.swing.JComponent
- a:loadChanges():java.util.concurrent.CompletableFuture
f:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesTree
- com.intellij.openapi.vcs.changes.ui.AsyncChangesTree
- sf:Companion:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesTree$Companion
- <init>(com.intellij.openapi.project.Project,java.util.List,kotlin.jvm.functions.Function1,com.intellij.openapi.Disposable):V
- getToggleClickCount():I
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesTree$Companion
f:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesTree$TagWithCounterChangesBrowserNode
- com.intellij.openapi.vcs.changes.ui.TagChangesBrowserNode
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag,Z,java.lang.Integer):V
- b:<init>(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag,Z,java.lang.Integer,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.lang.String,Z,java.lang.Integer):V
- b:<init>(java.lang.String,Z,java.lang.Integer,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- getSortWeight():I
c:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesUi
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiDataProvider
- sf:Companion:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesUi$Companion
- sf:SAVED_PATCHES_UI_PLACE:java.lang.String
- <init>(com.intellij.openapi.project.Project,java.util.List,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,com.intellij.openapi.Disposable):V
- dispose():V
- pf:getPatchesTree():com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesTree
- f:showFirstUnderObject(com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider,java.lang.Object):V
- f:showFirstUnderProvider(com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- f:updateLayout():V
f:com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesUi$Companion
- f:getSAVED_PATCHES_UI():com.intellij.openapi.actionSystem.DataKey
- f:getSAVED_PATCH_CHANGES():com.intellij.openapi.actionSystem.DataKey
- f:getSAVED_PATCH_SELECTED_CHANGES():com.intellij.openapi.actionSystem.DataKey
- f:getSAVED_PATCH_SELECTED_PATCH():com.intellij.openapi.actionSystem.DataKey
f:com.intellij.openapi.vcs.changes.savedPatches.ShelfProvider
- com.intellij.openapi.Disposable
- com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- buildPatchesTree(com.intellij.openapi.vcs.changes.ui.TreeModelBuilder,Z):V
- dispose():V
- getApplyAction():com.intellij.openapi.actionSystem.AnAction
- getDataClass():java.lang.Class
- getPopAction():com.intellij.openapi.actionSystem.AnAction
- getTag():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- isEmpty():Z
- subscribeToPatchesListChanges(com.intellij.openapi.Disposable,kotlin.jvm.functions.Function0):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink,java.lang.Iterable):V
f:com.intellij.openapi.vcs.changes.savedPatches.ShelfProvider$ShelfObject
- com.intellij.openapi.vcs.changes.savedPatches.SavedPatchesProvider$PatchObject
- <init>(com.intellij.openapi.vcs.changes.savedPatches.ShelfProvider,com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList):V
- cachedChanges():java.util.Collection
- getData():com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList
- getDiffPreviewTitle(java.lang.String):java.lang.String
- loadChanges():java.util.concurrent.CompletableFuture
f:com.intellij.openapi.vcs.changes.savedPatches.ShelfProvider$ShelvedChangeListChangesBrowserNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- <init>(com.intellij.openapi.vcs.changes.savedPatches.ShelfProvider$ShelfObject):V
- getTextPresentation():java.lang.String
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
f:com.intellij.openapi.vcs.changes.shelf.ShelveChangesAction
- com.intellij.openapi.vcs.actions.commit.AbstractCommitChangesAction
- <init>():V
c:com.intellij.openapi.vcs.changes.shelf.ShelveChangesCommitExecutor
- com.intellij.openapi.vcs.changes.LocalCommitExecutor
- <init>(com.intellij.openapi.project.Project):V
- createCommitSession(com.intellij.openapi.vcs.changes.CommitContext):com.intellij.openapi.vcs.changes.CommitSession
- getActionText():java.lang.String
- getHelpId():java.lang.String
- supportsPartialCommit():Z
f:com.intellij.openapi.vcs.changes.shelf.ShelveChangesManager
- com.intellij.openapi.components.PersistentStateComponent
- sf:DEFAULT_PROJECT_PRESENTATION_PATH:java.lang.String
- sf:SHELF_TOPIC:com.intellij.util.messages.Topic
- checkAndMigrateUnderProgress(java.io.File,java.io.File,Z):V
- cleanUnshelved(J):V
- gatherPatchFiles(java.util.Collection):java.util.List
- getAllLists():java.util.List
- s:getDefaultShelfPath(com.intellij.openapi.project.Project):java.nio.file.Path
- getDeletedLists():java.util.List
- getGrouping():java.util.Collection
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.shelf.ShelveChangesManager
- getRecycledShelvedChangeLists():java.util.List
- s:getShelfPath(com.intellij.openapi.project.Project):java.lang.String
- getShelfResourcesDirectory():java.io.File
- getShelvedChangeLists():java.util.List
- getShelvingFiles():java.util.Collection
- getState():org.jdom.Element
- importChangeLists(java.util.Collection,java.util.function.Consumer):java.util.List
- importFilePatches(java.lang.String,java.util.List,java.util.List):com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList
- isRemoveFilesFromShelf():Z
- isShowRecycled():Z
- s:loadPatches(com.intellij.openapi.project.Project,java.nio.file.Path,com.intellij.openapi.vcs.changes.CommitContext):java.util.List
- loadState(org.jdom.Element):V
- renameChangeList(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList,java.lang.String):V
- restoreList(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList,java.util.Date):V
- setGrouping(java.util.Collection):V
- setRemoveFilesFromShelf(Z):V
- setShowRecycled(Z):V
- shelveChanges(java.util.Collection,java.lang.String,Z):com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList
- shelveChanges(java.util.Collection,java.lang.String,Z,Z):com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList
- shelveChanges(java.util.Collection,java.lang.String,Z,Z,Z):com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList
- shelveSilentlyUnderProgress(java.util.List,Z):V
- s:suggestPatchName(com.intellij.openapi.project.Project,java.lang.String,java.io.File,java.lang.String):java.io.File
- unshelveChangeList(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList,java.util.List,java.util.List,com.intellij.openapi.vcs.changes.LocalChangeList,Z):V
- unshelveChangeList(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList,java.util.List,java.util.List,com.intellij.openapi.vcs.changes.LocalChangeList,Z,Z,Z,java.lang.String,java.lang.String,Z):com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- unshelveChangeList(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList,java.util.List,java.util.List,com.intellij.openapi.vcs.changes.LocalChangeList,Z,Z,Z,java.lang.String,java.lang.String,Z,Z):com.intellij.openapi.diff.impl.patch.ApplyPatchStatus
- unshelveSilentlyAsynchronously(com.intellij.openapi.project.Project,java.util.List,java.util.List,java.util.List,com.intellij.openapi.vcs.changes.LocalChangeList):V
- unshelveSilentlyAsynchronously(com.intellij.openapi.project.Project,java.util.List,java.util.List,java.util.List,com.intellij.openapi.vcs.changes.LocalChangeList,Z):V
- updateListAfterUnshelve(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList,java.util.List,java.util.List,com.intellij.openapi.vcs.changes.CommitContext):V
f:com.intellij.openapi.vcs.changes.shelf.ShelveChangesManager$State
- groupingKeys:java.util.TreeSet
- myRemoveFilesFromShelf:Z
- myShowRecycled:Z
- <init>():V
f:com.intellij.openapi.vcs.changes.shelf.ShelvedBinaryFilePatch
- com.intellij.openapi.diff.impl.patch.FilePatch
- getAfterFileName():java.lang.String
- getBeforeFileName():java.lang.String
- isDeletedFile():Z
- isNewFile():Z
- s:patchCopy(com.intellij.openapi.vcs.changes.shelf.ShelvedBinaryFilePatch):com.intellij.openapi.vcs.changes.shelf.ShelvedBinaryFilePatch
f:com.intellij.openapi.vcs.changes.shelf.ShelvedChange
- s:copyToNewPatch(com.intellij.openapi.project.Project,java.nio.file.Path,com.intellij.openapi.vcs.changes.shelf.ShelvedChange):com.intellij.openapi.vcs.changes.shelf.ShelvedChange
- s:create(com.intellij.openapi.project.Project,java.nio.file.Path,java.lang.String,java.lang.String,com.intellij.openapi.vcs.FileStatus):com.intellij.openapi.vcs.changes.shelf.ShelvedChange
- equals(java.lang.Object):Z
- getAfterPath():java.lang.String
- getBeforePath():java.lang.String
- getChange():com.intellij.openapi.vcs.changes.Change
- getChange(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.Change
- getFileStatus():com.intellij.openapi.vcs.FileStatus
- getPatchPath():java.nio.file.Path
- hashCode():I
- isConflictingChange():Z
f:com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList
- com.intellij.openapi.options.ExternalizableScheme
- <init>(java.nio.file.Path,java.lang.String,java.util.List,java.util.List):V
- getBinaryFiles():java.util.List
- getChanges():java.util.List
- getChanges(com.intellij.openapi.project.Project):java.util.List
- getChangesLoadingError():java.lang.String
- getDate():java.util.Date
- getDescription():java.lang.String
- getName():java.lang.String
- getPath():java.nio.file.Path
- isDeleted():Z
- isMarkedToDelete():Z
- isRecycled():Z
- isValid():Z
- loadChangesIfNeeded(com.intellij.openapi.project.Project):V
- markToDelete(Z):V
- s:readExternal(org.jdom.Element,com.intellij.openapi.components.PathMacroSubstitutor):com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList
- setDate(java.util.Date):V
- setDeleted(Z):V
- setName(java.lang.String):V
- setRecycled(Z):V
- updateDate():V
- s:writeExternal(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList,org.jdom.Element,com.intellij.openapi.components.PathMacroSubstitutor):V
c:com.intellij.openapi.vcs.changes.shelf.ShelvedChangesViewManager
- com.intellij.openapi.Disposable
- sf:HELP_ID:java.lang.String
- sf:SHELVED_BINARY_FILE_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:SHELVED_CHANGELIST_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:SHELVED_CHANGES_TREE:com.intellij.openapi.actionSystem.DataKey
- sf:SHELVED_CHANGE_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:SHELVED_DELETED_CHANGELIST_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:SHELVED_RECYCLED_CHANGELIST_KEY:com.intellij.openapi.actionSystem.DataKey
- p:activateContent():V
- activateView(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList):V
- p:addContent(com.intellij.ui.content.Content):V
- s:deleteShelves(com.intellij.openapi.project.Project,java.util.List):V
- dispose():V
- s:getBinaryShelveChanges(com.intellij.openapi.actionSystem.DataContext):java.util.List
- s:getExactlySelectedLists(com.intellij.openapi.actionSystem.DataContext):java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.shelf.ShelvedChangesViewManager
- s:getSelectedShelvedChangeNames(com.intellij.openapi.actionSystem.DataContext):java.util.List
- s:getShelveChanges(com.intellij.openapi.actionSystem.DataContext):java.util.List
- s:getShelvedLists(com.intellij.openapi.actionSystem.DataContext):java.util.List
- p:removeContent(com.intellij.ui.content.Content):V
- selectShelvedList(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList):V
- startEditing(com.intellij.openapi.vcs.changes.shelf.ShelvedChangeList):V
- updateOnVcsMappingsChanged():V
c:com.intellij.openapi.vcs.changes.shelf.ShelvedChangesViewManager$ContentPreloader
- com.intellij.openapi.vcs.changes.ui.ChangesViewContentProvider$Preloader
- <init>(com.intellij.openapi.project.Project):V
- preloadTabContent(com.intellij.ui.content.Content):V
c:com.intellij.openapi.vcs.changes.shelf.ShelvedChangesViewManager$ContentProvider
- com.intellij.openapi.vcs.changes.ui.ChangesViewContentProvider
- <init>(com.intellij.openapi.project.Project):V
- initTabContent(com.intellij.ui.content.Content):V
c:com.intellij.openapi.vcs.changes.shelf.ShelvedChangesViewManager$DisplayNameSupplier
- java.util.function.Supplier
- <init>():V
- get():java.lang.String
c:com.intellij.openapi.vcs.changes.shelf.UnshelveWithDialogAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.openapi.vcs.changes.ui.AbstractChangesBrowserFilePathNode
- com.intellij.ide.util.treeView.PathElementIdProvider
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- sf:Companion:com.intellij.openapi.vcs.changes.ui.AbstractChangesBrowserFilePathNode$Companion
- <init>(java.lang.Object,com.intellij.openapi.vcs.FileStatus):V
- compareUserObjects(java.lang.Object):I
- pa:filePath(java.lang.Object):com.intellij.openapi.vcs.FilePath
- getBackgroundColor(com.intellij.openapi.project.Project):java.awt.Color
- getFlattenedElements():java.util.List
- f:getOriginText():java.lang.String
- getPathElementId():java.lang.String
- f:getRelativeFilePath(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):java.lang.String
- p:getRelativePath(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,com.intellij.openapi.vcs.FilePath):java.lang.String
- getSortWeight():I
- f:getStatus():com.intellij.openapi.vcs.FileStatus
- getTextPresentation():java.lang.String
- p:isDirectory():Z
- p:isFile():Z
- p:originPath(java.lang.Object):com.intellij.openapi.vcs.FilePath
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
- sf:safeCastToFilePath(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.FilePath
f:com.intellij.openapi.vcs.changes.ui.AbstractChangesBrowserFilePathNode$Companion
- f:safeCastToFilePath(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.FilePath
a:com.intellij.openapi.vcs.changes.ui.AsyncChangesBrowserBase
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserBase
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- pf:buildTreeModel():javax.swing.tree.DefaultTreeModel
- p:createTreeList(com.intellij.openapi.project.Project,Z,Z):com.intellij.openapi.vcs.changes.ui.AsyncChangesTree
- pa:getChangesTreeModel():com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeModel
- getViewer():com.intellij.openapi.vcs.changes.ui.AsyncChangesTree
- f:shutdown():V
a:com.intellij.openapi.vcs.changes.ui.AsyncChangesTree
- com.intellij.openapi.vcs.changes.ui.ChangesTree
- sf:Companion:com.intellij.openapi.vcs.changes.ui.AsyncChangesTree$Companion
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- <init>(com.intellij.openapi.project.Project,Z,Z,Z):V
- f:getBusy():kotlinx.coroutines.flow.Flow
- pa:getChangesTreeModel():com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeModel
- getFileColorForPath(javax.swing.tree.TreePath):java.awt.Color
- getPreferredScrollableViewportSize():java.awt.Dimension
- f:getScope():kotlinx.coroutines.CoroutineScope
- f:getShouldShowBusyIconIfNeeded():Z
- f:invokeAfterRefresh(java.lang.Runnable):V
- p:isEmptyTextVisible():Z
- rebuildTree():V
- rebuildTree(com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy):V
- f:requestRefresh():V
- requestRefresh(com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy):V
- f:requestRefresh(com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy,java.lang.Runnable):V
- f:requestRefresh(java.lang.Runnable):V
- f:setShouldShowBusyIconIfNeeded(Z):V
- p:shouldShowBusyIconIfNeeded():Z
- f:shutdown():V
f:com.intellij.openapi.vcs.changes.ui.AsyncChangesTree$Companion
a:com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeImpl
- com.intellij.openapi.vcs.changes.ui.AsyncChangesTree
- <init>(com.intellij.openapi.project.Project,Z,Z,java.lang.Class):V
- <init>(com.intellij.openapi.project.Project,Z,Z,java.lang.Class,java.util.List):V
- pa:buildTreeModel(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,java.util.List):javax.swing.tree.DefaultTreeModel
- getChanges():java.util.List
- p:getChangesTreeModel():com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeModel
- getDisplayedChanges():java.util.List
- getIncludedChanges():java.util.Collection
- getSelectedChanges():java.util.List
- setChangesToDisplay(java.util.Collection):V
c:com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeImpl$Changes
- com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeImpl
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- <init>(com.intellij.openapi.project.Project,Z,Z,java.util.List):V
- p:buildTreeModel(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,java.util.List):javax.swing.tree.DefaultTreeModel
c:com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeImpl$FilePaths
- com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeImpl
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- <init>(com.intellij.openapi.project.Project,Z,Z,java.util.List):V
- p:buildTreeModel(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,java.util.List):javax.swing.tree.DefaultTreeModel
c:com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeImpl$VirtualFiles
- com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeImpl
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- <init>(com.intellij.openapi.project.Project,Z,Z,java.util.List):V
- p:buildTreeModel(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,java.util.List):javax.swing.tree.DefaultTreeModel
com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeModel
- a:buildTreeModel(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,kotlin.coroutines.Continuation):java.lang.Object
a:com.intellij.openapi.vcs.changes.ui.BaseChangesGroupingPolicy
- com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicy
- sf:Companion:com.intellij.openapi.vcs.changes.ui.BaseChangesGroupingPolicy$Companion
- <init>():V
- sf:getCachingRoot(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- pf:getNextPolicy():com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicy
- sf:markCachingRoot(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
- pf:resolveVirtualFile(com.intellij.openapi.vcs.changes.ui.StaticFilePath):com.intellij.openapi.vfs.VirtualFile
- f:setNextGroupingPolicy(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicy):V
- pf:setNextPolicy(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicy):V
f:com.intellij.openapi.vcs.changes.ui.BaseChangesGroupingPolicy$Companion
- f:getCachingRoot(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- f:markCachingRoot(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
a:com.intellij.openapi.vcs.changes.ui.BaseInclusionModel
- com.intellij.openapi.vcs.changes.InclusionModel
- <init>():V
- addInclusionListener(com.intellij.openapi.vcs.changes.InclusionListener):V
- pf:fireInclusionChanged():V
- removeInclusionListener(com.intellij.openapi.vcs.changes.InclusionListener):V
c:com.intellij.openapi.vcs.changes.ui.BooleanCommitOption
- com.intellij.openapi.options.UiDslUnnamedConfigurable$Simple
- com.intellij.openapi.vcs.ui.RefreshableOnComponent
- sf:Companion:com.intellij.openapi.vcs.changes.ui.BooleanCommitOption$Companion
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,kotlin.jvm.functions.Function0,java.util.function.Consumer):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,kotlin.reflect.KMutableProperty0):V
- <init>(com.intellij.openapi.vcs.CheckinProjectPanel,java.lang.String,Z,kotlin.jvm.functions.Function0,java.util.function.Consumer):V
- <init>(com.intellij.openapi.vcs.CheckinProjectPanel,java.lang.String,Z,kotlin.reflect.KMutableProperty0):V
- sf:create(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.checkin.CheckinHandler,Z,java.lang.String,kotlin.jvm.functions.Function0,java.util.function.Consumer):com.intellij.openapi.vcs.ui.RefreshableOnComponent
- sf:create(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.checkin.CheckinHandler,Z,java.lang.String,kotlin.reflect.KMutableProperty0):com.intellij.openapi.vcs.ui.RefreshableOnComponent
- f:createContent(com.intellij.ui.dsl.builder.Panel):V
- sf:createLink(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.checkin.CheckinHandler,Z,java.lang.String,javax.swing.Icon,kotlin.jvm.functions.Function0,java.util.function.Consumer,java.lang.String,com.intellij.ui.components.labels.LinkListener):com.intellij.openapi.vcs.ui.RefreshableOnComponent
- sf:createLink(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.checkin.CheckinHandler,Z,java.lang.String,kotlin.reflect.KMutableProperty0,java.lang.String,com.intellij.ui.components.labels.LinkListener):com.intellij.openapi.vcs.ui.RefreshableOnComponent
- p:createOptionContent(com.intellij.ui.dsl.builder.Panel):V
- pf:getCheckBox():com.intellij.ui.components.JBCheckBox
- f:getComponent():javax.swing.JComponent
- pf:getGetter():kotlin.jvm.functions.Function0
- pf:getProject():com.intellij.openapi.project.Project
- pf:getSetter():java.util.function.Consumer
- pf:isInSettings():Z
- restoreState():V
- saveState():V
- pf:setSelected(Z):V
- f:withCheckinHandler(com.intellij.openapi.vcs.checkin.CheckinHandler):com.intellij.openapi.vcs.changes.ui.BooleanCommitOption
f:com.intellij.openapi.vcs.changes.ui.BooleanCommitOption$Companion
- f:create(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.checkin.CheckinHandler,Z,java.lang.String,kotlin.jvm.functions.Function0,java.util.function.Consumer):com.intellij.openapi.vcs.ui.RefreshableOnComponent
- f:create(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.checkin.CheckinHandler,Z,java.lang.String,kotlin.reflect.KMutableProperty0):com.intellij.openapi.vcs.ui.RefreshableOnComponent
- f:createLink(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.checkin.CheckinHandler,Z,java.lang.String,javax.swing.Icon,kotlin.jvm.functions.Function0,java.util.function.Consumer,java.lang.String,com.intellij.ui.components.labels.LinkListener):com.intellij.openapi.vcs.ui.RefreshableOnComponent
- f:createLink(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.checkin.CheckinHandler,Z,java.lang.String,kotlin.reflect.KMutableProperty0,java.lang.String,com.intellij.ui.components.labels.LinkListener):com.intellij.openapi.vcs.ui.RefreshableOnComponent
com.intellij.openapi.vcs.changes.ui.BooleanCommitOption$LinkContext
- a:update(java.lang.String,javax.swing.Icon):V
- bs:update$default(com.intellij.openapi.vcs.changes.ui.BooleanCommitOption$LinkContext,java.lang.String,javax.swing.Icon,I,java.lang.Object):V
c:com.intellij.openapi.vcs.changes.ui.ChangeDiffRequestChain
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.diff.actions.impl.GoToChangePopupBuilder$Chain
- com.intellij.diff.chains.DiffRequestSelectionChain
- <init>(com.intellij.openapi.ListSelection):V
- <init>(java.util.List,I):V
- createGoToChangeAction(com.intellij.util.Consumer,I):com.intellij.openapi.actionSystem.AnAction
- getListSelection():com.intellij.openapi.ListSelection
- getRequests():java.util.List
a:com.intellij.openapi.vcs.changes.ui.ChangeDiffRequestChain$Async
- com.intellij.diff.chains.AsyncDiffRequestChain
- com.intellij.diff.actions.impl.GoToChangePopupBuilder$Chain
- <init>():V
- createGoToChangeAction(com.intellij.util.Consumer,I):com.intellij.openapi.actionSystem.AnAction
- pa:loadRequestProducers():com.intellij.openapi.ListSelection
com.intellij.openapi.vcs.changes.ui.ChangeDiffRequestChain$Producer
- com.intellij.diff.chains.DiffRequestProducer
- com.intellij.openapi.vcs.changes.ui.PresentableChange
- getContentType():com.intellij.openapi.fileTypes.FileType
c:com.intellij.openapi.vcs.changes.ui.ChangeListChooser
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- p:createCenterPanel():javax.swing.JComponent
- p:doOKAction():V
- p:getDimensionServiceKey():java.lang.String
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelectedList():com.intellij.openapi.vcs.changes.LocalChangeList
- setChangeLists(java.util.Collection):V
- setDefaultSelection(com.intellij.openapi.vcs.changes.ChangeList):V
- setSuggestedName(java.lang.String):V
- setSuggestedName(java.lang.String,Z):V
f:com.intellij.openapi.vcs.changes.ui.ChangeListChooserPanel
- javax.swing.JPanel
- <init>(com.intellij.openapi.project.Project,java.util.function.Consumer):V
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelectedList(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.LocalChangeList
- init():V
- setChangeListDescription(java.lang.String):V
- setChangeLists(java.util.Collection):V
- setData(com.intellij.openapi.vcs.changes.ChangeListData):V
- setDefaultSelection(com.intellij.openapi.vcs.changes.ChangeList):V
- setSuggestedName(java.lang.String):V
- setSuggestedName(java.lang.String,java.lang.String,Z):V
- setSuggestedName(java.lang.String,Z):V
- updateEnabled():V
f:com.intellij.openapi.vcs.changes.ui.ChangeListRemoteState
- <init>():V
- f:allUpToDate():Z
- f:report(I,Z):V
f:com.intellij.openapi.vcs.changes.ui.ChangeListViewerDialog
- com.intellij.openapi.ui.DialogWrapper
- sf:DIMENSION_SERVICE_KEY:java.lang.String
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ui.LoadingCommittedChangeListPanel):V
- <init>(com.intellij.openapi.project.Project,java.awt.Component,com.intellij.openapi.vcs.changes.ui.LoadingCommittedChangeListPanel):V
- createCenterPanel():javax.swing.JComponent
- getPreferredFocusedComponent():javax.swing.JComponent
- s:show(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.vcs.changes.ui.LoadingCommittedChangeListPanel):V
- s:show(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.vcs.changes.ui.LoadingCommittedChangeListPanel,com.intellij.openapi.vcs.impl.BackgroundableActionLock,Z):V
- s:showDialog(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.vcs.changes.ui.LoadingCommittedChangeListPanel):V
- s:tryFocusExistingDialog(com.intellij.openapi.vcs.impl.BackgroundableActionLock):Z
com.intellij.openapi.vcs.changes.ui.ChangeNodeDecorator
- a:decorate(com.intellij.openapi.vcs.changes.Change,com.intellij.ui.SimpleColoredComponent,Z):V
- a:preDecorate(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z):V
a:com.intellij.openapi.vcs.changes.ui.ChangesBrowserBase
- javax.swing.JPanel
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- sf:DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- pf:myProject:com.intellij.openapi.project.Project
- pf:myViewer:com.intellij.openapi.vcs.changes.ui.ChangesTree
- p:<init>(com.intellij.openapi.project.Project,Z,Z):V
- addToolbarAction(com.intellij.openapi.actionSystem.AnAction):V
- addToolbarSeparator():V
- pa:buildTreeModel():javax.swing.tree.DefaultTreeModel
- canShowDiff():Z
- p:createCenterPanel():javax.swing.JComponent
- p:createDiffActions():java.util.List
- p:createHeaderPanel():javax.swing.JComponent
- p:createLastToolbarActions():java.util.List
- p:createPopupMenuActions():java.util.List
- p:createToolbarActions():java.util.List
- p:createToolbarComponent():javax.swing.JComponent
- p:createTreeList(com.intellij.openapi.project.Project,Z,Z):com.intellij.openapi.vcs.changes.ui.ChangesTree
- p:createViewerBorder():javax.swing.border.Border
- getDiffAction():com.intellij.openapi.actionSystem.AnAction
- p:getDiffRequestProducer(java.lang.Object):com.intellij.openapi.vcs.changes.ui.ChangeDiffRequestChain$Producer
- getGrouping():com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getShowDiffActionPreview():com.intellij.openapi.vcs.changes.DiffPreview
- getToolbar():com.intellij.openapi.actionSystem.ActionToolbar
- p:getToolbarAnchor():I
- getViewer():com.intellij.openapi.vcs.changes.ui.ChangesTree
- getViewerScrollPane():javax.swing.JScrollPane
- hideViewerBorder():V
- p:init():V
- p:onDoubleClick():V
- p:onIncludedChanged():V
- selectEntries(java.util.Collection):V
- s:selectObjectWithTag(com.intellij.openapi.vcs.changes.ui.ChangesTree,java.lang.Object,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag):V
- setInclusionChangedListener(java.lang.Runnable):V
- setShowDiffActionPreview(com.intellij.openapi.vcs.changes.DiffPreview):V
- setViewerBorder(javax.swing.border.Border):V
- showDiff():V
- s:showStandaloneDiff(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ui.ChangesBrowserBase):V
- s:showStandaloneDiff(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ui.ChangesBrowserBase,com.intellij.openapi.ListSelection,com.intellij.util.NullableFunction):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- p:updateDiffContext(com.intellij.diff.chains.DiffRequestChain):V
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserBase$ShowStandaloneDiff
- com.intellij.openapi.actionSystem.AnActionExtensionProvider
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isActive(com.intellij.openapi.actionSystem.AnActionEvent):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserChangeListNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ChangeList,com.intellij.openapi.vcs.changes.ui.ChangeListRemoteState):V
- compareUserObjects(com.intellij.openapi.vcs.changes.ChangeList):I
- getSortWeight():I
- getTextPresentation():java.lang.String
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserChangeNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- com.intellij.openapi.vcs.changes.issueLinks.TreeLinkMouseListener$HaveTooltip
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.ui.ChangeNodeDecorator):V
- compareUserObjects(com.intellij.openapi.vcs.changes.Change):I
- getSortWeight():I
- getTextPresentation():java.lang.String
- getTooltip():java.lang.String
- p:isDirectory():Z
- p:isFile():Z
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserFileNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- java.lang.Comparable
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
- compareTo(com.intellij.openapi.vcs.changes.ui.ChangesBrowserFileNode):I
- getSortWeight():I
- getTextPresentation():java.lang.String
- p:isDirectory():Z
- p:isFile():Z
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserFilePathNode
- com.intellij.openapi.vcs.changes.ui.AbstractChangesBrowserFilePathNode
- <init>(com.intellij.openapi.vcs.FilePath):V
- <init>(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FileStatus):V
- p:filePath(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.FilePath
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserModuleNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$NodeWithFilePath
- compareUserObjects(com.intellij.openapi.module.Module):I
- s:create(com.intellij.openapi.module.Module):com.intellij.openapi.vcs.changes.ui.ChangesBrowserModuleNode
- getModuleRoot():com.intellij.openapi.vcs.FilePath
- getNodeFilePath():com.intellij.openapi.vcs.FilePath
- getSortWeight():I
- getTextPresentation():java.lang.String
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
a:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- javax.swing.tree.DefaultMutableTreeNode
- com.intellij.openapi.util.UserDataHolderEx
- psf:CHANGE_LIST_SORT_WEIGHT:I
- psf:CHANGE_SORT_WEIGHT:I
- psf:CONFLICTS_SORT_WEIGHT:I
- psf:DEFAULT_CHANGE_LIST_SORT_WEIGHT:I
- psf:DEFAULT_SORT_WEIGHT:I
- psf:DELETED_SORT_WEIGHT:I
- psf:DIRECTORY_PATH_SORT_WEIGHT:I
- psf:FILE_PATH_SORT_WEIGHT:I
- sf:IGNORED_FILES_TAG:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- psf:IGNORED_SORT_WEIGHT:I
- sf:LOCALLY_DELETED_NODE_TAG:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- sf:LOCKED_FOLDERS_TAG:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- sf:LOGICALLY_LOCKED_TAG:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- sf:MODIFIED_WITHOUT_EDITING_TAG:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- psf:MODULE_SORT_WEIGHT:I
- psf:REPOSITORY_SORT_WEIGHT:I
- sf:SWITCHED_FILES_TAG:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- sf:SWITCHED_ROOTS_TAG:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- sf:TO_TEXT_CONVERTER:com.intellij.util.containers.Convertor
- sf:UNVERSIONED_FILES_TAG:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- psf:UNVERSIONED_SORT_WEIGHT:I
- psf:VIRTUAL_FILE_SORT_WEIGHT:I
- p:<init>(java.lang.Object):V
- p:appendCount(com.intellij.ui.ColoredTreeCellRenderer):V
- p:appendParentPath(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,com.intellij.openapi.vcs.FilePath):V
- p:appendParentPath(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,com.intellij.openapi.vfs.VirtualFile):V
- p:appendUpdatingState(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer):V
- ps:compareFileNames(java.lang.String,java.lang.String):I
- s:compareFilePaths(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath):I
- compareUserObjects(java.lang.Object):I
- s:createChange(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:createFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:createFilePath(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:createFilePath(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FileStatus):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:createLocallyDeleted(com.intellij.openapi.vcs.changes.LocallyDeletedChange):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:createLockedFolders(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:createLogicallyLocked(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.changes.LogicalLock):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:createRoot():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- getAllChangesUnder():java.util.List
- getAllObjectsUnder(java.lang.Class):java.util.List
- getBackgroundColor(com.intellij.openapi.project.Project):java.awt.Color
- ps:getBackgroundColorFor(com.intellij.openapi.project.Project,java.lang.Object):java.awt.Color
- p:getCountText():java.lang.String
- getDirectoryCount():I
- getFileCount():I
- getParent():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- getSortWeight():I
- getTextPresentation():java.lang.String
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- getUserObject():java.lang.Object
- insert(javax.swing.tree.MutableTreeNode,I):V
- p:isDirectory():Z
- p:isFile():Z
- isMeaningfulNode():Z
- iterateFilePathsUnder():com.intellij.util.containers.JBIterable
- iterateFilesUnder():com.intellij.util.containers.JBIterable
- iterateNodeChildren():com.intellij.util.containers.JBIterable
- f:markAsHelperNode():V
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- putUserDataIfAbsent(com.intellij.openapi.util.Key,java.lang.Object):java.lang.Object
- remove(I):V
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
- render(javax.swing.JTree,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
- replace(com.intellij.openapi.util.Key,java.lang.Object,java.lang.Object):Z
- p:resetCounters():V
- setUserObject(java.lang.Object):V
- shouldExpandByDefault():Z
- traverse():com.intellij.util.containers.JBIterable
- traverseObjectsUnder():com.intellij.util.containers.JBIterable
com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$NodeWithFilePath
- a:getNodeFilePath():com.intellij.openapi.vcs.FilePath
com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- a:toString():java.lang.String
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$TagImpl
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- <init>(java.lang.String):V
a:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$ValueTag
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- f:value:java.lang.Object
- <init>(java.lang.Object):V
- f:equals(java.lang.Object):Z
- p:getValue():java.lang.Object
- f:hashCode():I
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$VcsBundleTag
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
- <init>(java.lang.String):V
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$WrapperTag
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$ValueTag
- s:wrap(java.lang.Object):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer
- com.intellij.ui.ColoredTreeCellRenderer
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.util.BooleanGetter,Z):V
- appendFileName(com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.awt.Color):V
- appendTextWithIssueLinks(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- clear():V
- customizeCellRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- p:doPaintFragmentBackground(java.awt.Graphics2D,I,java.awt.Color,I,I,I,I):V
- getProject():com.intellij.openapi.project.Project
- isShowFlatten():Z
- isShowingLocalChanges():Z
- setBackgroundInsets(com.intellij.util.ui.JBInsets):V
- setIcon(com.intellij.openapi.vcs.FilePath,Z):V
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserSpecificFilePathsNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserSpecificNode
- p:<init>(java.lang.Object,java.util.Collection,java.lang.Runnable):V
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserSpecificFilesNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserSpecificNode
- p:<init>(java.lang.Object,java.util.Collection,java.lang.Runnable):V
a:com.intellij.openapi.vcs.changes.ui.ChangesBrowserSpecificNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- pf:myDialogShower:java.lang.Runnable
- pf:myIsMany:Z
- p:<init>(java.lang.Object,java.util.Collection,I,java.lang.Runnable):V
- getDirectoryCount():I
- getFileCount():I
- isManyFiles():Z
- s:isManyFiles(java.util.Collection):Z
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
- f:setAttributes(com.intellij.ui.SimpleTextAttributes):V
c:com.intellij.openapi.vcs.changes.ui.ChangesBrowserStringNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- getTextPresentation():java.lang.String
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
f:com.intellij.openapi.vcs.changes.ui.ChangesBrowserUnversionedFilesNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserSpecificFilePathsNode
- <init>(com.intellij.openapi.project.Project,java.util.List):V
- getSortWeight():I
- getTextPresentation():java.lang.String
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicy
- getParentNodeFor(com.intellij.openapi.vcs.changes.ui.StaticFilePath,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- getParentNodeFor(com.intellij.openapi.vcs.changes.ui.StaticFilePath,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- setNextGroupingPolicy(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicy):V
c:com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicy$CompatibilityPlaceholderChangesBrowserNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
a:com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:createGroupingPolicy(com.intellij.openapi.project.Project,javax.swing.tree.DefaultTreeModel):com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicy
f:com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactoryEPBean
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- implementationClass:java.lang.String
- key:java.lang.String
- weight:I
c:com.intellij.openapi.vcs.changes.ui.ChangesGroupingSupport
- sf:Companion:com.intellij.openapi.vcs.changes.ui.ChangesGroupingSupport$Companion
- sf:DIRECTORY_GROUPING:java.lang.String
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- sf:MODULE_GROUPING:java.lang.String
- sf:NONE_GROUPING:java.lang.String
- sf:PROP_GROUPING_KEYS:java.lang.String
- sf:REPOSITORY_GROUPING:java.lang.String
- <init>(com.intellij.openapi.project.Project,java.lang.Object,Z):V
- f:addPropertyChangeListener(java.beans.PropertyChangeListener):V
- sf:findFactory(java.lang.String):com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory
- f:get(java.lang.String):Z
- sf:getFactory(java.lang.String):com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory
- f:getGrouping():com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory
- f:getGroupingKeys():java.util.Set
- f:getProject():com.intellij.openapi.project.Project
- f:getShowConflictsNode():Z
- isAvailable(java.lang.String):Z
- f:isDirectory():Z
- f:isNone():Z
- f:removePropertyChangeListener(java.beans.PropertyChangeListener):V
- f:set(java.lang.String,Z):V
- f:setGroupingKeysOrSkip(java.util.Collection):V
f:com.intellij.openapi.vcs.changes.ui.ChangesGroupingSupport$Companion
- f:findFactory(java.lang.String):com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory
- f:getFactory(java.lang.String):com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory
f:com.intellij.openapi.vcs.changes.ui.ChangesGroupingSupport$Disabled
- com.intellij.openapi.vcs.changes.ui.ChangesGroupingSupport
- <init>(com.intellij.openapi.project.Project,java.lang.Object):V
- isAvailable(java.lang.String):Z
a:com.intellij.openapi.vcs.changes.ui.ChangesListView
- com.intellij.openapi.vcs.changes.ui.ChangesTree
- com.intellij.ide.dnd.DnDAware
- sf:DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:EXACTLY_SELECTED_FILES_DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:HELP_ID:java.lang.String
- sf:IGNORED_FILE_PATHS_DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:LOCALLY_DELETED_CHANGES:com.intellij.openapi.actionSystem.DataKey
- sf:MISSING_FILES_DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:MODIFIED_WITHOUT_EDITING_DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:UNVERSIONED_FILE_PATHS_DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.openapi.project.Project,Z):V
- dropSelectionButUnderPoint(java.awt.Point):V
- expandSafe(javax.swing.tree.DefaultMutableTreeNode):V
- findNodeInTree(java.lang.Object):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- findNodeInTree(java.lang.Object,java.lang.Object):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- findNodePathInTree(java.lang.Object):javax.swing.tree.TreePath
- findNodePathInTree(java.lang.Object,java.lang.Object):javax.swing.tree.TreePath
- getAllChangesFromSameAmendNode(com.intellij.openapi.vcs.changes.Change):java.util.List
- getAllChangesFromSameChangelist(com.intellij.openapi.vcs.changes.Change):java.util.List
- getChangesNodes():com.intellij.util.containers.JBIterable
- getComponent():javax.swing.JComponent
- getModel():javax.swing.tree.DefaultTreeModel
- getSelectedChanges():com.intellij.util.containers.JBIterable
- getSelectedChangesNodes():com.intellij.util.containers.JBIterable
- getSelectedUnversionedFiles():com.intellij.util.containers.JBIterable
- getToggleClickCount():I
- getUnversionedFiles():com.intellij.util.containers.JBIterable
- installPopupHandler(com.intellij.openapi.actionSystem.ActionGroup):V
- p:isEmptyTextVisible():Z
- p:isInclusionVisible(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):Z
- isOverSelection(java.awt.Point):Z
- processMouseEvent(java.awt.event.MouseEvent):V
- rebuildTree():V
- setPaintBusy(Z):V
- s:toHijackedChange(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.changes.Change
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
a:com.intellij.openapi.vcs.changes.ui.ChangesTree
- com.intellij.ui.treeStructure.Tree
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- sf:ALWAYS_KEEP:com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy
- sf:ALWAYS_RESET:com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy
- sf:DEFAULT_GROUPING_KEYS:java.util.List
- sf:DO_NOTHING:com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy
- sf:EXPAND_NODES_THRESHOLD:I
- psf:GROUPING_KEYS:java.lang.String
- sf:GROUP_BY_ACTION_GROUP:java.lang.String
- sf:KEEP_NON_EMPTY:com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy
- sf:KEEP_SELECTED_OBJECTS:com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- p:<init>(com.intellij.openapi.project.Project,Z,Z,Z):V
- addGroupingChangeListener(java.beans.PropertyChangeListener):V
- addSelectionListener(java.lang.Runnable):V
- addSelectionListener(java.lang.Runnable,com.intellij.openapi.Disposable):V
- createCollapseAllAction(Z):com.intellij.openapi.actionSystem.AnAction
- createExpandAllAction(Z):com.intellij.openapi.actionSystem.AnAction
- excludeChange(java.lang.Object):V
- excludeChanges(java.util.Collection):V
- expandAll():V
- expandDefaults():V
- getDoubleClickHandler():com.intellij.util.Processor
- getEnterKeyHandler():com.intellij.util.Processor
- getFileColorForPath(javax.swing.tree.TreePath):java.awt.Color
- getGrouping():com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory
- getGroupingSupport():com.intellij.openapi.vcs.changes.ui.ChangesGroupingSupport
- p:getIncludableUserObjects(com.intellij.openapi.vcs.changes.ui.VcsTreeModelData):java.util.List
- getIncludedSet():java.util.Set
- getInclusionModel():com.intellij.openapi.vcs.changes.InclusionModel
- p:getNodeStatus(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.util.ui.ThreeStateCheckBox$State
- getPreferredFocusedComponent():javax.swing.JComponent
- getProject():com.intellij.openapi.project.Project
- getRoot():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- getToggleClickCount():I
- getTreeExpander():com.intellij.ide.TreeExpander
- getTreeStateStrategy():com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy
- includeChange(java.lang.Object):V
- includeChanges(java.util.Collection):V
- p:installGroupingSupport():com.intellij.openapi.vcs.changes.ui.ChangesGroupingSupport
- s:installGroupingSupport(com.intellij.openapi.vcs.changes.ui.ChangesGroupingSupport,java.util.function.Supplier,java.util.function.Consumer,java.lang.Runnable):V
- ps:installGroupingSupport(com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.openapi.vcs.changes.ui.ChangesGroupingSupport,java.lang.String,java.util.List):V
- ps:installGroupingSupport(com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.openapi.vcs.changes.ui.ChangesGroupingSupport,java.util.function.Supplier,java.util.function.Consumer):V
- installPopupHandler(com.intellij.openapi.actionSystem.ActionGroup):V
- p:installTreeLinkHandler(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer):V
- isFileColorsEnabled():Z
- isHighlightProblems():Z
- p:isIncludable(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):Z
- isIncluded(java.lang.Object):Z
- p:isInclusionEnabled(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):Z
- p:isInclusionVisible(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):Z
- isKeepTreeState():Z
- isModelUpdateInProgress():Z
- isScrollToSelection():Z
- isShowCheckboxes():Z
- isShowFlatten():Z
- onGroupingChanged():V
- p:processEvent(java.awt.AWTEvent):V
- a:rebuildTree():V
- rebuildTree(com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy):V
- removeGroupingChangeListener(java.beans.PropertyChangeListener):V
- resetTreeState():V
- selectFile(com.intellij.openapi.vcs.FilePath):V
- selectFile(com.intellij.openapi.vfs.VirtualFile):V
- setDoubleClickAndEnterKeyHandler(java.lang.Runnable):V
- setDoubleClickHandler(com.intellij.util.Processor):V
- setEmptyText(java.lang.String):V
- setEnterKeyHandler(com.intellij.util.Processor):V
- setIncludedChanges(java.util.Collection):V
- setInclusionListener(java.lang.Runnable):V
- setInclusionModel(com.intellij.openapi.vcs.changes.InclusionModel):V
- setKeepTreeState(Z):V
- setScrollToSelection(Z):V
- setSelectedChanges(java.util.Collection):V
- setSelectionMode(I):V
- setShowCheckboxes(Z):V
- setTreeExpander(com.intellij.ide.TreeExpander):V
- setTreeStateStrategy(com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy):V
- setUI(javax.swing.plaf.TreeUI):V
- p:toggleChanges(java.util.Collection):Z
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- p:updateTreeModel(javax.swing.tree.DefaultTreeModel):V
- p:updateTreeModel(javax.swing.tree.DefaultTreeModel,com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy):V
com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy
- a:restoreState(com.intellij.openapi.vcs.changes.ui.ChangesTree,java.lang.Object,Z):V
- a:saveState(com.intellij.openapi.vcs.changes.ui.ChangesTree):java.lang.Object
c:com.intellij.openapi.vcs.changes.ui.ChangesTreeCellRenderer
- com.intellij.ui.CellRendererPanel
- javax.swing.tree.TreeCellRenderer
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getPreferredSize():java.awt.Dimension
- pf:getTextRenderer():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer
- getToolTipText():java.lang.String
- getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):java.awt.Component
- pf:paintComponent(java.awt.Graphics):V
a:com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler
- <init>():V
- f:collectDiffProducers(com.intellij.openapi.vcs.changes.ui.ChangesTree,Z):com.intellij.openapi.ListSelection
- f:hasContent(com.intellij.openapi.vcs.changes.ui.ChangesTree):Z
- isShowAllChangesForEmptySelection():Z
- a:iterateAllChanges(com.intellij.openapi.vcs.changes.ui.ChangesTree):java.lang.Iterable
- a:iterateSelectedChanges(com.intellij.openapi.vcs.changes.ui.ChangesTree):java.lang.Iterable
- a:selectChange(com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$Wrapper):V
a:com.intellij.openapi.vcs.changes.ui.ChangesTreeDnDSupport
- com.intellij.ide.dnd.DnDDropHandler
- com.intellij.ide.dnd.DnDTargetChecker
- pf:myTree:com.intellij.openapi.vcs.changes.ui.ChangesTree
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesTree):V
- pa:canHandleDropEvent(com.intellij.ide.dnd.DnDEvent,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):Z
- s:createDragImage(com.intellij.ui.treeStructure.Tree,java.lang.String):com.intellij.ide.dnd.DnDImage
- pa:createDragStartBean(com.intellij.ide.dnd.DnDActionInfo):com.intellij.ide.dnd.DnDDragStartBean
- p:createDraggedImage(com.intellij.ide.dnd.DnDActionInfo):com.intellij.ide.dnd.DnDImage
- p:getDropNode(com.intellij.ide.dnd.DnDEvent):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:getDropRootNode(com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.ide.dnd.DnDEvent):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:getSelectionCount(com.intellij.openapi.vcs.changes.ui.ChangesTree):I
- install(com.intellij.openapi.Disposable):V
- s:isCopyAction(com.intellij.ide.dnd.DnDEvent):Z
- update(com.intellij.ide.dnd.DnDEvent):Z
a:com.intellij.openapi.vcs.changes.ui.ChangesTreeImpl
- com.intellij.openapi.vcs.changes.ui.ChangesTree
- <init>(com.intellij.openapi.project.Project,Z,Z,java.lang.Class):V
- <init>(com.intellij.openapi.project.Project,Z,Z,java.lang.Class,java.util.List):V
- pa:buildTreeModel(java.util.List):javax.swing.tree.DefaultTreeModel
- getChanges():java.util.List
- getIncludedChanges():java.util.Collection
- getSelectedChanges():java.util.List
- rebuildTree():V
- setChangesToDisplay(java.util.Collection):V
c:com.intellij.openapi.vcs.changes.ui.ChangesTreeImpl$Changes
- com.intellij.openapi.vcs.changes.ui.ChangesTreeImpl
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- <init>(com.intellij.openapi.project.Project,Z,Z,java.util.List):V
- p:buildTreeModel(java.util.List):javax.swing.tree.DefaultTreeModel
c:com.intellij.openapi.vcs.changes.ui.ChangesTreeImpl$FilePaths
- com.intellij.openapi.vcs.changes.ui.ChangesTreeImpl
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- <init>(com.intellij.openapi.project.Project,Z,Z,java.util.List):V
- p:buildTreeModel(java.util.List):javax.swing.tree.DefaultTreeModel
c:com.intellij.openapi.vcs.changes.ui.ChangesTreeImpl$VirtualFiles
- com.intellij.openapi.vcs.changes.ui.ChangesTreeImpl
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- <init>(com.intellij.openapi.project.Project,Z,Z,java.util.List):V
- p:buildTreeModel(java.util.List):javax.swing.tree.DefaultTreeModel
f:com.intellij.openapi.vcs.changes.ui.ChangesViewContentEP
- com.intellij.openapi.extensions.PluginAware
- className:java.lang.String
- displayNameSupplierClassName:java.lang.String
- isInCommitToolWindow:Z
- predicateClassName:java.lang.String
- preloaderClassName:java.lang.String
- tabName:java.lang.String
com.intellij.openapi.vcs.changes.ui.ChangesViewContentI
- a:addContent(com.intellij.ui.content.Content):V
- a:attachToolWindow(com.intellij.openapi.wm.ToolWindow):V
- a:findContent(java.lang.String):com.intellij.ui.content.Content
- a:findContents(java.util.function.Predicate):java.util.List
- a:getActiveComponent(java.lang.Class):java.lang.Object
- a:removeContent(com.intellij.ui.content.Content):V
- a:selectContent(java.lang.String):V
- a:setSelectedContent(com.intellij.ui.content.Content):V
- a:setSelectedContent(com.intellij.ui.content.Content,Z):V
f:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager
- com.intellij.openapi.Disposable
- com.intellij.openapi.vcs.changes.ui.ChangesViewContentI
- sf:BRANCHES:java.lang.String
- sf:CONSOLE:java.lang.String
- sf:CONTENT_TAB_NAME_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:Companion:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$Companion
- sf:INCOMING:java.lang.String
- sf:IS_IN_COMMIT_TOOLWINDOW_KEY:com.intellij.openapi.util.Key
- sf:LOCAL_CHANGES:java.lang.String
- sf:ORDER_WEIGHT_KEY:com.intellij.openapi.util.Key
- sf:REPOSITORY:java.lang.String
- sf:SHELF:java.lang.String
- sf:TOOLWINDOW_ID:java.lang.String
- sf:VCS_LOG:java.lang.String
- <init>(com.intellij.openapi.project.Project):V
- addContent(com.intellij.ui.content.Content):V
- attachToolWindow(com.intellij.openapi.wm.ToolWindow):V
- dispose():V
- findContent(java.lang.String):com.intellij.ui.content.Content
- findContents(java.util.function.Predicate):java.util.List
- getActiveComponent(java.lang.Class):java.lang.Object
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ui.ChangesViewContentI
- sf:getToolWindowFor(com.intellij.openapi.project.Project,java.lang.String):com.intellij.openapi.wm.ToolWindow
- sf:getToolWindowIdFor(com.intellij.openapi.project.Project,java.lang.String):java.lang.String
- f:initLazyContent(com.intellij.ui.content.Content):V
- sf:isCommitToolWindowShown(com.intellij.openapi.project.Project):Z
- f:isContentSelected(java.lang.String):Z
- sf:isToolWindowTabVertical(com.intellij.openapi.project.Project,java.lang.String):Z
- removeContent(com.intellij.ui.content.Content):V
- selectContent(java.lang.String):V
- f:selectContent(java.lang.String,Z):V
- setSelectedContent(com.intellij.ui.content.Content):V
- setSelectedContent(com.intellij.ui.content.Content,Z):V
- sf:shouldHaveSplitterDiffPreview(com.intellij.openapi.project.Project,Z):Z
f:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ui.ChangesViewContentI
- f:getInstanceImpl(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager
- f:getToolWindowFor(com.intellij.openapi.project.Project,java.lang.String):com.intellij.openapi.wm.ToolWindow
- f:getToolWindowIdFor(com.intellij.openapi.project.Project,java.lang.String):java.lang.String
- f:isCommitToolWindowShown(com.intellij.openapi.project.Project):Z
- f:isToolWindowTabVertical(com.intellij.openapi.project.Project,java.lang.String):Z
- f:shouldHaveSplitterDiffPreview(com.intellij.openapi.project.Project,Z):Z
e:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- java.lang.Enum
- sf:BRANCHES:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- sf:CONSOLE:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- sf:INCOMING:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- sf:LAST:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- sf:LOCAL_CHANGES:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- sf:OTHER:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- sf:REPOSITORY:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- sf:SHELF:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- sf:VCS_LOG:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- s:getEntries():kotlin.enums.EnumEntries
- f:getTabName():java.lang.String
- f:getWeight():I
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight
- s:values():com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager$TabOrderWeight[]
f:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManagerKt
- sf:subscribeOnVcsToolWindowLayoutChanges(com.intellij.util.messages.MessageBusConnection,java.lang.Runnable):V
com.intellij.openapi.vcs.changes.ui.ChangesViewContentManagerListener
- sf:Companion:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManagerListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- a:toolWindowMappingChanged():V
f:com.intellij.openapi.vcs.changes.ui.ChangesViewContentManagerListener$Companion
com.intellij.openapi.vcs.changes.ui.ChangesViewContentProvider
- disposeContent():V
- initContent():javax.swing.JComponent
- initTabContent(com.intellij.ui.content.Content):V
com.intellij.openapi.vcs.changes.ui.ChangesViewContentProvider$Preloader
- preloadTabContent(com.intellij.ui.content.Content):V
com.intellij.openapi.vcs.changes.ui.ChangesViewModelBuilder
- a:insertChanges(java.util.Collection,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
- a:insertFilesIntoNode(java.util.Collection,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
- a:insertSubtreeRoot(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.ChangesViewModelBuilder
a:com.intellij.openapi.vcs.changes.ui.CommitChangeListDialog
- com.intellij.openapi.ui.DialogWrapper
- com.intellij.openapi.ui.ComponentContainer
- com.intellij.vcs.commit.SingleChangeListCommitWorkflowUi
- sf:DIALOG_TITLE:java.lang.String
- p:<init>(com.intellij.vcs.commit.CommitChangeListDialogWorkflow):V
- activate():Z
- addDataProvider(com.intellij.openapi.actionSystem.DataProvider):V
- addExecutorListener(com.intellij.vcs.commit.CommitExecutorListener,com.intellij.openapi.Disposable):V
- addInclusionListener(com.intellij.openapi.vcs.changes.InclusionListener,com.intellij.openapi.Disposable):V
- addStateListener(com.intellij.vcs.commit.CommitWorkflowUiStateListener,com.intellij.openapi.Disposable):V
- p:afterInit():V
- s:commitChanges(com.intellij.openapi.project.Project,java.util.Collection,com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.vcs.changes.CommitExecutor,java.lang.String):Z
- s:commitVcsChanges(com.intellij.openapi.project.Project,java.util.Collection,com.intellij.openapi.vcs.changes.LocalChangeList,java.lang.String,com.intellij.openapi.vcs.changes.CommitResultHandler):Z
- s:commitWithExecutor(com.intellij.openapi.project.Project,java.util.Collection,com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.vcs.changes.CommitExecutor,java.lang.String,com.intellij.openapi.vcs.changes.CommitResultHandler):Z
- confirmCommitWithEmptyMessage():Z
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- deactivate():V
- dispose():V
- doCancelAction():V
- endBeforeCommitChecks(com.intellij.vcs.commit.CommitChecksResult):V
- getAdditionalComponents():java.util.List
- a:getBrowser():com.intellij.openapi.vcs.changes.ui.CommitDialogChangesBrowser
- getChangeList():com.intellij.openapi.vcs.changes.LocalChangeList
- getCommitMessage():java.lang.String
- getCommitMessageUi():com.intellij.vcs.commit.CommitMessageUi
- getCommitOptionsUi():com.intellij.vcs.commit.CommitOptionsUi
- getComponent():javax.swing.JComponent
- getDefaultCommitActionName():java.lang.String
- p:getDimensionServiceKey():java.lang.String
- getDisplayedChanges():java.util.List
- getDisplayedUnversionedFiles():java.util.List
- p:getHelpId():java.lang.String
- getIncludedChanges():java.util.List
- getIncludedUnversionedFiles():java.util.List
- getInclusionModel():com.intellij.openapi.vcs.changes.InclusionModel
- p:getOKAction():javax.swing.Action
- getPreferredFocusableComponent():javax.swing.JComponent
- getPreferredFocusedComponent():javax.swing.JComponent
- getProject():com.intellij.openapi.project.Project
- hasDiffs():Z
- isDefaultCommitEnabled():Z
- refreshDataBeforeCommit():V
- setDefaultCommitActionName(java.lang.String):V
- s:showCommitDialog(com.intellij.openapi.project.Project,java.util.Set,java.util.Collection,com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List,Z,java.lang.String,com.intellij.openapi.vcs.changes.CommitResultHandler):Z
- s:showNothingToCommitMessage(com.intellij.openapi.project.Project):V
- startBeforeCommitChecks():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- p:updateWarning():V
a:com.intellij.openapi.vcs.changes.ui.CommitDialogChangesBrowser
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserBase
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- dispose():V
- a:getDisplayedChanges():java.util.List
- a:getDisplayedUnversionedFiles():java.util.List
- a:getIncludedChanges():java.util.List
- a:getIncludedUnversionedFiles():java.util.List
- a:getSelectedChangeList():com.intellij.openapi.vcs.changes.LocalChangeList
- a:getSelectedChanges():java.util.List
- a:getSelectedUnversionedFiles():java.util.List
- a:updateDisplayedChangeLists():V
c:com.intellij.openapi.vcs.changes.ui.CommitLegendPanel
- <init>(com.intellij.openapi.vcs.changes.ui.CommitLegendPanel$InfoCalculator):V
- pf:append(I,com.intellij.openapi.vcs.FileStatus,java.lang.String):V
- pf:append(I,com.intellij.openapi.vcs.FileStatus,java.lang.String,java.lang.String):V
- bs:append$default(com.intellij.openapi.vcs.changes.ui.CommitLegendPanel,I,com.intellij.openapi.vcs.FileStatus,java.lang.String,java.lang.String,I,java.lang.Object):V
- pf:appendSpace():V
- f:getComponent():com.intellij.ui.SimpleColoredComponent
- f:isCompact():Z
- f:setCompact(Z):V
- update():V
com.intellij.openapi.vcs.changes.ui.CommitLegendPanel$InfoCalculator
- a:getDeleted():I
- a:getIncludedDeleted():I
- a:getIncludedModified():I
- a:getIncludedNew():I
- a:getIncludedUnversioned():I
- a:getModified():I
- a:getNew():I
- a:getUnversioned():I
c:com.intellij.openapi.vcs.changes.ui.CommittedChangeListPanel
- javax.swing.JPanel
- com.intellij.openapi.actionSystem.UiDataProvider
- <init>(com.intellij.openapi.project.Project):V
- s:createChangeList(java.util.Collection):com.intellij.openapi.vcs.versionBrowser.CommittedChangeListImpl
- getChangesBrowser():com.intellij.openapi.vcs.changes.committed.CommittedChangesBrowser
- getPreferredFocusedComponent():javax.swing.JComponent
- setChangeList(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):V
- setDescription(java.lang.String):V
- setShowCommitMessage(Z):V
- setShowSideBorders(Z):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.openapi.vcs.changes.ui.CurrentBranchComponent
- com.intellij.ui.components.JBLabel
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.openapi.vcs.changes.ui.CurrentBranchComponent$Companion
- sf:TEXT_COLOR:com.intellij.ui.JBColor
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesTree,kotlin.jvm.functions.Function0):V
- f:addChangeListener(kotlin.jvm.functions.Function0,com.intellij.openapi.Disposable):V
- dispose():V
- sf:getBranchPresentationBackground(java.awt.Color):java.awt.Color
- getPreferredSize():java.awt.Dimension
- f:getProject():com.intellij.openapi.project.Project
f:com.intellij.openapi.vcs.changes.ui.CurrentBranchComponent$Companion
- f:getBranchPresentationBackground(java.awt.Color):java.awt.Color
- f:getCurrentBranch(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):com.intellij.vcs.branch.BranchData
- f:getCurrentBranch(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change):com.intellij.vcs.branch.BranchData
- f:getCurrentBranch(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.vcs.branch.BranchData
f:com.intellij.openapi.vcs.changes.ui.DefaultChangesTreeDiffPreviewHandler
- com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler
- sf:INSTANCE:com.intellij.openapi.vcs.changes.ui.DefaultChangesTreeDiffPreviewHandler
f:com.intellij.openapi.vcs.changes.ui.DefaultCommitChangeListDialog
- com.intellij.openapi.vcs.changes.ui.CommitChangeListDialog
- <init>(com.intellij.vcs.commit.SingleChangeListCommitWorkflow):V
- addChangeListListener(com.intellij.vcs.commit.SingleChangeListCommitWorkflowUi$ChangeListListener,com.intellij.openapi.Disposable):V
- getBrowser():com.intellij.openapi.vcs.changes.ui.CommitDialogChangesBrowser
- f:getWorkflow():com.intellij.vcs.commit.SingleChangeListCommitWorkflow
f:com.intellij.openapi.vcs.changes.ui.DefaultInclusionModel
- com.intellij.openapi.vcs.changes.ui.BaseInclusionModel
- <init>():V
- <init>(com.intellij.util.containers.HashingStrategy):V
- b:<init>(com.intellij.util.containers.HashingStrategy,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addInclusion(java.util.Collection):V
- clearInclusion():V
- getInclusion():java.util.Set
- getInclusionState(java.lang.Object):com.intellij.util.ui.ThreeStateCheckBox$State
- isInclusionEmpty():Z
- removeInclusion(java.util.Collection):V
- retainInclusion(java.util.Collection):V
- setInclusion(java.util.Collection):V
com.intellij.openapi.vcs.changes.ui.EditChangelistSupport
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:addControls(javax.swing.JPanel,com.intellij.openapi.vcs.changes.LocalChangeList):com.intellij.util.Consumer
- changelistCreated(com.intellij.openapi.vcs.changes.LocalChangeList):V
- a:installSearch(com.intellij.ui.EditorTextField,com.intellij.ui.EditorTextField):V
a:com.intellij.openapi.vcs.changes.ui.HoverChangesTree
- sf:Companion:com.intellij.openapi.vcs.changes.ui.HoverChangesTree$Companion
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesTree):V
- a:getHoverIcon(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.HoverIcon
- f:getTree():com.intellij.openapi.vcs.changes.ui.ChangesTree
- f:install():V
f:com.intellij.openapi.vcs.changes.ui.HoverChangesTree$Companion
- f:getBackground(com.intellij.ui.treeStructure.Tree,I,Z):java.awt.Color
- f:getRowHeight(com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.openapi.vcs.changes.ui.ChangesTreeCellRenderer):I
- f:getTransparentScrollbarWidth(java.awt.Component):I
a:com.intellij.openapi.vcs.changes.ui.HoverIcon
- <init>(javax.swing.Icon,java.lang.String):V
- f:getIcon():javax.swing.Icon
- f:getTooltip():java.lang.String
- a:invokeAction(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
c:com.intellij.openapi.vcs.changes.ui.LoadingCommittedChangeListPanel
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.project.Project):V
- dispose():V
- getChangesBrowser():com.intellij.openapi.vcs.changes.ui.ChangesBrowserBase
- getContent():javax.swing.JComponent
- getPreferredFocusedComponent():javax.swing.JComponent
- hideCommitMessage():V
- hideSideBorders():V
- loadChangesInBackground(com.intellij.openapi.util.ThrowableComputable):V
- markChangesInAir(Z):V
- setChangeList(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList,com.intellij.openapi.vcs.FilePath):V
- setChanges(java.util.Collection,com.intellij.openapi.vcs.FilePath):V
- setDescription(java.lang.String):V
c:com.intellij.openapi.vcs.changes.ui.LoadingCommittedChangeListPanel$ChangelistData
- f:changeList:com.intellij.openapi.vcs.versionBrowser.CommittedChangeList
- f:toSelect:com.intellij.openapi.vcs.FilePath
- <init>(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList,com.intellij.openapi.vcs.FilePath):V
f:com.intellij.openapi.vcs.changes.ui.NoneChangesGroupingFactory
- com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory
- sf:INSTANCE:com.intellij.openapi.vcs.changes.ui.NoneChangesGroupingFactory
- createGroupingPolicy(com.intellij.openapi.project.Project,javax.swing.tree.DefaultTreeModel):com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicy
com.intellij.openapi.vcs.changes.ui.PresentableChange
- a:getFilePath():com.intellij.openapi.vcs.FilePath
- a:getFileStatus():com.intellij.openapi.vcs.FileStatus
- getTag():com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag
f:com.intellij.openapi.vcs.changes.ui.RemoteStatusChangeNodeDecorator
- com.intellij.openapi.vcs.changes.ui.ChangeNodeDecorator
- <init>(com.intellij.openapi.vcs.changes.RemoteRevisionsCache):V
- <init>(com.intellij.openapi.vcs.changes.RemoteRevisionsCache,com.intellij.openapi.vcs.changes.ui.ChangeListRemoteState):V
- <init>(com.intellij.openapi.vcs.changes.RemoteRevisionsCache,com.intellij.openapi.vcs.changes.ui.ChangeListRemoteState,I):V
- b:<init>(com.intellij.openapi.vcs.changes.RemoteRevisionsCache,com.intellij.openapi.vcs.changes.ui.ChangeListRemoteState,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- decorate(com.intellij.openapi.vcs.changes.Change,com.intellij.ui.SimpleColoredComponent,Z):V
- preDecorate(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z):V
f:com.intellij.openapi.vcs.changes.ui.RollbackChangesDialog
- com.intellij.openapi.ui.DialogWrapper
- sf:Companion:com.intellij.openapi.vcs.changes.ui.RollbackChangesDialog$Companion
- getPreferredFocusedComponent():javax.swing.JComponent
- sf:operationNameByChanges(com.intellij.openapi.project.Project,java.util.Collection):java.lang.String
- sf:rollbackChanges(com.intellij.openapi.project.Project):V
- sf:rollbackChanges(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList):V
- sf:rollbackChanges(com.intellij.openapi.project.Project,java.util.Collection):V
f:com.intellij.openapi.vcs.changes.ui.RollbackChangesDialog$Companion
- f:operationNameByChanges(com.intellij.openapi.project.Project,java.util.Collection):java.lang.String
- f:rollbackChanges(com.intellij.openapi.project.Project):V
- f:rollbackChanges(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList):V
- f:rollbackChanges(com.intellij.openapi.project.Project,java.util.Collection):V
c:com.intellij.openapi.vcs.changes.ui.RollbackWorker
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z):V
- doRollback(java.util.Collection,Z):V
- doRollback(java.util.Collection,Z,java.lang.Runnable,java.lang.String):V
- doRollback(java.util.Collection,Z,java.lang.Runnable,java.lang.String,com.intellij.history.ActivityId,Z):V
- doRollback(java.util.Collection,Z,java.lang.String,com.intellij.history.ActivityId):V
c:com.intellij.openapi.vcs.changes.ui.SelectFilePathsDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,java.util.List,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption,java.lang.String,java.lang.String,Z):V
- p:getFileList():com.intellij.openapi.vcs.changes.ui.ChangesTree
- getSelectedFiles():java.util.Collection
c:com.intellij.openapi.vcs.changes.ui.SelectFilesDialog
- com.intellij.openapi.ui.DialogWrapper
- p:<init>(com.intellij.openapi.project.Project,java.util.List,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption,Z,Z):V
- p:createToolbarActions():com.intellij.openapi.actionSystem.DefaultActionGroup
- p:getFileList():com.intellij.openapi.vcs.changes.ui.ChangesTree
- getSelectedFiles():java.util.Collection
- s:init(com.intellij.openapi.project.Project,java.util.List,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption,Z,Z):com.intellij.openapi.vcs.changes.ui.SelectFilesDialog
- s:init(com.intellij.openapi.project.Project,java.util.List,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption,Z,Z,java.lang.String,java.lang.String):com.intellij.openapi.vcs.changes.ui.SelectFilesDialog
- s:init(com.intellij.openapi.project.Project,java.util.List,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption,Z,Z,Z):com.intellij.openapi.vcs.changes.ui.SelectFilesDialog
- setSelectedFiles(java.util.Collection):V
c:com.intellij.openapi.vcs.changes.ui.SelectFilesDialog$VirtualFileList
- com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeImpl$VirtualFiles
- <init>(com.intellij.openapi.project.Project,Z,Z,java.util.List):V
- p:buildTreeModel(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,java.util.List):javax.swing.tree.DefaultTreeModel
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.openapi.vcs.changes.ui.SessionDialog
- com.intellij.openapi.ui.DialogWrapper
- sf:Companion:com.intellij.openapi.vcs.changes.ui.SessionDialog$Companion
- sf:VCS_CONFIGURATION_UI_TITLE:java.lang.String
- <init>(java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.CommitSession,java.util.List,java.lang.String,javax.swing.JComponent):V
- sf:configureCommitSession(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.vcs.changes.CommitSession,java.util.List,java.lang.String):Z
- getPreferredFocusedComponent():javax.swing.JComponent
f:com.intellij.openapi.vcs.changes.ui.SessionDialog$Companion
- f:configureCommitSession(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.vcs.changes.CommitSession,java.util.List,java.lang.String):Z
c:com.intellij.openapi.vcs.changes.ui.SimpleAsyncChangesBrowser
- com.intellij.openapi.vcs.changes.ui.AsyncChangesBrowserBase
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- getAllChanges():java.util.List
- pf:getChangesTreeModel():com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeModel
- getIncludedChanges():java.util.List
- getSelectedChanges():java.util.List
- setChangeNodeDecorator(com.intellij.openapi.vcs.changes.ui.ChangeNodeDecorator):V
- setChangesToDisplay(java.util.Collection):V
- setChangesToDisplay(java.util.Collection,com.intellij.openapi.vcs.changes.ui.ChangesTree$TreeStateStrategy):V
- setIncludedChanges(java.util.Collection):V
a:com.intellij.openapi.vcs.changes.ui.SimpleAsyncChangesTreeModel
- com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeModel
- sf:Companion:com.intellij.openapi.vcs.changes.ui.SimpleAsyncChangesTreeModel$Companion
- <init>():V
- f:buildTreeModel(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,kotlin.coroutines.Continuation):java.lang.Object
- a:buildTreeModelSync(com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory):javax.swing.tree.DefaultTreeModel
- sf:create(java.util.function.Function):com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeModel
f:com.intellij.openapi.vcs.changes.ui.SimpleAsyncChangesTreeModel$Companion
- f:create(java.util.function.Function):com.intellij.openapi.vcs.changes.ui.AsyncChangesTreeModel
c:com.intellij.openapi.vcs.changes.ui.SimpleChangesBrowser
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserBase
- <init>(com.intellij.openapi.project.Project,java.util.Collection):V
- <init>(com.intellij.openapi.project.Project,Z,Z):V
- p:buildTreeModel():javax.swing.tree.DefaultTreeModel
- getAllChanges():java.util.List
- getIncludedChanges():java.util.List
- getSelectedChanges():java.util.List
- setChangeNodeDecorator(com.intellij.openapi.vcs.changes.ui.ChangeNodeDecorator):V
- setChangesToDisplay(java.util.Collection):V
- setIncludedChanges(java.util.Collection):V
a:com.intellij.openapi.vcs.changes.ui.SimpleChangesGroupingPolicy
- com.intellij.openapi.vcs.changes.ui.BaseChangesGroupingPolicy
- sf:Companion:com.intellij.openapi.vcs.changes.ui.SimpleChangesGroupingPolicy$Companion
- <init>(javax.swing.tree.DefaultTreeModel):V
- pa:createGroupRootNode(java.lang.Object):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- pa:getGroupRootValueFor(com.intellij.openapi.vcs.changes.ui.StaticFilePath,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):java.lang.Object
- f:getModel():javax.swing.tree.DefaultTreeModel
- f:getParentNodeFor(com.intellij.openapi.vcs.changes.ui.StaticFilePath,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
f:com.intellij.openapi.vcs.changes.ui.SimpleChangesGroupingPolicy$Companion
f:com.intellij.openapi.vcs.changes.ui.SimpleTreeDiffRequestProcessor
- com.intellij.openapi.vcs.changes.ui.TreeHandlerDiffRequestProcessor
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.openapi.Disposable):V
a:com.intellij.openapi.vcs.changes.ui.SimpleTreeEditorDiffPreview
- com.intellij.openapi.vcs.changes.DiffPreview
- <init>(com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor,com.intellij.openapi.vcs.changes.ui.ChangesTree):V
- <init>(com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor,com.intellij.openapi.vcs.changes.ui.ChangesTree,javax.swing.JComponent,Z):V
- pf:getChangeViewProcessor():com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor
- p:hasContent():Z
- returnFocusToTree():V
- updateDiffAction(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.vcs.changes.ui.StaticFilePath
- <init>(com.intellij.openapi.vcs.FilePath):V
- getFilePath():com.intellij.openapi.vcs.FilePath
- getKey():java.lang.String
- getParent():com.intellij.openapi.vcs.changes.ui.StaticFilePath
- getPath():java.lang.String
- getVf():com.intellij.openapi.vfs.VirtualFile
- isDirectory():Z
- resolve():com.intellij.openapi.vfs.VirtualFile
c:com.intellij.openapi.vcs.changes.ui.TagChangesBrowserNode
- com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag,com.intellij.ui.SimpleTextAttributes,Z):V
- getTextPresentation():java.lang.String
- render(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNodeRenderer,Z,Z,Z):V
- shouldExpandByDefault():Z
c:com.intellij.openapi.vcs.changes.ui.TreeActionsToolbarPanel
- javax.swing.JPanel
- <init>(com.intellij.openapi.actionSystem.ActionToolbar,com.intellij.openapi.actionSystem.ActionGroup,javax.swing.JComponent):V
- <init>(com.intellij.openapi.actionSystem.ActionToolbar,com.intellij.openapi.vcs.changes.ui.ChangesTree):V
- <init>(java.awt.Component,com.intellij.openapi.actionSystem.ActionGroup,javax.swing.JComponent):V
- <init>(java.awt.Component,com.intellij.openapi.vcs.changes.ui.ChangesTree):V
- s:createTreeActions():java.util.List
- s:createTreeActions(com.intellij.openapi.vcs.changes.ui.ChangesTree):java.util.List
c:com.intellij.openapi.vcs.changes.ui.TreeHandlerChangesTreeTracker
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.diff.impl.DiffEditorViewer,com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler,Z):V
- b:<init>(com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.diff.impl.DiffEditorViewer,com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- pf:getEditorViewer():com.intellij.diff.impl.DiffEditorViewer
- pf:getHandler():com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler
- pf:getTree():com.intellij.openapi.vcs.changes.ui.ChangesTree
- pf:getUpdateWhileShown():Z
- track():V
- f:updatePreviewLater(com.intellij.openapi.vcs.changes.ui.TreeHandlerChangesTreeTracker$UpdateType):V
e:com.intellij.openapi.vcs.changes.ui.TreeHandlerChangesTreeTracker$UpdateType
- java.lang.Enum
- sf:FULL:com.intellij.openapi.vcs.changes.ui.TreeHandlerChangesTreeTracker$UpdateType
- sf:ON_MODEL_CHANGE:com.intellij.openapi.vcs.changes.ui.TreeHandlerChangesTreeTracker$UpdateType
- sf:ON_SELECTION_CHANGE:com.intellij.openapi.vcs.changes.ui.TreeHandlerChangesTreeTracker$UpdateType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.ui.TreeHandlerChangesTreeTracker$UpdateType
- s:values():com.intellij.openapi.vcs.changes.ui.TreeHandlerChangesTreeTracker$UpdateType[]
c:com.intellij.openapi.vcs.changes.ui.TreeHandlerDiffRequestProcessor
- com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor
- <init>(java.lang.String,com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler):V
- pf:getHandler():com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler
- pf:getTree():com.intellij.openapi.vcs.changes.ui.ChangesTree
- f:iterateAllChanges():java.lang.Iterable
- f:iterateSelectedChanges():java.lang.Iterable
- pf:selectChange(com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$Wrapper):V
- p:showAllChangesForEmptySelection():Z
a:com.intellij.openapi.vcs.changes.ui.TreeHandlerEditorDiffPreview
- com.intellij.openapi.vcs.changes.ChangesTreeEditorDiffPreview
- sf:Companion:com.intellij.openapi.vcs.changes.ui.TreeHandlerEditorDiffPreview$Companion
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler):V
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesTree,javax.swing.JComponent,com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler):V
- b:<init>(com.intellij.openapi.vcs.changes.ui.ChangesTree,javax.swing.JComponent,com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- pf:collectDiffProducers(Z):com.intellij.openapi.ListSelection
- pf:createDefaultViewer(java.lang.String):com.intellij.diff.impl.DiffEditorViewer
- p:createViewer():com.intellij.diff.impl.DiffEditorViewer
- pf:getEditorTabName(com.intellij.diff.impl.DiffEditorViewer):java.lang.String
- a:getEditorTabName(com.intellij.openapi.vcs.changes.ChangeViewDiffRequestProcessor$Wrapper):java.lang.String
- pf:getHandler():com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler
- f:hasContent():Z
f:com.intellij.openapi.vcs.changes.ui.TreeHandlerEditorDiffPreview$Companion
- f:createDefaultViewer(com.intellij.openapi.vcs.changes.ui.ChangesTree,com.intellij.openapi.vcs.changes.ui.ChangesTreeDiffPreviewHandler,java.lang.String):com.intellij.diff.impl.DiffEditorViewer
c:com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- com.intellij.openapi.vcs.changes.ui.ChangesViewModelBuilder
- sf:CHANGE_COMPARATOR:java.util.Comparator
- sf:DIRECTORY_CACHE:com.intellij.openapi.util.NotNullLazyKey
- sf:FILE_COMPARATOR:java.util.Comparator
- sf:PATH_COMPARATOR:java.util.Comparator
- sf:PATH_NODE_BUILDER:com.intellij.openapi.util.Key
- f:myModel:javax.swing.tree.DefaultTreeModel
- f:myProject:com.intellij.openapi.project.Project
- f:myRoot:com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory):V
- build():javax.swing.tree.DefaultTreeModel
- s:buildEmpty():javax.swing.tree.DefaultTreeModel
- s:buildFromChangeLists(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,java.util.Collection):javax.swing.tree.DefaultTreeModel
- s:buildFromChangeLists(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,java.util.Collection,Z):javax.swing.tree.DefaultTreeModel
- s:buildFromChanges(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,java.util.Collection,com.intellij.openapi.vcs.changes.ui.ChangeNodeDecorator):javax.swing.tree.DefaultTreeModel
- s:buildFromFilePaths(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,java.util.Collection):javax.swing.tree.DefaultTreeModel
- s:buildFromVirtualFiles(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory,java.util.Collection):javax.swing.tree.DefaultTreeModel
- createChangeNode(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.ui.ChangeNodeDecorator):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- createTagNode(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- createTagNode(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag,com.intellij.ui.SimpleTextAttributes,Z):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- createTagNode(java.lang.String):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- createTagNode(java.lang.String,com.intellij.ui.SimpleTextAttributes,Z):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- createTagNode(java.lang.String,Z):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:getPathForObject(java.lang.Object):com.intellij.openapi.vcs.FilePath
- insertChangeNode(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
- insertChangeNode(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
- insertChangeNode(com.intellij.openapi.vcs.changes.ui.StaticFilePath,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
- p:insertChangeNode(com.intellij.openapi.vcs.changes.ui.StaticFilePath,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,java.util.function.Function):V
- insertChangeNode(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
- insertChangeNode(java.lang.Object,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
- insertChanges(java.util.Collection,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
- insertChanges(java.util.Collection,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangeNodeDecorator):V
- insertFilesIntoNode(java.util.Collection,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):V
- insertSubtreeRoot(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- insertSubtreeRoot(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- insertTagNode(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- isEmpty():Z
- setChangeLists(java.util.Collection,Z,java.util.function.Function):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setChanges(java.util.Collection,com.intellij.openapi.vcs.changes.ui.ChangeNodeDecorator):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setChanges(java.util.Collection,com.intellij.openapi.vcs.changes.ui.ChangeNodeDecorator,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode$Tag):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setFilePaths(java.util.Collection):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setFilePaths(java.util.Collection,com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setIgnored(java.util.List):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setLocallyDeletedPaths(java.util.Collection):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setLockedFolders(java.util.List):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setLogicallyLockedFiles(java.util.Map):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setModifiedWithoutEditing(java.util.List):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setSwitchedFiles(com.intellij.util.containers.MultiMap):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setSwitchedRoots(java.util.Map):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- setUnversioned(java.util.List):com.intellij.openapi.vcs.changes.ui.TreeModelBuilder
- s:staticFrom(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.changes.ui.StaticFilePath
- s:staticFrom(com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.vcs.changes.ui.StaticFilePath
- s:staticFrom(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.changes.ui.StaticFilePath
a:com.intellij.openapi.vcs.changes.ui.VcsToolWindowFactory
- com.intellij.openapi.project.DumbAware
- com.intellij.openapi.wm.ToolWindowFactory
- <init>():V
- createToolWindowContent(com.intellij.openapi.project.Project,com.intellij.openapi.wm.ToolWindow):V
- init(com.intellij.openapi.wm.ToolWindow):V
- a:isAvailable(com.intellij.openapi.project.Project):Z
- p:setEmptyState(com.intellij.openapi.project.Project,com.intellij.util.ui.StatusText):V
- f:shouldBeAvailable(com.intellij.openapi.project.Project):Z
- p:updateState(com.intellij.openapi.wm.ToolWindow):V
a:com.intellij.openapi.vcs.changes.ui.VcsTreeModelData
- <init>():V
- s:all(javax.swing.JTree):com.intellij.openapi.vcs.changes.ui.VcsTreeModelData
- s:all(javax.swing.tree.TreeModel):com.intellij.openapi.vcs.changes.ui.VcsTreeModelData
- s:allUnder(com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode):com.intellij.openapi.vcs.changes.ui.VcsTreeModelData
- s:allUnderTag(javax.swing.JTree,java.lang.Object):com.intellij.openapi.vcs.changes.ui.VcsTreeModelData
- s:exactlySelected(javax.swing.JTree):com.intellij.openapi.vcs.changes.ui.VcsTreeModelData
- s:findTagNode(javax.swing.JTree,java.lang.Object):com.intellij.openapi.vcs.changes.ui.ChangesBrowserNode
- s:getListSelectionOrAll(javax.swing.JTree):com.intellij.openapi.ListSelection
- s:included(com.intellij.openapi.vcs.changes.ui.ChangesTree):com.intellij.openapi.vcs.changes.ui.VcsTreeModelData
- s:includedUnderTag(com.intellij.openapi.vcs.changes.ui.ChangesTree,java.lang.Object):com.intellij.openapi.vcs.changes.ui.VcsTreeModelData
- f:iterateNodes():com.intellij.util.containers.JBIterable
- a:iterateRawNodes():com.intellij.util.containers.JBIterable
- f:iterateRawUserObjects():com.intellij.util.containers.JBIterable
- f:iterateRawUserObjects(java.lang.Class):com.intellij.util.containers.JBIterable
- f:iterateUserObjects():com.intellij.util.containers.JBIterable
- f:iterateUserObjects(java.lang.Class):com.intellij.util.containers.JBIterable
- s:mapToExactVirtualFile(com.intellij.openapi.vcs.changes.ui.VcsTreeModelData):com.intellij.util.containers.JBIterable
- s:mapUserObjectToFilePath(java.lang.Object):com.intellij.openapi.vcs.FilePath
- f:nodesStream():java.util.stream.Stream
- s:selected(javax.swing.JTree):com.intellij.openapi.vcs.changes.ui.VcsTreeModelData
- s:selectedUnderTag(javax.swing.JTree,java.lang.Object):com.intellij.openapi.vcs.changes.ui.VcsTreeModelData
- s:uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink,com.intellij.openapi.project.Project,javax.swing.JTree):V
- f:userObjects():java.util.List
- f:userObjects(java.lang.Class):java.util.List
- f:userObjectsStream(java.lang.Class):java.util.stream.Stream
c:com.intellij.openapi.vcs.changes.ui.VirtualFileHierarchicalComparator
- java.util.Comparator
- <init>():V
- compare(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):I
- s:getInstance():com.intellij.openapi.vcs.changes.ui.VirtualFileHierarchicalComparator
c:com.intellij.openapi.vcs.changes.ui.VirtualFileListCellRenderer
- com.intellij.ui.ColoredListCellRenderer
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,Z):V
- p:customizeCellRenderer(javax.swing.JList,java.lang.Object,I,Z,Z):V
- p:getName(com.intellij.openapi.vcs.FilePath):java.lang.String
- p:getStatus(java.lang.Object,com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.FileStatus
- p:putParentPath(java.lang.Object,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath):V
- p:putParentPathImpl(java.lang.Object,java.lang.String,com.intellij.openapi.vcs.FilePath):V
- p:renderIcon(com.intellij.openapi.vcs.FilePath):V
com.intellij.openapi.vcs.changes.ui.browser.BulkMovesOnlyChangesFilter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:filter(com.intellij.openapi.project.Project,java.util.List):java.util.Collection
c:com.intellij.openapi.vcs.changes.ui.browser.LoadingChangesPanel
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- <init>(javax.swing.JComponent,com.intellij.openapi.Disposable):V
- <init>(javax.swing.JComponent,com.intellij.util.ui.StatusText,com.intellij.openapi.Disposable):V
- dispose():V
- loadChangesInBackground(com.intellij.openapi.util.ThrowableComputable,java.util.function.Consumer):V
- p:startLoadingProgress():V
f:com.intellij.openapi.vcs.checkin.CheckinHandlerUtil
- <init>():V
- s:disableWhenDumb(com.intellij.openapi.project.Project,javax.swing.JCheckBox,java.lang.String):V
- s:filterOutGeneratedAndExcludedFiles(java.util.Collection,com.intellij.openapi.project.Project):java.util.List
- s:getPsiFiles(com.intellij.openapi.project.Project,java.util.Collection):com.intellij.psi.PsiFile[]
- s:isGeneratedOrExcluded(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
a:com.intellij.openapi.vcs.checkin.UnresolvedMergeCheckProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:checkUnresolvedConflicts(com.intellij.openapi.vcs.CheckinProjectPanel,com.intellij.openapi.vcs.changes.CommitContext,com.intellij.openapi.vcs.checkin.CommitInfo):com.intellij.openapi.vcs.checkin.CheckinHandler$ReturnResult
f:com.intellij.openapi.vcs.configurable.IssueNavigationConfigurable
- com.intellij.openapi.options.BoundSearchableConfigurable
- com.intellij.openapi.options.Configurable$NoScroll
- <init>(com.intellij.openapi.project.Project):V
- createPanel():com.intellij.openapi.ui.DialogPanel
f:com.intellij.openapi.vcs.configurable.VcsContentAnnotationConfigurable
- com.intellij.openapi.options.Configurable
- <init>(com.intellij.openapi.project.Project):V
- apply():V
- getDisplayName():java.lang.String
- isModified():Z
- reset():V
f:com.intellij.openapi.vcs.configurable.VcsDirectoryConfigurationPanel
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.openapi.vcs.configurable.VcsDirectoryConfigurationPanel$Companion
- <init>(com.intellij.openapi.project.Project):V
- f:apply():V
- sf:buildVcsesComboBox(com.intellij.openapi.project.Project):com.intellij.openapi.ui.ComboBox
- dispose():V
- f:isModified():Z
- f:reset():V
f:com.intellij.openapi.vcs.configurable.VcsDirectoryConfigurationPanel$Companion
- f:buildVcsesComboBox(com.intellij.openapi.project.Project):com.intellij.openapi.ui.ComboBox
a:com.intellij.openapi.vcs.configurable.VcsOptionsTopHitProviderBase
- com.intellij.ide.ui.OptionsSearchTopHitProvider$ProjectLevelProvider
- <init>():V
- p:isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.VcsKey):Z
e:com.intellij.openapi.vcs.ex.ExclusionState
- java.lang.Enum
- sf:ALL_EXCLUDED:com.intellij.openapi.vcs.ex.ExclusionState
- sf:ALL_INCLUDED:com.intellij.openapi.vcs.ex.ExclusionState
- sf:NO_CHANGES:com.intellij.openapi.vcs.ex.ExclusionState
- sf:PARTIALLY:com.intellij.openapi.vcs.ex.ExclusionState
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.ex.ExclusionState
- s:values():com.intellij.openapi.vcs.ex.ExclusionState[]
com.intellij.openapi.vcs.ex.LineStatusTracker
- com.intellij.openapi.vcs.ex.LineStatusTrackerI
- a:getProject():com.intellij.openapi.project.Project
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- isAvailableAt(com.intellij.openapi.editor.Editor):Z
- a:scrollAndShowHint(com.intellij.openapi.vcs.ex.Range,com.intellij.openapi.editor.Editor):V
- a:showHint(com.intellij.openapi.vcs.ex.Range,com.intellij.openapi.editor.Editor):V
f:com.intellij.openapi.vcs.ex.LineStatusTrackerKt
- sf:saveDocumentWhenUnchanged(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):V
com.intellij.openapi.vcs.ex.LocalLineStatusTracker
- com.intellij.openapi.vcs.ex.LineStatusTracker
- a:freeze():V
- a:getMode():com.intellij.openapi.vcs.ex.LocalLineStatusTracker$Mode
- isAvailableAt(com.intellij.openapi.editor.Editor):Z
- a:release():V
- a:setMode(com.intellij.openapi.vcs.ex.LocalLineStatusTracker$Mode):V
- a:unfreeze():V
f:com.intellij.openapi.vcs.ex.LocalLineStatusTracker$Mode
- <init>(Z,Z,Z):V
- f:getDetectWhitespaceChangedLines():Z
- f:getShowErrorStripeMarkers():Z
- f:isVisible():Z
f:com.intellij.openapi.vcs.ex.LocalRange
- com.intellij.openapi.vcs.ex.Range
- f:getChangelistId():java.lang.String
- getClientIds():java.util.List
- f:getExclusionState():com.intellij.openapi.vcs.ex.RangeExclusionState
f:com.intellij.openapi.vcs.ex.PartialCommitContent
- <init>(java.lang.CharSequence,java.lang.CharSequence,java.util.List):V
- f:getCurrentContent():java.lang.CharSequence
- f:getRangesToCommit():java.util.List
- f:getVcsContent():java.lang.CharSequence
a:com.intellij.openapi.vcs.ex.PartialCommitHelper
- <init>(java.lang.String):V
- a:applyChanges():V
- f:getContent():java.lang.String
com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker
- com.intellij.openapi.vcs.ex.LineStatusTracker
- a:addListener(com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker$Listener,com.intellij.openapi.Disposable):V
- a:getAffectedChangeListsIds():java.util.List
- a:getChangesToBeCommitted(com.intellij.diff.util.Side,java.util.List,Z):java.lang.String
- a:getExcludedFromCommitState(java.lang.String):com.intellij.openapi.vcs.ex.ExclusionState
- a:getPartialCommitContent(java.util.List,Z):com.intellij.openapi.vcs.ex.PartialCommitContent
- a:handlePartialCommit(com.intellij.diff.util.Side,java.util.List,Z):com.intellij.openapi.vcs.ex.PartialCommitHelper
- a:hasPartialChangesToCommit():Z
- a:moveToChangelist(com.intellij.openapi.vcs.ex.Range,com.intellij.openapi.vcs.changes.LocalChangeList):V
- a:moveToChangelist(java.util.BitSet,com.intellij.openapi.vcs.changes.LocalChangeList):V
- a:rollbackChanges(java.util.List,Z):V
- a:setExcludedFromCommit(com.intellij.openapi.vcs.ex.Range,Z):V
- a:setExcludedFromCommit(java.lang.String,Z):V
- a:setExcludedFromCommit(java.util.BitSet,Z):V
- a:setExcludedFromCommit(Z):V
- a:setPartiallyExcludedFromCommit(java.util.BitSet,com.intellij.diff.util.Side,Z):V
com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker$Listener
- java.util.EventListener
- onBecomingValid(com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker):V
- onChangeListMarkerChange(com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker):V
- onChangeListsChange(com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker):V
- onExcludedFromCommitChange(com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker):V
c:com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker$ListenerAdapter
- com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker$Listener
- <init>():V
a:com.intellij.openapi.vcs.ex.ProjectLevelVcsManagerEx
- com.intellij.openapi.vcs.ProjectLevelVcsManager
- sf:MAPPING_DETECTION_LOG:com.intellij.openapi.diagnostic.Logger
- sf:VCS_ACTIVATED:com.intellij.util.messages.Topic
- <init>():V
- a:fireDirectoryMappingsChanged():V
- a:getAllConfirmations():java.util.List
- a:getAllOptions():java.util.List
- a:getConfirmation(com.intellij.openapi.vcs.VcsConfiguration$StandardConfirmation):com.intellij.openapi.vcs.impl.projectlevelman.PersistentVcsShowConfirmationOption
- a:getContentManager():com.intellij.ui.content.ContentManager
- s:getInstanceEx(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.ex.ProjectLevelVcsManagerEx
- a:getOptions(com.intellij.openapi.vcs.VcsConfiguration$StandardOption):com.intellij.openapi.vcs.impl.projectlevelman.PersistentVcsShowSettingOption
- a:haveDefaultMapping():java.lang.String
- a:notifyDirectoryMappingChanged():V
- a:scheduleMappedRootsUpdate():V
- a:showUpdateProjectInfo(com.intellij.openapi.vcs.update.UpdatedFiles,java.lang.String,com.intellij.openapi.vcs.update.ActionInfo,Z):com.intellij.openapi.vcs.update.UpdateInfoTree
c:com.intellij.openapi.vcs.ex.RollbackLineStatusAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- p:doAction(com.intellij.openapi.vcs.ex.LineStatusTrackerI,com.intellij.openapi.editor.Editor,com.intellij.openapi.vcs.ex.Range):V
- s:rollback(com.intellij.openapi.vcs.ex.LineStatusTrackerI,com.intellij.openapi.editor.Editor):V
- s:rollback(com.intellij.openapi.vcs.ex.LineStatusTrackerI,com.intellij.openapi.vcs.ex.Range,com.intellij.openapi.editor.Editor):V
f:com.intellij.openapi.vcs.ex.SimpleLocalLineStatusTracker
- com.intellij.openapi.vcs.ex.LineStatusTrackerBase
- com.intellij.openapi.vcs.ex.LocalLineStatusTracker
- sf:Companion:com.intellij.openapi.vcs.ex.SimpleLocalLineStatusTracker$Companion
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.openapi.vfs.VirtualFile):V
- sf:createTracker(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.ex.SimpleLocalLineStatusTracker
- f:hasPartialState():V
- setBaseRevision(java.lang.CharSequence):V
f:com.intellij.openapi.vcs.ex.SimpleLocalLineStatusTracker$Companion
- f:createTracker(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.ex.SimpleLocalLineStatusTracker
com.intellij.openapi.vcs.ex.VcsActivationListener
- java.util.EventListener
- a:vcsesActivated(java.util.List):V
a:com.intellij.openapi.vcs.history.BaseDiffFromHistoryHandler
- com.intellij.openapi.vcs.history.DiffFromHistoryHandler
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project):V
- p:doShowDiff(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):V
- pa:getAffectedChanges(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision):java.util.List
- p:getAffectedChangesDialogTitle(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision):java.lang.String
- pa:getChangesBetweenRevisions(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):java.util.List
- p:getChangesBetweenRevisionsDialogTitle(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):java.lang.String
- pa:getPresentableName(com.intellij.openapi.vcs.history.VcsFileRevision):java.lang.String
- p:showAffectedChanges(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision):V
- p:showChangesBetweenRevisions(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):V
- p:showChangesDialog(java.lang.String,java.util.List):V
- showDiffForOne(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):V
- showDiffForTwo(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):V
- p:showError(com.intellij.openapi.vcs.VcsException,java.lang.String):V
pa:com.intellij.openapi.vcs.history.BaseDiffFromHistoryHandler$CollectChangesTask
- com.intellij.openapi.progress.Task$Backgroundable
- <init>(com.intellij.openapi.vcs.history.BaseDiffFromHistoryHandler,java.lang.String):V
- a:getChanges():java.util.List
- a:getDialogTitle():java.lang.String
- onSuccess():V
- run(com.intellij.openapi.progress.ProgressIndicator):V
f:com.intellij.openapi.vcs.history.FileHistoryPanelImpl
- javax.swing.JPanel
- com.intellij.ide.CopyProvider
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiDataProvider
- com.intellij.openapi.editor.colors.EditorColorsListener
- sf:PREVIOUS_REVISION_FOR_DIFF:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsHistorySession,com.intellij.openapi.vcs.history.VcsHistoryProvider,com.intellij.openapi.vcs.history.FileHistoryRefresherI,Z):V
- <init>(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.history.VcsHistorySession,com.intellij.openapi.vcs.history.VcsHistoryProvider,com.intellij.openapi.vcs.history.FileHistoryRefresherI,Z):V
- dispose():V
- equals(java.lang.Object):Z
- finishRefresh():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getPresentableText(com.intellij.openapi.vcs.history.VcsFileRevision,Z):java.lang.String
- getSelectedRevisions():com.intellij.openapi.vcs.history.VcsFileRevision[]
- globalSchemeChange(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- hashCode():I
- isCopyEnabled(com.intellij.openapi.actionSystem.DataContext):Z
- isCopyVisible(com.intellij.openapi.actionSystem.DataContext):Z
- performCopy(com.intellij.openapi.actionSystem.DataContext):V
- s:sameHistories(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber):Z
- setBottomRevisionForShowDiff(com.intellij.openapi.vcs.history.VcsFileRevision):V
- setHistorySession(com.intellij.openapi.vcs.history.VcsHistorySession):V
- setIsStaticAndEmbedded(Z):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
c:com.intellij.openapi.vcs.history.FileHistoryPanelImpl$AuthorColumnInfo
- com.intellij.util.ui.ColumnInfo
- <init>():V
- getComparator():java.util.Comparator
- getCustomizedRenderer(com.intellij.openapi.vcs.history.VcsFileRevision,javax.swing.table.TableCellRenderer):javax.swing.table.TableCellRenderer
- getPreferredStringValue():java.lang.String
- getRenderer(com.intellij.openapi.vcs.history.VcsFileRevision):javax.swing.table.TableCellRenderer
- valueOf(com.intellij.openapi.vcs.history.VcsFileRevision):java.lang.String
c:com.intellij.openapi.vcs.history.FileHistoryPanelImpl$DateColumnInfo
- com.intellij.util.ui.ColumnInfo
- <init>():V
- getComparator():java.util.Comparator
- getPreferredStringValue():java.lang.String
- getRenderer(com.intellij.openapi.vcs.history.VcsFileRevision):javax.swing.table.TableCellRenderer
- valueOf(com.intellij.openapi.vcs.history.VcsFileRevision):java.util.Date
c:com.intellij.openapi.vcs.history.FileHistoryPanelImpl$MessageColumnInfo
- com.intellij.util.ui.ColumnInfo
- <init>(com.intellij.openapi.project.Project):V
- getComparator():java.util.Comparator
- getPreferredStringValue():java.lang.String
- getRenderer(com.intellij.openapi.vcs.history.VcsFileRevision):javax.swing.table.TableCellRenderer
- s:getSubject(com.intellij.openapi.vcs.history.VcsFileRevision):java.lang.String
- valueOf(com.intellij.openapi.vcs.history.VcsFileRevision):java.lang.String
c:com.intellij.openapi.vcs.history.FileHistoryPanelImpl$RevisionColumnInfo
- com.intellij.util.ui.ColumnInfo
- <init>(java.util.Comparator):V
- getComparator():java.util.Comparator
- getPreferredStringValue():java.lang.String
- getRenderer(com.intellij.openapi.vcs.history.VcsFileRevision):javax.swing.table.TableCellRenderer
- valueOf(com.intellij.openapi.vcs.history.VcsFileRevision):com.intellij.openapi.vcs.history.VcsRevisionNumber
com.intellij.openapi.vcs.history.FileHistoryRefresherI
- a:isInRefresh():Z
- a:refresh(Z):V
- a:selectContent():V
c:com.intellij.openapi.vcs.history.VcsAnnotationCachedProxy
- com.intellij.openapi.vcs.annotate.AnnotationProvider
- com.intellij.vcs.CacheableAnnotationProvider
- <init>(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vcs.annotate.AnnotationProvider):V
- annotate(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.annotate.FileAnnotation
- annotate(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.history.VcsFileRevision):com.intellij.openapi.vcs.annotate.FileAnnotation
- getFromCache(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.annotate.FileAnnotation
- isAnnotationValid(com.intellij.openapi.vcs.history.VcsFileRevision):Z
- populateCache(com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.openapi.vcs.history.VcsDiffUtil
- <init>():V
- s:createChangesWithCurrentContentForFile(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.changes.ContentRevision):java.util.List
- s:getRevisionTitle(com.intellij.openapi.vcs.changes.ContentRevision,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath):java.lang.String
- s:getRevisionTitle(java.lang.String,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath):java.lang.String
- s:getRevisionTitle(java.lang.String,Z):java.lang.String
- s:putFilePathsIntoChangeContext(com.intellij.openapi.vcs.changes.Change,java.util.Map):V
- s:showChangesDialog(com.intellij.openapi.project.Project,java.lang.String,java.util.List):V
- s:showChangesWithWorkingDirLater(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.diff.DiffProvider):V
f:com.intellij.openapi.vcs.history.VcsHistoryUtil
- s:compare(com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):I
- s:compareNumbers(com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):I
- s:isEmpty(com.intellij.openapi.vcs.history.VcsFileRevision):Z
- s:loadContentForDiff(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision):com.intellij.diff.contents.DiffContent
- s:loadRevisionContent(com.intellij.openapi.vcs.history.VcsFileRevision):B[]
- s:loadRevisionContentGuessEncoding(com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.lang.String
- s:showDiff(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision,java.lang.String,java.lang.String):V
- s:showDifferencesInBackground(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):V
c:com.intellij.openapi.vcs.history.actions.CopyRevisionNumberAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.history.impl.VcsSelectionHistoryDialog
- com.intellij.openapi.ui.FrameWrapper
- com.intellij.openapi.actionSystem.DataProvider
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document,com.intellij.openapi.vcs.history.VcsHistoryProvider,com.intellij.openapi.vcs.AbstractVcs,I,I,java.lang.String):V
- dispose():V
- getData(java.lang.String):java.lang.Object
c:com.intellij.openapi.vcs.history.impl.VcsSelectionHistoryDialog$MyDiffAction
- com.intellij.openapi.actionSystem.AnActionExtensionProvider
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isActive(com.intellij.openapi.actionSystem.AnActionEvent):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.vcs.history.impl.VcsSelectionHistoryDialog$MyDiffAfterWithLocalAction
- com.intellij.openapi.actionSystem.AnActionExtensionProvider
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isActive(com.intellij.openapi.actionSystem.AnActionEvent):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.vcs.impl.AbstractVcsHelperImpl
- com.intellij.openapi.vcs.AbstractVcsHelper
- p:<init>(com.intellij.openapi.project.Project):V
- commitChanges(java.util.Collection,com.intellij.openapi.vcs.changes.LocalChangeList,java.lang.String,com.intellij.openapi.vcs.changes.CommitResultHandler):Z
- s:getRemoteList(com.intellij.openapi.vcs.CommittedChangesProvider,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.versionBrowser.CommittedChangeList
- handleCustom(com.intellij.openapi.vcs.VcsException):Z
- s:loadAndShowCommittedChangesDetails(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.impl.AbstractVcsHelperImpl$CommittedChangeListProvider):V
- s:loadAndShowCommittedChangesDetails(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.FilePath,Z,com.intellij.openapi.vcs.impl.AbstractVcsHelperImpl$CommittedChangeListProvider):V
- loadAndShowCommittedChangesDetails(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.RepositoryLocation,Z):V
- openCommittedChangesTab(com.intellij.openapi.vcs.CommittedChangesProvider,com.intellij.openapi.vcs.RepositoryLocation,com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings,I,java.lang.String):V
- runTransactionRunnable(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vcs.TransactionRunnable,java.lang.Object):java.util.List
- selectFilePathsToProcess(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption):java.util.Collection
- selectFilePathsToProcess(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption,java.lang.String,java.lang.String):java.util.Collection
- selectFilesToProcess(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption):java.util.Collection
- s:setCustomExceptionHandler(com.intellij.openapi.project.Project,com.intellij.util.Consumer):V
- showAnnotation(com.intellij.openapi.vcs.annotate.FileAnnotation,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.AbstractVcs):V
- showAnnotation(com.intellij.openapi.vcs.annotate.FileAnnotation,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.AbstractVcs,I):V
- showChangesListBrowser(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList,java.lang.String):V
- s:showCommittedChangesAsTab():Z
- showCommittedChangesBrowser(com.intellij.openapi.vcs.CommittedChangesProvider,com.intellij.openapi.vcs.RepositoryLocation,java.lang.String,java.awt.Component):V
- showErrors(java.util.List,java.lang.String):V
- showErrors(java.util.Map,java.lang.String):V
- showFileHistory(com.intellij.openapi.vcs.history.VcsHistoryProvider,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.AbstractVcs):V
- showFileHistory(com.intellij.openapi.vcs.history.VcsHistoryProvider,com.intellij.openapi.vcs.annotate.AnnotationProvider,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.AbstractVcs):V
- showFileHistory(com.intellij.vcs.history.VcsHistoryProviderEx,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- showMergeDialog(java.util.List,com.intellij.openapi.vcs.merge.MergeProvider,com.intellij.openapi.vcs.merge.MergeDialogCustomizer):java.util.List
- showWhatDiffersBrowser(java.util.Collection,java.lang.String):V
com.intellij.openapi.vcs.impl.AbstractVcsHelperImpl$CommittedChangeListProvider
- a:loadChangelist():com.intellij.openapi.util.Pair
c:com.intellij.openapi.vcs.impl.BackgroundableActionLock
- equals(java.lang.Object):Z
- s:getLock(com.intellij.openapi.project.Project,java.lang.Object[]):com.intellij.openapi.vcs.impl.BackgroundableActionLock
- hashCode():I
- isLocked():Z
- s:isLocked(com.intellij.openapi.project.Project,java.lang.Object[]):Z
- lock():V
- s:lock(com.intellij.openapi.project.Project,java.lang.Object[]):V
- unlock():V
- s:unlock(com.intellij.openapi.project.Project,java.lang.Object[]):V
f:com.intellij.openapi.vcs.impl.ChangesBrowserToolWindow
- sf:INSTANCE:com.intellij.openapi.vcs.impl.ChangesBrowserToolWindow
- sf:TOOLWINDOW_ID:java.lang.String
- sf:createDiffPreview(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ui.ChangesBrowserBase,com.intellij.openapi.Disposable):com.intellij.openapi.vcs.changes.DiffPreview
- sf:showTab(com.intellij.openapi.project.Project,com.intellij.ui.content.Content):V
f:com.intellij.openapi.vcs.impl.CheckinHandlersManagerImpl
- com.intellij.openapi.vcs.impl.CheckinHandlersManager
- <init>():V
- getRegisteredCheckinHandlerFactories(com.intellij.openapi.vcs.AbstractVcs[]):java.util.List
a:com.intellij.openapi.vcs.impl.ContentRootChangeListener
- com.intellij.platform.backend.workspace.WorkspaceModelChangeListener
- <init>(Z):V
- changed(com.intellij.platform.workspace.storage.VersionedStorageChange):V
- a:contentRootsChanged(java.util.List,java.util.List):V
- f:getSkipFileChanges():Z
a:com.intellij.openapi.vcs.impl.DefaultVcsRootPolicy
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project):V
- f:getDefaultVcsRoots():java.util.Collection
- pa:getDefaultVcsRootsCandidates():java.util.Collection
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.impl.DefaultVcsRootPolicy
- getProjectConfigurationMessage():java.lang.String
- p:scheduleMappedRootsUpdate():V
- p:scheduleRootsChangeProcessing(java.util.Collection,java.util.Collection):V
a:com.intellij.openapi.vcs.impl.GenericNotifierImpl
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.notification.NotificationType):V
- pa:ask(java.lang.Object,java.lang.String):Z
- f:clear():V
- p:configureNotification(com.intellij.notification.Notification,java.lang.Object):V
- ensureNotify(java.lang.Object):Z
- pf:getAllCurrentKeys():java.util.List
- pa:getKey(java.lang.Object):java.lang.Object
- pa:getNotificationContent(java.lang.Object):java.lang.String
- pf:getStateFor(java.lang.Object):Z
- f:isEmpty():Z
- p:onFirstNotification(java.lang.Object):Z
- f:removeLazyNotification(java.lang.Object):V
- f:removeLazyNotificationByKey(java.lang.Object):V
pf:com.intellij.openapi.vcs.impl.GenericNotifierImpl$MyNotification
- com.intellij.notification.Notification
- <init>(com.intellij.openapi.vcs.impl.GenericNotifierImpl,java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationType,com.intellij.notification.NotificationListener,java.lang.Object):V
- expire():V
- f:getObj():java.lang.Object
f:com.intellij.openapi.vcs.impl.LineStatusTrackerBaseContentUtil
- <init>():V
- s:createBaseContent(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.ContentRevision):com.intellij.openapi.vcs.impl.VcsBaseContentProvider$BaseContent
- s:getBaseRevision(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.impl.VcsBaseContentProvider$BaseContent
- s:isSupported(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- s:isTracked(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
com.intellij.openapi.vcs.impl.LineStatusTrackerContentLoader
- com.intellij.openapi.vcs.impl.LocalLineStatusTrackerProvider
- a:getContentInfo(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.impl.LineStatusTrackerContentLoader$ContentInfo
- a:handleLoadingError(com.intellij.openapi.vcs.ex.LocalLineStatusTracker):V
- a:loadContent(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.impl.LineStatusTrackerContentLoader$ContentInfo):com.intellij.openapi.vcs.impl.LineStatusTrackerContentLoader$TrackerContent
- a:setLoadedContent(com.intellij.openapi.vcs.ex.LocalLineStatusTracker,com.intellij.openapi.vcs.impl.LineStatusTrackerContentLoader$TrackerContent):V
- a:shouldBeUpdated(com.intellij.openapi.vcs.impl.LineStatusTrackerContentLoader$ContentInfo,com.intellij.openapi.vcs.impl.LineStatusTrackerContentLoader$ContentInfo):Z
com.intellij.openapi.vcs.impl.LineStatusTrackerContentLoader$ContentInfo
com.intellij.openapi.vcs.impl.LineStatusTrackerContentLoader$TrackerContent
f:com.intellij.openapi.vcs.impl.LineStatusTrackerManager
- com.intellij.openapi.Disposable
- com.intellij.openapi.vcs.impl.LineStatusTrackerManagerI
- sf:Companion:com.intellij.openapi.vcs.impl.LineStatusTrackerManager$Companion
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- f:addTrackerListener(com.intellij.openapi.vcs.impl.LineStatusTrackerManager$Listener,com.intellij.openapi.Disposable):V
- arePartialChangelistsEnabled():Z
- arePartialChangelistsEnabled(com.intellij.openapi.vfs.VirtualFile):Z
- dispose():V
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.impl.LineStatusTrackerManagerI
- sf:getInstanceImpl(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.impl.LineStatusTrackerManager
- getLineStatusTracker(com.intellij.openapi.editor.Document):com.intellij.openapi.vcs.ex.LineStatusTracker
- getLineStatusTracker(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.ex.LineStatusTracker
- f:getTrackers():java.util.List
- f:hasPendingUpdate(com.intellij.openapi.editor.Document):Z
- invokeAfterUpdate(java.lang.Runnable):V
- f:releaseAllTrackers():V
- releaseTrackerFor(com.intellij.openapi.editor.Document,java.lang.Object):V
- requestTrackerFor(com.intellij.openapi.editor.Document,java.lang.Object):V
- f:resetExcludedFromCommitMarkers():V
- f:waitUntilBaseContentsLoaded():V
f:com.intellij.openapi.vcs.impl.LineStatusTrackerManager$CheckinFactory
- com.intellij.openapi.vcs.checkin.CheckinHandlerFactory
- <init>():V
- createHandler(com.intellij.openapi.vcs.CheckinProjectPanel,com.intellij.openapi.vcs.changes.CommitContext):com.intellij.openapi.vcs.checkin.CheckinHandler
f:com.intellij.openapi.vcs.impl.LineStatusTrackerManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.impl.LineStatusTrackerManagerI
- f:getInstanceImpl(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.impl.LineStatusTrackerManager
- f:getTOPIC():com.intellij.util.messages.Topic
com.intellij.openapi.vcs.impl.LineStatusTrackerManager$Listener
- java.util.EventListener
- onTrackerAdded(com.intellij.openapi.vcs.ex.LineStatusTracker):V
- onTrackerBecomeValid(com.intellij.openapi.vcs.ex.LineStatusTracker):V
- onTrackerRemoved(com.intellij.openapi.vcs.ex.LineStatusTracker):V
c:com.intellij.openapi.vcs.impl.LineStatusTrackerManager$ListenerAdapter
- com.intellij.openapi.vcs.impl.LineStatusTrackerManager$Listener
- <init>():V
com.intellij.openapi.vcs.impl.LineStatusTrackerManagerI
- a:arePartialChangelistsEnabled():Z
- a:arePartialChangelistsEnabled(com.intellij.openapi.vfs.VirtualFile):Z
- a:getLineStatusTracker(com.intellij.openapi.editor.Document):com.intellij.openapi.vcs.ex.LineStatusTracker
- a:getLineStatusTracker(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.ex.LineStatusTracker
- a:invokeAfterUpdate(java.lang.Runnable):V
- a:releaseTrackerFor(com.intellij.openapi.editor.Document,java.lang.Object):V
- a:requestTrackerFor(com.intellij.openapi.editor.Document,java.lang.Object):V
f:com.intellij.openapi.vcs.impl.LocalChangesUnderRoots
- <init>():V
- s:getChangesUnderRoots(java.util.Collection,com.intellij.openapi.project.Project):java.util.Map
- s:getChangesUnderRoots(java.util.Collection,com.intellij.openapi.vcs.changes.ChangeListManager,com.intellij.openapi.project.Project):java.util.Map
com.intellij.openapi.vcs.impl.LocalLineStatusTrackerProvider
- sf:Companion:com.intellij.openapi.vcs.impl.LocalLineStatusTrackerProvider$Companion
- a:createTracker(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.ex.LocalLineStatusTracker
- a:isMyTracker(com.intellij.openapi.vcs.ex.LocalLineStatusTracker):Z
- a:isTrackedFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.openapi.vcs.impl.LocalLineStatusTrackerProvider$Companion
f:com.intellij.openapi.vcs.impl.PartialChangesUtil
- sf:INSTANCE:com.intellij.openapi.vcs.impl.PartialChangesUtil
- sf:computeUnderChangeList(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.util.Computable):java.lang.Object
- sf:computeUnderChangeListSync(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.util.Computable):java.lang.Object
- sf:convertExclusionState(com.intellij.openapi.vcs.ex.ExclusionState):com.intellij.util.ui.ThreeStateCheckBox$State
- sf:getPartialTracker(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker
- sf:getPartialTracker(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.ex.PartialLocalLineStatusTracker
- sf:getVirtualFile(com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.vfs.VirtualFile
- sf:processPartialChanges(com.intellij.openapi.project.Project,java.util.Collection,Z,com.intellij.util.PairFunction):java.util.List
- sf:runUnderChangeList(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList,java.lang.Runnable):V
- f:underChangeList(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.LocalChangeList,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- sf:wrapPartialChanges(com.intellij.openapi.project.Project,java.util.List):java.util.List
f:com.intellij.openapi.vcs.impl.ProjectLevelVcsManagerImpl
- com.intellij.openapi.vcs.ex.ProjectLevelVcsManagerEx
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- addInitializationRequest(com.intellij.openapi.vcs.impl.VcsInitObject,java.lang.Runnable):V
- addMessageToConsoleWindow(com.intellij.openapi.vcs.VcsConsoleLine):V
- addMessageToConsoleWindow(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType):V
- addMessageToConsoleWindow(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):V
- areVcsesActivated():Z
- checkAllFilesAreUnder(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vfs.VirtualFile[]):Z
- checkVcsIsActive(com.intellij.openapi.vcs.AbstractVcs):Z
- checkVcsIsActive(java.lang.String):Z
- dispose():V
- findVcsByName(java.lang.String):com.intellij.openapi.vcs.AbstractVcs
- findVersioningVcs(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.AbstractVcs
- fireDirectoryMappingsChanged():V
- getAllActiveVcss():com.intellij.openapi.vcs.AbstractVcs[]
- getAllConfirmations():java.util.List
- getAllOptions():java.util.List
- getAllSupportedVcss():com.intellij.openapi.vcs.AbstractVcs[]
- getAllVcsRoots():com.intellij.openapi.vcs.VcsRoot[]
- getAllVcss():com.intellij.openapi.vcs.impl.VcsDescriptor[]
- getAllVersionedRoots():com.intellij.openapi.vfs.VirtualFile[]
- getAnnotationLocalChangesListener():com.intellij.openapi.vcs.changes.VcsAnnotationLocalChangesListener
- getCompositeCheckoutListener():com.intellij.openapi.vcs.CheckoutProvider$Listener
- getConfirmation(com.intellij.openapi.vcs.VcsConfiguration$StandardConfirmation):com.intellij.openapi.vcs.impl.projectlevelman.PersistentVcsShowConfirmationOption
- getConsolidatedVcsName():java.lang.String
- getContentManager():com.intellij.ui.content.ContentManager
- getContentRevisionCache():com.intellij.openapi.vcs.impl.ContentRevisionCache
- getDescriptor(java.lang.String):com.intellij.openapi.vcs.impl.VcsDescriptor
- getDirectoryMappingFor(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.VcsDirectoryMapping
- getDirectoryMappings():java.util.List
- getDirectoryMappings(com.intellij.openapi.vcs.AbstractVcs):java.util.List
- s:getInstanceImpl(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.impl.ProjectLevelVcsManagerImpl
- getOptions(com.intellij.openapi.vcs.VcsConfiguration$StandardOption):com.intellij.openapi.vcs.impl.projectlevelman.PersistentVcsShowSettingOption
- getRootChecker(com.intellij.openapi.vcs.AbstractVcs):com.intellij.openapi.vcs.VcsRootChecker
- getRootsUnderVcs(com.intellij.openapi.vcs.AbstractVcs):com.intellij.openapi.vfs.VirtualFile[]
- getRootsUnderVcsWithoutFiltering(com.intellij.openapi.vcs.AbstractVcs):java.util.List
- getShortNameForVcsRoot(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getSingleVCS():com.intellij.openapi.vcs.AbstractVcs
- getStandardConfirmation(com.intellij.openapi.vcs.VcsConfiguration$StandardConfirmation,com.intellij.openapi.vcs.AbstractVcs):com.intellij.openapi.vcs.VcsShowConfirmationOption
- getStandardOption(com.intellij.openapi.vcs.VcsConfiguration$StandardOption,com.intellij.openapi.vcs.AbstractVcs):com.intellij.openapi.vcs.VcsShowSettingOption
- getState():org.jdom.Element
- getVcsFor(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.AbstractVcs
- getVcsFor(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.AbstractVcs
- getVcsHistoryCache():com.intellij.openapi.vcs.history.VcsHistoryCache
- getVcsRootFor(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vfs.VirtualFile
- getVcsRootFor(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- getVcsRootObjectFor(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.VcsRoot
- getVcsRootObjectFor(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.VcsRoot
- hasActiveVcss():Z
- hasAnyMappings():Z
- haveDefaultMapping():java.lang.String
- haveVcses():Z
- isBackgroundVcsOperationRunning():Z
- isFileInContent(com.intellij.openapi.vfs.VirtualFile):Z
- isIgnored(com.intellij.openapi.vcs.FilePath):Z
- isIgnored(com.intellij.openapi.vfs.VirtualFile):Z
- iterateVcsRoot(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor):V
- iterateVcsRoot(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor,com.intellij.openapi.vcs.VirtualFileFilter):V
- iterateVfUnderVcsRoot(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor):V
- loadState(org.jdom.Element):V
- notifyDirectoryMappingChanged():V
- registerNewDirectMappings(java.util.Collection):V
- registerVcs(com.intellij.openapi.vcs.AbstractVcs):V
- removeDirectoryMapping(com.intellij.openapi.vcs.VcsDirectoryMapping):V
- runAfterInitialization(java.lang.Runnable):V
- scheduleMappedRootsUpdate():V
- scrollConsoleToTheEnd():V
- setAutoDirectoryMappings(java.util.List):V
- setDirectoryMapping(java.lang.String,java.lang.String):V
- setDirectoryMappings(java.util.List):V
- showConsole(java.lang.Runnable):V
- showProjectOperationInfo(com.intellij.openapi.vcs.update.UpdatedFiles,java.lang.String):V
- showUpdateProjectInfo(com.intellij.openapi.vcs.update.UpdatedFiles,java.lang.String,com.intellij.openapi.vcs.update.ActionInfo,Z):com.intellij.openapi.vcs.update.UpdateInfoTree
- startBackgroundVcsOperation():V
- stopBackgroundVcsOperation():V
- unregisterVcs(com.intellij.openapi.vcs.AbstractVcs):V
- updateMappedVcsesImmediately():V
- waitForInitialized():V
f:com.intellij.openapi.vcs.impl.RepositoryBrowser
- sf:INSTANCE:com.intellij.openapi.vcs.impl.RepositoryBrowser
- sf:TOOLWINDOW_ID:java.lang.String
- f:showRepositoryBrowser(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.vfs.AbstractVcsVirtualFile,com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
c:com.intellij.openapi.vcs.impl.UpToDateLineNumberProviderImpl
- com.intellij.openapi.localVcs.UpToDateLineNumberProvider
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):V
- getLineCount():I
- getLineNumber(I):I
- getLineNumber(I,Z):I
- isLineChanged(I):Z
- isRangeChanged(I,I):Z
e:com.intellij.openapi.vcs.impl.VcsBackgroundableActions
- java.lang.Enum
- sf:ANNOTATE:com.intellij.openapi.vcs.impl.VcsBackgroundableActions
- sf:COMMITTED_CHANGES_DETAILS:com.intellij.openapi.vcs.impl.VcsBackgroundableActions
- sf:COMPARE_WITH:com.intellij.openapi.vcs.impl.VcsBackgroundableActions
- sf:CREATE_HISTORY_SESSION:com.intellij.openapi.vcs.impl.VcsBackgroundableActions
- sf:HISTORY_FOR_SELECTION:com.intellij.openapi.vcs.impl.VcsBackgroundableActions
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.impl.VcsBackgroundableActions
- s:values():com.intellij.openapi.vcs.impl.VcsBackgroundableActions[]
com.intellij.openapi.vcs.impl.VcsBaseContentProvider
- a:getBaseRevision(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.impl.VcsBaseContentProvider$BaseContent
- a:isSupported(com.intellij.openapi.vfs.VirtualFile):Z
com.intellij.openapi.vcs.impl.VcsBaseContentProvider$BaseContent
- a:getRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
- a:loadContent():java.lang.String
com.intellij.openapi.vcs.impl.VcsBaseContentProviderListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:onEverythingChanged():V
- a:onFileBaseContentChanged(com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.openapi.vcs.impl.VcsCacheManager
- <init>(com.intellij.openapi.project.Project):V
- getContentRevisionCache():com.intellij.openapi.vcs.impl.ContentRevisionCache
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.impl.VcsCacheManager
- getVcsHistoryCache():com.intellij.openapi.vcs.history.VcsHistoryCache
f:com.intellij.openapi.vcs.impl.VcsEP
- com.intellij.openapi.extensions.PluginAware
- administrativeAreaName:java.lang.String
- areChildrenValidMappings:Z
- displayName:java.lang.String
- name:java.lang.String
- vcsClass:java.lang.String
e:com.intellij.openapi.vcs.impl.VcsInitObject
- java.lang.Enum
- sf:AFTER_COMMON:com.intellij.openapi.vcs.impl.VcsInitObject
- sf:CHANGE_LIST_MANAGER:com.intellij.openapi.vcs.impl.VcsInitObject
- sf:DIRTY_SCOPE_MANAGER:com.intellij.openapi.vcs.impl.VcsInitObject
- sf:MAPPINGS:com.intellij.openapi.vcs.impl.VcsInitObject
- sf:OTHER_INITIALIZATION:com.intellij.openapi.vcs.impl.VcsInitObject
- getOrder():I
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.impl.VcsInitObject
- s:values():com.intellij.openapi.vcs.impl.VcsInitObject[]
c:com.intellij.openapi.vcs.impl.VcsRootIterator
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.AbstractVcs):V
- acceptFolderUnderVcs(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):Z
- s:iterate(com.intellij.openapi.vcs.changes.VcsDirtyScope,com.intellij.util.Processor):V
- s:iterateExistingInsideScope(com.intellij.openapi.vcs.changes.VcsDirtyScope,com.intellij.util.Processor):V
- s:iterateVcsRoot(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor):V
- s:iterateVcsRoot(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor,com.intellij.openapi.vcs.VirtualFileFilter):V
- s:iterateVfUnderVcsRoot(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor):V
com.intellij.openapi.vcs.impl.VcsStartupActivity
- execute(com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- bs:execute$suspendImpl(com.intellij.openapi.vcs.impl.VcsStartupActivity,com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- a:getOrder():I
- runActivity(com.intellij.openapi.project.Project):V
f:com.intellij.openapi.vcs.impl.projectlevelman.AllVcses
- com.intellij.openapi.Disposable
- com.intellij.openapi.vcs.impl.projectlevelman.AllVcsesI
- dispose():V
- getAll():com.intellij.openapi.vcs.impl.VcsDescriptor[]
- getByName(java.lang.String):com.intellij.openapi.vcs.AbstractVcs
- getDescriptor(java.lang.String):com.intellij.openapi.vcs.impl.VcsDescriptor
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.impl.projectlevelman.AllVcsesI
- getSupportedVcses():com.intellij.openapi.vcs.AbstractVcs[]
- isEmpty():Z
- registerManually(com.intellij.openapi.vcs.AbstractVcs):V
- unregisterManually(com.intellij.openapi.vcs.AbstractVcs):V
com.intellij.openapi.vcs.impl.projectlevelman.PersistentVcsShowConfirmationOption
- com.intellij.openapi.vcs.VcsShowConfirmationOption
com.intellij.openapi.vcs.impl.projectlevelman.PersistentVcsShowSettingOption
- com.intellij.openapi.vcs.VcsShowSettingOption
f:com.intellij.openapi.vcs.merge.MergeUtils
- sf:INSTANCE:com.intellij.openapi.vcs.merge.MergeUtils
- sf:putRevisionInfos(com.intellij.diff.merge.MergeRequest,com.intellij.openapi.vcs.merge.MergeData):V
- sf:putRevisionInfos(com.intellij.diff.requests.DiffRequest,com.intellij.openapi.vcs.merge.MergeData):V
c:com.intellij.openapi.vcs.merge.MultipleFileMergeDialog
- com.intellij.openapi.ui.DialogWrapper
- sf:Companion:com.intellij.openapi.vcs.merge.MultipleFileMergeDialog$Companion
- <init>(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.vcs.merge.MergeProvider,com.intellij.openapi.vcs.merge.MergeDialogCustomizer):V
- p:beforeResolve(java.util.Collection):Z
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:dispose():V
- p:getDimensionServiceKey():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- f:getProcessedFiles():java.util.List
f:com.intellij.openapi.vcs.merge.MultipleFileMergeDialog$Companion
a:com.intellij.openapi.vcs.roots.VcsIntegrationEnabler
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.vcs.AbstractVcs):V
- p:<init>(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vfs.VirtualFile):V
- detectAndEnable():V
- enable(java.util.Collection):V
- pa:initOrNotifyError(com.intellij.openapi.vfs.VirtualFile):Z
- s:joinRootsPaths(java.util.Collection):java.lang.String
- p:notifyAddedRoots(java.util.Collection):V
- ps:refreshVcsDir(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
f:com.intellij.openapi.vcs.roots.VcsRootErrorsFinder
- <init>(com.intellij.openapi.project.Project):V
- find():java.util.Collection
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.roots.VcsRootErrorsFinder
- getOrFind():java.util.Collection
c:com.intellij.openapi.vcs.ui.CommitIconTableCellRenderer
- com.intellij.ui.SimpleColoredRenderer
- javax.swing.table.TableCellRenderer
- <init>(kotlin.jvm.functions.Function0,I,F):V
- b:<init>(kotlin.jvm.functions.Function0,I,F,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- customizeRenderer(javax.swing.JTable,java.lang.Object,Z,Z,I,I):V
- p:drawCircle(java.awt.Graphics2D,I,I,I,java.awt.Color):V
- bs:drawCircle$default(com.intellij.openapi.vcs.ui.CommitIconTableCellRenderer,java.awt.Graphics2D,I,I,I,java.awt.Color,I,java.lang.Object):V
- p:drawCommitIcon(java.awt.Graphics2D):V
- p:drawEdge(java.awt.Graphics2D,I,Z):V
- p:drawNode(java.awt.Graphics2D):V
- pf:getNodeCenterX():I
- pf:getNodeCenterY():I
- p:getNodeWidth():I
- pf:getRowHeight():I
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
- p:paintComponent(java.awt.Graphics):V
- pf:setRowHeight(I):V
c:com.intellij.openapi.vcs.ui.CommitMessage
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.openapi.vcs.CommitMessageI
- com.intellij.vcs.commit.CommitMessageUi
- sf:CHANGES_SUPPLIER_KEY:com.intellij.openapi.util.Key
- sf:DATA_KEY:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,Z,Z,Z):V
- <init>(com.intellij.openapi.project.Project,Z,Z,Z,java.lang.String):V
- createToolbar(Z):javax.swing.JComponent
- dispose():V
- focus():V
- getComment():java.lang.String
- s:getEditor(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.Editor
- getEditorField():com.intellij.ui.EditorTextField
- getText():java.lang.String
- s:isCommitMessage(com.intellij.openapi.editor.Document):Z
- s:isCommitMessage(com.intellij.psi.PsiElement):Z
- requestFocusInMessage():V
- setChangesSupplier(java.util.function.Supplier):V
- setCommitMessage(java.lang.String):V
- setSeparatorText(java.lang.String):V
- setText(java.lang.String):V
- startLoading():V
- stopLoading():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- updateUI():V
c:com.intellij.openapi.vcs.ui.FlatSpeedSearchPopup
- com.intellij.ui.popup.PopupFactoryImpl$ActionGroupPopup
- p:<init>(com.intellij.ui.popup.WizardPopup,com.intellij.openapi.ui.popup.ListPopupStep,com.intellij.openapi.actionSystem.DataContext,java.lang.Object):V
- <init>(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.util.Condition,Z):V
- <init>(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.util.Condition,Z):V
- s:createSpeedSearchActionGroupWrapper(com.intellij.openapi.actionSystem.ActionGroup):com.intellij.openapi.actionSystem.ActionGroup
- s:createSpeedSearchWrapper(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.AnAction
- ps:getSpecificAction(java.lang.Object,java.lang.Class):java.lang.Object
- ps:isSpeedsearchAction(com.intellij.openapi.actionSystem.AnAction):Z
- p:shouldBeShowing(com.intellij.openapi.actionSystem.AnAction):Z
- f:shouldBeShowing(java.lang.Object):Z
com.intellij.openapi.vcs.ui.FlatSpeedSearchPopup$SpeedsearchAction
f:com.intellij.openapi.vcs.ui.FontUtil
- <init>():V
- s:getCommitMessageFont():java.awt.Font
- s:getCommitMetadataFont():java.awt.Font
- s:getEditorFont():java.awt.Font
- s:getHtmlWithFonts(java.lang.String):java.lang.String
- s:getHtmlWithFonts(java.lang.String,I,java.awt.Font):java.lang.String
- s:getStandardAscent(java.awt.Font,java.awt.Graphics):I
c:com.intellij.openapi.vcs.ui.VcsBalloonProblemNotifier
- java.lang.Runnable
- sf:NOTIFICATION_GROUP:com.intellij.notification.NotificationGroup
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.ui.MessageType):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.ui.MessageType,com.intellij.openapi.util.NamedRunnable[]):V
- run():V
- s:showOverChangesView(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.ui.MessageType,com.intellij.openapi.util.NamedRunnable[]):V
- s:showOverVersionControlView(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.ui.MessageType):V
a:com.intellij.openapi.vcs.update.AbstractCommonUpdateAction
- com.intellij.openapi.project.DumbAwareAction
- p:<init>(com.intellij.openapi.vcs.update.ActionInfo,com.intellij.openapi.vcs.update.ScopeInfo,Z):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:filterRootsBeforeAction():Z
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getConfigurableToEnvMap(com.intellij.openapi.project.Project):java.util.LinkedHashMap
- p:isShowOptions(com.intellij.openapi.project.Project):Z
- p:onSuccess():V
- s:showsCustomNotification(java.util.Collection):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.openapi.vcs.update.ActionInfo
- sf:INTEGRATE:com.intellij.openapi.vcs.update.ActionInfo
- sf:STATUS:com.intellij.openapi.vcs.update.ActionInfo
- sf:UPDATE:com.intellij.openapi.vcs.update.ActionInfo
- a:canChangeFileStatus():Z
- a:canGroupByChangelist():Z
- a:createOptionsDialog(com.intellij.openapi.project.Project,java.util.LinkedHashMap,java.lang.String):com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialog
- a:getActionName():java.lang.String
- a:getActionName(java.lang.String):java.lang.String
- a:getEnvironment(com.intellij.openapi.vcs.AbstractVcs):com.intellij.openapi.vcs.update.UpdateEnvironment
- a:getGroupName(com.intellij.openapi.vcs.update.FileGroup):java.lang.String
- a:showOptions(com.intellij.openapi.project.Project):Z
c:com.intellij.openapi.vcs.update.CommonUpdateProjectAction
- com.intellij.openapi.vcs.update.AbstractCommonUpdateAction
- <init>():V
- p:filterRootsBeforeAction():Z
com.intellij.openapi.vcs.update.FilePathChange
- a:getAfterPath():com.intellij.openapi.vcs.FilePath
- a:getBeforePath():com.intellij.openapi.vcs.FilePath
f:com.intellij.openapi.vcs.update.FilePathChange$Simple
- com.intellij.openapi.vcs.update.FilePathChange
- <init>(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath):V
- getAfterPath():com.intellij.openapi.vcs.FilePath
- getBeforePath():com.intellij.openapi.vcs.FilePath
f:com.intellij.openapi.vcs.update.RefreshVFsSynchronously
- sf:INSTANCE:com.intellij.openapi.vcs.update.RefreshVFsSynchronously
- f:refresh(java.util.Collection,Z):V
- bs:refresh$default(com.intellij.openapi.vcs.update.RefreshVFsSynchronously,java.util.Collection,Z,I,java.lang.Object):V
- sf:refreshFiles(java.util.Collection):V
- sf:refreshVirtualFiles(java.util.Collection):V
- sf:refreshVirtualFilesRecursive(java.util.Collection):V
- sf:trace(java.lang.String):V
- sf:updateAllChanged(com.intellij.openapi.vcs.update.UpdatedFiles):V
- sf:updateChanges(java.util.Collection):V
- sf:updateChangesForRollback(java.util.List):V
f:com.intellij.openapi.vcs.update.RestoreUpdateTree
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.openapi.vcs.update.RestoreUpdateTree$Companion
- <init>():V
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.update.RestoreUpdateTree
- f:registerUpdateInformation(com.intellij.openapi.vcs.update.UpdatedFiles,com.intellij.openapi.vcs.update.ActionInfo):V
f:com.intellij.openapi.vcs.update.RestoreUpdateTree$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.update.RestoreUpdateTree
com.intellij.openapi.vcs.update.ScopeInfo
- sf:FILES:com.intellij.openapi.vcs.update.ScopeInfo
- sf:PROJECT:com.intellij.openapi.vcs.update.ScopeInfo
- a:filterExistsInVcs():Z
- a:getRoots(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.vcs.update.ActionInfo):java.util.List
- getRoots(com.intellij.openapi.vcs.actions.VcsContext,com.intellij.openapi.vcs.update.ActionInfo):com.intellij.openapi.vcs.FilePath[]
- a:getScopeName(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.vcs.update.ActionInfo):java.lang.String
f:com.intellij.openapi.vcs.update.UpdateFilesHelper
- s:iterateAffectedFiles(com.intellij.openapi.vcs.update.UpdatedFiles,com.intellij.util.Consumer):V
- s:iterateFileGroupFiles(com.intellij.openapi.vcs.update.UpdatedFiles,com.intellij.openapi.vcs.update.UpdateFilesHelper$Callback):V
- s:iterateFileGroupFilesDeletedOnServerFirst(com.intellij.openapi.vcs.update.UpdatedFiles,com.intellij.openapi.vcs.update.UpdateFilesHelper$Callback):V
com.intellij.openapi.vcs.update.UpdateFilesHelper$Callback
- a:onFile(java.lang.String,java.lang.String):V
c:com.intellij.openapi.vcs.update.UpdateInfoTree
- com.intellij.openapi.ui.PanelWithActionsAndCloseButton
- sf:LABEL_AFTER:com.intellij.openapi.actionSystem.DataKey
- sf:LABEL_BEFORE:com.intellij.openapi.actionSystem.DataKey
- sf:UPDATE_VIEW_FILES_ITERABLE:com.intellij.openapi.actionSystem.DataKey
- sf:UPDATE_VIEW_SELECTED_PATH:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.ui.content.ContentManager,com.intellij.openapi.project.Project,com.intellij.openapi.vcs.update.UpdatedFiles,java.lang.String,com.intellij.openapi.vcs.update.ActionInfo):V
- p:addActionsTo(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- p:createCenterPanel():javax.swing.JComponent
- dispose():V
- expandRootChildren():V
- setAfter(com.intellij.history.Label):V
- setBefore(com.intellij.history.Label):V
- setCanGroupByChangeList(Z):V
- setChangeLists(java.util.List):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
a:com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialog
- com.intellij.util.ui.OptionsDialog
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.util.Map):V
- p:createCenterPanel():javax.swing.JComponent
- doCancelAction():V
- p:doOKAction():V
- pa:getActionNameForDimensions():java.lang.String
- p:getDimensionServiceKey():java.lang.String
- p:getHelpAction():javax.swing.Action
- p:shouldSaveOptionsOnCancel():Z
com.intellij.openapi.vcs.update.UpdatedFilesListener
- com.intellij.util.Consumer
- sf:UPDATED_FILES:com.intellij.util.messages.Topic
c:com.intellij.openapi.vcs.util.paths.RecursiveFilePathSet
- <init>(Z):V
- add(com.intellij.openapi.vcs.FilePath):V
- addAll(java.util.Collection):V
- clear():V
- containsExplicitly(com.intellij.openapi.vcs.FilePath):Z
- filePaths():java.util.Collection
- hasAncestor(com.intellij.openapi.vcs.FilePath):Z
- isEmpty():Z
- remove(com.intellij.openapi.vcs.FilePath):V
c:com.intellij.openapi.vcs.util.paths.RootDirtySet
- <init>(com.intellij.openapi.vcs.FilePath,Z):V
- belongsTo(com.intellij.openapi.vcs.FilePath):Z
- collectFilePaths():java.util.List
- compact():com.intellij.openapi.vcs.util.paths.RootDirtySet
- copy():com.intellij.openapi.vcs.util.paths.RootDirtySet
- isEmpty():Z
- isEverythingDirty():Z
- markDirty(com.intellij.openapi.vcs.FilePath):V
- markEverythingDirty():V
f:com.intellij.openapi.vcs.util.paths.VirtualFileMapping
- <init>():V
- add(com.intellij.openapi.vfs.VirtualFile,java.lang.Object):V
- clear():V
- containsKey(com.intellij.openapi.vfs.VirtualFile):Z
- entries():java.util.Collection
- getMappingAndRootFor(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.util.Pair
- getMappingFor(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- remove(com.intellij.openapi.vfs.VirtualFile):V
- values():java.util.Collection
c:com.intellij.openapi.vcs.versionBrowser.DateFilterComponent
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- <init>(Z,java.text.DateFormat):V
- getAfter():J
- getBefore():J
- getPanel():javax.swing.JPanel
- initValues(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings):V
- saveValues(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings):V
- setAfter(J):V
- setBefore(J):V
- validateInput():java.lang.String
- withBorder(javax.swing.border.Border):com.intellij.openapi.vcs.versionBrowser.DateFilterComponent
- withFormat(java.text.DateFormat):com.intellij.openapi.vcs.versionBrowser.DateFilterComponent
a:com.intellij.openapi.vcs.versionBrowser.StandardVersionFilterComponent
- com.intellij.openapi.vcs.versionBrowser.ChangesBrowserSettingsEditor
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- <init>(Z):V
- p:disableVersionNumbers():V
- p:getChangeFromParseError():java.lang.String
- p:getChangeNumberTitle():java.lang.String
- p:getChangeToParseError():java.lang.String
- p:getDatePanel():javax.swing.JPanel
- getDimensionServiceKey():java.lang.String
- getSettings():com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings
- p:getStandardPanel():java.awt.Component
- p:init(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings):V
- p:initValues(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings):V
- p:installCheckBoxListener(java.awt.event.ActionListener):V
- saveValues(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings):V
- setSettings(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings):V
- p:updateAllEnabled(java.awt.event.ActionEvent):V
- updateEnabledControls():V
- s:updatePair(javax.swing.JCheckBox,javax.swing.JComponent,java.awt.event.ActionEvent):V
- validateInput():java.lang.String
a:com.intellij.openapi.vcs.vfs.AbstractVcsVirtualFile
- com.intellij.openapi.vfs.VirtualFile
- p:myModificationStamp:I
- pf:myName:java.lang.String
- pf:myPath:java.lang.String
- p:myRevision:java.lang.String
- p:<init>(com.intellij.openapi.vcs.FilePath):V
- p:<init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.FilePath):V
- p:<init>(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- p:<init>(com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vfs.VirtualFileSystem):V
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,com.intellij.openapi.vfs.VirtualFileSystem):V
- a:contentsToByteArray():B[]
- getChildren():com.intellij.openapi.vfs.VirtualFile[]
- getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getInputStream():java.io.InputStream
- getLength():J
- getModificationStamp():J
- getName():java.lang.String
- getOutputStream(java.lang.Object,J,J):java.io.OutputStream
- getParent():com.intellij.openapi.vfs.VirtualFile
- getPath():java.lang.String
- getPresentableName():java.lang.String
- p:getPresentableName(java.lang.String):java.lang.String
- getTimeStamp():J
- isValid():Z
- isWritable():Z
- refresh(Z,Z,java.lang.Runnable):V
- p:setRevision(java.lang.String):V
- p:showLoadingContentFailedMessage(com.intellij.openapi.vcs.VcsException):V
f:com.intellij.openapi.vcs.vfs.ContentRevisionVirtualFile
- com.intellij.openapi.vcs.vfs.AbstractVcsVirtualFile
- contentsToByteArray():B[]
- s:create(com.intellij.openapi.vcs.changes.ContentRevision):com.intellij.openapi.vcs.vfs.ContentRevisionVirtualFile
- getContentRevision():com.intellij.openapi.vcs.changes.ContentRevision
- isDirectory():Z
a:com.intellij.openapi.vcs.vfs.CustomisableUniqueNameEditorTabTitleProvider
- com.intellij.openapi.fileEditor.impl.UniqueNameEditorTabTitleProvider
- com.intellij.openapi.project.DumbAware
- <init>():V
- getEditorTabTitle(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- a:getEditorTabTitle(com.intellij.openapi.vfs.VirtualFile,java.lang.String):java.lang.String
- a:isApplicable(com.intellij.openapi.vfs.VirtualFile):Z
c:com.intellij.openapi.vcs.vfs.VcsFileSystem
- com.intellij.openapi.vfs.DeprecatedVirtualFileSystem
- com.intellij.openapi.vfs.NonPhysicalFileSystem
- <init>():V
- findFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- fireContentsChanged(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,J):V
- s:getCouldNotImplementMessage():java.lang.String
- s:getInstance():com.intellij.openapi.vcs.vfs.VcsFileSystem
- getProtocol():java.lang.String
- refresh(Z):V
- refreshAndFindFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
c:com.intellij.openapi.vcs.vfs.VcsVirtualFile
- com.intellij.openapi.vcs.vfs.AbstractVcsVirtualFile
- <init>(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision):V
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision):V
- <init>(com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vcs.history.VcsFileRevision):V
- <init>(com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vfs.VirtualFileSystem):V
- <init>(java.lang.String,com.intellij.openapi.vcs.history.VcsFileRevision):V
- <init>(java.lang.String,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vfs.VirtualFileSystem):V
- <init>(java.lang.String,B[],java.lang.String):V
- <init>(java.lang.String,B[],java.lang.String,com.intellij.openapi.vfs.VirtualFileSystem):V
- contentsToByteArray():B[]
- getCharset():java.nio.charset.Charset
- getFileRevision():com.intellij.openapi.vcs.history.VcsFileRevision
- getRevision():java.lang.String
- isDirectory():Z
- setContent(B[]):V
c:com.intellij.openapi.vcs.vfs.VcsVirtualFolder
- com.intellij.openapi.vcs.vfs.AbstractVcsVirtualFile
- <init>(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vfs.VirtualFile):V
- <init>(java.lang.String,com.intellij.openapi.vfs.VirtualFile):V
- <init>(java.lang.String,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFileSystem):V
- contentsToByteArray():B[]
- getChildren():com.intellij.openapi.vfs.VirtualFile[]
- isDirectory():Z
c:com.intellij.psi.impl.source.resolve.reference.ArbitraryPlaceUrlReferenceProvider
- com.intellij.psi.PsiReferenceProvider
- <init>():V
- acceptsTarget(com.intellij.psi.PsiElement):Z
- getReferencesByElement(com.intellij.psi.PsiElement,com.intellij.util.ProcessingContext):com.intellij.psi.PsiReference[]
f:com.intellij.util.progress.StepsProgressIndicator
- com.intellij.ide.util.DelegatingProgressIndicator
- <init>(com.intellij.openapi.progress.ProgressIndicator,I):V
- f:nextStep():V
- setFraction(D):V
a:com.intellij.util.ui.HtmlPanel
- javax.swing.JEditorPane
- javax.swing.event.HyperlinkListener
- <init>():V
- pa:getBody():java.lang.String
- p:getBodyFont():java.awt.Font
- getSelectedText():java.lang.String
- hyperlinkUpdate(javax.swing.event.HyperlinkEvent):V
- setBody(java.lang.String):V
- update():V
- updateUI():V
f:com.intellij.util.ui.InlineIconButton
- javax.swing.JComponent
- sf:Companion:com.intellij.util.ui.InlineIconButton$Companion
- <init>(javax.swing.Icon):V
- <init>(javax.swing.Icon,javax.swing.Icon):V
- <init>(javax.swing.Icon,javax.swing.Icon,javax.swing.Icon):V
- <init>(javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,java.lang.String):V
- <init>(javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,java.lang.String,com.intellij.openapi.actionSystem.ShortcutSet):V
- b:<init>(javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,java.lang.String,com.intellij.openapi.actionSystem.ShortcutSet,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getActionListener():java.awt.event.ActionListener
- f:getDisabledIcon():javax.swing.Icon
- f:getHoveredIcon():javax.swing.Icon
- f:getIcon():javax.swing.Icon
- f:getMargin():java.awt.Insets
- f:getShortcut():com.intellij.openapi.actionSystem.ShortcutSet
- f:getTooltip():java.lang.String
- f:getWithBackgroundHover():Z
- f:setActionListener(java.awt.event.ActionListener):V
- f:setDisabledIcon(javax.swing.Icon):V
- f:setHoveredIcon(javax.swing.Icon):V
- f:setIcon(javax.swing.Icon):V
- f:setMargin(java.awt.Insets):V
- f:setShortcut(com.intellij.openapi.actionSystem.ShortcutSet):V
- f:setTooltip(java.lang.String):V
- f:setWithBackgroundHover(Z):V
f:com.intellij.util.ui.InlineIconButton$Companion
a:com.intellij.util.ui.JButtonAction
- com.intellij.openapi.project.DumbAwareAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- b:<init>(java.lang.String,java.lang.String,javax.swing.Icon,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- p:createButton():javax.swing.JButton
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- pf:performAction(javax.swing.JComponent,java.lang.String,com.intellij.openapi.actionSystem.Presentation):V
- p:updateButtonFromPresentation(javax.swing.JButton,com.intellij.openapi.actionSystem.Presentation):V
- updateCustomComponent(javax.swing.JComponent,com.intellij.openapi.actionSystem.Presentation):V
f:com.intellij.util.ui.ProportionKey
- <init>(java.lang.String,F,java.lang.String,F):V
- f:component1():java.lang.String
- f:component2():F
- f:component3():java.lang.String
- f:component4():F
- f:copy(java.lang.String,F,java.lang.String,F):com.intellij.util.ui.ProportionKey
- bs:copy$default(com.intellij.util.ui.ProportionKey,java.lang.String,F,java.lang.String,F,I,java.lang.Object):com.intellij.util.ui.ProportionKey
- f:default(Z):F
- equals(java.lang.Object):Z
- f:getHorizontalDefault():F
- f:getHorizontalKey():java.lang.String
- f:getVerticalDefault():F
- f:getVerticalKey():java.lang.String
- hashCode():I
- f:key(Z):java.lang.String
f:com.intellij.util.ui.TwoKeySplitter
- com.intellij.openapi.ui.Splitter
- <init>(Z,com.intellij.util.ui.ProportionKey):V
- addNotify():V
c:com.intellij.util.ui.VcsExecutablePathSelector
- <init>(java.lang.String,com.intellij.openapi.Disposable,com.intellij.util.ui.VcsExecutablePathSelector$ExecutableHandler):V
- getCurrentPath():java.lang.String
- getErrorComponent():com.intellij.util.ui.components.BorderLayoutPanel
- getMainPanel():javax.swing.JPanel
- isModified(java.lang.String,Z,java.lang.String):Z
- isOverridden():Z
- reset(java.lang.String,Z,java.lang.String):V
- setAutoDetectedPath(java.lang.String):V
com.intellij.util.ui.VcsExecutablePathSelector$ExecutableHandler
- patchExecutable(java.lang.String):java.lang.String
- a:testExecutable(java.lang.String):V
a:com.intellij.util.ui.cloneDialog.AccountMenuItem
- f:getShowSeparatorAbove():Z
f:com.intellij.util.ui.cloneDialog.AccountMenuItem$Account
- com.intellij.util.ui.cloneDialog.AccountMenuItem
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,java.util.List,Z):V
- b:<init>(java.lang.String,java.lang.String,javax.swing.Icon,java.util.List,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getActions():java.util.List
- f:getIcon():javax.swing.Icon
- f:getInfo():java.lang.String
- f:getTitle():java.lang.String
f:com.intellij.util.ui.cloneDialog.AccountMenuItem$Action
- com.intellij.util.ui.cloneDialog.AccountMenuItem
- <init>(java.lang.String,kotlin.jvm.functions.Function0,javax.swing.Icon,Z):V
- b:<init>(java.lang.String,kotlin.jvm.functions.Function0,javax.swing.Icon,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getRightIcon():javax.swing.Icon
- f:getRunnable():kotlin.jvm.functions.Function0
- f:getText():java.lang.String
f:com.intellij.util.ui.cloneDialog.AccountMenuItem$Group
- com.intellij.util.ui.cloneDialog.AccountMenuItem
- <init>(java.lang.String,java.util.List,Z):V
- b:<init>(java.lang.String,java.util.List,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getActions():java.util.List
- f:getText():java.lang.String
f:com.intellij.util.ui.cloneDialog.AccountMenuPopupStep
- com.intellij.openapi.ui.popup.util.BaseListPopupStep
- <init>(java.util.List):V
- getBackgroundFor(com.intellij.util.ui.cloneDialog.AccountMenuItem):java.awt.Color
- hasSubstep(com.intellij.util.ui.cloneDialog.AccountMenuItem):Z
- onChosen(com.intellij.util.ui.cloneDialog.AccountMenuItem,Z):com.intellij.openapi.ui.popup.PopupStep
f:com.intellij.util.ui.cloneDialog.AccountsMenuListPopup
- com.intellij.ui.popup.list.ListPopupImpl
- <init>(com.intellij.openapi.project.Project,com.intellij.util.ui.cloneDialog.AccountMenuPopupStep,com.intellij.ui.popup.WizardPopup,java.lang.Object):V
- b:<init>(com.intellij.openapi.project.Project,com.intellij.util.ui.cloneDialog.AccountMenuPopupStep,com.intellij.ui.popup.WizardPopup,java.lang.Object,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- showUnderneathOf(java.awt.Component):V
f:com.intellij.util.ui.cloneDialog.VcsCloneDialog
- com.intellij.openapi.ui.DialogWrapper
- f:doClone(com.intellij.openapi.vcs.CheckoutProvider$Listener):V
- getPreferredFocusedComponent():javax.swing.JComponent
f:com.intellij.util.ui.cloneDialog.VcsCloneDialog$Builder
- <init>(com.intellij.openapi.project.Project):V
- f:forExtension(java.lang.Class):com.intellij.util.ui.cloneDialog.VcsCloneDialog
- bs:forExtension$default(com.intellij.util.ui.cloneDialog.VcsCloneDialog$Builder,java.lang.Class,I,java.lang.Object):com.intellij.util.ui.cloneDialog.VcsCloneDialog
- f:forVcs(java.lang.Class):com.intellij.util.ui.cloneDialog.VcsCloneDialog
- f:forVcs(java.lang.Class,java.lang.String):com.intellij.util.ui.cloneDialog.VcsCloneDialog
- bs:forVcs$default(com.intellij.util.ui.cloneDialog.VcsCloneDialog$Builder,java.lang.Class,java.lang.String,I,java.lang.Object):com.intellij.util.ui.cloneDialog.VcsCloneDialog
f:com.intellij.util.ui.cloneDialog.VcsCloneDialogExtensionList
- com.intellij.ui.components.JBList
- <init>(javax.swing.ListModel):V
f:com.intellij.util.ui.cloneDialog.VcsCloneDialogExtensionList$Renderer
- javax.swing.JPanel
- javax.swing.ListCellRenderer
- <init>():V
- getListCellRendererComponent(javax.swing.JList,com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension,I,Z,Z):java.awt.Component
f:com.intellij.util.ui.cloneDialog.VcsCloneDialogPopupMenuKt
- sf:browseAction(java.lang.String,java.lang.String,Z):com.intellij.util.ui.cloneDialog.AccountMenuItem$Action
- bs:browseAction$default(java.lang.String,java.lang.String,Z,I,java.lang.Object):com.intellij.util.ui.cloneDialog.AccountMenuItem$Action
f:com.intellij.util.ui.dialog.DialogUtils
- s:invokeLaterAfterDialogShown(com.intellij.openapi.ui.DialogWrapper,java.lang.Runnable):V
com.intellij.vcs.AnnotationProviderEx
- com.intellij.openapi.vcs.annotate.AnnotationProvider
- a:annotate(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber):com.intellij.openapi.vcs.annotate.FileAnnotation
- isAnnotationValid(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber):Z
- isAnnotationValid(com.intellij.openapi.vcs.history.VcsFileRevision):Z
c:com.intellij.vcs.CommittedChangeListForRevision
- com.intellij.openapi.vcs.versionBrowser.CommittedChangeListImpl
- com.intellij.openapi.vcs.versionBrowser.VcsRevisionNumberAware
- <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.util.Collection,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- getRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
f:com.intellij.vcs.CompareWithLocalDialog
- <init>():V
- s:showChanges(com.intellij.openapi.project.Project,java.lang.String,com.intellij.vcs.CompareWithLocalDialog$LocalContent,com.intellij.openapi.util.ThrowableComputable):V
c:com.intellij.vcs.CompareWithLocalDialog$GetVersionActionProvider
- com.intellij.openapi.actionSystem.AnActionExtensionProvider
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isActive(com.intellij.openapi.actionSystem.AnActionEvent):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
e:com.intellij.vcs.CompareWithLocalDialog$LocalContent
- java.lang.Enum
- sf:AFTER:com.intellij.vcs.CompareWithLocalDialog$LocalContent
- sf:BEFORE:com.intellij.vcs.CompareWithLocalDialog$LocalContent
- sf:NONE:com.intellij.vcs.CompareWithLocalDialog$LocalContent
- s:valueOf(java.lang.String):com.intellij.vcs.CompareWithLocalDialog$LocalContent
- s:values():com.intellij.vcs.CompareWithLocalDialog$LocalContent[]
f:com.intellij.vcs.ProgressManagerQueue
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- run(java.lang.Runnable):V
- start():V
f:com.intellij.vcs.VcsActivity
- sf:ApplyPatch:com.intellij.history.ActivityId
- sf:Commit:com.intellij.history.ActivityId
- sf:Get:com.intellij.history.ActivityId
- sf:INSTANCE:com.intellij.vcs.VcsActivity
- sf:Rollback:com.intellij.history.ActivityId
- sf:Shelve:com.intellij.history.ActivityId
- sf:Unshelve:com.intellij.history.ActivityId
- sf:Update:com.intellij.history.ActivityId
f:com.intellij.vcs.VcsLocaleHelper
- sf:INSTANCE:com.intellij.vcs.VcsLocaleHelper
- f:findMatchingLocale(java.lang.String,java.util.List):java.util.Map
- f:getC_UTF_LOCALE():com.intellij.vcs.VcsLocaleHelper$Locale
- sf:getDefaultLocaleEnvironmentVars(java.lang.String):java.util.Map
- f:getEN_UTF_LOCALE():com.intellij.vcs.VcsLocaleHelper$Locale
- f:getEnvFromRegistry(java.lang.String):java.util.Map
f:com.intellij.vcs.VcsLocaleHelper$Locale
- <init>(java.lang.String,java.lang.String[]):V
- f:getName():java.lang.String
- f:getSynonyms():java.lang.String[]
- f:matches(java.lang.String):Z
a:com.intellij.vcs.VcsShowToolWindowTabAction
- com.intellij.openapi.project.DumbAwareAction
- sf:Companion:com.intellij.vcs.VcsShowToolWindowTabAction$Companion
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- sf:activateVcsTab(com.intellij.openapi.project.Project,java.lang.String,Z):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:getTabName():java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.vcs.VcsShowToolWindowTabAction$Companion
- f:activateVcsTab(com.intellij.openapi.project.Project,java.lang.String,Z):V
f:com.intellij.vcs.ViewUpdateInfoNotification
- com.intellij.notification.NotificationAction
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.update.UpdateInfoTree,java.lang.String,com.intellij.notification.Notification):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.notification.Notification):V
- s:focusUpdateInfoTree(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.update.UpdateInfoTree):V
f:com.intellij.vcs.branch.BranchDataImpl
- com.intellij.vcs.branch.BranchData
- <init>(java.lang.String,java.lang.String):V
- f:copy(java.lang.String,java.lang.String):com.intellij.vcs.branch.BranchDataImpl
- bs:copy$default(com.intellij.vcs.branch.BranchDataImpl,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.vcs.branch.BranchDataImpl
- equals(java.lang.Object):Z
- getBranchName():java.lang.String
- getPresentableRootName():java.lang.String
- hashCode():I
f:com.intellij.vcs.branch.BranchPresentation
- sf:INSTANCE:com.intellij.vcs.branch.BranchPresentation
- f:getMultiTooltip(com.intellij.vcs.branch.BranchData):java.lang.String
- f:getPresentableText(com.intellij.vcs.branch.BranchData):java.lang.String
- f:getSingleTooltip(com.intellij.vcs.branch.BranchData):java.lang.String
- f:getText(java.util.Collection):java.lang.String
- f:getTooltip(java.util.Collection):java.lang.String
f:com.intellij.vcs.branch.LinkedBranchDataImpl
- com.intellij.vcs.branch.LinkedBranchData
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- f:copy(java.lang.String,java.lang.String,java.lang.String):com.intellij.vcs.branch.LinkedBranchDataImpl
- bs:copy$default(com.intellij.vcs.branch.LinkedBranchDataImpl,java.lang.String,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.vcs.branch.LinkedBranchDataImpl
- equals(java.lang.Object):Z
- getBranchName():java.lang.String
- getLinkedBranchName():java.lang.String
- getPresentableRootName():java.lang.String
- hashCode():I
f:com.intellij.vcs.changes.ChangeListScope
- com.intellij.psi.search.scope.packageSet.FilteredNamedScope
- com.intellij.ide.util.treeView.WeighedItem
- <init>(com.intellij.openapi.vcs.changes.ChangeListManager):V
- <init>(com.intellij.openapi.vcs.changes.ChangeListManager,java.lang.String):V
- equals(java.lang.Object):Z
- getWeight():I
- hashCode():I
f:com.intellij.vcs.changes.VcsChangesLocalSearchScope
- com.intellij.psi.search.scope.RangeBasedLocalSearchScope
- com.intellij.ide.util.treeView.WeighedItem
- sf:Companion:com.intellij.vcs.changes.VcsChangesLocalSearchScope$Companion
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.vfs.VirtualFile[],Z):V
- containsRange(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):Z
- equals(java.lang.Object):Z
- getRanges(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.util.TextRange[]
- getVirtualFiles():com.intellij.openapi.vfs.VirtualFile[]
- getWeight():I
f:com.intellij.vcs.changes.VcsChangesLocalSearchScope$Companion
a:com.intellij.vcs.commit.AbstractCommitWorkflow
- sf:Companion:com.intellij.vcs.commit.AbstractCommitWorkflow$Companion
- <init>(com.intellij.openapi.project.Project):V
- f:addCommitCustomListener(com.intellij.vcs.commit.CommitterResultHandler,com.intellij.openapi.Disposable):V
- p:addCommonResultHandlers(com.intellij.vcs.commit.CommitSessionInfo,com.intellij.vcs.commit.Committer):V
- f:addListener(com.intellij.vcs.commit.CommitWorkflowListener,com.intellij.openapi.Disposable):V
- f:addVcsCommitListener(com.intellij.vcs.commit.CommitterResultHandler,com.intellij.openapi.Disposable):V
- canExecute(com.intellij.vcs.commit.CommitSessionInfo,java.util.Collection):Z
- pf:fireBeforeCommitChecksEnded(com.intellij.vcs.commit.CommitSessionInfo,com.intellij.vcs.commit.CommitChecksResult):V
- pf:fireBeforeCommitChecksStarted(com.intellij.vcs.commit.CommitSessionInfo):V
- p:getBeforeCommitChecksChangelist():com.intellij.openapi.vcs.changes.LocalChangeList
- f:getCommitContext():com.intellij.openapi.vcs.changes.CommitContext
- f:getCommitExecutors():java.util.List
- sf:getCommitExecutors(com.intellij.openapi.project.Project,java.util.Collection):java.util.List
- sf:getCommitHandlerFactories(java.util.Collection):java.util.List
- f:getCommitHandlers():java.util.List
- sf:getCommitHandlers(java.util.Collection,com.intellij.openapi.vcs.CheckinProjectPanel,com.intellij.openapi.vcs.changes.CommitContext):java.util.List
- f:getCommitOptions():com.intellij.vcs.commit.CommitOptions
- f:getProject():com.intellij.openapi.project.Project
- f:getVcses():java.util.Set
- a:isDefaultCommitEnabled():Z
- f:isExecuting():Z
- pa:performCommit(com.intellij.vcs.commit.CommitSessionInfo):V
- f:runModificationCommitChecks(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- pf:updateVcses(java.util.Set):V
f:com.intellij.vcs.commit.AbstractCommitWorkflow$Companion
- f:getCommitExecutors(com.intellij.openapi.project.Project,java.util.Collection):java.util.List
- f:getCommitHandlerFactories(java.util.Collection):java.util.List
- f:getCommitHandlers(java.util.Collection,com.intellij.openapi.vcs.CheckinProjectPanel,com.intellij.openapi.vcs.changes.CommitContext):java.util.List
- f:runCommitCheck(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.checkin.CommitCheck,com.intellij.openapi.vcs.checkin.CommitInfo,kotlin.coroutines.Continuation):java.lang.Object
- f:runMetaHandlers(java.util.List,kotlin.coroutines.Continuation):java.lang.Object
a:com.intellij.vcs.commit.AbstractCommitWorkflowHandler
- com.intellij.openapi.Disposable
- com.intellij.openapi.vcs.changes.InclusionListener
- com.intellij.vcs.commit.CommitExecutorListener
- com.intellij.vcs.commit.CommitWorkflowHandler
- com.intellij.vcs.commit.CommitWorkflowListener
- sf:Companion:com.intellij.vcs.commit.AbstractCommitWorkflowHandler$Companion
- <init>():V
- beforeCommitChecksEnded(com.intellij.vcs.commit.CommitSessionInfo,com.intellij.vcs.commit.CommitChecksResult):V
- beforeCommitChecksStarted(com.intellij.vcs.commit.CommitSessionInfo):V
- p:checkCommit(com.intellij.vcs.commit.CommitSessionInfo):Z
- pf:createCommitOptions():com.intellij.vcs.commit.CommitOptions
- dispose():V
- execute(com.intellij.openapi.vcs.changes.CommitExecutor):V
- executorCalled(com.intellij.openapi.vcs.changes.CommitExecutor):V
- pf:getCommitContext():com.intellij.openapi.vcs.changes.CommitContext
- f:getCommitMessage():java.lang.String
- pf:getCommitOptions():com.intellij.vcs.commit.CommitOptions
- pa:getCommitPanel():com.intellij.openapi.vcs.CheckinProjectPanel
- getExecutor(java.lang.String):com.intellij.openapi.vcs.changes.CommitExecutor
- pf:getIncludedChanges():java.util.List
- pf:getIncludedUnversionedFiles():java.util.List
- pf:getProject():com.intellij.openapi.project.Project
- a:getUi():com.intellij.vcs.commit.CommitWorkflowUi
- a:getWorkflow():com.intellij.vcs.commit.AbstractCommitWorkflow
- inclusionChanged():V
- pf:initCommitHandlers():V
- isCommitEmpty():Z
- isExecutorEnabled(com.intellij.openapi.vcs.changes.CommitExecutor):Z
- pa:saveCommitMessageBeforeCommit():V
- p:saveCommitOptionsOnCommit():Z
- f:setCommitMessage(java.lang.String):V
- p:uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- a:updateDefaultCommitActionName():V
- pa:updateWorkflow(com.intellij.vcs.commit.CommitSessionInfo,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.vcs.commit.AbstractCommitWorkflowHandler$Companion
- f:addUnversionedFiles(com.intellij.openapi.project.Project,java.lang.Iterable,com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.vcs.changes.InclusionModel,kotlin.coroutines.Continuation):java.lang.Object
- f:configureCommitSession(com.intellij.openapi.project.Project,com.intellij.vcs.commit.CommitSessionInfo,java.util.List,java.lang.String):Z
- f:getActionTextWithoutEllipsis(java.util.Collection,com.intellij.openapi.vcs.changes.CommitExecutor,Z,Z,Z):java.lang.String
- f:getDefaultCommitActionName(java.util.Collection):java.lang.String
- f:getDefaultCommitActionName(java.util.Collection,Z,Z):java.lang.String
f:com.intellij.vcs.commit.AbstractCommitWorkflowHandlerKt
- sf:fixUnderscoreMnemonic(java.lang.String):java.lang.String
f:com.intellij.vcs.commit.AbstractCommitWorkflowKt
- sf:commitExecutorProperty(com.intellij.openapi.util.Key):kotlin.properties.ReadWriteProperty
- sf:commitExecutorProperty(com.intellij.openapi.util.Key,java.lang.Object):kotlin.properties.ReadWriteProperty
- sf:commitProperty(com.intellij.openapi.util.Key):kotlin.properties.ReadWriteProperty
- sf:commitProperty(com.intellij.openapi.util.Key,java.lang.Object):kotlin.properties.ReadWriteProperty
- sf:isAmendCommitMode(com.intellij.openapi.vcs.changes.CommitContext):Z
- sf:isCleanupCommitMessage(com.intellij.openapi.vcs.changes.CommitContext):Z
- sf:isPostCommitCheck(com.intellij.openapi.vcs.checkin.CommitInfo):Z
- sf:restoreState(com.intellij.vcs.commit.CommitOptions):V
- sf:saveState(com.intellij.vcs.commit.CommitOptions):V
- sf:setCleanupCommitMessage(com.intellij.openapi.vcs.changes.CommitContext,Z):V
a:com.intellij.vcs.commit.AbstractCommitter
- com.intellij.vcs.commit.Committer
- sf:Companion:com.intellij.vcs.commit.AbstractCommitter$Companion
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z):V
- pa:commit():V
- f:runCommit(java.lang.String,Z):V
f:com.intellij.vcs.commit.AbstractCommitter$Companion
f:com.intellij.vcs.commit.ChangeListCommitState
- <init>(com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List,java.lang.String):V
- f:getChangeList():com.intellij.openapi.vcs.changes.LocalChangeList
- f:getChanges():java.util.List
- f:getCommitMessage():java.lang.String
f:com.intellij.vcs.commit.ChangesViewCommitPanel
- com.intellij.vcs.commit.NonModalCommitPanel
- com.intellij.vcs.commit.ChangesViewCommitWorkflowUi
- activate():Z
- deactivate(Z):V
- dispose():V
- endExecution():V
- expand(java.lang.Object):V
- getCommitProgressUi():com.intellij.vcs.commit.CommitProgressUi
- getDisplayedChanges():java.util.List
- getDisplayedUnversionedFiles():java.util.List
- getEditedCommit():com.intellij.vcs.commit.EditedCommitPresentation
- getIncludedChanges():java.util.List
- getIncludedUnversionedFiles():java.util.List
- getInclusionModel():com.intellij.openapi.vcs.changes.InclusionModel
- isActive():Z
- f:isToolbarHorizontal():Z
- refreshChangesViewBeforeCommit(kotlin.coroutines.Continuation):java.lang.Object
- f:registerRootComponent(javax.swing.JComponent):V
- select(java.lang.Object):V
- selectFirst(java.util.Collection):V
- setCompletionContext(java.util.List):V
- setEditedCommit(com.intellij.vcs.commit.EditedCommitPresentation):V
- setInclusionModel(com.intellij.openapi.vcs.changes.InclusionModel):V
- f:setToolbarHorizontal(Z):V
com.intellij.vcs.commit.ChangesViewCommitWorkflowUi
- com.intellij.vcs.commit.NonModalCommitWorkflowUi
- a:deactivate(Z):V
- a:endExecution():V
- a:expand(java.lang.Object):V
- a:getInclusionModel():com.intellij.openapi.vcs.changes.InclusionModel
- a:isActive():Z
- a:refreshChangesViewBeforeCommit(kotlin.coroutines.Continuation):java.lang.Object
- a:select(java.lang.Object):V
- a:selectFirst(java.util.Collection):V
- a:setCompletionContext(java.util.List):V
- a:setInclusionModel(com.intellij.openapi.vcs.changes.InclusionModel):V
f:com.intellij.vcs.commit.CommitActionsPanel
- com.intellij.ui.components.JBPanel
- sf:COMMIT_BUTTONS_TOOLBAR:java.lang.String
- sf:Companion:com.intellij.vcs.commit.CommitActionsPanel$Companion
- <init>():V
- addExecutorListener(com.intellij.vcs.commit.CommitExecutorListener,com.intellij.openapi.Disposable):V
- f:createActions():java.util.List
- f:getBottomInset():I
- getDefaultCommitActionName():java.lang.String
- f:isActive():Z
- f:isCommitButtonDefault():kotlin.jvm.functions.Function0
- isDefaultCommitActionEnabled():Z
- f:setActive(Z):V
- f:setCommitButtonDefault(kotlin.jvm.functions.Function0):V
- setCustomCommitActions(java.util.List):V
- setDefaultCommitActionEnabled(Z):V
- setDefaultCommitActionName(java.lang.String):V
- setPrimaryCommitActions(java.util.List):V
- f:setTargetComponent(javax.swing.JComponent):V
f:com.intellij.vcs.commit.CommitActionsPanel$Companion
- f:getDEFAULT_COMMIT_ACTION_SHORTCUT():com.intellij.openapi.actionSystem.ShortcutSet
f:com.intellij.vcs.commit.CommitActionsPanel$DefaultCommitAction
- com.intellij.openapi.project.DumbAwareAction
- <init>(com.intellij.vcs.commit.CommitActionsPanel):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.vcs.commit.CommitAuthorComponent
- com.intellij.ui.components.panels.NonOpaquePanel
- com.intellij.vcs.commit.CommitAuthorTracker
- <init>(com.intellij.openapi.project.Project):V
- addCommitAuthorListener(com.intellij.vcs.commit.CommitAuthorListener,com.intellij.openapi.Disposable):V
- getCommitAuthor():com.intellij.vcs.log.VcsUser
- getCommitAuthorDate():java.util.Date
- setCommitAuthor(com.intellij.vcs.log.VcsUser):V
- setCommitAuthorDate(java.util.Date):V
a:com.intellij.vcs.commit.CommitChangeListDialogWorkflow
- com.intellij.vcs.commit.AbstractCommitWorkflow
- commitState:com.intellij.vcs.commit.ChangeListCommitState
- <init>(com.intellij.openapi.project.Project):V
- f:getCommitState():com.intellij.vcs.commit.ChangeListCommitState
- a:isPartialCommitEnabled():Z
- f:setCommitState(com.intellij.vcs.commit.ChangeListCommitState):V
a:com.intellij.vcs.commit.CommitCheckFailure
f:com.intellij.vcs.commit.CommitCheckFailure$Unknown
- com.intellij.vcs.commit.CommitCheckFailure
- sf:INSTANCE:com.intellij.vcs.commit.CommitCheckFailure$Unknown
c:com.intellij.vcs.commit.CommitCheckFailure$WithDescription
- com.intellij.vcs.commit.CommitCheckFailure
- <init>(com.intellij.openapi.util.text.HtmlChunk):V
- f:getText():com.intellij.openapi.util.text.HtmlChunk
f:com.intellij.vcs.commit.CommitCheckFailure$WithDetails
- com.intellij.vcs.commit.CommitCheckFailure$WithDescription
- <init>(com.intellij.openapi.util.text.HtmlChunk,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1):V
- f:getViewDetails():kotlin.jvm.functions.Function1
- f:getViewDetailsActionText():java.lang.String
- f:getViewDetailsLinkText():java.lang.String
com.intellij.vcs.commit.CommitExceptionWithActions
- a:getActions():java.util.List
f:com.intellij.vcs.commit.CommitModeManager
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.vcs.commit.CommitModeManager$Companion
- sf:SETTINGS:com.intellij.util.messages.Topic
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- dispose():V
- f:getCurrentCommitMode():com.intellij.vcs.commit.CommitMode
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.vcs.commit.CommitModeManager
- sf:subscribeOnCommitModeChange(com.intellij.util.messages.SimpleMessageBusConnection,com.intellij.vcs.commit.CommitModeManager$CommitModeListener):V
com.intellij.vcs.commit.CommitModeManager$CommitModeListener
- java.util.EventListener
- a:commitModeChanged():V
f:com.intellij.vcs.commit.CommitModeManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.vcs.commit.CommitModeManager
- f:subscribeOnCommitModeChange(com.intellij.util.messages.SimpleMessageBusConnection,com.intellij.vcs.commit.CommitModeManager$CommitModeListener):V
com.intellij.vcs.commit.CommitModeManager$SettingsListener
- java.util.EventListener
- a:settingsChanged():V
e:com.intellij.vcs.commit.CommitOption
- java.lang.Enum
- sf:AMEND:com.intellij.vcs.commit.CommitOption
- sf:RUN_HOOKS:com.intellij.vcs.commit.CommitOption
- sf:SIGN_OFF:com.intellij.vcs.commit.CommitOption
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.vcs.commit.CommitOption
- s:values():com.intellij.vcs.commit.CommitOption[]
com.intellij.vcs.commit.CommitOptions
- a:getAfterOptions():java.util.List
- a:getBeforeCommitChecksOptions():java.util.List
- a:getExtensionOptions():java.util.List
- a:getPostCommitChecksOptions():java.util.List
- a:getVcsOptions():java.util.Map
com.intellij.vcs.commit.CommitOptionsUi
- a:setOptions(com.intellij.vcs.commit.CommitOptions):V
- a:setVisible(java.util.Collection):V
c:com.intellij.vcs.commit.CommitProgressPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.editor.event.DocumentListener
- com.intellij.openapi.vcs.changes.InclusionListener
- com.intellij.vcs.commit.CommitProgressUi
- <init>():V
- addCommitCheckFailure(com.intellij.vcs.commit.CommitCheckFailure):V
- p:buildErrorText():java.lang.String
- clearCommitCheckFailures():V
- p:clearError():V
- dispose():V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- getCommitCheckFailures():java.util.List
- f:getComponent():javax.swing.JComponent
- inclusionChanged():V
- isDumbMode():Z
- isEmptyChanges():Z
- isEmptyMessage():Z
- runWithProgress(Z,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- setDumbMode(Z):V
- setEmptyChanges(Z):V
- setEmptyMessage(Z):V
- f:setup(com.intellij.vcs.commit.CommitWorkflowUi,com.intellij.ui.EditorTextComponent,javax.swing.border.Border):V
- pf:stateFlag():kotlin.properties.ReadWriteProperty
- pf:update():V
c:com.intellij.vcs.commit.CommitProjectPanelAdapter
- com.intellij.openapi.vcs.CheckinProjectPanel
- <init>(com.intellij.vcs.commit.AbstractCommitWorkflowHandler):V
- getCommitActionName():java.lang.String
- getCommitMessage():java.lang.String
- getCommitWorkflowHandler():com.intellij.vcs.commit.CommitWorkflowHandler
- getComponent():javax.swing.JComponent
- getFiles():java.util.Collection
- getPreferredFocusedComponent():javax.swing.JComponent
- getProject():com.intellij.openapi.project.Project
- getRoots():java.util.Collection
- getSelectedChanges():java.util.Collection
- getVirtualFiles():java.util.Collection
- hasDiffs():Z
- restoreState():V
- saveState():V
- setCommitMessage(java.lang.String):V
- vcsIsAffected(java.lang.String):Z
f:com.intellij.vcs.commit.CommitSessionCollector
- sf:Companion:com.intellij.vcs.commit.CommitSessionCollector$Companion
- <init>(com.intellij.openapi.project.Project):V
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.vcs.commit.CommitSessionCollector
- f:getProject():com.intellij.openapi.project.Project
- f:logCodeAnalysisWarnings(I,I):V
- f:logCommit(java.lang.String,I,I):V
- f:logCommitCheckToggled(com.intellij.openapi.vcs.checkin.CheckinHandler,Z,Z):V
- f:logCommitOptionToggled(com.intellij.vcs.commit.CommitOption,Z):V
- f:logDiffViewer(Z):V
- f:logFileSelected(com.intellij.openapi.actionSystem.AnActionEvent):V
- f:logFileSelected(java.awt.event.MouseEvent):V
- f:logInclusionToggle(Z,com.intellij.openapi.actionSystem.AnActionEvent):V
- f:logInclusionToggle(Z,java.awt.event.MouseEvent):V
- f:logJumpToSource(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.vcs.commit.CommitSessionCollector$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.vcs.commit.CommitSessionCollector
a:com.intellij.vcs.commit.CommitSessionInfo
- a:getExecutor():com.intellij.openapi.vcs.changes.CommitExecutor
- a:getSession():com.intellij.openapi.vcs.changes.CommitSession
- f:isVcsCommit():Z
f:com.intellij.vcs.commit.CommitSessionInfo$Custom
- com.intellij.vcs.commit.CommitSessionInfo
- <init>(com.intellij.openapi.vcs.changes.CommitExecutor,com.intellij.openapi.vcs.changes.CommitSession):V
- getExecutor():com.intellij.openapi.vcs.changes.CommitExecutor
- getSession():com.intellij.openapi.vcs.changes.CommitSession
f:com.intellij.vcs.commit.CommitSessionInfo$Default
- com.intellij.vcs.commit.CommitSessionInfo
- sf:INSTANCE:com.intellij.vcs.commit.CommitSessionInfo$Default
- getExecutor():com.intellij.openapi.vcs.changes.CommitExecutor
- getSession():com.intellij.openapi.vcs.changes.CommitSession
f:com.intellij.vcs.commit.CommitStatusPanel
- com.intellij.util.ui.components.BorderLayoutPanel
- com.intellij.openapi.vcs.changes.InclusionListener
- <init>(com.intellij.vcs.commit.CommitWorkflowUi):V
- inclusionChanged():V
c:com.intellij.vcs.commit.CommitTabTitleUpdater
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.vcs.commit.CommitTabTitleUpdater$Companion
- <init>(com.intellij.openapi.vcs.changes.ui.ChangesTree,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0):V
- dispose():V
- f:getDefaultTitle():kotlin.jvm.functions.Function0
- f:getProject():com.intellij.openapi.project.Project
- f:getTabName():java.lang.String
- f:getTree():com.intellij.openapi.vcs.changes.ui.ChangesTree
- start():V
- updateTab():V
f:com.intellij.vcs.commit.CommitTabTitleUpdater$Companion
- f:getDisplayTabName(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):java.lang.String
com.intellij.vcs.commit.CommitWorkflowListener
- java.util.EventListener
- beforeCommitChecksEnded(com.intellij.vcs.commit.CommitSessionInfo,com.intellij.vcs.commit.CommitChecksResult):V
- beforeCommitChecksStarted(com.intellij.vcs.commit.CommitSessionInfo):V
- executionEnded():V
- executionStarted():V
- vcsesChanged():V
com.intellij.vcs.commit.CommitWorkflowUiStateListener
- java.util.EventListener
- a:cancelled():V
a:com.intellij.vcs.commit.Committer
- sf:Companion:com.intellij.vcs.commit.Committer$Companion
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- pf:addException(java.lang.Throwable):V
- f:addResultHandler(com.intellij.vcs.commit.CommitterResultHandler):V
- sf:collectErrors(java.util.List):java.util.List
- pf:fireAfterRefresh():V
- f:getCommitErrors():java.util.List
- f:getCommitMessage():java.lang.String
- f:getExceptions():java.util.List
- f:getProject():com.intellij.openapi.project.Project
- pf:runCommitTask(Z,kotlin.jvm.functions.Function0):V
f:com.intellij.vcs.commit.Committer$Companion
- f:asVcsException(java.lang.Throwable):com.intellij.openapi.vcs.VcsException
- f:collectErrors(java.util.List):java.util.List
com.intellij.vcs.commit.CommitterResultHandler
- java.util.EventListener
- onAfterRefresh():V
- onCancel():V
- onFailure():V
- onSuccess():V
f:com.intellij.vcs.commit.EditedCommitNodeKt
- sf:insertEditedCommitNode(com.intellij.openapi.vcs.changes.ui.ChangesViewModelBuilder,com.intellij.vcs.commit.EditedCommitPresentation):V
com.intellij.vcs.commit.EditedCommitPresentation
f:com.intellij.vcs.commit.EditedCommitPresentation$Details
- com.intellij.vcs.commit.EditedCommitDetails
- com.intellij.vcs.commit.EditedCommitPresentation
- <init>(com.intellij.vcs.commit.EditedCommitDetails):V
- getCommit():com.intellij.vcs.log.VcsFullCommitDetails
- getCurrentUser():com.intellij.vcs.log.VcsUser
f:com.intellij.vcs.commit.EditedCommitPresentation$Loading
- com.intellij.vcs.commit.EditedCommitPresentation
- sf:INSTANCE:com.intellij.vcs.commit.EditedCommitPresentation$Loading
c:com.intellij.vcs.commit.LocalChangesCommitter
- com.intellij.vcs.commit.VcsCommitter
- <init>(com.intellij.openapi.project.Project,com.intellij.vcs.commit.ChangeListCommitState,com.intellij.openapi.vcs.changes.CommitContext,java.lang.String):V
- b:<init>(com.intellij.openapi.project.Project,com.intellij.vcs.commit.ChangeListCommitState,com.intellij.openapi.vcs.changes.CommitContext,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- p:commit():V
- f:getCommitState():com.intellij.vcs.commit.ChangeListCommitState
- f:isSuccess():Z
f:com.intellij.vcs.commit.LocalChangesCommitterKt
- sf:getCommitWithoutChangesRoots(com.intellij.openapi.vcs.changes.CommitContext):java.util.Collection
- sf:setCommitWithoutChangesRoots(com.intellij.openapi.vcs.changes.CommitContext,java.util.Collection):V
f:com.intellij.vcs.commit.NonModalAmendCommitHandler
- com.intellij.vcs.commit.AmendCommitHandler
- <init>(com.intellij.vcs.commit.NonModalCommitWorkflowHandler):V
- f:isLoading():Z
a:com.intellij.vcs.commit.NonModalCommitPanel
- com.intellij.openapi.editor.colors.EditorColorsListener
- com.intellij.openapi.ui.ComponentContainer
- com.intellij.util.ui.components.BorderLayoutPanel
- com.intellij.vcs.commit.CommitAuthorTracker
- com.intellij.vcs.commit.NonModalCommitWorkflowUi
- sf:Companion:com.intellij.vcs.commit.NonModalCommitPanel$Companion
- p:bottomPanel:javax.swing.JPanel
- <init>(com.intellij.openapi.project.Project,com.intellij.vcs.commit.CommitActionsPanel,com.intellij.vcs.commit.CommitAuthorComponent):V
- b:<init>(com.intellij.openapi.project.Project,com.intellij.vcs.commit.CommitActionsPanel,com.intellij.vcs.commit.CommitAuthorComponent,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addCommitAuthorListener(com.intellij.vcs.commit.CommitAuthorListener,com.intellij.openapi.Disposable):V
- addDataProvider(com.intellij.openapi.actionSystem.DataProvider):V
- addExecutorListener(com.intellij.vcs.commit.CommitExecutorListener,com.intellij.openapi.Disposable):V
- addInclusionListener(com.intellij.openapi.vcs.changes.InclusionListener,com.intellij.openapi.Disposable):V
- dispose():V
- endBeforeCommitChecks(com.intellij.vcs.commit.CommitChecksResult):V
- pf:fireInclusionChanged():V
- pf:getBottomPanel():javax.swing.JPanel
- pf:getCenterPanel():com.intellij.util.ui.components.BorderLayoutPanel
- f:getCommitActionsPanel():com.intellij.vcs.commit.CommitActionsPanel
- getCommitAuthor():com.intellij.vcs.log.VcsUser
- f:getCommitAuthorComponent():com.intellij.vcs.commit.CommitAuthorComponent
- getCommitAuthorDate():java.util.Date
- f:getCommitMessage():com.intellij.openapi.vcs.ui.CommitMessage
- getCommitMessageUi():com.intellij.vcs.commit.CommitMessageUi
- getComponent():javax.swing.JComponent
- getDefaultCommitActionName():java.lang.String
- getPreferredFocusableComponent():javax.swing.JComponent
- f:getProject():com.intellij.openapi.project.Project
- f:getToolbar():com.intellij.openapi.actionSystem.ActionToolbar
- globalSchemeChange(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- isDefaultCommitActionEnabled():Z
- pf:setBottomPanel(javax.swing.JPanel):V
- setCommitAuthor(com.intellij.vcs.log.VcsUser):V
- setCommitAuthorDate(java.util.Date):V
- setCustomCommitActions(java.util.List):V
- setDefaultCommitActionEnabled(Z):V
- setDefaultCommitActionName(java.lang.String):V
- setPrimaryCommitActions(java.util.List):V
- p:showCommitOptions(com.intellij.openapi.ui.popup.JBPopup,Z,com.intellij.openapi.actionSystem.DataContext):V
- showCommitOptions(com.intellij.vcs.commit.CommitOptions,java.lang.String,Z,com.intellij.openapi.actionSystem.DataContext):V
- startBeforeCommitChecks():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- f:uiDataSnapshotFromProviders(com.intellij.openapi.actionSystem.DataSink):V
- updateUI():V
f:com.intellij.vcs.commit.NonModalCommitPanel$Companion
- f:showAbove(com.intellij.openapi.ui.popup.JBPopup,javax.swing.JComponent):V
a:com.intellij.vcs.commit.NonModalCommitWorkflow
- com.intellij.vcs.commit.AbstractCommitWorkflow
- <init>(com.intellij.openapi.project.Project):V
a:com.intellij.vcs.commit.NonModalCommitWorkflowHandler
- com.intellij.vcs.commit.AbstractCommitWorkflowHandler
- <init>():V
- beforeCommitChecksEnded(com.intellij.vcs.commit.CommitSessionInfo,com.intellij.vcs.commit.CommitChecksResult):V
- beforeCommitChecksStarted(com.intellij.vcs.commit.CommitSessionInfo):V
- p:checkCommit(com.intellij.vcs.commit.CommitSessionInfo):Z
- p:commitOptionsCreated():V
- dispose():V
- pf:disposeCommitOptions():V
- executionEnded():V
- executionStarted():V
- a:getAmendCommitHandler():com.intellij.vcs.commit.NonModalAmendCommitHandler
- p:getDefaultCommitActionName(Z,Z):java.lang.String
- getState():com.intellij.vcs.commit.CommitWorkflowHandlerState
- f:hideCommitChecksFailureNotification():V
- isExecutorEnabled(com.intellij.openapi.vcs.changes.CommitExecutor):Z
- p:isReady():Z
- pf:resetCommitChecksResult():V
- p:saveCommitOptionsOnCommit():Z
- pf:setupCommitChecksResultTracking():V
- pf:setupCommitHandlersTracking():V
- pf:setupDumbModeTracking():V
- f:showCommitOptions(Z,com.intellij.openapi.actionSystem.DataContext):V
- f:updateDefaultCommitActionEnabled():V
- updateDefaultCommitActionName():V
- vcsesChanged():V
pc:com.intellij.vcs.commit.NonModalCommitWorkflowHandler$CommitStateCleaner
- com.intellij.vcs.commit.CommitterResultHandler
- <init>(com.intellij.vcs.commit.NonModalCommitWorkflowHandler):V
- onCancel():V
- onFailure():V
- onSuccess():V
- p:resetState():V
pf:com.intellij.vcs.commit.NonModalCommitWorkflowHandler$PostCommitChecksRunner
- com.intellij.vcs.commit.CommitterResultHandler
- <init>(com.intellij.vcs.commit.NonModalCommitWorkflowHandler):V
- onCancel():V
- onFailure():V
- onSuccess():V
com.intellij.vcs.commit.NonModalCommitWorkflowUi
- com.intellij.vcs.commit.CommitAuthorTracker
- com.intellij.vcs.commit.CommitWorkflowUi
- a:getCommitProgressUi():com.intellij.vcs.commit.CommitProgressUi
- a:getEditedCommit():com.intellij.vcs.commit.EditedCommitPresentation
- a:setEditedCommit(com.intellij.vcs.commit.EditedCommitPresentation):V
- a:showCommitOptions(com.intellij.vcs.commit.CommitOptions,java.lang.String,Z,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.vcs.commit.SaveCommittingDocumentsVetoerKt
- sf:vetoDocumentSaving(com.intellij.openapi.project.Project,java.util.Collection,kotlin.jvm.functions.Function0):V
- sf:vetoDocumentSavingForPaths(com.intellij.openapi.project.Project,java.util.Collection,kotlin.jvm.functions.Function0):V
f:com.intellij.vcs.commit.ShowNotificationCommitResultHandler
- com.intellij.vcs.commit.CommitterResultHandler
- <init>(com.intellij.vcs.commit.VcsCommitter):V
- onCancel():V
- onFailure():V
- onSuccess():V
f:com.intellij.vcs.commit.SingleChangeListCommitWorkflow
- com.intellij.vcs.commit.CommitChangeListDialogWorkflow
- <init>(com.intellij.openapi.project.Project,java.util.Set,com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List,Z,com.intellij.openapi.vcs.changes.CommitResultHandler):V
- f:getInitialChangeList():com.intellij.openapi.vcs.changes.LocalChangeList
- isDefaultCommitEnabled():Z
- isPartialCommitEnabled():Z
f:com.intellij.vcs.commit.SingleChangeListCommitWorkflowHandler
- com.intellij.vcs.commit.AbstractCommitWorkflowHandler
- com.intellij.vcs.commit.CommitWorkflowUiStateListener
- com.intellij.vcs.commit.SingleChangeListCommitWorkflowUi$ChangeListListener
- <init>(com.intellij.vcs.commit.CommitChangeListDialogWorkflow,com.intellij.vcs.commit.SingleChangeListCommitWorkflowUi,java.lang.String,java.util.Collection):V
- f:activate():Z
- beforeCommitChecksEnded(com.intellij.vcs.commit.CommitSessionInfo,com.intellij.vcs.commit.CommitChecksResult):V
- cancelled():V
- changeListChanged(com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.vcs.changes.LocalChangeList):V
- f:getInitiallyIncluded():java.util.Collection
- getUi():com.intellij.vcs.commit.SingleChangeListCommitWorkflowUi
- getWorkflow():com.intellij.vcs.commit.CommitChangeListDialogWorkflow
- isExecutorEnabled(com.intellij.openapi.vcs.changes.CommitExecutor):Z
- updateDefaultCommitActionName():V
com.intellij.vcs.commit.SingleChangeListCommitWorkflowUi
- com.intellij.vcs.commit.CommitWorkflowUi
- a:addChangeListListener(com.intellij.vcs.commit.SingleChangeListCommitWorkflowUi$ChangeListListener,com.intellij.openapi.Disposable):V
- a:addStateListener(com.intellij.vcs.commit.CommitWorkflowUiStateListener,com.intellij.openapi.Disposable):V
- a:confirmCommitWithEmptyMessage():Z
- a:deactivate():V
- a:getChangeList():com.intellij.openapi.vcs.changes.LocalChangeList
- a:getCommitOptionsUi():com.intellij.vcs.commit.CommitOptionsUi
- a:getInclusionModel():com.intellij.openapi.vcs.changes.InclusionModel
- a:refreshDataBeforeCommit():V
com.intellij.vcs.commit.SingleChangeListCommitWorkflowUi$ChangeListListener
- java.util.EventListener
- a:changeListChanged(com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.vcs.changes.LocalChangeList):V
f:com.intellij.vcs.commit.SingleChangeListCommitter
- com.intellij.vcs.commit.LocalChangesCommitter
- sf:Companion:com.intellij.vcs.commit.SingleChangeListCommitter$Companion
- <init>(com.intellij.openapi.project.Project,com.intellij.vcs.commit.ChangeListCommitState,com.intellij.openapi.vcs.changes.CommitContext,java.lang.String,Z):V
- f:addResultHandler(com.intellij.openapi.vcs.changes.CommitResultHandler):V
- sf:create(com.intellij.openapi.project.Project,com.intellij.vcs.commit.ChangeListCommitState,com.intellij.openapi.vcs.changes.CommitContext,java.lang.String):com.intellij.vcs.commit.LocalChangesCommitter
f:com.intellij.vcs.commit.SingleChangeListCommitter$Companion
- f:create(com.intellij.openapi.project.Project,com.intellij.vcs.commit.ChangeListCommitState,com.intellij.openapi.vcs.changes.CommitContext,java.lang.String):com.intellij.vcs.commit.LocalChangesCommitter
a:com.intellij.vcs.commit.VcsCommitter
- com.intellij.vcs.commit.AbstractCommitter
- <init>(com.intellij.openapi.project.Project,java.util.List,java.lang.String,com.intellij.openapi.vcs.changes.CommitContext,Z):V
- f:getChanges():java.util.List
- f:getCommitContext():com.intellij.openapi.vcs.changes.CommitContext
- f:getFailedToCommitChanges():java.util.List
- f:getFeedback():java.util.Set
- f:getPathsToRefresh():java.util.List
- pf:vcsCommit(com.intellij.openapi.vcs.AbstractVcs,java.util.List):V
a:com.intellij.vcs.commit.message.BaseCommitMessageInspection
- com.intellij.codeInspection.LocalInspectionTool
- sf:Companion:com.intellij.vcs.commit.message.BaseCommitMessageInspection$Companion
- <init>():V
- canReformat(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):Z
- checkFile(com.intellij.psi.PsiFile,com.intellij.codeInspection.InspectionManager,Z):com.intellij.codeInspection.ProblemDescriptor[]
- p:checkFile(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,com.intellij.codeInspection.InspectionManager,Z):com.intellij.codeInspection.ProblemDescriptor[]
- psf:checkRightMargin(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,com.intellij.codeInspection.InspectionManager,Z,I,I,java.lang.String,com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.ProblemDescriptor
- createOptions(com.intellij.ui.dsl.builder.Panel,com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):Z
- createOptionsConfigurable():com.intellij.openapi.options.ConfigurableUi
- getGroupDisplayName():java.lang.String
- getStaticDescription():java.lang.String
- p:hasProblems(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):Z
- isSuppressedFor(com.intellij.psi.PsiElement):Z
- reformat(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):V
pa:com.intellij.vcs.commit.message.BaseCommitMessageInspection$BaseCommitMessageQuickFix
- com.intellij.codeInspection.LocalQuickFix
- <init>():V
- applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- a:doApplyFix(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.codeInspection.ProblemDescriptor):V
f:com.intellij.vcs.commit.message.BaseCommitMessageInspection$Companion
f:com.intellij.vcs.commit.message.BaseCommitMessageInspection$EmptyIntentionActionFilter
- com.intellij.codeInsight.daemon.impl.IntentionActionFilter
- <init>():V
- accept(com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile):Z
pc:com.intellij.vcs.commit.message.BaseCommitMessageInspection$ReformatCommitMessageQuickFix
- com.intellij.vcs.commit.message.BaseCommitMessageInspection$BaseCommitMessageQuickFix
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.codeInsight.intention.LowPriorityAction
- com.intellij.openapi.actionSystem.ShortcutProvider
- <init>():V
- doApplyFix(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.codeInspection.ProblemDescriptor):V
- getFamilyName():java.lang.String
- getShortcut():com.intellij.openapi.actionSystem.ShortcutSet
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
f:com.intellij.vcs.commit.message.BodyLimitInspection
- com.intellij.vcs.commit.message.BaseCommitMessageInspection
- RIGHT_MARGIN:I
- <init>():V
- canReformat(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):Z
- createOptions(com.intellij.ui.dsl.builder.Panel,com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):Z
- getDisplayName():java.lang.String
- reformat(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):V
c:com.intellij.vcs.commit.message.CommitMessageInspectionProfile
- com.intellij.codeInspection.ex.InspectionProfileImpl
- com.intellij.openapi.components.PersistentStateComponent
- sf:TOPIC:com.intellij.util.messages.Topic
- <init>(com.intellij.openapi.project.Project):V
- p:forceInitInspectionTools():Z
- s:getBodyRightMargin(com.intellij.openapi.project.Project):I
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.vcs.commit.message.CommitMessageInspectionProfile
- getName():java.lang.String
- getProject():com.intellij.openapi.project.Project
- getState():com.intellij.vcs.commit.message.CommitMessageInspectionProfile$State
- s:getSubjectRightMargin(com.intellij.openapi.project.Project):I
- getTool(java.lang.Class):com.intellij.codeInspection.LocalInspectionTool
- isToolEnabled(java.lang.Class):Z
- loadState(com.intellij.vcs.commit.message.CommitMessageInspectionProfile$State):V
com.intellij.vcs.commit.message.CommitMessageInspectionProfile$ProfileListener
- java.util.EventListener
- a:profileChanged():V
c:com.intellij.vcs.commit.message.CommitMessageInspectionProfile$State
- myProfile:org.jdom.Element
- <init>():V
c:com.intellij.vcs.commit.message.ReformatCommitMessageAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:reformat(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.vcs.console.VcsConsoleFolding
- sf:Companion:com.intellij.vcs.console.VcsConsoleFolding$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getFoldingsForLine(com.intellij.openapi.project.Project,java.lang.String):java.util.List
f:com.intellij.vcs.console.VcsConsoleFolding$Companion
f:com.intellij.vcs.console.VcsConsoleFolding$Placeholder
- <init>(java.lang.String,com.intellij.openapi.util.TextRange):V
- f:component1():java.lang.String
- f:component2():com.intellij.openapi.util.TextRange
- f:copy(java.lang.String,com.intellij.openapi.util.TextRange):com.intellij.vcs.console.VcsConsoleFolding$Placeholder
- bs:copy$default(com.intellij.vcs.console.VcsConsoleFolding$Placeholder,java.lang.String,com.intellij.openapi.util.TextRange,I,java.lang.Object):com.intellij.vcs.console.VcsConsoleFolding$Placeholder
- equals(java.lang.Object):Z
- f:getPlaceholder():java.lang.String
- f:getTextRange():com.intellij.openapi.util.TextRange
- hashCode():I
a:com.intellij.vcs.editor.ComplexPathVirtualFileSystem
- com.intellij.openapi.vfs.DeprecatedVirtualFileSystem
- com.intellij.openapi.vfs.NonPhysicalFileSystem
- sf:Companion:com.intellij.vcs.editor.ComplexPathVirtualFileSystem$Companion
- <init>(com.intellij.vcs.editor.ComplexPathVirtualFileSystem$ComplexPathSerializer):V
- extractPresentableUrl(java.lang.String):java.lang.String
- findFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- pa:findOrCreateFile(com.intellij.openapi.project.Project,com.intellij.vcs.editor.ComplexPathVirtualFileSystem$ComplexPath):com.intellij.openapi.vfs.VirtualFile
- f:getPath(com.intellij.vcs.editor.ComplexPathVirtualFileSystem$ComplexPath):java.lang.String
- refresh(Z):V
- refreshAndFindFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
f:com.intellij.vcs.editor.ComplexPathVirtualFileSystem$Companion
com.intellij.vcs.editor.ComplexPathVirtualFileSystem$ComplexPath
- a:getProjectHash():java.lang.String
- a:getSessionId():java.lang.String
com.intellij.vcs.editor.ComplexPathVirtualFileSystem$ComplexPathSerializer
- a:deserialize(java.lang.String):com.intellij.vcs.editor.ComplexPathVirtualFileSystem$ComplexPath
- a:serialize(com.intellij.vcs.editor.ComplexPathVirtualFileSystem$ComplexPath):java.lang.String
f:com.intellij.vcs.editor.GsonComplexPathSerializer
- com.intellij.vcs.editor.ComplexPathVirtualFileSystem$ComplexPathSerializer
- <init>(java.lang.Class,com.google.gson.Gson):V
- b:<init>(java.lang.Class,com.google.gson.Gson,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- deserialize(java.lang.String):com.intellij.vcs.editor.ComplexPathVirtualFileSystem$ComplexPath
- serialize(com.intellij.vcs.editor.ComplexPathVirtualFileSystem$ComplexPath):java.lang.String
f:com.intellij.vcs.log.VcsUserEditor
- com.intellij.util.textCompletion.TextFieldWithCompletion
- sf:Companion:com.intellij.vcs.log.VcsUserEditor$Companion
- <init>(com.intellij.openapi.project.Project,java.util.List):V
- b:<init>(com.intellij.openapi.project.Project,java.util.List,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getUser():com.intellij.vcs.log.VcsUser
- f:setUser(com.intellij.vcs.log.VcsUser):V
- updateUI():V
f:com.intellij.vcs.log.VcsUserEditor$Companion
- f:getAllUsers(com.intellij.openapi.project.Project):java.util.List
f:com.intellij.vcs.log.impl.VcsUserImpl
- com.intellij.vcs.log.VcsUser
- <init>(java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getEmail():java.lang.String
- getName():java.lang.String
- hashCode():I
f:com.intellij.vcs.log.util.StopWatch
- s:formatTime(J):java.lang.String
- report():V
- report(com.intellij.openapi.diagnostic.Logger):V
- rootCompleted(com.intellij.openapi.vfs.VirtualFile):V
- s:start(java.lang.String):com.intellij.vcs.log.util.StopWatch
f:com.intellij.vcs.log.util.VcsUserUtil
- <init>():V
- s:capitalizeName(java.lang.String):java.lang.String
- s:emailToLowerCase(java.lang.String):java.lang.String
- s:getFirstAndLastName(java.lang.String):com.intellij.openapi.util.Couple
- s:getNameFromEmail(java.lang.String):java.lang.String
- s:getNameInStandardForm(java.lang.String):java.lang.String
- s:getShortPresentation(com.intellij.vcs.log.VcsUser):java.lang.String
- s:getUserName(java.lang.String,java.lang.String):java.lang.String
- s:isSamePerson(com.intellij.vcs.log.VcsUser,com.intellij.vcs.log.VcsUser):Z
- s:nameToLowerCase(java.lang.String):java.lang.String
- s:toExactString(com.intellij.vcs.log.VcsUser):java.lang.String
c:com.intellij.vcs.log.util.VcsUserUtil$VcsUserHashingStrategy
- it.unimi.dsi.fastutil.Hash$Strategy
- <init>():V
- equals(com.intellij.vcs.log.VcsUser,com.intellij.vcs.log.VcsUser):Z
- hashCode(com.intellij.vcs.log.VcsUser):I
c:com.intellij.vcs.ui.ProgressStripe
- com.intellij.ui.components.JBPanel
- p:myDecorator:com.intellij.vcs.ui.ProgressStripe$DisposableLoadingDecorator
- <init>(javax.swing.JComponent,com.intellij.openapi.Disposable):V
- <init>(javax.swing.JComponent,com.intellij.openapi.Disposable,I):V
- startLoading():V
- startLoadingImmediately():V
- stopLoading():V
- updateUI():V
f:com.intellij.vcs.ui.ProgressStripe$DisposableLoadingDecorator
- com.intellij.openapi.ui.LoadingDecorator
- getDisposable():com.intellij.openapi.Disposable
- startLoadingImmediately():V
c:com.intellij.vcsUtil.AuthDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String,Z):V
- p:createCenterPanel():javax.swing.JComponent
- getPassword():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getUsername():java.lang.String
- isRememberPassword():Z
f:com.intellij.vcsUtil.Delegates
- sf:INSTANCE:com.intellij.vcsUtil.Delegates
- f:equalVetoingObservable(java.lang.Object,kotlin.jvm.functions.Function1):kotlin.properties.ObservableProperty
f:com.intellij.vcsUtil.RollbackUtil
- s:getRollbackOperationName(com.intellij.openapi.project.Project):java.lang.String
- s:getRollbackOperationName(java.util.Collection):java.lang.String
f:com.intellij.vcsUtil.VcsFileUtil
- sf:FILE_PATH_LIMIT:I
- <init>():V
- s:addFilesToVcsWithConfirmation(com.intellij.openapi.project.Project,java.util.Collection):V
- s:addFilesToVcsWithConfirmation(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile[]):V
- s:chunkArguments(java.util.List):java.util.List
- s:chunkArguments(java.util.List,I):java.util.List
- s:chunkFiles(com.intellij.openapi.vfs.VirtualFile,java.util.Collection):java.util.List
- s:chunkPaths(com.intellij.openapi.vfs.VirtualFile,java.util.Collection):java.util.List
- s:foreachChunk(java.util.List,I,com.intellij.util.ThrowableConsumer):V
- s:getRelativeFilePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:getRelativeFilePath(java.lang.String,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:isAncestor(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath,Z):Z
- s:isAncestor(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.FilePath):Z
- s:isAncestor(java.lang.String,java.lang.String,Z):Z
- s:isOctal(C):Z
- s:markFilesDirty(com.intellij.openapi.project.Project,java.util.Collection):V
- s:markFilesDirty(com.intellij.openapi.project.Project,java.util.List):V
- s:relativeOrFullPath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:relativePath(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath):java.lang.String
- s:relativePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.FilePath):java.lang.String
- s:relativePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:relativePath(java.io.File,com.intellij.openapi.vcs.FilePath):java.lang.String
- s:relativePath(java.io.File,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:relativePath(java.io.File,java.io.File):java.lang.String
- s:toRelativeFiles(com.intellij.openapi.vfs.VirtualFile,java.util.Collection):java.util.List
- s:toRelativePaths(com.intellij.openapi.vfs.VirtualFile,java.util.Collection):java.util.List
- s:unescapeGitPath(java.lang.String):java.lang.String
f:com.intellij.vcsUtil.VcsImplUtil
- <init>():V
- s:filterChangesUnder(java.lang.Iterable,java.util.Collection):com.intellij.util.containers.JBIterable
- s:filterChangesUnderFiles(java.lang.Iterable,java.util.Collection):com.intellij.util.containers.JBIterable
- s:findIgnoredFileContentProvider(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.VcsKey):com.intellij.openapi.vcs.changes.IgnoredFileContentProvider
- s:findIgnoredFileContentProvider(com.intellij.openapi.vcs.AbstractVcs):com.intellij.openapi.vcs.changes.IgnoredFileContentProvider
- s:findValidParentAccurately(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vfs.VirtualFile
- s:generateIgnoreFileIfNeeded(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vfs.VirtualFile):V
- s:getShortVcsRootName(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:isProjectSharedInVcs(com.intellij.openapi.project.Project):Z
- s:loadTextFromBytes(com.intellij.openapi.project.Project,B[],com.intellij.openapi.vcs.FilePath):java.lang.String
- s:proposeUpdateIgnoreFile(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vfs.VirtualFile):V
- s:showErrorMessage(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
