com.intellij.java.workspace.entities.ArchivePackagingElementEntity
- com.intellij.java.workspace.entities.CompositePackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.ArchivePackagingElementEntity$Companion
- s:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArchivePackagingElementEntity$Builder
- s:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArchivePackagingElementEntity$Builder
- a:getFileName():java.lang.String
com.intellij.java.workspace.entities.ArchivePackagingElementEntity$Builder
- com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- a:getChildren():java.util.List
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getFileName():java.lang.String
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- a:setChildren(java.util.List):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setFileName(java.lang.String):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.ArchivePackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArchivePackagingElementEntity$Builder
- f:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArchivePackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.ArchivePackagingElementEntity$Companion,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.ArchivePackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.ArchivePackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- fileName:java.lang.String
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.ArchivePackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- f:getFileName():java.lang.String
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setFileName(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.ArchivePackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.ArchivePackagingElementEntity
- <init>(com.intellij.java.workspace.entities.ArchivePackagingElementEntityData):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactEntity
- getChildren():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getFileName():java.lang.String
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
f:com.intellij.java.workspace.entities.ArchivePackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.ArchivePackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.ArchivePackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- getChildren():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getFileName():java.lang.String
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- setChildren(java.util.List):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setFileName(java.lang.String):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
com.intellij.java.workspace.entities.ArtifactEntity
- com.intellij.platform.workspace.storage.WorkspaceEntityWithSymbolicId
- sf:Companion:com.intellij.java.workspace.entities.ArtifactEntity$Companion
- s:create(java.lang.String,java.lang.String,Z,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArtifactEntity$Builder
- s:create(java.lang.String,java.lang.String,Z,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactEntity$Builder
- a:getArtifactOutputPackagingElement():com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity
- a:getArtifactType():java.lang.String
- a:getCustomProperties():java.util.List
- a:getIncludeInProjectBuild():Z
- a:getName():java.lang.String
- a:getOutputUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getRootElement():com.intellij.java.workspace.entities.CompositePackagingElementEntity
- getSymbolicId():com.intellij.java.workspace.entities.ArtifactId
com.intellij.java.workspace.entities.ArtifactEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getArtifactOutputPackagingElement():com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder
- a:getArtifactType():java.lang.String
- a:getCustomProperties():java.util.List
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getIncludeInProjectBuild():Z
- a:getName():java.lang.String
- a:getOutputUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getRootElement():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setArtifactOutputPackagingElement(com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder):V
- a:setArtifactType(java.lang.String):V
- a:setCustomProperties(java.util.List):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setIncludeInProjectBuild(Z):V
- a:setName(java.lang.String):V
- a:setOutputUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- a:setRootElement(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.ArtifactEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.lang.String,java.lang.String,Z,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArtifactEntity$Builder
- f:create(java.lang.String,java.lang.String,Z,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.ArtifactEntity$Companion,java.lang.String,java.lang.String,Z,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.ArtifactEntity$Builder
f:com.intellij.java.workspace.entities.ArtifactEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- artifactType:java.lang.String
- name:java.lang.String
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.ArtifactEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- f:getArtifactType():java.lang.String
- getEntityInterface():java.lang.Class
- f:getIncludeInProjectBuild():Z
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getName():java.lang.String
- f:getOutputUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setArtifactType(java.lang.String):V
- f:setIncludeInProjectBuild(Z):V
- f:setName(java.lang.String):V
- f:setOutputUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.ArtifactEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.ArtifactEntity
- <init>(com.intellij.java.workspace.entities.ArtifactEntityData):V
- connectionIdList():java.util.List
- getArtifactOutputPackagingElement():com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity
- getArtifactType():java.lang.String
- getCustomProperties():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getIncludeInProjectBuild():Z
- getName():java.lang.String
- getOutputUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getRootElement():com.intellij.java.workspace.entities.CompositePackagingElementEntity
f:com.intellij.java.workspace.entities.ArtifactEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.ArtifactEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.ArtifactEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getArtifactOutputPackagingElement():com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder
- getArtifactType():java.lang.String
- getCustomProperties():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getIncludeInProjectBuild():Z
- getName():java.lang.String
- getOutputUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getRootElement():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- f:get_customProperties():java.util.List
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setArtifactOutputPackagingElement(com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder):V
- setArtifactType(java.lang.String):V
- setCustomProperties(java.util.List):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setIncludeInProjectBuild(Z):V
- setName(java.lang.String):V
- setOutputUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- setRootElement(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
- f:set_customProperties(java.util.List):V
f:com.intellij.java.workspace.entities.ArtifactId
- com.intellij.platform.workspace.storage.SymbolicEntityId
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.java.workspace.entities.ArtifactId
- bs:copy$default(com.intellij.java.workspace.entities.ArtifactId,java.lang.String,I,java.lang.Object):com.intellij.java.workspace.entities.ArtifactId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- getPresentableName():java.lang.String
- hashCode():I
- toString():java.lang.String
f:com.intellij.java.workspace.entities.ArtifactKt
- sf:getArtifactEntity(com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder):com.intellij.java.workspace.entities.ArtifactEntity$Builder
- sf:getArtifactEntity(com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity):com.intellij.java.workspace.entities.ArtifactEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.ArchivePackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArchivePackagingElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.ArtifactEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.ArtifactPropertiesEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactPropertiesEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.ArtifactRootElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactRootElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.ArtifactsOrderEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactsOrderEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.CustomPackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.CustomPackagingElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.DirectoryPackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.DirectoryPackagingElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.FileCopyPackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.FileCopyPackagingElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity
- sf:setArtifactEntity(com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder,com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity
- com.intellij.java.workspace.entities.PackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder
- a:getArtifact():com.intellij.java.workspace.entities.ArtifactId
com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder
- com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getArtifact():com.intellij.java.workspace.entities.ArtifactId
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setArtifact(com.intellij.java.workspace.entities.ArtifactId):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Companion,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- com.intellij.platform.workspace.storage.impl.SoftLinkable
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- f:getArtifact():com.intellij.java.workspace.entities.ArtifactId
- getEntityInterface():java.lang.Class
- getLinks():java.util.Set
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- index(com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- f:setArtifact(com.intellij.java.workspace.entities.ArtifactId):V
- updateLink(com.intellij.platform.workspace.storage.SymbolicEntityId,com.intellij.platform.workspace.storage.SymbolicEntityId):Z
- updateLinksIndex(java.util.Set,com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity
- <init>(com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntityData):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactId
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
f:com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.ArtifactOutputPackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactId
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setArtifact(com.intellij.java.workspace.entities.ArtifactId):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
com.intellij.java.workspace.entities.ArtifactPropertiesEntity
- com.intellij.platform.workspace.storage.WorkspaceEntity
- sf:Companion:com.intellij.java.workspace.entities.ArtifactPropertiesEntity$Companion
- s:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArtifactPropertiesEntity$Builder
- s:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactPropertiesEntity$Builder
- a:getArtifact():com.intellij.java.workspace.entities.ArtifactEntity
- a:getPropertiesXmlTag():java.lang.String
- a:getProviderType():java.lang.String
com.intellij.java.workspace.entities.ArtifactPropertiesEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getPropertiesXmlTag():java.lang.String
- a:getProviderType():java.lang.String
- a:setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setPropertiesXmlTag(java.lang.String):V
- a:setProviderType(java.lang.String):V
f:com.intellij.java.workspace.entities.ArtifactPropertiesEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArtifactPropertiesEntity$Builder
- f:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactPropertiesEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.ArtifactPropertiesEntity$Companion,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.ArtifactPropertiesEntity$Builder
f:com.intellij.java.workspace.entities.ArtifactPropertiesEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- providerType:java.lang.String
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.ArtifactPropertiesEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getPropertiesXmlTag():java.lang.String
- f:getProviderType():java.lang.String
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setPropertiesXmlTag(java.lang.String):V
- f:setProviderType(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.ArtifactPropertiesEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.ArtifactPropertiesEntity
- <init>(com.intellij.java.workspace.entities.ArtifactPropertiesEntityData):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactEntity
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getPropertiesXmlTag():java.lang.String
- getProviderType():java.lang.String
f:com.intellij.java.workspace.entities.ArtifactPropertiesEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.ArtifactPropertiesEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.ArtifactPropertiesEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getPropertiesXmlTag():java.lang.String
- getProviderType():java.lang.String
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setPropertiesXmlTag(java.lang.String):V
- setProviderType(java.lang.String):V
com.intellij.java.workspace.entities.ArtifactRootElementEntity
- com.intellij.java.workspace.entities.CompositePackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.ArtifactRootElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArtifactRootElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactRootElementEntity$Builder
com.intellij.java.workspace.entities.ArtifactRootElementEntity$Builder
- com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- a:getChildren():java.util.List
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- a:setChildren(java.util.List):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.ArtifactRootElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArtifactRootElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactRootElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.ArtifactRootElementEntity$Companion,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.ArtifactRootElementEntity$Builder
f:com.intellij.java.workspace.entities.ArtifactRootElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.ArtifactRootElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.ArtifactRootElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.ArtifactRootElementEntity
- <init>(com.intellij.java.workspace.entities.ArtifactRootElementEntityData):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactEntity
- getChildren():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
f:com.intellij.java.workspace.entities.ArtifactRootElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.ArtifactRootElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.ArtifactRootElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- getChildren():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- setChildren(java.util.List):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
com.intellij.java.workspace.entities.ArtifactsOrderEntity
- com.intellij.platform.workspace.storage.WorkspaceEntity
- sf:Companion:com.intellij.java.workspace.entities.ArtifactsOrderEntity$Companion
- s:create(java.util.List,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArtifactsOrderEntity$Builder
- s:create(java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactsOrderEntity$Builder
- a:getOrderOfArtifacts():java.util.List
com.intellij.java.workspace.entities.ArtifactsOrderEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getOrderOfArtifacts():java.util.List
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setOrderOfArtifacts(java.util.List):V
f:com.intellij.java.workspace.entities.ArtifactsOrderEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.util.List,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ArtifactsOrderEntity$Builder
- f:create(java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ArtifactsOrderEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.ArtifactsOrderEntity$Companion,java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.ArtifactsOrderEntity$Builder
f:com.intellij.java.workspace.entities.ArtifactsOrderEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- orderOfArtifacts:java.util.List
- <init>():V
- clone():com.intellij.java.workspace.entities.ArtifactsOrderEntityData
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.ArtifactsOrderEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getOrderOfArtifacts():java.util.List
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setOrderOfArtifacts(java.util.List):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.ArtifactsOrderEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.ArtifactsOrderEntity
- <init>(com.intellij.java.workspace.entities.ArtifactsOrderEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getOrderOfArtifacts():java.util.List
f:com.intellij.java.workspace.entities.ArtifactsOrderEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.ArtifactsOrderEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.ArtifactsOrderEntityData):V
- afterModification():V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getOrderOfArtifacts():java.util.List
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setOrderOfArtifacts(java.util.List):V
com.intellij.java.workspace.entities.CompositePackagingElementEntity
- com.intellij.java.workspace.entities.PackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.CompositePackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:getArtifact():com.intellij.java.workspace.entities.ArtifactEntity
- a:getChildren():java.util.List
com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- a:getChildren():java.util.List
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- a:setChildren(java.util.List):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.CompositePackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Companion,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
com.intellij.java.workspace.entities.CustomPackagingElementEntity
- com.intellij.java.workspace.entities.CompositePackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.CustomPackagingElementEntity$Companion
- s:create(java.lang.String,java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.CustomPackagingElementEntity$Builder
- s:create(java.lang.String,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.CustomPackagingElementEntity$Builder
- a:getPropertiesXmlTag():java.lang.String
- a:getTypeId():java.lang.String
com.intellij.java.workspace.entities.CustomPackagingElementEntity$Builder
- com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- a:getChildren():java.util.List
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:getPropertiesXmlTag():java.lang.String
- a:getTypeId():java.lang.String
- a:setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- a:setChildren(java.util.List):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
- a:setPropertiesXmlTag(java.lang.String):V
- a:setTypeId(java.lang.String):V
f:com.intellij.java.workspace.entities.CustomPackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.lang.String,java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.CustomPackagingElementEntity$Builder
- f:create(java.lang.String,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.CustomPackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.CustomPackagingElementEntity$Companion,java.lang.String,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.CustomPackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.CustomPackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- propertiesXmlTag:java.lang.String
- typeId:java.lang.String
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.CustomPackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getPropertiesXmlTag():java.lang.String
- getRequiredParents():java.util.List
- f:getTypeId():java.lang.String
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setPropertiesXmlTag(java.lang.String):V
- f:setTypeId(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.CustomPackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.CustomPackagingElementEntity
- <init>(com.intellij.java.workspace.entities.CustomPackagingElementEntityData):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactEntity
- getChildren():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
- getPropertiesXmlTag():java.lang.String
- getTypeId():java.lang.String
f:com.intellij.java.workspace.entities.CustomPackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.CustomPackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.CustomPackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- getChildren():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- getPropertiesXmlTag():java.lang.String
- getTypeId():java.lang.String
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- setChildren(java.util.List):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
- setPropertiesXmlTag(java.lang.String):V
- setTypeId(java.lang.String):V
com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity
- com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity$Builder
com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity$Builder
- com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setFilePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity$Companion,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- filePath:com.intellij.platform.workspace.storage.url.VirtualFileUrl
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- f:getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setFilePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity
- <init>(com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
f:com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.DirectoryCopyPackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setFilePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
com.intellij.java.workspace.entities.DirectoryPackagingElementEntity
- com.intellij.java.workspace.entities.CompositePackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.DirectoryPackagingElementEntity$Companion
- s:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.DirectoryPackagingElementEntity$Builder
- s:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.DirectoryPackagingElementEntity$Builder
- a:getDirectoryName():java.lang.String
com.intellij.java.workspace.entities.DirectoryPackagingElementEntity$Builder
- com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- a:getChildren():java.util.List
- a:getDirectoryName():java.lang.String
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- a:setChildren(java.util.List):V
- a:setDirectoryName(java.lang.String):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.DirectoryPackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.DirectoryPackagingElementEntity$Builder
- f:create(java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.DirectoryPackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.DirectoryPackagingElementEntity$Companion,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.DirectoryPackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.DirectoryPackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- directoryName:java.lang.String
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.DirectoryPackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- f:getDirectoryName():java.lang.String
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setDirectoryName(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.DirectoryPackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.DirectoryPackagingElementEntity
- <init>(com.intellij.java.workspace.entities.DirectoryPackagingElementEntityData):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactEntity
- getChildren():java.util.List
- getDirectoryName():java.lang.String
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
f:com.intellij.java.workspace.entities.DirectoryPackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.DirectoryPackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.DirectoryPackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getArtifact():com.intellij.java.workspace.entities.ArtifactEntity$Builder
- getChildren():java.util.List
- getDirectoryName():java.lang.String
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setArtifact(com.intellij.java.workspace.entities.ArtifactEntity$Builder):V
- setChildren(java.util.List):V
- setDirectoryName(java.lang.String):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity
- com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity$Builder
- a:getPathInArchive():java.lang.String
com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity$Builder
- com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:getPathInArchive():java.lang.String
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setFilePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
- a:setPathInArchive(java.lang.String):V
f:com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity$Companion,com.intellij.platform.workspace.storage.url.VirtualFileUrl,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- filePath:com.intellij.platform.workspace.storage.url.VirtualFileUrl
- pathInArchive:java.lang.String
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- f:getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getPathInArchive():java.lang.String
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setFilePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- f:setPathInArchive(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity
- <init>(com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
- getPathInArchive():java.lang.String
f:com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.ExtractedDirectoryPackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- getPathInArchive():java.lang.String
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setFilePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
- setPathInArchive(java.lang.String):V
com.intellij.java.workspace.entities.FileCopyPackagingElementEntity
- com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.FileCopyPackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.FileCopyPackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.FileCopyPackagingElementEntity$Builder
- a:getRenamedOutputFileName():java.lang.String
com.intellij.java.workspace.entities.FileCopyPackagingElementEntity$Builder
- com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:getRenamedOutputFileName():java.lang.String
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setFilePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
- a:setRenamedOutputFileName(java.lang.String):V
f:com.intellij.java.workspace.entities.FileCopyPackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.FileCopyPackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.FileCopyPackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.FileCopyPackagingElementEntity$Companion,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.FileCopyPackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.FileCopyPackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- filePath:com.intellij.platform.workspace.storage.url.VirtualFileUrl
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.FileCopyPackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- f:getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getRenamedOutputFileName():java.lang.String
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setFilePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- f:setRenamedOutputFileName(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.FileCopyPackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.FileCopyPackagingElementEntity
- <init>(com.intellij.java.workspace.entities.FileCopyPackagingElementEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
- getRenamedOutputFileName():java.lang.String
f:com.intellij.java.workspace.entities.FileCopyPackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.FileCopyPackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.FileCopyPackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- getRenamedOutputFileName():java.lang.String
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setFilePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
- setRenamedOutputFileName(java.lang.String):V
com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity
- com.intellij.java.workspace.entities.PackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Builder
- a:getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Builder
- com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getFilePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setFilePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Companion,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.FileOrDirectoryPackagingElementEntity$Builder
com.intellij.java.workspace.entities.JavaModuleSettingsEntity
- com.intellij.platform.workspace.storage.WorkspaceEntity
- sf:Companion:com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Companion
- s:create(Z,Z,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Builder
- s:create(Z,Z,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Builder
- a:getCompilerOutput():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getCompilerOutputForTests():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getExcludeOutput():Z
- a:getInheritedCompilerOutput():Z
- a:getLanguageLevelId():java.lang.String
- getManifestAttributes():java.util.Map
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity
com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getCompilerOutput():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getCompilerOutputForTests():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getExcludeOutput():Z
- a:getInheritedCompilerOutput():Z
- a:getLanguageLevelId():java.lang.String
- a:getManifestAttributes():java.util.Map
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- a:setCompilerOutput(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- a:setCompilerOutputForTests(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setExcludeOutput(Z):V
- a:setInheritedCompilerOutput(Z):V
- a:setLanguageLevelId(java.lang.String):V
- a:setManifestAttributes(java.util.Map):V
- a:setModule(com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder):V
f:com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(Z,Z,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Builder
- f:create(Z,Z,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Companion,Z,Z,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Builder
f:com.intellij.java.workspace.entities.JavaModuleSettingsEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.JavaModuleSettingsEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- f:getCompilerOutput():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:getCompilerOutputForTests():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getEntityInterface():java.lang.Class
- f:getExcludeOutput():Z
- f:getInheritedCompilerOutput():Z
- f:getLanguageLevelId():java.lang.String
- f:getManifestAttributes():java.util.Map
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setCompilerOutput(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- f:setCompilerOutputForTests(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- f:setExcludeOutput(Z):V
- f:setInheritedCompilerOutput(Z):V
- f:setLanguageLevelId(java.lang.String):V
- f:setManifestAttributes(java.util.Map):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.JavaModuleSettingsEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.JavaModuleSettingsEntity
- <init>(com.intellij.java.workspace.entities.JavaModuleSettingsEntityData):V
- connectionIdList():java.util.List
- getCompilerOutput():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getCompilerOutputForTests():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getExcludeOutput():Z
- getInheritedCompilerOutput():Z
- getLanguageLevelId():java.lang.String
- getManifestAttributes():java.util.Map
- getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity
- setManifestAttributes(java.util.Map):V
f:com.intellij.java.workspace.entities.JavaModuleSettingsEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.JavaModuleSettingsEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getCompilerOutput():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getCompilerOutputForTests():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getExcludeOutput():Z
- getInheritedCompilerOutput():Z
- getLanguageLevelId():java.lang.String
- getManifestAttributes():java.util.Map
- getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setCompilerOutput(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- setCompilerOutputForTests(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setExcludeOutput(Z):V
- setInheritedCompilerOutput(Z):V
- setLanguageLevelId(java.lang.String):V
- setManifestAttributes(java.util.Map):V
- setModule(com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder):V
f:com.intellij.java.workspace.entities.JavaModuleSettingsKt
- sf:getJavaSettings(com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder):com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Builder
- sf:getJavaSettings(com.intellij.platform.workspace.jps.entities.ModuleEntity):com.intellij.java.workspace.entities.JavaModuleSettingsEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.JavaModuleSettingsEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.JavaModuleSettingsEntity
- sf:setJavaSettings(com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder,com.intellij.java.workspace.entities.JavaModuleSettingsEntity$Builder):V
com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity
- com.intellij.platform.workspace.storage.WorkspaceEntity
- sf:Companion:com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity$Companion
- s:create(Z,java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity$Builder
- s:create(Z,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity$Builder
- a:getGenerated():Z
- a:getRelativeOutputPath():java.lang.String
- a:getSourceRoot():com.intellij.platform.workspace.jps.entities.SourceRootEntity
com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getGenerated():Z
- a:getRelativeOutputPath():java.lang.String
- a:getSourceRoot():com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setGenerated(Z):V
- a:setRelativeOutputPath(java.lang.String):V
- a:setSourceRoot(com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder):V
f:com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(Z,java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity$Builder
- f:create(Z,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity$Companion,Z,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity$Builder
f:com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- relativeOutputPath:java.lang.String
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- f:getGenerated():Z
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getRelativeOutputPath():java.lang.String
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setGenerated(Z):V
- f:setRelativeOutputPath(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity
- <init>(com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getGenerated():Z
- getRelativeOutputPath():java.lang.String
- getSourceRoot():com.intellij.platform.workspace.jps.entities.SourceRootEntity
f:com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getGenerated():Z
- getRelativeOutputPath():java.lang.String
- getSourceRoot():com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setGenerated(Z):V
- setRelativeOutputPath(java.lang.String):V
- setSourceRoot(com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder):V
f:com.intellij.java.workspace.entities.JavaRootsKt
- sf:asJavaResourceRoot(com.intellij.platform.workspace.jps.entities.SourceRootEntity):com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity
- sf:asJavaSourceRoot(com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder):com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Builder
- sf:asJavaSourceRoot(com.intellij.platform.workspace.jps.entities.SourceRootEntity):com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity
- sf:getJavaResourceRoots(com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder):java.util.List
- sf:getJavaResourceRoots(com.intellij.platform.workspace.jps.entities.SourceRootEntity):java.util.List
- sf:getJavaSourceRoots(com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder):java.util.List
- sf:getJavaSourceRoots(com.intellij.platform.workspace.jps.entities.SourceRootEntity):java.util.List
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.JavaResourceRootPropertiesEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity
- sf:setJavaResourceRoots(com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder,java.util.List):V
- sf:setJavaSourceRoots(com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder,java.util.List):V
com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity
- com.intellij.platform.workspace.storage.WorkspaceEntity
- sf:Companion:com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Companion
- s:create(Z,java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Builder
- s:create(Z,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Builder
- a:getGenerated():Z
- a:getPackagePrefix():java.lang.String
- a:getSourceRoot():com.intellij.platform.workspace.jps.entities.SourceRootEntity
com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getGenerated():Z
- a:getPackagePrefix():java.lang.String
- a:getSourceRoot():com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setGenerated(Z):V
- a:setPackagePrefix(java.lang.String):V
- a:setSourceRoot(com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder):V
f:com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(Z,java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Builder
- f:create(Z,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Companion,Z,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Builder
f:com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- packagePrefix:java.lang.String
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- f:getGenerated():Z
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getPackagePrefix():java.lang.String
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setGenerated(Z):V
- f:setPackagePrefix(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity
- <init>(com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getGenerated():Z
- getPackagePrefix():java.lang.String
- getSourceRoot():com.intellij.platform.workspace.jps.entities.SourceRootEntity
f:com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.JavaSourceRootPropertiesEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getGenerated():Z
- getPackagePrefix():java.lang.String
- getSourceRoot():com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setGenerated(Z):V
- setPackagePrefix(java.lang.String):V
- setSourceRoot(com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder):V
com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity
- com.intellij.java.workspace.entities.PackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity$Builder
- a:getLibrary():com.intellij.platform.workspace.jps.entities.LibraryId
com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity$Builder
- com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getLibrary():com.intellij.platform.workspace.jps.entities.LibraryId
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setLibrary(com.intellij.platform.workspace.jps.entities.LibraryId):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity$Companion,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- com.intellij.platform.workspace.storage.impl.SoftLinkable
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- f:getLibrary():com.intellij.platform.workspace.jps.entities.LibraryId
- getLinks():java.util.Set
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- index(com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- f:setLibrary(com.intellij.platform.workspace.jps.entities.LibraryId):V
- updateLink(com.intellij.platform.workspace.storage.SymbolicEntityId,com.intellij.platform.workspace.storage.SymbolicEntityId):Z
- updateLinksIndex(java.util.Set,com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity
- <init>(com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getLibrary():com.intellij.platform.workspace.jps.entities.LibraryId
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
f:com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.LibraryFilesPackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getLibrary():com.intellij.platform.workspace.jps.entities.LibraryId
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setLibrary(com.intellij.platform.workspace.jps.entities.LibraryId):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.MetadataStorageImpl
- com.intellij.platform.workspace.storage.metadata.impl.MetadataStorageBase
- sf:INSTANCE:com.intellij.java.workspace.entities.MetadataStorageImpl
com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity
- com.intellij.java.workspace.entities.PackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity$Builder
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleId
com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity$Builder
- com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setModule(com.intellij.platform.workspace.jps.entities.ModuleId):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity$Companion,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- com.intellij.platform.workspace.storage.impl.SoftLinkable
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getLinks():java.util.Set
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- index(com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- f:setModule(com.intellij.platform.workspace.jps.entities.ModuleId):V
- updateLink(com.intellij.platform.workspace.storage.SymbolicEntityId,com.intellij.platform.workspace.storage.SymbolicEntityId):Z
- updateLinksIndex(java.util.Set,com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity
- <init>(com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
f:com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.ModuleOutputPackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setModule(com.intellij.platform.workspace.jps.entities.ModuleId):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity
- com.intellij.java.workspace.entities.PackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity$Builder
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleId
com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity$Builder
- com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setModule(com.intellij.platform.workspace.jps.entities.ModuleId):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity$Companion,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- com.intellij.platform.workspace.storage.impl.SoftLinkable
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getLinks():java.util.Set
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- index(com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- f:setModule(com.intellij.platform.workspace.jps.entities.ModuleId):V
- updateLink(com.intellij.platform.workspace.storage.SymbolicEntityId,com.intellij.platform.workspace.storage.SymbolicEntityId):Z
- updateLinksIndex(java.util.Set,com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity
- <init>(com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
f:com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.ModuleSourcePackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setModule(com.intellij.platform.workspace.jps.entities.ModuleId):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity
- com.intellij.java.workspace.entities.PackagingElementEntity
- sf:Companion:com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity$Builder
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleId
com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity$Builder
- com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setModule(com.intellij.platform.workspace.jps.entities.ModuleId):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity$Companion,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity$Builder
f:com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- com.intellij.platform.workspace.storage.impl.SoftLinkable
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getLinks():java.util.Set
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- index(com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- f:setModule(com.intellij.platform.workspace.jps.entities.ModuleId):V
- updateLink(com.intellij.platform.workspace.storage.SymbolicEntityId,com.intellij.platform.workspace.storage.SymbolicEntityId):Z
- updateLinksIndex(java.util.Set,com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity
- <init>(com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
f:com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntity$Builder
- <init>():V
- <init>(com.intellij.java.workspace.entities.ModuleTestOutputPackagingElementEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setModule(com.intellij.platform.workspace.jps.entities.ModuleId):V
- setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
com.intellij.java.workspace.entities.PackagingElementEntity
- com.intellij.platform.workspace.storage.WorkspaceEntity
- sf:Companion:com.intellij.java.workspace.entities.PackagingElementEntity$Companion
- s:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- s:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity
com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getParentEntity():com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setParentEntity(com.intellij.java.workspace.entities.CompositePackagingElementEntity$Builder):V
f:com.intellij.java.workspace.entities.PackagingElementEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.EntitySource):com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- f:create(com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.java.workspace.entities.PackagingElementEntity$Builder
- bs:create$default(com.intellij.java.workspace.entities.PackagingElementEntity$Companion,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.java.workspace.entities.PackagingElementEntity$Builder
*:com.intellij.platform.workspace.jps.CustomModuleEntitySource
- com.intellij.platform.workspace.storage.EntitySource
- a:getInternalSource():com.intellij.platform.workspace.jps.JpsFileEntitySource
*f:com.intellij.platform.workspace.jps.JpsEntitySourceFactory
- sf:INSTANCE:com.intellij.platform.workspace.jps.JpsEntitySourceFactory
- f:createJpsEntitySourceForArtifact(com.intellij.platform.workspace.jps.JpsProjectConfigLocation):com.intellij.platform.workspace.jps.JpsFileEntitySource
- f:createJpsEntitySourceForProjectLibrary(com.intellij.platform.workspace.jps.JpsProjectConfigLocation):com.intellij.platform.workspace.jps.JpsFileEntitySource
*:com.intellij.platform.workspace.jps.JpsFileDependentEntitySource
- a:getOriginalSource():com.intellij.platform.workspace.jps.JpsFileEntitySource
*a:com.intellij.platform.workspace.jps.JpsFileEntitySource
- com.intellij.platform.workspace.storage.EntitySource
*f:com.intellij.platform.workspace.jps.JpsGlobalFileEntitySource
- com.intellij.platform.workspace.jps.JpsFileEntitySource
- <init>(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- f:component1():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:copy(com.intellij.platform.workspace.storage.url.VirtualFileUrl):com.intellij.platform.workspace.jps.JpsGlobalFileEntitySource
- bs:copy$default(com.intellij.platform.workspace.jps.JpsGlobalFileEntitySource,com.intellij.platform.workspace.storage.url.VirtualFileUrl,I,java.lang.Object):com.intellij.platform.workspace.jps.JpsGlobalFileEntitySource
- equals(java.lang.Object):Z
- f:getFile():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- hashCode():I
- toString():java.lang.String
*f:com.intellij.platform.workspace.jps.JpsImportedEntitySource
- com.intellij.platform.workspace.jps.JpsFileDependentEntitySource
- com.intellij.platform.workspace.storage.EntitySource
- <init>(com.intellij.platform.workspace.jps.JpsFileEntitySource,java.lang.String,Z):V
- f:component1():com.intellij.platform.workspace.jps.JpsFileEntitySource
- f:component2():java.lang.String
- f:component3():Z
- f:copy(com.intellij.platform.workspace.jps.JpsFileEntitySource,java.lang.String,Z):com.intellij.platform.workspace.jps.JpsImportedEntitySource
- bs:copy$default(com.intellij.platform.workspace.jps.JpsImportedEntitySource,com.intellij.platform.workspace.jps.JpsFileEntitySource,java.lang.String,Z,I,java.lang.Object):com.intellij.platform.workspace.jps.JpsImportedEntitySource
- equals(java.lang.Object):Z
- f:getExternalSystemId():java.lang.String
- f:getInternalFile():com.intellij.platform.workspace.jps.JpsFileEntitySource
- getOriginalSource():com.intellij.platform.workspace.jps.JpsFileEntitySource
- f:getStoredExternally():Z
- getVirtualFileUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- hashCode():I
- toString():java.lang.String
*a:com.intellij.platform.workspace.jps.JpsProjectConfigLocation
- a:getBaseDirectoryUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:getBaseDirectoryUrlString():java.lang.String
- a:getProjectFilePath():java.lang.String
*f:com.intellij.platform.workspace.jps.JpsProjectConfigLocation$DirectoryBased
- com.intellij.platform.workspace.jps.JpsProjectConfigLocation
- <init>(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- f:component1():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:component2():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:copy(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.url.VirtualFileUrl):com.intellij.platform.workspace.jps.JpsProjectConfigLocation$DirectoryBased
- bs:copy$default(com.intellij.platform.workspace.jps.JpsProjectConfigLocation$DirectoryBased,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.url.VirtualFileUrl,I,java.lang.Object):com.intellij.platform.workspace.jps.JpsProjectConfigLocation$DirectoryBased
- equals(java.lang.Object):Z
- getBaseDirectoryUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:getIdeaFolder():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:getProjectDir():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getProjectFilePath():java.lang.String
- hashCode():I
- toString():java.lang.String
*f:com.intellij.platform.workspace.jps.JpsProjectConfigLocation$FileBased
- com.intellij.platform.workspace.jps.JpsProjectConfigLocation
- <init>(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- f:component1():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:component2():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:copy(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.url.VirtualFileUrl):com.intellij.platform.workspace.jps.JpsProjectConfigLocation$FileBased
- bs:copy$default(com.intellij.platform.workspace.jps.JpsProjectConfigLocation$FileBased,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.url.VirtualFileUrl,I,java.lang.Object):com.intellij.platform.workspace.jps.JpsProjectConfigLocation$FileBased
- equals(java.lang.Object):Z
- getBaseDirectoryUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:getIprFile():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:getIprFileParent():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getProjectFilePath():java.lang.String
- hashCode():I
- toString():java.lang.String
*a:com.intellij.platform.workspace.jps.JpsProjectFileEntitySource
- com.intellij.platform.workspace.jps.JpsFileEntitySource
- a:getProjectLocation():com.intellij.platform.workspace.jps.JpsProjectConfigLocation
*f:com.intellij.platform.workspace.jps.JpsProjectFileEntitySource$ExactFile
- com.intellij.platform.workspace.jps.JpsProjectFileEntitySource
- <init>(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.JpsProjectConfigLocation):V
- f:component1():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:component2():com.intellij.platform.workspace.jps.JpsProjectConfigLocation
- f:copy(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.JpsProjectConfigLocation):com.intellij.platform.workspace.jps.JpsProjectFileEntitySource$ExactFile
- bs:copy$default(com.intellij.platform.workspace.jps.JpsProjectFileEntitySource$ExactFile,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.JpsProjectConfigLocation,I,java.lang.Object):com.intellij.platform.workspace.jps.JpsProjectFileEntitySource$ExactFile
- equals(java.lang.Object):Z
- f:getFile():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getProjectLocation():com.intellij.platform.workspace.jps.JpsProjectConfigLocation
- getVirtualFileUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- hashCode():I
- toString():java.lang.String
*f:com.intellij.platform.workspace.jps.JpsProjectFileEntitySource$FileInDirectory
- com.intellij.platform.workspace.jps.JpsProjectFileEntitySource
- *sf:Companion:com.intellij.platform.workspace.jps.JpsProjectFileEntitySource$FileInDirectory$Companion
- <init>(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.JpsProjectConfigLocation):V
- f:component1():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:component2():com.intellij.platform.workspace.jps.JpsProjectConfigLocation
- f:copy(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.JpsProjectConfigLocation):com.intellij.platform.workspace.jps.JpsProjectFileEntitySource$FileInDirectory
- bs:copy$default(com.intellij.platform.workspace.jps.JpsProjectFileEntitySource$FileInDirectory,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.JpsProjectConfigLocation,I,java.lang.Object):com.intellij.platform.workspace.jps.JpsProjectFileEntitySource$FileInDirectory
- equals(java.lang.Object):Z
- f:getDirectory():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:getFileNameId():I
- getProjectLocation():com.intellij.platform.workspace.jps.JpsProjectConfigLocation
- getVirtualFileUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- hashCode():I
- toString():java.lang.String
*f:com.intellij.platform.workspace.jps.JpsProjectFileEntitySource$FileInDirectory$Companion
*f:com.intellij.platform.workspace.jps.MetadataStorageImpl
- com.intellij.platform.workspace.storage.metadata.MetadataStorageBridge
- sf:INSTANCE:com.intellij.platform.workspace.jps.MetadataStorageImpl
*f:com.intellij.platform.workspace.jps.OrphanageWorkerEntitySource
- com.intellij.platform.workspace.storage.EntitySource
- sf:INSTANCE:com.intellij.platform.workspace.jps.OrphanageWorkerEntitySource
*:com.intellij.platform.workspace.jps.UnloadedModulesNameHolder
- sf:DUMMY:com.intellij.platform.workspace.jps.UnloadedModulesNameHolder
- a:hasUnloaded():Z
- a:isUnloaded(java.lang.String):Z
*f:com.intellij.platform.workspace.jps.WorkspaceModelJpsDumper
- sf:INSTANCE:com.intellij.platform.workspace.jps.WorkspaceModelJpsDumper
- f:dumpModuleStructure(com.intellij.platform.workspace.storage.EntityStorage):java.lang.String
com.intellij.platform.workspace.jps.entities.ContentRootEntity
- com.intellij.platform.workspace.storage.WorkspaceEntity
- sf:Companion:com.intellij.platform.workspace.jps.entities.ContentRootEntity$Companion
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,java.util.List,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder
- a:getExcludedPatterns():java.util.List
- a:getExcludedUrls():java.util.List
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity
- a:getSourceRoots():java.util.List
- a:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getExcludedPatterns():java.util.List
- a:getExcludedUrls():java.util.List
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- a:getSourceRoots():java.util.List
- a:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setExcludedPatterns(java.util.List):V
- a:setExcludedUrls(java.util.List):V
- a:setModule(com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder):V
- a:setSourceRoots(java.util.List):V
- a:setUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
f:com.intellij.platform.workspace.jps.entities.ContentRootEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,java.util.List,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder
- bs:create$default(com.intellij.platform.workspace.jps.entities.ContentRootEntity$Companion,com.intellij.platform.workspace.storage.url.VirtualFileUrl,java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder
f:com.intellij.platform.workspace.jps.entities.ContentRootEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- excludedPatterns:java.util.List
- url:com.intellij.platform.workspace.storage.url.VirtualFileUrl
- <init>():V
- clone():com.intellij.platform.workspace.jps.entities.ContentRootEntityData
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.ContentRootEntity
- equals(java.lang.Object):Z
- equalsByKey(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- f:getExcludedPatterns():java.util.List
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- f:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- hashCode():I
- hashCodeByKey():I
- hashCodeIgnoringEntitySource():I
- f:setExcludedPatterns(java.util.List):V
- f:setUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.platform.workspace.jps.entities.ContentRootEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.ContentRootEntity
- <init>(com.intellij.platform.workspace.jps.entities.ContentRootEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getExcludedPatterns():java.util.List
- getExcludedUrls():java.util.List
- getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity
- getSourceRoots():java.util.List
- getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
f:com.intellij.platform.workspace.jps.entities.ContentRootEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder
- <init>():V
- <init>(com.intellij.platform.workspace.jps.entities.ContentRootEntityData):V
- afterModification():V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getExcludedPatterns():java.util.List
- getExcludedUrls():java.util.List
- getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- getSourceRoots():java.util.List
- getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:get_excludedUrls():java.util.List
- f:get_sourceRoots():java.util.List
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setExcludedPatterns(java.util.List):V
- setExcludedUrls(java.util.List):V
- setModule(com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder):V
- setSourceRoots(java.util.List):V
- setUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- f:set_excludedUrls(java.util.List):V
- f:set_sourceRoots(java.util.List):V
f:com.intellij.platform.workspace.jps.entities.CustomSourceRootPropertiesEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- propertiesXmlTag:java.lang.String
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.CustomSourceRootPropertiesEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getPropertiesXmlTag():java.lang.String
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setPropertiesXmlTag(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
f:com.intellij.platform.workspace.jps.entities.DependenciesKt
- sf:getLibrary(com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity):com.intellij.platform.workspace.jps.entities.LibraryEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.LibraryEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.LibraryEntity
e:com.intellij.platform.workspace.jps.entities.DependencyScope
- java.lang.Enum
- sf:COMPILE:com.intellij.platform.workspace.jps.entities.DependencyScope
- sf:PROVIDED:com.intellij.platform.workspace.jps.entities.DependencyScope
- sf:RUNTIME:com.intellij.platform.workspace.jps.entities.DependencyScope
- sf:TEST:com.intellij.platform.workspace.jps.entities.DependencyScope
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.platform.workspace.jps.entities.DependencyScope
- s:values():com.intellij.platform.workspace.jps.entities.DependencyScope[]
f:com.intellij.platform.workspace.jps.entities.ExcludeKt
- sf:getContentRoot(com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder):com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder
- sf:getLibrary(com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder):com.intellij.platform.workspace.jps.entities.LibraryEntity$Builder
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity
- sf:setContentRoot(com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder,com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder):V
- sf:setLibrary(com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder,com.intellij.platform.workspace.jps.entities.LibraryEntity$Builder):V
com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity
- com.intellij.platform.workspace.storage.WorkspaceEntity
- sf:Companion:com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Companion
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder
- a:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
f:com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder
- bs:create$default(com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Companion,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder
f:com.intellij.platform.workspace.jps.entities.ExcludeUrlEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- url:com.intellij.platform.workspace.storage.url.VirtualFileUrl
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- f:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.platform.workspace.jps.entities.ExcludeUrlEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity
- <init>(com.intellij.platform.workspace.jps.entities.ExcludeUrlEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
f:com.intellij.platform.workspace.jps.entities.ExcludeUrlEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity$Builder
- <init>():V
- <init>(com.intellij.platform.workspace.jps.entities.ExcludeUrlEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
f:com.intellij.platform.workspace.jps.entities.ExcludeUrlOrderEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- order:java.util.List
- <init>():V
- clone():com.intellij.platform.workspace.jps.entities.ExcludeUrlOrderEntityData
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.ExcludeUrlOrderEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getOrder():java.util.List
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setOrder(java.util.List):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
f:com.intellij.platform.workspace.jps.entities.ExtensionsKt
- sf:getModuleLibraries(com.intellij.platform.workspace.jps.entities.ModuleEntity,com.intellij.platform.workspace.storage.EntityStorage):kotlin.sequences.Sequence
- sf:getProjectLibraries(com.intellij.platform.workspace.storage.EntityStorage):kotlin.sequences.Sequence
- sf:getSourceRoots(com.intellij.platform.workspace.jps.entities.ModuleEntity):java.util.List
f:com.intellij.platform.workspace.jps.entities.ExternalSystemModuleOptionsEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.ExternalSystemModuleOptionsEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- f:getExternalSystem():java.lang.String
- f:getExternalSystemModuleGroup():java.lang.String
- f:getExternalSystemModuleType():java.lang.String
- f:getExternalSystemModuleVersion():java.lang.String
- f:getLinkedProjectId():java.lang.String
- f:getLinkedProjectPath():java.lang.String
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- f:getRootProjectPath():java.lang.String
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setExternalSystem(java.lang.String):V
- f:setExternalSystemModuleGroup(java.lang.String):V
- f:setExternalSystemModuleType(java.lang.String):V
- f:setExternalSystemModuleVersion(java.lang.String):V
- f:setLinkedProjectId(java.lang.String):V
- f:setLinkedProjectPath(java.lang.String):V
- f:setRootProjectPath(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
com.intellij.platform.workspace.jps.entities.FacetEntity
- com.intellij.platform.workspace.jps.entities.ModuleSettingsBase
- sf:Companion:com.intellij.platform.workspace.jps.entities.FacetEntity$Companion
- s:create(java.lang.String,com.intellij.platform.workspace.jps.entities.ModuleId,com.intellij.platform.workspace.jps.entities.FacetEntityTypeId,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.FacetEntity$Builder
- s:create(java.lang.String,com.intellij.platform.workspace.jps.entities.ModuleId,com.intellij.platform.workspace.jps.entities.FacetEntityTypeId,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.FacetEntity$Builder
- a:getConfigurationXmlTag():java.lang.String
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity
- getSymbolicId():com.intellij.platform.workspace.jps.entities.FacetId
- a:getTypeId():com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- a:getUnderlyingFacet():com.intellij.platform.workspace.jps.entities.FacetEntity
com.intellij.platform.workspace.jps.entities.FacetEntity$Builder
- com.intellij.platform.workspace.jps.entities.ModuleSettingsBase$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getConfigurationXmlTag():java.lang.String
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- a:getModuleId():com.intellij.platform.workspace.jps.entities.ModuleId
- a:getName():java.lang.String
- a:getTypeId():com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- a:getUnderlyingFacet():com.intellij.platform.workspace.jps.entities.FacetEntity$Builder
- a:setConfigurationXmlTag(java.lang.String):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setModule(com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder):V
- a:setModuleId(com.intellij.platform.workspace.jps.entities.ModuleId):V
- a:setName(java.lang.String):V
- a:setTypeId(com.intellij.platform.workspace.jps.entities.FacetEntityTypeId):V
- a:setUnderlyingFacet(com.intellij.platform.workspace.jps.entities.FacetEntity$Builder):V
f:com.intellij.platform.workspace.jps.entities.FacetEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.lang.String,com.intellij.platform.workspace.jps.entities.ModuleId,com.intellij.platform.workspace.jps.entities.FacetEntityTypeId,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.FacetEntity$Builder
- f:create(java.lang.String,com.intellij.platform.workspace.jps.entities.ModuleId,com.intellij.platform.workspace.jps.entities.FacetEntityTypeId,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.FacetEntity$Builder
- bs:create$default(com.intellij.platform.workspace.jps.entities.FacetEntity$Companion,java.lang.String,com.intellij.platform.workspace.jps.entities.ModuleId,com.intellij.platform.workspace.jps.entities.FacetEntityTypeId,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.FacetEntity$Builder
f:com.intellij.platform.workspace.jps.entities.FacetEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- com.intellij.platform.workspace.storage.impl.SoftLinkable
- moduleId:com.intellij.platform.workspace.jps.entities.ModuleId
- name:java.lang.String
- typeId:com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.FacetEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- f:getConfigurationXmlTag():java.lang.String
- getEntityInterface():java.lang.Class
- getLinks():java.util.Set
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getModuleId():com.intellij.platform.workspace.jps.entities.ModuleId
- f:getName():java.lang.String
- getRequiredParents():java.util.List
- f:getTypeId():com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- hashCode():I
- hashCodeIgnoringEntitySource():I
- index(com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- f:setConfigurationXmlTag(java.lang.String):V
- f:setModuleId(com.intellij.platform.workspace.jps.entities.ModuleId):V
- f:setName(java.lang.String):V
- f:setTypeId(com.intellij.platform.workspace.jps.entities.FacetEntityTypeId):V
- updateLink(com.intellij.platform.workspace.storage.SymbolicEntityId,com.intellij.platform.workspace.storage.SymbolicEntityId):Z
- updateLinksIndex(java.util.Set,com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.platform.workspace.jps.entities.FacetEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.FacetEntity
- <init>(com.intellij.platform.workspace.jps.entities.FacetEntityData):V
- connectionIdList():java.util.List
- getConfigurationXmlTag():java.lang.String
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity
- getModuleId():com.intellij.platform.workspace.jps.entities.ModuleId
- getName():java.lang.String
- getTypeId():com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- getUnderlyingFacet():com.intellij.platform.workspace.jps.entities.FacetEntity
f:com.intellij.platform.workspace.jps.entities.FacetEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.FacetEntity$Builder
- <init>():V
- <init>(com.intellij.platform.workspace.jps.entities.FacetEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getConfigurationXmlTag():java.lang.String
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getModule():com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- getModuleId():com.intellij.platform.workspace.jps.entities.ModuleId
- getName():java.lang.String
- getTypeId():com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- getUnderlyingFacet():com.intellij.platform.workspace.jps.entities.FacetEntity$Builder
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setConfigurationXmlTag(java.lang.String):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setModule(com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder):V
- setModuleId(com.intellij.platform.workspace.jps.entities.ModuleId):V
- setName(java.lang.String):V
- setTypeId(com.intellij.platform.workspace.jps.entities.FacetEntityTypeId):V
- setUnderlyingFacet(com.intellij.platform.workspace.jps.entities.FacetEntity$Builder):V
f:com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.FacetEntityTypeId,java.lang.String,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.FacetId
- com.intellij.platform.workspace.storage.SymbolicEntityId
- <init>(java.lang.String,com.intellij.platform.workspace.jps.entities.FacetEntityTypeId,com.intellij.platform.workspace.jps.entities.ModuleId):V
- f:component1():java.lang.String
- f:component2():com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- f:component3():com.intellij.platform.workspace.jps.entities.ModuleId
- f:copy(java.lang.String,com.intellij.platform.workspace.jps.entities.FacetEntityTypeId,com.intellij.platform.workspace.jps.entities.ModuleId):com.intellij.platform.workspace.jps.entities.FacetId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.FacetId,java.lang.String,com.intellij.platform.workspace.jps.entities.FacetEntityTypeId,com.intellij.platform.workspace.jps.entities.ModuleId,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.FacetId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- f:getParentId():com.intellij.platform.workspace.jps.entities.ModuleId
- getPresentableName():java.lang.String
- f:getType():com.intellij.platform.workspace.jps.entities.FacetEntityTypeId
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.FacetKt
- sf:getChildrenFacets(com.intellij.platform.workspace.jps.entities.FacetEntity$Builder):java.util.List
- sf:getChildrenFacets(com.intellij.platform.workspace.jps.entities.FacetEntity):java.util.List
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.FacetEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.FacetEntity
- sf:setChildrenFacets(com.intellij.platform.workspace.jps.entities.FacetEntity$Builder,java.util.List):V
f:com.intellij.platform.workspace.jps.entities.FacetsOrderEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- orderOfFacets:java.util.List
- <init>():V
- clone():com.intellij.platform.workspace.jps.entities.FacetsOrderEntityData
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.FacetsOrderEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getOrderOfFacets():java.util.List
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setOrderOfFacets(java.util.List):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
f:com.intellij.platform.workspace.jps.entities.InheritedSdkDependency
- com.intellij.platform.workspace.jps.entities.ModuleDependencyItem
- sf:INSTANCE:com.intellij.platform.workspace.jps.entities.InheritedSdkDependency
f:com.intellij.platform.workspace.jps.entities.LibraryDependency
- com.intellij.platform.workspace.jps.entities.ModuleDependencyItem
- <init>(com.intellij.platform.workspace.jps.entities.LibraryId,Z,com.intellij.platform.workspace.jps.entities.DependencyScope):V
- f:component1():com.intellij.platform.workspace.jps.entities.LibraryId
- f:component2():Z
- f:component3():com.intellij.platform.workspace.jps.entities.DependencyScope
- f:copy(com.intellij.platform.workspace.jps.entities.LibraryId,Z,com.intellij.platform.workspace.jps.entities.DependencyScope):com.intellij.platform.workspace.jps.entities.LibraryDependency
- bs:copy$default(com.intellij.platform.workspace.jps.entities.LibraryDependency,com.intellij.platform.workspace.jps.entities.LibraryId,Z,com.intellij.platform.workspace.jps.entities.DependencyScope,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.LibraryDependency
- equals(java.lang.Object):Z
- f:getExported():Z
- f:getLibrary():com.intellij.platform.workspace.jps.entities.LibraryId
- f:getScope():com.intellij.platform.workspace.jps.entities.DependencyScope
- hashCode():I
- toString():java.lang.String
com.intellij.platform.workspace.jps.entities.LibraryEntity
- com.intellij.platform.workspace.storage.WorkspaceEntityWithSymbolicId
- sf:Companion:com.intellij.platform.workspace.jps.entities.LibraryEntity$Companion
- s:create(java.lang.String,com.intellij.platform.workspace.jps.entities.LibraryTableId,java.util.List,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.LibraryEntity$Builder
- s:create(java.lang.String,com.intellij.platform.workspace.jps.entities.LibraryTableId,java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.LibraryEntity$Builder
- a:getExcludedRoots():java.util.List
- a:getName():java.lang.String
- a:getRoots():java.util.List
- getSymbolicId():com.intellij.platform.workspace.jps.entities.LibraryId
- a:getTableId():com.intellij.platform.workspace.jps.entities.LibraryTableId
- a:getTypeId():com.intellij.platform.workspace.jps.entities.LibraryTypeId
com.intellij.platform.workspace.jps.entities.LibraryEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getExcludedRoots():java.util.List
- a:getName():java.lang.String
- a:getRoots():java.util.List
- a:getTableId():com.intellij.platform.workspace.jps.entities.LibraryTableId
- a:getTypeId():com.intellij.platform.workspace.jps.entities.LibraryTypeId
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setExcludedRoots(java.util.List):V
- a:setName(java.lang.String):V
- a:setRoots(java.util.List):V
- a:setTableId(com.intellij.platform.workspace.jps.entities.LibraryTableId):V
- a:setTypeId(com.intellij.platform.workspace.jps.entities.LibraryTypeId):V
f:com.intellij.platform.workspace.jps.entities.LibraryEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.lang.String,com.intellij.platform.workspace.jps.entities.LibraryTableId,java.util.List,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.LibraryEntity$Builder
- f:create(java.lang.String,com.intellij.platform.workspace.jps.entities.LibraryTableId,java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.LibraryEntity$Builder
- bs:create$default(com.intellij.platform.workspace.jps.entities.LibraryEntity$Companion,java.lang.String,com.intellij.platform.workspace.jps.entities.LibraryTableId,java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.LibraryEntity$Builder
f:com.intellij.platform.workspace.jps.entities.LibraryEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- com.intellij.platform.workspace.storage.impl.SoftLinkable
- name:java.lang.String
- roots:java.util.List
- tableId:com.intellij.platform.workspace.jps.entities.LibraryTableId
- <init>():V
- clone():com.intellij.platform.workspace.jps.entities.LibraryEntityData
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.LibraryEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getLinks():java.util.Set
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getName():java.lang.String
- getRequiredParents():java.util.List
- f:getRoots():java.util.List
- f:getTableId():com.intellij.platform.workspace.jps.entities.LibraryTableId
- f:getTypeId():com.intellij.platform.workspace.jps.entities.LibraryTypeId
- hashCode():I
- hashCodeIgnoringEntitySource():I
- index(com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- f:setName(java.lang.String):V
- f:setRoots(java.util.List):V
- f:setTableId(com.intellij.platform.workspace.jps.entities.LibraryTableId):V
- f:setTypeId(com.intellij.platform.workspace.jps.entities.LibraryTypeId):V
- updateLink(com.intellij.platform.workspace.storage.SymbolicEntityId,com.intellij.platform.workspace.storage.SymbolicEntityId):Z
- updateLinksIndex(java.util.Set,com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.platform.workspace.jps.entities.LibraryEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.LibraryEntity
- <init>(com.intellij.platform.workspace.jps.entities.LibraryEntityData):V
- connectionIdList():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getExcludedRoots():java.util.List
- getName():java.lang.String
- getRoots():java.util.List
- getTableId():com.intellij.platform.workspace.jps.entities.LibraryTableId
- getTypeId():com.intellij.platform.workspace.jps.entities.LibraryTypeId
f:com.intellij.platform.workspace.jps.entities.LibraryEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.LibraryEntity$Builder
- <init>():V
- <init>(com.intellij.platform.workspace.jps.entities.LibraryEntityData):V
- afterModification():V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getExcludedRoots():java.util.List
- getName():java.lang.String
- getRoots():java.util.List
- getTableId():com.intellij.platform.workspace.jps.entities.LibraryTableId
- getTypeId():com.intellij.platform.workspace.jps.entities.LibraryTypeId
- f:get_excludedRoots():java.util.List
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setExcludedRoots(java.util.List):V
- setName(java.lang.String):V
- setRoots(java.util.List):V
- setTableId(com.intellij.platform.workspace.jps.entities.LibraryTableId):V
- setTypeId(com.intellij.platform.workspace.jps.entities.LibraryTypeId):V
- f:set_excludedRoots(java.util.List):V
f:com.intellij.platform.workspace.jps.entities.LibraryId
- com.intellij.platform.workspace.storage.SymbolicEntityId
- <init>(java.lang.String,com.intellij.platform.workspace.jps.entities.LibraryTableId):V
- f:component1():java.lang.String
- f:component2():com.intellij.platform.workspace.jps.entities.LibraryTableId
- f:copy(java.lang.String,com.intellij.platform.workspace.jps.entities.LibraryTableId):com.intellij.platform.workspace.jps.entities.LibraryId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.LibraryId,java.lang.String,com.intellij.platform.workspace.jps.entities.LibraryTableId,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.LibraryId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- getPresentableName():java.lang.String
- f:getTableId():com.intellij.platform.workspace.jps.entities.LibraryTableId
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.LibraryPropertiesEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.LibraryPropertiesEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getPropertiesXmlTag():java.lang.String
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setPropertiesXmlTag(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
f:com.intellij.platform.workspace.jps.entities.LibraryRoot
- java.io.Serializable
- <init>(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.LibraryRootTypeId,com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions):V
- b:<init>(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.LibraryRootTypeId,com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:component2():com.intellij.platform.workspace.jps.entities.LibraryRootTypeId
- f:component3():com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions
- f:copy(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.LibraryRootTypeId,com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions):com.intellij.platform.workspace.jps.entities.LibraryRoot
- bs:copy$default(com.intellij.platform.workspace.jps.entities.LibraryRoot,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.LibraryRootTypeId,com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.LibraryRoot
- equals(java.lang.Object):Z
- f:getInclusionOptions():com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions
- f:getType():com.intellij.platform.workspace.jps.entities.LibraryRootTypeId
- f:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- hashCode():I
- toString():java.lang.String
e:com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions
- java.lang.Enum
- sf:ARCHIVES_UNDER_ROOT:com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions
- sf:ARCHIVES_UNDER_ROOT_RECURSIVELY:com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions
- sf:ROOT_ITSELF:com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions
- s:values():com.intellij.platform.workspace.jps.entities.LibraryRoot$InclusionOptions[]
f:com.intellij.platform.workspace.jps.entities.LibraryRootTypeId
- java.io.Serializable
- sf:Companion:com.intellij.platform.workspace.jps.entities.LibraryRootTypeId$Companion
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.platform.workspace.jps.entities.LibraryRootTypeId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.LibraryRootTypeId,java.lang.String,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.LibraryRootTypeId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.LibraryRootTypeId$Companion
- f:getCOMPILED():com.intellij.platform.workspace.jps.entities.LibraryRootTypeId
- f:getSOURCES():com.intellij.platform.workspace.jps.entities.LibraryRootTypeId
a:com.intellij.platform.workspace.jps.entities.LibraryTableId
- java.io.Serializable
- a:getLevel():java.lang.String
f:com.intellij.platform.workspace.jps.entities.LibraryTableId$GlobalLibraryTableId
- com.intellij.platform.workspace.jps.entities.LibraryTableId
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.platform.workspace.jps.entities.LibraryTableId$GlobalLibraryTableId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.LibraryTableId$GlobalLibraryTableId,java.lang.String,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.LibraryTableId$GlobalLibraryTableId
- equals(java.lang.Object):Z
- getLevel():java.lang.String
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.LibraryTableId$ModuleLibraryTableId
- com.intellij.platform.workspace.jps.entities.LibraryTableId
- <init>(com.intellij.platform.workspace.jps.entities.ModuleId):V
- f:component1():com.intellij.platform.workspace.jps.entities.ModuleId
- f:copy(com.intellij.platform.workspace.jps.entities.ModuleId):com.intellij.platform.workspace.jps.entities.LibraryTableId$ModuleLibraryTableId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.LibraryTableId$ModuleLibraryTableId,com.intellij.platform.workspace.jps.entities.ModuleId,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.LibraryTableId$ModuleLibraryTableId
- equals(java.lang.Object):Z
- getLevel():java.lang.String
- f:getModuleId():com.intellij.platform.workspace.jps.entities.ModuleId
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.LibraryTableId$ProjectLibraryTableId
- com.intellij.platform.workspace.jps.entities.LibraryTableId
- sf:INSTANCE:com.intellij.platform.workspace.jps.entities.LibraryTableId$ProjectLibraryTableId
- getLevel():java.lang.String
f:com.intellij.platform.workspace.jps.entities.LibraryTypeId
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.platform.workspace.jps.entities.LibraryTypeId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.LibraryTypeId,java.lang.String,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.LibraryTypeId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.Library_extensionsKt
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.LibraryPropertiesEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.LibraryPropertiesEntity
f:com.intellij.platform.workspace.jps.entities.MetadataStorageImpl
- com.intellij.platform.workspace.storage.metadata.MetadataStorageBridge
- sf:INSTANCE:com.intellij.platform.workspace.jps.entities.MetadataStorageImpl
f:com.intellij.platform.workspace.jps.entities.ModuleCustomImlDataEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- customModuleOptions:java.util.Map
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.ModuleCustomImlDataEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- f:getCustomModuleOptions():java.util.Map
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- f:getRootManagerTagCustomData():java.lang.String
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setCustomModuleOptions(java.util.Map):V
- f:setRootManagerTagCustomData(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
f:com.intellij.platform.workspace.jps.entities.ModuleDependency
- com.intellij.platform.workspace.jps.entities.ModuleDependencyItem
- <init>(com.intellij.platform.workspace.jps.entities.ModuleId,Z,com.intellij.platform.workspace.jps.entities.DependencyScope,Z):V
- f:component1():com.intellij.platform.workspace.jps.entities.ModuleId
- f:component2():Z
- f:component3():com.intellij.platform.workspace.jps.entities.DependencyScope
- f:component4():Z
- f:copy(com.intellij.platform.workspace.jps.entities.ModuleId,Z,com.intellij.platform.workspace.jps.entities.DependencyScope,Z):com.intellij.platform.workspace.jps.entities.ModuleDependency
- bs:copy$default(com.intellij.platform.workspace.jps.entities.ModuleDependency,com.intellij.platform.workspace.jps.entities.ModuleId,Z,com.intellij.platform.workspace.jps.entities.DependencyScope,Z,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.ModuleDependency
- equals(java.lang.Object):Z
- f:getExported():Z
- f:getModule():com.intellij.platform.workspace.jps.entities.ModuleId
- f:getProductionOnTest():Z
- f:getScope():com.intellij.platform.workspace.jps.entities.DependencyScope
- hashCode():I
- toString():java.lang.String
a:com.intellij.platform.workspace.jps.entities.ModuleDependencyItem
- java.io.Serializable
com.intellij.platform.workspace.jps.entities.ModuleEntity
- com.intellij.platform.workspace.storage.WorkspaceEntityWithSymbolicId
- sf:Companion:com.intellij.platform.workspace.jps.entities.ModuleEntity$Companion
- s:create(java.lang.String,java.util.List,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- s:create(java.lang.String,java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- a:getContentRoots():java.util.List
- a:getDependencies():java.util.List
- a:getFacets():java.util.List
- a:getName():java.lang.String
- getSymbolicId():com.intellij.platform.workspace.jps.entities.ModuleId
- a:getType():com.intellij.platform.workspace.jps.entities.ModuleTypeId
com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getContentRoots():java.util.List
- a:getDependencies():java.util.List
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getFacets():java.util.List
- a:getName():java.lang.String
- a:getType():com.intellij.platform.workspace.jps.entities.ModuleTypeId
- a:setContentRoots(java.util.List):V
- a:setDependencies(java.util.List):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setFacets(java.util.List):V
- a:setName(java.lang.String):V
- a:setType(com.intellij.platform.workspace.jps.entities.ModuleTypeId):V
f:com.intellij.platform.workspace.jps.entities.ModuleEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.lang.String,java.util.List,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- f:create(java.lang.String,java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- bs:create$default(com.intellij.platform.workspace.jps.entities.ModuleEntity$Companion,java.lang.String,java.util.List,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
f:com.intellij.platform.workspace.jps.entities.ModuleEntityAndExtensions
- sf:getSourceRoots(com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder):java.util.List
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.ModuleEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ModuleEntity
- sf:setSourceRoots(com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder,java.util.List):V
f:com.intellij.platform.workspace.jps.entities.ModuleEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- com.intellij.platform.workspace.storage.impl.SoftLinkable
- dependencies:java.util.List
- name:java.lang.String
- <init>():V
- clone():com.intellij.platform.workspace.jps.entities.ModuleEntityData
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.ModuleEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- f:getDependencies():java.util.List
- getEntityInterface():java.lang.Class
- getLinks():java.util.Set
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getName():java.lang.String
- getRequiredParents():java.util.List
- f:getType():com.intellij.platform.workspace.jps.entities.ModuleTypeId
- hashCode():I
- hashCodeIgnoringEntitySource():I
- index(com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- f:setDependencies(java.util.List):V
- f:setName(java.lang.String):V
- f:setType(com.intellij.platform.workspace.jps.entities.ModuleTypeId):V
- updateLink(com.intellij.platform.workspace.storage.SymbolicEntityId,com.intellij.platform.workspace.storage.SymbolicEntityId):Z
- updateLinksIndex(java.util.Set,com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.platform.workspace.jps.entities.ModuleEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.ModuleEntity
- <init>(com.intellij.platform.workspace.jps.entities.ModuleEntityData):V
- connectionIdList():java.util.List
- getContentRoots():java.util.List
- getDependencies():java.util.List
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getFacets():java.util.List
- getName():java.lang.String
- getType():com.intellij.platform.workspace.jps.entities.ModuleTypeId
f:com.intellij.platform.workspace.jps.entities.ModuleEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.ModuleEntity$Builder
- <init>():V
- <init>(com.intellij.platform.workspace.jps.entities.ModuleEntityData):V
- afterModification():V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getContentRoots():java.util.List
- getDependencies():java.util.List
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getFacets():java.util.List
- getName():java.lang.String
- getType():com.intellij.platform.workspace.jps.entities.ModuleTypeId
- f:get_contentRoots():java.util.List
- f:get_facets():java.util.List
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setContentRoots(java.util.List):V
- setDependencies(java.util.List):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setFacets(java.util.List):V
- setName(java.lang.String):V
- setType(com.intellij.platform.workspace.jps.entities.ModuleTypeId):V
- f:set_contentRoots(java.util.List):V
- f:set_facets(java.util.List):V
f:com.intellij.platform.workspace.jps.entities.ModuleExtensions
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.ExternalSystemModuleOptionsEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ExternalSystemModuleOptionsEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.ModuleCustomImlDataEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ModuleCustomImlDataEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.ModuleGroupPathEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ModuleGroupPathEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.TestModulePropertiesEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.TestModulePropertiesEntity
f:com.intellij.platform.workspace.jps.entities.ModuleGroupPathEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- path:java.util.List
- <init>():V
- clone():com.intellij.platform.workspace.jps.entities.ModuleGroupPathEntityData
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.ModuleGroupPathEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getPath():java.util.List
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setPath(java.util.List):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
f:com.intellij.platform.workspace.jps.entities.ModuleId
- com.intellij.platform.workspace.storage.SymbolicEntityId
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.platform.workspace.jps.entities.ModuleId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.ModuleId,java.lang.String,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.ModuleId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- getPresentableName():java.lang.String
- hashCode():I
- toString():java.lang.String
com.intellij.platform.workspace.jps.entities.ModuleSettingsBase
- com.intellij.platform.workspace.storage.WorkspaceEntityWithSymbolicId
- sf:Companion:com.intellij.platform.workspace.jps.entities.ModuleSettingsBase$Companion
- s:create(java.lang.String,com.intellij.platform.workspace.jps.entities.ModuleId,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.ModuleSettingsBase$Builder
- s:create(java.lang.String,com.intellij.platform.workspace.jps.entities.ModuleId,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ModuleSettingsBase$Builder
- a:getModuleId():com.intellij.platform.workspace.jps.entities.ModuleId
- a:getName():java.lang.String
com.intellij.platform.workspace.jps.entities.ModuleSettingsBase$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getModuleId():com.intellij.platform.workspace.jps.entities.ModuleId
- a:getName():java.lang.String
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setModuleId(com.intellij.platform.workspace.jps.entities.ModuleId):V
- a:setName(java.lang.String):V
f:com.intellij.platform.workspace.jps.entities.ModuleSettingsBase$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.lang.String,com.intellij.platform.workspace.jps.entities.ModuleId,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.ModuleSettingsBase$Builder
- f:create(java.lang.String,com.intellij.platform.workspace.jps.entities.ModuleId,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ModuleSettingsBase$Builder
- bs:create$default(com.intellij.platform.workspace.jps.entities.ModuleSettingsBase$Companion,java.lang.String,com.intellij.platform.workspace.jps.entities.ModuleId,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.ModuleSettingsBase$Builder
f:com.intellij.platform.workspace.jps.entities.ModuleSourceDependency
- com.intellij.platform.workspace.jps.entities.ModuleDependencyItem
- sf:INSTANCE:com.intellij.platform.workspace.jps.entities.ModuleSourceDependency
f:com.intellij.platform.workspace.jps.entities.ModuleTypeId
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.platform.workspace.jps.entities.ModuleTypeId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.ModuleTypeId,java.lang.String,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.ModuleTypeId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.OrdersKt
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.FacetsOrderEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.FacetsOrderEntity
f:com.intellij.platform.workspace.jps.entities.RootsExtensions
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.CustomSourceRootPropertiesEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.CustomSourceRootPropertiesEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.ExcludeUrlOrderEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ExcludeUrlOrderEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.SourceRootOrderEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.SourceRootOrderEntity
f:com.intellij.platform.workspace.jps.entities.RootsKt
- sf:getContentRoot(com.intellij.platform.workspace.jps.entities.ExcludeUrlEntity):com.intellij.platform.workspace.jps.entities.ContentRootEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.ContentRootEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.ContentRootEntity
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.SourceRootEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.SourceRootEntity
f:com.intellij.platform.workspace.jps.entities.SdkDependency
- com.intellij.platform.workspace.jps.entities.ModuleDependencyItem
- <init>(com.intellij.platform.workspace.jps.entities.SdkId):V
- f:component1():com.intellij.platform.workspace.jps.entities.SdkId
- f:copy(com.intellij.platform.workspace.jps.entities.SdkId):com.intellij.platform.workspace.jps.entities.SdkDependency
- bs:copy$default(com.intellij.platform.workspace.jps.entities.SdkDependency,com.intellij.platform.workspace.jps.entities.SdkId,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.SdkDependency
- equals(java.lang.Object):Z
- f:getSdk():com.intellij.platform.workspace.jps.entities.SdkId
- hashCode():I
- toString():java.lang.String
com.intellij.platform.workspace.jps.entities.SdkEntity
- com.intellij.platform.workspace.storage.WorkspaceEntityWithSymbolicId
- sf:Companion:com.intellij.platform.workspace.jps.entities.SdkEntity$Companion
- s:create(java.lang.String,java.lang.String,java.util.List,java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.SdkEntity$Builder
- s:create(java.lang.String,java.lang.String,java.util.List,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.SdkEntity$Builder
- a:getAdditionalData():java.lang.String
- a:getHomePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getName():java.lang.String
- a:getRoots():java.util.List
- getSymbolicId():com.intellij.platform.workspace.jps.entities.SdkId
- a:getType():java.lang.String
- a:getVersion():java.lang.String
com.intellij.platform.workspace.jps.entities.SdkEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getAdditionalData():java.lang.String
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getHomePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:getName():java.lang.String
- a:getRoots():java.util.List
- a:getType():java.lang.String
- a:getVersion():java.lang.String
- a:setAdditionalData(java.lang.String):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setHomePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- a:setName(java.lang.String):V
- a:setRoots(java.util.List):V
- a:setType(java.lang.String):V
- a:setVersion(java.lang.String):V
f:com.intellij.platform.workspace.jps.entities.SdkEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.lang.String,java.lang.String,java.util.List,java.lang.String,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.SdkEntity$Builder
- f:create(java.lang.String,java.lang.String,java.util.List,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.SdkEntity$Builder
- bs:create$default(com.intellij.platform.workspace.jps.entities.SdkEntity$Companion,java.lang.String,java.lang.String,java.util.List,java.lang.String,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.SdkEntity$Builder
f:com.intellij.platform.workspace.jps.entities.SdkEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- additionalData:java.lang.String
- name:java.lang.String
- roots:java.util.List
- type:java.lang.String
- <init>():V
- clone():com.intellij.platform.workspace.jps.entities.SdkEntityData
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.SdkEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- f:getAdditionalData():java.lang.String
- getEntityInterface():java.lang.Class
- f:getHomePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getName():java.lang.String
- getRequiredParents():java.util.List
- f:getRoots():java.util.List
- f:getType():java.lang.String
- f:getVersion():java.lang.String
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setAdditionalData(java.lang.String):V
- f:setHomePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- f:setName(java.lang.String):V
- f:setRoots(java.util.List):V
- f:setType(java.lang.String):V
- f:setVersion(java.lang.String):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.platform.workspace.jps.entities.SdkEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.SdkEntity
- <init>(com.intellij.platform.workspace.jps.entities.SdkEntityData):V
- connectionIdList():java.util.List
- getAdditionalData():java.lang.String
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getHomePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getName():java.lang.String
- getRoots():java.util.List
- getType():java.lang.String
- getVersion():java.lang.String
f:com.intellij.platform.workspace.jps.entities.SdkEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.SdkEntity$Builder
- <init>():V
- <init>(com.intellij.platform.workspace.jps.entities.SdkEntityData):V
- afterModification():V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getAdditionalData():java.lang.String
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getHomePath():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- getName():java.lang.String
- getRoots():java.util.List
- getType():java.lang.String
- getVersion():java.lang.String
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setAdditionalData(java.lang.String):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setHomePath(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- setName(java.lang.String):V
- setRoots(java.util.List):V
- setType(java.lang.String):V
- setVersion(java.lang.String):V
f:com.intellij.platform.workspace.jps.entities.SdkId
- com.intellij.platform.workspace.storage.SymbolicEntityId
- <init>(java.lang.String,java.lang.String):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:copy(java.lang.String,java.lang.String):com.intellij.platform.workspace.jps.entities.SdkId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.SdkId,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.SdkId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- getPresentableName():java.lang.String
- f:getType():java.lang.String
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.SdkKt
- sf:modifyEntity(com.intellij.platform.workspace.storage.MutableEntityStorage,com.intellij.platform.workspace.jps.entities.SdkEntity,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.SdkEntity
f:com.intellij.platform.workspace.jps.entities.SdkRoot
- java.io.Serializable
- <init>(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.SdkRootTypeId):V
- f:component1():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- f:component2():com.intellij.platform.workspace.jps.entities.SdkRootTypeId
- f:copy(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.SdkRootTypeId):com.intellij.platform.workspace.jps.entities.SdkRoot
- bs:copy$default(com.intellij.platform.workspace.jps.entities.SdkRoot,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.SdkRootTypeId,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.SdkRoot
- equals(java.lang.Object):Z
- f:getType():com.intellij.platform.workspace.jps.entities.SdkRootTypeId
- f:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.SdkRootTypeId
- java.io.Serializable
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.platform.workspace.jps.entities.SdkRootTypeId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.SdkRootTypeId,java.lang.String,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.SdkRootTypeId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- hashCode():I
- toString():java.lang.String
com.intellij.platform.workspace.jps.entities.SourceRootEntity
- com.intellij.platform.workspace.storage.WorkspaceEntity
- sf:Companion:com.intellij.platform.workspace.jps.entities.SourceRootEntity$Companion
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.SourceRootTypeId,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
- s:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.SourceRootTypeId,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
- a:getContentRoot():com.intellij.platform.workspace.jps.entities.ContentRootEntity
- a:getRootTypeId():com.intellij.platform.workspace.jps.entities.SourceRootTypeId
- a:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getContentRoot():com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getRootTypeId():com.intellij.platform.workspace.jps.entities.SourceRootTypeId
- a:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- a:setContentRoot(com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder):V
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setRootTypeId(com.intellij.platform.workspace.jps.entities.SourceRootTypeId):V
- a:setUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
f:com.intellij.platform.workspace.jps.entities.SourceRootEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.SourceRootTypeId,com.intellij.platform.workspace.storage.EntitySource):com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
- f:create(com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.SourceRootTypeId,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
- bs:create$default(com.intellij.platform.workspace.jps.entities.SourceRootEntity$Companion,com.intellij.platform.workspace.storage.url.VirtualFileUrl,com.intellij.platform.workspace.jps.entities.SourceRootTypeId,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
f:com.intellij.platform.workspace.jps.entities.SourceRootEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- rootTypeId:com.intellij.platform.workspace.jps.entities.SourceRootTypeId
- url:com.intellij.platform.workspace.storage.url.VirtualFileUrl
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.SourceRootEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- getRequiredParents():java.util.List
- f:getRootTypeId():com.intellij.platform.workspace.jps.entities.SourceRootTypeId
- f:getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setRootTypeId(com.intellij.platform.workspace.jps.entities.SourceRootTypeId):V
- f:setUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
c:com.intellij.platform.workspace.jps.entities.SourceRootEntityImpl
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.SourceRootEntity
- <init>(com.intellij.platform.workspace.jps.entities.SourceRootEntityData):V
- connectionIdList():java.util.List
- getContentRoot():com.intellij.platform.workspace.jps.entities.ContentRootEntity
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getRootTypeId():com.intellij.platform.workspace.jps.entities.SourceRootTypeId
- getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
f:com.intellij.platform.workspace.jps.entities.SourceRootEntityImpl$Builder
- com.intellij.platform.workspace.storage.impl.ModifiableWorkspaceEntityBase
- com.intellij.platform.workspace.jps.entities.SourceRootEntity$Builder
- <init>():V
- <init>(com.intellij.platform.workspace.jps.entities.SourceRootEntityData):V
- applyToBuilder(com.intellij.platform.workspace.storage.MutableEntityStorage):V
- connectionIdList():java.util.List
- getContentRoot():com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder
- getEntityClass():java.lang.Class
- getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- getRootTypeId():com.intellij.platform.workspace.jps.entities.SourceRootTypeId
- getUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
- relabel(com.intellij.platform.workspace.storage.WorkspaceEntity,java.util.Set):V
- setContentRoot(com.intellij.platform.workspace.jps.entities.ContentRootEntity$Builder):V
- setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- setRootTypeId(com.intellij.platform.workspace.jps.entities.SourceRootTypeId):V
- setUrl(com.intellij.platform.workspace.storage.url.VirtualFileUrl):V
f:com.intellij.platform.workspace.jps.entities.SourceRootOrderEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- orderOfSourceRoots:java.util.List
- <init>():V
- clone():com.intellij.platform.workspace.jps.entities.SourceRootOrderEntityData
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.SourceRootOrderEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getOrderOfSourceRoots():java.util.List
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- f:setOrderOfSourceRoots(java.util.List):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
f:com.intellij.platform.workspace.jps.entities.SourceRootTypeId
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.platform.workspace.jps.entities.SourceRootTypeId
- bs:copy$default(com.intellij.platform.workspace.jps.entities.SourceRootTypeId,java.lang.String,I,java.lang.Object):com.intellij.platform.workspace.jps.entities.SourceRootTypeId
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.workspace.jps.entities.TestModulePropertiesEntityData
- com.intellij.platform.workspace.storage.impl.WorkspaceEntityData
- com.intellij.platform.workspace.storage.impl.SoftLinkable
- productionModuleId:com.intellij.platform.workspace.jps.entities.ModuleId
- <init>():V
- createDetachedEntity(java.util.List):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- createEntity(com.intellij.platform.workspace.storage.instrumentation.EntityStorageInstrumentation):com.intellij.platform.workspace.jps.entities.TestModulePropertiesEntity
- equals(java.lang.Object):Z
- equalsIgnoringEntitySource(java.lang.Object):Z
- getEntityInterface():java.lang.Class
- getLinks():java.util.Set
- getMetadata():com.intellij.platform.workspace.storage.metadata.model.EntityMetadata
- f:getProductionModuleId():com.intellij.platform.workspace.jps.entities.ModuleId
- getRequiredParents():java.util.List
- hashCode():I
- hashCodeIgnoringEntitySource():I
- index(com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- f:setProductionModuleId(com.intellij.platform.workspace.jps.entities.ModuleId):V
- updateLink(com.intellij.platform.workspace.storage.SymbolicEntityId,com.intellij.platform.workspace.storage.SymbolicEntityId):Z
- updateLinksIndex(java.util.Set,com.intellij.platform.workspace.storage.impl.indices.WorkspaceMutableIndex):V
- wrapAsModifiable(com.intellij.platform.workspace.storage.MutableEntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
com.intellij.platform.workspace.jps.serialization.SerializationContext
- a:getCustomFacetRelatedEntitySerializers():java.util.List
- a:getCustomModuleComponentSerializers():java.util.List
- a:getCustomModuleRootsSerializers():java.util.List
- a:getFileContentReader():com.intellij.platform.workspace.jps.serialization.impl.JpsFileContentReader
- a:getFileInDirectorySourceNames():com.intellij.platform.workspace.jps.serialization.impl.FileInDirectorySourceNames
- a:getVirtualFileUrlManager():com.intellij.platform.workspace.storage.url.VirtualFileUrlManager
- a:isExternalStorageEnabled():Z
- a:isJavaPluginPresent():Z
- a:isOrphanageEnabled():Z
