@:com.intellij.openapi.components.State
- java.lang.annotation.Annotation
- *a:getStateRequiresEdt():Z
com.intellij.openapi.module.ModifiableModuleModel
- *:newNonPersistentModule(java.lang.String,java.lang.String):com.intellij.openapi.module.Module
*a:com.intellij.openapi.module.ModuleGrouper
- *sf:Companion:com.intellij.openapi.module.ModuleGrouper$Companion
- a:getCompactGroupNodes():Z
- a:getGroupPath(com.intellij.openapi.module.Module):java.util.List
- a:getGroupPath(com.intellij.openapi.module.ModuleDescription):java.util.List
- a:getGroupPathByModuleName(java.lang.String):java.util.List
- a:getModuleAsGroupPath(com.intellij.openapi.module.Module):java.util.List
- a:getShortenedName(com.intellij.openapi.module.Module):java.lang.String
- a:getShortenedName(com.intellij.openapi.module.Module,java.lang.String):java.lang.String
- a:getShortenedNameByFullModuleName(java.lang.String):java.lang.String
- a:getShortenedNameByFullModuleName(java.lang.String,java.lang.String):java.lang.String
- sf:instanceFor(com.intellij.openapi.project.Project):com.intellij.openapi.module.ModuleGrouper
- sf:instanceFor(com.intellij.openapi.project.Project,com.intellij.openapi.module.ModifiableModuleModel):com.intellij.openapi.module.ModuleGrouper
*f:com.intellij.openapi.module.ModuleGrouper$Companion
- f:instanceFor(com.intellij.openapi.project.Project):com.intellij.openapi.module.ModuleGrouper
- f:instanceFor(com.intellij.openapi.project.Project,com.intellij.openapi.module.ModifiableModuleModel):com.intellij.openapi.module.ModuleGrouper
- bs:instanceFor$default(com.intellij.openapi.module.ModuleGrouper$Companion,com.intellij.openapi.project.Project,com.intellij.openapi.module.ModifiableModuleModel,I,java.lang.Object):com.intellij.openapi.module.ModuleGrouper
Fa:com.intellij.openapi.module.ModuleManager
- com.intellij.openapi.util.SimpleModificationTracker
- *a:getAllModuleDescriptions():java.util.Collection
- *a:getUnloadedModuleDescription(java.lang.String):com.intellij.openapi.module.UnloadedModuleDescription
- *a:getUnloadedModuleDescriptions():java.util.Collection
- *:newNonPersistentModule(java.lang.String,java.lang.String):com.intellij.openapi.module.Module
- *:removeUnloadedModules(java.util.Collection):V
- *a:setUnloadedModules(java.util.List,kotlin.coroutines.Continuation):java.lang.Object
*:com.intellij.openapi.project.ProjectCloseListener
- *sf:Companion:com.intellij.openapi.project.ProjectCloseListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- projectClosed(com.intellij.openapi.project.Project):V
- projectClosing(com.intellij.openapi.project.Project):V
- projectClosingBeforeSave(com.intellij.openapi.project.Project):V
*f:com.intellij.openapi.project.ProjectCloseListener$Companion
*:com.intellij.openapi.project.ProjectTypesProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:inferProjectTypes(com.intellij.openapi.project.Project):java.util.Collection
Fa:com.intellij.openapi.projectRoots.ProjectJdkTable
- *s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.projectRoots.ProjectJdkTable
*:com.intellij.openapi.roots.AdditionalLibraryRootsListener
- sf:TOPIC:com.intellij.util.messages.Topic
- s:fireAdditionalLibraryChanged(com.intellij.openapi.project.Project,java.lang.String,java.util.Collection,java.util.Collection,java.lang.String):V
- a:libraryRootsChanged(java.lang.String,java.util.Collection,java.util.Collection,java.lang.String):V
*:com.intellij.openapi.roots.ExternalProjectSystemRegistry
- sf:EXTERNAL_SYSTEM_ID_KEY:java.lang.String
- a:getExternalSource(com.intellij.openapi.module.Module):com.intellij.openapi.roots.ProjectModelExternalSource
- s:getInstance():com.intellij.openapi.roots.ExternalProjectSystemRegistry
- a:getSourceById(java.lang.String):com.intellij.openapi.roots.ProjectModelExternalSource
com.intellij.openapi.roots.ProjectFileIndex
- com.intellij.openapi.roots.FileIndex
- *a:findContainingLibraries(com.intellij.openapi.vfs.VirtualFile):java.util.Collection
*:com.intellij.openapi.roots.ProjectModelElement
- *a:getExternalSource():com.intellij.openapi.roots.ProjectModelExternalSource
*:com.intellij.openapi.roots.ProjectModelExternalSource
- a:getDisplayName():java.lang.String
- a:getId():java.lang.String
*:com.intellij.openapi.roots.impl.FilePropertyPusher
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:acceptsDirectory(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
- acceptsFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
- afterRootsChanged(com.intellij.openapi.project.Project):V
- a:getDefaultValue():java.lang.Object
- getFileDataKey():com.intellij.openapi.util.Key
- getFilePropertyKey():com.intellij.psi.FilePropertyKey
- a:getImmediateValue(com.intellij.openapi.module.Module):java.lang.Object
- a:getImmediateValue(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- initExtra(com.intellij.openapi.project.Project):V
- a:persistAttribute(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.Object):V
- a:pushDirectoriesOnly():Z
