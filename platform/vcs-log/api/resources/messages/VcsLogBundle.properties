# actions
vcs.log.action.align.labels=References on the Left
vcs.log.action.description.align.labels=Show references on the left of commit message
vcs.log.action.description.show.all.branches=Switch between showing only current branch and all branches
vcs.log.action.description.show.all.changes.from.parent=Display changes to each merged commit separately
vcs.log.action.description.show.compact.references.view=Show Only First Reference for a Commit in the Table
vcs.log.action.description.show.details=Display details panel
vcs.log.action.description.show.diff.preview=Show Diff Preview Panel
vcs.log.action.description.show.long.edges=Show long branch edges even if commits are invisible in the current view.
vcs.log.action.description.show.only.affected.changes=Only show changes that affect files selected in the "Paths" menu
vcs.log.action.description.show.tag.names=Show Tag Names in the Table
vcs.log.action.description.open.new.tab.with.log=Open new tab with {0} Log
vcs.log.action.show.all.branches=Show All Branches
vcs.log.action.show.diff.preview=Show Diff Preview
action.Vcs.Log.MoveDiffPreviewToBottom.text=Bottom
action.Vcs.Log.MoveDiffPreviewToBottom.description=Locate Diff Preview in the bottom
action.Vcs.Log.MoveDiffPreviewToRight.text=Right
action.Vcs.Log.MoveDiffPreviewToRight.description=Locate Diff Preview in the right
vcs.log.action.show.all.changes.from.parent=Show Changes to Parents
action.vcs.log.show.separator=Show
vcs.log.action.show.compact.references.view=Compact References View
vcs.log.action.show.details=Show Details
vcs.log.action.show.long.edges=Long Edges
vcs.log.action.show.only.affected.changes=Show Only Affected Changes
vcs.log.action.show.root.names=Root Names
vcs.log.action.show.tag.names=Tag Names
vcs.log.action.open.new.tab.with.log=Open New {0} Log Tab
action.process.expanding.linear.branches=Expanding linear branches\u2026
action.process.expanding.merges=Expanding merges\u2026
action.description.expand.merges=Expand merges
action.title.expand.merges=Expand Merges
action.vcs.log.branches.separator=Branches
action.description.expand.linear.branches=Expand linear branches
action.title.expand.linear.branches=Expand Linear Branches
action.process.collapsing.linear.branches=Collapsing linear branches\u2026
action.process.collapsing.merges=Collapsing merges\u2026
action.description.collapse.merges=Collapse merges
action.title.collapse.merges=Collapse Merges
action.description.collapse.linear.branches=Collapse linear branches
action.title.collapse.linear.branches=Collapse Linear Branches
action.title.match.case=Match Case
action.title.match.case.only.supported=Match Case ({0} Only)
action.go.to.navigate.to=Navigate to {0}
action.go.to.select.child.to.navigate=Select Child to Navigate
action.go.to.select.parent.to.navigate=Select Parent to Navigate
action.go.to.select.hash.subject.author.date.time={0} {1} by {2} on {3} at {4}
action.name.refresh.log=Refresh
action.description.refresh.log=Check for new commits and refresh Log if necessary
action.description.was.paused=Indexing {0} was paused. Resume.
action.title.resume.indexing=Resume {0} Log Indexing
action.description.is.scheduled=Indexing {0} is scheduled. Pause.
action.title.pause.indexing=Pause {0} Log Indexing
action.description.select.columns.to.see=Select columns to see in the table
action.title.select.columns.to.see=Columns
action.FocusTextFilterAction.text=Focus Text Filter
action.FocusTextFilterAction.description=Focus text filter or move focus back to the commits list
action.IntelliSortChooserPopupAction.text=IntelliSort
action.IntelliSortChooserPopupAction.description=Change IntelliSort type
action.ShowCommitTooltipAction.text=Show Commit Tooltip
action.ShowCommitTooltipAction.description=Show tooltip for currently selected commit in the Log
action.presentation.CompareRevisionsFromFileHistoryActionProvider.text.compare=Compare
action.presentation.CompareRevisionsFromFileHistoryActionProvider.text.show.diff=Show Diff
action.presentation.CompareRevisionsFromFileHistoryActionProvider.description.compare=Compare selected versions
action.presentation.CompareRevisionsFromFileHistoryActionProvider.description.show.diff=Show diff with previous version
vcs.log.action.intellisort.title=IntelliSort: {0}
vcs.log.action.intellisort.text=IntelliSort
vcs.log.action.intellisort.description=Turn IntelliSort On/Off
vcs.log.action.turn.intellisort.on=Turn IntelliSort on: {0}.
vcs.log.action.turn.intellisort.off=Turn IntelliSort off: {0}.
action.Vcs.Log.GoToRef.text=Go To Hash/Branch/Tag
action.Vcs.Log.GoToRef.description=Specify hash or name of a branch or a tag to navigate to the commit it points
action.Vcs.Log.GoToParent.text=Go to Parent Commit
action.Vcs.Log.GoToParent.description=Navigate to the parent row in the commit graph
action.Vcs.Log.GoToChild.text=Go to Child Commit
action.Vcs.Log.GoToChild.description=Navigate to the child row in the commit graph
action.Vcs.Show.Log.text=Show Vcs Log
action.Vcs.Show.Log.text.template=Show {0} Log
action.Vcs.Log.ShowTooltip.text=Show Commit Tooltip
action.Vcs.Log.ShowTooltip.description=Show tooltip for currently selected commit in the Log
action.Vcs.Log.EnableFilterByRegexAction.text=Regex
action.Vcs.Log.MatchCaseAction.text=Match Case
action.Vcs.Log.OpenRepositoryVersion.text=Show File at Revision
action.Vcs.Log.OpenRepositoryVersion.description=Open editor with selected revision of the file
action.Vcs.Log.AnnotateRevisionAction.text=Annotate
action.Vcs.Log.AnnotateRevisionAction.description=Annotate selected revision
action.Vcs.Log.ShowAllAffected.text=Show All Affected Files
action.Vcs.Log.ShowAllAffected.description=Show all changes made in the chosen revision
action.Vcs.Log.CompareRevisions.text=Compare Versions
action.Vcs.Log.CompareRevisions.description=Compare selected versions
action.Vcs.Log.ResumeIndexing.text=Resume Indexing
action.Vcs.Log.ResumeIndexing.description=Indexing was paused as it took longer than expected. Resume.
group.Vcs.Log.PresentationSettings.text=View Options
group.Vcs.Log.PresentationSettings.description=Configure presentation of the Log
group.Vcs.Log.ChangesBrowser.PresentationSettings.text=View Options
group.Vcs.Log.TextFilterSettings.text=Text Filter Settings
group.Vcs.Log.TextFilterSettings.description=Select text filter options
group.Vcs.Log.LayoutConfiguration.text=Configure Layout
group.Vcs.Log.LayoutConfiguration.separator.text=Layout
group.Vcs.Log.LayoutConfiguration.description=Configure window layout
group.Vcs.FileHistory.PresentationSettings.text=View Options
group.Vcs.FileHistory.PresentationSettings.description=Configure presentation of the File History
group.Log.KeymapGroup.text=Log
group.Vcs.Log.Diff.Preview.Location.text=Diff Preview Location
group.Vcs.Log.Internal.text=Vcs Log

# customizable groups
vcs.log.right.corner.toolbar=VCS Log Toolbar
vcs.log.changes.browser.toolbar=VCS Log Changes Browser Toolbar
file.history.toolbar=File History Toolbar

dialog.title.paths.affected.by.commit=Paths Affected by Commit {0}

# tooltips
vcs.log.click.to.collapse.paths.column.tooltip=Click to collapse
vcs.log.click.to.expand.paths.column.tooltip=Click to expand
vcs.log.graph.arrow.tooltip.jump.to.subject.author.date.time=Jump to {0} by {1} on {2} at {3}
vcs.log.graph.arrow.tooltip.jump.to.hash=Jump to commit {0}
vcs.log.graph.arrow.tooltip.jump.to.hash.in.root=Jump to commit {0} in {1}
vcs.log.references.more.tooltip=... {0} more in details pane

# log in editor
filetype.vcs.log.description=Vcs Log

# replacement for specific vcs name
vcs=Vcs

# empty text
vcs.log.is.loading=Loading Vcs Log\u2026
vcs.log.loading.status=Loading commits\u2026
vcs.log.error.loading.status=Error loading commits
vcs.log.no.commits.status=No changes committed.
vcs.log.commit.status.action=Commit local changes
vcs.log.error.filtering.status=Error filtering commits
vcs.log.no.commits.matching.status=No commits matching filters
vcs.log.reset.filters.status.action=Reset filters
vcs.log.refresh.status.action=Refresh
vcs.log.default.status=Changes log
vcs.log.duplicated.tab.id.error=VCS Log tab can not be opened twice

# file history
file.history.error.status=Error calculating file history
file.history.empty.status=File history
file.history.action.could.not.load.selected.commits.message=Could not load selected commits: {0}
file.history.diff.preview.editor.tab.name=History: {0}

# jump to commit
vcs.log.go.to.hash.popup.label=Enter hash or branch/tag name:
vcs.log.string.is.not.a.hash=''{0}'' does not look like a commit hash
vcs.log.commit.not.found={0} not found
vcs.log.commit.does.not.match={0} doesn''t match the filters
vcs.log.commit.prefix=Commit ''{0}''
vcs.log.commit.or.reference.prefix=Commit or reference ''{0}''
vcs.log.commit.does.not.match.view.and.reset.link=View and Reset Filters
vcs.log.commit.does.not.match.view.in.tab.link=View in New Tab
vcs.log.show.commit.in.log.process=Searching for Revision {0}
file.history.commit.not.found.in.branch={0} does not exist in history for {1} in current branch
file.history.commit.not.found={0} does not exist in history for {1}
file.history.commit.not.found.view.and.show.all.branches.link=View and Show All Branches
file.history.commit.not.found.view.in.log.link=View in Log

# indexing progress
vcs.log.status.bar.indexing.cancel.tooltip=Cancel indexing. Indexing could be restarted manually from {0} Log toolbar.
vcs.log.status.bar.indexing.cancel.cancelling=Cancelling
vcs.log.status.bar.indexing={0} Log Indexing\u2026

# processes
vcs.log.creating.process=Loading commits\u2026
vcs.log.initial.loading.process=Loading history\u2026
vcs.log.refreshing.process=Refreshing history\u2026
vcs.log.closing.process=Closing VCS log
vcs.log.loading.selected.details.process=Loading selected details
vcs.log.applying.filters.process=Applying Filters\u2026

# tab name
vcs.log.tab.name=Log
vcs.log.diff.preview.editor.empty.tab.name=Repository Diff
vcs.log.diff.preview.editor.tab.name=Repository Diff: {0}
vcs.log.editor.name=Vcs Log Editor

# filters
vcs.log.filter.all=All
vcs.log.filter.recent=Recent
vcs.log.filter.structure.presentation.with.prefix=for {0}
vcs.log.filter.root.presentation.with.prefix=in {0}
vcs.log.filter.branch.presentation.with.prefix=on {0}
vcs.log.filter.date.presentation.with.prefix.made.between=made between {0} and {1}
vcs.log.filter.date.presentation.with.prefix.made.after=made since {0}
vcs.log.filter.date.presentation.with.prefix.made.before=made until {0}
vcs.log.filter.date.display.name.between=between {0} and {1}
vcs.log.filter.date.display.name.after=since {0}
vcs.log.filter.date.display.name.before=until {0}
vcs.log.filter.user.presentation.with.prefix=by {0}
vcs.log.filter.text.presentation.with.prefix=containing {0}
vcs.log.filter.text.hash.tooltip=Text or Hash Filter
vcs.log.filter.popup.no.roots=No roots
vcs.log.filter.popup.no.folders=No paths
vcs.log.filter.popup.no.items=No items
vcs.log.filter.popup.paths=Paths
vcs.log.date.filter.label=Date
vcs.log.branch.filter.label=Branch
vcs.log.branch.filter.favorites=Favorites
vcs.log.user.filter.label=User
vcs.log.user.filter.me=me
vcs.log.date.filter.since=Since {0}
vcs.log.date.filter.until=Until {0}
vcs.log.date.filter.action.last.day=Last 24 hours
vcs.log.date.filter.action.last.week=Last 7 days
vcs.log.date.filter.select.period.dialog.title=Select Period
vcs.log.filter.action.select=Select\u2026
vcs.log.select.folder.dialog.title=Select Paths to Filter by
vcs.log.filters.structure.label=Selected: {0}
vcs.log.filters.structure.max.selected.error.message=You have added {0} elements. No more is allowed.
vcs.log.filter.roots=Roots
vcs.log.filter.tooltip.click.to.see.only={0}+Click to only see "{1}"
vcs.log.filter.tooltip.no.roots.selected=No Roots Selected
vcs.log.filter.tooltip.roots=Roots:
vcs.log.filter.tooltip.folders=Paths:
vcs.log.filter.popup.advertisement.text=Select one or more values separated with {0}
vcs.log.filter.popup.advertisement.text.new.lines=new lines
vcs.log.filter.popup.advertisement.text.or.suffix=or {0}
vcs.log.filter.popup.advertisement.with.key.text=Select one or more values separated with {0}, use {1} to finish
vcs.log.filter.select.folders=Select in Tree\u2026
vcs.log.filter.edit.folders=Select\u2026
vcs.log.text.filter.action.text=Filter by Text or Hash
vcs.log.branch.filter.action.text=Filter by Branch
vcs.log.user.filter.action.text=Filter by User
vcs.log.date.filter.action.text=Filter by Date
vcs.log.path.filter.action.text=Filter by Paths

# commit details
vcs.log.details.in.branches.loading=In branches: loading\u2026
vcs.log.details.in.branches.empty=Not in any branch
vcs.log.details.in.branches.hide=Hide
vcs.log.details.in.branches.show.all=Show all
vcs.log.details.in.branches=In {0,choice,1#{0} branch|2# {0} branches}:
vcs.log.details.committer.info.user.date.time=committed by {0} on {1} at {2}
vcs.log.details.committer.info.date.time=committed on {0} at {1}
vcs.log.details.author.on.date.at.time={0} on {1} at {2}
vcs.log.details.committer.info.user=committed by {0}
vcs.log.details.showing.selected.commits=(showing {0} of {1} selected commits)
vcs.log.details.references.more.label=... {0} more
loading.commit.changes=Loading Commit Changes
vcs.log.commit.details.status=Commit details

# changes browser
vcs.log.changes.select.commits.to.view.changes.status=Select commit to view changes
vcs.log.changes.no.merge.conflicts.status=No merged conflicts.
vcs.log.changes.show.changes.to.parents.status.action=Show changes to parents
vcs.log.changes.no.changes.that.affect.selected.paths.status=No changes that affect selected paths.
vcs.log.changes.show.all.paths.status.action=Show changes for all paths
vcs.log.changes.details.no.commits.selected.status=No commits selected
vcs.log.changes.too.many.status={0,choice,1#This commit|2#One of the selected commits} has {1} changes
vcs.log.changes.too.many.show.anyway.status.action=Show anyway
vcs.log.changes.no.merge.conflicts.node=No merged conflicts
vcs.log.changes.changes.to.parent.node=Changes to {0}

# highlighters
vcs.log.action.highlight.current.branch=Current Branch
vcs.log.action.highlight.indexed.commits=Indexed Commits
vcs.log.action.highlight.merge.commits=Merge Commits
vcs.log.action.highlight.my.commits=My Commits

# messages
vcs.log.fatal.error.message=Could not invalidate caches at {0}.\nDelete caches directory manually and restart {1}.
vcs.log.is.not.available=VCS Log is not available

# caches invalidator
vcs.log.clear.caches.checkbox.description=Clear VCS Log caches and indexes
vcs.log.invalidate.caches.text=Invalidate {0} Log Caches and Indexes
vcs.log.invalidate.caches.progress=Invalidating {0} Log caches and indexes

# index diagnostics
vcs.log.index.diagnostic.action.title=Check VCS Log Index Data for Old Commits
vcs.log.index.diagnostic.selected.action.title=Check VCS Log Index Data for Selected Commits
vcs.log.index.diagnostic.selected.non.indexed.warning.message=The selected commits are not indexed
vcs.log.index.diagnostic.progress.title=Running VCS Log index diagnostics
vcs.log.index.diagnostic.success.message=VCS Log index data for {0} checked {0,choice,1#commit|2#commits} is correct
vcs.log.index.diagnostic.report.title=VCS Log index diagnostic report {0}
vcs.log.index.diagnostic.error.for.commit=Diff for commit {0}\n{1}
vcs.log.index.diagnostic.error.message=Expected {0}: {1}, actual {0}: {2}
vcs.log.index.diagnostic.error.attribute.name.author.time=author date
vcs.log.index.diagnostic.error.attribute.name.author=author
vcs.log.index.diagnostic.error.attribute.name.committer.time=commit date
vcs.log.index.diagnostic.error.attribute.name.committer=committer
vcs.log.index.diagnostic.error.attribute.name.message=message
vcs.log.index.diagnostic.error.attribute.name.parents=parents
vcs.log.index.diagnostic.error.filter=Filtering by {0} does not return {1}

# columns
vcs.log.column.subject=Subject
vcs.log.column.author=Author
vcs.log.column.date=Date
vcs.log.column.hash=Hash

# graph
graph.sort.linear=Linear
graph.sort.linear.description=In case of merge show incoming commits on top of main branch commits as if they were rebased
graph.sort.standard=Standard
graph.sort.standard.description=In case of merge show incoming commits first (directly below merge commit)
graph.sort.off=Off
graph.sort.off.description=Sort commits topologically and by date

# accessibility
vcs.log.table.accessible.name={0} log
vcs.log.changes.accessible.name=Commit changes browser
vcs.log.text.filter.accessible.name={0} log text or hash filter
vcs.log.filter.accessible.name={0}: {1}

# exceptions
vcs.log.failed.loading.details=Cannot load details for commit {0} in {1}
