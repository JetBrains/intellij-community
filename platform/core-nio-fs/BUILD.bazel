load("@rules_java//java:defs.bzl", "java_library")

java_library(
  name = "core-nio-fs",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.java"]),
  add_exports = ["java.base/sun.nio.fs"],
  deps = ["@lib//:jetbrains-annotations"]
)

### skip generation section `build intellij.platform.core.nio.fs`

### auto-generated section `build intellij.platform.core.nio.fs.benchmarks` start
load("@rules_java//java:defs.bzl", "java_library")
load("@rules_jvm//:jvm.bzl", "jvm_test")

jvm_test(
  name = "core-nio-fs-benchmarks_test",
  srcs = glob(["benchmarks/**/*.kt", "benchmarks/**/*.java"], allow_empty = True),
  deps = [
    "//platform/core-nio-fs",
    "@lib//:jmh-core",
    "@lib//:jmh-generator-annprocess",
    "@lib//:mockito",
  ]
)
### auto-generated section `build intellij.platform.core.nio.fs.benchmarks` end

### auto-generated section `build intellij.platform.core.nio.fs.tests` start
load("@rules_java//java:defs.bzl", "java_library")
load("@rules_jvm//:jvm.bzl", "jvm_test")

jvm_test(
  name = "core-nio-fs-tests_test",
  srcs = glob(["test/**/*.kt", "test/**/*.java"], allow_empty = True),
  deps = [
    "//platform/core-nio-fs",
    "//platform/util",
    "@lib//:io-mockk",
    "@lib//:io-mockk-jvm",
    "@lib//:junit5",
    "@lib//:kotlin-reflect",
    "@lib//:kotlin-stdlib",
    "@lib//:kotlin-test-assertions-core-jvm",
    "@lib//:mockito",
  ]
)
### auto-generated section `build intellij.platform.core.nio.fs.tests` end