### auto-generated section `build intellij.platform.core.nio.fs` start
load("@rules_jvm//:jvm.bzl", "jvm_library", "jvm_resources")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_javac_options")

kt_javac_options(
  name = "custom-javac-options",
  x_ep_disable_all_checks = True,
  warn = "off",
  add_exports = ["java.base/sun.nio.fs=ALL-UNNAMED"]
)

jvm_resources(
  name = "core-nio-fs_resources",
  files = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "core-nio-fs",
  module_name = "intellij.platform.core.nio.fs",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True),
  javac_opts = ":custom-javac-options",
  deps = ["@lib//:jetbrains-annotations"],
  runtime_deps = [":core-nio-fs_resources"]
)
### auto-generated section `build intellij.platform.core.nio.fs` end

### auto-generated section `build intellij.platform.core.nio.fs.tests` start
load("@community//build:tests-options.bzl", "jps_test")
load("@rules_java//java:defs.bzl", "java_library")
load("@rules_jvm//:jvm.bzl", "jvm_library", "jvm_test")

jvm_library(
  name = "core-nio-fs-tests_test_lib",
  visibility = ["//visibility:public"],
  srcs = glob(["test/**/*.kt", "test/**/*.java"], allow_empty = True),
  deps = [
    "//platform/core-nio-fs",
    "//platform/util",
    "@lib//:io-mockk",
    "@lib//:io-mockk-jvm",
    "@lib//:junit5",
    "@lib//:kotlin-reflect",
    "@lib//:kotlin-stdlib",
    "@lib//:kotlin-test-assertions-core-jvm",
    "@lib//:mockito",
  ]
)

jps_test(
  name = "core-nio-fs-tests_test",
  runtime_deps = [":core-nio-fs-tests_test_lib"]
)
### auto-generated section `build intellij.platform.core.nio.fs.tests` end