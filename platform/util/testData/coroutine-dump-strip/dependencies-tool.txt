- JobImpl{Active}@767a1d5f
  - StandaloneCoroutine{Active}@a85c930, state: SUSPENDED, name: 'com.intellij.dependencytoolwindow.DependencyToolWindowFactory' [com.intellij.util.concurrency.AppScheduledExecutorService$BackendThreadPoolExecutor@3b54fe36[Running, pool size = 16, active threads = 9, queued tasks = 0, completed tasks = 187122]]
#    at kotlinx.coroutines.channels.AbstractChannel.receiveCatching-JP2dKIU(AbstractChannel.kt:633)
#    at kotlinx.coroutines.flow.FlowKt__ChannelsKt.emitAllImpl$FlowKt__ChannelsKt(Channels.kt:51)
#    at kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.invokeSuspend(ChannelFlow.kt:123)
#    at kotlinx.coroutines.flow.FlowKt__ReduceKt.first(Reduce.kt:183)
    at com.intellij.dependencytoolwindow.DependenciesToolWindowTabProvider$Companion.awaitFirstAvailable$intellij_platform_dependenciesToolwindow(DependenciesToolWindowTabProvider.kt:20)
    at com.intellij.dependencytoolwindow.DependencyToolWindowFactory$runActivity$2.invokeSuspend(DependencyToolWindowFactory.kt:42)
    - ProducerCoroutine{Active}@470e8f2c, state: SUSPENDED, name: 'com.intellij.dependencytoolwindow.DependencyToolWindowFactory' [com.intellij.util.concurrency.AppScheduledExecutorService$BackendThreadPoolExecutor@3b54fe36[Running, pool size = 16, active threads = 9, queued tasks = 0, completed tasks = 187122]]
#      at kotlinx.coroutines.channels.AbstractChannel.receiveCatching-JP2dKIU(AbstractChannel.kt:633)
#      at kotlinx.coroutines.flow.FlowKt__ChannelsKt.emitAllImpl$FlowKt__ChannelsKt(Channels.kt:51)
#      at kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.invokeSuspend(ChannelFlow.kt:123)
      at kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.invokeSuspend(Merge.kt:27)
#      at kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.invokeSuspend(ChannelFlow.kt:60)
      - ProducerCoroutine{Active}@15ea2815, state: SUSPENDED, name: 'com.intellij.dependencytoolwindow.DependencyToolWindowFactory' [com.intellij.util.concurrency.AppScheduledExecutorService$BackendThreadPoolExecutor@3b54fe36[Running, pool size = 16, active threads = 9, queued tasks = 0, completed tasks = 187122]]
#        at kotlinx.coroutines.channels.ProduceKt.awaitClose(Produce.kt:153)
        at com.intellij.dependencytoolwindow.CoroutineUtilsKt$extensionsFlow$1.invokeSuspend(CoroutineUtils.kt:34)
#        at kotlinx.coroutines.flow.CallbackFlowBuilder.collectTo(Builders.kt:336)
#        at kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.invokeSuspend(ChannelFlow.kt:60)