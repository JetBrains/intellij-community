- SupervisorJobImpl{Active}@739e49f8
  - StandaloneCoroutine{Active}@187a6608, state: SUSPENDED [Dispatchers.Default]
#    at kotlinx.coroutines.channels.AbstractChannel.receiveCatching-JP2dKIU(AbstractChannel.kt:633)
    at kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2.invokeSuspend(Combine.kt:57)
    at kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.invokeSuspend(Share.kt:219)
    - StandaloneCoroutine{Active}@43e1fd79, state: SUSPENDED [Dispatchers.Default]
#      at kotlinx.coroutines.channels.AbstractChannel.receiveCatching-JP2dKIU(AbstractChannel.kt:633)
#      at kotlinx.coroutines.flow.FlowKt__ChannelsKt.emitAllImpl$FlowKt__ChannelsKt(Channels.kt:51)
#      at kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.invokeSuspend(ChannelFlow.kt:123)
      at kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.invokeSuspend(Combine.kt:34)
      - ProducerCoroutine{Active}@4a269ed6, state: SUSPENDED [Dispatchers.Default]
#        at kotlinx.coroutines.channels.ProduceKt.awaitClose(Produce.kt:153)
        at git4idea.remote.hosting.GitAsyncExtensionsKt$gitRemotesFlow$1.invokeSuspend(gitAsyncExtensions.kt:28)
#        at kotlinx.coroutines.flow.CallbackFlowBuilder.collectTo(Builders.kt:336)
#        at kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.invokeSuspend(ChannelFlow.kt:60)
    - StandaloneCoroutine{Active}@10e7c3f5, state: SUSPENDED [Dispatchers.Default]
#      at kotlinx.coroutines.channels.AbstractChannel.receiveCatching-JP2dKIU(AbstractChannel.kt:633)
#      at kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2.invokeSuspend(Combine.kt:57)
      at kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.invokeSuspend(Combine.kt:34)
      - StandaloneCoroutine{Active}@4de1d4c4, state: SUSPENDED [Dispatchers.Default]
#        at kotlinx.coroutines.flow.StateFlowImpl.collect(StateFlow.kt:403)
        at kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.invokeSuspend(Combine.kt:34)
      - StandaloneCoroutine{Active}@660a156, state: SUSPENDED [Dispatchers.Default]
#        at kotlinx.coroutines.channels.AbstractChannel.receiveCatching-JP2dKIU(AbstractChannel.kt:633)
#        at kotlinx.coroutines.flow.FlowKt__ChannelsKt.emitAllImpl$FlowKt__ChannelsKt(Channels.kt:51)
#        at kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.invokeSuspend(ChannelFlow.kt:123)
        at kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1.collect(Transform.kt:115)
        at kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.invokeSuspend(Combine.kt:34)
        - ProducerCoroutine{Active}@6470040c, state: SUSPENDED [Dispatchers.Default]
#          at kotlinx.coroutines.channels.AbstractChannel.receiveCatching-JP2dKIU(AbstractChannel.kt:633)
#          at kotlinx.coroutines.flow.FlowKt__ChannelsKt.emitAllImpl$FlowKt__ChannelsKt(Channels.kt:51)
#          at kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.invokeSuspend(ChannelFlow.kt:123)
          at git4idea.remote.hosting.GitAsyncExtensionsKt$discoverServers$1.invokeSuspend(gitAsyncExtensions.kt:68)
#          at kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.invokeSuspend(ChannelFlow.kt:60)
          - ProducerCoroutine{Active}@27f4abb2, state: SUSPENDED [Dispatchers.Default]
#            at kotlinx.coroutines.channels.AbstractChannel.receiveCatching-JP2dKIU(AbstractChannel.kt:633)
            at kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2.invokeSuspend(Combine.kt:57)
#            at kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.invokeSuspend(ChannelFlow.kt:60)
            - StandaloneCoroutine{Active}@249dd40b, state: SUSPENDED [Dispatchers.Default]
#              at kotlinx.coroutines.channels.AbstractChannel.receiveCatching-JP2dKIU(AbstractChannel.kt:633)
#              at kotlinx.coroutines.flow.FlowKt__ChannelsKt.emitAllImpl$FlowKt__ChannelsKt(Channels.kt:51)
#              at kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.invokeSuspend(ChannelFlow.kt:123)
              at kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.invokeSuspend(Combine.kt:34)
              - ProducerCoroutine{Active}@3e07114e, state: SUSPENDED [Dispatchers.Default]
#                at kotlinx.coroutines.channels.ProduceKt.awaitClose(Produce.kt:153)
                at git4idea.remote.hosting.GitAsyncExtensionsKt$gitRemotesFlow$1.invokeSuspend(gitAsyncExtensions.kt:28)
#                at kotlinx.coroutines.flow.CallbackFlowBuilder.collectTo(Builders.kt:336)
#                at kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.invokeSuspend(ChannelFlow.kt:60)
            - StandaloneCoroutine{Active}@5a332e60, state: SUSPENDED [Dispatchers.Default]
#              at kotlinx.coroutines.flow.StateFlowImpl.collect(StateFlow.kt:403)
              at kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.invokeSuspend(Combine.kt:34)