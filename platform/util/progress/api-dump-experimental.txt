*:com.intellij.platform.util.progress.ProgressPipe
- a:collectProgressUpdates(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- a:progressUpdates():kotlinx.coroutines.flow.Flow
*f:com.intellij.platform.util.progress.ProgressPipeKt
- sf:createProgressPipe(kotlinx.coroutines.CoroutineScope):com.intellij.platform.util.progress.ProgressPipe
*:com.intellij.platform.util.progress.RawProgressReporter
- details(java.lang.String):V
- fraction(java.lang.Double):V
- text(java.lang.String):V
f:com.intellij.platform.util.progress.StepsKt
- *sf:durationStep(D,java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- *bs:durationStep$default(D,java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- *sf:indeterminateStep(java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- *bs:indeterminateStep$default(java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- *sf:progressStep(D,java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- *bs:progressStep$default(D,java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- *sf:reportProgressScope(I,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation):java.lang.Object
- *bs:reportProgressScope$default(I,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- *sf:withRawProgressReporter(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
