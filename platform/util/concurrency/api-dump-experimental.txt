*f:com.intellij.concurrency.virtualThreads.IntelliJVirtualThreads
- s:ofVirtual():java.lang.Thread$Builder
*f:com.intellij.concurrency.virtualThreads.VirtualThreads
- sf:asyncAsVirtualThread(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function0):kotlinx.coroutines.Deferred
- bs:asyncAsVirtualThread$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function0,I,java.lang.Object):kotlinx.coroutines.Deferred
- sf:launchAsVirtualThread(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function0):kotlinx.coroutines.Job
- bs:launchAsVirtualThread$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function0,I,java.lang.Object):kotlinx.coroutines.Job
- sf:virtualThread(Z,java.lang.String,java.lang.ClassLoader,kotlin.jvm.functions.Function0):java.lang.Thread
- bs:virtualThread$default(Z,java.lang.String,java.lang.ClassLoader,kotlin.jvm.functions.Function0,I,java.lang.Object):java.lang.Thread
*f:com.intellij.util.ConcatenationQuery
- com.intellij.util.AbstractQuery
- <init>(java.util.List):V
