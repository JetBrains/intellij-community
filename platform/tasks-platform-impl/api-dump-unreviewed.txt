f:com.intellij.tasks.TaskBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
c:com.intellij.tasks.context.ContextInfo
- f:comment:java.lang.String
- f:date:J
- f:name:java.lang.String
- <init>(java.lang.String,J,java.lang.String):V
a:com.intellij.tasks.context.LoadContextUndoableAction
- com.intellij.openapi.command.undo.GlobalUndoableAction
- pf:myManager:com.intellij.tasks.context.WorkingContextManager
- s:createAction(com.intellij.tasks.context.WorkingContextManager,Z,com.intellij.tasks.Task):com.intellij.tasks.context.LoadContextUndoableAction
- s:createAction(com.intellij.tasks.context.WorkingContextManager,Z,java.lang.String):com.intellij.tasks.context.LoadContextUndoableAction
- pa:doLoad():V
- redo():V
- undo():V
f:com.intellij.tasks.context.WorkingContextManager
- <init>(com.intellij.openapi.project.Project):V
- clearContext():V
- enableUntil(com.intellij.openapi.Disposable):V
- getContextFile():java.io.File
- getContextHistory():java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.tasks.context.WorkingContextManager
- getTaskFile():java.io.File
- hasContext(java.lang.String):Z
- loadContext(java.lang.String):Z
- loadContext(org.jdom.Element):V
- pack(I,I):V
- removeContext(com.intellij.tasks.Task):V
- removeContext(java.lang.String):V
- restoreContext(com.intellij.tasks.Task):V
- saveContext(com.intellij.tasks.Task):V
- saveContext(java.lang.String,java.lang.String):V
- saveContext(org.jdom.Element):V
c:com.intellij.tasks.impl.LocalTaskImpl
- com.intellij.tasks.LocalTask
- sf:DEFAULT_TASK_ID:java.lang.String
- <init>():V
- <init>(com.intellij.tasks.Task):V
- <init>(java.lang.String,java.lang.String):V
- addBranch(com.intellij.tasks.BranchInfo):V
- addChangelist(com.intellij.tasks.ChangeListInfo):V
- addWorkItem(com.intellij.tasks.timeTracking.model.WorkItem):V
- getBranches():java.util.List
- getChangeLists():java.util.List
- getComments():com.intellij.tasks.Comment[]
- getCreated():java.util.Date
- getCustomIcon():java.lang.String
- getDescription():java.lang.String
- getIcon():javax.swing.Icon
- s:getIconFromType(com.intellij.tasks.TaskType,Z):javax.swing.Icon
- getId():java.lang.String
- getIssueUrl():java.lang.String
- getLastPost():java.util.Date
- getNumber():java.lang.String
- getPresentableId():java.lang.String
- getPresentableName():java.lang.String
- getProject():java.lang.String
- getRepository():com.intellij.tasks.TaskRepository
- getShelfName():java.lang.String
- getSummary():java.lang.String
- getTimeSpentFromLastPost():J
- getTotalTimeSpent():J
- getType():com.intellij.tasks.TaskType
- getUpdated():java.util.Date
- getWorkItems():java.util.List
- isActive():Z
- isClosed():Z
- isDefault():Z
- isIssue():Z
- isRunning():Z
- removeBranch(com.intellij.tasks.BranchInfo):V
- removeChangelist(com.intellij.tasks.ChangeListInfo):V
- setActive(Z):V
- setBranches(java.util.List):V
- setChangeLists(java.util.List):V
- setClosed(Z):V
- setCreated(java.util.Date):V
- setId(java.lang.String):V
- setIssue(Z):V
- setIssueUrl(java.lang.String):java.lang.String
- setLastPost(java.util.Date):V
- setNumber(java.lang.String):V
- setPresentableId(java.lang.String):V
- setProject(java.lang.String):V
- setRepository(com.intellij.tasks.TaskRepository):V
- setRunning(Z):V
- setShelfName(java.lang.String):V
- setSummary(java.lang.String):V
- setType(com.intellij.tasks.TaskType):V
- setUpdated(java.util.Date):V
- setWorkItems(java.util.List):V
- updateFromIssue(com.intellij.tasks.Task):V
c:com.intellij.tasks.impl.RequestFailedException
- java.lang.RuntimeException
- <init>(com.intellij.tasks.TaskRepository,java.lang.String):V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.Throwable):V
- <init>(java.lang.Throwable):V
- s:forServerMessage(java.lang.String):com.intellij.tasks.impl.RequestFailedException
- s:forStatusCode(I,java.lang.String):com.intellij.tasks.impl.RequestFailedException
- getRepository():com.intellij.tasks.TaskRepository
f:com.intellij.tasks.impl.TaskManagerImpl
- com.intellij.tasks.TaskManager
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- sf:TASK_UPDATE_COMPARATOR:java.util.Comparator
- <init>(com.intellij.openapi.project.Project):V
- activateTask(com.intellij.tasks.Task,Z):com.intellij.tasks.LocalTask
- activateTask(com.intellij.tasks.Task,Z,Z):com.intellij.tasks.LocalTask
- s:addBranches(com.intellij.tasks.LocalTask,com.intellij.openapi.vcs.VcsTaskHandler$TaskInfo[],Z):V
- addTask(com.intellij.tasks.Task):com.intellij.tasks.LocalTask
- addTaskListener(com.intellij.tasks.TaskListener,com.intellij.openapi.Disposable):V
- callProjectOpened():V
- constructDefaultBranchName(com.intellij.tasks.Task):java.lang.String
- createBranch(com.intellij.tasks.LocalTask,com.intellij.tasks.LocalTask,java.lang.String,com.intellij.openapi.vcs.VcsTaskHandler$TaskInfo):V
- createChangeList(com.intellij.tasks.LocalTask,java.lang.String):V
- createLocalTask(java.lang.String):com.intellij.tasks.impl.LocalTaskImpl
- dispose():V
- findTask(java.lang.String):com.intellij.tasks.impl.LocalTaskImpl
- getActiveTask():com.intellij.tasks.LocalTask
- getActiveVcs():com.intellij.openapi.vcs.AbstractVcs
- getAllRepositories():com.intellij.tasks.TaskRepository[]
- getAssociatedTask(com.intellij.openapi.vcs.changes.LocalChangeList):com.intellij.tasks.LocalTask
- getCachedIssues():java.util.List
- getCachedIssues(Z):java.util.List
- getChangeListListener():com.intellij.openapi.vcs.changes.ChangeListAdapter
- getChangelistName(com.intellij.tasks.Task):java.lang.String
- getIssues(java.lang.String):java.util.List
- getIssues(java.lang.String,I,I,Z,com.intellij.openapi.progress.ProgressIndicator,Z):java.util.List
- getIssues(java.lang.String,Z):java.util.List
- getLocalTasks():java.util.List
- getLocalTasks(Z):java.util.List
- getState():com.intellij.tasks.impl.TaskManagerImpl$Config
- initializeComponent():V
- isLocallyClosed(com.intellij.tasks.LocalTask):Z
- isVcsEnabled():Z
- s:loadRepositories(org.jdom.Element):java.util.ArrayList
- loadState(com.intellij.tasks.impl.TaskManagerImpl$Config):V
- mergeBranch(com.intellij.tasks.LocalTask):V
- prepareForNextTest():V
- removeTask(com.intellij.tasks.LocalTask):V
- setRepositories(java.util.List):V
- shelveChanges(com.intellij.tasks.LocalTask,java.lang.String):V
- suggestBranchName(com.intellij.tasks.Task):java.lang.String
- suggestBranchName(com.intellij.tasks.Task,java.lang.String):java.lang.String
- testConnection(com.intellij.tasks.TaskRepository):Z
- trackContext(com.intellij.openapi.vcs.changes.LocalChangeList):V
- updateIssues(java.lang.Runnable):V
c:com.intellij.tasks.impl.TaskManagerImpl$Config
- branchNameFormat:java.lang.String
- changelistNameFormat:java.lang.String
- clearContext:Z
- commitChanges:Z
- createBranch:Z
- createChangelist:Z
- localTasksCounter:I
- mergeBranch:Z
- saveContextOnCommit:Z
- searchClosedTasks:Z
- servers:org.jdom.Element
- shelveChanges:Z
- taskHistoryLength:I
- tasks:java.util.List
- trackContextForNewChangelist:Z
- updateEnabled:Z
- updateInterval:I
- updateIssuesCount:I
- useBranch:Z
- <init>():V
f:com.intellij.tasks.impl.TaskUtil
- s:encodeUrl(java.lang.String):java.lang.String
- s:filterTasks(java.lang.String,java.util.List):java.util.List
- s:formatDate(java.util.Date):java.lang.String
- s:formatTask(com.intellij.tasks.Task,java.lang.String):java.lang.String
- s:getChangeListComment(com.intellij.tasks.Task):java.lang.String
- s:getChangeListComment(com.intellij.tasks.Task,Z):java.lang.String
- s:getTrimmedSummary(com.intellij.tasks.Task):java.lang.String
- s:parseDate(java.lang.String):java.util.Date
- s:prettyFormatJsonToLog(com.intellij.openapi.diagnostic.Logger,java.lang.String):V
- s:prettyFormatXmlToLog(com.intellij.openapi.diagnostic.Logger,java.lang.String):V
- s:tasksEqual(com.intellij.tasks.Task,com.intellij.tasks.Task):Z
- s:tasksEqual(java.util.List,java.util.List):Z
- s:tasksEqual(com.intellij.tasks.Task[],com.intellij.tasks.Task[]):Z
f:icons.TasksIcons
- sf:Bug:javax.swing.Icon
- sf:Exception:javax.swing.Icon
- <init>():V
