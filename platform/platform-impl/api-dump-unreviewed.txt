com.intellij.application.options.OptionsContainingConfigurable
- processListOptions():java.util.Set
- processListOptionsWithPaths():java.util.Map
a:com.intellij.application.options.colors.AbstractFontOptionsPanel
- javax.swing.JPanel
- com.intellij.application.options.colors.OptionsPanel
- psf:ADDITIONAL_VERTICAL_GAP:I
- psf:BASE_INSET:I
- p:<init>():V
- p:<init>(java.lang.Boolean):V
- p:addControls():V
- addListener(com.intellij.application.options.colors.ColorAndFontSettingsListener):V
- applyChangesToScheme():V
- p:createControls():javax.swing.JComponent
- pf:createFontSettingsPanel():javax.swing.JPanel
- p:createPrimaryFontCombo():com.intellij.ui.AbstractFontCombo
- p:createSecondaryFontCombo():com.intellij.ui.AbstractFontCombo
- pf:createSecondaryFontComboAndLabel(javax.swing.JPanel,java.awt.GridBagConstraints):V
- fireFontChanged():V
- p:getEditorFontSizeField():javax.swing.JTextField
- p:getEnableLigaturesCheckbox():javax.swing.JCheckBox
- p:getEnableLigaturesHintLabel():javax.swing.JLabel
- pa:getFontPreferences():com.intellij.openapi.editor.colors.FontPreferences
- ps:getInsets(I,I):java.awt.Insets
- pa:getLineSpacing():F
- p:getLineSpacingField():javax.swing.JTextField
- p:getLineSpacingLabel():javax.swing.JLabel
- getPanel():javax.swing.JPanel
- p:getPrimaryCombo():com.intellij.ui.AbstractFontCombo
- p:getPrimaryLabel():javax.swing.JLabel
- p:getSecondaryCombo():com.intellij.ui.AbstractFontCombo
- p:getSizeLabel():javax.swing.JLabel
- ps:goToReaderMode():V
- pa:isDelegating():Z
- pa:isReadOnly():Z
- processListOptions():java.util.Set
- selectOption(java.lang.String):V
- pa:setCurrentLineSpacing(F):V
- p:setDelegatingPreferences(Z):V
- p:setFontSize(F):V
- pa:setFontSize(I):V
- p:setSecondaryFontLabel(javax.swing.JLabel):V
- showOption(java.lang.String):java.lang.Runnable
- p:updateCustomOptions():V
- updateDescription(Z):Z
- updateOptionsList():V
a:com.intellij.application.options.colors.ColorAndFontDescription
- com.intellij.openapi.editor.markup.TextAttributes
- com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptorWithPath
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.editor.colors.EditorColorsScheme,javax.swing.Icon,java.lang.String):V
- equals(java.lang.Object):Z
- getBaseAttributes():com.intellij.openapi.editor.markup.TextAttributes
- a:getExternalBackground():java.awt.Color
- a:getExternalEffectColor():java.awt.Color
- a:getExternalEffectType():com.intellij.openapi.editor.markup.EffectType
- a:getExternalErrorStripe():java.awt.Color
- a:getExternalForeground():java.awt.Color
- getFallbackKeyDescriptor():com.intellij.openapi.util.Pair
- a:getFontType():I
- getGroup():java.lang.String
- getIcon():javax.swing.Icon
- getScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- getToolTip():java.lang.String
- getType():java.lang.String
- hashCode():I
- p:initCheckedStatus():V
- isBackgroundChecked():Z
- isBackgroundEnabled():Z
- isEditable():Z
- isEffectsColorChecked():Z
- isEffectsColorEnabled():Z
- isErrorStripeChecked():Z
- isErrorStripeEnabled():Z
- isFontEnabled():Z
- isForegroundChecked():Z
- isForegroundEnabled():Z
- f:isInherited():Z
- isModified():Z
- isTransparencyEnabled():Z
- f:setBackgroundChecked(Z):V
- f:setBackgroundColor(java.awt.Color):V
- f:setEffectColor(java.awt.Color):V
- f:setEffectType(com.intellij.openapi.editor.markup.EffectType):V
- f:setEffectsColorChecked(Z):V
- f:setErrorStripeChecked(Z):V
- setErrorStripeColor(java.awt.Color):V
- a:setExternalBackground(java.awt.Color):V
- a:setExternalEffectColor(java.awt.Color):V
- a:setExternalEffectType(com.intellij.openapi.editor.markup.EffectType):V
- a:setExternalErrorStripe(java.awt.Color):V
- a:setExternalForeground(java.awt.Color):V
- a:setFontType(I):V
- f:setForegroundChecked(Z):V
- f:setForegroundColor(java.awt.Color):V
- setInherited(Z):V
f:com.intellij.application.options.colors.ColorAndFontDescriptionPanel
- javax.swing.JPanel
- com.intellij.application.options.colors.OptionsPanelImpl$ColorDescriptionPanel
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- addListener(com.intellij.application.options.colors.OptionsPanelImpl$ColorDescriptionPanel$Listener):V
- apply(com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptor,com.intellij.openapi.editor.colors.EditorColorsScheme):V
- getPanel():javax.swing.JComponent
- reset(com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptor):V
- resetDefault():V
c:com.intellij.application.options.colors.ColorAndFontOptions
- com.intellij.openapi.options.SearchableConfigurable$Parent$Abstract
- com.intellij.application.options.editor.EditorOptionsProvider
- com.intellij.application.options.schemes.SchemesModel
- com.intellij.openapi.options.Configurable$NoMargin
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.Configurable$WithEpDependencies
- sf:ID:java.lang.String
- <init>():V
- addImportedScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- addListener(com.intellij.application.options.colors.ColorAndFontSettingsListener):V
- apply():V
- buildConfigurables():com.intellij.openapi.options.Configurable[]
- s:canBeDeleted(com.intellij.openapi.editor.colors.EditorColorsScheme):Z
- canDeleteScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):Z
- canDuplicateScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):Z
- canRenameScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):Z
- canResetScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):Z
- containsScheme(java.lang.String,Z):Z
- createComponent():javax.swing.JComponent
- p:createPanelFactories():java.util.List
- differsFromDefault(com.intellij.openapi.editor.colors.EditorColorsScheme):Z
- disposeUIResources():V
- findPage(java.lang.String):com.intellij.application.options.colors.NewColorAndFontPanel
- findSubConfigurable(java.lang.Class):com.intellij.openapi.options.SearchableConfigurable
- findSubConfigurable(java.lang.String):com.intellij.openapi.options.SearchableConfigurable
- getCurrentDescriptions():com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptor[]
- getDependencies():java.util.Collection
- getDisplayName():java.lang.String
- s:getFontConfigurableName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- getOrderedSchemes():com.intellij.openapi.editor.colors.Groups
- getSchemes():java.util.Collection
- s:getScopesGroup():java.lang.String
- getSelectedScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- hasOwnContent():Z
- isDefaultScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):Z
- isModified():Z
- isProjectScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):Z
- s:isReadOnly(com.intellij.openapi.editor.colors.EditorColorsScheme):Z
- removeScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- reset():V
- resetFromChild():V
- saveSchemeAs(com.intellij.openapi.editor.colors.EditorColorsScheme,java.lang.String):Z
- s:selectOrEditColor(com.intellij.openapi.actionSystem.DataContext,java.lang.String,java.lang.Class):Z
- s:selectOrEditColor(com.intellij.openapi.actionSystem.DataContext,java.lang.String,java.lang.String):Z
- selectScheme(java.lang.String):com.intellij.openapi.editor.colors.EditorColorsScheme
- stateChanged():V
- s:writeTempScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- s:writeTempScheme(org.jdom.Element,com.intellij.openapi.editor.colors.EditorColorsScheme):V
com.intellij.application.options.colors.ColorAndFontPanelFactory
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createPanel(com.intellij.application.options.colors.ColorAndFontOptions):com.intellij.application.options.colors.NewColorAndFontPanel
- getOriginalClass():java.lang.Class
- a:getPanelDisplayName():java.lang.String
com.intellij.application.options.colors.ColorAndFontPanelFactoryEx
- com.intellij.application.options.colors.ColorAndFontPanelFactory
- com.intellij.psi.codeStyle.DisplayPrioritySortable
com.intellij.application.options.colors.ColorAndFontSettingsListener
- java.util.EventListener
- a:fontChanged():V
- a:schemeChanged(java.lang.Object):V
- a:selectedOptionChanged(java.lang.Object):V
- a:selectionInPreviewChanged(java.lang.String):V
- a:settingsChanged():V
a:com.intellij.application.options.colors.ColorAndFontSettingsListener$Abstract
- com.intellij.application.options.colors.ColorAndFontSettingsListener
- <init>():V
- fontChanged():V
- schemeChanged(java.lang.Object):V
- selectedOptionChanged(java.lang.Object):V
- selectionInPreviewChanged(java.lang.String):V
- settingsChanged():V
f:com.intellij.application.options.colors.ColorSettingsUtil
- s:getAllAttributeDescriptors(com.intellij.openapi.options.colors.ColorAndFontDescriptorsProvider):java.util.List
- s:getAllColorDescriptors(com.intellij.openapi.options.colors.ColorAndFontDescriptorsProvider):java.util.List
- s:getErrorTextAttributes():java.util.List
- s:keyToDisplayTextMap(com.intellij.openapi.options.colors.ColorSettingsPage):java.util.Map
c:com.intellij.application.options.colors.CompositeColorDescriptionPanel
- javax.swing.JPanel
- com.intellij.application.options.colors.OptionsPanelImpl$ColorDescriptionPanel
- pf:myConditions:java.util.List
- pf:myDescriptionPanels:java.util.List
- <init>():V
- addDescriptionPanel(com.intellij.application.options.colors.OptionsPanelImpl$ColorDescriptionPanel,com.intellij.openapi.util.Condition):V
- addListener(com.intellij.application.options.colors.OptionsPanelImpl$ColorDescriptionPanel$Listener):V
- apply(com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptor,com.intellij.openapi.editor.colors.EditorColorsScheme):V
- getPanel():javax.swing.JComponent
- reset(com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptor):V
- resetDefault():V
c:com.intellij.application.options.colors.FontPreviewService
- sf:Companion:com.intellij.application.options.colors.FontPreviewService$Companion
- <init>():V
- pf:getEndText():java.lang.String
- getFontPreviewText():java.lang.String
- sf:getInstance():com.intellij.application.options.colors.FontPreviewService
f:com.intellij.application.options.colors.FontPreviewService$Companion
- f:getInstance():com.intellij.application.options.colors.FontPreviewService
com.intellij.application.options.colors.ImportHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getTitle():java.lang.String
- a:performImport(java.awt.Component,com.intellij.util.Consumer):V
com.intellij.application.options.colors.InspectionColorSettingsPage
c:com.intellij.application.options.colors.NewColorAndFontPanel
- javax.swing.JPanel
- <init>(com.intellij.application.options.colors.SchemesPanel,com.intellij.application.options.colors.OptionsPanel,com.intellij.application.options.colors.PreviewPanel,java.lang.String,java.util.Collection,com.intellij.openapi.options.colors.ColorSettingsPage):V
- addDescriptionListener(com.intellij.application.options.colors.ColorAndFontSettingsListener):V
- addSchemesListener(com.intellij.application.options.colors.ColorAndFontSettingsListener):V
- contains(com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptor):Z
- containsFontOptions():Z
- s:create(com.intellij.application.options.colors.PreviewPanel,java.lang.String,com.intellij.application.options.colors.ColorAndFontOptions,java.util.Collection,com.intellij.openapi.options.colors.ColorSettingsPage):com.intellij.application.options.colors.NewColorAndFontPanel
- disposeUIResources():V
- getDisplayName():java.lang.String
- getPanel():javax.swing.JComponent
- getSettingsPage():com.intellij.openapi.options.colors.ColorSettingsPage
- processListOptions():java.util.Set
- reset(java.lang.Object):V
- selectOptionByType(java.lang.String):V
- setEmptyText(java.lang.String,java.lang.String):V
- showOption(java.lang.String):java.lang.Runnable
- updatePreview():V
- updateSchemesPanel():V
com.intellij.application.options.colors.OptionsPanel
- a:addListener(com.intellij.application.options.colors.ColorAndFontSettingsListener):V
- a:applyChangesToScheme():V
- a:getPanel():javax.swing.JPanel
- a:processListOptions():java.util.Set
- a:selectOption(java.lang.String):V
- setEmptyText(java.lang.String,java.awt.event.ActionListener):V
- a:showOption(java.lang.String):java.lang.Runnable
- a:updateOptionsList():V
f:com.intellij.application.options.colors.OptionsPanelImpl
- javax.swing.JPanel
- com.intellij.application.options.colors.OptionsPanel
- sf:SELECTED_COLOR_OPTION_PROPERTY:java.lang.String
- <init>(com.intellij.application.options.colors.ColorAndFontOptions,com.intellij.application.options.colors.SchemesPanel,java.lang.String):V
- <init>(com.intellij.application.options.colors.ColorAndFontOptions,com.intellij.application.options.colors.SchemesPanel,java.lang.String,com.intellij.application.options.colors.OptionsPanelImpl$ColorDescriptionPanel):V
- addListener(com.intellij.application.options.colors.ColorAndFontSettingsListener):V
- applyChangesToScheme():V
- getPanel():javax.swing.JPanel
- processListOptions():java.util.Set
- selectOption(java.lang.String):V
- setEmptyText(java.lang.String,java.awt.event.ActionListener):V
- showOption(java.lang.String):java.lang.Runnable
- updateOptionsList():V
com.intellij.application.options.colors.OptionsPanelImpl$ColorDescriptionPanel
- a:addListener(com.intellij.application.options.colors.OptionsPanelImpl$ColorDescriptionPanel$Listener):V
- a:apply(com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptor,com.intellij.openapi.editor.colors.EditorColorsScheme):V
- a:getPanel():javax.swing.JComponent
- a:reset(com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptor):V
- a:resetDefault():V
com.intellij.application.options.colors.OptionsPanelImpl$ColorDescriptionPanel$Listener
- java.util.EventListener
- a:onHyperLinkClicked(javax.swing.event.HyperlinkEvent):V
- a:onSettingsChanged(java.awt.event.ActionEvent):V
com.intellij.application.options.colors.PreviewPanel
- a:addListener(com.intellij.application.options.colors.ColorAndFontSettingsListener):V
- a:blinkSelectedHighlightType(java.lang.Object):V
- a:disposeUIResources():V
- a:getPanel():javax.swing.JComponent
- a:updateView():V
c:com.intellij.application.options.colors.PreviewPanel$Empty
- com.intellij.application.options.colors.PreviewPanel
- <init>():V
- addListener(com.intellij.application.options.colors.ColorAndFontSettingsListener):V
- blinkSelectedHighlightType(java.lang.Object):V
- disposeUIResources():V
- getPanel():javax.swing.JComponent
- updateView():V
com.intellij.application.options.colors.RainbowStateChangeListener
- sf:Companion:com.intellij.application.options.colors.RainbowStateChangeListener$Companion
- s:getTOPIC():com.intellij.util.messages.Topic
- a:onRainbowStateChanged(com.intellij.openapi.editor.colors.EditorColorsScheme,java.util.Set):V
f:com.intellij.application.options.colors.RainbowStateChangeListener$Companion
- f:getTOPIC():com.intellij.util.messages.Topic
c:com.intellij.application.options.colors.SchemesPanel
- com.intellij.application.options.schemes.SimpleSchemesPanel
- <init>(com.intellij.application.options.colors.ColorAndFontOptions):V
- addListener(com.intellij.application.options.colors.ColorAndFontSettingsListener):V
- areSchemesLoaded():Z
- p:createActionLink():com.intellij.ui.components.ActionLink
- p:createActionLinkCommentLabel():javax.swing.JLabel
- p:createSchemeActions():com.intellij.application.options.schemes.AbstractSchemeActions
- p:getContextHelpLabelText():java.lang.String
- getModel():com.intellij.application.options.schemes.SchemesModel
- p:highlightNonDefaultSchemes():Z
- p:onSchemeChangedFromAction(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- p:renameSchemeFromAction(com.intellij.openapi.editor.colors.EditorColorsScheme,java.lang.String):V
- p:shouldApplyImmediately():Z
- p:supportsProjectSchemes():Z
- useBoldForNonRemovableSchemes():Z
f:com.intellij.application.options.colors.SimpleEditorPreview
- com.intellij.application.options.colors.PreviewPanel
- <init>(com.intellij.application.options.colors.ColorAndFontOptions,com.intellij.openapi.options.colors.ColorSettingsPage):V
- <init>(com.intellij.application.options.colors.ColorAndFontOptions,com.intellij.openapi.options.colors.ColorSettingsPage,Z):V
- addListener(com.intellij.application.options.colors.ColorAndFontSettingsListener):V
- blinkSelectedHighlightType(java.lang.Object):V
- disposeUIResources():V
- getEditor():com.intellij.openapi.editor.ex.EditorEx
- getPanel():javax.swing.JComponent
- updateView():V
a:com.intellij.application.options.colors.TextAttributesDescription
- com.intellij.application.options.colors.ColorAndFontDescription
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.colors.EditorColorsScheme,javax.swing.Icon,java.lang.String):V
- getExternalBackground():java.awt.Color
- getExternalEffectColor():java.awt.Color
- getExternalEffectType():com.intellij.openapi.editor.markup.EffectType
- getExternalErrorStripe():java.awt.Color
- getExternalForeground():java.awt.Color
- getFontType():I
- p:getTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
- setExternalBackground(java.awt.Color):V
- setExternalEffectColor(java.awt.Color):V
- setExternalEffectType(com.intellij.openapi.editor.markup.EffectType):V
- setExternalErrorStripe(java.awt.Color):V
- setExternalForeground(java.awt.Color):V
- setFontType(I):V
c:com.intellij.application.options.colors.highlighting.HighlightData
- <init>(I,I,com.intellij.openapi.editor.colors.TextAttributesKey):V
- <init>(I,I,com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.colors.ColorKey):V
- <init>(I,com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.colors.ColorKey):V
- addHighlToView(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.colors.EditorColorsScheme,java.util.Map):V
- addToCollection(java.util.Collection,Z):V
- getAdditionalColorKey():com.intellij.openapi.editor.colors.ColorKey
- getEndOffset():I
- getHighlightKey():com.intellij.openapi.editor.colors.TextAttributesKey
- getHighlightType():java.lang.String
- getStartOffset():I
- setEndOffset(I):V
f:com.intellij.application.options.colors.highlighting.HighlightsExtractor
- <init>(java.util.Map):V
- <init>(java.util.Map,java.util.Map,java.util.Map):V
- extractHighlights(java.lang.String,java.util.List):java.lang.String
f:com.intellij.application.options.colors.highlighting.RendererWrapper
- com.intellij.openapi.editor.EditorCustomElementRenderer
- <init>(com.intellij.openapi.editor.EditorCustomElementRenderer,Z):V
- calcHeightInPixels(com.intellij.openapi.editor.Inlay):I
- calcWidthInPixels(com.intellij.openapi.editor.Inlay):I
- paint(com.intellij.openapi.editor.Inlay,java.awt.Graphics,java.awt.Rectangle,com.intellij.openapi.editor.markup.TextAttributes):V
f:com.intellij.application.options.editor.CheckboxDescriptor
- <init>(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.String,com.intellij.ui.dsl.builder.HyperlinkEventAction,java.lang.String):V
- b:<init>(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.String,com.intellij.ui.dsl.builder.HyperlinkEventAction,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.lang.String,kotlin.reflect.KMutableProperty0,java.lang.String,com.intellij.ui.dsl.builder.HyperlinkEventAction,java.lang.String):V
- b:<init>(java.lang.String,kotlin.reflect.KMutableProperty0,java.lang.String,com.intellij.ui.dsl.builder.HyperlinkEventAction,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.lang.String,kotlin.reflect.KMutableProperty0,java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,kotlin.reflect.KMutableProperty0,java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:asOptionDescriptor():com.intellij.ide.ui.search.BooleanOptionDescription
- f:asOptionDescriptor(kotlin.jvm.functions.Function0):com.intellij.ide.ui.search.BooleanOptionDescription
- f:asUiOptionDescriptor():com.intellij.ide.ui.search.BooleanOptionDescription
- f:getName():java.lang.String
f:com.intellij.application.options.editor.CheckboxDescriptorKt
- sf:checkBox(com.intellij.ui.dsl.builder.Row,com.intellij.application.options.editor.CheckboxDescriptor):com.intellij.ui.dsl.builder.Cell
com.intellij.application.options.editor.EditorOptionsListener
- sf:APPEARANCE_CONFIGURABLE_TOPIC:com.intellij.util.messages.Topic
- sf:FOLDING_CONFIGURABLE_TOPIC:com.intellij.util.messages.Topic
- sf:GUTTER_ICONS_CONFIGURABLE_TOPIC:com.intellij.util.messages.Topic
- sf:OPTIONS_PANEL_TOPIC:com.intellij.util.messages.Topic
- sf:SMART_KEYS_CONFIGURABLE_TOPIC:com.intellij.util.messages.Topic
- a:changesApplied():V
com.intellij.application.options.editor.EditorOptionsProvider
- com.intellij.openapi.options.SearchableConfigurable
f:com.intellij.application.options.editor.EditorTabsConfigurableEP
- com.intellij.openapi.options.ConfigurableEP
com.intellij.application.options.editor.EditorTabsOptionsCustomSection
- com.intellij.openapi.options.UnnamedConfigurable
f:com.intellij.application.options.editor.fonts.AppEditorFontConfigurable
- com.intellij.openapi.options.Configurable$NoMargin
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- sf:ID:java.lang.String
- <init>():V
- getDisplayName():java.lang.String
- getId():java.lang.String
a:com.intellij.application.options.schemes.AbstractSchemeActions
- pf:mySchemesPanel:com.intellij.application.options.schemes.AbstractSchemesPanel
- p:<init>(com.intellij.application.options.schemes.AbstractSchemesPanel):V
- p:addAdditionalActions(java.util.List):V
- p:copyToIDE(com.intellij.openapi.options.Scheme):V
- p:copyToProject(com.intellij.openapi.options.Scheme):V
- ps:createImportExportAction(java.lang.String,java.util.Collection,java.util.function.BiFunction,com.intellij.openapi.util.Computable):com.intellij.openapi.actionSystem.AnAction
- pa:duplicateScheme(com.intellij.openapi.options.Scheme,java.lang.String):V
- p:exportScheme(com.intellij.openapi.project.Project,com.intellij.openapi.options.Scheme,java.lang.String):V
- getActions():java.util.Collection
- pf:getCurrentScheme():com.intellij.openapi.options.Scheme
- p:getExportImportActions(Z):java.util.List
- p:getModel():com.intellij.application.options.schemes.SchemesModel
- p:getSchemeImportersNames():java.util.Collection
- pa:getSchemeType():java.lang.Class
- f:getSchemesPanel():com.intellij.application.options.schemes.AbstractSchemesPanel
- p:importScheme(java.lang.String):V
- pa:onSchemeChanged(com.intellij.openapi.options.Scheme):V
- pa:renameScheme(com.intellij.openapi.options.Scheme,java.lang.String):V
- pa:resetScheme(com.intellij.openapi.options.Scheme):V
a:com.intellij.application.options.schemes.AbstractSchemesPanel
- javax.swing.JPanel
- psf:DEFAULT_VGAP:I
- f:cancelEdit():V
- pa:clearMessage():V
- p:createActionLink():com.intellij.ui.components.ActionLink
- p:createActionLinkCommentLabel():javax.swing.JLabel
- p:createBottomComponent():javax.swing.JComponent
- pa:createInfoComponent():javax.swing.JComponent
- pa:createSchemeActions():com.intellij.application.options.schemes.AbstractSchemeActions
- p:createTopComponent():javax.swing.JComponent
- disposeUIResources():V
- f:editNewSchemeName(java.lang.String,Z,java.util.function.Consumer):V
- f:getActions():com.intellij.application.options.schemes.AbstractSchemeActions
- p:getComboBoxLabel():java.lang.String
- p:getContextHelpLabelText():java.lang.String
- p:getIndent(com.intellij.openapi.options.Scheme):I
- a:getModel():com.intellij.application.options.schemes.SchemesModel
- p:getSchemeTypeName():java.lang.String
- f:getSelectedScheme():com.intellij.openapi.options.Scheme
- f:getToolbar():javax.swing.JComponent
- p:hideDeleteActionIfUnavailable():Z
- pa:highlightNonDefaultSchemes():Z
- f:resetGroupedSchemes(com.intellij.openapi.editor.colors.Groups):V
- f:resetSchemes(java.util.Collection):V
- selectScheme(com.intellij.openapi.options.Scheme):V
- setEnabled(Z):V
- setSeparatorVisible(Z):V
- f:showInfo(java.lang.String,com.intellij.openapi.ui.MessageType):V
- pa:showMessage(java.lang.String,com.intellij.openapi.ui.MessageType):V
- ps:showMessage(java.lang.String,com.intellij.openapi.ui.MessageType,javax.swing.JLabel):V
- showStatus(java.lang.String,com.intellij.openapi.ui.MessageType):V
- pa:supportsProjectSchemes():Z
- f:updateOnCurrentSettingsChange():V
- updateUI():V
- a:useBoldForNonRemovableSchemes():Z
a:com.intellij.application.options.schemes.SchemesCombo
- com.intellij.openapi.ui.ComboBox
- <init>():V
- p:getIndent(com.intellij.openapi.options.Scheme):I
- pa:getSchemeAttributes(com.intellij.openapi.options.Scheme):com.intellij.ui.SimpleTextAttributes
- getSelectedItem():com.intellij.application.options.schemes.SchemesCombo$MySchemeListItem
- getSelectedScheme():com.intellij.openapi.options.Scheme
- p:isDefaultScheme(com.intellij.openapi.options.Scheme):Z
- p:isProjectScheme(com.intellij.openapi.options.Scheme):Z
- resetGroupedSchemes(com.intellij.openapi.editor.colors.Groups):V
- resetSchemes(java.util.Collection):V
- selectScheme(com.intellij.openapi.options.Scheme):V
- pa:supportsProjectSchemes():Z
com.intellij.application.options.schemes.SchemesModel
- a:canDeleteScheme(com.intellij.openapi.options.Scheme):Z
- a:canDuplicateScheme(com.intellij.openapi.options.Scheme):Z
- a:canRenameScheme(com.intellij.openapi.options.Scheme):Z
- a:canResetScheme(com.intellij.openapi.options.Scheme):Z
- a:containsScheme(java.lang.String,Z):Z
- a:differsFromDefault(com.intellij.openapi.options.Scheme):Z
- isDefaultScheme(com.intellij.openapi.options.Scheme):Z
- a:isProjectScheme(com.intellij.openapi.options.Scheme):Z
- a:removeScheme(com.intellij.openapi.options.Scheme):V
c:com.intellij.application.options.schemes.SerializableSchemeExporter
- com.intellij.openapi.options.SchemeExporter
- <init>():V
- exportScheme(com.intellij.openapi.options.Scheme,java.io.OutputStream):V
- exportScheme(com.intellij.openapi.project.Project,com.intellij.openapi.options.Scheme,java.io.OutputStream):V
- getExtension():java.lang.String
- s:writeToStream(com.intellij.configurationStore.SerializableScheme,java.io.OutputStream):V
a:com.intellij.application.options.schemes.SimpleSchemesPanel
- com.intellij.application.options.schemes.AbstractSchemesPanel
- <init>():V
- <init>(I):V
- clearMessage():V
- p:createInfoComponent():javax.swing.JLabel
- showMessage(java.lang.String,com.intellij.openapi.ui.MessageType):V
f:com.intellij.buildfiles.ForcedBuildFileAttribute
- s:belongsToFramework(com.intellij.openapi.vfs.VirtualFile,java.lang.String):Z
- s:forceFileToFramework(com.intellij.openapi.vfs.VirtualFile,java.lang.String,Z):V
- s:getFrameworkIdOfBuildFile(com.intellij.openapi.vfs.VirtualFile):java.lang.String
com.intellij.codeInsight.actions.ReaderModeDefaultsOverride
- sf:Companion:com.intellij.codeInsight.actions.ReaderModeDefaultsOverride$Companion
- s:getInstance():com.intellij.codeInsight.actions.ReaderModeDefaultsOverride
- a:getShowWarningsDefault():Z
f:com.intellij.codeInsight.actions.ReaderModeDefaultsOverride$Companion
- f:getInstance():com.intellij.codeInsight.actions.ReaderModeDefaultsOverride
com.intellij.codeInsight.actions.ReaderModeSettings
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.codeInsight.actions.ReaderModeSettings$Companion
- a:getEnableVisualFormatting():Z
- a:getEnabled():Z
- a:getIncreaseLineSpacing():Z
- a:getMode():com.intellij.codeInsight.actions.ReaderModeProvider$ReaderMode
- a:getShowInlaysHints():Z
- a:getShowLigatures():Z
- a:getShowRenderedDocs():Z
- a:getShowWarnings():Z
- a:getUseActiveSchemeForVisualFormatting():Z
- a:getVisualFormattingChosenScheme():com.intellij.codeInsight.actions.ReaderModeSettings$Scheme
- getVisualFormattingCodeStyleSettings(com.intellij.openapi.project.Project):com.intellij.psi.codeStyle.CodeStyleSettings
- a:setEnableVisualFormatting(Z):V
- a:setEnabled(Z):V
- a:setIncreaseLineSpacing(Z):V
- a:setMode(com.intellij.codeInsight.actions.ReaderModeProvider$ReaderMode):V
- a:setShowInlaysHints(Z):V
- a:setShowLigatures(Z):V
- a:setShowRenderedDocs(Z):V
- a:setShowWarnings(Z):V
- a:setUseActiveSchemeForVisualFormatting(Z):V
- a:setVisualFormattingChosenScheme(com.intellij.codeInsight.actions.ReaderModeSettings$Scheme):V
f:com.intellij.codeInsight.actions.ReaderModeSettings$Companion
- f:applyReaderMode(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.vfs.VirtualFile,Z,Z):V
- bs:applyReaderMode$default(com.intellij.codeInsight.actions.ReaderModeSettings$Companion,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.vfs.VirtualFile,Z,Z,I,java.lang.Object):V
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.actions.ReaderModeSettings
- f:matchMode(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Editor):Z
- bs:matchMode$default(com.intellij.codeInsight.actions.ReaderModeSettings$Companion,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Editor,I,java.lang.Object):Z
f:com.intellij.codeInsight.actions.ReaderModeSettings$Scheme
- <init>():V
- <init>(java.lang.String,Z):V
- b:<init>(java.lang.String,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.String
- f:component2():Z
- f:copy(java.lang.String,Z):com.intellij.codeInsight.actions.ReaderModeSettings$Scheme
- bs:copy$default(com.intellij.codeInsight.actions.ReaderModeSettings$Scheme,java.lang.String,Z,I,java.lang.Object):com.intellij.codeInsight.actions.ReaderModeSettings$Scheme
- equals(java.lang.Object):Z
- f:getName():java.lang.String
- hashCode():I
- f:isProjectLevel():Z
- f:setName(java.lang.String):V
- f:setProjectLevel(Z):V
c:com.intellij.codeInsight.daemon.impl.HintRenderer
- com.intellij.openapi.editor.EditorCustomElementRenderer
- sf:BACKGROUND_ALPHA:F
- sf:Companion:com.intellij.codeInsight.daemon.impl.HintRenderer$Companion
- <init>(java.lang.String):V
- psf:calcHintTextWidth(java.lang.String,java.awt.FontMetrics):I
- sf:calcWidthInPixels(com.intellij.openapi.editor.Editor,java.lang.String,com.intellij.codeInsight.hints.HintWidthAdjustment):I
- sf:calcWidthInPixels(com.intellij.openapi.editor.Editor,java.lang.String,com.intellij.codeInsight.hints.HintWidthAdjustment,Z):I
- calcWidthInPixels(com.intellij.openapi.editor.Inlay):I
- psf:getFontMetrics(com.intellij.openapi.editor.Editor,Z):com.intellij.codeInsight.daemon.impl.HintRenderer$Companion$MyFontMetrics
- bpf:getFontMetrics$(com.intellij.openapi.editor.Editor,Z):com.intellij.codeInsight.daemon.impl.HintRenderer$Companion$MyFontMetrics
- f:getText():java.lang.String
- p:getTextAttributes(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.markup.TextAttributes
- f:getWidthAdjustment():com.intellij.codeInsight.hints.HintWidthAdjustment
- paint(com.intellij.openapi.editor.Inlay,java.awt.Graphics,java.awt.Rectangle,com.intellij.openapi.editor.markup.TextAttributes):V
- sf:paintHint(java.awt.Graphics,com.intellij.openapi.editor.impl.EditorImpl,java.awt.Rectangle,java.lang.String,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.codeInsight.hints.HintWidthAdjustment):V
- sf:paintHint(java.awt.Graphics,com.intellij.openapi.editor.impl.EditorImpl,java.awt.Rectangle,java.lang.String,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.codeInsight.hints.HintWidthAdjustment,Z):V
- f:setText(java.lang.String):V
- f:setWidthAdjustment(com.intellij.codeInsight.hints.HintWidthAdjustment):V
- p:useEditorFont():Z
f:com.intellij.codeInsight.daemon.impl.HintRenderer$Companion
- f:calcWidthInPixels(com.intellij.openapi.editor.Editor,java.lang.String,com.intellij.codeInsight.hints.HintWidthAdjustment):I
- f:calcWidthInPixels(com.intellij.openapi.editor.Editor,java.lang.String,com.intellij.codeInsight.hints.HintWidthAdjustment,Z):I
- f:paintHint(java.awt.Graphics,com.intellij.openapi.editor.impl.EditorImpl,java.awt.Rectangle,java.lang.String,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.codeInsight.hints.HintWidthAdjustment):V
- f:paintHint(java.awt.Graphics,com.intellij.openapi.editor.impl.EditorImpl,java.awt.Rectangle,java.lang.String,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.codeInsight.hints.HintWidthAdjustment,Z):V
- f:useEditorFontFromSettings():Z
f:com.intellij.codeInsight.daemon.impl.HintRenderer$Companion$MyFontMetrics
- f:getFont():java.awt.Font
- f:getLineHeight():I
- f:getMetrics():java.awt.FontMetrics
- f:isActual(com.intellij.openapi.editor.Editor,F,I,java.lang.String):Z
f:com.intellij.codeInsight.editorActions.TextBlockTransferable
- com.intellij.openapi.ide.Sizeable
- java.awt.datatransfer.Transferable
- <init>(java.lang.String,java.util.Collection,com.intellij.openapi.editor.RawText):V
- s:convertLineSeparators(com.intellij.openapi.editor.Editor,java.lang.String):java.lang.String
- s:convertLineSeparators(com.intellij.openapi.editor.Editor,java.lang.String,java.util.Collection):java.lang.String
- s:convertLineSeparators(java.lang.String,java.lang.String,java.util.Collection):java.lang.String
- getSize():I
- getTransferData(java.awt.datatransfer.DataFlavor):java.lang.Object
- getTransferDataFlavors():java.awt.datatransfer.DataFlavor[]
- isDataFlavorSupported(java.awt.datatransfer.DataFlavor):Z
f:com.intellij.codeInsight.folding.impl.FoldingUtil
- s:createFoldTreeIterator(com.intellij.openapi.editor.Editor):java.util.Iterator
- s:findFoldRegion(com.intellij.openapi.editor.Editor,I,I):com.intellij.openapi.editor.FoldRegion
- s:findFoldRegionStartingAtLine(com.intellij.openapi.editor.Editor,I):com.intellij.openapi.editor.FoldRegion
- s:getFoldRegionsAtOffset(com.intellij.openapi.editor.Editor,I):com.intellij.openapi.editor.FoldRegion[]
- s:isHighlighterFolded(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.markup.RangeHighlighter):Z
- s:isTextRangeFolded(com.intellij.openapi.editor.Editor,com.intellij.openapi.util.TextRange):Z
com.intellij.codeInsight.hint.EditorCodePreview
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.codeInsight.hint.EditorCodePreview$Companion
- a:addPreview(kotlin.ranges.IntRange,kotlin.jvm.functions.Function0):V
f:com.intellij.codeInsight.hint.EditorCodePreview$Companion
- f:create(com.intellij.openapi.editor.Editor):com.intellij.codeInsight.hint.EditorCodePreview
f:com.intellij.codeInsight.hint.EditorFragmentComponent
- javax.swing.JPanel
- s:createEditorFragmentBorder(com.intellij.openapi.editor.Editor):javax.swing.border.CompoundBorder
- s:createEditorFragmentComponent(com.intellij.openapi.editor.Editor,I,I,Z,Z):com.intellij.codeInsight.hint.EditorFragmentComponent
- s:getAvailableVisualLinesAboveEditor(com.intellij.openapi.editor.Editor):I
- s:getBackgroundColor(com.intellij.openapi.editor.Editor):java.awt.Color
- s:getBackgroundColor(com.intellij.openapi.editor.Editor,Z):java.awt.Color
- s:showEditorFragmentHint(com.intellij.openapi.editor.Editor,com.intellij.openapi.util.TextRange,Z,Z):com.intellij.ui.LightweightHint
com.intellij.codeInsight.hint.EditorHintListener
- sf:TOPIC:com.intellij.util.messages.Topic
- hintShown(com.intellij.openapi.editor.Editor,com.intellij.ui.LightweightHint,I,com.intellij.ui.HintHint):V
c:com.intellij.codeInsight.hint.HintManagerImpl
- com.intellij.codeInsight.hint.HintManager
- <init>():V
- s:adjustEditorHintPosition(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,java.awt.Point,S):V
- canShowQuestionAction(com.intellij.codeInsight.hint.QuestionAction):Z
- cleanup():V
- s:createHintHint(com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.ui.LightweightHint,S):com.intellij.ui.HintHint
- s:createHintHint(com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.ui.LightweightHint,S,Z):com.intellij.ui.HintHint
- s:getExternalComponent(com.intellij.openapi.editor.Editor):javax.swing.JComponent
- s:getHintPosition(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.LogicalPosition,S):java.awt.Point
- s:getHintPosition(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.VisualPosition,S):java.awt.Point
- s:getHintPosition(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,com.intellij.ui.awt.RelativePoint,S):java.awt.Point
- getHintPosition(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,S):java.awt.Point
- s:getInstanceImpl():com.intellij.codeInsight.hint.HintManagerImpl
- s:getPublisher():com.intellij.codeInsight.hint.EditorHintListener
- hasShownHintsThatWillHideByOtherHint(Z):Z
- hideAllHints():V
- hideHints(I,Z,Z):Z
- performCurrentQuestionAction():Z
- setRequestFocusForNextHint(Z):V
- showEditorHint(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,java.awt.Point,I,I,Z):V
- showEditorHint(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,java.awt.Point,I,I,Z,com.intellij.ui.HintHint):V
- showEditorHint(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,java.awt.Point,I,I,Z,S):V
- showEditorHint(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,S,I,I,Z):V
- showErrorHint(com.intellij.openapi.editor.Editor,java.lang.String):V
- showErrorHint(com.intellij.openapi.editor.Editor,java.lang.String,I,I,S,I,I):V
- showErrorHint(com.intellij.openapi.editor.Editor,java.lang.String,S):V
- showGutterHint(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,I,I,I,I,Z,com.intellij.ui.HintHint):V
- showHint(javax.swing.JComponent,com.intellij.ui.awt.RelativePoint,I,I):V
- showHint(javax.swing.JComponent,com.intellij.ui.awt.RelativePoint,I,I,java.lang.Runnable):V
- showInformationHint(com.intellij.openapi.editor.Editor,java.lang.String,javax.swing.event.HyperlinkListener):V
- showInformationHint(com.intellij.openapi.editor.Editor,java.lang.String,S):V
- showInformationHint(com.intellij.openapi.editor.Editor,javax.swing.JComponent):V
- showInformationHint(com.intellij.openapi.editor.Editor,javax.swing.JComponent,java.lang.Runnable):V
- showInformationHint(com.intellij.openapi.editor.Editor,javax.swing.JComponent,S,java.lang.Runnable):V
- showQuestionHint(com.intellij.openapi.editor.Editor,I,I,com.intellij.ui.LightweightHint,com.intellij.codeInsight.hint.QuestionAction,S):V
- showQuestionHint(com.intellij.openapi.editor.Editor,java.awt.Point,I,I,com.intellij.ui.LightweightHint,com.intellij.codeInsight.hint.QuestionAction,S):V
- showQuestionHint(com.intellij.openapi.editor.Editor,java.lang.String,I,I,com.intellij.codeInsight.hint.QuestionAction):V
- showSuccessHint(com.intellij.openapi.editor.Editor,java.lang.String,javax.swing.event.HyperlinkListener):V
- showSuccessHint(com.intellij.openapi.editor.Editor,java.lang.String,S):V
- s:updateLocation(com.intellij.ui.LightweightHint,com.intellij.openapi.editor.Editor,java.awt.Point):V
com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
f:com.intellij.codeInsight.hint.HintUtil
- sf:ERROR_COLOR_KEY:com.intellij.openapi.editor.colors.ColorKey
- sf:HINT_BORDER_COLOR_KEY:com.intellij.openapi.editor.colors.ColorKey
- sf:INFORMATION_BORDER_COLOR:java.awt.Color
- sf:INFORMATION_COLOR:java.awt.Color
- sf:INFORMATION_COLOR_KEY:com.intellij.openapi.editor.colors.ColorKey
- sf:PROMOTION_PANE_KEY:com.intellij.openapi.editor.colors.ColorKey
- sf:QUESTION_COLOR_KEY:com.intellij.openapi.editor.colors.ColorKey
- sf:QUESTION_UNDERSCORE_COLOR:java.awt.Color
- sf:RECENT_LOCATIONS_SELECTION_KEY:com.intellij.openapi.editor.colors.ColorKey
- sf:WARNING_COLOR_KEY:com.intellij.openapi.editor.colors.ColorKey
- s:createAdComponent(java.lang.String,javax.swing.border.Border,I):javax.swing.JLabel
- s:createErrorLabel(java.lang.String):javax.swing.JComponent
- s:createErrorLabel(java.lang.String,javax.swing.event.HyperlinkListener,java.awt.event.MouseListener):javax.swing.JComponent
- s:createHintBorder():javax.swing.border.CompoundBorder
- s:createInformationComponent():com.intellij.ui.SimpleColoredComponent
- s:createInformationLabel(com.intellij.ui.SimpleColoredText):javax.swing.JComponent
- s:createInformationLabel(com.intellij.ui.SimpleColoredText,javax.swing.Icon):javax.swing.JComponent
- s:createInformationLabel(java.lang.String):javax.swing.JComponent
- s:createInformationLabel(java.lang.String,javax.swing.event.HyperlinkListener,java.awt.event.MouseListener,com.intellij.openapi.util.Ref):javax.swing.JComponent
- s:createQuestionLabel(java.lang.String):javax.swing.JComponent
- s:createQuestionLabel(java.lang.String,javax.swing.Icon):javax.swing.JComponent
- s:createSuccessLabel(java.lang.String):javax.swing.JComponent
- s:createSuccessLabel(java.lang.String,javax.swing.event.HyperlinkListener):javax.swing.JComponent
- s:createWarningLabel(java.lang.String):javax.swing.JComponent
- s:createWarningLabel(java.lang.String,javax.swing.event.HyperlinkListener,java.awt.event.MouseListener):javax.swing.JComponent
- s:getErrorColor():java.awt.Color
- s:getHintBorderColor():java.awt.Color
- s:getHintIcon(javax.swing.JComponent):javax.swing.Icon
- s:getHintLabel(javax.swing.JComponent):java.lang.String
- s:getInformationColor():java.awt.Color
- s:getInformationHint():com.intellij.ui.HintHint
- s:getQuestionColor():java.awt.Color
- s:getRecentLocationsSelectionColor(com.intellij.openapi.editor.colors.EditorColorsScheme):java.awt.Color
- s:getSuccessHint():com.intellij.ui.HintHint
- s:getWarningColor():java.awt.Color
- s:installInformationProperties(java.awt.Component):java.awt.Component
- s:prepareHintText(com.intellij.util.ui.Html,com.intellij.ui.HintHint):java.lang.String
- s:prepareHintText(java.lang.String,com.intellij.ui.HintHint):java.lang.String
c:com.intellij.codeInsight.hint.LineTooltipRenderer
- com.intellij.util.ui.update.ComparableObject$Impl
- com.intellij.codeInsight.hint.TooltipRenderer
- sf:CONTENT_PADDING:I
- pf:myCurrentWidth:I
- p:myText:java.lang.String
- <init>(java.lang.String,I,java.lang.Object[]):V
- <init>(java.lang.String,java.lang.Object[]):V
- addBelow(java.lang.String):V
- p:canAutoHideOn(com.intellij.ide.TooltipEvent):Z
- createHint(com.intellij.openapi.editor.Editor,java.awt.Point,Z,com.intellij.codeInsight.hint.TooltipGroup,com.intellij.ui.HintHint,Z,Z,com.intellij.codeInsight.hint.LineTooltipRenderer$TooltipReloader):com.intellij.ui.LightweightHint
- createRenderer(java.lang.String,I):com.intellij.codeInsight.hint.LineTooltipRenderer
- p:dressDescription(com.intellij.openapi.editor.Editor,java.lang.String,Z):java.lang.String
- p:fillPanel(com.intellij.openapi.editor.Editor,javax.swing.JPanel,com.intellij.ui.LightweightHint,com.intellij.ui.HintHint,java.util.List,com.intellij.codeInsight.hint.LineTooltipRenderer$TooltipReloader,Z):V
- getText():java.lang.String
- ps:isActiveHtml(java.lang.String):Z
- p:isContentAction(java.lang.String):Z
- show(com.intellij.openapi.editor.Editor,java.awt.Point,Z,com.intellij.codeInsight.hint.TooltipGroup,com.intellij.ui.HintHint):com.intellij.ui.LightweightHint
com.intellij.codeInsight.hint.LineTooltipRenderer$TooltipReloader
- a:reload(Z):V
com.intellij.codeInsight.hint.ScrollAwareHint
- a:editorScrolled():V
f:com.intellij.codeInsight.hint.TooltipController
- <init>():V
- cancelTooltip(com.intellij.codeInsight.hint.TooltipGroup,java.awt.event.MouseEvent,Z):V
- cancelTooltips():V
- s:getInstance():com.intellij.codeInsight.hint.TooltipController
- hide(com.intellij.ui.LightweightHint):V
- resetCurrent():V
- shouldSurvive(java.awt.event.MouseEvent):Z
- showTooltip(com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.codeInsight.hint.TooltipRenderer,Z,com.intellij.codeInsight.hint.TooltipGroup):V
- showTooltip(com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.codeInsight.hint.TooltipRenderer,Z,com.intellij.codeInsight.hint.TooltipGroup,com.intellij.ui.HintHint):V
- showTooltip(com.intellij.openapi.editor.Editor,java.awt.Point,java.lang.String,I,Z,com.intellij.codeInsight.hint.TooltipGroup):V
- showTooltip(com.intellij.openapi.editor.Editor,java.awt.Point,java.lang.String,I,Z,com.intellij.codeInsight.hint.TooltipGroup,com.intellij.ui.HintHint):V
- showTooltip(com.intellij.openapi.editor.Editor,java.awt.Point,java.lang.String,Z,com.intellij.codeInsight.hint.TooltipGroup):V
- showTooltipByMouseMove(com.intellij.openapi.editor.Editor,com.intellij.ui.awt.RelativePoint,com.intellij.codeInsight.hint.TooltipRenderer,Z,com.intellij.codeInsight.hint.TooltipGroup,com.intellij.ui.HintHint):com.intellij.ui.LightweightHint
f:com.intellij.codeInsight.hint.TooltipGroup
- java.lang.Comparable
- <init>(java.lang.String,I):V
- compareTo(com.intellij.codeInsight.hint.TooltipGroup):I
f:com.intellij.codeInsight.hint.TooltipLinkHandlerEP
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- handlerClassName:java.lang.String
- prefix:java.lang.String
- <init>():V
- s:getDescription(java.lang.String,com.intellij.openapi.editor.Editor):java.lang.String
- s:getDescriptionTitle(java.lang.String,com.intellij.openapi.editor.Editor):java.lang.String
- s:handleLink(java.lang.String,com.intellij.openapi.editor.Editor):Z
com.intellij.codeInsight.hint.TooltipRenderer
- a:show(com.intellij.openapi.editor.Editor,java.awt.Point,Z,com.intellij.codeInsight.hint.TooltipGroup,com.intellij.ui.HintHint):com.intellij.ui.LightweightHint
f:com.intellij.codeInsight.hints.filtering.AnyParamMatcher
- com.intellij.codeInsight.hints.filtering.ParamMatcher
- sf:INSTANCE:com.intellij.codeInsight.hints.filtering.AnyParamMatcher
- isMatching(java.util.List):Z
f:com.intellij.codeInsight.hints.filtering.Matcher
- com.intellij.codeInsight.hints.filtering.MethodMatcher
- <init>(com.intellij.codeInsight.hints.filtering.StringMatcher,com.intellij.codeInsight.hints.filtering.ParamMatcher):V
- isMatching(java.lang.String,java.util.List):Z
f:com.intellij.codeInsight.hints.filtering.MatcherConstructor
- sf:INSTANCE:com.intellij.codeInsight.hints.filtering.MatcherConstructor
- f:createMatcher(java.lang.String):com.intellij.codeInsight.hints.filtering.Matcher
- f:extract(java.lang.String):com.intellij.openapi.util.Couple
com.intellij.codeInsight.hints.filtering.MethodMatcher
- a:isMatching(java.lang.String,java.util.List):Z
com.intellij.codeInsight.hints.filtering.ParamMatcher
- a:isMatching(java.util.List):Z
com.intellij.codeInsight.hints.filtering.StringMatcher
- a:isMatching(java.lang.String):Z
f:com.intellij.codeInsight.hints.filtering.StringMatcherBuilder
- sf:INSTANCE:com.intellij.codeInsight.hints.filtering.StringMatcherBuilder
- f:create(java.lang.String):com.intellij.codeInsight.hints.filtering.StringMatcher
f:com.intellij.codeInsight.hints.filtering.StringMatcherImpl
- com.intellij.codeInsight.hints.filtering.StringMatcher
- <init>(kotlin.jvm.functions.Function1):V
- isMatching(java.lang.String):Z
f:com.intellij.codeInsight.hints.filtering.StringParamMatcher
- com.intellij.codeInsight.hints.filtering.ParamMatcher
- <init>(java.util.List):V
- isMatching(java.util.List):Z
a:com.intellij.codeInsight.lookup.CharFilter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:acceptChar(C,I,com.intellij.codeInsight.lookup.Lookup):com.intellij.codeInsight.lookup.CharFilter$Result
e:com.intellij.codeInsight.lookup.CharFilter$Result
- java.lang.Enum
- sf:ADD_TO_PREFIX:com.intellij.codeInsight.lookup.CharFilter$Result
- sf:HIDE_LOOKUP:com.intellij.codeInsight.lookup.CharFilter$Result
- sf:SELECT_ITEM_AND_FINISH_LOOKUP:com.intellij.codeInsight.lookup.CharFilter$Result
- s:valueOf(java.lang.String):com.intellij.codeInsight.lookup.CharFilter$Result
- s:values():com.intellij.codeInsight.lookup.CharFilter$Result[]
com.intellij.codeInsight.template.impl.TemplateColors
- sf:TEMPLATE_VARIABLE_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
com.intellij.configurationStore.BatchUpdateListener
- sf:TOPIC:com.intellij.util.messages.Topic
- onBatchUpdateFinished():V
- onBatchUpdateStarted():V
f:com.intellij.configurationStore.StorageUtilKt
- sf:NOTIFICATION_GROUP_ID:java.lang.String
- sf:getDEBUG_LOG():java.lang.String
- sf:setDEBUG_LOG(java.lang.String):V
f:com.intellij.configurationStore.StoreUtil
- sf:INSTANCE:com.intellij.configurationStore.StoreUtil
- sf:saveDocumentsAndProjectSettings(com.intellij.openapi.project.Project):V
- sf:saveSettings(com.intellij.openapi.components.ComponentManager):V
- sf:saveSettings(com.intellij.openapi.components.ComponentManager,Z):V
- bs:saveSettings$default(com.intellij.openapi.components.ComponentManager,Z,I,java.lang.Object):V
f:com.intellij.configurationStore.StoreUtilKt
- sf:getDefaultStoragePathSpec(com.intellij.openapi.components.State):java.lang.String
- sf:getDefaultStoragePathSpec(java.lang.Class):java.lang.String
- sf:getStateSpec(com.intellij.openapi.components.PersistentStateComponent):com.intellij.openapi.components.State
- sf:getStateSpec(java.lang.Class):com.intellij.openapi.components.State
- sf:getStateSpecOrError(java.lang.Class):com.intellij.openapi.components.State
- sf:runInAllowSaveMode(Z,kotlin.jvm.functions.Function0):V
- bs:runInAllowSaveMode$default(Z,kotlin.jvm.functions.Function0,I,java.lang.Object):V
- sf:runInAutoSaveDisabledMode(kotlin.jvm.functions.Function0):java.lang.Object
- sf:saveProjectsAndApp(Z,com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- bs:saveProjectsAndApp$default(Z,com.intellij.openapi.project.Project,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- sf:saveSettings(com.intellij.openapi.components.ComponentManager,Z,kotlin.coroutines.Continuation):java.lang.Object
- bs:saveSettings$default(com.intellij.openapi.components.ComponentManager,Z,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
f:com.intellij.configurationStore.UnknownMacroNotification
- com.intellij.notification.Notification
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.notification.NotificationType,com.intellij.notification.NotificationListener,java.util.Collection):V
- f:getMacros():java.util.Collection
f:com.intellij.conversion.CannotConvertException
- java.lang.RuntimeException
- <init>(java.lang.String,java.lang.Throwable):V
- b:<init>(java.lang.String,java.lang.Throwable,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.lang.Throwable):V
com.intellij.conversion.ConversionListener
- cannotWriteToFiles(java.util.List):V
- a:conversionNeeded():V
- a:error(java.lang.String):V
- successfullyConverted(java.nio.file.Path):V
com.intellij.conversion.ConversionResult
- a:conversionNotNeeded():Z
- a:openingIsCanceled():Z
- a:postStartupActivity(com.intellij.openapi.project.Project):V
a:com.intellij.conversion.ConversionService
- sf:Companion:com.intellij.conversion.ConversionService$Companion
- <init>():V
- f:blockingConvertSilently(java.nio.file.Path,com.intellij.conversion.ConversionListener):com.intellij.conversion.ConversionResult
- a:convert(java.nio.file.Path,kotlin.coroutines.Continuation):java.lang.Object
- a:convertModule(com.intellij.openapi.project.Project,java.nio.file.Path):com.intellij.conversion.ConversionResult
- a:convertSilently(java.nio.file.Path,com.intellij.conversion.ConversionListener,kotlin.coroutines.Continuation):java.lang.Object
- sf:getInstance():com.intellij.conversion.ConversionService
- a:saveConversionResult(java.nio.file.Path,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.conversion.ConversionService$Companion
- f:getInstance():com.intellij.conversion.ConversionService
f:com.intellij.credentialStore.CredentialPromptDialog
- sf:askCredentials(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.credentialStore.CredentialAttributes):com.intellij.credentialStore.CredentialRequestResult
- sf:askCredentials(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.credentialStore.CredentialAttributes,Z):com.intellij.credentialStore.CredentialRequestResult
- sf:askCredentials(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.credentialStore.CredentialAttributes,Z,Z):com.intellij.credentialStore.CredentialRequestResult
- sf:askCredentials(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.credentialStore.CredentialAttributes,Z,Z,Z):com.intellij.credentialStore.CredentialRequestResult
- sf:askCredentials(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.credentialStore.CredentialAttributes,Z,Z,Z,java.lang.String):com.intellij.credentialStore.CredentialRequestResult
- bs:askCredentials$default(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.credentialStore.CredentialAttributes,Z,Z,Z,java.lang.String,I,java.lang.Object):com.intellij.credentialStore.CredentialRequestResult
- sf:askPassword(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.credentialStore.CredentialAttributes):java.lang.String
- sf:askPassword(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.credentialStore.CredentialAttributes,Z):java.lang.String
- sf:askPassword(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.credentialStore.CredentialAttributes,Z,java.lang.String):java.lang.String
- bs:askPassword$default(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.credentialStore.CredentialAttributes,Z,java.lang.String,I,java.lang.Object):java.lang.String
- sf:getTrimmedChars(javax.swing.JPasswordField):C[]
f:com.intellij.credentialStore.RememberCheckBoxState
- sf:INSTANCE:com.intellij.credentialStore.RememberCheckBoxState
- f:createCheckBox(java.lang.String):javax.swing.JCheckBox
- f:isSelected():Z
- sf:update(javax.swing.JCheckBox):V
c:com.intellij.diagnostic.ITNReporter
- com.intellij.openapi.diagnostic.ErrorReportSubmitter
- getPrivacyNoticeText():java.lang.String
- getReportActionText():java.lang.String
- showErrorInRelease(com.intellij.openapi.diagnostic.IdeaLoggingEvent):Z
- submit(com.intellij.openapi.diagnostic.IdeaLoggingEvent[],java.lang.String,java.awt.Component,com.intellij.util.Consumer):Z
c:com.intellij.diagnostic.IdeErrorsDialog
- com.intellij.openapi.actionSystem.UiDataProvider
- com.intellij.openapi.ui.DialogWrapper
- java.util.EventListener
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createLeftSideActions():javax.swing.Action[]
- p:createNorthPanel():javax.swing.JComponent
- p:dispose():V
- p:getDimensionServiceKey():java.lang.String
- newEntryAdded():V
- poolCleared():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- p:updateOnSubmit():V
f:com.intellij.diagnostic.JetBrainsMarketplaceErrorReportSubmitter
- com.intellij.diagnostic.ITNReporter
- <init>():V
- getPrivacyNoticeText():java.lang.String
- getReportActionText():java.lang.String
f:com.intellij.diagnostic.ReportMessages
- sf:ERROR_REPORT:java.lang.String
- sf:GROUP:com.intellij.notification.NotificationGroup
- s:getErrorReport():java.lang.String
f:com.intellij.diagnostic.VMOptions
- s:canWriteOptions():Z
- s:parseMemoryOption(java.lang.String):J
- s:read():java.lang.String
- s:readOption(com.intellij.diagnostic.VMOptions$MemoryKind,Z):I
- s:readOption(java.lang.String,Z):java.lang.String
- s:readOptions(java.lang.String,Z):java.util.List
- s:setOption(com.intellij.diagnostic.VMOptions$MemoryKind,I):V
- s:setOption(java.lang.String,java.lang.String):V
- s:setOptions(java.util.List):V
- s:setProperty(java.lang.String,java.lang.String):V
- s:writeOption(java.lang.String,java.lang.String,java.lang.String):V
e:com.intellij.diagnostic.VMOptions$MemoryKind
- java.lang.Enum
- sf:CODE_CACHE:com.intellij.diagnostic.VMOptions$MemoryKind
- sf:DIRECT_BUFFERS:com.intellij.diagnostic.VMOptions$MemoryKind
- sf:HEAP:com.intellij.diagnostic.VMOptions$MemoryKind
- sf:METASPACE:com.intellij.diagnostic.VMOptions$MemoryKind
- sf:MIN_HEAP:com.intellij.diagnostic.VMOptions$MemoryKind
- f:option:java.lang.String
- f:optionName:java.lang.String
- label():java.lang.String
- s:valueOf(java.lang.String):com.intellij.diagnostic.VMOptions$MemoryKind
- s:values():com.intellij.diagnostic.VMOptions$MemoryKind[]
c:com.intellij.diagnostic.WindowsDefenderChecker
- <init>():V
- f:excludeProjectPaths(com.intellij.openapi.project.Project,java.util.List):Z
- f:filterDevDrivePaths(java.util.List):java.util.List
- getConfigurationInstructionsUrl():java.lang.String
- s:getInstance():com.intellij.diagnostic.WindowsDefenderChecker
- f:getPathsToExclude(com.intellij.openapi.project.Project):java.util.List
- f:getPathsToExclude(com.intellij.openapi.project.Project,java.nio.file.Path):java.util.List
- f:ignoreStatusCheck(com.intellij.openapi.project.Project,Z):V
- f:isRealTimeProtectionEnabled():java.lang.Boolean
- f:isStatusCheckIgnored(com.intellij.openapi.project.Project):Z
- f:isUntrustworthyLocation(java.nio.file.Path):Z
com.intellij.diagnostic.WindowsDefenderChecker$Extension
- a:getPaths(com.intellij.openapi.project.Project,java.nio.file.Path):java.util.Collection
f:com.intellij.diagnostic.hprof.action.InternalNonuserInvokedHeapDumpSnapshotAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
f:com.intellij.diagnostic.hprof.action.SystemTempFilenameSupplier
- <init>():V
- getTempFilePath(java.lang.String):java.nio.file.Path
f:com.intellij.diagnostic.hprof.classstore.ThreadInfo
- <init>(java.util.List):V
- f:getFrames():java.util.List
f:com.intellij.diagnostic.hprof.parser.ConstantPoolEntry
- <init>(I,com.intellij.diagnostic.hprof.parser.Type,J):V
- f:component1():I
- f:component2():com.intellij.diagnostic.hprof.parser.Type
- f:component3():J
- f:copy(I,com.intellij.diagnostic.hprof.parser.Type,J):com.intellij.diagnostic.hprof.parser.ConstantPoolEntry
- bs:copy$default(com.intellij.diagnostic.hprof.parser.ConstantPoolEntry,I,com.intellij.diagnostic.hprof.parser.Type,J,I,java.lang.Object):com.intellij.diagnostic.hprof.parser.ConstantPoolEntry
- equals(java.lang.Object):Z
- f:getConstantPoolIndex():I
- f:getType():com.intellij.diagnostic.hprof.parser.Type
- f:getValue():J
- hashCode():I
c:com.intellij.diagnostic.hprof.parser.HProfVisitor
- visitorContext:com.intellij.diagnostic.hprof.parser.VisitorContext
- <init>():V
- f:disable(com.intellij.diagnostic.hprof.parser.HeapDumpRecordType):V
- f:disable(com.intellij.diagnostic.hprof.parser.RecordType):V
- f:disableAll():V
- f:enable(com.intellij.diagnostic.hprof.parser.HeapDumpRecordType):V
- f:enable(com.intellij.diagnostic.hprof.parser.RecordType):V
- f:getHeapRecordOffset():J
- f:getSizeOfID():I
- f:getVisitorContext():com.intellij.diagnostic.hprof.parser.VisitorContext
- f:isEnabled(com.intellij.diagnostic.hprof.parser.HeapDumpRecordType):Z
- f:isEnabled(com.intellij.diagnostic.hprof.parser.RecordType):Z
- postVisit():V
- preVisit():V
- f:setVisitorContext(com.intellij.diagnostic.hprof.parser.VisitorContext):V
- visitAllocSites():V
- visitCPUSamples():V
- visitClassDump(J,J,J,J,J,com.intellij.diagnostic.hprof.parser.ConstantPoolEntry[],com.intellij.diagnostic.hprof.parser.StaticFieldEntry[],com.intellij.diagnostic.hprof.parser.InstanceFieldEntry[]):V
- visitControlSettings():V
- visitEndThread(J):V
- visitHeapDump():V
- visitHeapDumpEnd():V
- visitHeapSummary(J,J,J,J):V
- visitInstanceDump(J,J,J,java.nio.ByteBuffer):V
- visitLoadClass(J,J,J,J):V
- visitObjectArrayDump(J,J,J,J[]):V
- visitPrimitiveArrayDump(J,J,J,com.intellij.diagnostic.hprof.parser.Type,java.nio.ByteBuffer):V
- visitRootGlobalJNI(J,J):V
- visitRootJavaFrame(J,J,J):V
- visitRootLocalJNI(J,J,J):V
- visitRootMonitorUsed(J):V
- visitRootNativeStack(J,J):V
- visitRootStickyClass(J):V
- visitRootThreadBlock(J,J):V
- visitRootThreadObject(J,J,J):V
- visitRootUnknown(J):V
- visitStackFrame(J,J,J,J,J,I):V
- visitStackTrace(J,J,I,J[]):V
- visitStartThread():V
- visitStringInUTF8(J,java.lang.String):V
- visitUnloadClass(J):V
e:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- java.lang.Enum
- sf:ClassDump:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:Companion:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType$Companion
- sf:InstanceDump:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:NotInitialized:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:ObjectArrayDump:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:PrimitiveArrayDump:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:RootGlobalJNI:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:RootJavaFrame:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:RootLocalJNI:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:RootMonitorUsed:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:RootNativeStack:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:RootStickyClass:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:RootThreadBlock:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:RootThreadObject:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- sf:RootUnknown:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- s:getEntries():kotlin.enums.EnumEntries
- f:getValue():I
- s:valueOf(java.lang.String):com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
- s:values():com.intellij.diagnostic.hprof.parser.HeapDumpRecordType[]
f:com.intellij.diagnostic.hprof.parser.HeapDumpRecordType$Companion
- f:fromInt(I):com.intellij.diagnostic.hprof.parser.HeapDumpRecordType
f:com.intellij.diagnostic.hprof.parser.InstanceFieldEntry
- <init>(J,com.intellij.diagnostic.hprof.parser.Type):V
- f:component1():J
- f:component2():com.intellij.diagnostic.hprof.parser.Type
- f:copy(J,com.intellij.diagnostic.hprof.parser.Type):com.intellij.diagnostic.hprof.parser.InstanceFieldEntry
- bs:copy$default(com.intellij.diagnostic.hprof.parser.InstanceFieldEntry,J,com.intellij.diagnostic.hprof.parser.Type,I,java.lang.Object):com.intellij.diagnostic.hprof.parser.InstanceFieldEntry
- equals(java.lang.Object):Z
- f:getFieldNameStringId():J
- f:getType():com.intellij.diagnostic.hprof.parser.Type
- hashCode():I
e:com.intellij.diagnostic.hprof.parser.RecordType
- java.lang.Enum
- sf:AllocSites:com.intellij.diagnostic.hprof.parser.RecordType
- sf:CPUSamples:com.intellij.diagnostic.hprof.parser.RecordType
- sf:Companion:com.intellij.diagnostic.hprof.parser.RecordType$Companion
- sf:ControlSettings:com.intellij.diagnostic.hprof.parser.RecordType
- sf:EndThread:com.intellij.diagnostic.hprof.parser.RecordType
- sf:HeapDump:com.intellij.diagnostic.hprof.parser.RecordType
- sf:HeapDumpEnd:com.intellij.diagnostic.hprof.parser.RecordType
- sf:HeapDumpSegment:com.intellij.diagnostic.hprof.parser.RecordType
- sf:HeapSummary:com.intellij.diagnostic.hprof.parser.RecordType
- sf:LoadClass:com.intellij.diagnostic.hprof.parser.RecordType
- sf:NotInitialized:com.intellij.diagnostic.hprof.parser.RecordType
- sf:StackFrame:com.intellij.diagnostic.hprof.parser.RecordType
- sf:StackTrace:com.intellij.diagnostic.hprof.parser.RecordType
- sf:StartThread:com.intellij.diagnostic.hprof.parser.RecordType
- sf:StringInUTF8:com.intellij.diagnostic.hprof.parser.RecordType
- sf:UnloadClass:com.intellij.diagnostic.hprof.parser.RecordType
- s:getEntries():kotlin.enums.EnumEntries
- f:getValue():I
- s:valueOf(java.lang.String):com.intellij.diagnostic.hprof.parser.RecordType
- s:values():com.intellij.diagnostic.hprof.parser.RecordType[]
f:com.intellij.diagnostic.hprof.parser.RecordType$Companion
- f:fromInt(I):com.intellij.diagnostic.hprof.parser.RecordType
f:com.intellij.diagnostic.hprof.parser.StaticFieldEntry
- <init>(J,com.intellij.diagnostic.hprof.parser.Type,J):V
- f:component1():J
- f:component2():com.intellij.diagnostic.hprof.parser.Type
- f:component3():J
- f:copy(J,com.intellij.diagnostic.hprof.parser.Type,J):com.intellij.diagnostic.hprof.parser.StaticFieldEntry
- bs:copy$default(com.intellij.diagnostic.hprof.parser.StaticFieldEntry,J,com.intellij.diagnostic.hprof.parser.Type,J,I,java.lang.Object):com.intellij.diagnostic.hprof.parser.StaticFieldEntry
- equals(java.lang.Object):Z
- f:getFieldNameStringId():J
- f:getType():com.intellij.diagnostic.hprof.parser.Type
- f:getValue():J
- hashCode():I
e:com.intellij.diagnostic.hprof.parser.Type
- java.lang.Enum
- sf:BOOLEAN:com.intellij.diagnostic.hprof.parser.Type
- sf:BYTE:com.intellij.diagnostic.hprof.parser.Type
- sf:CHAR:com.intellij.diagnostic.hprof.parser.Type
- sf:Companion:com.intellij.diagnostic.hprof.parser.Type$Companion
- sf:DOUBLE:com.intellij.diagnostic.hprof.parser.Type
- sf:FLOAT:com.intellij.diagnostic.hprof.parser.Type
- sf:INT:com.intellij.diagnostic.hprof.parser.Type
- sf:LONG:com.intellij.diagnostic.hprof.parser.Type
- sf:OBJECT:com.intellij.diagnostic.hprof.parser.Type
- sf:SHORT:com.intellij.diagnostic.hprof.parser.Type
- f:getClassNameOfPrimitiveArray():java.lang.String
- s:getEntries():kotlin.enums.EnumEntries
- f:getSize():I
- f:getTypeId():I
- s:valueOf(java.lang.String):com.intellij.diagnostic.hprof.parser.Type
- s:values():com.intellij.diagnostic.hprof.parser.Type[]
f:com.intellij.diagnostic.hprof.parser.Type$Companion
- f:getType(I):com.intellij.diagnostic.hprof.parser.Type
- f:getType(java.lang.String):com.intellij.diagnostic.hprof.parser.Type
com.intellij.diagnostic.hprof.parser.VisitorContext
- a:getCurrentHeapRecordOffset():J
- a:getIdSize():I
f:com.intellij.diagnostic.hprof.util.AnalysisReport
- <init>():V
- <init>(java.lang.StringBuilder,java.lang.StringBuilder):V
- b:<init>(java.lang.StringBuilder,java.lang.StringBuilder,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getMainReport():java.lang.StringBuilder
- f:getMetaInfo():java.lang.StringBuilder
a:com.intellij.diagnostic.hprof.util.HProfReadBuffer
- java.lang.AutoCloseable
- <init>():V
- a:get():B
- a:get(B[]):V
- a:getByteBuffer(I):java.nio.ByteBuffer
- getId():J
- f:getIdSize():I
- a:getInt():I
- a:getLong():J
- f:getRawId():J
- a:getShort():S
- f:getUTF8String():java.lang.String
- f:getUnsignedByte():I
- f:getUnsignedInt():J
- f:getUnsignedShort():I
- a:isEof():Z
- a:position():J
- a:position(J):V
- f:setIdSize(I):V
- f:skip(I):V
f:com.intellij.diagnostic.hprof.util.HeapReportUtils
- sf:INSTANCE:com.intellij.diagnostic.hprof.util.HeapReportUtils
- sf:STRING_PADDING_FOR_COUNT:I
- sf:STRING_PADDING_FOR_SIZE:I
- f:sectionHeader(java.lang.String):java.lang.String
- f:toPaddedShortStringAsCount(J):java.lang.String
- f:toPaddedShortStringAsSize(J):java.lang.String
- f:toShortStringAsCount(J):java.lang.String
- f:toShortStringAsSize(J):java.lang.String
f:com.intellij.diagnostic.hprof.visitors.CollectRootReasonsVisitor
- com.intellij.diagnostic.hprof.parser.HProfVisitor
- <init>(it.unimi.dsi.fastutil.longs.Long2ObjectMap):V
- f:getRoots():it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap
- preVisit():V
- visitRootGlobalJNI(J,J):V
- visitRootJavaFrame(J,J,J):V
- visitRootLocalJNI(J,J,J):V
- visitRootMonitorUsed(J):V
- visitRootNativeStack(J,J):V
- visitRootStickyClass(J):V
- visitRootThreadBlock(J,J):V
- visitRootThreadObject(J,J,J):V
- visitRootUnknown(J):V
f:com.intellij.diagnostic.hprof.visitors.CollectThreadInfoVisitor
- com.intellij.diagnostic.hprof.parser.HProfVisitor
- <init>(it.unimi.dsi.fastutil.longs.Long2ObjectMap,it.unimi.dsi.fastutil.longs.Long2ObjectMap):V
- preVisit():V
- visitLoadClass(J,J,J,J):V
- visitStackFrame(J,J,J,J,J,I):V
- visitStackTrace(J,J,I,J[]):V
f:com.intellij.diagnostic.hprof.visitors.CompositeVisitor
- com.intellij.diagnostic.hprof.parser.HProfVisitor
- <init>(com.intellij.diagnostic.hprof.parser.HProfVisitor[]):V
- postVisit():V
- preVisit():V
- visitAllocSites():V
- visitCPUSamples():V
- visitClassDump(J,J,J,J,J,com.intellij.diagnostic.hprof.parser.ConstantPoolEntry[],com.intellij.diagnostic.hprof.parser.StaticFieldEntry[],com.intellij.diagnostic.hprof.parser.InstanceFieldEntry[]):V
- visitControlSettings():V
- visitEndThread(J):V
- visitHeapDump():V
- visitHeapDumpEnd():V
- visitHeapSummary(J,J,J,J):V
- visitInstanceDump(J,J,J,java.nio.ByteBuffer):V
- visitLoadClass(J,J,J,J):V
- visitObjectArrayDump(J,J,J,J[]):V
- visitPrimitiveArrayDump(J,J,J,com.intellij.diagnostic.hprof.parser.Type,java.nio.ByteBuffer):V
- visitRootGlobalJNI(J,J):V
- visitRootJavaFrame(J,J,J):V
- visitRootLocalJNI(J,J,J):V
- visitRootMonitorUsed(J):V
- visitRootNativeStack(J,J):V
- visitRootStickyClass(J):V
- visitRootThreadBlock(J,J):V
- visitRootThreadObject(J,J,J):V
- visitRootUnknown(J):V
- visitStackFrame(J,J,J,J,J,I):V
- visitStackTrace(J,J,I,J[]):V
- visitStartThread():V
- visitStringInUTF8(J,java.lang.String):V
- visitUnloadClass(J):V
e:com.intellij.diagnostic.logs.DebugLogLevel
- java.lang.Enum
- sf:ALL:com.intellij.diagnostic.logs.DebugLogLevel
- sf:Companion:com.intellij.diagnostic.logs.DebugLogLevel$Companion
- sf:DEBUG:com.intellij.diagnostic.logs.DebugLogLevel
- sf:TRACE:com.intellij.diagnostic.logs.DebugLogLevel
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.diagnostic.logs.DebugLogLevel
- s:values():com.intellij.diagnostic.logs.DebugLogLevel[]
f:com.intellij.diagnostic.logs.DebugLogLevel$Companion
- f:serializer():kotlinx.serialization.KSerializer
f:com.intellij.diagnostic.logs.LogCategory
- sf:Companion:com.intellij.diagnostic.logs.LogCategory$Companion
- <init>(java.lang.String,com.intellij.diagnostic.logs.DebugLogLevel):V
- f:component1():java.lang.String
- f:component2():com.intellij.diagnostic.logs.DebugLogLevel
- f:copy(java.lang.String,com.intellij.diagnostic.logs.DebugLogLevel):com.intellij.diagnostic.logs.LogCategory
- bs:copy$default(com.intellij.diagnostic.logs.LogCategory,java.lang.String,com.intellij.diagnostic.logs.DebugLogLevel,I,java.lang.Object):com.intellij.diagnostic.logs.LogCategory
- equals(java.lang.Object):Z
- f:getCategory():java.lang.String
- f:getLevel():com.intellij.diagnostic.logs.DebugLogLevel
- hashCode():I
bc:com.intellij.diagnostic.logs.LogCategory$$serializer
- kotlinx.serialization.internal.GeneratedSerializer
- sf:INSTANCE:com.intellij.diagnostic.logs.LogCategory$$serializer
- f:childSerializers():kotlinx.serialization.KSerializer[]
- f:deserialize(kotlinx.serialization.encoding.Decoder):com.intellij.diagnostic.logs.LogCategory
- f:getDescriptor():kotlinx.serialization.descriptors.SerialDescriptor
- f:serialize(kotlinx.serialization.encoding.Encoder,com.intellij.diagnostic.logs.LogCategory):V
- typeParametersSerializers():kotlinx.serialization.KSerializer[]
f:com.intellij.diagnostic.logs.LogCategory$Companion
- f:serializer():kotlinx.serialization.KSerializer
f:com.intellij.diagnostic.logs.LogLevelConfigurationManager
- com.intellij.openapi.components.SerializablePersistentStateComponent
- sf:Companion:com.intellij.diagnostic.logs.LogLevelConfigurationManager$Companion
- <init>():V
- f:addCategories(java.util.List):V
- f:getCategories():java.util.List
- sf:getInstance():com.intellij.diagnostic.logs.LogLevelConfigurationManager
- loadState(com.intellij.diagnostic.logs.LogLevelConfigurationManager$State):V
- noStateLoaded():V
- f:setCategories(java.util.List):V
f:com.intellij.diagnostic.logs.LogLevelConfigurationManager$Companion
- f:getInstance():com.intellij.diagnostic.logs.LogLevelConfigurationManager
f:com.intellij.diagnostic.logs.LogLevelConfigurationManager$State
- sf:Companion:com.intellij.diagnostic.logs.LogLevelConfigurationManager$State$Companion
- f:categories:java.util.List
- <init>():V
- <init>(java.util.List):V
- b:<init>(java.util.List,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.util.List
- f:copy(java.util.List):com.intellij.diagnostic.logs.LogLevelConfigurationManager$State
- bs:copy$default(com.intellij.diagnostic.logs.LogLevelConfigurationManager$State,java.util.List,I,java.lang.Object):com.intellij.diagnostic.logs.LogLevelConfigurationManager$State
- equals(java.lang.Object):Z
- hashCode():I
bc:com.intellij.diagnostic.logs.LogLevelConfigurationManager$State$$serializer
- kotlinx.serialization.internal.GeneratedSerializer
- sf:INSTANCE:com.intellij.diagnostic.logs.LogLevelConfigurationManager$State$$serializer
- f:childSerializers():kotlinx.serialization.KSerializer[]
- f:deserialize(kotlinx.serialization.encoding.Decoder):com.intellij.diagnostic.logs.LogLevelConfigurationManager$State
- f:getDescriptor():kotlinx.serialization.descriptors.SerialDescriptor
- f:serialize(kotlinx.serialization.encoding.Encoder,com.intellij.diagnostic.logs.LogLevelConfigurationManager$State):V
- typeParametersSerializers():kotlinx.serialization.KSerializer[]
f:com.intellij.diagnostic.logs.LogLevelConfigurationManager$State$Companion
- f:serializer():kotlinx.serialization.KSerializer
f:com.intellij.errorreport.error.InternalEAPException
- java.lang.Exception
- <init>(java.lang.String):V
com.intellij.execution.RunManagerListener
- java.util.EventListener
- sf:TOPIC:com.intellij.util.messages.Topic
- beforeRunTasksChanged():V
- beginUpdate():V
- endUpdate():V
- runConfigurationAdded(com.intellij.execution.RunnerAndConfigurationSettings):V
- runConfigurationChanged(com.intellij.execution.RunnerAndConfigurationSettings):V
- runConfigurationChanged(com.intellij.execution.RunnerAndConfigurationSettings,java.lang.String):V
- runConfigurationRemoved(com.intellij.execution.RunnerAndConfigurationSettings):V
- runConfigurationSelected():V
- runConfigurationSelected(com.intellij.execution.RunnerAndConfigurationSettings):V
- stateLoaded(com.intellij.execution.RunManager,Z):V
f:com.intellij.execution.filters.ArgumentFileFilter
- com.intellij.execution.filters.Filter
- <init>():V
- <init>(java.lang.String,java.lang.String):V
- applyFilter(java.lang.String,I):com.intellij.execution.filters.Filter$Result
- f:setPath(java.lang.String):V
- f:setPath(java.lang.String,java.nio.charset.Charset):V
- bs:setPath$default(com.intellij.execution.filters.ArgumentFileFilter,java.lang.String,java.nio.charset.Charset,I,java.lang.Object):V
f:com.intellij.execution.impl.ConsoleViewUtil
- sf:EDITOR_IS_CONSOLE_HISTORY_VIEW:com.intellij.openapi.util.Key
- <init>():V
- s:computeConsoleFilters(com.intellij.execution.filters.ConsoleFilterProvider,com.intellij.openapi.project.Project,com.intellij.execution.ui.ConsoleView,com.intellij.psi.search.GlobalSearchScope):com.intellij.execution.filters.Filter[]
- s:computeConsoleFilters(com.intellij.openapi.project.Project,com.intellij.execution.ui.ConsoleView,com.intellij.psi.search.GlobalSearchScope):java.util.List
- s:computeInputFilter(com.intellij.execution.ui.ConsoleView,com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope):com.intellij.execution.filters.InputFilter
- s:enableReplaceActionForConsoleViewEditor(com.intellij.openapi.editor.Editor):V
- s:getContentTypeForToken(com.intellij.psi.tree.IElementType,com.intellij.openapi.fileTypes.SyntaxHighlighter):com.intellij.execution.ui.ConsoleViewContentType
- s:isConsoleViewEditor(com.intellij.openapi.editor.Editor):Z
- s:isReplaceActionEnabledForConsoleViewEditor(com.intellij.openapi.editor.Editor):Z
- s:printAsFileType(com.intellij.execution.ui.ConsoleView,java.lang.String,com.intellij.openapi.fileTypes.FileType):V
- s:printWithHighlighting(com.intellij.execution.ui.ConsoleView,java.lang.String,com.intellij.openapi.fileTypes.SyntaxHighlighter):V
- s:printWithHighlighting(com.intellij.execution.ui.ConsoleView,java.lang.String,com.intellij.openapi.fileTypes.SyntaxHighlighter,java.lang.Runnable):V
- s:printWithHighlighting(java.util.function.BiConsumer,java.lang.String,com.intellij.openapi.fileTypes.SyntaxHighlighter,java.lang.Runnable):V
- s:setupConsoleEditor(com.intellij.openapi.editor.ex.EditorEx,Z,Z):V
- s:setupConsoleEditor(com.intellij.openapi.project.Project,Z,Z):com.intellij.openapi.editor.ex.EditorEx
- s:setupLanguageConsoleEditor(com.intellij.openapi.editor.ex.EditorEx):V
- s:updateConsoleColorScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.colors.impl.DelegateColorScheme
- s:updateConsoleColorScheme(com.intellij.openapi.editor.colors.EditorColorsScheme,com.intellij.openapi.editor.ex.EditorEx):com.intellij.openapi.editor.colors.EditorColorsScheme
f:com.intellij.execution.impl.EditorHyperlinkSupport
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):V
- addHighlighter(I,I,com.intellij.openapi.editor.markup.TextAttributes):V
- addHighlighter(I,I,com.intellij.openapi.editor.markup.TextAttributes,I):V
- clearHyperlinks():V
- createHyperlink(I,I,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.execution.filters.HyperlinkInfo):com.intellij.openapi.editor.markup.RangeHighlighter
- createHyperlink(com.intellij.openapi.editor.markup.RangeHighlighter,com.intellij.execution.filters.HyperlinkInfo):V
- findAllHyperlinksOnLine(I):java.util.List
- s:get(com.intellij.openapi.editor.Editor):com.intellij.execution.impl.EditorHyperlinkSupport
- getHyperlinkAt(I):com.intellij.execution.filters.HyperlinkInfo
- s:getHyperlinkInfo(com.intellij.openapi.editor.markup.RangeHighlighter):com.intellij.execution.filters.HyperlinkInfo
- getHyperlinkInfoByEvent(com.intellij.openapi.editor.event.EditorMouseEvent):com.intellij.execution.filters.HyperlinkInfo
- getHyperlinkInfoByLineAndCol(I,I):com.intellij.execution.filters.HyperlinkInfo
- getHyperlinkInfoByPoint(java.awt.Point):com.intellij.execution.filters.HyperlinkInfo
- getHyperlinks():java.util.Map
- s:getLineText(com.intellij.openapi.editor.Document,I,Z):java.lang.String
- getLinkNavigationRunnable(com.intellij.openapi.editor.LogicalPosition):java.lang.Runnable
- s:getNextOccurrence(com.intellij.openapi.editor.Editor,I,com.intellij.util.Consumer):com.intellij.ide.OccurenceNavigator$OccurenceInfo
- highlightHyperlinks(com.intellij.execution.filters.Filter,I,I):V
- highlightHyperlinksLater(com.intellij.execution.filters.Filter,I,I,com.intellij.openapi.util.Expirable):V
- removeHyperlink(com.intellij.openapi.editor.markup.RangeHighlighter):V
- waitForPendingFilters(J):V
c:com.intellij.execution.impl.ExpirableTokenProvider
- <init>():V
- createExpirable():com.intellij.openapi.util.Expirable
- invalidateAll():V
c:com.intellij.execution.process.CommandOutputLogger
- com.intellij.execution.process.ProcessAdapter
- <init>(com.intellij.openapi.diagnostic.Logger):V
- onTextAvailable(com.intellij.execution.process.ProcessEvent,com.intellij.openapi.util.Key):V
f:com.intellij.execution.process.ProcessHandlerFactoryImpl
- com.intellij.execution.process.ProcessHandlerFactory
- <init>():V
- createColoredProcessHandler(com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.process.OSProcessHandler
- createProcessHandler(com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.process.OSProcessHandler
c:com.intellij.execution.wsl.WSLDistribution
- com.intellij.execution.wsl.AbstractWslDistribution
- sf:DEFAULT_WSL_MNT_ROOT:java.lang.String
- sf:DISTRIBUTION_PARAMETER:java.lang.String
- sf:EXEC_PARAMETER:java.lang.String
- sf:EXIT_CODE_PARAMETER:java.lang.String
- sf:WSL_EXE:java.lang.String
- p:testOverriddenShellPath:java.lang.String
- p:<init>(com.intellij.execution.wsl.WSLDistribution):V
- <init>(java.lang.String):V
- equals(java.lang.Object):Z
- executeOnWsl(I,java.lang.String[]):com.intellij.execution.process.ProcessOutput
- executeOnWsl(java.util.List,com.intellij.execution.wsl.WSLCommandLineOptions,I,com.intellij.util.Consumer):com.intellij.execution.process.ProcessOutput
- s:findWslExe():java.nio.file.Path
- getEnvironment():java.util.Map
- getEnvironmentVariable(java.lang.String):java.lang.String
- getExecutablePath():java.nio.file.Path
- f:getHostIpAddress():java.net.InetAddress
- getId():java.lang.String
- f:getMntRoot():java.lang.String
- getMsId():java.lang.String
- getPresentableName():java.lang.String
- p:getRunCommandLineParameter():java.lang.String
- getShellPath():java.lang.String
- f:getUserHome():java.lang.String
- getVersion():I
- getWindowsPath(java.lang.String):java.lang.String
- getWindowsPath(java.lang.String,java.util.function.Supplier):java.lang.String
- f:getWslIpAddress():java.net.InetAddress
- f:getWslPath(java.lang.String):java.lang.String
- getWslPath(java.nio.file.Path):java.lang.String
- hashCode():I
- s:mustRunCommandLineWithIjent(com.intellij.execution.wsl.WSLCommandLineOptions):Z
- s:neverRunTTYFix(com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.configurations.GeneralCommandLine
- patchCommandLine(com.intellij.execution.configurations.GeneralCommandLine,com.intellij.openapi.project.Project,com.intellij.execution.wsl.WSLCommandLineOptions):com.intellij.execution.configurations.GeneralCommandLine
- patchProcessHandler(com.intellij.execution.configurations.GeneralCommandLine,com.intellij.execution.process.ProcessHandler):com.intellij.execution.process.ProcessHandler
- readReleaseInfo():java.lang.String
- resolveSymlink(java.lang.String):java.lang.String
- resolveSymlink(java.lang.String,I):java.lang.String
- s:testOverriddenWslExe(java.nio.file.Path,com.intellij.openapi.Disposable):V
f:com.intellij.execution.wsl.WSLUtil
- sf:LOG:com.intellij.openapi.diagnostic.Logger
- <init>():V
- s:getAvailableDistributions():java.util.List
- s:getMsId(java.lang.String):java.lang.String
- s:getWindowsPath(java.lang.String,java.lang.String):java.lang.String
- s:isSystemCompatible():Z
- s:setSystemCompatible(Z):V
f:com.intellij.execution.wsl.WslDistributionAndVersion
- <init>(java.lang.String,I):V
- f:component1():java.lang.String
- f:component2():I
- f:copy(java.lang.String,I):com.intellij.execution.wsl.WslDistributionAndVersion
- bs:copy$default(com.intellij.execution.wsl.WslDistributionAndVersion,java.lang.String,I,I,java.lang.Object):com.intellij.execution.wsl.WslDistributionAndVersion
- equals(java.lang.Object):Z
- f:getDistributionName():java.lang.String
- f:getVersion():I
- hashCode():I
a:com.intellij.execution.wsl.WslDistributionManager
- com.intellij.openapi.Disposable
- <init>():V
- dispose():V
- getCachedInstalledDistributions():java.util.List
- getInstalledDistributions():java.util.List
- getInstalledDistributionsFuture():java.util.concurrent.CompletableFuture
- s:getInstance():com.intellij.execution.wsl.WslDistributionManager
- getLastInstalledDistributions():java.util.List
- getOrCreateDistributionByMsId(java.lang.String):com.intellij.execution.wsl.WSLDistribution
- p:isAvailable():Z
- p:isWslExeSupported():Z
- pa:loadInstalledDistributionMsIds():java.util.List
- a:loadInstalledDistributionsWithVersions():java.util.List
f:com.intellij.execution.wsl.WslPath
- sf:Companion:com.intellij.execution.wsl.WslPath$Companion
- <init>(java.lang.String,java.lang.String):V
- f:component2():java.lang.String
- f:component3():java.lang.String
- f:copy(java.lang.String,java.lang.String,java.lang.String):com.intellij.execution.wsl.WslPath
- bs:copy$default(com.intellij.execution.wsl.WslPath,java.lang.String,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.execution.wsl.WslPath
- equals(java.lang.Object):Z
- f:getDistribution():com.intellij.execution.wsl.WSLDistribution
- sf:getDistributionByWindowsUncPath(java.lang.String):com.intellij.execution.wsl.WSLDistribution
- f:getDistributionId():java.lang.String
- f:getLinuxPath():java.lang.String
- f:getWslRoot():java.lang.String
- hashCode():I
- sf:isWslUncPath(java.lang.String):Z
- sf:parseWindowsUncPath(java.lang.String):com.intellij.execution.wsl.WslPath
- f:toWindowsUncPath():java.lang.String
f:com.intellij.execution.wsl.WslPath$Companion
- f:getDistributionByWindowsUncPath(java.lang.String):com.intellij.execution.wsl.WSLDistribution
- f:isWslUncPath(java.lang.String):Z
- f:parseWindowsUncPath(java.lang.String):com.intellij.execution.wsl.WslPath
f:com.intellij.execution.wsl.ui.WslDistributionComboBox
- com.intellij.openapi.ui.ComboBox
- <init>(com.intellij.execution.wsl.WSLDistribution,Z):V
- f:getSelected():com.intellij.execution.wsl.WSLDistribution
- f:isSelectedValid():Z
- f:setSelected(com.intellij.execution.wsl.WSLDistribution):V
f:com.intellij.execution.wsl.ui.WslPathBrowserKt
- sf:browseWslPath(com.intellij.ui.TextAccessor,com.intellij.execution.wsl.WSLDistribution,java.awt.Component,Z,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- bs:browseWslPath$default(com.intellij.ui.TextAccessor,com.intellij.execution.wsl.WSLDistribution,java.awt.Component,Z,com.intellij.openapi.fileChooser.FileChooserDescriptor,I,java.lang.Object):V
f:com.intellij.externalDependencies.DependencyOnPlugin
- java.lang.Comparable
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- compareTo(com.intellij.externalDependencies.DependencyOnPlugin):I
- equals(java.lang.Object):Z
- getMaxVersion():java.lang.String
- getMinVersion():java.lang.String
- getPluginId():java.lang.String
- getRawMaxVersion():java.lang.String
- getRawMinVersion():java.lang.String
- hashCode():I
a:com.intellij.externalDependencies.ExternalDependenciesManager
- <init>():V
- a:getAllDependencies():java.util.List
- a:getDependencies(java.lang.Class):java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.externalDependencies.ExternalDependenciesManager
- a:setAllDependencies(java.util.List):V
f:com.intellij.externalDependencies.impl.ExternalDependenciesManagerImpl
- com.intellij.externalDependencies.ExternalDependenciesManager
- com.intellij.openapi.components.PersistentStateComponent
- getAllDependencies():java.util.List
- getDependencies(java.lang.Class):java.util.List
- getState():com.intellij.externalDependencies.impl.ExternalDependenciesManagerImpl$ExternalDependenciesState
- loadState(com.intellij.externalDependencies.impl.ExternalDependenciesManagerImpl$ExternalDependenciesState):V
- setAllDependencies(java.util.List):V
f:com.intellij.externalDependencies.impl.ExternalDependenciesManagerImpl$ExternalDependenciesState
- f:myDependencies:java.util.List
- <init>():V
f:com.intellij.formatting.DefaultCaretRestorationDecider
- com.intellij.formatting.CaretRestorationDecider
- sf:INSTANCE:com.intellij.formatting.DefaultCaretRestorationDecider
- shouldRestoreCaret(com.intellij.openapi.editor.Document,com.intellij.openapi.editor.Editor,I):Z
f:com.intellij.formatting.FormatConstants
- sf:RESERVED_LINE_WRAP_WIDTH_IN_COLUMNS:I
- s:getReservedLineWrapWidthInColumns(com.intellij.openapi.editor.Editor):I
com.intellij.formatting.visualLayer.VirtualFormattingInlaysInfo
- sf:Companion:com.intellij.formatting.visualLayer.VirtualFormattingInlaysInfo$Companion
- s:getInstance():com.intellij.formatting.visualLayer.VirtualFormattingInlaysInfo
- a:getVisualFormattingInlineInlays(com.intellij.openapi.editor.Editor,I,I):java.util.List
- a:isVirtualFormattingEnabled(com.intellij.openapi.editor.Editor):Z
- s:measureVirtualFormattingInlineInlays(com.intellij.formatting.visualLayer.VirtualFormattingInlaysInfo,com.intellij.openapi.editor.Editor,I,I):I
- s:measureVirtualFormattingInlineInlays(com.intellij.openapi.editor.Editor,I,I):I
f:com.intellij.formatting.visualLayer.VirtualFormattingInlaysInfo$Companion
- f:getInstance():com.intellij.formatting.visualLayer.VirtualFormattingInlaysInfo
- f:measureVirtualFormattingInlineInlays(com.intellij.formatting.visualLayer.VirtualFormattingInlaysInfo,com.intellij.openapi.editor.Editor,I,I):I
- f:measureVirtualFormattingInlineInlays(com.intellij.openapi.editor.Editor,I,I):I
a:com.intellij.formatting.visualLayer.VisualFormattingLayerService
- sf:Companion:com.intellij.formatting.visualLayer.VisualFormattingLayerService$Companion
- <init>():V
- a:applyVisualFormattingLayerElementsToEditor(com.intellij.openapi.editor.Editor,java.util.List):V
- a:collectVisualFormattingLayerElements(com.intellij.openapi.editor.Editor):java.util.List
- sf:disableForEditor(com.intellij.openapi.editor.Editor):V
- sf:enableForEditor(com.intellij.openapi.editor.Editor,com.intellij.psi.codeStyle.CodeStyleSettings):V
- sf:getInstance():com.intellij.formatting.visualLayer.VisualFormattingLayerService
- sf:getVisualFormattingInlineInlays(com.intellij.openapi.editor.Editor,I,I):java.util.List
- sf:isEnabledForEditor(com.intellij.openapi.editor.Editor):Z
- sf:shouldRemoveZombieFoldings():Z
f:com.intellij.formatting.visualLayer.VisualFormattingLayerService$Companion
- f:disableForEditor(com.intellij.openapi.editor.Editor):V
- f:enableForEditor(com.intellij.openapi.editor.Editor,com.intellij.psi.codeStyle.CodeStyleSettings):V
- f:getInstance():com.intellij.formatting.visualLayer.VisualFormattingLayerService
- f:getVisualFormattingInlineInlays(com.intellij.openapi.editor.Editor,I,I):java.util.List
- f:getVisualFormattingLayerCodeStyleSettings(com.intellij.openapi.editor.Editor):com.intellij.psi.codeStyle.CodeStyleSettings
- f:isEnabledForEditor(com.intellij.openapi.editor.Editor):Z
- f:shouldRemoveZombieFoldings():Z
c:com.intellij.help.impl.HelpManagerImpl
- com.intellij.openapi.help.HelpManager
- <init>():V
- s:getHelpUrl(java.lang.String):java.lang.String
- invokeHelp(java.lang.String):V
com.intellij.ide.AboutPopupDescriptionProvider
- a:getDescription():java.lang.String
- getExtendedDescription():java.lang.String
f:com.intellij.ide.ChangeProjectIconPalette
- com.intellij.util.ui.ColorPalette
- <init>(I):V
- getGradients():kotlin.Pair[]
- f:getIndex():I
- gradient(java.lang.String):kotlin.Pair
f:com.intellij.ide.ClipboardSynchronizer
- com.intellij.openapi.Disposable
- <init>():V
- areDataFlavorsAvailable(java.awt.datatransfer.DataFlavor[]):Z
- dispose():V
- getContents():java.awt.datatransfer.Transferable
- getData(java.awt.datatransfer.DataFlavor):java.lang.Object
- s:getInstance():com.intellij.ide.ClipboardSynchronizer
- resetContent():V
- setContent(java.awt.datatransfer.Transferable,java.awt.datatransfer.ClipboardOwner):V
com.intellij.ide.CommandLineInspectionProgressReporter
- a:reportError(java.lang.String):V
- a:reportMessage(I,java.lang.String):V
com.intellij.ide.CommandLineInspectionProjectConfigurator
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- configureEnvironment(com.intellij.ide.CommandLineInspectionProjectConfigurator$ConfiguratorContext):V
- configureProject(com.intellij.openapi.project.Project,com.intellij.ide.CommandLineInspectionProjectConfigurator$ConfiguratorContext):V
- a:getDescription():java.lang.String
- a:getName():java.lang.String
- isApplicable(com.intellij.ide.CommandLineInspectionProjectConfigurator$ConfiguratorContext):Z
- preConfigureProject(com.intellij.openapi.project.Project,com.intellij.ide.CommandLineInspectionProjectConfigurator$ConfiguratorContext):V
- shouldBeInvokedAlongsideActivityTracking():Z
com.intellij.ide.CommandLineInspectionProjectConfigurator$ConfiguratorContext
- a:getFilesFilter():java.util.function.Predicate
- a:getLogger():com.intellij.ide.CommandLineInspectionProgressReporter
- a:getProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
- a:getProjectPath():java.nio.file.Path
- getVirtualFilesFilter():java.util.function.Predicate
f:com.intellij.ide.CommandLineProcessor
- sf:INSTANCE:com.intellij.ide.CommandLineProcessor
- sf:OK_FUTURE:kotlinx.coroutines.Deferred
- f:processExternalCommandLine(java.util.List,java.lang.String,Z,kotlin.coroutines.Continuation):java.lang.Object
- bs:processExternalCommandLine$default(com.intellij.ide.CommandLineProcessor,java.util.List,java.lang.String,Z,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
f:com.intellij.ide.CommandLineProgressReporterElement
- kotlin.coroutines.AbstractCoroutineContextElement
- sf:Key:com.intellij.ide.CommandLineProgressReporterElement$Key
- <init>(com.intellij.ide.CommandLineInspectionProgressReporter):V
- f:getReporter():com.intellij.ide.CommandLineInspectionProgressReporter
f:com.intellij.ide.CommandLineProgressReporterElement$Key
- kotlin.coroutines.CoroutineContext$Key
f:com.intellij.ide.CommandLineWaitingManager
- addHookForFile(com.intellij.openapi.vfs.VirtualFile):java.util.concurrent.CompletableFuture
- addHookForPath(java.nio.file.Path):java.util.concurrent.CompletableFuture
- addHookForProject(com.intellij.openapi.project.Project):java.util.concurrent.CompletableFuture
- s:getInstance():com.intellij.ide.CommandLineWaitingManager
- hasHookFor(com.intellij.openapi.vfs.VirtualFile):Z
c:com.intellij.ide.CopyPasteManagerEx
- com.intellij.openapi.ide.CopyPasteManager
- java.awt.datatransfer.ClipboardOwner
- <init>():V
- addContentChangedListener(com.intellij.openapi.ide.CopyPasteManager$ContentChangedListener):V
- addContentChangedListener(com.intellij.openapi.ide.CopyPasteManager$ContentChangedListener,com.intellij.openapi.Disposable):V
- areDataFlavorsAvailable(java.awt.datatransfer.DataFlavor[]):Z
- s:deleteAfterAllowedMaximum(com.intellij.util.containers.LinkedListWithSum,I,I,java.util.function.Function):V
- getAllContents():java.awt.datatransfer.Transferable[]
- getContents():java.awt.datatransfer.Transferable
- getContents(java.awt.datatransfer.DataFlavor):java.lang.Object
- s:getInstanceEx():com.intellij.ide.CopyPasteManagerEx
- getSystemSelectionContents():java.awt.datatransfer.Transferable
- isCutElement(java.lang.Object):Z
- isSystemSelectionSupported():Z
- lostOwnership(java.awt.datatransfer.Clipboard,java.awt.datatransfer.Transferable):V
- moveContentToStackTop(java.awt.datatransfer.Transferable):V
- removeContent(java.awt.datatransfer.Transferable):V
- removeContentChangedListener(com.intellij.openapi.ide.CopyPasteManager$ContentChangedListener):V
- setContents(java.awt.datatransfer.Transferable):V
- setSystemSelectionContents(java.awt.datatransfer.Transferable):V
- stopKillRings():V
- stopKillRings(com.intellij.openapi.editor.Document):V
com.intellij.ide.FeedbackDescriptionProvider
- a:getDescription(com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.ide.GeneralSettingsConfigurableEP
- com.intellij.openapi.options.ConfigurableEP
c:com.intellij.ide.IdeDependentActionGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isDumbAware():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.IdeEventQueue
- java.awt.EventQueue
- sf:Companion:com.intellij.ide.IdeEventQueue$Companion
- f:keyboardEventDispatched:java.util.concurrent.atomic.AtomicInteger
- f:keyboardEventPosted:java.util.concurrent.atomic.AtomicInteger
- f:addActivityListener(java.lang.Runnable,com.intellij.openapi.Disposable):V
- f:addActivityListener(java.lang.Runnable,kotlinx.coroutines.CoroutineScope):V
- f:addDispatcher(com.intellij.ide.IdeEventQueue$EventDispatcher,com.intellij.openapi.Disposable):V
- f:addDispatcher(com.intellij.ide.IdeEventQueue$EventDispatcher,kotlinx.coroutines.CoroutineScope):V
- f:addIdleListener(java.lang.Runnable,I):V
- f:addPostEventListener(kotlin.jvm.functions.Function1,com.intellij.openapi.Disposable):V
- f:addPostprocessor(com.intellij.ide.IdeEventQueue$EventDispatcher,com.intellij.openapi.Disposable):V
- f:addPostprocessor(com.intellij.ide.IdeEventQueue$EventDispatcher,kotlinx.coroutines.CoroutineScope):V
- f:addPreprocessor(com.intellij.ide.IdeEventQueue$EventDispatcher,com.intellij.openapi.Disposable):V
- f:blockNextEvents(java.awt.event.MouseEvent):V
- f:blockNextEvents(java.awt.event.MouseEvent,com.intellij.ide.IdeEventQueue$BlockMode):V
- bs:blockNextEvents$default(com.intellij.ide.IdeEventQueue,java.awt.event.MouseEvent,com.intellij.ide.IdeEventQueue$BlockMode,I,java.lang.Object):V
- f:containsDispatcher(com.intellij.ide.IdeEventQueue$EventDispatcher):Z
- f:disableInputMethods(com.intellij.openapi.Disposable):V
- dispatchEvent(java.awt.AWTEvent):V
- f:doPostEvent(java.awt.AWTEvent):Z
- f:doWhenReady(java.lang.Runnable):V
- f:executeInProductionModeEvenThoughWeAreInTests(java.lang.Runnable):V
- f:flushDelayedKeyEvents():V
- f:flushNativeEventQueue():V
- f:getEventCount():I
- f:getIdleTime():J
- sf:getInstance():com.intellij.ide.IdeEventQueue
- f:getKeyEventDispatcher():com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher
- f:getMouseEventDispatcher():com.intellij.openapi.keymap.impl.IdeMouseEventDispatcher
- getNextEvent():java.awt.AWTEvent
- f:getPopupManager():com.intellij.ide.IdePopupManager
- f:getPostedEventCount():J
- f:getPostedSystemEventCount():J
- f:getReturnedEventCount():J
- f:getTrueCurrentEvent():java.awt.AWTEvent
- f:isInputMethodEnabled():Z
- f:isPopupActive():Z
- postEvent(java.awt.AWTEvent):V
- f:pumpEventsForHierarchy(java.awt.Component,java.util.concurrent.Future,java.util.function.Consumer):V
- f:removeDispatcher(com.intellij.ide.IdeEventQueue$EventDispatcher):V
- f:removeIdleListener(java.lang.Runnable):V
- f:removePostprocessor(com.intellij.ide.IdeEventQueue$EventDispatcher):V
- f:setEventCount(I):V
e:com.intellij.ide.IdeEventQueue$BlockMode
- java.lang.Enum
- sf:ACTIONS:com.intellij.ide.IdeEventQueue$BlockMode
- sf:COMPLETE:com.intellij.ide.IdeEventQueue$BlockMode
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ide.IdeEventQueue$BlockMode
- s:values():com.intellij.ide.IdeEventQueue$BlockMode[]
f:com.intellij.ide.IdeEventQueue$Companion
- f:getInstance():com.intellij.ide.IdeEventQueue
com.intellij.ide.IdeEventQueue$EventDispatcher
- a:dispatch(java.awt.AWTEvent):Z
f:com.intellij.ide.IdePopupManager
- com.intellij.ide.IdeEventQueue$EventDispatcher
- <init>():V
- closeAllPopups():Z
- closeAllPopups(Z):Z
- dispatch(java.awt.AWTEvent):Z
- isPopupWindow(java.awt.Window):Z
- push(com.intellij.openapi.ui.popup.IdePopupEventDispatcher):V
- remove(com.intellij.openapi.ui.popup.IdePopupEventDispatcher):V
- requestDefaultFocus(Z):Z
c:com.intellij.ide.IdeTooltip
- com.intellij.util.ui.update.ComparableObject$Impl
- sf:TOOLTIP_DISMISS_DELAY_KEY:java.lang.Object
- <init>(java.awt.Component,java.awt.Point,javax.swing.JComponent,java.lang.Object[]):V
- p:beforeShow():Z
- p:canAutohideOn(com.intellij.ide.TooltipEvent):Z
- canBeDismissedOnTimeout():Z
- getBorderColor():java.awt.Color
- getBorderInsets():java.awt.Insets
- getCalloutShift():I
- getComponent():java.awt.Component
- getComponentBorder():javax.swing.border.Border
- getDismissDelay():I
- getFont():java.awt.Font
- getInitialReshowDelay():I
- getLayer():com.intellij.openapi.ui.popup.Balloon$Layer
- getPoint():java.awt.Point
- getPointerSize():java.awt.Dimension
- getPositionChangeX():I
- getPositionChangeY():I
- getPreferredPosition():com.intellij.openapi.ui.popup.Balloon$Position
- getShowDelay():I
- getShowingPoint():com.intellij.ui.awt.RelativePoint
- getTextBackground():java.awt.Color
- getTextForeground():java.awt.Color
- getTipComponent():javax.swing.JComponent
- hide():V
- isExplicitClose():Z
- isHint():Z
- isInside(com.intellij.ui.awt.RelativePoint):Z
- isPointerShiftedToStart():Z
- isRequestFocus():Z
- isToCenter():Z
- isToCenterIfSmall():Z
- p:onHidden():V
- setBorderColor(java.awt.Color):com.intellij.ide.IdeTooltip
- setBorderInsets(java.awt.Insets):com.intellij.ide.IdeTooltip
- setCalloutShift(I):com.intellij.ide.IdeTooltip
- setComponent(java.awt.Component):V
- setComponentBorder(javax.swing.border.Border):com.intellij.ide.IdeTooltip
- setExplicitClose(Z):com.intellij.ide.IdeTooltip
- setFont(java.awt.Font):com.intellij.ide.IdeTooltip
- setHighlighterType(Z):com.intellij.ide.IdeTooltip
- setHint(Z):com.intellij.ide.IdeTooltip
- setLayer(com.intellij.openapi.ui.popup.Balloon$Layer):com.intellij.ide.IdeTooltip
- setPoint(java.awt.Point):V
- setPointerShiftedToStart(Z):com.intellij.ide.IdeTooltip
- setPointerSize(java.awt.Dimension):com.intellij.ide.IdeTooltip
- setPositionChangeShift(I,I):com.intellij.ide.IdeTooltip
- setPreferredPosition(com.intellij.openapi.ui.popup.Balloon$Position):com.intellij.ide.IdeTooltip
- setRequestFocus(Z):com.intellij.ide.IdeTooltip
- setTextBackground(java.awt.Color):com.intellij.ide.IdeTooltip
- setTextForeground(java.awt.Color):com.intellij.ide.IdeTooltip
- p:setTipComponent(javax.swing.JComponent):V
- setToCenter(Z):com.intellij.ide.IdeTooltip
- setToCenterIfSmall(Z):com.intellij.ide.IdeTooltip
- setUi(com.intellij.ide.IdeTooltip$Ui):V
com.intellij.ide.IdeTooltip$Ui
- a:getShowingPoint():com.intellij.ui.awt.RelativePoint
- a:isInside(com.intellij.ui.awt.RelativePoint):Z
f:com.intellij.ide.IdeTooltipManager
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.ide.IdeTooltipManager$Companion
- <init>(kotlinx.coroutines.CoroutineScope):V
- f:cancelAutoHide():V
- dispose():V
- f:getBorderColor(Z):java.awt.Color
- f:getCustomTooltip(javax.swing.JComponent):com.intellij.ide.IdeTooltip
- sf:getInstance():com.intellij.ide.IdeTooltipManager
- f:getLinkForeground(Z):java.awt.Color
- f:getTextBackground(Z):java.awt.Color
- f:getTextFont(Z):java.awt.Font
- f:getTextForeground(Z):java.awt.Color
- f:getUlImg(Z):java.lang.String
- f:hasCurrent():Z
- f:hide(com.intellij.ide.IdeTooltip):V
- f:hideCurrent(java.awt.event.MouseEvent):Z
- f:hideCurrentNow(Z):V
- sf:initPane(com.intellij.util.ui.Html,com.intellij.ui.HintHint,javax.swing.JLayeredPane,Z):javax.swing.JEditorPane
- sf:initPane(java.lang.String,com.intellij.ui.HintHint,javax.swing.JLayeredPane):javax.swing.JEditorPane
- f:isOpaqueAllowed(Z):Z
- f:isOwnBorderAllowed(Z):Z
- f:isQueuedToShow(com.intellij.ide.IdeTooltip):Z
- sf:setColors(javax.swing.JComponent):V
- f:setCustomTooltip(javax.swing.JComponent,com.intellij.ide.IdeTooltip):V
- f:show(com.intellij.ide.IdeTooltip,Z):com.intellij.ide.IdeTooltip
- f:show(com.intellij.ide.IdeTooltip,Z,Z):com.intellij.ide.IdeTooltip
- bs:show$default(com.intellij.ide.IdeTooltipManager,com.intellij.ide.IdeTooltip,Z,Z,I,java.lang.Object):com.intellij.ide.IdeTooltip
f:com.intellij.ide.IdeTooltipManager$Companion
- f:getInstance():com.intellij.ide.IdeTooltipManager
- f:initPane(com.intellij.util.ui.Html,com.intellij.ui.HintHint,javax.swing.JLayeredPane,Z):javax.swing.JEditorPane
- f:initPane(java.lang.String,com.intellij.ui.HintHint,javax.swing.JLayeredPane):javax.swing.JEditorPane
- f:setBorder(javax.swing.JComponent):V
- f:setColors(javax.swing.JComponent):V
f:com.intellij.ide.IdleTracker
- sf:Companion:com.intellij.ide.IdleTracker$Companion
- <init>(kotlinx.coroutines.CoroutineScope):V
- f:addIdleListener(java.lang.Runnable,I):V
- f:getEvents():kotlinx.coroutines.flow.SharedFlow
- sf:getInstance():com.intellij.ide.IdleTracker
- f:removeIdleListener(java.lang.Runnable):V
f:com.intellij.ide.IdleTracker$Companion
- f:getInstance():com.intellij.ide.IdleTracker
f:com.intellij.ide.InvalidateCacheService
- <init>():V
- s:invalidateCaches(java.util.function.Predicate):V
- s:invalidateCachesAndRestart(com.intellij.openapi.project.Project):V
com.intellij.ide.KeyboardAwareFocusOwner
- a:skipKeyEventDispatcher(java.awt.event.KeyEvent):Z
f:com.intellij.ide.ProjectGroupActionGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.ide.ProjectGroup,java.util.List):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getGroup():com.intellij.ide.ProjectGroup
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.ProjectWindowCustomizerService
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.ide.ProjectWindowCustomizerService$Companion
- <init>():V
- f:addListener(kotlinx.coroutines.CoroutineScope,Z,kotlin.jvm.functions.Function1):V
- dispose():V
- f:enableIfNeeded():V
- f:getProjectIcon(com.intellij.openapi.project.Project):javax.swing.Icon
- f:getRecentProjectIconColor(java.lang.String):kotlin.Pair
- f:isActive():Z
- f:isAvailable():Z
- f:paint(java.awt.Window,javax.swing.JComponent,java.awt.Graphics2D):Z
f:com.intellij.ide.ProjectWindowCustomizerService$Companion
- f:getInstance():com.intellij.ide.ProjectWindowCustomizerService
com.intellij.ide.ProtocolHandler
- sf:Companion:com.intellij.ide.ProtocolHandler$Companion
- sf:PLEASE_DO_NOT_FOCUS:I
- sf:PLEASE_NO_UI:I
- sf:PLEASE_QUIT:I
- a:getScheme():java.lang.String
- a:process(java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.ide.ProtocolHandler$Companion
- sf:PLEASE_DO_NOT_FOCUS:I
- sf:PLEASE_NO_UI:I
- sf:PLEASE_QUIT:I
c:com.intellij.ide.RecentProjectListActionProvider
- sf:Companion:com.intellij.ide.RecentProjectListActionProvider$Companion
- <init>():V
- p:createOpenAction(java.lang.String,java.util.Set,com.intellij.ide.RecentProjectsManagerBase):com.intellij.ide.ReopenProjectAction
- f:getActions():java.util.List
- f:getActions(Z):java.util.List
- getActions(Z,Z):java.util.List
- bs:getActions$default(com.intellij.ide.RecentProjectListActionProvider,Z,Z,I,java.lang.Object):java.util.List
- sf:getInstance():com.intellij.ide.RecentProjectListActionProvider
- isCurrentProjectAction(com.intellij.openapi.project.Project,com.intellij.ide.ReopenProjectAction):Z
f:com.intellij.ide.RecentProjectListActionProvider$Companion
- f:getInstance():com.intellij.ide.RecentProjectListActionProvider
f:com.intellij.ide.RecentProjectManagerState
- com.intellij.openapi.components.BaseState
- <init>():V
- f:getAdditionalInfo():java.util.Map
- f:getForceReopenProjects():Z
- f:getGroups():java.util.List
- f:getLastOpenedProject():java.lang.String
- f:getLastProjectLocation():java.lang.String
- f:getPid():java.lang.String
- f:getRecentPaths():java.util.List
- f:setForceReopenProjects(Z):V
- f:setLastOpenedProject(java.lang.String):V
- f:setLastProjectLocation(java.lang.String):V
- f:setPid(java.lang.String):V
f:com.intellij.ide.RecentProjectMetaInfo
- com.intellij.openapi.components.BaseState
- <init>():V
- f:getActivationTimestamp():J
- f:getBinFolder():java.lang.String
- f:getBuild():java.lang.String
- f:getBuildTimestamp():J
- f:getColorInfo():com.intellij.ide.RecentProjectColorInfo
- f:getDisplayName():java.lang.String
- f:getEap():Z
- f:getFrameTitle():java.lang.String
- f:getHidden():Z
- f:getMetadata():java.lang.String
- f:getOpened():Z
- f:getProductionCode():java.lang.String
- f:getProjectOpenTimestamp():J
- f:getProjectWorkspaceId():java.lang.String
- f:getWindowBounds():java.awt.Rectangle
- f:setActivationTimestamp(J):V
- f:setBinFolder(java.lang.String):V
- f:setBuild(java.lang.String):V
- f:setBuildTimestamp(J):V
- f:setColorInfo(com.intellij.ide.RecentProjectColorInfo):V
- f:setDisplayName(java.lang.String):V
- f:setEap(Z):V
- f:setFrameTitle(java.lang.String):V
- f:setHidden(Z):V
- f:setMetadata(java.lang.String):V
- f:setOpened(Z):V
- f:setProductionCode(java.lang.String):V
- f:setProjectOpenTimestamp(J):V
- f:setProjectWorkspaceId(java.lang.String):V
c:com.intellij.ide.RecentProjectsManagerBase
- com.intellij.ide.RecentProjectsManager
- com.intellij.openapi.components.PersistentStateComponent
- com.intellij.openapi.util.ModificationTracker
- sf:Companion:com.intellij.ide.RecentProjectsManagerBase$Companion
- sf:MAX_PROJECTS_IN_MAIN_MENU:I
- <init>(kotlinx.coroutines.CoroutineScope):V
- addGroup(com.intellij.ide.ProjectGroup):V
- f:addRecentPath(java.lang.String,com.intellij.ide.RecentProjectMetaInfo):V
- f:findGroup(java.lang.String):com.intellij.ide.ProjectGroup
- f:forceReopenProjects():V
- f:getActivationTimestamp(java.lang.String):java.lang.Long
- f:getCurrentBranchName(java.lang.String):java.lang.String
- f:getDisplayName(java.lang.String):java.lang.String
- getGroups():java.util.List
- sf:getInstanceEx():com.intellij.ide.RecentProjectsManagerBase
- f:getLastOpenedProject():java.lang.String
- getLastProjectCreationLocation():java.lang.String
- getModificationCount():J
- f:getNonLocalProjectIcon(java.lang.String,Z,I,java.lang.String):javax.swing.Icon
- p:getProjectDisplayName(com.intellij.openapi.project.Project):java.lang.String
- f:getProjectIcon(java.lang.String,Z):javax.swing.Icon
- f:getProjectIcon(java.lang.String,Z,I,java.lang.String):javax.swing.Icon
- bs:getProjectIcon$default(com.intellij.ide.RecentProjectsManagerBase,java.lang.String,Z,I,java.lang.String,I,java.lang.Object):javax.swing.Icon
- f:getProjectName(java.lang.String):java.lang.String
- getProjectPath(com.intellij.openapi.project.Project):java.lang.String
- getProjectPath(java.nio.file.Path):java.lang.String
- f:getRecentPaths():java.util.List
- p:getRecentProjectMetadata(java.lang.String,com.intellij.openapi.project.Project):java.lang.String
- getRecentProjectsActions(Z):com.intellij.openapi.actionSystem.AnAction[]
- f:getState():com.intellij.ide.RecentProjectManagerState
- hasPath(java.lang.String):Z
- p:isOpenProjectsOneByOneRequired():Z
- f:loadState(com.intellij.ide.RecentProjectManagerState):V
- f:markPathRecent(java.lang.String,com.intellij.openapi.project.Project):com.intellij.ide.RecentProjectMetaInfo
- moveProjectToGroup(java.lang.String,com.intellij.ide.ProjectGroup):V
- openProject(java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask,kotlin.coroutines.Continuation):java.lang.Object
- f:openProjectSync(java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask):com.intellij.openapi.project.Project
- f:patchRecentPaths(kotlin.jvm.functions.Function1):V
- removeGroup(com.intellij.ide.ProjectGroup):V
- removePath(java.lang.String):V
- removeProjectFromGroup(java.lang.String,com.intellij.ide.ProjectGroup):V
- reopenLastProjectsOnStart(kotlin.coroutines.Continuation):java.lang.Object
- setActivationTimestamp(com.intellij.openapi.project.Project,J):V
- setLastProjectCreationLocation(java.lang.String):V
- f:setProjectHidden(com.intellij.openapi.project.Project,Z):V
- suggestNewProjectLocation():java.lang.String
- updateLastProjectPath():V
- f:updateRecentMetadata(com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):V
- willReopenProjectOnStart():Z
f:com.intellij.ide.RecentProjectsManagerBase$Companion
- f:getInstanceEx():com.intellij.ide.RecentProjectsManagerBase
c:com.intellij.ide.ReopenProjectAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long):V
- b:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getActivationTimestamp():java.lang.Long
- getBranchName():java.lang.String
- f:getProjectDisplayName():java.lang.String
- getProjectIcon():javax.swing.Icon
- f:getProjectName():java.lang.String
- getProjectNameToDisplay():java.lang.String
- f:getProjectPath():java.lang.String
- getProjectPathToDisplay():java.lang.String
- f:isRemoved():Z
- f:setProjectGroup(com.intellij.ide.ProjectGroup):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.TooltipEvent
- <init>(java.awt.event.InputEvent,Z,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent):V
- getAction():com.intellij.openapi.actionSystem.AnAction
- getActionEvent():com.intellij.openapi.actionSystem.AnActionEvent
- getInputEvent():java.awt.event.InputEvent
- isIsEventInsideBalloon():Z
f:com.intellij.ide.TypePresentationServiceImpl
- com.intellij.ide.TypePresentationService
- <init>():V
- getIcon(java.lang.Object):javax.swing.Icon
- getObjectName(java.lang.Object):java.lang.String
- getTypeIcon(java.lang.Class):javax.swing.Icon
- getTypeName(java.lang.Object):java.lang.String
- getTypePresentableName(java.lang.Class):java.lang.String
c:com.intellij.ide.TypePresentationServiceImpl$PresentationTemplateImpl
- com.intellij.ide.TypePresentationServiceImpl$ProviderBasedTemplate
- <init>(com.intellij.ide.presentation.Presentation,java.lang.Class):V
c:com.intellij.ide.TypePresentationServiceImpl$ProviderBasedTemplate
- <init>(com.intellij.ide.presentation.PresentationProvider):V
- getIcon(java.lang.Object,I):javax.swing.Icon
- getName(java.lang.Object):java.lang.String
- getTypeName():java.lang.String
- getTypeName(java.lang.Object):java.lang.String
f:com.intellij.ide.actions.AboutAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:perform(com.intellij.openapi.project.Project):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.AboutDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project):V
- s:getBuildInfo(com.intellij.openapi.application.ApplicationInfo):com.intellij.openapi.util.Pair
- getExtendedAboutText():java.lang.String
c:com.intellij.ide.actions.ActivateToolWindowAction
- com.intellij.openapi.actionSystem.ex.MainMenuPresentationAware
- com.intellij.openapi.project.DumbAwareAction
- sf:Companion:com.intellij.ide.actions.ActivateToolWindowAction$Companion
- p:<init>(java.lang.String):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- alwaysShowIconInMainMenu():Z
- p:createEmptyState(com.intellij.openapi.project.Project):V
- sf:getActionIdForToolWindow(java.lang.String):java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- f:getToolWindowId():java.lang.String
- p:hasEmptyState(com.intellij.openapi.project.Project):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.ActivateToolWindowAction$Companion
- f:getActionIdForToolWindow(java.lang.String):java.lang.String
f:com.intellij.ide.actions.ActivateToolWindowAction$Manager
- sf:INSTANCE:com.intellij.ide.actions.ActivateToolWindowAction$Manager
- sf:getActionIdForToolWindow(java.lang.String):java.lang.String
a:com.intellij.ide.actions.BaseNavigateToSourceAction
- com.intellij.openapi.project.DumbAwareAction
- p:<init>(Z):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getNavigatables(com.intellij.openapi.actionSystem.DataContext):com.intellij.pom.Navigatable[]
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.CloseAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.ide.actions.CloseAction$CloseTarget
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- a:close():V
f:com.intellij.ide.actions.CloseActiveTabAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.CloseEditorsActionBase
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getFilesToClose(com.intellij.openapi.actionSystem.AnActionEvent):java.util.List
- pa:getPresentationText(Z):java.lang.String
- p:isActionEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- pa:isFileToClose(com.intellij.openapi.fileEditor.impl.EditorComposite,com.intellij.openapi.fileEditor.impl.EditorWindow,com.intellij.openapi.fileEditor.ex.FileEditorManagerEx):Z
- p:isFileToCloseInContext(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.fileEditor.impl.EditorComposite,com.intellij.openapi.fileEditor.impl.EditorWindow):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.CloseProjectAction
- com.intellij.ide.actions.CloseProjectsActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.CloseProjectsActionBase
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:canClose(com.intellij.openapi.project.Project,com.intellij.openapi.project.Project):Z
- pa:shouldShow(com.intellij.openapi.actionSystem.AnActionEvent):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.CopyAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.CopyUrlAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.CutAction
- com.intellij.openapi.project.DumbAwareAction
- com.intellij.ide.lightEdit.LightEditCompatible
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.DeleteAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getDeleteProvider(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.DeleteProvider
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.DistractionFreeModeController
- sf:DISTRACTION_MODE_PROPERTY_KEY:java.lang.String
- <init>():V
- s:getStandardTabPlacement():I
- s:isDistractionFreeModeEnabled():Z
- s:shouldMinimizeCustomHeader():Z
c:com.intellij.ide.actions.EditCustomVmOptionsAction
- com.intellij.openapi.project.DumbAwareAction
- sf:Companion:com.intellij.ide.actions.EditCustomVmOptionsAction$Companion
- sf:JRE_PATH_KEY:com.intellij.openapi.util.Key
- <init>():V
- p:charset():java.nio.charset.Charset
- p:file():java.nio.file.Path
- f:isEnabled():Z
- p:prepareDocument(com.intellij.openapi.editor.Document):V
- p:template():java.lang.String
f:com.intellij.ide.actions.EditCustomVmOptionsAction$AccessExtension
- com.intellij.openapi.fileEditor.impl.NonProjectFileWritingAccessExtension
- <init>():V
- isWritable(com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.ide.actions.EditCustomVmOptionsAction$Companion
c:com.intellij.ide.actions.EditSourceAction
- com.intellij.ide.actions.BaseNavigateToSourceAction
- <init>():V
c:com.intellij.ide.actions.ExportToTextFileAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getExporter(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.ExporterToTextFile
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.JumpToLastEditAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.NextOccurenceAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- p:getDescription(com.intellij.ide.OccurenceNavigator):java.lang.String
- p:go(com.intellij.ide.OccurenceNavigator):com.intellij.ide.OccurenceNavigator$OccurenceInfo
- p:hasOccurenceToGo(com.intellij.ide.OccurenceNavigator):Z
f:com.intellij.ide.actions.NextOccurenceToolbarAction
- com.intellij.ide.actions.NextOccurenceAction
- <init>(com.intellij.ide.OccurenceNavigator):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
c:com.intellij.ide.actions.NonEmptyActionGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.NonTrivialActionGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.project.DumbAware
- <init>():V
- f:getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.OpenFileAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- sf:Companion:com.intellij.ide.actions.OpenFileAction$Companion
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pf:getPathToSelect():com.intellij.openapi.vfs.VirtualFile
- sf:openFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):V
- sf:openFile(java.lang.String,com.intellij.openapi.project.Project):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.OpenFileAction$Companion
- f:openFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):V
- f:openFile(java.lang.String,com.intellij.openapi.project.Project):V
c:com.intellij.ide.actions.OpenProjectFileChooserDescriptor
- com.intellij.openapi.fileChooser.FileChooserDescriptor
- <init>(Z):V
- <init>(Z,Z):V
- getIcon(com.intellij.openapi.vfs.VirtualFile):javax.swing.Icon
- isFileSelectable(com.intellij.openapi.vfs.VirtualFile):Z
- s:isProjectFile(com.intellij.openapi.vfs.VirtualFile):Z
c:com.intellij.ide.actions.PasteAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.PinActiveTabAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getContentFromEvent(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ui.content.Content
- p:getFileFromEvent(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.fileEditor.impl.EditorWindow):com.intellij.openapi.vfs.VirtualFile
- p:getHandler(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ide.actions.PinActiveTabAction$Handler
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.PinActiveTabAction$Handler
- f:isActiveTab:Z
- f:isPinned:Z
- <init>(Z,Z):V
c:com.intellij.ide.actions.PinActiveTabAction$TW
- com.intellij.ide.actions.PinActiveTabAction
- <init>():V
- p:getContentFromEvent(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ui.content.Content
- p:getFileFromEvent(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.fileEditor.impl.EditorWindow):com.intellij.openapi.vfs.VirtualFile
f:com.intellij.ide.actions.PinActiveTabAction$Toggle
- com.intellij.ide.actions.PinActiveTabAction
- com.intellij.openapi.actionSystem.Toggleable
- <init>():V
c:com.intellij.ide.actions.PreviousOccurenceAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- p:getDescription(com.intellij.ide.OccurenceNavigator):java.lang.String
- p:go(com.intellij.ide.OccurenceNavigator):com.intellij.ide.OccurenceNavigator$OccurenceInfo
- p:hasOccurenceToGo(com.intellij.ide.OccurenceNavigator):Z
f:com.intellij.ide.actions.PreviousOccurenceToolbarAction
- com.intellij.ide.actions.PreviousOccurenceAction
- <init>(com.intellij.ide.OccurenceNavigator):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
f:com.intellij.ide.actions.QuickChangeKeymapAction
- com.intellij.ide.actions.QuickSwitchSchemeAction
- <init>():V
f:com.intellij.ide.actions.QuickChangeLookAndFeel
- com.intellij.ide.actions.QuickSwitchSchemeAction
- <init>():V
- s:switchLafAndUpdateUI(com.intellij.ide.ui.LafManager,com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo,Z):V
- s:switchLafAndUpdateUI(com.intellij.ide.ui.LafManager,javax.swing.UIManager$LookAndFeelInfo,Z):V
f:com.intellij.ide.actions.RecentProjectsGroup
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- s:removeCurrentProject(com.intellij.openapi.project.Project,java.util.List):com.intellij.openapi.actionSystem.AnAction[]
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.RedoAction
- com.intellij.ide.actions.UndoRedoAction
- com.intellij.ide.lightEdit.LightEditCompatible
- <init>():V
c:com.intellij.ide.actions.RefreshAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- registerShortcutOn(javax.swing.JComponent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.ide.actions.ReportFeedbackService
- sf:Companion:com.intellij.ide.actions.ReportFeedbackService$Companion
- a:collectLogs(com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- a:getCoroutineScope():kotlinx.coroutines.CoroutineScope
- s:getInstance():com.intellij.ide.actions.ReportFeedbackService
f:com.intellij.ide.actions.ReportFeedbackService$Companion
- f:getInstance():com.intellij.ide.actions.ReportFeedbackService
c:com.intellij.ide.actions.RestartIdeAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
f:com.intellij.ide.actions.RestoreDefaultLayoutAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.RevealFileAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAwareAction
- sf:FILE_SELECTING_LISTENER:com.intellij.notification.NotificationListener
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- applyTextOverride(java.lang.String,com.intellij.openapi.actionSystem.Presentation):V
- s:findLocalFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:getActionName():java.lang.String
- s:getActionName(java.lang.String):java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getFileManagerName():java.lang.String
- s:getFileManagerName(Z):java.lang.String
- s:isDirectoryOpenSupported():Z
- s:isSupported():Z
- s:openDirectory(java.io.File):V
- s:openDirectory(java.nio.file.Path):V
- s:openFile(java.io.File):V
- s:openFile(java.nio.file.Path):V
- s:showDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.io.File,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
Fc:com.intellij.ide.actions.SaveAllAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
f:com.intellij.ide.actions.SaveDocumentAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.SearchWebAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:search(java.lang.String):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.SettingsEntryPointAction
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.actionSystem.RightAlignedToolbarAction
- com.intellij.openapi.actionSystem.Toggleable
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- com.intellij.openapi.actionSystem.ex.TooltipDescriptionProvider
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:updateState():V
com.intellij.ide.actions.SettingsEntryPointAction$ActionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- getLastActions(com.intellij.openapi.actionSystem.DataContext):java.util.Collection
- getTooltip():java.lang.String
- a:getUpdateActions(com.intellij.openapi.actionSystem.DataContext):java.util.Collection
com.intellij.ide.actions.SettingsEntryPointAction$IconCustomizer
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getCustomIcon(com.intellij.ui.BadgeIconSupplier):javax.swing.Icon
- getSecondIcon():javax.swing.Icon
a:com.intellij.ide.actions.SettingsEntryPointAction$LastAction
- com.intellij.openapi.project.DumbAwareAction
- sf:POPUP:com.intellij.openapi.util.Key
- sf:SECOND_TEXT:com.intellij.openapi.util.Key
- p:<init>():V
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- getSecondText():java.lang.String
- p:handleMouseExit(java.awt.event.MouseEvent):V
- p:handleMouseMove(java.awt.event.MouseEvent):V
com.intellij.ide.actions.SettingsEntryPointAction$NoDots
a:com.intellij.ide.actions.SettingsEntryPointAction$UpdateAction
- com.intellij.openapi.project.DumbAwareAction
- p:<init>():V
- p:<init>(java.lang.String):V
- isIdeUpdate():Z
- isNewAction():Z
- isRestartRequired():Z
- markAsRead():V
f:com.intellij.ide.actions.ShowContentAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- sf:ACTION_ID:java.lang.String
- <init>():V
- <init>(com.intellij.openapi.wm.ToolWindow,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.ShowFilePathAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:findLocalFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getFileManagerName():java.lang.String
- s:openFile(java.io.File):V
- s:show(com.intellij.openapi.vfs.VirtualFile,java.awt.event.MouseEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.ShowLogAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:getActionName():java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:isSupported():Z
- s:notificationAction():com.intellij.notification.NotificationAction
- s:showLog():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.ShowPluginsWithSearchOptionAction
- com.intellij.openapi.project.DumbAwareAction
- <init>(java.lang.String,java.lang.String):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
f:com.intellij.ide.actions.ShowSettingsAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:perform(com.intellij.openapi.project.Project):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.ShowSettingsUtilImpl
- com.intellij.openapi.options.ShowSettingsUtil
- sf:Companion:com.intellij.ide.actions.ShowSettingsUtilImpl$Companion
- <init>():V
- sf:createDimensionKey(com.intellij.openapi.options.Configurable):java.lang.String
- editConfigurable(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable):Z
- editConfigurable(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable,java.lang.Runnable):Z
- editConfigurable(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable,java.util.function.Consumer):Z
- editConfigurable(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.options.Configurable):Z
- editConfigurable(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.options.Configurable,Z):Z
- editConfigurable(java.awt.Component,com.intellij.openapi.options.Configurable):Z
- editConfigurable(java.awt.Component,com.intellij.openapi.options.Configurable,java.lang.Runnable):Z
- editConfigurable(java.awt.Component,java.lang.String):Z
- editConfigurable(java.awt.Component,java.lang.String,com.intellij.openapi.options.Configurable):Z
- editConfigurable(java.awt.Component,java.lang.String,java.lang.Runnable):Z
- sf:getConfigurableGroups(com.intellij.openapi.project.Project,Z):com.intellij.openapi.options.ConfigurableGroup[]
- sf:getConfigurables(com.intellij.openapi.project.Project,Z,Z):java.util.List
- sf:getDialog(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.options.Configurable):com.intellij.openapi.ui.DialogWrapper
- sf:showSettings(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.options.Configurable):V
- showSettingsDialog(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable):V
- showSettingsDialog(com.intellij.openapi.project.Project,java.lang.Class):V
- showSettingsDialog(com.intellij.openapi.project.Project,java.lang.Class,java.util.function.Consumer):V
- showSettingsDialog(com.intellij.openapi.project.Project,java.lang.String):V
- sf:showSettingsDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- showSettingsDialog(com.intellij.openapi.project.Project,java.util.function.Predicate,java.util.function.Consumer):V
- showSettingsDialog(com.intellij.openapi.project.Project,com.intellij.openapi.options.ConfigurableGroup[]):V
f:com.intellij.ide.actions.ShowSettingsUtilImpl$Companion
- f:configurables(com.intellij.openapi.project.Project,Z,Z):kotlin.sequences.Sequence
- f:createDimensionKey(com.intellij.openapi.options.Configurable):java.lang.String
- f:getConfigurableGroups(com.intellij.openapi.project.Project,Z):com.intellij.openapi.options.ConfigurableGroup[]
- f:getConfigurables(com.intellij.openapi.project.Project,Z,Z):java.util.List
- f:getDialog(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.options.Configurable):com.intellij.openapi.ui.DialogWrapper
- f:showSettings(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.options.Configurable):V
- f:showSettingsDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
c:com.intellij.ide.actions.SmartPopupActionGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getChildrenCountThreshold():I
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.SplitAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- sf:FORBID_TAB_SPLIT:com.intellij.openapi.util.Key
- p:<init>(I):V
- p:<init>(I,Z):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.StoreDefaultLayoutAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.Switcher
- com.intellij.openapi.project.DumbAwareAction
- sf:INSTANCE:com.intellij.ide.actions.Switcher
c:com.intellij.ide.actions.SynchronizeAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
c:com.intellij.ide.actions.ToggleDistractionFreeModeAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getStandardTabPlacement():I
- s:isDistractionFreeModeEnabled():Z
- s:shouldMinimizeCustomHeader():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.TogglePresentationModeAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:setPresentationMode(com.intellij.openapi.project.Project,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.ToggleToolbarAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- s:createAction(java.lang.String,com.intellij.ide.util.PropertiesComponent,java.util.function.Supplier):com.intellij.ide.actions.ToggleToolbarAction
- s:createToggleToolbarGroup(com.intellij.openapi.project.Project,com.intellij.openapi.wm.ToolWindow):com.intellij.openapi.actionSystem.DefaultActionGroup
- s:createToolWindowAction(com.intellij.openapi.wm.ToolWindow,com.intellij.ide.util.PropertiesComponent):com.intellij.ide.actions.ToggleToolbarAction
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:hasVisibleToolwindowToolbars(com.intellij.openapi.wm.ToolWindow):Z
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- s:isToolbarVisible(com.intellij.openapi.wm.ToolWindow):Z
- s:isToolbarVisible(com.intellij.openapi.wm.ToolWindow,com.intellij.ide.util.PropertiesComponent):Z
- s:isToolbarVisible(com.intellij.openapi.wm.ToolWindow,com.intellij.openapi.project.Project):Z
- s:isToolbarVisible(java.lang.String):Z
- s:isToolbarVisible(java.lang.String,com.intellij.ide.util.PropertiesComponent):Z
- s:isToolbarVisible(java.lang.String,com.intellij.openapi.project.Project):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- s:setToolbarVisible(com.intellij.openapi.wm.ToolWindow,com.intellij.ide.util.PropertiesComponent,java.lang.Boolean):V
- s:setToolbarVisible(java.lang.Iterable,Z):V
- s:setToolbarVisible(java.lang.String,com.intellij.ide.util.PropertiesComponent,java.lang.Iterable,java.lang.Boolean):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:updateToolbarsVisibility(com.intellij.openapi.wm.ToolWindow,com.intellij.ide.util.PropertiesComponent):V
f:com.intellij.ide.actions.ToggleZenModeAction
- com.intellij.openapi.project.DumbAwareAction
- sf:Companion:com.intellij.ide.actions.ToggleZenModeAction$Companion
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.ToggleZenModeAction$Companion
- f:isZenModeEnabled(com.intellij.openapi.project.Project):Z
f:com.intellij.ide.actions.ToolWindowMoveAction
- com.intellij.openapi.actionSystem.impl.FusAwareAction
- com.intellij.openapi.project.DumbAwareAction
- <init>(com.intellij.ide.actions.ToolWindowMoveAction$Anchor):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getAdditionalUsageData(com.intellij.openapi.actionSystem.AnActionEvent):java.util.List
- s:getToolWindow(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.wm.ToolWindow
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
e:com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- java.lang.Enum
- sf:BottomLeft:com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- sf:BottomRight:com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- sf:LeftBottom:com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- sf:LeftTop:com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- sf:RightBottom:com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- sf:RightTop:com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- sf:TopLeft:com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- sf:TopRight:com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- applyTo(com.intellij.openapi.wm.ToolWindow):V
- applyTo(com.intellij.openapi.wm.ToolWindow,I):V
- s:fromWindowInfo(com.intellij.openapi.wm.WindowInfo):com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- getAnchor():com.intellij.openapi.wm.ToolWindowAnchor
- s:getAnchor(com.intellij.openapi.wm.ToolWindowAnchor,Z):com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- getIcon():javax.swing.Icon
- isSplit():Z
- s:valueOf(java.lang.String):com.intellij.ide.actions.ToolWindowMoveAction$Anchor
- s:values():com.intellij.ide.actions.ToolWindowMoveAction$Anchor[]
f:com.intellij.ide.actions.ToolWindowMoveAction$Group
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.project.DumbAware
- <init>():V
c:com.intellij.ide.actions.ToolWindowTabRenameActionBase
- com.intellij.openapi.wm.ToolWindowContextMenuActionBase
- <init>(java.lang.String,java.lang.String):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.wm.ToolWindow,com.intellij.ui.content.Content):V
- applyContentDisplayName(com.intellij.ui.content.Content,com.intellij.openapi.project.Project,java.lang.String):V
- getContentDisplayNameToEdit(com.intellij.ui.content.Content,com.intellij.openapi.project.Project):java.lang.String
- f:getLabelText():java.lang.String
- f:getToolWindowId():java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.wm.ToolWindow,com.intellij.ui.content.Content):V
c:com.intellij.ide.actions.ToolWindowViewModeAction
- com.intellij.openapi.actionSystem.impl.FusAwareAction
- com.intellij.openapi.project.DumbAwareToggleAction
- pf:myMode:com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode
- p:<init>(com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getAdditionalUsageData(com.intellij.openapi.actionSystem.AnActionEvent):java.util.List
- p:getToolWindow(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.wm.ToolWindow
- p:getToolWindowManager(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.wm.ToolWindowManager
- f:isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:isSelected(com.intellij.openapi.wm.ToolWindow):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.ToolWindowViewModeAction$Group
- com.intellij.openapi.actionSystem.DefaultActionGroup
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isDumbAware():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
e:com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode
- java.lang.Enum
- sf:DockPinned:com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode
- sf:DockUnpinned:com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode
- sf:Float:com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode
- sf:Undock:com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode
- sf:Window:com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode
- s:fromWindowInfo(com.intellij.openapi.wm.WindowInfo):com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode
- getActionID():java.lang.String
- s:valueOf(java.lang.String):com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode
- s:values():com.intellij.ide.actions.ToolWindowViewModeAction$ViewMode[]
c:com.intellij.ide.actions.ToolWindowWindowAction
- com.intellij.ide.actions.ToolWindowViewModeAction
- <init>():V
f:com.intellij.ide.actions.UndoAction
- com.intellij.ide.actions.UndoRedoAction
- com.intellij.ide.lightEdit.LightEditCompatible
- <init>():V
a:com.intellij.ide.actions.UndoRedoAction
- com.intellij.openapi.project.DumbAwareAction
- com.intellij.ide.lightEdit.LightEditCompatible
- sf:IGNORE_SWING_UNDO_MANAGER:com.intellij.openapi.util.Key
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:getActionNameAndDescription(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.command.undo.UndoManager):com.intellij.openapi.util.Pair
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:isAvailable(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.command.undo.UndoManager):Z
- pa:perform(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.command.undo.UndoManager):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.WhatsNewAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.WindowAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:setEnabledFor(java.awt.Window,Z):V
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.WindowAction$DecrementHeight
- com.intellij.ide.actions.WindowAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.WindowAction$DecrementWidth
- com.intellij.ide.actions.WindowAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.WindowAction$IncrementHeight
- com.intellij.ide.actions.WindowAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.WindowAction$IncrementWidth
- com.intellij.ide.actions.WindowAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.cache.AsyncRecoveryResult
- <init>(com.intellij.ide.actions.cache.RecoveryScope,java.util.List):V
- f:component1():com.intellij.ide.actions.cache.RecoveryScope
- f:component2():java.util.List
- f:copy(com.intellij.ide.actions.cache.RecoveryScope,java.util.List):com.intellij.ide.actions.cache.AsyncRecoveryResult
- bs:copy$default(com.intellij.ide.actions.cache.AsyncRecoveryResult,com.intellij.ide.actions.cache.RecoveryScope,java.util.List,I,java.lang.Object):com.intellij.ide.actions.cache.AsyncRecoveryResult
- equals(java.lang.Object):Z
- f:getProblems():java.util.List
- f:getScope():com.intellij.ide.actions.cache.RecoveryScope
- hashCode():I
com.intellij.ide.actions.cache.CacheInconsistencyProblem
- a:getMessage():java.lang.String
f:com.intellij.ide.actions.cache.ProjectRecoveryScope
- <init>(com.intellij.openapi.project.Project):V
- f:component1():com.intellij.openapi.project.Project
- f:copy(com.intellij.openapi.project.Project):com.intellij.ide.actions.cache.ProjectRecoveryScope
- bs:copy$default(com.intellij.ide.actions.cache.ProjectRecoveryScope,com.intellij.openapi.project.Project,I,java.lang.Object):com.intellij.ide.actions.cache.ProjectRecoveryScope
- equals(java.lang.Object):Z
- getProject():com.intellij.openapi.project.Project
- hashCode():I
f:com.intellij.ide.actions.ui.JBListWithOpenInRightSplit
- com.intellij.ui.components.JBList
- <init>(javax.swing.ListModel,com.intellij.openapi.util.Condition):V
- s:createListWithOpenInRightSplitter(javax.swing.ListModel,com.intellij.openapi.util.Condition):com.intellij.ui.components.JBList
- getPreferredSize():java.awt.Dimension
- paint(java.awt.Graphics):V
a:com.intellij.ide.actionsOnSave.ActionOnSaveBackedByOwnConfigurable
- com.intellij.ide.actionsOnSave.ActionOnSaveInfo
- <init>(com.intellij.ide.actionsOnSave.ActionOnSaveContext,java.lang.String,java.lang.Class):V
- p:apply():V
- p:areOptionsMirroredOnActionsOnSavePageModified(com.intellij.openapi.options.UnnamedConfigurable):Z
- f:getComment():com.intellij.ide.actionsOnSave.ActionOnSaveComment
- p:getCommentAccordingToStoredState():com.intellij.ide.actionsOnSave.ActionOnSaveComment
- p:getCommentAccordingToUiState(com.intellij.openapi.options.UnnamedConfigurable):com.intellij.ide.actionsOnSave.ActionOnSaveComment
- pf:getValueFromSavedStateOrFromUiState(java.util.function.Supplier,java.util.function.Function):java.lang.Object
- f:isActionOnSaveEnabled():Z
- p:isActionOnSaveEnabledAccordingToStoredState():Z
- p:isActionOnSaveEnabledAccordingToUiState(com.intellij.openapi.options.UnnamedConfigurable):Z
- p:isApplicableAccordingToStoredState():Z
- p:isApplicableAccordingToUiState(com.intellij.openapi.options.UnnamedConfigurable):Z
- pf:isModified():Z
- f:isSaveActionApplicable():Z
- p:resetUiOnOwnPageThatIsMirroredOnActionsOnSavePage(com.intellij.openapi.options.UnnamedConfigurable):V
- pa:setActionOnSaveEnabled(com.intellij.openapi.options.UnnamedConfigurable,Z):V
- f:setActionOnSaveEnabled(Z):V
- pf:updateUiOnOwnPage(java.util.function.Consumer):V
f:com.intellij.ide.actionsOnSave.ActionOnSaveComment
- getCommentText():java.lang.String
- s:info(java.lang.String):com.intellij.ide.actionsOnSave.ActionOnSaveComment
- isWarning():Z
- s:warning(java.lang.String):com.intellij.ide.actionsOnSave.ActionOnSaveComment
f:com.intellij.ide.actionsOnSave.ActionOnSaveContext
- com.intellij.openapi.util.UserDataHolderBase
- getProject():com.intellij.openapi.project.Project
- getSettings():com.intellij.openapi.options.ex.Settings
- getSettingsDialogDisposable():com.intellij.openapi.Disposable
a:com.intellij.ide.actionsOnSave.ActionOnSaveInfo
- p:<init>(com.intellij.ide.actionsOnSave.ActionOnSaveContext):V
- pa:apply():V
- pf:createGoToPageInSettingsLink(java.lang.String):com.intellij.ui.components.ActionLink
- pf:createGoToPageInSettingsLink(java.lang.String,java.lang.String):com.intellij.ui.components.ActionLink
- getActionLinks():java.util.List
- a:getActionOnSaveName():java.lang.String
- p:getActivatedOnDefaultText():java.lang.String
- getActivatedOnDropDownLink():com.intellij.ui.components.DropDownLink
- s:getAnySaveAndExternalChangeText():java.lang.String
- s:getAnySaveAndExternalChangeTextForDropDownOption():java.lang.String
- s:getAnySaveText():java.lang.String
- s:getAnySaveTextForDropDownOption():java.lang.String
- getComment():com.intellij.ide.actionsOnSave.ActionOnSaveComment
- pf:getContext():com.intellij.ide.actionsOnSave.ActionOnSaveContext
- getDropDownLinks():java.util.List
- s:getExplicitSaveText():java.lang.String
- pf:getProject():com.intellij.openapi.project.Project
- pf:getSettings():com.intellij.openapi.options.ex.Settings
- a:isActionOnSaveEnabled():Z
- pa:isModified():Z
- isSaveActionApplicable():Z
- a:setActionOnSaveEnabled(Z):V
a:com.intellij.ide.actionsOnSave.ActionOnSaveInfoProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- pa:getActionOnSaveInfos(com.intellij.ide.actionsOnSave.ActionOnSaveContext):java.util.Collection
- getSearchableOptions():java.util.Collection
f:com.intellij.ide.actionsOnSave.ActionsOnSaveConfigurable
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- sf:CONFIGURABLE_ID:java.lang.String
- <init>(com.intellij.openapi.project.Project):V
- apply():V
- createComponent():javax.swing.JComponent
- s:createGoToActionsOnSavePageLink():com.intellij.ui.components.ActionLink
- s:createGoToPageInSettingsLink(java.lang.String,java.lang.String):com.intellij.ui.components.ActionLink
- disposeUIResources():V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- isModified():Z
- reset():V
f:com.intellij.ide.actionsOnSave.ActionsOnSaveConfigurable$ActionsOnSaveConfigurableProvider
- com.intellij.openapi.options.ConfigurableProvider
- <init>(com.intellij.openapi.project.Project):V
- createConfigurable():com.intellij.openapi.options.Configurable
f:com.intellij.ide.actionsOnSave.impl.ActionsOnSaveFileDocumentManagerListener
- com.intellij.openapi.fileEditor.FileDocumentManagerListener
- beforeAllDocumentsSaving():V
- beforeDocumentSaving(com.intellij.openapi.editor.Document):V
a:com.intellij.ide.actionsOnSave.impl.ActionsOnSaveFileDocumentManagerListener$ActionOnSave
- <init>():V
- isEnabledForProject(com.intellij.openapi.project.Project):Z
- processDocuments(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document[]):V
a:com.intellij.ide.actionsOnSave.impl.ActionsOnSaveFileDocumentManagerListener$DocumentUpdatingActionOnSave
- com.intellij.ide.actionsOnSave.impl.ActionsOnSaveFileDocumentManagerListener$ActionOnSave
- <init>():V
- a:getPresentableName():java.lang.String
- f:processDocuments(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document[]):V
- a:updateDocument(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.ide.actionsOnSave.impl.ActionsOnSaveManager
- sf:Companion:com.intellij.ide.actionsOnSave.impl.ActionsOnSaveManager$Companion
- f:waitForTasks():V
f:com.intellij.ide.actionsOnSave.impl.ActionsOnSaveManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.actionsOnSave.impl.ActionsOnSaveManager
c:com.intellij.ide.browsers.BrowserSelector
- <init>():V
- <init>(com.intellij.openapi.util.Condition):V
- <init>(Z):V
- addAndSelect(com.intellij.ide.browsers.WebBrowser):Z
- getMainComponent():javax.swing.JComponent
- getSelected():com.intellij.ide.browsers.WebBrowser
- getSelectedBrowserId():java.lang.String
- getSize():I
- setSelected(com.intellij.ide.browsers.WebBrowser):V
f:com.intellij.ide.browsers.BrowserSettings
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- <init>():V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- isModified():Z
- reset():V
- selectBrowser(com.intellij.ide.browsers.WebBrowser):V
c:com.intellij.ide.browsers.BrowserStarter
- <init>(com.intellij.execution.configurations.RunConfiguration,com.intellij.ide.browsers.StartBrowserSettings,com.intellij.execution.process.ProcessHandler):V
- <init>(com.intellij.execution.configurations.RunConfiguration,com.intellij.ide.browsers.StartBrowserSettings,java.util.function.BooleanSupplier):V
- p:isOutdated():Z
- p:openPageNow():V
- setMaximumAttempts(I):com.intellij.ide.browsers.BrowserStarter
- setOpenOnMaximumAttempt(Z):com.intellij.ide.browsers.BrowserStarter
- start():V
e:com.intellij.ide.browsers.DefaultBrowserPolicy
- java.lang.Enum
- sf:ALTERNATIVE:com.intellij.ide.browsers.DefaultBrowserPolicy
- sf:FIRST:com.intellij.ide.browsers.DefaultBrowserPolicy
- sf:SYSTEM:com.intellij.ide.browsers.DefaultBrowserPolicy
- s:valueOf(java.lang.String):com.intellij.ide.browsers.DefaultBrowserPolicy
- s:values():com.intellij.ide.browsers.DefaultBrowserPolicy[]
com.intellij.ide.browsers.JavaScriptDebuggerStarter
- a:isApplicable(com.intellij.execution.configurations.RunConfiguration):Z
- a:start(java.lang.String,com.intellij.execution.configurations.RunConfiguration,java.lang.Object,com.intellij.ide.browsers.WebBrowser):V
f:com.intellij.ide.browsers.JavaScriptDebuggerStarter$Util
- <init>():V
- s:get(com.intellij.execution.configurations.RunConfiguration):com.intellij.ide.browsers.JavaScriptDebuggerStarter
- s:hasStarters():Z
- s:start(com.intellij.execution.configurations.RunConfiguration,java.lang.String):Z
- s:start(com.intellij.execution.configurations.RunConfiguration,java.lang.String,com.intellij.ide.browsers.WebBrowser):Z
- s:startDebugOrLaunchBrowser(com.intellij.execution.configurations.RunConfiguration,com.intellij.ide.browsers.StartBrowserSettings):V
- s:startDebugOrLaunchBrowser(com.intellij.execution.configurations.RunConfiguration,java.lang.String,com.intellij.ide.browsers.WebBrowser,Z):V
f:com.intellij.ide.browsers.StartBrowserPanel
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- createSettings():com.intellij.ide.browsers.StartBrowserSettings
- getBrowserSelector():com.intellij.ide.browsers.BrowserSelector
- getComponent():javax.swing.JPanel
- getNormalizedUrl():java.lang.String
- getStartJavaScriptDebuggerCheckBox():javax.swing.JCheckBox
- isSelected():Z
- setFromSettings(com.intellij.ide.browsers.StartBrowserSettings):V
- setSelected(Z):V
- setUrl(java.lang.String):V
- s:setupUrlField(com.intellij.openapi.ui.TextFieldWithBrowseButton,com.intellij.openapi.project.Project):V
c:com.intellij.ide.browsers.StartBrowserSettings
- <init>():V
- getBrowser():com.intellij.ide.browsers.WebBrowser
- getUrl():java.lang.String
- isSelected():Z
- isStartJavaScriptDebugger():Z
- s:readExternal(org.jdom.Element):com.intellij.ide.browsers.StartBrowserSettings
- setBrowser(com.intellij.ide.browsers.WebBrowser):V
- setSelected(Z):V
- setStartJavaScriptDebugger(Z):V
- setUrl(java.lang.String):V
- writeExternal(org.jdom.Element):V
f:com.intellij.ide.browsers.WebBrowserManager
- com.intellij.openapi.util.SimpleModificationTracker
- com.intellij.openapi.components.PersistentStateComponent
- sf:BROWSER_RELOAD_MODE_DEFAULT:com.intellij.ide.browsers.ReloadMode
- sf:PREVIEW_RELOAD_MODE_DEFAULT:com.intellij.ide.browsers.ReloadMode
- <init>():V
- addBrowser(java.util.UUID,com.intellij.ide.browsers.BrowserFamily,java.lang.String,java.lang.String,Z,com.intellij.ide.browsers.BrowserSpecificSettings):com.intellij.ide.browsers.WebBrowser
- findBrowserById(java.lang.String):com.intellij.ide.browsers.WebBrowser
- getActiveBrowsers():java.util.List
- getBrowsers():java.util.List
- getBrowsers(com.intellij.openapi.util.Condition):java.util.List
- getBrowsers(com.intellij.openapi.util.Condition,Z):java.util.List
- getDefaultBrowserPolicy():com.intellij.ide.browsers.DefaultBrowserPolicy
- getFirstActiveBrowser():com.intellij.ide.browsers.WebBrowser
- getFirstBrowser(com.intellij.ide.browsers.BrowserFamily):com.intellij.ide.browsers.WebBrowser
- getFirstBrowserOrNull(com.intellij.ide.browsers.BrowserFamily):com.intellij.ide.browsers.WebBrowser
- s:getInstance():com.intellij.ide.browsers.WebBrowserManager
- getState():org.jdom.Element
- getWebPreviewReloadMode():com.intellij.ide.browsers.ReloadMode
- getWebServerReloadMode():com.intellij.ide.browsers.ReloadMode
- isActive(com.intellij.ide.browsers.WebBrowser):Z
- s:isEdge(com.intellij.ide.browsers.WebBrowser):Z
- s:isOpera(com.intellij.ide.browsers.WebBrowser):Z
- isShowBrowserHover():Z
- isShowBrowserHoverXml():Z
- s:isYandexBrowser(com.intellij.ide.browsers.WebBrowser):Z
- loadState(org.jdom.Element):V
- setBrowserPath(com.intellij.ide.browsers.WebBrowser,java.lang.String,Z):V
- setBrowserSpecificSettings(com.intellij.ide.browsers.WebBrowser,com.intellij.ide.browsers.BrowserSpecificSettings):V
- setShowBrowserHover(Z):V
- setShowBrowserHoverXml(Z):V
f:com.intellij.ide.browsers.WebBrowserReferenceConverter
- com.intellij.util.xmlb.Converter
- <init>():V
- fromString(java.lang.String):com.intellij.ide.browsers.WebBrowser
- toString(com.intellij.ide.browsers.WebBrowser):java.lang.String
f:com.intellij.ide.browsers.actions.OpenFileInDefaultBrowserActionKt
- sf:findUsingBrowser():com.intellij.ide.browsers.WebBrowser
a:com.intellij.ide.browsers.actions.OpenInBrowserBaseGroupAction
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.project.DumbAware
- p:<init>(Z):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- s:hasLocalBrowser():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.browsers.actions.OpenInBrowserBaseGroupAction$OpenInBrowserEditorContextBarGroupAction
- com.intellij.ide.browsers.actions.OpenInBrowserBaseGroupAction
- <init>():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.browsers.actions.OpenInBrowserBaseGroupAction$OpenInBrowserGroupAction
- com.intellij.ide.browsers.actions.OpenInBrowserBaseGroupAction
- <init>():V
c:com.intellij.ide.browsers.actions.WebPreviewVirtualFile
- com.intellij.testFramework.LightVirtualFile
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Url):V
- equals(java.lang.Object):Z
- getName():java.lang.String
- getOriginalFile():com.intellij.openapi.vfs.VirtualFile
- getPreviewUrl():com.intellij.util.Url
- hashCode():I
f:com.intellij.ide.browsers.impl.WebBrowserServiceImpl
- com.intellij.ide.browsers.WebBrowserService
- sf:Companion:com.intellij.ide.browsers.impl.WebBrowserServiceImpl$Companion
- <init>():V
- sf:getDebuggableUrl(com.intellij.psi.PsiElement):com.intellij.util.Url
- getUrlsToOpen(com.intellij.ide.browsers.OpenInBrowserRequest,Z):java.util.Collection
f:com.intellij.ide.browsers.impl.WebBrowserServiceImpl$Companion
- f:getDebuggableUrl(com.intellij.psi.PsiElement):com.intellij.util.Url
- f:getDebuggableUrls(com.intellij.psi.PsiElement):java.util.Collection
- f:getProviders(com.intellij.ide.browsers.OpenInBrowserRequest):kotlin.sequences.Sequence
f:com.intellij.ide.customization.UtmIdeUrlTrackingParametersProvider
- com.intellij.openapi.application.IdeUrlTrackingParametersProvider
- <init>():V
- augmentUrl(java.lang.String):java.lang.String
- augmentUrl(java.lang.String,java.lang.String):java.lang.String
f:com.intellij.ide.dnd.DnDEventImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.ide.dnd.DnDEvent
- java.awt.datatransfer.Transferable
- sf:ourDataFlavor:java.awt.datatransfer.DataFlavor
- <init>(com.intellij.ide.dnd.DnDManagerImpl,com.intellij.ide.dnd.DnDAction,java.lang.Object,java.awt.Point):V
- canHandleDrop():Z
- cleanUp():V
- clearDelegatedTarget():V
- delegateDropTo(com.intellij.ide.dnd.DnDTarget):V
- delegateUpdateTo(com.intellij.ide.dnd.DnDTarget):Z
- equals(java.lang.Object):Z
- getAction():com.intellij.ide.dnd.DnDAction
- getAttachedObject():java.lang.Object
- getCurrentOverComponent():java.awt.Component
- getCursor():java.awt.Cursor
- getDelegatedTarget():com.intellij.ide.dnd.DnDTarget
- getExpectedDropResult():java.lang.String
- getHandlerComponent():java.awt.Component
- getLocalPoint():java.awt.Point
- getOrgPoint():java.awt.Point
- getPoint():java.awt.Point
- getPointOn(java.awt.Component):java.awt.Point
- getRelativePoint():com.intellij.ui.awt.RelativePoint
- getTransferData(java.awt.datatransfer.DataFlavor):java.lang.Object
- getTransferDataFlavors():java.awt.datatransfer.DataFlavor[]
- hashCode():I
- hideHighlighter():V
- isDataFlavorSupported(java.awt.datatransfer.DataFlavor):Z
- isDropPossible():Z
- setAutoHideHighlighterInDrop(Z):V
- setCursor(java.awt.Cursor):V
- setDropPossible(java.lang.String,com.intellij.ide.dnd.DropActionHandler):V
- setDropPossible(Z):V
- setDropPossible(Z,java.lang.String):V
- setHighlighting(com.intellij.ui.awt.RelativeRectangle,I):V
- setHighlighting(java.awt.Component,I):V
- setHighlighting(javax.swing.JLayeredPane,com.intellij.ui.awt.RelativeRectangle,I):V
- setLocalPoint(java.awt.Point):V
- setOrgPoint(java.awt.Point):V
- updateAction(com.intellij.ide.dnd.DnDAction):V
- wasDelegated():Z
f:com.intellij.ide.dnd.DnDManagerImpl
- com.intellij.ide.dnd.DnDManager
- <init>():V
- getDropTargetListener():java.awt.dnd.DropTargetListener
- getLastDropHandler():java.awt.Component
- registerSource(com.intellij.ide.dnd.AdvancedDnDSource):V
- registerSource(com.intellij.ide.dnd.DnDSource,javax.swing.JComponent):V
- registerSource(com.intellij.ide.dnd.DnDSource,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- registerTarget(com.intellij.ide.dnd.DnDTarget,javax.swing.JComponent):V
- registerTarget(com.intellij.ide.dnd.DnDTarget,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- setLastDropHandler(java.awt.Component):V
- unregisterSource(com.intellij.ide.dnd.AdvancedDnDSource):V
- unregisterSource(com.intellij.ide.dnd.DnDSource,javax.swing.JComponent):V
- unregisterTarget(com.intellij.ide.dnd.DnDTarget,javax.swing.JComponent):V
- updateCurrentEvent():V
f:com.intellij.ide.dnd.FileCopyPasteUtil
- s:createDataFlavor(java.lang.String):java.awt.datatransfer.DataFlavor
- s:createDataFlavor(java.lang.String,java.lang.Class):java.awt.datatransfer.DataFlavor
- s:createDataFlavor(java.lang.String,java.lang.Class,Z):java.awt.datatransfer.DataFlavor
- s:createJvmDataFlavor(java.lang.Class):java.awt.datatransfer.DataFlavor
- s:getFileList(java.awt.datatransfer.Transferable):java.util.List
- s:getFileListFromAttachedObject(java.lang.Object):java.util.List
- s:getFiles(java.awt.datatransfer.Transferable):java.util.List
- s:getVirtualFileListFromAttachedObject(java.lang.Object):java.util.List
- s:isFileListFlavorAvailable():Z
- s:isFileListFlavorAvailable(com.intellij.ide.dnd.DnDEvent):Z
- s:isFileListFlavorAvailable(java.awt.datatransfer.DataFlavor[]):Z
com.intellij.ide.dnd.FileFlavorProvider
- a:asFileList():java.util.List
f:com.intellij.ide.dnd.LinuxDragAndDropSupport
- sf:gnomeFileListFlavor:java.awt.datatransfer.DataFlavor
- sf:kdeCutMarkFlavor:java.awt.datatransfer.DataFlavor
- sf:uriListFlavor:java.awt.datatransfer.DataFlavor
- s:getFiles(java.awt.datatransfer.Transferable):java.util.List
- s:isMoveOperation(java.awt.datatransfer.Transferable):Z
- s:toUriList(java.util.List):java.lang.String
a:com.intellij.ide.dnd.TransferableList
- java.awt.datatransfer.Transferable
- <init>(java.util.List):V
- <init>(java.lang.Object[]):V
- p:getHTML(java.util.List,Z):java.lang.String
- p:getText(java.util.List):java.lang.String
- getTransferData(java.awt.datatransfer.DataFlavor):java.lang.Object
- getTransferDataFlavors():java.awt.datatransfer.DataFlavor[]
- isDataFlavorSupported(java.awt.datatransfer.DataFlavor):Z
- p:toHTML(java.lang.Object):java.lang.String
- pa:toString(java.lang.Object):java.lang.String
com.intellij.ide.dnd.TransferableWrapper
- com.intellij.ide.dnd.FileFlavorProvider
- a:getPsiElements():com.intellij.psi.PsiElement[]
- a:getTreeNodes():javax.swing.tree.TreeNode[]
- getTreePaths():javax.swing.tree.TreePath[]
c:com.intellij.ide.dnd.aware.DnDAwareTree
- com.intellij.ui.treeStructure.Tree
- com.intellij.ide.dnd.DnDAware
- <init>():V
- <init>(javax.swing.tree.TreeModel):V
- <init>(javax.swing.tree.TreeNode):V
- dropSelectionButUnderPoint(java.awt.Point):V
- f:getComponent():javax.swing.JComponent
- s:getDragImage(com.intellij.ui.treeStructure.Tree,java.lang.String,java.awt.Point):com.intellij.openapi.util.Pair
- s:getDragImage(com.intellij.ui.treeStructure.Tree,javax.swing.tree.TreePath,java.awt.Point):com.intellij.openapi.util.Pair
- f:isOverSelection(java.awt.Point):Z
- processMouseEvent(java.awt.event.MouseEvent):V
- p:processMouseMotionEvent(java.awt.event.MouseEvent):V
f:com.intellij.ide.errorTreeView.CallingBackColoredTreeCellRenderer
- com.intellij.ui.ColoredTreeCellRenderer
- <init>():V
- customizeCellRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- setCurrentCallback(com.intellij.ui.CustomizeColoredTreeCellRenderer):V
a:com.intellij.ide.errorTreeView.ErrorTreeElement
- sf:EMPTY_ARRAY:com.intellij.ide.errorTreeView.ErrorTreeElement[]
- p:<init>():V
- p:<init>(com.intellij.ide.errorTreeView.ErrorTreeElementKind):V
- a:getData():java.lang.Object
- a:getExportTextPrefix():java.lang.String
- getIcon():javax.swing.Icon
- getKind():com.intellij.ide.errorTreeView.ErrorTreeElementKind
- getLeftSelfRenderer():com.intellij.ui.CustomizeColoredTreeCellRenderer
- getPresentableText():java.lang.String
- getRightSelfRenderer():com.intellij.ui.CustomizeColoredTreeCellRenderer
- a:getText():java.lang.String[]
- setKind(com.intellij.ide.errorTreeView.ErrorTreeElementKind):V
f:com.intellij.ide.errorTreeView.ErrorTreeNodeDescriptor
- com.intellij.ide.util.treeView.NodeDescriptor
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.util.treeView.NodeDescriptor,com.intellij.ide.errorTreeView.ErrorTreeElement):V
- getElement():com.intellij.ide.errorTreeView.ErrorTreeElement
- update():Z
c:com.intellij.ide.errorTreeView.ErrorViewStructure
- com.intellij.ide.util.treeView.AbstractTreeStructure
- <init>(com.intellij.openapi.project.Project,Z):V
- addFixedHotfixGroup(java.lang.String,java.util.List):V
- addHotfixGroup(com.intellij.ide.errorTreeView.HotfixData,java.util.List,com.intellij.util.ui.MutableErrorTreeView):V
- addMessage(com.intellij.ide.errorTreeView.ErrorTreeElementKind,java.lang.String[],com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,I,I,java.lang.Object):com.intellij.ide.errorTreeView.ErrorTreeElement
- addMessage(com.intellij.ide.errorTreeView.ErrorTreeElementKind,java.lang.String[],java.lang.Object):com.intellij.ide.errorTreeView.ErrorTreeElement
- addNavigatableMessage(java.lang.String,com.intellij.ide.errorTreeView.NavigatableMessageElement):V
- addNavigatableMessage(java.lang.String,com.intellij.pom.Navigatable,com.intellij.ide.errorTreeView.ErrorTreeElementKind,java.lang.String[],java.lang.Object,java.lang.String,java.lang.String,com.intellij.openapi.vfs.VirtualFile):com.intellij.ide.errorTreeView.ErrorTreeElement
- addSimpleMessageElement(com.intellij.ide.errorTreeView.ErrorTreeElement):com.intellij.ide.errorTreeView.ErrorTreeElement
- clear():V
- f:commit():V
- createDescriptor(java.lang.Object,com.intellij.ide.util.treeView.NodeDescriptor):com.intellij.ide.util.treeView.NodeDescriptor
- p:createGroupingElement(java.lang.String,java.lang.Object,com.intellij.openapi.vfs.VirtualFile):com.intellij.ide.errorTreeView.GroupingElement
- getChildCount(com.intellij.ide.errorTreeView.GroupingElement):I
- getChildElements(java.lang.Object):com.intellij.ide.errorTreeView.ErrorTreeElement[]
- getFirstMessage(com.intellij.ide.errorTreeView.ErrorTreeElementKind):com.intellij.ide.errorTreeView.ErrorTreeElement
- getGroupChildrenData(java.lang.String):java.util.List
- getGroupingElement(java.lang.String,java.lang.Object,com.intellij.openapi.vfs.VirtualFile):com.intellij.ide.errorTreeView.GroupingElement
- getParentElement(java.lang.Object):java.lang.Object
- getRootElement():java.lang.Object
- hasMessages(java.util.Set):Z
- hasMessages(java.util.Set,java.util.function.Predicate):Z
- f:hasSomethingToCommit():Z
- isEmpty():Z
- lookupGroupingElement(java.lang.String):com.intellij.ide.errorTreeView.GroupingElement
- removeAllNavigatableMessagesInGroup(java.lang.String):java.util.List
- removeElement(com.intellij.ide.errorTreeView.ErrorTreeElement):V
- removeGroup(java.lang.String):V
- removeNavigatableMessage(java.lang.String,com.intellij.ide.errorTreeView.ErrorTreeElementKind,com.intellij.pom.Navigatable):java.util.List
c:com.intellij.ide.errorTreeView.GroupingElement
- com.intellij.ide.errorTreeView.ErrorTreeElement
- <init>(java.lang.String,java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- getData():java.lang.Object
- getExportTextPrefix():java.lang.String
- getFile():com.intellij.openapi.vfs.VirtualFile
- getIcon():javax.swing.Icon
- getName():java.lang.String
- getText():java.lang.String[]
- isRenderWithBoldFont():Z
com.intellij.ide.errorTreeView.NavigatableErrorTreeElement
- a:getNavigatable():com.intellij.pom.Navigatable
c:com.intellij.ide.errorTreeView.NavigatableMessageElement
- com.intellij.ide.errorTreeView.ErrorTreeElement
- com.intellij.ide.errorTreeView.NavigatableErrorTreeElement
- <init>(com.intellij.ide.errorTreeView.ErrorTreeElementKind,com.intellij.ide.errorTreeView.GroupingElement,java.lang.String[],com.intellij.pom.Navigatable,java.lang.String,java.lang.String):V
- getData():java.lang.Object
- getExportTextPrefix():java.lang.String
- getNavigatable():com.intellij.pom.Navigatable
- getParent():com.intellij.ide.errorTreeView.GroupingElement
- getRendererTextPrefix():java.lang.String
- getText():java.lang.String[]
f:com.intellij.ide.errorTreeView.NewErrorTreeRenderer
- com.intellij.ui.MultilineTreeCellRenderer
- s:calcPrefix(com.intellij.ide.errorTreeView.ErrorTreeElement):java.lang.String
- getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):java.awt.Component
- s:install(javax.swing.JTree):javax.swing.JScrollPane
c:com.intellij.ide.errorTreeView.NewErrorTreeViewPanel
- javax.swing.JPanel
- com.intellij.ide.CopyProvider
- com.intellij.ide.OccurenceNavigator
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.util.ui.MutableErrorTreeView
- sf:Companion:com.intellij.ide.errorTreeView.NewErrorTreeViewPanel$Companion
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- p:myTree:com.intellij.ui.treeStructure.Tree
- p:project:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,Z):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,Z,java.lang.Runnable):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,Z,java.lang.Runnable,com.intellij.ide.errorTreeView.NewErrorTreeViewPanel$MessageViewState):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,Z,java.lang.Runnable,com.intellij.ide.errorTreeView.NewErrorTreeViewPanel$MessageViewState,com.intellij.ide.errorTreeView.ErrorViewStructure):V
- b:<init>(com.intellij.openapi.project.Project,java.lang.String,Z,Z,java.lang.Runnable,com.intellij.ide.errorTreeView.NewErrorTreeViewPanel$MessageViewState,com.intellij.ide.errorTreeView.ErrorViewStructure,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- p:addExtraPopupMenuActions(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- addFixedHotfixGroup(java.lang.String,java.util.List):V
- addHotfixGroup(com.intellij.ide.errorTreeView.HotfixData,java.util.List):V
- addMessage(I,java.lang.String[],com.intellij.openapi.vfs.VirtualFile,I,I,java.lang.Object):V
- addMessage(I,java.lang.String[],com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,I,I,java.lang.Object):V
- addMessage(I,java.lang.String[],java.lang.String,com.intellij.pom.Navigatable,java.lang.String,java.lang.String,java.lang.Object):V
- f:canControlProcess():Z
- p:canHideWarnings():Z
- f:clearProgressData():V
- close():V
- f:collapseAll():V
- p:createErrorViewStructure(com.intellij.openapi.project.Project,Z):com.intellij.ide.errorTreeView.ErrorViewStructure
- sf:createExportPrefix(I):java.lang.String
- sf:createRendererPrefix(I,I):java.lang.String
- dispose():V
- f:expandAll():V
- p:fillRightToolbarGroup(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getComponent():javax.swing.JComponent
- f:getEmptyText():com.intellij.util.ui.StatusText
- f:getErrorViewStructure():com.intellij.ide.errorTreeView.ErrorViewStructure
- getGroupChildrenData(java.lang.String):java.util.List
- getNextOccurenceActionName():java.lang.String
- getPreviousOccurenceActionName():java.lang.String
- sf:getQualifiedName(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- f:getSelectedErrorTreeElement():com.intellij.ide.errorTreeView.ErrorTreeElement
- f:getSelectedFile():com.intellij.openapi.vfs.VirtualFile
- goNextOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- goPreviousOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- hasNextOccurence():Z
- hasPreviousOccurence():Z
- isCopyEnabled(com.intellij.openapi.actionSystem.DataContext):Z
- isCopyVisible(com.intellij.openapi.actionSystem.DataContext):Z
- f:isHideInfos():Z
- f:isHideWarnings():Z
- f:isProcessStopped():Z
- pf:makeVisible(com.intellij.ide.errorTreeView.ErrorTreeElement):V
- performCopy(com.intellij.openapi.actionSystem.DataContext):V
- reload():V
- f:removeAllInGroup(java.lang.String):V
- removeGroup(java.lang.String):V
- f:removeMessage(I,java.lang.String,com.intellij.pom.Navigatable):Z
- selectFirstMessage():V
- f:setFraction(F):V
- f:setProcessController(com.intellij.ide.errorTreeView.NewErrorTreeViewPanel$ProcessController):V
- f:setProgress(java.lang.String,F):V
- f:setProgressText(java.lang.String):V
- p:shouldShowFirstErrorInEditor():Z
- f:stopProcess():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- f:updateAddedElement(com.intellij.ide.errorTreeView.ErrorTreeElement):V
- updateTree():V
f:com.intellij.ide.errorTreeView.NewErrorTreeViewPanel$Companion
- f:createExportPrefix(I):java.lang.String
- f:createRendererPrefix(I,I):java.lang.String
- f:getQualifiedName(com.intellij.openapi.vfs.VirtualFile):java.lang.String
com.intellij.ide.errorTreeView.NewErrorTreeViewPanel$ProcessController
- a:isProcessStopped():Z
- a:stopProcess():V
f:com.intellij.ide.errorTreeView.SimpleMessageElement
- com.intellij.ide.errorTreeView.ErrorTreeElement
- <init>(com.intellij.ide.errorTreeView.ErrorTreeElementKind,java.lang.String[],java.lang.Object):V
- getData():java.lang.Object
- getExportTextPrefix():java.lang.String
- getText():java.lang.String[]
f:com.intellij.ide.errorTreeView.impl.ErrorTreeViewConfiguration
- com.intellij.openapi.components.PersistentStateComponent
- HIDE_INFO_MESSAGES:Z
- HIDE_WARNINGS:Z
- IS_AUTOSCROLL_TO_SOURCE:Z
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.errorTreeView.impl.ErrorTreeViewConfiguration
- getState():com.intellij.ide.errorTreeView.impl.ErrorTreeViewConfiguration
- isAutoscrollToSource():Z
- isHideInfoMessages():Z
- isHideWarnings():Z
- loadState(com.intellij.ide.errorTreeView.impl.ErrorTreeViewConfiguration):V
- setAutoscrollToSource(Z):V
- setHideInfoMessages(Z):V
- setHideWarnings(Z):V
com.intellij.ide.externalComponents.ExternalComponentSource
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getAllChannels():java.util.List
- a:getAvailableVersions(com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.updateSettings.impl.UpdateSettings):java.util.Collection
- a:getCurrentVersions():java.util.Collection
- a:getName():java.lang.String
- a:getStatuses():java.util.Collection
- a:installUpdates(java.util.Collection):V
- isEnabled():Z
com.intellij.ide.externalComponents.UpdatableExternalComponent
- a:getKey():java.lang.Object
- a:getName():java.lang.String
- a:isUpdateFor(com.intellij.ide.externalComponents.UpdatableExternalComponent):Z
com.intellij.ide.file.BatchFileChangeListener
- sf:TOPIC:com.intellij.util.messages.Topic
- batchChangeCompleted(com.intellij.openapi.project.Project):V
- batchChangeStarted(com.intellij.openapi.project.Project,java.lang.String):V
f:com.intellij.ide.gdpr.AgreementUiBuilder
- eapPanel:java.lang.Boolean
- exitOnCancel:Z
- useRtfPane:Z
- f:acceptButton(java.lang.String,Z,kotlin.jvm.functions.Function1):V
- bs:acceptButton$default(com.intellij.ide.gdpr.AgreementUiBuilder,java.lang.String,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- f:checkBox(java.lang.String,kotlin.jvm.functions.Function1):V
- f:clearBottomPanel():V
- f:declineButton(java.lang.String,kotlin.jvm.functions.Function1):V
- f:enableAcceptButton(Z):V
- f:focusToAcceptButton():V
- f:focusToText():V
- f:getHtmlText():java.lang.String
- f:getTitle():java.lang.String
- f:setHtmlText(java.lang.String):V
- f:setTitle(java.lang.String):V
f:com.intellij.ide.gdpr.AgreementUiKt
- sf:showAgreementUi(kotlin.jvm.functions.Function1):Z
f:com.intellij.ide.gdpr.Consent
- <init>(com.intellij.ide.gdpr.ConsentAttributes):V
- <init>(java.lang.String,com.intellij.ide.gdpr.Version,java.lang.String,java.lang.String,Z,Z,java.lang.String):V
- derive(Z):com.intellij.ide.gdpr.Consent
- getLocale():java.lang.String
- getName():java.lang.String
- getText():java.lang.String
- isAccepted():Z
- isDeleted():Z
- toConsentAttributes():com.intellij.ide.gdpr.ConsentAttributes
c:com.intellij.ide.gdpr.ConsentSettingsUi
- javax.swing.JPanel
- com.intellij.openapi.options.ConfigurableUi
- <init>(Z):V
- apply(java.util.List):V
- getComponent():javax.swing.JComponent
- isModified(java.util.List):Z
- reset(java.util.List):V
f:com.intellij.ide.gdpr.EndUserAgreement
- <init>():V
- s:getAcceptedVersion(java.lang.String):com.intellij.ide.gdpr.Version
- s:getDocumentContentFile():java.nio.file.Path
- s:getDocumentContentFile(java.lang.String):java.nio.file.Path
- s:getLatestDocument():com.intellij.ide.gdpr.EndUserAgreement$Document
- s:loadContent(java.lang.String,java.nio.file.Path):com.intellij.ide.gdpr.EndUserAgreement$Document
- s:setAccepted(com.intellij.ide.gdpr.EndUserAgreement$Document):V
- s:setAcceptedVersion(java.lang.String,com.intellij.ide.gdpr.Version):V
- s:updateActiveDocumentName(java.lang.String):V
- s:updateCachedContentToLatestBundledVersion():V
- s:updateContent(java.lang.String,java.lang.String):V
f:com.intellij.ide.gdpr.EndUserAgreement$Document
- <init>(java.lang.String,java.lang.String):V
- getName():java.lang.String
- getText():java.lang.String
- getVersion():com.intellij.ide.gdpr.Version
- isAccepted():Z
- isPrivacyPolicy():Z
f:com.intellij.ide.gdpr.EndUserAgreement$PluginAgreementUpdateDescriptor
- documentName:java.lang.String
- productCode:java.lang.String
- <init>():V
- s:getDescriptors():java.util.List
f:com.intellij.ide.gdpr.Version
- java.lang.Comparable
- sf:UNKNOWN:com.intellij.ide.gdpr.Version
- compareTo(com.intellij.ide.gdpr.Version):I
- equals(java.lang.Object):Z
- s:fromString(java.lang.String):com.intellij.ide.gdpr.Version
- getMajor():I
- getMinor():I
- hashCode():I
- isNewer(com.intellij.ide.gdpr.Version):Z
- isOlder(com.intellij.ide.gdpr.Version):Z
- isUnknown():Z
f:com.intellij.ide.gdpr.ui.HtmlRtfPane
- <init>():V
- f:create(java.lang.String):javax.swing.JTextPane
- f:replaceText(java.lang.String):javax.swing.JTextPane
f:com.intellij.ide.impl.ContentManagerWatcher
- <init>(com.intellij.openapi.wm.ToolWindow,com.intellij.ui.content.ContentManager):V
- s:watchContentManager(com.intellij.openapi.wm.ToolWindow,com.intellij.ui.content.ContentManager):V
Fc:com.intellij.ide.impl.HeadlessDataManager
- com.intellij.ide.impl.DataManagerImpl
- <init>():V
- s:fallbackToProductionDataManager(com.intellij.openapi.Disposable):V
- getDataContext():com.intellij.openapi.actionSystem.DataContext
- getDataContext(java.awt.Component):com.intellij.openapi.actionSystem.DataContext
- getDataContext(java.awt.Component,I,I):com.intellij.openapi.actionSystem.DataContext
- getDataContextFromFocusAsync():org.jetbrains.concurrency.Promise
- setTestDataProvider(com.intellij.openapi.actionSystem.DataProvider):V
- setTestDataProvider(com.intellij.openapi.actionSystem.DataProvider,com.intellij.openapi.Disposable):V
f:com.intellij.ide.impl.Origin
- <init>(java.lang.String,java.lang.String):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:copy(java.lang.String,java.lang.String):com.intellij.ide.impl.Origin
- bs:copy$default(com.intellij.ide.impl.Origin,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.ide.impl.Origin
- equals(java.lang.Object):Z
- f:getHost():java.lang.String
- f:getProtocol():java.lang.String
- hashCode():I
f:com.intellij.ide.impl.PatchProjectUtil
- s:loadPatterns(java.lang.String):java.util.Map
- s:patchProject(com.intellij.openapi.project.Project):V
- s:patchProject(com.intellij.openapi.project.Project,java.util.Map,java.util.Map):V
- s:processIncluded(com.intellij.openapi.roots.ContentEntry,java.util.Set):V
f:com.intellij.ide.impl.ProjectNewWindowDoNotAskOption
- com.intellij.openapi.ui.DialogWrapper$DoNotAskOption
- <init>():V
- canBeHidden():Z
- getDoNotShowMessage():java.lang.String
- isToBeShown():Z
- setToBeShown(Z,I):V
- shouldSaveOptionsOnCancel():Z
f:com.intellij.ide.impl.ProjectOpenKeyProvider
- com.intellij.ide.environment.EnvironmentKeyProvider
- <init>():V
- getKnownKeys():java.util.Map
- getRequiredKeys(com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.ide.impl.ProjectOpenKeyProvider$Keys
- sf:INSTANCE:com.intellij.ide.impl.ProjectOpenKeyProvider$Keys
- f:getPROJECT_OPEN_PROCESSOR():com.intellij.ide.environment.EnvironmentKey
f:com.intellij.ide.impl.ProjectOriginKt
- sf:getOriginFromUrl(java.lang.String):com.intellij.ide.impl.Origin
- sf:getProjectOriginUrl(java.nio.file.Path):java.lang.String
f:com.intellij.ide.impl.ProjectUtil
- sf:INSTANCE:com.intellij.ide.impl.ProjectUtil
- sf:closeAndDispose(com.intellij.openapi.project.Project):Z
- f:confirmLoadingFromRemotePath(java.lang.String,java.lang.String,java.lang.String):Z
- f:confirmOpenOrAttachProject():I
- f:confirmOpenOrAttachProject(com.intellij.openapi.project.Project):I
- f:confirmOpenOrAttachProject(com.intellij.openapi.project.Project,com.intellij.projectImport.ProjectAttachProcessor):I
- bs:confirmOpenOrAttachProject$default(com.intellij.ide.impl.ProjectUtil,com.intellij.openapi.project.Project,com.intellij.projectImport.ProjectAttachProcessor,I,java.lang.Object):I
- sf:findAndFocusExistingProjectForPath(java.nio.file.Path):com.intellij.openapi.project.Project
- f:findProject(java.nio.file.Path):com.intellij.openapi.project.Project
- sf:focusProjectWindow(com.intellij.openapi.project.Project,Z):V
- bs:focusProjectWindow$default(com.intellij.openapi.project.Project,Z,I,java.lang.Object):V
- sf:getActiveFrameOrWelcomeScreen():java.awt.Window
- sf:getActiveProject():com.intellij.openapi.project.Project
- sf:getBaseDir():java.lang.String
- sf:getOpenProjects():com.intellij.openapi.project.Project[]
- f:getProjectFile(java.lang.String):java.nio.file.Path
- sf:getProjectForComponent(java.awt.Component):com.intellij.openapi.project.Project
- sf:getProjectForWindow(java.awt.Window):com.intellij.openapi.project.Project
- sf:getProjectPath():java.lang.String
- f:getProjectPath(java.lang.String):java.nio.file.Path
- sf:getRootFrameForWindow(java.awt.Window):com.intellij.openapi.wm.IdeFrame
- sf:getUserHomeProjectDir():java.lang.String
- f:isRemotePath(java.lang.String):Z
- sf:isSameProject(java.nio.file.Path,com.intellij.openapi.project.Project):Z
- sf:isValidProjectPath(java.nio.file.Path):Z
- sf:isValidProjectPathAsync(java.nio.file.Path,kotlin.coroutines.Continuation):java.lang.Object
- sf:openOrCreateProject(java.lang.String,java.nio.file.Path):com.intellij.openapi.project.Project
- sf:openOrImport(java.lang.String,com.intellij.openapi.project.Project,Z):com.intellij.openapi.project.Project
- sf:openOrImport(java.nio.file.Path):com.intellij.openapi.project.Project
- sf:openOrImport(java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask):com.intellij.openapi.project.Project
- sf:openOrImport(java.nio.file.Path,com.intellij.openapi.project.Project,Z):com.intellij.openapi.project.Project
- bs:openOrImport$default(java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask,I,java.lang.Object):com.intellij.openapi.project.Project
- f:openOrImportAsync(java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask,kotlin.coroutines.Continuation):java.lang.Object
- bs:openOrImportAsync$default(com.intellij.ide.impl.ProjectUtil,java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- f:openOrImportFilesAsync(java.util.List,java.lang.String,com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- bs:openOrImportFilesAsync$default(com.intellij.ide.impl.ProjectUtil,java.util.List,java.lang.String,com.intellij.openapi.project.Project,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- f:openProject(java.lang.String,com.intellij.openapi.project.Project,Z):com.intellij.openapi.project.Project
- sf:openProject(java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask):com.intellij.openapi.project.Project
- f:showYesNoDialog(java.lang.String,java.lang.String):Z
- sf:updateLastProjectLocation(java.nio.file.Path):V
c:com.intellij.ide.impl.ProjectUtilService
- sf:Companion:com.intellij.ide.impl.ProjectUtilService$Companion
- <init>(com.intellij.openapi.project.Project):V
- focusProjectWindow(Z):V
- bs:focusProjectWindow$default(com.intellij.ide.impl.ProjectUtilService,Z,I,java.lang.Object):V
- pf:getProject():com.intellij.openapi.project.Project
f:com.intellij.ide.impl.ProjectUtilService$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.impl.ProjectUtilService
com.intellij.ide.impl.TrustStateListener
- sf:Companion:com.intellij.ide.impl.TrustStateListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- onProjectTrusted(com.intellij.openapi.project.Project):V
- onProjectTrustedFromNotification(com.intellij.openapi.project.Project):V
- onProjectUntrusted(com.intellij.openapi.project.Project):V
f:com.intellij.ide.impl.TrustStateListener$Bridge
- com.intellij.ide.trustedProjects.TrustedProjectsListener
- <init>():V
- onProjectTrusted(com.intellij.openapi.project.Project):V
- onProjectTrustedFromNotification(com.intellij.openapi.project.Project):V
- onProjectUntrusted(com.intellij.openapi.project.Project):V
f:com.intellij.ide.impl.TrustStateListener$Companion
f:com.intellij.ide.lightEdit.LightEditorInfoImpl
- com.intellij.ide.lightEdit.LightEditorInfo
- disposeEditor():V
- s:getEditor(com.intellij.ide.lightEdit.LightEditorInfo):com.intellij.openapi.editor.Editor
- s:getEditor(com.intellij.openapi.fileEditor.FileEditor):com.intellij.openapi.editor.Editor
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFileEditor():com.intellij.openapi.fileEditor.FileEditor
- getPreferredSavePath():java.nio.file.Path
- getProvider():com.intellij.openapi.fileEditor.FileEditorProvider
- isNew():Z
- isSaveRequired():Z
- isUnsaved():Z
- setPreferredSavePath(java.nio.file.Path):V
f:com.intellij.ide.lightEdit.project.LightEditDumbService
- com.intellij.openapi.Disposable
- com.intellij.openapi.project.DumbService
- com.intellij.openapi.util.ModificationTracker
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- cancelTask(com.intellij.openapi.project.DumbModeTask):V
- completeJustSubmittedTasks():V
- getModificationCount():J
- isAlternativeResolveEnabled():Z
- isDumb():Z
- queueTask(com.intellij.openapi.project.DumbModeTask):V
- runWhenSmart(java.lang.Runnable):V
- setAlternativeResolveEnabled(Z):V
- smartInvokeLater(java.lang.Runnable):V
- smartInvokeLater(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- suspendIndexingAndRun(java.lang.String,java.lang.Runnable):V
- unsafeRunWhenSmart(java.lang.Runnable):V
- waitForSmartMode():V
- wrapGently(javax.swing.JComponent,com.intellij.openapi.Disposable):javax.swing.JComponent
- wrapWithSpoiler(javax.swing.JComponent,java.lang.Runnable,com.intellij.openapi.Disposable):javax.swing.JComponent
f:com.intellij.ide.passwordSafe.impl.providers.EncryptionUtil
- sf:SECRET_KEY_SIZE_BYTES:I
- s:decryptText(B[],B[]):com.intellij.credentialStore.OneTimeString
- s:encryptKey(B[],B[]):B[]
- s:encryptText(B[],com.intellij.credentialStore.OneTimeString):B[]
- s:genKey(B[]):B[]
- s:getUTF8Bytes(java.lang.String):B[]
- s:hash(B[][]):B[]
- s:rawKey(com.intellij.credentialStore.CredentialAttributes):B[]
f:com.intellij.ide.passwordSafe.ui.PasswordPromptComponent
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(Z,java.lang.String):V
- <init>(Z,java.lang.String,Z,java.lang.String):V
- getComponent():javax.swing.JComponent
- getPassword():C[]
- getPreferredFocusedComponent():javax.swing.JComponent
- getUserName():java.lang.String
- isRememberSelected():Z
- setPassword(java.lang.String):V
- setUserName(java.lang.String):V
c:com.intellij.ide.plugins.CountComponent
- javax.swing.JLabel
- <init>():V
- getForeground():java.awt.Color
- p:getOvalColor():java.awt.Color
- getPreferredSize():java.awt.Dimension
- p:paintComponent(java.awt.Graphics):V
- setSelected(Z):V
f:com.intellij.ide.plugins.CountIcon
- com.intellij.ide.plugins.CountComponent
- javax.swing.Icon
- <init>():V
- getIconHeight():I
- getIconWidth():I
- paintIcon(java.awt.Component,java.awt.Graphics,I,I):V
f:com.intellij.ide.plugins.CreateAllServicesAndExtensionsActionKt
- sf:ACTION_ID:java.lang.String
- sf:performAction():V
f:com.intellij.ide.plugins.CustomPluginRepositoryService
- com.intellij.ide.plugins.auth.PluginRepositoryAuthListener
- <init>():V
- authenticationChanged():V
- clearCache():V
- getCustomRepositoryPluginMap():java.util.Map
- getCustomRepositoryPlugins():java.util.Collection
- s:getInstance():com.intellij.ide.plugins.CustomPluginRepositoryService
f:com.intellij.ide.plugins.DefaultPluginManagementPolicy
- <init>():V
- canEnablePlugin(com.intellij.ide.plugins.IdeaPluginDescriptor):Z
- canInstallPlugin(com.intellij.ide.plugins.IdeaPluginDescriptor):Z
- isDowngradeAllowed(com.intellij.ide.plugins.IdeaPluginDescriptor,com.intellij.ide.plugins.IdeaPluginDescriptor):Z
- isInstallFromDiskAllowed():Z
- isPluginAutoUpdateAllowed():Z
- isUpgradeAllowed(com.intellij.ide.plugins.IdeaPluginDescriptor,com.intellij.ide.plugins.IdeaPluginDescriptor):Z
com.intellij.ide.plugins.DependencyCollector
- a:collectDependencies(com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.ide.plugins.DynamicPlugins
- sf:INSTANCE:com.intellij.ide.plugins.DynamicPlugins
- sf:allowLoadUnloadSynchronously(com.intellij.ide.plugins.IdeaPluginDescriptorImpl):Z
- sf:allowLoadUnloadWithoutRestart(com.intellij.ide.plugins.IdeaPluginDescriptorImpl):Z
- sf:allowLoadUnloadWithoutRestart(com.intellij.ide.plugins.IdeaPluginDescriptorImpl,com.intellij.ide.plugins.IdeaPluginDescriptorImpl):Z
- sf:allowLoadUnloadWithoutRestart(com.intellij.ide.plugins.IdeaPluginDescriptorImpl,com.intellij.ide.plugins.IdeaPluginDescriptorImpl,java.util.List):Z
- bs:allowLoadUnloadWithoutRestart$default(com.intellij.ide.plugins.IdeaPluginDescriptorImpl,com.intellij.ide.plugins.IdeaPluginDescriptorImpl,java.util.List,I,java.lang.Object):Z
- f:checkCanUnloadWithoutRestart(com.intellij.ide.plugins.IdeaPluginDescriptorImpl):java.lang.String
- f:loadPlugin(com.intellij.ide.plugins.IdeaPluginDescriptorImpl):Z
- f:loadPlugin(com.intellij.ide.plugins.IdeaPluginDescriptorImpl,com.intellij.openapi.project.Project):Z
- bs:loadPlugin$default(com.intellij.ide.plugins.DynamicPlugins,com.intellij.ide.plugins.IdeaPluginDescriptorImpl,com.intellij.openapi.project.Project,I,java.lang.Object):Z
- f:loadPlugins(java.util.Collection,com.intellij.openapi.project.Project):Z
- f:onPluginUnload(com.intellij.openapi.Disposable,java.lang.Runnable):V
- f:runAfter(Z,java.lang.Runnable):V
- f:unloadPlugin(com.intellij.ide.plugins.IdeaPluginDescriptorImpl):Z
- f:unloadPlugin(com.intellij.ide.plugins.IdeaPluginDescriptorImpl,com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions):Z
- bs:unloadPlugin$default(com.intellij.ide.plugins.DynamicPlugins,com.intellij.ide.plugins.IdeaPluginDescriptorImpl,com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions,I,java.lang.Object):Z
- f:unloadPluginWithProgress(com.intellij.openapi.project.Project,javax.swing.JComponent,com.intellij.ide.plugins.IdeaPluginDescriptorImpl,com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions):Z
- bs:unloadPluginWithProgress$default(com.intellij.ide.plugins.DynamicPlugins,com.intellij.openapi.project.Project,javax.swing.JComponent,com.intellij.ide.plugins.IdeaPluginDescriptorImpl,com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions,I,java.lang.Object):Z
- f:unloadPlugins(java.util.Collection,com.intellij.openapi.project.Project,javax.swing.JComponent,com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions):Z
- bs:unloadPlugins$default(com.intellij.ide.plugins.DynamicPlugins,java.util.Collection,com.intellij.openapi.project.Project,javax.swing.JComponent,com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions,I,java.lang.Object):Z
f:com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions
- <init>():V
- <init>(Z,Z,Z,Z,Z,Z,java.lang.Integer):V
- b:<init>(Z,Z,Z,Z,Z,Z,java.lang.Integer,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():Z
- f:component2():Z
- f:component3():Z
- f:component4():Z
- f:component5():Z
- f:component6():Z
- f:component7():java.lang.Integer
- f:copy(Z,Z,Z,Z,Z,Z,java.lang.Integer):com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions
- bs:copy$default(com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions,Z,Z,Z,Z,Z,Z,java.lang.Integer,I,java.lang.Object):com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions
- equals(java.lang.Object):Z
- f:getCheckImplementationDetailDependencies():Z
- f:getDisable():Z
- f:getRequireMemorySnapshot():Z
- f:getSave():Z
- f:getUnloadWaitTimeout():java.lang.Integer
- f:getWaitForClassloaderUnload():Z
- hashCode():I
- f:isUpdate():Z
- f:setCheckImplementationDetailDependencies(Z):V
- f:setDisable(Z):V
- f:setRequireMemorySnapshot(Z):V
- f:setSave(Z):V
- f:setUnloadWaitTimeout(java.lang.Integer):V
- f:setUpdate(Z):V
- f:setWaitForClassloaderUnload(Z):V
- f:withCheckImplementationDetailDependencies(Z):com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions
- f:withDisable(Z):com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions
- f:withRequireMemorySnapshot(Z):com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions
- f:withSave(Z):com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions
- f:withUnloadWaitTimeout(I):com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions
- f:withUpdate(Z):com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions
- f:withWaitForClassloaderUnload(Z):com.intellij.ide.plugins.DynamicPlugins$UnloadPluginOptions
c:com.intellij.ide.plugins.HeadlessPluginsInstaller
- com.intellij.openapi.application.ApplicationStarter
- <init>():V
- getRequiredModality():I
- s:installPlugins(java.util.Set):java.util.Collection
- main(java.util.List):V
f:com.intellij.ide.plugins.InstalledPluginsState
- sf:RESTART_REQUIRED_MESSAGE:java.lang.String
- <init>():V
- s:addPreInstalledPlugin(com.intellij.ide.plugins.IdeaPluginDescriptor):V
- clearShutdownCallback():V
- getInstalledPlugins():java.util.Collection
- s:getInstance():com.intellij.ide.plugins.InstalledPluginsState
- s:getInstanceIfLoaded():com.intellij.ide.plugins.InstalledPluginsState
- getUpdatedPlugins():java.util.Collection
- hasNewerVersion(com.intellij.openapi.extensions.PluginId):Z
- isRestartRequired():Z
- onDescriptorDownload(com.intellij.ide.plugins.IdeaPluginDescriptor):V
- onPluginInstall(com.intellij.ide.plugins.IdeaPluginDescriptor,Z,Z):V
- onPluginUninstall(com.intellij.ide.plugins.IdeaPluginDescriptor,Z):V
- resetChangesAppliedWithoutRestart():V
- runShutdownCallback():V
- setRestartRequired(Z):V
- setShutdownCallback(java.lang.Runnable):V
- trackPluginInstallation(java.lang.Runnable):V
- wasInstalled(com.intellij.openapi.extensions.PluginId):Z
- wasInstalledWithoutRestart(com.intellij.openapi.extensions.PluginId):Z
- wasUninstalledWithoutRestart(com.intellij.openapi.extensions.PluginId):Z
- wasUpdated(com.intellij.openapi.extensions.PluginId):Z
- wasUpdatedWithRestart(com.intellij.openapi.extensions.PluginId):Z
c:com.intellij.ide.plugins.InstalledPluginsTableModel
- psf:HIDE_IMPLEMENTATION_DETAILS:Z
- pf:view:java.util.List
- <init>(com.intellij.openapi.project.Project):V
- pf:enableRows(java.util.Collection,com.intellij.ide.plugins.PluginEnableDisableAction):V
- pf:getEnabledMap():java.util.Map
- ps:getPluginNameOrId(com.intellij.openapi.extensions.PluginId,com.intellij.ide.plugins.IdeaPluginDescriptor):java.lang.String
- pf:getProject():com.intellij.openapi.project.Project
- p:handleBeforeChangeEnableState(com.intellij.ide.plugins.IdeaPluginDescriptor,com.intellij.openapi.util.Pair):V
- ps:isDeleted(com.intellij.ide.plugins.IdeaPluginDescriptor):Z
- ps:isDisabled(com.intellij.openapi.extensions.PluginId,java.util.Map):Z
- ps:isEnabled(com.intellij.openapi.extensions.PluginId,java.util.Map):Z
- ps:isHidden(com.intellij.ide.plugins.IdeaPluginDescriptor):Z
- ps:isHiddenImplementationDetail(com.intellij.ide.plugins.IdeaPluginDescriptor):Z
- f:isLoaded(com.intellij.openapi.extensions.PluginId):Z
- ps:isLoaded(com.intellij.openapi.extensions.PluginId,java.util.Map):Z
- pf:setEnabled(com.intellij.openapi.extensions.PluginId,com.intellij.ide.plugins.PluginEnabledState):V
- p:updatePluginDependencies(java.util.Map):V
f:com.intellij.ide.plugins.LinkPanel
- <init>(javax.swing.JPanel,Z):V
- <init>(javax.swing.JPanel,Z,Z,java.lang.Object,java.lang.Object):V
- hide():V
- show(java.lang.String,java.lang.Runnable):V
- showWithBrowseUrl(java.lang.String,java.lang.String,Z,java.util.function.Supplier):V
- showWithBrowseUrl(java.lang.String,Z,java.util.function.Supplier):V
a:com.intellij.ide.plugins.MultiPanel
- com.intellij.ui.CardLayoutPanel
- <init>():V
- p:create(java.lang.Integer):javax.swing.JComponent
- p:prepare(java.lang.Integer):java.lang.Integer
f:com.intellij.ide.plugins.PendingDynamicPluginInstall
- <init>(java.nio.file.Path,com.intellij.ide.plugins.IdeaPluginDescriptorImpl):V
- f:component1():java.nio.file.Path
- f:component2():com.intellij.ide.plugins.IdeaPluginDescriptorImpl
- f:copy(java.nio.file.Path,com.intellij.ide.plugins.IdeaPluginDescriptorImpl):com.intellij.ide.plugins.PendingDynamicPluginInstall
- bs:copy$default(com.intellij.ide.plugins.PendingDynamicPluginInstall,java.nio.file.Path,com.intellij.ide.plugins.IdeaPluginDescriptorImpl,I,java.lang.Object):com.intellij.ide.plugins.PendingDynamicPluginInstall
- equals(java.lang.Object):Z
- f:getFile():java.nio.file.Path
- f:getPluginDescriptor():com.intellij.ide.plugins.IdeaPluginDescriptorImpl
- hashCode():I
e:com.intellij.ide.plugins.PluginEnableDisableAction
- java.lang.Enum
- sf:DISABLE_GLOBALLY:com.intellij.ide.plugins.PluginEnableDisableAction
- sf:ENABLE_GLOBALLY:com.intellij.ide.plugins.PluginEnableDisableAction
- apply(com.intellij.ide.plugins.PluginEnabledState):com.intellij.ide.plugins.PluginEnabledState
- getPresentableText():java.lang.String
- s:globally(Z):com.intellij.ide.plugins.PluginEnableDisableAction
- isApplicable(com.intellij.ide.plugins.PluginEnabledState):Z
- isDisable():Z
- isEnable():Z
- s:valueOf(java.lang.String):com.intellij.ide.plugins.PluginEnableDisableAction
- s:values():com.intellij.ide.plugins.PluginEnableDisableAction[]
com.intellij.ide.plugins.PluginEnableStateChangedListener
- a:stateChanged(java.util.Collection,Z):V
e:com.intellij.ide.plugins.PluginEnabledState
- java.lang.Enum
- sf:DISABLED:com.intellij.ide.plugins.PluginEnabledState
- sf:ENABLED:com.intellij.ide.plugins.PluginEnabledState
- getPresentableText():java.lang.String
- s:getState(Z):com.intellij.ide.plugins.PluginEnabledState
- isDisabled():Z
- isEnabled():Z
- s:valueOf(java.lang.String):com.intellij.ide.plugins.PluginEnabledState
- s:values():com.intellij.ide.plugins.PluginEnabledState[]
f:com.intellij.ide.plugins.PluginHostsConfigurable
- com.intellij.openapi.options.Configurable
- com.intellij.openapi.options.Configurable$NoScroll
- <init>():V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- getDisplayName():java.lang.String
- isModified():Z
- reset():V
f:com.intellij.ide.plugins.PluginInstallCallbackData
- <init>(java.nio.file.Path,com.intellij.ide.plugins.IdeaPluginDescriptorImpl,Z):V
- f:component1():java.nio.file.Path
- f:component2():com.intellij.ide.plugins.IdeaPluginDescriptorImpl
- f:component3():Z
- f:copy(java.nio.file.Path,com.intellij.ide.plugins.IdeaPluginDescriptorImpl,Z):com.intellij.ide.plugins.PluginInstallCallbackData
- bs:copy$default(com.intellij.ide.plugins.PluginInstallCallbackData,java.nio.file.Path,com.intellij.ide.plugins.IdeaPluginDescriptorImpl,Z,I,java.lang.Object):com.intellij.ide.plugins.PluginInstallCallbackData
- equals(java.lang.Object):Z
- f:getFile():java.nio.file.Path
- f:getPluginDescriptor():com.intellij.ide.plugins.IdeaPluginDescriptorImpl
- f:getRestartNeeded():Z
- hashCode():I
f:com.intellij.ide.plugins.PluginInstaller
- sf:UNKNOWN_HOST_MARKER:java.lang.String
- s:addStateListener(com.intellij.ide.plugins.PluginStateListener):V
- s:installAndLoadDynamicPlugin(java.nio.file.Path,com.intellij.ide.plugins.IdeaPluginDescriptorImpl):Z
- s:installAndLoadDynamicPlugin(java.nio.file.Path,javax.swing.JComponent,com.intellij.ide.plugins.IdeaPluginDescriptorImpl):Z
- s:rootEntryName(java.nio.file.Path):java.lang.String
- s:unpackPlugin(java.nio.file.Path,java.nio.file.Path):java.nio.file.Path
f:com.intellij.ide.plugins.PluginManagerMain
- s:checkThirdPartyPluginsAllowed(java.util.Collection):Z
- s:downloadPlugins(java.util.List,java.util.Collection,Z,java.lang.Runnable,com.intellij.ide.plugins.PluginEnabler,com.intellij.openapi.application.ModalityState,java.util.function.Consumer):Z
- s:downloadPlugins(java.util.List,java.util.List,java.lang.Runnable,com.intellij.ide.plugins.PluginManagerMain$PluginEnabler,java.lang.Runnable):Z
- s:downloadPluginsAndCleanup(java.util.List,java.util.Collection,java.lang.Runnable,com.intellij.ide.plugins.PluginEnabler,com.intellij.openapi.application.ModalityState,java.lang.Runnable):Z
- s:downloadPluginsModal(java.util.List,java.util.Collection,Z,java.lang.Runnable,com.intellij.ide.plugins.PluginEnabler,com.intellij.openapi.application.ModalityState,java.util.function.Consumer):Z
- s:notifyPluginsUpdated(com.intellij.openapi.project.Project):V
- s:suggestToEnableInstalledDependantPlugins(com.intellij.ide.plugins.PluginEnabler,java.util.List):Z
f:com.intellij.ide.plugins.PluginManagerMain$MyHyperlinkListener
- com.intellij.ui.HyperlinkAdapter
- <init>():V
com.intellij.ide.plugins.PluginManagerMain$PluginEnabler
- com.intellij.ide.plugins.PluginEnabler
- disable(java.util.Collection):Z
- disableById(java.util.Set):Z
- enable(java.util.Collection):Z
- enableById(java.util.Set):Z
- isDisabled(com.intellij.openapi.extensions.PluginId):Z
f:com.intellij.ide.plugins.PluginManagerMain$PluginEnabler$HEADLESS
- com.intellij.ide.plugins.PluginManagerMain$PluginEnabler
- <init>():V
f:com.intellij.ide.plugins.PluginManagerUISettings
- com.intellij.openapi.components.PersistentStateComponent
- com.intellij.openapi.progress.PerformInBackgroundOption
- UPDATE_IN_BACKGROUND:Z
- <init>():V
- s:getInstance():com.intellij.ide.plugins.PluginManagerUISettings
- getState():com.intellij.ide.plugins.PluginManagerUISettings
- loadState(com.intellij.ide.plugins.PluginManagerUISettings):V
- processSentToBackground():V
- shouldStartInBackground():Z
f:com.intellij.ide.plugins.PluginNode
- com.intellij.ide.plugins.IdeaPluginDescriptor
- <init>(com.intellij.openapi.extensions.PluginId):V
- <init>(com.intellij.openapi.extensions.PluginId,java.lang.String,java.lang.String):V
- addDepends(java.lang.String):V
- addDepends(java.lang.String,Z):V
- addTags(java.lang.String):V
- detailsLoaded():Z
- equals(java.lang.Object):Z
- getBugtrackerUrl():java.lang.String
- getCategory():java.lang.String
- getChangeNotes():java.lang.String
- getDate():J
- getDefaultTrialPeriod():java.lang.Integer
- getDependencies():java.util.List
- getDependencyNames():java.util.Collection
- getDescription():java.lang.String
- getDescriptorPath():java.lang.String
- getDocumentationUrl():java.lang.String
- getDownloadUrl():java.lang.String
- getDownloads():java.lang.String
- getExternalPluginId():java.lang.String
- getExternalPluginIdForScreenShots():java.lang.String
- getExternalUpdateId():java.lang.String
- getForumUrl():java.lang.String
- getInstalledVersion():java.lang.String
- getIntegerSize():J
- getIsPaid():Z
- getLicenseUrl():java.lang.String
- getName():java.lang.String
- getOrganization():java.lang.String
- getPluginClassLoader():java.lang.ClassLoader
- getPluginId():com.intellij.openapi.extensions.PluginId
- getPluginPath():java.nio.file.Path
- getPresentableDate():java.lang.String
- getPresentableDownloads():java.lang.String
- getPresentableRating():java.lang.String
- getPresentableSize():java.lang.String
- getProductCode():java.lang.String
- getRating():java.lang.String
- getReleaseDate():java.util.Date
- getReleaseVersion():I
- getReportPluginUrl():java.lang.String
- getRepositoryName():java.lang.String
- getResourceBundleBaseName():java.lang.String
- getScreenShots():java.util.List
- getSinceBuild():java.lang.String
- getSize():java.lang.String
- getSourceCodeUrl():java.lang.String
- getStatus():com.intellij.ide.plugins.PluginNode$Status
- getSuggestedCommercialIde():java.lang.String
- getSuggestedFeatures():java.util.Collection
- getTags():java.util.List
- getTrialPeriod():java.lang.Integer
- getUntilBuild():java.lang.String
- getUrl():java.lang.String
- getVendor():java.lang.String
- getVendorEmail():java.lang.String
- getVendorUrl():java.lang.String
- getVerifiedName():java.lang.String
- getVersion():java.lang.String
- hashCode():I
- isConverted():Z
- isEnabled():Z
- isIncomplete():Z
- isLicenseOptional():Z
- isLoaded():Z
- isTrader():Z
- isVerified():Z
- setBugtrackerUrl(java.lang.String):V
- setCategory(java.lang.String):V
- setChangeNotes(java.lang.String):V
- setConverted(Z):V
- setDate(java.lang.Long):V
- setDate(java.lang.String):V
- setDefaultTrialPeriod(java.lang.Integer):V
- setDependencies(java.util.List):V
- setDependencyNames(java.util.Collection):V
- setDepends(java.util.List,com.intellij.openapi.extensions.PluginId[]):V
- setDescription(java.lang.String):V
- setDocumentationUrl(java.lang.String):V
- setDownloadUrl(java.lang.String):V
- setDownloads(java.lang.String):V
- setEnabled(Z):V
- setExternalPluginId(java.lang.String):V
- setExternalPluginIdForScreenShots(java.lang.String):V
- setExternalUpdateId(java.lang.String):V
- setForumUrl(java.lang.String):V
- setId(java.lang.String):V
- setIncomplete(Z):V
- setInstalledVersion(java.lang.String):V
- setIsPaid(Z):V
- setLicenseOptional(Z):V
- setLicenseUrl(java.lang.String):V
- setLoaded(Z):V
- setName(java.lang.String):V
- setOrganization(java.lang.String):V
- setProductCode(java.lang.String):V
- setRating(java.lang.String):V
- setReleaseDate(java.util.Date):V
- setReleaseVersion(I):V
- setReportPluginUrl(java.lang.String):V
- setRepositoryName(java.lang.String):V
- setScreenShots(java.util.List):V
- setSinceBuild(java.lang.String):V
- setSize(java.lang.String):V
- setSourceCodeUrl(java.lang.String):V
- setStatus(com.intellij.ide.plugins.PluginNode$Status):V
- setSuggestedCommercialIde(java.lang.String):V
- setSuggestedFeatures(java.util.Collection):V
- setTags(java.util.List):V
- setTrader(Z):V
- setTrialPeriod(java.lang.Integer):V
- setUntilBuild(java.lang.String):V
- setUrl(java.lang.String):V
- setVendor(java.lang.String):V
- setVendorEmail(java.lang.String):V
- setVendorUrl(java.lang.String):V
- setVerified(Z):V
- setVerifiedName(java.lang.String):V
- setVersion(java.lang.String):V
e:com.intellij.ide.plugins.PluginNode$Status
- java.lang.Enum
- sf:DELETED:com.intellij.ide.plugins.PluginNode$Status
- sf:DOWNLOADED:com.intellij.ide.plugins.PluginNode$Status
- sf:INSTALLED:com.intellij.ide.plugins.PluginNode$Status
- sf:UNKNOWN:com.intellij.ide.plugins.PluginNode$Status
- s:valueOf(java.lang.String):com.intellij.ide.plugins.PluginNode$Status
- s:values():com.intellij.ide.plugins.PluginNode$Status[]
com.intellij.ide.plugins.PluginStateListener
- a:install(com.intellij.ide.plugins.IdeaPluginDescriptor):V
- uninstall(com.intellij.ide.plugins.IdeaPluginDescriptor):V
f:com.intellij.ide.plugins.PluginStateManager
- <init>():V
- s:addStateListener(com.intellij.ide.plugins.PluginStateListener):V
- s:removeStateListener(com.intellij.ide.plugins.PluginStateListener):V
a:com.intellij.ide.plugins.PluginUpdateStatus
- sf:Companion:com.intellij.ide.plugins.PluginUpdateStatus$Companion
- f:getTimestamp():J
- f:mergeWith(com.intellij.ide.plugins.PluginUpdateStatus):com.intellij.ide.plugins.PluginUpdateStatus
f:com.intellij.ide.plugins.PluginUpdateStatus$CheckFailed
- com.intellij.ide.plugins.PluginUpdateStatus
- <init>(java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getDetail():java.lang.String
- f:getMessage():java.lang.String
f:com.intellij.ide.plugins.PluginUpdateStatus$Companion
- f:fromException(java.lang.String,java.lang.Exception):com.intellij.ide.plugins.PluginUpdateStatus
f:com.intellij.ide.plugins.PluginUpdateStatus$LatestVersionInstalled
- com.intellij.ide.plugins.PluginUpdateStatus
- sf:INSTANCE:com.intellij.ide.plugins.PluginUpdateStatus$LatestVersionInstalled
f:com.intellij.ide.plugins.PluginUpdateStatus$Unverified
- com.intellij.ide.plugins.PluginUpdateStatus
- <init>(java.lang.String,java.lang.String,com.intellij.ide.plugins.PluginUpdateStatus$Update):V
- f:getReason():java.lang.String
- f:getUpdateStatus():com.intellij.ide.plugins.PluginUpdateStatus$Update
- f:getVerifierName():java.lang.String
f:com.intellij.ide.plugins.PluginUpdateStatus$Update
- com.intellij.ide.plugins.PluginUpdateStatus
- <init>(com.intellij.ide.plugins.IdeaPluginDescriptor,java.lang.String):V
- f:getHostToInstallFrom():java.lang.String
- f:getPluginDescriptor():com.intellij.ide.plugins.IdeaPluginDescriptor
f:com.intellij.ide.plugins.RepositoryHelper
- <init>():V
- s:addMarketplacePluginDependencyIfRequired(com.intellij.ide.plugins.PluginNode):V
- s:getCustomPluginRepositoryHosts():java.util.List
- s:getPluginHosts():java.util.List
- s:loadPlugins(java.lang.String,com.intellij.openapi.progress.ProgressIndicator):java.util.List
- s:loadPlugins(java.lang.String,com.intellij.openapi.util.BuildNumber,com.intellij.openapi.progress.ProgressIndicator):java.util.List
- s:loadPlugins(java.util.Set):java.util.Collection
c:com.intellij.ide.plugins.StandalonePluginUpdateChecker
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.ide.plugins.StandalonePluginUpdateChecker$Companion
- <init>(com.intellij.openapi.extensions.PluginId,java.lang.String,com.intellij.notification.NotificationGroup,javax.swing.Icon):V
- dispose():V
- psf:getCACHED_REQUEST_DELAY():J
- getCurrentVersion():java.lang.String
- pf:getLastUpdateStatus():com.intellij.ide.plugins.PluginUpdateStatus
- f:getPluginId():com.intellij.openapi.extensions.PluginId
- f:installPluginUpdate(com.intellij.ide.plugins.PluginUpdateStatus$Update,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0):V
- bs:installPluginUpdate$default(com.intellij.ide.plugins.StandalonePluginUpdateChecker,com.intellij.ide.plugins.PluginUpdateStatus$Update,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,I,java.lang.Object):V
- f:pluginUsed():V
- pf:queueUpdateCheck(kotlin.jvm.functions.Function1):V
- pf:setLastUpdateStatus(com.intellij.ide.plugins.PluginUpdateStatus):V
- skipUpdateCheck():Z
- pf:updateCheck(kotlin.jvm.functions.Function1):V
- verifyUpdate(com.intellij.ide.plugins.PluginUpdateStatus$Update):com.intellij.ide.plugins.PluginUpdateStatus
f:com.intellij.ide.plugins.StandalonePluginUpdateChecker$Companion
f:com.intellij.ide.plugins.UIComponentFileEditor
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.fileEditor.FileEditor
- <init>(com.intellij.ide.plugins.UIComponentVirtualFile):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- dispose():V
- getComponent():javax.swing.JComponent
- getFile():com.intellij.openapi.vfs.VirtualFile
- getName():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- isModified():Z
- isValid():Z
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- setState(com.intellij.openapi.fileEditor.FileEditorState):V
a:com.intellij.ide.plugins.UIComponentVirtualFile
- com.intellij.testFramework.LightVirtualFile
- com.intellij.openapi.vfs.VirtualFileWithoutContent
- <init>(java.lang.String,javax.swing.Icon):V
- a:createContent(com.intellij.ide.plugins.UIComponentFileEditor):com.intellij.ide.plugins.UIComponentVirtualFile$Content
- getPath():java.lang.String
com.intellij.ide.plugins.UIComponentVirtualFile$Content
- a:createComponent():javax.swing.JComponent
- getPreferredFocusedComponent(javax.swing.JComponent):javax.swing.JComponent
com.intellij.ide.plugins.auth.PluginRepositoryAuthListener
- sf:PLUGIN_REPO_AUTH_CHANGED_TOPIC:com.intellij.util.messages.Topic
- a:authenticationChanged():V
- s:notifyAuthChanged():V
com.intellij.ide.plugins.auth.PluginRepositoryAuthProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:canHandle(java.lang.String):Z
- a:getAuthHeaders(java.lang.String):java.util.Map
f:com.intellij.ide.plugins.auth.PluginRepositoryAuthService
- <init>():V
- f:getAllCustomHeaders(java.lang.String):java.util.Map
- f:getConnectionTuner():com.intellij.util.io.HttpRequests$ConnectionTuner
e:com.intellij.ide.plugins.enums.PluginsGroupType
- java.lang.Enum
- sf:BUNDLED_UPDATE:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:CUSTOM_REPOSITORY:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:INSTALLED:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:INSTALLING:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:INTERNAL:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:NEW_AND_UPDATED:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:SEARCH:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:SEARCH_INSTALLED:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:STAFF_PICKS:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:SUGGESTED:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:TOP_DOWNLOADS:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:TOP_RATED:com.intellij.ide.plugins.enums.PluginsGroupType
- sf:UPDATE:com.intellij.ide.plugins.enums.PluginsGroupType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ide.plugins.enums.PluginsGroupType
- s:values():com.intellij.ide.plugins.enums.PluginsGroupType[]
e:com.intellij.ide.plugins.enums.SortBy
- java.lang.Enum
- sf:Companion:com.intellij.ide.plugins.enums.SortBy$Companion
- sf:DOWNLOADS:com.intellij.ide.plugins.enums.SortBy
- sf:NAME:com.intellij.ide.plugins.enums.SortBy
- sf:RATING:com.intellij.ide.plugins.enums.SortBy
- sf:RELEVANCE:com.intellij.ide.plugins.enums.SortBy
- sf:UPDATE_DATE:com.intellij.ide.plugins.enums.SortBy
- sf:getByQueryOrNull(java.lang.String):com.intellij.ide.plugins.enums.SortBy
- s:getEntries():kotlin.enums.EnumEntries
- f:getMpParameter():java.lang.String
- f:getPresentableNameSupplier():java.util.function.Supplier
- f:getQuery():java.lang.String
- s:valueOf(java.lang.String):com.intellij.ide.plugins.enums.SortBy
- s:values():com.intellij.ide.plugins.enums.SortBy[]
f:com.intellij.ide.plugins.enums.SortBy$Companion
- f:getByQueryOrNull(java.lang.String):com.intellij.ide.plugins.enums.SortBy
f:com.intellij.ide.plugins.marketplace.IdeCompatibleUpdate
- <init>():V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:component3():java.lang.String
- f:component4():java.lang.String
- f:copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String):com.intellij.ide.plugins.marketplace.IdeCompatibleUpdate
- bs:copy$default(com.intellij.ide.plugins.marketplace.IdeCompatibleUpdate,java.lang.String,java.lang.String,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.ide.plugins.marketplace.IdeCompatibleUpdate
- equals(java.lang.Object):Z
- f:getExternalPluginId():java.lang.String
- f:getExternalUpdateId():java.lang.String
- f:getPluginId():java.lang.String
- f:getVersion():java.lang.String
- hashCode():I
f:com.intellij.ide.plugins.marketplace.MarketplaceRequestsKt
- sf:setHeadersViaTuner(com.intellij.util.io.RequestBuilder):com.intellij.util.io.RequestBuilder
c:com.intellij.ide.plugins.newui.ColorButton
- javax.swing.JButton
- psf:WhiteForeground:java.awt.Color
- <init>():V
- pf:setBgColor(java.awt.Color):V
- pf:setBorderColor(java.awt.Color):V
- pf:setFocusedBgColor(java.awt.Color):V
- pf:setFocusedBorderColor(java.awt.Color):V
- pf:setFocusedTextColor(java.awt.Color):V
- pf:setTextColor(java.awt.Color):V
- s:setWidth(javax.swing.JButton,I):V
- s:setWidth72(javax.swing.JButton):V
f:com.intellij.ide.plugins.newui.EmptyCaret
- javax.swing.text.Caret
- sf:INSTANCE:javax.swing.text.Caret
- <init>():V
- addChangeListener(javax.swing.event.ChangeListener):V
- deinstall(javax.swing.text.JTextComponent):V
- getBlinkRate():I
- getDot():I
- getMagicCaretPosition():java.awt.Point
- getMark():I
- install(javax.swing.text.JTextComponent):V
- isSelectionVisible():Z
- isVisible():Z
- moveDot(I):V
- paint(java.awt.Graphics):V
- removeChangeListener(javax.swing.event.ChangeListener):V
- setBlinkRate(I):V
- setDot(I):V
- setMagicCaretPosition(java.awt.Point):V
- setSelectionVisible(Z):V
- setVisible(Z):V
c:com.intellij.ide.plugins.newui.HorizontalLayout
- com.intellij.util.ui.AbstractLayoutManager
- pf:myOffset:I
- <init>(I):V
- layoutContainer(java.awt.Container):V
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
c:com.intellij.ide.plugins.newui.InstallButton
- com.intellij.ide.plugins.newui.ColorButton
- <init>(java.lang.String,Z):V
- <init>(Z):V
- <init>(Z,Z):V
- setButtonColors(Z):V
- setEnabled(Z,java.lang.String):V
- p:setTextAndSize():V
- updateUI():V
c:com.intellij.ide.plugins.newui.LinkComponent
- com.intellij.ui.components.labels.LinkLabel
- <init>():V
- p:getTextColor():java.awt.Color
c:com.intellij.ide.plugins.newui.OneLineProgressIndicator
- com.intellij.openapi.wm.impl.status.InlineProgressIndicator
- <init>():V
- <init>(java.lang.String,Z):V
- <init>(Z):V
- <init>(Z,Z):V
- p:cancelRequest():V
- createBaselineWrapper():javax.swing.JComponent
- setCancelRunnable(java.lang.Runnable):V
- s:task(java.lang.String):com.intellij.openapi.progress.TaskInfo
f:com.intellij.ide.plugins.newui.PluginLogo
- sf:INSTANCE:com.intellij.ide.plugins.newui.PluginLogo
- sf:endBatchMode():V
- sf:getIcon(com.intellij.ide.plugins.IdeaPluginDescriptor,Z,Z,Z):javax.swing.Icon
- f:height():I
- sf:startBatchMode():V
- sf:toURL(java.lang.Object):java.net.URL
- f:width():I
c:com.intellij.ide.plugins.newui.PluginSearchTextField
- com.intellij.ui.SearchTextField
- <init>():V
- addNotify():V
- getPreferredSize():java.awt.Dimension
- isSkipDocumentEvents():Z
- setBounds(I,I,I,I):V
- p:setEmptyHistory():V
- setHistoryPropertyName(java.lang.String):V
- setSelectedItem(java.lang.String):V
- setTextIgnoreEvents(java.lang.String):V
- p:showCompletionPopup():V
c:com.intellij.ide.plugins.newui.PluginUpdatesService
- <init>():V
- calculateUpdates(java.util.function.Consumer):V
- dispose():V
- finishUpdate():V
- s:getUpdates():java.util.Collection
- s:getUpdatesTooltip():java.lang.String
- s:isNeedUpdate(com.intellij.ide.plugins.IdeaPluginDescriptor):Z
- s:reapplyFilter():V
- recalculateUpdates():V
a:com.intellij.ide.plugins.newui.SearchPopupController
- pf:myTextField:com.intellij.ide.plugins.newui.PluginSearchTextField
- <init>(com.intellij.ide.plugins.newui.PluginSearchTextField):V
- pa:getAttributes():java.util.List
- pa:getValues(java.lang.String):java.util.Collection
- p:handleEnter():V
- handleEnter(java.awt.event.KeyEvent):Z
- p:handlePopupListFirstSelection():V
- handleShowPopup():V
- handleUpDown(java.awt.event.KeyEvent):Z
- hidePopup():V
- isPopupShow():Z
- showAttributesPopup(java.lang.String,I):V
- pa:showPopupForQuery():V
a:com.intellij.ide.plugins.newui.SearchQueryParser
- searchQuery:java.lang.String
- <init>():V
- p:addToSearchQuery(java.lang.String):V
- s:getTagQuery(java.lang.String):java.lang.String
- ps:splitQuery(java.lang.String):java.util.List
- s:wrapAttribute(java.lang.String):java.lang.String
c:com.intellij.ide.plugins.newui.SearchQueryParser$Installed
- com.intellij.ide.plugins.newui.SearchQueryParser
- attributes:Z
- bundled:Z
- disabled:Z
- downloaded:Z
- enabled:Z
- invalid:Z
- needUpdate:Z
- f:tags:java.util.Set
- f:vendors:java.util.Set
- <init>(java.lang.String):V
- p:handleAttribute(java.lang.String,java.lang.String):V
c:com.intellij.ide.plugins.newui.SearchQueryParser$Marketplace
- com.intellij.ide.plugins.newui.SearchQueryParser
- internal:Z
- f:repositories:java.util.Set
- sortBy:com.intellij.ide.plugins.enums.SortBy
- staffPicks:Z
- suggested:Z
- f:tags:java.util.Set
- f:vendors:java.util.Set
- <init>(java.lang.String):V
- p:addToSearchQuery(java.lang.String):V
- getUrlQuery():java.lang.String
- p:handleAttribute(java.lang.String,java.lang.String):V
com.intellij.ide.plugins.newui.TabHeaderListener
- a:selectionChanged(I):V
f:com.intellij.ide.plugins.newui.TabbedPaneHeaderComponent
- javax.swing.JPanel
- <init>(com.intellij.openapi.actionSystem.DefaultActionGroup,com.intellij.ide.plugins.newui.TabHeaderListener):V
- addNotify():V
- addTab(java.lang.String,javax.swing.Icon):V
- getSelectionTab():I
- setBounds(I,I,I,I):V
- setListener():V
- setSelection(I):V
- setSelectionWithEvents(I):V
- setTabTooltip(I,java.lang.String):V
- update():V
- updateUI():V
f:com.intellij.ide.plugins.newui.TagComponent
- com.intellij.ide.plugins.newui.LinkComponent
- <init>():V
- <init>(java.lang.String):V
- setText(java.lang.String):V
e:com.intellij.ide.plugins.newui.Tags
- java.lang.Enum
- sf:EAP:com.intellij.ide.plugins.newui.Tags
- sf:Freemium:com.intellij.ide.plugins.newui.Tags
- sf:Paid:com.intellij.ide.plugins.newui.Tags
- sf:Pro:com.intellij.ide.plugins.newui.Tags
- sf:Purchased:com.intellij.ide.plugins.newui.Tags
- sf:Trial:com.intellij.ide.plugins.newui.Tags
- sf:Ultimate:com.intellij.ide.plugins.newui.Tags
- s:valueOf(java.lang.String):com.intellij.ide.plugins.newui.Tags
- s:values():com.intellij.ide.plugins.newui.Tags[]
c:com.intellij.ide.plugins.newui.TextHorizontalLayout
- com.intellij.ide.plugins.newui.HorizontalLayout
- sf:FIX_LABEL:java.lang.String
- <init>(I):V
- addLayoutComponent(java.awt.Component,java.lang.Object):V
- layoutContainer(java.awt.Container):V
f:com.intellij.ide.plugins.newui.TwoLineProgressIndicator
- com.intellij.ide.plugins.newui.OneLineProgressIndicator
- <init>():V
- <init>(Z):V
f:com.intellij.ide.plugins.newui.UpdateButton
- com.intellij.ide.plugins.newui.ColorButton
- <init>():V
c:com.intellij.ide.plugins.newui.VerticalLayout
- com.intellij.util.ui.AbstractLayoutManager
- sf:FILL_HORIZONTAL:java.lang.String
- <init>(I):V
- <init>(I,I):V
- addLayoutComponent(java.awt.Component,java.lang.Object):V
- layoutContainer(java.awt.Container):V
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
- removeLayoutComponent(java.awt.Component):V
f:com.intellij.ide.plugins.org.PluginManagerFilters
- sf:Companion:com.intellij.ide.plugins.org.PluginManagerFilters$Companion
- <init>():V
- f:allowInstallFromDisk():Z
- f:allowInstallingPlugin(com.intellij.ide.plugins.IdeaPluginDescriptor):Z
- sf:getInstance():com.intellij.ide.plugins.org.PluginManagerFilters
- f:isPluginAllowed(Z,com.intellij.ide.plugins.IdeaPluginDescriptor):Z
f:com.intellij.ide.plugins.org.PluginManagerFilters$Companion
- f:getInstance():com.intellij.ide.plugins.org.PluginManagerFilters
f:com.intellij.ide.startup.ServiceNotReadyException
- com.intellij.openapi.progress.ProcessCanceledException
- <init>():V
- <init>(java.lang.String):V
f:com.intellij.ide.startup.StartupActionScriptManager
- sf:ACTION_SCRIPT_FILE:java.lang.String
- s:addActionCommand(com.intellij.ide.startup.StartupActionScriptManager$ActionCommand):V
- s:addActionCommands(java.util.List):V
- s:addActionCommandsToBeginning(java.util.List):V
com.intellij.ide.startup.StartupActionScriptManager$ActionCommand
- a:execute():V
f:com.intellij.ide.startup.StartupActionScriptManager$CopyCommand
- com.intellij.ide.startup.StartupActionScriptManager$ActionCommand
- java.io.Serializable
- <init>(java.io.File,java.io.File):V
- <init>(java.nio.file.Path,java.nio.file.Path):V
- execute():V
- getSource():java.lang.String
f:com.intellij.ide.startup.StartupActionScriptManager$DeleteCommand
- com.intellij.ide.startup.StartupActionScriptManager$ActionCommand
- java.io.Serializable
- <init>(java.io.File):V
- <init>(java.nio.file.Path):V
- execute():V
f:com.intellij.ide.startup.StartupActionScriptManager$UnzipCommand
- com.intellij.ide.startup.StartupActionScriptManager$ActionCommand
- java.io.Serializable
- <init>(java.io.File,java.io.File):V
- <init>(java.nio.file.Path,java.nio.file.Path):V
- <init>(java.nio.file.Path,java.nio.file.Path,java.util.function.Predicate):V
- execute():V
- getSource():java.lang.String
a:com.intellij.ide.startup.StartupManagerEx
- com.intellij.openapi.startup.StartupManager
- <init>():V
- s:getInstanceEx(com.intellij.openapi.project.Project):com.intellij.ide.startup.StartupManagerEx
- a:startupActivityPassed():Z
f:com.intellij.ide.troubleshooting.CompositeGeneralTroubleInfoCollector
- com.intellij.troubleshooting.TroubleInfoCollector
- <init>():V
- collectInfo(com.intellij.openapi.project.Project):java.lang.String
f:com.intellij.ide.trustedProjects.TrustedProjectsDialog
- sf:INSTANCE:com.intellij.ide.trustedProjects.TrustedProjectsDialog
- f:confirmLoadingUntrustedProject(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String):Z
- f:confirmLoadingUntrustedProjectAsync(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- f:confirmOpeningOrLinkingUntrustedProject(java.nio.file.Path,com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- bs:confirmOpeningOrLinkingUntrustedProject$default(com.intellij.ide.trustedProjects.TrustedProjectsDialog,java.nio.file.Path,com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
com.intellij.ide.trustedProjects.TrustedProjectsLocator
- sf:Companion:com.intellij.ide.trustedProjects.TrustedProjectsLocator$Companion
- a:getProjectRoots(com.intellij.openapi.project.Project):java.util.List
- a:getProjectRoots(java.nio.file.Path,com.intellij.openapi.project.Project):java.util.List
f:com.intellij.ide.trustedProjects.TrustedProjectsLocator$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
- f:locateProject(com.intellij.openapi.project.Project):com.intellij.ide.trustedProjects.TrustedProjectsLocator$LocatedProject
- f:locateProject(java.nio.file.Path,com.intellij.openapi.project.Project):com.intellij.ide.trustedProjects.TrustedProjectsLocator$LocatedProject
com.intellij.ide.trustedProjects.TrustedProjectsLocator$LocatedProject
- a:getProject():com.intellij.openapi.project.Project
- a:getProjectRoots():java.util.List
f:com.intellij.ide.ui.IconMapperBean
- mappingFile:java.lang.String
com.intellij.ide.ui.OptionsSearchTopHitProvider
- a:getId():java.lang.String
com.intellij.ide.ui.OptionsSearchTopHitProvider$ApplicationLevelProvider
- com.intellij.ide.SearchTopHitProvider
- com.intellij.ide.ui.OptionsSearchTopHitProvider
- consumeTopHits(java.lang.String,java.util.function.Consumer,com.intellij.openapi.project.Project):V
- a:getOptions():java.util.Collection
com.intellij.ide.ui.OptionsSearchTopHitProvider$ProjectLevelProvider
- com.intellij.ide.ui.OptionsSearchTopHitProvider
- a:getOptions(com.intellij.openapi.project.Project):java.util.Collection
c:com.intellij.ide.ui.RegistryBooleanOptionDescriptor
- com.intellij.ide.ui.search.BooleanOptionDescription
- com.intellij.ui.Changeable
- pf:myKey:java.lang.String
- <init>(java.lang.String,java.lang.String):V
- hasChanged():Z
- isOptionEnabled():Z
- setOptionState(Z):V
- s:suggestRestart(javax.swing.JComponent):V
- s:suggestRestartIfNecessary(javax.swing.JComponent):V
f:com.intellij.ide.ui.RegistryTextOptionDescriptor
- com.intellij.ide.ui.search.OptionDescription
- com.intellij.ui.Changeable
- <init>(com.intellij.openapi.util.registry.RegistryValue):V
- getOption():java.lang.String
- getValue():java.lang.String
- hasChanged():Z
- hasExternalEditor():Z
- invokeInternalEditor():V
a:com.intellij.ide.ui.RoundedActionButton
- javax.swing.JButton
- <init>(I,I):V
- getArc():I
- pa:getBackgroundBorderPaint():java.awt.Paint
- pa:getBackgroundPaint():java.awt.Paint
- pa:getButtonForeground():java.awt.Color
- getHGap():I
- getPreferredSize():java.awt.Dimension
- paint(java.awt.Graphics):V
- setArc(I):V
- setHGap(I):V
com.intellij.ide.ui.ScreenAreaConsumer
- com.intellij.openapi.Disposable
- a:getConsumedScreenBounds():java.awt.Rectangle
- a:getUnderlyingWindow():java.awt.Window
f:com.intellij.ide.ui.UITheme
- sf:Companion:com.intellij.ide.ui.UITheme$Companion
- sf:FILE_EXT_ENDING:java.lang.String
- f:applyTheme(javax.swing.UIDefaults):V
- f:getAuthor():java.lang.String
- f:getBackground():java.util.Map
- sf:getColorPalette():java.util.Map
- f:getColorPatcher():com.intellij.util.SVGLoader$SvgElementColorPatcherProvider
- f:getDisplayName():java.lang.String
- f:getEditorSchemeId():java.lang.String
- f:getEmptyFrameBackground():java.util.Map
- f:getId():java.lang.String
- f:getName():java.lang.String
- f:isDark():Z
f:com.intellij.ide.ui.UITheme$Companion
- f:getColorPalette():java.util.Map
- f:loadFromJsonWithParent(B[],java.lang.String,java.lang.ClassLoader,kotlin.jvm.functions.Function1):com.intellij.ide.ui.UITheme
- bs:loadFromJsonWithParent$default(com.intellij.ide.ui.UITheme$Companion,B[],java.lang.String,java.lang.ClassLoader,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ide.ui.UITheme
f:com.intellij.ide.ui.UIThemeMetadata
- <init>():V
- getName():java.lang.String
- getPluginId():java.lang.String
- getUiKeyMetadata():java.util.List
- isFixed():Z
f:com.intellij.ide.ui.UIThemeMetadata$UIKeyMetadata
- <init>():V
- getDescription():java.lang.String
- getKey():java.lang.String
- getSince():java.lang.String
- getSource():java.lang.String
- isDeprecated():Z
- setSince(java.lang.String):V
f:com.intellij.ide.ui.UIThemeMetadataProvider
- com.intellij.openapi.extensions.PluginAware
- path:java.lang.String
- <init>():V
- loadMetadata():com.intellij.ide.ui.UIThemeMetadata
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
f:com.intellij.ide.ui.UIThemeProvider
- sf:Companion:com.intellij.ide.ui.UIThemeProvider$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- id:java.lang.String
- parentTheme:java.lang.String
- path:java.lang.String
- targetUI:com.intellij.ide.ui.TargetUIType
- <init>():V
f:com.intellij.ide.ui.UIThemeProvider$Companion
f:com.intellij.ide.ui.customization.ActionGroupPanel
- com.intellij.util.ui.components.BorderLayoutPanel
- sf:Companion:com.intellij.ide.ui.customization.ActionGroupPanel$Companion
- <init>():V
- <init>(java.util.List,Z,Z,java.util.function.Supplier):V
- b:<init>(java.util.List,Z,Z,java.util.function.Supplier,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getEnableFilterAction():Z
- f:getFilterButtonText():java.util.function.Supplier
- f:getGroupIds():java.util.List
- f:getSelectedActions():java.util.List
- f:getShowAllActionsFirst():Z
- f:setEnableFilterAction(Z):V
- f:setFilterButtonText(java.util.function.Supplier):V
f:com.intellij.ide.ui.customization.ActionGroupPanel$Companion
- f:getActions(java.util.List,com.intellij.ide.ui.customization.CustomActionsSchema):kotlin.sequences.Sequence
- f:showDialog(java.lang.String,java.lang.String[],kotlin.jvm.functions.Function1):java.util.List
- bs:showDialog$default(com.intellij.ide.ui.customization.ActionGroupPanel$Companion,java.lang.String,java.lang.String[],kotlin.jvm.functions.Function1,I,java.lang.Object):java.util.List
com.intellij.ide.ui.customization.CustomActionsListener
- sf:Companion:com.intellij.ide.ui.customization.CustomActionsListener$Companion
- s:fireSchemaChanged():V
- a:schemaChanged():V
- s:subscribe(com.intellij.openapi.Disposable,com.intellij.ide.ui.customization.CustomActionsListener):V
f:com.intellij.ide.ui.customization.CustomActionsListener$Companion
- f:fireSchemaChanged():V
- f:subscribe(com.intellij.openapi.Disposable,com.intellij.ide.ui.customization.CustomActionsListener):V
f:com.intellij.ide.ui.customization.CustomActionsSchema
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.ide.ui.customization.CustomActionsSchema$Companion
- sf:PROP_ORIGINAL_ICON:com.intellij.openapi.util.Key
- <init>(kotlinx.coroutines.CoroutineScope):V
- f:addIconCustomization(java.lang.String,java.lang.String):V
- sf:addSettingsGroup(java.lang.String,java.lang.String):V
- f:copyFrom(com.intellij.ide.ui.customization.CustomActionsSchema):V
- f:fillActionGroups(javax.swing.tree.DefaultMutableTreeNode):V
- f:fillCorrectedActionGroups(javax.swing.tree.DefaultMutableTreeNode):V
- f:getCorrectedAction(java.lang.String):com.intellij.openapi.actionSystem.AnAction
- f:getCorrectedAction(java.lang.String,java.lang.String):com.intellij.openapi.actionSystem.ActionGroup
- f:getCorrectedActionAsync(java.lang.String,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- f:getCorrectedActionAsync(java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- f:getDisplayName(java.lang.String):java.lang.String
- f:getIconCustomizations():java.util.Map
- f:getIconPath(java.lang.String):java.lang.String
- sf:getInstance():com.intellij.ide.ui.customization.CustomActionsSchema
- f:getModificationStamp():I
- getState():org.jdom.Element
- f:incrementModificationStamp():V
- f:initActionIcons():V
- f:initActionIcons(Z):V
- bs:initActionIcons$default(com.intellij.ide.ui.customization.CustomActionsSchema,Z,I,java.lang.Object):V
- f:invalidateCustomizedActionGroup(java.lang.String):V
- f:isCorrectActionGroup(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):Z
- f:isModified(com.intellij.ide.ui.customization.CustomActionsSchema):Z
- loadState(org.jdom.Element):V
- f:removeIconCustomization(java.lang.String):V
- sf:removeSettingsGroup(java.lang.String):V
- f:setCustomizationSchemaForCurrentProjects():V
f:com.intellij.ide.ui.customization.CustomActionsSchema$Companion
- f:addSettingsGroup(java.lang.String,java.lang.String):V
- f:getInstance():com.intellij.ide.ui.customization.CustomActionsSchema
- f:getInstanceAsync(kotlin.coroutines.Continuation):java.lang.Object
- f:removeSettingsGroup(java.lang.String):V
f:com.intellij.ide.ui.customization.CustomisedActionGroup
- com.intellij.openapi.actionSystem.ActionGroupWrapper
- <init>(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.ide.ui.customization.CustomActionsSchema,java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- getFirstAction():com.intellij.openapi.actionSystem.AnAction
- getOrigin():com.intellij.openapi.actionSystem.ActionGroup
- hashCode():I
- resetChildren():V
a:com.intellij.ide.ui.customization.CustomizableActionGroupProvider
- <init>():V
- a:registerGroups(com.intellij.ide.ui.customization.CustomizableActionGroupProvider$CustomizableActionGroupRegistrar):V
com.intellij.ide.ui.customization.CustomizableActionGroupProvider$CustomizableActionGroupRegistrar
- a:addCustomizableActionGroup(java.lang.String,java.lang.String):V
f:com.intellij.ide.ui.customization.CustomizationUtil
- sf:DISABLE_CUSTOMIZE_POPUP_KEY:com.intellij.openapi.util.Key
- s:acceptObjectIconAndText(java.lang.Object,com.intellij.ide.ui.customization.CustomizationUtil$CustomPresentationConsumer):V
- s:correctActionGroup(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.ide.ui.customization.CustomActionsSchema,java.lang.String,java.lang.String,Z):com.intellij.openapi.actionSystem.ActionGroup
- s:createCustomizeGroupDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.ui.DialogWrapper
- s:createToolbarCustomizationGroup(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,com.intellij.openapi.util.Ref):com.intellij.openapi.actionSystem.ActionGroup
- s:createToolbarCustomizationHandler(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,javax.swing.JComponent,java.lang.String):com.intellij.ui.PopupHandler
- s:getGroup(java.lang.String,com.intellij.ide.ui.customization.CustomActionsSchema):com.intellij.openapi.keymap.impl.ui.Group
- s:getGroupActions(java.lang.String,com.intellij.ide.ui.customization.CustomActionsSchema):java.util.List
- s:getGroupForNode(javax.swing.tree.DefaultMutableTreeNode):com.intellij.openapi.keymap.impl.ui.Group
- s:getPathByUserObjects(javax.swing.JTree,javax.swing.tree.TreePath):javax.swing.tree.TreePath
- s:installPopupHandler(javax.swing.JComponent,java.lang.String,java.lang.String):java.awt.event.MouseListener
- s:installToolbarCustomizationHandler(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,javax.swing.JComponent,java.lang.String):com.intellij.ui.PopupHandler
- s:installToolbarCustomizationHandler(com.intellij.openapi.actionSystem.ActionToolbar):com.intellij.ui.PopupHandler
- s:optimizeSchema(javax.swing.JTree,com.intellij.ide.ui.customization.CustomActionsSchema):V
- s:updateActionGroup(java.util.List,java.lang.String):V
com.intellij.ide.ui.customization.CustomizationUtil$CustomPresentationConsumer
- a:accept(java.lang.String,java.lang.String,javax.swing.Icon):V
f:com.intellij.ide.ui.customization.CustomizeActionGroupPanel
- com.intellij.util.ui.components.BorderLayoutPanel
- sf:Companion:com.intellij.ide.ui.customization.CustomizeActionGroupPanel$Companion
- <init>(java.lang.String,java.util.List):V
- b:<init>(java.lang.String,java.util.List,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getActions():java.util.List
- f:getAddActionHandler():kotlin.jvm.functions.Function0
- f:getGroupId():java.lang.String
- f:setAddActionHandler(kotlin.jvm.functions.Function0):V
f:com.intellij.ide.ui.customization.CustomizeActionGroupPanel$Companion
- f:showDialog(java.lang.String,java.util.List,java.lang.String,kotlin.jvm.functions.Function1):java.util.List
- bs:showDialog$default(com.intellij.ide.ui.customization.CustomizeActionGroupPanel$Companion,java.lang.String,java.util.List,java.lang.String,kotlin.jvm.functions.Function1,I,java.lang.Object):java.util.List
e:com.intellij.ide.ui.customization.CustomizeActionGroupPanel$Direction
- java.lang.Enum
- sf:DOWN:com.intellij.ide.ui.customization.CustomizeActionGroupPanel$Direction
- sf:UP:com.intellij.ide.ui.customization.CustomizeActionGroupPanel$Direction
- s:getEntries():kotlin.enums.EnumEntries
- f:getShortcut():com.intellij.openapi.actionSystem.ShortcutSet
- f:getSign():I
- f:getTest():kotlin.jvm.functions.Function2
- s:valueOf(java.lang.String):com.intellij.ide.ui.customization.CustomizeActionGroupPanel$Direction
- s:values():com.intellij.ide.ui.customization.CustomizeActionGroupPanel$Direction[]
f:com.intellij.ide.ui.customization.GroupEnd
- com.intellij.ide.ui.customization.ToolbarQuickActionInsertStrategy
- <init>(java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addActions(java.util.List,com.intellij.ide.ui.customization.CustomActionsSchema):Z
- checkExists(java.lang.String,com.intellij.ide.ui.customization.CustomActionsSchema):Z
f:com.intellij.ide.ui.customization.GroupStart
- com.intellij.ide.ui.customization.ToolbarQuickActionInsertStrategy
- <init>(java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addActions(java.util.List,com.intellij.ide.ui.customization.CustomActionsSchema):Z
- checkExists(java.lang.String,com.intellij.ide.ui.customization.CustomActionsSchema):Z
c:com.intellij.ide.ui.customization.ToolbarAddQuickActionInfo
- <init>(java.util.List,java.lang.String,javax.swing.Icon,com.intellij.ide.ui.customization.ToolbarQuickActionInsertStrategy):V
- f:getActionIDs():java.util.List
- f:getIcon():javax.swing.Icon
- f:getInsertStrategy():com.intellij.ide.ui.customization.ToolbarQuickActionInsertStrategy
- f:getName():java.lang.String
com.intellij.ide.ui.customization.ToolbarQuickActionInsertStrategy
- a:addActions(java.util.List,com.intellij.ide.ui.customization.CustomActionsSchema):Z
- a:checkExists(java.lang.String,com.intellij.ide.ui.customization.CustomActionsSchema):Z
- orElse(com.intellij.ide.ui.customization.ToolbarQuickActionInsertStrategy):com.intellij.ide.ui.customization.ToolbarQuickActionInsertStrategy
c:com.intellij.ide.ui.experimental.toolbar.RunWidgetAvailabilityManager
- sf:Companion:com.intellij.ide.ui.experimental.toolbar.RunWidgetAvailabilityManager$Companion
- <init>():V
- pf:fireUpdate(Z):V
- f:getAvailabilityChanged():kotlinx.coroutines.flow.StateFlow
- f:isAvailable():Z
f:com.intellij.ide.ui.experimental.toolbar.RunWidgetAvailabilityManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.ui.experimental.toolbar.RunWidgetAvailabilityManager
c:com.intellij.ide.ui.laf.IntelliJLaf
- com.intellij.ide.ui.laf.darcula.DarculaLaf
- sf:NAME:java.lang.String
- <init>():V
- getName():java.lang.String
f:com.intellij.ide.ui.laf.IntelliJLookAndFeelInfo
- javax.swing.UIManager$LookAndFeelInfo
- <init>():V
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.ide.ui.laf.LafManagerImpl
- com.intellij.ide.ui.LafManager
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.ide.ui.laf.LafManagerImpl$Companion
- <init>(kotlinx.coroutines.CoroutineScope):V
- addLafManagerListener(com.intellij.ide.ui.LafManagerListener):V
- applyDensity():V
- createSettingsToolbar():javax.swing.JComponent
- findLaf(java.lang.String):com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo
- getAutodetect():Z
- getAutodetectSupported():Z
- getCurrentLookAndFeel():javax.swing.UIManager$LookAndFeelInfo
- getCurrentUIThemeLookAndFeel():com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo
- getDefaultDarkLaf():com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo
- f:getDefaultFont():java.awt.Font
- getDefaultLightLaf():com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo
- getInstalledLookAndFeels():javax.swing.UIManager$LookAndFeelInfo[]
- getInstalledThemes():kotlin.sequences.Sequence
- getLafComboBoxModel():com.intellij.ui.CollectionComboBoxModel
- getLookAndFeelCellRenderer(javax.swing.JComponent):javax.swing.ListCellRenderer
- getLookAndFeelReference():com.intellij.ide.ui.LafReference
- getState():org.jdom.Element
- initializeComponent():V
- loadState(org.jdom.Element):V
- noStateLoaded():V
- rememberSchemeForLaf(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- removeLafManagerListener(com.intellij.ide.ui.LafManagerListener):V
- repaintUI():V
- resetPreferredEditorColorScheme():V
- setAutodetect(Z):V
- setCurrentLookAndFeel(com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo,Z):V
- setPreferredDarkLaf(com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo):V
- setPreferredLightLaf(com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo):V
- setRememberSchemeForLaf(Z):V
- updateUI():V
f:com.intellij.ide.ui.laf.LafManagerImpl$Companion
- f:getTestInstance():com.intellij.ide.ui.laf.LafManagerImpl
a:com.intellij.ide.ui.laf.SystemDarkThemeDetector
- sf:Companion:com.intellij.ide.ui.laf.SystemDarkThemeDetector$Companion
- f:check():V
- a:check(java.lang.Boolean):V
- sf:createDetector(java.util.function.Consumer):com.intellij.ide.ui.laf.SystemDarkThemeDetector
- sf:createParametrizedDetector(java.util.function.BiConsumer):com.intellij.ide.ui.laf.SystemDarkThemeDetector
- a:getDetectionSupported():Z
- a:isDark():Z
f:com.intellij.ide.ui.laf.SystemDarkThemeDetector$Companion
- f:createDetector(java.util.function.Consumer):com.intellij.ide.ui.laf.SystemDarkThemeDetector
- f:createParametrizedDetector(java.util.function.BiConsumer):com.intellij.ide.ui.laf.SystemDarkThemeDetector
c:com.intellij.ide.ui.laf.UIThemeBasedLookAndFeelInfo
- com.intellij.ide.ui.laf.UIThemeLookAndFeelInfoImpl
- <init>(com.intellij.ide.ui.UITheme):V
c:com.intellij.ide.ui.laf.UIThemeLookAndFeelInfoImpl
- javax.swing.UIManager$LookAndFeelInfo
- com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo
- <init>(com.intellij.ide.ui.UITheme):V
- describe():com.intellij.ide.ui.laf.UIThemeExportableBean
- dispose():V
- f:getAuthor():java.lang.String
- getEditorSchemeId():java.lang.String
- f:getId():java.lang.String
- getName():java.lang.String
- getProviderClassLoader():java.lang.ClassLoader
- p:getResourceAsStream(java.lang.String):java.io.InputStream
- getTheme():com.intellij.ide.ui.UITheme
- installEditorScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- installTheme(javax.swing.UIDefaults):V
- f:isDark():Z
- f:isInitialized():Z
f:com.intellij.ide.ui.laf.darcula.DarculaInstaller
- <init>():V
- s:install():V
- s:uninstall():V
c:com.intellij.ide.ui.laf.darcula.DarculaLaf
- javax.swing.plaf.basic.BasicLookAndFeel
- sf:Companion:com.intellij.ide.ui.laf.darcula.DarculaLaf$Companion
- sf:NAME:java.lang.String
- <init>():V
- getDefaults():javax.swing.UIDefaults
- getDescription():java.lang.String
- getDisabledIcon(javax.swing.JComponent,javax.swing.Icon):javax.swing.Icon
- getID():java.lang.String
- getName():java.lang.String
- getSupportsWindowDecorations():Z
- initialize():V
- isNativeLookAndFeel():Z
- isSupportedLookAndFeel():Z
- p:loadSystemColors(javax.swing.UIDefaults,java.lang.String[],Z):V
- uninitialize():V
f:com.intellij.ide.ui.laf.darcula.DarculaLaf$Companion
f:com.intellij.ide.ui.laf.darcula.DarculaLookAndFeelInfo
- javax.swing.UIManager$LookAndFeelInfo
- sf:CLASS_NAME:java.lang.String
- <init>():V
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.ide.ui.laf.darcula.DarculaTableHeaderBorder
- javax.swing.border.Border
- javax.swing.plaf.UIResource
- <init>():V
- getBorderInsets(java.awt.Component):java.awt.Insets
- isBorderOpaque():Z
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
c:com.intellij.ide.ui.laf.darcula.DarculaTableHeaderUI
- javax.swing.plaf.basic.BasicTableHeaderUI
- sf:SKIP_DRAWING_VERTICAL_CELL_SEPARATOR_KEY:java.lang.String
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- paint(java.awt.Graphics,javax.swing.JComponent):V
c:com.intellij.ide.ui.laf.darcula.DarculaTableSelectedCellHighlightBorder
- javax.swing.border.CompoundBorder
- javax.swing.plaf.UIResource
- <init>():V
- p:createFocusBorderColor():java.awt.Color
- p:createInsideBorder():javax.swing.border.Border
f:com.intellij.ide.ui.laf.darcula.DarculaUIUtil
- sf:ARROW_BUTTON_WIDTH:com.intellij.util.ui.JBValue
- sf:BUTTON_ARC:com.intellij.util.ui.JBValue
- sf:BW:com.intellij.util.ui.JBValue
- sf:COMPACT_HEIGHT:com.intellij.util.ui.JBValue
- sf:COMPACT_PROPERTY:java.lang.String
- sf:COMPONENT_ARC:com.intellij.util.ui.JBValue
- sf:LW:com.intellij.util.ui.JBValue
- sf:MINIMUM_HEIGHT:com.intellij.util.ui.JBValue
- sf:MINIMUM_WIDTH:com.intellij.util.ui.JBValue
- <init>():V
- s:computeOutlineFor(java.awt.Component):com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline
- s:doPaint(java.awt.Graphics2D,I,I,F,F,Z):V
- s:doPaint(java.awt.Graphics2D,I,I,F,Z):V
- s:getButtonTextColor(javax.swing.AbstractButton):java.awt.Color
- s:getOutline(javax.swing.JComponent):com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline
- s:getOutlineColor(Z,Z):java.awt.Color
- s:getPatchedNextVisualPositionFrom(javax.swing.text.JTextComponent,I,I):I
- s:isBorderless(java.awt.Component):Z
- s:isCompact(java.awt.Component):Z
- s:isMultiLineHTML(java.lang.String):Z
- s:isTableCellEditor(java.awt.Component):Z
- s:isWarningOrError(com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline):Z
- s:maximize(java.awt.Dimension,java.awt.Dimension):java.awt.Dimension
- s:paddings():java.awt.Insets
- s:paintCellEditorBorder(java.awt.Graphics2D,java.awt.Component,java.awt.Rectangle,Z):V
- s:paintFocusBorder(java.awt.Graphics2D,I,I,F,Z):V
- s:paintFocusOval(java.awt.Graphics2D,F,F,F,F):V
- s:paintOutlineBorder(java.awt.Graphics2D,I,I,F,Z,Z,com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline):V
- s:paintTag(java.awt.Graphics2D,F,F,Z,com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline):V
f:com.intellij.ide.ui.laf.darcula.DarculaUIUtil$MouseHoverPropertyTrigger
- java.awt.event.MouseAdapter
- <init>(javax.swing.JComponent,java.lang.String):V
- mouseEntered(java.awt.event.MouseEvent):V
- mouseExited(java.awt.event.MouseEvent):V
e:com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline
- java.lang.Enum
- sf:defaultButton:com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline
- sf:error:com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline
- sf:focus:com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline
- sf:warning:com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline
- a:setGraphicsColor(java.awt.Graphics2D,Z):V
- s:valueOf(java.lang.String):com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline
- s:values():com.intellij.ide.ui.laf.darcula.DarculaUIUtil$Outline[]
c:com.intellij.ide.ui.laf.darcula.ui.ComboBoxButtonUI
- com.intellij.ide.ui.laf.darcula.ui.DarculaButtonUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:getDarculaButtonSize(javax.swing.JComponent,java.awt.Dimension):java.awt.Dimension
- getMinimumSize(javax.swing.JComponent):java.awt.Dimension
- paint(java.awt.Graphics,javax.swing.JComponent):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaButtonPainter
- javax.swing.border.Border
- javax.swing.plaf.UIResource
- <init>():V
- getBorderInsets(java.awt.Component):java.awt.Insets
- getBorderPaint(java.awt.Component):java.awt.Paint
- p:getOffset():I
- isBorderOpaque():Z
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaButtonUI
- javax.swing.plaf.basic.BasicButtonUI
- sf:DEFAULT_STYLE_KEY:com.intellij.openapi.util.Key
- ps:HELP_BUTTON_DIAMETER:com.intellij.util.ui.JBValue
- ps:HORIZONTAL_PADDING:com.intellij.util.ui.JBValue
- pf:iconRect:java.awt.Rectangle
- pf:textRect:java.awt.Rectangle
- pf:viewRect:java.awt.Rectangle
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:getBackground(javax.swing.JComponent,java.awt.Rectangle):java.awt.Paint
- p:getButtonColorEnd():java.awt.Color
- p:getButtonColorStart():java.awt.Color
- p:getButtonTextColor(javax.swing.AbstractButton):java.awt.Color
- s:getCustomButtonInsets(java.awt.Component):java.awt.Insets
- p:getDarculaButtonSize(javax.swing.JComponent,java.awt.Dimension):java.awt.Dimension
- p:getDefaultButtonColorEnd():java.awt.Color
- p:getDefaultButtonColorStart():java.awt.Color
- s:getDisabledTextColor():java.awt.Color
- p:getMnemonicIndex(javax.swing.AbstractButton):I
- f:getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- installDefaults(javax.swing.AbstractButton):V
- s:isComboAction(java.awt.Component):Z
- s:isContrastGotIt(java.awt.Component):Z
- s:isContrastGotItOnlyButton(java.awt.Component):Z
- s:isDefaultButton(javax.swing.JComponent):Z
- s:isGotItButton(java.awt.Component):Z
- s:isSmallVariant(java.awt.Component):Z
- s:isSquare(java.awt.Component):Z
- s:isTag(java.awt.Component):Z
- p:layout(javax.swing.AbstractButton,java.lang.String,javax.swing.Icon,java.awt.FontMetrics,I,I):java.lang.String
- p:modifyViewRect(javax.swing.AbstractButton,java.awt.Rectangle):V
- paint(java.awt.Graphics,javax.swing.JComponent):V
- p:paintContents(java.awt.Graphics,javax.swing.AbstractButton):V
- p:paintDecorations(java.awt.Graphics2D,javax.swing.JComponent):Z
- p:paintDisabledText(java.awt.Graphics,java.lang.String,javax.swing.JComponent,java.awt.Rectangle,java.awt.FontMetrics):V
- p:paintText(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle,java.lang.String):V
- p:setupDefaultButton(javax.swing.JComponent,java.awt.Graphics):V
- p:textIconGap():I
- update(java.awt.Graphics,javax.swing.JComponent):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaCheckBoxBorder
- javax.swing.border.Border
- javax.swing.plaf.UIResource
- <init>():V
- p:borderWidthPropertyName():java.lang.String
- getBorderInsets(java.awt.Component):java.awt.Insets
- isBorderOpaque():Z
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
f:com.intellij.ide.ui.laf.darcula.ui.DarculaCheckBoxMenuItemUI
- com.intellij.ide.ui.laf.darcula.ui.DarculaMenuItemUIBase
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
c:com.intellij.ide.ui.laf.darcula.ui.DarculaCheckBoxUI
- javax.swing.plaf.metal.MetalCheckBoxUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:drawCheckIcon(javax.swing.JComponent,java.awt.Graphics2D,javax.swing.AbstractButton,java.awt.Rectangle,Z,Z):V
- getBaseline(javax.swing.JComponent,I,I):I
- getDefaultIcon():javax.swing.Icon
- getMaximumSize(javax.swing.JComponent):java.awt.Dimension
- p:getMnemonicIndex(javax.swing.AbstractButton):I
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- installDefaults(javax.swing.AbstractButton):V
- p:installListeners(javax.swing.AbstractButton):V
- installUI(javax.swing.JComponent):V
- p:isIndeterminate(javax.swing.AbstractButton):Z
- paint(java.awt.Graphics,javax.swing.JComponent):V
- p:removeInsetsBeforeLayout(javax.swing.AbstractButton):Z
- p:textIconGap():I
- p:uninstallListeners(javax.swing.AbstractButton):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaComboBoxUI
- javax.swing.plaf.basic.BasicComboBoxUI
- com.intellij.openapi.ui.ErrorBorderCapable
- javax.swing.border.Border
- psf:DEFAULT_BORDER_COMPENSATION:I
- sf:DISABLE_SETTING_FOREGROUND:java.lang.String
- sf:PAINT_VERTICAL_LINE:com.intellij.openapi.util.Key
- <init>():V
- <init>(F,java.awt.Insets,Z):V
- <init>(javax.swing.JComboBox):V
- p:checkFocus():V
- p:configureEditor():V
- p:createArrowButton():javax.swing.JButton
- p:createEditor():javax.swing.ComboBoxEditor
- p:createLayoutManager():java.awt.LayoutManager
- p:createPopup():javax.swing.plaf.basic.ComboPopup
- p:createPropertyListener():java.beans.PropertyChangeListener
- p:createRenderer():javax.swing.ListCellRenderer
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- getBorderInsets(java.awt.Component):java.awt.Insets
- p:getInnerShape(java.awt.Rectangle,F,F,F):java.awt.geom.RectangularShape
- getMinimumSize(javax.swing.JComponent):java.awt.Dimension
- p:getOuterShape(java.awt.Rectangle,F,F):java.awt.geom.RectangularShape
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- p:getSizeWithButton(java.awt.Dimension,java.awt.Dimension):java.awt.Dimension
- ps:hasFocus(java.awt.Component):Z
- s:hasSwingPopup(javax.swing.JComponent):Z
- p:installDefaults():V
- p:installEditorKeyListener(javax.swing.ComboBoxEditor):V
- p:installListeners():V
- f:isBorderOpaque():Z
- isFocusTraversable(javax.swing.JComboBox):Z
- isPaintArrowButton():Z
- p:layoutEditor():V
- paint(java.awt.Graphics,javax.swing.JComponent):V
- p:paintArrow(java.awt.Graphics2D,javax.swing.JButton):V
- p:paintBorder(java.awt.Component,java.awt.Graphics2D,F,java.awt.Rectangle,F,F):V
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
- paintCurrentValue(java.awt.Graphics,java.awt.Rectangle,Z):V
- p:rectangleForCurrentValue():java.awt.Rectangle
- setPaintArrowButton(Z):V
- p:unconfigureEditor():V
- p:uninstallDefaults():V
- uninstallListeners():V
pc:com.intellij.ide.ui.laf.darcula.ui.DarculaComboBoxUI$CustomComboPopup
- javax.swing.plaf.basic.BasicComboPopup
- <init>(javax.swing.JComboBox):V
- p:configureList():V
- p:configurePopup():V
- p:createPropertyChangeListener():java.beans.PropertyChangeListener
- p:createScroller():javax.swing.JScrollPane
- p:customizeListRendererComponent(javax.swing.JComponent):V
- p:getPopupHeightForRowCount(I):I
- show(java.awt.Component,I,I):V
- updateUI():V
f:com.intellij.ide.ui.laf.darcula.ui.DarculaEditorPaneUI
- javax.swing.plaf.basic.BasicEditorPaneUI
- <init>(javax.swing.JComponent):V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
c:com.intellij.ide.ui.laf.darcula.ui.DarculaEditorTextFieldBorder
- com.intellij.ide.ui.laf.darcula.ui.DarculaTextBorder
- <init>():V
- <init>(com.intellij.ui.EditorTextField,com.intellij.openapi.editor.ex.EditorEx):V
- getBorderInsets(java.awt.Component):java.awt.Insets
- getVisualPaddings(java.awt.Component):java.awt.Insets
- isBorderOpaque():Z
- s:isComboBoxEditor(java.awt.Component):Z
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaLabelUI
- javax.swing.plaf.basic.BasicLabelUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- getMinimumSize(javax.swing.JComponent):java.awt.Dimension
- p:getMnemonicIndex(javax.swing.JLabel):I
- p:layoutCL(javax.swing.JLabel,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle):java.lang.String
- p:paintDisabledText(javax.swing.JLabel,java.awt.Graphics,java.lang.String,I,I):V
- p:paintEnabledText(javax.swing.JLabel,java.awt.Graphics,java.lang.String,I,I):V
f:com.intellij.ide.ui.laf.darcula.ui.DarculaMenuBarBorder
- javax.swing.border.Border
- javax.swing.plaf.UIResource
- <init>():V
- getBorderInsets(java.awt.Component):java.awt.Insets
- isBorderOpaque():Z
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaMenuItemBorder
- javax.swing.border.Border
- javax.swing.plaf.UIResource
- <init>():V
- getBorderInsets(java.awt.Component):java.awt.Insets
- isBorderOpaque():Z
- s:menuBarItemInnerInsets():com.intellij.util.ui.JBInsets
- s:menuBarItemOuterInsets():com.intellij.util.ui.JBInsets
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaMenuItemUIBase
- javax.swing.plaf.basic.BasicMenuItemUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:paintAccText(java.awt.Graphics,com.intellij.util.ui.MenuItemLayoutHelper,com.intellij.util.ui.MenuItemLayoutHelper$LayoutResult):V
- p:paintArrowIcon(java.awt.Graphics,com.intellij.util.ui.MenuItemLayoutHelper,com.intellij.util.ui.MenuItemLayoutHelper$LayoutResult,java.awt.Color):V
- p:paintCheckIcon(java.awt.Graphics,com.intellij.util.ui.MenuItemLayoutHelper,com.intellij.util.ui.MenuItemLayoutHelper$LayoutResult,java.awt.Color,java.awt.Color):V
- p:paintIcon(java.awt.Graphics,com.intellij.util.ui.MenuItemLayoutHelper,com.intellij.util.ui.MenuItemLayoutHelper$LayoutResult,java.awt.Color):V
- p:paintMenuItem(java.awt.Graphics,javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,java.awt.Color,java.awt.Color,I):V
- p:paintText(java.awt.Graphics,com.intellij.util.ui.MenuItemLayoutHelper,com.intellij.util.ui.MenuItemLayoutHelper$LayoutResult):V
- processMouseEvent(javax.swing.JMenuItem,java.awt.event.MouseEvent,javax.swing.MenuElement[],javax.swing.MenuSelectionManager):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaMenuSeparatorUI
- com.intellij.ide.ui.laf.darcula.ui.DarculaSeparatorUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:getColorResourceName():java.lang.String
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- p:getStripeIndent():I
- p:getStripeWidth():I
- p:getWithToEdge():I
- paint(java.awt.Graphics,javax.swing.JComponent):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaOptionButtonUI
- com.intellij.ui.components.BasicOptionButtonUI
- sf:Companion:com.intellij.ide.ui.laf.darcula.ui.DarculaOptionButtonUI$Companion
- <init>():V
- p:configureArrowButton():V
- p:configureMainButton():V
- p:configureOptionButton():V
- p:createArrowButton():com.intellij.ui.components.BasicOptionButtonUI$ArrowButton
- p:createMainButton():com.intellij.ui.components.BasicOptionButtonUI$MainButton
- sf:createUI(javax.swing.JComponent):com.intellij.ide.ui.laf.darcula.ui.DarculaOptionButtonUI
- p:getArrowButtonPreferredSize():java.awt.Dimension
- p:getClipXOffset():I
- p:getShowPopupXOffset():I
- paint(java.awt.Graphics,javax.swing.JComponent):V
- p:paintArrow(java.awt.Graphics2D,javax.swing.AbstractButton):V
- p:paintSeparator(java.awt.Graphics2D,javax.swing.JComponent):V
- p:paintSeparatorArea(java.awt.Graphics2D,javax.swing.JComponent):V
- p:unconfigureArrowButton():V
- p:unconfigureMainButton():V
- p:unconfigureOptionButton():V
- p:updateOptions():V
f:com.intellij.ide.ui.laf.darcula.ui.DarculaOptionButtonUI$Companion
- f:createUI(javax.swing.JComponent):com.intellij.ide.ui.laf.darcula.ui.DarculaOptionButtonUI
c:com.intellij.ide.ui.laf.darcula.ui.DarculaPasswordFieldUI
- javax.swing.plaf.basic.BasicPasswordFieldUI
- <init>():V
- p:createCaret():javax.swing.text.Caret
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:getMinimumHeight(I):I
- getMinimumSize(javax.swing.JComponent):java.awt.Dimension
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- p:getVisibleEditorRect():java.awt.Rectangle
- p:installDefaults():V
- installListeners():V
- installUI(javax.swing.JComponent):V
- p:paintBackground(java.awt.Graphics):V
- uninstallListeners():V
- p:updatePreferredSize(javax.swing.JComponent,java.awt.Dimension):java.awt.Dimension
c:com.intellij.ide.ui.laf.darcula.ui.DarculaPopupMenuBorder
- javax.swing.border.AbstractBorder
- javax.swing.plaf.UIResource
- <init>():V
- getBorderInsets(java.awt.Component):java.awt.Insets
- ps:isComboPopup(java.awt.Component):Z
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaProgressBarBorder
- javax.swing.plaf.BorderUIResource$EmptyBorderUIResource
- <init>():V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaProgressBarUI
- javax.swing.plaf.basic.BasicProgressBarUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:getBoxLength(I,I):I
- p:getEndColor(javax.swing.JComponent):java.awt.Color
- p:getFinishedColor(javax.swing.JComponent):java.awt.Color
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- p:getRemainderColor():java.awt.Color
- p:getStartColor(javax.swing.JComponent):java.awt.Color
- p:installDefaults():V
- p:paintDeterminate(java.awt.Graphics,javax.swing.JComponent):V
- p:paintIndeterminate(java.awt.Graphics,javax.swing.JComponent):V
- updateIndeterminateAnimationIndex(J):V
f:com.intellij.ide.ui.laf.darcula.ui.DarculaRadioButtonMenuItemUI
- com.intellij.ide.ui.laf.darcula.ui.DarculaMenuItemUIBase
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
c:com.intellij.ide.ui.laf.darcula.ui.DarculaRadioButtonUI
- javax.swing.plaf.metal.MetalRadioButtonUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- getBaseline(javax.swing.JComponent,I,I):I
- getDefaultIcon():javax.swing.Icon
- getMaximumSize(javax.swing.JComponent):java.awt.Dimension
- p:getMnemonicIndex(javax.swing.AbstractButton):I
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- installDefaults(javax.swing.AbstractButton):V
- p:installListeners(javax.swing.AbstractButton):V
- paint(java.awt.Graphics,javax.swing.JComponent):V
- p:paintFocus(java.awt.Graphics,java.awt.Rectangle,java.awt.Dimension):V
- p:paintIcon(javax.swing.JComponent,java.awt.Graphics2D,java.awt.Rectangle):V
- p:removeInsetsBeforeLayout(javax.swing.AbstractButton):Z
- p:textIconGap(javax.swing.AbstractButton):I
- p:uninstallListeners(javax.swing.AbstractButton):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaRootPaneUI
- javax.swing.plaf.basic.BasicRootPaneUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
c:com.intellij.ide.ui.laf.darcula.ui.DarculaSeparatorUI
- javax.swing.plaf.basic.BasicSeparatorUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:getColorResourceName():java.lang.String
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- p:getStripeIndent():I
- p:getStripeWidth():I
- p:getWithToEdge():I
- p:installDefaults(javax.swing.JSeparator):V
- paint(java.awt.Graphics,javax.swing.JComponent):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaSpinnerBorder
- com.intellij.openapi.ui.ErrorBorderCapable
- javax.swing.border.Border
- javax.swing.plaf.UIResource
- <init>():V
- getBorderInsets(java.awt.Component):java.awt.Insets
- isBorderOpaque():Z
- s:isFocused(java.awt.Component):Z
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaSpinnerUI
- javax.swing.plaf.basic.BasicSpinnerUI
- p:nextButton:javax.swing.JButton
- p:prevButton:javax.swing.JButton
- <init>():V
- p:createButton(I,java.lang.String):javax.swing.JButton
- p:createEditor():javax.swing.JComponent
- p:createLayout():java.awt.LayoutManager
- p:createNextButton():java.awt.Component
- p:createPreviousButton():java.awt.Component
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:editorMargins():java.awt.Insets
- p:getBackground():java.awt.Color
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- p:getSizeWithButtons(java.awt.Insets,java.awt.Dimension):java.awt.Dimension
- p:layout():V
- p:layoutEditor():V
- paint(java.awt.Graphics,javax.swing.JComponent):V
- p:paintArrowButton(java.awt.Graphics,javax.swing.plaf.basic.BasicArrowButton,I):V
- p:replaceEditor(javax.swing.JComponent,javax.swing.JComponent):V
- p:uninstallListeners():V
pc:com.intellij.ide.ui.laf.darcula.ui.DarculaSpinnerUI$LayoutManagerDelegate
- java.awt.LayoutManager
- pf:myDelegate:java.awt.LayoutManager
- <init>(java.awt.LayoutManager):V
- addLayoutComponent(java.lang.String,java.awt.Component):V
- layoutContainer(java.awt.Container):V
- minimumLayoutSize(java.awt.Container):java.awt.Dimension
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
- removeLayoutComponent(java.awt.Component):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaTabbedPaneUI
- javax.swing.plaf.basic.BasicTabbedPaneUI
- <init>():V
- p:calculateTabHeight(I,I,I):I
- p:calculateTabWidth(I,I,java.awt.FontMetrics):I
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:getContentBorderInsets(I):java.awt.Insets
- p:getOffset():I
- p:getTabBounds(I,java.awt.Rectangle):java.awt.Rectangle
- p:getTabLabelShiftX(I,I,Z):I
- p:getTabLabelShiftY(I,I,Z):I
- p:getTextViewForTab(I):javax.swing.text.View
- p:installComponents():V
- p:installDefaults():V
- p:installListeners():V
- paint(java.awt.Graphics,javax.swing.JComponent):V
- p:paintContentBorderBottomEdge(java.awt.Graphics,I,I,I,I,I,I):V
- p:paintContentBorderLeftEdge(java.awt.Graphics,I,I,I,I,I,I):V
- p:paintContentBorderRightEdge(java.awt.Graphics,I,I,I,I,I,I):V
- p:paintContentBorderTopEdge(java.awt.Graphics,I,I,I,I,I,I):V
- p:paintFocusIndicator(java.awt.Graphics,I,java.awt.Rectangle[],I,java.awt.Rectangle,java.awt.Rectangle,Z):V
- p:paintTabArea(java.awt.Graphics,I,I):V
- p:paintTabBackground(java.awt.Graphics,I,I,I,I,I,I,Z):V
- p:paintTabBorder(java.awt.Graphics,I,I,I,I,I,I,Z):V
- p:paintText(java.awt.Graphics,I,java.awt.Font,java.awt.FontMetrics,I,java.lang.String,java.awt.Rectangle,Z):V
- tabForCoordinate(javax.swing.JTabbedPane,I,I):I
- p:uninstallComponents():V
- p:uninstallListeners():V
- uninstallUI(javax.swing.JComponent):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaTextAreaUI
- javax.swing.plaf.basic.BasicTextAreaUI
- <init>():V
- p:createCaret():javax.swing.text.Caret
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- getNextVisualPositionFrom(javax.swing.text.JTextComponent,I,javax.swing.text.Position$Bias,I,javax.swing.text.Position$Bias[]):I
- p:installKeyboardActions():V
- p:installListeners():V
- p:paintSafely(java.awt.Graphics):V
- p:uninstallListeners():V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaTextBorder
- com.intellij.openapi.ui.ErrorBorderCapable
- javax.swing.border.Border
- javax.swing.plaf.UIResource
- <init>():V
- p:bw():F
- p:clipForBorder(java.awt.Component,java.awt.Graphics2D,I,I):V
- getBorderInsets(java.awt.Component):java.awt.Insets
- p:getOutlineColor(Z,Z):java.awt.Color
- isBorderOpaque():Z
- p:isFocused(java.awt.Component):Z
- p:isSymmetric():Z
- p:lw(java.awt.Graphics2D):F
- p:paddings():java.awt.Insets
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
- s:paintDarculaSearchArea(java.awt.Graphics2D,java.awt.Rectangle,javax.swing.text.JTextComponent,Z):V
- p:paintNormalBorder(java.awt.Graphics2D,javax.swing.JComponent,java.awt.Rectangle):V
- p:paintSearchArea(java.awt.Graphics2D,java.awt.Rectangle,javax.swing.text.JTextComponent,Z):V
c:com.intellij.ide.ui.laf.darcula.ui.DarculaTextFieldUI
- com.intellij.ide.ui.laf.darcula.ui.TextFieldWithPopupHandlerUI
- <init>():V
- p:bw():F
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:getClearIconPreferredSpace():I
- p:getDefaultMargins():java.awt.Insets
- p:getMinimumHeight(I):I
- p:paintBackground(java.awt.Graphics):V
- p:paintDarculaBackground(java.awt.Graphics,javax.swing.text.JTextComponent):V
f:com.intellij.ide.ui.laf.darcula.ui.DarculaToggleButtonUI
- com.intellij.ide.ui.laf.darcula.ui.DarculaButtonUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
c:com.intellij.ide.ui.laf.darcula.ui.DarculaTreeUI
- com.intellij.util.ui.tree.WideSelectionTreeUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- p:installDefaults():V
f:com.intellij.ide.ui.laf.darcula.ui.OnboardingDialogButtons
- sf:INSTANCE:com.intellij.ide.ui.laf.darcula.ui.OnboardingDialogButtons
- sf:createButton(java.lang.String,javax.swing.Icon,java.lang.Runnable):javax.swing.JButton
- sf:createButton(javax.swing.Action):javax.swing.JButton
- f:createButton(Z):javax.swing.JButton
- bs:createButton$default(java.lang.String,javax.swing.Icon,java.lang.Runnable,I,java.lang.Object):javax.swing.JButton
- f:createHoveredLinkButton():javax.swing.JButton
- sf:createHoveredLinkButton(java.lang.String,javax.swing.Icon,java.lang.Runnable):javax.swing.JButton
- f:createLinkButton():javax.swing.JButton
- f:createLinkButton(java.lang.String,javax.swing.Icon,java.lang.Runnable):javax.swing.JButton
- sf:createMainButton(java.lang.String,javax.swing.Icon,java.lang.Runnable):javax.swing.JButton
- sf:createMainButton(javax.swing.Action):javax.swing.JButton
- bs:createMainButton$default(java.lang.String,javax.swing.Icon,java.lang.Runnable,I,java.lang.Object):javax.swing.JButton
- f:getBUTTON_HOVER_BORDER_COLOR():java.awt.Color
- f:getDEFAULT_BUTTON_HOVER_BORDER_COLOR():java.awt.Color
a:com.intellij.ide.ui.laf.darcula.ui.TextFieldWithPopupHandlerUI
- javax.swing.plaf.basic.BasicTextFieldUI
- com.intellij.openapi.util.Condition
- <init>():V
- p:addExtension(com.intellij.ui.components.fields.ExtendableTextComponent$Extension):V
- p:createCaret():javax.swing.text.Caret
- p:getActionUnder(java.awt.Point):com.intellij.ide.ui.laf.darcula.ui.TextFieldWithPopupHandlerUI$SearchAction
- p:getClearIcon(Z,Z):javax.swing.Icon
- p:getClearIconGap():I
- p:getClearIconPreferredSpace():I
- p:getDefaultMargins():java.awt.Insets
- getExtensionIconBounds(com.intellij.ui.components.fields.ExtendableTextComponent$Extension):java.awt.Rectangle
- getExtensionIconLocation(java.lang.String):java.awt.Point
- p:getMinimumHeight(I):I
- getMinimumSize(javax.swing.JComponent):java.awt.Dimension
- s:getNewLineAction(java.awt.Component):javax.swing.AbstractAction
- getNextVisualPositionFrom(javax.swing.text.JTextComponent,I,javax.swing.text.Position$Bias,I,javax.swing.text.Position$Bias[]):I
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- p:getSearchIcon(Z,Z):javax.swing.Icon
- p:getSearchIconGap():I
- p:getSearchIconPreferredSpace():I
- getToolTipText(javax.swing.text.JTextComponent,java.awt.Point):java.lang.String
- p:getVisibleEditorRect():java.awt.Rectangle
- p:hasText():Z
- p:installDefaults():V
- p:installListeners():V
- s:isSearchField(java.awt.Component):Z
- s:isSearchFieldWithHistoryPopup(java.awt.Component):Z
- p:paintSafely(java.awt.Graphics):V
- p:showSearchPopup():V
- p:uninstallListeners():V
- p:updatePreferredSize(javax.swing.JComponent,java.awt.Dimension):V
- value(java.lang.Object):Z
- viewToModel(javax.swing.text.JTextComponent,java.awt.Point,javax.swing.text.Position$Bias[]):I
f:com.intellij.ide.ui.laf.darcula.ui.TextFieldWithPopupHandlerUI$IconHolder
- f:bounds:java.awt.Rectangle
- f:extension:com.intellij.ui.components.fields.ExtendableTextComponent$Extension
- hovered:Z
- icon:javax.swing.Icon
- isClickable():Z
c:com.intellij.ide.ui.laf.darcula.ui.TextFieldWithPopupHandlerUI$MarginAwareCaret
- javax.swing.plaf.basic.BasicTextUI$BasicCaret
- <init>():V
- p:adjustVisibility(java.awt.Rectangle):V
e:com.intellij.ide.ui.laf.darcula.ui.TextFieldWithPopupHandlerUI$SearchAction
- java.lang.Enum
- sf:CLEAR:com.intellij.ide.ui.laf.darcula.ui.TextFieldWithPopupHandlerUI$SearchAction
- sf:NEWLINE:com.intellij.ide.ui.laf.darcula.ui.TextFieldWithPopupHandlerUI$SearchAction
- s:valueOf(java.lang.String):com.intellij.ide.ui.laf.darcula.ui.TextFieldWithPopupHandlerUI$SearchAction
- s:values():com.intellij.ide.ui.laf.darcula.ui.TextFieldWithPopupHandlerUI$SearchAction[]
f:com.intellij.ide.ui.laf.darcula.ui.ToolbarComboWidgetUiSizes
- sf:INSTANCE:com.intellij.ide.ui.laf.darcula.ui.ToolbarComboWidgetUiSizes
- sf:getGapAfterLeftIcons():I
- sf:getGapBeforeExpandIcon():I
- sf:getGapBeforeRightIcons():I
- sf:getSeparatorGap():I
f:com.intellij.ide.ui.laf.intellij.IdeaPopupMenuUI
- javax.swing.plaf.basic.BasicPopupMenuUI
- sf:CORNER_RADIUS:com.intellij.util.ui.JBValue
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- s:hideEmptyIcon(java.awt.Component):Z
- s:isMenuBarItem(java.awt.Component):Z
- s:isPartOfPopupMenu(java.awt.Component):Z
- isPopupTrigger(java.awt.event.MouseEvent):Z
- s:isRoundBorder():Z
- s:isUnderMainMenu(java.awt.Component):Z
- s:isUnderPopup(java.awt.Component):Z
- paint(java.awt.Graphics,javax.swing.JComponent):V
f:com.intellij.ide.ui.newItemPopup.NewItemPopupUtil
- s:createNewItemPopup(java.lang.String,javax.swing.JComponent,javax.swing.JComponent):com.intellij.openapi.ui.popup.JBPopup
c:com.intellij.ide.ui.newItemPopup.NewItemSimplePopupPanel
- com.intellij.ui.components.JBPanel
- com.intellij.openapi.Disposable
- p:myApplyAction:com.intellij.util.Consumer
- p:myErrorPopup:com.intellij.openapi.ui.popup.JBPopup
- p:myErrorShowPoint:com.intellij.ui.awt.RelativePoint
- pf:myTextField:com.intellij.ui.components.fields.ExtendableTextField
- <init>():V
- <init>(Z):V
- dispose():V
- getApplyAction():com.intellij.util.Consumer
- getTextField():javax.swing.JTextField
- hasError():Z
- p:performApplyActionOnEnter(java.awt.event.KeyEvent):V
- setApplyAction(com.intellij.util.Consumer):V
- setError(java.lang.String):V
- setWarning(java.lang.String):V
c:com.intellij.ide.ui.newItemPopup.NewItemWithTemplatesPopupPanel
- com.intellij.ide.ui.newItemPopup.NewItemSimplePopupPanel
- pf:myTemplatesList:javax.swing.JList
- <init>(java.util.List,javax.swing.ListCellRenderer):V
- <init>(java.util.List,javax.swing.ListCellRenderer,Z):V
- addTemplatesVisibilityListener(com.intellij.ide.ui.newItemPopup.TemplatesListVisibilityListener):V
- removeTemplatesVisibilityListener(com.intellij.ide.ui.newItemPopup.TemplatesListVisibilityListener):V
- p:setTemplatesListVisible(Z):V
- p:updateTemplatesList(java.util.List):V
pf:com.intellij.ide.ui.newItemPopup.NewItemWithTemplatesPopupPanel$MyListModel
- javax.swing.AbstractListModel
- getElementAt(I):java.lang.Object
- getSize():I
- update(java.util.List):V
com.intellij.ide.ui.newItemPopup.TemplatesListVisibilityListener
- a:visibilityChanged(Z):V
com.intellij.ide.ui.search.ComponentHighlightingListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:highlight(javax.swing.JComponent,java.lang.String):V
com.intellij.ide.ui.search.NotABooleanOptionDescription
f:com.intellij.ide.ui.search.SearchUtil
- sf:HIGHLIGHT_WITH_BORDER:java.lang.String
- sf:INSTANCE:com.intellij.ide.ui.search.SearchUtil
- sf:appendFragments(java.lang.String,java.lang.String,I,java.awt.Color,java.awt.Color,com.intellij.ui.SimpleColoredComponent):V
- f:appendRangedFragments(java.lang.String,java.lang.String,com.intellij.util.IntPair[],I,java.awt.Color,java.awt.Color,com.intellij.ui.SimpleColoredComponent):V
- sf:expand(com.intellij.openapi.options.ConfigurableGroup[]):java.util.List
- f:expandGroup(com.intellij.openapi.options.ConfigurableGroup):java.util.List
- sf:findKeys(java.lang.String,java.util.Set):java.util.List
- sf:markup(java.lang.String,java.lang.String):java.lang.String
- sf:markup(java.lang.String,java.lang.String,java.awt.Color,java.awt.Color):java.lang.String
- sf:processComponent(com.intellij.openapi.options.SearchableConfigurable,java.util.Set,javax.swing.JComponent,Z):V
a:com.intellij.ide.util.ChooseElementsDialog
- com.intellij.openapi.ui.DialogWrapper
- p:myChooser:com.intellij.ide.util.ElementsChooser
- <init>(com.intellij.openapi.project.Project,java.util.List,java.lang.String,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.util.List,java.lang.String,java.lang.String,Z):V
- <init>(java.awt.Component,java.util.List,java.lang.String):V
- <init>(java.awt.Component,java.util.List,java.lang.String,java.lang.String,Z):V
- p:canElementsBeMarked():Z
- p:createCenterPanel():javax.swing.JComponent
- getChosenElements():java.util.List
- p:getItemBackgroundColor(java.lang.Object):java.awt.Color
- pa:getItemIcon(java.lang.Object):javax.swing.Icon
- p:getItemLocation(java.lang.Object):java.lang.String
- pa:getItemText(java.lang.Object):java.lang.String
- getMarkedElements():java.util.List
- getPreferredFocusedComponent():javax.swing.JComponent
- p:isElementMarkedByDefault(java.lang.Object):Z
- selectElements(java.util.List):V
- showAndGetResult():java.util.List
c:com.intellij.ide.util.ElementsChooser
- com.intellij.ide.util.MultiStateElementsChooser
- <init>(java.util.List,Z):V
- <init>(Z):V
- addElement(java.lang.Object,Z):V
- addElement(java.lang.Object,Z,com.intellij.ide.util.MultiStateElementsChooser$ElementProperties):V
- addElementsMarkListener(com.intellij.ide.util.ElementsChooser$ElementsMarkListener):V
- addStatisticsCollector(com.intellij.ide.util.ElementsChooser$StatisticsCollector):V
- getElements(Z):java.util.List
- getMarkedElements():java.util.List
- hasUnmarkedElements():Z
- invertSelection():V
- isElementMarked(java.lang.Object):Z
- markElements(java.util.Collection):V
- removeElementsMarkListener(com.intellij.ide.util.ElementsChooser$ElementsMarkListener):V
- removeStatisticsCollector(com.intellij.ide.util.ElementsChooser$StatisticsCollector):V
- setAllElementsMarked(Z):V
- setElementMarked(java.lang.Object,Z):V
- setElements(java.util.List,Z):V
com.intellij.ide.util.ElementsChooser$ElementsMarkListener
- a:elementMarkChanged(java.lang.Object,Z):V
com.intellij.ide.util.ElementsChooser$StatisticsCollector
- com.intellij.ide.util.ElementsChooser$ElementsMarkListener
- a:allSelected():V
- a:noneSelected():V
- a:selectionInverted():V
f:com.intellij.ide.util.ExportToFileUtil
- <init>():V
- s:chooseFileAndExport(com.intellij.openapi.project.Project,com.intellij.ide.ExporterToTextFile):V
c:com.intellij.ide.util.MultiStateElementsChooser
- javax.swing.JPanel
- com.intellij.ui.ComponentWithExpandableItems
- com.intellij.util.ui.ComponentWithEmptyText
- <init>(java.util.List,java.lang.Object,com.intellij.ide.util.MultiStateElementsChooser$MarkStateDescriptor):V
- <init>(Z,com.intellij.ide.util.MultiStateElementsChooser$MarkStateDescriptor):V
- addElement(java.lang.Object,java.lang.Object):V
- addElement(java.lang.Object,java.lang.Object,com.intellij.ide.util.MultiStateElementsChooser$ElementProperties):V
- addElementsMarkListener(com.intellij.ide.util.MultiStateElementsChooser$ElementsMarkStateListener):V
- addListSelectionListener(javax.swing.event.ListSelectionListener):V
- clear():V
- disableElement(java.lang.Object):V
- getComponent():javax.swing.JComponent
- getElementAt(I):java.lang.Object
- getElementCount():I
- getElementMarkState(java.lang.Object):java.lang.Object
- getElementMarkStates():java.util.Map
- getEmptyText():com.intellij.util.ui.StatusText
- getExpandableItemsHandler():com.intellij.ui.ExpandableItemsHandler
- p:getItemIcon(java.lang.Object):javax.swing.Icon
- p:getItemText(java.lang.Object):java.lang.String
- getSelectedElement():java.lang.Object
- getSelectedElementRow():I
- getSelectedElements():java.util.List
- markElements(java.util.Collection,java.lang.Object):V
- moveElement(java.lang.Object,I):V
- refresh():V
- refresh(java.lang.Object):V
- removeAllElements():V
- removeElement(java.lang.Object):V
- removeElementsMarkListener(com.intellij.ide.util.MultiStateElementsChooser$ElementsMarkStateListener):V
- removeListSelectionListener(javax.swing.event.ListSelectionListener):V
- restoreSelection():V
- saveSelection():V
- selectElements(java.util.Collection):V
- setAllElementsMarked(java.lang.Object):V
- setColorUnmarkedElements(Z):V
- setElementMarkState(java.lang.Object,java.lang.Object):V
- setElementProperties(java.lang.Object,com.intellij.ide.util.MultiStateElementsChooser$ElementProperties):V
- setElements(java.util.List,java.lang.Object):V
- setEnabled(Z):V
- setExpandableItemsEnabled(Z):V
- setSingleSelectionMode():V
- sort(java.util.Comparator):V
- stopEditing():V
com.intellij.ide.util.MultiStateElementsChooser$ElementProperties
- getBackgroundColor():java.awt.Color
- getColor():java.awt.Color
- getIcon():javax.swing.Icon
- getLocation():java.lang.String
com.intellij.ide.util.MultiStateElementsChooser$ElementsMarkStateListener
- a:elementMarkChanged(java.lang.Object,java.lang.Object):V
com.intellij.ide.util.MultiStateElementsChooser$MarkStateDescriptor
- a:getDefaultState(java.lang.Object):java.lang.Object
- a:getMarkRenderer():javax.swing.table.TableCellRenderer
- a:getMarkState(java.lang.Object):java.lang.Object
- a:getNextState(java.lang.Object,java.lang.Object):java.lang.Object
- a:getNextState(java.util.Map):java.lang.Object
- a:isMarked(java.lang.Object):Z
f:com.intellij.ide.util.NameGeneratorUtilKt
- sf:installNameGenerators(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.openapi.observable.properties.ObservableMutableProperty):V
f:com.intellij.ide.util.TipAndTrickBean
- com.intellij.openapi.extensions.PluginAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:TIP_FILE_EXTENSION:java.lang.String
- featureId:java.lang.String
- fileName:java.lang.String
- <init>():V
- s:findById(java.lang.String):com.intellij.ide.util.TipAndTrickBean
- getId():java.lang.String
- getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- s:getTipId(java.lang.String):java.lang.String
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
f:com.intellij.ide.util.TipUIUtil
- <init>():V
- s:createBrowser():com.intellij.ide.util.TipUIUtil$Browser
com.intellij.ide.util.TipUIUtil$Browser
- com.intellij.ui.TextAccessor
- a:getComponent():javax.swing.JComponent
- a:load(java.lang.String):V
- a:setText(java.lang.String):V
com.intellij.ide.vcs.RecentProjectsBranchesProvider
- sf:Companion:com.intellij.ide.vcs.RecentProjectsBranchesProvider$Companion
- a:getCurrentBranch(java.lang.String):java.lang.String
f:com.intellij.ide.vcs.RecentProjectsBranchesProvider$Companion
- f:getCurrentBranch(java.lang.String):java.lang.String
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
a:com.intellij.ide.wizard.AbstractNewProjectWizardBuilder
- com.intellij.ide.util.projectWizard.ModuleBuilder
- sf:Companion:com.intellij.ide.wizard.AbstractNewProjectWizardBuilder$Companion
- <init>():V
- cleanup():V
- commitModule(com.intellij.openapi.project.Project,com.intellij.openapi.module.ModifiableModuleModel):com.intellij.openapi.module.Module
- pa:createStep(com.intellij.ide.util.projectWizard.WizardContext):com.intellij.ide.wizard.NewProjectWizardStep
- f:getCustomOptionsStep(com.intellij.ide.util.projectWizard.WizardContext,com.intellij.openapi.Disposable):com.intellij.ide.util.projectWizard.ModuleWizardStep
- getDescription():java.lang.String
- f:getModuleType():com.intellij.openapi.module.ModuleType
- a:getNodeIcon():javax.swing.Icon
- a:getPresentableName():java.lang.String
f:com.intellij.ide.wizard.AbstractNewProjectWizardBuilder$Companion
a:com.intellij.ide.wizard.AbstractNewProjectWizardMultiStep
- com.intellij.ide.wizard.AbstractNewProjectWizardMultiStepBase
- <init>(com.intellij.ide.wizard.NewProjectWizardStep,com.intellij.openapi.extensions.ExtensionPointName):V
- f:getEpName():com.intellij.openapi.extensions.ExtensionPointName
- pa:getSelf():com.intellij.ide.wizard.NewProjectWizardStep
- p:initSteps():java.util.LinkedHashMap
a:com.intellij.ide.wizard.AbstractNewProjectWizardMultiStepBase
- com.intellij.ide.wizard.AbstractNewProjectWizardStep
- <init>(com.intellij.ide.wizard.NewProjectWizardStep):V
- p:createAndSetupSwitcher(com.intellij.ui.dsl.builder.Row):com.intellij.ui.dsl.builder.SegmentedButton
- pa:getLabel():java.lang.String
- f:getStep():java.lang.String
- f:getStepProperty():com.intellij.openapi.observable.properties.GraphProperty
- f:getSteps():java.util.Map
- p:initSteps():java.util.Map
- f:setStep(java.lang.String):V
- f:setSteps(java.util.Map):V
- setupProject(com.intellij.openapi.project.Project):V
- p:setupSwitcherUi(com.intellij.ui.dsl.builder.Panel):V
- setupUI(com.intellij.ui.dsl.builder.Panel):V
a:com.intellij.ide.wizard.AbstractNewProjectWizardStep
- com.intellij.ide.wizard.NewProjectWizardStep
- <init>(com.intellij.ide.wizard.NewProjectWizardStep):V
- f:getContext():com.intellij.ide.util.projectWizard.WizardContext
- f:getData():com.intellij.openapi.util.UserDataHolder
- f:getKeywords():com.intellij.ide.wizard.NewProjectWizardStep$Keywords
- f:getPropertyGraph():com.intellij.openapi.observable.properties.PropertyGraph
c:com.intellij.ide.wizard.AbstractWizardEx
- com.intellij.ide.wizard.AbstractWizard
- <init>(java.lang.String,com.intellij.openapi.project.Project,java.util.List):V
- p:canFinish():Z
- p:canGoNext():Z
- p:dispose():V
- p:doNextAction():V
- p:doPreviousAction():V
- p:getHelpID():java.lang.String
- p:getNextStep(I):I
- p:getPreviousStep(I):I
- p:isLastStep():Z
- p:updateButtons():V
- p:updateStep():V
com.intellij.ide.wizard.BuildSystemNewProjectWizardData
- com.intellij.ide.wizard.LanguageNewProjectWizardData
- a:getBuildSystem():java.lang.String
- a:getBuildSystemProperty():com.intellij.openapi.observable.properties.GraphProperty
- a:setBuildSystem(java.lang.String):V
com.intellij.ide.wizard.GeneratorNewProjectWizard
- sf:Companion:com.intellij.ide.wizard.GeneratorNewProjectWizard$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createStep(com.intellij.ide.util.projectWizard.WizardContext):com.intellij.ide.wizard.NewProjectWizardStep
- getDescription():java.lang.String
- getGroupName():java.lang.String
- a:getIcon():javax.swing.Icon
- a:getId():java.lang.String
- a:getName():java.lang.String
- getOrdinal():I
- isEnabled():Z
f:com.intellij.ide.wizard.GeneratorNewProjectWizard$Companion
a:com.intellij.ide.wizard.GeneratorNewProjectWizardBuilderAdapter
- com.intellij.ide.wizard.AbstractNewProjectWizardBuilder
- sf:Companion:com.intellij.ide.wizard.GeneratorNewProjectWizardBuilderAdapter$Companion
- <init>(com.intellij.ide.wizard.GeneratorNewProjectWizard):V
- p:createStep(com.intellij.ide.util.projectWizard.WizardContext):com.intellij.ide.wizard.NewProjectWizardStep
- getBuilderId():java.lang.String
- getGroupName():java.lang.String
- getNodeIcon():javax.swing.Icon
- getPresentableName():java.lang.String
- getWeight():I
- f:getWizard():com.intellij.ide.wizard.GeneratorNewProjectWizard
- isAvailable():Z
f:com.intellij.ide.wizard.GeneratorNewProjectWizardBuilderAdapter$Companion
com.intellij.ide.wizard.GitNewProjectWizardData
- sf:Companion:com.intellij.ide.wizard.GitNewProjectWizardData$Companion
- a:getGit():Z
- s:getGitData(com.intellij.ide.wizard.NewProjectWizardStep):com.intellij.ide.wizard.GitNewProjectWizardData
f:com.intellij.ide.wizard.GitNewProjectWizardData$Companion
- f:getGitData(com.intellij.ide.wizard.NewProjectWizardStep):com.intellij.ide.wizard.GitNewProjectWizardData
- f:getKEY():com.intellij.openapi.util.Key
f:com.intellij.ide.wizard.GitNewProjectWizardStep
- com.intellij.ide.wizard.AbstractNewProjectWizardStep
- com.intellij.ide.wizard.GitNewProjectWizardData
- com.intellij.ide.wizard.NewProjectWizardBaseData
- <init>(com.intellij.ide.wizard.NewProjectWizardBaseStep):V
- getContentEntryPath():java.lang.String
- getGit():Z
- getName():java.lang.String
- getNameProperty():com.intellij.openapi.observable.properties.GraphProperty
- getPath():java.lang.String
- getPathProperty():com.intellij.openapi.observable.properties.GraphProperty
- getProjectPath():java.nio.file.Path
- setName(java.lang.String):V
- setPath(java.lang.String):V
- setupProject(com.intellij.openapi.project.Project):V
- setupUI(com.intellij.ui.dsl.builder.Panel):V
com.intellij.ide.wizard.LanguageNewProjectWizard
- com.intellij.ide.wizard.NewProjectWizardMultiStepFactory
- sf:Companion:com.intellij.ide.wizard.LanguageNewProjectWizard$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
f:com.intellij.ide.wizard.LanguageNewProjectWizard$Companion
f:com.intellij.ide.wizard.LanguageNewProjectWizard$DefaultImpls
- s:getOrdinal(com.intellij.ide.wizard.LanguageNewProjectWizard):I
- s:isEnabled(com.intellij.ide.wizard.LanguageNewProjectWizard,com.intellij.ide.util.projectWizard.WizardContext):Z
com.intellij.ide.wizard.LanguageNewProjectWizardData
- com.intellij.ide.wizard.NewProjectWizardBaseData
- sf:Companion:com.intellij.ide.wizard.LanguageNewProjectWizardData$Companion
- a:getLanguage():java.lang.String
- a:getLanguageProperty():com.intellij.openapi.observable.properties.GraphProperty
- a:setLanguage(java.lang.String):V
f:com.intellij.ide.wizard.LanguageNewProjectWizardData$Companion
f:com.intellij.ide.wizard.NewProjectWizardActivityKey
- com.intellij.platform.backend.observation.ActivityKey
- sf:INSTANCE:com.intellij.ide.wizard.NewProjectWizardActivityKey
- getPresentableName():java.lang.String
com.intellij.ide.wizard.NewProjectWizardBaseData
- sf:Companion:com.intellij.ide.wizard.NewProjectWizardBaseData$Companion
- s:getBaseData(com.intellij.ide.wizard.NewProjectWizardStep):com.intellij.ide.wizard.NewProjectWizardBaseData
- getContentEntryPath():java.lang.String
- a:getName():java.lang.String
- a:getNameProperty():com.intellij.openapi.observable.properties.GraphProperty
- a:getPath():java.lang.String
- a:getPathProperty():com.intellij.openapi.observable.properties.GraphProperty
- getProjectPath():java.nio.file.Path
- a:setName(java.lang.String):V
- a:setPath(java.lang.String):V
f:com.intellij.ide.wizard.NewProjectWizardBaseData$Companion
- f:getBaseData(com.intellij.ide.wizard.NewProjectWizardStep):com.intellij.ide.wizard.NewProjectWizardBaseData
- f:getKEY():com.intellij.openapi.util.Key
f:com.intellij.ide.wizard.NewProjectWizardBaseStep
- com.intellij.ide.wizard.AbstractNewProjectWizardStep
- com.intellij.ide.wizard.NewProjectWizardBaseData
- sf:Companion:com.intellij.ide.wizard.NewProjectWizardBaseStep$Companion
- <init>(com.intellij.ide.wizard.NewProjectWizardStep):V
- f:getDefaultName():java.lang.String
- getName():java.lang.String
- getNameProperty():com.intellij.openapi.observable.properties.GraphProperty
- getPath():java.lang.String
- getPathProperty():com.intellij.openapi.observable.properties.GraphProperty
- f:setDefaultName(java.lang.String):V
- setName(java.lang.String):V
- setPath(java.lang.String):V
- setupProject(com.intellij.openapi.project.Project):V
- setupUI(com.intellij.ui.dsl.builder.Panel):V
f:com.intellij.ide.wizard.NewProjectWizardBaseStep$Companion
f:com.intellij.ide.wizard.NewProjectWizardBaseStepKt
- sf:newProjectWizardBaseStepWithoutGap(com.intellij.ide.wizard.NewProjectWizardStep):com.intellij.ide.wizard.NewProjectWizardBaseStep
f:com.intellij.ide.wizard.NewProjectWizardChainStep
- com.intellij.ide.wizard.AbstractNewProjectWizardStep
- sf:Companion:com.intellij.ide.wizard.NewProjectWizardChainStep$Companion
- <init>(com.intellij.ide.wizard.NewProjectWizardStep):V
- f:nextStep(kotlin.jvm.functions.Function1):com.intellij.ide.wizard.NewProjectWizardChainStep
- setupProject(com.intellij.openapi.project.Project):V
- setupUI(com.intellij.ui.dsl.builder.Panel):V
f:com.intellij.ide.wizard.NewProjectWizardChainStep$Companion
- f:nextStep(com.intellij.ide.wizard.NewProjectWizardStep,kotlin.jvm.functions.Function1):com.intellij.ide.wizard.NewProjectWizardChainStep
f:com.intellij.ide.wizard.NewProjectWizardLanguageStep
- com.intellij.ide.wizard.AbstractNewProjectWizardStep
- com.intellij.ide.wizard.LanguageNewProjectWizardData
- com.intellij.ide.wizard.NewProjectWizardBaseData
- <init>(com.intellij.ide.wizard.NewProjectWizardStep,java.lang.String):V
- getContentEntryPath():java.lang.String
- getLanguage():java.lang.String
- getLanguageProperty():com.intellij.openapi.observable.properties.GraphProperty
- getName():java.lang.String
- getNameProperty():com.intellij.openapi.observable.properties.GraphProperty
- getPath():java.lang.String
- getPathProperty():com.intellij.openapi.observable.properties.GraphProperty
- getProjectPath():java.nio.file.Path
- setLanguage(java.lang.String):V
- setName(java.lang.String):V
- setPath(java.lang.String):V
- setupUI(com.intellij.ui.dsl.builder.Panel):V
com.intellij.ide.wizard.NewProjectWizardMultiStepFactory
- a:createStep(com.intellij.ide.wizard.NewProjectWizardStep):com.intellij.ide.wizard.NewProjectWizardStep
- a:getName():java.lang.String
- getOrdinal():I
- isEnabled(com.intellij.ide.util.projectWizard.WizardContext):Z
f:com.intellij.ide.wizard.NewProjectWizardMultiStepFactory$DefaultImpls
- s:getOrdinal(com.intellij.ide.wizard.NewProjectWizardMultiStepFactory):I
- s:isEnabled(com.intellij.ide.wizard.NewProjectWizardMultiStepFactory,com.intellij.ide.util.projectWizard.WizardContext):Z
com.intellij.ide.wizard.NewProjectWizardStep
- sf:ADD_SAMPLE_CODE_PROPERTY_NAME:java.lang.String
- sf:Companion:com.intellij.ide.wizard.NewProjectWizardStep$Companion
- sf:GENERATE_ONBOARDING_TIPS_NAME:java.lang.String
- sf:GIT_PROPERTY_NAME:java.lang.String
- sf:GROUP_ID_PROPERTY_NAME:java.lang.String
- a:getContext():com.intellij.ide.util.projectWizard.WizardContext
- a:getData():com.intellij.openapi.util.UserDataHolder
- a:getKeywords():com.intellij.ide.wizard.NewProjectWizardStep$Keywords
- a:getPropertyGraph():com.intellij.openapi.observable.properties.PropertyGraph
- setupProject(com.intellij.openapi.project.Project):V
- setupUI(com.intellij.ui.dsl.builder.Panel):V
f:com.intellij.ide.wizard.NewProjectWizardStep$Companion
- sf:ADD_SAMPLE_CODE_PROPERTY_NAME:java.lang.String
- sf:GENERATE_ONBOARDING_TIPS_NAME:java.lang.String
- sf:GIT_PROPERTY_NAME:java.lang.String
- sf:GROUP_ID_PROPERTY_NAME:java.lang.String
- f:getMODIFIABLE_MODULE_MODEL_KEY():com.intellij.openapi.util.Key
f:com.intellij.ide.wizard.NewProjectWizardStep$Keywords
- <init>():V
- f:add(java.lang.Object,java.lang.Iterable):V
- f:toSet():java.util.Set
f:com.intellij.ide.wizard.NewProjectWizardStepPanel
- <init>(com.intellij.ide.wizard.NewProjectWizardStep):V
- f:apply():V
- f:getComponent():com.intellij.openapi.ui.DialogPanel
- f:getPreferredFocusedComponent():javax.swing.JComponent
- f:getStep():com.intellij.ide.wizard.NewProjectWizardStep
- f:isModified():Z
- f:reset():V
- f:validate():Z
f:com.intellij.ide.wizard.RootNewProjectWizardStep
- com.intellij.ide.wizard.NewProjectWizardStep
- <init>(com.intellij.ide.util.projectWizard.WizardContext):V
- getContext():com.intellij.ide.util.projectWizard.WizardContext
- getData():com.intellij.openapi.util.UserDataHolderBase
- getKeywords():com.intellij.ide.wizard.NewProjectWizardStep$Keywords
- getPropertyGraph():com.intellij.openapi.observable.properties.PropertyGraph
- setKeywords(com.intellij.ide.wizard.NewProjectWizardStep$Keywords):V
f:com.intellij.ide.wizard.UIWizardUtil
- sf:chain(com.intellij.ide.wizard.NewProjectWizardStep,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):com.intellij.ide.wizard.NewProjectWizardStep
- sf:chain(com.intellij.ide.wizard.NewProjectWizardStep,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):com.intellij.ide.wizard.NewProjectWizardStep
- sf:getProjectOrDefault(com.intellij.ide.util.projectWizard.WizardContext):com.intellij.openapi.project.Project
- sf:setMinimumWidthForAllRowLabels(com.intellij.openapi.ui.DialogPanel,I):V
- sf:withVisualPadding(com.intellij.openapi.ui.DialogPanel,Z):com.intellij.openapi.ui.DialogPanel
- bs:withVisualPadding$default(com.intellij.openapi.ui.DialogPanel,Z,I,java.lang.Object):com.intellij.openapi.ui.DialogPanel
a:com.intellij.ide.wizard.comment.CommentNewProjectWizardStep
- com.intellij.ide.wizard.AbstractNewProjectWizardStep
- <init>(com.intellij.ide.wizard.NewProjectWizardStep):V
- a:getComment():java.lang.String
- isFullWidth():Z
- onHyperlinkActivated(javax.swing.event.HyperlinkEvent):V
- setupUI(com.intellij.ui.dsl.builder.Panel):V
a:com.intellij.ide.wizard.comment.LinkNewProjectWizardStep
- com.intellij.ide.wizard.comment.CommentNewProjectWizardStep
- <init>(com.intellij.ide.wizard.NewProjectWizardStep):V
- a:getBuilderId():java.lang.String
- onHyperlinkActivated(javax.swing.event.HyperlinkEvent):V
- onStepSelected(com.intellij.ide.wizard.NewProjectWizardStep):V
- onStepSelected(com.intellij.ide.wizard.Step):V
f:com.intellij.ide.wizard.language.BaseLanguageGeneratorNewProjectWizard
- com.intellij.ide.wizard.GeneratorNewProjectWizard
- sf:Companion:com.intellij.ide.wizard.language.BaseLanguageGeneratorNewProjectWizard$Companion
- <init>(com.intellij.ide.util.projectWizard.WizardContext,com.intellij.ide.wizard.language.LanguageGeneratorNewProjectWizard):V
- createStep(com.intellij.ide.util.projectWizard.WizardContext):com.intellij.ide.wizard.NewProjectWizardStep
- getIcon():javax.swing.Icon
- getId():java.lang.String
- getName():java.lang.String
- getOrdinal():I
- isEnabled():Z
f:com.intellij.ide.wizard.language.BaseLanguageGeneratorNewProjectWizard$Companion
- f:getLanguageGeneratorId(com.intellij.ide.util.projectWizard.WizardContext,java.lang.String):java.lang.String
- f:getLanguageModelBuilderId(com.intellij.ide.util.projectWizard.WizardContext,java.lang.String):java.lang.String
com.intellij.ide.wizard.language.LanguageGeneratorNewProjectWizard
- sf:Companion:com.intellij.ide.wizard.language.LanguageGeneratorNewProjectWizard$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createStep(com.intellij.ide.wizard.NewProjectWizardStep):com.intellij.ide.wizard.NewProjectWizardStep
- a:getIcon():javax.swing.Icon
- a:getName():java.lang.String
- getOrdinal():I
- isEnabled(com.intellij.ide.util.projectWizard.WizardContext):Z
f:com.intellij.ide.wizard.language.LanguageGeneratorNewProjectWizard$Companion
f:com.intellij.idea.IdeaLogger
- com.intellij.openapi.diagnostic.Logger
- s:ourErrorsOccurred:java.lang.Exception
- s:ourLastActionId:java.lang.String
- s:dropFrequentExceptionsCaches():V
- error(java.lang.String,java.lang.Throwable,com.intellij.openapi.diagnostic.Attachment[]):V
- error(java.lang.String,java.lang.Throwable,java.lang.String[]):V
- warn(java.lang.String,java.lang.Throwable):V
f:com.intellij.idea.LoggerFactory
- com.intellij.openapi.diagnostic.Logger$Factory
- sf:LOG_FILE_NAME:java.lang.String
- <init>():V
- flushHandlers():V
- s:getLogFilePath():java.nio.file.Path
- getLoggerInstance(java.lang.String):com.intellij.openapi.diagnostic.Logger
f:com.intellij.internal.DebugAttachDetector
- <init>():V
- s:isAttached():Z
- s:isDebugEnabled():Z
f:com.intellij.internal.statistic.collectors.fus.ui.GotItTooltipAllowlistEP
- <init>():V
- f:getPrefix():java.lang.String
- f:setPrefix(java.lang.String):V
f:com.intellij.jps.impl.JpsPluginBean
f:com.intellij.notification.ActionCenter
- sf:EVENT_REQUESTOR:java.lang.String
- sf:MODEL_CHANGED:com.intellij.util.messages.Topic
- sf:TOOL_WINDOW_ID:java.lang.String
- <init>():V
- s:expireNotifications(com.intellij.openapi.project.Project):V
- s:fireModelChanged():V
- s:getNotifications(com.intellij.openapi.project.Project):java.util.List
- s:getToolWindow(com.intellij.openapi.project.Project):com.intellij.openapi.wm.ToolWindow
- s:getToolwindowName():java.lang.String
- s:showNotification(com.intellij.openapi.project.Project):V
- s:toggleLog(com.intellij.openapi.project.Project):V
com.intellij.notification.ActionCenter$EventListener
- a:modelChanged():V
f:com.intellij.notification.EventLog
- <init>():V
- s:getEventLog(com.intellij.openapi.project.Project):com.intellij.openapi.wm.ToolWindow
- s:getLogModel(com.intellij.openapi.project.Project):com.intellij.notification.LogModel
- s:toggleLog(com.intellij.openapi.project.Project,com.intellij.notification.Notification):V
f:com.intellij.notification.EventLogToolWindowFactory
- com.intellij.openapi.project.DumbAware
- com.intellij.openapi.wm.ToolWindowFactory
- <init>():V
- createToolWindowContent(com.intellij.openapi.project.Project,com.intellij.openapi.wm.ToolWindow):V
- isApplicable(com.intellij.openapi.project.Project):Z
f:com.intellij.notification.LogModel
- getNotifications():java.util.ArrayList
f:com.intellij.notification.SingletonNotificationManager
- <init>(java.lang.String,com.intellij.notification.NotificationType):V
- f:clear():V
- f:notify(java.lang.String,java.lang.String,com.intellij.openapi.project.Project):V
- f:notify(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,java.util.function.Consumer):V
com.intellij.notification.impl.NotificationFullContent
f:com.intellij.notification.impl.NotificationSettings
- sf:Companion:com.intellij.notification.impl.NotificationSettings$Companion
- <init>(java.lang.String,com.intellij.notification.NotificationDisplayType,Z,Z):V
- <init>(java.lang.String,com.intellij.notification.NotificationDisplayType,Z,Z,Z):V
- b:<init>(java.lang.String,com.intellij.notification.NotificationDisplayType,Z,Z,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.String
- f:component2():com.intellij.notification.NotificationDisplayType
- f:component3():Z
- f:component4():Z
- f:component5():Z
- f:copy(java.lang.String,com.intellij.notification.NotificationDisplayType,Z,Z,Z):com.intellij.notification.impl.NotificationSettings
- bs:copy$default(com.intellij.notification.impl.NotificationSettings,java.lang.String,com.intellij.notification.NotificationDisplayType,Z,Z,Z,I,java.lang.Object):com.intellij.notification.impl.NotificationSettings
- equals(java.lang.Object):Z
- f:getDisplayType():com.intellij.notification.NotificationDisplayType
- f:getGroupId():java.lang.String
- hashCode():I
- f:isPlaySound():Z
- f:isShouldLog():Z
- f:isShouldReadAloud():Z
- f:save():org.jdom.Element
- f:setDisplayType(com.intellij.notification.NotificationDisplayType):V
- f:setGroupId(java.lang.String):V
- f:setPlaySound(Z):V
- f:setShouldLog(Z):V
- f:setShouldReadAloud(Z):V
- f:withDisplayType(com.intellij.notification.NotificationDisplayType):com.intellij.notification.impl.NotificationSettings
- f:withPlaySound(Z):com.intellij.notification.impl.NotificationSettings
- f:withShouldLog(Z):com.intellij.notification.impl.NotificationSettings
- f:withShouldReadAloud(Z):com.intellij.notification.impl.NotificationSettings
f:com.intellij.notification.impl.NotificationSettings$Companion
- f:load(org.jdom.Element):com.intellij.notification.impl.NotificationSettings
f:com.intellij.notification.impl.NotificationsConfigurable
- com.intellij.openapi.options.ConfigurableBase
- <init>():V
- s:displayName():java.lang.String
f:com.intellij.notification.impl.NotificationsConfigurationImpl
- com.intellij.notification.NotificationsConfiguration
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- SHOW_BALLOONS:Z
- SYSTEM_NOTIFICATIONS:Z
- <init>():V
- areNotificationsEnabled():Z
- changeSettings(com.intellij.notification.impl.NotificationSettings):V
- changeSettings(java.lang.String,com.intellij.notification.NotificationDisplayType,Z,Z):V
- dispose():V
- getAllSettings():com.intellij.notification.impl.NotificationSettings[]
- getDisplayType(java.lang.String):com.intellij.notification.NotificationDisplayType
- s:getInstanceImpl():com.intellij.notification.impl.NotificationsConfigurationImpl
- getNotificationAnnouncingMode():com.intellij.notification.NotificationAnnouncingMode
- s:getSettings(java.lang.String):com.intellij.notification.impl.NotificationSettings
- getState():org.jdom.Element
- getToolWindowId(java.lang.String):java.lang.String
- hasToolWindowCapability(java.lang.String):Z
- isRegistered(java.lang.String):Z
- loadState(org.jdom.Element):V
- noStateLoaded():V
- register(java.lang.String,com.intellij.notification.NotificationDisplayType):V
- register(java.lang.String,com.intellij.notification.NotificationDisplayType,Z):V
- register(java.lang.String,com.intellij.notification.NotificationDisplayType,Z,Z):V
- register(java.lang.String,com.intellij.notification.NotificationDisplayType,Z,Z,java.lang.String):V
- s:remove(java.lang.String[]):V
- setDisplayType(java.lang.String,com.intellij.notification.NotificationDisplayType):V
- setNotificationAnnouncingMode(com.intellij.notification.NotificationAnnouncingMode):V
f:com.intellij.notification.impl.NotificationsManagerImpl
- com.intellij.notification.NotificationsManager
- sf:BORDER_COLOR:java.awt.Color
- sf:DEFAULT_TEXT_COLOR:java.awt.Color
- sf:FILL_COLOR:java.awt.Color
- sf:NOTIFICATION_BALLOON_FLAG:java.lang.Object
- <init>():V
- s:calculateContentHeight(I):I
- s:configureBalloonScrollPane(javax.swing.JScrollPane,java.awt.Color):V
- s:createBalloon(com.intellij.openapi.wm.IdeFrame,com.intellij.notification.Notification,Z,Z,com.intellij.openapi.util.Ref,com.intellij.openapi.Disposable):com.intellij.openapi.ui.popup.Balloon
- s:createBalloon(javax.swing.JComponent,com.intellij.notification.Notification,Z,Z,com.intellij.openapi.util.Ref,com.intellij.openapi.Disposable):com.intellij.openapi.ui.popup.Balloon
- s:createBalloonScrollPane(java.awt.Component,Z):javax.swing.JScrollPane
- expire(com.intellij.notification.Notification):V
- expireAll():V
- s:findWindowForBalloon(com.intellij.openapi.project.Project):java.awt.Window
- s:frameActivateBalloonListener(com.intellij.openapi.Disposable,java.lang.Runnable):V
- getNotificationsOfType(java.lang.Class,com.intellij.openapi.project.Project):com.intellij.notification.Notification[]
- s:setTextAccessibleName(javax.swing.JComponent,java.lang.String):V
- showNotification(com.intellij.notification.Notification,com.intellij.openapi.project.Project):V
- s:showPopup(com.intellij.ui.components.labels.LinkLabel,com.intellij.openapi.actionSystem.DefaultActionGroup):javax.swing.JPopupMenu
c:com.intellij.notification.impl.NotificationsManagerImpl$DropDownAction
- com.intellij.ui.components.labels.LinkLabel
- <init>(java.lang.String,com.intellij.ui.components.labels.LinkListener):V
- p:getTextColor():java.awt.Color
f:com.intellij.notification.impl.ui.NotificationsUtil
- <init>():V
- s:buildFullContent(com.intellij.notification.Notification):java.lang.String
- s:buildHtml(com.intellij.notification.Notification,java.lang.String,Z,java.awt.Color,java.lang.String):java.lang.String
- s:buildHtml(java.lang.String,java.lang.String,Z,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):java.lang.String
- s:buildStatusMessage(com.intellij.notification.Notification):java.lang.String
- s:configureHtmlEditorKit(javax.swing.JEditorPane,Z):V
- s:getFontName():java.lang.String
- s:getFontSize():java.lang.Float
- s:getFontStyle():java.lang.String
- s:getIcon(com.intellij.notification.Notification):javax.swing.Icon
- s:getLinkButtonForeground():java.awt.Color
- s:getMessageType(com.intellij.notification.Notification):com.intellij.openapi.ui.MessageType
- s:getMoreButtonBackground():java.awt.Color
- s:getMoreButtonForeground():java.awt.Color
- s:wrapListener(com.intellij.notification.Notification):javax.swing.event.HyperlinkListener
c:com.intellij.notification.impl.ui.StickyButton
- javax.swing.JToggleButton
- <init>(java.lang.String):V
- p:createUI():javax.swing.plaf.ButtonUI
- getForeground():java.awt.Color
- setUI(javax.swing.plaf.ButtonUI):V
c:com.intellij.notification.impl.ui.StickyButtonUI
- javax.swing.plaf.basic.BasicToggleButtonUI
- <init>():V
- p:getArcSize():I
- p:getBackgroundColor(javax.swing.AbstractButton):java.awt.Color
- p:getFocusColor(javax.swing.AbstractButton):java.awt.Color
- p:getRolloverColor(javax.swing.AbstractButton):java.awt.Color
- p:getSelectionColor(javax.swing.AbstractButton):java.awt.Color
- p:getUnfocusedBorderColor(javax.swing.AbstractButton):java.awt.Color
- p:installDefaults(javax.swing.AbstractButton):V
- paint(java.awt.Graphics,javax.swing.JComponent):V
f:com.intellij.openapi.actionSystem.ActionGroupUtil
- <init>():V
- s:getActiveActions(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.util.containers.JBIterable
- s:getSingleActiveAction(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction
- s:getVisibleActions(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.util.containers.JBIterable
- s:isGroupEmpty(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.AnActionEvent):Z
com.intellij.openapi.actionSystem.ActionUpdaterInterceptor
- sf:Companion:com.intellij.openapi.actionSystem.ActionUpdaterInterceptor$Companion
- allowsFastUpdate(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):Z
- expandActionGroup(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.ActionUiKind,com.intellij.openapi.actionSystem.impl.PresentationFactory,com.intellij.openapi.actionSystem.impl.SuspendingUpdateSession,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- bs:expandActionGroup$suspendImpl(com.intellij.openapi.actionSystem.ActionUpdaterInterceptor,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.ActionUiKind,com.intellij.openapi.actionSystem.impl.PresentationFactory,com.intellij.openapi.actionSystem.impl.SuspendingUpdateSession,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- getGroupChildren(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.AnActionEvent,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- bs:getGroupChildren$suspendImpl(com.intellij.openapi.actionSystem.ActionUpdaterInterceptor,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.AnActionEvent,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- runUpdateSessionForInputEvent(java.util.List,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.impl.SuspendingUpdateSession,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- bs:runUpdateSessionForInputEvent$suspendImpl(com.intellij.openapi.actionSystem.ActionUpdaterInterceptor,java.util.List,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.impl.SuspendingUpdateSession,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- treatDefaultActionGroupAsDynamic():Z
- updateAction(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- bs:updateAction$suspendImpl(com.intellij.openapi.actionSystem.ActionUpdaterInterceptor,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.actionSystem.ActionUpdaterInterceptor$Companion
- f:expandActionGroup(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.ActionUiKind,com.intellij.openapi.actionSystem.impl.PresentationFactory,com.intellij.openapi.actionSystem.impl.SuspendingUpdateSession,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- f:getGroupChildren(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.AnActionEvent,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- f:isDefaultImpl():Z
- f:runUpdateSessionForInputEvent(java.util.List,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.impl.SuspendingUpdateSession,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- f:treatDefaultActionGroupAsDynamic():Z
- f:updateAction(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
com.intellij.openapi.actionSystem.AnActionExtensionProvider
- com.intellij.openapi.actionSystem.ActionUpdateThreadAware
- a:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- a:isActive(com.intellij.openapi.actionSystem.AnActionEvent):Z
- a:update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.openapi.actionSystem.ComputableActionGroup
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.project.DumbAware
- p:<init>():V
- p:<init>(Z):V
- pa:createChildrenProvider(com.intellij.openapi.actionSystem.ActionManager):com.intellij.psi.util.CachedValueProvider
- f:getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
a:com.intellij.openapi.actionSystem.ComputableActionGroup$Simple
- com.intellij.openapi.actionSystem.ComputableActionGroup
- p:<init>():V
- p:<init>(Z):V
- pa:computeChildren(com.intellij.openapi.actionSystem.ActionManager):com.intellij.openapi.actionSystem.AnAction[]
- pf:createChildrenProvider(com.intellij.openapi.actionSystem.ActionManager):com.intellij.psi.util.CachedValueProvider
c:com.intellij.openapi.actionSystem.ExtendableAction
- com.intellij.openapi.actionSystem.AnAction
- <init>(com.intellij.openapi.extensions.ExtensionPointName):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:commonUpdate(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:defaultActionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:defaultUpdate(com.intellij.openapi.actionSystem.AnActionEvent):V
- f:getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.actionSystem.SplitButtonAction
- com.intellij.openapi.actionSystem.ActionGroupWrapper
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>(com.intellij.openapi.actionSystem.ActionGroup):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- p:getMainAction(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction
- p:isGroupPresentationDependsOnSelectedAction():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- updateCustomComponent(javax.swing.JComponent,com.intellij.openapi.actionSystem.Presentation):V
- p:useDynamicSplitButton():Z
a:com.intellij.openapi.actionSystem.ex.ActionButtonLook
- sf:INPLACE_LOOK:com.intellij.openapi.actionSystem.ex.ActionButtonLook
- sf:SYSTEM_LOOK:com.intellij.openapi.actionSystem.ex.ActionButtonLook
- <init>():V
- s:getButtonState(Z,Z,Z,Z,Z):I
- getDisabledIcon(javax.swing.Icon):javax.swing.Icon
- ps:getIconPosition(com.intellij.openapi.actionSystem.ActionButtonComponent,javax.swing.Icon):java.awt.Point
- p:getState(com.intellij.openapi.actionSystem.ActionButtonComponent):I
- p:getStateBackground(javax.swing.JComponent,I):java.awt.Color
- paintBackground(java.awt.Graphics,javax.swing.JComponent):V
- paintBackground(java.awt.Graphics,javax.swing.JComponent,I):V
- paintBackground(java.awt.Graphics,javax.swing.JComponent,java.awt.Color):V
- paintBorder(java.awt.Graphics,javax.swing.JComponent):V
- paintBorder(java.awt.Graphics,javax.swing.JComponent,I):V
- paintBorder(java.awt.Graphics,javax.swing.JComponent,java.awt.Color):V
- paintDownArrow(java.awt.Graphics,com.intellij.openapi.actionSystem.ActionButtonComponent,javax.swing.Icon,javax.swing.Icon):V
- paintIcon(java.awt.Graphics,com.intellij.openapi.actionSystem.ActionButtonComponent,javax.swing.Icon):V
- paintIcon(java.awt.Graphics,com.intellij.openapi.actionSystem.ActionButtonComponent,javax.swing.Icon,I,I):V
- ps:paintIconImpl(java.awt.Graphics,com.intellij.openapi.actionSystem.ActionButtonComponent,javax.swing.Icon,I,I):V
- paintLookBackground(java.awt.Graphics,java.awt.Rectangle,java.awt.Color):V
- paintLookBorder(java.awt.Graphics,java.awt.Rectangle,java.awt.Color):V
- updateUI():V
f:com.intellij.openapi.actionSystem.ex.QuickList
- com.intellij.openapi.options.ExternalizableSchemeAdapter
- com.intellij.configurationStore.SerializableScheme
- sf:QUICK_LIST_PREFIX:java.lang.String
- sf:SEPARATOR_ID:java.lang.String
- <init>(com.intellij.openapi.actionSystem.ex.QuickList):V
- equals(java.lang.Object):Z
- getActionId():java.lang.String
- getActionIds():java.lang.String[]
- getDescription():java.lang.String
- getDisplayName():java.lang.String
- getSchemeState():com.intellij.openapi.options.SchemeState
- hashCode():I
- readExternal(org.jdom.Element):V
- setActionIds(java.lang.String[]):V
- setDescription(java.lang.String):V
- writeScheme():org.jdom.Element
f:com.intellij.openapi.actionSystem.ex.QuickListsManager
- sf:Companion:com.intellij.openapi.actionSystem.ex.QuickListsManager$Companion
- <init>():V
- f:getAllQuickLists():com.intellij.openapi.actionSystem.ex.QuickList[]
- sf:getInstance():com.intellij.openapi.actionSystem.ex.QuickListsManager
- f:getSchemeManager():com.intellij.openapi.options.SchemeManager
- f:setQuickLists(java.util.List):V
f:com.intellij.openapi.actionSystem.ex.QuickListsManager$Companion
- f:getInstance():com.intellij.openapi.actionSystem.ex.QuickListsManager
a:com.intellij.openapi.actionSystem.ex.ToolbarLabelAction
- com.intellij.openapi.project.DumbAwareAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- p:createHyperlinkListener():javax.swing.event.HyperlinkListener
- p:getHyperlinkTooltip():java.lang.String
- p:isCopyable():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- updateCustomComponent(javax.swing.JComponent,com.intellij.openapi.actionSystem.Presentation):V
c:com.intellij.openapi.actionSystem.impl.ActionButton
- javax.swing.JComponent
- com.intellij.openapi.actionSystem.ActionButtonComponent
- com.intellij.openapi.actionSystem.AnActionHolder
- javax.accessibility.Accessible
- sf:CUSTOM_HELP_TOOLTIP:com.intellij.openapi.util.Key
- sf:HIDE_DROPDOWN_ICON:com.intellij.openapi.util.Key
- pf:myAction:com.intellij.openapi.actionSystem.AnAction
- pf:myPlace:java.lang.String
- pf:myPopupState:com.intellij.ui.popup.PopupState
- pf:myPresentation:com.intellij.openapi.actionSystem.Presentation
- p:myRollover:Z
- <init>(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Presentation,java.lang.String,java.awt.Dimension):V
- <init>(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Presentation,java.lang.String,java.util.function.Supplier):V
- p:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- addNotify():V
- p:checkSkipPressForEvent(java.awt.event.MouseEvent):Z
- click():V
- p:createAndShowActionGroupPopup(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.ui.popup.JBPopup
- getAccessibleContext():javax.accessibility.AccessibleContext
- getAction():com.intellij.openapi.actionSystem.AnAction
- p:getButtonLook():com.intellij.openapi.actionSystem.ex.ActionButtonLook
- p:getDataContext():com.intellij.openapi.actionSystem.DataContext
- pf:getEnableOrDisable(javax.swing.Icon):javax.swing.Icon
- p:getFallbackIcon(Z):javax.swing.Icon
- getIcon():javax.swing.Icon
- getMinimumSize():java.awt.Dimension
- getPopState():I
- getPreferredSize():java.awt.Dimension
- getPresentation():com.intellij.openapi.actionSystem.Presentation
- p:getShortcutText():java.lang.String
- isEnabled():Z
- p:isEnabled(Z):Z
- f:isMouseDown():Z
- f:isRollover():Z
- f:isSelected():Z
- p:jComponentPaint(java.awt.Graphics):V
- p:onMousePressed(java.awt.event.MouseEvent):V
- p:onMouseReleased(java.awt.event.MouseEvent):V
- p:paintButtonLook(java.awt.Graphics):V
- paintChildren(java.awt.Graphics):V
- paintComponent(java.awt.Graphics):V
- p:performAction(java.awt.event.MouseEvent):V
- p:presentationPropertyChanged(java.beans.PropertyChangeEvent):V
- p:processMouseEvent(java.awt.event.MouseEvent):V
- removeNotify():V
- p:resetMouseState():V
- p:setCustomToolTipText(java.lang.String):V
- setIcon(javax.swing.Icon):V
- setIconInsets(java.awt.Insets):V
- setLook(com.intellij.openapi.actionSystem.ex.ActionButtonLook):V
- setMinimumButtonSize(java.awt.Dimension):V
- setMinimumButtonSize(java.util.function.Supplier):V
- setNoIconsInPopup(Z):V
- setToolTipText(java.lang.String):V
- p:shallPaintDownArrow():Z
- p:showActionGroupPopup(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.AnActionEvent):V
- update():V
- updateIcon():V
- p:updateToolTipText():V
- updateUI():V
pc:com.intellij.openapi.actionSystem.impl.ActionButton$AccessibleActionButton
- javax.swing.JComponent$AccessibleJComponent
- javax.accessibility.AccessibleAction
- javax.accessibility.AccessibleValue
- p:<init>(com.intellij.openapi.actionSystem.impl.ActionButton):V
- doAccessibleAction(I):Z
- getAccessibleAction():javax.accessibility.AccessibleAction
- getAccessibleActionCount():I
- getAccessibleActionDescription(I):java.lang.String
- getAccessibleDescription():java.lang.String
- getAccessibleIcon():javax.accessibility.AccessibleIcon[]
- getAccessibleName():java.lang.String
- getAccessibleRole():javax.accessibility.AccessibleRole
- getAccessibleStateSet():javax.accessibility.AccessibleStateSet
- getAccessibleValue():javax.accessibility.AccessibleValue
- getCurrentAccessibleValue():java.lang.Number
- getMaximumAccessibleValue():java.lang.Number
- getMinimumAccessibleValue():java.lang.Number
- setCurrentAccessibleValue(java.lang.Number):Z
f:com.intellij.openapi.actionSystem.impl.ActionButtonUtil
- sf:INSTANCE:com.intellij.openapi.actionSystem.impl.ActionButtonUtil
- sf:findActionButton(javax.swing.JComponent,kotlin.jvm.functions.Function1):com.intellij.openapi.actionSystem.impl.ActionButton
- sf:findActionButtonById(javax.swing.JComponent,java.lang.String):com.intellij.openapi.actionSystem.impl.ActionButton
- sf:findToolbarActionButton(com.intellij.openapi.actionSystem.ActionToolbar,kotlin.jvm.functions.Function1):com.intellij.openapi.actionSystem.impl.ActionButton
- sf:findToolbarActionButtonById(com.intellij.openapi.actionSystem.ActionToolbar,java.lang.String):com.intellij.openapi.actionSystem.impl.ActionButton
c:com.intellij.openapi.actionSystem.impl.ActionButtonWithText
- com.intellij.openapi.actionSystem.impl.ActionButton
- sf:SHORTCUT_SHOULD_SHOWN:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Presentation,java.lang.String,java.awt.Dimension):V
- <init>(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Presentation,java.lang.String,java.util.function.Supplier):V
- p:getButtonRect():java.awt.Rectangle
- p:getDownArrowIcon():javax.swing.Icon
- p:getFallbackIcon(Z):javax.swing.Icon
- getInactiveTextColor():java.awt.Color
- p:getMargins():java.awt.Insets
- getMnemonic():I
- p:getMnemonicCharIndex(java.lang.String):I
- getPreferredSize():java.awt.Dimension
- p:getText():java.lang.String
- p:horizontalTextAlignment():I
- p:horizontalTextPosition():I
- p:iconTextSpace():I
- paintComponent(java.awt.Graphics):V
- p:presentationPropertyChanged(java.beans.PropertyChangeEvent):V
- setHorizontalTextAlignment(I):V
- setHorizontalTextPosition(I):V
- p:updateToolTipText():V
- updateUI():V
c:com.intellij.openapi.actionSystem.impl.ActionManagerImpl
- com.intellij.openapi.actionSystem.ex.ActionManagerEx
- p:<init>(kotlinx.coroutines.CoroutineScope):V
- f:addActionPopup(java.lang.Object):V
- f:addActionPopupMenuListener(com.intellij.openapi.actionSystem.ex.ActionPopupMenuListener,com.intellij.openapi.Disposable):V
- f:addTimerListener(com.intellij.openapi.actionSystem.TimerListener):V
- f:addToGroup(com.intellij.openapi.actionSystem.DefaultActionGroup,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Constraints):V
- f:asActionRuntimeRegistrar():com.intellij.openapi.actionSystem.ex.ActionRuntimeRegistrar
- bindShortcuts(java.lang.String,java.lang.String):V
- createActionPopupMenu(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup):com.intellij.openapi.actionSystem.ActionPopupMenu
- createActionPopupMenu(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.impl.PresentationFactory):com.intellij.openapi.actionSystem.ActionPopupMenu
- createActionToolbar(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,Z):com.intellij.openapi.actionSystem.ActionToolbar
- f:createActionToolbar(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,Z,java.util.function.Function):com.intellij.openapi.actionSystem.ActionToolbar
- createActionToolbar(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,Z,Z):com.intellij.openapi.actionSystem.ActionToolbar
- createActionToolbar(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,Z,Z,Z):com.intellij.openapi.actionSystem.ActionToolbar
- fireAfterActionPerformed(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.actionSystem.AnActionResult):V
- fireAfterEditorTyping(C,com.intellij.openapi.actionSystem.DataContext):V
- fireBeforeActionPerformed(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent):V
- fireBeforeEditorTyping(C,com.intellij.openapi.actionSystem.DataContext):V
- f:getAction(java.lang.String):com.intellij.openapi.actionSystem.AnAction
- getActionBinding(java.lang.String):java.lang.String
- f:getActionIdList(java.lang.String):java.util.List
- f:getActionIds():java.util.Set
- f:getActionIds(java.lang.String):java.lang.String[]
- f:getActionOrStub(java.lang.String):com.intellij.openapi.actionSystem.AnAction
- f:getBaseAction(com.intellij.openapi.actionSystem.OverridingAction):com.intellij.openapi.actionSystem.AnAction
- getBoundActions():java.util.Set
- getId(com.intellij.openapi.actionSystem.AnAction):java.lang.String
- f:getKeyboardShortcut(java.lang.String):com.intellij.openapi.actionSystem.KeyboardShortcut
- getLastPreformedActionId():java.lang.String
- f:getParentGroupIds(java.lang.String):java.util.Collection
- getPluginActions(com.intellij.openapi.extensions.PluginId):java.lang.String[]
- getPrevPreformedActionId():java.lang.String
- getRegistrationOrderComparator():java.util.Comparator
- isActionPopupStackEmpty():Z
- f:isGroup(java.lang.String):Z
- performWithActionCallbacks(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,java.lang.Runnable):V
- f:preloadActions():V
- registerAction(java.lang.String,com.intellij.openapi.actionSystem.AnAction):V
- registerAction(java.lang.String,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.extensions.PluginId):V
- f:removeActionPopup(java.lang.Object):V
- f:removeTimerListener(com.intellij.openapi.actionSystem.TimerListener):V
- f:replaceAction(java.lang.String,com.intellij.openapi.actionSystem.AnAction):V
- f:resetProhibitedActions():V
- setLastPreformedActionId(java.lang.String):V
- setPrevPreformedActionId(java.lang.String):V
- tryToExecute(com.intellij.openapi.actionSystem.AnAction,java.awt.event.InputEvent,java.awt.Component,java.lang.String,Z):com.intellij.openapi.util.ActionCallback
- unbindShortcuts(java.lang.String):V
- f:unloadActions(com.intellij.ide.plugins.IdeaPluginDescriptorImpl):V
- unregisterAction(java.lang.String):V
f:com.intellij.openapi.actionSystem.impl.ActionMenu
- com.intellij.ui.components.JBMenu
- sf:ALWAYS_VISIBLE:com.intellij.openapi.util.Key
- sf:Companion:com.intellij.openapi.actionSystem.impl.ActionMenu$Companion
- sf:KEYBOARD_SHORTCUT_SUFFIX:com.intellij.openapi.util.Key
- sf:SECONDARY_ICON:com.intellij.openapi.util.Key
- sf:SUPPRESS_SUBMENU:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.impl.PresentationFactory,Z,Z,Z):V
- b:<init>(com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.impl.PresentationFactory,Z,Z,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:clearItems():V
- f:fillMenu():V
- f:getAnAction():com.intellij.openapi.actionSystem.AnAction
- getPopupMenu():javax.swing.JPopupMenu
- sf:isAligned():Z
- sf:isAlignedInGroup():Z
- f:isMainMenuPlace():Z
- sf:isShowNoIcons():Z
- sf:isShowNoIcons(com.intellij.openapi.actionSystem.AnAction):Z
- menuSelectionChanged(Z):V
- removeNotify():V
- setDisplayedMnemonicIndex(I):V
- setMnemonic(I):V
- setPopupMenuVisible(Z):V
- sf:shouldConvertIconToDarkVariant():Z
- sf:showDescriptionInStatusBar(Z,java.awt.Component,java.lang.String):V
- updateUI():V
f:com.intellij.openapi.actionSystem.impl.ActionMenu$Companion
- f:isAligned():Z
- f:isAlignedInGroup():Z
- f:isShowNoIcons():Z
- f:isShowNoIcons(com.intellij.openapi.actionSystem.AnAction):Z
- f:shouldConvertIconToDarkVariant():Z
- f:showDescriptionInStatusBar(Z,java.awt.Component,java.lang.String):V
f:com.intellij.openapi.actionSystem.impl.ActionMenuItem
- com.intellij.ui.components.JBCheckBoxMenuItem
- f:place:java.lang.String
- fireActionPerformed(java.awt.event.ActionEvent):V
- f:getAnAction():com.intellij.openapi.actionSystem.AnAction
- f:getFirstShortcutText():java.lang.String
- f:getKeepPopupOnPerform():com.intellij.openapi.actionSystem.KeepPopupOnPerform
- f:getSecondaryIcon():javax.swing.Icon
- isSelected():Z
- f:isToggleable():Z
- menuSelectionChanged(Z):V
- setDisplayedMnemonicIndex(I):V
- setIcon(javax.swing.Icon):V
- setMnemonic(I):V
- f:updateFromPresentation(com.intellij.openapi.actionSystem.Presentation):V
- updateUI():V
f:com.intellij.openapi.actionSystem.impl.AutoPopupSupportingListener
- com.intellij.openapi.ui.popup.JBPopupListener
- <init>(com.intellij.openapi.ui.popup.JBPopup):V
- beforeShown(com.intellij.openapi.ui.popup.LightweightWindowEvent):V
- s:installOn(com.intellij.openapi.ui.popup.JBPopup):V
- onClosed(com.intellij.openapi.ui.popup.LightweightWindowEvent):V
com.intellij.openapi.actionSystem.impl.BundledQuickListsProvider
- a:getBundledListsRelativePaths():java.lang.String[]
com.intellij.openapi.actionSystem.impl.DynamicActionConfigurationCustomizer
- registerActions(com.intellij.openapi.actionSystem.ActionManager):V
- a:unregisterActions(com.intellij.openapi.actionSystem.ActionManager):V
f:com.intellij.openapi.actionSystem.impl.FieldInplaceActionButtonLook
- com.intellij.openapi.actionSystem.impl.IdeaActionButtonLook
- <init>():V
- paintBackground(java.awt.Graphics,javax.swing.JComponent,I):V
- paintBorder(java.awt.Graphics,javax.swing.JComponent,I):V
com.intellij.openapi.actionSystem.impl.FusAwareAction
- a:getAdditionalUsageData(com.intellij.openapi.actionSystem.AnActionEvent):java.util.List
c:com.intellij.openapi.actionSystem.impl.IdeaActionButtonLook
- com.intellij.openapi.actionSystem.ex.ActionButtonLook
- <init>():V
- p:getButtonArc():com.intellij.util.ui.JBValue
- paintLookBackground(java.awt.Graphics,java.awt.Rectangle,java.awt.Color):V
- paintLookBorder(java.awt.Graphics,java.awt.Rectangle,java.awt.Color):V
c:com.intellij.openapi.actionSystem.impl.MenuItemPresentationFactory
- com.intellij.openapi.actionSystem.impl.PresentationFactory
- sf:HIDE_ICON:com.intellij.openapi.util.Key
- <init>():V
- <init>(Z):V
- p:processPresentation(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Presentation):V
- p:processPresentation(com.intellij.openapi.actionSystem.Presentation):V
c:com.intellij.openapi.actionSystem.impl.MoreActionGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.actionSystem.impl.MouseGestureManager
- <init>():V
- add(com.intellij.openapi.wm.IdeFrame):V
- s:getInstance():com.intellij.openapi.actionSystem.impl.MouseGestureManager
- hasTrackpad():Z
- remove(com.intellij.openapi.wm.IdeFrame):V
c:com.intellij.openapi.actionSystem.impl.PresentationFactory
- <init>():V
- s:clearPresentationCaches():V
- f:getPresentation(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.Presentation
- isNeedRebuild():Z
- postProcessPresentation(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Presentation):V
- p:processPresentation(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Presentation):V
- p:processPresentation(com.intellij.openapi.actionSystem.Presentation):V
- reset():V
- resetNeedRebuild():V
- s:updatePresentation(com.intellij.openapi.actionSystem.AnAction):V
com.intellij.openapi.actionSystem.impl.PresentationFactory$TransparentWrapper
f:com.intellij.openapi.actionSystem.impl.SkipOperation
- java.lang.RuntimeException
- <init>(java.lang.String):V
- fillInStackTrace():java.lang.Throwable
a:com.intellij.openapi.actionSystem.impl.ToolbarUpdater
- com.intellij.util.ui.update.Activatable
- <init>(javax.swing.JComponent):V
- <init>(javax.swing.JComponent,java.lang.String):V
- hideNotify():V
- showNotify():V
- p:updateActionTooltips():V
- updateActions(Z,Z,Z):V
- pa:updateActionsImpl(Z):V
f:com.intellij.openapi.actionSystem.impl.UtilsKt
- sf:rearrangeByPromotersImpl(java.util.List,com.intellij.openapi.actionSystem.DataContext,java.util.List):java.util.List
- sf:runEdtLoop(kotlinx.coroutines.Job,kotlin.jvm.functions.Function0,java.awt.Component,java.awt.Component,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.actionSystem.impl.segmentedActionBar.PillBorder
- javax.swing.border.LineBorder
- <init>(java.awt.Color,I):V
- getBorderInsets(java.awt.Component,java.awt.Insets):java.awt.Insets
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
a:com.intellij.openapi.application.ClipboardAnalyzeListener
- com.intellij.openapi.application.ApplicationActivationListener
- <init>():V
- applicationActivated(com.intellij.openapi.wm.IdeFrame):V
- applicationDeactivated(com.intellij.openapi.wm.IdeFrame):V
- a:canHandle(java.lang.String):Z
- pa:handle(com.intellij.openapi.project.Project,java.lang.String):V
f:com.intellij.openapi.application.ExperimentalFeatureImpl
- com.intellij.openapi.application.ExperimentalFeature
a:com.intellij.openapi.application.JBProtocolCommand
- sf:Companion:com.intellij.openapi.application.JBProtocolCommand$Companion
- sf:FRAGMENT_PARAM_NAME:java.lang.String
- sf:SCHEME:java.lang.String
- <init>(java.lang.String):V
- p:execute(java.lang.String,java.util.Map,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- p:executeAndGetResult(java.lang.String,java.util.Map,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- pf:parameter(java.util.Map,java.lang.String):java.lang.String
- perform(java.lang.String,java.util.Map):V
- perform(java.lang.String,java.util.Map,java.lang.String):java.util.concurrent.Future
f:com.intellij.openapi.application.JBProtocolCommand$Companion
f:com.intellij.openapi.application.JBProtocolCommandResult
- <init>(java.lang.String,Z):V
- b:<init>(java.lang.String,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getDialogMessage():java.lang.String
- f:getFocusIdeWindow():Z
f:com.intellij.openapi.application.PermanentInstallationID
- <init>():V
- s:get():java.lang.String
f:com.intellij.openapi.application.PluginPathManager
- s:getPluginHome(java.lang.String):java.io.File
- s:getPluginHomePath(java.lang.String):java.lang.String
- s:getPluginHomePathRelative(java.lang.String):java.lang.String
- s:getPluginResource(java.lang.Class,java.lang.String):java.io.File
f:com.intellij.openapi.application.ex.ClipboardUtil
- <init>():V
- s:getTextInClipboard():java.lang.String
- s:handleClipboardSafely(java.util.function.Supplier,java.lang.Object):java.lang.Object
f:com.intellij.openapi.application.impl.AppUIExecutorImplKt
- sf:coroutineDispatchingContext(com.intellij.openapi.application.AppUIExecutor):kotlin.coroutines.ContinuationInterceptor
f:com.intellij.openapi.application.impl.AsyncExecutionServiceImpl
- <init>():V
- buildNonBlockingReadAction(java.util.concurrent.Callable):com.intellij.openapi.application.NonBlockingReadAction
f:com.intellij.openapi.application.impl.ExpirableExecutorImplKt
- sf:coroutineDispatchingContext(com.intellij.openapi.application.ExpirableExecutor):kotlin.coroutines.ContinuationInterceptor
f:com.intellij.openapi.application.impl.NonBlockingReadActionImpl
- com.intellij.openapi.application.NonBlockingReadAction
- coalesceBy(java.lang.Object[]):com.intellij.openapi.application.NonBlockingReadAction
- executeSynchronously():java.lang.Object
- expireWhen(java.util.function.BooleanSupplier):com.intellij.openapi.application.NonBlockingReadAction
- expireWith(com.intellij.openapi.Disposable):com.intellij.openapi.application.NonBlockingReadAction
- finishOnUiThread(com.intellij.openapi.application.ModalityState,java.util.function.Consumer):com.intellij.openapi.application.NonBlockingReadAction
- inSmartMode(com.intellij.openapi.project.Project):com.intellij.openapi.application.NonBlockingReadAction
- submit(java.util.concurrent.Executor):org.jetbrains.concurrency.CancellablePromise
- s:waitForAsyncTaskCompletion():V
- withDocumentsCommitted(com.intellij.openapi.project.Project):com.intellij.openapi.application.NonBlockingReadAction
- wrapProgress(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.application.NonBlockingReadAction
f:com.intellij.openapi.command.impl.DocumentReferenceManagerImpl
- com.intellij.openapi.command.undo.DocumentReferenceManager
- cleanupForNextTest():V
- create(com.intellij.openapi.editor.Document):com.intellij.openapi.command.undo.DocumentReference
- create(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.command.undo.DocumentReference
f:com.intellij.openapi.command.impl.DummyProject
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.project.Project
- createError(java.lang.String,com.intellij.openapi.extensions.PluginId):java.lang.RuntimeException
- createError(java.lang.String,java.lang.Throwable,com.intellij.openapi.extensions.PluginId,java.util.Map):java.lang.RuntimeException
- createError(java.lang.Throwable,com.intellij.openapi.extensions.PluginId):java.lang.RuntimeException
- dispose():V
- getActivityCategory(Z):com.intellij.diagnostic.ActivityCategory
- getBaseDir():com.intellij.openapi.vfs.VirtualFile
- getBasePath():java.lang.String
- getComponent(java.lang.Class):java.lang.Object
- getDisposed():com.intellij.openapi.util.Condition
- getExtensionArea():com.intellij.openapi.extensions.ExtensionsArea
- s:getInstance():com.intellij.openapi.project.Project
- getLocationHash():java.lang.String
- getMessageBus():com.intellij.util.messages.MessageBus
- getName():java.lang.String
- getProjectFile():com.intellij.openapi.vfs.VirtualFile
- getProjectFilePath():java.lang.String
- getService(java.lang.Class):java.lang.Object
- getWorkspaceFile():com.intellij.openapi.vfs.VirtualFile
- hasComponent(java.lang.Class):Z
- instantiateClass(java.lang.Class,com.intellij.openapi.extensions.PluginId):java.lang.Object
- instantiateClass(java.lang.String,com.intellij.openapi.extensions.PluginDescriptor):java.lang.Object
- instantiateClassWithConstructorInjection(java.lang.Class,java.lang.Object,com.intellij.openapi.extensions.PluginId):java.lang.Object
- isDisposed():Z
- isInitialized():Z
- isInjectionForExtensionSupported():Z
- isOpen():Z
- loadClass(java.lang.String,com.intellij.openapi.extensions.PluginDescriptor):java.lang.Class
- save():V
f:com.intellij.openapi.command.impl.FinishMarkAction
- com.intellij.openapi.command.undo.BasicUndoableAction
- s:finish(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.command.impl.StartMarkAction):V
- getAffectedDocument():com.intellij.openapi.command.undo.DocumentReference
- getCommandName():java.lang.String
- isGlobal():Z
- redo():V
- setCommandName(java.lang.String):V
- setGlobal(Z):V
- undo():V
f:com.intellij.openapi.command.impl.StartMarkAction
- com.intellij.openapi.command.undo.BasicUndoableAction
- sf:START_MARK_ACTION_KEY:com.intellij.openapi.util.Key
- s:canStart(com.intellij.openapi.editor.Editor):com.intellij.openapi.command.impl.StartMarkAction
- s:canStart(com.intellij.openapi.project.Project):com.intellij.openapi.command.impl.StartMarkAction
- s:checkCleared(com.intellij.openapi.editor.Editor):V
- getCommandName():java.lang.String
- getDocument():com.intellij.openapi.editor.Document
- isGlobal():Z
- redo():V
- setCommandName(java.lang.String):V
- setGlobal(Z):V
- s:start(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,java.lang.String):com.intellij.openapi.command.impl.StartMarkAction
- undo():V
f:com.intellij.openapi.command.impl.StartMarkAction$AlreadyStartedException
- java.lang.Exception
- <init>(java.lang.String,com.intellij.openapi.editor.Document,com.intellij.openapi.command.undo.DocumentReference[]):V
- getAffectedDocuments():com.intellij.openapi.command.undo.DocumentReference[]
- getDocument():com.intellij.openapi.editor.Document
Ff:com.intellij.openapi.command.impl.UndoManagerImpl
- com.intellij.openapi.command.undo.UndoManager
- s:ourNeverAskUser:Z
- addAffectedFiles(com.intellij.openapi.vfs.VirtualFile[]):V
- addDocumentAsAffected(com.intellij.openapi.editor.Document):V
- clearUndoRedoQueueInTests(com.intellij.openapi.editor.Document):V
- clearUndoRedoQueueInTests(com.intellij.openapi.vfs.VirtualFile):V
- dropHistoryInTests():V
- flushCurrentCommandMerger():V
- s:getDocumentUndoLimit():I
- getEditorProvider():com.intellij.openapi.fileEditor.impl.CurrentEditorProvider
- s:getGlobalUndoLimit():I
- getNextRedoNanoTime(com.intellij.openapi.fileEditor.FileEditor):J
- getNextUndoNanoTime(com.intellij.openapi.fileEditor.FileEditor):J
- getProject():com.intellij.openapi.project.Project
- getRedoActionNameAndDescription(com.intellij.openapi.fileEditor.FileEditor):com.intellij.openapi.util.Pair
- getUndoActionNameAndDescription(com.intellij.openapi.fileEditor.FileEditor):com.intellij.openapi.util.Pair
- invalidateActionsFor(com.intellij.openapi.command.undo.DocumentReference):V
- isActive():Z
- isNextRedoAskConfirmation(com.intellij.openapi.fileEditor.FileEditor):Z
- isNextUndoAskConfirmation(com.intellij.openapi.fileEditor.FileEditor):Z
- isRedoAvailable(com.intellij.openapi.fileEditor.FileEditor):Z
- isRedoInProgress():Z
- s:isRefresh():Z
- isUndoAvailable(com.intellij.openapi.fileEditor.FileEditor):Z
- isUndoInProgress():Z
- markCurrentCommandAsGlobal():V
- nonundoableActionPerformed(com.intellij.openapi.command.undo.DocumentReference,Z):V
- redo(com.intellij.openapi.fileEditor.FileEditor):V
- setOverriddenEditorProvider(com.intellij.openapi.fileEditor.impl.CurrentEditorProvider):V
- undo(com.intellij.openapi.fileEditor.FileEditor):V
- undoableActionPerformed(com.intellij.openapi.command.undo.UndoableAction):V
com.intellij.openapi.command.impl.UndoProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:PROJECT_EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:commandFinished(com.intellij.openapi.project.Project):V
- a:commandStarted(com.intellij.openapi.project.Project):V
f:com.intellij.openapi.diff.impl.DiffUtil
- s:isDiffEditor(com.intellij.openapi.editor.Editor):Z
c:com.intellij.openapi.editor.CaretStateTransferableData
- com.intellij.codeInsight.editorActions.TextBlockTransferableData
- sf:FLAVOR:java.awt.datatransfer.DataFlavor
- f:endOffsets:I[]
- f:startOffsets:I[]
- <init>(I[],I[]):V
- s:areEquivalent(com.intellij.openapi.editor.CaretStateTransferableData,com.intellij.openapi.editor.CaretStateTransferableData):Z
- getCaretCount():I
- getFlavor():java.awt.datatransfer.DataFlavor
- s:getFrom(java.awt.datatransfer.Transferable):com.intellij.openapi.editor.CaretStateTransferableData
- getOffsetCount():I
- getOffsets(I[],I):I
- setOffsets(I[],I):I
f:com.intellij.openapi.editor.ClipboardTextPerCaretSplitter
- <init>():V
- split(java.lang.String,com.intellij.openapi.editor.CaretStateTransferableData,I):java.util.List
f:com.intellij.openapi.editor.ComponentInlayKt
a:com.intellij.openapi.editor.CustomFileDropHandler
- sf:CUSTOM_DROP_HANDLER_EP:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:canHandle(java.awt.datatransfer.Transferable,com.intellij.openapi.editor.Editor):Z
- a:handleDrop(java.awt.datatransfer.Transferable,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):Z
com.intellij.openapi.editor.EditorDropHandler
- a:canHandleDrop(java.awt.datatransfer.DataFlavor[]):Z
- a:handleDrop(java.awt.datatransfer.Transferable,com.intellij.openapi.project.Project,com.intellij.openapi.fileEditor.impl.EditorWindow):V
- handleDrop(java.awt.datatransfer.Transferable,com.intellij.openapi.project.Project,com.intellij.openapi.fileEditor.impl.EditorWindow,I):V
a:com.intellij.openapi.editor.EditorLinePainter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getLineExtensions(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I):java.util.Collection
f:com.intellij.openapi.editor.FileDropEvent
- <init>(com.intellij.openapi.project.Project,java.awt.datatransfer.Transferable,java.util.Collection,com.intellij.openapi.editor.Editor):V
- f:getEditor():com.intellij.openapi.editor.Editor
- f:getFiles():java.util.Collection
- f:getProject():com.intellij.openapi.project.Project
- f:getTransferable():java.awt.datatransfer.Transferable
com.intellij.openapi.editor.FileDropHandler
- a:handleDrop(com.intellij.openapi.editor.FileDropEvent,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.editor.FileDropManager
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- f:handleDrop(java.awt.datatransfer.Transferable,com.intellij.openapi.editor.Editor,com.intellij.openapi.fileEditor.impl.EditorWindow,kotlin.coroutines.Continuation):java.lang.Object
- f:openFilesInTab(com.intellij.openapi.editor.Editor,java.util.List,com.intellij.openapi.fileEditor.impl.EditorWindow):V
- bs:openFilesInTab$default(com.intellij.openapi.editor.FileDropManager,com.intellij.openapi.editor.Editor,java.util.List,com.intellij.openapi.fileEditor.impl.EditorWindow,I,java.lang.Object):V
- f:scheduleDrop(java.awt.datatransfer.Transferable,com.intellij.openapi.editor.Editor,com.intellij.openapi.fileEditor.impl.EditorWindow):V
f:com.intellij.openapi.editor.FileDropManagerKt
f:com.intellij.openapi.editor.LineExtensionInfo
- <init>(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):V
- <init>(java.lang.String,java.awt.Color,com.intellij.openapi.editor.markup.EffectType,java.awt.Color,I):V
- getBgColor():java.awt.Color
- getColor():java.awt.Color
- getEffectColor():java.awt.Color
- getEffectType():com.intellij.openapi.editor.markup.EffectType
- getFontType():I
- getText():java.lang.String
f:com.intellij.openapi.editor.ProjectDisposeAwareDocumentListener
- com.intellij.openapi.editor.event.DocumentListener
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- bulkUpdateFinished(com.intellij.openapi.editor.Document):V
- bulkUpdateStarting(com.intellij.openapi.editor.Document):V
- s:create(com.intellij.openapi.project.Project,com.intellij.openapi.editor.event.DocumentListener):com.intellij.openapi.editor.event.DocumentListener
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
c:com.intellij.openapi.editor.SpellCheckingEditorCustomizationProvider
- <init>():V
- f:getCustomization(Z):com.intellij.ui.EditorCustomization
- getDisabledCustomization():com.intellij.ui.EditorCustomization
- getEnabledCustomization():com.intellij.ui.EditorCustomization
- s:getInstance():com.intellij.openapi.editor.SpellCheckingEditorCustomizationProvider
- getSpellCheckingToolNames():java.util.Set
a:com.intellij.openapi.editor.actions.AbstractToggleUseSoftWrapsAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces,Z):V
- p:getEditor(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.editor.Editor
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- s:toggleSoftWraps(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.editor.actions.BackspaceAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- com.intellij.openapi.editor.actionSystem.LatencyAwareEditorAction
- <init>():V
c:com.intellij.openapi.editor.actions.BasePasteHandler
- com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler
- p:myTransferable:java.awt.datatransfer.Transferable
- <init>():V
- s:contentLengthLimitExceededMessage(I):V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- executeWriteAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- p:getContentsToPaste(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):java.awt.datatransfer.Transferable
- s:isContentTooLarge(I):Z
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.openapi.editor.actions.CloneCaretAbove
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
c:com.intellij.openapi.editor.actions.CloneCaretActionHandler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>(Z):V
- p:doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
- p:isSuitableLastAction(java.lang.String):Z
- setRepeatedInvocation(Z):V
f:com.intellij.openapi.editor.actions.CloneCaretBelow
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
a:com.intellij.openapi.editor.actions.ContentChooser
- com.intellij.openapi.ui.DialogWrapper
- sf:RETURN_SYMBOL:java.lang.String
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,Z):V
- p:createCenterPanel():javax.swing.JComponent
- p:createIdeaEditor(java.lang.String):com.intellij.openapi.editor.Editor
- dispose():V
- p:doOKAction():V
- getAllContents():java.util.List
- pa:getContents():java.util.List
- p:getDimensionServiceKey():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelectedContents():java.util.List
- getSelectedIndex():I
- getSelectedText():java.lang.String
- pa:getStringRepresentationFor(java.lang.Object):java.lang.String
- pa:removeContentAt(java.lang.Object):V
- setContentIcon(javax.swing.Icon):V
- setSelectedIndex(I):V
- setSplitterOrientation(Z):V
- setUseNumbering(Z):V
c:com.intellij.openapi.editor.actions.ContentChooser$Item
- pf:longText:java.lang.String
- p:<init>(I,java.lang.String):V
- getShortText(I):java.lang.String
f:com.intellij.openapi.editor.actions.CopyAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- sf:SKIP_SELECTING_LINE_AFTER_COPY_EMPTY_SELECTION_KEY:java.lang.String
- <init>():V
- s:copyToClipboard(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actions.CopyAction$TransferableProvider):V
- s:copyToClipboard(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.actions.CopyAction$TransferableProvider,com.intellij.openapi.editor.actions.CopyAction$SelectionToCopy):V
- s:getSelection(com.intellij.openapi.editor.Editor):java.awt.datatransfer.Transferable
- s:isCopyFromEmptySelectionToMoveCaretToLineStart():Z
- s:isCopyFromEmptySelectionToSelectLine():Z
- s:isSkipCopyPasteForEmptySelection():Z
- s:prepareSelectionToCut(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.actions.CopyAction$SelectionToCopy
f:com.intellij.openapi.editor.actions.CopyAction$Handler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>():V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.openapi.editor.actions.CopyAction$SelectionToCopy
- java.lang.Record
- <init>(com.intellij.openapi.editor.EditorCopyPasteHelper$CopyPasteOptions,java.util.List):V
- caretStateToRestore():java.util.List
- copyPasteOptions():com.intellij.openapi.editor.EditorCopyPasteHelper$CopyPasteOptions
- f:equals(java.lang.Object):Z
- extendDataContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DataContext
- s:fromDataContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.editor.actions.CopyAction$SelectionToCopy
- f:hashCode():I
com.intellij.openapi.editor.actions.CopyAction$TransferableProvider
- a:getSelection(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.EditorCopyPasteHelper$CopyPasteOptions):java.awt.datatransfer.Transferable
f:com.intellij.openapi.editor.actions.CtrlYActionChooser
- <init>():V
- s:askAboutShortcut():V
- s:isCurrentShortcutOk(com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.openapi.editor.actions.CutAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.CutAction$Handler
- com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler
- <init>():V
- executeWriteAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.openapi.editor.actions.DeleteAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
- s:deleteCharAtCaret(com.intellij.openapi.editor.Editor):V
f:com.intellij.openapi.editor.actions.DeleteAction$Handler
- com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler$ForEachCaret
- <init>():V
- executeWriteAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.openapi.editor.actions.DeleteToLineEndAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.DeleteToWordEndAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.DeleteToWordEndInDifferentHumpsModeAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.DeleteToWordStartAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.DeleteToWordStartInDifferentHumpsModeAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.DocumentGuardedTextUtil
- s:deleteString(com.intellij.openapi.editor.Document,I,I):V
- s:insertString(com.intellij.openapi.editor.Document,I,java.lang.CharSequence):V
f:com.intellij.openapi.editor.actions.DuplicateAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
- s:duplicateLineOrSelectedBlockAtCaret(com.intellij.openapi.editor.Editor):V
- update(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.openapi.editor.actions.DuplicateLinesAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.EditorActionUtil
- sf:DELETE_COMMAND_GROUP:java.lang.Object
- sf:EDIT_COMMAND_GROUP:java.lang.Object
- s:findFirstNonSpaceColumnOnTheLine(com.intellij.openapi.editor.Editor,I):I
- s:findFirstNonSpaceOffsetInRange(java.lang.CharSequence,I,I):I
- s:findFirstNonSpaceOffsetOnTheLine(com.intellij.openapi.editor.Document,I):I
- s:getRangeToWordEnd(com.intellij.openapi.editor.Editor,Z,Z):com.intellij.openapi.util.TextRange
- s:getRangeToWordStart(com.intellij.openapi.editor.Editor,Z,Z):com.intellij.openapi.util.TextRange
- s:indentLine(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,I):V
- s:indentLine(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,I,I):I
- s:isHumpBound(java.lang.CharSequence,I,Z):Z
- s:isLexemeBoundary(com.intellij.openapi.editor.Editor,I):Z
- s:isWordBoundary(java.lang.CharSequence,I,Z,Z):Z
- s:isWordEnd(java.lang.CharSequence,I,Z):Z
- s:isWordOrLexemeEnd(com.intellij.openapi.editor.Editor,I,Z):Z
- s:isWordOrLexemeStart(com.intellij.openapi.editor.Editor,I,Z):Z
- s:isWordStart(java.lang.CharSequence,I,Z):Z
- s:makePositionVisible(com.intellij.openapi.editor.Editor,I):V
- s:moveCaret(com.intellij.openapi.editor.Caret,I,Z):V
- s:moveCaretPageBottom(com.intellij.openapi.editor.Editor,Z):V
- s:moveCaretPageDown(com.intellij.openapi.editor.Editor,Z):V
- s:moveCaretPageTop(com.intellij.openapi.editor.Editor,Z):V
- s:moveCaretPageUp(com.intellij.openapi.editor.Editor,Z):V
- s:moveCaretRelativelyAndScroll(com.intellij.openapi.editor.Editor,I,I,Z):V
- s:moveCaretToLineEnd(com.intellij.openapi.editor.Editor,Z):V
- s:moveCaretToLineEnd(com.intellij.openapi.editor.Editor,Z,Z):V
- s:moveCaretToLineStart(com.intellij.openapi.editor.Editor,Z):V
- s:moveCaretToLineStartIgnoringSoftWraps(com.intellij.openapi.editor.Editor):V
- s:moveCaretToNextWord(com.intellij.openapi.editor.Editor,Z,Z):V
- s:moveCaretToPreviousWord(com.intellij.openapi.editor.Editor,Z,Z):V
- s:moveCaretToTextEnd(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):V
- s:moveCaretToTextStart(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):V
- s:scrollRelatively(com.intellij.openapi.editor.Editor,I,I,Z):V
- s:selectEntireLines(com.intellij.openapi.editor.Caret):V
- s:selectEntireLines(com.intellij.openapi.editor.Caret,Z):V
- s:selectNonexpandableFold(com.intellij.openapi.editor.Editor):V
- s:shouldUseSmartTabs(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):Z
f:com.intellij.openapi.editor.actions.EnterAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- com.intellij.openapi.editor.actionSystem.LatencyAwareEditorAction
- <init>():V
- s:insertNewLineAtCaret(com.intellij.openapi.editor.Editor):V
f:com.intellij.openapi.editor.actions.EscapeAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
c:com.intellij.openapi.editor.actions.IndentSelectionAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
- p:isEnabled(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):Z
- ps:originalIsEnabled(com.intellij.openapi.editor.Editor,Z):Z
- update(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.DataContext):V
- updateForKeyboardAccess(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.openapi.editor.actions.JoinLinesAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.KillRingUtil
- s:copyToKillRing(com.intellij.openapi.editor.Editor,I,I,Z):V
- s:cut(com.intellij.openapi.editor.Editor,I,I):V
f:com.intellij.openapi.editor.actions.LineEndAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.LineEndWithSelectionAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.LineStartAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.LineStartWithSelectionAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveCaretDownAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveCaretDownWithSelectionAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveCaretLeftAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveCaretLeftWithSelectionAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveCaretRightAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveCaretRightWithSelectionAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveCaretUpAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveCaretUpWithSelectionAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveDownAndScrollAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveDownWithSelectionAndScrollAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveUpAndScrollAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MoveUpWithSelectionAndScrollAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.MultiplePasteAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.editor.actions.NextWordAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.NextWordInDifferentHumpsModeAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.NextWordInDifferentHumpsModeWithSelectionAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.NextWordWithSelectionAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PageBottomAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PageBottomWithSelectionAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PageDownAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PageDownAction$Handler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler$ForEachCaret
- <init>():V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.openapi.editor.actions.PageDownWithSelectionAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PageDownWithSelectionAction$Handler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>():V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.openapi.editor.actions.PageTopAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PageTopWithSelectionAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PageUpAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PageUpAction$Handler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler$ForEachCaret
- <init>():V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.openapi.editor.actions.PageUpWithSelectionAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PageUpWithSelectionAction$Handler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>():V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.openapi.editor.actions.PasteAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- sf:TRANSFERABLE_PROVIDER:com.intellij.openapi.actionSystem.DataKey
- <init>():V
f:com.intellij.openapi.editor.actions.PasteFromX11Action
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.editor.actions.PasteFromX11Action$Handler
- com.intellij.openapi.editor.actions.BasePasteHandler
- <init>():V
f:com.intellij.openapi.editor.actions.PreviousWordAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PreviousWordInDifferentHumpsModeAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PreviousWordInDifferentHumpsModeWithSelectionAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.PreviousWordWithSelectionAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
c:com.intellij.openapi.editor.actions.ScrollToTheEndToolbarAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.editor.Editor):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
f:com.intellij.openapi.editor.actions.SimplePasteAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.editor.actions.SplitLineAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- s:SPLIT_LINE_KEY:com.intellij.openapi.util.Key
- <init>():V
f:com.intellij.openapi.editor.actions.StartNewLineAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.StartNewLineBeforeAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
c:com.intellij.openapi.editor.actions.TabAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
c:com.intellij.openapi.editor.actions.TabAction$Handler
- com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler$ForEachCaret
- <init>():V
- executeWriteAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
a:com.intellij.openapi.editor.actions.TextComponentEditorAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- p:<init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- p:<init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler,Z):V
- f:getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getEditor(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.editor.Editor
- s:getEditorFromContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.editor.Editor
- setInjectedContext(Z):V
f:com.intellij.openapi.editor.actions.TextEndAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.TextEndWithSelectionAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.TextStartAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.TextStartWithSelectionAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.ToggleCaseAction
- com.intellij.openapi.editor.actions.TextComponentEditorAction
- <init>():V
f:com.intellij.openapi.editor.actions.ToggleShowLineNumbersGloballyAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
f:com.intellij.openapi.editor.actions.ToggleShowWhitespacesAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>():V
c:com.intellij.openapi.editor.actions.ToggleUseSoftWrapsMenuAction
- com.intellij.openapi.editor.actions.AbstractToggleUseSoftWrapsAction
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.editor.actions.ToggleUseSoftWrapsToolbarAction
- com.intellij.openapi.editor.actions.AbstractToggleUseSoftWrapsAction
- <init>(com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
f:com.intellij.openapi.editor.actions.UnindentSelectionAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.openapi.editor.colors.impl.AdditionalTextAttributesEP
- com.intellij.openapi.extensions.PluginAware
- file:java.lang.String
- scheme:java.lang.String
a:com.intellij.openapi.editor.colors.impl.DelegateColorScheme
- com.intellij.openapi.editor.colors.EditorColorsScheme
- <init>(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- clone():java.lang.Object
- getAttributes(com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.openapi.editor.markup.TextAttributes
- getAttributes(com.intellij.openapi.editor.colors.TextAttributesKey,Z):com.intellij.openapi.editor.markup.TextAttributes
- getColor(com.intellij.openapi.editor.colors.ColorKey):java.awt.Color
- getConsoleFontName():java.lang.String
- getConsoleFontPreferences():com.intellij.openapi.editor.colors.FontPreferences
- getConsoleFontSize():I
- getConsoleFontSize2D():F
- getConsoleLineSpacing():F
- getDefaultBackground():java.awt.Color
- getDefaultForeground():java.awt.Color
- getDelegate():com.intellij.openapi.editor.colors.EditorColorsScheme
- getDisplayName():java.lang.String
- getEditorFontName():java.lang.String
- getEditorFontSize():I
- getEditorFontSize2D():F
- getFont(com.intellij.openapi.editor.colors.EditorFontType):java.awt.Font
- getFontPreferences():com.intellij.openapi.editor.colors.FontPreferences
- getLineSpacing():F
- getMetaProperties():java.util.Properties
- getName():java.lang.String
- f:isReadOnly():Z
- isUseLigatures():Z
- readExternal(org.jdom.Element):V
- setAttributes(com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.markup.TextAttributes):V
- setColor(com.intellij.openapi.editor.colors.ColorKey,java.awt.Color):V
- setConsoleFontName(java.lang.String):V
- setConsoleFontPreferences(com.intellij.openapi.editor.colors.FontPreferences):V
- setConsoleFontSize(F):V
- setConsoleFontSize(I):V
- setConsoleLineSpacing(F):V
- setDelegate(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- setEditorFontName(java.lang.String):V
- setEditorFontSize(F):V
- setEditorFontSize(I):V
- setFontPreferences(com.intellij.openapi.editor.colors.FontPreferences):V
- setLineSpacing(F):V
- setName(java.lang.String):V
- setUseLigatures(Z):V
f:com.intellij.openapi.editor.colors.impl.EditorColorSchemesComparator
- java.util.Comparator
- sf:BUNDLED_CLASSIC_SCHEME:I
- sf:BUNDLED_NEW_UI_SCHEME:I
- sf:CUSTOM_SCHEME:I
- sf:DEFAULT_SCHEME:I
- sf:INSTANCE:com.intellij.openapi.editor.colors.impl.EditorColorSchemesComparator
- sf:ONE_OF_DEFAULT_SCHEMES:I
- compare(com.intellij.openapi.editor.colors.EditorColorsScheme,com.intellij.openapi.editor.colors.EditorColorsScheme):I
- s:getGroupNumber(com.intellij.openapi.editor.colors.EditorColorsScheme):I
com.intellij.openapi.editor.ex.EditorEventMulticasterEx
- com.intellij.openapi.editor.event.EditorEventMulticaster
- a:addEditReadOnlyListener(com.intellij.openapi.editor.ex.EditReadOnlyListener,com.intellij.openapi.Disposable):V
- a:addErrorStripeListener(com.intellij.openapi.editor.ex.ErrorStripeListener,com.intellij.openapi.Disposable):V
- a:addFocusChangeListener(com.intellij.openapi.editor.ex.FocusChangeListener,com.intellij.openapi.Disposable):V
- a:addPropertyChangeListener(java.beans.PropertyChangeListener,com.intellij.openapi.Disposable):V
com.intellij.openapi.editor.ex.EditorEx
- com.intellij.openapi.editor.Editor
- sf:LAST_PASTED_REGION:com.intellij.openapi.util.Key
- sf:PROP_COLUMN_MODE:java.lang.String
- sf:PROP_FONT_SIZE:java.lang.String
- sf:PROP_FONT_SIZE_2D:java.lang.String
- sf:PROP_HEADER_COMPONENT:java.lang.String
- sf:PROP_HIGHLIGHTER:java.lang.String
- sf:PROP_INSERT_MODE:java.lang.String
- sf:PROP_ONE_LINE_MODE:java.lang.String
- sf:VERTICAL_SCROLLBAR_LEFT:I
- sf:VERTICAL_SCROLLBAR_RIGHT:I
- a:addFocusListener(com.intellij.openapi.editor.ex.FocusChangeListener):V
- a:addFocusListener(com.intellij.openapi.editor.ex.FocusChangeListener,com.intellij.openapi.Disposable):V
- a:addPropertyChangeListener(java.beans.PropertyChangeListener):V
- a:addPropertyChangeListener(java.beans.PropertyChangeListener,com.intellij.openapi.Disposable):V
- a:createBoundColorSchemeDelegate(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.colors.EditorColorsScheme
- a:getBackgroundColor():java.awt.Color
- a:getContentSize():java.awt.Dimension
- a:getContextMenuGroupId():java.lang.String
- a:getCopyProvider():com.intellij.ide.CopyProvider
- a:getCutProvider():com.intellij.ide.CutProvider
- a:getDataContext():com.intellij.openapi.actionSystem.DataContext
- a:getDeleteProvider():com.intellij.ide.DeleteProvider
- a:getDocument():com.intellij.openapi.editor.ex.DocumentEx
- a:getExpectedCaretOffset():I
- a:getFilteredDocumentMarkupModel():com.intellij.openapi.editor.ex.MarkupModelEx
- a:getFoldingModel():com.intellij.openapi.editor.ex.FoldingModelEx
- a:getGutterComponentEx():com.intellij.openapi.editor.ex.EditorGutterComponentEx
- a:getMarkupModel():com.intellij.openapi.editor.ex.MarkupModelEx
- a:getMaxWidthInRange(I,I):I
- a:getPasteProvider():com.intellij.ide.PasteProvider
- a:getPermanentHeaderComponent():javax.swing.JComponent
- getPopupActionGroup(com.intellij.openapi.editor.event.EditorMouseEvent):com.intellij.openapi.actionSystem.ActionGroup
- a:getPrefixTextWidthInPixels():I
- a:getScrollPane():javax.swing.JScrollPane
- a:getScrollingModel():com.intellij.openapi.editor.ex.ScrollingModelEx
- a:getSoftWrapModel():com.intellij.openapi.editor.ex.SoftWrapModelEx
- a:getTextDrawingCallback():com.intellij.openapi.editor.impl.TextDrawingCallback
- a:getVerticalScrollbarOrientation():I
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- a:installPopupHandler(com.intellij.openapi.editor.ex.EditorPopupHandler):V
- a:isEmbeddedIntoDialogWrapper():Z
- a:isPurePaintingMode():Z
- a:isRendererMode():Z
- a:isStickySelection():Z
- a:processKeyTyped(java.awt.event.KeyEvent):Z
- a:registerLineExtensionPainter(java.util.function.IntFunction):V
- a:registerScrollBarRepaintCallback(com.intellij.util.ui.ButtonlessScrollBarUI$ScrollbarRepaintCallback):V
- a:reinitSettings():V
- a:removePropertyChangeListener(java.beans.PropertyChangeListener):V
- a:repaint(I,I):V
- a:setBackgroundColor(java.awt.Color):V
- a:setCaretEnabled(Z):Z
- a:setCaretVisible(Z):Z
- a:setColorsScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- a:setColumnMode(Z):V
- a:setContextMenuGroupId(java.lang.String):V
- a:setCustomCursor(java.lang.Object,java.awt.Cursor):V
- a:setEmbeddedIntoDialogWrapper(Z):V
- a:setFile(com.intellij.openapi.vfs.VirtualFile):V
- setFontSize(F):V
- a:setFontSize(I):V
- a:setHighlighter(com.intellij.openapi.editor.highlighter.EditorHighlighter):V
- a:setHorizontalScrollbarVisible(Z):V
- a:setInsertMode(Z):V
- a:setOneLineMode(Z):V
- a:setPermanentHeaderComponent(javax.swing.JComponent):V
- a:setPlaceholder(java.lang.CharSequence):V
- a:setPlaceholderAttributes(com.intellij.openapi.editor.markup.TextAttributes):V
- a:setPrefixTextAndAttributes(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):V
- a:setPurePaintingMode(Z):V
- a:setRendererMode(Z):V
- a:setShowPlaceholderWhenFocused(Z):V
- a:setStickySelection(Z):V
- a:setVerticalScrollbarOrientation(I):V
- a:setVerticalScrollbarVisible(Z):V
- a:setViewer(Z):V
- a:uninstallPopupHandler(com.intellij.openapi.editor.ex.EditorPopupHandler):V
a:com.intellij.openapi.editor.ex.EditorGutterComponentEx
- javax.swing.JComponent
- com.intellij.openapi.editor.EditorGutter
- sf:ICON_CENTER_POSITION:com.intellij.openapi.actionSystem.DataKey
- sf:LOGICAL_LINE_AT_CURSOR:com.intellij.openapi.actionSystem.DataKey
- <init>():V
- a:addEditorGutterListener(com.intellij.openapi.editor.impl.EditorGutterListener,com.intellij.openapi.Disposable):V
- a:findFoldingAnchorAt(I,I):com.intellij.openapi.editor.FoldRegion
- a:getAction(com.intellij.openapi.editor.TextAnnotationGutterProvider):com.intellij.openapi.editor.EditorGutterAction
- getAdditionalLineNumberConverter():com.intellij.openapi.editor.LineNumberConverter
- a:getAnnotationsAreaOffset():I
- a:getAnnotationsAreaWidth():I
- a:getCenterPoint(com.intellij.openapi.editor.markup.GutterIconRenderer):java.awt.Point
- a:getEditor():com.intellij.openapi.editor.ex.EditorEx
- a:getFoldingAreaOffset():I
- a:getGutterRenderer(java.awt.Point):com.intellij.codeInsight.daemon.GutterMark
- a:getGutterRenderers(I):java.util.List
- a:getGutterRenderersAndRectangles(I):java.util.List
- a:getIconAreaOffset():I
- a:getIconsAreaWidth():I
- a:getLineMarkerAreaOffset():I
- a:getLineMarkerFreePaintersAreaOffset():I
- getPrimaryLineNumberConverter():com.intellij.openapi.editor.LineNumberConverter
- a:getWhitespaceSeparatorOffset():I
- a:isPaintBackground():Z
- a:revalidateMarkup():V
- a:setCanCloseAnnotations(Z):V
- a:setGutterPopupGroup(com.intellij.openapi.actionSystem.ActionGroup):V
- a:setInitialIconAreaWidth(I):V
- a:setLoadingIconForCurrentGutterMark():java.lang.Runnable
- a:setPaintBackground(Z):V
- a:setShowDefaultGutterPopup(Z):V
com.intellij.openapi.editor.ex.EditorMarkupModel
- com.intellij.openapi.editor.markup.MarkupModel
- a:addErrorMarkerListener(com.intellij.openapi.editor.ex.ErrorStripeListener,com.intellij.openapi.Disposable):V
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getErrorStripTooltipRendererProvider():com.intellij.openapi.editor.ex.ErrorStripTooltipRendererProvider
- a:getErrorStripeRenderer():com.intellij.openapi.editor.markup.ErrorStripeRenderer
- a:isErrorStripeVisible():Z
- a:setErrorPanelPopupHandler(com.intellij.ui.PopupHandler):V
- a:setErrorStripTooltipRendererProvider(com.intellij.openapi.editor.ex.ErrorStripTooltipRendererProvider):V
- a:setErrorStripeRenderer(com.intellij.openapi.editor.markup.ErrorStripeRenderer):V
- a:setErrorStripeVisible(Z):V
- a:setMinMarkHeight(I):V
com.intellij.openapi.editor.ex.EditorPopupHandler
- sf:NONE:com.intellij.openapi.editor.ex.EditorPopupHandler
- a:handlePopup(com.intellij.openapi.editor.event.EditorMouseEvent):Z
com.intellij.openapi.editor.ex.ErrorStripTooltipRendererProvider
- a:calcTooltipRenderer(java.lang.String):com.intellij.codeInsight.hint.TooltipRenderer
- a:calcTooltipRenderer(java.lang.String,I):com.intellij.codeInsight.hint.TooltipRenderer
- calcTooltipRenderer(java.lang.String,com.intellij.openapi.editor.ex.TooltipAction,I):com.intellij.codeInsight.hint.TooltipRenderer
- a:calcTooltipRenderer(java.util.Collection):com.intellij.codeInsight.hint.TooltipRenderer
f:com.intellij.openapi.editor.ex.ErrorStripeEvent
- java.util.EventObject
- <init>(com.intellij.openapi.editor.Editor,java.awt.event.MouseEvent,com.intellij.openapi.editor.markup.RangeHighlighter):V
- getEditor():com.intellij.openapi.editor.Editor
- getHighlighter():com.intellij.openapi.editor.markup.RangeHighlighter
- getMouseEvent():java.awt.event.MouseEvent
com.intellij.openapi.editor.ex.ErrorStripeListener
- java.util.EventListener
- sf:EMPTY_ARRAY:com.intellij.openapi.editor.ex.ErrorStripeListener[]
- errorMarkerChanged(com.intellij.openapi.editor.ex.ErrorStripeEvent):V
- errorMarkerClicked(com.intellij.openapi.editor.ex.ErrorStripeEvent):V
com.intellij.openapi.editor.ex.FocusChangeListener
- java.util.EventListener
- focusGained(com.intellij.openapi.editor.Editor):V
- focusGained(com.intellij.openapi.editor.Editor,java.awt.event.FocusEvent):V
- focusLost(com.intellij.openapi.editor.Editor):V
- focusLost(com.intellij.openapi.editor.Editor,java.awt.event.FocusEvent):V
com.intellij.openapi.editor.ex.FoldingListener
- beforeFoldRegionRemoved(com.intellij.openapi.editor.FoldRegion):V
- onFoldProcessingEnd():V
- onFoldProcessingStart():V
- onFoldRegionStateChange(com.intellij.openapi.editor.FoldRegion):V
com.intellij.openapi.editor.ex.FoldingModelEx
- com.intellij.openapi.editor.FoldingModel
- a:addListener(com.intellij.openapi.editor.ex.FoldingListener,com.intellij.openapi.Disposable):V
- a:clearDocumentRangesModificationStatus():V
- a:clearFoldRegions():V
- a:createFoldRegion(I,I,java.lang.String,com.intellij.openapi.editor.FoldingGroup,Z):com.intellij.openapi.editor.FoldRegion
- a:fetchTopLevel():com.intellij.openapi.editor.FoldRegion[]
- a:getFoldingPlaceholderAt(java.awt.Point):com.intellij.openapi.editor.FoldRegion
- a:getGroupedRegions(com.intellij.openapi.editor.FoldingGroup):java.util.List
- a:getLastCollapsedRegionBefore(I):I
- a:getPlaceholderAttributes():com.intellij.openapi.editor.markup.TextAttributes
- a:getRegionsOverlappingWith(I,I):java.util.List
- a:hasDocumentRegionChangedFor(com.intellij.openapi.editor.FoldRegion):Z
- a:intersectsRegion(I,I):Z
- a:isFoldingEnabled():Z
- a:rebuild():V
- a:setFoldingEnabled(Z):V
com.intellij.openapi.editor.ex.ScrollingModelEx
- com.intellij.openapi.editor.ScrollingModel
- a:accumulateViewportChanges():V
- a:flushViewportChanges():V
com.intellij.openapi.editor.ex.SoftWrapChangeListener
- a:recalculationEnds():V
- a:softWrapsChanged():V
com.intellij.openapi.editor.ex.SoftWrapModelEx
- com.intellij.openapi.editor.SoftWrapModel
- a:addSoftWrapChangeListener(com.intellij.openapi.editor.ex.SoftWrapChangeListener):Z
- a:forceAdditionalColumnsUsage():V
- a:getMinDrawingWidthInPixels(com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType):I
- a:getRegisteredSoftWraps():java.util.List
- a:getSoftWrapIndex(I):I
- a:isRespectAdditionalColumns():Z
- a:paint(java.awt.Graphics,com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType,I,I,I):I
com.intellij.openapi.editor.ex.TooltipAction
- a:execute(com.intellij.openapi.editor.Editor,java.awt.event.InputEvent):V
- a:getText():java.lang.String
- a:showAllActions(com.intellij.openapi.editor.Editor):V
f:com.intellij.openapi.editor.ex.util.EditorScrollingPositionKeeper
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.editor.Editor):V
- dispose():V
- s:perform(com.intellij.openapi.editor.Document,Z,java.lang.Runnable):V
- s:perform(com.intellij.openapi.editor.Editor,Z,java.lang.Runnable):V
- restorePosition(Z):V
- savePosition():V
f:com.intellij.openapi.editor.ex.util.EditorScrollingPositionKeeper$ForDocument
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.editor.Document):V
- dispose():V
- restorePosition(Z):V
- savePosition():V
f:com.intellij.openapi.editor.ex.util.EditorUIUtil
- s:hideCursorInEditor(com.intellij.openapi.editor.Editor):V
- s:scaleIcon(javax.swing.Icon,com.intellij.openapi.editor.impl.EditorImpl):javax.swing.Icon
- s:scaleWidth(I,com.intellij.openapi.editor.impl.EditorImpl):I
- s:setupAntialiasing(java.awt.Graphics):V
f:com.intellij.openapi.editor.ex.util.EditorUtil
- s:addBulkSelectionListener(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.event.SelectionListener,com.intellij.openapi.Disposable):V
- s:asPsiNavigator(com.intellij.openapi.editor.Editor):com.intellij.modcommand.ModPsiNavigator
- s:attributesImpactFontStyle(com.intellij.openapi.editor.markup.TextAttributes):Z
- s:attributesImpactFontStyleOrColor(com.intellij.openapi.editor.markup.TextAttributes):Z
- s:attributesImpactForegroundColor(com.intellij.openapi.editor.markup.TextAttributes):Z
- s:calcCaretLineRange(com.intellij.openapi.editor.Caret):com.intellij.openapi.util.Pair
- s:calcCaretLineRange(com.intellij.openapi.editor.Editor):com.intellij.openapi.util.Pair
- s:calcCaretLineTextRange(com.intellij.openapi.editor.Caret):com.intellij.openapi.util.TextRange
- s:calcCaretLineTextRange(com.intellij.openapi.editor.Editor):com.intellij.openapi.util.TextRange
- s:calcColumnNumber(com.intellij.openapi.editor.Editor,java.lang.CharSequence,I,I):I
- s:calcColumnNumber(com.intellij.openapi.editor.Editor,java.lang.CharSequence,I,I,I):I
- s:calcRelativeCaretPosition(com.intellij.openapi.editor.Editor):I
- s:calcSurroundingRange(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.VisualPosition,com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.util.Pair
- s:calcSurroundingTextRange(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.VisualPosition,com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.util.TextRange
- s:calcVerticalScrollProportion(com.intellij.openapi.editor.Editor):F
- s:charWidth(C,I,com.intellij.openapi.editor.Editor):I
- s:checkMaxCarets(com.intellij.openapi.editor.Editor):Z
- s:columnsNumber(F,F):I
- s:columnsNumber(I,I):I
- s:contextMenuInvokedOutsideOfSelection(com.intellij.openapi.actionSystem.AnActionEvent):Z
- s:displayCharInEditor(C,com.intellij.openapi.editor.colors.TextAttributesKey,java.lang.String):java.lang.String
- s:disposeWithEditor(com.intellij.openapi.editor.Editor,com.intellij.openapi.Disposable):V
- s:fillVirtualSpaceUntil(com.intellij.openapi.editor.Editor,I,I):V
- s:fillVirtualSpaceUntilCaret(com.intellij.openapi.editor.Editor):V
- s:fontForChar(C,I,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.impl.FontInfo
- s:getDefaultCaretWidth():I
- s:getEditorDataContext(com.intellij.openapi.editor.Editor):com.intellij.openapi.actionSystem.DataContext
- s:getEditorEx(com.intellij.openapi.fileEditor.FileEditor):com.intellij.openapi.editor.ex.EditorEx
- s:getEditorFont():java.awt.Font
- s:getEditorFont(I):java.awt.Font
- s:getInlaysHeight(com.intellij.openapi.editor.Editor,I,Z):I
- s:getLastVisualLineColumnNumber(com.intellij.openapi.editor.Editor,I):I
- s:getNotFoldedLineEndOffset(com.intellij.openapi.editor.Editor,I):I
- s:getNotFoldedLineEndOffset(com.intellij.openapi.editor.Editor,I,Z):I
- s:getNotFoldedLineStartOffset(com.intellij.openapi.editor.Editor,I):I
- s:getNotFoldedLineStartOffset(com.intellij.openapi.editor.Editor,I,Z):I
- s:getPlainSpaceWidth(com.intellij.openapi.editor.Editor):I
- s:getSelectionInAnyMode(com.intellij.openapi.editor.Editor):com.intellij.openapi.util.TextRange
- s:getSoftWrapCountAfterLineStart(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.LogicalPosition):I
- s:getSpaceWidth(I,com.intellij.openapi.editor.Editor):I
- s:getTabSize(com.intellij.openapi.editor.Editor):I
- s:getTotalInlaysHeight(java.util.List):I
- s:getVisualLineAreaEndY(com.intellij.openapi.editor.Editor,I):I
- s:getVisualLineAreaStartY(com.intellij.openapi.editor.Editor,I):I
- s:getVisualLineEndOffset(com.intellij.openapi.editor.Editor,I):I
- s:inVirtualSpace(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.LogicalPosition):Z
- s:inlayAwareOffsetToVisualPosition(com.intellij.openapi.editor.Editor,I):com.intellij.openapi.editor.VisualPosition
- s:isAtLineEnd(com.intellij.openapi.editor.Editor,I):Z
- s:isBlockLikeCaret(com.intellij.openapi.editor.Caret):Z
- s:isBreakPointsOnLineNumbers():Z
- s:isCaretInVirtualSpace(com.intellij.openapi.editor.Editor):Z
- s:isCaretInsideSelection(com.intellij.openapi.editor.Caret):Z
- s:isChangeFontSize(java.awt.event.MouseWheelEvent):Z
- s:isCurrentCaretPrimary(com.intellij.openapi.editor.Editor):Z
- s:isInlayFolded(com.intellij.openapi.editor.Inlay):Z
- s:isPasswordEditor(com.intellij.openapi.editor.Editor):Z
- s:isPointOverText(com.intellij.openapi.editor.Editor,java.awt.Point):Z
- s:isPrimaryCaretVisible(com.intellij.openapi.editor.Editor):Z
- s:isRealFileEditor(com.intellij.openapi.editor.Editor):Z
- s:logicalLineToYRange(com.intellij.openapi.editor.Editor,I):com.intellij.openapi.util.Pair
- s:logicalToVisualLine(com.intellij.openapi.editor.Editor,I):I
- s:nextTabStop(F,F,I):F
- s:nextTabStop(I,I,I):I
- s:nextTabStop(I,com.intellij.openapi.editor.Editor):I
- s:nextTabStop(I,com.intellij.openapi.editor.Editor,I):I
- s:notifyMaxCarets(com.intellij.openapi.editor.Editor):V
- s:performBeforeCommandEnd(java.lang.Runnable):V
- s:reinitSettings():V
- s:runBatchFoldingOperationOutsideOfBulkUpdate(com.intellij.openapi.editor.Editor,java.lang.Runnable):V
- s:runWithAnimationDisabled(com.intellij.openapi.editor.Editor,java.lang.Runnable):V
- s:scaleIconAccordingEditorFont(javax.swing.Icon,com.intellij.openapi.editor.Editor):javax.swing.Icon
- s:scrollToTheEnd(com.intellij.openapi.editor.Editor):V
- s:scrollToTheEnd(com.intellij.openapi.editor.Editor,Z):V
- s:setRelativeCaretPosition(com.intellij.openapi.editor.Editor,I):V
- s:setSelectionExpandingFoldedRegionsIfNeeded(com.intellij.openapi.editor.Editor,I,I):V
- s:setVerticalScrollProportion(com.intellij.openapi.editor.Editor,F):V
- s:textWidth(com.intellij.openapi.editor.Editor,java.lang.CharSequence,I,I,I,I):I
- s:textWidthInColumns(com.intellij.openapi.editor.Editor,java.lang.CharSequence,I,I,I):I
- s:yPositionToLogicalLine(com.intellij.openapi.editor.Editor,I):I
- s:yPositionToLogicalLine(com.intellij.openapi.editor.Editor,java.awt.Point):I
- s:yPositionToLogicalLine(com.intellij.openapi.editor.Editor,java.awt.event.MouseEvent):I
- s:yToLogicalLineNoCustomRenderers(com.intellij.openapi.editor.Editor,I):I
- s:yToLogicalLineRange(com.intellij.openapi.editor.Editor,I):com.intellij.openapi.editor.impl.Interval
f:com.intellij.openapi.editor.impl.CaretModelImpl
- com.intellij.diagnostic.Dumpable
- com.intellij.openapi.Disposable
- com.intellij.openapi.editor.CaretModel
- com.intellij.openapi.editor.InlayModel$Listener
- com.intellij.openapi.editor.ex.PrioritizedDocumentListener
- <init>(com.intellij.openapi.editor.impl.EditorImpl):V
- addCaret(com.intellij.openapi.editor.LogicalPosition,Z):com.intellij.openapi.editor.Caret
- addCaret(com.intellij.openapi.editor.VisualPosition,Z):com.intellij.openapi.editor.Caret
- addCaretActionListener(com.intellij.openapi.editor.CaretActionListener,com.intellij.openapi.Disposable):V
- addCaretListener(com.intellij.openapi.editor.event.CaretListener):V
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- dispose():V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- dumpState():java.lang.String
- getAllCarets():java.util.List
- getCaretAt(com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.editor.Caret
- getCaretCount():I
- getCaretsAndSelections():java.util.List
- getCurrentCaret():com.intellij.openapi.editor.impl.CaretImpl
- getMaxCaretCount():I
- getPrimaryCaret():com.intellij.openapi.editor.impl.CaretImpl
- getPriority():I
- getTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
- isIteratingOverCarets():Z
- onAdded(com.intellij.openapi.editor.Inlay):V
- onBatchModeFinish(com.intellij.openapi.editor.Editor):V
- onRemoved(com.intellij.openapi.editor.Inlay):V
- onUpdated(com.intellij.openapi.editor.Inlay,I):V
- reinitSettings():V
- removeCaret(com.intellij.openapi.editor.Caret):Z
- removeCaretListener(com.intellij.openapi.editor.event.CaretListener):V
- removeSecondaryCarets():V
- runBatchCaretOperation(java.lang.Runnable):V
- runForEachCaret(com.intellij.openapi.editor.CaretAction):V
- runForEachCaret(com.intellij.openapi.editor.CaretAction,Z):V
- setCaretsAndSelections(java.util.List):V
- setCaretsAndSelections(java.util.List,Z):V
- supportsMultipleCarets():Z
- updateVisualPosition():V
- validateState():V
f:com.intellij.openapi.editor.impl.ComplementaryFontsRegistry
- s:getFontAbleToDisplay(I,I,I,java.lang.String,java.awt.font.FontRenderContext):com.intellij.openapi.editor.impl.FontInfo
- s:getFontAbleToDisplay(I,I,com.intellij.openapi.editor.colors.FontPreferences,java.awt.font.FontRenderContext):com.intellij.openapi.editor.impl.FontInfo
- s:getFontAbleToDisplay(java.lang.CharSequence,I,I,I,com.intellij.openapi.editor.colors.FontPreferences,java.awt.font.FontRenderContext):com.intellij.openapi.editor.impl.FontInfo
- s:getFontAbleToDisplay(C[],I,I,I,com.intellij.openapi.editor.colors.FontPreferences,java.awt.font.FontRenderContext):com.intellij.openapi.editor.impl.FontInfo
a:com.intellij.openapi.editor.impl.ContextMenuPopupHandler
- com.intellij.openapi.editor.ex.EditorPopupHandler
- <init>():V
- a:getActionGroup(com.intellij.openapi.editor.event.EditorMouseEvent):com.intellij.openapi.actionSystem.ActionGroup
- handlePopup(com.intellij.openapi.editor.event.EditorMouseEvent):Z
a:com.intellij.openapi.editor.impl.ContextMenuPopupHandler$ById
- com.intellij.openapi.editor.impl.ContextMenuPopupHandler
- <init>():V
- getActionGroup(com.intellij.openapi.editor.event.EditorMouseEvent):com.intellij.openapi.actionSystem.ActionGroup
- a:getActionGroupId(com.intellij.openapi.editor.event.EditorMouseEvent):java.lang.String
c:com.intellij.openapi.editor.impl.ContextMenuPopupHandler$Simple
- com.intellij.openapi.editor.impl.ContextMenuPopupHandler
- <init>(com.intellij.openapi.actionSystem.ActionGroup):V
- <init>(java.lang.String):V
- getActionGroup(com.intellij.openapi.editor.event.EditorMouseEvent):com.intellij.openapi.actionSystem.ActionGroup
e:com.intellij.openapi.editor.impl.CopiedFromEmptySelectionPasteMode
- java.lang.Enum
- sf:AT_CARET:com.intellij.openapi.editor.impl.CopiedFromEmptySelectionPasteMode
- sf:ENTIRE_LINE_ABOVE_CARET:com.intellij.openapi.editor.impl.CopiedFromEmptySelectionPasteMode
- sf:TRIM_IF_MIDDLE_LINE:com.intellij.openapi.editor.impl.CopiedFromEmptySelectionPasteMode
- s:valueOf(java.lang.String):com.intellij.openapi.editor.impl.CopiedFromEmptySelectionPasteMode
- s:values():com.intellij.openapi.editor.impl.CopiedFromEmptySelectionPasteMode[]
f:com.intellij.openapi.editor.impl.DefaultRawTypedHandler
- com.intellij.openapi.editor.actionSystem.TypedActionHandlerEx
- beforeExecute(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.ActionPlan):V
- beginUndoablePostProcessing():V
- execute(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.openapi.editor.impl.EditorComponentImpl
- javax.swing.text.JTextComponent
- com.intellij.ide.ui.UISettingsListener
- com.intellij.internal.inspector.UiInspectorPreciseContextProvider
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.openapi.ui.Queryable
- com.intellij.openapi.ui.TypingTarget
- javax.accessibility.Accessible
- javax.swing.Scrollable
- <init>(com.intellij.openapi.editor.impl.EditorImpl):V
- addCaretListener(javax.swing.event.CaretListener):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getBackground():java.awt.Color
- getCaretPosition():I
- getDocument():javax.swing.text.Document
- getEditor():com.intellij.openapi.editor.impl.EditorImpl
- getInputMethodRequests():java.awt.im.InputMethodRequests
- getPreferredScrollableViewportSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- getScrollableBlockIncrement(java.awt.Rectangle,I,I):I
- getScrollableTracksViewportHeight():Z
- getScrollableTracksViewportWidth():Z
- getScrollableUnitIncrement(java.awt.Rectangle,I,I):I
- getSelectedText():java.lang.String
- getToolTipText(java.awt.event.MouseEvent):java.lang.String
- getUiInspectorContext(java.awt.event.MouseEvent):com.intellij.internal.inspector.UiInspectorPreciseContextProvider$UiInspectorInfo
- isEditable():Z
- paint(java.awt.Graphics):V
- paintComponent(java.awt.Graphics):V
- putInfo(java.util.Map):V
- repaintEditorComponent(I,I,I,I):V
- select(I,I):V
- setCursor(java.awt.Cursor):V
- setText(java.lang.String):V
- type(java.lang.String):com.intellij.openapi.util.ActionCallback
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- uiSettingsChanged(com.intellij.ide.ui.UISettings):V
- updateUI():V
f:com.intellij.openapi.editor.impl.EditorCopyPasteHelperImpl
- com.intellij.openapi.editor.EditorCopyPasteHelper
- <init>():V
- s:getCopiedFromEmptySelectionPasteMode():com.intellij.openapi.editor.impl.CopiedFromEmptySelectionPasteMode
- s:getSelectedTextForClipboard(com.intellij.openapi.editor.Editor,java.util.Collection):java.lang.String
- getSelectionTransferable(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.EditorCopyPasteHelper$CopyPasteOptions):java.awt.datatransfer.Transferable
- s:insertEntireLineAboveCaret(com.intellij.openapi.editor.Editor,java.lang.String):com.intellij.openapi.util.TextRange
- s:insertStringAtCaret(com.intellij.openapi.editor.Editor,java.lang.String,Z):com.intellij.openapi.util.TextRange
- pasteFromClipboard(com.intellij.openapi.editor.Editor):com.intellij.openapi.util.TextRange[]
- pasteTransferable(com.intellij.openapi.editor.Editor,java.awt.datatransfer.Transferable):com.intellij.openapi.util.TextRange[]
f:com.intellij.openapi.editor.impl.EditorCopyPasteHelperImpl$CopyPasteOptionsTransferableData
- com.intellij.codeInsight.editorActions.TextBlockTransferableData
- java.io.Serializable
- f:options:com.intellij.openapi.editor.EditorCopyPasteHelper$CopyPasteOptions
- <init>(com.intellij.openapi.editor.EditorCopyPasteHelper$CopyPasteOptions):V
- s:fromTransferable(java.awt.datatransfer.Transferable):com.intellij.openapi.editor.impl.EditorCopyPasteHelperImpl$CopyPasteOptionsTransferableData
- getFlavor():java.awt.datatransfer.DataFlavor
- s:valueFromTransferable(java.awt.datatransfer.Transferable):com.intellij.openapi.editor.EditorCopyPasteHelper$CopyPasteOptions
f:com.intellij.openapi.editor.impl.EditorCssFontResolver
- com.intellij.util.ui.CSSFontResolver
- sf:EDITOR_FONT_NAME_NO_LIGATURES_PLACEHOLDER:java.lang.String
- sf:EDITOR_FONT_NAME_PLACEHOLDER:java.lang.String
- getFont(java.awt.Font,javax.swing.text.AttributeSet):java.awt.Font
- s:getGlobalInstance():com.intellij.openapi.editor.impl.EditorCssFontResolver
- s:getInstance(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.impl.EditorCssFontResolver
f:com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager
- addComponent(com.intellij.openapi.editor.ex.EditorEx,javax.swing.JComponent,com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$Properties):com.intellij.openapi.editor.Inlay
- s:getInstance():com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager
f:com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$Properties
- <init>(com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$ResizePolicy,com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$Properties$RendererFactory,Z,Z,I,I):V
- <init>(com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$ResizePolicy,com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$Properties$RendererFactory,Z,Z,Z,I,I):V
- <init>(com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$ResizePolicy,com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$Properties$RendererFactory,Z,Z,Z,Z,I,I):V
com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$Properties$RendererFactory
- a:createRenderer(com.intellij.openapi.editor.Inlay):com.intellij.openapi.editor.markup.GutterIconRenderer
f:com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$ResizePolicy
- s:any():com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$ResizePolicy
- isResizable():Z
- isResizableFromBottom():Z
- isResizableFromRight():Z
- s:none():com.intellij.openapi.editor.impl.EditorEmbeddedComponentManager$ResizePolicy
f:com.intellij.openapi.editor.impl.EditorFactoryImpl
- com.intellij.openapi.editor.EditorFactory
- sf:Companion:com.intellij.openapi.editor.impl.EditorFactoryImpl$Companion
- <init>(kotlinx.coroutines.CoroutineScope):V
- addEditorFactoryListener(com.intellij.openapi.editor.event.EditorFactoryListener):V
- addEditorFactoryListener(com.intellij.openapi.editor.event.EditorFactoryListener,com.intellij.openapi.Disposable):V
- createDocument(java.lang.CharSequence):com.intellij.openapi.editor.Document
- f:createDocument(java.lang.CharSequence,Z,Z):com.intellij.openapi.editor.Document
- f:createDocument(Z):com.intellij.openapi.editor.Document
- createDocument(C[]):com.intellij.openapi.editor.Document
- createEditor(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.Editor
- createEditor(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):com.intellij.openapi.editor.Editor
- createEditor(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.editor.EditorKind):com.intellij.openapi.editor.Editor
- createEditor(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,Z):com.intellij.openapi.editor.Editor
- createEditor(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.editor.Editor
- createEditor(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z,com.intellij.openapi.editor.EditorKind):com.intellij.openapi.editor.Editor
- createViewer(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.Editor
- createViewer(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):com.intellij.openapi.editor.Editor
- createViewer(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.editor.EditorKind):com.intellij.openapi.editor.Editor
- editors(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):java.util.stream.Stream
- getAllEditors():com.intellij.openapi.editor.Editor[]
- getEditorList():java.util.List
- getEventMulticaster():com.intellij.openapi.editor.event.EditorEventMulticaster
- refreshAllEditors():V
- releaseEditor(com.intellij.openapi.editor.Editor):V
- removeEditorFactoryListener(com.intellij.openapi.editor.event.EditorFactoryListener):V
- f:validateEditorsAreReleased(com.intellij.openapi.project.Project,Z):V
f:com.intellij.openapi.editor.impl.EditorFactoryImpl$Companion
- f:throwNotReleasedError(com.intellij.openapi.editor.Editor):V
f:com.intellij.openapi.editor.impl.EditorFilteringMarkupModelEx
- com.intellij.openapi.editor.ex.MarkupModelEx
- addLineHighlighter(I,I,com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.markup.RangeHighlighter
- addLineHighlighter(com.intellij.openapi.editor.colors.TextAttributesKey,I,I):com.intellij.openapi.editor.markup.RangeHighlighter
- addMarkupModelListener(com.intellij.openapi.Disposable,com.intellij.openapi.editor.impl.event.MarkupModelListener):V
- addPersistentLineHighlighter(I,I,com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.ex.RangeHighlighterEx
- addPersistentLineHighlighter(com.intellij.openapi.editor.colors.TextAttributesKey,I,I):com.intellij.openapi.editor.ex.RangeHighlighterEx
- addRangeHighlighter(I,I,I,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.openapi.editor.markup.HighlighterTargetArea):com.intellij.openapi.editor.markup.RangeHighlighter
- addRangeHighlighter(com.intellij.openapi.editor.colors.TextAttributesKey,I,I,I,com.intellij.openapi.editor.markup.HighlighterTargetArea):com.intellij.openapi.editor.markup.RangeHighlighter
- addRangeHighlighterAndChangeAttributes(com.intellij.openapi.editor.colors.TextAttributesKey,I,I,I,com.intellij.openapi.editor.markup.HighlighterTargetArea,Z,com.intellij.util.Consumer):com.intellij.openapi.editor.ex.RangeHighlighterEx
- changeAttributesInBatch(com.intellij.openapi.editor.ex.RangeHighlighterEx,com.intellij.util.Consumer):V
- containsHighlighter(com.intellij.openapi.editor.markup.RangeHighlighter):Z
- dispose():V
- getAllHighlighters():com.intellij.openapi.editor.markup.RangeHighlighter[]
- getDelegate():com.intellij.openapi.editor.ex.MarkupModelEx
- getDocument():com.intellij.openapi.editor.Document
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- overlappingIterator(I,I):com.intellij.openapi.editor.ex.MarkupIterator
- processRangeHighlightersOutside(I,I,com.intellij.util.Processor):Z
- processRangeHighlightersOverlappingWith(I,I,com.intellij.util.Processor):Z
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- removeAllHighlighters():V
- removeHighlighter(com.intellij.openapi.editor.markup.RangeHighlighter):V
- setRangeHighlighterAttributes(com.intellij.openapi.editor.markup.RangeHighlighter,com.intellij.openapi.editor.markup.TextAttributes):V
com.intellij.openapi.editor.impl.EditorGutterListener
- java.util.EventListener
- lineNumberConvertersChanged():V
- textAnnotationAdded(com.intellij.openapi.editor.TextAnnotationGutterProvider):V
- textAnnotationRemoved(com.intellij.openapi.editor.TextAnnotationGutterProvider):V
c:com.intellij.openapi.editor.impl.EditorHeaderComponent
- javax.swing.JPanel
- com.intellij.ide.ui.UISettingsListener
- <init>():V
- paint(java.awt.Graphics):V
- uiSettingsChanged(com.intellij.ide.ui.UISettings):V
f:com.intellij.openapi.editor.impl.EditorImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.diagnostic.Dumpable
- com.intellij.openapi.editor.ex.EditorEx
- com.intellij.openapi.editor.highlighter.HighlighterClient
- com.intellij.openapi.ui.Queryable
- com.intellij.psi.codeStyle.CodeStyleSettingsListener
- java.awt.event.FocusListener
- sf:DISABLE_CARET_POSITION_KEEPING:com.intellij.openapi.util.Key
- sf:DISABLE_CARET_SHIFT_ON_WHITESPACE_INSERTION:com.intellij.openapi.util.Key
- sf:DISABLE_REMOVE_ON_DROP:com.intellij.openapi.util.Key
- sf:FORCED_SOFT_WRAPS:com.intellij.openapi.util.Key
- sf:SOFT_WRAPS_EXIST:com.intellij.openapi.util.Key
- sf:TEXT_ALIGNMENT_LEFT:I
- sf:TEXT_ALIGNMENT_RIGHT:I
- f:myDisableRtl:Z
- myFractionalMetricsHintValue:java.lang.Object
- addEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- addEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- addFocusListener(com.intellij.openapi.editor.ex.FocusChangeListener):V
- addFocusListener(com.intellij.openapi.editor.ex.FocusChangeListener,com.intellij.openapi.Disposable):V
- addHighlighterListener(com.intellij.openapi.editor.impl.HighlighterListener,com.intellij.openapi.Disposable):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- addPropertyChangeListener(java.beans.PropertyChangeListener,com.intellij.openapi.Disposable):V
- adjustGlobalFontSize(F):V
- applyFocusMode():V
- bidiTextFound():V
- codeStyleSettingsChanged(com.intellij.psi.codeStyle.CodeStyleSettingsChangeEvent):V
- createBoundColorSchemeDelegate(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.colors.EditorColorsScheme
- dumpState():java.lang.String
- findNearestDirectionBoundary(I,Z):I
- focusGained(java.awt.event.FocusEvent):V
- focusLost(java.awt.event.FocusEvent):V
- getAscent():I
- getBackgroundColor():java.awt.Color
- getCaretLocations(Z):com.intellij.openapi.editor.impl.EditorImpl$CaretRectangle[]
- getCaretModel():com.intellij.openapi.editor.impl.CaretModelImpl
- getCharHeight():I
- getColorsScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- getComponent():javax.swing.JComponent
- getComposedTextRange():com.intellij.openapi.util.TextRange
- getContentComponent():com.intellij.openapi.editor.impl.EditorComponentImpl
- getContentSize():java.awt.Dimension
- getContextMenuGroupId():java.lang.String
- getCopyProvider():com.intellij.ide.CopyProvider
- getCutProvider():com.intellij.ide.CutProvider
- getDataContext():com.intellij.openapi.actionSystem.DataContext
- getDeleteProvider():com.intellij.ide.DeleteProvider
- getDescent():I
- getDisposable():com.intellij.openapi.Disposable
- getDocument():com.intellij.openapi.editor.ex.DocumentEx
- getEditorKind():com.intellij.openapi.editor.EditorKind
- getExpectedCaretOffset():I
- getFilteredDocumentMarkupModel():com.intellij.openapi.editor.ex.MarkupModelEx
- getFocusModeModel():com.intellij.openapi.editor.impl.FocusModeModel
- getFocusModeRange():com.intellij.openapi.util.Segment
- getFoldingModel():com.intellij.openapi.editor.impl.FoldingModelImpl
- getFontMetrics(I):java.awt.FontMetrics
- getFontSize():I
- getFontSize2D():F
- getGutter():com.intellij.openapi.editor.EditorGutter
- getGutterComponentEx():com.intellij.openapi.editor.ex.EditorGutterComponentEx
- getHeaderComponent():javax.swing.JComponent
- getHighlighter():com.intellij.openapi.editor.highlighter.EditorHighlighter
- getIndentsModel():com.intellij.openapi.editor.IndentsModel
- getInlayModel():com.intellij.openapi.editor.impl.InlayModelImpl
- getInsets():java.awt.Insets
- getLineHeight():I
- getMarkupModel():com.intellij.openapi.editor.ex.MarkupModelEx
- getMaxWidthInRange(I,I):I
- getMouseEventArea(java.awt.event.MouseEvent):com.intellij.openapi.editor.event.EditorMouseEventArea
- getPasteProvider():com.intellij.ide.PasteProvider
- getPermanentHeaderComponent():javax.swing.JComponent
- getPlaceholder():java.lang.CharSequence
- getPlaceholderAttributes():com.intellij.openapi.editor.markup.TextAttributes
- getPopupActionGroup(com.intellij.openapi.editor.event.EditorMouseEvent):com.intellij.openapi.actionSystem.ActionGroup
- getPreferredHeight():I
- getPreferredSize():java.awt.Dimension
- getPrefixTextWidthInPixels():I
- getProject():com.intellij.openapi.project.Project
- getScale():F
- getScrollPane():javax.swing.JScrollPane
- getScrollingModel():com.intellij.openapi.editor.ex.ScrollingModelEx
- getSelectionModel():com.intellij.openapi.editor.impl.SelectionModelImpl
- getSettings():com.intellij.openapi.editor.EditorSettings
- getShowPlaceholderWhenFocused():Z
- getSoftWrapModel():com.intellij.openapi.editor.impl.SoftWrapModelImpl
- getTextDrawingCallback():com.intellij.openapi.editor.impl.TextDrawingCallback
- getVerticalScrollbarOrientation():I
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- getVisibleLineCount():I
- hasHeaderComponent():Z
- hideCursor():V
- installPopupHandler(com.intellij.openapi.editor.ex.EditorPopupHandler):V
- isColumnMode():Z
- isCursorHidden():Z
- isDisposed():Z
- isDumb():Z
- isEmbeddedIntoDialogWrapper():Z
- isInDistractionFreeMode():Z
- isInFocusMode(com.intellij.openapi.editor.FoldRegion):Z
- isInsertMode():Z
- isMirrored():Z
- isOneLineMode():Z
- isPaintSelection():Z
- isProcessingTypedAction():Z
- isPurePaintingMode():Z
- isRendererMode():Z
- isRightAligned():Z
- isScrollToCaret():Z
- isStickySelection():Z
- isViewer():Z
- logicalPositionToOffset(com.intellij.openapi.editor.LogicalPosition):I
- logicalPositionToXY(com.intellij.openapi.editor.LogicalPosition):java.awt.Point
- logicalToVisualPosition(com.intellij.openapi.editor.LogicalPosition):com.intellij.openapi.editor.VisualPosition
- offsetToLogicalPosition(I):com.intellij.openapi.editor.LogicalPosition
- offsetToPoint2D(I,Z,Z):java.awt.geom.Point2D
- offsetToVisualColumnInFoldRegion(com.intellij.openapi.editor.FoldRegion,I,Z):I
- offsetToVisualLine(I):I
- offsetToVisualLine(I,Z):I
- offsetToVisualPosition(I):com.intellij.openapi.editor.VisualPosition
- offsetToVisualPosition(I,Z,Z):com.intellij.openapi.editor.VisualPosition
- offsetToXY(I,Z,Z):java.awt.Point
- processKeyTyped(java.awt.event.KeyEvent):Z
- processLineExtensions(I,com.intellij.util.Processor):Z
- putInfo(java.util.Map):V
- recordLatencyAwareAction(java.lang.String,J):V
- registerLineExtensionPainter(java.util.function.IntFunction):V
- registerScrollBarRepaintCallback(com.intellij.util.ui.ButtonlessScrollBarUI$ScrollbarRepaintCallback):V
- reinitSettings():V
- removeEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- removeEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- repaint(I,I):V
- resetSizes():V
- setBackgroundColor(java.awt.Color):V
- setBorder(javax.swing.border.Border):V
- setCaretActive():V
- setCaretEnabled(Z):Z
- setCaretVisible(Z):Z
- setColorsScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- setColumnMode(Z):V
- setContextMenuGroupId(java.lang.String):V
- setCustomCursor(java.lang.Object,java.awt.Cursor):V
- setDropHandler(com.intellij.openapi.editor.EditorDropHandler):V
- setEmbeddedIntoDialogWrapper(Z):V
- setFile(com.intellij.openapi.vfs.VirtualFile):V
- setFontSize(F):V
- setFontSize(I):V
- setHeaderComponent(javax.swing.JComponent):V
- setHighlighter(com.intellij.openapi.editor.highlighter.EditorHighlighter):V
- setHighlightingPredicate(java.util.function.Predicate):V
- setHorizontalScrollbarVisible(Z):V
- setHorizontalTextAlignment(I):V
- setInsertMode(Z):V
- setOneLineMode(Z):V
- setPaintSelection(Z):V
- setPermanentHeaderComponent(javax.swing.JComponent):V
- setPlaceholder(java.lang.CharSequence):V
- setPlaceholderAttributes(com.intellij.openapi.editor.markup.TextAttributes):V
- setPrefixTextAndAttributes(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):V
- setPurePaintingMode(Z):V
- setRendererMode(Z):V
- setScrollToCaret(Z):V
- setShowPlaceholderWhenFocused(Z):V
- setStickySelection(Z):V
- setUseEditorAntialiasing(Z):V
- setVerticalScrollbarOrientation(I):V
- setVerticalScrollbarVisible(Z):V
- setViewer(Z):V
- startDumb():V
- stopDumbLater():V
- throwDisposalError(java.lang.String):V
- type(java.lang.String):com.intellij.openapi.util.ActionCallback
- uninstallPopupHandler(com.intellij.openapi.editor.ex.EditorPopupHandler):V
- visualColumnToOffsetInFoldRegion(com.intellij.openapi.editor.FoldRegion,I,Z):I
- visualLineStartOffset(I):I
- visualLineToY(I):I
- visualLineToYRange(I):I[]
- visualPositionToPoint2D(com.intellij.openapi.editor.VisualPosition):java.awt.geom.Point2D
- visualPositionToXY(com.intellij.openapi.editor.VisualPosition):java.awt.Point
- visualToLogicalPosition(com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.editor.LogicalPosition
- xyToLogicalPosition(java.awt.Point):com.intellij.openapi.editor.LogicalPosition
- xyToVisualPosition(java.awt.Point):com.intellij.openapi.editor.VisualPosition
- xyToVisualPosition(java.awt.geom.Point2D):com.intellij.openapi.editor.VisualPosition
- yToVisualLine(I):I
f:com.intellij.openapi.editor.impl.EditorImpl$CaretRectangle
- f:myCaret:com.intellij.openapi.editor.Caret
- f:myIsRtl:Z
- f:myPoint:java.awt.geom.Point2D
- f:myWidth:F
f:com.intellij.openapi.editor.impl.EditorInputMethodSupport
- <init>(java.awt.im.InputMethodRequests,java.awt.event.InputMethodListener):V
f:com.intellij.openapi.editor.impl.EditorMouseHoverPopupControl
- <init>():V
- addListener(java.lang.Runnable):V
- s:arePopupsDisabled(com.intellij.openapi.editor.Editor):Z
- s:disablePopups(com.intellij.openapi.editor.Document):V
- s:disablePopups(com.intellij.openapi.editor.Editor):V
- s:disablePopups(com.intellij.openapi.project.Project):V
- s:enablePopups(com.intellij.openapi.editor.Document):V
- s:enablePopups(com.intellij.openapi.editor.Editor):V
- s:enablePopups(com.intellij.openapi.project.Project):V
- s:getInstance():com.intellij.openapi.editor.impl.EditorMouseHoverPopupControl
f:com.intellij.openapi.editor.impl.FocusModeModel
- com.intellij.openapi.Disposable
- sf:FOCUS_MODE_ATTRIBUTES:com.intellij.openapi.util.Key
- dispose():V
f:com.intellij.openapi.editor.impl.FoldingModelImpl
- com.intellij.openapi.editor.InlayModel$SimpleAdapter
- com.intellij.diagnostic.Dumpable
- com.intellij.openapi.editor.ex.FoldingModelEx
- com.intellij.openapi.editor.ex.PrioritizedDocumentListener
- com.intellij.openapi.util.ModificationTracker
- addCustomLinesFolding(I,I,com.intellij.openapi.editor.CustomFoldRegionRenderer):com.intellij.openapi.editor.CustomFoldRegion
- addFoldRegion(I,I,java.lang.String):com.intellij.openapi.editor.FoldRegion
- addListener(com.intellij.openapi.editor.ex.FoldingListener,com.intellij.openapi.Disposable):V
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- clearDocumentRangesModificationStatus():V
- clearFoldRegions():V
- createFoldRegion(I,I,java.lang.String,com.intellij.openapi.editor.FoldingGroup,Z):com.intellij.openapi.editor.FoldRegion
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- dumpState():java.lang.String
- fetchTopLevel():com.intellij.openapi.editor.FoldRegion[]
- getAllFoldRegions():com.intellij.openapi.editor.FoldRegion[]
- getCollapsedRegionAtOffset(I):com.intellij.openapi.editor.FoldRegion
- getFoldRegion(I,I):com.intellij.openapi.editor.FoldRegion
- getFoldingPlaceholderAt(java.awt.Point):com.intellij.openapi.editor.FoldRegion
- getGroupedRegions(com.intellij.openapi.editor.FoldingGroup):java.util.List
- getLastCollapsedRegionBefore(I):I
- getModificationCount():J
- getPlaceholderAttributes():com.intellij.openapi.editor.markup.TextAttributes
- getPriority():I
- getRegionsOverlappingWith(I,I):java.util.List
- hasDocumentRegionChangedFor(com.intellij.openapi.editor.FoldRegion):Z
- intersectsRegion(I,I):Z
- isFoldingEnabled():Z
- isInBatchFoldingOperation():Z
- isOffsetCollapsed(I):Z
- onUpdated(com.intellij.openapi.editor.Inlay,I):V
- rebuild():V
- removeFoldRegion(com.intellij.openapi.editor.FoldRegion):V
- runBatchFoldingOperation(java.lang.Runnable,Z):V
- runBatchFoldingOperation(java.lang.Runnable,Z,Z):V
- setFoldingEnabled(Z):V
f:com.intellij.openapi.editor.impl.FoldingPopupManager
- com.intellij.openapi.editor.event.EditorMouseListener
- com.intellij.openapi.editor.event.EditorMouseMotionListener
- s:disableForEditor(com.intellij.openapi.editor.Editor):V
- s:enableForEditor(com.intellij.openapi.editor.Editor):V
- mouseExited(com.intellij.openapi.editor.event.EditorMouseEvent):V
- mouseMoved(com.intellij.openapi.editor.event.EditorMouseEvent):V
f:com.intellij.openapi.editor.impl.FontFallbackIterator
- <init>():V
- advance():V
- atEnd():Z
- getEnd():I
- getFont():java.awt.Font
- getFontInfo():com.intellij.openapi.editor.impl.FontInfo
- getStart():I
- setFontRenderContext(java.awt.font.FontRenderContext):com.intellij.openapi.editor.impl.FontFallbackIterator
- setFontStyle(I):com.intellij.openapi.editor.impl.FontFallbackIterator
- setPreferredFont(java.lang.String,I):com.intellij.openapi.editor.impl.FontFallbackIterator
- setPreferredFonts(com.intellij.openapi.editor.colors.FontPreferences):com.intellij.openapi.editor.impl.FontFallbackIterator
- start(java.lang.CharSequence,I,I):V
- start(C[],I,I):V
f:com.intellij.openapi.editor.impl.FontInfo
- <init>(java.awt.Font,F,Z,java.awt.font.FontRenderContext):V
- <init>(java.awt.Font,I,Z,java.awt.font.FontRenderContext):V
- <init>(java.lang.String,I,I,Z,java.awt.font.FontRenderContext):V
- canDisplay(I):Z
- s:canDisplay(java.awt.Font,I,Z):Z
- charWidth(I):I
- charWidth2D(I):F
- equals(java.lang.Object):Z
- fontMetrics():java.awt.FontMetrics
- getFont():java.awt.Font
- s:getFontMetrics(java.awt.Font,java.awt.font.FontRenderContext):java.awt.FontMetrics
- getFontRenderContext():java.awt.font.FontRenderContext
- s:getFontRenderContext(java.awt.Component):java.awt.font.FontRenderContext
- getSize():I
- getSize2D():F
- hashCode():I
com.intellij.openapi.editor.impl.HighlighterListener
- a:highlighterChanged(I,I):V
f:com.intellij.openapi.editor.impl.IndentsModelImpl
- com.intellij.openapi.editor.IndentsModel
- assumeIndents(java.util.List):V
- getCaretIndentGuide():com.intellij.openapi.editor.IndentGuideDescriptor
- getDescriptor(I,I):com.intellij.openapi.editor.IndentGuideDescriptor
- getIndents():java.util.List
f:com.intellij.openapi.editor.impl.InlayModelImpl
- com.intellij.diagnostic.Dumpable
- com.intellij.openapi.Disposable
- com.intellij.openapi.editor.InlayModel
- com.intellij.openapi.editor.ex.PrioritizedDocumentListener
- addAfterLineEndElement(I,com.intellij.openapi.editor.InlayProperties,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- addAfterLineEndElement(I,Z,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- addBlockElement(I,com.intellij.openapi.editor.InlayProperties,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- addBlockElement(I,Z,Z,I,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- addInlineElement(I,com.intellij.openapi.editor.InlayProperties,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- addInlineElement(I,Z,I,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- addInlineElement(I,Z,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- addListener(com.intellij.openapi.editor.InlayModel$Listener,com.intellij.openapi.Disposable):V
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- dispose():V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- dumpState():java.lang.String
- execute(Z,java.lang.Runnable):V
- getAfterLineEndElementsForLogicalLine(I):java.util.List
- getAfterLineEndElementsInRange(I,I):java.util.List
- getAfterLineEndElementsInRange(I,I,java.lang.Class):java.util.List
- getBlockElementsForVisualLine(I,Z):java.util.List
- getBlockElementsInRange(I,I):java.util.List
- getBlockElementsInRange(I,I,java.lang.Class):java.util.List
- getElementAt(java.awt.Point):com.intellij.openapi.editor.Inlay
- getInlineElementAt(com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.editor.Inlay
- getInlineElementsInRange(I,I):java.util.List
- getInlineElementsInRange(I,I,java.lang.Class):java.util.List
- getPriority():I
- hasAfterLineEndElements():Z
- hasBlockElements():Z
- hasInlineElementAt(I):Z
- hasInlineElementAt(com.intellij.openapi.editor.VisualPosition):Z
- hasInlineElements():Z
- hasInlineElementsInRange(I,I):Z
- isInBatchMode():Z
- setConsiderCaretPositionOnDocumentUpdates(Z):V
- s:showWhenFolded(com.intellij.openapi.editor.Inlay):Z
- validateState():V
f:com.intellij.openapi.editor.impl.LineNumberConverterAdapter
- com.intellij.openapi.editor.LineNumberConverter
- <init>(java.util.function.IntUnaryOperator):V
- convert(com.intellij.openapi.editor.Editor,I):java.lang.Integer
- getMaxLineNumber(com.intellij.openapi.editor.Editor):java.lang.Integer
f:com.intellij.openapi.editor.impl.ScrollingModelImpl
- com.intellij.openapi.editor.ex.ScrollingModelEx
- accumulateViewportChanges():V
- addVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener):V
- disableAnimation():V
- enableAnimation():V
- flushViewportChanges():V
- getHorizontalScrollOffset():I
- getVerticalScrollBar():javax.swing.JScrollBar
- getVerticalScrollOffset():I
- getVisibleArea():java.awt.Rectangle
- getVisibleAreaOnScrollingFinished():java.awt.Rectangle
- removeVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener):V
- runActionOnScrollingFinished(java.lang.Runnable):V
- scroll(I,I):V
- scrollHorizontally(I):V
- scrollTo(com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.ScrollType):V
- scrollToCaret(com.intellij.openapi.editor.ScrollType):V
- scrollVertically(I):V
f:com.intellij.openapi.editor.impl.SelectionModelImpl
- com.intellij.openapi.editor.SelectionModel
- addSelectionListener(com.intellij.openapi.editor.event.SelectionListener):V
- copySelectionToClipboard():V
- getBlockSelectionEnds():I[]
- getBlockSelectionStarts():I[]
- getEditor():com.intellij.openapi.editor.Editor
- getTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
- removeSelectionListener(com.intellij.openapi.editor.event.SelectionListener):V
- setBlockSelection(com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.LogicalPosition):V
f:com.intellij.openapi.editor.impl.SoftWrapModelImpl
- com.intellij.openapi.editor.InlayModel$SimpleAdapter
- com.intellij.diagnostic.Dumpable
- com.intellij.openapi.Disposable
- com.intellij.openapi.editor.ex.FoldingListener
- com.intellij.openapi.editor.ex.PrioritizedDocumentListener
- com.intellij.openapi.editor.ex.SoftWrapModelEx
- java.beans.PropertyChangeListener
- addSoftWrapChangeListener(com.intellij.openapi.editor.ex.SoftWrapChangeListener):Z
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- beforeDocumentChangeAtCaret():V
- dispose():V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- dumpState():java.lang.String
- forceAdditionalColumnsUsage():V
- getApplianceManager():com.intellij.openapi.editor.impl.softwrap.mapping.SoftWrapApplianceManager
- getMinDrawingWidthInPixels(com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType):I
- getPriority():I
- getRegisteredSoftWraps():java.util.List
- getSoftWrap(I):com.intellij.openapi.editor.SoftWrap
- getSoftWrapIndex(I):I
- getSoftWrapsForLine(I):java.util.List
- getSoftWrapsForRange(I,I):java.util.List
- isDirty():Z
- isInsideOrBeforeSoftWrap(com.intellij.openapi.editor.VisualPosition):Z
- isInsideSoftWrap(com.intellij.openapi.editor.VisualPosition):Z
- isRespectAdditionalColumns():Z
- isSoftWrappingEnabled():Z
- isVisible(com.intellij.openapi.editor.SoftWrap):Z
- onBatchModeFinish(com.intellij.openapi.editor.Editor):V
- onFoldProcessingEnd():V
- onFoldRegionStateChange(com.intellij.openapi.editor.FoldRegion):V
- onUpdated(com.intellij.openapi.editor.Inlay,I):V
- paint(java.awt.Graphics,com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType,I,I,I):I
- propertyChange(java.beans.PropertyChangeEvent):V
- release():V
com.intellij.openapi.editor.impl.TextDrawingCallback
- a:drawChars(java.awt.Graphics,C[],I,I,I,I,java.awt.Color,com.intellij.openapi.editor.impl.FontInfo):V
f:com.intellij.openapi.editor.impl.TrailingSpacesStripper
- com.intellij.openapi.fileEditor.FileDocumentManagerListener
- <init>():V
- beforeAllDocumentsSaving():V
- beforeDocumentSaving(com.intellij.openapi.editor.Document):V
- s:setEnabled(com.intellij.openapi.vfs.VirtualFile,Z):V
- unsavedDocumentsDropped():V
f:com.intellij.openapi.editor.impl.TypedActionImpl
- com.intellij.openapi.editor.actionSystem.TypedAction
- <init>():V
- getDefaultRawTypedHandler():com.intellij.openapi.editor.impl.DefaultRawTypedHandler
f:com.intellij.openapi.editor.impl.event.EditorEventMulticasterImpl
- com.intellij.openapi.editor.ex.EditorEventMulticasterEx
- <init>():V
- addCaretListener(com.intellij.openapi.editor.event.CaretListener):V
- addCaretListener(com.intellij.openapi.editor.event.CaretListener,com.intellij.openapi.Disposable):V
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener,com.intellij.openapi.Disposable):V
- addEditReadOnlyListener(com.intellij.openapi.editor.ex.EditReadOnlyListener,com.intellij.openapi.Disposable):V
- addEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- addEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener,com.intellij.openapi.Disposable):V
- addEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- addEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener,com.intellij.openapi.Disposable):V
- addErrorStripeListener(com.intellij.openapi.editor.ex.ErrorStripeListener,com.intellij.openapi.Disposable):V
- addFocusChangeListener(com.intellij.openapi.editor.ex.FocusChangeListener,com.intellij.openapi.Disposable):V
- addPrioritizedDocumentListener(com.intellij.openapi.editor.ex.PrioritizedDocumentListener,com.intellij.openapi.Disposable):V
- addPropertyChangeListener(java.beans.PropertyChangeListener,com.intellij.openapi.Disposable):V
- addSelectionListener(com.intellij.openapi.editor.event.SelectionListener):V
- addSelectionListener(com.intellij.openapi.editor.event.SelectionListener,com.intellij.openapi.Disposable):V
- addVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener):V
- addVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener,com.intellij.openapi.Disposable):V
- getListeners():java.util.Map
- registerDocument(com.intellij.openapi.editor.ex.DocumentEx):V
- removeCaretListener(com.intellij.openapi.editor.event.CaretListener):V
- removeDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- removeEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- removeEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- removeSelectionListener(com.intellij.openapi.editor.event.SelectionListener):V
- removeVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener):V
f:com.intellij.openapi.editor.impl.softwrap.CompositeSoftWrapPainter
- com.intellij.openapi.editor.impl.softwrap.SoftWrapPainter
- <init>(com.intellij.openapi.editor.ex.EditorEx):V
- canUse():Z
- getDrawingHorizontalOffset(java.awt.Graphics,com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType,I,I,I):I
- getMinDrawingWidth(com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType):I
- paint(java.awt.Graphics,com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType,I,I,I):I
- reinit():V
e:com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType
- java.lang.Enum
- sf:AFTER_SOFT_WRAP:com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType
- sf:BEFORE_SOFT_WRAP_LINE_FEED:com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType
- s:valueOf(java.lang.String):com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType
- s:values():com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType[]
com.intellij.openapi.editor.impl.softwrap.SoftWrapPainter
- a:canUse():Z
- a:getDrawingHorizontalOffset(java.awt.Graphics,com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType,I,I,I):I
- a:getMinDrawingWidth(com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType):I
- a:paint(java.awt.Graphics,com.intellij.openapi.editor.impl.softwrap.SoftWrapDrawingType,I,I,I):I
- a:reinit():V
f:com.intellij.openapi.editor.impl.softwrap.mapping.IncrementalCacheUpdateEvent
- getActualEndOffset():I
- getLengthDiff():I
- getMandatoryEndOffset():I
- getStartOffset():I
- setActualEndOffset(I):V
f:com.intellij.openapi.editor.impl.softwrap.mapping.SoftWrapApplianceManager
- com.intellij.diagnostic.Dumpable
- dumpState():java.lang.String
- getWidthProvider():com.intellij.openapi.editor.impl.softwrap.mapping.SoftWrapApplianceManager$VisibleAreaWidthProvider
- setLineWrapPositionStrategy(com.intellij.openapi.editor.LineWrapPositionStrategy):V
- setWidthProvider(com.intellij.openapi.editor.impl.softwrap.mapping.SoftWrapApplianceManager$VisibleAreaWidthProvider):V
com.intellij.openapi.editor.impl.softwrap.mapping.SoftWrapApplianceManager$VisibleAreaWidthProvider
- a:getVisibleAreaWidth():I
f:com.intellij.openapi.editor.impl.view.EditorPainter
- com.intellij.openapi.editor.impl.TextDrawingCallback
- drawChars(java.awt.Graphics,C[],I,I,I,I,java.awt.Color,com.intellij.openapi.editor.impl.FontInfo):V
- s:getIndentGuideShift(com.intellij.openapi.editor.Editor):I
a:com.intellij.openapi.editor.impl.view.FontLayoutService
- sf:Companion:com.intellij.openapi.editor.impl.view.FontLayoutService$Companion
- <init>():V
- a:charWidth(java.awt.FontMetrics,C):I
- a:charWidth(java.awt.FontMetrics,I):I
- a:charWidth2D(java.awt.FontMetrics,I):F
- a:getDescent(java.awt.FontMetrics):I
- a:getHeight(java.awt.FontMetrics):I
- sf:getInstance():com.intellij.openapi.editor.impl.view.FontLayoutService
- a:layoutGlyphVector(java.awt.Font,java.awt.font.FontRenderContext,C[],I,I,Z):java.awt.font.GlyphVector
- sf:setInstance(com.intellij.openapi.editor.impl.view.FontLayoutService):V
- a:stringWidth(java.awt.FontMetrics,java.lang.String):I
f:com.intellij.openapi.editor.impl.view.FontLayoutService$Companion
- f:getInstance():com.intellij.openapi.editor.impl.view.FontLayoutService
- f:setInstance(com.intellij.openapi.editor.impl.view.FontLayoutService):V
f:com.intellij.openapi.editor.impl.view.IterationState
- s:createByLayerThenByAttributesComparator(com.intellij.openapi.editor.colors.EditorColorsScheme):java.util.Comparator
f:com.intellij.openapi.editor.impl.view.VisualLinesIterator
- <init>(com.intellij.openapi.editor.impl.EditorImpl,I):V
- advance():V
- atEnd():Z
- endsWithSoftWrap():Z
- getBlockInlaysAbove():java.util.List
- getBlockInlaysBelow():java.util.List
- getCustomFoldRegion():com.intellij.openapi.editor.CustomFoldRegion
- getDisplayedLogicalLine():I
- getEndLogicalLine():I
- getLineHeight():I
- getStartFoldingIndex():I
- getStartLogicalLine():I
- getStartOrPrevWrapIndex():I
- getVisualLine():I
- getVisualLineEndOffset():I
- getVisualLineStartOffset():I
- getY():I
- isCustomFoldRegionLine():Z
- startsWithSoftWrap():Z
e:com.intellij.openapi.editor.markup.AnalyzingType
- java.lang.Enum
- sf:COMPLETE:com.intellij.openapi.editor.markup.AnalyzingType
- sf:EMPTY:com.intellij.openapi.editor.markup.AnalyzingType
- sf:PARTIAL:com.intellij.openapi.editor.markup.AnalyzingType
- sf:SUSPENDED:com.intellij.openapi.editor.markup.AnalyzingType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.editor.markup.AnalyzingType
- s:values():com.intellij.openapi.editor.markup.AnalyzingType[]
f:com.intellij.openapi.editor.markup.DefaultLineMarkerRenderer
- com.intellij.openapi.editor.markup.LineMarkerRendererEx
- <init>(com.intellij.openapi.editor.colors.TextAttributesKey,I):V
- <init>(com.intellij.openapi.editor.colors.TextAttributesKey,I,I,com.intellij.openapi.editor.markup.LineMarkerRendererEx$Position):V
- getAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- getColor():java.awt.Color
- getDepth():I
- getPosition():com.intellij.openapi.editor.markup.LineMarkerRendererEx$Position
- getThickness():I
- isSticky():Z
- paint(com.intellij.openapi.editor.Editor,java.awt.Graphics,java.awt.Rectangle):V
com.intellij.openapi.editor.markup.ErrorStripeRenderer
- a:getStatus():com.intellij.openapi.editor.markup.AnalyzerStatus
f:com.intellij.openapi.editor.markup.LanguageHighlightLevel
- <init>(java.lang.String,com.intellij.openapi.editor.markup.InspectionsLevel):V
- f:component1():java.lang.String
- f:component2():com.intellij.openapi.editor.markup.InspectionsLevel
- f:copy(java.lang.String,com.intellij.openapi.editor.markup.InspectionsLevel):com.intellij.openapi.editor.markup.LanguageHighlightLevel
- bs:copy$default(com.intellij.openapi.editor.markup.LanguageHighlightLevel,java.lang.String,com.intellij.openapi.editor.markup.InspectionsLevel,I,java.lang.Object):com.intellij.openapi.editor.markup.LanguageHighlightLevel
- equals(java.lang.Object):Z
- f:getLangID():java.lang.String
- f:getLevel():com.intellij.openapi.editor.markup.InspectionsLevel
- hashCode():I
com.intellij.openapi.editor.markup.LineMarkerRendererEx
- com.intellij.openapi.editor.markup.LineMarkerRenderer
- a:getPosition():com.intellij.openapi.editor.markup.LineMarkerRendererEx$Position
e:com.intellij.openapi.editor.markup.LineMarkerRendererEx$Position
- java.lang.Enum
- sf:CUSTOM:com.intellij.openapi.editor.markup.LineMarkerRendererEx$Position
- sf:LEFT:com.intellij.openapi.editor.markup.LineMarkerRendererEx$Position
- sf:RIGHT:com.intellij.openapi.editor.markup.LineMarkerRendererEx$Position
- s:valueOf(java.lang.String):com.intellij.openapi.editor.markup.LineMarkerRendererEx$Position
- s:values():com.intellij.openapi.editor.markup.LineMarkerRendererEx$Position[]
f:com.intellij.openapi.editor.markup.MarkupEditorFilterFactory
- <init>():V
- s:createIsDiffFilter():com.intellij.openapi.editor.markup.MarkupEditorFilter
- s:createIsNotDiffFilter():com.intellij.openapi.editor.markup.MarkupEditorFilter
- s:createNotFilter(com.intellij.openapi.editor.markup.MarkupEditorFilter):com.intellij.openapi.editor.markup.MarkupEditorFilter
f:com.intellij.openapi.editor.markup.PassWrapper
- <init>(java.lang.String,I):V
- f:component1():java.lang.String
- f:component2():I
- f:copy(java.lang.String,I):com.intellij.openapi.editor.markup.PassWrapper
- bs:copy$default(com.intellij.openapi.editor.markup.PassWrapper,java.lang.String,I,I,java.lang.Object):com.intellij.openapi.editor.markup.PassWrapper
- equals(java.lang.Object):Z
- f:getPercent():I
- f:getPresentableName():java.lang.String
- hashCode():I
f:com.intellij.openapi.editor.markup.SeverityStatusItem
- <init>(com.intellij.lang.annotation.HighlightSeverity,javax.swing.Icon,I,java.lang.String):V
- f:component1():com.intellij.lang.annotation.HighlightSeverity
- f:component2():javax.swing.Icon
- f:component3():I
- f:component4():java.lang.String
- f:copy(com.intellij.lang.annotation.HighlightSeverity,javax.swing.Icon,I,java.lang.String):com.intellij.openapi.editor.markup.SeverityStatusItem
- bs:copy$default(com.intellij.openapi.editor.markup.SeverityStatusItem,com.intellij.lang.annotation.HighlightSeverity,javax.swing.Icon,I,java.lang.String,I,java.lang.Object):com.intellij.openapi.editor.markup.SeverityStatusItem
- equals(java.lang.Object):Z
- f:getCountMessage():java.lang.String
- f:getIcon():javax.swing.Icon
- f:getProblemCount():I
- f:getSeverity():com.intellij.lang.annotation.HighlightSeverity
- hashCode():I
f:com.intellij.openapi.editor.markup.StatusItem
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon,java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.editor.markup.StatusItemMetadata):V
- b:<init>(java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.editor.markup.StatusItemMetadata,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.String
- f:component2():javax.swing.Icon
- f:component3():java.lang.String
- f:component4():com.intellij.openapi.editor.markup.StatusItemMetadata
- f:copy(java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.editor.markup.StatusItemMetadata):com.intellij.openapi.editor.markup.StatusItem
- bs:copy$default(com.intellij.openapi.editor.markup.StatusItem,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.editor.markup.StatusItemMetadata,I,java.lang.Object):com.intellij.openapi.editor.markup.StatusItem
- equals(java.lang.Object):Z
- f:getDetailsText():java.lang.String
- f:getIcon():javax.swing.Icon
- f:getMetadata():com.intellij.openapi.editor.markup.StatusItemMetadata
- f:getText():java.lang.String
- hashCode():I
com.intellij.openapi.editor.markup.StatusItemMetadata
c:com.intellij.openapi.editor.textarea.TextComponentEditorImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.editor.textarea.TextComponentEditor
- <init>(com.intellij.openapi.project.Project,javax.swing.text.JTextComponent):V
- addEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- addEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- getCaretModel():com.intellij.openapi.editor.CaretModel
- getColorsScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- getComponent():javax.swing.JComponent
- getContentComponent():javax.swing.text.JTextComponent
- getDocument():com.intellij.openapi.editor.Document
- getEditorKind():com.intellij.openapi.editor.EditorKind
- getFoldingModel():com.intellij.openapi.editor.FoldingModel
- getGutter():com.intellij.openapi.editor.EditorGutter
- getHeaderComponent():javax.swing.JComponent
- getIndentsModel():com.intellij.openapi.editor.IndentsModel
- getInlayModel():com.intellij.openapi.editor.InlayModel
- getInsets():java.awt.Insets
- getLineHeight():I
- getMarkupModel():com.intellij.openapi.editor.markup.MarkupModel
- getMouseEventArea(java.awt.event.MouseEvent):com.intellij.openapi.editor.event.EditorMouseEventArea
- getProject():com.intellij.openapi.project.Project
- getScrollingModel():com.intellij.openapi.editor.ScrollingModel
- getSelectionModel():com.intellij.openapi.editor.SelectionModel
- getSettings():com.intellij.openapi.editor.EditorSettings
- getSoftWrapModel():com.intellij.openapi.editor.SoftWrapModel
- hasHeaderComponent():Z
- isColumnMode():Z
- isDisposed():Z
- isInsertMode():Z
- isOneLineMode():Z
- isViewer():Z
- logicalPositionToOffset(com.intellij.openapi.editor.LogicalPosition):I
- logicalPositionToXY(com.intellij.openapi.editor.LogicalPosition):java.awt.Point
- logicalToVisualPosition(com.intellij.openapi.editor.LogicalPosition):com.intellij.openapi.editor.VisualPosition
- offsetToLogicalPosition(I):com.intellij.openapi.editor.LogicalPosition
- offsetToVisualPosition(I):com.intellij.openapi.editor.VisualPosition
- offsetToVisualPosition(I,Z,Z):com.intellij.openapi.editor.VisualPosition
- removeEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- removeEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- setBorder(javax.swing.border.Border):V
- setHeaderComponent(javax.swing.JComponent):V
- visualPositionToPoint2D(com.intellij.openapi.editor.VisualPosition):java.awt.geom.Point2D
- visualPositionToXY(com.intellij.openapi.editor.VisualPosition):java.awt.Point
- visualToLogicalPosition(com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.editor.LogicalPosition
- xyToLogicalPosition(java.awt.Point):com.intellij.openapi.editor.LogicalPosition
- xyToVisualPosition(java.awt.Point):com.intellij.openapi.editor.VisualPosition
- xyToVisualPosition(java.awt.geom.Point2D):com.intellij.openapi.editor.VisualPosition
Fa:com.intellij.openapi.editor.toolbar.floating.AbstractFloatingToolbarComponent
- com.intellij.openapi.actionSystem.ActionToolbar
- com.intellij.openapi.editor.toolbar.floating.FloatingToolbarComponent
- com.intellij.ui.switcher.QuickActionProvider
- javax.swing.JPanel
- <init>(com.intellij.openapi.actionSystem.ActionGroup,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- addNotify():V
- getAutoHideable():Z
- getBackgroundAlpha():F
- getHidingTime():I
- getRetentionTime():I
- getShowingTime():I
- hideImmediately():V
- scheduleHide():V
- scheduleShow():V
- setAutoHideable(Z):V
- setBackgroundAlpha(F):V
- setHidingTime(I):V
- setRetentionTime(I):V
- setShowingTime(I):V
a:com.intellij.openapi.editor.toolbar.floating.AbstractFloatingToolbarProvider
- com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider
- sf:Companion:com.intellij.openapi.editor.toolbar.floating.AbstractFloatingToolbarProvider$Companion
- <init>(java.lang.String):V
- getActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- register(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.toolbar.floating.FloatingToolbarComponent,com.intellij.openapi.Disposable):V
- register(com.intellij.openapi.editor.toolbar.floating.FloatingToolbarComponent,com.intellij.openapi.Disposable):V
f:com.intellij.openapi.editor.toolbar.floating.AbstractFloatingToolbarProvider$Companion
f:com.intellij.openapi.editor.toolbar.floating.EditorFloatingToolbar
- javax.swing.JPanel
- <init>(com.intellij.openapi.editor.impl.EditorImpl):V
f:com.intellij.openapi.editor.toolbar.floating.FloatingToolbar
- com.intellij.openapi.editor.toolbar.floating.AbstractFloatingToolbarComponent
- <init>(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.Disposable):V
com.intellij.openapi.editor.toolbar.floating.FloatingToolbarComponent
- a:getAutoHideable():Z
- a:getBackgroundAlpha():F
- a:getHidingTime():I
- a:getRetentionTime():I
- a:getShowingTime():I
- a:hideImmediately():V
- a:scheduleHide():V
- a:scheduleShow():V
- a:setAutoHideable(Z):V
- a:setBackgroundAlpha(F):V
- a:setHidingTime(I):V
- a:setRetentionTime(I):V
- a:setShowingTime(I):V
com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider
- sf:Companion:com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider$Companion
- a:getActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- getAutoHideable():Z
- getBackgroundAlpha():F
- getHidingTime():I
- getPriority():I
- getRetentionTime():I
- getShowingTime():I
- isApplicable(com.intellij.openapi.actionSystem.DataContext):Z
- register(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.toolbar.floating.FloatingToolbarComponent,com.intellij.openapi.Disposable):V
f:com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider$Companion
- f:createExtensionDisposable(com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider,com.intellij.openapi.Disposable):com.intellij.openapi.Disposable
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
f:com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider$DefaultImpls
- s:getAutoHideable(com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider):Z
- s:getBackgroundAlpha(com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider):F
- s:getHidingTime(com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider):I
- s:getPriority(com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider):I
- s:getRetentionTime(com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider):I
- s:getShowingTime(com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider):I
- s:isApplicable(com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider,com.intellij.openapi.actionSystem.DataContext):Z
- s:register(com.intellij.openapi.editor.toolbar.floating.FloatingToolbarProvider,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.toolbar.floating.FloatingToolbarComponent,com.intellij.openapi.Disposable):V
f:com.intellij.openapi.editor.toolbar.floating.FloatingToolbarUtilKt
- sf:isInsideMainEditor(com.intellij.openapi.actionSystem.DataContext):Z
a:com.intellij.openapi.fileChooser.actions.FileChooserAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- p:<init>():V
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:actionPerformed(com.intellij.openapi.fileChooser.FileChooserPanel,com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:actionPerformed(com.intellij.openapi.fileChooser.FileSystemTree,com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:update(com.intellij.openapi.fileChooser.FileChooserPanel,com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:update(com.intellij.openapi.fileChooser.FileSystemTree,com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.fileChooser.actions.FileDeleteAction
- com.intellij.openapi.fileChooser.actions.FileChooserAction
- <init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
c:com.intellij.openapi.fileChooser.actions.NewFolderAction
- com.intellij.openapi.fileChooser.actions.FileChooserAction
- com.intellij.ide.lightEdit.LightEditCompatible
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- p:actionPerformed(com.intellij.openapi.fileChooser.FileChooserPanel,com.intellij.openapi.actionSystem.AnActionEvent):V
- p:actionPerformed(com.intellij.openapi.fileChooser.FileSystemTree,com.intellij.openapi.actionSystem.AnActionEvent):V
- p:update(com.intellij.openapi.fileChooser.FileChooserPanel,com.intellij.openapi.actionSystem.AnActionEvent):V
- p:update(com.intellij.openapi.fileChooser.FileSystemTree,com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.fileChooser.actions.VirtualFileDeleteProvider
- com.intellij.ide.DeleteProvider
- <init>():V
- canDeleteElement(com.intellij.openapi.actionSystem.DataContext):Z
- deleteElement(com.intellij.openapi.actionSystem.DataContext):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
c:com.intellij.openapi.fileChooser.ex.FileChooserDialogImpl
- com.intellij.openapi.ui.DialogWrapper
- com.intellij.openapi.fileChooser.FileChooserDialog
- com.intellij.openapi.fileChooser.PathChooserDialog
- sf:FILE_CHOOSER_SHOW_PATH_PROPERTY:java.lang.String
- pf:myChooserDescriptor:com.intellij.openapi.fileChooser.FileChooserDescriptor
- p:myFileSystemTree:com.intellij.openapi.fileChooser.ex.FileSystemTreeImpl
- p:myPathTextField:com.intellij.openapi.fileChooser.ex.FileTextFieldImpl
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor,java.awt.Component):V
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor,java.awt.Component,com.intellij.openapi.project.Project):V
- choose(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile[]):com.intellij.openapi.vfs.VirtualFile[]
- choose(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Consumer):V
- p:createActionGroup():com.intellij.openapi.actionSystem.DefaultActionGroup
- p:createCenterPanel():javax.swing.JComponent
- p:createExtraToolbarPanel():javax.swing.JPanel
- p:createFinder():com.intellij.openapi.fileChooser.ex.FileLookup$Finder
- p:createInternalTree():com.intellij.ui.treeStructure.Tree
- pf:createTitlePane():javax.swing.JComponent
- p:createTree():javax.swing.JTree
- f:dispose():V
- f:doCancelAction():V
- p:doOKAction():V
- p:getDimensionServiceKey():java.lang.String
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getPresentableUrl(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- p:restoreSelection(com.intellij.openapi.vfs.VirtualFile):V
- toggleShowTextField():V
pf:com.intellij.openapi.fileChooser.ex.FileChooserDialogImpl$MyPanel
- javax.swing.JPanel
- com.intellij.openapi.actionSystem.UiDataProvider
- <init>(com.intellij.openapi.fileChooser.ex.FileChooserDialogImpl):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.openapi.fileChooser.ex.FileChooserKeys
- sf:DELETE_ACTION_AVAILABLE:com.intellij.openapi.actionSystem.DataKey
- sf:NEW_FILE_TEMPLATE_TEXT:com.intellij.openapi.actionSystem.DataKey
- sf:NEW_FILE_TYPE:com.intellij.openapi.actionSystem.DataKey
- <init>():V
f:com.intellij.openapi.fileChooser.ex.FileDrop
- <init>(javax.swing.JComponent,com.intellij.openapi.fileChooser.ex.FileDrop$Target):V
com.intellij.openapi.fileChooser.ex.FileDrop$Target
- a:dropFiles(java.util.List):V
- a:getDescriptor():com.intellij.openapi.fileChooser.FileChooserDescriptor
- a:isHiddenShown():Z
com.intellij.openapi.fileChooser.ex.FileLookup
com.intellij.openapi.fileChooser.ex.FileLookup$Finder
- a:find(java.lang.String):com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile
- a:getSeparator():java.lang.String
- a:normalize(java.lang.String):java.lang.String
- split(java.lang.String):java.util.List
com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile
- a:exists():Z
- a:getAbsolutePath():java.lang.String
- a:getChildren(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFilter):java.util.List
- a:getIcon():javax.swing.Icon
- a:getMacro():java.lang.String
- a:getName():java.lang.String
- a:getParent():com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile
- a:isDirectory():Z
- a:setMacro(java.lang.String):V
com.intellij.openapi.fileChooser.ex.FileLookup$LookupFilter
- a:isAccepted(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile):Z
f:com.intellij.openapi.fileChooser.ex.FileNodeDescriptor
- com.intellij.ide.util.treeView.NodeDescriptor
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileElement,com.intellij.ide.util.treeView.NodeDescriptor,javax.swing.Icon,java.lang.String,java.lang.String):V
- getComment():java.lang.String
- getElement():com.intellij.openapi.fileChooser.FileElement
- update():Z
c:com.intellij.openapi.fileChooser.ex.FileSaverDialogImpl
- com.intellij.openapi.fileChooser.ex.FileChooserDialogImpl
- com.intellij.openapi.fileChooser.FileSaverDialog
- pf:myDescriptor:com.intellij.openapi.fileChooser.FileSaverDescriptor
- pf:myExtensions:javax.swing.JComboBox
- pf:myFileName:javax.swing.JTextField
- <init>(com.intellij.openapi.fileChooser.FileSaverDescriptor,com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.fileChooser.FileSaverDescriptor,java.awt.Component):V
- p:createCenterPanel():javax.swing.JComponent
- p:createFileNamePanel():javax.swing.JComponent
- p:doOKAction():V
- p:getFile():java.io.File
- getPreferredFocusedComponent():javax.swing.JComponent
- p:init():V
- save(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFileWrapper
- save(java.nio.file.Path,java.lang.String):com.intellij.openapi.vfs.VirtualFileWrapper
- setOKActionEnabled(Z):V
- p:updateOkButton():V
c:com.intellij.openapi.fileChooser.ex.FileSystemTreeImpl
- com.intellij.openapi.fileChooser.FileSystemTree
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.ui.treeStructure.Tree,javax.swing.tree.TreeCellRenderer,java.lang.Runnable,com.intellij.util.containers.Convertor):V
- addListener(com.intellij.openapi.fileChooser.FileSystemTree$Listener,com.intellij.openapi.Disposable):V
- addOkAction(java.lang.Runnable):V
- areHiddensShown():Z
- p:createFileTreeModel(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.ui.treeStructure.Tree):com.intellij.openapi.fileChooser.tree.FileTreeModel
- createNewFile(com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.String):java.lang.Exception
- createNewFolder(com.intellij.openapi.vfs.VirtualFile,java.lang.String):java.lang.Exception
- dispose():V
- expand(com.intellij.openapi.vfs.VirtualFile,java.lang.Runnable):V
- getData(com.intellij.openapi.actionSystem.DataKey):java.lang.Object
- p:getFileComparator():java.util.Comparator
- getNewFileParent():com.intellij.openapi.vfs.VirtualFile
- getSelectedFile():com.intellij.openapi.vfs.VirtualFile
- getSelectedFiles():com.intellij.openapi.vfs.VirtualFile[]
- getTree():javax.swing.JTree
- s:getVirtualFile(javax.swing.tree.TreePath):com.intellij.openapi.vfs.VirtualFile
- isUnderRoots(com.intellij.openapi.vfs.VirtualFile):Z
- registerMouseListener(com.intellij.openapi.actionSystem.ActionGroup):V
- select(com.intellij.openapi.vfs.VirtualFile,java.lang.Runnable):V
- select(com.intellij.openapi.vfs.VirtualFile[],java.lang.Runnable):V
- selectionExists():Z
- showHiddens(Z):V
- updateTree():V
c:com.intellij.openapi.fileChooser.ex.FileTextFieldImpl
- com.intellij.openapi.Disposable
- com.intellij.openapi.fileChooser.FileTextField
- p:myAutopopup:Z
- <init>(javax.swing.JTextField,com.intellij.openapi.fileChooser.ex.FileLookup$Finder,com.intellij.openapi.fileChooser.ex.FileLookup$LookupFilter,java.util.Map,com.intellij.openapi.Disposable):V
- dispose():V
- getCompletionBase():java.lang.String
- getField():javax.swing.JTextField
- getFile():com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile
- getFinder():com.intellij.openapi.fileChooser.ex.FileLookup$Finder
- p:getPathVariablesSeparatorText():java.lang.String
- getTextFieldText():java.lang.String
- isPathUpdating():Z
- isPopupDisplayed():Z
- p:onTextChanged(java.lang.String):V
- resetMacroMap(java.util.Map):V
- f:setText(java.lang.String,Z,java.lang.Runnable):V
- p:setTextToFile(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile):V
f:com.intellij.openapi.fileChooser.ex.LocalFsFinder
- com.intellij.openapi.fileChooser.ex.FileLookup$Finder
- <init>():V
- <init>(Z):V
- find(java.lang.String):com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile
- getSeparator():java.lang.String
- normalize(java.lang.String):java.lang.String
- setBaseDir(java.io.File):V
- split(java.lang.String):java.util.List
- withBaseDir(java.nio.file.Path):com.intellij.openapi.fileChooser.ex.LocalFsFinder
f:com.intellij.openapi.fileChooser.ex.LocalFsFinder$FileChooserFilter
- com.intellij.openapi.fileChooser.ex.FileLookup$LookupFilter
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor,Z):V
- isAccepted(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile):Z
f:com.intellij.openapi.fileChooser.ex.LocalFsFinder$IoFile
- com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile
- <init>(java.nio.file.Path):V
- equals(java.lang.Object):Z
- exists():Z
- getAbsolutePath():java.lang.String
- getChildren(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFilter):java.util.List
- getFile():java.nio.file.Path
- getIcon():javax.swing.Icon
- getName():java.lang.String
- getParent():com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile
- hashCode():I
- isDirectory():Z
f:com.intellij.openapi.fileChooser.ex.LocalFsFinder$VfsFile
- com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile
- <init>(com.intellij.openapi.vfs.VirtualFile):V
- equals(java.lang.Object):Z
- exists():Z
- getAbsolutePath():java.lang.String
- getChildren(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFilter):java.util.List
- getFile():com.intellij.openapi.vfs.VirtualFile
- getIcon():javax.swing.Icon
- getName():java.lang.String
- getParent():com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile
- hashCode():I
- isDirectory():Z
a:com.intellij.openapi.fileChooser.ex.TextFieldAction
- com.intellij.ui.components.labels.LinkLabel
- com.intellij.ui.components.labels.LinkListener
- <init>():V
- p:getStatusBarText():java.lang.String
- p:onSetActive(Z):V
- update():V
f:com.intellij.openapi.fileChooser.impl.FileChooserUtil
- <init>():V
- s:getChosenFiles(com.intellij.openapi.fileChooser.FileChooserDescriptor,java.util.List):java.util.List
- s:getLastOpenedFile(com.intellij.openapi.project.Project):com.intellij.openapi.vfs.VirtualFile
- s:setLastOpenedFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
- s:setLastOpenedFile(com.intellij.openapi.project.Project,java.nio.file.Path):V
f:com.intellij.openapi.fileChooser.impl.FileComparator
- java.util.Comparator
- compare(com.intellij.ide.util.treeView.NodeDescriptor,com.intellij.ide.util.treeView.NodeDescriptor):I
- s:getInstance():com.intellij.openapi.fileChooser.impl.FileComparator
c:com.intellij.openapi.fileChooser.tree.FileNode
- getComment():java.lang.String
- getFile():com.intellij.openapi.vfs.VirtualFile
- getIcon():javax.swing.Icon
- getName():java.lang.String
- isHidden():Z
- isSpecial():Z
- isSymlink():Z
- isValid():Z
- isWritable():Z
f:com.intellij.openapi.fileChooser.tree.FileRefresher
- com.intellij.openapi.Disposable
- <init>(Z,J,com.intellij.util.NotNullProducer):V
- dispose():V
- isRecursive():Z
- pause():V
- register(com.intellij.openapi.vfs.VirtualFile):V
- start():V
f:com.intellij.openapi.fileChooser.tree.FileTreeModel
- com.intellij.util.ui.tree.AbstractTreeModel
- com.intellij.util.concurrency.InvokerSupplier
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.fileChooser.tree.FileRefresher):V
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.fileChooser.tree.FileRefresher,Z,Z):V
- getChild(java.lang.Object,I):java.lang.Object
- getChildCount(java.lang.Object):I
- getIndexOfChild(java.lang.Object,java.lang.Object):I
- getInvoker():com.intellij.util.concurrency.Invoker
- getRoot():java.lang.Object
- invalidate():V
- isLeaf(java.lang.Object):Z
f:com.intellij.openapi.fileEditor.FileEditorManagerKeys
- sf:CLOSING_TO_REOPEN:com.intellij.openapi.util.Key
- sf:FORBID_PREVIEW_TAB:com.intellij.openapi.util.Key
- sf:FORBID_TAB_SPLIT:com.intellij.openapi.util.Key
- sf:INSTANCE:com.intellij.openapi.fileEditor.FileEditorManagerKeys
- sf:OPEN_IN_PREVIEW_TAB:com.intellij.openapi.util.Key
f:com.intellij.openapi.fileEditor.LayoutActionsFloatingToolbar
- com.intellij.openapi.editor.toolbar.floating.AbstractFloatingToolbarComponent
- <init>(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.Disposable):V
f:com.intellij.openapi.fileEditor.SplitEditorToolbar
- com.intellij.openapi.editor.impl.EditorHeaderComponent
- <init>(com.intellij.openapi.actionSystem.ActionToolbar,com.intellij.openapi.actionSystem.ActionToolbar):V
- getRightToolbar():com.intellij.openapi.actionSystem.ActionToolbar
- isLeftToolbarEmpty():Z
- refresh():V
c:com.intellij.openapi.fileEditor.TextEditorWithPreview
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.fileEditor.TextEditor
- sf:Companion:com.intellij.openapi.fileEditor.TextEditorWithPreview$Companion
- pf:myEditor:com.intellij.openapi.fileEditor.TextEditor
- pf:myPreview:com.intellij.openapi.fileEditor.FileEditor
- <init>(com.intellij.openapi.fileEditor.TextEditor,com.intellij.openapi.fileEditor.FileEditor):V
- <init>(com.intellij.openapi.fileEditor.TextEditor,com.intellij.openapi.fileEditor.FileEditor,java.lang.String):V
- <init>(com.intellij.openapi.fileEditor.TextEditor,com.intellij.openapi.fileEditor.FileEditor,java.lang.String,com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout):V
- <init>(com.intellij.openapi.fileEditor.TextEditor,com.intellij.openapi.fileEditor.FileEditor,java.lang.String,com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout,Z):V
- <init>(com.intellij.openapi.fileEditor.TextEditor,com.intellij.openapi.fileEditor.FileEditor,java.lang.String,com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout,Z,com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout):V
- b:<init>(com.intellij.openapi.fileEditor.TextEditor,com.intellij.openapi.fileEditor.FileEditor,java.lang.String,com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout,Z,com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- canNavigateTo(com.intellij.pom.Navigatable):Z
- p:createLeftToolbarActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- p:createRightToolbar():com.intellij.openapi.actionSystem.ActionToolbar
- p:createRightToolbarActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- p:createSplitter():com.intellij.ui.JBSplitter
- p:createTabActions():com.intellij.openapi.actionSystem.AnAction[]
- p:createToolbar():com.intellij.openapi.actionSystem.ActionToolbar
- p:createViewActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- deselectNotify():V
- dispose():V
- getBackgroundHighlighter():com.intellij.codeHighlighting.BackgroundEditorHighlighter
- getComponent():javax.swing.JComponent
- getCurrentLocation():com.intellij.openapi.fileEditor.FileEditorLocation
- getEditor():com.intellij.openapi.editor.Editor
- getFile():com.intellij.openapi.vfs.VirtualFile
- f:getLayout():com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout
- getName():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getPreviewEditor():com.intellij.openapi.fileEditor.FileEditor
- p:getShowEditorAction():com.intellij.openapi.actionSystem.ToggleAction
- p:getShowEditorAndPreviewAction():com.intellij.openapi.actionSystem.ToggleAction
- p:getShowPreviewAction():com.intellij.openapi.actionSystem.ToggleAction
- p:getSplitterProportionKey():java.lang.String
- getState(com.intellij.openapi.fileEditor.FileEditorStateLevel):com.intellij.openapi.fileEditor.FileEditorState
- getStructureViewBuilder():com.intellij.ide.structureView.StructureViewBuilder
- getTabActions():com.intellij.openapi.actionSystem.ActionGroup
- getTextEditor():com.intellij.openapi.fileEditor.TextEditor
- pf:handleLayoutChange(Z):V
- isModified():Z
- p:isShowActionsInTabs():Z
- p:isShowFloatingToolbar():Z
- isValid():Z
- isVerticalSplit():Z
- navigateTo(com.intellij.pom.Navigatable):V
- p:onLayoutChange(com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout,com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout):V
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- selectNotify():V
- setLayout(com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout):V
- setState(com.intellij.openapi.fileEditor.FileEditorState):V
- setVerticalSplit(Z):V
f:com.intellij.openapi.fileEditor.TextEditorWithPreview$Companion
- f:getEditorWithPreviewIcon(Z):javax.swing.Icon
- f:getParentSplitEditor(com.intellij.openapi.fileEditor.FileEditor):com.intellij.openapi.fileEditor.TextEditorWithPreview
- f:openPreviewForFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor[]
e:com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout
- java.lang.Enum
- sf:Companion:com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout$Companion
- sf:SHOW_EDITOR:com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout
- sf:SHOW_EDITOR_AND_PREVIEW:com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout
- sf:SHOW_PREVIEW:com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout
- sf:fromId(java.lang.String,com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout):com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout
- s:getEntries():kotlin.enums.EnumEntries
- f:getIcon(com.intellij.openapi.fileEditor.TextEditorWithPreview):javax.swing.Icon
- f:getId():java.lang.String
- f:getName():java.lang.String
- s:valueOf(java.lang.String):com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout
- s:values():com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout[]
f:com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout$Companion
- f:fromId(java.lang.String,com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout):com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout
f:com.intellij.openapi.fileEditor.TextEditorWithPreview$MyFileEditorState
- com.intellij.openapi.fileEditor.FileEditorState
- <init>(com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout,com.intellij.openapi.fileEditor.FileEditorState,com.intellij.openapi.fileEditor.FileEditorState):V
- <init>(com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout,com.intellij.openapi.fileEditor.FileEditorState,com.intellij.openapi.fileEditor.FileEditorState,Z):V
- canBeMergedWith(com.intellij.openapi.fileEditor.FileEditorState,com.intellij.openapi.fileEditor.FileEditorStateLevel):Z
- equals(java.lang.Object):Z
- f:getFirstState():com.intellij.openapi.fileEditor.FileEditorState
- f:getSecondState():com.intellij.openapi.fileEditor.FileEditorState
- f:getSplitLayout():com.intellij.openapi.fileEditor.TextEditorWithPreview$Layout
- hashCode():I
- f:isVerticalSplit():Z
a:com.intellij.openapi.fileEditor.ex.FileEditorManagerEx
- com.intellij.openapi.fileEditor.FileEditorManager
- sf:Companion:com.intellij.openapi.fileEditor.ex.FileEditorManagerEx$Companion
- <init>():V
- canOpenFile(com.intellij.openapi.vfs.VirtualFile):Z
- a:changeSplitterOrientation():V
- a:closeAllFiles():V
- a:closeFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.impl.EditorWindow):V
- a:closeFileWithChecks(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.impl.EditorWindow):Z
- closeOpenedEditors():V
- a:createSplitter(I,com.intellij.openapi.fileEditor.impl.EditorWindow):V
- getActiveSplittersComposites():java.util.List
- a:getActiveWindow():java.util.concurrent.CompletableFuture
- a:getComponent():javax.swing.JComponent
- a:getCurrentFile():com.intellij.openapi.vfs.VirtualFile
- a:getCurrentFileEditorFlow():kotlinx.coroutines.flow.StateFlow
- a:getCurrentWindow():com.intellij.openapi.fileEditor.impl.EditorWindow
- getData(java.lang.String,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret):java.lang.Object
- getDockContainer():com.intellij.ui.docking.DockContainer
- a:getEditorsWithProviders(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.util.Pair
- sf:getInstanceEx(com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.ex.FileEditorManagerEx
- a:getNextWindow(com.intellij.openapi.fileEditor.impl.EditorWindow):com.intellij.openapi.fileEditor.impl.EditorWindow
- a:getPreferredFocusedComponent():javax.swing.JComponent
- a:getPrevWindow(com.intellij.openapi.fileEditor.impl.EditorWindow):com.intellij.openapi.fileEditor.impl.EditorWindow
- f:getSelectedEditor(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor
- a:getSelectedEditorWithProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.ex.FileEditorWithProvider
- a:getSiblings(com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- a:getSplitters():com.intellij.openapi.fileEditor.impl.EditorsSplitters
- a:getSplittersFor(java.awt.Component):com.intellij.openapi.fileEditor.impl.EditorsSplitters
- a:getWindowSplitCount():I
- a:getWindows():com.intellij.openapi.fileEditor.impl.EditorWindow[]
- a:hasOpenedFile():Z
- a:hasSplitOrUndockedWindows():Z
- a:isChanged(com.intellij.openapi.fileEditor.impl.EditorComposite):Z
- a:isInSplitter():Z
- a:notifyPublisher(java.lang.Runnable):V
- f:openFile(com.intellij.openapi.vfs.VirtualFile):java.util.List
- a:openFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.impl.EditorWindow,com.intellij.openapi.fileEditor.impl.FileEditorOpenOptions):com.intellij.openapi.fileEditor.FileEditorComposite
- openFile(com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.fileEditor.FileEditor[]
- f:openFile(com.intellij.openapi.vfs.VirtualFile,Z,Z):com.intellij.openapi.fileEditor.FileEditor[]
- bs:openFile$default(com.intellij.openapi.fileEditor.ex.FileEditorManagerEx,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.impl.EditorWindow,com.intellij.openapi.fileEditor.impl.FileEditorOpenOptions,I,java.lang.Object):com.intellij.openapi.fileEditor.FileEditorComposite
- f:openFileWithProviders(com.intellij.openapi.vfs.VirtualFile,Z,com.intellij.openapi.fileEditor.impl.EditorWindow):com.intellij.openapi.util.Pair
- f:openFileWithProviders(com.intellij.openapi.vfs.VirtualFile,Z,Z):com.intellij.openapi.util.Pair
- refreshIcons():V
- registerExtraEditorDataProvider(com.intellij.openapi.fileEditor.EditorDataProvider,com.intellij.openapi.Disposable):V
- f:requestOpenFile(com.intellij.openapi.vfs.VirtualFile):V
- runWhenLoaded(com.intellij.openapi.editor.Editor,java.lang.Runnable):V
- a:setCurrentWindow(com.intellij.openapi.fileEditor.impl.EditorWindow):V
- a:unsplitAllWindow():V
f:com.intellij.openapi.fileEditor.ex.FileEditorManagerEx$Companion
- f:getInstanceEx(com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.ex.FileEditorManagerEx
- f:getInstanceExAsync(com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- f:getInstanceExIfCreated(com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.ex.FileEditorManagerEx
com.intellij.openapi.fileEditor.ex.FileEditorProviderManager
- sf:Companion:com.intellij.openapi.fileEditor.ex.FileEditorProviderManager$Companion
- a:getDumbUnawareProviders(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.util.Set,kotlin.coroutines.Continuation):java.lang.Object
- s:getInstance():com.intellij.openapi.fileEditor.ex.FileEditorProviderManager
- a:getProvider(java.lang.String):com.intellij.openapi.fileEditor.FileEditorProvider
- a:getProviderList(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.List
- getProviders(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditorProvider[]
- a:getProvidersAsync(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.fileEditor.ex.FileEditorProviderManager$Companion
- f:getInstance():com.intellij.openapi.fileEditor.ex.FileEditorProviderManager
a:com.intellij.openapi.fileEditor.ex.IdeDocumentHistory
- <init>():V
- a:back():V
- a:clearHistory():V
- a:forward():V
- a:getChangedFiles():java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.ex.IdeDocumentHistory
- a:includeCurrentCommandAsNavigation():V
- a:includeCurrentPlaceAsChangePlace():V
- a:isBackAvailable():Z
- a:isForwardAvailable():Z
- a:isNavigateNextChangeAvailable():Z
- a:isNavigatePreviousChangeAvailable():Z
- a:navigateNextChange():V
- a:navigatePreviousChange():V
- a:setCurrentCommandHasMoves():V
a:com.intellij.openapi.fileEditor.impl.BaseRemoteFileEditor
- com.intellij.openapi.fileEditor.TextEditor
- java.beans.PropertyChangeListener
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- canNavigateTo(com.intellij.pom.Navigatable):Z
- pf:contentLoaded():V
- pf:contentRejected():V
- dispose():V
- getBackgroundHighlighter():com.intellij.codeHighlighting.BackgroundEditorHighlighter
- getCurrentLocation():com.intellij.openapi.fileEditor.FileEditorLocation
- getEditor():com.intellij.openapi.editor.Editor
- getState(com.intellij.openapi.fileEditor.FileEditorStateLevel):com.intellij.openapi.fileEditor.FileEditorState
- getStructureViewBuilder():com.intellij.ide.structureView.StructureViewBuilder
- pa:getTextEditor():com.intellij.openapi.fileEditor.TextEditor
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- isModified():Z
- isValid():Z
- f:navigateTo(com.intellij.pom.Navigatable):V
- propertyChange(java.beans.PropertyChangeEvent):V
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- setState(com.intellij.openapi.fileEditor.FileEditorState):V
com.intellij.openapi.fileEditor.impl.CurrentEditorProvider
- getCurrentEditor():com.intellij.openapi.fileEditor.FileEditor
- getCurrentEditor(com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.FileEditor
- s:getInstance():com.intellij.openapi.fileEditor.impl.CurrentEditorProvider
com.intellij.openapi.fileEditor.impl.DefaultPlatformFileEditorProvider
- com.intellij.openapi.fileEditor.FileEditorProvider
c:com.intellij.openapi.fileEditor.impl.EditorComposite
- com.intellij.openapi.Disposable
- com.intellij.openapi.fileEditor.FileEditorComposite
- f:addBottomComponent(com.intellij.openapi.fileEditor.FileEditor,javax.swing.JComponent):V
- f:addEditor(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.fileEditor.FileEditorProvider):V
- f:addListener(com.intellij.openapi.fileEditor.impl.EditorCompositeListener,com.intellij.openapi.Disposable):V
- f:addTopComponent(com.intellij.openapi.fileEditor.FileEditor,javax.swing.JComponent):V
- dispose():V
- f:getAllEditors():java.util.List
- getAllEditorsWithProviders():java.util.List
- getAllProviders():java.util.List
- getComponent():javax.swing.JComponent
- pf:getDisplayName(com.intellij.openapi.fileEditor.FileEditor):java.lang.String
- f:getEditors():com.intellij.openapi.fileEditor.FileEditor[]
- f:getFile():com.intellij.openapi.vfs.VirtualFile
- f:getFileEditorManager():com.intellij.openapi.fileEditor.FileEditorManager
- getFocusComponent():javax.swing.JComponent
- getPreferredFocusedComponent():javax.swing.JComponent
- f:getProviders():com.intellij.openapi.fileEditor.FileEditorProvider[]
- f:getSelectedEditor():com.intellij.openapi.fileEditor.FileEditor
- f:getSelectedWithProvider():com.intellij.openapi.fileEditor.ex.FileEditorWithProvider
- getTabs():com.intellij.ui.tabs.JBTabs
- f:getTopComponents(com.intellij.openapi.fileEditor.FileEditor):java.util.List
- f:isModified():Z
- f:isPinned():Z
- isPreview():Z
- f:removeBottomComponent(com.intellij.openapi.fileEditor.FileEditor,javax.swing.JComponent):V
- f:removeTopComponent(com.intellij.openapi.fileEditor.FileEditor,javax.swing.JComponent):V
- f:setDisplayName(com.intellij.openapi.fileEditor.FileEditor,java.lang.String):V
- f:setPinned(Z):V
- setPreview(Z):V
- f:setSelectedEditor(com.intellij.openapi.fileEditor.FileEditor):V
- f:setSelectedEditor(com.intellij.openapi.fileEditor.ex.FileEditorWithProvider):V
- f:setSelectedEditor(java.lang.String):V
c:com.intellij.openapi.fileEditor.impl.EditorEmptyTextPainter
- <init>():V
- p:advertiseActions(javax.swing.JComponent,com.intellij.util.ui.UIUtil$TextPainter):V
- p:appendAction(com.intellij.util.ui.UIUtil$TextPainter,java.lang.String,java.lang.String):V
- p:appendDnd(com.intellij.util.ui.UIUtil$TextPainter):V
- p:appendLine(com.intellij.util.ui.UIUtil$TextPainter,java.lang.String):V
- p:appendSearchEverywhere(com.intellij.util.ui.UIUtil$TextPainter):V
- p:appendToolWindow(com.intellij.util.ui.UIUtil$TextPainter,java.lang.String,java.lang.String,javax.swing.JComponent):V
- s:createTextPainter():com.intellij.util.ui.UIUtil$TextPainter
- p:getActionShortcutText(java.lang.String):java.lang.String
- p:heightRatio():D
- ps:isToolwindowVisible(javax.swing.JComponent,java.lang.String):Z
- paintEmptyText(javax.swing.JComponent,java.awt.Graphics):V
com.intellij.openapi.fileEditor.impl.EditorFileSwapper
- s:findSinglePsiAwareEditor(java.util.List):com.intellij.openapi.fileEditor.impl.text.TextEditorImpl
- a:getFileToSwapTo(com.intellij.openapi.project.Project,com.intellij.openapi.fileEditor.impl.EditorComposite):kotlin.Pair
f:com.intellij.openapi.fileEditor.impl.EditorHistoryManager
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.openapi.fileEditor.impl.EditorHistoryManager$Companion
- dispose():V
- f:getFileList():java.util.List
- f:getFiles():com.intellij.openapi.vfs.VirtualFile[]
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.impl.EditorHistoryManager
- f:getSelectedProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditorProvider
- getState():org.jdom.Element
- f:getState(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.FileEditorProvider):com.intellij.openapi.fileEditor.FileEditorState
- f:hasBeenOpen(com.intellij.openapi.vfs.VirtualFile):Z
- loadState(org.jdom.Element):V
- f:removeAllFiles():V
- f:removeFile(com.intellij.openapi.vfs.VirtualFile):V
- f:updateHistoryEntry(com.intellij.openapi.vfs.VirtualFile,Z):V
f:com.intellij.openapi.fileEditor.impl.EditorHistoryManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.impl.EditorHistoryManager
f:com.intellij.openapi.fileEditor.impl.EditorTabbedContainer
- f:getComponent():javax.swing.JComponent
- f:getSelectedIndex():I
- f:getTabCount():I
- f:getTabs():com.intellij.ui.tabs.JBTabs
- f:removeTabAt(I,I):V
- f:setForegroundAt(I,java.awt.Color):V
- f:setSelectedIndex(I):com.intellij.openapi.util.ActionCallback
- f:setTextAttributes(I,com.intellij.openapi.editor.markup.TextAttributes):V
f:com.intellij.openapi.fileEditor.impl.EditorWindow
- sf:Companion:com.intellij.openapi.fileEditor.impl.EditorWindow$Companion
- sf:DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:HIDE_TABS:com.intellij.openapi.util.Key
- f:changeOrientation():V
- f:closeAllExcept(com.intellij.openapi.vfs.VirtualFile):V
- f:closeFile(com.intellij.openapi.vfs.VirtualFile):V
- f:closeFile(com.intellij.openapi.vfs.VirtualFile,Z):V
- f:closeFile(com.intellij.openapi.vfs.VirtualFile,Z,Z):V
- bs:closeFile$default(com.intellij.openapi.fileEditor.impl.EditorWindow,com.intellij.openapi.vfs.VirtualFile,Z,I,java.lang.Object):V
- bs:closeFile$default(com.intellij.openapi.fileEditor.impl.EditorWindow,com.intellij.openapi.vfs.VirtualFile,Z,Z,I,java.lang.Object):V
- f:composites():kotlin.sequences.Sequence
- f:findFileComposite(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.impl.EditorWithProviderComposite
- f:findSiblings():com.intellij.openapi.fileEditor.impl.EditorWindow[]
- f:getAllComposites():java.util.List
- f:getComposite(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.impl.EditorComposite
- f:getEditors():com.intellij.openapi.fileEditor.impl.EditorWithProviderComposite[]
- f:getFileList():java.util.List
- f:getFiles():com.intellij.openapi.vfs.VirtualFile[]
- f:getOwner():com.intellij.openapi.fileEditor.impl.EditorsSplitters
- f:getSelectedComposite():com.intellij.openapi.fileEditor.impl.EditorComposite
- f:getSelectedComposite(Z):com.intellij.openapi.fileEditor.impl.EditorComposite
- f:getSelectedEditor():com.intellij.openapi.fileEditor.impl.EditorWithProviderComposite
- f:getSelectedEditor(Z):com.intellij.openapi.fileEditor.impl.EditorWithProviderComposite
- f:getSelectedFile():com.intellij.openapi.vfs.VirtualFile
- f:getSize():java.awt.Dimension
- f:getTabCount():I
- sf:getTabLimit():I
- f:getTabbedPane():com.intellij.openapi.fileEditor.impl.EditorTabbedContainer
- f:inSplitter():Z
- f:isDisposed():Z
- f:isEmptyVisible():Z
- f:isFileOpen(com.intellij.openapi.vfs.VirtualFile):Z
- f:isFilePinned(com.intellij.openapi.vfs.VirtualFile):Z
- f:isShowing():Z
- f:removeFromSplitter():V
- f:requestFocus(Z):V
- f:setAsCurrentWindow(Z):V
- f:setEditor(com.intellij.openapi.fileEditor.impl.EditorWithProviderComposite,Z):V
- f:setFilePinned(com.intellij.openapi.vfs.VirtualFile,Z):V
- f:setForegroundAt(I,java.awt.Color):V
- f:setSelectedComposite(com.intellij.openapi.fileEditor.impl.EditorComposite,Z):V
- f:setSelectedComposite(com.intellij.openapi.vfs.VirtualFile,Z):V
- f:setSelectedEditor(com.intellij.openapi.fileEditor.impl.EditorComposite,Z):V
- f:setTextAttributes(I,com.intellij.openapi.editor.markup.TextAttributes):V
- f:split(I,Z,com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.fileEditor.impl.EditorWindow
- f:split(I,Z,com.intellij.openapi.vfs.VirtualFile,Z,Z):com.intellij.openapi.fileEditor.impl.EditorWindow
- bs:split$default(com.intellij.openapi.fileEditor.impl.EditorWindow,I,Z,com.intellij.openapi.vfs.VirtualFile,Z,Z,I,java.lang.Object):com.intellij.openapi.fileEditor.impl.EditorWindow
- f:toFront():V
- f:trimToSize(com.intellij.openapi.vfs.VirtualFile,Z):V
- f:unsplitAll():V
f:com.intellij.openapi.fileEditor.impl.EditorWindow$Companion
- f:getTabLimit():I
com.intellij.openapi.fileEditor.impl.EditorWindowHolder
- a:getEditorWindow():com.intellij.openapi.fileEditor.impl.EditorWindow
c:com.intellij.openapi.fileEditor.impl.EditorWithProviderComposite
- com.intellij.openapi.fileEditor.impl.EditorComposite
c:com.intellij.openapi.fileEditor.impl.EditorsSplitters
- javax.swing.JPanel
- com.intellij.ide.ui.UISettingsListener
- sf:Companion:com.intellij.openapi.fileEditor.impl.EditorsSplitters$Companion
- sf:SPLITTER_KEY:java.lang.String
- f:addSelectedEditorsTo(java.util.Collection):V
- afterFileOpen(com.intellij.openapi.vfs.VirtualFile):V
- f:clear():V
- f:closeAllFiles(Z):V
- bs:closeAllFiles$default(com.intellij.openapi.fileEditor.impl.EditorsSplitters,Z,I,java.lang.Object):V
- f:closeFile(com.intellij.openapi.vfs.VirtualFile,Z):V
- sf:focusDefaultComponentInSplittersIfPresent(com.intellij.openapi.project.Project):Z
- f:getAllComposites():java.util.List
- f:getAllComposites(com.intellij.openapi.vfs.VirtualFile):java.util.List
- f:getCurrentWindow():com.intellij.openapi.fileEditor.impl.EditorWindow
- f:getSelectedEditors():com.intellij.openapi.fileEditor.FileEditor[]
- f:getSelectedFiles():com.intellij.openapi.vfs.VirtualFile[]
- f:getTabsAt(com.intellij.ui.awt.RelativePoint):com.intellij.ui.tabs.JBTabs
- f:getWindows():com.intellij.openapi.fileEditor.impl.EditorWindow[]
- f:isEmptyVisible():Z
- isFloating():Z
- f:openFilesAsync():kotlinx.coroutines.Job
- f:openFilesAsync(Z):kotlinx.coroutines.Job
- f:openInRightSplit(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.impl.EditorWindow
- f:openInRightSplit(com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.fileEditor.impl.EditorWindow
- bs:openInRightSplit$default(com.intellij.openapi.fileEditor.impl.EditorsSplitters,com.intellij.openapi.vfs.VirtualFile,Z,I,java.lang.Object):com.intellij.openapi.fileEditor.impl.EditorWindow
- p:paintComponent(java.awt.Graphics):V
- f:trimToSize():V
- uiSettingsChanged(com.intellij.ide.ui.UISettings):V
- f:writeExternal(org.jdom.Element):V
f:com.intellij.openapi.fileEditor.impl.EditorsSplitters$Companion
- f:findDefaultComponentInSplitters(com.intellij.openapi.project.Project):javax.swing.JComponent
- f:focusDefaultComponentInSplittersIfPresent(com.intellij.openapi.project.Project):Z
f:com.intellij.openapi.fileEditor.impl.FailedEditorBuilder
- f:getIcon():javax.swing.Icon
- f:getMessage():java.lang.String
- f:link(java.lang.String,kotlin.jvm.functions.Function0):V
- f:linkThatNavigatesToTextEditor(java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileEditor.FileEditor):V
f:com.intellij.openapi.fileEditor.impl.FailedEditorPaneKt
- sf:failedEditorPane(java.lang.String,Z,com.intellij.openapi.fileEditor.impl.MultilineWrapMode,kotlin.jvm.functions.Function1):javax.swing.JPanel
- bs:failedEditorPane$default(java.lang.String,Z,com.intellij.openapi.fileEditor.impl.MultilineWrapMode,kotlin.jvm.functions.Function1,I,java.lang.Object):javax.swing.JPanel
c:com.intellij.openapi.fileEditor.impl.FileDocumentManagerImpl
- com.intellij.openapi.fileEditor.impl.FileDocumentManagerBase
- com.intellij.openapi.vfs.SafeWriteRequestor
- sf:NOT_RELOADABLE_DOCUMENT_KEY:com.intellij.openapi.util.Key
- s:ourConflictsSolverEnabled:Z
- <init>():V
- s:areTooManyDocumentsInTheQueue(java.util.Collection):Z
- contentsChanged(com.intellij.openapi.vfs.newvfs.events.VFileContentChangeEvent):V
- p:createDocument(java.lang.CharSequence,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.ex.DocumentEx
- dropAllUnsavedDocuments():V
- p:fileContentLoaded(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document):V
- findCachedPsiInAnyProject(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.FileViewProvider
- p:getDocumentListener():com.intellij.openapi.editor.event.DocumentListener
- s:getLineSeparator(com.intellij.openapi.editor.Document,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getLineSeparator(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.lang.String
- getUnsavedDocuments():com.intellij.openapi.editor.Document[]
- isDocumentUnsaved(com.intellij.openapi.editor.Document):Z
- isFileModified(com.intellij.openapi.vfs.VirtualFile):Z
- processUnsavedDocuments(com.intellij.util.Processor):Z
- s:recomputeFileTypeIfNecessary(com.intellij.openapi.vfs.VirtualFile):Z
- reloadFiles(com.intellij.openapi.vfs.VirtualFile[]):V
- reloadFromDisk(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):V
- requestWriting(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):Z
- requestWritingStatus(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.FileDocumentManager$WriteAccessStatus
- saveAllDocuments():V
- saveAllDocuments(Z):V
- saveDocument(com.intellij.openapi.editor.Document):V
- saveDocument(com.intellij.openapi.editor.Document,Z):V
- saveDocumentAsIs(com.intellij.openapi.editor.Document):V
- saveDocuments(java.util.function.Predicate):V
f:com.intellij.openapi.fileEditor.impl.FileEditorManagerImplKt
- sf:reopenVirtualFileEditor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.openapi.fileEditor.impl.FileOffsetsManager
- <init>():V
- getConvertedOffset(com.intellij.openapi.vfs.VirtualFile,I):I
- s:getCorrespondingOffset(I[],I[],I):I
- s:getInstance():com.intellij.openapi.fileEditor.impl.FileOffsetsManager
- getOriginalOffset(com.intellij.openapi.vfs.VirtualFile,I):I
- s:loadLineOffsets(java.nio.CharBuffer,J):com.intellij.openapi.fileEditor.impl.FileOffsetsManager$LineOffsets
f:com.intellij.openapi.fileEditor.impl.FileOffsetsManager$LineOffsets
- f:myConvertedLineOffsets:I[]
- f:myFileModificationStamp:J
- f:myLineOffsetsAreTheSame:Z
- f:myOriginalLineOffsets:I[]
f:com.intellij.openapi.fileEditor.impl.FocusBasedCurrentEditorProvider
- com.intellij.openapi.fileEditor.impl.CurrentEditorProvider
- <init>():V
- getCurrentEditor(com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.FileEditor
f:com.intellij.openapi.fileEditor.impl.HTMLEditorProvider
- com.intellij.openapi.fileEditor.FileEditorProvider
- com.intellij.openapi.project.DumbAware
- sf:Companion:com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Companion
- sf:JS_FUNCTION_NAME:java.lang.String
- <init>():V
- accept(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- acceptRequiresReadAction():Z
- createEditor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor
- getEditorTypeId():java.lang.String
- getPolicy():com.intellij.openapi.fileEditor.FileEditorPolicy
- sf:openEditor(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request):com.intellij.openapi.fileEditor.FileEditor
- sf:openEditor(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- sf:openEditor(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String):V
f:com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Companion
- f:openEditor(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request):com.intellij.openapi.fileEditor.FileEditor
- f:openEditor(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- f:openEditor(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String):V
- bs:openEditor$default(com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Companion,com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,I,java.lang.Object):V
com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$JsQueryHandler
- a:query(J,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request
- sf:Companion:com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request$Companion
- sf:html(java.lang.String):com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request
- sf:url(java.lang.String):com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request
- f:withQueryHandler(com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$JsQueryHandler):com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request
- f:withTimeoutHtml(java.lang.String):com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request
f:com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request$Companion
- f:html(java.lang.String):com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request
- f:url(java.lang.String):com.intellij.openapi.fileEditor.impl.HTMLEditorProvider$Request
c:com.intellij.openapi.fileEditor.impl.IdeUiServiceImpl
- com.intellij.ide.ui.IdeUiService
- <init>():V
- askForUnlock(com.intellij.openapi.project.Project,java.util.List):com.intellij.openapi.fileEditor.UnlockOption
- browse(java.lang.String):V
- browse(java.net.URL):V
- chooseFile(com.intellij.openapi.fileChooser.FileChooserDescriptor,javax.swing.JComponent,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- chooseFiles(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile[]
- createAsyncDataContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DataContext
- createCustomizedDataContext(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.DataProvider):com.intellij.openapi.actionSystem.DataContext
- createUiDataContext(java.awt.Component):com.intellij.openapi.actionSystem.DataContext
- getComponentFromRecentMouseEvent():java.awt.Component
- getPlainProxyPassword():java.lang.String
- getProxyList(java.net.URL):java.util.List
- getProxyLogin():java.lang.String
- getSslContext():javax.net.ssl.SSLContext
- getSslSocketFactory():javax.net.ssl.SSLSocketFactory
- initUpdateSession(com.intellij.openapi.actionSystem.AnActionEvent):V
- isFileRecentlyChanged(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- isProxyAuth():Z
- isUseSafeWrite():Z
- logIdeScriptUsageEvent(java.lang.Class):V
- notifyByBalloon(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.ui.MessageType,java.lang.String,javax.swing.Icon,javax.swing.event.HyperlinkListener):Z
- openHttpConnection(java.lang.String):java.net.URLConnection
- performActionDumbAwareWithCallbacks(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent):V
- prepareURL(java.lang.String):V
- revealFile(java.nio.file.Path):V
- showErrorDialog(java.lang.String,java.lang.String):Z
- showErrorHint(com.intellij.openapi.editor.Editor,java.lang.String):V
- showRefactoringMessageDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,Z,com.intellij.openapi.project.Project):V
- systemNotify(java.lang.String,java.lang.String):V
f:com.intellij.openapi.fileEditor.impl.JComponentEditorProviderUtils
- sf:INSTANCE:com.intellij.openapi.fileEditor.impl.JComponentEditorProviderUtils
- f:openEditor(com.intellij.openapi.project.Project,java.lang.String,javax.swing.JComponent,com.intellij.openapi.fileTypes.FileType):com.intellij.openapi.fileEditor.FileEditor[]
- bs:openEditor$default(com.intellij.openapi.fileEditor.impl.JComponentEditorProviderUtils,com.intellij.openapi.project.Project,java.lang.String,javax.swing.JComponent,com.intellij.openapi.fileTypes.FileType,I,java.lang.Object):com.intellij.openapi.fileEditor.FileEditor[]
f:com.intellij.openapi.fileEditor.impl.JComponentFileEditor
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.fileEditor.FileEditor
- <init>(com.intellij.openapi.vfs.VirtualFile,javax.swing.JComponent):V
- <init>(com.intellij.openapi.vfs.VirtualFile,javax.swing.JComponent,java.lang.String):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- dispose():V
- getComponent():javax.swing.JComponent
- getCurrentLocation():com.intellij.openapi.fileEditor.FileEditorLocation
- getFile():com.intellij.openapi.vfs.VirtualFile
- getName():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- isModified():Z
- isValid():Z
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- setState(com.intellij.openapi.fileEditor.FileEditorState):V
c:com.intellij.openapi.fileEditor.impl.JComponentFileType
- com.intellij.openapi.fileTypes.ex.FakeFileType
- sf:Companion:com.intellij.openapi.fileEditor.impl.JComponentFileType$Companion
- pf:description:java.lang.String
- pf:icon:javax.swing.Icon
- pf:name:java.lang.String
- <init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- b:<init>(java.lang.String,java.lang.String,javax.swing.Icon,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- getDescription():java.lang.String
- getIcon():javax.swing.Icon
- getName():java.lang.String
- isMyFileType(com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.openapi.fileEditor.impl.JComponentFileType$Companion
- f:getINSTANCE():com.intellij.openapi.fileEditor.impl.JComponentFileType
e:com.intellij.openapi.fileEditor.impl.MultilineWrapMode
- java.lang.Enum
- sf:Auto:com.intellij.openapi.fileEditor.impl.MultilineWrapMode
- sf:DoNotWrap:com.intellij.openapi.fileEditor.impl.MultilineWrapMode
- sf:Wrap:com.intellij.openapi.fileEditor.impl.MultilineWrapMode
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.fileEditor.impl.MultilineWrapMode
- s:values():com.intellij.openapi.fileEditor.impl.MultilineWrapMode[]
a:com.intellij.openapi.fileEditor.impl.http.LocalFileFinder
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:findLocalFile(com.intellij.util.Url,com.intellij.openapi.project.Project):com.intellij.openapi.vfs.VirtualFile
a:com.intellij.openapi.fileEditor.impl.tabActions.base.EditorTabAction
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.project.DumbAware
- <init>(I,com.intellij.openapi.fileEditor.impl.tabActions.base.EditorTabActionFactory):V
- f:getMaxCount():I
com.intellij.openapi.fileEditor.impl.tabActions.base.EditorTabActionFactory
- a:createTabAction(I):com.intellij.openapi.fileEditor.impl.tabActions.base.EditorTabBaseAction
- a:createTabMoreAction(I):com.intellij.openapi.fileEditor.impl.tabActions.base.EditorTabBaseAction
a:com.intellij.openapi.fileEditor.impl.tabActions.base.EditorTabBaseAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.fileEditor.impl.tabActions.base.EditorTabDataProvider):V
- pf:getList(com.intellij.openapi.actionSystem.AnActionEvent):java.util.List
- f:getProvider():com.intellij.openapi.fileEditor.impl.tabActions.base.EditorTabDataProvider
com.intellij.openapi.fileEditor.impl.tabActions.base.EditorTabDataProvider
- a:getList(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.List
com.intellij.openapi.fileEditor.impl.text.CodeFoldingState
- a:equals(java.lang.Object):Z
- a:hashCode():I
- a:setToEditor(com.intellij.openapi.editor.Editor):V
c:com.intellij.openapi.fileEditor.impl.text.FileDropHandler
- com.intellij.openapi.editor.EditorDropHandler
- <init>(com.intellij.openapi.editor.Editor):V
- canHandleDrop(java.awt.datatransfer.DataFlavor[]):Z
- handleDrop(java.awt.datatransfer.Transferable,com.intellij.openapi.project.Project,com.intellij.openapi.fileEditor.impl.EditorWindow):V
f:com.intellij.openapi.fileEditor.impl.text.LargeFileEditorProvider
- com.intellij.openapi.fileEditor.impl.text.TextEditorProvider
- <init>():V
- accept(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- createEditor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor
- getEditorTypeId():java.lang.String
com.intellij.openapi.fileEditor.impl.text.QuickDefinitionProvider
com.intellij.openapi.fileEditor.impl.text.TextBasedFileEditorProvider
c:com.intellij.openapi.fileEditor.impl.text.TextEditorImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.fileEditor.TextEditor
- sf:Companion:com.intellij.openapi.fileEditor.impl.text.TextEditorImpl$Companion
- pf:file:com.intellij.openapi.vfs.VirtualFile
- pf:project:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,kotlin.Pair):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- f:canNavigateTo(com.intellij.pom.Navigatable):Z
- dispose():V
- f:firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object):V
- getComponent():com.intellij.openapi.fileEditor.impl.text.TextEditorComponent
- getCurrentLocation():com.intellij.openapi.fileEditor.FileEditorLocation
- getEditor():com.intellij.openapi.editor.ex.EditorEx
- getFile():com.intellij.openapi.vfs.VirtualFile
- getName():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getState(com.intellij.openapi.fileEditor.FileEditorStateLevel):com.intellij.openapi.fileEditor.FileEditorState
- getStructureViewBuilder():com.intellij.ide.structureView.StructureViewBuilder
- f:isEditorLoaded():Z
- isModified():Z
- isValid():Z
- f:navigateTo(com.intellij.pom.Navigatable):V
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- setState(com.intellij.openapi.fileEditor.FileEditorState):V
- setState(com.intellij.openapi.fileEditor.FileEditorState,Z):V
- f:updateModifiedProperty():V
f:com.intellij.openapi.fileEditor.impl.text.TextEditorImpl$Companion
c:com.intellij.openapi.fileEditor.impl.text.TextEditorProvider
- com.intellij.openapi.fileEditor.AsyncFileEditorProvider
- com.intellij.openapi.fileEditor.ex.StructureViewFileEditorProvider
- com.intellij.openapi.fileEditor.impl.DefaultPlatformFileEditorProvider
- com.intellij.openapi.fileEditor.impl.text.QuickDefinitionProvider
- com.intellij.openapi.fileEditor.impl.text.TextBasedFileEditorProvider
- sf:Companion:com.intellij.openapi.fileEditor.impl.text.TextEditorProvider$Companion
- <init>():V
- accept(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- f:acceptRequiresReadAction():Z
- createEditor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor
- createFileEditor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document,kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):java.lang.Object
- p:createWrapperForEditor(com.intellij.openapi.editor.Editor):com.intellij.openapi.fileEditor.impl.text.TextEditorProvider$EditorWrapper
- sf:getDocuments(com.intellij.openapi.fileEditor.FileEditor):com.intellij.openapi.editor.Document[]
- getEditorTypeId():java.lang.String
- sf:getInstance():com.intellij.openapi.fileEditor.impl.text.TextEditorProvider
- getPolicy():com.intellij.openapi.fileEditor.FileEditorPolicy
- getStateImpl(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.fileEditor.FileEditorStateLevel):com.intellij.openapi.fileEditor.impl.text.TextEditorState
- getStructureViewBuilder(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.ide.structureView.StructureViewBuilder
- getTextEditor(com.intellij.openapi.editor.Editor):com.intellij.openapi.fileEditor.TextEditor
- sf:isTextFile(com.intellij.openapi.vfs.VirtualFile):Z
- readState(org.jdom.Element,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditorState
- setStateImpl(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.fileEditor.impl.text.TextEditorState,Z):V
- writeState(com.intellij.openapi.fileEditor.FileEditorState,com.intellij.openapi.project.Project,org.jdom.Element):V
f:com.intellij.openapi.fileEditor.impl.text.TextEditorProvider$Companion
- f:getDocuments(com.intellij.openapi.fileEditor.FileEditor):com.intellij.openapi.editor.Document[]
- f:getInstance():com.intellij.openapi.fileEditor.impl.text.TextEditorProvider
- f:isTextFile(com.intellij.openapi.vfs.VirtualFile):Z
pc:com.intellij.openapi.fileEditor.impl.text.TextEditorProvider$EditorWrapper
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.fileEditor.TextEditor
- <init>(com.intellij.openapi.fileEditor.impl.text.TextEditorProvider,com.intellij.openapi.editor.Editor):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- canNavigateTo(com.intellij.pom.Navigatable):Z
- dispose():V
- getComponent():javax.swing.JComponent
- getEditor():com.intellij.openapi.editor.Editor
- getFile():com.intellij.openapi.vfs.VirtualFile
- getName():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getState(com.intellij.openapi.fileEditor.FileEditorStateLevel):com.intellij.openapi.fileEditor.FileEditorState
- getStructureViewBuilder():com.intellij.ide.structureView.StructureViewBuilder
- isModified():Z
- f:isValid():Z
- navigateTo(com.intellij.pom.Navigatable):V
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- setState(com.intellij.openapi.fileEditor.FileEditorState):V
- setState(com.intellij.openapi.fileEditor.FileEditorState,Z):V
f:com.intellij.openapi.fileEditor.impl.text.TextEditorState
- com.intellij.openapi.fileEditor.FileEditorState
- <init>():V
- canBeMergedWith(com.intellij.openapi.fileEditor.FileEditorState,com.intellij.openapi.fileEditor.FileEditorStateLevel):Z
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.openapi.fileEditor.impl.zoomIndicator.ZoomIndicatorManager
- sf:Companion:com.intellij.openapi.fileEditor.impl.zoomIndicator.ZoomIndicatorManager$Companion
- sf:SUPPRESS_ZOOM_INDICATOR:com.intellij.openapi.util.Key
- sf:SUPPRESS_ZOOM_INDICATOR_ONCE:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project):V
- f:cancelCurrentPopup():V
- f:createOrGetBalloon(com.intellij.openapi.editor.impl.EditorImpl):com.intellij.openapi.ui.popup.Balloon
- f:getBalloon():com.intellij.openapi.ui.popup.Balloon
- f:getEditor():com.intellij.openapi.editor.ex.EditorEx
- f:setBalloon(com.intellij.openapi.ui.popup.Balloon):V
- f:setEditor(com.intellij.openapi.editor.ex.EditorEx):V
f:com.intellij.openapi.fileEditor.impl.zoomIndicator.ZoomIndicatorManager$Companion
com.intellij.openapi.fileTypes.ex.ExternalizableFileType
- com.intellij.openapi.util.JDOMExternalizable
- a:isModified():Z
- a:markDefaultSettings():V
f:com.intellij.openapi.fileTypes.ex.FileTypeChooser
- com.intellij.openapi.ui.DialogWrapper
- b:$$$getRootComponent$$$():javax.swing.JComponent
- s:associateFileType(java.lang.String):com.intellij.openapi.fileTypes.FileType
- s:getKnownFileTypeOrAssociate(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.fileTypes.FileType
- s:getKnownFileTypeOrAssociate(com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.project.Project):com.intellij.openapi.fileTypes.FileType
- s:getKnownFileTypeOrAssociate(java.lang.String):com.intellij.openapi.fileTypes.FileType
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelectedType():com.intellij.openapi.fileTypes.FileType
c:com.intellij.openapi.fileTypes.impl.AbstractFileType
- com.intellij.openapi.fileTypes.PlainTextLikeFileType
- com.intellij.openapi.fileTypes.UserFileType
- com.intellij.openapi.fileTypes.ex.ExternalizableFileType
- com.intellij.openapi.fileTypes.impl.CustomSyntaxTableFileType
- <init>(com.intellij.ide.highlighter.custom.SyntaxTable):V
- clone():com.intellij.openapi.fileTypes.impl.AbstractFileType
- copyFrom(com.intellij.openapi.fileTypes.UserFileType):V
- equals(java.lang.Object):Z
- getCommenter():com.intellij.lang.Commenter
- getEditor():com.intellij.openapi.options.SettingsEditor
- getSyntaxTable():com.intellij.ide.highlighter.custom.SyntaxTable
- hashCode():I
- isBinary():Z
- isModified():Z
- markDefaultSettings():V
- readExternal(org.jdom.Element):V
- setCommenter(com.intellij.lang.Commenter):V
- setSyntaxTable(com.intellij.ide.highlighter.custom.SyntaxTable):V
- writeExternal(org.jdom.Element):V
f:com.intellij.openapi.fileTypes.impl.DetectedByContentFileType
- com.intellij.openapi.fileTypes.FileType
- sf:INSTANCE:com.intellij.openapi.fileTypes.impl.DetectedByContentFileType
- getDefaultExtension():java.lang.String
- getDescription():java.lang.String
- getDisplayName():java.lang.String
- getIcon():javax.swing.Icon
- getName():java.lang.String
- isBinary():Z
f:com.intellij.openapi.fileTypes.impl.FileTypeBean
- com.intellij.openapi.extensions.PluginAware
- extensions:java.lang.String
- fieldName:java.lang.String
- fileNames:java.lang.String
- fileNamesCaseInsensitive:java.lang.String
- hashBangs:java.lang.String
- implementationClass:java.lang.String
- language:java.lang.String
- name:java.lang.String
- patterns:java.lang.String
- <init>():V
- getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- getPluginId():com.intellij.openapi.extensions.PluginId
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
c:com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl
- com.intellij.openapi.fileTypes.ex.FileTypeManagerEx
- com.intellij.openapi.components.PersistentStateComponent
- com.intellij.openapi.extensions.ExtensionPointListener
- p:<init>(kotlinx.coroutines.CoroutineScope):V
- associate(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.fileTypes.FileNameMatcher):V
- drainReDetectQueue():V
- extensionAdded(com.intellij.openapi.fileTypes.impl.FileTypeBean,com.intellij.openapi.extensions.PluginDescriptor):V
- extensionRemoved(com.intellij.openapi.fileTypes.impl.FileTypeBean,com.intellij.openapi.extensions.PluginDescriptor):V
- findFileTypeByLanguage(com.intellij.lang.Language):com.intellij.openapi.fileTypes.LanguageFileType
- findFileTypeByName(java.lang.String):com.intellij.openapi.fileTypes.FileType
- findPluginDescriptor(com.intellij.openapi.fileTypes.FileType):com.intellij.openapi.extensions.PluginDescriptor
- fireBeforeFileTypesChanged():V
- fireFileTypesChanged():V
- freezeFileTypeTemporarilyIn(com.intellij.openapi.vfs.VirtualFile,java.lang.Runnable):V
- getAssociations(com.intellij.openapi.fileTypes.FileType):java.util.List
- getExtension(java.lang.String):java.lang.String
- getFileTypeByExtension(java.lang.String):com.intellij.openapi.fileTypes.FileType
- getFileTypeByFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.FileType
- getFileTypeByFile(com.intellij.openapi.vfs.VirtualFile,B[]):com.intellij.openapi.fileTypes.FileType
- getFileTypeByFileName(java.lang.CharSequence):com.intellij.openapi.fileTypes.FileType
- getFileTypeByFileName(java.lang.String):com.intellij.openapi.fileTypes.FileType
- getIgnoredFilesList():java.lang.String
- getKnownFileTypeOrAssociate(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.fileTypes.FileType
- getRegisteredFileTypes():com.intellij.openapi.fileTypes.FileType[]
- getState():org.jdom.Element
- getStdFileType(java.lang.String):com.intellij.openapi.fileTypes.FileType
- initializeComponent():V
- isFileIgnored(com.intellij.openapi.vfs.VirtualFile):Z
- isFileIgnored(java.lang.String):Z
- isFileOfType(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileTypes.FileType):Z
- isIgnoredFilesListEqualToCurrent(java.lang.String):Z
- loadState(org.jdom.Element):V
- makeFileTypesChange(java.lang.String,java.lang.Runnable):V
- registerFileType(com.intellij.openapi.fileTypes.FileType,java.util.List,com.intellij.openapi.Disposable,com.intellij.openapi.extensions.PluginDescriptor):V
- removeAssociation(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.fileTypes.FileNameMatcher):V
- removePlainTextAssociationsForFile(java.lang.CharSequence):V
- setIgnoredFilesList(java.lang.String):V
- unregisterFileType(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.extensions.PluginDescriptor):V
com.intellij.openapi.fileTypes.impl.FileTypeOverrider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getOverriddenFileType(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.FileType
c:com.intellij.openapi.fileTypes.impl.FileTypeRenderer
- com.intellij.ui.SimpleListCellRenderer
- <init>():V
- <init>(javax.swing.ListModel):V
- customize(javax.swing.JList,com.intellij.openapi.fileTypes.FileType,I,Z,Z):V
com.intellij.openapi.fileTypes.impl.FileTypeSelectable
- a:selectFileType(com.intellij.openapi.fileTypes.FileType):V
c:com.intellij.openapi.fileTypes.impl.HashBangFileTypeDetector
- com.intellij.openapi.fileTypes.FileTypeRegistry$FileTypeDetector
- <init>(com.intellij.openapi.fileTypes.FileType,java.lang.String):V
- detect(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.io.ByteSequence,java.lang.CharSequence):com.intellij.openapi.fileTypes.FileType
- getDesiredContentPrefixLength():I
- f:getFileType():com.intellij.openapi.fileTypes.FileType
- f:getMarker():java.lang.String
a:com.intellij.openapi.keymap.ex.KeymapManagerEx
- com.intellij.openapi.keymap.KeymapManager
- <init>():V
- a:addWeakListener(com.intellij.openapi.keymap.KeymapManagerListener):V
- a:getAllKeymaps():com.intellij.openapi.keymap.Keymap[]
- s:getInstanceEx():com.intellij.openapi.keymap.ex.KeymapManagerEx
- a:getSchemeManager():com.intellij.openapi.options.SchemeManager
- a:removeWeakListener(com.intellij.openapi.keymap.KeymapManagerListener):V
- a:setActiveKeymap(com.intellij.openapi.keymap.Keymap):V
a:com.intellij.openapi.keymap.impl.ActionShortcutRestrictions
- <init>():V
- a:getForActionId(java.lang.String):com.intellij.openapi.keymap.impl.ShortcutRestrictions
- s:getInstance():com.intellij.openapi.keymap.impl.ActionShortcutRestrictions
c:com.intellij.openapi.keymap.impl.ActionShortcutRestrictionsImpl
- com.intellij.openapi.keymap.impl.ActionShortcutRestrictions
- <init>():V
- getForActionId(java.lang.String):com.intellij.openapi.keymap.impl.ShortcutRestrictions
f:com.intellij.openapi.keymap.impl.BundledKeymapBean
- file:java.lang.String
c:com.intellij.openapi.keymap.impl.DefaultKeymap
- sf:Companion:com.intellij.openapi.keymap.impl.DefaultKeymap$Companion
- <init>():V
- getDefaultKeymapName():java.lang.String
- sf:getInstance():com.intellij.openapi.keymap.impl.DefaultKeymap
- getKeymapPresentableName(com.intellij.openapi.keymap.impl.KeymapImpl):java.lang.String
f:com.intellij.openapi.keymap.impl.DefaultKeymap$Companion
- f:getInstance():com.intellij.openapi.keymap.impl.DefaultKeymap
- f:isBundledKeymapHidden(java.lang.String):Z
c:com.intellij.openapi.keymap.impl.DefaultKeymapImpl
- com.intellij.openapi.keymap.impl.KeymapImpl
- <init>(com.intellij.configurationStore.SchemeDataHolder,com.intellij.openapi.keymap.impl.DefaultKeymap,com.intellij.openapi.extensions.PluginDescriptor):V
- p:findParentScheme(java.lang.String):com.intellij.openapi.keymap.Keymap
- f:getCanModify():Z
- f:getPlugin():com.intellij.openapi.extensions.PluginDescriptor
- getPresentableName():java.lang.String
- getSchemeState():com.intellij.openapi.options.SchemeState
- p:readExternal(org.jdom.Element,java.util.Map,kotlin.jvm.functions.Function1):V
- f:setCanModify(Z):V
f:com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher
- sf:Companion:com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher$Companion
- <init>(com.intellij.ide.IdeEventQueue):V
- f:dispatchKeyEvent(java.awt.event.KeyEvent):Z
- sf:hasMnemonicInWindow(java.awt.Component,java.awt.event.KeyEvent):Z
- sf:isModalContext(java.awt.Component):Z
- f:isPressedWasProcessed():Z
- f:isReady():Z
- f:isWaitingForSecondKeyStroke():Z
- f:processAction(java.awt.event.InputEvent,com.intellij.openapi.keymap.impl.ActionProcessor):Z
- f:updateCurrentContext(java.awt.Component,com.intellij.openapi.actionSystem.Shortcut):V
f:com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher$Companion
- f:hasMnemonicInWindow(java.awt.Component,java.awt.event.KeyEvent):Z
- f:isAltGrLayout(java.awt.Component):Z
- f:isModalContext(java.awt.Component):Z
- f:removeAltGraph(java.awt.event.InputEvent):Z
f:com.intellij.openapi.keymap.impl.IdeMouseEventDispatcher
- <init>():V
- blockNextEvents(java.awt.event.MouseEvent,com.intellij.ide.IdeEventQueue$BlockMode):V
- dispatchMouseEvent(java.awt.event.MouseEvent):Z
- s:isDiagramViewComponent(java.awt.Component):Z
- s:patchClickCount(java.awt.event.MouseEvent):Z
- s:requestFocusInNonFocusedWindow(java.awt.event.MouseEvent):V
- resetHorScrollingTracker():V
c:com.intellij.openapi.keymap.impl.KeymapImpl
- com.intellij.openapi.options.ExternalizableSchemeAdapter
- com.intellij.configurationStore.SerializableScheme
- com.intellij.openapi.keymap.Keymap
- <init>():V
- <init>(com.intellij.configurationStore.SchemeDataHolder):V
- b:<init>(com.intellij.configurationStore.SchemeDataHolder,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:addShortcut(java.lang.String,com.intellij.openapi.actionSystem.Shortcut):V
- f:canModify():Z
- f:clearOwnActionsId(java.lang.String):V
- f:clearOwnActionsIds():V
- p:convertKeyStroke(javax.swing.KeyStroke):javax.swing.KeyStroke
- p:convertMouseShortcut(com.intellij.openapi.actionSystem.MouseShortcut):com.intellij.openapi.actionSystem.MouseShortcut
- p:convertShortcut(com.intellij.openapi.actionSystem.Shortcut):com.intellij.openapi.actionSystem.Shortcut
- f:copy():com.intellij.openapi.keymap.impl.KeymapImpl
- f:copyTo(com.intellij.openapi.keymap.impl.KeymapImpl):com.intellij.openapi.keymap.impl.KeymapImpl
- deriveKeymap(java.lang.String):com.intellij.openapi.keymap.impl.KeymapImpl
- equals(java.lang.Object):Z
- p:findParentScheme(java.lang.String):com.intellij.openapi.keymap.Keymap
- getActionIdList():java.util.Set
- f:getActionIdList(com.intellij.openapi.actionSystem.Shortcut):java.util.List
- getActionIds():java.lang.String[]
- f:getActionIds(com.intellij.openapi.actionSystem.MouseShortcut):java.util.List
- f:getActionIds(com.intellij.openapi.actionSystem.Shortcut):java.lang.String[]
- f:getActionIds(javax.swing.KeyStroke):java.lang.String[]
- f:getActionIds(javax.swing.KeyStroke,javax.swing.KeyStroke):java.lang.String[]
- getCanModify():Z
- getConflicts(java.lang.String,com.intellij.openapi.actionSystem.KeyboardShortcut):java.util.Map
- f:getOwnActionIds():java.lang.String[]
- getParent():com.intellij.openapi.keymap.impl.KeymapImpl
- getPresentableName():java.lang.String
- getSchemeState():com.intellij.openapi.options.SchemeState
- getShortcuts(java.lang.String):com.intellij.openapi.actionSystem.Shortcut[]
- f:hasActionId(java.lang.String,com.intellij.openapi.actionSystem.MouseShortcut):Z
- f:hasOwnActionId(java.lang.String):Z
- f:hasShortcutDefined(java.lang.String):Z
- hashCode():I
- p:readExternal(org.jdom.Element,java.util.Map,kotlin.jvm.functions.Function1):V
- f:removeAllActionShortcuts(java.lang.String):V
- f:removeShortcut(java.lang.String,com.intellij.openapi.actionSystem.Shortcut):V
- setCanModify(Z):V
- writeScheme():org.jdom.Element
f:com.intellij.openapi.keymap.impl.KeymapManagerImpl
- com.intellij.openapi.keymap.ex.KeymapManagerEx
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.openapi.keymap.impl.KeymapManagerImpl$Companion
- sf:KEYMAP_FIELD:java.lang.String
- sf:KEYMAP_MANAGER_COMPONENT_NAME:java.lang.String
- sf:KEYMAP_STORAGE:java.lang.String
- <init>():V
- addWeakListener(com.intellij.openapi.keymap.KeymapManagerListener):V
- getActiveKeymap():com.intellij.openapi.keymap.Keymap
- getAllKeymaps():com.intellij.openapi.keymap.Keymap[]
- getKeymap(java.lang.String):com.intellij.openapi.keymap.Keymap
- f:getKeymaps(java.util.function.Predicate):java.util.List
- getSchemeManager():com.intellij.openapi.options.SchemeManager
- getState():org.jdom.Element
- sf:isKeymapManagerInitialized():Z
- loadState(org.jdom.Element):V
- removeKeymapManagerListener(com.intellij.openapi.keymap.KeymapManagerListener):V
- removeWeakListener(com.intellij.openapi.keymap.KeymapManagerListener):V
- setActiveKeymap(com.intellij.openapi.keymap.Keymap):V
- f:setKeymaps(java.util.List,com.intellij.openapi.keymap.Keymap,java.util.function.Predicate):V
f:com.intellij.openapi.keymap.impl.KeymapManagerImpl$Companion
- f:isKeymapManagerInitialized():Z
f:com.intellij.openapi.keymap.impl.KeymapManagerImplKt
- sf:KEYMAPS_DIR_PATH:java.lang.String
f:com.intellij.openapi.keymap.impl.MacOSDefaultKeymap
- com.intellij.openapi.keymap.impl.DefaultKeymapImpl
- sf:Companion:com.intellij.openapi.keymap.impl.MacOSDefaultKeymap$Companion
- <init>(com.intellij.configurationStore.SchemeDataHolder,com.intellij.openapi.keymap.impl.DefaultKeymap,com.intellij.openapi.extensions.PluginDescriptor):V
- sf:convertShortcutFromParent(com.intellij.openapi.actionSystem.Shortcut):com.intellij.openapi.actionSystem.Shortcut
f:com.intellij.openapi.keymap.impl.MacOSDefaultKeymap$Companion
- f:convertShortcutFromParent(com.intellij.openapi.actionSystem.Shortcut):com.intellij.openapi.actionSystem.Shortcut
f:com.intellij.openapi.keymap.impl.ModifierKeyDoubleClickHandler
- <init>():V
- s:getInstance():com.intellij.openapi.keymap.impl.ModifierKeyDoubleClickHandler
- s:getMultiCaretActionModifier():I
- isRunningAction():Z
- registerAction(java.lang.String,I,I):V
- registerAction(java.lang.String,I,I,Z):V
- unregisterAction(java.lang.String):V
f:com.intellij.openapi.keymap.impl.ModifierKeyDoubleClickHandler$MyAnActionListener
- com.intellij.openapi.actionSystem.ex.AnActionListener
- <init>():V
- beforeActionPerformed(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.keymap.impl.ModifierKeyDoubleClickHandler$MyEventDispatcher
- com.intellij.ide.IdeEventQueue$EventDispatcher
- <init>():V
- dispatch(java.awt.AWTEvent):Z
f:com.intellij.openapi.keymap.impl.ShortcutRestrictions
- sf:NO_RESTRICTIONS:com.intellij.openapi.keymap.impl.ShortcutRestrictions
- f:allowAbbreviation:Z
- f:allowChanging:Z
- f:allowKeyboardSecondStroke:Z
- f:allowKeyboardShortcut:Z
- f:allowMouseDoubleClick:Z
- f:allowMouseShortcut:Z
- <init>(Z,Z,Z,Z,Z,Z):V
f:com.intellij.openapi.keymap.impl.SystemShortcuts
- calculateConflicts(com.intellij.openapi.keymap.Keymap,java.lang.String):java.util.Map
- createKeymapConflictsActionFilter():com.intellij.openapi.util.Condition
- createKeystroke2SysShortcutMap():java.util.Map
- s:getInstance():com.intellij.openapi.keymap.impl.SystemShortcuts
- getUnmutedKeymapConflicts():java.util.Collection
- onUserPressedShortcut(com.intellij.openapi.keymap.Keymap,java.util.List,com.intellij.openapi.actionSystem.KeyboardShortcut):V
- updateKeymapConflicts(com.intellij.openapi.keymap.Keymap):V
f:com.intellij.openapi.keymap.impl.SystemShortcuts$ConflictItem
- <init>(javax.swing.KeyStroke,java.lang.String,java.lang.String[]):V
- getActionIds():java.lang.String[]
- getSysActionDesc():java.lang.String
- getSysKeyStroke():javax.swing.KeyStroke
f:com.intellij.openapi.keymap.impl.ui.ActionsTree
- <init>():V
- addTreeSelectionListener(javax.swing.event.TreeSelectionListener):V
- filter(java.lang.String,com.intellij.openapi.actionSystem.ex.QuickList[]):V
- filterTree(com.intellij.openapi.actionSystem.Shortcut,com.intellij.openapi.actionSystem.ex.QuickList[]):V
- getComponent():javax.swing.JComponent
- s:getEvenIcon(javax.swing.Icon):javax.swing.Icon
- getMainGroup():com.intellij.openapi.keymap.impl.ui.Group
- getSelectedActionId():java.lang.String
- getTree():javax.swing.JTree
- s:isShortcutCustomized(java.lang.String,com.intellij.openapi.keymap.Keymap):Z
- reset(com.intellij.openapi.keymap.Keymap,com.intellij.openapi.actionSystem.ex.QuickList[]):V
- reset(com.intellij.openapi.keymap.Keymap,com.intellij.openapi.actionSystem.ex.QuickList[],com.intellij.openapi.actionSystem.Shortcut):V
- selectAction(java.lang.String):V
- setBaseFilter(com.intellij.openapi.util.Condition):V
f:com.intellij.openapi.keymap.impl.ui.ActionsTreeUtil
- s:addAction(com.intellij.openapi.keymap.KeymapGroup,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.util.Condition):V
- s:addAction(com.intellij.openapi.keymap.KeymapGroup,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.util.Condition,Z):V
- s:createCorrectedGroup(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,java.util.List,java.util.List):com.intellij.openapi.keymap.impl.ui.Group
- s:createGroup(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,java.util.function.Supplier,Z,java.util.function.Predicate,Z):com.intellij.openapi.keymap.impl.ui.Group
- s:createGroup(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,javax.swing.Icon,Z,com.intellij.openapi.util.Condition):com.intellij.openapi.keymap.impl.ui.Group
- s:createGroup(com.intellij.openapi.actionSystem.ActionGroup,Z,com.intellij.openapi.util.Condition):com.intellij.openapi.keymap.impl.ui.Group
- s:createMainGroup(com.intellij.openapi.project.Project,com.intellij.openapi.keymap.Keymap,com.intellij.openapi.actionSystem.ex.QuickList[]):com.intellij.openapi.keymap.impl.ui.Group
- s:createMainGroup(com.intellij.openapi.project.Project,com.intellij.openapi.keymap.Keymap,com.intellij.openapi.actionSystem.ex.QuickList[],java.lang.String,Z,com.intellij.openapi.util.Condition):com.intellij.openapi.keymap.impl.ui.Group
- s:createNode(com.intellij.openapi.keymap.impl.ui.Group):javax.swing.tree.DefaultMutableTreeNode
- s:createPluginActionsMap():java.util.Map
- s:getActions(java.lang.String):com.intellij.openapi.actionSystem.AnAction[]
- s:getEditorGutterPopupMenu():java.lang.String
- s:getEditorPopup():java.lang.String
- s:getEditorTabPopup():java.lang.String
- s:getExperimentalToolbar():java.lang.String
- s:getExperimentalToolbarXamarin():java.lang.String
- s:getMainMenuTitle():java.lang.String
- s:getMainToolbar():java.lang.String
- s:getMainToolbarCenter():java.lang.String
- s:getMainToolbarLeft():java.lang.String
- s:getMainToolbarRight():java.lang.String
- s:getName(com.intellij.openapi.actionSystem.AnAction):java.lang.String
- s:getNavigationBarPopupMenu():java.lang.String
- s:getNavigationBarToolbar():java.lang.String
- s:getProjectViewPopup():java.lang.String
- s:getScopeViewPopupMenu():java.lang.String
- s:getTemplatePresentation(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.Presentation
- s:getTemplatePresentation(java.lang.String,java.lang.String):com.intellij.openapi.actionSystem.Presentation
- s:getTextToCompare(java.lang.String):java.lang.String
- s:isActionFiltered(com.intellij.openapi.actionSystem.ActionManager,com.intellij.openapi.keymap.Keymap,com.intellij.openapi.actionSystem.Shortcut,java.lang.String,Z):com.intellij.openapi.util.Condition
- s:isActionFiltered(com.intellij.openapi.actionSystem.ActionManager,com.intellij.openapi.keymap.Keymap,com.intellij.openapi.util.Condition):com.intellij.openapi.util.Condition
f:com.intellij.openapi.keymap.impl.ui.EditKeymapsDialog
- com.intellij.openapi.options.ex.SingleConfigurableEditor
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z):V
- show():V
f:com.intellij.openapi.keymap.impl.ui.Group
- com.intellij.openapi.keymap.KeymapGroup
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.util.function.Supplier):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- addActionId(java.lang.String):V
- addAll(com.intellij.openapi.keymap.impl.ui.Group):V
- addGroup(com.intellij.openapi.keymap.KeymapGroup):V
- addHyperlink(com.intellij.openapi.keymap.impl.ui.Hyperlink):V
- addQuickList(com.intellij.openapi.actionSystem.ex.QuickList):V
- addSeparator():V
- constructActionGroup(Z):com.intellij.openapi.actionSystem.ActionGroup
- containsId(java.lang.String):Z
- equals(java.lang.Object):Z
- getActionQualifiedPath(java.lang.String,Z):java.lang.String
- getChildren():java.util.ArrayList
- getIcon():javax.swing.Icon
- getId():java.lang.String
- getName():java.lang.String
- getQualifiedPath(Z):java.lang.String
- getSize():I
- hashCode():I
- initIds():java.util.Set
- isForceShowAsPopup():Z
- isRoot():Z
- normalizeSeparators():V
- setForceShowAsPopup(Z):V
a:com.intellij.openapi.keymap.impl.ui.Hyperlink
- p:<init>(java.lang.String):V
- p:<init>(javax.swing.Icon,java.lang.String):V
- p:<init>(javax.swing.Icon,java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- getIcon():javax.swing.Icon
- getLinkText():java.lang.String
- getTextAttributes():com.intellij.ui.SimpleTextAttributes
- a:onClick(java.awt.event.MouseEvent):V
com.intellij.openapi.keymap.impl.ui.KeymapListener
- sf:CHANGE_TOPIC:com.intellij.util.messages.Topic
- a:processCurrentKeymapChanged():V
- a:processCurrentKeymapChanged(com.intellij.openapi.actionSystem.ex.QuickList[]):V
- a:quickListRenamed(com.intellij.openapi.actionSystem.ex.QuickList,com.intellij.openapi.actionSystem.ex.QuickList):V
f:com.intellij.openapi.keymap.impl.ui.KeymapPanel
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.keymap.impl.ui.KeymapListener
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- <init>():V
- <init>(Z):V
- s:addKeyboardShortcut(java.lang.String,com.intellij.openapi.keymap.impl.ShortcutRestrictions,com.intellij.openapi.keymap.Keymap,java.awt.Component,com.intellij.openapi.actionSystem.KeyboardShortcut,com.intellij.openapi.keymap.impl.SystemShortcuts,com.intellij.openapi.actionSystem.ex.QuickList[]):V
- s:addKeyboardShortcut(java.lang.String,com.intellij.openapi.keymap.impl.ShortcutRestrictions,com.intellij.openapi.keymap.Keymap,java.awt.Component,com.intellij.openapi.actionSystem.ex.QuickList[]):V
- apply():V
- createComponent():javax.swing.JComponent
- s:createTreeExpander(com.intellij.openapi.keymap.impl.ui.ActionsTree):com.intellij.ide.TreeExpander
- dispose():V
- disposeUIResources():V
- enableSearch(java.lang.String):java.lang.Runnable
- getCurrentShortcuts(java.lang.String):com.intellij.openapi.actionSystem.Shortcut[]
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- isModified():Z
- processCurrentKeymapChanged():V
- processCurrentKeymapChanged(com.intellij.openapi.actionSystem.ex.QuickList[]):V
- quickListRenamed(com.intellij.openapi.actionSystem.ex.QuickList,com.intellij.openapi.actionSystem.ex.QuickList):V
- reset():V
- selectAction(java.lang.String):V
- showOption(java.lang.String):V
- updateUI():V
c:com.intellij.openapi.module.GeneralModuleType
- com.intellij.openapi.module.ModuleType
- sf:INSTANCE:com.intellij.openapi.module.GeneralModuleType
- sf:TYPE_ID:java.lang.String
- <init>():V
- createModuleBuilder():com.intellij.ide.util.projectWizard.ModuleBuilder
- getDescription():java.lang.String
- getName():java.lang.String
- getNodeIcon(Z):javax.swing.Icon
pc:com.intellij.openapi.module.GeneralModuleType$GeneralModuleBuilder
- com.intellij.ide.util.projectWizard.ModuleBuilder
- p:<init>():V
- getGroupName():java.lang.String
- getModuleType():com.intellij.openapi.module.ModuleType
- isAvailable():Z
a:com.intellij.openapi.options.BeanConfigurable
- com.intellij.openapi.options.ConfigurableWithOptionDescriptors
- com.intellij.openapi.options.UiDslUnnamedConfigurable
- com.intellij.openapi.options.UnnamedConfigurable
- p:<init>(java.lang.Object):V
- p:<init>(java.lang.Object,java.lang.String):V
- apply():V
- p:checkBox(java.lang.String,com.intellij.openapi.util.Getter,com.intellij.openapi.util.Setter):V
- p:checkBox(java.lang.String,java.lang.String):V
- p:checkBox(java.lang.String,kotlin.reflect.KMutableProperty0):V
- createComponent():javax.swing.JComponent
- createContent(com.intellij.ui.dsl.builder.Panel):V
- p:getInstance():java.lang.Object
- getOptionDescriptors(java.lang.String,java.util.function.Function):java.util.List
- getTitle():java.lang.String
- isModified():Z
- reset():V
- p:setTitle(java.lang.String):V
a:com.intellij.openapi.options.BoundCompositeConfigurable
- com.intellij.openapi.options.BoundConfigurable
- <init>(java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- pf:appendDslConfigurable(com.intellij.ui.dsl.builder.Panel,com.intellij.openapi.options.UnnamedConfigurable):V
- apply():V
- a:createConfigurables():java.util.List
- disposeUIResources():V
- f:getConfigurables():java.util.List
- isModified():Z
- reset():V
a:com.intellij.openapi.options.CompositeConfigurable
- com.intellij.openapi.options.BaseConfigurable
- <init>():V
- apply():V
- pa:createConfigurables():java.util.List
- disposeUIResources():V
- getConfigurables():java.util.List
- isModified():Z
- reset():V
a:com.intellij.openapi.options.ConfigurableBuilder
- com.intellij.openapi.options.UiDslUnnamedConfigurable$Simple
- com.intellij.openapi.options.ConfigurableWithOptionDescriptors
- com.intellij.openapi.options.UiDslUnnamedConfigurable
- p:<init>():V
- p:<init>(java.lang.String):V
- p:checkBox(java.lang.String,com.intellij.openapi.util.Getter,com.intellij.openapi.util.Setter):V
- p:checkBox(java.lang.String,kotlin.reflect.KMutableProperty0):V
- p:component(javax.swing.JComponent,java.util.function.Supplier,com.intellij.openapi.util.Setter,java.util.function.Supplier,com.intellij.openapi.util.Setter):V
- createContent(com.intellij.ui.dsl.builder.Panel):V
- getOptionDescriptors(java.lang.String,java.util.function.Function):java.util.List
- getTitle():java.lang.String
- p:setTitle(java.lang.String):V
c:com.intellij.openapi.options.SchemeConvertorEPBase
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- implementationClass:java.lang.String
- name:java.lang.String
- nameBundle:java.lang.String
- nameKey:java.lang.String
- <init>():V
- p:getImplementationClassName():java.lang.String
- getLocalizedName():java.lang.String
f:com.intellij.openapi.options.SchemeExporterEP
- com.intellij.openapi.options.SchemeConvertorEPBase
- schemeClass:java.lang.String
f:com.intellij.openapi.options.SchemeImportUtil
- <init>():V
- s:loadSchemeDom(com.intellij.openapi.vfs.VirtualFile):org.jdom.Element
- s:selectImportSource(java.lang.String[],java.awt.Component,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
f:com.intellij.openapi.options.SchemeImporterEP
- com.intellij.openapi.options.SchemeConvertorEPBase
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- schemeClass:java.lang.String
- <init>():V
- s:getExtensions(java.lang.Class):java.util.Collection
- s:getImporter(java.lang.String,java.lang.Class):com.intellij.openapi.options.SchemeImporter
a:com.intellij.openapi.options.TabbedConfigurable
- com.intellij.openapi.options.CompositeConfigurable
- com.intellij.openapi.options.Configurable$NoMargin
- com.intellij.openapi.options.Configurable$NoScroll
- p:myTabbedPane:com.intellij.ui.TabbedPaneWrapper
- <init>():V
- createComponent():javax.swing.JComponent
- p:createConfigurableTabs():V
- disposeUIResources():V
com.intellij.openapi.options.UiDslUnnamedConfigurable
- com.intellij.openapi.options.UnnamedConfigurable
- a:createContent(com.intellij.ui.dsl.builder.Panel):V
a:com.intellij.openapi.options.UiDslUnnamedConfigurable$Simple
- com.intellij.openapi.options.DslConfigurableBase
- com.intellij.openapi.options.UiDslUnnamedConfigurable
- <init>():V
- f:apply():V
- f:createPanel():com.intellij.openapi.ui.DialogPanel
- f:isModified():Z
- f:reset():V
f:com.intellij.openapi.options.advanced.AdvancedSettingBean
- com.intellij.openapi.extensions.PluginAware
- com.intellij.util.KeyedLazyInstance
- sf:Companion:com.intellij.openapi.options.advanced.AdvancedSettingBean$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- bundle:java.lang.String
- defaultValue:java.lang.String
- descriptionKey:java.lang.String
- enumClass:java.lang.String
- groupKey:java.lang.String
- id:java.lang.String
- property:java.lang.String
- service:java.lang.String
- titleKey:java.lang.String
- trailingLabelKey:java.lang.String
- <init>():V
- f:description():java.lang.String
- f:getAccessor():com.intellij.serialization.MutableAccessor
- f:getDefaultValueObject():java.lang.Object
- getInstance():com.intellij.openapi.options.advanced.AdvancedSettingBean
- getKey():java.lang.String
- f:getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- f:getServiceInstance():java.lang.Object
- f:group():java.lang.String
- f:isEnabled():Z
- f:isVisible():Z
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
- f:title():java.lang.String
- f:trailingLabel():java.lang.String
- f:type():com.intellij.openapi.options.advanced.AdvancedSettingType
- f:valueFromString(java.lang.String):java.lang.Object
- f:valueToString(java.lang.Object):java.lang.String
f:com.intellij.openapi.options.advanced.AdvancedSettingBean$Companion
f:com.intellij.openapi.options.advanced.AdvancedSettingsImpl
- com.intellij.openapi.options.advanced.AdvancedSettings
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponentWithModificationTracker
- <init>():V
- dispose():V
- getState():com.intellij.openapi.options.advanced.AdvancedSettingsImpl$AdvancedSettingsState
- getStateModificationCount():J
- f:isNonDefault(java.lang.String):Z
- loadState(com.intellij.openapi.options.advanced.AdvancedSettingsImpl$AdvancedSettingsState):V
- f:setSetting(java.lang.String,java.lang.Object,com.intellij.openapi.Disposable):V
- setSetting(java.lang.String,java.lang.Object,com.intellij.openapi.options.advanced.AdvancedSettingType):V
f:com.intellij.openapi.options.advanced.AdvancedSettingsImpl$AdvancedSettingsState
- <init>():V
- f:getSettings():java.util.Map
- f:setSettings(java.util.Map):V
c:com.intellij.openapi.options.colors.pages.GeneralColorsPage
- com.intellij.application.options.colors.InspectionColorSettingsPage
- com.intellij.openapi.options.colors.ColorSettingsPage
- com.intellij.psi.codeStyle.DisplayPrioritySortable
- com.intellij.ui.EditorCustomization
- sf:Companion:com.intellij.openapi.options.colors.pages.GeneralColorsPage$Companion
- <init>():V
- customize(com.intellij.openapi.editor.ex.EditorEx):V
- getAdditionalHighlightingTagToColorKeyMap():java.util.Map
- getAdditionalHighlightingTagToDescriptorMap():java.util.Map
- getAttributeDescriptors():com.intellij.openapi.options.colors.AttributesDescriptor[]
- getColorDescriptors():com.intellij.openapi.options.colors.ColorDescriptor[]
- getDemoText():java.lang.String
- getDisplayName():java.lang.String
- getHighlighter():com.intellij.openapi.fileTypes.SyntaxHighlighter
- getIcon():javax.swing.Icon
- getPriority():com.intellij.psi.codeStyle.DisplayPriority
f:com.intellij.openapi.options.colors.pages.GeneralColorsPage$Companion
- f:getDisplayNameText():java.lang.String
c:com.intellij.openapi.options.ex.ConfigurableCardPanel
- com.intellij.ui.CardLayoutPanel
- <init>():V
- p:addEPChangesListener(com.intellij.openapi.options.ex.ConfigurableWrapper):V
- p:create(com.intellij.openapi.options.Configurable):javax.swing.JComponent
- s:createConfigurableComponent(com.intellij.openapi.options.Configurable):javax.swing.JComponent
- dispose():V
- p:dispose(com.intellij.openapi.options.Configurable,javax.swing.JComponent):V
- p:prepare(com.intellij.openapi.options.Configurable):com.intellij.openapi.options.Configurable
- s:reset(com.intellij.openapi.options.Configurable):V
f:com.intellij.openapi.options.ex.ConfigurableExtensionPointUtil
- sf:CONFIGURABLE_ID_PREFIX:java.lang.String
- sf:ROOT_CONFIGURABLE_ID:java.lang.String
- s:buildConfigurablesList(java.util.List,com.intellij.openapi.options.ex.ConfigurableFilter):java.util.List
- s:createApplicationConfigurableForProvider(java.lang.Class):com.intellij.openapi.options.Configurable
- s:createProjectConfigurableForProvider(com.intellij.openapi.project.Project,java.lang.Class):com.intellij.openapi.options.Configurable
- s:getBundle(java.lang.String,java.lang.Iterable,java.util.ResourceBundle):java.util.ResourceBundle
- s:getConfigurableGroup(com.intellij.openapi.project.Project,Z):com.intellij.openapi.options.ConfigurableGroup
- s:getConfigurableGroup(java.util.List,com.intellij.openapi.project.Project):com.intellij.openapi.options.ConfigurableGroup
- s:getConfigurablePath(java.lang.Class,com.intellij.openapi.project.Project):java.lang.String
- s:groupConfigurables(java.util.List):java.util.Map
com.intellij.openapi.options.ex.ConfigurableFilter
- a:isIncluded(com.intellij.openapi.options.Configurable):Z
f:com.intellij.openapi.options.ex.ConfigurableGroupEP
- com.intellij.openapi.extensions.PluginAware
- bundle:java.lang.String
- descriptionKey:java.lang.String
- displayNameKey:java.lang.String
- helpTopic:java.lang.String
- id:java.lang.String
- parentId:java.lang.String
- weight:I
- <init>():V
- s:find(java.lang.String):com.intellij.openapi.options.ex.ConfigurableGroupEP
- getDescription():java.lang.String
- getDisplayName():java.lang.String
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
a:com.intellij.openapi.options.ex.ConfigurableVisitor
- java.util.function.Predicate
- sf:ALL:java.util.function.Predicate
- <init>():V
- pa:accept(com.intellij.openapi.options.Configurable):Z
- s:find(java.util.function.Predicate,java.util.List):com.intellij.openapi.options.Configurable
- s:find(java.util.function.Predicate,com.intellij.openapi.options.Configurable[]):com.intellij.openapi.options.Configurable
- f:find(com.intellij.openapi.options.ConfigurableGroup[]):com.intellij.openapi.options.Configurable
- s:findAll(java.util.function.Predicate,java.util.List):java.util.List
- s:findById(java.lang.String,java.util.List):com.intellij.openapi.options.Configurable
- s:findByType(java.lang.Class,java.util.List):com.intellij.openapi.options.Configurable
- s:getId(com.intellij.openapi.options.Configurable):java.lang.String
- test(com.intellij.openapi.options.Configurable):Z
c:com.intellij.openapi.options.ex.ConfigurableWrapper
- com.intellij.openapi.options.ConfigurableWithId
- com.intellij.openapi.options.SearchableConfigurable
- addChild(com.intellij.openapi.options.Configurable):com.intellij.openapi.options.ex.ConfigurableWrapper
- apply():V
- cancel():V
- s:cast(java.lang.Class,com.intellij.openapi.options.UnnamedConfigurable):java.lang.Object
- createComponent():javax.swing.JComponent
- s:createConfigurables(com.intellij.openapi.extensions.ExtensionPointName):java.util.List
- disposeUIResources():V
- enableSearch(java.lang.String):java.lang.Runnable
- focusOn(java.lang.String):V
- getConfigurable():com.intellij.openapi.options.UnnamedConfigurable
- getDisplayName():java.lang.String
- getDisplayNameFast():java.lang.String
- getExtensionPoint():com.intellij.openapi.options.ConfigurableEP
- getHelpTopic():java.lang.String
- getId():java.lang.String
- getMarkerText():java.lang.String
- getOriginalClass():java.lang.Class
- getParentId():java.lang.String
- getProject():com.intellij.openapi.project.Project
- getProviderClass():java.lang.String
- getRawConfigurable():com.intellij.openapi.options.UnnamedConfigurable
- getWeight():I
- s:hasOwnContent(com.intellij.openapi.options.UnnamedConfigurable):Z
- isModified():Z
- s:isNonDefaultProject(com.intellij.openapi.options.Configurable):Z
- reset():V
- setMarkerText(java.lang.String):V
- s:wrapConfigurable(com.intellij.openapi.options.ConfigurableEP):com.intellij.openapi.options.UnnamedConfigurable
- s:wrapConfigurable(com.intellij.openapi.options.ConfigurableEP,Z):com.intellij.openapi.options.UnnamedConfigurable
f:com.intellij.openapi.options.ex.GlassPanel
- javax.swing.JComponent
- <init>(javax.swing.JComponent):V
- addSpotlight(javax.swing.JComponent):V
- clear():V
- s:getArea(javax.swing.JComponent):D
- paintComponent(java.awt.Graphics):V
- paintSpotlight(java.awt.Graphics,javax.swing.JComponent):V
- removeSpotlight(javax.swing.JComponent):V
a:com.intellij.openapi.options.ex.Settings
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- p:<init>(java.util.List):V
- f:checkModified(java.lang.String):V
- pa:checkModifiedImpl(com.intellij.openapi.options.Configurable):V
- f:find(java.lang.Class):com.intellij.openapi.options.Configurable
- f:find(java.lang.String):com.intellij.openapi.options.Configurable
- f:getConfigurableWithInitializedUiComponent(java.lang.String,Z):com.intellij.openapi.options.Configurable
- pa:getConfigurableWithInitializedUiComponentImpl(com.intellij.openapi.options.Configurable,Z):com.intellij.openapi.options.Configurable
- reload():V
- revalidate():V
- f:select(com.intellij.openapi.options.Configurable):com.intellij.openapi.util.ActionCallback
- f:select(com.intellij.openapi.options.Configurable,java.lang.String):com.intellij.openapi.util.ActionCallback
- pa:selectImpl(com.intellij.openapi.options.Configurable):org.jetbrains.concurrency.Promise
- pa:setSearchText(java.lang.String):V
c:com.intellij.openapi.options.ex.SingleConfigurableEditor
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable,java.lang.String,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable,java.lang.String,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable,java.lang.String,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):V
- <init>(java.awt.Component,com.intellij.openapi.options.Configurable):V
- <init>(java.awt.Component,com.intellij.openapi.options.Configurable,java.lang.String):V
- <init>(java.awt.Component,com.intellij.openapi.options.Configurable,java.lang.String,Z):V
- <init>(java.awt.Component,com.intellij.openapi.options.Configurable,java.lang.String,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- ps:createDimensionKey(com.intellij.openapi.options.Configurable):java.lang.String
- dispose():V
- p:doOKAction():V
- getConfigurable():com.intellij.openapi.options.Configurable
- p:getDimensionServiceKey():java.lang.String
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getProject():com.intellij.openapi.project.Project
- p:init(com.intellij.openapi.options.Configurable):V
pc:com.intellij.openapi.options.ex.SingleConfigurableEditor$ApplyAction
- com.intellij.openapi.ui.DialogWrapper$DialogWrapperAction
- <init>(com.intellij.openapi.options.ex.SingleConfigurableEditor):V
- p:doAction(java.awt.event.ActionEvent):V
c:com.intellij.openapi.options.ex.SortedConfigurableGroup
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.ConfigurableGroup
- com.intellij.openapi.options.SearchableConfigurable$Parent$Abstract
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,I):V
- p:buildConfigurables():com.intellij.openapi.options.Configurable[]
- getDescription():java.lang.String
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- getWeight():I
com.intellij.openapi.options.newEditor.OptionsEditorColleague
- a:onErrorsChanged():org.jetbrains.concurrency.Promise
- a:onModifiedAdded(com.intellij.openapi.options.Configurable):org.jetbrains.concurrency.Promise
- a:onModifiedRemoved(com.intellij.openapi.options.Configurable):org.jetbrains.concurrency.Promise
- a:onSelected(com.intellij.openapi.options.Configurable,com.intellij.openapi.options.Configurable):org.jetbrains.concurrency.Promise
c:com.intellij.openapi.options.newEditor.OptionsEditorColleague$Adapter
- com.intellij.openapi.options.newEditor.OptionsEditorColleague
- <init>():V
- onErrorsChanged():org.jetbrains.concurrency.Promise
- onModifiedAdded(com.intellij.openapi.options.Configurable):org.jetbrains.concurrency.Promise
- onModifiedRemoved(com.intellij.openapi.options.Configurable):org.jetbrains.concurrency.Promise
- onSelected(com.intellij.openapi.options.Configurable,com.intellij.openapi.options.Configurable):org.jetbrains.concurrency.Promise
c:com.intellij.openapi.options.newEditor.SettingsDialog
- com.intellij.openapi.ui.DialogWrapper
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- sf:DIMENSION_KEY:java.lang.String
- <init>(com.intellij.openapi.project.Project,java.awt.Component,java.util.List,com.intellij.openapi.options.Configurable,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.options.Configurable,Z,Z):V
- <init>(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.options.Configurable,java.lang.String):V
- <init>(java.awt.Component,java.lang.String,com.intellij.openapi.options.Configurable,Z,Z):V
- addChildDisposable(com.intellij.openapi.Disposable):V
- applyAndClose(Z):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createSouthAdditionalPanel():javax.swing.JPanel
- p:createSouthPanel():javax.swing.JComponent
- p:createTitlePane():javax.swing.JComponent
- doCancelAction(java.awt.AWTEvent):V
- doOKAction():V
- p:getDimensionServiceKey():java.lang.String
- f:getEditor():com.intellij.openapi.options.newEditor.AbstractEditor
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getStyle():com.intellij.openapi.ui.DialogWrapper$DialogStyle
- p:setHelpTooltip(javax.swing.JButton):V
- p:treeViewFactory(com.intellij.openapi.options.newEditor.SettingsFilter,java.util.List):com.intellij.openapi.options.newEditor.SettingsTreeView
- p:tryAddOptionsListener(com.intellij.openapi.options.newEditor.OptionsEditorColleague):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
c:com.intellij.openapi.options.newEditor.SettingsDialogFactory
- sf:Companion:com.intellij.openapi.options.newEditor.SettingsDialogFactory$Companion
- <init>():V
- create(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.options.Configurable,Z,Z):com.intellij.openapi.ui.DialogWrapper
- create(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.options.Configurable,java.lang.String):com.intellij.openapi.ui.DialogWrapper
- create(com.intellij.openapi.project.Project,com.intellij.openapi.options.ConfigurableGroup[],com.intellij.openapi.options.Configurable,java.lang.String):com.intellij.openapi.ui.DialogWrapper
- create(java.awt.Component,java.lang.String,com.intellij.openapi.options.Configurable,Z,Z):com.intellij.openapi.ui.DialogWrapper
- sf:getInstance():com.intellij.openapi.options.newEditor.SettingsDialogFactory
f:com.intellij.openapi.options.newEditor.SettingsDialogFactory$Companion
- f:getInstance():com.intellij.openapi.options.newEditor.SettingsDialogFactory
a:com.intellij.openapi.options.newEditor.SettingsFilter
- com.intellij.ui.speedSearch.ElementFilter$Active$Impl
- f:contains(com.intellij.openapi.options.Configurable):Z
- f:isEmptyFilter():Z
- f:reload():V
- f:setFilterText(java.lang.String):V
- shouldBeShowing(com.intellij.ui.treeStructure.SimpleNode):Z
- f:update(java.lang.String):V
c:com.intellij.openapi.options.newEditor.SettingsTreeView
- javax.swing.JComponent
- com.intellij.openapi.Disposable
- com.intellij.openapi.options.newEditor.OptionsEditorColleague
- javax.accessibility.Accessible
- <init>(com.intellij.openapi.options.newEditor.SettingsFilter,java.util.List):V
- dispose():V
- doLayout():V
- getAccessibleContext():javax.accessibility.AccessibleContext
- onErrorsChanged():org.jetbrains.concurrency.Promise
- onModifiedAdded(com.intellij.openapi.options.Configurable):org.jetbrains.concurrency.Promise
- onModifiedRemoved(com.intellij.openapi.options.Configurable):org.jetbrains.concurrency.Promise
- onSelected(com.intellij.openapi.options.Configurable,com.intellij.openapi.options.Configurable):org.jetbrains.concurrency.Promise
- p:setProjectIcon(javax.swing.JLabel,com.intellij.openapi.options.Configurable,com.intellij.openapi.project.Project,Z):V
- updateUI():V
pf:com.intellij.openapi.options.newEditor.SettingsTreeView$AccessibleSettingsTreeView
- javax.swing.JComponent$AccessibleJComponent
- getAccessibleRole():javax.accessibility.AccessibleRole
f:com.intellij.openapi.preview.PreviewProviderId
c:com.intellij.openapi.progress.BackgroundTaskQueue
- pf:myProcessor:com.intellij.util.concurrency.QueueProcessor
- pf:myTitle:java.lang.String
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- clear():V
- isEmpty():Z
- run(com.intellij.openapi.progress.Task$Backgroundable):V
- run(com.intellij.openapi.progress.Task$Backgroundable,com.intellij.openapi.application.ModalityState,com.intellij.openapi.progress.ProgressIndicator):V
- setForceAsyncInTests(Z,com.intellij.openapi.Disposable):V
- waitForTasksToFinish():V
p:com.intellij.openapi.progress.BackgroundTaskQueue$TaskData
- java.util.function.Consumer
f:com.intellij.openapi.progress.ProgressKt
- sf:runBackgroundableTask(java.lang.String,com.intellij.openapi.project.Project,Z,kotlin.jvm.functions.Function1):V
- bs:runBackgroundableTask$default(java.lang.String,com.intellij.openapi.project.Project,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:runModalTask(java.lang.String,com.intellij.openapi.project.Project,Z,kotlin.jvm.functions.Function1):V
- bs:runModalTask$default(java.lang.String,com.intellij.openapi.project.Project,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):V
c:com.intellij.openapi.progress.impl.BackgroundableProcessIndicator
- com.intellij.openapi.progress.util.ProgressWindow
- <init>(com.intellij.openapi.progress.Task$Backgroundable):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.progress.TaskInfo):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.progress.TaskInfo,com.intellij.openapi.progress.PerformInBackgroundOption):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.progress.PerformInBackgroundOption,java.lang.String,java.lang.String,Z):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,Z):V
- background():V
- dispose():V
- p:initializeOnEdtIfNeeded():V
- isShowing():Z
- p:showDialog():V
f:com.intellij.openapi.progress.impl.CancellationCheck
- sf:Companion:com.intellij.openapi.progress.impl.CancellationCheck$Companion
- f:getCheckEnabled():kotlin.jvm.functions.Function0
- f:getThresholdMs():kotlin.jvm.functions.Function0
- f:getTrackTrace():kotlin.jvm.functions.Function0
- sf:runWithCancellationCheck(kotlin.jvm.functions.Function0):java.lang.Object
- f:withCancellationCheck(kotlin.jvm.functions.Function0):java.lang.Object
f:com.intellij.openapi.progress.impl.CancellationCheck$Companion
- f:runWithCancellationCheck(kotlin.jvm.functions.Function0):java.lang.Object
f:com.intellij.openapi.progress.impl.ProgressManagerImpl
- com.intellij.openapi.progress.impl.CoreProgressManager
- com.intellij.openapi.Disposable
- <init>():V
- executeProcessUnderProgress(java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):V
- hasUnsafeProgressIndicator():Z
- markProgressSafe(com.intellij.openapi.util.UserDataHolder):V
- runCheckCanceledHooks(com.intellij.openapi.progress.ProgressIndicator):Z
- runInReadActionWithWriteActionPriority(java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):Z
- runProcessWithProgressSynchronously(com.intellij.openapi.progress.Task):Z
a:com.intellij.openapi.progress.util.AtomicCancelableLazyValue
- <init>():V
- pa:compute():java.lang.Object
- s:createValue(com.intellij.openapi.util.NotNullFactory):com.intellij.openapi.progress.util.AtomicCancelableLazyValue
- f:getValue():java.lang.Object
- isComputed():Z
f:com.intellij.openapi.progress.util.ColorProgressBar
- javax.swing.JComponent
- sf:BLUE:java.awt.Color
- sf:GREEN:java.awt.Color
- sf:RED:java.awt.Color
- sf:RED_TEXT:java.awt.Color
- sf:YELLOW:java.awt.Color
- <init>():V
- getColor():java.awt.Color
- getFraction():D
- getMaximumSize():java.awt.Dimension
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- isIndeterminate():Z
- setColor(java.awt.Color):V
- setFraction(D):V
- setIndeterminate(Z):V
f:com.intellij.openapi.progress.util.DispatchThreadProgressWindow
- com.intellij.openapi.progress.util.ProgressWindow
- <init>(Z,com.intellij.openapi.project.Project):V
- setFraction(D):V
- setRunnable(java.lang.Runnable):V
- setText(java.lang.String):V
- setText2(java.lang.String):V
f:com.intellij.openapi.progress.util.PotemkinProgress
- com.intellij.openapi.progress.util.ProgressWindow
- com.intellij.openapi.progress.util.PingProgress
- <init>(java.lang.String,com.intellij.openapi.project.Project,javax.swing.JComponent,java.lang.String):V
- interact():V
- runInBackground(java.lang.Runnable):V
- runInSwingThread(java.lang.Runnable):V
f:com.intellij.openapi.progress.util.ProgressBarUtil
- sf:FAILED_VALUE:java.lang.String
- sf:INSTANCE:com.intellij.openapi.progress.util.ProgressBarUtil
- sf:PASSED_VALUE:java.lang.String
- sf:STATUS_KEY:java.lang.String
- sf:WARNING_VALUE:java.lang.String
com.intellij.openapi.progress.util.ProgressIndicatorListener
- cancelled():V
- installToProgress(com.intellij.openapi.wm.ex.ProgressIndicatorEx):V
- installToProgressIfPossible(com.intellij.openapi.progress.ProgressIndicator):V
- onFractionChanged(D):V
- stopped():V
- s:whenProgressFractionChanged(com.intellij.openapi.progress.ProgressIndicator,java.util.function.Consumer):V
c:com.intellij.openapi.progress.util.ProgressWindow
- com.intellij.openapi.Disposable
- com.intellij.openapi.application.impl.ModalContextProjectLocator
- com.intellij.openapi.progress.ProgressIndicator
- com.intellij.openapi.progress.util.ProgressIndicatorBase
- com.intellij.openapi.progress.util.ProgressIndicatorWithDelayedPresentation
- sf:TOPIC:com.intellij.util.messages.Topic
- p:myBackgrounded:Z
- pf:myProject:com.intellij.openapi.project.Project
- <init>(Z,com.intellij.openapi.project.Project):V
- <init>(Z,Z,com.intellij.openapi.project.Project):V
- <init>(Z,Z,com.intellij.openapi.project.Project,java.lang.String):V
- <init>(Z,Z,com.intellij.openapi.project.Project,javax.swing.JComponent,java.lang.String):V
- background():V
- dispose():V
- getTitle():java.lang.String
- p:initializeOnEdtIfNeeded():V
- p:isBackgrounded():Z
- isPartOf(javax.swing.JFrame,com.intellij.openapi.project.Project):Z
- isPopupWasShown():Z
- p:prepareShowDialog():V
- setDelayInMillis(I):V
- setFraction(D):V
- setIndeterminate(Z):V
- setText(java.lang.String):V
- setText2(java.lang.String):V
- setTitle(java.lang.String):V
- p:showDialog():V
- start():V
- startBlocking(java.lang.Runnable,java.util.concurrent.CompletableFuture):V
- stop():V
com.intellij.openapi.progress.util.ProgressWindow$Listener
- a:progressWindowCreated(com.intellij.openapi.progress.util.ProgressWindow):V
f:com.intellij.openapi.progress.util.SmoothProgressAdapter
- com.intellij.openapi.progress.util.AbstractProgressIndicatorExBase
- com.intellij.openapi.progress.StandardProgressIndicator
- com.intellij.openapi.progress.WrappedProgressIndicator
- com.intellij.openapi.wm.ex.ProgressIndicatorEx
- <init>(com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.project.Project):V
- cancel():V
- getOriginalProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
- isCanceled():Z
- isIndeterminate():Z
- setFraction(D):V
- setIndeterminate(Z):V
- setText(java.lang.String):V
- setText2(java.lang.String):V
- start():V
- startBlocking():V
- stop():V
f:com.intellij.openapi.progress.util.StatusBarProgress
- com.intellij.openapi.progress.util.ProgressIndicatorBase
- <init>():V
- setFraction(D):V
- setText(java.lang.String):V
- start():V
- stop():V
f:com.intellij.openapi.project.DumbUtilImpl
- <init>(com.intellij.openapi.project.Project):V
- mayUseIndices():Z
- s:waitForSmartMode(com.intellij.openapi.project.Project):V
f:com.intellij.openapi.project.NoAccessDuringPsiEvents
- <init>():V
- s:checkCallContext(com.intellij.util.indexing.ID):V
- s:checkCallContext(java.lang.String):V
- s:isInsideEventProcessing():Z
com.intellij.openapi.project.ProjectNameListener
- java.util.EventListener
- sf:Companion:com.intellij.openapi.project.ProjectNameListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- a:nameChanged(java.lang.String):V
f:com.intellij.openapi.project.ProjectNameListener$Companion
com.intellij.openapi.project.configuration.ConfigurationResult
com.intellij.openapi.project.configuration.ConfigurationResult$Failure
- com.intellij.openapi.project.configuration.ConfigurationResult
- a:getMessage():java.lang.String
com.intellij.openapi.project.configuration.ConfigurationResult$Success
- com.intellij.openapi.project.configuration.ConfigurationResult
f:com.intellij.openapi.project.configuration.ProjectConfigurationUtil
- sf:awaitCompleteProjectConfiguration(com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.project.impl.P3SupportKt
f:com.intellij.openapi.project.impl.ProjectMacrosUtil
- s:checkMacros(com.intellij.openapi.project.Project,java.util.Set):Z
- s:checkNonIgnoredMacros(com.intellij.openapi.project.Project,java.util.Set):Z
- s:showMacrosConfigurationDialog(com.intellij.openapi.project.Project,java.util.Collection):Z
f:com.intellij.openapi.project.impl.UndefinedMacrosConfigurable
- com.intellij.openapi.options.Configurable
- <init>(java.lang.String,java.util.Collection):V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- isModified():Z
- reset():V
f:com.intellij.openapi.roots.ProjectRootUtil
- <init>():V
- s:findSymlinkedFileInContent(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
f:com.intellij.openapi.roots.ui.configuration.SidePanelCountLabel
- javax.swing.JLabel
- <init>():V
- isSelected():Z
- setSelected(Z):V
c:com.intellij.openapi.roots.ui.configuration.SidePanelSeparator
- com.intellij.ui.SeparatorWithText
- <init>():V
- p:paintComponent(java.awt.Graphics):V
a:com.intellij.openapi.roots.ui.configuration.actions.AlignedIconWithTextAction
- com.intellij.openapi.roots.ui.configuration.actions.IconWithTextAction
- <init>():V
- s:align(javax.swing.JComponent):javax.swing.JComponent
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- s:createCustomComponentImpl(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
a:com.intellij.openapi.roots.ui.configuration.actions.AlignedIconWithTextAction$Group
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>():V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
a:com.intellij.openapi.roots.ui.configuration.actions.IconWithTextAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- p:<init>():V
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- p:<init>(java.util.function.Supplier):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- s:createCustomComponentImpl(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
c:com.intellij.openapi.ui.FrameWrapper
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.DataProvider
- pf:coroutineScope:kotlinx.coroutines.CoroutineScope
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,java.lang.String,javax.swing.JComponent):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,java.lang.String,javax.swing.JComponent,kotlinx.coroutines.CoroutineScope):V
- b:<init>(com.intellij.openapi.project.Project,java.lang.String,Z,java.lang.String,javax.swing.JComponent,kotlinx.coroutines.CoroutineScope,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:close():V
- f:closeOnEsc():V
- f:createContents():V
- p:createJDialog(com.intellij.openapi.wm.IdeFrame):javax.swing.JDialog
- p:createJFrame(com.intellij.openapi.wm.IdeFrame):javax.swing.JFrame
- dispose():V
- getComponent():javax.swing.JComponent
- getData(java.lang.String):java.lang.Object
- p:getDimensionKey():java.lang.String
- f:getFrame():java.awt.Window
- getPreferredFocusedComponent():javax.swing.JComponent
- pf:getStatusBar():com.intellij.openapi.wm.StatusBar
- f:getTitle():java.lang.String
- f:isActive():Z
- f:isDisposed():Z
- p:isDockWindow():Z
- p:loadFrameState(com.intellij.openapi.util.WindowState):V
- setComponent(javax.swing.JComponent):V
- f:setImage(java.awt.Image):V
- f:setImages(java.util.List):V
- f:setLocation(java.awt.Point):V
- f:setOnCloseHandler(java.util.function.BooleanSupplier):V
- setPreferredFocusedComponent(javax.swing.JComponent):V
- f:setSize(java.awt.Dimension):V
- f:setTitle(java.lang.String):V
- show():V
- f:show(Z):V
f:com.intellij.openapi.ui.VerticalSeparatorComponent
- javax.swing.JComponent
- <init>():V
- getPreferredSize():java.awt.Dimension
f:com.intellij.openapi.ui.WindowWrapperBuilder
- <init>(com.intellij.openapi.ui.WindowWrapper$Mode,javax.swing.JComponent):V
- build():com.intellij.openapi.ui.WindowWrapper
- setDimensionServiceKey(java.lang.String):com.intellij.openapi.ui.WindowWrapperBuilder
- setOnCloseHandler(com.intellij.openapi.util.BooleanGetter):com.intellij.openapi.ui.WindowWrapperBuilder
- setOnShowCallback(java.lang.Runnable):com.intellij.openapi.ui.WindowWrapperBuilder
- setParent(java.awt.Component):com.intellij.openapi.ui.WindowWrapperBuilder
- setPreferredFocusedComponent(com.intellij.openapi.util.Computable):com.intellij.openapi.ui.WindowWrapperBuilder
- setPreferredFocusedComponent(javax.swing.JComponent):com.intellij.openapi.ui.WindowWrapperBuilder
- setProject(com.intellij.openapi.project.Project):com.intellij.openapi.ui.WindowWrapperBuilder
- setTitle(java.lang.String):com.intellij.openapi.ui.WindowWrapperBuilder
f:com.intellij.openapi.ui.ex.MessagesEx
- com.intellij.openapi.ui.Messages
- <init>():V
- s:error(com.intellij.openapi.project.Project,java.lang.String):com.intellij.openapi.ui.ex.MessagesEx$MessageInfo
- s:error(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):com.intellij.openapi.ui.ex.MessagesEx$MessageInfo
- s:fileIsReadOnly(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.ui.ex.MessagesEx$MessageInfo
- s:fileIsReadOnly(com.intellij.openapi.project.Project,java.lang.String):com.intellij.openapi.ui.ex.MessagesEx$MessageInfo
- s:filesAreReadOnly(com.intellij.openapi.project.Project,java.lang.String[]):com.intellij.openapi.ui.ex.MessagesEx$MessageInfo
- s:showErrorDialog(java.awt.Component,java.lang.String,java.lang.String):V
- s:showInfoMessage(java.awt.Component,java.lang.String,java.lang.String):V
- s:showWarningDialog(java.awt.Component,java.lang.String,java.lang.String):V
a:com.intellij.openapi.ui.ex.MessagesEx$BaseDialogInfo
- p:<init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):V
- appendMessage(java.lang.String):com.intellij.openapi.ui.ex.MessagesEx$BaseDialogInfo
- getDefaultOption():I
- getIcon():javax.swing.Icon
- getMessage():java.lang.String
- getOptions():java.lang.String[]
- getProject():com.intellij.openapi.project.Project
- pa:getThis():com.intellij.openapi.ui.ex.MessagesEx$BaseDialogInfo
- getTitle():java.lang.String
- setIcon(javax.swing.Icon):com.intellij.openapi.ui.ex.MessagesEx$BaseDialogInfo
- setMessage(java.lang.String):V
- setOptions(java.lang.String[],I):V
- setTitle(java.lang.String):com.intellij.openapi.ui.ex.MessagesEx$BaseDialogInfo
a:com.intellij.openapi.ui.ex.MessagesEx$BaseInputInfo
- com.intellij.openapi.ui.ex.MessagesEx$BaseDialogInfo
- <init>(com.intellij.openapi.project.Project):V
- a:askUser():com.intellij.openapi.ui.ex.MessagesEx$UserInput
- forceUserInput():java.lang.String
f:com.intellij.openapi.ui.ex.MessagesEx$ChoiceInfo
- com.intellij.openapi.ui.ex.MessagesEx$BaseInputInfo
- <init>(com.intellij.openapi.project.Project):V
- askUser():com.intellij.openapi.ui.ex.MessagesEx$UserInput
- getThis():com.intellij.openapi.ui.ex.MessagesEx$ChoiceInfo
- setChoices(java.lang.String[],java.lang.String):com.intellij.openapi.ui.ex.MessagesEx$ChoiceInfo
f:com.intellij.openapi.ui.ex.MessagesEx$InputInfo
- com.intellij.openapi.ui.ex.MessagesEx$BaseInputInfo
- <init>(com.intellij.openapi.project.Project):V
- askUser():com.intellij.openapi.ui.ex.MessagesEx$UserInput
- getThis():com.intellij.openapi.ui.ex.MessagesEx$InputInfo
- setDefaultValue(java.lang.String):V
f:com.intellij.openapi.ui.ex.MessagesEx$MessageInfo
- com.intellij.openapi.ui.ex.MessagesEx$BaseDialogInfo
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- ask(java.lang.String[],I):I
- askYesNo():I
- showLater():V
- showNow():I
f:com.intellij.openapi.ui.ex.MessagesEx$UserInput
- <init>(java.lang.String,I):V
- getInput():java.lang.String
- getSelectedOption():I
c:com.intellij.openapi.ui.ex.MultiLineLabel
- javax.swing.JLabel
- <init>():V
- <init>(java.lang.String):V
- getMinimumSize():java.awt.Dimension
- updateUI():V
c:com.intellij.openapi.ui.impl.DialogWrapperPeerFactoryImpl
- com.intellij.openapi.ui.DialogWrapperPeerFactory
- <init>():V
- createPeer(com.intellij.openapi.ui.DialogWrapper,com.intellij.openapi.project.Project,Z):com.intellij.openapi.ui.DialogWrapperPeer
- createPeer(com.intellij.openapi.ui.DialogWrapper,com.intellij.openapi.project.Project,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):com.intellij.openapi.ui.DialogWrapperPeer
- createPeer(com.intellij.openapi.ui.DialogWrapper,java.awt.Component,Z):com.intellij.openapi.ui.DialogWrapperPeer
- createPeer(com.intellij.openapi.ui.DialogWrapper,java.awt.Window,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):com.intellij.openapi.ui.DialogWrapperPeer
- createPeer(com.intellij.openapi.ui.DialogWrapper,Z):com.intellij.openapi.ui.DialogWrapperPeer
- createPeer(com.intellij.openapi.ui.DialogWrapper,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):com.intellij.openapi.ui.DialogWrapperPeer
c:com.intellij.openapi.ui.impl.DialogWrapperPeerImpl
- com.intellij.openapi.ui.DialogWrapperPeer
- p:<init>(com.intellij.openapi.ui.DialogWrapper,com.intellij.openapi.project.Project,Z):V
- p:<init>(com.intellij.openapi.ui.DialogWrapper,com.intellij.openapi.project.Project,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):V
- p:<init>(com.intellij.openapi.ui.DialogWrapper,java.awt.Component,Z):V
- p:<init>(com.intellij.openapi.ui.DialogWrapper,java.awt.Window,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):V
- p:<init>(com.intellij.openapi.ui.DialogWrapper,Z):V
- addKeyListener(java.awt.event.KeyListener):V
- addMouseListener(java.awt.event.MouseListener):V
- addMouseListener(java.awt.event.MouseMotionListener):V
- centerInParent():V
- p:dispose():V
- getContentPane():java.awt.Container
- getCurrentModalEntities():java.lang.Object[]
- getLocation():java.awt.Point
- getOwner():java.awt.Window
- getPreferredSize():java.awt.Dimension
- getRootPane():javax.swing.JRootPane
- getSize():java.awt.Dimension
- getTitle():java.lang.String
- getWindow():java.awt.Window
- isHeadless():Z
- s:isHeadlessEnv():Z
- isModal():Z
- isResizable():Z
- isShowing():Z
- isVisible():Z
- pack():V
- repaint():V
- setAppIcons():V
- setAutoRequestFocus(Z):V
- setContentPane(javax.swing.JComponent):V
- setLocation(I,I):V
- setLocation(java.awt.Point):V
- setModal(Z):V
- setOnDeactivationAction(com.intellij.openapi.Disposable,java.lang.Runnable):V
- setResizable(Z):V
- setSize(I,I):V
- setTitle(java.lang.String):V
- setUndecorated(Z):V
- show():java.util.concurrent.CompletableFuture
- toBack():V
- toFront():V
- validate():V
f:com.intellij.openapi.ui.impl.ShadowBorderPainter
- s:createShadow(java.awt.Image,I,I,Z,I):com.intellij.openapi.ui.impl.ShadowBorderPainter$Shadow
f:com.intellij.openapi.ui.impl.ShadowBorderPainter$Shadow
- <init>(java.awt.Image,I,I):V
- getImage():java.awt.Image
- getX():I
- getY():I
com.intellij.openapi.ui.playback.PlaybackCommand
- a:canGoFurther():Z
- a:execute(com.intellij.openapi.ui.playback.PlaybackContext):java.util.concurrent.CompletableFuture
- getScriptDir():java.io.File
com.intellij.openapi.ui.playback.PlaybackCommandReporter
- sf:EMPTY_PLAYBACK_COMMAND_REPORTER:com.intellij.openapi.ui.playback.PlaybackCommandReporter
- endOfCommand(java.lang.String):V
- endOfScript(com.intellij.openapi.project.Project):V
- scriptCanceled():V
- startOfCommand(java.lang.String):V
- startOfScript(com.intellij.openapi.project.Project):V
a:com.intellij.openapi.ui.playback.PlaybackContext
- pf:myRunner:com.intellij.openapi.ui.playback.PlaybackRunner
- <init>(com.intellij.openapi.ui.playback.PlaybackRunner,com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback,I,java.awt.Robot,Z,Z,com.intellij.openapi.ui.playback.PlaybackCommand,java.io.File,java.util.Set):V
- a:addPassed(com.intellij.openapi.ui.playback.StageInfo):V
- code(java.lang.String,I):V
- error(java.lang.String,I):V
- getBaseDir():java.io.File
- getCallClasses():java.util.Set
- getCallback():com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback
- getCurrentCmd():com.intellij.openapi.ui.playback.PlaybackCommand
- getCurrentLine():I
- a:getCurrentStageDepth():I
- a:getProject():com.intellij.openapi.project.Project
- getRobot():java.awt.Robot
- a:isDisposed():Z
- isUseDirectActionCall():Z
- isUseTypingTargets():Z
- message(java.lang.String,I):V
- a:popStage():com.intellij.openapi.ui.playback.StageInfo
- a:pushStage(com.intellij.openapi.ui.playback.StageInfo):V
- runPooledThread(java.lang.Runnable):V
- setBaseDir(java.io.File):V
- a:setProject(com.intellij.openapi.project.Project):V
- a:storeRegistryValue(java.lang.String):V
- test(java.lang.String,I):V
c:com.intellij.openapi.ui.playback.PlaybackRunner
- pf:onStop:com.intellij.openapi.util.CheckedDisposable
- <init>(java.lang.String,com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback,Z,Z,Z):V
- p:createCommand(java.lang.String,I,java.io.File):com.intellij.openapi.ui.playback.PlaybackCommand
- getDelay(com.intellij.openapi.ui.playback.PlaybackCommand):I
- p:getProject():com.intellij.openapi.project.Project
- getScriptDir():java.io.File
- p:onStop():V
- run():java.util.concurrent.CompletableFuture
- runBlocking(J):V
- setCommandStartStopProcessor(com.intellij.openapi.ui.playback.PlaybackCommandReporter):com.intellij.openapi.ui.playback.PlaybackRunner
- p:setProject(com.intellij.openapi.project.Project):V
- setScriptDir(java.io.File):V
- stop():V
- p:subscribeListeners(com.intellij.util.messages.MessageBusConnection):V
com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback
- a:message(com.intellij.openapi.ui.playback.PlaybackContext,java.lang.String,com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Type):V
a:com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Edt
- com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback
- <init>():V
- f:message(com.intellij.openapi.ui.playback.PlaybackContext,java.lang.String,com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Type):V
- a:messageEdt(com.intellij.openapi.ui.playback.PlaybackContext,java.lang.String,com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Type):V
e:com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Type
- java.lang.Enum
- sf:code:com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Type
- sf:error:com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Type
- sf:message:com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Type
- sf:test:com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Type
- s:valueOf(java.lang.String):com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Type
- s:values():com.intellij.openapi.ui.playback.PlaybackRunner$StatusCallback$Type[]
f:com.intellij.openapi.ui.playback.StageInfo
- <init>(java.lang.String):V
- getName():java.lang.String
a:com.intellij.openapi.ui.playback.commands.AbstractCommand
- com.intellij.openapi.ui.playback.PlaybackCommand
- sf:CMD_PREFIX:java.lang.String
- <init>(java.lang.String,I):V
- <init>(java.lang.String,I,Z):V
- pa:_execute(com.intellij.openapi.ui.playback.PlaybackContext):org.jetbrains.concurrency.Promise
- canGoFurther():Z
- pf:dumpError(com.intellij.openapi.ui.playback.PlaybackContext,java.lang.String):V
- f:execute(com.intellij.openapi.ui.playback.PlaybackContext):java.util.concurrent.CompletableFuture
- extractCommandArgument(java.lang.String):java.lang.String
- extractCommandList(java.lang.String,java.lang.String):java.util.ArrayList
- f:getLine():I
- f:getScriptDir():java.io.File
- f:getText():java.lang.String
- p:isToDumpCommand():Z
- f:setScriptDir(java.io.File):V
c:com.intellij.openapi.ui.playback.commands.ActionCommand
- com.intellij.openapi.ui.playback.commands.AbstractCommand
- sf:PREFIX:java.lang.String
- <init>(java.lang.String,I):V
- p:_execute(com.intellij.openapi.ui.playback.PlaybackContext):org.jetbrains.concurrency.Promise
- s:getInputEvent(java.lang.String):java.awt.event.InputEvent
c:com.intellij.openapi.ui.playback.commands.AlphaNumericTypeCommand
- com.intellij.openapi.ui.playback.commands.AbstractCommand
- <init>(java.lang.String,I):V
- _execute(com.intellij.openapi.ui.playback.PlaybackContext):org.jetbrains.concurrency.Promise
- s:findTarget(com.intellij.openapi.ui.playback.PlaybackContext):com.intellij.openapi.ui.TypingTarget
- p:type(com.intellij.openapi.ui.playback.PlaybackContext,java.lang.String):org.jetbrains.concurrency.Promise
c:com.intellij.openapi.ui.playback.commands.KeyCodeTypeCommand
- com.intellij.openapi.ui.playback.commands.AlphaNumericTypeCommand
- sf:CODE_DELIMITER:java.lang.String
- sf:MODIFIER_DELIMITER:java.lang.String
- sf:PREFIX:java.lang.String
- <init>(java.lang.String,I):V
- _execute(com.intellij.openapi.ui.playback.PlaybackContext):org.jetbrains.concurrency.Promise
- s:parseKeyCodes(java.lang.String):com.intellij.openapi.util.Couple
- s:unparseKeyCodes(com.intellij.openapi.util.Couple):java.lang.String
a:com.intellij.openapi.ui.playback.commands.PlaybackCommandCoroutineAdapter
- com.intellij.openapi.ui.playback.PlaybackCommand
- sf:CMD_PREFIX:java.lang.String
- sf:Companion:com.intellij.openapi.ui.playback.commands.PlaybackCommandCoroutineAdapter$Companion
- <init>(java.lang.String,I):V
- canGoFurther():Z
- pa:doExecute(com.intellij.openapi.ui.playback.PlaybackContext,kotlin.coroutines.Continuation):java.lang.Object
- f:execute(com.intellij.openapi.ui.playback.PlaybackContext):java.util.concurrent.CompletableFuture
- f:extractCommandArgument(java.lang.String):java.lang.String
- pf:getLine():I
- pf:getText():java.lang.String
f:com.intellij.openapi.ui.playback.commands.PlaybackCommandCoroutineAdapter$Companion
f:com.intellij.openapi.ui.playback.commands.RegistryValueCommand
- com.intellij.openapi.ui.playback.commands.AbstractCommand
- sf:PREFIX:java.lang.String
- <init>(java.lang.String,I):V
a:com.intellij.openapi.ui.popup.MultiSelectionListPopupStep
- com.intellij.openapi.ui.popup.util.BaseListPopupStep
- p:<init>(java.lang.String,java.util.List):V
- f:getDefaultOptionIndex():I
- getDefaultOptionIndices():I[]
- f:hasSubstep(java.lang.Object):Z
- hasSubstep(java.util.List):Z
- f:onChosen(java.lang.Object,Z):com.intellij.openapi.ui.popup.PopupStep
- a:onChosen(java.util.List,Z):com.intellij.openapi.ui.popup.PopupStep
- f:setDefaultOptionIndex(I):V
- setDefaultOptionIndices(I[]):V
f:com.intellij.openapi.ui.validation.RequestorsKt
- sf:getAFTER_GRAPH_PROPAGATION():com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
- sf:getAFTER_PROPERTY_CHANGE():com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
- sf:getWHEN_DOCUMENT_CHANGED():com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
- sf:getWHEN_GRAPH_PROPAGATION_FINISHED():com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
- sf:getWHEN_PROPERTY_CHANGED():com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
- sf:getWHEN_STATE_CHANGED():com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
- sf:getWHEN_TEXT_CHANGED():com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
f:com.intellij.openapi.ui.validation.ValidationsKt
- sf:getCHECK_ARTIFACT_ID():com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:getCHECK_DIRECTORY():com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:getCHECK_FREE_MODULE_NAME():com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:getCHECK_FREE_MODULE_PATH():com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:getCHECK_FREE_PROJECT_PATH():com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:getCHECK_GROUP_ID():com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:getCHECK_MODULE_NAME():com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:getCHECK_MODULE_PATH():com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:getCHECK_NAME_FORMAT():com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:getCHECK_NON_EMPTY():com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:getCHECK_NON_EMPTY_DIRECTORY():com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:getCHECK_NO_RESERVED_WORDS():com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:getCHECK_NO_WHITESPACES():com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:getCHECK_PROJECT_PATH():com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
c:com.intellij.openapi.updateSettings.UpdateStrategyCustomization
- sf:Companion:com.intellij.openapi.updateSettings.UpdateStrategyCustomization$Companion
- <init>():V
- canBeUsedForIntermediatePatches(com.intellij.openapi.updateSettings.impl.UpdateChannel,com.intellij.openapi.updateSettings.impl.ChannelStatus):Z
- changeDefaultChannel(com.intellij.openapi.updateSettings.impl.ChannelStatus):com.intellij.openapi.updateSettings.impl.ChannelStatus
- forceEapUpdateChannelForEapBuilds():Z
- getChannelSelectionLockedMessage():java.lang.String
- sf:getInstance():com.intellij.openapi.updateSettings.UpdateStrategyCustomization
- getShowWhatIsNewPageAfterUpdate():Z
- haveSameMajorVersion(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.util.BuildNumber):Z
- isChannelActive(com.intellij.openapi.updateSettings.impl.ChannelStatus):Z
- isChannelApplicableForUpdates(com.intellij.openapi.updateSettings.impl.UpdateChannel,com.intellij.openapi.updateSettings.impl.ChannelStatus):Z
- isNewerVersion(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.util.BuildNumber):Z
f:com.intellij.openapi.updateSettings.UpdateStrategyCustomization$Companion
- f:getInstance():com.intellij.openapi.updateSettings.UpdateStrategyCustomization
f:com.intellij.openapi.updateSettings.impl.BuildInfo
- f:getApiVersion():com.intellij.openapi.util.BuildNumber
- f:getBlogPost():java.lang.String
- f:getDownloadUrl():java.lang.String
- f:getMessage():java.lang.String
- f:getNumber():com.intellij.openapi.util.BuildNumber
- f:getPatches():java.util.List
- f:getReleaseDate():java.util.Date
- f:getTarget():com.intellij.openapi.util.BuildRange
- f:getVersion():java.lang.String
e:com.intellij.openapi.updateSettings.impl.ChannelStatus
- java.lang.Enum
- sf:BETA:com.intellij.openapi.updateSettings.impl.ChannelStatus
- sf:EAP:com.intellij.openapi.updateSettings.impl.ChannelStatus
- sf:MILESTONE:com.intellij.openapi.updateSettings.impl.ChannelStatus
- sf:RELEASE:com.intellij.openapi.updateSettings.impl.ChannelStatus
- s:fromCode(java.lang.String):com.intellij.openapi.updateSettings.impl.ChannelStatus
- getCode():java.lang.String
- getDisplayName():java.lang.String
- s:valueOf(java.lang.String):com.intellij.openapi.updateSettings.impl.ChannelStatus
- s:values():com.intellij.openapi.updateSettings.impl.ChannelStatus[]
f:com.intellij.openapi.updateSettings.impl.DetectedPluginsPanel
- com.intellij.ui.OrderPanel
- <init>(com.intellij.openapi.project.Project):V
- addAll(java.util.Collection):V
- isChecked(com.intellij.openapi.updateSettings.impl.PluginDownloader):Z
- requestFocus():V
- setChecked(com.intellij.openapi.updateSettings.impl.PluginDownloader,Z):V
e:com.intellij.openapi.updateSettings.impl.ExternalUpdateManager
- java.lang.Enum
- sf:ACTUAL:com.intellij.openapi.updateSettings.impl.ExternalUpdateManager
- sf:SNAP:com.intellij.openapi.updateSettings.impl.ExternalUpdateManager
- sf:TOOLBOX:com.intellij.openapi.updateSettings.impl.ExternalUpdateManager
- sf:UNKNOWN:com.intellij.openapi.updateSettings.impl.ExternalUpdateManager
- f:toolName:java.lang.String
- s:isCreatingDesktopEntries():Z
- s:valueOf(java.lang.String):com.intellij.openapi.updateSettings.impl.ExternalUpdateManager
- s:values():com.intellij.openapi.updateSettings.impl.ExternalUpdateManager[]
f:com.intellij.openapi.updateSettings.impl.IdeRestartKt
- sf:restartOrNotify(com.intellij.openapi.project.Project,Z,java.lang.String,kotlin.jvm.functions.Function0):V
- bs:restartOrNotify$default(com.intellij.openapi.project.Project,Z,java.lang.String,kotlin.jvm.functions.Function0,I,java.lang.Object):V
f:com.intellij.openapi.updateSettings.impl.LabelTextReplacingUtil
- <init>():V
- s:replaceText(javax.swing.JComponent):V
f:com.intellij.openapi.updateSettings.impl.PluginDownloader
- s:compareVersionsSkipBrokenAndIncompatible(java.lang.String,com.intellij.ide.plugins.IdeaPluginDescriptor):I
- s:compareVersionsSkipBrokenAndIncompatible(java.lang.String,com.intellij.ide.plugins.IdeaPluginDescriptor,com.intellij.openapi.util.BuildNumber):I
- s:createDownloader(com.intellij.ide.plugins.IdeaPluginDescriptor):com.intellij.openapi.updateSettings.impl.PluginDownloader
- s:createDownloader(com.intellij.ide.plugins.IdeaPluginDescriptor,java.lang.String,com.intellij.openapi.util.BuildNumber):com.intellij.openapi.updateSettings.impl.PluginDownloader
- getBuildNumber():com.intellij.openapi.util.BuildNumber
- getDescriptor():com.intellij.ide.plugins.IdeaPluginDescriptor
- getFilePath():java.nio.file.Path
- getId():com.intellij.openapi.extensions.PluginId
- s:getMarketplaceDownloadsUUID():java.lang.String
- getPluginId():java.lang.String
- getPluginName():java.lang.String
- getPluginVersion():java.lang.String
- getProductCode():java.lang.String
- getReleaseDate():java.util.Date
- getReleaseVersion():I
- install():V
- installDynamically(javax.swing.JComponent):Z
- isFromMarketplace():Z
- isLicenseOptional():Z
- isShownErrors():Z
- prepareToInstall(com.intellij.openapi.progress.ProgressIndicator):Z
- s:showErrorDialog(java.lang.String):V
- toPluginNode():com.intellij.ide.plugins.PluginNode
- withDownloadService(com.intellij.ide.plugins.marketplace.MarketplacePluginDownloadService):com.intellij.openapi.updateSettings.impl.PluginDownloader
- withErrorsConsumer(java.util.function.Consumer):com.intellij.openapi.updateSettings.impl.PluginDownloader
f:com.intellij.openapi.updateSettings.impl.PluginUpdateFacadeKt
- sf:getPendingUpdates():java.util.Collection
- sf:installUpdates(java.util.Collection,javax.swing.JComponent,java.util.function.Consumer):V
f:com.intellij.openapi.updateSettings.impl.Product
- f:getChannels():java.util.List
- f:getDisableMachineId():Z
- f:getName():java.lang.String
f:com.intellij.openapi.updateSettings.impl.UpdateChannel
- f:getBuilds():java.util.List
- f:getEvalDays():I
- f:getId():java.lang.String
- f:getLicensing():com.intellij.openapi.updateSettings.impl.UpdateChannel$Licensing
- f:getStatus():com.intellij.openapi.updateSettings.impl.ChannelStatus
- f:getUrl():java.lang.String
e:com.intellij.openapi.updateSettings.impl.UpdateChannel$Licensing
- java.lang.Enum
- sf:EAP:com.intellij.openapi.updateSettings.impl.UpdateChannel$Licensing
- sf:RELEASE:com.intellij.openapi.updateSettings.impl.UpdateChannel$Licensing
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.updateSettings.impl.UpdateChannel$Licensing
- s:values():com.intellij.openapi.updateSettings.impl.UpdateChannel$Licensing[]
f:com.intellij.openapi.updateSettings.impl.UpdateChecker
- sf:INSTANCE:com.intellij.openapi.updateSettings.impl.UpdateChecker
- sf:NOTIFICATIONS:com.intellij.notification.NotificationGroup
- sf:checkAndPrepareToInstall(com.intellij.openapi.updateSettings.impl.PluginDownloader,com.intellij.ide.plugins.InstalledPluginsState,java.util.Map):V
- sf:checkAndPrepareToInstall(com.intellij.openapi.updateSettings.impl.PluginDownloader,com.intellij.ide.plugins.InstalledPluginsState,java.util.Map,com.intellij.openapi.util.BuildNumber):V
- sf:checkAndPrepareToInstall(com.intellij.openapi.updateSettings.impl.PluginDownloader,com.intellij.ide.plugins.InstalledPluginsState,java.util.Map,com.intellij.openapi.util.BuildNumber,com.intellij.openapi.progress.ProgressIndicator):V
- bs:checkAndPrepareToInstall$default(com.intellij.openapi.updateSettings.impl.PluginDownloader,com.intellij.ide.plugins.InstalledPluginsState,java.util.Map,com.intellij.openapi.util.BuildNumber,com.intellij.openapi.progress.ProgressIndicator,I,java.lang.Object):V
- sf:getDisabledToUpdate():java.util.Set
- sf:getDisabledToUpdatePlugins():java.util.Set
- f:getExcludedFromUpdateCheckPlugins():java.util.HashSet
- sf:getExternalPluginUpdates(com.intellij.openapi.updateSettings.impl.UpdateSettings):com.intellij.openapi.updateSettings.impl.ExternalPluginResults
- sf:getExternalPluginUpdates(com.intellij.openapi.updateSettings.impl.UpdateSettings,com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.updateSettings.impl.ExternalPluginResults
- bs:getExternalPluginUpdates$default(com.intellij.openapi.updateSettings.impl.UpdateSettings,com.intellij.openapi.progress.ProgressIndicator,I,java.lang.Object):com.intellij.openapi.updateSettings.impl.ExternalPluginResults
- sf:getInternalPluginUpdates():com.intellij.openapi.updateSettings.impl.InternalPluginResults
- sf:getInternalPluginUpdates(com.intellij.openapi.util.BuildNumber):com.intellij.openapi.updateSettings.impl.InternalPluginResults
- sf:getInternalPluginUpdates(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.updateSettings.impl.InternalPluginResults
- sf:getInternalPluginUpdates(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.progress.ProgressIndicator,java.util.Map):com.intellij.openapi.updateSettings.impl.InternalPluginResults
- bs:getInternalPluginUpdates$default(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.progress.ProgressIndicator,java.util.Map,I,java.lang.Object):com.intellij.openapi.updateSettings.impl.InternalPluginResults
- sf:getNotificationGroup():com.intellij.notification.NotificationGroup
- sf:getNotificationGroupForIdeUpdateResults():com.intellij.notification.NotificationGroup
- sf:getNotificationGroupForPluginUpdateResults():com.intellij.notification.NotificationGroup
- sf:getPlatformUpdates():com.intellij.openapi.updateSettings.impl.PlatformUpdates
- sf:getPlatformUpdates(com.intellij.openapi.updateSettings.impl.UpdateSettings):com.intellij.openapi.updateSettings.impl.PlatformUpdates
- sf:getPluginUpdates():java.util.Collection
- sf:loadProductData(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.updateSettings.impl.Product
- sf:saveDisabledToUpdatePlugins():V
- sf:updateAndShowResult():com.intellij.openapi.util.ActionCallback
- sf:updateAndShowResult(com.intellij.openapi.project.Project):V
- sf:updateAndShowResult(com.intellij.openapi.project.Project,com.intellij.openapi.updateSettings.impl.UpdateSettings):V
- bs:updateAndShowResult$default(com.intellij.openapi.project.Project,com.intellij.openapi.updateSettings.impl.UpdateSettings,I,java.lang.Object):V
f:com.intellij.openapi.updateSettings.impl.UpdateData
- sf:parseUpdateData(java.lang.String,java.lang.String):com.intellij.openapi.updateSettings.impl.Product
- sf:parseUpdateData(org.jdom.Element,java.lang.String):com.intellij.openapi.updateSettings.impl.Product
- bs:parseUpdateData$default(java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.openapi.updateSettings.impl.Product
- bs:parseUpdateData$default(org.jdom.Element,java.lang.String,I,java.lang.Object):com.intellij.openapi.updateSettings.impl.Product
f:com.intellij.openapi.updateSettings.impl.UpdateOptions
- com.intellij.openapi.components.BaseState
- <init>():V
- f:getIgnoredBuildNumbers():java.util.List
- f:getLastBuildChecked():java.lang.String
- f:getLastTimeChecked():J
- f:getPluginHosts():java.util.List
- f:getUpdateChannelType():java.lang.String
- f:getWhatsNewShownFor():I
- f:isCheckNeeded():Z
- f:isObsoleteCustomRepositoriesCleanNeeded():Z
- f:isPluginsAutoUpdateEnabled():Z
- f:isPluginsCheckNeeded():Z
- f:isShowWhatsNewEditor():Z
- f:isThirdPartyPluginsAllowed():Z
- f:setCheckNeeded(Z):V
- f:setLastBuildChecked(java.lang.String):V
- f:setLastTimeChecked(J):V
- f:setObsoleteCustomRepositoriesCleanNeeded(Z):V
- f:setPluginsAutoUpdateEnabled(Z):V
- f:setPluginsCheckNeeded(Z):V
- f:setShowWhatsNewEditor(Z):V
- f:setThirdPartyPluginsAllowed(Z):V
- f:setUpdateChannelType(java.lang.String):V
- f:setWhatsNewShownFor(I):V
c:com.intellij.openapi.updateSettings.impl.UpdateSettings
- com.intellij.openapi.components.PersistentStateComponentWithModificationTracker
- <init>():V
- forceCheckForUpdateAfterRestart():V
- getActiveChannels():java.util.List
- getIgnoredBuildNumbers():java.util.List
- s:getInstance():com.intellij.openapi.updateSettings.impl.UpdateSettings
- getLastBuildChecked():java.lang.String
- getLastTimeChecked():J
- getPluginHosts():java.util.List
- getSelectedActiveChannel():com.intellij.openapi.updateSettings.impl.ChannelStatus
- getSelectedChannelStatus():com.intellij.openapi.updateSettings.impl.ChannelStatus
- getState():com.intellij.openapi.updateSettings.impl.UpdateOptions
- getStateModificationCount():J
- getStoredPluginHosts():java.util.List
- getWhatsNewShownFor():I
- isCheckNeeded():Z
- isObsoleteCustomRepositoriesCleanNeeded():Z
- isPluginsAutoUpdateEnabled():Z
- isPluginsCheckNeeded():Z
- isShowWhatsNewEditor():Z
- isThirdPartyPluginsAllowed():Z
- loadState(com.intellij.openapi.updateSettings.impl.UpdateOptions):V
- saveLastCheckedInfo():V
- setCheckNeeded(Z):V
- setObsoleteCustomRepositoriesCleanNeeded(Z):V
- setPluginsAutoUpdateEnabled(Z):V
- setPluginsCheckNeeded(Z):V
- setSelectedChannelStatus(com.intellij.openapi.updateSettings.impl.ChannelStatus):V
- setThirdPartyPluginsAllowed(Z):V
- setWhatsNewShownFor(I):V
com.intellij.openapi.updateSettings.impl.UpdateSettingsProvider
- a:getPluginRepositories():java.util.List
com.intellij.openapi.updateSettings.impl.UpdateSettingsUIProvider
- sf:Companion:com.intellij.openapi.updateSettings.impl.UpdateSettingsUIProvider$Companion
- a:init(com.intellij.ui.dsl.builder.Panel):V
f:com.intellij.openapi.updateSettings.impl.UpdateSettingsUIProvider$Companion
f:com.intellij.openapi.updateSettings.impl.UpdateStrategy
- <init>(com.intellij.openapi.util.BuildNumber):V
- <init>(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.updateSettings.impl.Product):V
- <init>(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.updateSettings.impl.Product,com.intellij.openapi.updateSettings.impl.UpdateSettings):V
- <init>(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.updateSettings.impl.Product,com.intellij.openapi.updateSettings.impl.UpdateSettings,com.intellij.openapi.updateSettings.UpdateStrategyCustomization):V
- b:<init>(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.updateSettings.impl.Product,com.intellij.openapi.updateSettings.impl.UpdateSettings,com.intellij.openapi.updateSettings.UpdateStrategyCustomization,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:checkForUpdates():com.intellij.openapi.updateSettings.impl.PlatformUpdates
c:com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserServiceImpl
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- collectDependencyUnknownFeatures(Z,kotlin.coroutines.Continuation):java.lang.Object
- fetch(java.util.List,java.util.Collection,Z,kotlin.coroutines.Continuation):java.lang.Object
- getAddressedMessagePresentation(java.util.Collection,java.util.Collection,com.intellij.util.containers.MultiMap):java.lang.String
- rescanDependencies(kotlin.jvm.functions.Function2):V
- run(java.util.List,java.util.Collection,Z,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginsAdvertiser
- sf:getInstallAndEnableTask(com.intellij.openapi.project.Project,java.util.Set,java.lang.Runnable):com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.InstallAndEnableTask
- sf:getInstallAndEnableTask(com.intellij.openapi.project.Project,java.util.Set,Z,java.lang.Runnable):com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.InstallAndEnableTask
- sf:getInstallAndEnableTask(com.intellij.openapi.project.Project,java.util.Set,Z,Z,com.intellij.openapi.application.ModalityState,java.lang.Runnable):com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.InstallAndEnableTask
- sf:getInstallAndEnableTask(com.intellij.openapi.project.Project,java.util.Set,Z,Z,java.lang.Runnable):com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.InstallAndEnableTask
- bs:getInstallAndEnableTask$default(com.intellij.openapi.project.Project,java.util.Set,Z,Z,com.intellij.openapi.application.ModalityState,java.lang.Runnable,I,java.lang.Object):com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.InstallAndEnableTask
- sf:getNotificationGroup():com.intellij.notification.NotificationGroup
- sf:getPluginSuggestionNotificationGroup():com.intellij.notification.NotificationGroup
- sf:installAndEnable(com.intellij.openapi.project.Project,java.util.Set,java.lang.Runnable):V
- sf:installAndEnable(com.intellij.openapi.project.Project,java.util.Set,Z,java.lang.Runnable):V
- sf:installAndEnable(com.intellij.openapi.project.Project,java.util.Set,Z,Z,com.intellij.openapi.application.ModalityState,java.lang.Runnable):V
- sf:installAndEnable(com.intellij.openapi.project.Project,java.util.Set,Z,Z,java.lang.Runnable):V
- sf:installAndEnable(java.util.Set,java.lang.Runnable):V
- bs:installAndEnable$default(com.intellij.openapi.project.Project,java.util.Set,Z,Z,com.intellij.openapi.application.ModalityState,java.lang.Runnable,I,java.lang.Object):V
- sf:installAndEnablePlugins(java.util.Set,java.lang.Runnable):V
f:com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginsAdvertiserDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,java.util.Collection,java.util.List):V
- doInstallPlugins(Z,com.intellij.openapi.application.ModalityState):V
- getPreferredFocusedComponent():javax.swing.JComponent
c:com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginsAdvertiserDialogPluginInstaller
- <init>(com.intellij.openapi.project.Project,java.util.Collection,java.util.List,java.util.function.Consumer):V
- doInstallPlugins(java.util.function.Predicate,com.intellij.openapi.application.ModalityState):Z
- downloadPlugins(java.util.List,java.util.Collection,java.lang.Runnable,com.intellij.openapi.application.ModalityState,java.util.function.Consumer):V
f:com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.UnknownFeature
- <init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getFeatureDisplayName():java.lang.String
- getFeatureType():java.lang.String
- getImplementationDisplayName():java.lang.String
- getImplementationName():java.lang.String
- hashCode():I
- withImplementationDisplayName(java.lang.String):com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.UnknownFeature
f:com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.UnknownFeaturesCollector
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.UnknownFeaturesCollector
- getState():org.jdom.Element
- getUnknownFeatures():java.util.Set
- ignoreFeature(com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.UnknownFeature):V
- isIgnored(com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.UnknownFeature):Z
- loadState(org.jdom.Element):V
c:com.intellij.openapi.util.MultiValuesMap
- <init>():V
- <init>(Z):V
- clear():V
- containsKey(java.lang.Object):Z
- entrySet():java.util.Set
- get(java.lang.Object):java.util.Collection
- getFirst(java.lang.Object):java.lang.Object
- isEmpty():Z
- keySet():java.util.Set
- put(java.lang.Object,java.lang.Object):V
- putAll(java.lang.Object,java.util.Collection):V
- putAll(java.lang.Object,java.lang.Object[]):V
- remove(java.lang.Object,java.lang.Object):V
- removeAll(java.lang.Object):java.util.Collection
- values():java.util.Collection
f:com.intellij.openapi.util.RequestsMerger
- <init>(java.lang.Runnable,com.intellij.util.Consumer):V
- isEmpty():Z
- request():V
- waitRefresh(java.lang.Runnable):V
f:com.intellij.openapi.util.SystemPropertyBean
- com.intellij.openapi.extensions.PluginAware
- name:java.lang.String
- value:java.lang.String
f:com.intellij.openapi.util.ZipperUpdater
- <init>(I,com.intellij.openapi.Disposable):V
- <init>(I,com.intellij.util.Alarm$ThreadToUse,com.intellij.openapi.Disposable):V
- queue(java.lang.Runnable):V
- queue(java.lang.Runnable,Z,Z):V
- stop():V
- waitForAllExecuted(J,java.util.concurrent.TimeUnit):V
f:com.intellij.openapi.util.io.FileUtilKt
- sf:endsWithName(java.lang.String,java.lang.String):Z
- sf:getSystemIndependentPath(java.io.File):java.lang.String
com.intellij.openapi.vcs.changes.RefreshablePanel
- a:getPanel():javax.swing.JPanel
- a:refresh():V
a:com.intellij.openapi.vcs.changes.issueLinks.LinkMouseListenerBase
- com.intellij.ui.ClickListener
- java.awt.event.MouseMotionListener
- <init>():V
- pa:getTagAt(java.awt.event.MouseEvent):java.lang.Object
- p:handleTagClick(java.lang.Object,java.awt.event.MouseEvent):V
- installOn(java.awt.Component):V
- s:installSingleTagOn(com.intellij.ui.SimpleColoredComponent):V
- mouseDragged(java.awt.event.MouseEvent):V
- mouseMoved(java.awt.event.MouseEvent):V
- onClick(java.awt.event.MouseEvent,I):Z
c:com.intellij.openapi.vcs.changes.issueLinks.TreeLinkMouseListener
- com.intellij.openapi.vcs.changes.issueLinks.LinkMouseListenerBase
- <init>(com.intellij.ui.ColoredTreeCellRenderer):V
- p:doCacheLastNode():Z
- p:getRendererRelativeX(java.awt.event.MouseEvent,javax.swing.JTree,javax.swing.tree.TreePath):I
- p:getTagAt(java.awt.event.MouseEvent):java.lang.Object
- p:showTooltip(javax.swing.JTree,java.awt.event.MouseEvent,com.intellij.openapi.vcs.changes.issueLinks.TreeLinkMouseListener$HaveTooltip):V
com.intellij.openapi.vcs.changes.issueLinks.TreeLinkMouseListener$HaveTooltip
- a:getTooltip():java.lang.String
com.intellij.openapi.vcs.impl.FileStatusProvider
- a:getFileStatus(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.FileStatus
f:com.intellij.openapi.vcs.readOnlyHandler.FileListRenderer
- javax.swing.ListCellRenderer
- <init>():V
- getListCellRendererComponent(javax.swing.JList,com.intellij.openapi.vfs.VirtualFile,I,Z,Z):java.awt.Component
c:com.intellij.openapi.vfs.PlatformVirtualFileManager
- com.intellij.openapi.vfs.impl.VirtualFileManagerImpl
- <init>():V
- p:doRefresh(Z,java.lang.Runnable):J
- findFileById(I):com.intellij.openapi.vfs.VirtualFile
- getModificationCount():J
- getStructureModificationCount():J
- getVFileName(I):java.lang.CharSequence
- listAllChildIds(I):I[]
- storeName(java.lang.String):I
a:com.intellij.openapi.vfs.VirtualFileUrlChangeAdapter
- com.intellij.openapi.vfs.VirtualFileListener
- <init>():V
- fileMoved(com.intellij.openapi.vfs.VirtualFileMoveEvent):V
- pa:fileUrlChanged(java.lang.String,java.lang.String):V
- propertyChanged(com.intellij.openapi.vfs.VirtualFilePropertyEvent):V
c:com.intellij.openapi.vfs.encoding.ChangeFileEncodingAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>():V
- <init>(Z):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:changeTo(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.openapi.editor.Editor,com.intellij.openapi.vfs.VirtualFile,java.nio.charset.Charset,com.intellij.openapi.vfs.encoding.EncodingUtil$Magic8,com.intellij.openapi.vfs.encoding.EncodingUtil$Magic8):Z
- p:chosen(com.intellij.openapi.editor.Document,com.intellij.openapi.editor.Editor,com.intellij.openapi.vfs.VirtualFile,B[],java.nio.charset.Charset):Z
- createActionGroup(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Document,B[],java.lang.String):com.intellij.openapi.actionSystem.DefaultActionGroup
- createPopup(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.ActionGroup):com.intellij.openapi.ui.popup.ListPopup
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.openapi.vfs.encoding.ChooseFileEncodingAction
- com.intellij.openapi.actionSystem.ex.ComboBoxAction
- sf:NO_ENCODING:java.nio.charset.Charset
- p:<init>(com.intellij.openapi.vfs.VirtualFile):V
- pa:chosen(com.intellij.openapi.vfs.VirtualFile,java.nio.charset.Charset):V
- p:createCharsetsActionGroup(java.lang.String,java.nio.charset.Charset,com.intellij.util.Function):com.intellij.openapi.actionSystem.DefaultActionGroup
- a:update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl
- com.intellij.openapi.vfs.encoding.EncodingProjectManager
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- <init>(com.intellij.openapi.project.Project):V
- dispose():V
- getAllMappings():java.util.Map
- getAllPointersMappings():java.util.Map
- getCachedCharsetFromContent(com.intellij.openapi.editor.Document):java.nio.charset.Charset
- getConfiguredDefaultCharset():java.nio.charset.Charset
- getDefaultCharset():java.nio.charset.Charset
- getDefaultCharsetForPropertiesFiles(com.intellij.openapi.vfs.VirtualFile):java.nio.charset.Charset
- getDefaultCharsetName():java.lang.String
- getDefaultConsoleEncoding():java.nio.charset.Charset
- getEncoding(com.intellij.openapi.vfs.VirtualFile,Z):java.nio.charset.Charset
- getFavorites():java.util.Collection
- getModificationTracker():com.intellij.openapi.util.ModificationTracker
- getState():org.jdom.Element
- isNative2Ascii(com.intellij.openapi.vfs.VirtualFile):Z
- isNative2AsciiForPropertiesFiles():Z
- loadState(org.jdom.Element):V
- setBOMForNewUtf8Files(com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl$BOMForNewUTF8Files):V
- setDefaultCharsetForPropertiesFiles(com.intellij.openapi.vfs.VirtualFile,java.nio.charset.Charset):V
- setDefaultCharsetName(java.lang.String):V
- setEncoding(com.intellij.openapi.vfs.VirtualFile,java.nio.charset.Charset):V
- setMapping(java.util.Map):V
- setNative2AsciiForPropertiesFiles(com.intellij.openapi.vfs.VirtualFile,Z):V
- setPointerMapping(java.util.Map):V
- shouldAddBOMForNewUtf8File():Z
e:com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl$BOMForNewUTF8Files
- java.lang.Enum
- sf:ALWAYS:com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl$BOMForNewUTF8Files
- sf:NEVER:com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl$BOMForNewUTF8Files
- sf:WINDOWS_ONLY:com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl$BOMForNewUTF8Files
- s:valueOf(java.lang.String):com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl$BOMForNewUTF8Files
- s:values():com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl$BOMForNewUTF8Files[]
f:com.intellij.openapi.vfs.encoding.EncodingUtil
- <init>():V
- s:canReload(com.intellij.openapi.vfs.VirtualFile):Z
- s:getCharsetAndTheReasonTooltip(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.util.Pair
e:com.intellij.openapi.vfs.encoding.EncodingUtil$Magic8
- java.lang.Enum
- sf:ABSOLUTELY:com.intellij.openapi.vfs.encoding.EncodingUtil$Magic8
- sf:NO_WAY:com.intellij.openapi.vfs.encoding.EncodingUtil$Magic8
- sf:WELL_IF_YOU_INSIST:com.intellij.openapi.vfs.encoding.EncodingUtil$Magic8
- s:valueOf(java.lang.String):com.intellij.openapi.vfs.encoding.EncodingUtil$Magic8
- s:values():com.intellij.openapi.vfs.encoding.EncodingUtil$Magic8[]
c:com.intellij.openapi.vfs.impl.http.DefaultRemoteContentProvider
- com.intellij.openapi.vfs.impl.http.RemoteContentProvider
- <init>():V
- s:addRequestTuner(com.intellij.util.Url,com.intellij.util.io.RequestBuilder):com.intellij.util.io.RequestBuilder
- p:adjustFileType(com.intellij.openapi.fileTypes.FileType,com.intellij.util.Url):com.intellij.openapi.fileTypes.FileType
- canProvideContent(com.intellij.util.Url):Z
- p:connect(com.intellij.util.Url,com.intellij.util.io.RequestBuilder,com.intellij.util.io.HttpRequests$RequestProcessor):java.lang.Object
- p:getDefaultConnectionTimeout():I
- isUpToDate(com.intellij.util.Url,com.intellij.openapi.vfs.VirtualFile):Z
- p:saveAdditionalData(com.intellij.util.io.HttpRequests$Request,java.io.File):V
- saveContent(com.intellij.util.Url,java.io.File,com.intellij.openapi.vfs.impl.http.RemoteContentProvider$DownloadingCallback):V
c:com.intellij.openapi.vfs.impl.http.FileDownloadingAdapter
- com.intellij.openapi.vfs.impl.http.FileDownloadingListener
- <init>():V
- downloadingCancelled():V
- downloadingStarted():V
- errorOccurred(java.lang.String):V
- fileDownloaded(com.intellij.openapi.vfs.VirtualFile):V
- progressFractionChanged(D):V
- progressMessageChanged(Z,java.lang.String):V
f:com.intellij.openapi.vfs.impl.http.HttpsFileSystem
- com.intellij.openapi.vfs.ex.http.HttpFileSystem
- sf:HTTPS_PROTOCOL:java.lang.String
- <init>():V
- s:getHttpsInstance():com.intellij.openapi.vfs.impl.http.HttpsFileSystem
a:com.intellij.openapi.vfs.impl.http.RemoteContentProvider
- <init>():V
- a:canProvideContent(com.intellij.util.Url):Z
- a:isUpToDate(com.intellij.util.Url,com.intellij.openapi.vfs.VirtualFile):Z
- a:saveContent(com.intellij.util.Url,java.io.File,com.intellij.openapi.vfs.impl.http.RemoteContentProvider$DownloadingCallback):V
com.intellij.openapi.vfs.impl.http.RemoteContentProvider$DownloadingCallback
- a:errorOccurred(java.lang.String,Z):V
- a:finished(com.intellij.openapi.fileTypes.FileType):V
- a:isCancelled():Z
- a:setProgressFraction(D):V
- a:setProgressText(java.lang.String,Z):V
a:com.intellij.openapi.vfs.impl.http.RemoteFileManager
- <init>():V
- a:addFileListener(com.intellij.openapi.vfs.ex.http.HttpVirtualFileListener):V
- a:addFileListener(com.intellij.openapi.vfs.ex.http.HttpVirtualFileListener,com.intellij.openapi.Disposable):V
- a:addRemoteContentProvider(com.intellij.openapi.vfs.impl.http.RemoteContentProvider):V
- a:addRemoteContentProvider(com.intellij.openapi.vfs.impl.http.RemoteContentProvider,com.intellij.openapi.Disposable):V
- s:getInstance():com.intellij.openapi.vfs.impl.http.RemoteFileManager
- a:removeFileListener(com.intellij.openapi.vfs.ex.http.HttpVirtualFileListener):V
- a:removeRemoteContentProvider(com.intellij.openapi.vfs.impl.http.RemoteContentProvider):V
c:com.intellij.openapi.vfs.impl.jar.JarFileSystemImpl
- com.intellij.openapi.vfs.JarFileSystem
- <init>():V
- p:composeRootPath(java.lang.String):java.lang.String
- p:extractLocalPath(java.lang.String):java.lang.String
- extractPresentableUrl(java.lang.String):java.lang.String
- p:extractRootPath(java.lang.String):java.lang.String
- findFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- findFileByPathIfCached(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- getArchiveCrcHashes(com.intellij.openapi.vfs.VirtualFile):java.util.Map
- p:getHandler(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.impl.ZipHandlerBase
- getMirroredFile(com.intellij.openapi.vfs.VirtualFile):java.io.File
- getProtocol():java.lang.String
- isMakeCopyOfJar(java.io.File):Z
- markDirtyAndRefreshVirtualFileDeepInsideJarForTest(com.intellij.openapi.vfs.VirtualFile):V
- p:normalize(java.lang.String):java.lang.String
- refresh(Z):V
- refreshAndFindFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
f:com.intellij.openapi.vfs.impl.jar.TimedZipHandler
- com.intellij.openapi.vfs.impl.ZipHandlerBase
- <init>(java.lang.String):V
- clearCaches():V
f:com.intellij.openapi.vfs.newvfs.VfsPresentationUtil
- <init>():V
- s:getCustomPresentableNameForUI(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:getFileBackgroundColor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- s:getFileTabBackgroundColor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- s:getPresentableNameForAction(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:getPresentableNameForUI(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:getUniquePresentableNameForUI(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
c:com.intellij.openapi.vfs.newvfs.impl.FakeVirtualFile
- com.intellij.openapi.vfs.newvfs.impl.StubVirtualFile
- <init>(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- getName():java.lang.String
- getParent():com.intellij.openapi.vfs.VirtualFile
- getPath():java.lang.String
- isDirectory():Z
f:com.intellij.openapi.vfs.newvfs.impl.FilePathInterner
- com.intellij.util.containers.Interner
- <init>():V
- <init>(com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl):V
- intern(java.lang.CharSequence):java.lang.CharSequence
f:com.intellij.openapi.vfs.newvfs.impl.FsRoot
- com.intellij.openapi.vfs.newvfs.impl.VirtualDirectoryImpl
- getPath():java.lang.String
- getPresentableName():java.lang.String
- getUrl():java.lang.String
- setNewName(java.lang.String):V
- setParent(com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.openapi.vfs.newvfs.impl.VfsRootAccess
- <init>():V
- s:allowRootAccess(com.intellij.openapi.Disposable,java.lang.String[]):V
c:com.intellij.openapi.vfs.newvfs.impl.VfsRootAccess$VfsRootAccessNotAllowedError
- java.lang.AssertionError
- com.intellij.openapi.diagnostic.ControlFlowException
- <init>(com.intellij.openapi.vfs.VirtualFile,java.util.ArrayList):V
c:com.intellij.openapi.vfs.newvfs.impl.VirtualDirectoryImpl
- com.intellij.openapi.vfs.newvfs.impl.VirtualFileSystemEntry
- addChild(com.intellij.openapi.vfs.newvfs.impl.VirtualFileSystemEntry):V
- allChildrenLoaded():Z
- p:changeUserMap(com.intellij.util.keyFMap.KeyFMap,com.intellij.util.keyFMap.KeyFMap):Z
- contentsToByteArray():B[]
- findChild(java.lang.String):com.intellij.openapi.vfs.newvfs.impl.VirtualFileSystemEntry
- findChildIfCached(java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- getCachedChildren():java.util.List
- getChildren():com.intellij.openapi.vfs.VirtualFile[]
- getFileSystem():com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem
- getInputStream():java.io.InputStream
- getOutputStream(java.lang.Object,J,J):java.io.OutputStream
- getSuspiciousNames():java.util.List
- p:getUserMap():com.intellij.util.keyFMap.KeyFMap
- isCaseSensitive():Z
- isDirectory():Z
- iterInDbChildren():java.lang.Iterable
- iterInDbChildrenWithoutLoadingVfsFromOtherProjects():java.lang.Iterable
- markDirtyRecursively():V
- refreshAndFindChild(java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- removeChild(com.intellij.openapi.vfs.VirtualFile):V
- removeChildren(it.unimi.dsi.fastutil.ints.IntSet,java.util.List):V
- p:setUserMap(com.intellij.util.keyFMap.KeyFMap):V
f:com.intellij.openapi.vfs.newvfs.impl.VirtualFileImpl
- com.intellij.openapi.vfs.newvfs.impl.VirtualFileSystemEntry
- computeWithPreloadedContentHint(B[],java.util.function.Supplier):java.lang.Object
- contentsToByteArray():B[]
- contentsToByteArray(Z):B[]
- findChild(java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- findChildIfCached(java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- getCachedChildren():java.util.Collection
- getChildren():com.intellij.openapi.vfs.VirtualFile[]
- getDetectedLineSeparator():java.lang.String
- getFileSystem():com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem
- getInputStream():java.io.InputStream
- getOutputStream(java.lang.Object,J,J):java.io.OutputStream
- isCaseSensitive():Z
- isDirectory():Z
- iterInDbChildren():java.lang.Iterable
- refreshAndFindChild(java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- setBinaryContent(B[],J,J,java.lang.Object):V
- setDetectedLineSeparator(java.lang.String):V
a:com.intellij.openapi.vfs.newvfs.impl.VirtualFileSystemEntry
- com.intellij.openapi.vfs.newvfs.NewVirtualFile
- sf:EMPTY_ARRAY:com.intellij.openapi.vfs.newvfs.impl.VirtualFileSystemEntry[]
- copy(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildData(java.lang.Object,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildDirectory(java.lang.Object,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- delete(java.lang.Object):V
- equals(java.lang.Object):Z
- f:exists():Z
- getCanonicalFile():com.intellij.openapi.vfs.newvfs.NewVirtualFile
- getCanonicalPath():java.lang.String
- getCharset():java.nio.charset.Charset
- f:getFileType():com.intellij.openapi.fileTypes.FileType
- getId():I
- getLength():J
- getModificationStamp():J
- getName():java.lang.String
- f:getNameId():I
- getNameSequence():java.lang.CharSequence
- getParent():com.intellij.openapi.vfs.newvfs.impl.VirtualDirectoryImpl
- getPath():java.lang.String
- getPresentableName():java.lang.String
- getTimeStamp():J
- getUrl():java.lang.String
- hashCode():I
- is(com.intellij.openapi.vfs.VFileProperty):Z
- isDirty():Z
- isInLocalFileSystem():Z
- isOffline():Z
- isRecursiveOrCircularSymlink():Z
- f:isValid():Z
- isWritable():Z
- markClean():V
- markDirty():V
- markDirtyRecursively():V
- move(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- rename(java.lang.Object,java.lang.String):V
- setModificationStamp(J):V
- setNewName(java.lang.String):V
- setOffline(Z):V
- setParent(com.intellij.openapi.vfs.VirtualFile):V
- setTimeStamp(J):V
- setWritable(Z):V
a:com.intellij.openapi.vfs.newvfs.persistent.PersistentFS
- com.intellij.openapi.vfs.newvfs.ManagingFS
- <init>():V
- p:accessDiskWithCheckCanceled(java.util.function.Function):java.util.function.Function
- a:acquireContent(com.intellij.openapi.vfs.VirtualFile):I
- s:areChildrenCaseSensitive(I):com.intellij.openapi.util.io.FileAttributes$CaseSensitivity
- a:clearIdCache():V
- a:contentsToByteArray(I):B[]
- a:contentsToByteArray(com.intellij.openapi.vfs.VirtualFile,Z):B[]
- a:getCurrentContentId(com.intellij.openapi.vfs.VirtualFile):I
- a:getFileAttributes(I):I
- s:getInstance():com.intellij.openapi.vfs.newvfs.persistent.PersistentFS
- a:getLastRecordedLength(com.intellij.openapi.vfs.VirtualFile):J
- a:getName(I):java.lang.String
- s:isDirectory(I):Z
- s:isHidden(I):Z
- a:isHidden(com.intellij.openapi.vfs.VirtualFile):Z
- s:isOfflineByDefault(I):Z
- s:isSpecialFile(I):Z
- s:isSymLink(I):Z
- s:isWritable(I):Z
- a:listPersisted(com.intellij.openapi.vfs.VirtualFile):java.lang.String[]
- a:mayHaveChildren(I):Z
- processEvents(java.util.List):V
- a:releaseContent(I):V
- a:storeUnlinkedContent(B[]):I
@:com.intellij.openapi.vfs.newvfs.persistent.PersistentFS$Attributes
- java.lang.annotation.Annotation
f:com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl
- com.intellij.openapi.vfs.newvfs.persistent.PersistentFS
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.application.Application):V
- acquireContent(com.intellij.openapi.vfs.VirtualFile):I
- areChildrenLoaded(com.intellij.openapi.vfs.VirtualFile):Z
- cleanPersistedContent(I):V
- cleanPersistedContents():V
- clearIdCache():V
- contentHashIfStored(com.intellij.openapi.vfs.VirtualFile):B[]
- contentsToByteArray(I):B[]
- contentsToByteArray(com.intellij.openapi.vfs.VirtualFile):B[]
- contentsToByteArray(com.intellij.openapi.vfs.VirtualFile,Z):B[]
- copyFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildDirectory(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- deleteFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- dispose():V
- exists(com.intellij.openapi.vfs.VirtualFile):Z
- s:fileAttributesToFlags(Z,Z,Z,Z,Z,Z,Z):I
- findFileById(I):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- findRoot(java.lang.String,com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem):com.intellij.openapi.vfs.newvfs.impl.VirtualFileSystemEntry
- getCachedDir(I):com.intellij.openapi.vfs.newvfs.impl.VirtualFileSystemEntry
- s:getContentHashIfStored(com.intellij.openapi.vfs.VirtualFile):B[]
- getCreationTimestamp():J
- getCurrentContentId(com.intellij.openapi.vfs.VirtualFile):I
- getFileAttributes(I):I
- getFilesystemModificationCount():I
- getInputStream(com.intellij.openapi.vfs.VirtualFile):java.io.InputStream
- getLastRecordedLength(com.intellij.openapi.vfs.VirtualFile):J
- getLength(com.intellij.openapi.vfs.VirtualFile):J
- getLocalRoots():com.intellij.openapi.vfs.VirtualFile[]
- getModificationCount(com.intellij.openapi.vfs.VirtualFile):I
- getName(I):java.lang.String
- getOrCacheDir(com.intellij.openapi.vfs.newvfs.impl.VirtualDirectoryImpl):com.intellij.openapi.vfs.newvfs.impl.VirtualFileSystemEntry
- getOutputStream(com.intellij.openapi.vfs.VirtualFile,java.lang.Object,J,J):java.io.OutputStream
- getRoots():com.intellij.openapi.vfs.VirtualFile[]
- getRoots(com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem):com.intellij.openapi.vfs.VirtualFile[]
- getStructureModificationCount():I
- getTimeStamp(com.intellij.openapi.vfs.VirtualFile):J
- incStructuralModificationCount():V
- isDirectory(com.intellij.openapi.vfs.VirtualFile):Z
- isHidden(com.intellij.openapi.vfs.VirtualFile):Z
- isSymLink(com.intellij.openapi.vfs.VirtualFile):Z
- isWritable(com.intellij.openapi.vfs.VirtualFile):Z
- list(com.intellij.openapi.vfs.VirtualFile):java.lang.String[]
- listPersisted(com.intellij.openapi.vfs.VirtualFile):java.lang.String[]
- mayHaveChildren(I):Z
- moveChildren(I,I):V
- s:moveChildrenRecords(I,I):V
- moveFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- readAttribute(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.newvfs.FileAttribute):com.intellij.openapi.vfs.newvfs.AttributeInputStream
- releaseContent(I):V
- renameFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- resolveSymLink(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- setTimeStamp(com.intellij.openapi.vfs.VirtualFile,J):V
- setWritable(com.intellij.openapi.vfs.VirtualFile,Z):V
- storeUnlinkedContent(B[]):I
- wereChildrenAccessed(com.intellij.openapi.vfs.VirtualFile):Z
- writeAttribute(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.newvfs.FileAttribute):com.intellij.openapi.vfs.newvfs.AttributeOutputStream
com.intellij.openapi.vfs.newvfs.persistent.RootSemanticAddressProvider
- a:getPredefinedSemanticRoots():java.util.List
f:com.intellij.openapi.vfs.newvfs.persistent.SemanticLabel
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getName():java.lang.String
- getType():java.lang.String
- getVersion():java.lang.String
- hashCode():I
a:com.intellij.openapi.wm.ToolWindowContextMenuActionBase
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- a:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.wm.ToolWindow,com.intellij.ui.content.Content):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isDumbAware():Z
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
- a:update(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.wm.ToolWindow,com.intellij.ui.content.Content):V
c:com.intellij.openapi.wm.ex.AbstractDelegatingToRootTraversalPolicy
- java.awt.FocusTraversalPolicy
- <init>():V
- getComponentAfter(java.awt.Container,java.awt.Component):java.awt.Component
- getComponentBefore(java.awt.Container,java.awt.Component):java.awt.Component
- getDefaultComponent(java.awt.Container):java.awt.Component
- getFirstComponent(java.awt.Container):java.awt.Component
- getLastComponent(java.awt.Container):java.awt.Component
c:com.intellij.openapi.wm.ex.IdeFocusTraversalPolicy
- javax.swing.LayoutFocusTraversalPolicy
- <init>():V
- pf:accept(java.awt.Component):Z
- getComponentAfter(java.awt.Container,java.awt.Component):java.awt.Component
- getComponentBefore(java.awt.Container,java.awt.Component):java.awt.Component
- getDefaultComponent(java.awt.Container):java.awt.Component
- s:getPreferredFocusedComponent(javax.swing.JComponent):javax.swing.JComponent
- s:getPreferredFocusedComponent(javax.swing.JComponent,java.awt.FocusTraversalPolicy):javax.swing.JComponent
- p:getProject():com.intellij.openapi.project.Project
com.intellij.openapi.wm.ex.StatusBarEx
- com.intellij.openapi.wm.StatusBar
- a:addProgress(com.intellij.openapi.wm.ex.ProgressIndicatorEx,com.intellij.openapi.progress.TaskInfo):V
- a:getBackgroundProcesses():java.util.List
- a:getSize():java.awt.Dimension
- a:isProcessWindowOpen():Z
- a:isVisible():Z
- a:notifyProgressByBalloon(com.intellij.openapi.ui.MessageType,java.lang.String):com.intellij.openapi.ui.popup.BalloonHandler
- a:notifyProgressByBalloon(com.intellij.openapi.ui.MessageType,java.lang.String,javax.swing.Icon,javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.popup.BalloonHandler
- a:setProcessWindowOpen(Z):V
com.intellij.openapi.wm.ex.ToolWindowEx
- com.intellij.openapi.wm.ToolWindow
- canCloseContents():Z
- getDecoration():com.intellij.openapi.wm.ex.ToolWindowEx$ToolWindowDecoration
- a:getDecorator():com.intellij.openapi.wm.impl.InternalDecorator
- getEmptyText():com.intellij.util.ui.StatusText
- a:getInternalType():com.intellij.openapi.wm.ToolWindowType
- a:setTabActions(com.intellij.openapi.actionSystem.AnAction[]):V
- a:setTabDoubleClickActions(java.util.List):V
- setTitleActions(com.intellij.openapi.actionSystem.AnAction[]):V
- a:stretchHeight(I):V
- a:stretchWidth(I):V
- updateContentUi():V
f:com.intellij.openapi.wm.ex.ToolWindowEx$Border
- javax.swing.border.EmptyBorder
- <init>():V
- <init>(Z,Z,Z,Z):V
f:com.intellij.openapi.wm.ex.ToolWindowEx$ToolWindowDecoration
- <init>(javax.swing.Icon,com.intellij.openapi.actionSystem.ActionGroup):V
- getActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- getIcon():javax.swing.Icon
a:com.intellij.openapi.wm.ex.ToolWindowManagerAdapter
- com.intellij.openapi.wm.ex.ToolWindowManagerListener
- <init>():V
a:com.intellij.openapi.wm.ex.ToolWindowManagerEx
- com.intellij.openapi.wm.ToolWindowManager
- sf:Companion:com.intellij.openapi.wm.ex.ToolWindowManagerEx$Companion
- <init>():V
- addToolWindowManagerListener(com.intellij.openapi.wm.ex.ToolWindowManagerListener):V
- a:clearSideStack():V
- a:getIdsOn(com.intellij.openapi.wm.ToolWindowAnchor):java.util.List
- sf:getInstanceEx(com.intellij.openapi.project.Project):com.intellij.openapi.wm.ex.ToolWindowManagerEx
- a:getLayout():com.intellij.openapi.wm.impl.DesktopLayout
- a:getLayoutToRestoreLater():com.intellij.openapi.wm.impl.DesktopLayout
- a:getMoreButtonSide():com.intellij.openapi.wm.ToolWindowAnchor
- a:hideToolWindow(java.lang.String,Z):V
- a:setLayout(com.intellij.openapi.wm.impl.DesktopLayout):V
- a:setLayoutToRestoreLater(com.intellij.openapi.wm.impl.DesktopLayout):V
- setMoreButtonSide(com.intellij.openapi.wm.ToolWindowAnchor):V
- setShowNames(Z):V
- setSideCustomWidth(com.intellij.toolWindow.ToolWindowToolbar,I):V
- shouldUpdateToolWindowContent(com.intellij.openapi.wm.ToolWindow):Z
f:com.intellij.openapi.wm.ex.ToolWindowManagerEx$Companion
- f:getInstanceEx(com.intellij.openapi.project.Project):com.intellij.openapi.wm.ex.ToolWindowManagerEx
com.intellij.openapi.wm.ex.ToolWindowManagerListener
- java.util.EventListener
- sf:TOPIC:com.intellij.util.messages.Topic
- stateChanged():V
- stateChanged(com.intellij.openapi.wm.ToolWindowManager):V
- stateChanged(com.intellij.openapi.wm.ToolWindowManager,com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType):V
- toolWindowRegistered(java.lang.String):V
- toolWindowShown(com.intellij.openapi.wm.ToolWindow):V
- toolWindowShown(java.lang.String,com.intellij.openapi.wm.ToolWindow):V
- toolWindowUnregistered(java.lang.String,com.intellij.openapi.wm.ToolWindow):V
- toolWindowsRegistered(java.util.List,com.intellij.openapi.wm.ToolWindowManager):V
e:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- java.lang.Enum
- sf:ActivateToolWindow:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:HideToolWindow:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:MoreButtonUpdated:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:MovedOrResized:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:RegisterToolWindow:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:SetContentUiType:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:SetLayout:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:SetShowStripeButton:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:SetSideTool:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:SetSideToolAndAnchor:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:SetToolWindowAnchor:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:SetToolWindowAutoHide:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:SetToolWindowType:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:SetVisibleOnLargeStripe:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:ShowNames:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:ShowToolWindow:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:SideCustomWidth:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:ToolWindowAvailable:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:ToolWindowUnavailable:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- sf:UnregisterToolWindow:com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- s:valueOf(java.lang.String):com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType
- s:values():com.intellij.openapi.wm.ex.ToolWindowManagerListener$ToolWindowManagerEventType[]
a:com.intellij.openapi.wm.ex.WindowManagerEx
- com.intellij.openapi.wm.WindowManager
- <init>():V
- a:findFrameFor(com.intellij.openapi.project.Project):com.intellij.openapi.wm.IdeFrame
- s:getInstanceEx():com.intellij.openapi.wm.ex.WindowManagerEx
- a:getScreenBounds():java.awt.Rectangle
- a:getScreenBounds(com.intellij.openapi.project.Project):java.awt.Rectangle
- a:isFrameReused(com.intellij.openapi.wm.impl.ProjectFrameHelper):Z
- requestUserAttention(com.intellij.openapi.wm.IdeFrame,Z):V
- a:resetWindow(java.awt.Window):V
- a:setWindowMask(java.awt.Window,java.awt.Shape):V
- a:setWindowShadow(java.awt.Window,com.intellij.openapi.wm.ex.WindowManagerEx$WindowShadowMode):V
e:com.intellij.openapi.wm.ex.WindowManagerEx$WindowShadowMode
- java.lang.Enum
- sf:DISABLED:com.intellij.openapi.wm.ex.WindowManagerEx$WindowShadowMode
- sf:NORMAL:com.intellij.openapi.wm.ex.WindowManagerEx$WindowShadowMode
- sf:SMALL:com.intellij.openapi.wm.ex.WindowManagerEx$WindowShadowMode
- s:valueOf(java.lang.String):com.intellij.openapi.wm.ex.WindowManagerEx$WindowShadowMode
- s:values():com.intellij.openapi.wm.ex.WindowManagerEx$WindowShadowMode[]
a:com.intellij.openapi.wm.impl.AnchoredButton
- javax.swing.JToggleButton
- p:<init>():V
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,javax.swing.Icon):V
- p:<init>(java.lang.String,javax.swing.Icon,Z):V
- p:<init>(java.lang.String,Z):V
- p:<init>(javax.swing.Action):V
- p:<init>(javax.swing.Icon):V
- p:<init>(javax.swing.Icon,Z):V
- a:getAnchor():com.intellij.openapi.wm.ToolWindowAnchor
- a:getMnemonic2():I
c:com.intellij.openapi.wm.impl.CloseProjectWindowHelper
- sf:Companion:com.intellij.openapi.wm.impl.CloseProjectWindowHelper$Companion
- <init>():V
- p:closeProjectAndShowWelcomeFrameIfNoProjectOpened(com.intellij.openapi.project.Project):V
- p:getNumberOfOpenedProjects():I
- p:isMacSystemMenu():Z
- p:isShowWelcomeScreenFromSettings():Z
- p:quitApp():V
- windowClosing(com.intellij.openapi.project.Project):V
f:com.intellij.openapi.wm.impl.CloseProjectWindowHelper$Companion
- f:getSHOW_WELCOME_FRAME_FOR_PROJECT():com.intellij.openapi.util.Key
c:com.intellij.openapi.wm.impl.DefaultToolbarComboButtonModel
- com.intellij.openapi.wm.impl.ToolbarComboButtonModel
- <init>():V
- addActionListener(java.awt.event.ActionListener):V
- addChangeListener(javax.swing.event.ChangeListener):V
- pf:fireChangeListeners():V
- getActionListeners():java.util.List
- pf:getMyActionListeners():java.util.List
- pf:getMyChangeListeners():java.util.List
- pf:getMySelected():Z
- isSelected():Z
- removeActionListener(java.awt.event.ActionListener):V
- removeChangeListener(javax.swing.event.ChangeListener):V
- pf:setMySelected(Z):V
- setSelected(Z):V
c:com.intellij.openapi.wm.impl.DefaultToolbarSplitButtonModel
- com.intellij.openapi.wm.impl.ToolbarSplitButtonModel
- <init>():V
- addActionListener(java.awt.event.ActionListener):V
- addChangeListener(javax.swing.event.ChangeListener):V
- addExpandListener(java.awt.event.ActionListener):V
- pf:fireChangeListeners():V
- getActionListeners():java.util.List
- getExpandListeners():java.util.List
- isActionButtonSelected():Z
- isExpandButtonSelected():Z
- removeActionListener(java.awt.event.ActionListener):V
- removeChangeListener(javax.swing.event.ChangeListener):V
- removeExpandListener(java.awt.event.ActionListener):V
- setActionButtonSelected(Z):V
- setExpandButtonSelected(Z):V
a:com.intellij.openapi.wm.impl.ExpandableComboAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- a:createPopup(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.ui.popup.JBPopup
- p:createToolbarComboButton(com.intellij.openapi.wm.impl.ToolbarComboButtonModel):com.intellij.openapi.wm.impl.ToolbarComboButton
- updateCustomComponent(javax.swing.JComponent,com.intellij.openapi.actionSystem.Presentation):V
f:com.intellij.openapi.wm.impl.FocusManagerImpl
- com.intellij.openapi.wm.IdeFocusManager
- com.intellij.openapi.Disposable
- sf:FOCUS_REQUESTS_LOG:com.intellij.openapi.diagnostic.Logger
- <init>():V
- dispose():V
- doWhenFocusSettlesDown(com.intellij.openapi.util.ExpirableRunnable):V
- doWhenFocusSettlesDown(java.lang.Runnable):V
- doWhenFocusSettlesDown(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- getFocusOwner():java.awt.Component
- getFocusTargetFor(javax.swing.JComponent):javax.swing.JComponent
- getFocusedDescendantFor(java.awt.Component):java.awt.Component
- s:getInstance():com.intellij.openapi.wm.IdeFocusManager
- getLastFocusedFor(java.awt.Window):java.awt.Component
- getLastFocusedFrame():com.intellij.openapi.wm.IdeFrame
- getLastFocusedIdeWindow():java.awt.Window
- getRequests():java.util.List
- isFocusTransferEnabled():Z
- recordFocusRequest(java.awt.Component,Z):V
- requestDefaultFocus(Z):com.intellij.openapi.util.ActionCallback
- requestFocus(java.awt.Component,Z):com.intellij.openapi.util.ActionCallback
- requestFocusInProject(java.awt.Component,com.intellij.openapi.project.Project):com.intellij.openapi.util.ActionCallback
- runOnOwnContext(com.intellij.openapi.actionSystem.DataContext,java.lang.Runnable):V
- setLastFocusedAtDeactivation(java.awt.Window,java.awt.Component):V
- toFront(javax.swing.JComponent):V
a:com.intellij.openapi.wm.impl.FrameTitleBuilder
- sf:Companion:com.intellij.openapi.wm.impl.FrameTitleBuilder$Companion
- <init>():V
- a:getFileTitle(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- sf:getInstance():com.intellij.openapi.wm.impl.FrameTitleBuilder
- a:getProjectTitle(com.intellij.openapi.project.Project):java.lang.String
f:com.intellij.openapi.wm.impl.FrameTitleBuilder$Companion
- f:getInstance():com.intellij.openapi.wm.impl.FrameTitleBuilder
f:com.intellij.openapi.wm.impl.IdeBackgroundUtil
- sf:EDITOR_PROP:java.lang.String
- sf:FRAME_PROP:java.lang.String
- sf:NO_BACKGROUND:com.intellij.openapi.util.Key
- <init>():V
- s:createTemporaryBackgroundTransform(javax.swing.JComponent,java.awt.Image,com.intellij.openapi.wm.impl.IdeBackgroundUtil$Fill,com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor,F,java.awt.Insets,com.intellij.openapi.Disposable):V
- s:createTemporaryBackgroundTransform(javax.swing.JPanel,java.lang.String,com.intellij.openapi.Disposable):V
- s:getBackgroundSpec(com.intellij.openapi.project.Project,java.lang.String):java.lang.String
- s:getIdeBackgroundColor():java.awt.Color
- s:getOriginalGraphics(java.awt.Graphics):java.awt.Graphics2D
- s:isEditorBackgroundImageSet(com.intellij.openapi.project.Project):Z
- s:repaintAllWindows():V
- s:resetBackgroundImagePainters():V
- s:withEditorBackground(java.awt.Graphics,javax.swing.JComponent):java.awt.Graphics2D
- s:withFrameBackground(java.awt.Graphics,javax.swing.JComponent):java.awt.Graphics2D
e:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- java.lang.Enum
- sf:BOTTOM_CENTER:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- sf:BOTTOM_LEFT:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- sf:BOTTOM_RIGHT:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- sf:CENTER:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- sf:MIDDLE_LEFT:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- sf:MIDDLE_RIGHT:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- sf:TOP_CENTER:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- sf:TOP_LEFT:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- sf:TOP_RIGHT:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- s:valueOf(java.lang.String):com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor
- s:values():com.intellij.openapi.wm.impl.IdeBackgroundUtil$Anchor[]
e:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Fill
- java.lang.Enum
- sf:PLAIN:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Fill
- sf:SCALE:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Fill
- sf:TILE:com.intellij.openapi.wm.impl.IdeBackgroundUtil$Fill
- s:valueOf(java.lang.String):com.intellij.openapi.wm.impl.IdeBackgroundUtil$Fill
- s:values():com.intellij.openapi.wm.impl.IdeBackgroundUtil$Fill[]
f:com.intellij.openapi.wm.impl.IdeFocusManagerImpl
- com.intellij.openapi.wm.IdeFocusManager
- <init>():V
- doWhenFocusSettlesDown(com.intellij.openapi.util.ExpirableRunnable):V
- doWhenFocusSettlesDown(java.lang.Runnable):V
- doWhenFocusSettlesDown(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- getFocusOwner():java.awt.Component
- getFocusTargetFor(javax.swing.JComponent):javax.swing.JComponent
- getFocusedDescendantFor(java.awt.Component):java.awt.Component
- getLastFocusedFor(java.awt.Window):java.awt.Component
- getLastFocusedFrame():com.intellij.openapi.wm.IdeFrame
- getLastFocusedIdeWindow():java.awt.Window
- isFocusTransferEnabled():Z
- requestFocus(java.awt.Component,Z):com.intellij.openapi.util.ActionCallback
- requestFocusInProject(java.awt.Component,com.intellij.openapi.project.Project):com.intellij.openapi.util.ActionCallback
- runOnOwnContext(com.intellij.openapi.actionSystem.DataContext,java.lang.Runnable):V
- toFront(javax.swing.JComponent):V
com.intellij.openapi.wm.impl.IdeGlassPaneEx
- com.intellij.openapi.wm.IdeGlassPane
- a:add(java.awt.Component):java.awt.Component
- a:getComponent(I):java.awt.Component
- a:getComponentCount():I
- a:getRootPane():javax.swing.JRootPane
- a:isInModalContext():Z
- a:remove(java.awt.Component):V
f:com.intellij.openapi.wm.impl.IdeGlassPaneImpl
- javax.swing.JComponent
- com.intellij.ide.IdeEventQueue$EventDispatcher
- com.intellij.openapi.wm.impl.IdeGlassPaneEx
- sf:Companion:com.intellij.openapi.wm.impl.IdeGlassPaneImpl$Companion
- <init>(javax.swing.JRootPane):V
- <init>(javax.swing.JRootPane,Z):V
- b:<init>(javax.swing.JRootPane,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addMouseListener(java.awt.event.MouseListener,kotlinx.coroutines.CoroutineScope):V
- addMouseMotionPreprocessor(java.awt.event.MouseMotionListener,com.intellij.openapi.Disposable):V
- addMousePreprocessor(java.awt.event.MouseListener,com.intellij.openapi.Disposable):V
- addPainter(java.awt.Component,com.intellij.openapi.ui.Painter,com.intellij.openapi.Disposable):V
- dispatch(java.awt.AWTEvent):Z
- doLayout():V
- f:getTargetComponentFor(java.awt.event.MouseEvent):java.awt.Component
- isInModalContext():Z
- isOptimizedDrawingEnabled():Z
- remove(java.awt.Component):V
- sf:savePreProcessedCursor(javax.swing.JComponent,java.awt.Cursor):Z
- setCursor(java.awt.Cursor,java.lang.Object):V
f:com.intellij.openapi.wm.impl.IdeGlassPaneImpl$Companion
- f:forgetPreProcessedCursor(javax.swing.JComponent):V
- f:hasPreProcessedCursor(javax.swing.JComponent):Z
- f:savePreProcessedCursor(javax.swing.JComponent,java.awt.Cursor):Z
a:com.intellij.openapi.wm.impl.InternalDecorator
- com.intellij.ui.components.JBPanel
- sf:TOGGLE_DOCK_MODE_ACTION_ID:java.lang.String
- sf:TOGGLE_FLOATING_MODE_ACTION_ID:java.lang.String
- sf:TOGGLE_SIDE_MODE_ACTION_ID:java.lang.String
- <init>():V
- getContentManager():com.intellij.ui.content.ContentManager
- a:getHeaderHeight():I
- a:getHeaderToolbar():com.intellij.openapi.actionSystem.ActionToolbar
- a:isHeaderVisible():Z
- isSplitUnsplitInProgress():Z
- a:setHeaderVisible(Z):V
f:com.intellij.openapi.wm.impl.ModalityHelper
- <init>():V
- s:getBlockerForFocusedFrame():java.awt.Dialog
- s:getBlockerForFrame(com.intellij.openapi.wm.IdeFrame):java.awt.Dialog
- s:getModalBlockerFor(java.awt.Window):java.awt.Dialog
- s:isModalBlocked(java.awt.Window):Z
c:com.intellij.openapi.wm.impl.PlatformFrameTitleBuilder
- com.intellij.openapi.wm.impl.FrameTitleBuilder
- <init>():V
- getFileTitle(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getFileTitleAsync(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,kotlin.coroutines.Continuation):java.lang.Object
- getProjectTitle(com.intellij.openapi.project.Project):java.lang.String
a:com.intellij.openapi.wm.impl.ProjectFrameHelper
- com.intellij.openapi.actionSystem.UiDataProvider
- com.intellij.openapi.wm.IdeFrame
- com.intellij.util.ui.accessibility.AccessibleContextAccessor
- sf:Companion:com.intellij.openapi.wm.impl.ProjectFrameHelper$Companion
- f:appClosing():V
- dispose():V
- getBalloonLayout():com.intellij.ui.BalloonLayout
- getComponent():javax.swing.JComponent
- getCurrentAccessibleContext():javax.accessibility.AccessibleContext
- f:getFrame():com.intellij.openapi.wm.impl.IdeFrameImpl
- sf:getFrameHelper(java.awt.Window):com.intellij.openapi.wm.impl.ProjectFrameHelper
- getProject():com.intellij.openapi.project.Project
- getStatusBar():com.intellij.openapi.wm.impl.status.IdeStatusBarImpl
- p:getTitleInfoProviders():java.util.List
- installDefaultProjectStatusBarWidgets(com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- isInFullScreen():Z
- notifyProjectActivation():V
- f:postInit():V
- setFileTitle(java.lang.String,java.nio.file.Path):V
- setFrameTitle(java.lang.String):V
- f:storeStateForReuse():V
- suggestChildFrameBounds():java.awt.Rectangle
- toggleFullScreen(Z):kotlinx.coroutines.Job
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- f:updateMainMenuActions():V
- f:updateTitle(java.lang.String,com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- f:updateView():V
- windowClosing(com.intellij.openapi.project.Project):V
f:com.intellij.openapi.wm.impl.ProjectFrameHelper$Companion
- f:getFrameHelper(java.awt.Window):com.intellij.openapi.wm.impl.ProjectFrameHelper
- f:getSuperUserSuffix():java.lang.String
f:com.intellij.openapi.wm.impl.ProjectWindowAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.wm.impl.ProjectWindowAction):V
- dispose():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getNext():com.intellij.openapi.wm.impl.ProjectWindowAction
- getPrevious():com.intellij.openapi.wm.impl.ProjectWindowAction
- getProjectLocation():java.lang.String
- getProjectName():java.lang.String
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
a:com.intellij.openapi.wm.impl.SplitButtonAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>():V
- p:buttonPressed(java.awt.event.ActionEvent,javax.swing.JComponent,com.intellij.openapi.actionSystem.Presentation,java.lang.String):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- pa:createPopup(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.ui.popup.JBPopup
- updateCustomComponent(javax.swing.JComponent,com.intellij.openapi.actionSystem.Presentation):V
com.intellij.openapi.wm.impl.TitleInfoProvider
- sf:Companion:com.intellij.openapi.wm.impl.TitleInfoProvider$Companion
- a:addUpdateListener(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- a:getBorderlessPrefix():java.lang.String
- a:getBorderlessSuffix():java.lang.String
- a:getValue(com.intellij.openapi.project.Project):java.lang.String
- a:isActive(com.intellij.openapi.project.Project):Z
f:com.intellij.openapi.wm.impl.TitleInfoProvider$Companion
- f:fireConfigurationChanged():V
- f:getProviders():java.util.List
c:com.intellij.openapi.wm.impl.ToolbarComboButton
- com.intellij.internal.inspector.UiInspectorContextProvider
- javax.swing.JComponent
- <init>(com.intellij.openapi.wm.impl.ToolbarComboButtonModel):V
- getLeftGap():I
- f:getMargin():java.awt.Insets
- f:getModel():com.intellij.openapi.wm.impl.ToolbarComboButtonModel
- getUIClassID():java.lang.String
- f:setMargin(java.awt.Insets):V
com.intellij.openapi.wm.impl.ToolbarComboButtonModel
- a:addActionListener(java.awt.event.ActionListener):V
- a:addChangeListener(javax.swing.event.ChangeListener):V
- a:getActionListeners():java.util.List
- a:isSelected():Z
- a:removeActionListener(java.awt.event.ActionListener):V
- a:removeChangeListener(javax.swing.event.ChangeListener):V
- a:setSelected(Z):V
a:com.intellij.openapi.wm.impl.ToolbarComboWidget
- javax.swing.JComponent
- com.intellij.internal.inspector.UiInspectorContextProvider
- <init>():V
- f:addPressListener(java.awt.event.ActionListener):V
- createPopup(java.awt.event.InputEvent):com.intellij.openapi.ui.popup.JBPopup
- a:doExpand(java.awt.event.InputEvent):V
- f:getHighlightBackground():java.awt.Color
- f:getHoverBackground():java.awt.Color
- f:getLeftIcons():java.util.List
- f:getLeftIconsGap():I
- f:getPressListeners():java.util.List
- f:getRightIcons():java.util.List
- f:getRightIconsGap():I
- f:getText():java.lang.String
- f:getTransparentHoverBackground():java.awt.Color
- getUIClassID():java.lang.String
- getUiInspectorContext():java.util.List
- f:isExpandable():Z
- f:isPopupShowing():Z
- f:setExpandable(Z):V
- f:setHighlightBackground(java.awt.Color):V
- f:setHoverBackground(java.awt.Color):V
- f:setLeftIcons(java.util.List):V
- f:setLeftIconsGap(I):V
- f:setPopupShowing(Z):V
- f:setRightIcons(java.util.List):V
- f:setRightIconsGap(I):V
- f:setText(java.lang.String):V
- f:setTransparentHoverBackground(java.awt.Color):V
- updateUI():V
c:com.intellij.openapi.wm.impl.ToolbarSplitButton
- com.intellij.internal.inspector.UiInspectorContextProvider
- javax.swing.JComponent
- <init>(com.intellij.openapi.wm.impl.ToolbarSplitButtonModel):V
- getLeftGap():I
- f:getLeftPartMargin():java.awt.Insets
- f:getModel():com.intellij.openapi.wm.impl.ToolbarSplitButtonModel
- f:getRightPartMargin():java.awt.Insets
- f:getSeparatorMargin():java.awt.Insets
- getUIClassID():java.lang.String
- f:setLeftPartMargin(java.awt.Insets):V
- f:setRightPartMargin(java.awt.Insets):V
- f:setSeparatorMargin(java.awt.Insets):V
com.intellij.openapi.wm.impl.ToolbarSplitButtonModel
- a:addActionListener(java.awt.event.ActionListener):V
- a:addChangeListener(javax.swing.event.ChangeListener):V
- a:addExpandListener(java.awt.event.ActionListener):V
- a:getActionListeners():java.util.List
- a:getExpandListeners():java.util.List
- a:isActionButtonSelected():Z
- a:isExpandButtonSelected():Z
- a:removeActionListener(java.awt.event.ActionListener):V
- a:removeChangeListener(javax.swing.event.ChangeListener):V
- a:removeExpandListener(java.awt.event.ActionListener):V
- a:setActionButtonSelected(Z):V
- a:setExpandButtonSelected(Z):V
a:com.intellij.openapi.wm.impl.VisibilityWatcher
- java.awt.event.ComponentAdapter
- java.beans.PropertyChangeListener
- psf:ANCESTOR_PROPERTY_NAME:java.lang.String
- <init>():V
- f:componentHidden(java.awt.event.ComponentEvent):V
- f:componentShown(java.awt.event.ComponentEvent):V
- deinstall(java.awt.Component):V
- f:install(java.awt.Component):V
- f:propertyChange(java.beans.PropertyChangeEvent):V
- a:visibilityChanged():V
f:com.intellij.openapi.wm.impl.WindowButtonsConfiguration
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.openapi.wm.impl.WindowButtonsConfiguration$Companion
- <init>(kotlinx.coroutines.CoroutineScope):V
- getState():com.intellij.openapi.wm.impl.WindowButtonsConfiguration$State
- f:getStateFlow():kotlinx.coroutines.flow.StateFlow
- loadState(com.intellij.openapi.wm.impl.WindowButtonsConfiguration$State):V
- noStateLoaded():V
- f:scheduleUpdateFromOs():V
f:com.intellij.openapi.wm.impl.WindowButtonsConfiguration$Companion
- f:getInstance():com.intellij.openapi.wm.impl.WindowButtonsConfiguration
f:com.intellij.openapi.wm.impl.WindowButtonsConfiguration$State
- buttons:java.util.List
- rightPosition:Z
- <init>():V
e:com.intellij.openapi.wm.impl.WindowButtonsConfiguration$WindowButton
- java.lang.Enum
- sf:CLOSE:com.intellij.openapi.wm.impl.WindowButtonsConfiguration$WindowButton
- sf:MAXIMIZE:com.intellij.openapi.wm.impl.WindowButtonsConfiguration$WindowButton
- sf:MINIMIZE:com.intellij.openapi.wm.impl.WindowButtonsConfiguration$WindowButton
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.wm.impl.WindowButtonsConfiguration$WindowButton
- s:values():com.intellij.openapi.wm.impl.WindowButtonsConfiguration$WindowButton[]
f:com.intellij.openapi.wm.impl.WindowInfoImpl
- com.intellij.openapi.components.BaseState
- com.intellij.openapi.wm.WindowInfo
- java.lang.Cloneable
- sf:Companion:com.intellij.openapi.wm.impl.WindowInfoImpl$Companion
- sf:DEFAULT_WEIGHT:F
- <init>():V
- clone():java.lang.Object
- f:copy():com.intellij.openapi.wm.impl.WindowInfoImpl
- getAnchor():com.intellij.openapi.wm.ToolWindowAnchor
- getContentUiType():com.intellij.openapi.wm.ToolWindowContentUiType
- getFloatingBounds():java.awt.Rectangle
- getId():java.lang.String
- getInternalType():com.intellij.openapi.wm.ToolWindowType
- getOrder():I
- getSideWeight():F
- getToolWindowPaneId():java.lang.String
- getType():com.intellij.openapi.wm.ToolWindowType
- getWeight():F
- hashCode():I
- isActiveOnStart():Z
- isAutoHide():Z
- isDocked():Z
- isFromPersistentSettings():Z
- isMaximized():Z
- isShowStripeButton():Z
- isSplit():Z
- isVisible():Z
- setActiveOnStart(Z):V
- setAnchor(com.intellij.openapi.wm.ToolWindowAnchor):V
- setAutoHide(Z):V
- setContentUiType(com.intellij.openapi.wm.ToolWindowContentUiType):V
- setFloatingBounds(java.awt.Rectangle):V
- setId(java.lang.String):V
- setInternalType(com.intellij.openapi.wm.ToolWindowType):V
- setMaximized(Z):V
- setOrder(I):V
- setShowStripeButton(Z):V
- setSideWeight(F):V
- setSplit(Z):V
- setToolWindowPaneId(java.lang.String):V
- setType(com.intellij.openapi.wm.ToolWindowType):V
- setVisible(Z):V
- setWeight(F):V
f:com.intellij.openapi.wm.impl.WindowInfoImpl$Companion
f:com.intellij.openapi.wm.impl.WindowManagerImpl
- com.intellij.openapi.wm.ex.WindowManagerEx
- com.intellij.openapi.components.PersistentStateComponentWithModificationTracker
- <init>():V
- f:assignFrame(com.intellij.openapi.wm.impl.ProjectFrameHelper,com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- dispatchComponentEvent(java.awt.event.ComponentEvent):V
- doNotSuggestAsParent(java.awt.Window):V
- findFirstVisibleFrameHelper():com.intellij.openapi.wm.impl.ProjectFrameHelper
- findFrameFor(com.intellij.openapi.project.Project):com.intellij.openapi.wm.IdeFrame
- findFrameHelper(com.intellij.openapi.project.Project):com.intellij.openapi.wm.impl.ProjectFrameHelper
- findVisibleFrame():javax.swing.JFrame
- getAllProjectFrames():com.intellij.openapi.wm.impl.ProjectFrameHelper[]
- getFocusedComponent(com.intellij.openapi.project.Project):java.awt.Component
- getFocusedComponent(java.awt.Window):java.awt.Component
- getFrame(com.intellij.openapi.project.Project):com.intellij.openapi.wm.impl.IdeFrameImpl
- getIdeFrame(com.intellij.openapi.project.Project):com.intellij.openapi.wm.IdeFrame
- getMostRecentFocusedWindow():java.awt.Window
- getProjectFrameHelpers():java.util.List
- getScreenBounds():java.awt.Rectangle
- getScreenBounds(com.intellij.openapi.project.Project):java.awt.Rectangle
- getState():org.jdom.Element
- getStateModificationCount():J
- getStatusBar(com.intellij.openapi.project.Project):com.intellij.openapi.wm.impl.status.IdeStatusBarImpl
- getStatusBar(java.awt.Component,com.intellij.openapi.project.Project):com.intellij.openapi.wm.StatusBar
- isAlphaModeEnabled(java.awt.Window):Z
- isAlphaModeSupported():Z
- isFrameReused(com.intellij.openapi.wm.impl.ProjectFrameHelper):Z
- isFullScreenSupportedInCurrentOS():Z
- isInsideScreenBounds(I,I,I):Z
- isNotSuggestAsParent(java.awt.Window):Z
- loadState(org.jdom.Element):V
- releaseFrame(com.intellij.openapi.wm.impl.ProjectFrameHelper):V
- resetWindow(java.awt.Window):V
- setAlphaModeEnabled(java.awt.Window,Z):V
- setAlphaModeRatio(java.awt.Window,F):V
- setWindowMask(java.awt.Window,java.awt.Shape):V
- setWindowShadow(java.awt.Window,com.intellij.openapi.wm.ex.WindowManagerEx$WindowShadowMode):V
- suggestParentWindow(com.intellij.openapi.project.Project):java.awt.Window
- updateDefaultFrameInfoOnProjectClose(com.intellij.openapi.project.Project):V
- f:withFrameReuseEnabled():java.lang.AutoCloseable
c:com.intellij.openapi.wm.impl.content.BaseLabel
- javax.swing.JLabel
- p:myUi:com.intellij.openapi.wm.impl.content.ToolWindowContentUi
- <init>(com.intellij.openapi.wm.impl.content.ToolWindowContentUi,Z):V
- p:_getGraphics(java.awt.Graphics2D):java.awt.Graphics
- p:allowEngravement():Z
- getAccessibleContext():javax.accessibility.AccessibleContext
- p:getActiveFg(Z):java.awt.Color
- getContent():com.intellij.ui.content.Content
- getFont():java.awt.Font
- s:getLabelFont():java.awt.Font
- p:getPassiveFg(Z):java.awt.Color
- getTabColor():java.awt.Color
- p:paintComponent(java.awt.Graphics):V
- setActiveFg(java.awt.Color):V
- setPassiveFg(java.awt.Color):V
- p:updateTextAndIcon(com.intellij.ui.content.Content,Z,Z):V
- updateUI():V
pc:com.intellij.openapi.wm.impl.content.BaseLabel$AccessibleBaseLabel
- javax.swing.JLabel$AccessibleJLabel
- p:<init>(com.intellij.openapi.wm.impl.content.BaseLabel):V
c:com.intellij.openapi.wm.impl.content.ContentTabLabel
- com.intellij.openapi.wm.impl.content.BaseLabel
- pf:myContent:com.intellij.ui.content.Content
- p:_getGraphics(java.awt.Graphics2D):java.awt.Graphics
- p:allowEngravement():Z
- f:canBeClosed():Z
- p:closeContent():V
- p:fillActions(java.util.List):V
- p:getActiveFg(Z):java.awt.Color
- getContent():com.intellij.ui.content.Content
- p:getOriginalText():java.lang.String
- p:getPassiveFg(Z):java.awt.Color
- p:handleMouseClick(java.awt.event.MouseEvent):V
- isSelected():Z
- p:selectContent():V
- setText(java.lang.String):V
- update():V
f:com.intellij.openapi.wm.impl.content.ToolWindowContentUi
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.ui.content.ContentUI
- sf:ALLOW_DND_FOR_TABS:com.intellij.openapi.util.Key
- sf:DONT_HIDE_TOOLBAR_IN_HEADER:com.intellij.openapi.util.Key
- sf:HIDE_ID_LABEL:java.lang.String
- sf:SELECTED_CONTENT_TAB_LABEL:com.intellij.openapi.actionSystem.DataKey
- isResizableArea:java.util.function.Predicate
- <init>(com.intellij.openapi.wm.impl.ToolWindowImpl,com.intellij.ui.content.ContentManager,javax.swing.JPanel):V
- canBeEmptySelection():Z
- canChangeSelectionTo(com.intellij.ui.content.Content,Z):Z
- connectTabToolbar():V
- disconnectTabToolbar():V
- dropCaches():V
- getCloseActionName():java.lang.String
- getCloseAllButThisActionName():java.lang.String
- getComponent():javax.swing.JComponent
- getContentManager():com.intellij.ui.content.ContentManager
- getNextContentActionName():java.lang.String
- getPreviousContentActionName():java.lang.String
- getTabComponent():javax.swing.JPanel
- getTabToolbar():com.intellij.openapi.actionSystem.ActionToolbar
- getTabToolbarActions():com.intellij.openapi.actionSystem.DefaultActionGroup
- getToolWindowId():java.lang.String
- getWindow():com.intellij.openapi.wm.ToolWindow
- s:initMouseListeners(javax.swing.JComponent,com.intellij.openapi.wm.impl.content.ToolWindowContentUi,Z):V
- isSingleSelection():Z
- isToSelectAddedContent():Z
- setDropInfoIndex(I,I):V
- setManager(com.intellij.ui.content.ContentManager):V
- setTabActions(java.util.List):V
- setTabDoubleClickActions(java.util.List):V
- setType(com.intellij.openapi.wm.ToolWindowContentUiType):V
- showContextMenu(java.awt.Component,I,I,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.ui.content.Content):V
- s:toggleContentPopup(com.intellij.openapi.wm.impl.content.ToolWindowContentUi,com.intellij.ui.content.ContentManager):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- update():V
f:com.intellij.openapi.wm.impl.content.ToolWindowContentUi$TabPanel
- com.intellij.ui.components.panels.NonOpaquePanel
- com.intellij.ide.ui.UISettingsListener
- doLayout():V
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- uiSettingsChanged(com.intellij.ide.ui.UISettings):V
a:com.intellij.openapi.wm.impl.content.tabActions.ContentTabAction
- <init>(com.intellij.openapi.ui.popup.ActiveIcon):V
- getAfterText():Z
- a:getAvailable():Z
- f:getIcon():com.intellij.openapi.ui.popup.ActiveIcon
- getTooltip():java.lang.String
- a:runAction():V
com.intellij.openapi.wm.impl.content.tabActions.ContentTabActionProvider
- sf:Companion:com.intellij.openapi.wm.impl.content.tabActions.ContentTabActionProvider$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createTabActions(com.intellij.ui.content.Content):java.util.List
f:com.intellij.openapi.wm.impl.content.tabActions.ContentTabActionProvider$Companion
c:com.intellij.openapi.wm.impl.customFrameDecorations.header.toolbar.HeaderToolbarButtonLook
- com.intellij.openapi.actionSystem.impl.IdeaActionButtonLook
- <init>():V
- <init>(kotlin.jvm.functions.Function0):V
- b:<init>(kotlin.jvm.functions.Function0,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- p:getButtonArc():com.intellij.util.ui.JBValue
- getDisabledIcon(javax.swing.Icon):javax.swing.Icon
- p:getStateBackground(javax.swing.JComponent,I):java.awt.Color
- paintDownArrow(java.awt.Graphics,com.intellij.openapi.actionSystem.ActionButtonComponent,javax.swing.Icon,javax.swing.Icon):V
- paintIcon(java.awt.Graphics,com.intellij.openapi.actionSystem.ActionButtonComponent,javax.swing.Icon):V
- paintIcon(java.awt.Graphics,com.intellij.openapi.actionSystem.ActionButtonComponent,javax.swing.Icon,I,I):V
- paintLookBorder(java.awt.Graphics,java.awt.Rectangle,java.awt.Color):V
f:com.intellij.openapi.wm.impl.customFrameDecorations.header.toolbar.HeaderToolbarButtonLookKt
- sf:getHeaderBackgroundColor(javax.swing.JComponent,I):java.awt.Color
a:com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup
- com.intellij.openapi.wm.impl.status.EditorBasedWidget
- com.intellij.openapi.wm.CustomStatusBarWidget
- com.intellij.openapi.wm.StatusBarWidget$Multiframe
- <init>(com.intellij.openapi.project.Project,Z):V
- <init>(com.intellij.openapi.project.Project,Z,kotlinx.coroutines.CoroutineScope):V
- p:afterVisibleUpdate(com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState):V
- copy():com.intellij.openapi.wm.StatusBarWidget
- p:createComponent():javax.swing.JPanel
- pa:createInstance(com.intellij.openapi.project.Project):com.intellij.openapi.wm.StatusBarWidget
- pa:createPopup(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.ui.popup.ListPopup
- f:flushUpdateInTests():V
- getComponent():javax.swing.JComponent
- pf:getContext():com.intellij.openapi.actionSystem.DataContext
- getPresentation():com.intellij.openapi.wm.StatusBarWidget$WidgetPresentation
- pf:getScope():kotlinx.coroutines.CoroutineScope
- pa:getWidgetState(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState
- p:handleFileChange(com.intellij.openapi.vfs.VirtualFile):V
- install(com.intellij.openapi.wm.StatusBar):V
- f:isActionEnabled():Z
- p:isEmpty():Z
- p:isEnabledForFile(com.intellij.openapi.vfs.VirtualFile):Z
- p:registerCustomListeners():V
- p:registerCustomListeners(com.intellij.util.messages.MessageBusConnection):V
- f:selectionChanged(com.intellij.openapi.vfs.VirtualFile):V
- pf:setActionEnabled(Z):V
- f:update():V
- update(java.lang.Runnable):V
- p:updateComponent(com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState):V
- p:updateForDocument(com.intellij.openapi.editor.Document):V
- p:updateForFile(com.intellij.openapi.vfs.VirtualFile):V
- f:updateInTests(Z):V
pc:com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState
- sf:Companion:com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState$Companion
- sf:HIDDEN:com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState
- sf:NO_CHANGE:com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState
- sf:NO_CHANGE_MAKE_VISIBLE:com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState
- <init>(java.lang.String,java.lang.String,Z):V
- sf:getDumbModeState(java.lang.String,java.lang.String):com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState
- f:getIcon():javax.swing.Icon
- f:getText():java.lang.String
- f:getToolTip():java.lang.String
- f:isActionEnabled():Z
- f:setIcon(javax.swing.Icon):V
f:com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState$Companion
- f:getDumbModeState(java.lang.String,java.lang.String):com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState
a:com.intellij.openapi.wm.impl.status.EditorBasedWidget
- com.intellij.openapi.wm.StatusBarWidget
- pf:myConnection:com.intellij.util.messages.MessageBusConnection
- pf:myProject:com.intellij.openapi.project.Project
- p:myStatusBar:com.intellij.openapi.wm.StatusBar
- p:<init>(com.intellij.openapi.project.Project):V
- dispose():V
- p:getEditor():com.intellij.openapi.editor.Editor
- f:getFocusedComponent():java.awt.Component
- f:getFocusedEditor():com.intellij.openapi.editor.Editor
- pf:getProject():com.intellij.openapi.project.Project
- p:getSelectedFile():com.intellij.openapi.vfs.VirtualFile
- pf:getStatusBar():com.intellij.openapi.wm.StatusBar
- install(com.intellij.openapi.wm.StatusBar):V
- pf:isDisposed():Z
- isOurEditor(com.intellij.openapi.editor.Editor):Z
- p:registerCustomListeners(com.intellij.util.messages.MessageBusConnection):V
c:com.intellij.openapi.wm.impl.status.EncodingPanel
- com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- ID():java.lang.String
- p:createInstance(com.intellij.openapi.project.Project):com.intellij.openapi.wm.StatusBarWidget
- p:createPopup(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.ui.popup.ListPopup
- p:getWidgetState(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState
- p:registerCustomListeners(com.intellij.util.messages.MessageBusConnection):V
f:com.intellij.openapi.wm.impl.status.FatalErrorWidgetFactory
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.wm.StatusBarWidgetFactory
- <init>():V
- canBeEnabledOn(com.intellij.openapi.wm.StatusBar):Z
- createWidget(com.intellij.openapi.project.Project):com.intellij.openapi.wm.StatusBarWidget
- getDisplayName():java.lang.String
- getId():java.lang.String
- isConfigurable():Z
c:com.intellij.openapi.wm.impl.status.IdeStatusBarImpl
- javax.swing.JComponent
- com.intellij.openapi.actionSystem.UiDataProvider
- com.intellij.openapi.wm.ex.StatusBarEx
- javax.accessibility.Accessible
- sf:Companion:com.intellij.openapi.wm.impl.status.IdeStatusBarImpl$Companion
- sf:NAVBAR_WIDGET_KEY:java.lang.String
- addListener(com.intellij.openapi.wm.StatusBarListener,com.intellij.openapi.Disposable):V
- addProgress(com.intellij.openapi.wm.ex.ProgressIndicatorEx,com.intellij.openapi.progress.TaskInfo):V
- addWidget(com.intellij.openapi.wm.StatusBarWidget):V
- addWidget(com.intellij.openapi.wm.StatusBarWidget,com.intellij.openapi.Disposable):V
- addWidget(com.intellij.openapi.wm.StatusBarWidget,java.lang.String):V
- addWidget(com.intellij.openapi.wm.StatusBarWidget,java.lang.String,com.intellij.openapi.Disposable):V
- createChild(kotlinx.coroutines.CoroutineScope,com.intellij.openapi.wm.IdeFrame,kotlin.jvm.functions.Function0):com.intellij.openapi.wm.StatusBar
- findChild(java.awt.Component):com.intellij.openapi.wm.StatusBar
- fireNotificationPopup(javax.swing.JComponent,java.awt.Color):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getAllWidgets():java.util.Collection
- getBackgroundProcesses():java.util.List
- getComponent():javax.swing.JComponent
- p:getComponentGraphics(java.awt.Graphics):java.awt.Graphics
- getCurrentEditor():kotlin.jvm.functions.Function0
- getInfo():java.lang.String
- getPreferredSize():java.awt.Dimension
- getProject():com.intellij.openapi.project.Project
- getUIClassID():java.lang.String
- getWidget(java.lang.String):com.intellij.openapi.wm.StatusBarWidget
- getWidgetAnchor(java.lang.String):java.lang.String
- isProcessWindowOpen():Z
- notifyProgressByBalloon(com.intellij.openapi.ui.MessageType,java.lang.String):com.intellij.openapi.ui.popup.BalloonHandler
- notifyProgressByBalloon(com.intellij.openapi.ui.MessageType,java.lang.String,javax.swing.Icon,javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.popup.BalloonHandler
- p:paintChildren(java.awt.Graphics):V
- removeWidget(java.lang.String):V
- setInfo(java.lang.String):V
- setInfo(java.lang.String,java.lang.String):V
- setProcessWindowOpen(Z):V
- setVisible(Z):V
- startRefreshIndication(java.lang.String):V
- stopRefreshIndication():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- updateUI():V
- updateWidget(java.lang.String):V
pf:com.intellij.openapi.wm.impl.status.IdeStatusBarImpl$AccessibleIdeStatusBarImpl
- javax.swing.JComponent$AccessibleJComponent
- <init>(com.intellij.openapi.wm.impl.status.IdeStatusBarImpl):V
- getAccessibleRole():javax.accessibility.AccessibleRole
f:com.intellij.openapi.wm.impl.status.IdeStatusBarImpl$Companion
c:com.intellij.openapi.wm.impl.status.InlineProgressIndicator
- com.intellij.openapi.progress.util.ProgressIndicatorBase
- com.intellij.openapi.Disposable
- pf:component:javax.swing.JPanel
- pf:progress:javax.swing.JProgressBar
- pf:text:com.intellij.openapi.wm.impl.status.TextPanel
- pf:text2:com.intellij.openapi.wm.impl.status.TextPanel
- <init>(Z,com.intellij.openapi.progress.TaskInfo):V
- p:cancelRequest():V
- pf:createCancelButton():com.intellij.openapi.wm.impl.status.InlineProgressIndicator$ProgressButton
- p:createCompactTextAndProgress(javax.swing.JPanel):V
- p:createComponent():javax.swing.JPanel
- p:createEastButtons():java.util.List
- dispose():V
- getComponent():javax.swing.JComponent
- p:getProcessNameValue():java.lang.String
- p:getText2Value():java.lang.String
- p:getTextValue():java.lang.String
- p:isFinished():Z
- p:isPaintingIndeterminate():Z
- p:isStopping():Z
- p:onProgressChange():V
- p:queueProgressUpdate():V
- p:setProcessNameValue(java.lang.String):V
- p:setText2Enabled(Z):V
- p:setText2Value(java.lang.String):V
- p:setTextEnabled(Z):V
- p:setTextValue(java.lang.String):V
- pf:updateAndRepaint():V
- updateProgressNow():V
c:com.intellij.openapi.wm.impl.status.LineSeparatorPanel
- com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup
- p:<init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- ID():java.lang.String
- p:createInstance(com.intellij.openapi.project.Project):com.intellij.openapi.wm.StatusBarWidget
- p:createPopup(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.ui.popup.ListPopup
- p:getWidgetState(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.wm.impl.status.EditorBasedStatusBarPopup$WidgetState
c:com.intellij.openapi.wm.impl.status.StatusBarUI
- javax.swing.plaf.ComponentUI
- sf:BORDER_WIDTH:com.intellij.util.ui.JBValue
- <init>():V
- getBackground():java.awt.Color
- getMaximumSize(javax.swing.JComponent):java.awt.Dimension
- getMinimumSize(javax.swing.JComponent):java.awt.Dimension
- paint(java.awt.Graphics,javax.swing.JComponent):V
f:com.intellij.openapi.wm.impl.status.StatusBarUtil
- sf:INSTANCE:com.intellij.openapi.wm.impl.status.StatusBarUtil
- sf:getCurrentFileEditor(com.intellij.openapi.wm.StatusBar):com.intellij.openapi.fileEditor.FileEditor
- sf:getCurrentTextEditor(com.intellij.openapi.wm.StatusBar):com.intellij.openapi.editor.Editor
- sf:setStatusBarInfo(com.intellij.openapi.project.Project,java.lang.String):V
c:com.intellij.openapi.wm.impl.status.TextPanel
- javax.swing.JPanel
- javax.accessibility.Accessible
- sf:Companion:com.intellij.openapi.wm.impl.status.TextPanel$Companion
- sf:PROPERTY_ICON:java.lang.String
- sf:PROPERTY_TEXT:java.lang.String
- <init>():V
- <init>(kotlin.jvm.functions.Function0):V
- b:<init>(kotlin.jvm.functions.Function0,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- pf:getAlignment():F
- getFont():java.awt.Font
- getPreferredSize():java.awt.Dimension
- f:getText():java.lang.String
- p:getTextForPreferredSize():java.lang.String
- p:getTextX(java.awt.Graphics):I
- getToolTipText():java.lang.String
- f:isHoverEffect():Z
- p:paintComponent(java.awt.Graphics):V
- f:recomputeSize():V
- f:setExplicitSize(java.awt.Dimension):V
- f:setText(java.lang.String):V
- f:setTextAlignment(F):V
- p:truncateText(java.lang.String,java.awt.Rectangle,java.awt.FontMetrics,java.awt.Rectangle,java.awt.Rectangle,I):java.lang.String
- updateUI():V
f:com.intellij.openapi.wm.impl.status.TextPanel$Companion
- f:computeTextHeight():I
- f:getFont():java.awt.Font
c:com.intellij.openapi.wm.impl.status.TextPanel$ExtraSize
- com.intellij.openapi.wm.impl.status.TextPanel
- <init>():V
- getPreferredSize():java.awt.Dimension
c:com.intellij.openapi.wm.impl.status.TextPanel$WithIconAndArrows
- com.intellij.openapi.wm.impl.status.TextPanel
- sf:Companion:com.intellij.openapi.wm.impl.status.TextPanel$WithIconAndArrows$Companion
- <init>():V
- <init>(kotlin.jvm.functions.Function0):V
- getIcon():javax.swing.Icon
- getPreferredSize():java.awt.Dimension
- p:getTextX(java.awt.Graphics):I
- f:hasIcon():Z
- p:paintComponent(java.awt.Graphics):V
- setIcon(javax.swing.Icon):V
f:com.intellij.openapi.wm.impl.status.TextPanel$WithIconAndArrows$Companion
a:com.intellij.openapi.wm.impl.status.widget.StatusBarEditorBasedWidgetFactory
- com.intellij.openapi.wm.StatusBarWidgetFactory
- <init>():V
- canBeEnabledOn(com.intellij.openapi.wm.StatusBar):Z
- pf:getFileEditor(com.intellij.openapi.wm.StatusBar):com.intellij.openapi.fileEditor.FileEditor
- pf:getTextEditor(com.intellij.openapi.wm.StatusBar):com.intellij.openapi.editor.Editor
f:com.intellij.openapi.wm.impl.status.widget.StatusBarWidgetsManager
- com.intellij.openapi.util.SimpleModificationTracker
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.openapi.wm.impl.status.widget.StatusBarWidgetsManager$Companion
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- f:canBeEnabledOnStatusBar(com.intellij.openapi.wm.StatusBarWidgetFactory,com.intellij.openapi.wm.StatusBar):Z
- dispose():V
- f:findWidgetFactory(java.lang.String):com.intellij.openapi.wm.StatusBarWidgetFactory
- f:getWidgetFactories():java.util.Set
- f:updateAllWidgets():V
- f:updateWidget(com.intellij.openapi.wm.StatusBarWidgetFactory):V
- f:updateWidget(java.lang.Class):V
- f:wasWidgetCreated(java.lang.String):Z
f:com.intellij.openapi.wm.impl.status.widget.StatusBarWidgetsManager$Companion
a:com.intellij.openapi.wm.impl.welcomeScreen.AbstractActionWithPanel
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.Disposable
- com.intellij.openapi.project.DumbAware
- <init>():V
- a:createPanel():javax.swing.JPanel
- a:getActionButton():javax.swing.JButton
- onPanelSelected():V
a:com.intellij.openapi.wm.impl.welcomeScreen.AbstractWelcomeScreen
- javax.swing.JPanel
- com.intellij.openapi.wm.WelcomeScreen
- pf:slidingPanel:com.intellij.ui.components.JBSlidingPanel
- p:<init>():V
- dispose():V
- getWelcomePanel():javax.swing.JComponent
f:com.intellij.openapi.wm.impl.welcomeScreen.ActionGroupPanelWrapper
- <init>():V
- s:createActionGroupPanel(com.intellij.openapi.actionSystem.ActionGroup,java.lang.Runnable,com.intellij.openapi.Disposable):com.intellij.openapi.util.Pair
- s:createActionGroupPanel(java.util.List,java.lang.Runnable,com.intellij.openapi.Disposable):com.intellij.openapi.util.Pair
- s:installQuickSearch(com.intellij.ui.components.JBList):V
- s:wrapGroups(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.Disposable):com.intellij.openapi.actionSystem.AnAction
com.intellij.openapi.wm.impl.welcomeScreen.ActionsWithPanelProvider
f:com.intellij.openapi.wm.impl.welcomeScreen.BottomLineBorder
- javax.swing.border.EmptyBorder
- <init>():V
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
f:com.intellij.openapi.wm.impl.welcomeScreen.CustomizeTabFactory
- com.intellij.openapi.wm.WelcomeTabFactory
- <init>():V
- createWelcomeTabs(com.intellij.openapi.wm.WelcomeScreen,com.intellij.openapi.Disposable):java.util.List
c:com.intellij.openapi.wm.impl.welcomeScreen.FlatWelcomeFrame
- javax.swing.JFrame
- com.intellij.openapi.wm.IdeFrame
- com.intellij.ui.DisposableWindow
- com.intellij.util.ui.accessibility.AccessibleContextAccessor
- sf:BOTTOM_PANEL:java.lang.String
- sf:CUSTOM_HEADER:java.lang.String
- sf:Companion:com.intellij.openapi.wm.impl.welcomeScreen.FlatWelcomeFrame$Companion
- sf:DEFAULT_HEIGHT:I
- sf:MAX_DEFAULT_WIDTH:I
- s:USE_TABBED_WELCOME_SCREEN:Z
- <init>():V
- <init>(com.intellij.openapi.wm.impl.welcomeScreen.AbstractWelcomeScreen):V
- b:<init>(com.intellij.openapi.wm.impl.welcomeScreen.AbstractWelcomeScreen,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addNotify():V
- dispose():V
- pf:extendActionsGroup(javax.swing.JPanel):V
- getBalloonLayout():com.intellij.ui.BalloonLayout
- getComponent():javax.swing.JComponent
- getCurrentAccessibleContext():javax.accessibility.AccessibleContext
- sf:getPreferredFocusedComponent(com.intellij.openapi.util.Pair):javax.swing.JComponent
- getProject():com.intellij.openapi.project.Project
- f:getScreen():com.intellij.openapi.wm.impl.welcomeScreen.AbstractWelcomeScreen
- getStatusBar():com.intellij.openapi.wm.StatusBar
- isWindowDisposed():Z
- pf:onFirstActionShown(java.awt.Component):V
- removeNotify():V
- setFrameTitle(java.lang.String):V
- p:setupCloseAction():V
- suggestChildFrameBounds():java.awt.Rectangle
f:com.intellij.openapi.wm.impl.welcomeScreen.FlatWelcomeFrame$Companion
- f:getPreferredFocusedComponent(com.intellij.openapi.util.Pair):javax.swing.JComponent
f:com.intellij.openapi.wm.impl.welcomeScreen.FlatWelcomeFrameProvider
- com.intellij.openapi.wm.WelcomeFrameProvider
- <init>():V
- createFrame():com.intellij.openapi.wm.IdeFrame
f:com.intellij.openapi.wm.impl.welcomeScreen.LearnIdeTabFactory
- com.intellij.openapi.wm.WelcomeTabFactory
- <init>():V
- createWelcomeTab(com.intellij.openapi.Disposable):com.intellij.openapi.wm.WelcomeScreenTab
f:com.intellij.openapi.wm.impl.welcomeScreen.NewWelcomeScreen
- javax.swing.JPanel
- com.intellij.openapi.wm.WelcomeScreen
- <init>():V
- dispose():V
- getWelcomePanel():javax.swing.JComponent
- s:isNewWelcomeScreen(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setupFrame(javax.swing.JFrame):V
- s:updateNewProjectIconIfWelcomeScreen(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.wm.impl.welcomeScreen.OpenAlienProjectAction
- com.intellij.openapi.actionSystem.AnAction
- <init>(com.intellij.openapi.wm.impl.welcomeScreen.ProjectDetector):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:projectOpened():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.openapi.wm.impl.welcomeScreen.ProjectDetector
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:detectProjects(java.util.function.Consumer):V
- logRecentProjectOpened(com.intellij.ide.ProjectGroup):V
- s:runDetectors(java.util.function.Consumer):V
c:com.intellij.openapi.wm.impl.welcomeScreen.TabbedWelcomeScreen
- com.intellij.openapi.wm.impl.welcomeScreen.AbstractWelcomeScreen
- <init>(java.util.List,com.intellij.openapi.wm.WelcomeScreenLeftPanel,Z,Z):V
- addSelectionListener(com.intellij.openapi.Disposable,java.util.function.Consumer):V
- addSelectionListener(java.util.function.Consumer):V
- dispose():V
- loadTabs():V
- setTabListVisible(Z):V
- updateUI():V
a:com.intellij.openapi.wm.impl.welcomeScreen.TabbedWelcomeScreen$DefaultWelcomeScreenTab
- com.intellij.openapi.wm.WelcomeScreenTab
- javax.accessibility.Accessible
- pf:myKeyComponent:javax.swing.JComponent
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon):V
- pa:buildComponent():javax.swing.JComponent
- getAccessibleContext():javax.accessibility.AccessibleContext
- getAssociatedComponent():javax.swing.JComponent
- getKeyComponent(javax.swing.JComponent):javax.swing.JComponent
f:com.intellij.openapi.wm.impl.welcomeScreen.WelcomeFrame
- javax.swing.JFrame
- com.intellij.openapi.wm.IdeFrame
- com.intellij.ui.DisposableWindow
- com.intellij.util.ui.accessibility.AccessibleContextAccessor
- sf:Companion:com.intellij.openapi.wm.impl.welcomeScreen.WelcomeFrame$Companion
- sf:DIMENSION_KEY:java.lang.String
- sf:EP:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- dispose():V
- getBalloonLayout():com.intellij.ui.BalloonLayout
- getComponent():javax.swing.JComponent
- getCurrentAccessibleContext():javax.accessibility.AccessibleContext
- sf:getInstance():com.intellij.openapi.wm.IdeFrame
- getProject():com.intellij.openapi.project.Project
- getStatusBar():com.intellij.openapi.wm.StatusBar
- isWindowDisposed():Z
- setFrameTitle(java.lang.String):V
- sf:showIfNoProjectOpened():V
- sf:showIfNoProjectOpened(com.intellij.ide.AppLifecycleListener):V
- sf:showNow():V
- suggestChildFrameBounds():java.awt.Rectangle
f:com.intellij.openapi.wm.impl.welcomeScreen.WelcomeFrame$Companion
- f:getInstance():com.intellij.openapi.wm.IdeFrame
- f:resetInstance():V
- f:setupCloseAction(javax.swing.JFrame):V
- f:showIfNoProjectOpened():V
- f:showIfNoProjectOpened(com.intellij.ide.AppLifecycleListener):V
- bs:showIfNoProjectOpened$default(com.intellij.openapi.wm.impl.welcomeScreen.WelcomeFrame$Companion,com.intellij.ide.AppLifecycleListener,I,java.lang.Object):V
- f:showNow():V
f:com.intellij.openapi.wm.impl.welcomeScreen.WelcomeScreenActionsUtil
- <init>():V
- s:createToolbarTextButtonAction(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.ex.CustomComponentAction
f:com.intellij.openapi.wm.impl.welcomeScreen.WelcomeScreenComponentFactory
- <init>():V
- s:createErrorsLink(com.intellij.openapi.Disposable):javax.swing.JComponent
- s:createEventLink(java.lang.String,com.intellij.util.messages.SimpleMessageBusConnection):javax.swing.JComponent
- s:createNotificationPanel(com.intellij.openapi.Disposable):javax.swing.JPanel
- s:createNotificationToolbar(com.intellij.openapi.Disposable):javax.swing.JComponent
- s:createShowPopupAction(java.lang.String):com.intellij.openapi.actionSystem.AnAction
- s:getAppName():java.lang.String
- s:getApplicationTitle():java.lang.String
- s:wrapActionLink(com.intellij.ui.components.labels.ActionLink):javax.swing.JComponent
- s:wrapActionLinkWithoutArrow(com.intellij.ui.components.labels.ActionLink):com.intellij.openapi.wm.impl.welcomeScreen.WelcomeScreenComponentFactory$JActionLinkPanel
f:com.intellij.openapi.wm.impl.welcomeScreen.WelcomeScreenDefaultCustomization
- com.intellij.openapi.wm.WelcomeScreenCustomization
- <init>():V
- createQuickAccessActions(com.intellij.openapi.Disposable):java.util.List
f:com.intellij.openapi.wm.impl.welcomeScreen.WelcomeScreenUIManager
- <init>():V
- s:getActionLinkSelectionColor():java.awt.Color
- s:getActionsButtonBackground(Z):com.intellij.ui.JBColor
- s:getActionsButtonSelectionBorder():com.intellij.ui.JBColor
- s:getLinkNormalColor():java.awt.Color
- s:getMainAssociatedComponentBackground():java.awt.Color
- s:getMainBackground():java.awt.Color
- s:getMainTabListBackground():java.awt.Color
- s:getProjectsBackground():java.awt.Color
- s:getProjectsSelectionBackground(Z):java.awt.Color
- s:getProjectsSelectionForeground(Z,Z):java.awt.Color
- s:getSeparatorColor():com.intellij.ui.JBColor
f:com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService
- sf:Companion:com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$Companion
- <init>():V
- f:cancelClone(com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneableProject):V
- f:cloneCount():I
- sf:getInstance():com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService
- f:isCloneActive():Z
- f:removeCloneableProject(com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneableProject):V
- f:runCloneTask(java.lang.String,com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneTask):V
com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneProjectListener
- onCloneAdded(com.intellij.openapi.wm.ex.ProgressIndicatorEx,com.intellij.openapi.progress.TaskInfo):V
- onCloneCanceled():V
- onCloneFailed():V
- onCloneRemoved():V
- onCloneSuccess():V
e:com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus
- java.lang.Enum
- sf:CANCEL:com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus
- sf:FAILURE:com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus
- sf:PROGRESS:com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus
- sf:SUCCESS:com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus
- s:values():com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus[]
com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneTask
- a:run(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus
- a:taskInfo():com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneTaskInfo
c:com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneTaskInfo
- com.intellij.openapi.progress.TaskInfo
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- f:getActionTitle():java.lang.String
- f:getActionTooltipText():java.lang.String
- getCancelText():java.lang.String
- getCancelTooltipText():java.lang.String
- f:getCanceledTitle():java.lang.String
- f:getFailedTitle():java.lang.String
- f:getStopDescription():java.lang.String
- f:getStopTitle():java.lang.String
- getTitle():java.lang.String
- isCancellable():Z
f:com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneableProject
- <init>(java.lang.String,com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneTaskInfo,com.intellij.openapi.wm.ex.ProgressIndicatorEx,com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus):V
- f:component1():java.lang.String
- f:component2():com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneTaskInfo
- f:component3():com.intellij.openapi.wm.ex.ProgressIndicatorEx
- f:component4():com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus
- f:copy(java.lang.String,com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneTaskInfo,com.intellij.openapi.wm.ex.ProgressIndicatorEx,com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus):com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneableProject
- bs:copy$default(com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneableProject,java.lang.String,com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneTaskInfo,com.intellij.openapi.wm.ex.ProgressIndicatorEx,com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus,I,java.lang.Object):com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneableProject
- equals(java.lang.Object):Z
- f:getCloneStatus():com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus
- f:getCloneTaskInfo():com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneTaskInfo
- f:getProgressIndicator():com.intellij.openapi.wm.ex.ProgressIndicatorEx
- f:getProjectPath():java.lang.String
- hashCode():I
- f:setCloneStatus(com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$CloneStatus):V
f:com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService$Companion
- f:getInstance():com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.CloneableProjectsService
- f:getTOPIC():com.intellij.util.messages.Topic
f:com.intellij.openapi.wm.impl.welcomeScreen.collapsedActionGroup.CollapsedActionGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- <init>(java.lang.String,java.util.List):V
c:com.intellij.openapi.wm.impl.welcomeScreen.learnIde.InteractiveCoursePanel
- javax.swing.JPanel
- <init>(com.intellij.openapi.wm.InteractiveCourseData,Z):V
- b:<init>(com.intellij.openapi.wm.InteractiveCourseData,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- pf:createButtonPanel():javax.swing.JPanel
- p:createSouthPanel():javax.swing.JPanel
- p:getButtonAction():javax.swing.Action
- pf:getData():com.intellij.openapi.wm.InteractiveCourseData
- pf:getLeftMargin():I
- getMaximumSize():java.awt.Dimension
- f:getStartLearningButton():javax.swing.JButton
f:com.intellij.openapi.wm.impl.welcomeScreen.learnIde.InteractiveCoursePanel$DynamicFontLabel
- com.intellij.ui.components.JBLabel
- <init>(java.lang.String,javax.swing.Icon):V
- b:<init>(java.lang.String,javax.swing.Icon,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- setUI(javax.swing.plaf.LabelUI):V
f:com.intellij.openapi.wm.impl.welcomeScreen.learnIde.coursesInProgress.CourseCardComponentKt
- sf:getMainBackgroundColor():java.awt.Color
com.intellij.openapi.wm.impl.welcomeScreen.learnIde.coursesInProgress.CourseDataStorage
- a:getAllCourses():java.util.List
- a:getCoursePath(com.intellij.openapi.wm.impl.welcomeScreen.learnIde.coursesInProgress.CourseInfo):java.lang.String
- a:removeCourseByLocation(java.lang.String):Z
c:com.intellij.openapi.wm.impl.welcomeScreen.learnIde.coursesInProgress.CourseInfo
- <init>():V
- f:getDescription():java.lang.String
- getIcon():javax.swing.Icon
- f:getId():I
- f:getLocation():java.lang.String
- f:getName():java.lang.String
- f:getTasksSolved():I
- f:getTasksTotal():I
- f:setDescription(java.lang.String):V
- setIcon(javax.swing.Icon):V
- f:setId(I):V
- f:setLocation(java.lang.String):V
- f:setName(java.lang.String):V
- f:setTasksSolved(I):V
- f:setTasksTotal(I):V
com.intellij.openapi.wm.impl.welcomeScreen.learnIde.coursesInProgress.CoursesStorageProvider
- sf:Companion:com.intellij.openapi.wm.impl.welcomeScreen.learnIde.coursesInProgress.CoursesStorageProvider$Companion
- a:getCoursesStorage():com.intellij.openapi.wm.impl.welcomeScreen.learnIde.coursesInProgress.CourseDataStorage
f:com.intellij.openapi.wm.impl.welcomeScreen.learnIde.coursesInProgress.CoursesStorageProvider$Companion
- f:getAllStorages():java.util.List
- f:getCOURSE_STORAGE_PROVIDER_EP():com.intellij.openapi.extensions.ExtensionPointName
a:com.intellij.packageDependencies.ui.TreeExpansionMonitor
- p:<init>(javax.swing.JTree):V
- pa:findPathByNode(java.lang.Object):javax.swing.tree.TreePath
- freeze():V
- s:install(javax.swing.JTree):com.intellij.packageDependencies.ui.TreeExpansionMonitor
- s:install(javax.swing.JTree,java.util.function.BiPredicate):com.intellij.packageDependencies.ui.TreeExpansionMonitor
- isFreeze():Z
- restore():V
- unfreeze():V
c:com.intellij.platform.AttachProjectAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- sf:Companion:com.intellij.platform.AttachProjectAction$Companion
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- f:chooseAndAttachToProject(com.intellij.openapi.project.Project):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- sf:getTO_SELECT_KEY():com.intellij.openapi.util.Key
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- validateDirectory(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.platform.AttachProjectAction$Companion
- f:attachProject(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):V
- f:getTO_SELECT_KEY():com.intellij.openapi.util.Key
com.intellij.platform.CommandLineProjectOpenProcessor
- sf:Companion:com.intellij.platform.CommandLineProjectOpenProcessor$Companion
- a:openProjectAndFile(java.nio.file.Path,Z,com.intellij.ide.impl.OpenProjectTask,kotlin.coroutines.Continuation):java.lang.Object
- bs:openProjectAndFile$default(com.intellij.platform.CommandLineProjectOpenProcessor,java.nio.file.Path,Z,com.intellij.ide.impl.OpenProjectTask,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
f:com.intellij.platform.CommandLineProjectOpenProcessor$Companion
- f:getInstance():com.intellij.platform.CommandLineProjectOpenProcessor
- f:getInstanceIfExists():com.intellij.platform.CommandLineProjectOpenProcessor
com.intellij.platform.DirectoryProjectConfigurator
- a:configureProject(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.Ref,Z):V
- isEdtRequired():Z
a:com.intellij.platform.DirectoryProjectConfigurator$AsyncDirectoryProjectConfigurator
- com.intellij.platform.DirectoryProjectConfigurator
- <init>():V
- a:configure(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.Ref,Z,kotlin.coroutines.Continuation):java.lang.Object
- f:configureProject(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.Ref,Z):V
- f:isEdtRequired():Z
com.intellij.platform.DirectoryProjectGenerator
- configureModule(com.intellij.openapi.module.Module,com.intellij.openapi.vfs.VirtualFile,java.lang.Object):V
- createLazyPeer():com.intellij.openapi.util.NotNullLazyValue
- createPeer():com.intellij.platform.ProjectGeneratorPeer
- a:generateProject(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.Object,com.intellij.openapi.module.Module):V
- getDescription():java.lang.String
- getHelpId():java.lang.String
- a:getLogo():javax.swing.Icon
- a:getName():java.lang.String
- isPrimaryGenerator():Z
- a:validate(java.lang.String):com.intellij.facet.ui.ValidationResult
a:com.intellij.platform.DirectoryProjectGeneratorBase
- com.intellij.platform.DirectoryProjectGenerator
- <init>():V
- validate(java.lang.String):com.intellij.facet.ui.ValidationResult
c:com.intellij.platform.GeneratorPeerImpl
- com.intellij.platform.ProjectGeneratorPeer
- <init>():V
- <init>(java.lang.Object,javax.swing.JComponent):V
- addSettingsStateListener(com.intellij.platform.WebProjectGenerator$SettingsStateListener):V
- buildUI(com.intellij.ide.util.projectWizard.SettingsStep):V
- getComponent():javax.swing.JComponent
- getComponent(com.intellij.openapi.ui.TextFieldWithBrowseButton,java.lang.Runnable):javax.swing.JComponent
- getSettings():java.lang.Object
- isBackgroundJobRunning():Z
- validate():com.intellij.openapi.ui.ValidationInfo
com.intellij.platform.HideableProjectGenerator
- a:isHidden():Z
f:com.intellij.platform.PlatformProjectOpenProcessor
- com.intellij.projectImport.ProjectOpenProcessor
- com.intellij.platform.CommandLineProjectOpenProcessor
- sf:Companion:com.intellij.platform.PlatformProjectOpenProcessor$Companion
- <init>():V
- sf:attachToProject(com.intellij.openapi.project.Project,java.nio.file.Path,com.intellij.projectImport.ProjectOpenedCallback):Z
- canOpenProject(com.intellij.openapi.vfs.VirtualFile):Z
- sf:doOpenProject(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,I,com.intellij.projectImport.ProjectOpenedCallback,java.util.EnumSet):com.intellij.openapi.project.Project
- doOpenProject(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,Z):com.intellij.openapi.project.Project
- sf:getInstance():com.intellij.platform.PlatformProjectOpenProcessor
- sf:getInstanceIfItExists():com.intellij.platform.PlatformProjectOpenProcessor
- getName():java.lang.String
- isProjectFile(com.intellij.openapi.vfs.VirtualFile):Z
- lookForProjectsInDirectory():Z
- openProjectAndFile(java.nio.file.Path,Z,com.intellij.ide.impl.OpenProjectTask,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.platform.PlatformProjectOpenProcessor$Companion
- f:attachToProject(com.intellij.openapi.project.Project,java.nio.file.Path,com.intellij.projectImport.ProjectOpenedCallback):Z
- f:doOpenProject(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,I,com.intellij.projectImport.ProjectOpenedCallback,java.util.EnumSet):com.intellij.openapi.project.Project
- f:getInstance():com.intellij.platform.PlatformProjectOpenProcessor
- f:getInstanceIfItExists():com.intellij.platform.PlatformProjectOpenProcessor
- f:getPROJECT_LOADED_FROM_CACHE_BUT_HAS_NO_MODULES():com.intellij.openapi.util.Key
- f:getPROJECT_NEWLY_OPENED():com.intellij.openapi.util.Key
- f:getPROJECT_OPENED_BY_PLATFORM_PROCESSOR():com.intellij.openapi.util.Key
- f:isConfiguredByPlatformProcessor(com.intellij.openapi.project.Project):Z
- f:isNewProject(com.intellij.openapi.project.Project):Z
- f:isOpenedByPlatformProcessor(com.intellij.openapi.project.Project):Z
- f:isTempProject(com.intellij.openapi.project.Project):Z
- f:openProjectAsync(java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask,kotlin.coroutines.Continuation):java.lang.Object
- bs:openProjectAsync$default(com.intellij.platform.PlatformProjectOpenProcessor$Companion,java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- f:runDirectoryProjectConfigurators(java.nio.file.Path,com.intellij.openapi.project.Project,Z,kotlin.coroutines.Continuation):java.lang.Object
e:com.intellij.platform.PlatformProjectOpenProcessor$Option
- java.lang.Enum
- sf:FORCE_NEW_FRAME:com.intellij.platform.PlatformProjectOpenProcessor$Option
- sf:TEMP_PROJECT:com.intellij.platform.PlatformProjectOpenProcessor$Option
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.platform.PlatformProjectOpenProcessor$Option
- s:values():com.intellij.platform.PlatformProjectOpenProcessor$Option[]
com.intellij.platform.ProjectGeneratorPeer
- addSettingsListener(com.intellij.platform.ProjectGeneratorPeer$SettingsListener):V
- addSettingsStateListener(com.intellij.platform.WebProjectGenerator$SettingsStateListener):V
- a:buildUI(com.intellij.ide.util.projectWizard.SettingsStep):V
- getComponent():javax.swing.JComponent
- getComponent(com.intellij.openapi.ui.TextFieldWithBrowseButton,java.lang.Runnable):javax.swing.JComponent
- a:getSettings():java.lang.Object
- a:isBackgroundJobRunning():Z
- a:validate():com.intellij.openapi.ui.ValidationInfo
com.intellij.platform.ProjectGeneratorPeer$SettingsListener
- a:stateChanged(Z):V
f:com.intellij.platform.ProjectTemplateEP
- category:Z
- projectType:java.lang.String
- templatePath:java.lang.String
- <init>():V
a:com.intellij.platform.ProjectTemplatesFactory
- sf:CUSTOM_GROUP:java.lang.String
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:OTHER_GROUP:java.lang.String
- <init>():V
- a:createTemplates(java.lang.String,com.intellij.ide.util.projectWizard.WizardContext):com.intellij.platform.ProjectTemplate[]
- getGroupIcon(java.lang.String):javax.swing.Icon
- getGroupWeight(java.lang.String):I
- a:getGroups():java.lang.String[]
- getParentGroup(java.lang.String):java.lang.String
a:com.intellij.platform.WebProjectGenerator
- com.intellij.platform.DirectoryProjectGeneratorBase
- <init>():V
- a:getDescription():java.lang.String
- f:validate(java.lang.String):com.intellij.facet.ui.ValidationResult
com.intellij.platform.WebProjectGenerator$GeneratorPeer
- com.intellij.platform.ProjectGeneratorPeer
- a:addSettingsStateListener(com.intellij.platform.WebProjectGenerator$SettingsStateListener):V
- a:buildUI(com.intellij.ide.util.projectWizard.SettingsStep):V
- a:getComponent(com.intellij.openapi.ui.TextFieldWithBrowseButton,java.lang.Runnable):javax.swing.JComponent
- a:getSettings():java.lang.Object
- a:isBackgroundJobRunning():Z
- a:validate():com.intellij.openapi.ui.ValidationInfo
com.intellij.platform.WebProjectGenerator$SettingsStateListener
- a:stateChanged(Z):V
f:com.intellij.platform.ide.bootstrap.SplashManagerKt
- sf:hideSplash():V
- sf:hideSplashBeforeShow(java.awt.Window):V
f:com.intellij.platform.ide.diagnostic.startUpPerformanceReporter.FUSProjectHotStartUpMeasurerService
- <init>():V
- f:isHandlingFinished():Z
a:com.intellij.platform.ide.impl.customization.BaseJetBrainsExternalProductResourceUrls
- com.intellij.platform.ide.customization.ExternalProductResourceUrls
- <init>():V
- f:computePatchUrl(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.util.BuildNumber):com.intellij.util.Url
- a:getBasePatchDownloadUrl():com.intellij.util.Url
- a:getBaseWebHelpUrl():com.intellij.util.Url
- getBugReportUrl():kotlin.jvm.functions.Function1
- getDownloadPageUrl():com.intellij.util.Url
- getFeedbackReporter():com.intellij.platform.ide.customization.FeedbackReporter
- getHelpPageUrl():kotlin.jvm.functions.Function1
- getIntellijSupportFormId():I
- a:getProductPageUrl():com.intellij.util.Url
- a:getShortProductNameUsedInForms():java.lang.String
- getTechnicalSupportUrl():kotlin.jvm.functions.Function1
- getUpdateMetadataUrl():com.intellij.util.Url
- getUseInIdeEvaluationFeedback():Z
- getUseInIdeGeneralFeedback():Z
- getWhatIsNewPageUrl():com.intellij.util.Url
- a:getYoutrackProjectId():java.lang.String
c:com.intellij.platform.ide.impl.feedback.PlatformFeedbackDialogs
- sf:Companion:com.intellij.platform.ide.impl.feedback.PlatformFeedbackDialogs$Companion
- <init>():V
- createEvaluationFeedbackDialog(com.intellij.openapi.project.Project):com.intellij.openapi.ui.DialogWrapper
- createGeneralFeedbackDialog(com.intellij.openapi.project.Project):com.intellij.openapi.ui.DialogWrapper
- getDisableFeedbackDialog(java.lang.String,java.lang.String,com.intellij.openapi.project.Project):com.intellij.openapi.ui.DialogWrapper
- sf:getInstance():com.intellij.platform.ide.impl.feedback.PlatformFeedbackDialogs
- getUninstallFeedbackDialog(java.lang.String,java.lang.String,com.intellij.openapi.project.Project):com.intellij.openapi.ui.DialogWrapper
f:com.intellij.platform.ide.impl.feedback.PlatformFeedbackDialogs$Companion
- f:getInstance():com.intellij.platform.ide.impl.feedback.PlatformFeedbackDialogs
f:com.intellij.psi.statistics.impl.StatisticsManagerImpl
- com.intellij.psi.statistics.StatisticsManager
- <init>():V
- f:enableStatistics(com.intellij.openapi.Disposable):V
- getAllValues(java.lang.String):com.intellij.psi.statistics.StatisticsInfo[]
- getLastUseRecency(com.intellij.psi.statistics.StatisticsInfo):I
- getUseCount(com.intellij.psi.statistics.StatisticsInfo):I
- incUseCount(com.intellij.psi.statistics.StatisticsInfo):V
- save(kotlin.coroutines.Continuation):java.lang.Object
com.intellij.toolWindow.DefaultToolWindowDescriptorBuilder
- a:getAnchor():com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor
- a:getContentUiType():com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType
- a:getId():java.lang.String
- a:getSideWeight():F
- a:getWeight():F
- a:isSplit():Z
- a:isVisible():Z
- a:setContentUiType(com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType):V
- a:setSideWeight(F):V
- a:setSplit(Z):V
- a:setVisible(Z):V
- a:setWeight(F):V
com.intellij.toolWindow.DefaultToolWindowLayoutBuilder
- a:getBottom():com.intellij.toolWindow.DefaultToolWindowStripeBuilder
- a:getLeft():com.intellij.toolWindow.DefaultToolWindowStripeBuilder
- a:getRight():com.intellij.toolWindow.DefaultToolWindowStripeBuilder
- a:removeAll(kotlin.jvm.functions.Function1):V
- bs:removeAll$default(com.intellij.toolWindow.DefaultToolWindowLayoutBuilder,kotlin.jvm.functions.Function1,I,java.lang.Object):V
com.intellij.toolWindow.DefaultToolWindowLayoutExtension
- sf:Companion:com.intellij.toolWindow.DefaultToolWindowLayoutExtension$Companion
- a:buildV1Layout(com.intellij.toolWindow.DefaultToolWindowLayoutBuilder):V
- a:buildV2Layout(com.intellij.toolWindow.DefaultToolWindowLayoutBuilder):V
f:com.intellij.toolWindow.DefaultToolWindowLayoutExtension$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
com.intellij.toolWindow.DefaultToolWindowStripeBuilder
- a:addOrUpdate(java.lang.String,kotlin.jvm.functions.Function1):V
- bs:addOrUpdate$default(com.intellij.toolWindow.DefaultToolWindowStripeBuilder,java.lang.String,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- a:addPlatformDefaultsV1():V
- a:addPlatformDefaultsV2():V
f:com.intellij.toolWindow.EnableStripeGroup
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- sf:Companion:com.intellij.toolWindow.EnableStripeGroup$Companion
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.toolWindow.EnableStripeGroup$Companion
- f:hasActionOnToolbar():Z
- f:isSingleStripeEnabled():Z
- f:setSingleStripeEnabled(Z):V
- f:shouldSingleStripeBeEnabled():Z
f:com.intellij.toolWindow.ResizeStripeManager
- com.intellij.openapi.ui.Splittable
- sf:Companion:com.intellij.toolWindow.ResizeStripeManager$Companion
- <init>(com.intellij.toolWindow.ToolWindowToolbar):V
- asComponent():java.awt.Component
- f:createLayout():java.awt.BorderLayout
- getMinProportion(Z):F
- getOrientation():Z
- setDragging(Z):V
- setOrientation(Z):V
- setProportion(F):V
- f:updateNamedState():V
- f:updateState(com.intellij.toolWindow.ToolWindowToolbar):V
f:com.intellij.toolWindow.ResizeStripeManager$Companion
- f:applyShowNames():V
- f:enabled():Z
- f:getSideCustomWidth(com.intellij.openapi.wm.ToolWindowAnchor):I
- f:isShowNames():Z
- f:setShowNames(Z):V
- f:setSideCustomWidth(com.intellij.toolWindow.ToolWindowToolbar,I):V
- f:showPopup(com.intellij.openapi.actionSystem.ActionGroup,java.awt.Component,I,I):V
f:com.intellij.toolWindow.StripeButton
- com.intellij.openapi.wm.impl.AnchoredButton
- com.intellij.openapi.actionSystem.UiDataProvider
- getAnchor():com.intellij.openapi.wm.ToolWindowAnchor
- f:getId():java.lang.String
- getMnemonic():I
- getMnemonic2():I
- f:getWindowInfo():com.intellij.openapi.wm.WindowInfo
- f:isFirst():Z
- f:isLast():Z
- setMnemonic(I):java.lang.Void
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- f:updateIcon(javax.swing.Icon):V
- f:updatePresentation():V
- updateUI():V
f:com.intellij.toolWindow.StripeButtonUi
- javax.swing.plaf.metal.MetalToggleButtonUI
- sf:Companion:com.intellij.toolWindow.StripeButtonUi$Companion
- <init>():V
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- update(java.awt.Graphics,javax.swing.JComponent):V
f:com.intellij.toolWindow.StripeButtonUi$Companion
- f:getBACKGROUND_COLOR():java.awt.Color
- f:getFOREGROUND_COLOR():java.awt.Color
- f:getSELECTED_BACKGROUND_COLOR():java.awt.Color
- f:getSELECTED_FOREGROUND_COLOR():java.awt.Color
f:com.intellij.toolWindow.ToolWindowDefaultLayoutManager
- com.intellij.openapi.components.PersistentStateComponentWithModificationTracker
- sf:Companion:com.intellij.toolWindow.ToolWindowDefaultLayoutManager$Companion
- sf:FACTORY_DEFAULT_LAYOUT_NAME:java.lang.String
- sf:INITIAL_LAYOUT_NAME:java.lang.String
- <init>():V
- <init>(Z):V
- f:deleteLayout(java.lang.String):V
- f:getActiveLayoutName():java.lang.String
- f:getFactoryDefaultLayoutCopy():com.intellij.openapi.wm.impl.DesktopLayout
- sf:getInstance():com.intellij.toolWindow.ToolWindowDefaultLayoutManager
- f:getLayoutCopy():com.intellij.openapi.wm.impl.DesktopLayout
- f:getLayoutNames():java.util.Set
- getState():com.intellij.toolWindow.ToolWindowLayoutStorageManagerState
- getStateModificationCount():J
- loadState(com.intellij.toolWindow.ToolWindowLayoutStorageManagerState):V
- noStateLoaded():V
- f:renameLayout(java.lang.String,java.lang.String):V
- f:setActiveLayoutName(java.lang.String):V
- f:setLayout(com.intellij.openapi.wm.impl.DesktopLayout):V
- f:setLayout(java.lang.String,com.intellij.openapi.wm.impl.DesktopLayout):V
f:com.intellij.toolWindow.ToolWindowDefaultLayoutManager$Companion
- f:getInstance():com.intellij.toolWindow.ToolWindowDefaultLayoutManager
f:com.intellij.toolWindow.ToolWindowDescriptor
- sf:Companion:com.intellij.toolWindow.ToolWindowDescriptor$Companion
- <init>(java.lang.String,I,java.lang.String,com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor,Z,java.util.List,Z,com.intellij.openapi.wm.ToolWindowType,com.intellij.openapi.wm.ToolWindowType,com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType,Z,Z,Z,F,F,Z):V
- b:<init>(java.lang.String,I,java.lang.String,com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor,Z,java.util.List,Z,com.intellij.openapi.wm.ToolWindowType,com.intellij.openapi.wm.ToolWindowType,com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType,Z,Z,Z,F,F,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.String
- f:component10():com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType
- f:component11():Z
- f:component12():Z
- f:component13():Z
- f:component14():F
- f:component15():F
- f:component16():Z
- f:component2():I
- f:component3():java.lang.String
- f:component4():com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor
- f:component5():Z
- f:component6():java.util.List
- f:component7():Z
- f:component8():com.intellij.openapi.wm.ToolWindowType
- f:component9():com.intellij.openapi.wm.ToolWindowType
- f:copy(java.lang.String,I,java.lang.String,com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor,Z,java.util.List,Z,com.intellij.openapi.wm.ToolWindowType,com.intellij.openapi.wm.ToolWindowType,com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType,Z,Z,Z,F,F,Z):com.intellij.toolWindow.ToolWindowDescriptor
- bs:copy$default(com.intellij.toolWindow.ToolWindowDescriptor,java.lang.String,I,java.lang.String,com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor,Z,java.util.List,Z,com.intellij.openapi.wm.ToolWindowType,com.intellij.openapi.wm.ToolWindowType,com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType,Z,Z,Z,F,F,Z,I,java.lang.Object):com.intellij.toolWindow.ToolWindowDescriptor
- equals(java.lang.Object):Z
- f:getAnchor():com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor
- f:getContentUiType():com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType
- f:getFloatingBounds():java.util.List
- f:getId():java.lang.String
- f:getInternalType():com.intellij.openapi.wm.ToolWindowType
- f:getOrder():I
- f:getPaneId():java.lang.String
- f:getSideWeight():F
- f:getType():com.intellij.openapi.wm.ToolWindowType
- f:getWeight():F
- hashCode():I
- f:isActiveOnStart():Z
- f:isAutoHide():Z
- f:isMaximized():Z
- f:isShowStripeButton():Z
- f:isSplit():Z
- f:isVisible():Z
- f:setAnchor(com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor):V
- f:setContentUiType(com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType):V
- f:setOrder(I):V
- f:setVisible(Z):V
- f:setWeight(F):V
bc:com.intellij.toolWindow.ToolWindowDescriptor$$serializer
- kotlinx.serialization.internal.GeneratedSerializer
- sf:INSTANCE:com.intellij.toolWindow.ToolWindowDescriptor$$serializer
- f:childSerializers():kotlinx.serialization.KSerializer[]
- f:deserialize(kotlinx.serialization.encoding.Decoder):com.intellij.toolWindow.ToolWindowDescriptor
- f:getDescriptor():kotlinx.serialization.descriptors.SerialDescriptor
- f:serialize(kotlinx.serialization.encoding.Encoder,com.intellij.toolWindow.ToolWindowDescriptor):V
- typeParametersSerializers():kotlinx.serialization.KSerializer[]
f:com.intellij.toolWindow.ToolWindowDescriptor$Companion
- f:serializer():kotlinx.serialization.KSerializer
e:com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor
- java.lang.Enum
- sf:BOTTOM:com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor
- sf:LEFT:com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor
- sf:RIGHT:com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor
- sf:TOP:com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor
- s:values():com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowAnchor[]
e:com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType
- java.lang.Enum
- sf:COMBO:com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType
- sf:TABBED:com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType
- s:values():com.intellij.toolWindow.ToolWindowDescriptor$ToolWindowContentUiType[]
e:com.intellij.toolWindow.ToolWindowEventSource
- java.lang.Enum
- sf:ActivateActionGotoAction:com.intellij.toolWindow.ToolWindowEventSource
- sf:ActivateActionKeyboardShortcut:com.intellij.toolWindow.ToolWindowEventSource
- sf:ActivateActionMenu:com.intellij.toolWindow.ToolWindowEventSource
- sf:ActivateActionOther:com.intellij.toolWindow.ToolWindowEventSource
- sf:CloseAction:com.intellij.toolWindow.ToolWindowEventSource
- sf:CloseFromSwitcher:com.intellij.toolWindow.ToolWindowEventSource
- sf:Content:com.intellij.toolWindow.ToolWindowEventSource
- sf:HideAllWindowsAction:com.intellij.toolWindow.ToolWindowEventSource
- sf:HideButton:com.intellij.toolWindow.ToolWindowEventSource
- sf:HideOnShowOther:com.intellij.toolWindow.ToolWindowEventSource
- sf:HideSide:com.intellij.toolWindow.ToolWindowEventSource
- sf:HideSideWindowsAction:com.intellij.toolWindow.ToolWindowEventSource
- sf:HideToolWindowAction:com.intellij.toolWindow.ToolWindowEventSource
- sf:InspectionsWidget:com.intellij.toolWindow.ToolWindowEventSource
- sf:JumpToLastWindowAction:com.intellij.toolWindow.ToolWindowEventSource
- sf:RemoveStripeButtonAction:com.intellij.toolWindow.ToolWindowEventSource
- sf:SquareStripeButton:com.intellij.toolWindow.ToolWindowEventSource
- sf:StripeButton:com.intellij.toolWindow.ToolWindowEventSource
- sf:Switcher:com.intellij.toolWindow.ToolWindowEventSource
- sf:SwitcherSearch:com.intellij.toolWindow.ToolWindowEventSource
- sf:ToolWindowHeader:com.intellij.toolWindow.ToolWindowEventSource
- sf:ToolWindowHeaderAltClick:com.intellij.toolWindow.ToolWindowEventSource
- sf:ToolWindowSwitcher:com.intellij.toolWindow.ToolWindowEventSource
- sf:ToolWindowsWidget:com.intellij.toolWindow.ToolWindowEventSource
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.toolWindow.ToolWindowEventSource
- s:values():com.intellij.toolWindow.ToolWindowEventSource[]
c:com.intellij.toolWindow.ToolWindowHeadlessManagerImpl
- com.intellij.openapi.wm.ex.ToolWindowManagerEx
- <init>(com.intellij.openapi.project.Project):V
- activateEditorComponent():V
- canShowNotification(java.lang.String):Z
- clearSideStack():V
- doRegisterToolWindow(java.lang.String):com.intellij.openapi.wm.ToolWindow
- getActiveToolWindowId():java.lang.String
- getFocusManager():com.intellij.openapi.wm.IdeFocusManager
- getIdsOn(com.intellij.openapi.wm.ToolWindowAnchor):java.util.List
- getLastActiveToolWindowId():java.lang.String
- getLayout():com.intellij.openapi.wm.impl.DesktopLayout
- getLayoutToRestoreLater():com.intellij.openapi.wm.impl.DesktopLayout
- getMoreButtonSide():com.intellij.openapi.wm.ToolWindowAnchor
- getToolWindow(java.lang.String):com.intellij.openapi.wm.ToolWindow
- getToolWindowBalloon(java.lang.String):com.intellij.openapi.ui.popup.Balloon
- getToolWindowIdSet():java.util.Set
- getToolWindowIds():java.lang.String[]
- getToolWindows():java.util.List
- hideToolWindow(java.lang.String,Z):V
- invokeLater(java.lang.Runnable):V
- isEditorComponentActive():Z
- isMaximized(com.intellij.openapi.wm.ToolWindow):Z
- notifyByBalloon(com.intellij.openapi.wm.ToolWindowBalloonShowOptions):V
- registerToolWindow(com.intellij.openapi.wm.RegisterToolWindowTask):com.intellij.openapi.wm.ToolWindow
- setLayout(com.intellij.openapi.wm.impl.DesktopLayout):V
- setLayoutToRestoreLater(com.intellij.openapi.wm.impl.DesktopLayout):V
- setMaximized(com.intellij.openapi.wm.ToolWindow,Z):V
- unregisterToolWindow(java.lang.String):V
c:com.intellij.toolWindow.ToolWindowHeadlessManagerImpl$MockToolWindow
- com.intellij.openapi.wm.ex.ToolWindowEx
- <init>(com.intellij.openapi.project.Project):V
- activate(java.lang.Runnable,Z,Z):V
- addContentManagerListener(com.intellij.ui.content.ContentManagerListener):V
- getAnchor():com.intellij.openapi.wm.ToolWindowAnchor
- getComponent():javax.swing.JComponent
- getContentManager():com.intellij.ui.content.ContentManager
- getContentManagerIfCreated():com.intellij.ui.content.ContentManager
- getContentUiType():com.intellij.openapi.wm.ToolWindowContentUiType
- getDecorator():com.intellij.openapi.wm.impl.InternalDecorator
- getDisposable():com.intellij.openapi.Disposable
- getIcon():javax.swing.Icon
- getId():java.lang.String
- getInternalType():com.intellij.openapi.wm.ToolWindowType
- getProject():com.intellij.openapi.project.Project
- getReady(java.lang.Object):com.intellij.openapi.util.ActionCallback
- getStripeTitle():java.lang.String
- getStripeTitleProvider():java.util.function.Supplier
- getTitle():java.lang.String
- getType():com.intellij.openapi.wm.ToolWindowType
- hide(java.lang.Runnable):V
- installWatcher(com.intellij.ui.content.ContentManager):V
- isActive():Z
- isAutoHide():Z
- isAvailable():Z
- isDisposed():Z
- isShowStripeButton():Z
- isSplitMode():Z
- isVisible():Z
- remove():V
- setAdditionalGearActions(com.intellij.openapi.actionSystem.ActionGroup):V
- setAnchor(com.intellij.openapi.wm.ToolWindowAnchor,java.lang.Runnable):V
- setAutoHide(Z):V
- setAvailable(Z):V
- setAvailable(Z,java.lang.Runnable):V
- setContentUiType(com.intellij.openapi.wm.ToolWindowContentUiType,java.lang.Runnable):V
- setDefaultContentUiType(com.intellij.openapi.wm.ToolWindowContentUiType):V
- setDefaultState(com.intellij.openapi.wm.ToolWindowAnchor,com.intellij.openapi.wm.ToolWindowType,java.awt.Rectangle):V
- setIcon(javax.swing.Icon):V
- setShowStripeButton(Z):V
- setSplitMode(Z,java.lang.Runnable):V
- setStripeTitle(java.lang.String):V
- setStripeTitleProvider(java.util.function.Supplier):V
- setTabActions(com.intellij.openapi.actionSystem.AnAction[]):V
- setTabDoubleClickActions(java.util.List):V
- setTitle(java.lang.String):V
- setTitleActions(java.util.List):V
- setToHideOnEmptyContent(Z):V
- setType(com.intellij.openapi.wm.ToolWindowType,java.lang.Runnable):V
- show(java.lang.Runnable):V
- showContentPopup(java.awt.event.InputEvent):V
- stretchHeight(I):V
- stretchWidth(I):V
f:com.intellij.toolWindow.ToolWindowLayoutDescriptor
- sf:Companion:com.intellij.toolWindow.ToolWindowLayoutDescriptor$Companion
- <init>():V
- <init>(java.util.List,java.util.List,java.util.Map):V
- b:<init>(java.util.List,java.util.List,java.util.Map,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.util.List
- f:component2():java.util.List
- f:component3():java.util.Map
- f:copy(java.util.List,java.util.List,java.util.Map):com.intellij.toolWindow.ToolWindowLayoutDescriptor
- bs:copy$default(com.intellij.toolWindow.ToolWindowLayoutDescriptor,java.util.List,java.util.List,java.util.Map,I,java.lang.Object):com.intellij.toolWindow.ToolWindowLayoutDescriptor
- equals(java.lang.Object):Z
- f:getUnifiedWeights():java.util.Map
- f:getV1():java.util.List
- f:getV2():java.util.List
- hashCode():I
- f:withUpdatedLayout(java.util.List,Z,java.util.Map):com.intellij.toolWindow.ToolWindowLayoutDescriptor
bc:com.intellij.toolWindow.ToolWindowLayoutDescriptor$$serializer
- kotlinx.serialization.internal.GeneratedSerializer
- sf:INSTANCE:com.intellij.toolWindow.ToolWindowLayoutDescriptor$$serializer
- f:childSerializers():kotlinx.serialization.KSerializer[]
- f:deserialize(kotlinx.serialization.encoding.Decoder):com.intellij.toolWindow.ToolWindowLayoutDescriptor
- f:getDescriptor():kotlinx.serialization.descriptors.SerialDescriptor
- f:serialize(kotlinx.serialization.encoding.Encoder,com.intellij.toolWindow.ToolWindowLayoutDescriptor):V
- typeParametersSerializers():kotlinx.serialization.KSerializer[]
f:com.intellij.toolWindow.ToolWindowLayoutDescriptor$Companion
- f:serializer():kotlinx.serialization.KSerializer
f:com.intellij.toolWindow.ToolWindowLayoutStorageManagerState
- sf:Companion:com.intellij.toolWindow.ToolWindowLayoutStorageManagerState$Companion
- <init>():V
- <init>(java.lang.String,java.util.Map,java.util.List,java.util.List):V
- b:<init>(java.lang.String,java.util.Map,java.util.List,java.util.List,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.String
- f:component2():java.util.Map
- f:component3():java.util.List
- f:component4():java.util.List
- f:copy(java.lang.String,java.util.Map,java.util.List,java.util.List):com.intellij.toolWindow.ToolWindowLayoutStorageManagerState
- bs:copy$default(com.intellij.toolWindow.ToolWindowLayoutStorageManagerState,java.lang.String,java.util.Map,java.util.List,java.util.List,I,java.lang.Object):com.intellij.toolWindow.ToolWindowLayoutStorageManagerState
- equals(java.lang.Object):Z
- f:getActiveLayoutCopy(Z):com.intellij.openapi.wm.impl.DesktopLayout
- f:getActiveLayoutName():java.lang.String
- f:getLayoutCopy(java.lang.String,Z):com.intellij.openapi.wm.impl.DesktopLayout
- f:getLayouts():java.util.Map
- f:getV1():java.util.List
- f:getV2():java.util.List
- hashCode():I
- f:withRenamedLayout(java.lang.String,java.lang.String):com.intellij.toolWindow.ToolWindowLayoutStorageManagerState
- f:withUpdatedLayout(java.lang.String,java.util.List,Z,java.util.Map):com.intellij.toolWindow.ToolWindowLayoutStorageManagerState
- bs:withUpdatedLayout$default(com.intellij.toolWindow.ToolWindowLayoutStorageManagerState,java.lang.String,java.util.List,Z,java.util.Map,I,java.lang.Object):com.intellij.toolWindow.ToolWindowLayoutStorageManagerState
- f:withoutLayout(java.lang.String):com.intellij.toolWindow.ToolWindowLayoutStorageManagerState
bc:com.intellij.toolWindow.ToolWindowLayoutStorageManagerState$$serializer
- kotlinx.serialization.internal.GeneratedSerializer
- sf:INSTANCE:com.intellij.toolWindow.ToolWindowLayoutStorageManagerState$$serializer
- f:childSerializers():kotlinx.serialization.KSerializer[]
- f:deserialize(kotlinx.serialization.encoding.Decoder):com.intellij.toolWindow.ToolWindowLayoutStorageManagerState
- f:getDescriptor():kotlinx.serialization.descriptors.SerialDescriptor
- f:serialize(kotlinx.serialization.encoding.Encoder,com.intellij.toolWindow.ToolWindowLayoutStorageManagerState):V
- typeParametersSerializers():kotlinx.serialization.KSerializer[]
f:com.intellij.toolWindow.ToolWindowLayoutStorageManagerState$Companion
- f:serializer():kotlinx.serialization.KSerializer
f:com.intellij.toolWindow.ToolWindowLayoutStorageManagerStateV1
- sf:Companion:com.intellij.toolWindow.ToolWindowLayoutStorageManagerStateV1$Companion
- <init>():V
- <init>(java.util.List,java.util.List):V
- b:<init>(java.util.List,java.util.List,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.util.List
- f:component2():java.util.List
- f:copy(java.util.List,java.util.List):com.intellij.toolWindow.ToolWindowLayoutStorageManagerStateV1
- bs:copy$default(com.intellij.toolWindow.ToolWindowLayoutStorageManagerStateV1,java.util.List,java.util.List,I,java.lang.Object):com.intellij.toolWindow.ToolWindowLayoutStorageManagerStateV1
- equals(java.lang.Object):Z
- f:getV1():java.util.List
- f:getV2():java.util.List
- hashCode():I
bc:com.intellij.toolWindow.ToolWindowLayoutStorageManagerStateV1$$serializer
- kotlinx.serialization.internal.GeneratedSerializer
- sf:INSTANCE:com.intellij.toolWindow.ToolWindowLayoutStorageManagerStateV1$$serializer
- f:childSerializers():kotlinx.serialization.KSerializer[]
- f:deserialize(kotlinx.serialization.encoding.Decoder):com.intellij.toolWindow.ToolWindowLayoutStorageManagerStateV1
- f:getDescriptor():kotlinx.serialization.descriptors.SerialDescriptor
- f:serialize(kotlinx.serialization.encoding.Encoder,com.intellij.toolWindow.ToolWindowLayoutStorageManagerStateV1):V
- typeParametersSerializers():kotlinx.serialization.KSerializer[]
f:com.intellij.toolWindow.ToolWindowLayoutStorageManagerStateV1$Companion
- f:serializer():kotlinx.serialization.KSerializer
com.intellij.toolWindow.ToolWindowStripeManager
- a:allowToShowOnStripe(java.lang.String,Z,Z):Z
f:com.intellij.toolWindow.ToolwindowKt
- sf:findIconFromBean(com.intellij.openapi.wm.ToolWindowEP,com.intellij.openapi.wm.ToolWindowFactory,com.intellij.openapi.extensions.PluginDescriptor):javax.swing.Icon
- sf:getStripeTitleSupplier(java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.extensions.PluginDescriptor):java.util.function.Supplier
com.intellij.troubleshooting.GeneralTroubleInfoCollector
- sf:EP_SETTINGS:com.intellij.openapi.extensions.ExtensionPointName
- a:collectInfo(com.intellij.openapi.project.Project):java.lang.String
- a:getTitle():java.lang.String
com.intellij.troubleshooting.TroubleInfoCollector
- sf:EP_SETTINGS:com.intellij.openapi.extensions.ExtensionPointName
- a:collectInfo(com.intellij.openapi.project.Project):java.lang.String
a:com.intellij.ui.AbstractExpandableItemsHandler
- com.intellij.ui.ExpandableItemsHandler
- pf:myComponent:javax.swing.JComponent
- p:<init>(javax.swing.JComponent):V
- p:doFillBackground(I,I,java.awt.Graphics2D):V
- p:doPaintTooltipImage(java.awt.Component,java.awt.Rectangle,java.awt.Graphics2D,java.lang.Object):V
- p:getBorderColor():java.awt.Color
- pa:getCellKeyForPoint(java.awt.Point):java.lang.Object
- pa:getCellRendererAndBounds(java.lang.Object):com.intellij.openapi.util.Pair
- getExpandedItems():java.util.Collection
- p:getVisibleRect(java.lang.Object):java.awt.Rectangle
- p:handleMouseEvent(java.awt.event.MouseEvent,Z):V
- p:handleSelectionChange(java.lang.Object):V
- p:handleSelectionChange(java.lang.Object,Z):V
- isEnabled():Z
- p:isPaintBorder():Z
- p:isPopup():Z
- isShowing():Z
- p:onFocusLost():V
- p:setBorderArc(I):V
- setEnabled(Z):V
- s:setRelativeBounds(java.awt.Component,java.awt.Rectangle,java.awt.Component,java.awt.Container):V
- p:updateCurrentSelection():V
a:com.intellij.ui.AbstractFontCombo
- com.intellij.openapi.ui.ComboBox
- p:<init>(javax.swing.ComboBoxModel):V
- a:getFontName():java.lang.String
- a:isMonospacedOnly():Z
- a:isMonospacedOnlySupported():Z
- a:isNoFontSelected():Z
- a:setFontName(java.lang.String):V
- a:setMonospacedOnly(Z):V
f:com.intellij.ui.AdditionalPageAtBottomEditorCustomization
- com.intellij.ui.SimpleEditorCustomization
- sf:DISABLED:com.intellij.ui.AdditionalPageAtBottomEditorCustomization
- sf:ENABLED:com.intellij.ui.AdditionalPageAtBottomEditorCustomization
- customize(com.intellij.openapi.editor.ex.EditorEx):V
a:com.intellij.ui.AppIcon
- <init>():V
- s:getInstance():com.intellij.ui.AppIcon
- a:hideProgress(com.intellij.openapi.project.Project,java.lang.Object):Z
- a:requestAttention(com.intellij.openapi.project.Project,Z):V
- requestFocus():V
- requestFocus(com.intellij.openapi.wm.IdeFrame):V
- requestFocus(java.awt.Window):V
- a:setErrorBadge(com.intellij.openapi.project.Project,java.lang.String):V
- a:setOkBadge(com.intellij.openapi.project.Project,Z):V
- a:setProgress(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.openapi.wm.AppIconScheme$Progress,D,Z):Z
f:com.intellij.ui.AppUIUtil
- sf:INSTANCE:com.intellij.ui.AppUIUtil
- f:confirmConsentOptions(java.util.List):Z
- f:createHorizontalGradientTexture(java.awt.Graphics,java.awt.Color,java.awt.Color,I,I,I):java.awt.TexturePaint
- bs:createHorizontalGradientTexture$default(com.intellij.ui.AppUIUtil,java.awt.Graphics,java.awt.Color,java.awt.Color,I,I,I,I,java.lang.Object):java.awt.TexturePaint
- f:getAdjustedFractionalMetricsValue():java.lang.Object
- f:getFrameClass():java.lang.String
- sf:invokeLaterIfProjectAlive(com.intellij.openapi.project.Project,java.lang.Runnable):V
- sf:invokeOnEdt(java.lang.Runnable):V
- sf:invokeOnEdt(java.lang.Runnable,com.intellij.openapi.util.Condition):V
- sf:isInFullScreen(java.awt.Window):Z
- sf:loadApplicationIcon(com.intellij.ui.scale.ScaleContext,I):javax.swing.Icon
- sf:loadConsentsForEditing():java.util.List
- sf:saveConsents(java.util.List):V
- f:showConsentsAgreementIfNeeded(com.intellij.openapi.diagnostic.Logger,java.util.function.Predicate):Z
- sf:targetToDevice(java.awt.Component,java.awt.Component):V
- sf:updateForDarcula(Z):V
f:com.intellij.ui.AppUIUtilKt
- sf:findAppIcon():java.lang.String
- sf:isWindowIconAlreadyExternallySet():Z
- sf:loadSmallApplicationIcon(com.intellij.ui.scale.ScaleContext,I):javax.swing.Icon
- bs:loadSmallApplicationIcon$default(com.intellij.ui.scale.ScaleContext,I,I,java.lang.Object):javax.swing.Icon
- sf:updateAppWindowIcon(java.awt.Window):V
f:com.intellij.ui.BadgeIconSupplier
- <init>(javax.swing.Icon):V
- f:getErrorIcon():javax.swing.Icon
- f:getErrorIcon(Z):javax.swing.Icon
- f:getInfoIcon():javax.swing.Icon
- f:getInfoIcon(Z):javax.swing.Icon
- f:getLiveIndicatorIcon():javax.swing.Icon
- f:getLiveIndicatorIcon(Z):javax.swing.Icon
- f:getOriginalIcon():javax.swing.Icon
- f:getSuccessIcon():javax.swing.Icon
- f:getSuccessIcon(Z):javax.swing.Icon
- f:getWarningIcon():javax.swing.Icon
- f:getWarningIcon(Z):javax.swing.Icon
f:com.intellij.ui.BalloonImpl
- com.intellij.ide.IdeTooltip$Ui
- com.intellij.ide.ui.ScreenAreaConsumer
- com.intellij.openapi.ui.popup.Balloon
- sf:ARC:com.intellij.util.ui.JBValue
- sf:DIALOG_POINTER_WIDTH:com.intellij.util.ui.JBValue
- sf:FORCED_NO_SHADOW:com.intellij.openapi.util.Key
- sf:POINTER_LENGTH:com.intellij.util.ui.JBValue
- <init>(javax.swing.JComponent,java.awt.Color,java.awt.Insets,java.awt.Color,Z,Z,Z,Z,Z,Z,J,Z,Z,java.awt.event.ActionListener,Z,I,I,I,I,Z,java.lang.String,java.awt.Insets,Z,Z,Z,com.intellij.openapi.ui.popup.Balloon$Layer,Z,java.awt.Dimension,I):V
- addListener(com.intellij.openapi.ui.popup.JBPopupListener):V
- dispose():V
- s:getAbstractPositionFor(com.intellij.openapi.ui.popup.Balloon$Position):com.intellij.ui.BalloonImpl$AbstractPosition
- getClipY():I
- getCloseButton():javax.swing.Icon
- getComponent():javax.swing.JComponent
- getConsumedScreenBounds():java.awt.Rectangle
- getContent():javax.swing.JComponent
- getId():java.lang.String
- getLayer():I
- s:getNormalInset():I
- s:getPointerLength(com.intellij.openapi.ui.popup.Balloon$Position,Z):I
- getPosition():com.intellij.ui.BalloonImpl$AbstractPosition
- getPreferredSize():java.awt.Dimension
- getShadowBorderInsets():java.awt.Insets
- getShadowBorderProvider():com.intellij.ui.BalloonImpl$ShadowBorderProvider
- getShowingPoint():com.intellij.ui.awt.RelativePoint
- getTitle():java.lang.String
- getUnderlyingWindow():java.awt.Window
- hasShadow():Z
- hide():V
- hide(Z):V
- hideImmediately():V
- isAnimationEnabled():Z
- isBlockClicks():Z
- isClickProcessor():Z
- isDisposed():Z
- isInside(com.intellij.ui.awt.RelativePoint):Z
- isMovingForward(com.intellij.ui.awt.RelativePoint):Z
- isVisible():Z
- revalidate():V
- revalidate(com.intellij.util.ui.PositionTracker):V
- setActionButtonsVisible(Z):V
- setActionProvider(com.intellij.ui.BalloonImpl$ActionProvider):V
- setAnimationEnabled(Z):V
- setBlockClicks(Z):V
- setBounds(java.awt.Rectangle):V
- setClipY(I):V
- setCornerRadius(I):V
- setFillColor(java.awt.Color):V
- setHideListener(java.lang.Runnable):V
- setHideOnClickOutside(Z):V
- setId(java.lang.String):V
- setPointerColor(java.awt.Color):V
- setPointerShiftedToStart(Z):V
- setShadowBorderProvider(com.intellij.ui.BalloonImpl$ShadowBorderProvider):V
- setShowPointer(Z):V
- setTitle(java.lang.String):V
- setTopClip(Z):V
- setZeroPositionInLayer(Z):V
- show(com.intellij.ui.awt.RelativePoint,com.intellij.openapi.ui.popup.Balloon$Position):V
- show(com.intellij.util.ui.PositionTracker,com.intellij.openapi.ui.popup.Balloon$Position):V
- show(javax.swing.JLayeredPane):V
- show(javax.swing.JLayeredPane,java.awt.Rectangle):V
- showInCenterOf(javax.swing.JComponent):V
- startFadeoutTimer(I):V
- startSmartFadeoutTimer(I):V
- wasFadedIn():Z
- wasFadedOut():Z
c:com.intellij.ui.BalloonImpl$ActionButton
- com.intellij.ui.jcef.HwFacadeNonOpaquePanel
- com.intellij.openapi.wm.IdeGlassPane$TopComponent
- pf:myButton:com.intellij.util.ui.BaseButtonBehavior
- <init>(com.intellij.ui.BalloonImpl,javax.swing.Icon,javax.swing.Icon,java.lang.String,com.intellij.util.Consumer):V
- canBePreprocessed(java.awt.event.MouseEvent):Z
- getPreferredSize():java.awt.Dimension
- p:paintComponent(java.awt.Graphics):V
- p:paintIcon(java.awt.Graphics,javax.swing.Icon):V
com.intellij.ui.BalloonImpl$ActionProvider
- a:createActions():java.util.List
- a:layout(java.awt.Rectangle):V
com.intellij.ui.BalloonImpl$HideListenerWithMouse
- java.lang.Runnable
- a:run(java.awt.event.MouseEvent):V
com.intellij.ui.BalloonImpl$ShadowBorderProvider
- a:getInsets():java.awt.Insets
- a:paintBorder(java.awt.Rectangle,java.awt.Graphics2D):V
- a:paintPointingShape(java.awt.Rectangle,java.awt.Point,com.intellij.openapi.ui.popup.Balloon$Position,java.awt.Graphics2D):V
- a:paintShadow(javax.swing.JComponent,java.awt.Graphics):V
f:com.intellij.ui.BalloonLayoutData
- borderColor:java.awt.Color
- closeAll:java.lang.Runnable
- collapseType:com.intellij.ui.BalloonLayoutData$Type
- displayId:java.lang.String
- doLayout:java.lang.Runnable
- fadeoutTime:J
- fillColor:java.awt.Color
- fullHeight:I
- groupId:java.lang.String
- height:I
- id:java.lang.String
- isExpandable:Z
- maxScrollHeight:I
- mergeData:com.intellij.ui.BalloonLayoutData$MergeInfo
- project:com.intellij.openapi.project.Project
- showActions:com.intellij.openapi.util.Computable
- showFullContent:Z
- showMinSize:Z
- showSettingButton:Z
- textColor:java.awt.Color
- twoLineHeight:I
- type:com.intellij.notification.NotificationType
- welcomeScreen:Z
- <init>():V
- s:createEmpty():com.intellij.ui.BalloonLayoutData
- s:fullContent():com.intellij.openapi.util.Ref
- getMergeIds():java.util.List
- merge():com.intellij.ui.BalloonLayoutData$MergeInfo
f:com.intellij.ui.BalloonLayoutData$ID
- <init>(java.lang.String,java.lang.String):V
f:com.intellij.ui.BalloonLayoutData$MergeInfo
- count:I
- linkIds:java.util.List
- <init>(com.intellij.ui.BalloonLayoutData$MergeInfo,com.intellij.ui.BalloonLayoutData$ID):V
e:com.intellij.ui.BalloonLayoutData$Type
- java.lang.Enum
- sf:ImportantSuggestion:com.intellij.ui.BalloonLayoutData$Type
- sf:Suggestion:com.intellij.ui.BalloonLayoutData$Type
- sf:Timeline:com.intellij.ui.BalloonLayoutData$Type
- s:valueOf(java.lang.String):com.intellij.ui.BalloonLayoutData$Type
- s:values():com.intellij.ui.BalloonLayoutData$Type[]
a:com.intellij.ui.CardLayoutPanel
- javax.swing.JComponent
- com.intellij.openapi.Disposable
- javax.accessibility.Accessible
- <init>():V
- pa:create(java.lang.Object):java.awt.Component
- dispose():V
- p:dispose(java.lang.Object,java.awt.Component):V
- doLayout():V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getKey():java.lang.Object
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- getValue(java.lang.Object,Z):java.awt.Component
- pf:isDisposed():Z
- pa:prepare(java.lang.Object):java.lang.Object
- remove(I):V
- removeAll():V
- pf:resetValue(java.lang.Object):java.awt.Component
- select(java.lang.Object,Z):com.intellij.openapi.util.ActionCallback
pf:com.intellij.ui.CardLayoutPanel$AccessibleCardLayoutPanel
- javax.swing.JComponent$AccessibleJComponent
- getAccessibleRole():javax.accessibility.AccessibleRole
c:com.intellij.ui.CheckboxTree
- com.intellij.ui.CheckboxTreeBase
- <init>():V
- <init>(com.intellij.ui.CheckboxTree$CheckboxTreeCellRenderer,com.intellij.ui.CheckedTreeNode):V
- <init>(com.intellij.ui.CheckboxTree$CheckboxTreeCellRenderer,com.intellij.ui.CheckedTreeNode,com.intellij.ui.CheckboxTreeBase$CheckPolicy):V
- p:installSpeedSearch():V
a:com.intellij.ui.CheckboxTree$CheckboxTreeCellRenderer
- com.intellij.ui.CheckboxTreeBase$CheckboxTreeCellRendererBase
- p:<init>():V
- p:<init>(Z):V
- p:<init>(Z,Z):V
c:com.intellij.ui.CheckboxTreeTable
- com.intellij.ui.dualView.TreeTableView
- <init>(com.intellij.ui.CheckedTreeNode,com.intellij.ui.CheckboxTree$CheckboxTreeCellRenderer,com.intellij.util.ui.ColumnInfo[]):V
- addCheckboxTreeListener(com.intellij.ui.CheckboxTreeListener):V
- getCheckedNodes(java.lang.Class):java.lang.Object[]
f:com.intellij.ui.ColorPicker
- javax.swing.JPanel
- com.intellij.ui.picker.ColorListener
- javax.swing.event.DocumentListener
- <init>(com.intellij.openapi.Disposable,java.awt.Color,Z):V
- appendRecentColor():V
- s:bestLocationForColorPickerPopup(com.intellij.openapi.editor.Editor):com.intellij.ui.awt.RelativePoint
- changedUpdate(javax.swing.event.DocumentEvent):V
- colorChanged(java.awt.Color,java.lang.Object):V
- getColor():java.awt.Color
- getPreferredFocusedComponent():javax.swing.JComponent
- insertUpdate(javax.swing.event.DocumentEvent):V
- removeUpdate(javax.swing.event.DocumentEvent):V
- saveRecentColors():V
- s:showColorPickerPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.ui.picker.ColorListener):V
- s:showColorPickerPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.ui.picker.ColorListener,com.intellij.ui.awt.RelativePoint,Z):V
- s:showDialog(java.awt.Component,java.lang.String,java.awt.Color,Z,java.util.List,Z):java.awt.Color
f:com.intellij.ui.ColorPicker$ColorWheelImageProducer
- java.awt.image.MemoryImageSource
- <init>(I,I,F):V
- generateColorWheel():V
- getRadius():I
f:com.intellij.ui.ColorPicker$NumberDocument
- javax.swing.text.PlainDocument
- <init>(com.intellij.ui.ColorPicker,Z):V
- insertString(I,java.lang.String,javax.swing.text.AttributeSet):V
a:com.intellij.ui.ColorPickerListenerFactory
- <init>():V
- a:createListener(com.intellij.psi.PsiElement):com.intellij.ui.ColorPickerListener
- s:createListenersFor(com.intellij.psi.PsiElement):java.util.List
f:com.intellij.ui.ComboBoxCompositeEditor
- javax.swing.JPanel
- javax.swing.ComboBoxEditor
- <init>(javax.swing.JComponent,javax.swing.JComponent[]):V
- addActionListener(java.awt.event.ActionListener):V
- getBackground():java.awt.Color
- getEditorComponent():java.awt.Component
- getItem():java.lang.Object
- isEditable():Z
- isFocusable():Z
- onGetItem(java.util.function.BiFunction):com.intellij.ui.ComboBoxCompositeEditor
- onSetItem(java.util.function.BiConsumer):com.intellij.ui.ComboBoxCompositeEditor
- removeActionListener(java.awt.event.ActionListener):V
- selectAll():V
- setBackground(java.awt.Color):V
- setFocusable(Z):V
- setItem(java.lang.Object):V
- s:withComponents(javax.swing.JComponent,javax.swing.JComponent[]):com.intellij.ui.ComboBoxCompositeEditor
com.intellij.ui.ComboBoxCompositeEditor$EditorComponent
- a:addActionListener(java.awt.event.ActionListener):V
- a:getDelegate():javax.swing.JComponent
- a:getItem():java.lang.Object
- a:removeActionListener(java.awt.event.ActionListener):V
- a:selectAll():V
- a:setItem(java.lang.Object):V
f:com.intellij.ui.ComboBoxTableCellRenderer
- javax.swing.JPanel
- javax.swing.table.TableCellRenderer
- sf:COMBO_WHEN_SELECTED_RENDERER:javax.swing.table.TableCellRenderer
- sf:INSTANCE:javax.swing.table.TableCellRenderer
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):javax.swing.JComponent
c:com.intellij.ui.ComboboxEditorTextField
- com.intellij.ui.EditorTextField
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,Z):V
- <init>(java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- p:createEditor():com.intellij.openapi.editor.ex.EditorEx
- getMinimumSize():java.awt.Dimension
- p:shouldHaveBorder():Z
- p:updateBorder(com.intellij.openapi.editor.ex.EditorEx):V
c:com.intellij.ui.ComboboxSpeedSearch
- com.intellij.ui.SpeedSearchBase
- <init>(javax.swing.JComboBox):V
- <init>(javax.swing.JComboBox,java.lang.Void):V
- p:getElementAt(I):java.lang.Object
- p:getElementCount():I
- p:getElementText(java.lang.Object):java.lang.String
- p:getSelectedIndex():I
- s:installOn(javax.swing.JComboBox):com.intellij.ui.ComboboxSpeedSearch
- s:installSpeedSearch(javax.swing.JComboBox,java.util.function.Function):V
- p:selectElement(java.lang.Object,java.lang.String):V
- setupListeners():V
com.intellij.ui.ComponentWithMnemonics
f:com.intellij.ui.DeferredIconImpl
- com.intellij.util.ui.JBScalableIcon
- com.intellij.ui.DeferredIcon
- com.intellij.ui.RetrievableIcon
- com.intellij.ui.icons.CopyableIcon
- com.intellij.ui.icons.IconWithToolTip
- sf:Companion:com.intellij.ui.DeferredIconImpl$Companion
- <init>(javax.swing.Icon,java.lang.Object,Z,com.intellij.util.Function):V
- copy():com.intellij.ui.DeferredIconImpl
- f:currentlyPaintedIcon():javax.swing.Icon
- equals(java.lang.Object):Z
- evaluate():javax.swing.Icon
- getBaseIcon():javax.swing.Icon
- getIconHeight():I
- getIconWidth():I
- getModificationCount():J
- getToolTip(Z):java.lang.String
- hashCode():I
- f:isDone():Z
- f:isNeedReadAction():Z
- notifyPaint(java.awt.Component,I,I):V
- paintIcon(java.awt.Component,java.awt.Graphics,I,I):V
- replaceBy(com.intellij.ui.icons.IconReplacer):javax.swing.Icon
- retrieveIcon():javax.swing.Icon
- scale(F):com.intellij.ui.DeferredIconImpl
- f:scheduleEvaluation(java.awt.Component,I,I):kotlinx.coroutines.Job
f:com.intellij.ui.DeferredIconImpl$Companion
- f:withoutReadAction(javax.swing.Icon,java.lang.Object,kotlin.jvm.functions.Function1):com.intellij.ui.DeferredIcon
c:com.intellij.ui.EditorComboBox
- com.intellij.openapi.ui.ComboBox
- com.intellij.openapi.editor.event.DocumentListener
- s:COMPONENT_ACCESSOR:com.intellij.openapi.ui.TextComponentAccessor
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,Z):V
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- addNotify():V
- appendItem(java.lang.String):V
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- p:createEditorTextField(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,Z):com.intellij.ui.ComboboxEditorTextField
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- getCaretModel():com.intellij.openapi.editor.CaretModel
- getDocument():com.intellij.openapi.editor.Document
- getEditorEx():com.intellij.openapi.editor.ex.EditorEx
- getPreferredSize():java.awt.Dimension
- getProject():com.intellij.openapi.project.Project
- getText():java.lang.String
- prependItem(java.lang.String):V
- p:processKeyBinding(javax.swing.KeyStroke,java.awt.event.KeyEvent,I,Z):Z
- removeDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- removeNotify():V
- removeSelection():V
- setDocument(com.intellij.openapi.editor.Document):V
- setEnabled(Z):V
- setFont(java.awt.Font):V
- setFontInheritedFromLAF(Z):V
- setHistory(java.lang.String[]):V
- setText(java.lang.String):V
- p:shouldHaveBorder():Z
c:com.intellij.ui.EditorComboBoxEditor
- javax.swing.ComboBoxEditor
- psf:NAME:java.lang.String
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- addActionListener(java.awt.event.ActionListener):V
- p:getDocument():com.intellij.openapi.editor.Document
- getEditor():com.intellij.openapi.editor.Editor
- getEditorComponent():com.intellij.ui.EditorTextField
- getItem():java.lang.Object
- p:onEditorCreate(com.intellij.openapi.editor.ex.EditorEx):V
- removeActionListener(java.awt.event.ActionListener):V
- selectAll():V
- setItem(java.lang.Object):V
com.intellij.ui.EditorCustomization
- a:customize(com.intellij.openapi.editor.ex.EditorEx):V
com.intellij.ui.EditorSettingsProvider
- sf:NO_WHITESPACE:com.intellij.ui.EditorSettingsProvider
- a:customizeSettings(com.intellij.openapi.editor.ex.EditorEx):V
c:com.intellij.ui.EditorTextField
- com.intellij.ui.components.panels.NonOpaquePanel
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.openapi.editor.event.DocumentListener
- com.intellij.ui.EditorTextComponent
- com.intellij.ui.TextAccessor
- java.awt.event.FocusListener
- java.awt.event.MouseListener
- sf:SUPPLEMENTARY_KEY:com.intellij.openapi.util.Key
- <init>():V
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,Z):V
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- addFocusListener(java.awt.event.FocusListener):V
- p:addImpl(java.awt.Component,java.lang.Object,I):V
- addMouseListener(java.awt.event.MouseListener):V
- f:addNotify():V
- addSettingsProvider(com.intellij.ui.EditorSettingsProvider):V
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- p:createDocument():com.intellij.openapi.editor.Document
- p:createEditor():com.intellij.openapi.editor.ex.EditorEx
- s:detectLineSeparators(com.intellij.openapi.editor.Document,java.lang.String):com.intellij.util.LineSeparator
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- ensureWillComputePreferredSize():V
- focusGained(java.awt.event.FocusEvent):V
- focusLost(java.awt.event.FocusEvent):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getBackground():java.awt.Color
- getCaretModel():com.intellij.openapi.editor.CaretModel
- getComponent():javax.swing.JComponent
- getDocument():com.intellij.openapi.editor.Document
- getEditor():com.intellij.openapi.editor.Editor
- getEditor(Z):com.intellij.openapi.editor.ex.EditorEx
- getFileType():com.intellij.openapi.fileTypes.FileType
- getFocusTarget():javax.swing.JComponent
- getMinimumSize():java.awt.Dimension
- getNextFocusableComponent():java.awt.Component
- getPreferredSize():java.awt.Dimension
- getProject():com.intellij.openapi.project.Project
- getText():java.lang.String
- isFocusOwner():Z
- p:isOneLineMode():Z
- isViewer():Z
- s:managesEditor(com.intellij.openapi.editor.Editor):Z
- mouseClicked(java.awt.event.MouseEvent):V
- mouseEntered(java.awt.event.MouseEvent):V
- mouseExited(java.awt.event.MouseEvent):V
- mousePressed(java.awt.event.MouseEvent):V
- mouseReleased(java.awt.event.MouseEvent):V
- p:onEditorAdded(com.intellij.openapi.editor.Editor):V
- p:processKeyBinding(javax.swing.KeyStroke,java.awt.event.KeyEvent,I,Z):Z
- removeDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- removeFocusListener(java.awt.event.FocusListener):V
- removeMouseListener(java.awt.event.MouseListener):V
- removeNotify():V
- removeSelection():V
- requestFocus():V
- requestFocusInWindow():Z
- select(com.intellij.openapi.util.TextRange):V
- selectAll():V
- setAsRendererWithSelection(java.awt.Color,java.awt.Color):V
- setBackground(java.awt.Color):V
- setCaretPosition(I):V
- setDisposedWith(com.intellij.openapi.Disposable):V
- setDocument(com.intellij.openapi.editor.Document):V
- setEnabled(Z):V
- setFileType(com.intellij.openapi.fileTypes.FileType):V
- setFont(java.awt.Font):V
- setFontInheritedFromLAF(Z):V
- setNewDocumentAndFileType(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.Document):V
- setNextFocusableComponent(java.awt.Component):V
- setOneLineMode(Z):V
- setPlaceholder(java.lang.CharSequence):V
- setPreferredWidth(I):V
- setShowPlaceholderWhenFocused(Z):V
- setSupplementary(Z):V
- setText(java.lang.String):V
- setViewer(Z):V
- p:setViewerEnabled(Z):V
- p:setupBorder(com.intellij.openapi.editor.ex.EditorEx):V
- s:setupTextFieldEditor(com.intellij.openapi.editor.ex.EditorEx):V
- p:shouldHaveBorder():Z
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- p:updateBorder(com.intellij.openapi.editor.ex.EditorEx):V
- updateUI():V
- validate():V
a:com.intellij.ui.EditorTextFieldCellRenderer
- com.intellij.openapi.Disposable
- javax.swing.table.TableCellRenderer
- p:<init>(com.intellij.openapi.project.Project,com.intellij.lang.Language,com.intellij.openapi.Disposable):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.Disposable):V
- p:createRendererComponent(com.intellij.openapi.project.Project,com.intellij.lang.Language,Z):com.intellij.ui.EditorTextFieldCellRenderer$RendererComponent
- p:customizeEditor(com.intellij.openapi.editor.ex.EditorEx,javax.swing.JTable,java.lang.Object,Z,I,I):V
- dispose():V
- p:getColorScheme(javax.swing.JTable):com.intellij.openapi.editor.colors.EditorColorsScheme
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
- pa:getText(javax.swing.JTable,java.lang.Object,I,I):java.lang.String
- p:getTextAttributes(javax.swing.JTable,java.lang.Object,I,I):com.intellij.openapi.editor.markup.TextAttributes
f:com.intellij.ui.EditorTextFieldCellRenderer$AbbreviatingRendererComponent
- com.intellij.ui.EditorTextFieldCellRenderer$RendererComponent
- <init>(com.intellij.openapi.project.Project,com.intellij.lang.Language,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.lang.Language,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.lang.Language,Z,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.lang.Language,Z,Z,Z,C):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getPreferredSize():java.awt.Dimension
- setAppendEllipsis(Z):V
- setForceSingleLine(Z):V
- setText(java.lang.String):V
a:com.intellij.ui.EditorTextFieldCellRenderer$RendererComponent
- com.intellij.ui.CellRendererPanel
- com.intellij.openapi.Disposable
- dispose():V
- getEditor():com.intellij.openapi.editor.ex.EditorEx
- setBackground(java.awt.Color):V
- a:setText(java.lang.String):V
- setText(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes,Z):V
c:com.intellij.ui.EditorTextFieldCellRenderer$SimpleRendererComponent
- com.intellij.ui.EditorTextFieldCellRenderer$RendererComponent
- <init>(com.intellij.openapi.project.Project,com.intellij.lang.Language,Z):V
- setText(java.lang.String):V
c:com.intellij.ui.EditorTextFieldCellRenderer$SimpleWithGutterRendererComponent
- com.intellij.ui.EditorTextFieldCellRenderer$SimpleRendererComponent
- <init>(com.intellij.openapi.project.Project,com.intellij.lang.Language,Z):V
com.intellij.ui.EditorTextFieldProvider
- a:getEditorField(com.intellij.lang.Language,com.intellij.openapi.project.Project,java.lang.Iterable):com.intellij.ui.EditorTextField
- s:getInstance():com.intellij.ui.EditorTextFieldProvider
c:com.intellij.ui.EditorTextFieldProviderImpl
- com.intellij.ui.EditorTextFieldProvider
- <init>():V
- getEditorField(com.intellij.lang.Language,com.intellij.openapi.project.Project,java.lang.Iterable):com.intellij.ui.EditorTextField
f:com.intellij.ui.ErrorStripeEditorCustomization
- com.intellij.ui.SimpleEditorCustomization
- sf:DISABLED:com.intellij.ui.ErrorStripeEditorCustomization
- sf:ENABLED:com.intellij.ui.ErrorStripeEditorCustomization
- customize(com.intellij.openapi.editor.ex.EditorEx):V
c:com.intellij.ui.ExpandableEditorSupport
- com.intellij.ui.Expandable
- <init>(com.intellij.ui.EditorTextField):V
- <init>(com.intellij.ui.EditorTextField,com.intellij.util.Function,com.intellij.util.Function):V
- p:createPopupEditor(com.intellij.ui.EditorTextField,java.lang.String):com.intellij.ui.EditorTextField
- p:initFieldEditor(com.intellij.openapi.editor.ex.EditorEx,java.awt.Color):V
- p:initPopupEditor(com.intellij.openapi.editor.ex.EditorEx,java.awt.Color):V
- p:prepare(com.intellij.ui.EditorTextField,com.intellij.util.Function):com.intellij.ui.components.fields.ExpandableSupport$Content
- p:updateFieldFolding(com.intellij.openapi.editor.ex.EditorEx):V
f:com.intellij.ui.ExtendableEditorSupport
- <init>():V
- s:setupExtension(com.intellij.openapi.editor.ex.EditorEx,java.awt.Color,com.intellij.ui.components.fields.ExtendableTextComponent$Extension):javax.swing.JLabel
c:com.intellij.ui.FilteringSpeedSearch
- com.intellij.ui.speedSearch.SpeedSearch
- com.intellij.ui.FilteringTree$FilteringTreeUserObjectMatcher
- p:<init>(com.intellij.ui.FilteringTree,com.intellij.ui.SearchTextField):V
- f:checkMatching(java.lang.Object,java.lang.Iterable):com.intellij.ui.FilteringTree$Matching
- checkMatching(javax.swing.tree.DefaultMutableTreeNode):com.intellij.ui.FilteringTree$Matching
- getSelection():javax.swing.tree.DefaultMutableTreeNode
- iterate(javax.swing.tree.DefaultMutableTreeNode,Z):java.util.Iterator
- iterate(javax.swing.tree.DefaultMutableTreeNode,Z,Z):java.util.Iterator
- noHits():V
- p:onMatchingChecked(java.lang.Object,java.lang.Iterable,com.intellij.ui.FilteringTree$Matching):V
- p:onSearchFieldUpdated(java.lang.String):V
- p:onUpdatePattern(java.lang.String):V
- select(javax.swing.tree.DefaultMutableTreeNode):V
- update():V
- updateSelection():V
a:com.intellij.ui.FilteringTree
- sf:DUMMY_SEARCH:com.intellij.ui.speedSearch.SpeedSearchSupply
- <init>(com.intellij.ui.treeStructure.Tree,javax.swing.tree.DefaultMutableTreeNode):V
- pa:createNode(java.lang.Object):javax.swing.tree.DefaultMutableTreeNode
- p:createSpeedSearch(com.intellij.ui.SearchTextField):com.intellij.ui.speedSearch.SpeedSearchSupply
- p:expandTreeOnSearchUpdateComplete(java.lang.String):V
- pa:getChildren(java.lang.Object):java.lang.Iterable
- getComponent():javax.swing.JComponent
- pa:getNodeClass():java.lang.Class
- getRoot():javax.swing.tree.DefaultMutableTreeNode
- getSearchModel():com.intellij.ui.FilteringTree$SearchTreeModel
- pa:getText(java.lang.Object):java.lang.String
- getTree():com.intellij.ui.treeStructure.Tree
- f:getUserObject(javax.swing.tree.TreeNode):java.lang.Object
- installSearchField():com.intellij.ui.SearchTextField
- installSimple():V
- p:onSpeedSearchUpdateComplete(java.lang.String):V
- p:useIdentityHashing():Z
p:com.intellij.ui.FilteringTree$FilteringTreeUserObjectMatcher
- a:checkMatching(java.lang.Object,java.lang.Iterable):com.intellij.ui.FilteringTree$Matching
e:com.intellij.ui.FilteringTree$Matching
- java.lang.Enum
- sf:FULL:com.intellij.ui.FilteringTree$Matching
- sf:NONE:com.intellij.ui.FilteringTree$Matching
- sf:PARTIAL:com.intellij.ui.FilteringTree$Matching
- s:valueOf(java.lang.String):com.intellij.ui.FilteringTree$Matching
- s:values():com.intellij.ui.FilteringTree$Matching[]
f:com.intellij.ui.FilteringTree$SearchTreeModel
- javax.swing.tree.DefaultTreeModel
- <init>(javax.swing.tree.DefaultMutableTreeNode,com.intellij.ui.speedSearch.SpeedSearchSupply,com.intellij.util.Function,com.intellij.util.Function,com.intellij.util.Function,Z):V
- getCachedNode(java.lang.Object):javax.swing.tree.DefaultMutableTreeNode
- getChildren(java.lang.Object):java.lang.Iterable
- getNode(java.lang.Object):javax.swing.tree.DefaultMutableTreeNode
- getRoot():javax.swing.tree.DefaultMutableTreeNode
- getRootObject():java.lang.Object
- getSpeedSearch():com.intellij.ui.speedSearch.SpeedSearchSupply
- getStructure():com.intellij.util.Function
- getUserObject(javax.swing.tree.DefaultMutableTreeNode):java.lang.Object
- isLeaf(java.lang.Object):Z
- refilter():V
- setSpeedSearch(com.intellij.ui.speedSearch.SpeedSearchSupply):V
- updateStructure():V
a:com.intellij.ui.FinderRecursivePanel
- com.intellij.ui.OnePixelSplitter
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.openapi.util.UserDataHolder
- p:myList:com.intellij.ui.components.JBList
- pf:myListModel:com.intellij.ui.CollectionListModel
- p:<init>(com.intellij.openapi.project.Project,com.intellij.ui.FinderRecursivePanel,java.lang.String):V
- p:<init>(com.intellij.openapi.project.Project,java.lang.String):V
- p:<init>(com.intellij.ui.FinderRecursivePanel):V
- p:createDefaultRightComponent():javax.swing.JComponent
- p:createLeftComponent():javax.swing.JComponent
- p:createList():com.intellij.ui.components.JBList
- p:createListCellRenderer():javax.swing.ListCellRenderer
- p:createRightComponent(java.lang.Object):javax.swing.JComponent
- dispose():V
- p:doCustomizeCellRenderer(com.intellij.ui.SimpleColoredComponent,javax.swing.JList,java.lang.Object,I,Z,Z):V
- doLayout():V
- p:getContainingFile(java.lang.Object):com.intellij.openapi.vfs.VirtualFile
- p:getCustomListActions():com.intellij.openapi.actionSystem.AnAction[]
- p:getFirstComponentPreferredSize():I
- p:getGroupId():java.lang.String
- p:getItemIcon(java.lang.Object):javax.swing.Icon
- pa:getItemText(java.lang.Object):java.lang.String
- p:getItemTooltipText(java.lang.Object):java.lang.String
- p:getListEmptyText():java.lang.String
- pa:getListItems():java.util.List
- getParentPanel():com.intellij.ui.FinderRecursivePanel
- getProject():com.intellij.openapi.project.Project
- getSelectedValue():java.lang.Object
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- pa:hasChildren(java.lang.Object):Z
- p:hasFixedSizeListElements():Z
- initPanel():V
- p:isDisposed():Z
- p:isEditable():Z
- isMergeListItemsRunning():Z
- p:isNonBlockingLoad():Z
- p:isRootPanel():Z
- p:mergeListItems(com.intellij.ui.CollectionListModel,javax.swing.JList,java.util.List):V
- p:performEditAction():Z
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- p:setMergeListItemsRunning(Z):V
- p:setNonBlockingLoad(Z):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- updatePanel():V
- updateRightComponent(Z):V
pf:com.intellij.ui.FinderRecursivePanel$DisposablePanel
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- <init>(java.awt.LayoutManager,com.intellij.openapi.Disposable):V
- dispose():V
f:com.intellij.ui.FontComboBox
- com.intellij.ui.AbstractFontCombo
- <init>():V
- <init>(Z):V
- <init>(Z,Z,Z):V
- getFontName():java.lang.String
- getPreferredSize():java.awt.Dimension
- isMonospacedOnly():Z
- isMonospacedOnlySupported():Z
- isNoFontSelected():Z
- setFontName(java.lang.String):V
- setModel(javax.swing.ComboBoxModel):V
- setMonospacedOnly(Z):V
c:com.intellij.ui.FontInfoRenderer
- com.intellij.ui.ColoredListCellRenderer
- <init>():V
- p:applyAdditionalHints(java.awt.Graphics2D):V
- p:customizeCellRenderer(javax.swing.JList,java.lang.Object,I,Z,Z):V
- p:getFontSize():java.lang.Integer
- getPreferredSize():java.awt.Dimension
- p:isEditorFont():Z
f:com.intellij.ui.GotItMessage
- s:createMessage(java.lang.String,java.lang.String):com.intellij.ui.GotItMessage
- setCallback(java.lang.Runnable):com.intellij.ui.GotItMessage
- setDisposable(com.intellij.openapi.Disposable):com.intellij.ui.GotItMessage
- setHyperlinkListener(javax.swing.event.HyperlinkListener):com.intellij.ui.GotItMessage
- setShowCallout(Z):com.intellij.ui.GotItMessage
- show(com.intellij.ui.awt.RelativePoint,com.intellij.openapi.ui.popup.Balloon$Position):V
- show(com.intellij.util.ui.PositionTracker,com.intellij.openapi.ui.popup.Balloon$Position):V
com.intellij.ui.GotItTextBuilder
- browserLink(java.lang.String,java.net.URL):java.lang.String
- code(java.lang.String):java.lang.String
- icon(java.lang.String):java.lang.String
- a:icon(javax.swing.Icon):java.lang.String
- a:link(java.lang.String,kotlin.jvm.functions.Function0):java.lang.String
- shortcut(java.lang.String):java.lang.String
- shortcut(javax.swing.KeyStroke):java.lang.String
f:com.intellij.ui.GotItTooltip
- com.intellij.ui.ToolbarActionTracker
- sf:BOTTOM_LEFT:kotlin.jvm.functions.Function2
- sf:BOTTOM_MIDDLE:kotlin.jvm.functions.Function2
- sf:Companion:com.intellij.ui.GotItTooltip$Companion
- sf:LEFT_MIDDLE:kotlin.jvm.functions.Function2
- sf:PROPERTY_PREFIX:java.lang.String
- sf:RIGHT_MIDDLE:kotlin.jvm.functions.Function2
- sf:TOP_MIDDLE:kotlin.jvm.functions.Function2
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.Disposable):V
- b:<init>(java.lang.String,java.lang.String,com.intellij.openapi.Disposable,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.lang.String,kotlin.jvm.functions.Function1,com.intellij.openapi.Disposable):V
- b:<init>(java.lang.String,kotlin.jvm.functions.Function1,com.intellij.openapi.Disposable,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:andShowCloseShortcut():com.intellij.ui.GotItTooltip
- assignTo(com.intellij.openapi.actionSystem.Presentation,kotlin.jvm.functions.Function2):V
- canShow():Z
- f:createAndShow(javax.swing.JComponent,kotlin.jvm.functions.Function2):com.intellij.openapi.ui.popup.Balloon
- dispose():V
- f:getId():java.lang.String
- f:getPosition():com.intellij.openapi.ui.popup.Balloon$Position
- f:getShowCondition():kotlin.jvm.functions.Function1
- f:gotIt():V
- hideOrRepaint(javax.swing.JComponent):V
- hidePopup():V
- init(javax.swing.JComponent,kotlin.jvm.functions.Function2):V
- sf:isCurrentlyShownFor(java.awt.Component):Z
- f:setOnBalloonCreated(kotlin.jvm.functions.Function1):com.intellij.ui.GotItTooltip
- f:setPosition(com.intellij.openapi.ui.popup.Balloon$Position):V
- f:setShowCondition(kotlin.jvm.functions.Function1):V
- show(javax.swing.JComponent,kotlin.jvm.functions.Function2):V
- wasCreated():Z
- f:withBrowserLink(java.lang.String,java.net.URL):com.intellij.ui.GotItTooltip
- f:withButtonLabel(java.lang.String):com.intellij.ui.GotItTooltip
- f:withContrastColors(Z):com.intellij.ui.GotItTooltip
- f:withFocus():com.intellij.ui.GotItTooltip
- f:withGotItButtonAction(kotlin.jvm.functions.Function0):com.intellij.ui.GotItTooltip
- f:withHeader(java.lang.String):com.intellij.ui.GotItTooltip
- f:withIcon(javax.swing.Icon):com.intellij.ui.GotItTooltip
- f:withLink(java.lang.String,java.lang.Runnable):com.intellij.ui.GotItTooltip
- f:withLink(java.lang.String,kotlin.jvm.functions.Function0):com.intellij.ui.GotItTooltip
- f:withMaxWidth(I):com.intellij.ui.GotItTooltip
- f:withPosition(com.intellij.openapi.ui.popup.Balloon$Position):com.intellij.ui.GotItTooltip
- f:withSecondaryButton(java.lang.String,kotlin.jvm.functions.Function0):com.intellij.ui.GotItTooltip
- bs:withSecondaryButton$default(com.intellij.ui.GotItTooltip,java.lang.String,kotlin.jvm.functions.Function0,I,java.lang.Object):com.intellij.ui.GotItTooltip
- f:withShortcut(com.intellij.openapi.actionSystem.Shortcut):com.intellij.ui.GotItTooltip
- f:withShowCount(I):com.intellij.ui.GotItTooltip
- f:withTimeout():com.intellij.ui.GotItTooltip
- f:withTimeout(I):com.intellij.ui.GotItTooltip
- bs:withTimeout$default(com.intellij.ui.GotItTooltip,I,I,java.lang.Object):com.intellij.ui.GotItTooltip
f:com.intellij.ui.GotItTooltip$Companion
- f:isCurrentlyShownFor(java.awt.Component):Z
a:com.intellij.ui.GroupedComboBoxRenderer
- com.intellij.ui.GroupedElementsRenderer
- javax.swing.ListCellRenderer
- <init>():V
- <init>(javax.swing.JComponent):V
- b:<init>(javax.swing.JComponent,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- p:createItemComponent():javax.swing.JComponent
- p:createSeparator():com.intellij.ui.SeparatorWithText
- customize(com.intellij.ui.SimpleColoredComponent,java.lang.Object,I,Z,Z):V
- p:getBackground():java.awt.Color
- p:getCaption(javax.swing.JList,java.lang.Object):java.lang.String
- f:getComponent():javax.swing.JComponent
- p:getDelegateAccessibleDescription():java.lang.String
- p:getDelegateAccessibleName():java.lang.String
- p:getForeground():java.awt.Color
- getIcon(java.lang.Object):javax.swing.Icon
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- getMaxWidth():I
- getSecondaryText(java.lang.Object):java.lang.String
- p:getSelectionBackground():java.awt.Color
- p:getSelectionForeground():java.awt.Color
- getText(java.lang.Object):java.lang.String
- p:isSeparatorVisible(javax.swing.JList,java.lang.Object):Z
- p:layout():V
- layoutComponent(javax.swing.JComponent):javax.swing.JComponent
- a:separatorFor(java.lang.Object):com.intellij.openapi.ui.popup.ListSeparator
c:com.intellij.ui.HideableDecorator
- <init>(javax.swing.JPanel,java.lang.String,Z):V
- <init>(javax.swing.JPanel,java.lang.String,Z,javax.swing.JComponent):V
- getTitle():java.lang.String
- isExpanded():Z
- p:off():V
- p:on():V
- setContentComponent(javax.swing.JComponent):V
- setEnabled(Z):V
- setOn(Z):V
- setTitle(java.lang.String):V
c:com.intellij.ui.HideableTitledPanel
- javax.swing.JPanel
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.JComponent,Z):V
- <init>(java.lang.String,Z):V
- <init>(java.lang.String,Z,javax.swing.JComponent,Z):V
- getTitle():java.lang.String
- isExpanded():Z
- setContentComponent(javax.swing.JComponent):V
- setEnabled(Z):V
- setOn(Z):V
- setTitle(java.lang.String):V
com.intellij.ui.Hint
- a:addHintListener(com.intellij.ui.HintListener):V
- a:hide():V
- a:isVisible():Z
- a:pack():V
- a:removeHintListener(com.intellij.ui.HintListener):V
- a:setLocation(com.intellij.ui.awt.RelativePoint):V
- a:show(javax.swing.JComponent,I,I,javax.swing.JComponent,com.intellij.ui.HintHint):V
f:com.intellij.ui.HintHint
- sf:OVERRIDE_BORDER_KEY:java.lang.String
- <init>():V
- <init>(com.intellij.openapi.editor.Editor,java.awt.Point):V
- <init>(java.awt.Component,java.awt.Point):V
- <init>(java.awt.event.MouseEvent):V
- applyStatus(com.intellij.ui.HintHint$Status):com.intellij.ui.HintHint
- getBorderColor():java.awt.Color
- getBorderInsets():java.awt.Insets
- getCalloutShift():I
- getComponentBorder():javax.swing.border.Border
- getLinkForeground():java.awt.Color
- getOriginalComponent():java.awt.Component
- getOriginalPoint():java.awt.Point
- getPositionChangeX():I
- getPositionChangeY():I
- getPreferredPosition():com.intellij.openapi.ui.popup.Balloon$Position
- getStatusIcon():javax.swing.Icon
- getTargetPoint():com.intellij.ui.awt.RelativePoint
- getTextBackground():java.awt.Color
- getTextFont():java.awt.Font
- getTextForeground():java.awt.Color
- getUlImg():java.lang.String
- initStyle(java.awt.Component,Z):V
- initStyleFrom(javax.swing.JComponent):V
- isAnimationEnabled():Z
- isAwtTooltip():Z
- isBorderColorSet():Z
- isContentActive():Z
- isExplicitClose():Z
- isHighlighterType():Z
- isMayCenterTooltip():Z
- isOpaqueAllowed():Z
- isOwnBorderAllowed():Z
- isPopupForced():Z
- isRequestFocus():Z
- isShowImmediately():Z
- setAnimationEnabled(Z):com.intellij.ui.HintHint
- setAwtTooltip(Z):com.intellij.ui.HintHint
- setBorderColor(java.awt.Color):com.intellij.ui.HintHint
- setBorderInsets(java.awt.Insets):com.intellij.ui.HintHint
- setCalloutShift(I):com.intellij.ui.HintHint
- setComponentBorder(javax.swing.border.Border):V
- setContentActive(Z):com.intellij.ui.HintHint
- setExplicitClose(Z):com.intellij.ui.HintHint
- setFont(java.awt.Font):com.intellij.ui.HintHint
- setForcePopup(Z):com.intellij.ui.HintHint
- setHighlighterType(Z):com.intellij.ui.HintHint
- setMayCenterPosition(Z):com.intellij.ui.HintHint
- setPositionChangeShift(I,I):com.intellij.ui.HintHint
- setPreferredPosition(com.intellij.openapi.ui.popup.Balloon$Position):com.intellij.ui.HintHint
- setRequestFocus(Z):com.intellij.ui.HintHint
- setShowImmediately(Z):com.intellij.ui.HintHint
- setStatus(com.intellij.ui.HintHint$Status):com.intellij.ui.HintHint
- setStatus(com.intellij.ui.HintHint$Status,java.awt.Insets):com.intellij.ui.HintHint
- setTextBg(java.awt.Color):com.intellij.ui.HintHint
- setTextFg(java.awt.Color):com.intellij.ui.HintHint
e:com.intellij.ui.HintHint$Status
- java.lang.Enum
- sf:Error:com.intellij.ui.HintHint$Status
- sf:Info:com.intellij.ui.HintHint$Status
- sf:Success:com.intellij.ui.HintHint$Status
- sf:Warning:com.intellij.ui.HintHint$Status
- f:background:java.awt.Color
- f:border:java.awt.Color
- f:foreground:java.awt.Color
- s:valueOf(java.lang.String):com.intellij.ui.HintHint$Status
- s:values():com.intellij.ui.HintHint$Status[]
com.intellij.ui.HintListener
- java.util.EventListener
- a:hintHidden(java.util.EventObject):V
f:com.intellij.ui.HorizontalScrollBarEditorCustomization
- com.intellij.ui.SimpleEditorCustomization
- sf:DISABLED:com.intellij.ui.HorizontalScrollBarEditorCustomization
- sf:ENABLED:com.intellij.ui.HorizontalScrollBarEditorCustomization
- customize(com.intellij.openapi.editor.ex.EditorEx):V
f:com.intellij.ui.HoverHyperlinkLabel
- javax.swing.JLabel
- <init>(java.lang.String):V
- <init>(java.lang.String,java.awt.Color):V
- addHyperlinkListener(javax.swing.event.HyperlinkListener):V
- getOriginalText():java.lang.String
- removeHyperlinkListener(javax.swing.event.HyperlinkListener):V
- setText(java.lang.String):V
c:com.intellij.ui.JBProgressBar
- javax.swing.JProgressBar
- <init>():V
c:com.intellij.ui.JBTabsPaneImpl
- com.intellij.ui.TabbedPane
- <init>(com.intellij.openapi.project.Project,I,com.intellij.openapi.Disposable):V
- addChangeListener(javax.swing.event.ChangeListener):V
- addMouseListener(java.awt.event.MouseListener):V
- getComponent():javax.swing.JComponent
- getComponentAt(I):java.awt.Component
- getForegroundAt(I):java.awt.Color
- getSelectedComponent():java.awt.Component
- getSelectedIndex():I
- getTabComponentAt(I):java.awt.Component
- getTabCount():I
- getTabLayoutPolicy():I
- getTabs():com.intellij.ui.tabs.JBTabs
- getTitleAt(I):java.lang.String
- insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,I):V
- putClientProperty(java.lang.Object,java.lang.Object):V
- removeAll():V
- removeChangeListener(javax.swing.event.ChangeListener):V
- removeTabAt(I):V
- revalidate():V
- scrollTabToVisible(I):V
- setComponentAt(I,java.awt.Component):V
- setEnabledAt(I,Z):V
- setForegroundAt(I,java.awt.Color):V
- setIconAt(I,javax.swing.Icon):V
- setKeyboardNavigation(com.intellij.ui.PrevNextActionsDescriptor):V
- setSelectedIndex(I):V
- setTabLayoutPolicy(I):V
- setTabPlacement(I):V
- setTitleAt(I,java.lang.String):V
- setToolTipTextAt(I,java.lang.String):V
- updateUI():V
c:com.intellij.ui.KeyStrokeAdapter
- java.awt.event.KeyListener
- <init>():V
- s:getDefaultKeyStroke(java.awt.event.KeyEvent):javax.swing.KeyStroke
- s:getKeyStroke(java.lang.String):javax.swing.KeyStroke
- keyPressed(java.awt.event.KeyEvent):V
- p:keyPressed(javax.swing.KeyStroke):Z
- keyReleased(java.awt.event.KeyEvent):V
- p:keyReleased(javax.swing.KeyStroke):Z
- keyTyped(java.awt.event.KeyEvent):V
- p:keyTyped(javax.swing.KeyStroke):Z
- s:toString(javax.swing.KeyStroke):java.lang.String
c:com.intellij.ui.LanguageTextField
- com.intellij.ui.EditorTextField
- <init>():V
- <init>(com.intellij.lang.Language,com.intellij.openapi.project.Project,java.lang.String):V
- <init>(com.intellij.lang.Language,com.intellij.openapi.project.Project,java.lang.String,com.intellij.ui.LanguageTextField$DocumentCreator):V
- <init>(com.intellij.lang.Language,com.intellij.openapi.project.Project,java.lang.String,com.intellij.ui.LanguageTextField$DocumentCreator,Z):V
- <init>(com.intellij.lang.Language,com.intellij.openapi.project.Project,java.lang.String,Z):V
- s:createDocument(java.lang.String,com.intellij.lang.Language,com.intellij.openapi.project.Project,com.intellij.ui.LanguageTextField$SimpleDocumentCreator):com.intellij.openapi.editor.Document
- p:createEditor():com.intellij.openapi.editor.ex.EditorEx
com.intellij.ui.LanguageTextField$DocumentCreator
- a:createDocument(java.lang.String,com.intellij.lang.Language,com.intellij.openapi.project.Project):com.intellij.openapi.editor.Document
c:com.intellij.ui.LanguageTextField$SimpleDocumentCreator
- com.intellij.ui.LanguageTextField$DocumentCreator
- <init>():V
- createDocument(java.lang.String,com.intellij.lang.Language,com.intellij.openapi.project.Project):com.intellij.openapi.editor.Document
- customizePsiFile(com.intellij.psi.PsiFile):V
f:com.intellij.ui.LicensingFacade
- s:INSTANCE:com.intellij.ui.LicensingFacade
- ai_enabled:Z
- confirmationStamps:java.util.Map
- expirationDate:java.util.Date
- expirationDates:java.util.Map
- isEvaluation:Z
- s:isUnusedSignalled:Z
- licensedTo:java.lang.String
- licenseeEmail:java.lang.String
- metadata:java.lang.String
- perpetualFallbackDate:java.util.Date
- platformProductCode:java.lang.String
- productLicenses:java.util.Map
- restrictions:java.util.List
- subType:java.lang.String
- <init>():V
- s:fromJson(java.lang.String):com.intellij.ui.LicensingFacade
- getConfirmationStamp(java.lang.String):java.lang.String
- getExpirationDate(java.lang.String):java.util.Date
- s:getInstance():com.intellij.ui.LicensingFacade
- getLicenseExpirationDate():java.util.Date
- getLicenseRestrictionsMessages():java.util.List
- getLicensedToMessage():java.lang.String
- getLicenseeEmail():java.lang.String
- isApplicableForProduct(java.util.Date):Z
- isEvaluationLicense():Z
- isPerpetualForProduct(java.util.Date):Z
- s:signalUnused(Z):V
- toJson():java.lang.String
com.intellij.ui.LicensingFacade$LicenseStateListener
- java.util.EventListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:licenseStateChanged(com.intellij.ui.LicensingFacade):V
f:com.intellij.ui.LicensingFacade$ProductLicenseData
- confirmationStamp:java.lang.String
- expirationDate:java.util.Date
- isPersonal:Z
- productCode:java.lang.String
- <init>():V
c:com.intellij.ui.LightweightHint
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.ui.Hint
- sf:SHOWN_AT_DEBUG:com.intellij.openapi.util.Key
- <init>(javax.swing.JComponent):V
- f:addHintListener(com.intellij.ui.HintListener):V
- p:beforeShow():V
- p:canAutoHideOn(com.intellij.ide.TooltipEvent):Z
- canControlAutoHide():Z
- f:getBounds():java.awt.Rectangle
- f:getComponent():javax.swing.JComponent
- getCurrentIdeTooltip():com.intellij.ide.IdeTooltip
- getLocationOn(javax.swing.JComponent):java.awt.Point
- getSize():java.awt.Dimension
- hide():V
- hide(Z):V
- isAwtTooltip():Z
- isForceHideShadow():Z
- isInsideHint(com.intellij.ui.awt.RelativePoint):Z
- f:isRealPopup():Z
- isSelectingHint():Z
- f:isShouldBeReopen():Z
- isVisible():Z
- p:onPopupCancel():V
- pack():V
- f:removeHintListener(com.intellij.ui.HintListener):V
- setBelongsToGlobalPopupStack(Z):V
- setCancelOnClickOutside(Z):V
- setCancelOnOtherWindowOpen(Z):V
- setFocusRequestor(javax.swing.JComponent):V
- setForceHideShadow(Z):V
- setForceLightweightPopup(Z):V
- setForceShowAsPopup(Z):V
- setLocation(com.intellij.ui.awt.RelativePoint):V
- setResizable(Z):V
- setSelectingHint(Z):V
- setSize(java.awt.Dimension):V
- setTitle(java.lang.String):V
- show(javax.swing.JComponent,I,I,javax.swing.JComponent,com.intellij.ui.HintHint):V
- updateLocation(I,I):V
- updatePosition(com.intellij.openapi.ui.popup.Balloon$Position):V
- vetoesHiding():Z
a:com.intellij.ui.ListCellRendererWithRightAlignedComponent
- javax.swing.ListCellRenderer
- <init>():V
- pa:customize(java.lang.Object):V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- p:getRightIcon():javax.swing.Icon
- pf:setIcon(javax.swing.Icon):V
- pf:setLeftForeground(java.awt.Color):V
- pf:setLeftText(java.lang.String):V
- pf:setRightForeground(java.awt.Color):V
- p:setRightIcon(javax.swing.Icon):V
- pf:setRightText(java.lang.String):V
c:com.intellij.ui.ListExpandableItemsHandler
- com.intellij.ui.AbstractExpandableItemsHandler
- p:<init>(javax.swing.JList):V
- p:getCellKeyForPoint(java.awt.Point):java.lang.Integer
- p:getCellRendererAndBounds(java.lang.Integer):com.intellij.openapi.util.Pair
c:com.intellij.ui.ListSpeedSearch
- com.intellij.ui.SpeedSearchBase
- <init>(javax.swing.JList):V
- <init>(javax.swing.JList,com.intellij.util.Function):V
- p:<init>(javax.swing.JList,java.lang.Void,com.intellij.util.Function):V
- p:getElementAt(I):java.lang.Object
- p:getElementCount():I
- p:getElementText(java.lang.Object):java.lang.String
- p:getSelectedIndex():I
- s:installOn(javax.swing.JList):com.intellij.ui.ListSpeedSearch
- s:installOn(javax.swing.JList,com.intellij.util.Function):com.intellij.ui.ListSpeedSearch
- p:selectElement(java.lang.Object,java.lang.String):V
- setupListeners():V
f:com.intellij.ui.ListenerUtil
- <init>():V
- s:addClickListener(java.awt.Component,com.intellij.ui.ClickListener):V
- s:addFocusListener(java.awt.Component,java.awt.event.FocusListener):V
- s:addKeyListener(java.awt.Component,java.awt.event.KeyListener):V
- s:addMouseListener(java.awt.Component,java.awt.event.MouseListener):V
- s:addMouseMotionListener(java.awt.Component,java.awt.event.MouseMotionListener):V
- s:removeClickListener(java.awt.Component,com.intellij.ui.ClickListener):V
- s:removeFocusListener(java.awt.Component,java.awt.event.FocusListener):V
- s:removeKeyListener(java.awt.Component,java.awt.event.KeyListener):V
- s:removeMouseListener(java.awt.Component,java.awt.event.MouseListener):V
- s:removeMouseMotionListener(java.awt.Component,java.awt.event.MouseMotionListener):V
f:com.intellij.ui.MacCustomAppIcon
- sf:Companion:com.intellij.ui.MacCustomAppIcon$Companion
- <init>():V
f:com.intellij.ui.MacCustomAppIcon$Companion
- f:available():Z
- f:isCustom():Z
- f:setCustom(Z,Z):V
f:com.intellij.ui.MonospaceEditorCustomization
- com.intellij.ui.EditorCustomization
- <init>():V
- customize(com.intellij.openapi.editor.ex.EditorEx):V
- s:getInstance():com.intellij.ui.EditorCustomization
a:com.intellij.ui.MultilineTreeCellRenderer
- javax.swing.JComponent
- javax.accessibility.Accessible
- javax.swing.tree.TreeCellRenderer
- psf:FONT_PROPERTY_NAME:java.lang.String
- <init>():V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getIcon():javax.swing.Icon
- getLines():java.lang.String[]
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- getPrefix():java.lang.String
- getText():java.lang.String
- getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):java.awt.Component
- pa:initComponent(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- s:installRenderer(javax.swing.JTree,com.intellij.ui.MultilineTreeCellRenderer):javax.swing.JScrollPane
- p:isIconVerticallyCentered():Z
- paint(java.awt.Graphics):V
- setIcon(javax.swing.Icon):V
- p:setMinHeight(I):V
- setText(java.lang.String[],java.lang.String):V
- p:setTextInsets(java.awt.Insets):V
- updateUI():V
pf:com.intellij.ui.MultilineTreeCellRenderer$AccessibleMultilineTreeCellRenderer
- javax.swing.JComponent$AccessibleJComponent
- getAccessibleName():java.lang.String
- getAccessibleRole():javax.accessibility.AccessibleRole
f:com.intellij.ui.NotificationBalloonRoundShadowBorderProvider
- com.intellij.ui.NotificationBalloonShadowBorderProvider
- sf:CORNER_RADIUS:com.intellij.util.ui.JBValue
- sf:Companion:com.intellij.ui.NotificationBalloonRoundShadowBorderProvider$Companion
- <init>(java.awt.Color,java.awt.Color):V
- getInsets():java.awt.Insets
- f:hideSide(Z,Z):V
- paintBorder(java.awt.Rectangle,java.awt.Graphics2D):V
- paintShadow(javax.swing.JComponent,java.awt.Graphics):V
f:com.intellij.ui.NotificationBalloonRoundShadowBorderProvider$Companion
c:com.intellij.ui.NotificationBalloonShadowBorderProvider
- com.intellij.ui.BalloonImpl$ShadowBorderProvider
- pf:borderColor:java.awt.Color
- pf:fillColor:java.awt.Color
- <init>(java.awt.Color,java.awt.Color):V
- p:<init>(java.awt.Color,java.awt.Color,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon):V
- getInsets():java.awt.Insets
- paintBorder(java.awt.Rectangle,java.awt.Graphics2D):V
- paintPointingShape(java.awt.Rectangle,java.awt.Point,com.intellij.openapi.ui.popup.Balloon$Position,java.awt.Graphics2D):V
- paintShadow(javax.swing.JComponent,java.awt.Graphics):V
f:com.intellij.ui.OneLineEditorCustomization
- com.intellij.ui.SimpleEditorCustomization
- sf:DISABLED:com.intellij.ui.OneLineEditorCustomization
- sf:ENABLED:com.intellij.ui.OneLineEditorCustomization
- customize(com.intellij.openapi.editor.ex.EditorEx):V
f:com.intellij.ui.PasswordFieldPanel
- com.intellij.ui.FieldPanel
- <init>():V
f:com.intellij.ui.PrevNextActionsDescriptor
- <init>(java.lang.String,java.lang.String):V
- getNextActionId():java.lang.String
- getPrevActionId():java.lang.String
f:com.intellij.ui.RecentsManager
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ui.RecentsManager
- getRecentEntries(java.lang.String):java.util.List
- getState():org.jdom.Element
- loadState(org.jdom.Element):V
- registerRecentEntry(java.lang.String,java.lang.String):V
- setRecentsNumberToKeep(I):V
c:com.intellij.ui.ReferenceEditorWithBrowseButton
- com.intellij.openapi.ui.ComponentWithBrowseButton
- com.intellij.ui.TextAccessor
- <init>(java.awt.event.ActionListener,com.intellij.openapi.project.Project,com.intellij.util.Function,java.lang.String):V
- <init>(java.awt.event.ActionListener,com.intellij.ui.EditorTextField,com.intellij.util.Function):V
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- getEditorTextField():com.intellij.ui.EditorTextField
- getText():java.lang.String
- isEditable():Z
- removeDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- setText(java.lang.String):V
f:com.intellij.ui.RemoteTransferUIManager
- sf:INSTANCE:com.intellij.ui.RemoteTransferUIManager
- sf:focusWhenShown(com.intellij.openapi.project.Project,javax.swing.JComponent):V
- sf:forbidBeControlizationInLux(com.intellij.openapi.util.UserDataHolder,java.lang.String):V
- sf:forbidBeControlizationInLux(javax.swing.JComponent,java.lang.String):V
- sf:forceDirectTransfer(javax.swing.JComponent):V
- sf:isBeControlizationForbiddenInLux(com.intellij.openapi.util.UserDataHolder):Z
- sf:isBeControlizationForbiddenInLux(javax.swing.JComponent):Z
- sf:isFocusWhenShown(com.intellij.openapi.editor.Inlay):Z
- sf:isForceDirectTransfer(com.intellij.openapi.client.ClientAppSession,javax.swing.JComponent):Z
- sf:isWellBeControlizable(com.intellij.openapi.util.UserDataHolder):Z
- sf:isWellBeControlizable(javax.swing.JComponent):Z
- sf:markFocusOnShowForInlay(javax.swing.JComponent):V
- sf:setWellBeControlizable(com.intellij.openapi.util.UserDataHolder):V
- sf:setWellBeControlizable(javax.swing.JComponent):V
f:com.intellij.ui.RightMarginEditorCustomization
- com.intellij.ui.SimpleEditorCustomization
- <init>(Z,I):V
- customize(com.intellij.openapi.editor.ex.EditorEx):V
- getRightMarginColumns():I
f:com.intellij.ui.ShowSplashAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
a:com.intellij.ui.SimpleEditorCustomization
- com.intellij.ui.EditorCustomization
- p:<init>(Z):V
- p:isEnabled():Z
f:com.intellij.ui.SoftWrapsEditorCustomization
- com.intellij.ui.SimpleEditorCustomization
- sf:DISABLED:com.intellij.ui.SoftWrapsEditorCustomization
- sf:ENABLED:com.intellij.ui.SoftWrapsEditorCustomization
- customize(com.intellij.openapi.editor.ex.EditorEx):V
a:com.intellij.ui.SpeedSearchBase
- com.intellij.ui.speedSearch.SpeedSearchSupply
- pf:myComponent:javax.swing.JComponent
- <init>(javax.swing.JComponent):V
- p:<init>(javax.swing.JComponent,java.lang.Void):V
- activate():V
- addChangeListener(java.beans.PropertyChangeListener):V
- adjustSelection(I,java.lang.String):Z
- p:allowInputMethodsInSpeedSearch():Z
- p:compare(java.lang.String,java.lang.String):Z
- p:convertIndexToModel(I):I
- p:createPopup(java.lang.String):com.intellij.ui.SpeedSearchBase$SearchPopup
- p:createSearchFieldExtension():com.intellij.ui.components.fields.ExtendableTextComponent$Extension
- findAndSelectElement(java.lang.String):V
- p:findElement(java.lang.String):java.lang.Object
- p:findNextElement(java.lang.String):java.lang.Object
- p:findPreviousElement(java.lang.String):java.lang.Object
- p:getAllElements():java.lang.Object[]
- getComparator():com.intellij.ui.SpeedSearchComparator
- getComponent():javax.swing.JComponent
- p:getComponentLocationOnScreen():java.awt.Point
- p:getComponentVisibleRect():java.awt.Rectangle
- p:getElementAt(I):java.lang.Object
- p:getElementCount():I
- p:getElementIterator(I):java.util.ListIterator
- pa:getElementText(java.lang.Object):java.lang.String
- getEnteredPrefix():java.lang.String
- getInputMethodRequests():java.awt.im.InputMethodRequests
- getSearchField():javax.swing.JTextField
- pa:getSelectedIndex():I
- getTextField():javax.swing.JComponent
- s:hasActiveSpeedSearch(javax.swing.JComponent):Z
- hidePopup():V
- isActive():Z
- p:isMatchingElement(java.lang.Object,java.lang.String):Z
- isPopupActive():Z
- p:isSpeedSearchEnabled():Z
- p:isStickySearch():Z
- isSupported():Z
- p:keepEvenWhenFocusLost():Z
- matchingFragments(java.lang.String):java.lang.Iterable
- p:onSearchFieldUpdated(java.lang.String):V
- processInputMethodEvent(java.awt.event.InputMethodEvent):V
- p:processKeyEvent(java.awt.event.KeyEvent):V
- refreshSelection():V
- removeChangeListener(java.beans.PropertyChangeListener):V
- pa:selectElement(java.lang.Object,java.lang.String):V
- selectTextRange(I,I):V
- setClearSearchOnNavigateNoMatch(Z):V
- setComparator(com.intellij.ui.SpeedSearchComparator):V
- setupListeners():V
- showPopup():V
- showPopup(java.lang.String):V
- supportsNavigation():Z
pf:com.intellij.ui.SpeedSearchBase$SearchField
- com.intellij.ui.components.fields.ExtendableTextField
- addNotify():V
- getPreferredSize():java.awt.Dimension
- processInputMethodEvent(java.awt.event.InputMethodEvent):V
- processKeyEvent(java.awt.event.KeyEvent):V
- removeNotify():V
- setForeground(java.awt.Color):V
pc:com.intellij.ui.SpeedSearchBase$SearchPopup
- javax.swing.JPanel
- pf:mySearchField:com.intellij.ui.SpeedSearchBase$SearchField
- p:<init>(com.intellij.ui.SpeedSearchBase,java.lang.String):V
- p:handleInsert(java.lang.String):V
- processInputMethodEvent(java.awt.event.InputMethodEvent):V
- processKeyEvent(java.awt.event.KeyEvent):V
c:com.intellij.ui.SpeedSearchComparator
- p:myRecentSearchText:java.lang.String
- <init>():V
- <init>(Z):V
- <init>(Z,Z):V
- <init>(Z,Z,java.lang.String):V
- getRecentSearchText():java.lang.String
- matchingDegree(java.lang.String,java.lang.String):I
- matchingFragments(java.lang.String,java.lang.String):java.lang.Iterable
f:com.intellij.ui.StateRestoringCheckBox
- javax.swing.JCheckBox
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon,Z):V
- <init>(java.lang.String,Z):V
- <init>(javax.swing.Action):V
- <init>(javax.swing.Icon):V
- <init>(javax.swing.Icon,Z):V
- isSelectedWhenSelectable():Z
- makeSelectable():V
- makeUnselectable(Z):V
f:com.intellij.ui.StatusPanel
- com.intellij.ui.components.JBPanel
- <init>():V
- getError():java.lang.String
- progress(java.lang.String):com.intellij.ui.StatusPanel$Action
- progress(java.lang.String,Z):com.intellij.ui.StatusPanel$Action
- resetState():V
f:com.intellij.ui.StatusPanel$Action
- <init>(com.intellij.ui.StatusPanel):V
- done():V
- doneWithResult(java.lang.String):V
- failed(java.lang.String):V
a:com.intellij.ui.SystemNotifications
- <init>():V
- s:getInstance():com.intellij.ui.SystemNotifications
- a:notify(java.lang.String,java.lang.String,java.lang.String):V
com.intellij.ui.TabbedPane
- a:addChangeListener(javax.swing.event.ChangeListener):V
- a:addMouseListener(java.awt.event.MouseListener):V
- a:getComponent():javax.swing.JComponent
- a:getComponentAt(I):java.awt.Component
- a:getForegroundAt(I):java.awt.Color
- a:getSelectedComponent():java.awt.Component
- a:getSelectedIndex():I
- a:getTabComponentAt(I):java.awt.Component
- a:getTabCount():I
- a:getTabLayoutPolicy():I
- a:getTitleAt(I):java.lang.String
- a:insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,I):V
- a:putClientProperty(java.lang.Object,java.lang.Object):V
- a:removeAll():V
- a:removeChangeListener(javax.swing.event.ChangeListener):V
- a:removeTabAt(I):V
- a:revalidate():V
- a:scrollTabToVisible(I):V
- a:setComponentAt(I,java.awt.Component):V
- a:setEnabledAt(I,Z):V
- a:setForegroundAt(I,java.awt.Color):V
- a:setIconAt(I,javax.swing.Icon):V
- a:setKeyboardNavigation(com.intellij.ui.PrevNextActionsDescriptor):V
- a:setSelectedIndex(I):V
- a:setTabLayoutPolicy(I):V
- a:setTabPlacement(I):V
- a:setTitleAt(I,java.lang.String):V
- a:setToolTipTextAt(I,java.lang.String):V
- a:updateUI():V
c:com.intellij.ui.TabbedPaneImpl
- com.intellij.ui.components.JBTabbedPane
- com.intellij.ui.TabbedPane
- sf:DEFAULT_PREV_NEXT_SHORTCUTS:com.intellij.ui.PrevNextActionsDescriptor
- <init>(I):V
- addNotify():V
- p:fireStateChanged():V
- getComponent():javax.swing.JComponent
- pf:getTabIndexAt(I,I):I
- removeNotify():V
- f:removeTabAt(I):V
- f:scrollTabToVisible(I):V
- setKeyboardNavigation(com.intellij.ui.PrevNextActionsDescriptor):V
- setSelectedIndex(I):V
- setUI(javax.swing.plaf.TabbedPaneUI):V
c:com.intellij.ui.TabbedPaneWrapper
- p:tabbedPane:com.intellij.ui.TabbedPane
- <init>(I,com.intellij.ui.PrevNextActionsDescriptor,com.intellij.openapi.Disposable):V
- <init>(com.intellij.openapi.Disposable):V
- p:<init>(Z):V
- f:addChangeListener(javax.swing.event.ChangeListener):V
- f:addMouseListener(java.awt.event.MouseListener):V
- f:addTab(java.lang.String,javax.swing.Icon,javax.swing.JComponent,java.lang.String):V
- f:addTab(java.lang.String,javax.swing.JComponent):V
- s:createJbTabs(com.intellij.openapi.project.Project,I,com.intellij.ui.PrevNextActionsDescriptor,com.intellij.openapi.Disposable):com.intellij.ui.TabbedPaneWrapper
- p:createTabbedPane(I):com.intellij.ui.TabbedPane
- p:createTabbedPaneHolder():com.intellij.ui.TabbedPaneWrapper$TabbedPaneHolder
- s:get(javax.swing.JTabbedPane):com.intellij.ui.TabbedPaneWrapper
- f:getComponent():javax.swing.JComponent
- f:getComponentAt(I):javax.swing.JComponent
- f:getForegroundAt(I):java.awt.Color
- f:getSelectedComponent():javax.swing.JComponent
- f:getSelectedIndex():I
- getSelectedTitle():java.lang.String
- f:getTabComponentAt(I):java.awt.Component
- f:getTabCount():I
- f:getTabLayoutPolicy():I
- getTabbedPane():com.intellij.ui.TabbedPane
- f:getTitleAt(I):java.lang.String
- f:indexOfComponent(javax.swing.JComponent):I
- insertTab(java.lang.String,javax.swing.Icon,javax.swing.JComponent,java.lang.String,I):V
- removeAll():V
- f:removeChangeListener(javax.swing.event.ChangeListener):V
- f:removeTabAt(I):V
- f:setComponentAt(I,javax.swing.JComponent):V
- f:setEnabledAt(I,Z):V
- f:setForegroundAt(I,java.awt.Color):V
- f:setIconAt(I,javax.swing.Icon):V
- f:setSelectedComponent(javax.swing.JComponent):V
- f:setSelectedIndex(I):V
- f:setSelectedIndex(I,Z):V
- setSelectedTitle(java.lang.String):V
- f:setTabLayoutPolicy(I):V
- f:setTabPlacement(I):V
- f:setTitleAt(I,java.lang.String):V
- f:setToolTipTextAt(I,java.lang.String):V
f:com.intellij.ui.TabbedPaneWrapper$AsJBTabs
- com.intellij.ui.TabbedPaneWrapper
- <init>(com.intellij.openapi.project.Project,I,com.intellij.ui.PrevNextActionsDescriptor,com.intellij.openapi.Disposable):V
- getTabs():com.intellij.ui.tabs.JBTabs
c:com.intellij.ui.TabbedPaneWrapper$AsJTabbedPane
- com.intellij.ui.TabbedPaneWrapper
- <init>(I):V
f:com.intellij.ui.TabbedPaneWrapper$TabWrapper
- javax.swing.JPanel
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- dispose():V
- getComponent():javax.swing.JComponent
- requestDefaultFocus():Z
- requestFocus():V
- requestFocusInWindow():Z
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
c:com.intellij.ui.TabbedPaneWrapper$TabbedPaneHolder
- javax.swing.JPanel
- p:<init>(com.intellij.ui.TabbedPaneWrapper):V
- getTabbedPaneWrapper():com.intellij.ui.TabbedPaneWrapper
- requestDefaultFocus():Z
- f:requestFocus():V
- f:requestFocusInWindow():Z
- updateUI():V
f:com.intellij.ui.TableColumnAnimator
- javax.swing.Timer
- java.awt.event.ActionListener
- <init>(javax.swing.JTable):V
- actionPerformed(java.awt.event.ActionEvent):V
- addColumn(javax.swing.table.TableColumn,I):V
- setStep(I):V
- startAndDoWhenDone(java.lang.Runnable):V
c:com.intellij.ui.TableExpandableItemsHandler
- com.intellij.ui.AbstractExpandableItemsHandler
- p:<init>(javax.swing.JTable):V
- getCellKeyForPoint(java.awt.Point):com.intellij.ui.TableCell
- getCellRendererAndBounds(com.intellij.ui.TableCell):com.intellij.openapi.util.Pair
- getVisibleRect(com.intellij.ui.TableCell):java.awt.Rectangle
- isEnabled():Z
- setEnabled(Z):V
c:com.intellij.ui.TableSpeedSearch
- com.intellij.ui.SpeedSearchBase
- <init>(javax.swing.JTable):V
- <init>(javax.swing.JTable,com.intellij.util.PairFunction):V
- <init>(javax.swing.JTable,com.intellij.util.containers.Convertor):V
- p:<init>(javax.swing.JTable,java.lang.Void,com.intellij.util.PairFunction):V
- p:<init>(javax.swing.JTable,java.lang.Void,com.intellij.util.containers.Convertor):V
- p:getElementCount():I
- p:getElementIterator(I):java.util.ListIterator
- p:getElementText(java.lang.Object):java.lang.String
- p:getSelectedIndex():I
- s:installOn(javax.swing.JTable):com.intellij.ui.TableSpeedSearch
- s:installOn(javax.swing.JTable,com.intellij.util.PairFunction):com.intellij.ui.TableSpeedSearch
- s:installOn(javax.swing.JTable,com.intellij.util.containers.Convertor):com.intellij.ui.TableSpeedSearch
- p:isMatchingRow(I,java.lang.String):Z
- p:isSpeedSearchEnabled():Z
- p:selectElement(java.lang.Object,java.lang.String):V
- setupListeners():V
a:com.intellij.ui.TableViewSpeedSearch
- com.intellij.ui.SpeedSearchBase
- <init>(com.intellij.ui.table.TableView):V
- p:<init>(com.intellij.ui.table.TableView,java.lang.Void):V
- p:getElementAt(I):java.lang.Object
- p:getElementCount():I
- p:getElementText(java.lang.Object):java.lang.String
- pa:getItemText(java.lang.Object):java.lang.String
- p:getSelectedIndex():I
- p:isMatchingRow(I,java.lang.String):Z
- p:selectElement(java.lang.Object,java.lang.String):V
c:com.intellij.ui.TextFieldWithAutoCompletion
- com.intellij.util.textCompletion.TextFieldWithCompletion
- sf:EMPTY_COMPLETION:com.intellij.ui.TextFieldWithAutoCompletionListProvider
- <init>(com.intellij.openapi.project.Project,com.intellij.ui.TextFieldWithAutoCompletionListProvider,Z,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,com.intellij.ui.TextFieldWithAutoCompletionListProvider,Z,Z,java.lang.String):V
- s:create(com.intellij.openapi.project.Project,java.util.Collection,javax.swing.Icon,Z,java.lang.String):com.intellij.ui.TextFieldWithAutoCompletion
- s:create(com.intellij.openapi.project.Project,java.util.Collection,Z,java.lang.String):com.intellij.ui.TextFieldWithAutoCompletion
- s:installCompletion(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.ui.TextFieldWithAutoCompletionListProvider,Z):V
- installProvider(com.intellij.ui.TextFieldWithAutoCompletionListProvider):V
- setVariants(java.util.Collection):V
c:com.intellij.ui.TextFieldWithAutoCompletion$StringsCompletionProvider
- com.intellij.ui.TextFieldWithAutoCompletionListProvider
- com.intellij.openapi.project.DumbAware
- <init>(java.util.Collection,javax.swing.Icon):V
- compare(java.lang.String,java.lang.String):I
- p:getIcon(java.lang.String):javax.swing.Icon
- p:getLookupString(java.lang.String):java.lang.String
a:com.intellij.ui.TextFieldWithAutoCompletionListProvider
- com.intellij.util.textCompletion.DefaultTextCompletionValueDescriptor
- com.intellij.openapi.project.PossiblyDumbAware
- com.intellij.util.textCompletion.TextCompletionProvider
- p:myVariants:java.util.Collection
- p:<init>(java.util.Collection):V
- acceptChar(C):com.intellij.codeInsight.lookup.CharFilter$Result
- ps:addCompletionElements(com.intellij.codeInsight.completion.CompletionResultSet,com.intellij.util.textCompletion.TextCompletionValueDescriptor,java.util.Collection,I):V
- applyPrefixMatcher(com.intellij.codeInsight.completion.CompletionResultSet,java.lang.String):com.intellij.codeInsight.completion.CompletionResultSet
- createPrefixMatcher(java.lang.String):com.intellij.codeInsight.completion.PrefixMatcher
- fillCompletionVariants(com.intellij.codeInsight.completion.CompletionParameters,java.lang.String,com.intellij.codeInsight.completion.CompletionResultSet):V
- getAdvertisement():java.lang.String
- s:getCompletionPrefix(com.intellij.codeInsight.completion.CompletionParameters):java.lang.String
- getItems(java.lang.String,Z,com.intellij.codeInsight.completion.CompletionParameters):java.util.Collection
- getPrefix(java.lang.String,I):java.lang.String
- p:getQuickDocHotKeyAdvertisementTail(java.lang.String):java.lang.String
- setAdvertisement(java.lang.String):V
- setItems(java.util.Collection):V
c:com.intellij.ui.TextFieldWithAutoCompletionWithBrowseButton
- com.intellij.openapi.ui.ComponentWithBrowseButton
- com.intellij.ui.TextAccessor
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.util.textCompletion.TextCompletionCache,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.util.textCompletion.TextCompletionCache,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.util.textCompletion.TextCompletionCache,Z,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.util.textCompletion.TextCompletionCache,Z,Z,Z,Z):V
- getText():java.lang.String
- setAutoCompletionItems(java.util.Collection):V
- setText(java.lang.String):V
f:com.intellij.ui.TextFieldWithAutoCompletionWithCache
- com.intellij.ui.TextFieldWithAutoCompletion
- s:create(com.intellij.util.textCompletion.TextCompletionCache,Z,com.intellij.openapi.project.Project,javax.swing.Icon,Z,java.lang.String):com.intellij.ui.TextFieldWithAutoCompletionWithCache
- s:create(com.intellij.util.textCompletion.TextCompletionCache,Z,com.intellij.openapi.project.Project,javax.swing.Icon,Z,java.lang.String,Z):com.intellij.ui.TextFieldWithAutoCompletionWithCache
- s:create(com.intellij.util.textCompletion.TextCompletionCache,Z,com.intellij.openapi.project.Project,javax.swing.Icon,Z,java.lang.String,Z,Z,Z):com.intellij.ui.TextFieldWithAutoCompletionWithCache
f:com.intellij.ui.TextIcon
- javax.swing.Icon
- <init>(java.lang.String,java.awt.Color,java.awt.Color,I):V
- <init>(java.lang.String,java.awt.Color,java.awt.Color,I,Z):V
- <init>(java.lang.String,java.awt.Color,java.awt.Color,I,Z,I):V
- <init>(java.lang.String,java.awt.Color,java.awt.Color,java.awt.Color,I,Z):V
- equals(java.lang.Object):Z
- getBackground():java.awt.Color
- getBorderColor():java.awt.Color
- getFont():java.awt.Font
- getFontTransform():java.awt.geom.AffineTransform
- getForeground():java.awt.Color
- getIconHeight():I
- getIconWidth():I
- getInsets():java.awt.Insets
- getRound():java.lang.Integer
- getText():java.lang.String
- getWithBorders():java.lang.Boolean
- hashCode():I
- paintIcon(java.awt.Component,java.awt.Graphics,I,I):V
- setBackground(java.awt.Color):V
- setBorderColor(java.awt.Color):V
- setFont(java.awt.Font):V
- setFontTransform(java.awt.geom.AffineTransform):V
- setForeground(java.awt.Color):V
- setInsets(I,I,I,I):V
- setInsets(java.awt.Insets):V
- setRound(I):V
- setText(java.lang.String):V
- setWithBorders(Z):V
c:com.intellij.ui.TooltipWithClickableLinks
- com.intellij.ide.IdeTooltip
- <init>(javax.swing.JComponent,java.lang.String,javax.swing.event.HyperlinkListener):V
- p:canAutohideOn(com.intellij.ide.TooltipEvent):Z
f:com.intellij.ui.TooltipWithClickableLinks$ForBrowser
- com.intellij.ui.TooltipWithClickableLinks
- <init>(javax.swing.JComponent,java.lang.String):V
f:com.intellij.ui.TreeExpandCollapse
- <init>():V
- s:collapse(javax.swing.JTree):V
- s:expand(javax.swing.JTree):V
- s:expandAll(javax.swing.JTree):V
c:com.intellij.ui.TreeSpeedSearch
- com.intellij.ui.SpeedSearchBase
- sf:NODE_DESCRIPTOR_TOSTRING:com.intellij.util.containers.Convertor
- sf:NODE_PRESENTATION_FUNCTION:java.util.function.Function
- p:myCanExpand:Z
- <init>(com.intellij.ui.treeStructure.Tree,com.intellij.util.containers.Convertor):V
- <init>(com.intellij.ui.treeStructure.Tree,com.intellij.util.containers.Convertor,Z):V
- <init>(javax.swing.JTree):V
- <init>(javax.swing.JTree,com.intellij.util.containers.Convertor):V
- <init>(javax.swing.JTree,com.intellij.util.containers.Convertor,Z):V
- p:<init>(javax.swing.JTree,java.lang.Void):V
- p:<init>(javax.swing.JTree,Z,java.lang.Void,java.util.function.Function):V
- <init>(javax.swing.JTree,Z,java.util.function.Function):V
- p:allPaths():com.intellij.util.containers.JBIterable
- pf:getElementCount():I
- pf:getElementIterator(I):java.util.ListIterator
- p:getElementText(java.lang.Object):java.lang.String
- p:getSelectedIndex():I
- s:installOn(javax.swing.JTree):com.intellij.ui.TreeSpeedSearch
- s:installOn(javax.swing.JTree,Z,java.util.function.Function):com.intellij.ui.TreeSpeedSearch
- p:selectElement(java.lang.Object,java.lang.String):V
- setCanExpand(Z):V
- setupListeners():V
c:com.intellij.ui.TreeTableSpeedSearch
- com.intellij.ui.SpeedSearchBase
- p:myCanExpand:Z
- <init>(com.intellij.ui.treeStructure.treetable.TreeTable):V
- <init>(com.intellij.ui.treeStructure.treetable.TreeTable,com.intellij.util.containers.Convertor):V
- p:<init>(com.intellij.ui.treeStructure.treetable.TreeTable,java.lang.Void):V
- p:<init>(com.intellij.ui.treeStructure.treetable.TreeTable,java.lang.Void,com.intellij.util.containers.Convertor):V
- p:allPaths():com.intellij.util.containers.JBIterable
- pf:getElementCount():I
- pf:getElementIterator(I):java.util.ListIterator
- p:getElementText(java.lang.Object):java.lang.String
- p:getSelectedIndex():I
- s:installOn(com.intellij.ui.treeStructure.treetable.TreeTable):com.intellij.ui.TreeTableSpeedSearch
- s:installOn(com.intellij.ui.treeStructure.treetable.TreeTable,com.intellij.util.containers.Convertor):com.intellij.ui.TreeTableSpeedSearch
- p:isSpeedSearchEnabled():Z
- p:selectElement(java.lang.Object,java.lang.String):V
- setCanExpand(Z):V
c:com.intellij.ui.WindowMoveListener
- java.awt.event.MouseAdapter
- javax.swing.event.MouseInputListener
- <init>():V
- <init>(java.awt.Component):V
- installTo(java.awt.Component):com.intellij.ui.WindowMoveListener
- mouseClicked(java.awt.event.MouseEvent):V
- mouseMoved(java.awt.event.MouseEvent):V
- uninstallFrom(java.awt.Component):V
c:com.intellij.ui.WindowResizeListener
- java.awt.event.MouseAdapter
- javax.swing.event.MouseInputListener
- <init>(java.awt.Component,java.awt.Insets,javax.swing.Icon):V
- <init>(java.awt.Component,javax.swing.Icon):V
- p:getResizeBorder(java.awt.Component):java.awt.Insets
- p:getResizeOffset(java.awt.Component):java.awt.Insets
- p:isDisabled(java.awt.Component):Z
f:com.intellij.ui.WindowRoundedCornersManager
- <init>():V
- s:configure(com.intellij.openapi.ui.DialogWrapper):V
- s:isAvailable():Z
- s:setRoundedCorners(java.awt.Window):V
- s:setRoundedCorners(java.awt.Window,java.lang.Object):V
f:com.intellij.ui.WrapWhenTypingReachesRightMarginCustomization
- com.intellij.ui.SimpleEditorCustomization
- sf:DISABLED:com.intellij.ui.WrapWhenTypingReachesRightMarginCustomization
- sf:ENABLED:com.intellij.ui.WrapWhenTypingReachesRightMarginCustomization
- customize(com.intellij.openapi.editor.ex.EditorEx):V
- s:getInstance(Z):com.intellij.ui.EditorCustomization
f:com.intellij.ui.codeFloatingToolbar.CodeFloatingToolbar
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.ui.codeFloatingToolbar.CodeFloatingToolbar$Companion
- <init>(com.intellij.openapi.editor.Editor,kotlinx.coroutines.CoroutineScope):V
- f:attachPopupToButton(com.intellij.openapi.actionSystem.impl.ActionButton,com.intellij.openapi.ui.popup.JBPopup):V
- f:getHintComponent():javax.swing.JComponent
- sf:getToolbar(com.intellij.openapi.editor.Editor):com.intellij.ui.codeFloatingToolbar.CodeFloatingToolbar
- hideByOtherHints():Z
- f:hideOnPopupConflict(com.intellij.openapi.ui.popup.JBPopup):V
- isEnabled():Z
- sf:isTemporarilyDisabled():Z
- onHintShown():V
- sf:temporarilyDisable(Z):V
f:com.intellij.ui.codeFloatingToolbar.CodeFloatingToolbar$Companion
- f:getToolbar(com.intellij.openapi.editor.Editor):com.intellij.ui.codeFloatingToolbar.CodeFloatingToolbar
- f:isTemporarilyDisabled():Z
- f:temporarilyDisable(Z):V
- bs:temporarilyDisable$default(com.intellij.ui.codeFloatingToolbar.CodeFloatingToolbar$Companion,Z,I,java.lang.Object):V
f:com.intellij.ui.codeFloatingToolbar.DropdownActionGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>():V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ui.colorpicker.ColorButton
- javax.swing.JButton
- <init>():V
- <init>(java.awt.Color):V
- b:<init>(java.awt.Color,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getColor():java.awt.Color
- f:getStatus():com.intellij.ui.colorpicker.ColorButton$Status
- f:setColor(java.awt.Color):V
- f:setStatus(com.intellij.ui.colorpicker.ColorButton$Status):V
e:com.intellij.ui.colorpicker.ColorButton$Status
- java.lang.Enum
- sf:HOVER:com.intellij.ui.colorpicker.ColorButton$Status
- sf:NORMAL:com.intellij.ui.colorpicker.ColorButton$Status
- sf:PRESSED:com.intellij.ui.colorpicker.ColorButton$Status
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.colorpicker.ColorButton$Status
- s:values():com.intellij.ui.colorpicker.ColorButton$Status[]
f:com.intellij.ui.colorpicker.ColorPickerBuilder
- <init>():V
- <init>(Z,Z):V
- b:<init>(Z,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:addColorAdjustPanel():com.intellij.ui.colorpicker.ColorPickerBuilder
- f:addColorAdjustPanel(com.intellij.ui.colorpicker.ColorPipetteProvider):com.intellij.ui.colorpicker.ColorPickerBuilder
- bs:addColorAdjustPanel$default(com.intellij.ui.colorpicker.ColorPickerBuilder,com.intellij.ui.colorpicker.ColorPipetteProvider,I,java.lang.Object):com.intellij.ui.colorpicker.ColorPickerBuilder
- f:addColorListener(com.intellij.ui.picker.ColorListener):com.intellij.ui.colorpicker.ColorPickerBuilder
- f:addColorListener(com.intellij.ui.picker.ColorListener,Z):com.intellij.ui.colorpicker.ColorPickerBuilder
- f:addColorValuePanel():com.intellij.ui.colorpicker.ColorPickerBuilder
- f:addCustomComponent(com.intellij.ui.colorpicker.ColorPickerComponentProvider):com.intellij.ui.colorpicker.ColorPickerBuilder
- f:addKeyAction(javax.swing.KeyStroke,javax.swing.Action):com.intellij.ui.colorpicker.ColorPickerBuilder
- f:addOperationPanel(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):com.intellij.ui.colorpicker.ColorPickerBuilder
- f:addSaturationBrightnessComponent():com.intellij.ui.colorpicker.ColorPickerBuilder
- f:addSeparator():com.intellij.ui.colorpicker.ColorPickerBuilder
- f:build():com.intellij.ui.colorpicker.LightCalloutPopup
- f:focusWhenDisplay(Z):com.intellij.ui.colorpicker.ColorPickerBuilder
- f:getModel():com.intellij.ui.colorpicker.ColorPickerModel
- f:setFocusCycleRoot(Z):com.intellij.ui.colorpicker.ColorPickerBuilder
- f:setOriginalColor(java.awt.Color):com.intellij.ui.colorpicker.ColorPickerBuilder
- f:setPopupCloseListener(com.intellij.ui.picker.ColorPickerPopupCloseListener):V
- f:withFocus():com.intellij.ui.colorpicker.ColorPickerBuilder
f:com.intellij.ui.colorpicker.ColorPickerBuilderKt
- sf:HORIZONTAL_MARGIN_TO_PICKER_BORDER:I
- sf:PICKER_PREFERRED_WIDTH:I
- sf:getPICKER_BACKGROUND_COLOR():com.intellij.ui.JBColor
- sf:getPICKER_TEXT_COLOR():java.awt.Color
com.intellij.ui.colorpicker.ColorPickerComponentProvider
- a:createComponent(com.intellij.ui.colorpicker.ColorPickerModel):javax.swing.JComponent
f:com.intellij.ui.colorpicker.ColorPickerModel
- <init>():V
- <init>(java.awt.Color):V
- b:<init>(java.awt.Color,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:addListener(com.intellij.ui.picker.ColorListener):V
- f:addListener(com.intellij.ui.picker.ColorListener,Z):V
- f:addPipetteListener(com.intellij.ui.colorpicker.ColorPipette$Callback):Z
- f:applyColorToSource(java.awt.Color,java.lang.Object):V
- bs:applyColorToSource$default(com.intellij.ui.colorpicker.ColorPickerModel,java.awt.Color,java.lang.Object,I,java.lang.Object):V
- f:firePipetteCancelled():V
- f:firePipettePicked(java.awt.Color):V
- f:firePipetteUpdated(java.awt.Color):V
- f:getAlpha():I
- f:getBlue():I
- f:getBrightness():F
- f:getColor():java.awt.Color
- f:getGreen():I
- f:getHex():java.lang.String
- f:getHue():F
- f:getRed():I
- f:getSaturation():F
- f:onCancel():V
- f:onClose():V
- f:removeListener(com.intellij.ui.picker.ColorListener):V
- f:removePipetteListener(com.intellij.ui.colorpicker.ColorPipette$Callback):Z
- f:setColor(java.awt.Color,java.lang.Object):V
- bs:setColor$default(com.intellij.ui.colorpicker.ColorPickerModel,java.awt.Color,java.lang.Object,I,java.lang.Object):V
com.intellij.ui.colorpicker.ColorPipette
- a:getIcon():javax.swing.Icon
- a:getPressedIcon():javax.swing.Icon
- a:getRolloverIcon():javax.swing.Icon
- a:pick(com.intellij.ui.colorpicker.ColorPipette$Callback):V
com.intellij.ui.colorpicker.ColorPipette$Callback
- cancel():V
- a:picked(java.awt.Color):V
- update(java.awt.Color):V
com.intellij.ui.colorpicker.ColorPipetteProvider
- a:createPipette(javax.swing.JComponent):com.intellij.ui.colorpicker.ColorPipette
f:com.intellij.ui.colorpicker.ColorValueField
- javax.swing.JTextField
- <init>():V
- <init>(Z,Z):V
- b:<init>(Z,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getColorValue():I
- isFocusable():Z
c:com.intellij.ui.colorpicker.CommonButton
- javax.swing.JButton
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(javax.swing.Icon):V
- isFocusable():Z
- updateUI():V
f:com.intellij.ui.colorpicker.LightCalloutPopup
- <init>(javax.swing.JComponent,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0):V
- b:<init>(javax.swing.JComponent,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:cancel():V
- f:close():V
- f:getBalloon():com.intellij.openapi.ui.popup.Balloon
- f:getBeforeShownCallback():kotlin.jvm.functions.Function0
- f:getCancelCallBack():kotlin.jvm.functions.Function0
- f:getClosedCallback():kotlin.jvm.functions.Function0
- f:getContent():javax.swing.JComponent
- f:getPointerColor(com.intellij.ui.awt.RelativePoint,javax.swing.JComponent):java.awt.Color
- f:show(java.awt.Point):V
- f:show(javax.swing.JComponent,java.awt.Point):V
- f:show(javax.swing.JComponent,java.awt.Point,com.intellij.openapi.ui.popup.Balloon$Position):V
- bs:show$default(com.intellij.ui.colorpicker.LightCalloutPopup,javax.swing.JComponent,java.awt.Point,com.intellij.openapi.ui.popup.Balloon$Position,I,java.lang.Object):V
f:com.intellij.ui.colorpicker.LightCalloutPopupKt
- sf:canShowBelow(javax.swing.JComponent,java.awt.Point,javax.swing.JComponent):Z
f:com.intellij.ui.colorpicker.MaterialGraphicalColorPipetteProvider
- com.intellij.ui.colorpicker.ColorPipetteProvider
- <init>():V
- createPipette(javax.swing.JComponent):com.intellij.ui.colorpicker.ColorPipette
c:com.intellij.ui.components.BasicOptionButtonUI
- com.intellij.ui.components.OptionButtonUI
- sf:Companion:com.intellij.ui.components.BasicOptionButtonUI$Companion
- <init>():V
- closePopup():V
- p:configureArrowButton():V
- p:configureMainButton():V
- p:configureOptionButton():V
- p:createActionDataContext():com.intellij.openapi.actionSystem.DataContext
- p:createActionMapping():kotlin.Pair
- p:createAnAction(javax.swing.Action):com.intellij.openapi.actionSystem.AnAction
- p:createArrowButton():javax.swing.JButton
- p:createArrowButtonActionListener():java.awt.event.ActionListener
- p:createArrowButtonMouseListener():java.awt.event.MouseListener
- p:createChangeListener():javax.swing.event.ChangeListener
- p:createFocusListener():java.awt.event.FocusListener
- p:createLayoutManager():java.awt.LayoutManager
- p:createMainButton():javax.swing.JButton
- p:createPopup(javax.swing.Action,Z):com.intellij.openapi.ui.popup.ListPopup
- p:createPropertyChangeListener():java.beans.PropertyChangeListener
- sf:createUI(javax.swing.JComponent):com.intellij.ui.components.BasicOptionButtonUI
- pf:getArrowButton():javax.swing.JButton
- p:getArrowButtonPreferredSize():java.awt.Dimension
- pf:getChangeListener():javax.swing.event.ChangeListener
- pf:getFocusListener():java.awt.event.FocusListener
- pf:getMainButton():javax.swing.JButton
- pf:getOptionButton():com.intellij.ui.components.JBOptionButton
- pf:getPopup():com.intellij.openapi.ui.popup.ListPopup
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- pf:getPropertyChangeListener():java.beans.PropertyChangeListener
- p:getShowPopupAboveLocation():com.intellij.ui.awt.RelativePoint
- p:getShowPopupBelowLocation():com.intellij.ui.awt.RelativePoint
- p:getShowPopupXOffset():I
- p:installButtons():V
- p:installKeyboardActions():V
- p:installListeners():V
- p:installPopup():V
- installUI(javax.swing.JComponent):V
- pf:isPopupShowing():Z
- pf:isSimpleButton():Z
- pf:setChangeListener(javax.swing.event.ChangeListener):V
- pf:setFocusListener(java.awt.event.FocusListener):V
- pf:setPopup(com.intellij.openapi.ui.popup.ListPopup):V
- pf:setPopupShowing(Z):V
- pf:setPropertyChangeListener(java.beans.PropertyChangeListener):V
- showPopup(javax.swing.Action,Z):V
- togglePopup():V
- p:unconfigureArrowButton():V
- p:unconfigureMainButton():V
- p:unconfigureOptionButton():V
- p:uninstallButtons():V
- p:uninstallKeyboardActions():V
- p:uninstallListeners():V
- p:uninstallPopup():V
- uninstallUI(javax.swing.JComponent):V
- p:updateOptions():V
c:com.intellij.ui.components.BasicOptionButtonUI$ActionDelegate
- com.intellij.openapi.project.DumbAwareAction
- <init>(com.intellij.ui.components.BasicOptionButtonUI,javax.swing.Action):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- f:getAction():javax.swing.Action
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ui.components.BasicOptionButtonUI$ArrowButton
- com.intellij.ui.components.BasicOptionButtonUI$BaseButton
- <init>(com.intellij.ui.components.BasicOptionButtonUI):V
c:com.intellij.ui.components.BasicOptionButtonUI$BaseButton
- javax.swing.JButton
- <init>(com.intellij.ui.components.BasicOptionButtonUI):V
- getBackground():java.awt.Color
- hasFocus():Z
- isDefaultButton():Z
- paint(java.awt.Graphics):V
- p:paintBorder(java.awt.Graphics):V
- paintBorderNotSimple(java.awt.Graphics2D):V
- paintNotSimple(java.awt.Graphics2D):V
f:com.intellij.ui.components.BasicOptionButtonUI$Companion
- f:cloneAndPaint(java.awt.Graphics,kotlin.jvm.functions.Function1):V
- f:createUI(javax.swing.JComponent):com.intellij.ui.components.BasicOptionButtonUI
c:com.intellij.ui.components.BasicOptionButtonUI$MainButton
- com.intellij.ui.components.BasicOptionButtonUI$BaseButton
- <init>(com.intellij.ui.components.BasicOptionButtonUI):V
c:com.intellij.ui.components.BasicOptionButtonUI$OptionButtonLayout
- com.intellij.util.ui.AbstractLayoutManager
- <init>(com.intellij.ui.components.BasicOptionButtonUI):V
- layoutContainer(java.awt.Container):V
- minimumLayoutSize(java.awt.Container):java.awt.Dimension
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
f:com.intellij.ui.components.BasicOptionButtonUI$OptionButtonPopup
- com.intellij.ui.popup.PopupFactoryImpl$ActionGroupPopup
- <init>(com.intellij.ui.components.BasicOptionButtonUI,com.intellij.ui.popup.ActionPopupStep,com.intellij.openapi.actionSystem.DataContext,Z):V
c:com.intellij.ui.components.BasicOptionButtonUI$OptionButtonPopupStep
- com.intellij.ui.popup.ActionPopupStep
- <init>(com.intellij.ui.components.BasicOptionButtonUI,java.util.List,java.lang.String,com.intellij.openapi.util.Condition,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.impl.PresentationFactory):V
- getDefaultOptionIndex():I
- isSpeedSearchEnabled():Z
f:com.intellij.ui.components.ComponentsKt
- sf:CheckBox(java.lang.String,Z,java.lang.String):javax.swing.JCheckBox
- bs:CheckBox$default(java.lang.String,Z,java.lang.String,I,java.lang.Object):javax.swing.JCheckBox
- sf:DialogPanel(java.lang.String,java.awt.LayoutManager2):com.intellij.openapi.ui.DialogPanel
- bs:DialogPanel$default(java.lang.String,java.awt.LayoutManager2,I,java.lang.Object):com.intellij.openapi.ui.DialogPanel
- sf:Label(java.lang.String,com.intellij.util.ui.UIUtil$ComponentStyle,com.intellij.util.ui.UIUtil$FontColor,Z):javax.swing.JLabel
- sf:Label(java.lang.String,com.intellij.util.ui.UIUtil$ComponentStyle,com.intellij.util.ui.UIUtil$FontColor,Z,java.awt.Font):javax.swing.JLabel
- bs:Label$default(java.lang.String,com.intellij.util.ui.UIUtil$ComponentStyle,com.intellij.util.ui.UIUtil$FontColor,Z,I,java.lang.Object):javax.swing.JLabel
- bs:Label$default(java.lang.String,com.intellij.util.ui.UIUtil$ComponentStyle,com.intellij.util.ui.UIUtil$FontColor,Z,java.awt.Font,I,java.lang.Object):javax.swing.JLabel
- sf:Link(java.lang.String,com.intellij.util.ui.UIUtil$ComponentStyle,kotlin.jvm.functions.Function0):javax.swing.JComponent
- bs:Link$default(java.lang.String,com.intellij.util.ui.UIUtil$ComponentStyle,kotlin.jvm.functions.Function0,I,java.lang.Object):javax.swing.JComponent
- sf:Panel():javax.swing.JPanel
- sf:Panel(java.lang.String):javax.swing.JPanel
- sf:Panel(java.lang.String,java.awt.LayoutManager2):javax.swing.JPanel
- sf:Panel(java.lang.String,Z,java.awt.LayoutManager2):javax.swing.JPanel
- bs:Panel$default(java.lang.String,java.awt.LayoutManager2,I,java.lang.Object):javax.swing.JPanel
- bs:Panel$default(java.lang.String,Z,java.awt.LayoutManager2,I,java.lang.Object):javax.swing.JPanel
- sf:RadioButton(java.lang.String):javax.swing.JRadioButton
- sf:dialog(java.lang.String,javax.swing.JComponent):com.intellij.openapi.ui.DialogWrapper
- sf:dialog(java.lang.String,javax.swing.JComponent,Z):com.intellij.openapi.ui.DialogWrapper
- sf:dialog(java.lang.String,javax.swing.JComponent,Z,javax.swing.JComponent):com.intellij.openapi.ui.DialogWrapper
- sf:dialog(java.lang.String,javax.swing.JComponent,Z,javax.swing.JComponent,Z):com.intellij.openapi.ui.DialogWrapper
- sf:dialog(java.lang.String,javax.swing.JComponent,Z,javax.swing.JComponent,Z,com.intellij.openapi.project.Project):com.intellij.openapi.ui.DialogWrapper
- sf:dialog(java.lang.String,javax.swing.JComponent,Z,javax.swing.JComponent,Z,com.intellij.openapi.project.Project,java.awt.Component):com.intellij.openapi.ui.DialogWrapper
- sf:dialog(java.lang.String,javax.swing.JComponent,Z,javax.swing.JComponent,Z,com.intellij.openapi.project.Project,java.awt.Component,java.lang.String):com.intellij.openapi.ui.DialogWrapper
- sf:dialog(java.lang.String,javax.swing.JComponent,Z,javax.swing.JComponent,Z,com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):com.intellij.openapi.ui.DialogWrapper
- sf:dialog(java.lang.String,javax.swing.JComponent,Z,javax.swing.JComponent,Z,com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,com.intellij.openapi.ui.DialogWrapper$IdeModalityType,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.DialogWrapper
- sf:dialog(java.lang.String,javax.swing.JComponent,Z,javax.swing.JComponent,Z,com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,com.intellij.openapi.ui.DialogWrapper$IdeModalityType,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0):com.intellij.openapi.ui.DialogWrapper
- bs:dialog$default(java.lang.String,javax.swing.JComponent,Z,javax.swing.JComponent,Z,com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,com.intellij.openapi.ui.DialogWrapper$IdeModalityType,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,I,java.lang.Object):com.intellij.openapi.ui.DialogWrapper
- sf:getChars(javax.swing.JPasswordField):java.lang.CharSequence
- sf:htmlComponent():javax.swing.JEditorPane
- sf:htmlComponent(java.lang.String):javax.swing.JEditorPane
- sf:htmlComponent(java.lang.String,java.awt.Font):javax.swing.JEditorPane
- sf:htmlComponent(java.lang.String,java.awt.Font,java.awt.Color):javax.swing.JEditorPane
- sf:htmlComponent(java.lang.String,java.awt.Font,java.awt.Color,java.awt.Color):javax.swing.JEditorPane
- sf:htmlComponent(java.lang.String,java.awt.Font,java.awt.Color,java.awt.Color,Z):javax.swing.JEditorPane
- sf:htmlComponent(java.lang.String,java.awt.Font,java.awt.Color,java.awt.Color,Z,javax.swing.event.HyperlinkListener):javax.swing.JEditorPane
- bs:htmlComponent$default(java.lang.String,java.awt.Font,java.awt.Color,java.awt.Color,Z,javax.swing.event.HyperlinkListener,I,java.lang.Object):javax.swing.JEditorPane
- sf:installFileCompletionAndBrowseDialog(com.intellij.openapi.project.Project,com.intellij.openapi.ui.ComponentWithBrowseButton,javax.swing.JTextField,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor):V
- sf:installFileCompletionAndBrowseDialog(com.intellij.openapi.project.Project,com.intellij.openapi.ui.ComponentWithBrowseButton,javax.swing.JTextField,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor,kotlin.jvm.functions.Function1):V
- bs:installFileCompletionAndBrowseDialog$default(com.intellij.openapi.project.Project,com.intellij.openapi.ui.ComponentWithBrowseButton,javax.swing.JTextField,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:noteComponent(java.lang.String):javax.swing.JComponent
- sf:noteComponent(java.lang.String,kotlin.jvm.functions.Function1):javax.swing.JComponent
- bs:noteComponent$default(java.lang.String,kotlin.jvm.functions.Function1,I,java.lang.Object):javax.swing.JComponent
- sf:textFieldWithBrowseButton(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor):com.intellij.openapi.ui.TextFieldWithBrowseButton
- sf:textFieldWithBrowseButton(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.TextFieldWithBrowseButton
- sf:textFieldWithBrowseButton(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor):com.intellij.openapi.ui.TextFieldWithBrowseButton
- sf:textFieldWithBrowseButton(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.TextFieldWithBrowseButton
- sf:textFieldWithBrowseButton(com.intellij.openapi.project.Project,javax.swing.JTextField,com.intellij.openapi.fileChooser.FileChooserDescriptor):com.intellij.openapi.ui.TextFieldWithBrowseButton
- sf:textFieldWithBrowseButton(com.intellij.openapi.project.Project,javax.swing.JTextField,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.TextFieldWithBrowseButton
- bs:textFieldWithBrowseButton$default(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.openapi.ui.TextFieldWithBrowseButton
- bs:textFieldWithBrowseButton$default(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.openapi.ui.TextFieldWithBrowseButton
- bs:textFieldWithBrowseButton$default(com.intellij.openapi.project.Project,javax.swing.JTextField,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.openapi.ui.TextFieldWithBrowseButton
- sf:textFieldWithHistoryWithBrowseButton(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor):com.intellij.ui.TextFieldWithHistoryWithBrowseButton
- sf:textFieldWithHistoryWithBrowseButton(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function0):com.intellij.ui.TextFieldWithHistoryWithBrowseButton
- sf:textFieldWithHistoryWithBrowseButton(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.TextFieldWithHistoryWithBrowseButton
- sf:textFieldWithHistoryWithBrowseButton(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor):com.intellij.ui.TextFieldWithHistoryWithBrowseButton
- sf:textFieldWithHistoryWithBrowseButton(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function0):com.intellij.ui.TextFieldWithHistoryWithBrowseButton
- sf:textFieldWithHistoryWithBrowseButton(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.TextFieldWithHistoryWithBrowseButton
- bs:textFieldWithHistoryWithBrowseButton$default(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.TextFieldWithHistoryWithBrowseButton
- bs:textFieldWithHistoryWithBrowseButton$default(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.TextFieldWithHistoryWithBrowseButton
com.intellij.ui.components.DialogManager
- a:performAction(kotlin.jvm.functions.Function0):V
- bs:performAction$default(com.intellij.ui.components.DialogManager,kotlin.jvm.functions.Function0,I,java.lang.Object):V
c:com.intellij.ui.components.GradientViewport
- com.intellij.ui.components.JBViewport
- <init>(java.awt.Component,java.awt.Insets,Z):V
- p:getHeader():java.awt.Component
- p:getViewColor():java.awt.Color
- p:paintChildren(java.awt.Graphics):V
- p:paintGradient(java.awt.Graphics):V
- scrollRectToVisible(java.awt.Rectangle):V
f:com.intellij.ui.components.IconLabelButton
- com.intellij.ui.components.JBLabel
- <init>(javax.swing.Icon,kotlin.jvm.functions.Function1):V
f:com.intellij.ui.components.LegalNoticeDialog
- com.intellij.openapi.ui.DialogWrapper
- s:build(java.lang.String,java.lang.String):com.intellij.ui.components.LegalNoticeDialog$Builder
f:com.intellij.ui.components.LegalNoticeDialog$Builder
- show():I
- withCancelText(java.lang.String):com.intellij.ui.components.LegalNoticeDialog$Builder
- withCustomAction(java.lang.String,I):com.intellij.ui.components.LegalNoticeDialog$Builder
- withParent(com.intellij.openapi.project.Project):com.intellij.ui.components.LegalNoticeDialog$Builder
- withParent(java.awt.Component):com.intellij.ui.components.LegalNoticeDialog$Builder
f:com.intellij.ui.components.SearchFieldWithExtension
- javax.swing.JPanel
- <init>(javax.swing.JComponent,com.intellij.ui.SearchTextField):V
- f:getTextField():javax.swing.JTextField
- getUI():javax.swing.plaf.PanelUI
- getUIClassID():java.lang.String
- hasFocus():Z
- requestFocus():V
- setBackground(java.awt.Color):V
c:com.intellij.ui.components.SliderSelectorAction
- com.intellij.openapi.project.DumbAwareAction
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.ui.components.SliderSelectorAction$Configuration):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:show(com.intellij.openapi.actionSystem.AnActionEvent,javax.swing.JPanel,com.intellij.openapi.ui.popup.JBPopup,java.awt.event.InputEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ui.components.SliderSelectorAction$Configuration
- <init>(I,java.util.Dictionary,java.lang.String,com.intellij.util.Consumer):V
- getDictionary():java.util.Map
- getMax():I
- getMin():I
- getResultConsumer():com.intellij.util.Consumer
- getSelectText():java.lang.String
- getSelected():I
- getTooltip():java.lang.String
- isShowOk():Z
- setShowOk(Z):V
f:com.intellij.ui.components.TwoSideComponent
- com.intellij.ui.components.panels.NonOpaquePanel
- <init>(javax.swing.JComponent,javax.swing.JComponent):V
f:com.intellij.ui.content.ContentFactoryImpl
- com.intellij.ui.content.ContentFactory
- <init>():V
- createContent(javax.swing.JComponent,java.lang.String,Z):com.intellij.ui.content.impl.ContentImpl
- createContentManager(com.intellij.ui.content.ContentUI,Z,com.intellij.openapi.project.Project):com.intellij.ui.content.impl.ContentManagerImpl
- createContentManager(Z,com.intellij.openapi.project.Project):com.intellij.ui.content.ContentManager
f:com.intellij.ui.content.ContentManagerUtil
- s:cleanupContents(com.intellij.ui.content.Content,com.intellij.openapi.project.Project,java.lang.String):V
- s:getContentManagerFromContext(com.intellij.openapi.actionSystem.DataContext,Z):com.intellij.ui.content.ContentManager
com.intellij.ui.content.MessageView
- sf:Companion:com.intellij.ui.content.MessageView$Companion
- a:awaitInitialized(kotlin.coroutines.Continuation):java.lang.Object
- a:getContentManager():com.intellij.ui.content.ContentManager
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ui.content.MessageView
- a:runWhenInitialized(java.lang.Runnable):V
f:com.intellij.ui.content.MessageView$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.ui.content.MessageView
f:com.intellij.ui.content.MessageView$SERVICE
- sf:INSTANCE:com.intellij.ui.content.MessageView$SERVICE
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.ui.content.MessageView
c:com.intellij.ui.content.impl.ContentImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.ui.content.Content
- sf:PROP_CONTENT_MANAGER:java.lang.String
- <init>(javax.swing.JComponent,java.lang.String,Z):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- dispose():V
- fireAlert():V
- getActions():com.intellij.openapi.actionSystem.ActionGroup
- getActionsContextComponent():javax.swing.JComponent
- getAlertIcon():com.intellij.ui.content.AlertIcon
- getBusyObject():com.intellij.openapi.util.BusyObject
- getComponent():javax.swing.JComponent
- getDescription():java.lang.String
- getDisplayName():java.lang.String
- getDisposer():com.intellij.openapi.Disposable
- getExecutionId():J
- getHelpId():java.lang.String
- getIcon():javax.swing.Icon
- getManager():com.intellij.ui.content.ContentManager
- getPlace():java.lang.String
- getPopupIcon():javax.swing.Icon
- getPreferredFocusableComponent():javax.swing.JComponent
- getSearchComponent():javax.swing.JComponent
- getSeparator():java.lang.String
- getTabColor():java.awt.Color
- getTabName():java.lang.String
- getToolwindowTitle():java.lang.String
- isCloseable():Z
- isPinnable():Z
- isPinned():Z
- isSelected():Z
- isValid():Z
- f:release():V
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- setActions(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,javax.swing.JComponent):V
- setAlertIcon(com.intellij.ui.content.AlertIcon):V
- setBusyObject(com.intellij.openapi.util.BusyObject):V
- setCloseable(Z):V
- setComponent(javax.swing.JComponent):V
- setDescription(java.lang.String):V
- setDisplayName(java.lang.String):V
- setDisposer(com.intellij.openapi.Disposable):V
- setExecutionId(J):V
- setHelpId(java.lang.String):V
- setIcon(javax.swing.Icon):V
- setManager(com.intellij.ui.content.ContentManager):V
- setPinnable(Z):V
- setPinned(Z):V
- setPopupIcon(javax.swing.Icon):V
- setPreferredFocusableComponent(javax.swing.JComponent):V
- setPreferredFocusedComponent(com.intellij.openapi.util.Computable):V
- setSearchComponent(javax.swing.JComponent):V
- setSeparator(java.lang.String):V
- setShouldDisposeContent(Z):V
- setTabColor(java.awt.Color):V
- setTabName(java.lang.String):V
- setToolwindowTitle(java.lang.String):V
c:com.intellij.ui.content.impl.ContentManagerImpl
- com.intellij.openapi.Disposable$Parent
- com.intellij.ui.content.ContentManager
- java.beans.PropertyChangeListener
- <init>(com.intellij.ui.content.ContentUI,Z,com.intellij.openapi.project.Project):V
- <init>(com.intellij.ui.content.ContentUI,Z,com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- addContent(com.intellij.ui.content.Content):V
- addContent(com.intellij.ui.content.Content,I):V
- addContentManagerListener(com.intellij.ui.content.ContentManagerListener):V
- addDataProvider(com.intellij.openapi.actionSystem.DataProvider):V
- addNestedManager(com.intellij.ui.content.impl.ContentManagerImpl):V
- addSelectedContent(com.intellij.ui.content.Content):V
- beforeTreeDispose():V
- canCloseAllContents():Z
- canCloseContents():Z
- dispose():V
- findContent(java.lang.String):com.intellij.ui.content.Content
- getAdditionalPopupActions(com.intellij.ui.content.Content):java.util.List
- getCloseActionName():java.lang.String
- getCloseAllButThisActionName():java.lang.String
- getComponent():javax.swing.JComponent
- getContent(I):com.intellij.ui.content.Content
- getContent(javax.swing.JComponent):com.intellij.ui.content.Content
- getContentCount():I
- s:getContentManager(java.awt.Component):com.intellij.ui.content.ContentManager
- getContents():com.intellij.ui.content.Content[]
- getContentsRecursively():java.util.List
- getFactory():com.intellij.ui.content.ContentFactory
- getIndexOfContent(com.intellij.ui.content.Content):I
- getNextContentActionName():java.lang.String
- getPreviousContentActionName():java.lang.String
- getReady(java.lang.Object):com.intellij.openapi.util.ActionCallback
- getRecursiveContentCount():I
- getSelectedContent():com.intellij.ui.content.Content
- getSelectedContents():com.intellij.ui.content.Content[]
- getUI():com.intellij.ui.content.ContentUI
- isDisposed():Z
- isEmpty():Z
- isSelected(com.intellij.ui.content.Content):Z
- isSingleSelection():Z
- propertyChange(java.beans.PropertyChangeEvent):V
- removeAllContents(Z):V
- removeContent(com.intellij.ui.content.Content,Z):Z
- removeContent(com.intellij.ui.content.Content,Z,Z,Z):com.intellij.openapi.util.ActionCallback
- removeContentManagerListener(com.intellij.ui.content.ContentManagerListener):V
- removeFromSelection(com.intellij.ui.content.Content):V
- removeNestedManager(com.intellij.ui.content.impl.ContentManagerImpl):V
- requestFocus(com.intellij.ui.content.Content,Z):com.intellij.openapi.util.ActionCallback
- selectNextContent():com.intellij.openapi.util.ActionCallback
- selectPreviousContent():com.intellij.openapi.util.ActionCallback
- setSelectedContent(com.intellij.ui.content.Content):V
- setSelectedContent(com.intellij.ui.content.Content,Z):V
- setSelectedContent(com.intellij.ui.content.Content,Z,Z):V
- setSelectedContent(com.intellij.ui.content.Content,Z,Z,Z):com.intellij.openapi.util.ActionCallback
- setSelectedContentCB(com.intellij.ui.content.Content):com.intellij.openapi.util.ActionCallback
- setSelectedContentCB(com.intellij.ui.content.Content,Z):com.intellij.openapi.util.ActionCallback
- setSelectedContentCB(com.intellij.ui.content.Content,Z,Z):com.intellij.openapi.util.ActionCallback
com.intellij.ui.content.impl.ContentManagerImpl$ContentUiProducer
- a:createContent(com.intellij.ui.content.ContentManager,java.util.function.Supplier):com.intellij.ui.content.ContentUI
f:com.intellij.ui.content.impl.TabbedContentImpl
- com.intellij.ui.content.impl.ContentImpl
- com.intellij.ui.content.TabbedContent
- <init>(com.intellij.ui.content.TabGroupId,com.intellij.ui.content.TabDescriptor,Z):V
- <init>(javax.swing.JComponent,java.lang.String,Z,java.lang.String):V
- addContent(com.intellij.ui.content.TabDescriptor,Z):V
- addContent(javax.swing.JComponent,java.lang.String,Z):V
- findAndSelectContent(javax.swing.JComponent):Z
- getDisplayName():java.lang.String
- getId():com.intellij.ui.content.TabGroupId
- getSelectedIndex():I
- getTabName():java.lang.String
- getTabs():java.util.List
- getTitlePrefix():java.lang.String
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- hasMultipleTabs():Z
- removeContent(javax.swing.JComponent):V
- selectContent(I):V
- setComponent(javax.swing.JComponent):V
- split():V
c:com.intellij.ui.content.tabs.PinToolwindowTabAction
- com.intellij.ide.actions.PinActiveTabAction$TW
- com.intellij.openapi.actionSystem.Toggleable
- sf:ACTION_NAME:java.lang.String
- <init>():V
- s:getPinAction():com.intellij.openapi.actionSystem.AnAction
a:com.intellij.ui.content.tabs.TabbedContentAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- pf:myManager:com.intellij.ui.content.ContentManager
- pf:myShadow:com.intellij.openapi.ui.ShadowAction
- p:<init>(com.intellij.ui.content.ContentManager,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.Disposable):V
- p:<init>(com.intellij.ui.content.ContentManager,com.intellij.openapi.actionSystem.AnAction,java.lang.String,com.intellij.openapi.Disposable):V
c:com.intellij.ui.content.tabs.TabbedContentAction$CloseAction
- com.intellij.ui.content.tabs.TabbedContentAction$ForContent
- <init>(com.intellij.ui.content.Content):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ui.content.tabs.TabbedContentAction$CloseAllAction
- com.intellij.ui.content.tabs.TabbedContentAction
- <init>(com.intellij.ui.content.ContentManager):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ui.content.tabs.TabbedContentAction$CloseAllButThisAction
- com.intellij.ui.content.tabs.TabbedContentAction$ForContent
- <init>(com.intellij.ui.content.Content):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ui.content.tabs.TabbedContentAction$ForContent
- com.intellij.ui.content.tabs.TabbedContentAction
- pf:myContent:com.intellij.ui.content.Content
- <init>(com.intellij.ui.content.Content,com.intellij.openapi.actionSystem.AnAction):V
- <init>(com.intellij.ui.content.Content,com.intellij.openapi.actionSystem.AnAction,java.lang.String):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ui.content.tabs.TabbedContentAction$MyNextTabAction
- com.intellij.ui.content.tabs.TabbedContentAction
- <init>(com.intellij.ui.content.ContentManager):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ui.content.tabs.TabbedContentAction$MyPreviousTabAction
- com.intellij.ui.content.tabs.TabbedContentAction
- <init>(com.intellij.ui.content.ContentManager):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ui.dsl.ValidationExceptionKt
- sf:stringToInt(java.lang.String):I
- sf:validateIntInRange(I,kotlin.ranges.IntRange):V
com.intellij.ui.dsl.builder.Align
- sf:CENTER:com.intellij.ui.dsl.builder.Align
- sf:Companion:com.intellij.ui.dsl.builder.Align$Companion
- sf:FILL:com.intellij.ui.dsl.builder.Align
f:com.intellij.ui.dsl.builder.Align$Companion
f:com.intellij.ui.dsl.builder.AlignKt
- sf:plus(com.intellij.ui.dsl.builder.AlignX,com.intellij.ui.dsl.builder.AlignY):com.intellij.ui.dsl.builder.Align
- sf:plus(com.intellij.ui.dsl.builder.AlignY,com.intellij.ui.dsl.builder.AlignX):com.intellij.ui.dsl.builder.Align
com.intellij.ui.dsl.builder.AlignX
- com.intellij.ui.dsl.builder.Align
f:com.intellij.ui.dsl.builder.AlignX$CENTER
- com.intellij.ui.dsl.builder.AlignX
- sf:INSTANCE:com.intellij.ui.dsl.builder.AlignX$CENTER
f:com.intellij.ui.dsl.builder.AlignX$FILL
- com.intellij.ui.dsl.builder.AlignX
- sf:INSTANCE:com.intellij.ui.dsl.builder.AlignX$FILL
f:com.intellij.ui.dsl.builder.AlignX$LEFT
- com.intellij.ui.dsl.builder.AlignX
- sf:INSTANCE:com.intellij.ui.dsl.builder.AlignX$LEFT
f:com.intellij.ui.dsl.builder.AlignX$RIGHT
- com.intellij.ui.dsl.builder.AlignX
- sf:INSTANCE:com.intellij.ui.dsl.builder.AlignX$RIGHT
com.intellij.ui.dsl.builder.AlignY
- com.intellij.ui.dsl.builder.Align
f:com.intellij.ui.dsl.builder.AlignY$BOTTOM
- com.intellij.ui.dsl.builder.AlignY
- sf:INSTANCE:com.intellij.ui.dsl.builder.AlignY$BOTTOM
f:com.intellij.ui.dsl.builder.AlignY$CENTER
- com.intellij.ui.dsl.builder.AlignY
- sf:INSTANCE:com.intellij.ui.dsl.builder.AlignY$CENTER
f:com.intellij.ui.dsl.builder.AlignY$FILL
- com.intellij.ui.dsl.builder.AlignY
- sf:INSTANCE:com.intellij.ui.dsl.builder.AlignY$FILL
f:com.intellij.ui.dsl.builder.AlignY$TOP
- com.intellij.ui.dsl.builder.AlignY
- sf:INSTANCE:com.intellij.ui.dsl.builder.AlignY$TOP
e:com.intellij.ui.dsl.builder.BottomGap
- java.lang.Enum
- sf:MEDIUM:com.intellij.ui.dsl.builder.BottomGap
- sf:NONE:com.intellij.ui.dsl.builder.BottomGap
- sf:SMALL:com.intellij.ui.dsl.builder.BottomGap
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.dsl.builder.BottomGap
- s:values():com.intellij.ui.dsl.builder.BottomGap[]
f:com.intellij.ui.dsl.builder.BuilderKt
- sf:panel(kotlin.jvm.functions.Function1):com.intellij.openapi.ui.DialogPanel
f:com.intellij.ui.dsl.builder.ButtonKt
- sf:actionListener(com.intellij.ui.dsl.builder.Cell,kotlin.jvm.functions.Function2):com.intellij.ui.dsl.builder.Cell
- sf:bindSelected(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindSelected(com.intellij.ui.dsl.builder.Cell,com.intellij.ui.dsl.builder.MutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindSelected(com.intellij.ui.dsl.builder.Cell,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- sf:bindSelected(com.intellij.ui.dsl.builder.Cell,kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.Cell
- sf:bindState(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:getSelected(com.intellij.ui.dsl.builder.Cell):com.intellij.ui.layout.ComponentPredicate
- sf:selected(com.intellij.ui.dsl.builder.Cell,Z):com.intellij.ui.dsl.builder.Cell
com.intellij.ui.dsl.builder.Cell
- com.intellij.ui.dsl.builder.CellBase
- a:accessibleDescription(java.lang.String):com.intellij.ui.dsl.builder.Cell
- a:accessibleName(java.lang.String):com.intellij.ui.dsl.builder.Cell
- a:addValidationRule(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- a:align(com.intellij.ui.dsl.builder.Align):com.intellij.ui.dsl.builder.Cell
- a:applyIfEnabled():com.intellij.ui.dsl.builder.Cell
- a:applyToComponent(kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- a:bind(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,com.intellij.ui.dsl.builder.MutableProperty):com.intellij.ui.dsl.builder.Cell
- a:bold():com.intellij.ui.dsl.builder.Cell
- a:comment(java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction):com.intellij.ui.dsl.builder.Cell
- bs:comment$default(com.intellij.ui.dsl.builder.Cell,java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- ba:customize(com.intellij.ui.dsl.gridLayout.Gaps):com.intellij.ui.dsl.builder.Cell
- a:customize(com.intellij.ui.dsl.gridLayout.UnscaledGaps):com.intellij.ui.dsl.builder.Cell
- a:enabled(Z):com.intellij.ui.dsl.builder.Cell
- a:enabledIf(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.ui.dsl.builder.Cell
- a:enabledIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.Cell
- a:errorOnApply(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- a:focused():com.intellij.ui.dsl.builder.Cell
- a:gap(com.intellij.ui.dsl.builder.RightGap):com.intellij.ui.dsl.builder.Cell
- a:getComment():javax.swing.JEditorPane
- a:getComponent():javax.swing.JComponent
- a:horizontalAlign(com.intellij.ui.dsl.gridLayout.HorizontalAlign):com.intellij.ui.dsl.builder.Cell
- a:label(java.lang.String,com.intellij.ui.dsl.builder.LabelPosition):com.intellij.ui.dsl.builder.Cell
- a:label(javax.swing.JLabel,com.intellij.ui.dsl.builder.LabelPosition):com.intellij.ui.dsl.builder.Cell
- bs:label$default(com.intellij.ui.dsl.builder.Cell,java.lang.String,com.intellij.ui.dsl.builder.LabelPosition,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:label$default(com.intellij.ui.dsl.builder.Cell,javax.swing.JLabel,com.intellij.ui.dsl.builder.LabelPosition,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:onApply(kotlin.jvm.functions.Function0):com.intellij.ui.dsl.builder.Cell
- a:onChanged(kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- a:onChangedContext(kotlin.jvm.functions.Function2):com.intellij.ui.dsl.builder.Cell
- a:onIsModified(kotlin.jvm.functions.Function0):com.intellij.ui.dsl.builder.Cell
- a:onReset(kotlin.jvm.functions.Function0):com.intellij.ui.dsl.builder.Cell
- a:resizableColumn():com.intellij.ui.dsl.builder.Cell
- a:validation(com.intellij.openapi.ui.validation.DialogValidation[]):com.intellij.ui.dsl.builder.Cell
- a:validationOnApply(kotlin.jvm.functions.Function2):com.intellij.ui.dsl.builder.Cell
- a:validationOnApply(com.intellij.openapi.ui.validation.DialogValidation$WithParameter[]):com.intellij.ui.dsl.builder.Cell
- a:validationOnApply(com.intellij.openapi.ui.validation.DialogValidation[]):com.intellij.ui.dsl.builder.Cell
- a:validationOnInput(kotlin.jvm.functions.Function2):com.intellij.ui.dsl.builder.Cell
- a:validationOnInput(com.intellij.openapi.ui.validation.DialogValidation$WithParameter[]):com.intellij.ui.dsl.builder.Cell
- a:validationOnInput(com.intellij.openapi.ui.validation.DialogValidation[]):com.intellij.ui.dsl.builder.Cell
- a:validationRequestor(com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter):com.intellij.ui.dsl.builder.Cell
- a:validationRequestor(com.intellij.openapi.ui.validation.DialogValidationRequestor):com.intellij.ui.dsl.builder.Cell
- a:validationRequestor(kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- a:verticalAlign(com.intellij.ui.dsl.gridLayout.VerticalAlign):com.intellij.ui.dsl.builder.Cell
- a:visible(Z):com.intellij.ui.dsl.builder.Cell
- a:visibleIf(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.ui.dsl.builder.Cell
- a:visibleIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.Cell
- a:widthGroup(java.lang.String):com.intellij.ui.dsl.builder.Cell
Ff:com.intellij.ui.dsl.builder.Cell$DefaultImpls
- bs:comment$default(com.intellij.ui.dsl.builder.Cell,java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:label$default(com.intellij.ui.dsl.builder.Cell,java.lang.String,com.intellij.ui.dsl.builder.LabelPosition,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:label$default(com.intellij.ui.dsl.builder.Cell,javax.swing.JLabel,com.intellij.ui.dsl.builder.LabelPosition,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
com.intellij.ui.dsl.builder.CellBase
- a:align(com.intellij.ui.dsl.builder.Align):com.intellij.ui.dsl.builder.CellBase
- ba:customize(com.intellij.ui.dsl.gridLayout.Gaps):com.intellij.ui.dsl.builder.CellBase
- a:customize(com.intellij.ui.dsl.gridLayout.UnscaledGaps):com.intellij.ui.dsl.builder.CellBase
- a:enabled(Z):com.intellij.ui.dsl.builder.CellBase
- a:enabledIf(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.ui.dsl.builder.CellBase
- a:enabledIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.CellBase
- a:gap(com.intellij.ui.dsl.builder.RightGap):com.intellij.ui.dsl.builder.CellBase
- a:horizontalAlign(com.intellij.ui.dsl.gridLayout.HorizontalAlign):com.intellij.ui.dsl.builder.CellBase
- a:resizableColumn():com.intellij.ui.dsl.builder.CellBase
- a:verticalAlign(com.intellij.ui.dsl.gridLayout.VerticalAlign):com.intellij.ui.dsl.builder.CellBase
- a:visible(Z):com.intellij.ui.dsl.builder.CellBase
- a:visibleIf(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.ui.dsl.builder.CellBase
- a:visibleIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.CellBase
com.intellij.ui.dsl.builder.CollapsibleRow
- com.intellij.ui.dsl.builder.Row
- a:addExpandedListener(kotlin.jvm.functions.Function1):V
- a:getExpanded():Z
- a:getPackWindowHeight():Z
- a:setExpanded(Z):V
- a:setPackWindowHeight(Z):V
- a:setTitle(java.lang.String):V
- a:setTitleFont(java.awt.Font):V
f:com.intellij.ui.dsl.builder.ComboBoxKt
- sf:bindItem(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindItem(com.intellij.ui.dsl.builder.Cell,com.intellij.ui.dsl.builder.MutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindItem(com.intellij.ui.dsl.builder.Cell,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- sf:bindItem(com.intellij.ui.dsl.builder.Cell,kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.Cell
- sf:columns(com.intellij.openapi.ui.ComboBox,I):com.intellij.openapi.ui.ComboBox
- sf:columns(com.intellij.ui.dsl.builder.Cell,I):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.ExtensionsKt
- sf:actionButton(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.actionSystem.AnAction,java.lang.String):com.intellij.ui.dsl.builder.Cell
- bs:actionButton$default(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.actionSystem.AnAction,java.lang.String,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- sf:actionsButton(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.actionSystem.AnAction[],java.lang.String,javax.swing.Icon):com.intellij.ui.dsl.builder.Cell
- bs:actionsButton$default(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.actionSystem.AnAction[],java.lang.String,javax.swing.Icon,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.LabelKt
- sf:bindText(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.ui.dsl.builder.Cell
e:com.intellij.ui.dsl.builder.LabelPosition
- java.lang.Enum
- sf:LEFT:com.intellij.ui.dsl.builder.LabelPosition
- sf:TOP:com.intellij.ui.dsl.builder.LabelPosition
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.dsl.builder.LabelPosition
- s:values():com.intellij.ui.dsl.builder.LabelPosition[]
com.intellij.ui.dsl.builder.Panel
- com.intellij.ui.dsl.builder.CellBase
- a:align(com.intellij.ui.dsl.builder.Align):com.intellij.ui.dsl.builder.Panel
- a:buttonsGroup(java.lang.String,Z,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.ButtonsGroup
- bs:buttonsGroup$default(com.intellij.ui.dsl.builder.Panel,java.lang.String,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.ButtonsGroup
- a:collapsibleGroup(java.lang.String,Z,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.CollapsibleRow
- bs:collapsibleGroup$default(com.intellij.ui.dsl.builder.Panel,java.lang.String,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.CollapsibleRow
- ba:customize(com.intellij.ui.dsl.gridLayout.Gaps):com.intellij.ui.dsl.builder.Panel
- a:customize(com.intellij.ui.dsl.gridLayout.UnscaledGaps):com.intellij.ui.dsl.builder.Panel
- a:customizeSpacingConfiguration(com.intellij.ui.dsl.builder.SpacingConfiguration,kotlin.jvm.functions.Function1):V
- a:enabled(Z):com.intellij.ui.dsl.builder.Panel
- a:enabledIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.Panel
- a:gap(com.intellij.ui.dsl.builder.RightGap):com.intellij.ui.dsl.builder.Panel
- a:group(com.intellij.ui.components.JBLabel,Z,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Row
- a:group(java.lang.String,Z,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Row
- bs:group$default(com.intellij.ui.dsl.builder.Panel,com.intellij.ui.components.JBLabel,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- bs:group$default(com.intellij.ui.dsl.builder.Panel,java.lang.String,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- a:groupRowsRange(java.lang.String,Z,java.lang.Boolean,java.lang.Boolean,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.RowsRange
- bs:groupRowsRange$default(com.intellij.ui.dsl.builder.Panel,java.lang.String,Z,java.lang.Boolean,java.lang.Boolean,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.RowsRange
- a:indent(kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.RowsRange
- a:onApply(kotlin.jvm.functions.Function0):com.intellij.ui.dsl.builder.Panel
- a:onIsModified(kotlin.jvm.functions.Function0):com.intellij.ui.dsl.builder.Panel
- a:onReset(kotlin.jvm.functions.Function0):com.intellij.ui.dsl.builder.Panel
- a:panel(kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Panel
- a:resizableColumn():com.intellij.ui.dsl.builder.Panel
- a:row(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Row
- a:row(javax.swing.JLabel,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Row
- bs:row$default(com.intellij.ui.dsl.builder.Panel,javax.swing.JLabel,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- a:rowsRange(kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.RowsRange
- a:separator(java.awt.Color):com.intellij.ui.dsl.builder.Row
- bs:separator$default(com.intellij.ui.dsl.builder.Panel,java.awt.Color,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- a:threeColumnsRow(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Row
- bs:threeColumnsRow$default(com.intellij.ui.dsl.builder.Panel,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- a:twoColumnsRow(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Row
- bs:twoColumnsRow$default(com.intellij.ui.dsl.builder.Panel,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- ba:verticalAlign(com.intellij.ui.dsl.gridLayout.VerticalAlign):com.intellij.ui.dsl.builder.Panel
- a:visible(Z):com.intellij.ui.dsl.builder.Panel
- a:visibleIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.Panel
Ff:com.intellij.ui.dsl.builder.Panel$DefaultImpls
- bs:buttonsGroup$default(com.intellij.ui.dsl.builder.Panel,java.lang.String,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.ButtonsGroup
- bs:collapsibleGroup$default(com.intellij.ui.dsl.builder.Panel,java.lang.String,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.CollapsibleRow
- bs:group$default(com.intellij.ui.dsl.builder.Panel,com.intellij.ui.components.JBLabel,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- bs:group$default(com.intellij.ui.dsl.builder.Panel,java.lang.String,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- bs:groupRowsRange$default(com.intellij.ui.dsl.builder.Panel,java.lang.String,Z,java.lang.Boolean,java.lang.Boolean,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.RowsRange
- bs:row$default(com.intellij.ui.dsl.builder.Panel,javax.swing.JLabel,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- bs:separator$default(com.intellij.ui.dsl.builder.Panel,java.awt.Color,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- bs:threeColumnsRow$default(com.intellij.ui.dsl.builder.Panel,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- bs:twoColumnsRow$default(com.intellij.ui.dsl.builder.Panel,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
e:com.intellij.ui.dsl.builder.RightGap
- java.lang.Enum
- sf:COLUMNS:com.intellij.ui.dsl.builder.RightGap
- sf:SMALL:com.intellij.ui.dsl.builder.RightGap
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.dsl.builder.RightGap
- s:values():com.intellij.ui.dsl.builder.RightGap[]
com.intellij.ui.dsl.builder.Row
- a:bottomGap(com.intellij.ui.dsl.builder.BottomGap):com.intellij.ui.dsl.builder.Row
- a:browserLink(java.lang.String,java.lang.String):com.intellij.ui.dsl.builder.Cell
- a:button(java.lang.String,com.intellij.openapi.actionSystem.AnAction,java.lang.String):com.intellij.ui.dsl.builder.Cell
- a:button(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- bs:button$default(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.openapi.actionSystem.AnAction,java.lang.String,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:cell():V
- a:cell(javax.swing.JComponent):com.intellij.ui.dsl.builder.Cell
- a:checkBox(java.lang.String):com.intellij.ui.dsl.builder.Cell
- a:comboBox(java.util.Collection,javax.swing.ListCellRenderer):com.intellij.ui.dsl.builder.Cell
- a:comboBox(javax.swing.ComboBoxModel,javax.swing.ListCellRenderer):com.intellij.ui.dsl.builder.Cell
- bs:comboBox$default(com.intellij.ui.dsl.builder.Row,java.util.Collection,javax.swing.ListCellRenderer,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:comboBox$default(com.intellij.ui.dsl.builder.Row,javax.swing.ComboBoxModel,javax.swing.ListCellRenderer,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:comment(java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction):com.intellij.ui.dsl.builder.Cell
- bs:comment$default(com.intellij.ui.dsl.builder.Row,java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:contextHelp(java.lang.String,java.lang.String):com.intellij.ui.dsl.builder.Cell
- bs:contextHelp$default(com.intellij.ui.dsl.builder.Row,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:customize(com.intellij.ui.dsl.gridLayout.UnscaledGapsY):com.intellij.ui.dsl.builder.Row
- a:dropDownLink(java.lang.Object,java.util.List):com.intellij.ui.dsl.builder.Cell
- a:enabled(Z):com.intellij.ui.dsl.builder.Row
- a:enabledIf(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.ui.dsl.builder.Row
- a:enabledIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.Row
- a:expandableTextField(com.intellij.util.Function,com.intellij.util.Function):com.intellij.ui.dsl.builder.Cell
- bs:expandableTextField$default(com.intellij.ui.dsl.builder.Row,com.intellij.util.Function,com.intellij.util.Function,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:icon(javax.swing.Icon):com.intellij.ui.dsl.builder.Cell
- a:intTextField(kotlin.ranges.IntRange,java.lang.Integer):com.intellij.ui.dsl.builder.Cell
- bs:intTextField$default(com.intellij.ui.dsl.builder.Row,kotlin.ranges.IntRange,java.lang.Integer,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:label(java.lang.String):com.intellij.ui.dsl.builder.Cell
- a:layout(com.intellij.ui.dsl.builder.RowLayout):com.intellij.ui.dsl.builder.Row
- a:link(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- a:panel(kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Panel
- a:passwordField():com.intellij.ui.dsl.builder.Cell
- a:placeholder():com.intellij.ui.dsl.builder.Placeholder
- a:radioButton(java.lang.String,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:radioButton$default(com.intellij.ui.dsl.builder.Row,java.lang.String,java.lang.Object,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:resizableRow():com.intellij.ui.dsl.builder.Row
- a:rowComment(java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction):com.intellij.ui.dsl.builder.Row
- bs:rowComment$default(com.intellij.ui.dsl.builder.Row,java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- a:scrollCell(javax.swing.JComponent):com.intellij.ui.dsl.builder.Cell
- a:segmentedButton(java.util.Collection,kotlin.jvm.functions.Function2):com.intellij.ui.dsl.builder.SegmentedButton
- a:slider(I,I,I,I):com.intellij.ui.dsl.builder.Cell
- a:spinner(kotlin.ranges.ClosedRange,D):com.intellij.ui.dsl.builder.Cell
- a:spinner(kotlin.ranges.IntRange,I):com.intellij.ui.dsl.builder.Cell
- bs:spinner$default(com.intellij.ui.dsl.builder.Row,kotlin.ranges.ClosedRange,D,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:spinner$default(com.intellij.ui.dsl.builder.Row,kotlin.ranges.IntRange,I,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:text(java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction):com.intellij.ui.dsl.builder.Cell
- bs:text$default(com.intellij.ui.dsl.builder.Row,java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:textArea():com.intellij.ui.dsl.builder.Cell
- a:textField():com.intellij.ui.dsl.builder.Cell
- textFieldWithBrowseButton(java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- bs:textFieldWithBrowseButton$default(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- a:threeStateCheckBox(java.lang.String):com.intellij.ui.dsl.builder.Cell
- a:topGap(com.intellij.ui.dsl.builder.TopGap):com.intellij.ui.dsl.builder.Row
- a:visible(Z):com.intellij.ui.dsl.builder.Row
- a:visibleIf(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.ui.dsl.builder.Row
- a:visibleIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.Row
Ff:com.intellij.ui.dsl.builder.Row$DefaultImpls
- bs:button$default(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.openapi.actionSystem.AnAction,java.lang.String,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:comboBox$default(com.intellij.ui.dsl.builder.Row,java.util.Collection,javax.swing.ListCellRenderer,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:comboBox$default(com.intellij.ui.dsl.builder.Row,javax.swing.ComboBoxModel,javax.swing.ListCellRenderer,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:comment$default(com.intellij.ui.dsl.builder.Row,java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:contextHelp$default(com.intellij.ui.dsl.builder.Row,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:expandableTextField$default(com.intellij.ui.dsl.builder.Row,com.intellij.util.Function,com.intellij.util.Function,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:intTextField$default(com.intellij.ui.dsl.builder.Row,kotlin.ranges.IntRange,java.lang.Integer,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:radioButton$default(com.intellij.ui.dsl.builder.Row,java.lang.String,java.lang.Object,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:rowComment$default(com.intellij.ui.dsl.builder.Row,java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction,I,java.lang.Object):com.intellij.ui.dsl.builder.Row
- bs:spinner$default(com.intellij.ui.dsl.builder.Row,kotlin.ranges.ClosedRange,D,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:spinner$default(com.intellij.ui.dsl.builder.Row,kotlin.ranges.IntRange,I,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:text$default(com.intellij.ui.dsl.builder.Row,java.lang.String,I,com.intellij.ui.dsl.builder.HyperlinkEventAction,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- s:textFieldWithBrowseButton(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- bs:textFieldWithBrowseButton$default(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- bs:textFieldWithBrowseButton$default(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
e:com.intellij.ui.dsl.builder.RowLayout
- java.lang.Enum
- sf:INDEPENDENT:com.intellij.ui.dsl.builder.RowLayout
- sf:LABEL_ALIGNED:com.intellij.ui.dsl.builder.RowLayout
- sf:PARENT_GRID:com.intellij.ui.dsl.builder.RowLayout
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.dsl.builder.RowLayout
- s:values():com.intellij.ui.dsl.builder.RowLayout[]
com.intellij.ui.dsl.builder.SegmentedButton
- com.intellij.ui.dsl.builder.CellBase
- sf:Companion:com.intellij.ui.dsl.builder.SegmentedButton$Companion
- sf:DEFAULT_MAX_BUTTONS_COUNT:I
- a:align(com.intellij.ui.dsl.builder.Align):com.intellij.ui.dsl.builder.SegmentedButton
- a:bind(com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.ui.dsl.builder.SegmentedButton
- a:customize(com.intellij.ui.dsl.gridLayout.UnscaledGaps):com.intellij.ui.dsl.builder.SegmentedButton
- a:enabled(Z):com.intellij.ui.dsl.builder.SegmentedButton
- a:gap(com.intellij.ui.dsl.builder.RightGap):com.intellij.ui.dsl.builder.SegmentedButton
- a:getItems():java.util.Collection
- a:getSelectedItem():java.lang.Object
- a:maxButtonsCount(I):com.intellij.ui.dsl.builder.SegmentedButton
- a:resizableColumn():com.intellij.ui.dsl.builder.SegmentedButton
- a:setItems(java.util.Collection):V
- a:setSelectedItem(java.lang.Object):V
- a:update(java.lang.Object[]):V
- a:validation(kotlin.jvm.functions.Function2):com.intellij.ui.dsl.builder.SegmentedButton
- a:visible(Z):com.intellij.ui.dsl.builder.SegmentedButton
f:com.intellij.ui.dsl.builder.SegmentedButton$Companion
- sf:DEFAULT_MAX_BUTTONS_COUNT:I
- f:createPresentation(java.lang.String,java.lang.String,javax.swing.Icon,Z):com.intellij.ui.dsl.builder.SegmentedButton$ItemPresentation
- bs:createPresentation$default(com.intellij.ui.dsl.builder.SegmentedButton$Companion,java.lang.String,java.lang.String,javax.swing.Icon,Z,I,java.lang.Object):com.intellij.ui.dsl.builder.SegmentedButton$ItemPresentation
com.intellij.ui.dsl.builder.SegmentedButton$ItemPresentation
- a:getEnabled():Z
- a:getIcon():javax.swing.Icon
- a:getText():java.lang.String
- a:getToolTipText():java.lang.String
- a:setEnabled(Z):V
- a:setIcon(javax.swing.Icon):V
- a:setText(java.lang.String):V
- a:setToolTipText(java.lang.String):V
f:com.intellij.ui.dsl.builder.SliderKt
- sf:bindValue(com.intellij.ui.dsl.builder.Cell,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- sf:bindValue(com.intellij.ui.dsl.builder.Cell,kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.Cell
- sf:labelTable(com.intellij.ui.dsl.builder.Cell,java.util.Map):com.intellij.ui.dsl.builder.Cell
- sf:showValueHint(com.intellij.ui.dsl.builder.Cell):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.SpinnerKt
- sf:bindIntValue(com.intellij.ui.dsl.builder.Cell,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- sf:bindIntValue(com.intellij.ui.dsl.builder.Cell,kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.Cell
- sf:bindValue(com.intellij.ui.dsl.builder.Cell,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- sf:bindValue(com.intellij.ui.dsl.builder.Cell,kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.TextAreaKt
- sf:columns(com.intellij.ui.dsl.builder.Cell,I):com.intellij.ui.dsl.builder.Cell
- sf:rows(com.intellij.ui.dsl.builder.Cell,I):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.TextFieldKt
- sf:COLUMNS_LARGE:I
- sf:COLUMNS_MEDIUM:I
- sf:COLUMNS_SHORT:I
- sf:COLUMNS_TINY:I
- sf:bindIntText(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindIntText(com.intellij.ui.dsl.builder.Cell,com.intellij.ui.dsl.builder.MutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindIntText(com.intellij.ui.dsl.builder.Cell,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- sf:bindIntText(com.intellij.ui.dsl.builder.Cell,kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.Cell
- sf:bindText(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindText(com.intellij.ui.dsl.builder.Cell,com.intellij.ui.dsl.builder.MutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindText(com.intellij.ui.dsl.builder.Cell,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- sf:bindText(com.intellij.ui.dsl.builder.Cell,kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.Cell
- sf:columns(com.intellij.ui.dsl.builder.Cell,I):com.intellij.ui.dsl.builder.Cell
- sf:columns(javax.swing.JTextField,I):javax.swing.JTextField
- sf:text(com.intellij.ui.dsl.builder.Cell,java.lang.String):com.intellij.ui.dsl.builder.Cell
- sf:textValidation(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.ui.validation.DialogValidation$WithParameter[]):com.intellij.ui.dsl.builder.Cell
- sf:trimmedTextValidation(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.ui.validation.DialogValidation$WithParameter[]):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.TextFieldWithBrowseButtonKt
- sf:bindText(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindText(com.intellij.ui.dsl.builder.Cell,com.intellij.ui.dsl.builder.MutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindText(com.intellij.ui.dsl.builder.Cell,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- sf:bindText(com.intellij.ui.dsl.builder.Cell,kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.Cell
- sf:columns(com.intellij.ui.dsl.builder.Cell,I):com.intellij.ui.dsl.builder.Cell
- sf:text(com.intellij.ui.dsl.builder.Cell,java.lang.String):com.intellij.ui.dsl.builder.Cell
- sf:textValidation(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.ui.validation.DialogValidation$WithParameter[]):com.intellij.ui.dsl.builder.Cell
- sf:trimmedTextValidation(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.ui.validation.DialogValidation$WithParameter[]):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.TextFieldWithHistoryWithBrowseButtonKt
- sf:bindText(com.intellij.ui.dsl.builder.Cell,com.intellij.ui.dsl.builder.MutableProperty):com.intellij.ui.dsl.builder.Cell
- sf:bindText(com.intellij.ui.dsl.builder.Cell,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- sf:bindText(com.intellij.ui.dsl.builder.Cell,kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.Cell
- sf:text(com.intellij.ui.dsl.builder.Cell,java.lang.String):com.intellij.ui.dsl.builder.Cell
e:com.intellij.ui.dsl.builder.TopGap
- java.lang.Enum
- sf:MEDIUM:com.intellij.ui.dsl.builder.TopGap
- sf:NONE:com.intellij.ui.dsl.builder.TopGap
- sf:SMALL:com.intellij.ui.dsl.builder.TopGap
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.dsl.builder.TopGap
- s:values():com.intellij.ui.dsl.builder.TopGap[]
f:com.intellij.ui.dsl.builder.components.ValidationTooltipKt
- sf:validationTooltip(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.ui.components.ActionLink,com.intellij.ui.components.ActionLink,com.intellij.ui.dsl.builder.components.ValidationType,Z):com.intellij.ui.dsl.builder.Cell
- bs:validationTooltip$default(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.ui.components.ActionLink,com.intellij.ui.components.ActionLink,com.intellij.ui.dsl.builder.components.ValidationType,Z,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
com.intellij.ui.dsl.validation.CellValidation
- a:addApplyRule(java.lang.String,com.intellij.ui.dsl.validation.Level,kotlin.jvm.functions.Function0):V
- a:addApplyRule(kotlin.jvm.functions.Function0):V
- bs:addApplyRule$default(com.intellij.ui.dsl.validation.CellValidation,java.lang.String,com.intellij.ui.dsl.validation.Level,kotlin.jvm.functions.Function0,I,java.lang.Object):V
- a:addInputRule(java.lang.String,com.intellij.ui.dsl.validation.Level,kotlin.jvm.functions.Function0):V
- a:addInputRule(kotlin.jvm.functions.Function0):V
- bs:addInputRule$default(com.intellij.ui.dsl.validation.CellValidation,java.lang.String,com.intellij.ui.dsl.validation.Level,kotlin.jvm.functions.Function0,I,java.lang.Object):V
- a:enabledIf(com.intellij.openapi.observable.properties.ObservableProperty):V
- a:enabledIf(com.intellij.ui.layout.ComponentPredicate):V
- a:getEnabled():Z
- a:setEnabled(Z):V
e:com.intellij.ui.dsl.validation.Level
- java.lang.Enum
- sf:ERROR:com.intellij.ui.dsl.validation.Level
- sf:WARNING:com.intellij.ui.dsl.validation.Level
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.dsl.validation.Level
- s:values():com.intellij.ui.dsl.validation.Level[]
f:com.intellij.ui.filterField.FilterAllAction
- com.intellij.openapi.actionSystem.AnAction
- <init>(java.lang.String,com.intellij.ui.filterField.FilterApplier):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.ui.filterField.FilterApplier
- a:applyFilter(java.lang.String,java.util.Collection):V
a:com.intellij.ui.filterField.FilterField
- javax.swing.JPanel
- <init>(java.lang.String):V
- pa:buildActions():java.util.Collection
- p:createUnfocusedBorder():javax.swing.border.Border
- getAccessibleContext():javax.accessibility.AccessibleContext
- a:getCurrentText():java.lang.String
- f:getOriginalMessage():java.lang.String
f:com.intellij.ui.filterField.FilterFieldAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>(kotlin.jvm.functions.Function0):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- f:getSupplier():kotlin.jvm.functions.Function0
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ui.filterField.FilterItem
- <init>(java.lang.String,java.lang.String):V
- <init>(java.util.function.Supplier,java.lang.String):V
- f:getTitle():java.lang.String
- f:getValue():java.lang.String
f:com.intellij.ui.filterField.FilterMultiSelectAction
- com.intellij.openapi.actionSystem.AnAction
- <init>(java.lang.String,java.lang.String,java.awt.Component,java.util.List,java.util.Collection,com.intellij.ui.filterField.FilterApplier):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ui.filterField.FilterSearchTextField
- com.intellij.ui.SearchTextField
- <init>():V
- addNotify():V
- f:isSkipDocumentEvents():Z
- removeNotify():V
- setBounds(I,I,I,I):V
- p:setEmptyHistory():V
- setSelectedItem(java.lang.String):V
- f:setTextIgnoreEvents(java.lang.String):V
- p:showCompletionPopup():V
f:com.intellij.ui.filterField.FilterSideTabs
- com.intellij.ui.tabs.impl.SingleHeightTabs
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
f:com.intellij.ui.filterField.FilterValueAction
- com.intellij.openapi.actionSystem.AnAction
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.ui.filterField.FilterApplier):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ui.filterField.FiltersKt
- sf:createFilterActions(java.awt.Component,java.lang.String,java.lang.String,java.util.List,java.util.Collection,com.intellij.ui.filterField.FilterApplier):java.util.Collection
- sf:fillFilterItems(java.util.List,java.lang.String,java.util.Collection,java.util.List,com.intellij.ui.filterField.FilterApplier):V
a:com.intellij.ui.filterField.SearchPopupControllerBase
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope,com.intellij.ui.filterField.FilterSearchTextField,javax.swing.JList):V
- pa:getAttributes():java.util.List
- pa:getCompletionValues(java.lang.String):java.util.List
- f:handleEnter(java.awt.event.KeyEvent):Z
- f:handleShowPopup():V
- f:handleUpDown(java.awt.event.KeyEvent):Z
- f:hidePopup():V
- f:isPopupShow():Z
- f:showAttributesPopup(java.lang.String,I):V
a:com.intellij.ui.filterField.SearchQueryParserBase
- sf:Companion:com.intellij.ui.filterField.SearchQueryParserBase$Companion
- <init>():V
- pf:addWords(java.lang.String):V
- pa:getAttributes():java.util.Set
- f:getWords():java.util.Set
- pa:handleAttribute(java.lang.String,java.lang.String):V
- f:parse(java.lang.String):V
- sf:parseAttributeInQuery(java.lang.String,I):com.intellij.ui.filterField.SearchQueryParserBase$QueryCompletionPosition
- sf:wrapAttribute(java.lang.String):java.lang.String
f:com.intellij.ui.filterField.SearchQueryParserBase$Companion
- f:parseAttributeInQuery(java.lang.String,I):com.intellij.ui.filterField.SearchQueryParserBase$QueryCompletionPosition
- f:wrapAttribute(java.lang.String):java.lang.String
f:com.intellij.ui.filterField.SearchQueryParserBase$QueryCompletionPosition
- <init>(java.lang.String,java.lang.String,I):V
- f:getAttributeName():java.lang.String
- f:getAttributeValue():java.lang.String
- f:getStartPosition():I
com.intellij.ui.layout.BaseBuilder
e:com.intellij.ui.layout.CCFlags
- java.lang.Enum
- sf:grow:com.intellij.ui.layout.CCFlags
- sf:growX:com.intellij.ui.layout.CCFlags
- sf:growY:com.intellij.ui.layout.CCFlags
- sf:push:com.intellij.ui.layout.CCFlags
- sf:pushX:com.intellij.ui.layout.CCFlags
- sf:pushY:com.intellij.ui.layout.CCFlags
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.layout.CCFlags
- s:values():com.intellij.ui.layout.CCFlags[]
a:com.intellij.ui.layout.Cell
- com.intellij.ui.layout.BaseBuilder
- <init>():V
- bf:button(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.ui.layout.CellBuilder
- bf:checkBox(java.lang.String):com.intellij.ui.layout.CellBuilder
- bf:checkBox(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.String):com.intellij.ui.layout.CellBuilder
- bf:checkBox(java.lang.String,kotlin.reflect.KMutableProperty0,java.lang.String):com.intellij.ui.layout.CellBuilder
- bf:checkBox(java.lang.String,Z):com.intellij.ui.layout.CellBuilder
- bf:checkBox(java.lang.String,Z,java.lang.String):com.intellij.ui.layout.CellBuilder
- bs:checkBox$default(com.intellij.ui.layout.Cell,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.String,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- bs:checkBox$default(com.intellij.ui.layout.Cell,java.lang.String,kotlin.reflect.KMutableProperty0,java.lang.String,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- bs:checkBox$default(com.intellij.ui.layout.Cell,java.lang.String,Z,java.lang.String,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- bf:comboBox(javax.swing.ComboBoxModel,com.intellij.ui.layout.PropertyBinding,javax.swing.ListCellRenderer):com.intellij.ui.layout.CellBuilder
- bf:comboBox(javax.swing.ComboBoxModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,javax.swing.ListCellRenderer):com.intellij.ui.layout.CellBuilder
- bs:comboBox$default(com.intellij.ui.layout.Cell,javax.swing.ComboBoxModel,com.intellij.ui.layout.PropertyBinding,javax.swing.ListCellRenderer,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- bs:comboBox$default(com.intellij.ui.layout.Cell,javax.swing.ComboBoxModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,javax.swing.ListCellRenderer,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- a:component(javax.swing.JComponent):com.intellij.ui.layout.CellBuilder
- bf:getGrow():com.intellij.ui.layout.CCFlags
- bf:getGrowX():com.intellij.ui.layout.CCFlags
- bf:invoke(javax.swing.JComponent,com.intellij.ui.layout.CCFlags[],com.intellij.ui.layout.GrowPolicy,java.lang.String):com.intellij.ui.layout.CellBuilder
- bs:invoke$default(com.intellij.ui.layout.Cell,javax.swing.JComponent,com.intellij.ui.layout.CCFlags[],com.intellij.ui.layout.GrowPolicy,java.lang.String,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- bf:label(java.lang.String,com.intellij.util.ui.JBFont,com.intellij.util.ui.UIUtil$FontColor):com.intellij.ui.layout.CellBuilder
- bs:label$default(com.intellij.ui.layout.Cell,java.lang.String,com.intellij.util.ui.JBFont,com.intellij.util.ui.UIUtil$FontColor,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- bf:link(java.lang.String,com.intellij.util.ui.UIUtil$ComponentStyle,kotlin.jvm.functions.Function0):com.intellij.ui.layout.CellBuilder
- bs:link$default(com.intellij.ui.layout.Cell,java.lang.String,com.intellij.util.ui.UIUtil$ComponentStyle,kotlin.jvm.functions.Function0,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- bf:textField(com.intellij.ui.layout.PropertyBinding,java.lang.Integer):com.intellij.ui.layout.CellBuilder
- bf:textField(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.Integer):com.intellij.ui.layout.CellBuilder
- bf:textField(kotlin.reflect.KMutableProperty0,java.lang.Integer):com.intellij.ui.layout.CellBuilder
- bs:textField$default(com.intellij.ui.layout.Cell,com.intellij.ui.layout.PropertyBinding,java.lang.Integer,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- bs:textField$default(com.intellij.ui.layout.Cell,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.Integer,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- bs:textField$default(com.intellij.ui.layout.Cell,kotlin.reflect.KMutableProperty0,java.lang.Integer,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
com.intellij.ui.layout.CellBuilder
- a:comment(java.lang.String,I,Z):com.intellij.ui.layout.CellBuilder
- bs:comment$default(com.intellij.ui.layout.CellBuilder,java.lang.String,I,Z,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
- a:constraints(com.intellij.ui.layout.CCFlags[]):com.intellij.ui.layout.CellBuilder
- ba:focused():com.intellij.ui.layout.CellBuilder
- a:getComponent():javax.swing.JComponent
- a:growPolicy(com.intellij.ui.layout.GrowPolicy):com.intellij.ui.layout.CellBuilder
- a:onApply(kotlin.jvm.functions.Function0):com.intellij.ui.layout.CellBuilder
- a:onIsModified(kotlin.jvm.functions.Function0):com.intellij.ui.layout.CellBuilder
- a:onReset(kotlin.jvm.functions.Function0):com.intellij.ui.layout.CellBuilder
- ba:withValidationOnApply(kotlin.jvm.functions.Function2):com.intellij.ui.layout.CellBuilder
- ba:withValidationOnInput(kotlin.jvm.functions.Function2):com.intellij.ui.layout.CellBuilder
f:com.intellij.ui.layout.CellBuilder$DefaultImpls
- bs:comment$default(com.intellij.ui.layout.CellBuilder,java.lang.String,I,Z,I,java.lang.Object):com.intellij.ui.layout.CellBuilder
f:com.intellij.ui.layout.CellKt
- sf:createPropertyBinding(kotlin.reflect.KMutableProperty0,java.lang.Class):com.intellij.ui.layout.PropertyBinding
- bsf:withTextBinding(com.intellij.ui.layout.CellBuilder,com.intellij.ui.layout.PropertyBinding):com.intellij.ui.layout.CellBuilder
@:com.intellij.ui.layout.CellMarker
- java.lang.annotation.Annotation
e:com.intellij.ui.layout.GrowPolicy
- java.lang.Enum
- sf:MEDIUM_TEXT:com.intellij.ui.layout.GrowPolicy
- sf:SHORT_TEXT:com.intellij.ui.layout.GrowPolicy
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.layout.GrowPolicy
- s:values():com.intellij.ui.layout.GrowPolicy[]
f:com.intellij.ui.layout.InnerCell
- com.intellij.ui.layout.Cell
- <init>(com.intellij.ui.layout.Cell):V
- component(javax.swing.JComponent):com.intellij.ui.layout.CellBuilder
- f:getCell():com.intellij.ui.layout.Cell
e:com.intellij.ui.layout.LCFlags
- java.lang.Enum
- sf:debug:com.intellij.ui.layout.LCFlags
- sf:fill:com.intellij.ui.layout.LCFlags
- sf:fillX:com.intellij.ui.layout.LCFlags
- sf:fillY:com.intellij.ui.layout.LCFlags
- sf:flowY:com.intellij.ui.layout.LCFlags
- sf:noGrid:com.intellij.ui.layout.LCFlags
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.layout.LCFlags
- s:values():com.intellij.ui.layout.LCFlags[]
c:com.intellij.ui.layout.LayoutBuilder
- com.intellij.ui.layout.RowBuilder
- <init>(com.intellij.ui.layout.LayoutBuilderImpl):V
- createChildRow(javax.swing.JLabel,Z,Z,java.lang.String):com.intellij.ui.layout.Row
- f:getBuilder():com.intellij.ui.layout.LayoutBuilderImpl
- b:onGlobalApply(kotlin.jvm.functions.Function0):com.intellij.ui.layout.Row
- b:row(java.lang.String,Z,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
- row(javax.swing.JLabel,Z,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
- b:titledRow(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
com.intellij.ui.layout.LayoutBuilderImpl
- a:build(java.awt.Container,com.intellij.ui.layout.LCFlags[]):V
- a:getComponentValidateCallbacks():java.util.Map
- a:getPreferredFocusedComponent():javax.swing.JComponent
- a:getValidateCallbacks():java.util.List
f:com.intellij.ui.layout.LayoutBuilderKt
- sf:chooseFile(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.actionSystem.AnActionEvent,kotlin.jvm.functions.Function1):V
f:com.intellij.ui.layout.LayoutImplKt
- sf:createLayoutBuilder():com.intellij.ui.layout.LayoutBuilder
f:com.intellij.ui.layout.LayoutKt
- sf:initPanel(com.intellij.ui.layout.LayoutBuilder,com.intellij.openapi.ui.DialogPanel):V
- sf:panel(com.intellij.ui.layout.LCFlags[],java.lang.String,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.DialogPanel
- bs:panel$default(com.intellij.ui.layout.LCFlags[],java.lang.String,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.openapi.ui.DialogPanel
f:com.intellij.ui.layout.PropertyBinding
- <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):V
- f:component1():kotlin.jvm.functions.Function0
- f:component2():kotlin.jvm.functions.Function1
- f:copy(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.layout.PropertyBinding
- bs:copy$default(com.intellij.ui.layout.PropertyBinding,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.layout.PropertyBinding
- equals(java.lang.Object):Z
- f:getGet():kotlin.jvm.functions.Function0
- f:getSet():kotlin.jvm.functions.Function1
- hashCode():I
a:com.intellij.ui.layout.Row
- com.intellij.ui.layout.Cell
- com.intellij.ui.layout.RowBuilder
- <init>():V
- bf:cell(Z,Z,kotlin.jvm.functions.Function1):V
- bs:cell$default(com.intellij.ui.layout.Row,Z,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- ba:getVisible():Z
- a:setCellMode(Z,Z,Z):V
- ba:setVisible(Z):V
com.intellij.ui.layout.RowBuilder
- com.intellij.ui.layout.BaseBuilder
- a:createChildRow(javax.swing.JLabel,Z,Z,java.lang.String):com.intellij.ui.layout.Row
- bs:createChildRow$default(com.intellij.ui.layout.RowBuilder,javax.swing.JLabel,Z,Z,java.lang.String,I,java.lang.Object):com.intellij.ui.layout.Row
- ba:onGlobalApply(kotlin.jvm.functions.Function0):com.intellij.ui.layout.Row
- b:row(java.lang.String,Z,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
- row(javax.swing.JLabel,Z,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
- bs:row$default(com.intellij.ui.layout.RowBuilder,java.lang.String,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.layout.Row
- bs:row$default(com.intellij.ui.layout.RowBuilder,javax.swing.JLabel,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.layout.Row
- ba:titledRow(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
f:com.intellij.ui.layout.RowBuilder$DefaultImpls
- bs:createChildRow$default(com.intellij.ui.layout.RowBuilder,javax.swing.JLabel,Z,Z,java.lang.String,I,java.lang.Object):com.intellij.ui.layout.Row
- bs:row(com.intellij.ui.layout.RowBuilder,java.lang.String,Z,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
- s:row(com.intellij.ui.layout.RowBuilder,javax.swing.JLabel,Z,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
- bs:row$default(com.intellij.ui.layout.RowBuilder,java.lang.String,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.layout.Row
- bs:row$default(com.intellij.ui.layout.RowBuilder,javax.swing.JLabel,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.layout.Row
f:com.intellij.ui.layout.RowBuilderWithButtonGroupProperty
- com.intellij.ui.layout.RowBuilder
- b:<init>(com.intellij.ui.layout.RowBuilder,com.intellij.ui.layout.PropertyBinding):V
- createChildRow(javax.swing.JLabel,Z,Z,java.lang.String):com.intellij.ui.layout.Row
- b:onGlobalApply(kotlin.jvm.functions.Function0):com.intellij.ui.layout.Row
- b:row(java.lang.String,Z,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
- row(javax.swing.JLabel,Z,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
- b:titledRow(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.ui.layout.Row
f:com.intellij.ui.layout.ValidationInfoBuilder
- <init>(javax.swing.JComponent):V
- f:error(java.lang.String):com.intellij.openapi.ui.ValidationInfo
- f:getComponent():javax.swing.JComponent
- f:warning(java.lang.String):com.intellij.openapi.ui.ValidationInfo
f:com.intellij.ui.layout.migLayout.MigLayoutUtilKt
- sf:createLayoutConstraints():net.miginfocom.layout.LC
- sf:gapToBoundSize(I,Z):net.miginfocom.layout.BoundSize
c:com.intellij.ui.layout.migLayout.patched.MigLayout
- java.awt.LayoutManager2
- <init>():V
- <init>(net.miginfocom.layout.LC):V
- <init>(net.miginfocom.layout.LC,net.miginfocom.layout.AC):V
- <init>(net.miginfocom.layout.LC,net.miginfocom.layout.AC,net.miginfocom.layout.AC):V
- b:<init>(net.miginfocom.layout.LC,net.miginfocom.layout.AC,net.miginfocom.layout.AC,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addLayoutComponent(java.awt.Component,java.lang.Object):V
- addLayoutComponent(java.lang.String,java.awt.Component):V
- f:getColumnConstraints():net.miginfocom.layout.AC
- f:getComponentConstraints():java.util.Map
- getLayoutAlignmentX(java.awt.Container):F
- getLayoutAlignmentY(java.awt.Container):F
- f:getLayoutConstraints():net.miginfocom.layout.LC
- f:getRowConstraints():net.miginfocom.layout.AC
- invalidateLayout(java.awt.Container):V
- f:isDebugEnabled():Z
- layoutContainer(java.awt.Container):V
- maximumLayoutSize(java.awt.Container):java.awt.Dimension
- minimumLayoutSize(java.awt.Container):java.awt.Dimension
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
- removeLayoutComponent(java.awt.Component):V
- f:setDebugEnabled(Z):V
f:com.intellij.ui.list.TargetPopup
- sf:buildTargetPopup(java.util.List,java.util.function.Function,java.util.function.Consumer):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- sf:buildTargetPopupWithMultiSelect(java.util.List,java.util.function.Function,java.util.function.Predicate):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- sf:createTargetPopup(java.lang.String,java.util.List,java.util.List,java.util.function.Consumer):com.intellij.openapi.ui.popup.JBPopup
- sf:createTargetPresentationRenderer(java.util.function.Function):javax.swing.ListCellRenderer
f:com.intellij.ui.mac.touchbar.Helpers
- <init>():V
- s:getAppId():java.lang.String
- s:isPhisycalEsc():Z
- s:restartTouchBarServer():Z
f:com.intellij.ui.mac.touchbar.TouchbarSupport
- <init>():V
- s:enable(Z):V
- s:isAvailable():Z
- s:isEnabled():Z
- s:onApplicationLoaded():V
- s:onUpdateEditorHeader(com.intellij.openapi.editor.Editor):V
- s:reloadAllActions():V
- s:showPopupItems(com.intellij.openapi.ui.popup.JBPopup,javax.swing.JComponent):V
- s:showWindowActions(com.intellij.openapi.Disposable,java.awt.Component):V
- s:showWindowActions(java.awt.Component):com.intellij.openapi.Disposable
c:com.intellij.ui.messages.ChooseDialog
- com.intellij.openapi.ui.messages.MessageDialog
- <init>(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String[],java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String[],java.lang.String,java.lang.String[],I):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String[],java.lang.String):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- p:doOKAction():V
- getComboBox():javax.swing.JComboBox
- getInputString():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelectedIndex():I
- setValidator(com.intellij.openapi.ui.InputValidator):V
f:com.intellij.ui.messages.JBMacMessages
- com.intellij.ui.mac.MacMessages
- <init>():V
c:com.intellij.ui.messages.MessagesServiceImpl
- <init>():V
- showChooseDialog(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,javax.swing.Icon):I
- showEditableChooseDialog(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String[],java.lang.String,com.intellij.openapi.ui.InputValidator):java.lang.String
- showErrorDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- showInputDialog(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator,com.intellij.openapi.util.TextRange,java.lang.String):java.lang.String
- showInputDialogWithCheckBox(java.lang.String,java.lang.String,java.lang.String,Z,Z,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator):com.intellij.openapi.util.Pair
- showMessageDialog(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.lang.String,java.lang.String[],I,I,javax.swing.Icon,com.intellij.openapi.ui.DoNotAskOption,Z,java.lang.String,java.lang.String,com.intellij.openapi.ui.ExitActionType[]):I
- showMoreInfoMessageDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],I,I,javax.swing.Icon):I
- showMultilineInputDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.InputValidator):java.lang.String
- showPasswordDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.InputValidator):java.lang.String
- showPasswordDialog(java.awt.Component,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.InputValidator):C[]
- showTextAreaDialog(javax.swing.JTextField,java.lang.String,java.lang.String,com.intellij.util.Function,com.intellij.util.Function):V
- showTwoStepConfirmationDialog(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,Z,I,I,javax.swing.Icon,java.util.function.BiFunction):I
f:com.intellij.ui.messages.ProcessExecutionErrorDialogKt
- sf:showProcessExecutionErrorDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String,I):V
f:com.intellij.ui.picker.MacColorPipette
- com.intellij.openapi.Disposable
- java.awt.image.ImageObserver
- <init>(com.intellij.ui.ColorPicker,com.intellij.ui.picker.ColorListener):V
- s:captureScreen(java.awt.Window,java.awt.Rectangle):java.awt.image.BufferedImage
- isAvailable():Z
c:com.intellij.ui.plaf.beg.IdeaMenuUI
- javax.swing.plaf.basic.BasicMenuUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- getPath():javax.swing.MenuElement[]
- p:getPreferredMenuItemSize(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,I):java.awt.Dimension
- p:installDefaults():V
- installUI(javax.swing.JComponent):V
- paint(java.awt.Graphics,javax.swing.JComponent):V
- pf:paintHover(java.awt.Graphics,javax.swing.JComponent,javax.swing.JMenu,javax.swing.Icon):V
- s:paintRoundSelection(java.awt.Graphics,java.awt.Component,I,I):V
- s:patchPreferredSize(java.awt.Component,java.awt.Dimension):java.awt.Dimension
- uninstallUI(javax.swing.JComponent):V
- update(java.awt.Graphics,javax.swing.JComponent):V
c:com.intellij.ui.popup.AbstractPopup
- com.intellij.ide.ui.ScreenAreaConsumer
- com.intellij.openapi.ui.popup.AlignedPopup
- com.intellij.openapi.ui.popup.JBPopup
- sf:FIRST_TIME_SIZE:java.lang.String
- sf:SHOW_HINTS:java.lang.String
- p:myOk:Z
- p:myOwner:java.awt.Component
- pf:mySpeedSearch:com.intellij.ui.speedSearch.SpeedSearch
- p:mySpeedSearchPatternField:com.intellij.ui.SearchTextField
- p:<init>():V
- addListener(com.intellij.openapi.ui.popup.JBPopupListener):V
- addResizeListener(java.lang.Runnable,com.intellij.openapi.Disposable):V
- p:afterShow():V
- p:afterShowSync():V
- p:beforeShow():Z
- p:calculateSizeForPack(Z,Z):java.awt.Dimension
- canClose():Z
- canShow():Z
- f:cancel():V
- cancel(java.awt.event.InputEvent):V
- f:closeOk(java.awt.event.InputEvent):V
- p:createContentPanel(Z,com.intellij.ui.PopupBorder,Z):com.intellij.ui.popup.AbstractPopup$MyContentPanel
- p:createWarning(java.lang.String):javax.swing.JComponent
- s:customizeSearchFieldLook(com.intellij.ui.SearchTextField,Z):V
- f:dispatchInputMethodEvent(java.awt.event.InputMethodEvent):Z
- dispatchKeyEvent(java.awt.event.KeyEvent):Z
- dispose():V
- focusPreferredComponent():V
- getAdComponentHeight():I
- getBestPositionFor(com.intellij.openapi.actionSystem.DataContext):java.awt.Point
- s:getCenterOf(java.awt.Component,javax.swing.JComponent):java.awt.Point
- s:getChildPopups(java.awt.Component):java.util.List
- getComponent():javax.swing.JComponent
- getConsumedScreenBounds():java.awt.Rectangle
- getContent():javax.swing.JComponent
- f:getContentSize():java.awt.Dimension
- s:getCurrentWindow(com.intellij.openapi.project.Project):java.awt.Window
- getDimensionServiceKey():java.lang.String
- getFooterPreferredSize():java.awt.Dimension
- getHeaderPreferredSize():java.awt.Dimension
- getLocationOnScreen():java.awt.Point
- getMinimumSize():java.awt.Dimension
- getOwner():java.awt.Component
- getPopupBorder():com.intellij.ui.PopupBorder
- getPopupWindow():java.awt.Window
- getPreferredContentSize():java.awt.Dimension
- getProject():com.intellij.openapi.project.Project
- getSize():java.awt.Dimension
- getSizeForPositioning():java.awt.Dimension
- getTitle():com.intellij.ui.CaptionPanel
- getUnderlyingWindow():java.awt.Window
- getUserData(java.lang.Class):java.lang.Object
- p:init(com.intellij.openapi.project.Project,javax.swing.JComponent,javax.swing.JComponent,Z,Z,Z,java.lang.String,Z,java.lang.String,com.intellij.openapi.util.Computable,Z,java.util.Set,Z,com.intellij.ui.ActiveComponent,com.intellij.openapi.ui.popup.IconButton,com.intellij.openapi.ui.popup.MouseChecker,Z,com.intellij.openapi.ui.popup.ActiveIcon,Z,Z,Z,java.awt.Dimension,F,com.intellij.openapi.ui.popup.MaskProvider,Z,Z,java.awt.Component[],java.lang.String,I,Z,java.util.List,java.awt.Component,com.intellij.util.Processor,Z,Z,Z,java.awt.Color,Z,com.intellij.util.BooleanFunction):com.intellij.ui.popup.AbstractPopup
- p:isAdVisible():Z
- p:isBusy():Z
- isCancelKeyEnabled():Z
- s:isCloseRequest(java.awt.event.KeyEvent):Z
- isDisposed():Z
- isFocused():Z
- isModalContext():Z
- isNativePopup():Z
- isPersistent():Z
- isVisible():Z
- moveToFitScreen():V
- notifyListeners():V
- p:onSpeedSearchPatternChanged():V
- pack(Z,Z):V
- removeListener(com.intellij.openapi.ui.popup.JBPopupListener):V
- pf:requestFocus():Z
- setAdText(java.lang.String):V
- setAdText(java.lang.String,I):V
- setBounds(java.awt.Rectangle):V
- setCaption(java.lang.String):V
- setCaptionIcon(javax.swing.Icon):V
- setCaptionIconPosition(Z):V
- setDataProvider(com.intellij.openapi.actionSystem.DataProvider):V
- setDimensionServiceKey(java.lang.String):V
- setFinalRunnable(java.lang.Runnable):V
- p:setFooterComponent(javax.swing.JComponent):V
- p:setHeaderComponent(javax.swing.JComponent):V
- setLocation(com.intellij.ui.awt.RelativePoint):V
- setLocation(java.awt.Point):V
- setMinimumSize(java.awt.Dimension):V
- setOk(Z):V
- setOkHandler(java.lang.Runnable):V
- setRequestFocus(Z):V
- setShowHints(Z):V
- setSize(java.awt.Dimension):V
- setSize(java.awt.Point,java.awt.Dimension):V
- setSpeedSearchAlwaysShown():V
- setSpeedSearchEmptyText(java.lang.String):V
- setStretchToOwnerHeight(Z):V
- setStretchToOwnerWidth(Z):V
- setUiVisible(Z):V
- setUserData(java.util.List):V
- setWarning(java.lang.String):V
- shouldRequestFocus():Z
- show(com.intellij.openapi.ui.popup.PopupShowOptions):V
- show(com.intellij.ui.awt.RelativePoint):V
- show(java.awt.Component):V
- show(java.awt.Component,I,I,Z):V
- showCenteredInCurrentWindow(com.intellij.openapi.project.Project):V
- showInBestPositionFor(com.intellij.openapi.actionSystem.DataContext):V
- showInBestPositionFor(com.intellij.openapi.editor.Editor):V
- showInCenterOf(java.awt.Component):V
- showInFocusCenter():V
- showInScreenCoordinates(java.awt.Component,java.awt.Point):V
- showUnderneathOf(java.awt.Component):V
- showUnderneathOf(java.awt.Component,Z):V
- storeDimensionSize():V
- p:updateSpeedSearchColors(Z):V
c:com.intellij.ui.popup.AbstractPopup$MyContentPanel
- javax.swing.JPanel
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- <init>(com.intellij.ui.PopupBorder):V
- computePreferredSize():java.awt.Dimension
- setDataProvider(com.intellij.openapi.actionSystem.DataProvider):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.ui.popup.ActionPopupOptions
- autoSelectionEnabled():Z
- s:create(Z,Z,Z,Z,I,Z,com.intellij.openapi.util.Condition):com.intellij.ui.popup.ActionPopupOptions
- s:empty():com.intellij.ui.popup.ActionPopupOptions
- s:forStep(Z,Z,Z,com.intellij.openapi.util.Condition):com.intellij.ui.popup.ActionPopupOptions
- s:forStepAndItems(Z,Z,Z,Z,Z,com.intellij.openapi.util.Condition,I):com.intellij.ui.popup.ActionPopupOptions
- getDefaultIndex():I
- getMaxRowCount():I
- getPreselectCondition():com.intellij.openapi.util.Condition
- honorActionMnemonics():Z
- s:honorMnemonics():com.intellij.ui.popup.ActionPopupOptions
- s:mnemonicsAndDisabled():com.intellij.ui.popup.ActionPopupOptions
- s:showDisabled():com.intellij.ui.popup.ActionPopupOptions
- showDisabledActions():Z
- showNumbers():Z
- useAlphaAsNumbers():Z
c:com.intellij.ui.popup.ActionPopupStep
- com.intellij.openapi.ui.popup.ListPopupStepEx
- com.intellij.openapi.ui.popup.MnemonicNavigationFilter
- com.intellij.openapi.ui.popup.SpeedSearchFilter
- <init>(java.util.List,java.lang.String,java.util.function.Supplier,java.lang.String,com.intellij.openapi.actionSystem.impl.PresentationFactory,com.intellij.ui.popup.ActionPopupOptions):V
- <init>(java.util.List,java.lang.String,java.util.function.Supplier,java.lang.String,Z,com.intellij.openapi.util.Condition,Z,Z,com.intellij.openapi.actionSystem.impl.PresentationFactory):V
- canceled():V
- s:createActionItems(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.impl.PresentationFactory,com.intellij.ui.popup.ActionPopupOptions):java.util.List
- s:createActionItems(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,java.lang.String,com.intellij.openapi.actionSystem.impl.PresentationFactory):java.util.List
- s:createActionsStep(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.impl.PresentationFactory,java.util.function.Supplier,com.intellij.ui.popup.ActionPopupOptions):com.intellij.openapi.ui.popup.ListPopupStep
- createAnActionEvent(com.intellij.ui.popup.PopupFactoryImpl$ActionItem,java.awt.event.InputEvent):com.intellij.openapi.actionSystem.AnActionEvent
- getActionPlace():java.lang.String
- getDefaultOptionIndex():I
- getFinalRunnable():java.lang.Runnable
- getIconFor(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):javax.swing.Icon
- getIndexedString(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):java.lang.String
- getInlineItems(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):java.util.List
- getMnemonicNavigationFilter():com.intellij.openapi.ui.popup.MnemonicNavigationFilter
- getMnemonicPos(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):I
- getMnemonicString(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):java.lang.String
- getOptions():com.intellij.ui.popup.ActionPopupOptions
- getPresentationFactory():com.intellij.openapi.actionSystem.impl.PresentationFactory
- getSecondaryIconFor(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):javax.swing.Icon
- getSecondaryTextFor(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):java.lang.String
- getSelectedIconFor(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):javax.swing.Icon
- getSeparatorAbove(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):com.intellij.openapi.ui.popup.ListSeparator
- getSpeedSearchFilter():com.intellij.openapi.ui.popup.SpeedSearchFilter
- p:getSubStep(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.impl.PresentationFactory,Z,Z,Z,java.lang.String,Z,Z,java.util.function.Supplier,com.intellij.openapi.util.Condition,I):com.intellij.openapi.ui.popup.ListPopupStep
- getTextFor(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):java.lang.String
- getTitle():java.lang.String
- getTooltipTextFor(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):java.lang.String
- getValues():java.util.List
- hasSubstep(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):Z
- isAutoSelectionEnabled():Z
- isFinal(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):Z
- isMnemonicsNavigationEnabled():Z
- isSelectable(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):Z
- isSpeedSearchEnabled():Z
- onChosen(com.intellij.ui.popup.PopupFactoryImpl$ActionItem,Z):com.intellij.openapi.ui.popup.PopupStep
- onChosen(com.intellij.ui.popup.PopupFactoryImpl$ActionItem,Z,java.awt.event.InputEvent):com.intellij.openapi.ui.popup.PopupStep
- performActionItem(com.intellij.ui.popup.PopupFactoryImpl$ActionItem,java.awt.event.InputEvent):V
- setEmptyText(com.intellij.util.ui.StatusText):V
- updateStepItems(javax.swing.JComponent):V
f:com.intellij.ui.popup.BalloonPopupBuilderImpl
- com.intellij.openapi.ui.popup.BalloonBuilder
- <init>(java.util.Map,javax.swing.JComponent):V
- <init>(javax.swing.JComponent):V
- createBalloon():com.intellij.openapi.ui.popup.Balloon
- setAnimationCycle(I):com.intellij.openapi.ui.popup.BalloonBuilder
- setBlockClicksThroughBalloon(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setBorderColor(java.awt.Color):com.intellij.openapi.ui.popup.BalloonBuilder
- setBorderInsets(java.awt.Insets):com.intellij.openapi.ui.popup.BalloonBuilder
- setCalloutShift(I):com.intellij.openapi.ui.popup.BalloonBuilder
- setClickHandler(java.awt.event.ActionListener,Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setCloseButtonEnabled(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setContentInsets(java.awt.Insets):com.intellij.openapi.ui.popup.BalloonBuilder
- setCornerRadius(I):com.intellij.openapi.ui.popup.BalloonBuilder
- setCornerToPointerDistance(I):com.intellij.openapi.ui.popup.BalloonBuilder
- setDialogMode(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setDisposable(com.intellij.openapi.Disposable):com.intellij.openapi.ui.popup.BalloonBuilder
- setFadeoutTime(J):com.intellij.openapi.ui.popup.BalloonBuilder
- setFillColor(java.awt.Color):com.intellij.openapi.ui.popup.BalloonBuilder
- setHideOnAction(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setHideOnClickOutside(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setHideOnCloseClick(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setHideOnFrameResize(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setHideOnKeyOutside(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setHideOnLinkClick(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setLayer(com.intellij.openapi.ui.popup.Balloon$Layer):com.intellij.openapi.ui.popup.BalloonBuilder
- setPointerShiftedToStart(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setPointerSize(java.awt.Dimension):com.intellij.openapi.ui.popup.BalloonBuilder
- setPositionChangeXShift(I):com.intellij.openapi.ui.popup.BalloonBuilder
- setPositionChangeYShift(I):com.intellij.openapi.ui.popup.BalloonBuilder
- setRequestFocus(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setShadow(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setShowCallout(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setSmallVariant(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setTitle(java.lang.String):com.intellij.openapi.ui.popup.BalloonBuilder
com.intellij.ui.popup.ClosableByLeftArrow
f:com.intellij.ui.popup.HeavyWeightPopup
- javax.swing.Popup
- <init>(javax.swing.Popup,java.awt.Window):V
- getWindow():java.awt.Window
- hide():V
- show():V
com.intellij.ui.popup.KeepingPopupOpenAction
c:com.intellij.ui.popup.LocalPopupComponentFactory
- <init>():V
- createPopupComponent(com.intellij.ui.popup.PopupComponentFactory$PopupType,java.awt.Component,java.awt.Component,I,I,com.intellij.openapi.ui.popup.JBPopup):com.intellij.ui.popup.PopupComponent
f:com.intellij.ui.popup.LocalPopupComponentFactory$AwtPopupWrapper
- com.intellij.ui.popup.PopupComponent
- sf:Companion:com.intellij.ui.popup.LocalPopupComponentFactory$AwtPopupWrapper$Companion
- <init>(javax.swing.Popup,com.intellij.openapi.ui.popup.JBPopup):V
- getWindow():java.awt.Window
- hide(Z):V
- setRequestFocus(Z):V
- show():V
f:com.intellij.ui.popup.LocalPopupComponentFactory$AwtPopupWrapper$Companion
f:com.intellij.ui.popup.LocalPopupComponentFactory$DialogPopupWrapper
- com.intellij.ui.popup.PopupComponent
- <init>(java.awt.Component,java.awt.Component,I,I,com.intellij.openapi.ui.popup.JBPopup):V
- getWindow():java.awt.Window
- hide(Z):V
- setRequestFocus(Z):V
- show():V
com.intellij.ui.popup.NextStepHandler
- a:handleNextStep(com.intellij.openapi.ui.popup.PopupStep,java.lang.Object):V
com.intellij.ui.popup.NumericMnemonicItem
- a:digitMnemonicsEnabled():Z
- a:getMnemonicChar():java.lang.Character
com.intellij.ui.popup.PopupComponent
- sf:LOG:com.intellij.openapi.diagnostic.Logger
- a:getWindow():java.awt.Window
- a:hide(Z):V
- a:setRequestFocus(Z):V
- a:show():V
f:com.intellij.ui.popup.PopupDispatcher
- com.intellij.openapi.ui.popup.IdePopupEventDispatcher
- java.awt.KeyEventDispatcher
- java.awt.event.AWTEventListener
- close():Z
- dispatch(java.awt.AWTEvent):Z
- dispatchKeyEvent(java.awt.event.KeyEvent):Z
- eventDispatched(java.awt.AWTEvent):V
- getComponent():java.awt.Component
- s:getInstance():com.intellij.ui.popup.PopupDispatcher
- getPopupStream():java.util.stream.Stream
- requestFocus():Z
c:com.intellij.ui.popup.PopupFactoryImpl
- com.intellij.openapi.ui.popup.JBPopupFactory
- sf:ANCHOR_POPUP_POINT:com.intellij.openapi.util.Key
- sf:ANCHOR_POPUP_POSITION:com.intellij.openapi.util.Key
- sf:DISABLE_ICON_IN_LIST:com.intellij.openapi.util.Key
- <init>():V
- createActionGroupPopup(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid,Z,java.lang.Runnable,I,com.intellij.openapi.util.Condition,java.lang.String):com.intellij.openapi.ui.popup.ListPopup
- createActionGroupPopup(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,java.lang.Runnable,I,com.intellij.openapi.util.Condition):com.intellij.openapi.ui.popup.ListPopup
- createActionsStep(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,Z,Z,java.lang.String,java.awt.Component,Z,I,Z):com.intellij.openapi.ui.popup.ListPopupStep
- createBalloonBuilder(javax.swing.JComponent):com.intellij.openapi.ui.popup.BalloonBuilder
- createComponentPopupBuilder(javax.swing.JComponent,javax.swing.JComponent):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- createConfirmation(java.lang.String,java.lang.Runnable,I):com.intellij.openapi.ui.popup.ListPopup
- createConfirmation(java.lang.String,java.lang.String,java.lang.String,java.lang.Runnable,I):com.intellij.openapi.ui.popup.ListPopup
- createConfirmation(java.lang.String,java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable,I):com.intellij.openapi.ui.popup.ListPopup
- createDialogBalloonBuilder(javax.swing.JComponent,java.lang.String):com.intellij.openapi.ui.popup.BalloonBuilder
- createHtmlTextBalloonBuilder(com.intellij.util.ui.Html,javax.swing.Icon,java.awt.Color,java.awt.Color,javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.popup.BalloonBuilder
- createHtmlTextBalloonBuilder(java.lang.String,com.intellij.openapi.ui.MessageType,javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.popup.BalloonBuilder
- createHtmlTextBalloonBuilder(java.lang.String,javax.swing.Icon,java.awt.Color,java.awt.Color,javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.popup.BalloonBuilder
- createListPopup(com.intellij.openapi.project.Project,com.intellij.openapi.ui.popup.ListPopupStep,java.util.function.Function):com.intellij.openapi.ui.popup.ListPopup
- createListPopup(com.intellij.openapi.ui.popup.ListPopupStep):com.intellij.openapi.ui.popup.ListPopup
- createListPopup(com.intellij.openapi.ui.popup.ListPopupStep,I):com.intellij.openapi.ui.popup.ListPopup
- createMessage(java.lang.String):com.intellij.openapi.ui.popup.JBPopup
- createPopupChooserBuilder(java.util.List):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- p:createPopupComponentAdapter(com.intellij.openapi.ui.popup.PopupChooserBuilder,javax.swing.JList):com.intellij.openapi.ui.popup.PopupChooserBuilder$PopupComponentAdapter
- p:createPopupComponentAdapter(com.intellij.openapi.ui.popup.PopupChooserBuilder,javax.swing.JTable):com.intellij.openapi.ui.popup.PopupChooserBuilder$PopupComponentAdapter
- p:createPopupComponentAdapter(com.intellij.openapi.ui.popup.PopupChooserBuilder,javax.swing.JTree):com.intellij.openapi.ui.popup.PopupChooserBuilder$PopupComponentAdapter
- createTree(com.intellij.openapi.ui.popup.JBPopup,com.intellij.openapi.ui.popup.TreePopupStep,java.lang.Object):com.intellij.openapi.ui.popup.TreePopup
- createTree(com.intellij.openapi.ui.popup.TreePopupStep):com.intellij.openapi.ui.popup.TreePopup
- p:fillDialogBalloonBuilder(com.intellij.openapi.ui.popup.BalloonBuilder,java.lang.String):com.intellij.openapi.ui.popup.BalloonBuilder
- getCenterOf(javax.swing.JComponent,javax.swing.JComponent):java.awt.Point
- getChildPopups(java.awt.Component):java.util.List
- getParentBalloonFor(java.awt.Component):com.intellij.openapi.ui.popup.Balloon
- guessBestPopupLocation(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ui.awt.RelativePoint
- guessBestPopupLocation(com.intellij.openapi.actionSystem.DataContext):com.intellij.ui.awt.RelativePoint
- guessBestPopupLocation(com.intellij.openapi.editor.Editor):com.intellij.ui.awt.RelativePoint
- guessBestPopupLocation(javax.swing.JComponent):com.intellij.ui.awt.RelativePoint
- isBestPopupLocationVisible(com.intellij.openapi.editor.Editor):Z
- isPopupActive():Z
c:com.intellij.ui.popup.PopupFactoryImpl$ActionGroupPopup
- com.intellij.ui.popup.list.ListPopupImpl
- p:<init>(com.intellij.ui.popup.WizardPopup,com.intellij.openapi.ui.popup.ListPopupStep,java.lang.Runnable,com.intellij.openapi.actionSystem.DataContext,I):V
- <init>(com.intellij.ui.popup.WizardPopup,java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.impl.PresentationFactory,com.intellij.ui.popup.ActionPopupOptions,java.lang.Runnable):V
- <init>(com.intellij.ui.popup.WizardPopup,java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,java.lang.Runnable,I,com.intellij.openapi.util.Condition,java.lang.String,com.intellij.openapi.actionSystem.impl.PresentationFactory,Z):V
- <init>(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,java.lang.Runnable,I,com.intellij.openapi.util.Condition,java.lang.String):V
- <init>(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,java.lang.Runnable,I,com.intellij.openapi.util.Condition,java.lang.String,com.intellij.openapi.actionSystem.impl.PresentationFactory,Z):V
- <init>(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,java.lang.Runnable,I,com.intellij.openapi.util.Condition,java.lang.String,Z):V
- ps:createStep(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.impl.PresentationFactory,com.intellij.ui.popup.ActionPopupOptions):com.intellij.openapi.ui.popup.ListPopupStep
- dispose():V
- p:handleLeftKeyPressed(java.awt.event.KeyEvent):V
- p:handleRightKeyPressed(java.awt.event.KeyEvent):V
- handleSelect(Z,java.awt.event.InputEvent):V
- p:handleToggleAction(java.awt.event.InputEvent):V
- registerShortcuts():V
f:com.intellij.ui.popup.PopupFactoryImpl$ActionItem
- com.intellij.openapi.actionSystem.AnActionHolder
- com.intellij.openapi.actionSystem.ShortcutProvider
- com.intellij.ui.popup.NumericMnemonicItem
- digitMnemonicsEnabled():Z
- getAction():com.intellij.openapi.actionSystem.AnAction
- getClientProperty(com.intellij.openapi.util.Key):java.lang.Object
- getDescription():java.lang.String
- getIcon(Z):javax.swing.Icon
- getInlineItems():java.util.List
- getKeepPopupOnPerform():com.intellij.openapi.actionSystem.KeepPopupOnPerform
- getMnemonicChar():java.lang.Character
- getSeparatorText():java.lang.String
- getShortcut():com.intellij.openapi.actionSystem.ShortcutSet
- getText():java.lang.String
- getTooltip():java.lang.String
- isEnabled():Z
- isPerformGroup():Z
- isPrependWithSeparator():Z
- isSubstepSuppressed():Z
- setSeparatorText(java.lang.String):V
com.intellij.ui.popup.PopupOwner
- a:getBestPopupPosition():java.awt.Point
- getPopupComponent():javax.swing.JComponent
c:com.intellij.ui.popup.StateActionGroupPopup
- com.intellij.ui.popup.PopupFactoryImpl$ActionGroupPopup
- <init>(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.impl.PresentationFactory,com.intellij.ui.popup.ActionPopupOptions,java.lang.Runnable,kotlin.jvm.functions.Function1):V
- p:createPopup(com.intellij.ui.popup.WizardPopup,com.intellij.openapi.ui.popup.PopupStep,java.lang.Object):com.intellij.ui.popup.WizardPopup
- f:getGetState():kotlin.jvm.functions.Function1
- p:getListElementRenderer():javax.swing.ListCellRenderer
a:com.intellij.ui.popup.WizardPopup
- com.intellij.ui.popup.AbstractPopup
- com.intellij.ui.speedSearch.ElementFilter
- java.awt.event.ActionListener
- psf:STEP_X_PADDING:I
- p:myChild:com.intellij.ui.popup.WizardPopup
- pf:myStep:com.intellij.openapi.ui.popup.PopupStep
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.ui.popup.JBPopup,com.intellij.openapi.ui.popup.PopupStep):V
- f:actionPerformed(java.awt.event.ActionEvent):V
- p:afterShow():V
- cancel(java.awt.event.InputEvent):V
- pa:createContent():javax.swing.JComponent
- p:createContentPanel(Z,com.intellij.ui.PopupBorder,Z):com.intellij.ui.popup.AbstractPopup$MyContentPanel
- p:createPopup(com.intellij.ui.popup.WizardPopup,com.intellij.openapi.ui.popup.PopupStep,java.lang.Object):com.intellij.ui.popup.WizardPopup
- p:createPopupComponent(javax.swing.JComponent):javax.swing.JComponent
- p:createScrollPane(javax.swing.JComponent):javax.swing.JScrollPane
- f:dispatch(java.awt.event.KeyEvent):Z
- dispose():V
- p:disposeAllParents(java.awt.event.InputEvent):V
- disposeChildren():V
- p:getActionForKeyStroke(javax.swing.KeyStroke):java.lang.String
- pa:getActionMap():javax.swing.ActionMap
- getBounds():java.awt.Rectangle
- pa:getInputMap():javax.swing.InputMap
- getParent():com.intellij.ui.popup.WizardPopup
- pa:getPreferredFocusableComponent():javax.swing.JComponent
- getSpeedSearch():com.intellij.ui.speedSearch.SpeedSearch
- getStep():com.intellij.openapi.ui.popup.PopupStep
- goBack():V
- isAlignByParentBounds():Z
- isCancelKeyEnabled():Z
- p:isResizable():Z
- pf:notifyParentOnChildSelection():V
- p:onAutoSelectionTimer():V
- pa:onChildSelectedFor(java.lang.Object):V
- p:onSelectByMnemonic(java.lang.Object):V
- p:process(java.awt.event.KeyEvent):V
- p:processKeyEvent(java.awt.event.KeyEvent):V
- f:registerAction(java.lang.String,I,I,javax.swing.Action):V
- f:registerAction(java.lang.String,javax.swing.KeyStroke,javax.swing.Action):V
- pf:restartTimer():V
- setActiveRoot(Z):V
- setAlignByParentBounds(Z):V
- f:setFinalRunnable(java.lang.Runnable):V
- setOk(Z):V
- pf:setParentValue(java.lang.Object):V
- shouldBeShowing(java.lang.Object):Z
- pf:stopTimer():V
f:com.intellij.ui.popup.async.AsyncPopupStep
- com.intellij.openapi.ui.popup.PopupStep
- <init>(org.jetbrains.concurrency.Promise):V
- canceled():V
- getFinalRunnable():java.lang.Runnable
- getMnemonicNavigationFilter():com.intellij.openapi.ui.popup.MnemonicNavigationFilter
- f:getPromise():org.jetbrains.concurrency.Promise
- getSpeedSearchFilter():com.intellij.openapi.ui.popup.SpeedSearchFilter
- getTitle():java.lang.Void
- hasSubstep(java.lang.Object):Z
- isAutoSelectionEnabled():Z
- isMnemonicsNavigationEnabled():Z
- isSpeedSearchEnabled():Z
- onChosen(java.lang.Object,Z):com.intellij.openapi.ui.popup.PopupStep
c:com.intellij.ui.popup.list.ComboBoxPopup
- com.intellij.ui.popup.list.ListPopupImpl
- sf:COMBO_ITEM_BORDER:com.intellij.util.ui.JBEmptyBorder
- <init>(com.intellij.ui.popup.list.ComboBoxPopup$Context,java.lang.Object,java.util.function.Consumer):V
- p:createPopup(com.intellij.ui.popup.WizardPopup,com.intellij.openapi.ui.popup.PopupStep,java.lang.Object):com.intellij.ui.popup.WizardPopup
- p:createPopupComponent(javax.swing.JComponent):javax.swing.JComponent
- getCaptionAboveOf(java.lang.Object):java.lang.String
- getList():javax.swing.JList
- p:getListElementRenderer():javax.swing.ListCellRenderer
- s:isRendererWithInsets(javax.swing.ListCellRenderer):Z
- isSeparatorAboveOf(java.lang.Object):java.lang.Boolean
- syncWithModelChange():V
com.intellij.ui.popup.list.ComboBoxPopup$Context
- configureList(javax.swing.JList):V
- customizeListRendererComponent(javax.swing.JComponent):V
- getMaximumRowCount():I
- a:getModel():javax.swing.ListModel
- a:getProject():com.intellij.openapi.project.Project
- a:getRenderer():javax.swing.ListCellRenderer
- onPopupStepCancelled():V
com.intellij.ui.popup.list.ComboBoxPopup$SelectionListener
- java.util.EventListener
- a:setSelectedItem(java.lang.Object):V
com.intellij.ui.popup.list.FilterableListPopupStep
- com.intellij.openapi.ui.popup.ListPopupStep
- a:updateFilter(java.lang.String):V
c:com.intellij.ui.popup.list.ListPopupImpl
- com.intellij.ui.popup.WizardPopup
- com.intellij.openapi.ui.popup.ListPopup
- com.intellij.openapi.ui.popup.ListPopupStep$ListPopupModelListener
- com.intellij.ui.popup.NextStepHandler
- pf:myInlineActionsSupport:com.intellij.ui.popup.list.PopupInlineActionsSupport
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.ui.popup.ListPopupStep):V
- <init>(com.intellij.openapi.project.Project,com.intellij.ui.popup.WizardPopup,com.intellij.openapi.ui.popup.ListPopupStep,java.lang.Object):V
- <init>(com.intellij.openapi.ui.popup.ListPopupStep):V
- addListSelectionListener(javax.swing.event.ListSelectionListener):V
- p:afterShowSync():V
- p:beforeShow():Z
- p:createContent():javax.swing.JComponent
- p:createKeyEvent(java.awt.event.ActionEvent,I):java.awt.event.KeyEvent
- dispose():V
- disposeChildren():V
- p:getActionMap():javax.swing.ActionMap
- p:getCellBounds(I):java.awt.Rectangle
- p:getInputMap():javax.swing.InputMap
- getList():javax.swing.JList
- p:getListElementRenderer():javax.swing.ListCellRenderer
- p:getListModel():com.intellij.ui.popup.list.ListPopupModel
- getListStep():com.intellij.openapi.ui.popup.ListPopupStep
- getOriginalSelectedIndex():I
- p:getPreferredFocusableComponent():javax.swing.JComponent
- p:getSelectedIndex():I
- getSelectedValues():java.lang.Object[]
- goBack():V
- p:handleFinalChoices(java.awt.event.MouseEvent,java.lang.Object,com.intellij.openapi.ui.popup.ListPopupStep):Z
- p:handleLeftKeyPressed(java.awt.event.KeyEvent):V
- handleNextStep(com.intellij.openapi.ui.popup.PopupStep,java.lang.Object):V
- handleNextStep(com.intellij.openapi.ui.popup.PopupStep,java.lang.Object,java.awt.event.InputEvent):Z
- p:handleRightKeyPressed(java.awt.event.KeyEvent):V
- handleSelect(Z):V
- handleSelect(Z,java.awt.event.InputEvent):V
- p:isActionClick(java.awt.event.MouseEvent):Z
- isModalContext():Z
- p:onAutoSelectionTimer():V
- p:onChildSelectedFor(java.lang.Object):V
- onModelChanged():V
- p:onSelectByMnemonic(java.lang.Object):V
- p:onSpeedSearchPatternChanged():V
- p:process(java.awt.event.KeyEvent):V
- selectAndExecuteValue(java.lang.Object):V
- selectAndExpandValue(java.lang.Object):V
- setExecuteExpandedItemOnClick(Z):V
- setHandleAutoSelectionBeforeShow(Z):V
- setMaxRowCount(I):V
- setShowSubmenuOnHover(Z):V
- p:shouldUseStatistics():Z
- showInBestPositionFor(com.intellij.openapi.editor.Editor):V
- showUnderneathOfLabel(javax.swing.JLabel):V
f:com.intellij.ui.popup.list.ListPopupModel
- javax.swing.AbstractListModel
- <init>(com.intellij.ui.speedSearch.ElementFilter,com.intellij.ui.speedSearch.SpeedSearch,com.intellij.openapi.ui.popup.ListPopupStep):V
- deleteItem(java.lang.Object):V
- get(I):java.lang.Object
- getCaptionAboveOf(java.lang.Object):java.lang.String
- getClosestMatchIndex():I
- getElementAt(I):java.lang.Object
- getOriginalIndex(I):I
- getSize():I
- isSeparatorAboveOf(java.lang.Object):Z
- isVisible(java.lang.Object):Z
- refilter():V
- syncModel():V
- updateOriginalList():V
com.intellij.ui.popup.list.ListPopupWrapper
- com.intellij.openapi.ui.popup.ListPopup
- sf:Companion:com.intellij.ui.popup.list.ListPopupWrapper$Companion
- a:getBasePopup():com.intellij.openapi.ui.popup.ListPopup
- s:getRootPopup(com.intellij.openapi.ui.popup.ListPopup):com.intellij.openapi.ui.popup.ListPopup
f:com.intellij.ui.popup.list.ListPopupWrapper$Companion
- f:getRootPopup(com.intellij.openapi.ui.popup.ListPopup):com.intellij.openapi.ui.popup.ListPopup
c:com.intellij.ui.popup.list.PopupListElementRenderer
- com.intellij.ui.popup.list.GroupedItemsListRenderer
- sf:CUSTOM_KEY_STROKE_TEXT:com.intellij.openapi.util.Key
- p:myButtonSeparator:javax.swing.JComponent
- p:myIconBar:javax.swing.JComponent
- p:myIconLabel:javax.swing.JLabel
- p:myMnemonicLabel:javax.swing.JLabel
- pf:myPopup:com.intellij.ui.popup.list.ListPopupImpl
- <init>(com.intellij.ui.popup.list.ListPopupImpl):V
- ps:createButtonsSeparator():javax.swing.JComponent
- p:createIconBar():javax.swing.JComponent
- p:createItemComponent():javax.swing.JComponent
- p:createLabel():V
- p:createSeparator():com.intellij.ui.SeparatorWithText
- p:customizeComponent(javax.swing.JList,java.lang.Object,Z):V
- p:getBackground():java.awt.Color
- p:getDelegateAccessibleName():java.lang.String
- getPopup():com.intellij.ui.popup.list.ListPopupImpl
- p:isShowSecondaryIcon():Z
- p:isShowSecondaryText():Z
- p:layoutComponent(javax.swing.JComponent):javax.swing.JComponent
- p:setComponentIcon(javax.swing.Icon,javax.swing.Icon):V
f:com.intellij.ui.popup.mock.MockConfirmation
- com.intellij.ui.popup.list.ListPopupImpl
- <init>(com.intellij.openapi.ui.popup.ListPopupStep,java.lang.String):V
- showInCenterOf(java.awt.Component):V
- showUnderneathOf(java.awt.Component):V
c:com.intellij.ui.popup.tree.TreePopupImpl
- com.intellij.ui.popup.WizardPopup
- com.intellij.openapi.ui.popup.TreePopup
- com.intellij.ui.popup.NextStepHandler
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.ui.popup.JBPopup,com.intellij.openapi.ui.popup.TreePopupStep,java.lang.Object):V
- p:afterShow():V
- p:beforeShow():Z
- collapseAll():V
- p:createContent():javax.swing.JComponent
- dispose():V
- expandAll():V
- p:extractUserObject(java.lang.Object):java.lang.Object
- p:getActionMap():javax.swing.ActionMap
- p:getInputMap():javax.swing.InputMap
- p:getPreferredFocusableComponent():javax.swing.JComponent
- handleNextStep(com.intellij.openapi.ui.popup.PopupStep,java.lang.Object):V
- p:handleSelect(Z,java.awt.event.MouseEvent):V
- isModalContext():Z
- p:onAutoSelectionTimer():V
- p:onChildSelectedFor(java.lang.Object):V
- p:onSpeedSearchPatternChanged():V
- p:process(java.awt.event.KeyEvent):V
- scrollToSelection():V
- p:selectFirstSelectableItem():V
c:com.intellij.ui.render.IconCompOptionalCompPanel
- com.intellij.ui.popup.list.SelectablePanel
- <init>(javax.swing.JComponent):V
- f:getCenter():javax.swing.JComponent
- f:getRight():javax.swing.JComponent
- f:setRight(javax.swing.JComponent):V
c:com.intellij.ui.render.LabelBasedRenderer
- javax.swing.JLabel
- <init>():V
- firePropertyChange(java.lang.String,B,B):V
- firePropertyChange(java.lang.String,C,C):V
- firePropertyChange(java.lang.String,D,D):V
- firePropertyChange(java.lang.String,F,F):V
- firePropertyChange(java.lang.String,I,I):V
- firePropertyChange(java.lang.String,J,J):V
- p:firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object):V
- firePropertyChange(java.lang.String,S,S):V
- firePropertyChange(java.lang.String,Z,Z):V
- invalidate():V
- repaint():V
- repaint(J,I,I,I,I):V
- repaint(java.awt.Rectangle):V
- revalidate():V
- validate():V
f:com.intellij.ui.render.LabelBasedRenderer$List
- com.intellij.ui.render.LabelBasedRenderer
- javax.swing.ListCellRenderer
- <init>():V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
c:com.intellij.ui.render.LabelBasedRenderer$Tree
- com.intellij.ui.render.LabelBasedRenderer
- javax.swing.tree.TreeCellRenderer
- <init>():V
- getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):java.awt.Component
f:com.intellij.ui.render.RenderingHelper
- sf:SHRINK_LONG_RENDERER:com.intellij.openapi.util.Key
- sf:SHRINK_LONG_SELECTION:com.intellij.openapi.util.Key
- getHeight():I
- getRightMargin():I
- getWidth():I
- getX():I
- getY():I
- isExpandableHintShown(I):Z
- isRendererShrinkingDisabled(I):Z
- isShrinkingSelectionDisabled(I):Z
f:com.intellij.ui.stripe.ErrorStripe
- java.lang.Comparable
- compareTo(com.intellij.ui.stripe.ErrorStripe):I
- s:create(java.awt.Color,I):com.intellij.ui.stripe.ErrorStripe
- equals(java.lang.Object):Z
- getColor():java.awt.Color
- getLayer():I
- hashCode():I
c:com.intellij.ui.stripe.ErrorStripePainter
- com.intellij.util.ui.RegionPainter$Image
- <init>(Z):V
- addErrorStripe(I,com.intellij.ui.stripe.ErrorStripe):V
- clear():V
- clear(I):V
- p:createImage(I,I):java.awt.image.BufferedImage
- findIndex(I,I):I
- isModified():Z
- paint(java.awt.Graphics2D,I,I,I,I,java.lang.Object):V
- setErrorStripeCount(I):V
- setErrorStripeGap(I):V
- setMaximalThickness(I):V
- setMinimalThickness(I):V
- p:updateImage(java.awt.image.BufferedImage):V
e:com.intellij.ui.stripe.ErrorStripePainter$Alignment
- java.lang.Enum
- sf:BOTTOM:com.intellij.ui.stripe.ErrorStripePainter$Alignment
- sf:CENTER:com.intellij.ui.stripe.ErrorStripePainter$Alignment
- sf:TOP:com.intellij.ui.stripe.ErrorStripePainter$Alignment
- s:valueOf(java.lang.String):com.intellij.ui.stripe.ErrorStripePainter$Alignment
- s:values():com.intellij.ui.stripe.ErrorStripePainter$Alignment[]
c:com.intellij.ui.stripe.TreeUpdater
- com.intellij.openapi.Disposable
- <init>(com.intellij.ui.stripe.ErrorStripePainter,javax.swing.JScrollPane,javax.swing.JTree):V
- dispose():V
- p:onSelect(com.intellij.ui.stripe.ErrorStripePainter,I):V
- p:update(com.intellij.ui.stripe.ErrorStripePainter):V
- p:update(com.intellij.ui.stripe.ErrorStripePainter,javax.swing.JTree):V
a:com.intellij.ui.tree.AbstractTreeNodeVisitor
- com.intellij.ui.tree.TreeVisitor
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- <init>(java.util.function.Supplier,java.util.function.Predicate):V
- p:contains(com.intellij.ide.util.treeView.AbstractTreeNode,java.lang.Object):Z
- p:getContent(com.intellij.ide.util.treeView.AbstractTreeNode):java.lang.Object
- f:getElement():java.lang.Object
- p:isAncestor(java.lang.Object,java.lang.Object):Z
- p:matches(com.intellij.ide.util.treeView.AbstractTreeNode,java.lang.Object):Z
- visit(javax.swing.tree.TreePath):com.intellij.ui.tree.TreeVisitor$Action
- p:visit(javax.swing.tree.TreePath,com.intellij.ide.util.treeView.AbstractTreeNode,java.lang.Object):com.intellij.ui.tree.TreeVisitor$Action
- visitThread():com.intellij.ui.tree.TreeVisitor$VisitThread
a:com.intellij.ui.tree.AbstractTreeWalker
- <init>(com.intellij.ui.tree.TreeVisitor):V
- <init>(com.intellij.ui.tree.TreeVisitor,java.util.function.Function):V
- promise():org.jetbrains.concurrency.Promise
- setChildren(java.util.Collection):V
- setError(java.lang.Throwable):V
- start(java.lang.Object):V
- start(javax.swing.tree.TreePath,java.lang.Object):V
f:com.intellij.ui.tree.AsyncTreeModel
- com.intellij.ui.tree.Searchable
- com.intellij.ui.tree.TreeVisitor$LoadingAwareAcceptor
- com.intellij.ui.treeStructure.BgtAwareTreeModel
- com.intellij.util.ui.tree.AbstractTreeModel
- <init>(javax.swing.tree.TreeModel,com.intellij.openapi.Disposable):V
- <init>(javax.swing.tree.TreeModel,Z,com.intellij.openapi.Disposable):V
- accept(com.intellij.ui.tree.TreeVisitor):org.jetbrains.concurrency.Promise
- accept(com.intellij.ui.tree.TreeVisitor,Z):org.jetbrains.concurrency.Promise
- dispose():V
- getChild(java.lang.Object,I):java.lang.Object
- getChildCount(java.lang.Object):I
- getIndexOfChild(java.lang.Object,java.lang.Object):I
- getRoot():java.lang.Object
- getTreePath(java.lang.Object):org.jetbrains.concurrency.Promise
- isLeaf(java.lang.Object):Z
- isProcessing():Z
- onValidThread(java.lang.Runnable):V
- resolve(javax.swing.tree.TreePath):org.jetbrains.concurrency.Promise
- setRootImmediately(java.lang.Object):V
- treeNodesChanged(javax.swing.tree.TreePath):V
- treeNodesInserted(javax.swing.tree.TreePath):V
- treeNodesRemoved(javax.swing.tree.TreePath):V
- treeStructureChanged(javax.swing.tree.TreePath):V
- valueForPathChanged(javax.swing.tree.TreePath,java.lang.Object):V
a:com.intellij.ui.tree.BaseTreeModel
- com.intellij.util.ui.tree.AbstractTreeModel
- com.intellij.ui.tree.ChildrenProvider
- <init>():V
- getChild(java.lang.Object,I):java.lang.Object
- getChildCount(java.lang.Object):I
- getIndexOfChild(java.lang.Object,java.lang.Object):I
- isLeaf(java.lang.Object):Z
com.intellij.ui.tree.ChildrenProvider
- a:getChildren(java.lang.Object):java.util.List
f:com.intellij.ui.tree.FilteringTreeModel
- com.intellij.ui.tree.StructureTreeModel
- s:createModel(com.intellij.ide.util.treeView.AbstractTreeStructure,com.intellij.ui.speedSearch.ElementFilter,com.intellij.openapi.Disposable):com.intellij.ui.tree.FilteringTreeModel
- s:createModel(com.intellij.ide.util.treeView.AbstractTreeStructure,com.intellij.ui.speedSearch.ElementFilter,com.intellij.util.concurrency.Invoker,com.intellij.openapi.Disposable):com.intellij.ui.tree.FilteringTreeModel
- updateTree(javax.swing.JTree,Z,java.lang.Object):V
f:com.intellij.ui.tree.RestoreSelectionListener
- javax.swing.event.TreeSelectionListener
- <init>():V
- valueChanged(javax.swing.event.TreeSelectionEvent):V
com.intellij.ui.tree.Searchable
- a:getTreePath(java.lang.Object):org.jetbrains.concurrency.Promise
c:com.intellij.ui.tree.StructureTreeModel
- com.intellij.util.ui.tree.AbstractTreeModel
- com.intellij.openapi.Disposable
- com.intellij.ui.tree.ChildrenProvider
- com.intellij.util.concurrency.InvokerSupplier
- <init>(com.intellij.ide.util.treeView.AbstractTreeStructure,com.intellij.openapi.Disposable):V
- <init>(com.intellij.ide.util.treeView.AbstractTreeStructure,java.util.Comparator,com.intellij.openapi.Disposable):V
- <init>(com.intellij.ide.util.treeView.AbstractTreeStructure,java.util.Comparator,com.intellij.util.concurrency.Invoker,com.intellij.openapi.Disposable):V
- dispose():V
- f:expand(java.lang.Object,javax.swing.JTree,java.util.function.Consumer):V
- f:getChild(java.lang.Object,I):javax.swing.tree.TreeNode
- f:getChildCount(java.lang.Object):I
- f:getChildren(java.lang.Object):java.util.List
- f:getIndexOfChild(java.lang.Object,java.lang.Object):I
- f:getInvoker():com.intellij.util.concurrency.Invoker
- f:getRoot():javax.swing.tree.TreeNode
- f:getRootImmediately():javax.swing.tree.TreeNode
- getTreeStructure():com.intellij.ide.util.treeView.AbstractTreeStructure
- f:invalidate():org.jetbrains.concurrency.Promise
- f:invalidate(java.lang.Object,Z):org.jetbrains.concurrency.Promise
- f:invalidate(javax.swing.tree.TreePath,Z):org.jetbrains.concurrency.Promise
- f:invalidateAsync():java.util.concurrent.CompletableFuture
- f:invalidateAsync(java.lang.Object,Z):java.util.concurrent.CompletableFuture
- f:isLeaf(java.lang.Object):Z
- f:makeVisible(java.lang.Object,javax.swing.JTree,java.util.function.Consumer):V
- f:promiseVisitor(java.lang.Object):org.jetbrains.concurrency.Promise
- f:select(java.lang.Object,javax.swing.JTree,java.util.function.Consumer):V
- f:setComparator(java.util.Comparator):V
f:com.intellij.ui.tree.TreePathUtil
- <init>():V
- s:convertArrayToTreePath(java.lang.Object[]):javax.swing.tree.TreePath
- s:convertArrayToTreePath(java.lang.Object[],java.util.function.Function):javax.swing.tree.TreePath
- s:convertCollectionToTreePath(java.lang.Iterable):javax.swing.tree.TreePath
- s:convertCollectionToTreePath(java.lang.Iterable,java.util.function.Function):javax.swing.tree.TreePath
- s:convertTreePathToArray(javax.swing.tree.TreePath):java.lang.Object[]
- s:convertTreePathToArray(javax.swing.tree.TreePath,java.util.function.Function):java.lang.Object[]
- s:convertTreePathToStrings(javax.swing.tree.TreePath):java.lang.String[]
- s:createTreePath(javax.swing.tree.TreePath,java.lang.Object):javax.swing.tree.TreePath
- s:findAncestor(javax.swing.tree.TreePath,java.util.function.Predicate):javax.swing.tree.TreePath
- s:findCommonAncestor(java.lang.Iterable):javax.swing.tree.TreePath
- s:findCommonAncestor(javax.swing.tree.TreePath[]):javax.swing.tree.TreePath
- s:pathToCustomNode(java.lang.Object,java.util.function.Function):javax.swing.tree.TreePath
- s:pathToCustomNode(java.lang.Object,java.util.function.Function,java.util.function.Function):javax.swing.tree.TreePath
- s:pathToTreeNode(javax.swing.tree.TreeNode):javax.swing.tree.TreePath
- s:pathToTreeNode(javax.swing.tree.TreeNode,java.util.function.Function):javax.swing.tree.TreePath
- s:toTreeNode(javax.swing.tree.TreePath):javax.swing.tree.TreeNode
- s:toTreeNodes(javax.swing.tree.TreePath[]):javax.swing.tree.TreeNode[]
- s:toTreePath(javax.swing.tree.TreeNode):javax.swing.tree.TreePath
- s:toTreePathArray(java.util.Collection):javax.swing.tree.TreePath[]
- s:toTreePaths(javax.swing.tree.TreeNode[]):javax.swing.tree.TreePath[]
com.intellij.ui.tree.project.ProjectFileNode
- contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.extensions.AreaInstance,Z):Z
- s:findArea(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.extensions.AreaInstance
- s:findBaseDir(com.intellij.openapi.project.Project):com.intellij.openapi.vfs.VirtualFile
- a:getRootID():java.lang.Object
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
a:com.intellij.ui.tree.project.ProjectFileNodeUpdater
- <init>(com.intellij.openapi.project.Project,com.intellij.util.concurrency.Invoker):V
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- p:getUpdatingDelay():I
- updateFromElement(com.intellij.psi.PsiElement):V
- updateFromFile(com.intellij.openapi.vfs.VirtualFile):V
- updateFromRoot():V
- updateImmediately(java.lang.Runnable):V
- pa:updateStructure(Z,java.util.Set):V
com.intellij.ui.tree.ui.Control
- sf:CUSTOM_CONTROL:com.intellij.openapi.util.Key
- a:getHeight():I
- a:getIcon(Z,Z):javax.swing.Icon
- a:getWidth():I
- a:paint(java.awt.Component,java.awt.Graphics,I,I,I,I,Z,Z):V
com.intellij.ui.tree.ui.Control$Painter
- sf:COMPACT:com.intellij.ui.tree.ui.Control$Painter
- sf:DEFAULT:com.intellij.ui.tree.ui.Control$Painter
- sf:KEY:com.intellij.openapi.util.Key
- sf:LEAF_WITHOUT_INDENT:com.intellij.ui.tree.ui.Control$Painter
- sf:LINE_COLOR:com.intellij.ui.JBColor
- a:getControlOffset(com.intellij.ui.tree.ui.Control,I,Z):I
- a:getRendererOffset(com.intellij.ui.tree.ui.Control,I,Z):I
- a:paint(java.awt.Component,java.awt.Graphics,I,I,I,I,com.intellij.ui.tree.ui.Control,I,Z,Z,Z):V
f:com.intellij.ui.tree.ui.DefaultControl
- com.intellij.ui.tree.ui.Control
- <init>():V
- <init>(javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon):V
- getHeight():I
- getIcon(Z,Z):javax.swing.Icon
- getWidth():I
- paint(java.awt.Component,java.awt.Graphics,I,I,I,I,Z,Z):V
c:com.intellij.ui.tree.ui.DefaultTreeUI
- javax.swing.plaf.basic.BasicTreeUI
- sf:AUTO_EXPAND_ALLOWED:com.intellij.openapi.util.Key
- sf:AUTO_EXPAND_FILTER:com.intellij.openapi.util.Key
- <init>():V
- beginBulkOperation():V
- cancelEditing(javax.swing.JTree):V
- p:completeEditing():V
- p:configureLayoutCache():V
- p:createLayoutCache():javax.swing.tree.AbstractLayoutCache
- p:createMouseListener():java.awt.event.MouseListener
- p:createNodeDimensions():javax.swing.tree.AbstractLayoutCache$NodeDimensions
- p:createPropertyChangeListener():java.beans.PropertyChangeListener
- p:createTreeExpansionListener():javax.swing.event.TreeExpansionListener
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- endBulkOperation():V
- getClosestPathForLocation(javax.swing.JTree,I,I):javax.swing.tree.TreePath
- getEditingPath(javax.swing.JTree):javax.swing.tree.TreePath
- getPathBounds(javax.swing.JTree,javax.swing.tree.TreePath):java.awt.Rectangle
- getPathForRow(javax.swing.JTree,I):javax.swing.tree.TreePath
- getPreferredSize(javax.swing.JComponent,Z):java.awt.Dimension
- getRowCount(javax.swing.JTree):I
- getRowForPath(javax.swing.JTree,javax.swing.tree.TreePath):I
- p:getRowX(I,I):I
- p:installDefaults():V
- p:installKeyboardActions():V
- isEditing(javax.swing.JTree):Z
- p:isLocationInExpandControl(javax.swing.tree.TreePath,I,I):Z
- p:isToggleEvent(java.awt.event.MouseEvent):Z
- paint(java.awt.Graphics,javax.swing.JComponent):V
- p:setLargeModel(Z):V
- p:setModel(javax.swing.tree.TreeModel):V
- p:setRootVisible(Z):V
- startEditingAtPath(javax.swing.JTree,javax.swing.tree.TreePath):V
- stopEditing(javax.swing.JTree):Z
- p:toggleExpandState(javax.swing.tree.TreePath):V
- p:updateCachedPreferredSize():V
- p:updateSize():V
com.intellij.ui.tree.ui.PlainSelectionTree
a:com.intellij.ui.wizard.WizardAction
- javax.swing.AbstractAction
- p:myModel:com.intellij.ui.wizard.WizardModel
- <init>(java.lang.String,com.intellij.ui.wizard.WizardModel):V
- p:setMnemonic(C):V
- f:setName(java.lang.String):V
f:com.intellij.ui.wizard.WizardAction$Cancel
- com.intellij.ui.wizard.WizardAction
- <init>(com.intellij.ui.wizard.WizardModel):V
- actionPerformed(java.awt.event.ActionEvent):V
f:com.intellij.ui.wizard.WizardAction$Finish
- com.intellij.ui.wizard.WizardAction
- <init>(com.intellij.ui.wizard.WizardModel):V
- actionPerformed(java.awt.event.ActionEvent):V
f:com.intellij.ui.wizard.WizardAction$Next
- com.intellij.ui.wizard.WizardAction
- <init>(com.intellij.ui.wizard.WizardModel):V
- actionPerformed(java.awt.event.ActionEvent):V
f:com.intellij.ui.wizard.WizardAction$Previous
- com.intellij.ui.wizard.WizardAction
- <init>(com.intellij.ui.wizard.WizardModel):V
- actionPerformed(java.awt.event.ActionEvent):V
c:com.intellij.ui.wizard.WizardDialog
- com.intellij.openapi.ui.DialogWrapper
- sf:EMPTY:com.intellij.ui.wizard.WizardCallback
- pf:myModel:com.intellij.ui.wizard.WizardModel
- <init>(com.intellij.openapi.project.Project,Z,com.intellij.ui.wizard.WizardModel):V
- <init>(java.awt.Component,Z,com.intellij.ui.wizard.WizardModel):V
- <init>(Z,com.intellij.ui.wizard.WizardModel):V
- <init>(Z,Z,com.intellij.ui.wizard.WizardModel):V
- p:createCenterPanel():javax.swing.JComponent
- p:createSouthPanel():javax.swing.JComponent
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getWindowPreferredSize():java.awt.Dimension
- p:init():V
- isWizardGoalAchieved():Z
- onStepChanged():V
- onWizardGoalAchieved():V
- onWizardGoalDropped():V
c:com.intellij.ui.wizard.WizardModel
- <init>(java.lang.String):V
- f:add(com.intellij.ui.wizard.WizardStep):com.intellij.ui.wizard.WizardStep
- f:addAfter(com.intellij.ui.wizard.WizardStep,com.intellij.ui.wizard.WizardStep):com.intellij.ui.wizard.WizardStep
- f:addBefore(com.intellij.ui.wizard.WizardStep,com.intellij.ui.wizard.WizardStep):com.intellij.ui.wizard.WizardStep
- f:cancel():V
- f:finish():V
- f:getCurrentComponent():javax.swing.JComponent
- f:getCurrentNavigationState():com.intellij.ui.wizard.WizardNavigationState
- f:getCurrentStep():com.intellij.ui.wizard.WizardStep
- f:getNextFor(com.intellij.ui.wizard.WizardStep):com.intellij.ui.wizard.WizardStep
- f:getPreviousFor(com.intellij.ui.wizard.WizardStep):com.intellij.ui.wizard.WizardStep
- getStepIndex(com.intellij.ui.wizard.WizardStep):I
- getTitle():java.lang.String
- isDone():Z
- isFirst(com.intellij.ui.wizard.WizardStep):Z
- isLast(com.intellij.ui.wizard.WizardStep):Z
- f:isWizardGoalAchieved():Z
- f:isWizardGoalDropped():Z
- f:next():V
- f:previous():V
f:com.intellij.ui.wizard.WizardNavigationState
- f:CANCEL:com.intellij.ui.wizard.WizardAction
- f:FINISH:com.intellij.ui.wizard.WizardAction
- f:NEXT:com.intellij.ui.wizard.WizardAction
- f:PREVIOUS:com.intellij.ui.wizard.WizardAction
- <init>(com.intellij.ui.wizard.WizardModel):V
- setEnabledToAll(Z):V
a:com.intellij.ui.wizard.WizardStep
- sf:FORCED_GOAL_ACHIEVED:com.intellij.ui.wizard.WizardStep
- sf:FORCED_GOAL_DROPPED:com.intellij.ui.wizard.WizardStep
- p:<init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String):V
- getExplanation():java.lang.String
- getHelpId():java.lang.String
- getIcon():javax.swing.Icon
- getPreferredFocusedComponent():javax.swing.JComponent
- getTitle():java.lang.String
- onCancel():Z
- onFinish():Z
- onNext(com.intellij.ui.wizard.WizardModel):com.intellij.ui.wizard.WizardStep
- onPrevious(com.intellij.ui.wizard.WizardModel):com.intellij.ui.wizard.WizardStep
- a:prepare(com.intellij.ui.wizard.WizardNavigationState):javax.swing.JComponent
f:com.intellij.ui.wizard.WizardStep$Empty
- com.intellij.ui.wizard.WizardStep
- <init>():V
- prepare(com.intellij.ui.wizard.WizardNavigationState):javax.swing.JComponent
c:com.intellij.util.BufferedListConsumer
- com.intellij.util.Consumer
- <init>(I,com.intellij.util.Consumer,I):V
- consume(java.util.List):V
- consumeOne(java.lang.Object):V
- flush():V
- getCnt():I
- p:invokeConsumer(java.lang.Runnable):V
f:com.intellij.util.ContentUtilEx
- com.intellij.util.ContentsUtil
- <init>():V
- s:addSplitTabbedContent(com.intellij.ui.content.ContentManager,com.intellij.ui.content.TabGroupId,com.intellij.ui.content.TabDescriptor,Z):V
- s:addTabbedContent(com.intellij.ui.content.ContentManager,com.intellij.ui.content.TabGroupId,com.intellij.ui.content.TabDescriptor,Z):V
- s:addTabbedContent(com.intellij.ui.content.ContentManager,javax.swing.JComponent,java.lang.String,java.lang.String,Z,com.intellij.openapi.Disposable):V
- s:addTabbedContent(com.intellij.ui.content.ContentManager,javax.swing.JComponent,java.lang.String,java.util.function.Supplier,java.util.function.Supplier,Z,com.intellij.openapi.Disposable):V
- s:closeContentTab(com.intellij.ui.content.ContentManager,com.intellij.openapi.util.Condition):Z
- s:findContentComponent(com.intellij.ui.content.ContentManager,com.intellij.openapi.util.Condition):javax.swing.JComponent
- s:findTabbedContent(com.intellij.ui.content.ContentManager,java.lang.String):com.intellij.ui.content.TabbedContent
- s:getFullName(java.lang.String,java.lang.String):java.lang.String
- s:getSelectedTab(com.intellij.ui.content.TabbedContent):I
- s:isSplitMode(com.intellij.ui.content.TabGroupId):Z
- s:isSplitMode(java.lang.String,Z):Z
- s:mergeTabs(com.intellij.ui.content.ContentManager,com.intellij.ui.content.TabGroupId):V
- s:selectContent(com.intellij.ui.content.ContentManager,javax.swing.JComponent,Z):Z
- s:setSplitMode(java.lang.String,Z):V
- s:updateTabbedContentDisplayName(com.intellij.ui.content.ContentManager,javax.swing.JComponent):V
f:com.intellij.util.IJSwingUtilities
- <init>():V
- s:createHyperlinkEvent(java.lang.String,java.lang.Object):javax.swing.event.HyperlinkEvent
- s:getFocusedComponentInWindowOrSelf(java.awt.Component):java.awt.Component
- s:hasFocus(java.awt.Component):Z
- s:hasFocus2(java.awt.Component):Z
- s:moveMousePointerOn(java.awt.Component):V
- s:updateComponentTreeUI(java.awt.Component):V
f:com.intellij.util.JdkBundle
- s:createBoot():com.intellij.util.JdkBundle
- s:createBundle(java.io.File):com.intellij.util.JdkBundle
- s:createBundled():com.intellij.util.JdkBundle
- getBundleVersion():com.intellij.util.lang.JavaVersion
- getHome():java.io.File
- getLocation():java.io.File
- getVMExecutable():java.io.File
- isBoot():Z
- isBundled():Z
- isJdk():Z
- isOperational():Z
f:com.intellij.util.PopupUtilsKt
- sf:getBestBalloonPosition(com.intellij.openapi.actionSystem.DataContext):com.intellij.ui.awt.RelativePoint
- sf:getBestPopupPosition(com.intellij.openapi.actionSystem.DataContext):com.intellij.ui.awt.RelativePoint
f:com.intellij.util.PsiErrorElementUtil
- s:hasErrors(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.util.Restarter
- s:getIdeStarter():java.nio.file.Path
- s:isSupported():Z
f:com.intellij.util.ScrambledInputStream
- java.io.InputStream
- <init>(java.io.InputStream):V
- available():I
- close():V
- mark(I):V
- markSupported():Z
- read():I
- read(B[],I,I):I
- reset():V
- skip(J):J
f:com.intellij.util.SwingBindingsKt
f:com.intellij.util.UriUtilKt
- sf:changeQuery(java.net.URI,java.net.URI,java.lang.String):java.net.URI
- sf:fromRawParts(java.net.URI,java.lang.String,Z,java.lang.String,java.lang.String,java.lang.String,I,java.lang.String,java.lang.String,java.lang.String,java.lang.String):java.net.URI
- sf:getFragmentParameters(java.net.URI):java.util.Map
- sf:getQueryParameters(java.net.URI):java.util.Map
- sf:newURIWithFragmentParameters(java.net.URI,java.util.Map):java.net.URI
- sf:withFragment(java.net.URI,java.lang.String):java.net.URI
- sf:withPath(java.net.URI,java.lang.String):java.net.URI
- sf:withPort(java.net.URI,I):java.net.URI
- sf:withQuery(java.net.URI,java.lang.String):java.net.URI
- sf:withScheme(java.net.URI,java.lang.String):java.net.URI
a:com.intellij.util.concurrency.Invoker
- com.intellij.openapi.Disposable
- f:compute(java.util.function.Supplier):org.jetbrains.concurrency.CancellablePromise
- f:computeAsync(java.util.function.Supplier):org.jetbrains.concurrency.CancellablePromise
- f:computeLater(java.util.function.Supplier):org.jetbrains.concurrency.CancellablePromise
- dispose():V
- s:forBackgroundPoolWithReadAction(com.intellij.openapi.Disposable):com.intellij.util.concurrency.Invoker
- s:forBackgroundPoolWithoutReadAction(com.intellij.openapi.Disposable):com.intellij.util.concurrency.Invoker
- s:forBackgroundThreadWithReadAction(com.intellij.openapi.Disposable):com.intellij.util.concurrency.Invoker
- s:forBackgroundThreadWithoutReadAction(com.intellij.openapi.Disposable):com.intellij.util.concurrency.Invoker
- s:forEventDispatchThread(com.intellij.openapi.Disposable):com.intellij.util.concurrency.Invoker
- f:getTaskCount():I
- f:invoke(java.lang.Runnable):org.jetbrains.concurrency.CancellablePromise
- f:invokeLater(java.lang.Runnable):org.jetbrains.concurrency.CancellablePromise
- f:invokeLater(java.lang.Runnable,I):org.jetbrains.concurrency.CancellablePromise
- isValidThread():Z
- f:runOrInvokeLater(java.lang.Runnable):org.jetbrains.concurrency.CancellablePromise
f:com.intellij.util.concurrency.Invoker$Background
- com.intellij.util.concurrency.Invoker
- <init>(com.intellij.openapi.Disposable,I):V
- isValidThread():Z
f:com.intellij.util.concurrency.Invoker$EDT
- com.intellij.util.concurrency.Invoker
- <init>(com.intellij.openapi.Disposable):V
- isValidThread():Z
com.intellij.util.concurrency.InvokerSupplier
- a:getInvoker():com.intellij.util.concurrency.Invoker
com.intellij.util.io.InputHandle
- java.io.Closeable
- close():V
- a:getInputStream():java.io.InputStream
f:com.intellij.util.io.SocketInputHandle
- com.intellij.util.io.InputHandle
- <init>():V
- <init>(I):V
- b:<init>(I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- close():V
- getInputStream():java.io.InputStream
- f:getLocalPort():I
f:com.intellij.util.io.StreamInputHandle
- com.intellij.util.io.InputHandle
- <init>(java.io.InputStream):V
- getInputStream():java.io.InputStream
f:com.intellij.util.io.UnixFifoInputHandle
- com.intellij.util.io.InputHandle
- sf:Companion:com.intellij.util.io.UnixFifoInputHandle$Companion
- <init>(java.nio.file.Path):V
- close():V
- getInputStream():java.io.InputStream
f:com.intellij.util.io.UnixFifoInputHandle$Companion
a:com.intellij.util.io.processHandshake.ProcessHandshakeLauncher
- <init>():V
- pa:createHandshakeTransport():com.intellij.util.io.processHandshake.ProcessHandshakeTransport
- pa:createProcessHandler(com.intellij.util.io.processHandshake.ProcessHandshakeTransport):com.intellij.execution.process.BaseOSProcessHandler
- pf:createProcessHandler(com.intellij.util.io.processHandshake.ProcessHandshakeTransport,com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.process.BaseOSProcessHandler
- p:getHandshakeTimeoutAfterLauncherFinishedMillis():J
- p:getLauncherOutputTimeoutAfterHandshakeFailedMillis():J
- p:handshakeFailed(com.intellij.util.io.processHandshake.ProcessHandshakeTransport,com.intellij.execution.process.BaseOSProcessHandler,com.intellij.execution.process.ProcessOutput,java.lang.String):java.lang.Void
- pa:handshakeSucceeded(java.lang.Object,com.intellij.util.io.processHandshake.ProcessHandshakeTransport,com.intellij.execution.process.BaseOSProcessHandler):java.lang.Object
- f:launch(kotlin.coroutines.Continuation):java.lang.Object
- f:launchAsync():kotlinx.coroutines.Deferred
- f:launchWithProgress(java.lang.String):java.lang.Object
com.intellij.util.io.processHandshake.ProcessHandshakeTransport
- java.io.Closeable
- createProcessHandler(com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.process.BaseOSProcessHandler
- a:readHandshake():java.lang.Object
com.intellij.util.io.socketConnection.AbstractRequest
- a:getId():I
com.intellij.util.io.socketConnection.AbstractResponse
com.intellij.util.io.socketConnection.AbstractResponseHandler
- a:processResponse(com.intellij.util.io.socketConnection.AbstractResponse):V
com.intellij.util.io.socketConnection.AbstractResponseToRequestHandler
- a:processResponse(com.intellij.util.io.socketConnection.AbstractResponse):Z
com.intellij.util.io.socketConnection.ClientSocketConnection
- com.intellij.util.io.socketConnection.SocketConnection
- a:startPolling():V
f:com.intellij.util.io.socketConnection.ConnectionState
- <init>(com.intellij.util.io.socketConnection.ConnectionStatus):V
- <init>(com.intellij.util.io.socketConnection.ConnectionStatus,java.lang.String,javax.swing.event.HyperlinkListener):V
- getMessage():java.lang.String
- getMessageLinkListener():javax.swing.event.HyperlinkListener
- getStatus():com.intellij.util.io.socketConnection.ConnectionStatus
e:com.intellij.util.io.socketConnection.ConnectionStatus
- java.lang.Enum
- sf:CONNECTED:com.intellij.util.io.socketConnection.ConnectionStatus
- sf:CONNECTION_FAILED:com.intellij.util.io.socketConnection.ConnectionStatus
- sf:DETACHED:com.intellij.util.io.socketConnection.ConnectionStatus
- sf:DISCONNECTED:com.intellij.util.io.socketConnection.ConnectionStatus
- sf:NOT_CONNECTED:com.intellij.util.io.socketConnection.ConnectionStatus
- sf:WAITING_FOR_CONNECTION:com.intellij.util.io.socketConnection.ConnectionStatus
- getStatusText():java.lang.String
- s:valueOf(java.lang.String):com.intellij.util.io.socketConnection.ConnectionStatus
- s:values():com.intellij.util.io.socketConnection.ConnectionStatus[]
a:com.intellij.util.io.socketConnection.RequestResponseExternalizerFactory
- <init>():V
- a:createRequestWriter(java.io.OutputStream):com.intellij.util.io.socketConnection.RequestWriter
- a:createResponseReader(java.io.InputStream):com.intellij.util.io.socketConnection.ResponseReader
com.intellij.util.io.socketConnection.RequestWriter
- a:writeRequest(com.intellij.util.io.socketConnection.AbstractRequest):V
com.intellij.util.io.socketConnection.ResponseReader
- a:readResponse():com.intellij.util.io.socketConnection.AbstractResponse
com.intellij.util.io.socketConnection.ResponseToRequest
- a:getRequestId():I
com.intellij.util.io.socketConnection.SocketConnection
- com.intellij.openapi.Disposable
- a:addListener(com.intellij.util.io.socketConnection.SocketConnectionListener,com.intellij.openapi.Disposable):V
- a:close():V
- a:getPort():I
- a:getState():com.intellij.util.io.socketConnection.ConnectionState
- a:isStopping():Z
- a:open():V
- a:registerHandler(java.lang.Class,com.intellij.util.io.socketConnection.AbstractResponseHandler):V
- a:sendRequest(com.intellij.util.io.socketConnection.AbstractRequest):V
- a:sendRequest(com.intellij.util.io.socketConnection.AbstractRequest,com.intellij.util.io.socketConnection.AbstractResponseToRequestHandler):V
- a:sendRequest(com.intellij.util.io.socketConnection.AbstractRequest,com.intellij.util.io.socketConnection.AbstractResponseToRequestHandler,I,java.lang.Runnable):V
f:com.intellij.util.io.socketConnection.SocketConnectionFactory
- s:createConnection(java.net.InetAddress,I,I,com.intellij.util.io.socketConnection.RequestResponseExternalizerFactory):com.intellij.util.io.socketConnection.ClientSocketConnection
- s:createServerConnection(I,java.net.InetAddress,I,com.intellij.util.io.socketConnection.RequestResponseExternalizerFactory):com.intellij.util.io.socketConnection.SocketConnection
- s:createServerConnection(I,java.net.InetAddress,com.intellij.util.io.socketConnection.RequestResponseExternalizerFactory):com.intellij.util.io.socketConnection.SocketConnection
com.intellij.util.io.socketConnection.SocketConnectionListener
- java.util.EventListener
- a:statusChanged(com.intellij.util.io.socketConnection.ConnectionStatus):V
f:com.intellij.util.net.IdeHttpClientHelpers
f:com.intellij.util.net.IdeHttpClientHelpers$ApacheHttpClient4
- <init>():V
- s:setProxyCredentialsForUrlIfEnabled(org.apache.http.client.CredentialsProvider,java.lang.String):V
- s:setProxyCredentialsIfEnabled(org.apache.http.client.CredentialsProvider):V
- s:setProxyForUrlIfEnabled(org.apache.http.client.config.RequestConfig$Builder,java.lang.String):V
- s:setProxyIfEnabled(org.apache.http.client.config.RequestConfig$Builder):V
a:com.intellij.util.textCompletion.DefaultTextCompletionValueDescriptor
- com.intellij.util.textCompletion.TextCompletionValueDescriptor
- <init>():V
- compare(java.lang.Object,java.lang.Object):I
- p:createInsertHandler(java.lang.Object):com.intellij.codeInsight.completion.InsertHandler
- createLookupBuilder(java.lang.Object):com.intellij.codeInsight.lookup.LookupElementBuilder
- p:getIcon(java.lang.Object):javax.swing.Icon
- pa:getLookupString(java.lang.Object):java.lang.String
- p:getTailText(java.lang.Object):java.lang.String
- p:getTypeText(java.lang.Object):java.lang.String
c:com.intellij.util.textCompletion.DefaultTextCompletionValueDescriptor$StringValueDescriptor
- com.intellij.util.textCompletion.DefaultTextCompletionValueDescriptor
- <init>():V
- getLookupString(java.lang.String):java.lang.String
com.intellij.util.textCompletion.TextCompletionCache
- a:getItems(java.lang.String,com.intellij.codeInsight.completion.CompletionParameters):java.util.Collection
- a:setItems(java.util.Collection):V
- a:updateCache(java.lang.String,com.intellij.codeInsight.completion.CompletionParameters):V
com.intellij.util.textCompletion.TextCompletionProvider
- a:acceptChar(C):com.intellij.codeInsight.lookup.CharFilter$Result
- a:applyPrefixMatcher(com.intellij.codeInsight.completion.CompletionResultSet,java.lang.String):com.intellij.codeInsight.completion.CompletionResultSet
- a:fillCompletionVariants(com.intellij.codeInsight.completion.CompletionParameters,java.lang.String,com.intellij.codeInsight.completion.CompletionResultSet):V
- a:getAdvertisement():java.lang.String
- a:getPrefix(java.lang.String,I):java.lang.String
f:com.intellij.util.textCompletion.TextCompletionUtil
- sf:AUTO_POPUP_KEY:com.intellij.openapi.util.Key
- sf:COMPLETING_TEXT_FIELD_KEY:com.intellij.openapi.util.Key
- <init>():V
- s:getProvider(com.intellij.psi.PsiFile):com.intellij.util.textCompletion.TextCompletionProvider
- s:installCompletionHint(com.intellij.openapi.editor.ex.EditorEx):V
- s:installProvider(com.intellij.psi.PsiFile,com.intellij.util.textCompletion.TextCompletionProvider,Z):V
c:com.intellij.util.textCompletion.TextCompletionUtil$DocumentWithCompletionCreator
- com.intellij.ui.LanguageTextField$SimpleDocumentCreator
- <init>(com.intellij.util.textCompletion.TextCompletionProvider,Z):V
- <init>(com.intellij.util.textCompletion.TextCompletionProvider,Z,Z):V
- customizePsiFile(com.intellij.psi.PsiFile):V
com.intellij.util.textCompletion.TextCompletionValueDescriptor
- java.util.Comparator
- a:createLookupBuilder(java.lang.Object):com.intellij.codeInsight.lookup.LookupElementBuilder
c:com.intellij.util.textCompletion.TextFieldWithCompletion
- com.intellij.ui.LanguageTextField
- <init>(com.intellij.openapi.project.Project,com.intellij.util.textCompletion.TextCompletionProvider,java.lang.String,Z,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.util.textCompletion.TextCompletionProvider,java.lang.String,Z,Z,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.util.textCompletion.TextCompletionProvider,java.lang.String,Z,Z,Z,Z,Z):V
- p:createEditor():com.intellij.openapi.editor.ex.EditorEx
c:com.intellij.util.ui.ButtonlessScrollBarUI
- javax.swing.plaf.basic.BasicScrollBarUI
- p:<init>():V
- p:adjustColor(java.awt.Color):java.awt.Color
- p:alwaysPaintThumb():Z
- alwaysShowTrack():Z
- contains(javax.swing.JComponent,I,I):Z
- p:createArrowButtonListener():javax.swing.plaf.basic.BasicScrollBarUI$ArrowButtonListener
- p:createDecreaseButton(I):javax.swing.JButton
- p:createIncreaseButton(I):javax.swing.JButton
- p:createModelListener():javax.swing.plaf.basic.BasicScrollBarUI$ModelListener
- p:createTrackListener():javax.swing.plaf.basic.BasicScrollBarUI$TrackListener
- p:doPaintTrack(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle):V
- getDecrementButtonHeight():I
- getIncrementButtonHeight():I
- p:getMacScrollBarBounds(java.awt.Rectangle,Z):java.awt.Rectangle
- getMaximumSize(javax.swing.JComponent):java.awt.Dimension
- getMinimumSize(javax.swing.JComponent):java.awt.Dimension
- p:getMinimumThumbSize():java.awt.Dimension
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- getSupportsAbsolutePositioning():Z
- p:getThickness():I
- getThumbBounds():java.awt.Rectangle
- p:getThumbOffset(I):I
- p:installDefaults():V
- p:installListeners():V
- p:isDark():Z
- p:isMacOverlayScrollbar():Z
- s:isMacOverlayScrollbarSupported():Z
- p:isMacScrollbarHiddenAndXcodeLikeScrollbar():Z
- p:isThumbTranslucent():Z
- p:isVertical():Z
- layoutContainer(java.awt.Container):V
- p:paintThumb(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle):V
- p:paintTrack(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle):V
- registerRepaintCallback(com.intellij.util.ui.ButtonlessScrollBarUI$ScrollbarRepaintCallback):V
- p:setThumbBounds(I,I,I,I):V
- p:uninstallListeners():V
- ps:xcodeLikeScrollbar():Z
com.intellij.util.ui.ButtonlessScrollBarUI$ScrollbarRepaintCallback
- a:call(java.awt.Graphics):V
c:com.intellij.util.ui.ButtonlessScrollBarUI$Transparent
- com.intellij.util.ui.ButtonlessScrollBarUI
- <init>():V
- alwaysShowTrack():Z
c:com.intellij.util.ui.CellEditorComponentWithBrowseButton
- javax.swing.JPanel
- <init>(com.intellij.openapi.ui.ComponentWithBrowseButton,javax.swing.table.TableCellEditor):V
- addNotify():V
- getChildComponent():javax.swing.JComponent
- getComponentWithButton():com.intellij.openapi.ui.ComponentWithBrowseButton
- p:processKeyBinding(javax.swing.KeyStroke,java.awt.event.KeyEvent,I,Z):Z
- removeNotify():V
- requestFocus():V
- setNextFocusableComponent(java.awt.Component):V
a:com.intellij.util.ui.ChangesTrackingTableView
- com.intellij.ui.table.TableView
- <init>():V
- editCellAt(I,I,java.util.EventObject):Z
- getCellEditor(I,I):javax.swing.table.TableCellEditor
- s:getValue(java.awt.Component):java.lang.Object
- pa:onCellValueChanged(I,I,java.lang.Object):V
- pa:onEditingStopped():V
- removeEditor():V
a:com.intellij.util.ui.ChildFocusWatcher
- com.intellij.openapi.Disposable
- java.awt.event.AWTEventListener
- <init>(javax.swing.JComponent):V
- dispose():V
- eventDispatched(java.awt.AWTEvent):V
- pa:onFocusGained(java.awt.event.FocusEvent):V
- pa:onFocusLost(java.awt.event.FocusEvent):V
com.intellij.util.ui.CollectionItemEditor
- a:clone(java.lang.Object,Z):java.lang.Object
- a:getItemClass():java.lang.Class
- isEmpty(java.lang.Object):Z
- isRemovable(java.lang.Object):Z
a:com.intellij.util.ui.CollectionModelEditor
- com.intellij.util.ui.ElementProducer
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- pf:helper:com.intellij.util.ui.CollectionModelEditor$ModelHelper
- pf:itemEditor:com.intellij.util.ui.CollectionItemEditor
- p:<init>(com.intellij.util.ui.CollectionItemEditor):V
- pf:areSelectedItemsRemovable(javax.swing.ListSelectionModel):Z
- canCreateElement():Z
- createElement():java.lang.Object
- pa:getItems():java.util.List
- f:getMutable(java.lang.Object):java.lang.Object
- p:isEditable(java.lang.Object):Z
- f:isModified():Z
- processModifiedItems(java.util.function.BiPredicate):V
- reset(java.util.List):V
- p:silentlyReplaceItem(java.lang.Object,java.lang.Object,I):V
pf:com.intellij.util.ui.CollectionModelEditor$ModelHelper
- getMutable(java.lang.Object,I):java.lang.Object
- hasModifiedItems():Z
- isMutable(java.lang.Object):Z
- process(java.util.function.BiPredicate):V
- remove(java.lang.Object):V
- reset(java.util.List):V
f:com.intellij.util.ui.ComboBoxModelEditor
- com.intellij.util.ui.ListModelEditorBase
- <init>(com.intellij.util.ui.ListItemEditor):V
- getComboBox():com.intellij.openapi.ui.ComboBox
- getModel():com.intellij.ui.MutableCollectionComboBoxModel
f:com.intellij.util.ui.ComboBoxWithHistory
- javax.swing.JComboBox
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.Object[]):V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.Object[]):V
- isAutoSave():Z
- load():V
- save():V
- setAutoSave(Z):V
- setModelFrom(java.lang.Object[]):V
- setProject(com.intellij.openapi.project.Project):V
com.intellij.util.ui.ListItemEditor
- com.intellij.util.ui.CollectionItemEditor
- applyModifiedProperties(java.lang.Object,java.lang.Object):V
- getName(java.lang.Object):java.lang.String
- isEditable(java.lang.Object):Z
f:com.intellij.util.ui.ListModelEditor
- com.intellij.util.ui.ListModelEditorBase
- <init>(com.intellij.util.ui.ListItemEditor):V
- createComponent():javax.swing.JComponent
- disableUpDownActions():com.intellij.util.ui.ListModelEditor
- getList():com.intellij.ui.components.JBList
- getSelected():java.lang.Object
- reset(java.util.List):V
a:com.intellij.util.ui.ListModelEditorBase
- com.intellij.util.ui.CollectionModelEditor
- pf:model:com.intellij.util.ui.ListModelEditorBase$MyModel
- <init>(com.intellij.util.ui.ListItemEditor):V
- apply():java.util.List
- f:ensureNonEmptyNames(java.lang.String):V
- p:getItems():java.util.List
- getModel():com.intellij.ui.CollectionListModel
- p:isEditable(java.lang.Object):Z
- p:removeEmptyItem(I):V
- reset(java.util.List):V
- p:silentlyReplaceItem(java.lang.Object,java.lang.Object,I):V
pf:com.intellij.util.ui.ListModelEditorBase$MyModel
- com.intellij.ui.MutableCollectionComboBoxModel
- removeAll():V
c:com.intellij.util.ui.LocalPathCellEditor
- com.intellij.util.ui.AbstractTableCellEditor
- p:myComponent:com.intellij.util.ui.CellEditorComponentWithBrowseButton
- <init>():V
- <init>(com.intellij.openapi.project.Project):V
- <init>(java.lang.String,com.intellij.openapi.project.Project):V
- p:createActionListener(javax.swing.JTable):java.awt.event.ActionListener
- fileChooserDescriptor(com.intellij.openapi.fileChooser.FileChooserDescriptor):com.intellij.util.ui.LocalPathCellEditor
- getCellEditorValue():java.lang.Object
- p:getDefaultPath():java.lang.String
- getFileChooserDescriptor():com.intellij.openapi.fileChooser.FileChooserDescriptor
- getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,Z,I,I):java.awt.Component
- normalizePath(Z):com.intellij.util.ui.LocalPathCellEditor
a:com.intellij.util.ui.ReloadableComboBoxPanel
- com.intellij.util.ui.ReloadablePanel
- p:myActionPanel:javax.swing.JPanel
- p:myComboBox:javax.swing.JComboBox
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- p:createValuesComboBox():javax.swing.JComboBox
- getMainPanel():javax.swing.JPanel
- getSelectedValue():java.lang.Object
a:com.intellij.util.ui.ReloadablePanel
- p:myActionPanel:javax.swing.JPanel
- <init>():V
- pa:doUpdateValues(java.util.Set):V
- p:fillActionPanel():V
- f:getErrorComponent():javax.swing.JLabel
- a:getMainPanel():javax.swing.JPanel
- a:getSelectedValue():java.lang.Object
- f:isBackgroundJobRunning():Z
- f:onUpdateValues(java.util.Set):V
- f:onValuesUpdateError(java.lang.String):V
- f:reloadValuesInBackground():V
- f:setDataProvider(com.intellij.util.ui.ReloadablePanel$DataProvider):V
com.intellij.util.ui.ReloadablePanel$DataProvider
- a:getCachedValues():java.util.Set
- a:updateValuesAsynchronously():V
f:com.intellij.util.ui.SwingHelper
- sf:ELLIPSIS:java.lang.String
- sf:ERROR_STR:java.lang.String
- <init>():V
- s:addHistoryOnExpansion(com.intellij.ui.TextFieldWithHistory,com.intellij.util.NotNullProducer):V
- s:adjustDialogSizeToFitPreferredSize(com.intellij.openapi.ui.DialogWrapper):V
- s:buildHtml(java.lang.String,java.lang.String):java.lang.String
- s:createHtmlLabel(java.lang.String,java.lang.String,com.intellij.util.Consumer):javax.swing.JEditorPane
- s:createHtmlViewer(Z,java.awt.Font,java.awt.Color,java.awt.Color):javax.swing.JEditorPane
- s:createTextFieldWithHistoryWithBrowseButton(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,java.util.function.Supplier):com.intellij.ui.TextFieldWithHistoryWithBrowseButton
- s:createTextFieldWithHistoryWithBrowseButton(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.util.NotNullProducer):com.intellij.ui.TextFieldWithHistoryWithBrowseButton
- s:createWebHyperlink(java.lang.String):com.intellij.ui.HyperlinkLabel
- s:createWebHyperlink(java.lang.String,java.lang.String):com.intellij.ui.HyperlinkLabel
- s:getComponentFromRecentMouseEvent():java.awt.Component
- s:installFileCompletionAndBrowseDialog(com.intellij.openapi.project.Project,com.intellij.openapi.ui.TextFieldWithBrowseButton,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- s:installFileCompletionAndBrowseDialog(com.intellij.openapi.project.Project,com.intellij.openapi.ui.TextFieldWithBrowseButton,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- s:installFileCompletionAndBrowseDialog(com.intellij.openapi.project.Project,com.intellij.ui.TextFieldWithHistoryWithBrowseButton,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- s:installFileCompletionAndBrowseDialog(com.intellij.openapi.project.Project,com.intellij.ui.TextFieldWithHistoryWithBrowseButton,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- s:newHorizontalPanel(F,java.awt.Component[]):javax.swing.JPanel
- s:newLeftAlignedVerticalPanel(java.util.Collection):javax.swing.JPanel
- s:newLeftAlignedVerticalPanel(java.awt.Component[]):javax.swing.JPanel
- s:newVerticalPanel(F,java.util.Collection):javax.swing.JPanel
- s:newVerticalPanel(F,java.awt.Component[]):javax.swing.JPanel
- s:resizeDialogToFitTextFor(javax.swing.JComponent[]):V
- s:scrollToReference(javax.swing.JEditorPane,java.lang.String):Z
- s:setHistory(com.intellij.ui.TextFieldWithHistory,java.util.List,Z):V
- s:setHtml(javax.swing.JEditorPane,java.lang.String,java.awt.Color):V
- s:setNoBorderCellRendererFor(javax.swing.table.TableColumn):V
- s:setPreferredWidth(java.awt.Component,I):V
- s:setPreferredWidthToFitText(com.intellij.openapi.ui.TextFieldWithBrowseButton):V
- s:setPreferredWidthToFitText(com.intellij.ui.TextFieldWithHistoryWithBrowseButton):V
- s:setPreferredWidthToFitText(javax.swing.JTextField):V
- s:setPreferredWidthToFitText(javax.swing.JTextField,I):V
- s:setPreferredWidthToFitText(javax.swing.JTextField,java.lang.String):V
- s:truncateStringWithEllipsis(java.lang.String,I,com.intellij.util.ui.SwingHelper$WidthCalculator):java.lang.String
- s:truncateStringWithEllipsis(java.lang.String,I,java.awt.FontMetrics):java.lang.String
- s:updateItems(javax.swing.JComboBox,java.util.List,java.lang.Object):V
- s:wrapWithHorizontalStretch(javax.swing.JComponent):javax.swing.JPanel
- s:wrapWithInfoButton(javax.swing.JComponent,java.lang.String,java.awt.event.ActionListener):com.intellij.openapi.ui.ComponentWithBrowseButton
- s:wrapWithoutStretch(javax.swing.JComponent):javax.swing.JPanel
f:com.intellij.util.ui.SwingHelper$HtmlViewerBuilder
- <init>():V
- create():javax.swing.JEditorPane
- setBackground(java.awt.Color):com.intellij.util.ui.SwingHelper$HtmlViewerBuilder
- setCarryTextOver(Z):com.intellij.util.ui.SwingHelper$HtmlViewerBuilder
- setDisabledHtml(java.lang.String):com.intellij.util.ui.SwingHelper$HtmlViewerBuilder
- setFont(java.awt.Font):com.intellij.util.ui.SwingHelper$HtmlViewerBuilder
- setForeground(java.awt.Color):com.intellij.util.ui.SwingHelper$HtmlViewerBuilder
com.intellij.util.ui.SwingHelper$WidthCalculator
- a:charWidth(C):I
- a:stringWidth(java.lang.String):I
c:com.intellij.util.ui.SwingTextTrimmer
- sf:ELLIPSIS_AT_LEFT:com.intellij.util.ui.SwingTextTrimmer
- sf:ELLIPSIS_AT_RIGHT:com.intellij.util.ui.SwingTextTrimmer
- sf:ELLIPSIS_IN_CENTER:com.intellij.util.ui.SwingTextTrimmer
- sf:KEY:com.intellij.openapi.util.Key
- sf:THREE_DOTS_AT_LEFT:com.intellij.util.ui.SwingTextTrimmer
- sf:THREE_DOTS_AT_RIGHT:com.intellij.util.ui.SwingTextTrimmer
- sf:THREE_DOTS_IN_CENTER:com.intellij.util.ui.SwingTextTrimmer
- s:createCenterTrimmer(F):com.intellij.util.ui.SwingTextTrimmer
- isTrimmed():Z
- setTrimmed(Z):V
- trim(java.lang.String,java.awt.FontMetrics,I):java.lang.String
c:com.intellij.util.ui.TextTransferable
- java.awt.datatransfer.Transferable
- <init>(java.lang.CharSequence):V
- <init>(java.lang.CharSequence,java.lang.CharSequence):V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String):V
- getTransferData(java.awt.datatransfer.DataFlavor):java.lang.Object
- getTransferDataFlavors():java.awt.datatransfer.DataFlavor[]
- isDataFlavorSupported(java.awt.datatransfer.DataFlavor):Z
c:com.intellij.util.ui.TextTransferable$ColoredStringBuilder
- com.intellij.ui.ColoredTextContainer
- <init>():V
- append(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- appendTo(java.lang.StringBuilder[]):V
- getBuilder():java.lang.StringBuilder
a:com.intellij.util.ui.ValidatingTableEditor
- com.intellij.util.ui.ComponentWithEmptyText
- b:$$$getRootComponent$$$():javax.swing.JComponent
- p:<init>():V
- p:<init>(com.intellij.openapi.actionSystem.AnAction[]):V
- p:addItem():V
- pa:cloneOf(java.lang.Object):java.lang.Object
- pa:createItem():java.lang.Object
- p:displayMessageAndFix(com.intellij.openapi.util.Pair):V
- getContentPane():java.awt.Component
- getEmptyText():com.intellij.util.ui.StatusText
- getItems():java.util.List
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelectedItems():java.util.List
- hideMessageLabel():V
- setColumnReorderingAllowed(Z):V
- setModel(com.intellij.util.ui.ColumnInfo[],java.util.List):V
- setShowGrid(Z):V
- setTableHeader(javax.swing.table.JTableHeader):V
- updateMessage(I,java.lang.Object):V
- p:validate(java.lang.Object):java.lang.String
- p:validate(java.util.List,java.util.List):com.intellij.openapi.util.Pair
com.intellij.util.ui.ValidatingTableEditor$Fix
- java.lang.Runnable
- a:getTitle():java.lang.String
com.intellij.util.ui.ValidatingTableEditor$RowHeightProvider
- a:getRowHeight():I
c:com.intellij.util.ui.table.ComboBoxTableCellEditor
- javax.swing.DefaultCellEditor
- sf:INSTANCE:com.intellij.util.ui.table.ComboBoxTableCellEditor
- <init>():V
- getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,Z,I,I):java.awt.Component
a:com.intellij.util.ui.table.ComponentsListFocusTraversalPolicy
- javax.swing.LayoutFocusTraversalPolicy
- <init>():V
- <init>(Z):V
- getComponentAfter(java.awt.Container,java.awt.Component):java.awt.Component
- getComponentBefore(java.awt.Container,java.awt.Component):java.awt.Component
- getDefaultComponent(java.awt.Container):java.awt.Component
- getFirstComponent(java.awt.Container):java.awt.Component
- getLastComponent(java.awt.Container):java.awt.Component
- pa:getOrderedComponents():java.util.List
a:com.intellij.util.ui.table.EditorTextFieldJBTableRowRenderer
- com.intellij.ui.EditorTextFieldCellRenderer
- com.intellij.util.ui.table.JBTableRowRenderer
- p:<init>(com.intellij.openapi.project.Project,com.intellij.lang.Language,com.intellij.openapi.Disposable):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.Disposable):V
- p:createRendererComponent(com.intellij.openapi.project.Project,com.intellij.lang.Language,Z):com.intellij.ui.EditorTextFieldCellRenderer$RendererComponent
- f:getRowRendererComponent(javax.swing.JTable,I,Z,Z):javax.swing.JComponent
- pa:getText(javax.swing.JTable,I):java.lang.String
- pf:getText(javax.swing.JTable,java.lang.Object,I,I):java.lang.String
- p:getTextAttributes(javax.swing.JTable,I):com.intellij.openapi.editor.markup.TextAttributes
- pf:getTextAttributes(javax.swing.JTable,java.lang.Object,I,I):com.intellij.openapi.editor.markup.TextAttributes
a:com.intellij.util.ui.table.IconTableCellRenderer
- javax.swing.table.DefaultTableCellRenderer
- sf:ICONABLE:com.intellij.util.ui.table.IconTableCellRenderer
- <init>():V
- s:create(javax.swing.Icon):javax.swing.table.TableCellRenderer
- pa:getIcon(java.lang.Object,javax.swing.JTable,I):javax.swing.Icon
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
- p:isCenterAlignment():Z
a:com.intellij.util.ui.table.JBListTable
- pf:myInternalTable:com.intellij.ui.table.JBTable
- p:myMouseEvent:java.awt.event.MouseEvent
- <init>(com.intellij.ui.table.JBTable,com.intellij.openapi.Disposable):V
- s:createEditorTextFieldPresentation(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,java.lang.String,Z,Z):javax.swing.JComponent
- p:getRowAt(I):com.intellij.util.ui.table.JBTableRow
- pa:getRowEditor(I):com.intellij.util.ui.table.JBTableRowEditor
- pa:getRowRenderer(I):com.intellij.util.ui.table.JBTableRowRenderer
- f:getTable():com.intellij.ui.table.JBTable
- p:isRowEditable(I):Z
- p:isRowEmpty(I):Z
- setVisibleRowCount(I):V
- stopEditing():V
com.intellij.util.ui.table.JBTableRow
- a:getValueAt(I):java.lang.Object
a:com.intellij.util.ui.table.JBTableRowEditor
- javax.swing.JPanel
- <init>():V
- f:addDocumentListener(com.intellij.util.ui.table.JBTableRowEditor$RowDocumentListener):V
- s:createLabeledPanel(java.lang.String,javax.swing.JComponent):javax.swing.JPanel
- fireDocumentChanged(com.intellij.openapi.editor.event.DocumentEvent,I):V
- a:getFocusableComponents():javax.swing.JComponent[]
- f:getMouseEvent():java.awt.event.MouseEvent
- a:getPreferredFocusedComponent():javax.swing.JComponent
- a:getValue():com.intellij.util.ui.table.JBTableRow
- a:prepareEditor(javax.swing.JTable,I):V
- f:setMouseEvent(java.awt.event.MouseEvent):V
com.intellij.util.ui.table.JBTableRowEditor$RowDocumentListener
- a:documentChanged(com.intellij.openapi.editor.event.DocumentEvent,I):V
f:com.intellij.util.ui.table.JBTableRowEditor$RowEditorChangeListener
- com.intellij.openapi.editor.event.DocumentListener
- <init>(com.intellij.util.ui.table.JBTableRowEditor,I):V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
com.intellij.util.ui.table.JBTableRowRenderer
- a:getRowRendererComponent(javax.swing.JTable,I,Z,Z):javax.swing.JComponent
c:com.intellij.util.ui.table.TableModelEditor
- com.intellij.util.ui.CollectionModelEditor
- <init>(java.util.List,com.intellij.util.ui.ColumnInfo[],com.intellij.util.ui.CollectionItemEditor,java.lang.String):V
- <init>(com.intellij.util.ui.ColumnInfo[],com.intellij.util.ui.CollectionItemEditor,java.lang.String):V
- apply():java.util.List
- s:cloneUsingXmlSerialization(java.lang.Object,java.lang.Object):V
- createComponent():javax.swing.JComponent
- disableUpDownActions():com.intellij.util.ui.table.TableModelEditor
- enabled(Z):com.intellij.util.ui.table.TableModelEditor
- p:getItems():java.util.List
- getModel():com.intellij.util.ui.ListTableModel
- modelListener(com.intellij.util.ui.table.TableModelEditor$DataChangedListener):com.intellij.util.ui.table.TableModelEditor
- reset(java.util.List):V
- selectItem(java.lang.Object):V
- setShowGrid(Z):V
a:com.intellij.util.ui.table.TableModelEditor$DataChangedListener
- javax.swing.event.TableModelListener
- <init>():V
- a:dataChanged(com.intellij.util.ui.ColumnInfo,I):V
- tableChanged(javax.swing.event.TableModelEvent):V
com.intellij.util.ui.table.TableModelEditor$DialogItemEditor
- com.intellij.util.ui.CollectionItemEditor
- a:applyEdited(java.lang.Object,java.lang.Object):V
- a:edit(java.lang.Object,com.intellij.util.Function,Z):V
- isEditable(java.lang.Object):Z
- isUseDialogToAdd():Z
a:com.intellij.util.ui.table.TableModelEditor$EditableColumnInfo
- com.intellij.util.ui.ColumnInfo
- <init>():V
- <init>(java.lang.String):V
- isCellEditable(java.lang.Object):Z
a:com.intellij.util.ui.update.DisposableUpdate
- com.intellij.util.ui.update.Update
- <init>(com.intellij.openapi.Disposable,java.lang.Object):V
- s:createDisposable(com.intellij.openapi.Disposable,java.lang.Object,java.lang.Runnable):com.intellij.util.ui.update.DisposableUpdate
- pa:doRun():V
- f:run():V
a:com.intellij.workspaceModel.ide.impl.jps.serialization.BaseIdeSerializationContext
- sf:Companion:com.intellij.workspaceModel.ide.impl.jps.serialization.BaseIdeSerializationContext$Companion
- <init>():V
- getCustomFacetRelatedEntitySerializers():java.util.List
- getCustomModuleComponentSerializers():java.util.List
- getCustomModuleRootsSerializers():java.util.List
- isJavaPluginPresent():Z
f:com.intellij.workspaceModel.ide.impl.jps.serialization.BaseIdeSerializationContext$Companion
- f:getCUSTOM_FACET_RELATED_ENTITY_SERIALIZER_EP():com.intellij.openapi.extensions.ExtensionPointName
- f:getCUSTOM_MODULE_ROOTS_SERIALIZER_EP():com.intellij.openapi.extensions.ExtensionPointName
com.intellij.xml.breadcrumbs.BreadcrumbListener
- a:breadcrumbsChanged(java.lang.Iterable):V
f:com.intellij.xml.breadcrumbs.BreadcrumbsComponent
- javax.swing.JComponent
- com.intellij.openapi.Disposable
- com.intellij.openapi.util.Weighted
- <init>():V
- addBreadcrumbsItemListener(com.intellij.xml.breadcrumbs.BreadcrumbsItemListener):V
- dispose():V
- getCrumb(java.awt.Point):com.intellij.xml.breadcrumbs.BreadcrumbsComponent$Crumb
- getMaximumSize():java.awt.Dimension
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- getToolTipText(java.awt.event.MouseEvent):java.lang.String
- getWeight():D
- nextPage():V
- paint(java.awt.Graphics):V
- previousPage():V
- removeBreadcrumbsItemListener(com.intellij.xml.breadcrumbs.BreadcrumbsItemListener):V
- setHoveredCrumb(com.intellij.xml.breadcrumbs.BreadcrumbsComponent$Crumb):V
- setItems(java.util.List):V
- setOffset(I):V
f:com.intellij.xml.breadcrumbs.BreadcrumbsComponent$ButtonSettings
- <init>():V
- s:getBackgroundColor(Z,Z,Z,Z):java.awt.Color
a:com.intellij.xml.breadcrumbs.BreadcrumbsPanel
- javax.swing.JComponent
- com.intellij.openapi.Disposable
- p:myEditor:com.intellij.openapi.editor.Editor
- pf:myProject:com.intellij.openapi.project.Project
- p:myUserCaretChange:Z
- <init>(com.intellij.openapi.editor.Editor):V
- addBreadcrumbListener(com.intellij.xml.breadcrumbs.BreadcrumbListener,com.intellij.openapi.Disposable):V
- pa:computeCrumbs(I):java.lang.Iterable
- dispose():V
- getBreadcrumbs():com.intellij.ui.components.breadcrumbs.Breadcrumbs
- s:getBreadcrumbsComponent(com.intellij.openapi.editor.Editor):com.intellij.xml.breadcrumbs.BreadcrumbsPanel
- p:getHighlightInfo(com.intellij.ui.components.breadcrumbs.Crumb):com.intellij.xml.breadcrumbs.BreadcrumbsPanel$CrumbHighlightInfo
- p:getLeftOffset():I
- p:navigateToCrumb(com.intellij.ui.components.breadcrumbs.Crumb,Z):V
- queueUpdate():V
pf:com.intellij.xml.breadcrumbs.BreadcrumbsPanel$CrumbHighlightInfo
- f:presentation:com.intellij.xml.breadcrumbs.CrumbPresentation
- f:range:com.intellij.openapi.util.TextRange
- <init>(com.intellij.openapi.util.TextRange,com.intellij.xml.breadcrumbs.CrumbPresentation):V
f:com.intellij.xml.breadcrumbs.BreadcrumbsUtilEx
- <init>():V
- s:findLanguageWithBreadcrumbSettings(com.intellij.lang.Language):java.lang.String
- s:findProvider(com.intellij.psi.FileViewProvider,java.lang.Boolean):com.intellij.ui.breadcrumbs.BreadcrumbsProvider
- s:findProvider(Z,com.intellij.psi.FileViewProvider):com.intellij.ui.breadcrumbs.BreadcrumbsProvider
- s:isBreadcrumbsShownFor(com.intellij.lang.Language):Z
f:com.intellij.xml.breadcrumbs.BreadcrumbsXmlWrapper
- com.intellij.xml.breadcrumbs.BreadcrumbsPanel
- javax.swing.border.Border
- <init>(com.intellij.openapi.editor.Editor):V
- getBorderInsets(java.awt.Component):java.awt.Insets
- s:getBreadcrumbWrapper(com.intellij.openapi.editor.Editor):com.intellij.xml.breadcrumbs.BreadcrumbsXmlWrapper
- isBorderOpaque():Z
- navigate(com.intellij.xml.breadcrumbs.NavigatableCrumb,Z):V
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
c:com.intellij.xml.breadcrumbs.DefaultCrumbsPresentation
- com.intellij.xml.breadcrumbs.CrumbPresentation
- <init>():V
- getBackgroundColor(Z,Z,Z):java.awt.Color
f:com.intellij.xml.breadcrumbs.PsiFileBreadcrumbsCollector
- com.intellij.codeInsight.breadcrumbs.FileBreadcrumbsCollector
- <init>(com.intellij.openapi.project.Project):V
- computeCrumbs(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document,I,java.lang.Boolean):java.lang.Iterable
- s:getLinePsiElements(com.intellij.openapi.editor.Document,I,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.ui.breadcrumbs.BreadcrumbsProvider):com.intellij.psi.PsiElement[]
- handlesFile(com.intellij.openapi.vfs.VirtualFile):Z
- watchForChanges(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.Disposable,java.lang.Runnable):V
f:io.netty.buffer.ByteBufUtf8Writer
- java.io.Writer
- <init>(io.netty.buffer.ByteBuf):V
- append(java.lang.CharSequence):java.io.Writer
- append(java.lang.CharSequence,I,I):java.io.Writer
- close():V
- f:ensureWritable(I):V
- flush():V
- f:write(java.io.InputStream,I):V
- write(java.lang.String):V
- write(java.lang.String,I,I):V
- write(C[],I,I):V
@:org.jetbrains.io.JsonBuilderDsl
- java.lang.annotation.Annotation
f:org.jetbrains.io.JsonBuilderKt
- sf:appendCommaIfNeeded(java.lang.StringBuilder):java.lang.StringBuilder
- sf:json(java.lang.StringBuilder,kotlin.jvm.functions.Function1):java.lang.StringBuilder
f:org.jetbrains.io.JsonObjectBuilder
- <init>(java.lang.StringBuilder,I,java.lang.String):V
- b:<init>(java.lang.StringBuilder,I,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:appendColon():V
- f:appendComplexValue(C,C,Z,kotlin.jvm.functions.Function0):V
- bs:appendComplexValue$default(org.jetbrains.io.JsonObjectBuilder,C,C,Z,kotlin.jvm.functions.Function0,I,java.lang.Object):V
- f:array(java.lang.CharSequence,kotlin.jvm.functions.Function1):V
- f:definitionReference(java.lang.String,java.lang.CharSequence,java.lang.String):V
- bs:definitionReference$default(org.jetbrains.io.JsonObjectBuilder,java.lang.String,java.lang.CharSequence,java.lang.String,I,java.lang.Object):V
- f:getBuilder():java.lang.StringBuilder
- f:getIndent():java.lang.String
- f:getIndentLevel():I
- f:json(java.lang.StringBuilder,kotlin.jvm.functions.Function1):java.lang.StringBuilder
- f:map(java.lang.CharSequence,kotlin.jvm.functions.Function1):V
- f:rawArray(java.lang.CharSequence,kotlin.jvm.functions.Function1):V
- f:rawBuilder(java.lang.CharSequence,org.jetbrains.io.JsonObjectBuilder):V
- f:rawMap(java.lang.CharSequence,kotlin.jvm.functions.Function1):V
- f:setIndentLevel(I):V
- f:to(java.lang.String,I):V
- f:to(java.lang.String,J):V
- f:to(java.lang.String,java.lang.String):V
- f:to(java.lang.String,java.lang.StringBuilder):V
- f:to(java.lang.String,Z):V
- f:toRaw(java.lang.String,java.lang.String):V
- f:toUnescaped(java.lang.String,java.lang.String):V
f:org.jetbrains.io.JsonReaderEx
- java.io.Closeable
- <init>(java.lang.CharSequence):V
- <init>(java.lang.CharSequence,I):V
- beginArray():V
- beginObject():org.jetbrains.io.JsonReaderEx
- close():V
- createSubReaderAndSkipValue():org.jetbrains.io.JsonReaderEx
- endArray():V
- endObject():V
- getSourceSequence():java.lang.CharSequence
- hasNext():Z
- isLenient():Z
- lenient(Z):org.jetbrains.io.JsonReaderEx
- nextAsString():java.lang.String
- nextBoolean():Z
- nextDouble():D
- nextInt():I
- nextLong():J
- nextName():java.lang.String
- nextNameAsCharSequence():java.lang.CharSequence
- nextNameOrNull():java.lang.String
- nextNull():V
- nextNullableString():java.lang.String
- nextString():java.lang.String
- nextString(Z):java.lang.String
- peek():com.google.gson.stream.JsonToken
- setLenient(Z):V
- skipValue():V
- skipValues():V
- subReader():org.jetbrains.io.JsonReaderEx
f:org.jetbrains.io.JsonUtil
- <init>():V
- s:escape(java.lang.CharSequence,io.netty.buffer.ByteBuf):V
- s:escape(java.lang.CharSequence,java.lang.StringBuilder):V
- s:nextAny(org.jetbrains.io.JsonReaderEx):java.lang.Object
- s:nextList(org.jetbrains.io.JsonReaderEx):java.util.List
- s:nextObject(org.jetbrains.io.JsonReaderEx):java.util.Map
- s:nextStringList(org.jetbrains.io.JsonReaderEx):java.util.List
- s:nextStringOrSkip(org.jetbrains.io.JsonReaderEx):java.lang.String
- s:readListBody(org.jetbrains.io.JsonReaderEx,java.util.List):V
f:org.jetbrains.io.LocalFileFinder
- s:findFile(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- s:windowsDriveExists(java.lang.String):Z
f:org.jetbrains.io.mandatory.JsonMandatoryException
- com.google.gson.JsonParseException
- <init>(java.lang.String):V
@:org.jetbrains.io.mandatory.Mandatory
- java.lang.annotation.Annotation
f:org.jetbrains.io.mandatory.NullCheckingFactory
- com.google.gson.TypeAdapterFactory
- sf:INSTANCE:org.jetbrains.io.mandatory.NullCheckingFactory
- <init>():V
- create(com.google.gson.Gson,com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter
@:org.jetbrains.io.mandatory.RestModel
- java.lang.annotation.Annotation
