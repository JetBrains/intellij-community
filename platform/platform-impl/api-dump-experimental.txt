*:com.intellij.execution.impl.EditorTextDecoration
- a:getId():com.intellij.execution.impl.EditorTextDecorationId
*:com.intellij.execution.impl.EditorTextDecorationApplier
- a:addDecorations(java.util.Collection):V
- a:getHoveredHyperlink():com.intellij.execution.impl.HyperlinkDecoration
- a:removeDecorations(java.util.Collection):V
*f:com.intellij.execution.impl.EditorTextDecorationApplierKt
- *sf:buildHighlighting(com.intellij.execution.impl.EditorTextDecorationId,I,I,com.intellij.openapi.editor.markup.TextAttributes,kotlin.jvm.functions.Function1):com.intellij.execution.impl.HighlightingDecoration
- *bs:buildHighlighting$default(com.intellij.execution.impl.EditorTextDecorationId,I,I,com.intellij.openapi.editor.markup.TextAttributes,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.execution.impl.HighlightingDecoration
- *sf:buildHyperlink(com.intellij.execution.impl.EditorTextDecorationId,I,I,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):com.intellij.execution.impl.HyperlinkDecoration
- *bs:buildHyperlink$default(com.intellij.execution.impl.EditorTextDecorationId,I,I,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.execution.impl.HyperlinkDecoration
- *sf:buildInlay(com.intellij.execution.impl.EditorTextDecorationId,I,com.intellij.execution.impl.InlayProvider,kotlin.jvm.functions.Function1):com.intellij.execution.impl.InlayDecoration
- *bs:buildInlay$default(com.intellij.execution.impl.EditorTextDecorationId,I,com.intellij.execution.impl.InlayProvider,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.execution.impl.InlayDecoration
- *sf:createEditorTextDecorationApplier(com.intellij.openapi.editor.ex.EditorEx,com.intellij.openapi.Disposable):com.intellij.execution.impl.EditorTextDecorationApplier
- *sf:createTextDecorationId(J):com.intellij.execution.impl.EditorTextDecorationId
*:com.intellij.execution.impl.EditorTextDecorationId
- java.lang.Comparable
- a:getValue():J
*:com.intellij.execution.impl.HighlightingBuilder
- a:getLayer():I
- a:setLayer(I):V
*:com.intellij.execution.impl.HighlightingDecoration
- com.intellij.execution.impl.EditorTextDecoration
*:com.intellij.execution.impl.HyperlinkBuilder
- a:getAttributes():com.intellij.openapi.editor.markup.TextAttributes
- a:getFollowedAttributes():com.intellij.openapi.editor.markup.TextAttributes
- a:getHoveredAttributes():com.intellij.openapi.editor.markup.TextAttributes
- a:getLayer():I
- a:setAttributes(com.intellij.openapi.editor.markup.TextAttributes):V
- a:setFollowedAttributes(com.intellij.openapi.editor.markup.TextAttributes):V
- a:setHoveredAttributes(com.intellij.openapi.editor.markup.TextAttributes):V
- a:setLayer(I):V
*:com.intellij.execution.impl.HyperlinkDecoration
- com.intellij.execution.impl.EditorTextDecoration
*:com.intellij.execution.impl.InlayBuilder
*:com.intellij.execution.impl.InlayDecoration
- com.intellij.execution.impl.EditorTextDecoration
*:com.intellij.execution.impl.InlayProvider
- createInlay(com.intellij.openapi.editor.Editor,I):com.intellij.openapi.editor.Inlay
- createInlayRenderer(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.EditorCustomElementRenderer
c:com.intellij.execution.wsl.WSLDistribution
- com.intellij.execution.wsl.AbstractWslDistribution
- *:getUNCRootPath():java.nio.file.Path
*:com.intellij.frontend.HostIdeInfoService
- a:getHostInfo():com.intellij.frontend.HostInfo
*f:com.intellij.frontend.HostInfo
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:component3():java.lang.String
- f:copy(java.lang.String,java.lang.String,java.lang.String):com.intellij.frontend.HostInfo
- bs:copy$default(com.intellij.frontend.HostInfo,java.lang.String,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.frontend.HostInfo
- equals(java.lang.Object):Z
- f:getOsName():java.lang.String
- f:getOsVersion():java.lang.String
- f:getProductCode():java.lang.String
- hashCode():I
*:com.intellij.ide.CommandLineInspectionProjectAsyncConfigurator
- com.intellij.ide.CommandLineInspectionProjectConfigurator
- configureProject(com.intellij.openapi.project.Project,com.intellij.ide.CommandLineInspectionProjectConfigurator$ConfiguratorContext):V
- a:configureProjectAsync(com.intellij.openapi.project.Project,com.intellij.ide.CommandLineInspectionProjectConfigurator$ConfiguratorContext,kotlin.coroutines.Continuation):java.lang.Object
*:com.intellij.ide.CustomDataContextSerializer
- a:getKey():com.intellij.openapi.actionSystem.DataKey
- a:getSerializer():kotlinx.serialization.KSerializer
f:com.intellij.ide.IdeTooltipManager
- com.intellij.openapi.Disposable
- *f:isProcessing(java.awt.Component):Z
- *f:updateShownTooltip(java.awt.Component):V
f:com.intellij.ide.actionsOnSave.impl.ActionsOnSaveManager
- *f:awaitPendingActions(kotlin.coroutines.Continuation):java.lang.Object
- *f:hasPendingActions():Z
*f:com.intellij.ide.impl.TrustedProjects
- sf:confirmLoadingUntrustedProject(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String):Z
- sf:getTrustedState(com.intellij.openapi.project.Project):com.intellij.util.ThreeState
- sf:isTrusted(com.intellij.openapi.project.Project):Z
- sf:isTrustedCheckDisabled():Z
- sf:setTrusted(com.intellij.openapi.project.Project,Z):V
f:com.intellij.ide.plugins.PluginNode
- com.intellij.ide.plugins.IdeaPluginDescriptor
- *:getChannel():java.lang.String
- *:setChannel(java.lang.String):V
*:com.intellij.ide.trustedProjects.TrustedProjectsListener
- *sf:Companion:com.intellij.ide.trustedProjects.TrustedProjectsListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- onProjectTrusted(com.intellij.ide.trustedProjects.TrustedProjectsLocator$LocatedProject):V
- onProjectTrusted(com.intellij.openapi.project.Project):V
- onProjectTrustedFromNotification(com.intellij.openapi.project.Project):V
- onProjectUntrusted(com.intellij.ide.trustedProjects.TrustedProjectsLocator$LocatedProject):V
- onProjectUntrusted(com.intellij.openapi.project.Project):V
- s:onceWhenProjectTrusted(com.intellij.openapi.Disposable,java.util.function.Consumer):V
- s:onceWhenProjectTrusted(com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- s:onceWhenProjectTrusted(java.util.function.Consumer):V
- s:onceWhenProjectTrusted(kotlin.jvm.functions.Function1):V
*f:com.intellij.ide.trustedProjects.TrustedProjectsListener$Companion
- f:onceWhenProjectTrusted(com.intellij.openapi.Disposable,java.util.function.Consumer):V
- f:onceWhenProjectTrusted(com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- f:onceWhenProjectTrusted(java.util.function.Consumer):V
- f:onceWhenProjectTrusted(kotlin.jvm.functions.Function1):V
- bs:onceWhenProjectTrusted$default(com.intellij.ide.trustedProjects.TrustedProjectsListener$Companion,com.intellij.openapi.Disposable,java.util.function.Consumer,I,java.lang.Object):V
- bs:onceWhenProjectTrusted$default(com.intellij.ide.trustedProjects.TrustedProjectsListener$Companion,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
*f:com.intellij.ide.ui.PopupLocationTracker
- <init>():V
- s:canRectangleBeUsed(java.awt.Component,java.awt.Rectangle,com.intellij.ide.ui.ScreenAreaConsumer):Z
- s:register(com.intellij.ide.ui.ScreenAreaConsumer):Z
*f:com.intellij.ide.ui.customization.DefaultActionGroupWithDelegate
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.actionSystem.ActionWithDelegate
- <init>(com.intellij.openapi.actionSystem.ActionGroup):V
- getDelegate():com.intellij.openapi.actionSystem.ActionGroup
*c:com.intellij.ide.ui.laf.darcula.ui.DarculaJBPopupComboPopup
- com.intellij.ui.popup.list.ComboBoxPopup$Context
- java.awt.event.ItemListener
- java.awt.event.MouseListener
- java.awt.event.MouseMotionListener
- java.awt.event.MouseWheelListener
- java.beans.PropertyChangeListener
- javax.accessibility.Accessible
- javax.swing.event.AncestorListener
- javax.swing.plaf.basic.ComboPopup
- sf:CLIENT_PROP:java.lang.String
- sf:USE_LIVE_UPDATE_MODEL:java.lang.String
- <init>(javax.swing.JComboBox):V
- ancestorAdded(javax.swing.event.AncestorEvent):V
- ancestorMoved(javax.swing.event.AncestorEvent):V
- ancestorRemoved(javax.swing.event.AncestorEvent):V
- configureList(javax.swing.JList):V
- p:createPopup(java.lang.Object):com.intellij.ui.popup.list.ComboBoxPopup
- getAccessibleContext():javax.accessibility.AccessibleContext
- getKeyListener():java.awt.event.KeyListener
- getList():javax.swing.JList
- getMaximumRowCount():I
- getModel():javax.swing.ListModel
- getMouseListener():java.awt.event.MouseListener
- getMouseMotionListener():java.awt.event.MouseMotionListener
- getProject():com.intellij.openapi.project.Project
- getRenderer():javax.swing.ListCellRenderer
- hide():V
- isVisible():Z
- itemStateChanged(java.awt.event.ItemEvent):V
- mouseClicked(java.awt.event.MouseEvent):V
- mouseDragged(java.awt.event.MouseEvent):V
- mouseEntered(java.awt.event.MouseEvent):V
- mouseExited(java.awt.event.MouseEvent):V
- mouseMoved(java.awt.event.MouseEvent):V
- mousePressed(java.awt.event.MouseEvent):V
- mouseReleased(java.awt.event.MouseEvent):V
- mouseWheelMoved(java.awt.event.MouseWheelEvent):V
- onPopupStepCancelled():V
- propertyChange(java.beans.PropertyChangeEvent):V
- show():V
- uninstallingUI():V
f:com.intellij.ide.wizard.UIWizardUtil
- *sf:runAfterOpened(com.intellij.ide.wizard.NewProjectWizardStep,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):V
- *sf:setupProjectSafe(com.intellij.ide.wizard.NewProjectWizardStep,com.intellij.openapi.project.Project,java.lang.String,kotlin.jvm.functions.Function0):V
f:com.intellij.openapi.actionSystem.ActionGroupUtil
- *s:forceHideDisabledChildren(com.intellij.openapi.actionSystem.ActionGroup):com.intellij.openapi.actionSystem.ActionGroup
- *s:forceRecursiveUpdateInBackground(com.intellij.openapi.actionSystem.ActionGroup):com.intellij.openapi.actionSystem.ActionGroup
*f:com.intellij.openapi.application.impl.TestOnlyThreading
- sf:INSTANCE:com.intellij.openapi.application.impl.TestOnlyThreading
- sf:releaseTheAcquiredWriteIntentLockThenExecuteActionAndTakeWriteIntentLockBack(kotlin.jvm.functions.Function0):java.lang.Object
*e:com.intellij.openapi.editor.ComponentInlayAlignment
- java.lang.Enum
- sf:FIT_CONTENT_WIDTH:com.intellij.openapi.editor.ComponentInlayAlignment
- sf:FIT_VIEWPORT_WIDTH:com.intellij.openapi.editor.ComponentInlayAlignment
- sf:FIT_VIEWPORT_X_SPAN:com.intellij.openapi.editor.ComponentInlayAlignment
- sf:STRETCH_TO_CONTENT_WIDTH:com.intellij.openapi.editor.ComponentInlayAlignment
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.editor.ComponentInlayAlignment
- s:values():com.intellij.openapi.editor.ComponentInlayAlignment[]
f:com.intellij.openapi.editor.ComponentInlayKt
- *sf:addComponentInlay(com.intellij.openapi.editor.Editor,I,com.intellij.openapi.editor.InlayProperties,com.intellij.openapi.editor.ComponentInlayRenderer):com.intellij.openapi.editor.Inlay
- *sf:addComponentInlay(com.intellij.openapi.editor.Editor,I,com.intellij.openapi.editor.InlayProperties,java.awt.Component,com.intellij.openapi.editor.ComponentInlayAlignment):com.intellij.openapi.editor.Inlay
- *bs:addComponentInlay$default(com.intellij.openapi.editor.Editor,I,com.intellij.openapi.editor.InlayProperties,java.awt.Component,com.intellij.openapi.editor.ComponentInlayAlignment,I,java.lang.Object):com.intellij.openapi.editor.Inlay
*c:com.intellij.openapi.editor.ComponentInlayRenderer
- com.intellij.openapi.editor.EditorCustomElementRenderer
- <init>(java.awt.Component,com.intellij.openapi.editor.ComponentInlayAlignment):V
- b:<init>(java.awt.Component,com.intellij.openapi.editor.ComponentInlayAlignment,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:calcHeightInPixels(com.intellij.openapi.editor.Inlay):I
- f:calcWidthInPixels(com.intellij.openapi.editor.Inlay):I
- f:getAlignment():com.intellij.openapi.editor.ComponentInlayAlignment
- f:getComponent():java.awt.Component
- f:paint(com.intellij.openapi.editor.Inlay,java.awt.Graphics,java.awt.Rectangle,com.intellij.openapi.editor.markup.TextAttributes):V
f:com.intellij.openapi.editor.FileDropManagerKt
- *sf:containsFileDropTargets(java.awt.datatransfer.DataFlavor[]):Z
com.intellij.openapi.editor.ex.EditorEx
- com.intellij.openapi.editor.Editor
- *:getStickyLinesPanelHeight():I
a:com.intellij.openapi.editor.ex.EditorGutterComponentEx
- javax.swing.JComponent
- com.intellij.openapi.editor.EditorGutter
- *a:getTextAnnotationPopupActions(I):java.util.List
com.intellij.openapi.editor.ex.EditorMarkupModel
- com.intellij.openapi.editor.markup.MarkupModel
- *a:setTrafficLightIconVisible(Z):V
com.intellij.openapi.editor.ex.FoldingListener
- *:beforeFoldRegionDisposed(com.intellij.openapi.editor.FoldRegion):V
- *:onCustomFoldRegionPropertiesChange(com.intellij.openapi.editor.CustomFoldRegion,I):V
*:com.intellij.openapi.editor.ex.FoldingListener$ChangeFlags
- sf:GUTTER_ICON_PROVIDER_CHANGED:I
- sf:HEIGHT_CHANGED:I
- sf:WIDTH_CHANGED:I
com.intellij.openapi.editor.impl.EditorGutterListener
- java.util.EventListener
- *:hoverEnded(com.intellij.openapi.editor.impl.event.EditorGutterHoverEvent):V
- *:hoverStarted(com.intellij.openapi.editor.impl.event.EditorGutterHoverEvent):V
*:com.intellij.openapi.editor.impl.EditorHighlightingPredicate
- a:shouldRender(com.intellij.openapi.editor.markup.RangeHighlighter):Z
*f:com.intellij.openapi.editor.impl.EditorId
- *sf:Companion:com.intellij.openapi.editor.impl.EditorId$Companion
- <init>(fleet.util.UID):V
- f:copy(fleet.util.UID):com.intellij.openapi.editor.impl.EditorId
- bs:copy$default(com.intellij.openapi.editor.impl.EditorId,fleet.util.UID,I,java.lang.Object):com.intellij.openapi.editor.impl.EditorId
- equals(java.lang.Object):Z
- hashCode():I
*bf:com.intellij.openapi.editor.impl.EditorId$$serializer
- kotlinx.serialization.internal.GeneratedSerializer
- sf:INSTANCE:com.intellij.openapi.editor.impl.EditorId$$serializer
- f:childSerializers():kotlinx.serialization.KSerializer[]
- f:deserialize(kotlinx.serialization.encoding.Decoder):com.intellij.openapi.editor.impl.EditorId
- f:getDescriptor():kotlinx.serialization.descriptors.SerialDescriptor
- f:serialize(kotlinx.serialization.encoding.Encoder,com.intellij.openapi.editor.impl.EditorId):V
*f:com.intellij.openapi.editor.impl.EditorId$Companion
- f:serializer():kotlinx.serialization.KSerializer
f:com.intellij.openapi.editor.impl.EditorIdKt
- *sf:editorId(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.impl.EditorId
- *sf:editorIdOrNull(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.impl.EditorId
- *sf:findEditor(com.intellij.openapi.editor.impl.EditorId):com.intellij.openapi.editor.Editor
- *sf:findEditorOrNull(com.intellij.openapi.editor.impl.EditorId):com.intellij.openapi.editor.Editor
f:com.intellij.openapi.editor.impl.EditorImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.diagnostic.Dumpable
- com.intellij.openapi.editor.ex.EditorEx
- com.intellij.openapi.editor.highlighter.HighlighterClient
- com.intellij.openapi.ui.Queryable
- com.intellij.psi.codeStyle.CodeStyleSettingsListener
- java.awt.event.FocusListener
- *:addHighlightingPredicate(com.intellij.openapi.util.Key,com.intellij.openapi.editor.impl.EditorHighlightingPredicate):com.intellij.openapi.editor.impl.EditorHighlightingPredicate
- *:removeHighlightingPredicate(com.intellij.openapi.util.Key):com.intellij.openapi.editor.impl.EditorHighlightingPredicate
*f:com.intellij.openapi.editor.impl.event.EditorGutterHoverEvent
- java.util.EventObject
- <init>(com.intellij.openapi.editor.ex.EditorGutterComponentEx,com.intellij.openapi.editor.markup.GutterIconRenderer):V
- getGutterIconRenderer():com.intellij.openapi.editor.markup.GutterIconRenderer
*f:com.intellij.openapi.editor.impl.multiverse.CodeInsightContextPresentation
- <init>(com.intellij.codeInsight.multiverse.CodeInsightContext,java.lang.String,javax.swing.Icon):V
- f:component1():com.intellij.codeInsight.multiverse.CodeInsightContext
- f:component2():java.lang.String
- f:component3():javax.swing.Icon
- f:copy(com.intellij.codeInsight.multiverse.CodeInsightContext,java.lang.String,javax.swing.Icon):com.intellij.openapi.editor.impl.multiverse.CodeInsightContextPresentation
- bs:copy$default(com.intellij.openapi.editor.impl.multiverse.CodeInsightContextPresentation,com.intellij.codeInsight.multiverse.CodeInsightContext,java.lang.String,javax.swing.Icon,I,java.lang.Object):com.intellij.openapi.editor.impl.multiverse.CodeInsightContextPresentation
- equals(java.lang.Object):Z
- f:getContext():com.intellij.codeInsight.multiverse.CodeInsightContext
- f:getIcon():javax.swing.Icon
- f:getText():java.lang.String
- hashCode():I
f:com.intellij.openapi.editor.impl.multiverse.CodeInsightContextPresentationKt
- *sf:createCodeInsightContextPresentation(com.intellij.codeInsight.multiverse.CodeInsightContext,com.intellij.openapi.project.Project):com.intellij.openapi.editor.impl.multiverse.CodeInsightContextPresentation
*:com.intellij.openapi.editor.markup.FillingLineMarkerRenderer
- com.intellij.openapi.editor.markup.LineMarkerRendererEx
- getIcon():javax.swing.Icon
- getMaxWidth():java.lang.Integer
- a:getTextAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- paint(com.intellij.openapi.editor.Editor,java.awt.Graphics,java.awt.Rectangle):V
*f:com.intellij.openapi.fileChooser.ex.FileTextFieldUtil
- <init>():V
- s:getLookupString(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile,com.intellij.openapi.fileChooser.ex.FileLookup$Finder,com.intellij.openapi.fileChooser.ex.FileTextFieldUtil$CompletionResult):java.lang.String
- s:processChosenFromCompletion(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile,com.intellij.openapi.fileChooser.ex.FileTextFieldUtil$DocumentOwner,com.intellij.openapi.fileChooser.ex.FileLookup$Finder,Z):V
- s:processCompletion(java.lang.String,com.intellij.openapi.fileChooser.ex.FileLookup$Finder,com.intellij.openapi.fileChooser.ex.FileLookup$LookupFilter,java.util.Map,com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile):com.intellij.openapi.fileChooser.ex.FileTextFieldUtil$CompletionResult
- s:setTextToFile(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile,com.intellij.openapi.fileChooser.ex.FileLookup$Finder,com.intellij.openapi.fileChooser.ex.FileTextFieldUtil$DocumentOwner):V
*f:com.intellij.openapi.fileChooser.ex.FileTextFieldUtil$CompletionResult
- f:kidsAfterSeparator:java.util.List
- f:macros:java.util.List
- f:preselected:com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile
- f:siblings:java.util.List
- f:variants:java.util.List
*:com.intellij.openapi.fileChooser.ex.FileTextFieldUtil$DocumentOwner
- a:getCaretPosition():I
- a:getLength():I
- a:getText(I,I):java.lang.String
- a:insertString(I,java.lang.String):V
- a:remove(I,I):V
- a:removeSelection():V
- a:setCaretPosition(I):V
- a:setText(java.lang.String):V
- a:setTextToFile(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile):V
*f:com.intellij.openapi.fileChooser.ex.FileTextFieldUtil$TextFieldDocumentOwner
- com.intellij.openapi.fileChooser.ex.FileTextFieldUtil$DocumentOwner
- <init>(javax.swing.JTextField,java.util.function.Consumer):V
- getCaretPosition():I
- getLength():I
- getText(I,I):java.lang.String
- insertString(I,java.lang.String):V
- remove(I,I):V
- removeSelection():V
- setCaretPosition(I):V
- setText(java.lang.String):V
- setTextToFile(com.intellij.openapi.fileChooser.ex.FileLookup$LookupFile):V
a:com.intellij.openapi.fileEditor.ex.FileEditorManagerEx
- com.intellij.openapi.fileEditor.FileEditorManager
- *a:openFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.impl.FileEditorOpenOptions,kotlin.coroutines.Continuation):java.lang.Object
- *bs:openFile$default(com.intellij.openapi.fileEditor.ex.FileEditorManagerEx,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.impl.FileEditorOpenOptions,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- *a:openFileEditorAsync(com.intellij.openapi.fileEditor.FileEditorNavigatable,Z,kotlin.coroutines.Continuation):java.lang.Object
a:com.intellij.openapi.fileEditor.ex.IdeDocumentHistory
- *a:reallyExcludeCurrentCommandAsNavigation():V
*:com.intellij.openapi.options.ex.MutableConfigurableGroup
- com.intellij.openapi.Disposable
- com.intellij.openapi.options.ConfigurableGroup
- a:addListener(com.intellij.openapi.options.ex.MutableConfigurableGroup$Listener):V
*:com.intellij.openapi.options.ex.MutableConfigurableGroup$Listener
- a:handleUpdate():V
*:com.intellij.openapi.project.impl.P3Support
- a:canBeOpenedInThisProcess(java.nio.file.Path):Z
- getDisabledPluginsFileName():java.lang.String
- a:isEnabled():Z
- a:openInChildProcess(java.nio.file.Path,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.project.impl.P3SupportKt
- *sf:processPerProjectSupport():com.intellij.openapi.project.impl.P3Support
f:com.intellij.openapi.updateSettings.impl.UpdateChecker
- *sf:getPluginUpdates(com.intellij.openapi.extensions.PluginId):com.intellij.openapi.updateSettings.impl.UpdateChecker$PluginUpdatesInfo
- *sf:getPluginUpdates(com.intellij.openapi.extensions.PluginId,com.intellij.openapi.util.BuildNumber):com.intellij.openapi.updateSettings.impl.UpdateChecker$PluginUpdatesInfo
- *sf:getPluginUpdates(com.intellij.openapi.extensions.PluginId,com.intellij.openapi.util.BuildNumber,com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.updateSettings.impl.UpdateChecker$PluginUpdatesInfo
- *bs:getPluginUpdates$default(com.intellij.openapi.extensions.PluginId,com.intellij.openapi.util.BuildNumber,com.intellij.openapi.progress.ProgressIndicator,I,java.lang.Object):com.intellij.openapi.updateSettings.impl.UpdateChecker$PluginUpdatesInfo
*f:com.intellij.openapi.updateSettings.impl.UpdateChecker$PluginUpdatesInfo
- <init>():V
- <init>(java.util.Collection,java.util.Collection,java.util.Collection,java.util.Map):V
- b:<init>(java.util.Collection,java.util.Collection,java.util.Collection,java.util.Map,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.util.Collection
- f:component2():java.util.Collection
- f:component3():java.util.Collection
- f:component4():java.util.Map
- f:copy(java.util.Collection,java.util.Collection,java.util.Collection,java.util.Map):com.intellij.openapi.updateSettings.impl.UpdateChecker$PluginUpdatesInfo
- bs:copy$default(com.intellij.openapi.updateSettings.impl.UpdateChecker$PluginUpdatesInfo,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Map,I,java.lang.Object):com.intellij.openapi.updateSettings.impl.UpdateChecker$PluginUpdatesInfo
- equals(java.lang.Object):Z
- f:getAll():java.util.List
- f:getAllDisabled():java.util.Collection
- f:getAllEnabled():java.util.Collection
- f:getErrors():java.util.Map
- f:getIncompatible():java.util.Collection
- hashCode():I
f:com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.UnknownFeaturesCollector
- com.intellij.openapi.components.PersistentStateComponent
- *:getUnknownFeaturesOfType(java.lang.String):java.util.Set
- *:unregisterUnknownFeature(com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.UnknownFeature):Z
a:com.intellij.openapi.wm.impl.FrameTitleBuilder
- *:getFileTitleAsync(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.wm.impl.IdeBackgroundUtil
- *s:createTemporaryBackgroundTransform(javax.swing.JComponent,com.intellij.openapi.ui.Painter,com.intellij.openapi.Disposable):V
f:com.intellij.openapi.wm.impl.content.ToolWindowContentUi
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.ui.content.ContentUI
- *sf:NOT_SELECTED_TAB_ICON_TRANSPARENT:com.intellij.openapi.util.Key
c:com.intellij.openapi.wm.impl.status.IdeStatusBarImpl
- javax.swing.JComponent
- com.intellij.openapi.actionSystem.UiDataProvider
- com.intellij.openapi.wm.ex.StatusBarEx
- javax.accessibility.Accessible
- *f:setCentralWidget(java.lang.String,javax.swing.JComponent):V
c:com.intellij.openapi.wm.impl.welcomeScreen.TabbedWelcomeScreen
- com.intellij.openapi.wm.impl.welcomeScreen.AbstractWelcomeScreen
- *:selectTab(com.intellij.openapi.wm.WelcomeScreenTab):V
*:com.intellij.toolWindow.ToolWindowSplitContentProvider
- a:createContentCopy(com.intellij.openapi.project.Project,com.intellij.ui.content.Content):com.intellij.ui.content.Content
*a:com.intellij.ui.ToolbarActionTracker
- com.intellij.openapi.Disposable
- sf:ARROW_SHIFT:I
- *sf:Companion:com.intellij.ui.ToolbarActionTracker$Companion
- sf:PROPERTY_PREFIX:java.lang.String
- <init>():V
- a:assignTo(com.intellij.openapi.actionSystem.Presentation,kotlin.jvm.functions.Function2):V
- a:canShow():Z
- sf:followToolbarComponent(com.intellij.openapi.actionSystem.Presentation,javax.swing.JComponent,javax.swing.JComponent):V
- p:followToolbarComponent(javax.swing.JComponent,javax.swing.JComponent,kotlin.jvm.functions.Function2):V
- pf:getPointProvider():kotlin.jvm.functions.Function2
- a:hideOrRepaint(javax.swing.JComponent):V
- a:hidePopup():V
- a:init(javax.swing.JComponent,kotlin.jvm.functions.Function2):V
- pf:setPointProvider(kotlin.jvm.functions.Function2):V
- a:show(javax.swing.JComponent,kotlin.jvm.functions.Function2):V
- pf:unfollowComponent(javax.swing.JComponent):V
- a:wasCreated():Z
*f:com.intellij.ui.ToolbarActionTracker$Companion
- f:followToolbarComponent(com.intellij.openapi.actionSystem.Presentation,javax.swing.JComponent,javax.swing.JComponent):V
- f:getPRESENTATION_GOT_IT_KEY():com.intellij.openapi.util.Key
- f:getPRESENTATION_POPUP_KEY():com.intellij.openapi.util.Key
*f:com.intellij.ui.ToolbarActionTracker$MyAncestorAdapter
- com.intellij.ui.AncestorListenerAdapter
- <init>(com.intellij.ui.ToolbarActionTracker,javax.swing.JComponent):V
- ancestorMoved(javax.swing.event.AncestorEvent):V
- ancestorRemoved(javax.swing.event.AncestorEvent):V
- f:getComponent():javax.swing.JComponent
*f:com.intellij.ui.ToolbarActionTracker$MyComponentAdapter
- java.awt.event.ComponentAdapter
- <init>(com.intellij.ui.ToolbarActionTracker):V
- componentMoved(java.awt.event.ComponentEvent):V
- componentResized(java.awt.event.ComponentEvent):V
*f:com.intellij.ui.VideoPromoComponent
- com.intellij.ui.components.JBLayeredPane
- <init>(javax.swing.JComponent,java.lang.String,Z,Z,java.lang.Runnable):V
- getPreferredSize():java.awt.Dimension
*:com.intellij.ui.codeFloatingToolbar.FloatingToolbarCustomization
- a:isToolbarAvailable():Z
*:com.intellij.ui.codeFloatingToolbar.FloatingToolbarCustomizer
- a:getActionGroup():java.lang.String
*f:com.intellij.ui.codeFloatingToolbar.FloatingToolbarCustomizer$DefaultGroup
- com.intellij.ui.codeFloatingToolbar.FloatingToolbarCustomizer
- <init>():V
- getActionGroup():java.lang.String
*c:com.intellij.ui.components.JBTreeTable
- javax.swing.JComponent
- com.intellij.ui.tree.TreePathBackgroundSupplier
- <init>(com.intellij.ui.treeStructure.treetable.TreeTableModel):V
- <init>(com.intellij.ui.treeStructure.treetable.TreeTableModel,com.intellij.ui.treeStructure.Tree):V
- getColumnProportion():F
- getDefaultRenderer(java.lang.Class):javax.swing.table.TableCellRenderer
- getModel():com.intellij.ui.treeStructure.treetable.TreeTableModel
- getPathBackground(javax.swing.tree.TreePath,I):java.awt.Color
- getTable():com.intellij.ui.table.JBTable
- getTree():com.intellij.ui.treeStructure.Tree
- hasFocus():Z
- setColumnProportion(F):V
- setDefaultRenderer(java.lang.Class,javax.swing.table.TableCellRenderer):V
- setModel(com.intellij.ui.treeStructure.treetable.TreeTableModel):V
- setRowSorter(javax.swing.RowSorter):V
*:com.intellij.ui.content.custom.options.ContentLayoutStateSettings
- a:getDisplayName():java.lang.String
- a:isEnabled():Z
- a:isSelected():Z
- a:restore():V
- a:setSelected(Z):V
*:com.intellij.ui.content.custom.options.CustomContentLayoutOption
- a:getDisplayName():java.lang.String
- a:isEnabled():Z
- a:isSelected():Z
- a:select():V
*:com.intellij.ui.content.custom.options.CustomContentLayoutOptions
- a:getAvailableOptions():com.intellij.ui.content.custom.options.CustomContentLayoutOption[]
- a:getDisplayName():java.lang.String
- a:isHidden():Z
- a:isHideOptionVisible():Z
- a:isSelected(com.intellij.ui.content.custom.options.CustomContentLayoutOption):Z
- a:onHide():V
- a:restore():V
- a:select(com.intellij.ui.content.custom.options.CustomContentLayoutOption):V
c:com.intellij.ui.content.impl.ContentManagerImpl
- com.intellij.openapi.Disposable$Parent
- com.intellij.ui.content.ContentManager
- java.beans.PropertyChangeListener
- *:<init>(Z,com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,com.intellij.ui.content.impl.ContentManagerImpl$ContentUiProducer):V
f:com.intellij.ui.dsl.builder.ButtonKt
- *sf:whenStateChangedFromUi(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- *bs:whenStateChangedFromUi$default(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
com.intellij.ui.dsl.builder.Cell
- com.intellij.ui.dsl.builder.CellBase
- *a:validationInfo(kotlin.jvm.functions.Function2):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.ComboBoxKt
- *sf:whenItemChangedFromUi(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- *bs:whenItemChangedFromUi$default(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- *sf:whenItemSelectedFromUi(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- *bs:whenItemSelectedFromUi$default(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.ExtensionsKt
- *sf:tabbedPaneHeader(com.intellij.ui.dsl.builder.Row,java.util.Collection):com.intellij.ui.dsl.builder.Cell
- *bs:tabbedPaneHeader$default(com.intellij.ui.dsl.builder.Row,java.util.Collection,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
*:com.intellij.ui.dsl.builder.Placeholder
- com.intellij.ui.dsl.builder.CellBase
- a:align(com.intellij.ui.dsl.builder.Align):com.intellij.ui.dsl.builder.Placeholder
- a:customize(com.intellij.ui.dsl.gridLayout.UnscaledGaps):com.intellij.ui.dsl.builder.Placeholder
- a:enabled(Z):com.intellij.ui.dsl.builder.Placeholder
- a:gap(com.intellij.ui.dsl.builder.RightGap):com.intellij.ui.dsl.builder.Placeholder
- a:getComponent():javax.swing.JComponent
- a:resizableColumn():com.intellij.ui.dsl.builder.Placeholder
- a:setComponent(javax.swing.JComponent):V
- a:visible(Z):com.intellij.ui.dsl.builder.Placeholder
com.intellij.ui.dsl.builder.Row
- *a:textFieldWithBrowseButton(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- *:textFieldWithBrowseButton(com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- *:textFieldWithBrowseButton(java.lang.String,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- *bs:textFieldWithBrowseButton$default(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- *bs:textFieldWithBrowseButton$default(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- *bs:textFieldWithBrowseButton$default(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
Ff:com.intellij.ui.dsl.builder.Row$DefaultImpls
- *s:textFieldWithBrowseButton(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- *s:textFieldWithBrowseButton(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- *bs:textFieldWithBrowseButton$default(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
- *bs:textFieldWithBrowseButton$default(com.intellij.ui.dsl.builder.Row,java.lang.String,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
com.intellij.ui.dsl.builder.SegmentedButton
- com.intellij.ui.dsl.builder.CellBase
- *a:whenItemSelected(com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.SegmentedButton
- *bs:whenItemSelected$default(com.intellij.ui.dsl.builder.SegmentedButton,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.SegmentedButton
- *a:whenItemSelectedFromUi(com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.SegmentedButton
- *bs:whenItemSelectedFromUi$default(com.intellij.ui.dsl.builder.SegmentedButton,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.SegmentedButton
f:com.intellij.ui.dsl.builder.TextFieldKt
- *sf:whenTextChangedFromUi(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- *bs:whenTextChangedFromUi$default(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.TextFieldWithBrowseButtonKt
- *sf:whenTextChangedFromUi(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.Cell
- *bs:whenTextChangedFromUi$default(com.intellij.ui.dsl.builder.Cell,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
f:com.intellij.ui.dsl.builder.components.ValidationTooltipKt
- *sf:validationTooltip(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.observable.properties.ObservableMutableProperty,com.intellij.ui.components.ActionLink,com.intellij.ui.components.ActionLink,com.intellij.ui.dsl.builder.components.ValidationType,Z):com.intellij.ui.dsl.builder.Cell
- *bs:validationTooltip$default(com.intellij.ui.dsl.builder.Row,com.intellij.openapi.observable.properties.ObservableMutableProperty,com.intellij.ui.components.ActionLink,com.intellij.ui.components.ActionLink,com.intellij.ui.dsl.builder.components.ValidationType,Z,I,java.lang.Object):com.intellij.ui.dsl.builder.Cell
*e:com.intellij.ui.dsl.builder.components.ValidationType
- java.lang.Enum
- sf:ERROR:com.intellij.ui.dsl.builder.components.ValidationType
- sf:WARNING:com.intellij.ui.dsl.builder.components.ValidationType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.dsl.builder.components.ValidationType
- s:values():com.intellij.ui.dsl.builder.components.ValidationType[]
f:com.intellij.ui.render.RenderersKt
- *sf:fontInfoRenderer(Z):javax.swing.ListCellRenderer
*f:com.intellij.ui.split.SplitComponentFactory
- *sf:Companion:com.intellij.ui.split.SplitComponentFactory$Companion
- f:createComponent(com.intellij.ui.split.SplitComponentModel):com.intellij.openapi.ui.ComponentContainer
- sf:getInstance():com.intellij.ui.split.SplitComponentFactory
- f:getRegisteredModel(com.intellij.ui.split.SplitComponentId):com.intellij.ui.split.SplitComponentModel
*f:com.intellij.ui.split.SplitComponentFactory$Companion
- f:getInstance():com.intellij.ui.split.SplitComponentFactory
*f:com.intellij.ui.split.SplitComponentId
- *sf:Companion:com.intellij.ui.split.SplitComponentId$Companion
- f:component1():I
- f:component2():Z
- f:copy(I,Z):com.intellij.ui.split.SplitComponentId
- bs:copy$default(com.intellij.ui.split.SplitComponentId,I,Z,I,java.lang.Object):com.intellij.ui.split.SplitComponentId
- equals(java.lang.Object):Z
- getUid():I
- hashCode():I
*bf:com.intellij.ui.split.SplitComponentId$$serializer
- kotlinx.serialization.internal.GeneratedSerializer
- sf:INSTANCE:com.intellij.ui.split.SplitComponentId$$serializer
- f:childSerializers():kotlinx.serialization.KSerializer[]
- f:deserialize(kotlinx.serialization.encoding.Decoder):com.intellij.ui.split.SplitComponentId
- f:getDescriptor():kotlinx.serialization.descriptors.SerialDescriptor
- f:serialize(kotlinx.serialization.encoding.Encoder,com.intellij.ui.split.SplitComponentId):V
*f:com.intellij.ui.split.SplitComponentId$Companion
- f:serializer():kotlinx.serialization.KSerializer
*:com.intellij.ui.split.SplitComponentModel
- com.intellij.openapi.Disposable
- a:getProviderId():java.lang.String
*:com.intellij.ui.split.SplitComponentProvider
- *sf:Companion:com.intellij.ui.split.SplitComponentProvider$Companion
- a:createComponent(com.intellij.ui.split.SplitComponentId):com.intellij.openapi.ui.ComponentContainer
*f:com.intellij.ui.split.SplitComponentProvider$Companion
f:com.intellij.util.SwingBindingsKt
- *sf:bindSelectedTabIn(javax.swing.JTabbedPane,kotlinx.coroutines.flow.MutableStateFlow,kotlinx.coroutines.CoroutineScope):V
*f:com.intellij.util.ui.RestartDialogImpl
- *sf:Companion:com.intellij.util.ui.RestartDialogImpl$Companion
- <init>():V
- sf:restartWithConfirmation():V
- showRestartRequired():V
- sf:showRestartRequired(Z,Z):I
*f:com.intellij.util.ui.RestartDialogImpl$Companion
- f:restartWithConfirmation():V
- f:showRestartRequired(Z,Z):I
- bs:showRestartRequired$default(com.intellij.util.ui.RestartDialogImpl$Companion,Z,Z,I,java.lang.Object):I
