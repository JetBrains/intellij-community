*a:com.intellij.ui.charts.BarChart
- com.intellij.ui.charts.GridChartWrapper
- <init>():V
- findMinMax():com.intellij.ui.charts.MinMax
- f:getDatasets():java.util.List
- f:getGap():I
- getRanges():com.intellij.ui.charts.Grid
- f:getSpace():I
- paintComponent(java.awt.Graphics2D):V
- pa:paintDataset(com.intellij.ui.charts.BarDataset,I,I,java.awt.Graphics2D,com.intellij.ui.charts.MinMax):V
- f:setDatasets(java.util.List):V
- f:setGap(I):V
- f:setSpace(I):V
*f:com.intellij.ui.charts.BarDataGenerator
- function:kotlin.jvm.functions.Function1
- <init>():V
- f:getCount():I
- f:getFunction():kotlin.jvm.functions.Function1
- f:setCount(I):V
- f:setFunction(kotlin.jvm.functions.Function1):V
*f:com.intellij.ui.charts.BarDataHolder
- <init>(java.util.List):V
- f:getData():java.util.List
*f:com.intellij.ui.charts.BarDataset
- com.intellij.ui.charts.Dataset
- *sf:Companion:com.intellij.ui.charts.BarDataset$Companion
- <init>():V
- f:getShowValues():kotlin.jvm.functions.Function1
- f:getStacked():Z
- f:getValues():java.lang.Iterable
- sf:of(java.lang.Number[]):com.intellij.ui.charts.BarDataset
- f:setShowValues(kotlin.jvm.functions.Function1):V
- f:setStacked(Z):V
- f:setValues(java.lang.Iterable):V
*f:com.intellij.ui.charts.BarDataset$Companion
- f:of(java.lang.Number[]):com.intellij.ui.charts.BarDataset
*f:com.intellij.ui.charts.CategoryDataHolder
- <init>(java.util.List):V
- f:getData():java.util.List
*c:com.intellij.ui.charts.CategoryLineChart
- com.intellij.ui.charts.LineChart
- <init>():V
*c:com.intellij.ui.charts.CategoryLineDataset
- com.intellij.ui.charts.LineDataset
- <init>():V
- f:getValues():java.lang.Iterable
- f:setValues(java.lang.Iterable):V
*:com.intellij.ui.charts.ChartComponent
- a:paintComponent(java.awt.Graphics2D):V
*f:com.intellij.ui.charts.ChartUtils
- sf:barChart(kotlin.jvm.functions.Function1):com.intellij.ui.charts.HorizontalBarChart
- sf:dataset(com.intellij.ui.charts.BarDataHolder,kotlin.jvm.functions.Function1):V
- sf:dataset(com.intellij.ui.charts.CategoryDataHolder,kotlin.jvm.functions.Function1):V
- sf:dataset(com.intellij.ui.charts.CategoryLineChart,kotlin.jvm.functions.Function1):V
- sf:dataset(com.intellij.ui.charts.HorizontalBarChart,kotlin.jvm.functions.Function1):V
- sf:dataset(com.intellij.ui.charts.XYDataHolder,kotlin.jvm.functions.Function1):V
- sf:dataset(com.intellij.ui.charts.XYLineChart,kotlin.jvm.functions.Function1):V
- sf:datasets(com.intellij.ui.charts.CategoryLineChart,kotlin.jvm.functions.Function1):V
- sf:datasets(com.intellij.ui.charts.HorizontalBarChart,kotlin.jvm.functions.Function1):V
- sf:datasets(com.intellij.ui.charts.XYLineChart,kotlin.jvm.functions.Function1):V
- sf:enumerator(java.lang.Number[]):com.intellij.ui.charts.ValueIterable
- sf:findScale(com.intellij.ui.charts.ChartWrapper,J,J,I):I
- bs:findScale$default(com.intellij.ui.charts.ChartWrapper,J,J,I,I,java.lang.Object):I
- sf:format(com.intellij.ui.charts.Grid,java.lang.String):java.util.function.Consumer
- sf:generate(com.intellij.ui.charts.XYLineDataset,kotlin.jvm.functions.Function1):V
- sf:generate(kotlin.jvm.functions.Function1):java.lang.Iterable
- sf:generator(D):com.intellij.ui.charts.ValueIterable
- sf:generator(F):com.intellij.ui.charts.ValueIterable
- sf:generator(I):com.intellij.ui.charts.ValueIterable
- sf:generator(J):com.intellij.ui.charts.ValueIterable
- sf:getTimes():java.lang.Integer[]
- sf:grid(com.intellij.ui.charts.GridChartWrapper,kotlin.jvm.functions.Function1):V
- sf:lineChart(kotlin.jvm.functions.Function1):com.intellij.ui.charts.CategoryLineChart
- sf:lineChart(kotlin.jvm.functions.Function1):com.intellij.ui.charts.XYLineChart
- sf:margins(com.intellij.ui.charts.ChartWrapper,kotlin.jvm.functions.Function1):V
- sf:ranges(com.intellij.ui.charts.XYChartComponent,kotlin.jvm.functions.Function1):V
- sf:values(com.intellij.ui.charts.XYLineDataset,kotlin.jvm.functions.Function1):V
- sf:xPainter(com.intellij.ui.charts.Grid,kotlin.jvm.functions.Function1):V
- sf:yPainter(com.intellij.ui.charts.Grid,kotlin.jvm.functions.Function1):V
*a:com.intellij.ui.charts.ChartWrapper
- com.intellij.ui.charts.ChartComponent
- <init>():V
- p:createCentralPanel():javax.swing.JComponent
- f:getBackground():java.awt.Color
- getComponent():javax.swing.JComponent
- f:getHeight():I
- f:getMargins():java.awt.Insets
- pf:getMouseLocation():java.awt.Point
- f:getOverlays():java.util.List
- f:getWidth():I
- paintOverlay(java.awt.Graphics2D):V
- f:setBackground(java.awt.Color):V
- f:setMargins(java.awt.Insets):V
- f:setOverlays(java.util.List):V
- f:update():V
*f:com.intellij.ui.charts.ChartWrapperKt
- sf:to(java.lang.Number,java.lang.Number):com.intellij.ui.charts.Coordinates
*f:com.intellij.ui.charts.Coordinates
- *sf:Companion:com.intellij.ui.charts.Coordinates$Companion
- <init>(java.lang.Number,java.lang.Number):V
- f:component1():java.lang.Number
- f:component2():java.lang.Number
- f:copy(java.lang.Number,java.lang.Number):com.intellij.ui.charts.Coordinates
- bs:copy$default(com.intellij.ui.charts.Coordinates,java.lang.Number,java.lang.Number,I,java.lang.Object):com.intellij.ui.charts.Coordinates
- equals(java.lang.Object):Z
- f:getX():java.lang.Number
- f:getY():java.lang.Number
- hashCode():I
- sf:of(java.lang.Number,java.lang.Number):com.intellij.ui.charts.Coordinates
*f:com.intellij.ui.charts.Coordinates$Companion
- f:of(java.lang.Number,java.lang.Number):com.intellij.ui.charts.Coordinates
*c:com.intellij.ui.charts.Dataset
- <init>():V
- f:add(java.lang.Object[]):V
- f:addAll(java.util.Collection):V
- getData():java.lang.Iterable
- f:getFillColor():java.awt.Paint
- f:getLabel():java.lang.String
- f:getLineColor():java.awt.Paint
- setData(java.lang.Iterable):V
- f:setFillColor(java.awt.Paint):V
- f:setLabel(java.lang.String):V
- f:setLineColor(java.awt.Paint):V
- f:transparent(java.awt.Color,D):java.awt.Color
*f:com.intellij.ui.charts.DragOverlay
- com.intellij.ui.charts.Overlay
- <init>(java.util.function.BiConsumer):V
- afterChartInitialized():V
- f:getOnRelease():java.util.function.BiConsumer
- paintComponent(java.awt.Graphics2D):V
*f:com.intellij.ui.charts.Grid
- com.intellij.ui.charts.MinMax
- xOrigin:java.lang.Number
- yOrigin:java.lang.Number
- <init>():V
- f:getXLines():com.intellij.ui.charts.ValueIterable
- f:getXOrigin():java.lang.Number
- f:getXOriginInitialized():Z
- f:getXPainter():java.util.function.Consumer
- f:getYLines():com.intellij.ui.charts.ValueIterable
- f:getYOrigin():java.lang.Number
- f:getYOriginInitialized():Z
- f:getYPainter():java.util.function.Consumer
- f:setXLines(com.intellij.ui.charts.ValueIterable):V
- f:setXOrigin(java.lang.Number):V
- f:setXPainter(java.util.function.Consumer):V
- f:setYLines(com.intellij.ui.charts.ValueIterable):V
- f:setYOrigin(java.lang.Number):V
- f:setYPainter(java.util.function.Consumer):V
*a:com.intellij.ui.charts.GridChartWrapper
- com.intellij.ui.charts.ChartWrapper
- com.intellij.ui.charts.XYChartComponent
- <init>():V
- p:findGridLabelOffset(com.intellij.ui.charts.GridLine,java.awt.Graphics2D):com.intellij.ui.charts.Coordinates
- p:findGridLineX(com.intellij.ui.charts.GridLine,java.lang.Number):D
- p:findGridLineY(com.intellij.ui.charts.GridLine,java.lang.Number):D
- a:findMinMax():com.intellij.ui.charts.MinMax
- p:findX(com.intellij.ui.charts.MinMax,java.lang.Number):D
- p:findY(com.intellij.ui.charts.MinMax,java.lang.Number):D
- f:getGrid():com.intellij.ui.charts.Grid
- f:getGridColor():java.awt.Color
- f:getGridHeight():I
- f:getGridLabelColor():java.awt.Color
- f:getGridWidth():I
- a:getRanges():com.intellij.ui.charts.Grid
- pf:paintGrid(java.awt.Graphics2D,java.awt.Graphics2D,com.intellij.ui.charts.MinMax):V
- f:setGridColor(java.awt.Color):V
- f:setGridLabelColor(java.awt.Color):V
*f:com.intellij.ui.charts.GridLine
- <init>(java.lang.Number,com.intellij.ui.charts.MinMax,I):V
- b:<init>(java.lang.Number,com.intellij.ui.charts.MinMax,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getHorizontalAlignment():I
- f:getLabel():java.lang.String
- f:getMajorLine():Z
- f:getOrientation():I
- f:getPaintLine():Z
- f:getValue():java.lang.Number
- f:getVerticalAlignment():I
- f:getXY():com.intellij.ui.charts.MinMax
- f:setHorizontalAlignment(I):V
- f:setLabel(java.lang.String):V
- f:setMajorLine(Z):V
- f:setPaintLine(Z):V
- f:setVerticalAlignment(I):V
*f:com.intellij.ui.charts.HorizontalBarChart
- com.intellij.ui.charts.BarChart
- <init>():V
*f:com.intellij.ui.charts.LabelOverlay
- com.intellij.ui.charts.Overlay
- <init>():V
- paintComponent(java.awt.Graphics2D):V
*a:com.intellij.ui.charts.LineChart
- com.intellij.ui.charts.GridChartWrapper
- *sf:Companion:com.intellij.ui.charts.LineChart$Companion
- <init>():V
- add(java.lang.Number,java.lang.Number):V
- f:clear():V
- f:findLocation(com.intellij.ui.charts.MinMax,com.intellij.ui.charts.Coordinates):java.awt.geom.Point2D$Double
- findMinMax():com.intellij.ui.charts.MinMax
- f:getBorderPainted():Z
- f:getDataset():com.intellij.ui.charts.LineDataset
- f:getDataset(java.lang.String):com.intellij.ui.charts.LineDataset
- f:getDatasets():java.util.List
- getRanges():com.intellij.ui.charts.Grid
- sf:of(com.intellij.ui.charts.CategoryLineDataset[]):com.intellij.ui.charts.CategoryLineChart
- sf:of(com.intellij.ui.charts.Coordinates[]):com.intellij.ui.charts.XYLineChart
- sf:of(com.intellij.ui.charts.XYLineDataset[]):com.intellij.ui.charts.XYLineChart
- sf:of(java.lang.Number[]):com.intellij.ui.charts.CategoryLineChart
- paintComponent(java.awt.Graphics2D):V
- f:setBorderPainted(Z):V
- f:setDatasets(java.util.List):V
*f:com.intellij.ui.charts.LineChart$Companion
- f:of(com.intellij.ui.charts.CategoryLineDataset[]):com.intellij.ui.charts.CategoryLineChart
- f:of(com.intellij.ui.charts.Coordinates[]):com.intellij.ui.charts.XYLineChart
- f:of(com.intellij.ui.charts.XYLineDataset[]):com.intellij.ui.charts.XYLineChart
- f:of(java.lang.Number[]):com.intellij.ui.charts.CategoryLineChart
*a:com.intellij.ui.charts.LineDataset
- com.intellij.ui.charts.Dataset
- *sf:Companion:com.intellij.ui.charts.LineDataset$Companion
- <init>():V
- f:find(java.lang.Number):java.lang.Number
- f:getModificationFirst():Z
- f:getSmooth():Z
- f:getStacked():Z
- f:getStepped():com.intellij.ui.charts.LineStepped
- f:getStroke():java.awt.BasicStroke
- sf:of(com.intellij.ui.charts.Coordinates[]):com.intellij.ui.charts.XYLineDataset
- sf:of(java.lang.Number[]):com.intellij.ui.charts.CategoryLineDataset
- sf:of(java.lang.Number[],java.lang.Number[]):com.intellij.ui.charts.XYLineDataset
- f:setModificationFirst(Z):V
- f:setSmooth(Z):V
- f:setStacked(Z):V
- f:setStepped(com.intellij.ui.charts.LineStepped):V
- f:setStroke(java.awt.BasicStroke):V
*f:com.intellij.ui.charts.LineDataset$Companion
- f:of(com.intellij.ui.charts.Coordinates[]):com.intellij.ui.charts.XYLineDataset
- f:of(java.lang.Number[]):com.intellij.ui.charts.CategoryLineDataset
- f:of(java.lang.Number[],java.lang.Number[]):com.intellij.ui.charts.XYLineDataset
*e:com.intellij.ui.charts.LineStepped
- java.lang.Enum
- sf:AFTER:com.intellij.ui.charts.LineStepped
- sf:BEFORE:com.intellij.ui.charts.LineStepped
- sf:NONE:com.intellij.ui.charts.LineStepped
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.charts.LineStepped
- s:values():com.intellij.ui.charts.LineStepped[]
*c:com.intellij.ui.charts.MinMax
- xMax:java.lang.Number
- xMin:java.lang.Number
- yMax:java.lang.Number
- yMin:java.lang.Number
- <init>():V
- f:component1():java.lang.Number
- f:component2():java.lang.Number
- f:component3():java.lang.Number
- f:component4():java.lang.Number
- f:getXMax():java.lang.Number
- f:getXMaxInitialized():Z
- f:getXMin():java.lang.Number
- f:getYMax():java.lang.Number
- f:getYMaxInitialized():Z
- f:getYMin():java.lang.Number
- f:isInitialized():Z
- f:plus(com.intellij.ui.charts.MinMax):com.intellij.ui.charts.MinMax
- f:process(com.intellij.ui.charts.Coordinates):V
- f:process(java.lang.Number,java.lang.Number):V
- f:setXMax(java.lang.Number):V
- f:setXMin(java.lang.Number):V
- f:setYMax(java.lang.Number):V
- f:setYMin(java.lang.Number):V
- f:times(com.intellij.ui.charts.MinMax):com.intellij.ui.charts.MinMax
*a:com.intellij.ui.charts.Overlay
- com.intellij.ui.charts.ChartComponent
- <init>():V
- afterChartInitialized():V
- f:getChart():com.intellij.ui.charts.ChartWrapper
- f:getMouseLocation():java.awt.Point
- f:getWrapper():com.intellij.ui.charts.ChartWrapper
- f:setMouseLocation(java.awt.Point):V
- f:setWrapper(com.intellij.ui.charts.ChartWrapper):V
- f:toChartSpace(java.awt.Point):java.awt.Point
*a:com.intellij.ui.charts.ValueIterable
- java.lang.Iterable
- kotlin.jvm.internal.markers.KMappedMarker
- *sf:Companion:com.intellij.ui.charts.ValueIterable$Companion
- max:java.lang.Number
- min:java.lang.Number
- <init>():V
- f:getMax():java.lang.Number
- f:getMin():java.lang.Number
- iterator():java.util.Iterator
- prepare(java.lang.Number,java.lang.Number):com.intellij.ui.charts.ValueIterable
- f:setMax(java.lang.Number):V
- f:setMin(java.lang.Number):V
*f:com.intellij.ui.charts.ValueIterable$Companion
- f:createStub():com.intellij.ui.charts.ValueIterable
*:com.intellij.ui.charts.XYChartComponent
- a:getRanges():com.intellij.ui.charts.MinMax
*f:com.intellij.ui.charts.XYDataCreator
- x:java.lang.Iterable
- y:java.lang.Iterable
- <init>():V
- f:getX():java.lang.Iterable
- f:getY():java.lang.Iterable
- f:setX(java.lang.Iterable):V
- f:setY(java.lang.Iterable):V
*f:com.intellij.ui.charts.XYDataGenerator
- x:java.lang.Iterable
- y:kotlin.jvm.functions.Function1
- <init>():V
- f:getX():java.lang.Iterable
- f:getY():kotlin.jvm.functions.Function1
- f:setX(java.lang.Iterable):V
- f:setY(kotlin.jvm.functions.Function1):V
*f:com.intellij.ui.charts.XYDataHolder
- <init>(java.util.List):V
- f:getData():java.util.List
*c:com.intellij.ui.charts.XYLineChart
- com.intellij.ui.charts.LineChart
- <init>():V
*c:com.intellij.ui.charts.XYLineDataset
- com.intellij.ui.charts.LineDataset
- <init>():V
