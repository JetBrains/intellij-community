com.intellij.designer.DesignerEditorPanelFacade
- a:getClientProperty(java.lang.Object):java.lang.Object
- a:getContentSplitter():com.intellij.openapi.ui.ThreeComponentsSplitter
- a:putClientProperty(java.lang.Object,java.lang.Object):V
f:com.intellij.designer.LightFillLayout
- java.awt.LayoutManager2
- <init>():V
- <init>(Z):V
- addLayoutComponent(java.awt.Component,java.lang.Object):V
- addLayoutComponent(java.lang.String,java.awt.Component):V
- getLayoutAlignmentX(java.awt.Container):F
- getLayoutAlignmentY(java.awt.Container):F
- invalidateLayout(java.awt.Container):V
- layoutContainer(java.awt.Container):V
- maximumLayoutSize(java.awt.Container):java.awt.Dimension
- minimumLayoutSize(java.awt.Container):java.awt.Dimension
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
- removeLayoutComponent(java.awt.Component):V
f:com.intellij.designer.LightToolWindow
- javax.swing.JPanel
- <init>(com.intellij.designer.LightToolWindowContent,java.lang.String,javax.swing.Icon,javax.swing.JComponent,javax.swing.JComponent,com.intellij.openapi.ui.ThreeComponentsSplitter,com.intellij.openapi.wm.ToolWindowAnchor,com.intellij.designer.LightToolWindowManager,com.intellij.openapi.project.Project,java.lang.String,I,java.util.List):V
- dispose():V
- getContent():java.lang.Object
com.intellij.designer.LightToolWindowContent
- a:dispose():V
a:com.intellij.designer.LightToolWindowManager
- com.intellij.openapi.Disposable
- sf:EDITOR_MODE:java.lang.String
- f:myEditorModeKey:java.lang.String
- pf:myProject:com.intellij.openapi.project.Project
- p:myToolWindow:com.intellij.openapi.wm.ToolWindow
- p:<init>(com.intellij.openapi.project.Project):V
- f:bind(com.intellij.designer.DesignerEditorPanelFacade):V
- pa:createContent(com.intellij.designer.DesignerEditorPanelFacade):com.intellij.designer.LightToolWindow
- pf:createContent(com.intellij.designer.DesignerEditorPanelFacade,com.intellij.designer.LightToolWindowContent,java.lang.String,javax.swing.Icon,javax.swing.JComponent,javax.swing.JComponent,I,java.util.List):com.intellij.designer.LightToolWindow
- createGearActions():com.intellij.openapi.actionSystem.AnAction
- pa:createToggleAction(com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.designer.ToggleEditorModeAction
- dispose():V
- f:dispose(com.intellij.designer.DesignerEditorPanelFacade):V
- pf:disposeContent(com.intellij.designer.DesignerEditorPanelFacade):V
- getActiveDesigner():com.intellij.designer.DesignerEditorPanelFacade
- pa:getAnchor():com.intellij.openapi.wm.ToolWindowAnchor
- p:getComponentName():java.lang.String
- pf:getContent(com.intellij.designer.DesignerEditorPanelFacade):java.lang.Object
- pa:getDesigner(com.intellij.openapi.fileEditor.FileEditor):com.intellij.designer.DesignerEditorPanelFacade
- f:getEditorMode():com.intellij.openapi.wm.ToolWindowAnchor
- pf:initGearActions():V
- pa:initToolWindow():V
- pf:isEditorMode():Z
- pf:setEditorMode(com.intellij.openapi.wm.ToolWindowAnchor):V
- pa:updateToolWindow(com.intellij.designer.DesignerEditorPanelFacade):V
a:com.intellij.designer.ToggleEditorModeAction
- com.intellij.openapi.actionSystem.ToggleAction
- pf:myManager:com.intellij.designer.LightToolWindowManager
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.designer.LightToolWindowManager,com.intellij.openapi.project.Project,com.intellij.openapi.wm.ToolWindowAnchor):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:getOppositeManager():com.intellij.designer.LightToolWindowManager
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
f:com.intellij.designer.model.ErrorInfo
- <init>(java.lang.String,java.lang.String,com.intellij.codeHighlighting.HighlightDisplayLevel):V
- getLevel():com.intellij.codeHighlighting.HighlightDisplayLevel
- getName():java.lang.String
- getPropertyName():java.lang.String
- getQuickFixes():java.util.List
- s:haveFixes(java.util.List):Z
a:com.intellij.designer.model.PropertiesContainer
- <init>():V
- a:getProperties():java.util.List
a:com.intellij.designer.model.Property
- <init>(com.intellij.designer.model.Property,java.lang.String):V
- availableFor(java.util.List):Z
- closeEditorDuringRefresh():Z
- createForNewPresentation():com.intellij.designer.model.Property
- createForNewPresentation(com.intellij.designer.model.Property,java.lang.String):com.intellij.designer.model.Property
- doCopy(com.intellij.designer.model.PropertiesContainer,java.lang.Object):java.awt.datatransfer.Transferable
- equals(java.lang.Object):Z
- getChildren(com.intellij.designer.model.PropertiesContainer):java.util.List
- a:getEditor():com.intellij.designer.propertyTable.PropertyEditor
- getGroup():java.lang.String
- getJavadocElement():com.intellij.psi.PsiElement
- getJavadocText():java.lang.String
- f:getName():java.lang.String
- f:getParent():com.intellij.designer.model.Property
- getPath():java.lang.String
- a:getRenderer():com.intellij.designer.propertyTable.PropertyRenderer
- getTooltip():java.lang.String
- getValue(com.intellij.designer.model.PropertiesContainer):java.lang.Object
- f:isDefaultRecursively(com.intellij.designer.model.PropertiesContainer):Z
- isDefaultValue(com.intellij.designer.model.PropertiesContainer):Z
- isDeprecated():Z
- isEditable(com.intellij.designer.model.PropertiesContainer):Z
- isExpert():Z
- isImportant():Z
- needRefreshPropertyList():Z
- needRefreshPropertyList(com.intellij.designer.model.PropertiesContainer,java.lang.Object,java.lang.Object):Z
- setDefaultValue(com.intellij.designer.model.PropertiesContainer):V
- setDeprecated(Z):V
- setExpert(Z):V
- setImportant(Z):V
- setValue(com.intellij.designer.model.PropertiesContainer,java.lang.Object):V
- showAsDefault(com.intellij.designer.model.PropertiesContainer):Z
com.intellij.designer.model.PropertyContext
a:com.intellij.designer.model.QuickFix
- java.lang.Runnable
- <init>(java.lang.String,javax.swing.Icon):V
- f:getIcon():javax.swing.Icon
- f:getName():java.lang.String
f:com.intellij.designer.propertyTable.InplaceContext
- <init>():V
- <init>(C):V
- getText(java.lang.String):java.lang.String
- isStartChar():Z
a:com.intellij.designer.propertyTable.PropertyEditor
- <init>():V
- activate():V
- f:addPropertyEditorListener(com.intellij.designer.propertyTable.PropertyEditorListener):V
- f:fireEditingCancelled():V
- f:fireValueCommitted(Z,Z):V
- a:getComponent(com.intellij.designer.model.PropertiesContainer,com.intellij.designer.model.PropertyContext,java.lang.Object,com.intellij.designer.propertyTable.InplaceContext):javax.swing.JComponent
- getPreferredFocusedComponent():javax.swing.JComponent
- a:getValue():java.lang.Object
- pf:preferredSizeChanged():V
- f:removePropertyEditorListener(com.intellij.designer.propertyTable.PropertyEditorListener):V
- a:updateUI():V
com.intellij.designer.propertyTable.PropertyEditorListener
- java.util.EventListener
- a:editingCanceled(com.intellij.designer.propertyTable.PropertyEditor):V
- a:preferredSizeChanged(com.intellij.designer.propertyTable.PropertyEditor):V
- a:valueCommitted(com.intellij.designer.propertyTable.PropertyEditor,Z,Z):V
com.intellij.designer.propertyTable.PropertyRenderer
- a:getComponent(com.intellij.designer.model.PropertiesContainer,com.intellij.designer.model.PropertyContext,java.lang.Object,Z,Z):javax.swing.JComponent
- a:updateUI():V
a:com.intellij.designer.propertyTable.PropertyTable
- com.intellij.ui.table.JBTable
- p:myContainers:java.util.List
- pf:myExpandedProperties:java.util.Set
- p:myProperties:java.util.List
- <init>():V
- pa:doRestoreDefault(com.intellij.util.ThrowableRunnable):Z
- pa:doSetValue(com.intellij.util.ThrowableRunnable):Z
- editCellAt(I,I,java.util.EventObject):Z
- editingStopped(javax.swing.event.ChangeEvent):V
- s:extractProperty(java.util.List,java.lang.String):com.intellij.designer.model.Property
- s:findProperty(java.util.List,com.intellij.designer.model.Property):I
- s:findProperty(java.util.List,java.lang.String):com.intellij.designer.model.Property
- getCellEditor(I,I):javax.swing.table.TableCellEditor
- getCellRenderer(I,I):javax.swing.table.TableCellRenderer
- pa:getErrorAttributes(com.intellij.lang.annotation.HighlightSeverity):com.intellij.openapi.editor.colors.TextAttributesKey
- getErrorInfoForRow(I):com.intellij.designer.model.ErrorInfo
- pa:getErrors(com.intellij.designer.model.PropertiesContainer):java.util.List
- p:getGroupComparator():java.util.Comparator
- p:getProperties(com.intellij.designer.model.PropertiesContainer):java.util.List
- p:getPropertyComparator():java.util.Comparator
- p:getPropertyContext():com.intellij.designer.model.PropertyContext
- getSelectionProperty():com.intellij.designer.model.Property
- getToolTipText(java.awt.event.MouseEvent):java.lang.String
- pf:getValue(com.intellij.designer.model.Property):java.lang.Object
- isDefault(com.intellij.designer.model.Property):Z
- isShowExpertProperties():Z
- isShowGroups():Z
- isSorted():Z
- s:moveProperty(java.util.List,java.lang.String,java.util.List,I):V
- removeEditor():V
- restoreDefaultValue():V
- setColumnNames(java.lang.String[]):V
- setShowGroups(Z):V
- setSorted(Z):V
- setUI(javax.swing.plaf.TableUI):V
- setValueAt(java.lang.Object,I,I):V
- showExpert(Z):V
- update():V
- update(java.util.List,com.intellij.designer.model.Property):V
- p:updateEditActions():V
- s:updateRenderer(javax.swing.JComponent,Z):V
a:com.intellij.designer.propertyTable.editors.ComboEditor
- com.intellij.designer.propertyTable.PropertyEditor
- pf:myCombo:com.intellij.openapi.ui.ComboBox
- pf:myComboBorder:javax.swing.border.Border
- <init>():V
- activate():V
- p:createComboListeners():com.intellij.designer.propertyTable.editors.ComboEditor$ComboEditorListener
- getPreferredFocusedComponent():javax.swing.JComponent
- s:installListeners(javax.swing.JComboBox,com.intellij.designer.propertyTable.editors.ComboEditor$ComboEditorListener):V
- updateUI():V
c:com.intellij.designer.propertyTable.editors.ComboEditor$ComboEditorListener
- <init>(com.intellij.designer.propertyTable.PropertyEditor):V
- p:onCancelled():V
- p:onValueChosen():V
c:com.intellij.designer.propertyTable.editors.TextEditor
- com.intellij.designer.propertyTable.PropertyEditor
- f:myTextField:com.intellij.ui.components.JBTextField
- <init>():V
- getComponent(com.intellij.designer.model.PropertiesContainer,com.intellij.designer.model.PropertyContext,java.lang.Object,com.intellij.designer.propertyTable.InplaceContext):javax.swing.JComponent
- getPreferredFocusedComponent():javax.swing.JComponent
- getValue():java.lang.Object
- p:setEditorValue(com.intellij.designer.model.PropertiesContainer,java.lang.Object):V
- updateUI():V
f:com.intellij.designer.propertyTable.renderers.BooleanRenderer
- javax.swing.JCheckBox
- com.intellij.designer.propertyTable.PropertyRenderer
- <init>():V
- getComponent(com.intellij.designer.model.PropertiesContainer,com.intellij.designer.model.PropertyContext,java.lang.Object,Z,Z):javax.swing.JComponent
c:com.intellij.designer.propertyTable.renderers.LabelPropertyRenderer
- javax.swing.JLabel
- com.intellij.designer.propertyTable.PropertyRenderer
- <init>(java.lang.String):V
- p:customize(java.lang.Object):V
- getComponent(com.intellij.designer.model.PropertiesContainer,com.intellij.designer.model.PropertyContext,java.lang.Object,Z,Z):javax.swing.JComponent
