### auto-generated section `build` start
load("@rules_java//java:defs.bzl", "java_library")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_javac_options")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_test")

java_library(
  name = "resources",
  resources = glob(["resources/**/*"], allow_empty = True, exclude = ["**/module-info.java"])
)

kt_javac_options(
  name = "custom-javac-options",
  x_ep_disable_all_checks = True,
  warn = "off",
  add_exports = [
    "java.desktop/sun.awt=ALL-UNNAMED",
    "java.desktop/sun.font=ALL-UNNAMED",
    "java.desktop/java.awt.peer=ALL-UNNAMED",
    "jdk.attach/sun.tools.attach=ALL-UNNAMED",
    "java.desktop/sun.awt.image=ALL-UNNAMED",
    "java.desktop/sun.awt.datatransfer=ALL-UNNAMED",
    "java.desktop/sun.swing=ALL-UNNAMED",
    "java.base/sun.nio.fs=ALL-UNNAMED",
  ]
)

kt_jvm_library(
  name = "ide-impl",
  module_name = "intellij.platform.ide.impl",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True, exclude = ["**/module-info.java"]),
  javac_opts = ":custom-javac-options",
  kotlinc_opts = "//:k17",
  plugins = ["@libraries//:serialization_plugin"],
  deps = [
    "@community//lib:mac",
    "@community//platform/platform-api:ide",
    "@libraries//:oro",
    "@community//platform/lang-api:lang",
    "@libraries//:jna-platform",
    "@libraries//:winp",
    "@libraries//:swingx-core",
    "@community//platform/core-impl",
    "@libraries//:miglayout-swing",
    "@community//platform/indexing-api:indexing",
    "@community//platform/projectModel-impl",
    "@community//platform/workspace/jps:workspace-jps",
    "@libraries//:commons-imaging",
    "@libraries//:guava",
    "@community//jps/model-impl:jps-model-impl",
    "@community//platform/analysis-impl",
    "@community//platform/editor-ui-ex:editor-ex",
    "@libraries//:gson",
    "@libraries//:httpmime",
    "@community//platform/diff-api:diff",
    "@libraries//:imgscalr-lib",
    "@community//platform/built-in-server-api:builtInServer",
    "@libraries//:kotlin-stdlib",
    "@libraries//:streamex",
    "@libraries//:kotlinx-coroutines-core-jvm",
    "@libraries//:netty-codec-http2",
    "@libraries//:jackson-core",
    "@libraries//:java-compatibility",
    "@libraries//:kotlin-reflect",
    "@libraries//:jackson-databind",
    "@community//platform/util/ui:util-ui",
    "@community//platform/platform-util-io-impl:ide-util-io-impl",
    "@community//platform/util",
    "@community//platform/instanceContainer",
    "@community//platform/service-container:serviceContainer",
    "@libraries//:jcef",
    "@community//platform/statistics",
    "@libraries//:asm-all",
    "@libraries//:jsoup",
    "@community//platform/rd-platform-community:rd-community",
    "@libraries//:intellij-deps-fastutil",
    "@libraries//:blockmap",
    "@community//platform/util-class-loader:util-classLoader",
    "@libraries//:netty-buffer",
    "@community//platform/util/concurrency",
    "@community//platform/core-ui",
    "@libraries//:marketplace-zip-signer",
    "@libraries//:caffeine",
    "@libraries//:classgraph",
    "@community//platform/util/zip:util-zip",
    "@libraries//:icu4j",
    "@community//platform/util/xmlDom:util-xmlDom",
    "@community//platform/ide-core-impl",
    "@community//platform/platform-util-netty:ide-util-netty",
    "@libraries//:aalto-xml",
    "@libraries//:jbr-api",
    "@libraries//:kotlinx-serialization-json-jvm",
    "@libraries//:kotlinx-serialization-core-jvm",
    "@community//platform/util/jdom:util-jdom",
    "@libraries//:jvm-native-trusted-roots",
    "@libraries//:opentelemetry-sdk",
    "@libraries//:opentelemetry-semconv",
    "@community//platform/diagnostic/telemetry:diagnostic-telemetry",
    "@libraries//:opentelemetry-extension-kotlin",
    "@libraries//:HdrHistogram",
    "@community//platform/code-style-impl:codeStyle-impl",
    "@community//platform/util/text-matching:util-text-matching",
    "@libraries//:hash4j",
    "@community//platform/util-ex",
    "@community//platform/backend/workspace:backend-workspace",
    "@community//platform/diagnostic/startUpPerformanceReporter:diagnostic-startUpPerformanceReporter",
    "@community//platform/diagnostic/telemetry-impl:diagnostic-telemetry-impl",
    "@community//platform/diagnostic",
    "@community//platform/ijent",
    "@community//platform/backend/observation:backend-observation",
    "@libraries//:pty4j",
    "@community//platform/settings",
    "@community//platform/util/coroutines:util-coroutines",
    "@libraries//:annotations",
    "@libraries//:rwmutex-idea",
    "@libraries//:lz4-java",
    "@community//platform/ml-api:ml",
    "@libraries//:kotlinx-collections-immutable-jvm",
    "@community//platform/util/storages:util-io-storages",
    "@community//platform/core-nio-fs",
    "@community//platform/ijent/impl:ijent-community-impl",
    "@community//platform/ijent/buildConstants:ijent-community-buildConstants",
    "@community//platform/kernel/shared:kernel",
    "@community//platform/progress/shared:ide-progress",
    "@community//platform/project/shared:project",
    "@community//platform/jbr",
    "@community//platform/ui.jcef:ui-jcef",
    "@community//fleet/util/core:fleet-util-core",
    "@community//platform/eelProvider:eel-provider",
    "@community//platform/platform-impl/ui:ide-ui",
  ],
  exports = [
    "@community//platform/platform-api:ide",
    "@community//platform/core-impl",
    "@community//platform/editor-ui-ex:editor-ex",
    "@libraries//:kotlin-stdlib",
    "@community//platform/util/ui:util-ui",
  ],
  runtime_deps = [
    ":resources",
    "@libraries//:slf4j-api",
    "@libraries//:slf4j-jdk14",
    "@community//platform/object-serializer:objectSerializer",
    "@libraries//:groovy-jsr223",
    "@libraries//:groovy-json",
    "@libraries//:groovy-templates",
    "@libraries//:groovy-xml",
    "@libraries//:protobuf-java",
    "@libraries//:jgoodies-common",
    "@libraries//:forms",
    "@community//platform/settings-local",
    "@libraries//:bcpkix-jdk18on",
    "@community//platform/platform-resources:resources",
    "@community//platform/platform-resources-en:resources-en",
  ]
)

kt_jvm_test(
  name = "ide-impl_test",
  visibility = ["//visibility:public"],
  srcs = glob(["testSrc/**/*.kt", "testSrc/**/*.java"], allow_empty = True, exclude = ["**/module-info.java"]),
  javac_opts = ":custom-javac-options",
  kotlinc_opts = "//:k17",
  plugins = ["@libraries//:serialization_plugin"],
  deps = [
    ":ide-impl",
    "@community//lib:mac",
    "@libraries//:assertj-core",
  ],
  runtime_deps = [":resources"]
)
### auto-generated section `build` end