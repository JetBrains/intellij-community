error.hint.file.is.readonly=File {0} is read-only
error.dialog.readonly.file.title=File Is Read-Only
error.dialog.readonly.files.title=Cannot Modify Read-Only Files
error.dialog.readonly.files.message={0} contains read-only file(s).\nProcess all other (writeable) files?
reformat.directory.dialog.options=Options
reformat.directory.dialog.filters=Filters
process.scope.directory=Directory ''{0}''
process.scope.project=Project ''{0}''
process.scope.module=Module ''{0}''
process.scope.changed.files=process only VCS changed files
reformat.code.accept.button.text=Run
process.scope.file=&File {0}
reformat.option.selected.text=&Selected text
reformat.option.all.files.in.directory=&All files in directory {0}
reformat.option.include.subdirectories=&Include subdirectories
reformat.option.optimize.imports=&Optimize imports
reformat.option.rearrange.entries=&Rearrange entries
reformat.option.vcs.changed.region=Only &VCS changed text
reformat.progress.file.with.known.name.text=Reformatting {0}
reformat.and.optimize.progress.common.text=Preparing imports...
reformat.progress.common.text=Reformatting code...
configure.code.style.on.fragment.dialog.title=Adjust code style settings
configure.code.style.on.fragment.dialog.cancel=Skip
configure.code.style.on.fragment.dialog.progress.text=Filtering settings affecting selected code fragment...
configure.code.style.on.fragment.dialog.progress.text.under=Press 'Skip' to show all settings
process.optimize.imports=Optimize Imports
process.optimize.imports.before.commit=Optimize Imports Before Commit
progress.text.optimizing.imports=Optimizing imports...
progress.reformat.and.optimize.common.command.text=Reformat and Optimize Imports
progress.reformat.stage.wrapping.blocks=Preparing...
progress.reformat.stage.processing.blocks=Calculating changes...
progress.reformat.stage.applying.changes=Storing changes...
progress.reformat.stage.expanding.children.indents=Expanding necessary children indents
process.rearrange.code=Rearranging code...
process.reformat.code=Reformat Code
process.reformat.code.before.commit=Reformat Code Before Commit
process.rearrange.code.before.commit=Rearrange Code Before Commit
dialog.reformat.files.title=Reformat Files
dialog.reformat.files.optimize.imports.checkbox=&Optimize imports
dialog.reformat.files.reformat.selected.files.label=Reformat selected files?
command.name.typing=Typing
dialog.import.on.paste.title=Select Classes to Import
dialog.import.on.paste.title2=Select Elements to Import
dialog.paste.on.import.text=<html>The code fragment which you have pasted uses classes that are not accessible by imports in the new context.<br/>Select classes that you want to import to the new file.</html>
dialog.paste.on.import.text2=<html>The code fragment which you have pasted uses elements that are not accessible by imports in the new context.<br/>Select elements that you want to import to the new file.</html>
paste.data.flavor.folding=FoldingData
paste.dataflavor.referencedata=ReferenceData
generate.constructor.fields.chooser.title=Choose Fields to Initialize by Constructor
error.attempt.to.generate.constructor.for.anonymous.class=Cannot add constructor to an anonymous class
generate.constructor.super.constructor.chooser.title=Choose Super Class Constructor
generate.delegate.method.chooser.title=Select Methods to Generate Delegates for
generate.delegate.target.chooser.title=Select Target to Generate Delegates for
generate.equals.and.hashcode.already.defined.warning=Methods ''boolean equals(Object)'' and ''int hashCode()'' are already defined\nfor class {0}. Do you want to delete them and proceed?
generate.equals.and.hashcode.already.defined.warning.anonymous=Methods 'boolean equals(Object)' and 'int hashCode()' are already defined\nfor this anonymous class. Do you want to delete them and proceed?
generate.equals.and.hashcode.already.defined.title=Generate equals() and hashCode()
generate.equals.and.hashcode.error.no.object.class.message=Cannot generate equals() and hashCode().\nNo java.lang.Object class found.
generate.equals.and.hashcode.error.no.object.class.title=No java.lang.Object
generate.equals.compare.nested.arrays.comment= // Compare nested arrays - values of {0} here
generate.equals.compare.arrays.comment= // Probably incorrect - comparing Object[] arrays with Arrays.equals
generate.getter.setter.title=Select Fields to Generate Getters and Setters
generate.getter.fields.chooser.title=Select Fields to Generate Getters
generate.setter.fields.chooser.title=Select Fields to Generate Setters
generate.setter.template=&Setter template:
generate.getter.template=&Getter template:
override.implement.broken.file.template.message=Please Correct "Overridden/Implemented Method Body" Template
override.implement.broken.file.template.title=File Template Error
methods.to.implement.chooser.title=Select Methods to Implement
methods.to.override.chooser.title=Select Methods to Override
methods.to.override.implement.chooser.title=Select Methods to Override/Implement
generate.list.popup.title=Generate
surround.with.cast.template=((Type)expr)
surround.with.dowhile.template=do / while
surround.with.for.template=for
surround.with.ifelse.expression.template=if (expr) {...} else {...}
surround.with.ifelse.template=if / else
surround.with.if.expression.template=if (expr) {...}
surround.with.if.template=if
surround.with.not.instanceof.template=!(expr instanceof Type)
surround.with.not.template=!(expr)
surround.with.parenthesis.template=(expr)
surround.with.runnable.template=Runnable
surround.with.synchronized.template=synchronized
surround.with.try.catch.finally.template=try / catch / finally
surround.with.try.catch.template=try / catch
surround.with.try.catch.incorrect.template.message=Invalid File Template for Catch Body!
surround.with.try.catch.incorrect.template.title=Surround With Try / Catch
surround.with.try.finally.template=try / finally
surround.with.while.template=while
surround.with.runtime.type.template=((RuntimeType)expr)
surround.with.chooser.title=Surround With
unwrap.popup.title=Choose the statement to unwrap/remove
unwrap.if=Unwrap 'if...'
unwrap.else=Unwrap 'else...'
remove.else=Remove 'else...'
unwrap.while=Unwrap 'while...'
unwrap.for=Unwrap 'for...'
unwrap.braces=Unwrap braces
unwrap.try=Unwrap 'try...'
unwrap.conditional=Unwrap 'f ? a : b'
remove.catch=Remove 'catch...'
unwrap.array.initializer=Unwrap array initializer
unwrap.synchronized=Unwrap 'synchronized...'
unwrap.with.placeholder=Unwrap ''{0}''
unwrap.anonymous=Unwrap 'anonymous...'
unwrap.lambda=Unwrap 'lambda...'
generate.equals.hashcode.wizard.title=Generate equals() and hashCode()
generate.equals.hashcode.equals.fields.chooser.title=Choose &fields to be included in equals()
generate.equals.hashcode.hashcode.fields.chooser.title=Choose &fields to be included in hashCode()
generate.equals.hashcode.non.null.fields.chooser.title=Select all non-null &fields
generate.equals.hashcode.use.getters=Use &getters during code generation
generate.equals.hashcode.template=&Template:
generate.equals.hashcode.accept.sublcasses=Accept &subclasses as parameter to equals() method
generate.equals.hashcode.accept.sublcasses.explanation=<html><body>While generally incompliant to Object.equals() specification accepting<br>subclasses might be necessary for generated \
method to work correctly<br>with frameworks, which generate Proxy subclasses like Hibernate.</body></html>
generate.equals.hashcode.internal.error=Internal error
generate.equals.warning.equals.for.nested.arrays.not.supported=equals() for nested arrays is not supported
generate.equals.warning.generated.equals.could.be.incorrect=Generated equals() for Object[] can be incorrect
generate.equals.hashcode.warning.hashcode.for.arrays.is.not.supported=hashCode () for arrays is not supported
highlight.thrown.exceptions.chooser.all.entry=All listed
highlight.exceptions.thrown.chooser.title=Choose Exception Classes to Highlight
highlight.exceptions.thrown.notfound=No exceptions thrown in the method found
status.bar.exit.points.highlighted.message={0} exit {0, choice, 1#point|2#points} highlighted (press {1} again to remove the highlighting, Escape to remove all highlighting)
status.bar.highlighted.usages.message={0} {0, choice, 1#usage|2#usages} of {1} found (press {2} again to remove the highlighting, Escape to remove all highlighting)
status.bar.highlighted.usages.no.target.message={0} {0, choice, 1#usage|2#usages} found (press {2} again to remove the highlighting, Escape to remove all highlighting)
status.bar.overridden.methods.highlighted.message={0} overridden {0, choice, 1#method|2#methods} found (press {1} again to remove the highlighting, Escape to remove all highlighting)
status.bar.highlighted.usages.not.found.message=No usages of {0} found
status.bar.highlighted.usages.not.found.no.target.message=No usages found
parameter.info.no.parameters=<no parameters>
xml.tag.info.no.attributes=<no attributes>
n.of.m={0} of {1}
quick.definition.back=Back
quick.definition.forward=Forward
quick.definition.edit.source=Edit Source
quick.definition.show.source=Show Source
i18n.quickfix.property.panel.title=Property Info
i18n.quickfix.property.panel.update.all.files.in.bundle.checkbox=Update all properties files in &Resource bundle
i18n.quickfix.property.panel.properties.file.label=&Properties File:
i18n.quickfix.property.panel.property.value.label=Property &Value:
i18n.quickfix.property.panel.property.key.label=Property &Key:
i18n.quickfix.code.panel.title=Java Code Info
i18n.quickfix.code.panel.resource.bundle.expression.label=Resource bundle &expression:
i18n.quickfix.preview.panel.title=Preview
quickfix.i18n.concatentation=I18nize string concatenation containing hard coded string literal
quickfix.i18n.concatentation.error=String concatenation not found
quickfix.i18n.command.name=I18nize
inspection.i18n.display.name=Hard coded strings
inspection.i18n.option.ignore.assert=Ignore for assert statement arguments
inspection.i18n.option.ignore.for.exception.constructor.arguments=Ignore for exception constructor arguments:
inspection.i18n.option.ignore.for.specified.exception.constructor.arguments=Ignore for specified exception constructor arguments
inspection.i18n.option.ignore.for.junit.assert.arguments=Ignore for JUnit assert arguments
inspection.i18n.option.ignore.qualified.class.names=Ignore literals which have value equal to existing qualified class name
inspection.i18n.option.ignore.property.keys=Ignore literals which have value equal to existing property key
inspection.i18n.option.ignore.nonalphanumerics=Ignore literals which do not contain alphabetic characters
inspection.i18n.quickfix=I18nize hard coded string literal
inspection.i18n.message.general.with.value=Hard coded string literal: {0}
inspection.unresolved.property.key.reference.name=Invalid property key
inspection.unresolved.property.key.reference.message=String literal ''{0}'' doesn''t appear to be valid property key
inspection.invalid.resource.bundle.reference=Invalid resource bundle reference ''{0}''
i18nize.dialog.title=I18nize Hardcoded String
i18nize.dialog.error.jdk.message=Class 'java.util.ResourceBundle' cannot be found.\nPlease setup correct JDK.
i18nize.dialog.error.jdk.title=Class Not Found
i18nize.dialog.property.file.chooser.title=Choose Properties File
i18nize.dialog.template.link.label=Edit I18n template
i18nize.dialog.error.property.already.defined.message=Property ''{0}'' already exists in the file ''{1}''. Override its value?
i18nize.dialog.error.property.already.defined.title=Property Already Exists
intention.split.declaration.family=Split Declaration
intention.join.declaration.family=Join Declaration and Assignment
intention.split.declaration.text=Split into separate declarations
intention.join.declaration.text=Join declaration and assignment
intention.split.declaration.assignment.text=Split into declaration and assignment
intention.split.if.family=Split If
intention.split.if.text=Split into 2 if's
intention.split.filter.text=Split into filter's chain
intention.split.filter.family=Split filter
intention.merge.filter.text=Merge filter's chain
intention.merge.filter.family=Merge filters
intention.inline.map.inline.text=Inline ''{0}'' body into the next ''{1}'' call
intention.inline.map.merge.text=Merge ''{0}'' call and ''{1}'' call
intention.inline.map.family=Inline stream mapping method
intention.extract.map.step.family=Extract to separate mapping method
intention.extract.map.step.text=Extract variable ''{0}'' to ''{1}'' operation
intention.compose.function.text=Replace nested function call with andThen call
intention.compose.function.family=Replace nested function call with composition
intention.introduce.variable.text=Introduce local variable
intention.encapsulate.field.text=Encapsulate field
intention.implement.abstract.method.family=Implement Abstract Method
intention.implement.abstract.method.text=Implement method ''{0}''
intention.override.method.text=Override method ''{0}''
intention.add.annotation.family=Add Annotation
intention.add.on.demand.static.import.family=Add On Demand Static Import
intention.add.on.demand.static.import.text=Add on demand static import for ''{0}''
intention.add.single.member.static.import.family=Add Single-Member Static Import
intention.add.single.member.static.import.text=Add static import for ''{0}''
intention.add.single.member.import.text=Add import for ''{0}''
intention.replace.concatenation.with.formatted.output.family=Replace Concatenation with Formatted Output
intention.replace.concatenation.with.formatted.output.text=Replace '+' with 'java.text.MessageFormat.format()'
intention.color.chooser.dialog=Choose Color
intention.convert.to.basic.latin=Convert to Basic Latin
intention.surround.resource.with.ARM.block=Surround with try-with-resources block
intention.surround.with.ARM.block.template=try-with-resources
dialog.create.field.from.parameter.title=Create Field
dialog.create.field.from.parameter.already.exists.text=Use existing field ''{0}''?
dialog.create.field.from.parameter.already.exists.title=Field Already Exists
dialog.create.field.from.parameter.field.type.label=Field of type:
dialog.create.field.from.parameter.field.name.label=Name:
dialog.create.field.from.parameter.declare.final.checkbox=Declare &final
dialog.create.class.destination.package.label=Destination package:
dialog.create.class.package.chooser.title=Choose Destination Package
create.directory.command=Create directory
dialog.create.class.label=Create {0}:
dialog.create.class.name=Create {0} {1}
intention.implement.abstract.class.family=Implement abstract class or interface
intention.implement.abstract.class.default.text=Implement abstract class
intention.implement.abstract.class.interface.text=Implement interface
intention.implement.abstract.class.subclass.text=Create subclass
intention.error.cannot.create.class.message=Cannot Create Class ''{0}''
intention.error.cannot.create.class.title=Failed to Create Class
intention.assign.field.from.parameter.text=Assign Parameter to Field ''{0}''
intention.assign.field.from.parameter.family=Assign Parameter to Field
intention.create.field.from.parameter.text=Create field for parameter ''{0}''
intention.create.field.from.parameter.family=Create field for parameter
intention.bind.fields.from.parameters.text=Bind {0} parameters to fields
intention.bind.fields.from.parameters.family=Bind parameters to fields
intention.implement.abstract.method.searching.for.descendants.progress=Searching For Descendants...
intention.implement.abstract.method.error.no.classes.message=There are no classes found where this method can be implemented
intention.implement.abstract.method.error.no.classes.title=No Classes Found
intention.implement.abstract.method.class.chooser.title=Choose Implementing Class
intention.implement.abstract.method.command.name=Implement method
intention.invert.if.condition=Invert 'if' condition
intention.extract.if.condition.text=Extract if ({0})
intention.extract.if.condition.family=Extract If Condition
intention.underscores.in.literals.family=Underscores in numeric literals
intention.remove.literal.underscores=Remove underscores from literal
intention.insert.literal.underscores=Insert underscores into literal
intention.replace.cast.with.var.text=Replace ''{0}'' with ''{1}''
intention.replace.cast.with.var.family=Replace cast with variable
intention.convert.color.representation.text=Convert to ''new Color{0}''
intention.convert.color.representation.family=Convert Color representation
intention.break.string.on.line.breaks.text=Break string on '\\n'
intention.unwrap.else.branch=Unwrap 'else' branch
intention.unwrap.else.branch.changes.semantics=Unwrap 'else' branch (changes semantics)


intention.create.test=Create Test
intention.create.test.dialog.testing.library=Testing &library:
intention.create.test.dialog.language=Language:
intention.create.test.dialog.class.name=Class name:
intention.create.test.dialog.super.class=Superclass:
intention.create.test.dialog.choose.super.class=Choose Superclass
intention.create.test.dialog.generate=Generate:
intention.create.test.dialog.show.inherited=Show &inherited methods
intention.create.test.dialog.setUp=set&Up/@Before
intention.create.test.dialog.tearDown=tear&Down/@After
intention.create.test.dialog.select.methods=Generate test &methods for:
intention.create.test.dialog.library.not.found={0} library not found in the module
intention.create.test.dialog.fix.library=Fix
intention.create.test.dialog.java=Java

lightbulb.tooltip=Click or press {0}
dialog.intention.settings.intention.list.title=Intention List
dialog.intention.settings.description.panel.title=Description
dialog.intention.settings.description.usage.example.title=Usage Example
intention.settings=Intentions
intention.settings.category.text=\
  <center>You have selected the intention category ''<b>{0}</b>''.</center>\
  By clicking the checkbox, you can enable/disable all intentions in this category.\
  To enable/disable a particular intention, select the intention inside this category.
templates.postfix.settings.category.text=<html><body><font face=\"verdana\" size=\"-1\">\
  You have selected the postfix completion language.<br>\
  By clicking the checkbox, you can enable/disable all postfix templates for the language.<br>\
  To enable/disable a postfix template select it inside the group.<br>\
  </font></body></html>
templates.postfix.settings.category.before=The sample code featuring selected template will be shown here.\n \
  <spot>Flashing rectangle</spot> shows the place where intention is applicable.
templates.postfix.settings.category.after=Postfix completion invocation result will be shown here.
javadoc.description.copied.from.interface=Description copied from interface:
javadoc.description.copied.from.class=Description copied from class:
javadoc.description.copied.from.field=Description copied from field:
javadoc.deprecated=Deprecated
javadoc.since=Since:
javadoc.see.also=See Also:
javadoc.parameters=Parameters:
javadoc.returns=Returns:
javadoc.throws=Throws:
javadoc.method.in.interface={0} in interface {1}
javadoc.method.in.class={0} in class {1}
javadoc.method.overrides=Overrides:
javadoc.method.specified.by=Specified by:
javadoc.external.fetch.error.message=Cannot fetch remote documentation: internal error
searching.for.implementations=Searching For Implementations...

goto.implementation.chooserTitle=<html><body>Choose Implementation of <b>{0}</b> ({1} found{2})</body></html>
goto.implementation.findUsages.title=Implementations of {0}
goto.implementation.notFound=No implementations found

goto.test.chooserTitle.test=<html><body>Choose Test for <b>{0}</b> ({1} found{2})</body></html>
goto.test.findUsages.test.title=Tests for {0}
goto.test.chooserTitle.subject=<html><body>Choose Test Subject for <b>{0}</b> ({1} found{2})</body></html>
goto.test.findUsages.subject.title=Test Subjects for {0}
goto.test.notFound=No test subjects found

incremental.search.tooltip.prefix=Search for:
goto.super.property.chooser.title=Choose super property
goto.super.method.chooser.title=Choose super method
goto.super.method.of.chooser.title=Choose Super Method of {0}
goto.super.method.findUsages.title=Super methods of {0}
goto.super.class.chooser.title=Choose super class or interface
javadoc.action.back=Back
javadoc.action.forward=Forward
javadoc.action.view.external=View External Documentation
javadoc.documentation.not.found.message=The documentation for this element is not found.\nPlease add all the needed paths to API docs in Project Settings.
javadoc.documentation.not.found.title=No Documentation
javadoc.fetching.progress=Fetching Documentation...
no.documentation.found=No documentation found.
javadoc.constructor.candidates=<html>Candidates for new <b>{0}</b>() are:<br>{1}</html>
javadoc.candidates=<html>Candidates for method call <b>{0}</b> are:<br><br>{1}</html>
javadoc.candidates.not.found=<html>No candidates found for method call <b>{0}</b>.</html>
declaration.navigation.title=Choose Declaration
template.shortcut.enter=Enter
template.shortcut.tab=Tab
template.shortcut.space=Space
template.shortcut.custom=Custom
dialog.edit.live.template.title=Edit Live Template
dialog.add.live.template.title=Add Live Template
templates.no.defined=No templates defined in this context
templates.surround.no.defined=No surround templates defined in this context
templates.settings.page.title=Live Templates
templates.select.template.chooser.title=Select Template
templates.dialog.edit.variables.title=Edit Template Variables
templates.dialog.edit.variables.border.title=Variables
templates.dialog.edit.variables.action.move.up=Move &Up
templates.dialog.edit.variables.action.move.down=Move &Down
templates.dialog.edit.variables.table.column.name=Name
templates.dialog.edit.variables.table.column.expression=Expression
templates.dialog.edit.variables.table.column.default.value=Default value
templates.dialog.edit.variables.table.column.skip.if.defined=Skip if defined
templates.dialog.table.column.abbreviation=Abbreviation
templates.dialog.table.column.description=Description
templates.dialog.table.column.active=Active
templates.dialog.shortcut.chooser.label=By default expand with
dialog.copy.live.template.title=Copy Live Template
dialog.edit.template.shortcut.default=Default ({0})
dialog.edit.template.template.text.title=&Template text:
dialog.edit.template.button.edit.variables=&Edit variables
dialog.edit.template.label.abbreviation=A&bbreviation:
dialog.edit.template.label.group=&Group:
dialog.edit.template.label.description=&Description:
dialog.edit.template.options.title=Options
dialog.edit.template.label.expand.with=E&xpand with
dialog.edit.template.checkbox.reformat.according.to.style=&Reformat according to style
dialog.edit.template.checkbox.shorten.fq.names=Shorten &FQ names
dialog.edit.template.checkbox.use.static.import=Use static &import if possible
dialog.edit.template.context.title=Context
dialog.edit.template.checkbox.html=&HTML
dialog.edit.template.checkbox.xml=&XML
dialog.edit.template.checkbox.jsp=JS&P
dialog.edit.template.checkbox.smart.type.completion=Smart type c&ompletion
dialog.edit.template.error.title=Cannot Save
dialog.edit.template.error.malformed.abbreviation=Cannot save the template.\nTemplate abbreviation should contain only letters, digits, dots and hyphens.
dialog.edit.template.error.already.exists=Cannot save the template.\nTemplate with the abbreviation \"{0}\"\nalready exists in group \"{1}\".\nPlease choose a different abbreviation or group.
finish.template.command=Finish Template
insert.code.template.command=Insert Code Template
template.next.variable.command=Go to Next Code Template Tab
template.previous.variable.command=Go to Previous Code Template Tab
macro.array.variable=arrayVariable()
macro.capitalize.string=capitalize(String)
macro.cast.to.left.side.type=castToLeftSideType()
macro.classname=className()
macro.component.type.of.array=componentTypeOf(Array)
macro.current.package=currentPackage()
macro.decapitalize.string=decapitalize(String)
macro.firstWord.string=firstWord(String)
macro.undescoresToSpaces.string=underscoresToSpaces(String)
macro.undescoresToCamelCase.string=underscoresToCamelCase(String)
macro.capitalizeAndUnderscore.string=capitalizeAndUnderscore(String)
macro.descendant.classes.enum=descendantClassesEnum(String)
macro.enum=enum(...)
macro.expected.type=expectedType()
macro.groovy.script=groovyScript("groovy code")
macro.guess.element.type.of.container=guessElementType(Container)
macro.expression.type=expressionType(Expression)
macro.iterable.component.type=iterableComponentType(ArrayOrIterable)
macro.iterable.variable=iterableVariable()
macro.linenumber=lineNumber()
macro.methodname=methodName()
macro.method.parameters=methodParameters()
macro.qualified.class.name=qualifiedClassName()
macro.right.side.type=rightSideType()
macro.suggest.index.name=suggestIndexName()
macro.suggest.variable.name=suggestVariableName()
macro.suggest.first.variable.name=suggestFirstVariableName()
macro.variable.of.type=variableOfType(Type)
macro.file.name=fileName()
macro.file.name.without.extension=fileNameWithoutExtension()
command.name.surround.with.runtime.cast=Surround with runtime cast
inspection.i18n.expression.is.invalid.error.message=The I18nized Expression template is not a valid expression
inspection.error.dialog.title=Error
livetemplate.description.tag.pair=Tag pair
livetemplate.description.itar=Iterate elements of array
livetemplate.description.itco=Iterate elements of java.util.Collection
livetemplate.description.iten=Iterate java.util.Enumeration
livetemplate.description.itit=Iterate java.util.Iterator
livetemplate.description.itli=Iterate elements of java.util.List
livetemplate.description.ittok=Iterate tokens from String
livetemplate.description.itve=Iterate elements of java.util.Vector
livetemplate.description.ritar=Iterate elements of array in reverse order
livetemplate.description.iter=Iterate Iterable | Array in J2SDK 5.0 syntax
livetemplate.description.itover=Iterate over an Iterable or Array selection in J2SDK 5.0 syntax
livetemplate.description.inst=Checks object type with instanceof and down-casts it
livetemplate.description.lst=Fetches last element of an array
livetemplate.description.mn=Sets lesser value to a variable
livetemplate.description.mx=Sets greater value to a variable
livetemplate.description.psvm=main() method declaration
livetemplate.description.toar=Stores elements of java.util.Collection into array
livetemplate.description.lazy=Performs lazy initialization
livetemplate.description.if.not.null=Inserts ''if not null'' statement
livetemplate.description.if.null=Inserts ''if null'' statement
livetemplate.description.geti=Inserts singleton method getInstance
livetemplate.description.serr=Prints a string to System.err
livetemplate.description.sout=Prints a string to System.out
livetemplate.description.souf=Prints a formatted string to System.out
livetemplate.description.soutm=Prints current class and method names to System.out
livetemplate.description.soutp=Prints method parameter names and values to System.out
livetemplate.description.soutv=Prints a value to System.out
livetemplate.description.st=String
livetemplate.description.psf=public static final
livetemplate.description.prsf=private static final
livetemplate.description.psfi=public static final int
livetemplate.description.psfs=public static final String
livetemplate.description.thr=throw new
livetemplate.description.surround.braces=Surround with {}
livetemplate.description.surround.parens=Surround with ()
livetemplate.description.surround.tag=Surround with <tag></tag>
livetemplate.description.surround.tag.in.htmlorjsp=Surround with <tag></tag> in HTML/JSP
livetemplate.description.surround.cdata.in.xmlorhtmlorjsp=Surround with CDATA section
livetemplate.description.surround.with.callable=Surround with Callable
livetemplate.description.surround.with.read.lock=Surround with ReadWriteLock.readLock
livetemplate.description.surround.with.write.lock=Surround with ReadWriteLock.writeLock
quickfix.add.variable.text=Initialize variable ''{0}''
quickfix.add.variable.family.name=Initialize variable
inspection.i18n.quickfix.annotate.as=Annotate as @{0}
inspection.i18n.quickfix.annotate.element.as=Annotate {0} ''{1}'' as @{2}
disable.intention.action=Disable ''{0}''
enable.intention.action=Enable ''{0}''
under.construction.string=Under construction.
inspection.i18n.option.ignore.comment.pattern=Ignore lines containing this comment (pattern in java.util.Pattern format):
inspection.i18n.option.ignore.comment.title=Non-Nls comment pattern
inspection.i18n.option.ignore.assigned.to.constants=Ignore literals assigned to constants
inspection.i18n.option.ignore.tostring=Ignore contents of toString() method
intention.move.initializer.to.constructor=Move initializer to constructor
intention.move.initializer.to.set.up=Move initializer to setUp method
intention.move.field.assignment.to.declaration=Move assignment to field declaration
i18nize.jsp.error=Please select JSP text to I18nize.\nMake sure you have not selected any scriptlets, custom tags or other foreign languages elements.\nAlso, HTML tags inside selection must be balanced.
i18nize.error.title=Cannot I18nize Selection
i18nize.error.message=You can only i18nize Java string literal or substring thereof.\nPlease point the caret inside Java string literal or select part of it.
display.coverage.prompt=Do you want to display coverage data for ''{0}''?
code.coverage=Code Coverage
coverage.button.add.package=Add Package
coverage.pattern.filter.editor.choose.package.title=Choose Package
no.coverage=No coverage
code.coverage.is.not.supported=Code coverage is supported for jre 5.0 or higher
title.popup.show.coverage=Coverage Suites
prompt.remove.coverage=Do you want to remove ''{0}'' coverage data?
title.remove.coverage.data=Remove Coverage Data
coverage.data.outdated=Coverage data outdated
coverage.data.not.found=Coverage data not found
error.cannot.resolve.class=Cannot resolve class ''{0}''
implementation.view.title=Definition of {0}
javadoc.info.title=Documentation for {0}
intention.intercept.ejb.method.or.class.family=Add EJB interceptor
intention.intercept.ejb.method.or.class.class.text=Add interceptor for EJB class ''{0}''
intention.intercept.ejb.method.or.class.method.text=Add interceptor for business method ''{0}''
intention.edit.interceptor.binding.family=Interceptor Bindings
intention.edit.interceptor.binding.text=Edit Interceptor ''{0}'' bindings
powered.by=Powered by
powered.by.plugin=''{0}'' plugin.
error.cannot.convert.default.message=Invalid value: ''{0}''
error.cannot.resolve.default.message=Cannot resolve symbol ''{0}''
error.cannot.resolve.0.1=Cannot resolve {0} ''{1}''
unknown.encoding.0=Unknown encoding: ''{0}''
error.unknown.enum.value.message=Unknown enum value ''{0}''
i18nize.cant.create.properties.file.because.its.name.is.associated=Can''t create properties file ''{0}'' because its name is associated with the {1}.
i18nize.error.creating.properties.file=Error creating properties file
node.method.tooltip=Method
node.field.tooltip=Field
node.annotation.tooltip=Annotation
node.anonymous.class.tooltip=Anonymous Class
node.enum.tooltip=Enum
node.exception.tooltip=Exception
node.interface.tooltip=Interface
node.junit.test.tooltip=JUnit Test
node.runnable.class.tooltip=Runnable Class
node.class.tooltip=Class
node.excluded.flag.tooltip=Excluded
node.abstract.flag.tooltip=Abstract
node.final.flag.tooltip=Final
node.static.flag.tooltip=Static
multiple.implementations.tooltip=Multiple implementations
static.class.initializer={0}class initializer

# suppress inspection "UnusedProperty"
intentions.category.ejb=EJB
set.language.level=Set language level
set.language.level.to.0=Set language level to {0}
remove.annotation=Remove annotation
deannotate.intention.action.text=Deannotate
deannotate.intention.chooser.title=Choose annotation to delete
javadoc.type.parameters=Type parameters:
highlight.overridden.classes.chooser.title=Choose Classes to Highlight Overridden Methods from
no.methods.overriding.0.are.found=No methods overriding {0, choice, 0#|1# '{1}'|2#these classes} are found
copy.abstract.method.no.existing.implementations.found=No existing implementations found
copy.abstract.method.intention.name=Use existing implementation of ''{0}''
copy.abstract.method.popup.title=Choose implementation to copy
copy.abstract.method.title=Use Abstract Method Implementation
i18nize.empty.file.path=Please specify properties file path
choose.type.popup.title=Choose Type
cast.expression=Cast expression
cast.to.0=Cast to ''{0}''
class.completion.file.path=Press {0} again to search for all matching project files
class.completion.file.path.all.variants=Press {0} to search for matching files of any type
property.has.more.parameters.than.passed=Property ''{0}'' expected {1} {1, choice, 1#parameter|2#parameters}, passed {2}
create.file.family=Create File
rename.file.reference.family=Rename File Reference
rename.file.reference.text=Rename File Reference to {0}
create.directory.text=Create Directory {0}
create.file.text=Create File {0}
create.tagfile.text=Create Tag File {0}
rename.file.fix=Rename File
rename.element.family=Rename element
rename.public.class.text=Rename class ''{0}'' to ''{1}''
rename.named.element.text=Rename ''{0}'' to ''{1}''
dialog.edit.template.checkbox.html.text=HTML Text
dialog.edit.template.checkbox.xsl.text=XSL Text
highlight.imported.classes.chooser.title=Choose Imported Classes to Highlight
highlight.imported.members.chooser.title=Choose Imported Members to Highlight
javadoc.resolved.value=Resolved value\: 
javadoc.error.resolving.url=Couldn''t resolve URL <i>{0}</i> <p>Configuring paths to API docs in <a href="open://Project Settings">project settings</a> might help

inlay.hints.show.settings=Add Method ''{0}'' to Blacklist...
inlay.hints.show.settings.description=Open parameter name hints settings
inlay.hints.blacklist.method=Do not show hints for current method
inlay.hints.blacklist.method.description=Adds current method to parameter name hints blacklist
inlay.hints.intention.family.name=Parameter Name Hints
inlay.hints.enable.action.text=Enable Parameter Name Hints
inlay.hints.disable.action.text=Disable Hints
inlay.hints.blacklist.pattern.explanation=<html> No in-line parameter name hints will be shown for methods matching any of these patterns.<br> Patterns are matched on fully qualified method name, parameter count and parameter names. <ul> <li><code>java.lang</code> matches all methods from <em>java.lang</em> package</li> <li><code>java.lang.*(*, *)</code> matches all methods from the <em>java.lang</em> package with two parameters</li> <li><code>(*info)</code> matches all single parameter methods where the parameter name ends with <em>info</em></li> <li><code>(key, value)</code> matches all methods with parameters <em>key</em> and <em>value</em></li> <li><code>*.put(key, value)</code> matches all <em>put</em> methods with <em>key</em> and <em>value</em> parameters </ul> </html>
inlay.hints.disable.custom.option=Disable ''{0}''
inlay.hints.enable.custom.option=Enable ''{0}''

intention.extract.set.from.comparison.chain.family=Extract Set from comparison chain

block.comment.intersects.existing.comment=Selected region intersects existing comment
block.comment.wrapping.suffix=Selected region contains block comment suffix
block.comment.nested.comment=Selected region contained block {0, choice, 1#comment|2#comments},\nsurrounding ranges were commented.