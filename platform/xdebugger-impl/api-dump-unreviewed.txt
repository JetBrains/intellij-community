f:com.intellij.execution.actions.ActivateDebugToolWindowAction
- com.intellij.ide.actions.ToolWindowEmptyStateAction
- <init>():V
a:com.intellij.xdebugger.attach.EnvironmentAwareHost
- com.intellij.xdebugger.attach.XAttachHost
- <init>():V
- a:canReadFile(java.lang.String):Z
- a:getFileContent(java.lang.String):java.io.InputStream
- a:getFileSystemHostId():java.lang.String
- getOsHandler():com.intellij.xdebugger.attach.osHandlers.AttachOSHandler
- a:getProcessHandler(com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.process.BaseProcessHandler
- getProcessOutput(com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.process.ProcessOutput
- isSameHost(java.lang.Object):Z
c:com.intellij.xdebugger.attach.LocalAttachHost
- com.intellij.xdebugger.attach.EnvironmentAwareHost
- sf:INSTANCE:com.intellij.xdebugger.attach.LocalAttachHost
- <init>():V
- canReadFile(java.lang.String):Z
- getFileContent(java.lang.String):java.io.InputStream
- getFileSystemHostId():java.lang.String
- getProcessHandler(com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.process.BaseProcessHandler
- getProcessList():java.util.List
c:com.intellij.xdebugger.attach.WslAttachHost
- com.intellij.xdebugger.attach.XAttachHost
- <init>(com.intellij.execution.wsl.WSLDistribution):V
- equals(java.lang.Object):Z
- getProcessList():java.util.List
- getWsl():com.intellij.execution.wsl.WSLDistribution
- hashCode():I
com.intellij.xdebugger.attach.XAttachDebugger
- a:attachDebugSession(com.intellij.openapi.project.Project,com.intellij.xdebugger.attach.XAttachHost,com.intellij.execution.process.ProcessInfo):V
- a:getDebuggerDisplayName():java.lang.String
- getDebuggerSelectedTitle():java.lang.String
com.intellij.xdebugger.attach.XAttachDebuggerProvider
- sf:DEFAULT_PRESENTATION_GROUP:com.intellij.xdebugger.attach.XAttachProcessPresentationGroup
- sf:EP:com.intellij.openapi.extensions.ExtensionPointName
- a:getAvailableDebuggers(com.intellij.openapi.project.Project,com.intellij.xdebugger.attach.XAttachHost,com.intellij.execution.process.ProcessInfo,com.intellij.openapi.util.UserDataHolder):java.util.List
- getPresentationGroup():com.intellij.xdebugger.attach.XAttachPresentationGroup
- a:isAttachHostApplicable(com.intellij.xdebugger.attach.XAttachHost):Z
com.intellij.xdebugger.attach.XAttachHost
- a:getProcessList():java.util.List
com.intellij.xdebugger.attach.XAttachHostPresentationGroup
- com.intellij.xdebugger.attach.XAttachPresentationGroup
com.intellij.xdebugger.attach.XAttachHostProvider
- sf:EP:com.intellij.openapi.extensions.ExtensionPointName
- a:getAvailableHosts(com.intellij.openapi.project.Project):java.util.List
- a:getPresentationGroup():com.intellij.xdebugger.attach.XAttachPresentationGroup
com.intellij.xdebugger.attach.XAttachPresentationGroup
- java.util.Comparator
- a:getGroupName():java.lang.String
- getItemDescription(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.openapi.util.UserDataHolder):java.lang.String
- getItemDisplayText(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.openapi.util.UserDataHolder):java.lang.String
- getItemIcon(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.openapi.util.UserDataHolder):javax.swing.Icon
- a:getOrder():I
- getProcessDisplayText(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.openapi.util.UserDataHolder):java.lang.String
- getProcessIcon(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.openapi.util.UserDataHolder):javax.swing.Icon
com.intellij.xdebugger.attach.XAttachProcessPresentationGroup
- com.intellij.xdebugger.attach.XAttachPresentationGroup
- compare(com.intellij.execution.process.ProcessInfo,com.intellij.execution.process.ProcessInfo):I
*:com.intellij.xdebugger.attach.XAttachRecentItemsMatcher
- a:getMatchingAttachItems(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$RecentItem,java.util.List,Z,com.intellij.openapi.project.Project,com.intellij.openapi.util.UserDataHolder):java.util.List
com.intellij.xdebugger.attach.XLocalAttachDebugger
- com.intellij.xdebugger.attach.XAttachDebugger
- a:attachDebugSession(com.intellij.openapi.project.Project,com.intellij.execution.process.ProcessInfo):V
- attachDebugSession(com.intellij.openapi.project.Project,com.intellij.xdebugger.attach.XAttachHost,com.intellij.execution.process.ProcessInfo):V
- a:getDebuggerDisplayName():java.lang.String
f:com.intellij.xdebugger.attach.fs.LazyAttachVirtualFS
- com.intellij.openapi.vfs.VirtualFileSystem
- <init>():V
- addVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- findFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- findFileByPath(java.lang.String,com.intellij.xdebugger.attach.EnvironmentAwareHost):com.intellij.openapi.vfs.VirtualFile
- s:getInstance():com.intellij.xdebugger.attach.fs.LazyAttachVirtualFS
- getProtocol():java.lang.String
- isReadOnly():Z
- refresh(Z):V
- refreshAndFindFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- removeVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
a:com.intellij.xdebugger.attach.osHandlers.AttachOSHandler
- pf:myHost:com.intellij.xdebugger.attach.EnvironmentAwareHost
- <init>(com.intellij.xdebugger.attach.EnvironmentAwareHost,com.intellij.xdebugger.attach.osHandlers.AttachOSHandler$OSType):V
- s:getAttachOsHandler(com.intellij.xdebugger.attach.EnvironmentAwareHost):com.intellij.xdebugger.attach.osHandlers.AttachOSHandler
- getOSType():com.intellij.xdebugger.attach.osHandlers.AttachOSHandler$OSType
- toString():java.lang.String
e:com.intellij.xdebugger.attach.osHandlers.AttachOSHandler$OSType
- java.lang.Enum
- sf:LINUX:com.intellij.xdebugger.attach.osHandlers.AttachOSHandler$OSType
- sf:MACOSX:com.intellij.xdebugger.attach.osHandlers.AttachOSHandler$OSType
- sf:UNKNOWN:com.intellij.xdebugger.attach.osHandlers.AttachOSHandler$OSType
- sf:WINDOWS:com.intellij.xdebugger.attach.osHandlers.AttachOSHandler$OSType
- s:valueOf(java.lang.String):com.intellij.xdebugger.attach.osHandlers.AttachOSHandler$OSType
- s:values():com.intellij.xdebugger.attach.osHandlers.AttachOSHandler$OSType[]
a:com.intellij.xdebugger.attach.osHandlers.UnixAttachOSHandler
- com.intellij.xdebugger.attach.osHandlers.AttachOSHandler
- <init>(com.intellij.xdebugger.attach.EnvironmentAwareHost,com.intellij.xdebugger.attach.osHandlers.AttachOSHandler$OSType):V
- getPtraceScope():I
- getUid():I
- p:getenv(java.lang.String):java.lang.String
- isOurProcess(I):Z
f:com.intellij.xdebugger.impl.BreakpointManagerState
- com.intellij.openapi.components.BaseState
- <init>():V
- f:getBreakpoints():java.util.List
- f:getBreakpointsDefaults():java.util.List
- f:getBreakpointsDialogProperties():com.intellij.xdebugger.impl.breakpoints.XBreakpointsDialogState
- f:getDefaultBreakpoints():java.util.List
- f:getDefaultGroup():java.lang.String
- f:setBreakpointsDialogProperties(com.intellij.xdebugger.impl.breakpoints.XBreakpointsDialogState):V
- f:setDefaultGroup(java.lang.String):V
f:com.intellij.xdebugger.impl.ConfigurationState
- com.intellij.openapi.components.BaseState
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.util.List):V
- b:<init>(java.lang.String,java.util.List,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getExpressionStates():java.util.List
- f:getName():java.lang.String
- f:setName(java.lang.String):V
*a:com.intellij.xdebugger.impl.CustomComponentEvaluator
- com.intellij.xdebugger.frame.XFullValueEvaluator
- <init>(java.lang.String):V
- createComponent(java.lang.String):javax.swing.JComponent
- show(java.awt.event.MouseEvent,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- p:showValuePopup(java.awt.event.MouseEvent,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,javax.swing.JComponent,java.lang.Runnable):V
*pf:com.intellij.xdebugger.impl.CustomComponentEvaluator$EvaluationCallback
- com.intellij.xdebugger.frame.XFullValueEvaluator$XFullValueEvaluationCallback
- <init>(javax.swing.JComponent,com.intellij.xdebugger.impl.CustomComponentEvaluator,com.intellij.openapi.project.Project):V
- errorOccurred(java.lang.String):V
- evaluated(java.lang.String):V
- evaluated(java.lang.String,java.awt.Font):V
- isObsolete():Z
- f:setObsolete():V
a:com.intellij.xdebugger.impl.DebuggerSupport
- psf:DISABLED_EDIT:com.intellij.xdebugger.impl.actions.EditBreakpointActionHandler
- psf:DISABLED_MARK_HANDLER:com.intellij.xdebugger.impl.actions.MarkObjectActionHandler
- psf:DISABLED_TOGGLE_HANDLER:com.intellij.xdebugger.impl.actions.DebuggerToggleActionHandler
- <init>():V
- getAddToInlineWatchesActionHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getAddToWatchesActionHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getBreakpointPanelProvider():com.intellij.xdebugger.impl.breakpoints.ui.BreakpointPanelProvider
- s:getDebuggerSupport(java.lang.Class):com.intellij.xdebugger.impl.DebuggerSupport
- s:getDebuggerSupports():com.intellij.xdebugger.impl.DebuggerSupport[]
- getEditBreakpointAction():com.intellij.xdebugger.impl.actions.EditBreakpointActionHandler
- getEvaluateHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getEvaluateInConsoleActionHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getForceRunToCursorHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getForceStepIntoHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getForceStepOverHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getMarkObjectHandler():com.intellij.xdebugger.impl.actions.MarkObjectActionHandler
- getMuteBreakpointsHandler():com.intellij.xdebugger.impl.actions.DebuggerToggleActionHandler
- getPauseHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getQuickEvaluateHandler():com.intellij.xdebugger.impl.evaluate.quick.common.QuickEvaluateHandler
- getResumeActionHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getRunToCursorHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getShowExecutionPointHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getSmartStepIntoHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getStepIntoHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getStepOutHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getStepOverHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getToggleLineBreakpointHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getToggleTemporaryLineBreakpointHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
pf:com.intellij.xdebugger.impl.DebuggerSupport$DisabledActionHandler
- com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- sf:INSTANCE:com.intellij.xdebugger.impl.DebuggerSupport$DisabledActionHandler
- isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- perform(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.DefaultRunToCursorService
- com.intellij.xdebugger.impl.RunToCursorService
- <init>(com.intellij.openapi.project.Project):V
- canRunToCursor(com.intellij.openapi.editor.Editor,I,kotlin.coroutines.Continuation):java.lang.Object
- pf:getProject():com.intellij.openapi.project.Project
- isAtExecution(com.intellij.openapi.vfs.VirtualFile,I):Z
- shouldShowInlay():Z
com.intellij.xdebugger.impl.ExecutionPointVm
- a:getAlternativePositionVm():com.intellij.xdebugger.impl.ExecutionPositionVm
- a:getMainPositionVm():com.intellij.xdebugger.impl.ExecutionPositionVm
- a:isTopFrame():Z
- a:navigateTo(com.intellij.xdebugger.impl.ExecutionPositionNavigationMode,com.intellij.xdebugger.impl.XSourceKind,kotlin.coroutines.Continuation):java.lang.Object
- bs:navigateTo$default(com.intellij.xdebugger.impl.ExecutionPointVm,com.intellij.xdebugger.impl.ExecutionPositionNavigationMode,com.intellij.xdebugger.impl.XSourceKind,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
f:com.intellij.xdebugger.impl.ExecutionPositionGutterVm
- <init>(kotlinx.coroutines.flow.StateFlow):V
- f:getGutterIconRendererState():kotlinx.coroutines.flow.StateFlow
e:com.intellij.xdebugger.impl.ExecutionPositionNavigationMode
- java.lang.Enum
- sf:OPEN:com.intellij.xdebugger.impl.ExecutionPositionNavigationMode
- sf:SCROLL:com.intellij.xdebugger.impl.ExecutionPositionNavigationMode
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.xdebugger.impl.ExecutionPositionNavigationMode
- s:values():com.intellij.xdebugger.impl.ExecutionPositionNavigationMode[]
com.intellij.xdebugger.impl.ExecutionPositionVm
- a:getExactRange():com.intellij.openapi.util.TextRange
- a:getFile():com.intellij.openapi.vfs.VirtualFile
- a:getGutterVm():com.intellij.xdebugger.impl.ExecutionPositionGutterVm
- a:getInvalidationUpdateFlow():kotlinx.coroutines.flow.Flow
- a:getLine():I
- a:isActiveSourceKindState():kotlinx.coroutines.flow.StateFlow
- a:isTopFrame():Z
- a:navigateTo(com.intellij.xdebugger.impl.ExecutionPositionNavigationMode,Z,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.xdebugger.impl.InlayRunToCursorEditorListener
- com.intellij.openapi.editor.event.EditorMouseListener
- com.intellij.openapi.editor.event.EditorMouseMotionListener
- sf:Companion:com.intellij.xdebugger.impl.InlayRunToCursorEditorListener$Companion
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- sf:isInlayRunToCursorEnabled():Z
- mouseMoved(com.intellij.openapi.editor.event.EditorMouseEvent):V
- f:reshowInlayRunToCursor(com.intellij.openapi.editor.Editor):V
f:com.intellij.xdebugger.impl.InlayRunToCursorEditorListener$Companion
- f:isInlayRunToCursorEnabled():Z
f:com.intellij.xdebugger.impl.InlineTextValuePopupProvider
- com.intellij.xdebugger.impl.inline.InlineValuePopupProvider
- <init>():V
- accepts(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):Z
- showPopup(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.xdebugger.XDebugSession,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.impl.evaluate.quick.XDebuggerTreeCreator,com.intellij.openapi.editor.Editor,java.awt.Point,java.lang.Runnable):V
f:com.intellij.xdebugger.impl.InlineWatchState
- com.intellij.openapi.components.BaseState
- <init>():V
- <init>(com.intellij.xdebugger.XExpression):V
- <init>(com.intellij.xdebugger.XExpression,I):V
- <init>(com.intellij.xdebugger.XExpression,I,java.lang.String):V
- b:<init>(com.intellij.xdebugger.XExpression,I,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getFileUrl():java.lang.String
- f:getLine():I
- f:getWatchState():com.intellij.xdebugger.impl.WatchState
- f:setFileUrl(java.lang.String):V
- f:setLine(I):V
- f:setWatchState(com.intellij.xdebugger.impl.WatchState):V
f:com.intellij.xdebugger.impl.PinToTopManagerState
- com.intellij.openapi.components.BaseState
- <init>():V
- f:getPinnedMembersList():java.util.List
- f:setPinnedMembersList(java.util.List):V
com.intellij.xdebugger.impl.RunToCursorService
- a:canRunToCursor(com.intellij.openapi.editor.Editor,I,kotlin.coroutines.Continuation):java.lang.Object
- a:isAtExecution(com.intellij.openapi.vfs.VirtualFile,I):Z
- a:shouldShowInlay():Z
f:com.intellij.xdebugger.impl.WatchState
- com.intellij.xdebugger.impl.breakpoints.XExpressionState
- <init>():V
- <init>(com.intellij.xdebugger.XExpression):V
f:com.intellij.xdebugger.impl.WatchesManagerState
- com.intellij.openapi.components.BaseState
- <init>():V
- f:getExpressions():java.util.List
- f:getInlineExpressionStates():java.util.List
a:com.intellij.xdebugger.impl.XDebugProcessConfiguratorStarter
- com.intellij.xdebugger.XDebugProcessStarter
- <init>():V
- a:configure(com.intellij.xdebugger.impl.ui.XDebugSessionData):V
f:com.intellij.xdebugger.impl.XDebugSessionImpl
- com.intellij.xdebugger.XDebugSession
- <init>(com.intellij.execution.runners.ExecutionEnvironment,com.intellij.xdebugger.impl.XDebuggerManagerImpl):V
- <init>(com.intellij.execution.runners.ExecutionEnvironment,com.intellij.xdebugger.impl.XDebuggerManagerImpl,java.lang.String,javax.swing.Icon,Z,com.intellij.execution.ui.RunContentDescriptor):V
- addExtraActions(com.intellij.openapi.actionSystem.AnAction[]):V
- addExtraStopActions(com.intellij.openapi.actionSystem.AnAction[]):V
- addRestartActions(com.intellij.openapi.actionSystem.AnAction[]):V
- addSessionListener(com.intellij.xdebugger.XDebugSessionListener):V
- addSessionListener(com.intellij.xdebugger.XDebugSessionListener,com.intellij.openapi.Disposable):V
- areBreakpointsMuted():Z
- breakpointReached(com.intellij.xdebugger.breakpoints.XBreakpoint,java.lang.String,com.intellij.xdebugger.frame.XSuspendContext):Z
- breakpointReachedNoProcessing(com.intellij.xdebugger.breakpoints.XBreakpoint,com.intellij.xdebugger.frame.XSuspendContext):V
- checkActiveNonLineBreakpointOnRemoval(com.intellij.xdebugger.breakpoints.XBreakpoint):V
- forceStepInto():V
- getActiveNonLineBreakpoint():com.intellij.xdebugger.breakpoints.XBreakpoint
- getBreakpointPresentation(com.intellij.xdebugger.breakpoints.XBreakpoint):com.intellij.xdebugger.impl.breakpoints.CustomizedBreakpointPresentation
- getConsoleView():com.intellij.execution.ui.ConsoleView
- getCurrentExecutionStack():com.intellij.xdebugger.frame.XExecutionStack
- getCurrentPosition():com.intellij.xdebugger.XSourcePosition
- getCurrentSourceKind():com.intellij.xdebugger.impl.XSourceKind
- getCurrentStackFrame():com.intellij.xdebugger.frame.XStackFrame
- getDebugProcess():com.intellij.xdebugger.XDebugProcess
- getExecutionEnvironment():com.intellij.execution.runners.ExecutionEnvironment
- getExtraActions():java.util.List
- getExtraStopActions():java.util.List
- getFrameSourcePosition(com.intellij.xdebugger.frame.XStackFrame):com.intellij.xdebugger.XSourcePosition
- getFrameSourcePosition(com.intellij.xdebugger.frame.XStackFrame,com.intellij.xdebugger.impl.XSourceKind):com.intellij.xdebugger.XSourcePosition
- getProject():com.intellij.openapi.project.Project
- getRestartActions():java.util.List
- getRunContentDescriptor():com.intellij.execution.ui.RunContentDescriptor
- getRunProfile():com.intellij.execution.configurations.RunProfile
- getSessionData():com.intellij.xdebugger.impl.ui.XDebugSessionData
- getSessionName():java.lang.String
- getSessionTab():com.intellij.xdebugger.impl.ui.XDebugSessionTab
- getSuspendContext():com.intellij.xdebugger.frame.XSuspendContext
- getTopFramePosition():com.intellij.xdebugger.XSourcePosition
- getUI():com.intellij.execution.ui.RunnerLayoutUi
- getValueMarkers():com.intellij.xdebugger.impl.frame.XValueMarkers
- initBreakpoints():V
- isBreakpointActive(com.intellij.xdebugger.breakpoints.XBreakpoint):Z
- isInactiveSlaveBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpoint):Z
- isPauseActionSupported():Z
- isPaused():Z
- isReadOnly():Z
- isStopped():Z
- isSuspended():Z
- isTopFrameSelected():Z
- pause():V
- positionReached(com.intellij.xdebugger.frame.XSuspendContext):V
- positionReached(com.intellij.xdebugger.frame.XSuspendContext,Z):V
- processDependencies(com.intellij.xdebugger.breakpoints.XBreakpoint):V
- rebuildViews():V
- removeSessionListener(com.intellij.xdebugger.XDebugSessionListener):V
- reportError(java.lang.String):V
- reportMessage(java.lang.String,com.intellij.openapi.ui.MessageType):V
- reportMessage(java.lang.String,com.intellij.openapi.ui.MessageType,javax.swing.event.HyperlinkListener):V
- reset():V
- resume():V
- runToPosition(com.intellij.xdebugger.XSourcePosition,Z):V
- sessionResumed():V
- setBreakpointInvalid(com.intellij.xdebugger.breakpoints.XLineBreakpoint,java.lang.String):V
- setBreakpointMuted(Z):V
- setBreakpointVerified(com.intellij.xdebugger.breakpoints.XLineBreakpoint):V
- setCurrentStackFrame(com.intellij.xdebugger.frame.XExecutionStack,com.intellij.xdebugger.frame.XStackFrame,Z):V
- setPauseActionSupported(Z):V
- setReadOnly(Z):V
- showExecutionPoint():V
- showSessionTab():V
- smartStepInto(com.intellij.xdebugger.stepping.XSmartStepIntoHandler,com.intellij.xdebugger.stepping.XSmartStepIntoVariant):V
- stepInto():V
- stepOut():V
- stepOver(Z):V
- stop():V
- unsetPaused():V
- updateBreakpointPresentation(com.intellij.xdebugger.breakpoints.XLineBreakpoint,javax.swing.Icon,java.lang.String):V
- updateExecutionPosition():V
f:com.intellij.xdebugger.impl.XDebuggerActionsCollector
- sf:EVENT_FRAMES_UPDATED:java.lang.String
- sf:FILE_TYPES:java.lang.String
- sf:FRAMES_PER_TYPE:java.lang.String
- sf:INSTANCE:com.intellij.xdebugger.impl.XDebuggerActionsCollector
- sf:PLACE_FRAMES_VIEW:java.lang.String
- sf:PLACE_THREADS_VIEW:java.lang.String
- sf:TOTAL_FRAMES:java.lang.String
- sf:frameSelected:com.intellij.internal.statistic.eventLog.events.EventId1
- sf:sessionChanged:com.intellij.internal.statistic.eventLog.events.EventId
- sf:threadSelected:com.intellij.internal.statistic.eventLog.events.EventId1
- getGroup():com.intellij.internal.statistic.eventLog.EventLogGroup
- sf:logFramesUpdated(J,java.util.List):V
f:com.intellij.xdebugger.impl.XDebuggerHistoryManager
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- addRecentExpression(java.lang.String,com.intellij.xdebugger.XExpression):Z
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.xdebugger.impl.XDebuggerHistoryManager
- getRecentExpressions(java.lang.String):java.util.List
- getState():org.jdom.Element
- loadState(org.jdom.Element):V
f:com.intellij.xdebugger.impl.XDebuggerHistoryManager$XDebuggerHistoryPathMacroFilter
- com.intellij.openapi.application.PathMacroFilter
- <init>():V
- skipPathMacros(org.jdom.Element):Z
c:com.intellij.xdebugger.impl.XDebuggerLineChangeIconProvider
- <init>(com.intellij.openapi.project.Project):V
- getIcon(com.intellij.xdebugger.impl.XSourcePositionImpl,com.intellij.openapi.editor.Editor,kotlin.coroutines.Continuation):java.lang.Object
- f:getProject():com.intellij.openapi.project.Project
f:com.intellij.xdebugger.impl.XDebuggerManagerImpl
- com.intellij.xdebugger.XDebuggerManager
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- sf:ACTIVE_LINE_NUMBER:com.intellij.openapi.actionSystem.DataKey
- dispose():V
- getBreakpointManager():com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl
- getCurrentSession():com.intellij.xdebugger.impl.XDebugSessionImpl
- getDebugProcesses(java.lang.Class):java.util.List
- getDebugSession(com.intellij.execution.ui.ExecutionConsole):com.intellij.xdebugger.XDebugSession
- getDebugSessions():com.intellij.xdebugger.XDebugSession[]
- getExecutionPointManager():com.intellij.xdebugger.impl.XDebuggerExecutionPointManager
- s:getNotificationGroup():com.intellij.notification.NotificationGroup
- getPinToTopManager():com.intellij.xdebugger.impl.pinned.items.XDebuggerPinToTopManager
- getProject():com.intellij.openapi.project.Project
- getState():com.intellij.xdebugger.impl.XDebuggerState
- getWatchesManager():com.intellij.xdebugger.impl.XDebuggerWatchesManager
- initializeComponent():V
- loadState(com.intellij.xdebugger.impl.XDebuggerState):V
- noStateLoaded():V
- startSession(com.intellij.execution.runners.ExecutionEnvironment,com.intellij.xdebugger.XDebugProcessStarter):com.intellij.xdebugger.XDebugSession
- startSessionAndShowTab(java.lang.String,com.intellij.execution.ui.RunContentDescriptor,com.intellij.xdebugger.XDebugProcessStarter):com.intellij.xdebugger.XDebugSession
- startSessionAndShowTab(java.lang.String,com.intellij.execution.ui.RunContentDescriptor,Z,com.intellij.xdebugger.XDebugProcessStarter):com.intellij.xdebugger.XDebugSession
- startSessionAndShowTab(java.lang.String,com.intellij.xdebugger.XDebugProcessStarter,com.intellij.execution.runners.ExecutionEnvironment):com.intellij.xdebugger.XDebugSession
- startSessionAndShowTab(java.lang.String,javax.swing.Icon,com.intellij.execution.ui.RunContentDescriptor,Z,com.intellij.xdebugger.XDebugProcessStarter):com.intellij.xdebugger.XDebugSession
f:com.intellij.xdebugger.impl.XDebuggerPerformanceCollector
- sf:INSTANCE:com.intellij.xdebugger.impl.XDebuggerPerformanceCollector
- getGroup():com.intellij.internal.statistic.eventLog.EventLogGroup
- sf:logBreakpointReached(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- sf:logExecutionPointReached(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,java.lang.String,J):V
c:com.intellij.xdebugger.impl.XDebuggerSupport
- com.intellij.xdebugger.impl.DebuggerSupport
- <init>():V
- getAddToInlineWatchesActionHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getAddToWatchesActionHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getBreakpointPanelProvider():com.intellij.xdebugger.impl.breakpoints.ui.BreakpointPanelProvider
- getEditBreakpointAction():com.intellij.xdebugger.impl.actions.EditBreakpointActionHandler
- getEvaluateHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getEvaluateInConsoleActionHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getForceRunToCursorHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getForceStepIntoHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getForceStepOverHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getMarkObjectHandler():com.intellij.xdebugger.impl.actions.MarkObjectActionHandler
- getMuteBreakpointsHandler():com.intellij.xdebugger.impl.actions.DebuggerToggleActionHandler
- getPauseHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getQuickEvaluateHandler():com.intellij.xdebugger.impl.evaluate.quick.common.QuickEvaluateHandler
- getResumeActionHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getRunToCursorHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getShowExecutionPointHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getSmartStepIntoHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getStepIntoHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getStepOutHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getStepOverHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getToggleLineBreakpointHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- getToggleTemporaryLineBreakpointHandler():com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.XDebuggerUtilImpl
- com.intellij.xdebugger.XDebuggerUtil
- sf:LINE_NUMBER:com.intellij.openapi.actionSystem.DataKey
- sf:OFFSET:com.intellij.openapi.actionSystem.DataKey
- <init>():V
- s:addLineBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpointManager,com.intellij.xdebugger.breakpoints.XLineBreakpointType$XLineBreakpointVariant,com.intellij.openapi.vfs.VirtualFile,I):com.intellij.xdebugger.breakpoints.XLineBreakpoint
- s:addLineBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpointManager,com.intellij.xdebugger.breakpoints.XLineBreakpointType$XLineBreakpointVariant,com.intellij.openapi.vfs.VirtualFile,I,java.lang.Boolean):com.intellij.xdebugger.breakpoints.XLineBreakpoint
- canPutBreakpointAt(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I):Z
- s:createEditor(com.intellij.openapi.fileEditor.OpenFileDescriptor):com.intellij.openapi.editor.Editor
- createExpression(java.lang.String,com.intellij.lang.Language,java.lang.String,com.intellij.xdebugger.evaluation.EvaluationMode):com.intellij.xdebugger.XExpression
- s:createNavigatable(com.intellij.openapi.project.Project,com.intellij.xdebugger.XSourcePosition):com.intellij.pom.Navigatable
- s:createOpenFileDescriptor(com.intellij.openapi.project.Project,com.intellij.xdebugger.XSourcePosition):com.intellij.openapi.fileEditor.OpenFileDescriptor
- createPosition(com.intellij.openapi.vfs.VirtualFile,I):com.intellij.xdebugger.XSourcePosition
- createPosition(com.intellij.openapi.vfs.VirtualFile,I,I):com.intellij.xdebugger.XSourcePosition
- createPositionByElement(com.intellij.psi.PsiElement):com.intellij.xdebugger.XSourcePosition
- createPositionByOffset(com.intellij.openapi.vfs.VirtualFile,I):com.intellij.xdebugger.XSourcePosition
- disableValueLookup(com.intellij.openapi.editor.Editor):V
- findBreakpointType(java.lang.Class):com.intellij.xdebugger.breakpoints.XBreakpointType
- findContextElement(com.intellij.openapi.vfs.VirtualFile,I,com.intellij.openapi.project.Project,Z):com.intellij.psi.PsiElement
- s:getCaretPosition(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):com.intellij.xdebugger.XSourcePosition
- getDebuggerSettings(java.lang.Class):com.intellij.xdebugger.settings.XDebuggerSettings
- s:getEditor(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.editor.Editor
- getGroupingByFileRule():com.intellij.xdebugger.breakpoints.ui.XBreakpointGroupingRule
- getGroupingByFileRuleAsList():java.util.List
- getLineBreakpointTypes():com.intellij.xdebugger.breakpoints.XLineBreakpointType[]
- s:getLineBreakpointVariants(com.intellij.openapi.project.Project,java.util.List,com.intellij.xdebugger.XSourcePosition):org.jetbrains.concurrency.Promise
- s:getLineBreakpointVariantsSync(com.intellij.openapi.project.Project,java.util.List,com.intellij.xdebugger.XSourcePosition):java.util.List
- getValueContainer(com.intellij.openapi.actionSystem.DataContext):com.intellij.xdebugger.frame.XValueContainer
- s:getVerifiedIcon(com.intellij.xdebugger.breakpoints.XBreakpoint):javax.swing.Icon
- s:isEmptyExpression(com.intellij.xdebugger.XExpression):Z
- iterateLine(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,I,com.intellij.util.Processor):V
- iterateOffsetRange(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,I,I,com.intellij.util.Processor):V
- logStack(com.intellij.xdebugger.frame.XSuspendContext,com.intellij.xdebugger.XDebugSession):V
- openTextEditor(com.intellij.openapi.fileEditor.OpenFileDescriptor):com.intellij.openapi.editor.Editor
- s:rebuildAllSessionsViews(com.intellij.openapi.project.Project):V
- s:rebuildTreeAndViews(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):V
- s:removeAllBreakpoints(com.intellij.openapi.project.Project):V
- removeBreakpoint(com.intellij.openapi.project.Project,com.intellij.xdebugger.breakpoints.XBreakpoint):V
- s:removeBreakpointWithConfirmation(com.intellij.openapi.project.Project,com.intellij.xdebugger.breakpoints.XBreakpoint):Z
- s:removeBreakpointWithConfirmation(com.intellij.xdebugger.impl.breakpoints.XBreakpointBase):Z
- s:removeBreakpointsWithConfirmation(com.intellij.openapi.project.Project,java.util.List):V
- s:removeBreakpointsWithConfirmation(java.util.List):V
- s:reshowInlayRunToCursor(com.intellij.openapi.actionSystem.AnActionEvent):V
- toggleAndReturnLineBreakpoint(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I,Z):org.jetbrains.concurrency.Promise
- toggleAndReturnLineBreakpoint(com.intellij.openapi.project.Project,com.intellij.xdebugger.breakpoints.XLineBreakpointType,com.intellij.openapi.vfs.VirtualFile,I,Z):org.jetbrains.concurrency.Promise
- s:toggleAndReturnLineBreakpoint(com.intellij.openapi.project.Project,java.util.List,com.intellij.xdebugger.XSourcePosition,Z,com.intellij.openapi.editor.Editor,Z):org.jetbrains.concurrency.Promise
- s:toggleAndReturnLineBreakpoint(com.intellij.openapi.project.Project,java.util.List,com.intellij.xdebugger.XSourcePosition,Z,Z,com.intellij.openapi.editor.Editor,Z):org.jetbrains.concurrency.Promise
- toggleLineBreakpoint(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I,Z):V
- toggleLineBreakpoint(com.intellij.openapi.project.Project,com.intellij.xdebugger.breakpoints.XLineBreakpointType,com.intellij.openapi.vfs.VirtualFile,I,Z):V
- s:wrapKeepEditorAreaFocusNavigatable(com.intellij.openapi.project.Project,com.intellij.pom.Navigatable):com.intellij.pom.Navigatable
f:com.intellij.xdebugger.impl.XDebuggerWatchesManager
- <init>(com.intellij.openapi.project.Project):V
- addInlineWatchExpression(com.intellij.xdebugger.XExpression,I,com.intellij.xdebugger.XSourcePosition,Z):V
- clearContext():V
- getDocumentInlines(com.intellij.openapi.editor.Document):java.util.Collection
- getInlineWatches():java.util.List
- getWatches(java.lang.String):java.util.List
- inlineWatchesRemoved(java.util.List,com.intellij.xdebugger.impl.inline.XInlineWatchesView):V
- loadState(com.intellij.xdebugger.impl.WatchesManagerState):V
- saveState(com.intellij.xdebugger.impl.WatchesManagerState):com.intellij.xdebugger.impl.WatchesManagerState
- setWatches(java.lang.String,java.util.List):V
- showInplaceEditor(com.intellij.xdebugger.XSourcePosition,com.intellij.openapi.editor.Editor,com.intellij.xdebugger.XDebugSession,com.intellij.xdebugger.XExpression):V
e:com.intellij.xdebugger.impl.XSourceKind
- java.lang.Enum
- sf:ALTERNATIVE:com.intellij.xdebugger.impl.XSourceKind
- sf:MAIN:com.intellij.xdebugger.impl.XSourceKind
- s:valueOf(java.lang.String):com.intellij.xdebugger.impl.XSourceKind
- s:values():com.intellij.xdebugger.impl.XSourceKind[]
com.intellij.xdebugger.impl.XSourcePositionEx
- com.intellij.xdebugger.XSourcePosition
- getPositionUpdateFlow():kotlinx.coroutines.flow.Flow
a:com.intellij.xdebugger.impl.XSourcePositionImpl
- com.intellij.xdebugger.XSourcePosition
- s:create(com.intellij.openapi.vfs.VirtualFile,I):com.intellij.xdebugger.impl.XSourcePositionImpl
- s:create(com.intellij.openapi.vfs.VirtualFile,I,I):com.intellij.xdebugger.impl.XSourcePositionImpl
- s:createByElement(com.intellij.psi.PsiElement):com.intellij.xdebugger.impl.XSourcePositionImpl
- s:createByOffset(com.intellij.openapi.vfs.VirtualFile,I):com.intellij.xdebugger.impl.XSourcePositionImpl
- createNavigatable(com.intellij.openapi.project.Project):com.intellij.pom.Navigatable
- getFile():com.intellij.openapi.vfs.VirtualFile
- toString():java.lang.String
c:com.intellij.xdebugger.impl.actions.AttachToProcessAction
- com.intellij.xdebugger.impl.actions.AttachToProcessActionBase
- <init>():V
a:com.intellij.xdebugger.impl.actions.AttachToProcessActionBase
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,java.util.function.Supplier,java.lang.String):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:addToRecent(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachToProcessItem):V
- collectAttachHostsItems(com.intellij.openapi.project.Project,com.intellij.openapi.progress.ProgressIndicator):java.util.List
- collectAttachProcessItems(com.intellij.openapi.project.Project,com.intellij.xdebugger.attach.XAttachHost,com.intellij.openapi.progress.ProgressIndicator):java.util.List
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getAvailableHosts():java.util.List
- s:getRecentItems(com.intellij.xdebugger.attach.XAttachHost,com.intellij.openapi.project.Project):java.util.List
- s:getRecentItems(java.util.List,com.intellij.xdebugger.attach.XAttachHost,com.intellij.openapi.project.Project,com.intellij.openapi.util.UserDataHolder):java.util.List
- p:getTopLevelItems(com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.project.Project):java.util.List
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachItem
- java.lang.Comparable
- <init>(com.intellij.xdebugger.attach.XAttachPresentationGroup,Z,java.lang.String,java.lang.Object,com.intellij.openapi.project.Project,com.intellij.openapi.util.UserDataHolder):V
- compareTo(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachItem):I
- getDataHolder():com.intellij.openapi.util.UserDataHolder
- getGroup():com.intellij.xdebugger.attach.XAttachPresentationGroup
- p:getIcon(com.intellij.openapi.project.Project):javax.swing.Icon
- pa:getSubItems():java.util.List
- pa:getText(com.intellij.openapi.project.Project):java.lang.String
- pa:getTooltipText(com.intellij.openapi.project.Project):java.lang.String
- pa:hasSubStep():Z
c:com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachListStep
- com.intellij.openapi.ui.popup.ListPopupStepEx
- com.intellij.openapi.ui.popup.util.BaseListPopupStep
- <init>(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase,java.util.List,java.lang.String,com.intellij.openapi.project.Project):V
- getIconFor(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachItem):javax.swing.Icon
- getSeparatorAbove(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachItem):com.intellij.openapi.ui.popup.ListSeparator
- getTextFor(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachItem):java.lang.String
- getTooltipTextFor(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachItem):java.lang.String
- hasSubstep(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachItem):Z
- isAutoSelectionEnabled():Z
- isFinal(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachItem):Z
- isSpeedSearchEnabled():Z
- onChosen(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachItem,Z):com.intellij.openapi.ui.popup.PopupStep
- setEmptyText(com.intellij.util.ui.StatusText):V
c:com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachToProcessItem
- com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachItem
- <init>(com.intellij.xdebugger.attach.XAttachPresentationGroup,Z,com.intellij.xdebugger.attach.XAttachHost,com.intellij.execution.process.ProcessInfo,java.util.List,com.intellij.openapi.project.Project,com.intellij.openapi.util.UserDataHolder):V
- <init>(com.intellij.xdebugger.attach.XAttachPresentationGroup,Z,java.lang.String,com.intellij.xdebugger.attach.XAttachHost,com.intellij.execution.process.ProcessInfo,java.util.List,I,com.intellij.openapi.project.Project,com.intellij.openapi.util.UserDataHolder):V
- s:createRecentAttachItem(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachToProcessItem,Z,java.util.List,I,com.intellij.openapi.project.Project,com.intellij.openapi.util.UserDataHolder):com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachToProcessItem
- getDebuggers():java.util.List
- getHost():com.intellij.xdebugger.attach.XAttachHost
- getProcessInfo():com.intellij.execution.process.ProcessInfo
- getSelectedDebugger():com.intellij.xdebugger.attach.XAttachDebugger
- getSubItems():java.util.List
- getText(com.intellij.openapi.project.Project):java.lang.String
- getTooltipText(com.intellij.openapi.project.Project):java.lang.String
- hasSubStep():Z
- startDebugSession(com.intellij.openapi.project.Project):V
c:com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$RecentItem
- <init>(com.intellij.xdebugger.attach.XAttachHost,com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachToProcessItem):V
- s:createRecentItem(com.intellij.xdebugger.attach.XAttachHost,com.intellij.execution.process.ProcessInfo,com.intellij.xdebugger.attach.XAttachPresentationGroup,java.lang.String):com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$RecentItem
- equals(java.lang.Object):Z
- getDebuggerName():java.lang.String
- getGroup():com.intellij.xdebugger.attach.XAttachPresentationGroup
- getHost():com.intellij.xdebugger.attach.XAttachHost
- getProcessInfo():com.intellij.execution.process.ProcessInfo
- getRecentItemCreationTime():java.time.Instant
- hashCode():I
a:com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- <init>():V
- a:isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- isHidden(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- a:perform(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.xdebugger.impl.actions.DebuggerCodeToolbarGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.xdebugger.impl.actions.DebuggerToggleActionHandler
- <init>():V
- a:isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- a:isSelected(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- a:setSelected(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.xdebugger.impl.actions.DefaultAttachRecentItemsMatcher
- com.intellij.xdebugger.attach.XAttachRecentItemsMatcher
- <init>():V
- getMatchingAttachItems(com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$RecentItem,java.util.List,Z,com.intellij.openapi.project.Project,com.intellij.openapi.util.UserDataHolder):java.util.List
c:com.intellij.xdebugger.impl.actions.EditBreakpointAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- com.intellij.openapi.project.DumbAware
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.actions.EditBreakpointAction$ContextAction
- com.intellij.openapi.project.DumbAwareAction
- <init>(com.intellij.openapi.editor.markup.GutterIconRenderer,java.lang.Object,com.intellij.xdebugger.impl.DebuggerSupport):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.xdebugger.impl.actions.EditBreakpointActionHandler
- com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- <init>():V
- pa:doShowPopup(com.intellij.openapi.project.Project,javax.swing.JComponent,java.awt.Point,java.lang.Object):V
- editBreakpoint(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.lang.Object,com.intellij.openapi.editor.markup.GutterIconRenderer):V
- editBreakpoint(com.intellij.openapi.project.Project,javax.swing.JComponent,java.awt.Point,com.intellij.xdebugger.impl.breakpoints.ui.BreakpointItem):V
- perform(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.actions.FocusOnBreakpointAction
- com.intellij.execution.ui.actions.AbstractFocusOnAction
- <init>():V
c:com.intellij.xdebugger.impl.actions.FocusOnFinishAction
- com.intellij.execution.ui.actions.AbstractFocusOnAction
- <init>():V
c:com.intellij.xdebugger.impl.actions.ForceRunToCursorAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.actions.ForceStepIntoAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.actions.ForceStepOverAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
f:com.intellij.xdebugger.impl.actions.LocalAttachHostPresentationGroup
- com.intellij.xdebugger.attach.XAttachPresentationGroup
- sf:INSTANCE:com.intellij.xdebugger.impl.actions.LocalAttachHostPresentationGroup
- compare(com.intellij.xdebugger.attach.XAttachHost,com.intellij.xdebugger.attach.XAttachHost):I
- getGroupName():java.lang.String
- getItemDisplayText(com.intellij.openapi.project.Project,com.intellij.xdebugger.attach.XAttachHost,com.intellij.openapi.util.UserDataHolder):java.lang.String
- getItemIcon(com.intellij.openapi.project.Project,com.intellij.xdebugger.attach.XAttachHost,com.intellij.openapi.util.UserDataHolder):javax.swing.Icon
- getOrder():I
c:com.intellij.xdebugger.impl.actions.MarkObjectAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.xdebugger.impl.actions.MarkObjectActionHandler
- com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- <init>():V
- a:isMarked(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
c:com.intellij.xdebugger.impl.actions.MuteBreakpointAction
- com.intellij.openapi.actionSystem.ToggleAction
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isDumbAware():Z
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.actions.OpenFilesInPreviewTabAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.xdebugger.impl.actions.PauseAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- p:isHidden(com.intellij.openapi.actionSystem.AnActionEvent):Z
c:com.intellij.xdebugger.impl.actions.QuickEvaluateAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.actions.RemoveAllBreakpointsAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.actions.RemoveAllBreakpointsInFileAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.xdebugger.impl.actions.ResetFrameAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.xdebugger.impl.actions.RestoreBreakpointAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.actions.ResumeAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:isHidden(com.intellij.openapi.actionSystem.AnActionEvent):Z
c:com.intellij.xdebugger.impl.actions.RunToCursorAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.actions.ShowExecutionPointAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.actions.StepIntoAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.actions.StepOutAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.actions.StepOverAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- com.intellij.openapi.project.DumbAware
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.actions.ToggleBreakpointEnabledAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.actions.ToggleLineBreakpointAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- com.intellij.openapi.actionSystem.Toggleable
- com.intellij.openapi.project.DumbAware
- <init>():V
- s:getAllPositionsForBreakpoints(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):java.util.Collection
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.actions.ToggleTemporaryLineBreakpointAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- com.intellij.openapi.project.DumbAware
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.actions.UnmuteOnStopAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.xdebugger.impl.actions.UseInlineDebuggerAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.xdebugger.impl.actions.ViewBreakpointsAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- <init>(java.lang.String,java.lang.Object):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- com.intellij.openapi.actionSystem.AnAction
- p:<init>():V
- p:<init>(Z):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- isDumbAware():Z
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:isHidden(com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:performWithHandler(com.intellij.openapi.actionSystem.AnActionEvent):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.xdebugger.impl.actions.XDebuggerActions
- sf:ADD_TO_WATCH:java.lang.String
- sf:COPY_VALUE:java.lang.String
- sf:EVALUATE_DIALOG_TREE_POPUP_GROUP:java.lang.String
- sf:EVALUATE_EXPRESSION:java.lang.String
- sf:FOCUS_ON_BREAKPOINT:java.lang.String
- sf:FOCUS_ON_FINISH:java.lang.String
- sf:FORCE_RUN_TO_CURSOR:java.lang.String
- sf:FORCE_STEP_INTO:java.lang.String
- sf:FRAMES_TOP_TOOLBAR_GROUP:java.lang.String
- sf:FRAMES_TREE_POPUP_GROUP:java.lang.String
- sf:INLINE_DEBUGGER:java.lang.String
- sf:INSPECT_TREE_POPUP_GROUP:java.lang.String
- sf:JUMP_TO_SOURCE:java.lang.String
- sf:JUMP_TO_TYPE_SOURCE:java.lang.String
- sf:MARK_OBJECT:java.lang.String
- sf:MUTE_BREAKPOINTS:java.lang.String
- sf:PAUSE:java.lang.String
- sf:QUICK_EVALUATE_EXPRESSION:java.lang.String
- sf:RESUME:java.lang.String
- sf:RUN_TO_CURSOR:java.lang.String
- sf:SET_VALUE:java.lang.String
- sf:SHOW_EXECUTION_POINT:java.lang.String
- sf:SMART_STEP_INTO:java.lang.String
- sf:STEP_INTO:java.lang.String
- sf:STEP_OUT:java.lang.String
- sf:STEP_OVER:java.lang.String
- sf:THREADS_TREE_POPUP_GROUP:java.lang.String
- sf:TOGGLE_SORT_VALUES:java.lang.String
- sf:TOOL_WINDOW_LEFT_TOOLBAR_GROUP:java.lang.String
- sf:TOOL_WINDOW_TOP_TOOLBAR_3_EXTRA_GROUP:java.lang.String
- sf:TOOL_WINDOW_TOP_TOOLBAR_3_GROUP:java.lang.String
- sf:TOOL_WINDOW_TOP_TOOLBAR_GROUP:java.lang.String
- sf:VARIABLES_TREE_POPUP_GROUP:java.lang.String
- sf:VARIABLES_TREE_TOOLBAR_GROUP:java.lang.String
- sf:VIEW_BREAKPOINTS:java.lang.String
- sf:WATCHES_INLINE_POPUP_GROUP:java.lang.String
- sf:WATCHES_TREE_POPUP_GROUP:java.lang.String
- sf:WATCHES_TREE_TOOLBAR_GROUP:java.lang.String
- sf:XCOPY_WATCH:java.lang.String
- sf:XEDIT_WATCH:java.lang.String
- sf:XNEW_WATCH:java.lang.String
- sf:XREMOVE_WATCH:java.lang.String
c:com.intellij.xdebugger.impl.actions.XDebuggerEditBreakpointActionHandler
- com.intellij.xdebugger.impl.actions.EditBreakpointActionHandler
- <init>():V
- p:doShowPopup(com.intellij.openapi.project.Project,javax.swing.JComponent,java.awt.Point,java.lang.Object):V
- isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
a:com.intellij.xdebugger.impl.actions.XDebuggerSuspendedActionHandler
- com.intellij.xdebugger.impl.actions.handlers.XDebuggerActionHandler
- <init>():V
- s:isEnabled(com.intellij.xdebugger.XDebugSession):Z
- p:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):Z
c:com.intellij.xdebugger.impl.actions.handlers.AddLineBreakpointAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isConditional():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.actions.handlers.AddLineBreakpointAction$WithCondition
- com.intellij.xdebugger.impl.actions.handlers.AddLineBreakpointAction
- <init>():V
- p:isConditional():Z
c:com.intellij.xdebugger.impl.actions.handlers.CurrentSessionXDebuggerResumeHandler
- com.intellij.xdebugger.impl.actions.handlers.RunToolbarDebugActionHandler
- <init>():V
- getSession(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.xdebugger.impl.XDebugSessionImpl
- f:getState(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.xdebugger.impl.actions.handlers.CurrentSessionXDebuggerResumeHandler$State
- p:isHidden(com.intellij.xdebugger.impl.XDebugSessionImpl,com.intellij.openapi.actionSystem.DataContext):Z
- p:perform(com.intellij.xdebugger.impl.XDebugSessionImpl,com.intellij.openapi.actionSystem.DataContext):V
e:com.intellij.xdebugger.impl.actions.handlers.CurrentSessionXDebuggerResumeHandler$State
- java.lang.Enum
- sf:PAUSE:com.intellij.xdebugger.impl.actions.handlers.CurrentSessionXDebuggerResumeHandler$State
- sf:RESUME:com.intellij.xdebugger.impl.actions.handlers.CurrentSessionXDebuggerResumeHandler$State
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.xdebugger.impl.actions.handlers.CurrentSessionXDebuggerResumeHandler$State
- s:values():com.intellij.xdebugger.impl.actions.handlers.CurrentSessionXDebuggerResumeHandler$State[]
f:com.intellij.xdebugger.impl.actions.handlers.InlineXDebuggerResumeHandler
- com.intellij.xdebugger.impl.actions.handlers.XDebuggerResumeHandler
- <init>(com.intellij.execution.RunnerAndConfigurationSettings):V
- f:getConf():com.intellij.execution.RunnerAndConfigurationSettings
- getConfiguration(com.intellij.openapi.project.Project):com.intellij.execution.RunnerAndConfigurationSettings
a:com.intellij.xdebugger.impl.actions.handlers.RunToolbarDebugActionHandler
- com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- <init>():V
- pf:getAppropriateSession(com.intellij.execution.ui.RunContentDescriptor,com.intellij.openapi.project.Project):com.intellij.xdebugger.impl.XDebugSessionImpl
- p:getSession(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.xdebugger.impl.XDebugSessionImpl
- isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- isHidden(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- pa:isHidden(com.intellij.xdebugger.impl.XDebugSessionImpl,com.intellij.openapi.actionSystem.DataContext):Z
- perform(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:perform(com.intellij.xdebugger.impl.XDebugSessionImpl,com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.xdebugger.impl.actions.handlers.RunToolbarPauseActionHandler
- com.intellij.xdebugger.impl.actions.handlers.RunToolbarDebugActionHandler
- <init>():V
- p:isHidden(com.intellij.xdebugger.impl.XDebugSessionImpl,com.intellij.openapi.actionSystem.DataContext):Z
- p:perform(com.intellij.xdebugger.impl.XDebugSessionImpl,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.xdebugger.impl.actions.handlers.RunToolbarResumeActionHandler
- com.intellij.xdebugger.impl.actions.handlers.RunToolbarDebugActionHandler
- <init>():V
c:com.intellij.xdebugger.impl.actions.handlers.XAddToInlineWatchesFromEditorActionHandler
- com.intellij.xdebugger.impl.actions.handlers.XDebuggerActionHandler
- <init>():V
- p:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):Z
- p:perform(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.xdebugger.impl.actions.handlers.XAddToWatchesFromEditorActionHandler
- com.intellij.xdebugger.impl.actions.handlers.XDebuggerActionHandler
- <init>():V
- ps:getTextToEvaluate(com.intellij.openapi.actionSystem.DataContext,com.intellij.xdebugger.XDebugSession):org.jetbrains.concurrency.Promise
- p:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):Z
- p:perform(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):V
a:com.intellij.xdebugger.impl.actions.handlers.XDebuggerActionHandler
- com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- <init>():V
- isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- pa:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):Z
- perform(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:perform(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.xdebugger.impl.actions.handlers.XDebuggerEvaluateActionHandler
- com.intellij.xdebugger.impl.actions.handlers.XDebuggerActionHandler
- <init>():V
- s:getDisplayText(com.intellij.xdebugger.evaluation.ExpressionInfo,com.intellij.openapi.editor.Document):java.lang.String
- s:getExpressionText(com.intellij.xdebugger.evaluation.ExpressionInfo,com.intellij.openapi.editor.Document):java.lang.String
- s:getExpressionText(com.intellij.xdebugger.evaluation.XDebuggerEvaluator,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):org.jetbrains.concurrency.Promise
- s:getSelectedTextAsync(com.intellij.xdebugger.evaluation.XDebuggerEvaluator,com.intellij.openapi.actionSystem.DataContext):org.jetbrains.concurrency.Promise
- p:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):Z
- p:perform(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.xdebugger.impl.actions.handlers.XDebuggerMuteBreakpointsHandler
- com.intellij.xdebugger.impl.actions.handlers.XDebuggerToggleActionHandler
- <init>():V
- p:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:isSelected(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:setSelected(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.xdebugger.impl.actions.handlers.XDebuggerPauseActionHandler
- com.intellij.xdebugger.impl.actions.handlers.XDebuggerActionHandler
- <init>():V
- p:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):Z
- isHidden(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:perform(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.xdebugger.impl.actions.handlers.XDebuggerResumeHandler
- com.intellij.xdebugger.impl.actions.handlers.CurrentSessionXDebuggerResumeHandler
- <init>():V
- getConfiguration(com.intellij.openapi.project.Project):com.intellij.execution.RunnerAndConfigurationSettings
- getSession(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.xdebugger.impl.XDebugSessionImpl
c:com.intellij.xdebugger.impl.actions.handlers.XDebuggerRunToCursorActionHandler
- com.intellij.xdebugger.impl.actions.XDebuggerSuspendedActionHandler
- <init>(Z):V
- p:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):Z
- p:perform(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.xdebugger.impl.actions.handlers.XDebuggerSmartStepIntoHandler
- com.intellij.xdebugger.impl.actions.XDebuggerSuspendedActionHandler
- <init>():V
- p:computeVariants(com.intellij.xdebugger.stepping.XSmartStepIntoHandler,com.intellij.xdebugger.XSourcePosition):org.jetbrains.concurrency.Promise
- p:handleSimpleCases(com.intellij.xdebugger.stepping.XSmartStepIntoHandler,java.util.List,com.intellij.xdebugger.XDebugSession):Z
- p:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):Z
- p:perform(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.xdebugger.impl.actions.handlers.XDebuggerStepIntoHandler
- com.intellij.xdebugger.impl.actions.handlers.XDebuggerSmartStepIntoHandler
- <init>():V
- p:computeVariants(com.intellij.xdebugger.stepping.XSmartStepIntoHandler,com.intellij.xdebugger.XSourcePosition):org.jetbrains.concurrency.Promise
- p:handleSimpleCases(com.intellij.xdebugger.stepping.XSmartStepIntoHandler,java.util.List,com.intellij.xdebugger.XDebugSession):Z
- p:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):Z
a:com.intellij.xdebugger.impl.actions.handlers.XDebuggerToggleActionHandler
- com.intellij.xdebugger.impl.actions.DebuggerToggleActionHandler
- <init>():V
- f:isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- pa:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.AnActionEvent):Z
- isSelected(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- pa:isSelected(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- pa:setSelected(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.xdebugger.impl.actions.handlers.XEvaluateInConsoleFromEditorActionHandler
- com.intellij.xdebugger.impl.actions.handlers.XAddToWatchesFromEditorActionHandler
- <init>():V
- s:getConsoleExecuteAction(com.intellij.execution.ui.ConsoleView):com.intellij.execution.console.ConsoleExecuteAction
- p:isEnabled(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):Z
- p:perform(com.intellij.xdebugger.XDebugSession,com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.xdebugger.impl.actions.handlers.XMarkObjectActionHandler
- com.intellij.xdebugger.impl.actions.MarkObjectActionHandler
- <init>():V
- isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- isHidden(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- isMarked(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- perform(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.actions.handlers.XToggleLineBreakpointActionHandler
- com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- <init>(Z):V
- isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
- perform(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.breakpoints.BreakpointState
- <init>():V
- <init>(Z,java.lang.String,J,com.intellij.xdebugger.breakpoints.SuspendPolicy):V
- createBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpointType,com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl):com.intellij.xdebugger.impl.breakpoints.XBreakpointBase
- getCondition():com.intellij.xdebugger.impl.breakpoints.BreakpointState$Condition
- getDependencyState():com.intellij.xdebugger.impl.breakpoints.XBreakpointDependencyState
- getDescription():java.lang.String
- getGroup():java.lang.String
- getLogExpression():com.intellij.xdebugger.impl.breakpoints.BreakpointState$LogExpression
- getPropertiesElement():org.jdom.Element
- getSuspendPolicy():com.intellij.xdebugger.breakpoints.SuspendPolicy
- getSuspendPolicyString():java.lang.String
- getTimeStamp():J
- getTypeId():java.lang.String
- isConditionEnabled():Z
- isEnabled():Z
- isLogExpressionEnabled():Z
- isLogMessage():Z
- isLogStack():Z
- setCondition(com.intellij.xdebugger.impl.breakpoints.BreakpointState$Condition):V
- setDependencyState(com.intellij.xdebugger.impl.breakpoints.XBreakpointDependencyState):V
- setDescription(java.lang.String):V
- setEnabled(Z):V
- setGroup(java.lang.String):V
- setLogExpression(com.intellij.xdebugger.impl.breakpoints.BreakpointState$LogExpression):V
- setLogMessage(Z):V
- setLogStack(Z):V
- setPropertiesElement(org.jdom.Element):V
- setSuspendPolicy(com.intellij.xdebugger.breakpoints.SuspendPolicy):V
- setSuspendPolicyString(java.lang.String):V
- setTimeStamp(J):V
- setTypeId(java.lang.String):V
c:com.intellij.xdebugger.impl.breakpoints.BreakpointState$Condition
- com.intellij.xdebugger.impl.breakpoints.XExpressionState
- <init>():V
- s:create(Z,com.intellij.xdebugger.XExpression):com.intellij.xdebugger.impl.breakpoints.BreakpointState$Condition
c:com.intellij.xdebugger.impl.breakpoints.BreakpointState$LogExpression
- com.intellij.xdebugger.impl.breakpoints.XExpressionState
- <init>():V
- s:create(Z,com.intellij.xdebugger.XExpression):com.intellij.xdebugger.impl.breakpoints.BreakpointState$LogExpression
f:com.intellij.xdebugger.impl.breakpoints.BreakpointsStatisticsCollector
- <init>():V
- getGroup():com.intellij.internal.statistic.eventLog.EventLogGroup
f:com.intellij.xdebugger.impl.breakpoints.BreakpointsStatisticsCollectorKt
- sf:getType(com.intellij.xdebugger.breakpoints.XBreakpointType):java.util.List
f:com.intellij.xdebugger.impl.breakpoints.BreakpointsUsageCollector
- sf:INSTANCE:com.intellij.xdebugger.impl.breakpoints.BreakpointsUsageCollector
- getGroup():com.intellij.internal.statistic.eventLog.EventLogGroup
- f:getTYPE_FIELD():com.intellij.internal.statistic.eventLog.events.StringEventField
- sf:reportBreakpointVerified(com.intellij.xdebugger.breakpoints.XBreakpoint,J):V
- sf:reportNewBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpoint,com.intellij.xdebugger.breakpoints.XBreakpointType,Z):V
f:com.intellij.xdebugger.impl.breakpoints.BreakpointsUtilValidator
- com.intellij.internal.statistic.eventLog.validator.rules.FUSRule
- com.intellij.internal.statistic.eventLog.validator.rules.PerformanceCareRule
- com.intellij.internal.statistic.eventLog.validator.rules.impl.UtilValidationRule
- <init>():V
- getRuleId():java.lang.String
c:com.intellij.xdebugger.impl.breakpoints.CustomizedBreakpointPresentation
- <init>():V
- getErrorMessage():java.lang.String
- getIcon():javax.swing.Icon
- getTimestamp():J
- setErrorMessage(java.lang.String):V
- setIcon(javax.swing.Icon):V
- setTimestamp(J):V
c:com.intellij.xdebugger.impl.breakpoints.LineBreakpointState
- com.intellij.xdebugger.impl.breakpoints.BreakpointState
- <init>():V
- <init>(Z,java.lang.String,java.lang.String,I,Z,J,com.intellij.xdebugger.breakpoints.SuspendPolicy):V
- createBreakpoint(com.intellij.xdebugger.breakpoints.XLineBreakpointType,com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl):com.intellij.xdebugger.impl.breakpoints.XBreakpointBase
- getFileUrl():java.lang.String
- getLine():I
- isTemporary():Z
- setFileUrl(java.lang.String):V
- setLine(I):V
- setTemporary(Z):V
c:com.intellij.xdebugger.impl.breakpoints.XBreakpointBase
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.xdebugger.breakpoints.XBreakpoint
- java.lang.Comparable
- pf:myState:com.intellij.xdebugger.impl.breakpoints.BreakpointState
- <init>(com.intellij.xdebugger.breakpoints.XBreakpointType,com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl,com.intellij.xdebugger.breakpoints.XBreakpointProperties,com.intellij.xdebugger.impl.breakpoints.BreakpointState):V
- p:<init>(com.intellij.xdebugger.breakpoints.XBreakpointType,com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl,com.intellij.xdebugger.impl.breakpoints.BreakpointState):V
- pf:calculateSpecialIcon():javax.swing.Icon
- clearIcon():V
- compareTo(com.intellij.xdebugger.breakpoints.XBreakpoint):I
- p:createBreakpointDraggableObject():com.intellij.openapi.editor.markup.GutterDraggableObject
- createGutterIconRenderer():com.intellij.openapi.editor.markup.GutterIconRenderer
- f:dispose():V
- p:doDispose():V
- f:fireBreakpointChanged():V
- p:getAdditionalPopupMenuActions(com.intellij.xdebugger.XDebugSession):java.util.List
- p:getBreakpointManager():com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl
- getCondition():java.lang.String
- getConditionExpression():com.intellij.xdebugger.XExpression
- getConditionExpressionInt():com.intellij.xdebugger.XExpression
- getDependencyState():com.intellij.xdebugger.impl.breakpoints.XBreakpointDependencyState
- getDescription():java.lang.String
- getErrorMessage():java.lang.String
- getGroup():java.lang.String
- getIcon():javax.swing.Icon
- getLogExpression():java.lang.String
- getLogExpressionObject():com.intellij.xdebugger.XExpression
- getLogExpressionObjectInt():com.intellij.xdebugger.XExpression
- getNavigatable():com.intellij.pom.Navigatable
- f:getProject():com.intellij.openapi.project.Project
- getProperties():com.intellij.xdebugger.breakpoints.XBreakpointProperties
- getSourcePosition():com.intellij.xdebugger.XSourcePosition
- getState():com.intellij.xdebugger.impl.breakpoints.BreakpointState
- getSuspendPolicy():com.intellij.xdebugger.breakpoints.SuspendPolicy
- getTimeStamp():J
- getType():com.intellij.xdebugger.breakpoints.XBreakpointType
- getUserDescription():java.lang.String
- isConditionEnabled():Z
- isDisposed():Z
- isEnabled():Z
- isLogExpressionEnabled():Z
- isLogMessage():Z
- isLogStack():Z
- isValid():Z
- setCondition(java.lang.String):V
- setConditionEnabled(Z):V
- setConditionExpression(com.intellij.xdebugger.XExpression):V
- setCustomizedPresentation(com.intellij.xdebugger.impl.breakpoints.CustomizedBreakpointPresentation):V
- setDependencyState(com.intellij.xdebugger.impl.breakpoints.XBreakpointDependencyState):V
- setEnabled(Z):V
- setGroup(java.lang.String):V
- p:setIcon(javax.swing.Icon):V
- setLogExpression(java.lang.String):V
- setLogExpressionEnabled(Z):V
- setLogExpressionObject(com.intellij.xdebugger.XExpression):V
- setLogMessage(Z):V
- setLogStack(Z):V
- setSuspendPolicy(com.intellij.xdebugger.breakpoints.SuspendPolicy):V
- setUserDescription(java.lang.String):V
- toString():java.lang.String
- p:updateIcon():V
pc:com.intellij.xdebugger.impl.breakpoints.XBreakpointBase$BreakpointGutterIconRenderer
- com.intellij.xdebugger.impl.breakpoints.XBreakpointBase$CommonBreakpointGutterIconRenderer
- com.intellij.openapi.project.DumbAware
- p:<init>(com.intellij.xdebugger.impl.breakpoints.XBreakpointBase):V
- equals(java.lang.Object):Z
- getAccessibleName():java.lang.String
- getClickAction():com.intellij.openapi.actionSystem.AnAction
- getDraggableObject():com.intellij.openapi.editor.markup.GutterDraggableObject
- getIcon():javax.swing.Icon
- getMiddleButtonClickAction():com.intellij.openapi.actionSystem.AnAction
- getPopupMenuActions():com.intellij.openapi.actionSystem.ActionGroup
- getRightButtonClickAction():com.intellij.openapi.actionSystem.AnAction
- getTooltipText():java.lang.String
- hashCode():I
pa:com.intellij.xdebugger.impl.breakpoints.XBreakpointBase$CommonBreakpointGutterIconRenderer
- com.intellij.openapi.editor.markup.GutterIconRenderer
- p:<init>():V
- getAlignment():com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment
pc:com.intellij.xdebugger.impl.breakpoints.XBreakpointBase$MultipleBreakpointGutterIconRenderer
- com.intellij.xdebugger.impl.breakpoints.XBreakpointBase$CommonBreakpointGutterIconRenderer
- com.intellij.openapi.project.DumbAware
- <init>(java.util.List):V
- equals(java.lang.Object):Z
- getAccessibleName():java.lang.String
- getClickAction():com.intellij.openapi.actionSystem.AnAction
- getDraggableObject():com.intellij.openapi.editor.markup.GutterDraggableObject
- getIcon():javax.swing.Icon
- getMiddleButtonClickAction():com.intellij.openapi.actionSystem.AnAction
- getPopupMenuActions():com.intellij.openapi.actionSystem.ActionGroup
- getRightButtonClickAction():com.intellij.openapi.actionSystem.AnAction
- getTooltipText():java.lang.String
- hashCode():I
c:com.intellij.xdebugger.impl.breakpoints.XBreakpointDependencyState
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String,Z):V
- getId():java.lang.String
- getMasterBreakpointId():java.lang.String
- isLeaveEnabled():Z
- setId(java.lang.String):V
- setLeaveEnabled(Z):V
- setMasterBreakpointId(java.lang.String):V
f:com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl
- com.intellij.xdebugger.breakpoints.XBreakpointManager
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.XDebuggerManagerImpl,com.intellij.util.messages.MessageBusConnection):V
- addBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpointType,com.intellij.xdebugger.breakpoints.XBreakpointProperties):com.intellij.xdebugger.breakpoints.XBreakpoint
- addBreakpointListener(com.intellij.xdebugger.breakpoints.XBreakpointType,com.intellij.xdebugger.breakpoints.XBreakpointListener):V
- addBreakpointListener(com.intellij.xdebugger.breakpoints.XBreakpointType,com.intellij.xdebugger.breakpoints.XBreakpointListener,com.intellij.openapi.Disposable):V
- addDefaultBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpointType,com.intellij.xdebugger.breakpoints.XBreakpointProperties):com.intellij.xdebugger.breakpoints.XBreakpoint
- addLineBreakpoint(com.intellij.xdebugger.breakpoints.XLineBreakpointType,java.lang.String,I,com.intellij.xdebugger.breakpoints.XBreakpointProperties):com.intellij.xdebugger.breakpoints.XLineBreakpoint
- addLineBreakpoint(com.intellij.xdebugger.breakpoints.XLineBreakpointType,java.lang.String,I,com.intellij.xdebugger.breakpoints.XBreakpointProperties,Z):com.intellij.xdebugger.breakpoints.XLineBreakpoint
- addLineBreakpoint(com.intellij.xdebugger.breakpoints.XLineBreakpointType,java.lang.String,I,com.intellij.xdebugger.breakpoints.XBreakpointProperties,Z,Z):com.intellij.xdebugger.breakpoints.XLineBreakpoint
- canRestoreLastRemovedBreakpoint():Z
- findBreakpointAtLine(com.intellij.xdebugger.breakpoints.XLineBreakpointType,com.intellij.openapi.vfs.VirtualFile,I):com.intellij.xdebugger.breakpoints.XLineBreakpoint
- findBreakpointsAtLine(com.intellij.xdebugger.breakpoints.XLineBreakpointType,com.intellij.openapi.vfs.VirtualFile,I):java.util.Collection
- fireBreakpointChanged(com.intellij.xdebugger.impl.breakpoints.XBreakpointBase):V
- fireBreakpointPresentationUpdated(com.intellij.xdebugger.breakpoints.XBreakpoint,com.intellij.xdebugger.XDebugSession):V
- getAllBreakpoints():com.intellij.xdebugger.impl.breakpoints.XBreakpointBase[]
- getAllGroups():java.util.Set
- getBreakpointDefaults(com.intellij.xdebugger.breakpoints.XBreakpointType):com.intellij.xdebugger.impl.breakpoints.BreakpointState
- getBreakpoints(com.intellij.xdebugger.breakpoints.XBreakpointType):java.util.Collection
- getBreakpoints(java.lang.Class):java.util.Collection
- getBreakpointsDialogSettings():com.intellij.xdebugger.impl.breakpoints.XBreakpointsDialogState
- getDebuggerManager():com.intellij.xdebugger.impl.XDebuggerManagerImpl
- getDefaultBreakpoints(com.intellij.xdebugger.breakpoints.XBreakpointType):java.util.Set
- getDefaultGroup():java.lang.String
- getDependentBreakpointManager():com.intellij.xdebugger.impl.breakpoints.XDependentBreakpointManager
- getLastRemovedBreakpoint():com.intellij.xdebugger.impl.breakpoints.XBreakpointBase
- getLineBreakpointManager():com.intellij.xdebugger.impl.breakpoints.XLineBreakpointManager
- getProject():com.intellij.openapi.project.Project
- init():V
- isDefaultBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpoint):Z
- loadState(com.intellij.xdebugger.impl.BreakpointManagerState):V
- noStateLoaded():V
- rememberRemovedBreakpoint(com.intellij.xdebugger.impl.breakpoints.XBreakpointBase):V
- removeAllBreakpoints():V
- removeBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpoint):V
- removeBreakpointListener(com.intellij.xdebugger.breakpoints.XBreakpointType,com.intellij.xdebugger.breakpoints.XBreakpointListener):V
- removeDefaultBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpoint):V
- restoreLastRemovedBreakpoint():com.intellij.xdebugger.breakpoints.XBreakpoint
- saveState(com.intellij.xdebugger.impl.BreakpointManagerState):com.intellij.xdebugger.impl.BreakpointManagerState
- setBreakpointsDialogSettings(com.intellij.xdebugger.impl.breakpoints.XBreakpointsDialogState):V
- setDefaultGroup(java.lang.String):V
- s:statesAreDifferent(com.intellij.xdebugger.impl.breakpoints.BreakpointState,com.intellij.xdebugger.impl.breakpoints.BreakpointState,Z):Z
- updateBreakpointPresentation(com.intellij.xdebugger.breakpoints.XLineBreakpoint,javax.swing.Icon,java.lang.String):V
c:com.intellij.xdebugger.impl.breakpoints.XBreakpointPanelProvider
- com.intellij.xdebugger.impl.breakpoints.ui.BreakpointPanelProvider
- <init>():V
- addListener(com.intellij.xdebugger.impl.breakpoints.ui.BreakpointPanelProvider$BreakpointsListener,com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- createBreakpointsGroupingRules(java.util.Collection):V
- findBreakpoint(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,I):com.intellij.xdebugger.breakpoints.XBreakpoint
- getBreakpointGutterIconRenderer(java.lang.Object):com.intellij.openapi.editor.markup.GutterIconRenderer
- getPriority():I
- onDialogClosed(com.intellij.openapi.project.Project):V
- provideBreakpointItems(com.intellij.openapi.project.Project,java.util.Collection):V
com.intellij.xdebugger.impl.breakpoints.XBreakpointTypeWithDocumentDelegation
- a:getDocumentForHighlighting(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.Document
f:com.intellij.xdebugger.impl.breakpoints.XBreakpointUtil
- s:collectPanelProviders():java.util.List
- s:findSelectedBreakpoint(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):com.intellij.openapi.util.Pair
- s:findType(java.lang.String):com.intellij.xdebugger.breakpoints.XBreakpointType
- s:getAvailableLineBreakpointTypes(com.intellij.openapi.project.Project,com.intellij.xdebugger.XSourcePosition,com.intellij.openapi.editor.Editor):java.util.List
- s:getAvailableLineBreakpointTypes(com.intellij.openapi.project.Project,com.intellij.xdebugger.XSourcePosition,Z,com.intellij.openapi.editor.Editor):java.util.List
- s:getDebuggerSupport(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.breakpoints.ui.BreakpointItem):com.intellij.xdebugger.impl.DebuggerSupport
- s:getDisplayText(com.intellij.xdebugger.breakpoints.XBreakpoint):java.lang.String
- s:getGeneralDescription(com.intellij.xdebugger.breakpoints.XBreakpoint):java.lang.String
- s:getPropertyXMLDescriptions(com.intellij.xdebugger.breakpoints.XBreakpoint):java.util.List
- s:getShortText(com.intellij.xdebugger.breakpoints.XBreakpoint):java.lang.String
- s:toggleLineBreakpoint(com.intellij.openapi.project.Project,com.intellij.xdebugger.XSourcePosition,com.intellij.openapi.editor.Editor,Z,Z,Z):org.jetbrains.concurrency.Promise
- s:toggleLineBreakpoint(com.intellij.openapi.project.Project,com.intellij.xdebugger.XSourcePosition,Z,com.intellij.openapi.editor.Editor,Z,Z,Z):org.jetbrains.concurrency.Promise
f:com.intellij.xdebugger.impl.breakpoints.XBreakpointsDialogState
- com.intellij.openapi.components.BaseState
- <init>():V
- f:getSelectedGroupingRules():java.util.Set
- f:getTreeState():com.intellij.ide.util.treeView.TreeState
- f:setSelectedGroupingRules(java.util.Set):V
- f:setTreeState(com.intellij.ide.util.treeView.TreeState):V
com.intellij.xdebugger.impl.breakpoints.XDependentBreakpointListener
- java.util.EventListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:dependencyCleared(com.intellij.xdebugger.breakpoints.XBreakpoint):V
- a:dependencySet(com.intellij.xdebugger.breakpoints.XBreakpoint,com.intellij.xdebugger.breakpoints.XBreakpoint):V
f:com.intellij.xdebugger.impl.breakpoints.XDependentBreakpointManager
- <init>(com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl,com.intellij.util.messages.MessageBusConnection):V
- clearMasterBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpoint):V
- getAllSlaveBreakpoints():java.util.Set
- getMasterBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpoint):com.intellij.xdebugger.breakpoints.XBreakpoint
- getSlaveBreakpoints(com.intellij.xdebugger.breakpoints.XBreakpoint):java.util.List
- isLeaveEnabled(com.intellij.xdebugger.breakpoints.XBreakpoint):Z
- isMasterOrSlave(com.intellij.xdebugger.breakpoints.XBreakpoint):Z
- loadState():V
- saveState():V
- setMasterBreakpoint(com.intellij.xdebugger.breakpoints.XBreakpoint,com.intellij.xdebugger.breakpoints.XBreakpoint,Z):V
c:com.intellij.xdebugger.impl.breakpoints.XExpressionImpl
- com.intellij.xdebugger.XExpression
- sf:EMPTY_CODE_FRAGMENT:com.intellij.xdebugger.XExpression
- sf:EMPTY_EXPRESSION:com.intellij.xdebugger.XExpression
- <init>(java.lang.String,com.intellij.lang.Language,java.lang.String):V
- <init>(java.lang.String,com.intellij.lang.Language,java.lang.String,com.intellij.xdebugger.evaluation.EvaluationMode):V
- s:changeLanguage(com.intellij.xdebugger.XExpression,com.intellij.lang.Language):com.intellij.xdebugger.impl.breakpoints.XExpressionImpl
- s:changeMode(com.intellij.xdebugger.XExpression,com.intellij.xdebugger.evaluation.EvaluationMode):com.intellij.xdebugger.impl.breakpoints.XExpressionImpl
- equals(java.lang.Object):Z
- s:fromText(java.lang.String):com.intellij.xdebugger.impl.breakpoints.XExpressionImpl
- s:fromText(java.lang.String,com.intellij.xdebugger.evaluation.EvaluationMode):com.intellij.xdebugger.impl.breakpoints.XExpressionImpl
- getCustomInfo():java.lang.String
- getExpression():java.lang.String
- getLanguage():com.intellij.lang.Language
- getMode():com.intellij.xdebugger.evaluation.EvaluationMode
- hashCode():I
- toString():java.lang.String
c:com.intellij.xdebugger.impl.breakpoints.XExpressionState
- myCustomInfo:java.lang.String
- myDisabled:Z
- myExpression:java.lang.String
- myLanguage:java.lang.String
- myMode:com.intellij.xdebugger.evaluation.EvaluationMode
- myOldExpression:java.lang.String
- <init>():V
- <init>(com.intellij.xdebugger.XExpression):V
- <init>(Z,com.intellij.xdebugger.XExpression):V
- <init>(Z,java.lang.String,java.lang.String,java.lang.String,com.intellij.xdebugger.evaluation.EvaluationMode):V
- toXExpression():com.intellij.xdebugger.XExpression
f:com.intellij.xdebugger.impl.breakpoints.XLineBreakpointImpl
- com.intellij.xdebugger.impl.breakpoints.XBreakpointBase
- com.intellij.xdebugger.breakpoints.XLineBreakpoint
- <init>(com.intellij.xdebugger.breakpoints.XLineBreakpointType,com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl,com.intellij.xdebugger.breakpoints.XBreakpointProperties,com.intellij.xdebugger.impl.breakpoints.LineBreakpointState):V
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFileUrl():java.lang.String
- getHighlighter():com.intellij.openapi.editor.markup.RangeHighlighter
- getLine():I
- getPresentableFilePath():java.lang.String
- getShortFilePath():java.lang.String
- getSourcePosition():com.intellij.xdebugger.XSourcePosition
- getType():com.intellij.xdebugger.breakpoints.XLineBreakpointType
- isTemporary():Z
- isValid():Z
- setFileUrl(java.lang.String):V
- setTemporary(Z):V
- toString():java.lang.String
- updatePosition():V
- updateUI():V
f:com.intellij.xdebugger.impl.breakpoints.XLineBreakpointManager
- sf:BREAKPOINT_LINE_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:Companion:com.intellij.xdebugger.impl.breakpoints.XLineBreakpointManager$Companion
- <init>(com.intellij.openapi.project.Project):V
- f:breakpointChanged(com.intellij.xdebugger.impl.breakpoints.XLineBreakpointImpl):V
- f:getDocumentBreakpoints(com.intellij.openapi.editor.Document):java.util.Collection
- f:queueAllBreakpointsUpdate():V
- f:queueBreakpointUpdate(com.intellij.xdebugger.breakpoints.XBreakpoint):V
- f:queueBreakpointUpdate(com.intellij.xdebugger.breakpoints.XBreakpoint,java.lang.Runnable):V
- bs:queueBreakpointUpdate$default(com.intellij.xdebugger.impl.breakpoints.XLineBreakpointManager,com.intellij.xdebugger.breakpoints.XBreakpoint,java.lang.Runnable,I,java.lang.Object):V
- f:registerBreakpoint(com.intellij.xdebugger.impl.breakpoints.XLineBreakpointImpl,Z):V
- f:unregisterBreakpoint(com.intellij.xdebugger.impl.breakpoints.XLineBreakpointImpl):V
- f:updateBreakpointsUI():V
f:com.intellij.xdebugger.impl.breakpoints.XLineBreakpointManager$Companion
c:com.intellij.xdebugger.impl.breakpoints.ui.BreakpointChooser
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.breakpoints.ui.BreakpointChooser$Delegate,java.lang.Object,java.util.List):V
- getComponent():javax.swing.JComponent
- getSelectedBreakpoint():java.lang.Object
- setDetailView(com.intellij.ui.popup.util.DetailView):V
- setSelectedBreakpoint(java.lang.Object):V
com.intellij.xdebugger.impl.breakpoints.ui.BreakpointChooser$Delegate
- a:breakpointChosen(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.breakpoints.ui.BreakpointItem):V
a:com.intellij.xdebugger.impl.breakpoints.ui.BreakpointItem
- com.intellij.ui.popup.util.ItemWrapper
- com.intellij.pom.Navigatable
- java.lang.Comparable
- sf:EDITOR_ONLY:com.intellij.openapi.util.Key
- <init>():V
- p:dispose():V
- equals(java.lang.Object):Z
- a:getBreakpoint():java.lang.Object
- a:getDisplayText():java.lang.String
- a:getIcon():javax.swing.Icon
- hashCode():I
- a:isDefaultBreakpoint():Z
- a:isEnabled():Z
- a:saveState():V
- a:setEnabled(Z):V
- a:setupGenericRenderer(com.intellij.ui.SimpleColoredComponent,Z):V
- setupRenderer(com.intellij.ui.ColoredListCellRenderer,com.intellij.openapi.project.Project,Z):V
- setupRenderer(com.intellij.ui.ColoredTreeCellRenderer,com.intellij.openapi.project.Project,Z):V
- updateAccessoryView(javax.swing.JComponent):V
c:com.intellij.xdebugger.impl.breakpoints.ui.BreakpointNoneItem
- com.intellij.xdebugger.impl.breakpoints.ui.BreakpointItem
- <init>():V
- allowedToRemove():Z
- compareTo(com.intellij.xdebugger.impl.breakpoints.ui.BreakpointItem):I
- p:doUpdateDetailView(com.intellij.ui.popup.util.DetailView,Z):V
- footerText():java.lang.String
- getBreakpoint():java.lang.Object
- getDisplayText():java.lang.String
- getIcon():javax.swing.Icon
- isDefaultBreakpoint():Z
- isEnabled():Z
- removed(com.intellij.openapi.project.Project):V
- saveState():V
- setEnabled(Z):V
- setupGenericRenderer(com.intellij.ui.SimpleColoredComponent,Z):V
- speedSearchText():java.lang.String
a:com.intellij.xdebugger.impl.breakpoints.ui.BreakpointPanelProvider
- <init>():V
- a:addListener(com.intellij.xdebugger.impl.breakpoints.ui.BreakpointPanelProvider$BreakpointsListener,com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- a:createBreakpointsGroupingRules(java.util.Collection):V
- a:findBreakpoint(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,I):java.lang.Object
- a:getBreakpointGutterIconRenderer(java.lang.Object):com.intellij.openapi.editor.markup.GutterIconRenderer
- a:getPriority():I
- a:onDialogClosed(com.intellij.openapi.project.Project):V
- a:provideBreakpointItems(com.intellij.openapi.project.Project,java.util.Collection):V
com.intellij.xdebugger.impl.breakpoints.ui.BreakpointPanelProvider$BreakpointsListener
- a:breakpointsChanged():V
c:com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialog
- com.intellij.openapi.ui.DialogWrapper
- p:<init>(com.intellij.openapi.project.Project,java.lang.Object,java.util.List):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:dispose():V
- p:getDimensionServiceKey():java.lang.String
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- selectBreakpoint(java.lang.Object,Z):Z
- toFront():V
c:com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory
- <init>(com.intellij.openapi.project.Project):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory
- popupRequested(java.lang.Object):Z
- setBalloonToHide(com.intellij.openapi.ui.popup.Balloon,java.lang.Object):V
- showDialog(java.lang.Object):V
c:com.intellij.xdebugger.impl.breakpoints.ui.XBreakpointActionsPanel
- com.intellij.xdebugger.impl.breakpoints.ui.XBreakpointPropertiesSubPanel
- sf:LOG_EXPRESSION_HISTORY_ID:java.lang.String
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- dispose():V
- hide():V
- init(com.intellij.openapi.project.Project,com.intellij.xdebugger.breakpoints.XBreakpointManager,com.intellij.xdebugger.impl.breakpoints.XBreakpointBase,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider):V
- lightVariant(Z):Z
a:com.intellij.xdebugger.impl.breakpoints.ui.XBreakpointPropertiesSubPanel
- p:myBreakpoint:com.intellij.xdebugger.impl.breakpoints.XBreakpointBase
- p:myBreakpointManager:com.intellij.xdebugger.breakpoints.XBreakpointManager
- p:myBreakpointType:com.intellij.xdebugger.breakpoints.XBreakpointType
- p:myProject:com.intellij.openapi.project.Project
- <init>():V
- init(com.intellij.openapi.project.Project,com.intellij.xdebugger.breakpoints.XBreakpointManager,com.intellij.xdebugger.impl.breakpoints.XBreakpointBase):V
- lightVariant(Z):Z
c:com.intellij.xdebugger.impl.breakpoints.ui.XLightBreakpointPropertiesPanel
- com.intellij.xdebugger.impl.breakpoints.ui.XSuspendPolicyPanel$Delegate
- sf:CONDITION_HISTORY_ID:java.lang.String
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.breakpoints.XBreakpointManager,com.intellij.xdebugger.impl.breakpoints.XBreakpointBase,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.breakpoints.XBreakpointManager,com.intellij.xdebugger.impl.breakpoints.XBreakpointBase,Z,Z):V
- dispose():V
- getDelegate():com.intellij.xdebugger.impl.breakpoints.ui.XLightBreakpointPropertiesPanel$Delegate
- getMainPanel():javax.swing.JPanel
- loadProperties():V
- saveProperties():V
- setDelegate(com.intellij.xdebugger.impl.breakpoints.ui.XLightBreakpointPropertiesPanel$Delegate):V
- setDetailView(com.intellij.ui.popup.util.DetailView):V
- showMoreOptions():Z
- showMoreOptionsIfNeeded():V
com.intellij.xdebugger.impl.breakpoints.ui.XLightBreakpointPropertiesPanel$Delegate
- a:showMoreOptions():V
c:com.intellij.xdebugger.impl.breakpoints.ui.XMasterBreakpointPanel
- com.intellij.xdebugger.impl.breakpoints.ui.XBreakpointPropertiesSubPanel
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- hide():V
- init(com.intellij.openapi.project.Project,com.intellij.xdebugger.breakpoints.XBreakpointManager,com.intellij.xdebugger.impl.breakpoints.XBreakpointBase):V
- lightVariant(Z):Z
- setDetailView(com.intellij.ui.popup.util.DetailView):V
c:com.intellij.xdebugger.impl.breakpoints.ui.XSuspendPolicyPanel
- com.intellij.xdebugger.impl.breakpoints.ui.XBreakpointPropertiesSubPanel
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- getDelegate():com.intellij.xdebugger.impl.breakpoints.ui.XSuspendPolicyPanel$Delegate
- hide():V
- init(com.intellij.openapi.project.Project,com.intellij.xdebugger.breakpoints.XBreakpointManager,com.intellij.xdebugger.impl.breakpoints.XBreakpointBase):V
- lightVariant(Z):Z
- setDelegate(com.intellij.xdebugger.impl.breakpoints.ui.XSuspendPolicyPanel$Delegate):V
com.intellij.xdebugger.impl.breakpoints.ui.XSuspendPolicyPanel$Delegate
- a:showMoreOptionsIfNeeded():V
c:com.intellij.xdebugger.impl.breakpoints.ui.grouping.XBreakpointCustomGroup
- com.intellij.xdebugger.breakpoints.ui.XBreakpointGroup
- <init>(java.lang.String,com.intellij.openapi.project.Project):V
- getIcon(Z):javax.swing.Icon
- getName():java.lang.String
- isDefault():Z
f:com.intellij.xdebugger.impl.breakpoints.ui.grouping.XBreakpointCustomGroupingRule
- com.intellij.xdebugger.breakpoints.ui.XBreakpointGroupingRule
- <init>():V
- getGroup(java.lang.Object,java.util.Collection):com.intellij.xdebugger.impl.breakpoints.ui.grouping.XBreakpointCustomGroup
- getIcon():javax.swing.Icon
- getPriority():I
- isAlwaysEnabled():Z
c:com.intellij.xdebugger.impl.breakpoints.ui.grouping.XBreakpointFileGroup
- com.intellij.xdebugger.breakpoints.ui.XBreakpointGroup
- <init>(com.intellij.openapi.vfs.VirtualFile):V
- equals(java.lang.Object):Z
- getFile():com.intellij.openapi.vfs.VirtualFile
- getIcon(Z):javax.swing.Icon
- getName():java.lang.String
f:com.intellij.xdebugger.impl.breakpoints.ui.grouping.XBreakpointFileGroupingRule
- com.intellij.xdebugger.breakpoints.ui.XBreakpointGroupingRule
- <init>():V
- getGroup(java.lang.Object,java.util.Collection):com.intellij.xdebugger.impl.breakpoints.ui.grouping.XBreakpointFileGroup
- getIcon():javax.swing.Icon
- getPriority():I
f:com.intellij.xdebugger.impl.breakpoints.ui.grouping.XBreakpointGroupingByTypeRule
- com.intellij.xdebugger.breakpoints.ui.XBreakpointGroupingRule
- <init>():V
- getGroup(java.lang.Object,java.util.Collection):com.intellij.xdebugger.impl.breakpoints.ui.grouping.XBreakpointTypeGroup
- getPriority():I
- isAlwaysEnabled():Z
c:com.intellij.xdebugger.impl.breakpoints.ui.grouping.XBreakpointTypeGroup
- com.intellij.xdebugger.breakpoints.ui.XBreakpointGroup
- <init>(com.intellij.xdebugger.breakpoints.XBreakpointType):V
- compareTo(com.intellij.xdebugger.breakpoints.ui.XBreakpointGroup):I
- getBreakpointType():com.intellij.xdebugger.breakpoints.XBreakpointType
- getIcon(Z):javax.swing.Icon
- getName():java.lang.String
c:com.intellij.xdebugger.impl.breakpoints.ui.tree.BreakpointItemNode
- com.intellij.ui.CheckedTreeNode
- getBreakpointItem():com.intellij.xdebugger.impl.breakpoints.ui.BreakpointItem
c:com.intellij.xdebugger.impl.breakpoints.ui.tree.BreakpointItemsTreeController
- p:myInBuild:Z
- <init>(java.util.Collection):V
- buildTree(java.util.Collection):V
- getRoot():com.intellij.ui.CheckedTreeNode
- getSelectedBreakpoints(Z):java.util.List
- getTreeView():javax.swing.JTree
- nodeStateDidChange(com.intellij.ui.CheckedTreeNode):V
- p:nodeStateDidChangeImpl(com.intellij.ui.CheckedTreeNode):V
- nodeStateWillChange(com.intellij.ui.CheckedTreeNode):V
- p:nodeStateWillChangeImpl(com.intellij.ui.CheckedTreeNode):V
- rebuildTree(java.util.Collection):V
- removeSelectedBreakpoints(com.intellij.openapi.project.Project):V
- selectBreakpointItem(com.intellij.xdebugger.impl.breakpoints.ui.BreakpointItem,javax.swing.tree.TreePath):V
- selectFirstBreakpointItem():V
- p:selectionChanged():V
- p:selectionChangedImpl():V
- setGroupingRules(java.util.Collection):V
- setTreeView(javax.swing.JTree):V
c:com.intellij.xdebugger.impl.breakpoints.ui.tree.BreakpointsCheckboxTree
- com.intellij.ui.CheckboxTree
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.breakpoints.ui.tree.BreakpointItemsTreeController):V
- convertValueToText(java.lang.Object,Z,Z,Z,I,Z):java.lang.String
- p:installSpeedSearch():V
- p:nodeStateWillChange(com.intellij.ui.CheckedTreeNode):V
- p:onNodeStateChanged(com.intellij.ui.CheckedTreeNode):V
- setDelegate(com.intellij.xdebugger.impl.breakpoints.ui.tree.BreakpointsCheckboxTree$Delegate):V
c:com.intellij.xdebugger.impl.breakpoints.ui.tree.BreakpointsGroupNode
- com.intellij.ui.CheckedTreeNode
- getGroup():com.intellij.xdebugger.breakpoints.ui.XBreakpointGroup
- getLevel():I
c:com.intellij.xdebugger.impl.breakpoints.ui.tree.BreakpointsSimpleTree
- com.intellij.ui.treeStructure.Tree
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.breakpoints.ui.tree.BreakpointItemsTreeController):V
a:com.intellij.xdebugger.impl.dfaassist.DfaAssistBase
- com.intellij.openapi.Disposable
- p:myMode:com.intellij.xdebugger.impl.dfaassist.DfaAssistBase$AssistMode
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project):V
- p:cleanUp():V
- p:displayInlays(com.intellij.xdebugger.impl.dfaassist.DfaResult):V
- dispose():V
- p:getInlayHintActions():java.util.List
e:com.intellij.xdebugger.impl.dfaassist.DfaAssistBase$AssistMode
- java.lang.Enum
- sf:BOTH:com.intellij.xdebugger.impl.dfaassist.DfaAssistBase$AssistMode
- sf:GRAY_OUT:com.intellij.xdebugger.impl.dfaassist.DfaAssistBase$AssistMode
- sf:INLAYS:com.intellij.xdebugger.impl.dfaassist.DfaAssistBase$AssistMode
- sf:NONE:com.intellij.xdebugger.impl.dfaassist.DfaAssistBase$AssistMode
- displayGrayOut():Z
- s:valueOf(java.lang.String):com.intellij.xdebugger.impl.dfaassist.DfaAssistBase$AssistMode
- s:values():com.intellij.xdebugger.impl.dfaassist.DfaAssistBase$AssistMode[]
*e:com.intellij.xdebugger.impl.dfaassist.DfaHint
- java.lang.Enum
- sf:AIOOBE:com.intellij.xdebugger.impl.dfaassist.DfaHint
- sf:ANY_VALUE:com.intellij.xdebugger.impl.dfaassist.DfaHint
- sf:ASE:com.intellij.xdebugger.impl.dfaassist.DfaHint
- sf:CCE:com.intellij.xdebugger.impl.dfaassist.DfaHint
- sf:FAIL:com.intellij.xdebugger.impl.dfaassist.DfaHint
- sf:FALSE:com.intellij.xdebugger.impl.dfaassist.DfaHint
- sf:NONE:com.intellij.xdebugger.impl.dfaassist.DfaHint
- sf:NPE:com.intellij.xdebugger.impl.dfaassist.DfaHint
- sf:NULL:com.intellij.xdebugger.impl.dfaassist.DfaHint
- sf:NULL_AS_NOT_NULL:com.intellij.xdebugger.impl.dfaassist.DfaHint
- sf:TRUE:com.intellij.xdebugger.impl.dfaassist.DfaHint
- getTitle():java.lang.String
- merge(com.intellij.xdebugger.impl.dfaassist.DfaHint):com.intellij.xdebugger.impl.dfaassist.DfaHint
- s:valueOf(java.lang.String):com.intellij.xdebugger.impl.dfaassist.DfaHint
- s:values():com.intellij.xdebugger.impl.dfaassist.DfaHint[]
c:com.intellij.xdebugger.impl.dfaassist.DfaResult
- sf:EMPTY:com.intellij.xdebugger.impl.dfaassist.DfaResult
- f:file:com.intellij.psi.PsiFile
- f:hints:java.util.Map
- f:unreachable:java.util.Collection
- <init>(com.intellij.psi.PsiFile,java.util.Map,java.util.Collection):V
c:com.intellij.xdebugger.impl.evaluate.CodeFragmentInputComponent
- com.intellij.xdebugger.impl.evaluate.EvaluationInputComponent
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.XExpression,java.lang.String,com.intellij.openapi.Disposable):V
- addComponent(javax.swing.JPanel,javax.swing.JPanel):V
- getInputEditor():com.intellij.xdebugger.impl.ui.XDebuggerEditorBase
- getMainComponent():javax.swing.JPanel
f:com.intellij.xdebugger.impl.evaluate.DebuggerEvaluationStatisticsCollector
- sf:DIALOG_OPEN:com.intellij.internal.statistic.eventLog.events.EventId1
- sf:EVALUATE:com.intellij.internal.statistic.eventLog.events.EventId1
- sf:HISTORY_CHOOSE:com.intellij.internal.statistic.eventLog.events.EventId
- sf:HISTORY_SHOW:com.intellij.internal.statistic.eventLog.events.EventId
- sf:INLINE_EVALUATE:com.intellij.internal.statistic.eventLog.events.EventId
- sf:INPUT_FOCUS:com.intellij.internal.statistic.eventLog.events.EventId
- sf:INSTANCE:com.intellij.xdebugger.impl.evaluate.DebuggerEvaluationStatisticsCollector
- sf:MODE_SWITCH:com.intellij.internal.statistic.eventLog.events.EventId1
- sf:WATCH_FROM_INLINE_ADD:com.intellij.internal.statistic.eventLog.events.EventId1
- getGroup():com.intellij.internal.statistic.eventLog.EventLogGroup
a:com.intellij.xdebugger.impl.evaluate.EvaluationInputComponent
- p:<init>(java.lang.String):V
- a:addComponent(javax.swing.JPanel,javax.swing.JPanel):V
- a:getInputEditor():com.intellij.xdebugger.impl.ui.XDebuggerEditorBase
- a:getMainComponent():javax.swing.JPanel
- getTitle():java.lang.String
c:com.intellij.xdebugger.impl.evaluate.ExpressionInputComponent
- com.intellij.xdebugger.impl.evaluate.EvaluationInputComponent
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,java.lang.String,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.XExpression,com.intellij.openapi.Disposable,Z):V
- addComponent(javax.swing.JPanel,javax.swing.JPanel):V
- getInputEditor():com.intellij.xdebugger.impl.ui.XDebuggerEditorBase
- getMainComponent():javax.swing.JPanel
c:com.intellij.xdebugger.impl.evaluate.ExpressionInputForm
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- addExpressionComponent(javax.swing.JComponent):V
- addLanguageComponent(javax.swing.JComponent):V
- getMainPanel():javax.swing.JPanel
- setName(java.lang.String):V
c:com.intellij.xdebugger.impl.evaluate.XDebuggerEvaluationDialog
- com.intellij.openapi.ui.DialogWrapper
- sf:ADD_WATCH_KEYSTROKE:javax.swing.KeyStroke
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.xdebugger.XDebugSession,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.XExpression,com.intellij.xdebugger.XSourcePosition,Z):V
- <init>(com.intellij.xdebugger.evaluation.XDebuggerEvaluator,com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.XExpression,com.intellij.xdebugger.XSourcePosition,Z):V
- p:createCenterPanel():javax.swing.JComponent
- p:createDefaultActions():V
- p:createJButtonForAction(javax.swing.Action):javax.swing.JButton
- p:dispose():V
- doCancelAction():V
- p:doOKAction():V
- evaluationDone():V
- s:getAddWatchKeystroke():javax.swing.KeyStroke
- p:getDimensionServiceKey():java.lang.String
- getExpression():com.intellij.xdebugger.XExpression
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- startEvaluation(com.intellij.xdebugger.evaluation.XDebuggerEvaluator$XEvaluationCallback):V
c:com.intellij.xdebugger.impl.evaluate.XExpressionDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,java.lang.String,java.lang.String,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.XExpression):V
- p:createCenterPanel():javax.swing.JComponent
- p:getDimensionServiceKey():java.lang.String
- f:getExpression():com.intellij.xdebugger.XExpression
- getPreferredFocusedComponent():javax.swing.JComponent
com.intellij.xdebugger.impl.evaluate.XValueCompactPresentation
- a:renderValue(com.intellij.xdebugger.frame.presentation.XValuePresentation$XValueTextRenderer,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):V
c:com.intellij.xdebugger.impl.evaluate.quick.XDebuggerInstanceTreeCreator
- com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.impl.frame.XValueMarkers,com.intellij.xdebugger.XDebugSession):V
- createDescriptorByNode(java.lang.Object,com.intellij.concurrency.ResultConsumer):V
- createTree(com.intellij.openapi.util.Pair):com.intellij.ui.treeStructure.Tree
- getTitle(com.intellij.openapi.util.Pair):java.lang.String
com.intellij.xdebugger.impl.evaluate.quick.XDebuggerPsiEvaluator
- a:evaluate(com.intellij.psi.PsiElement,com.intellij.xdebugger.evaluation.XDebuggerEvaluator$XEvaluationCallback):V
c:com.intellij.xdebugger.impl.evaluate.quick.XDebuggerTreeCreator
- com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.impl.frame.XValueMarkers):V
- createDescriptorByNode(java.lang.Object,com.intellij.concurrency.ResultConsumer):V
- createTree(com.intellij.openapi.util.Pair):com.intellij.ui.treeStructure.Tree
- getTitle(com.intellij.openapi.util.Pair):java.lang.String
c:com.intellij.xdebugger.impl.evaluate.quick.XQuickEvaluateHandler
- com.intellij.xdebugger.impl.evaluate.quick.common.QuickEvaluateHandler
- <init>():V
- canShowHint(com.intellij.openapi.project.Project):Z
- createValueHint(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType):com.intellij.xdebugger.impl.evaluate.quick.common.AbstractValueHint
- createValueHintAsync(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType):com.intellij.xdebugger.impl.evaluate.quick.common.QuickEvaluateHandler$CancellableHint
- getValueLookupDelay(com.intellij.openapi.project.Project):I
- isEnabled(com.intellij.openapi.project.Project):Z
c:com.intellij.xdebugger.impl.evaluate.quick.XValueHint
- com.intellij.xdebugger.impl.evaluate.quick.common.AbstractValueHint
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType,com.intellij.xdebugger.evaluation.ExpressionInfo,com.intellij.xdebugger.evaluation.XDebuggerEvaluator,com.intellij.xdebugger.XDebugSession,Z):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType,com.intellij.xdebugger.evaluation.ExpressionInfo,com.intellij.xdebugger.evaluation.XDebuggerEvaluator,Z):V
- p:createHintComponent(javax.swing.Icon,com.intellij.ui.SimpleColoredText,com.intellij.xdebugger.frame.presentation.XValuePresentation,com.intellij.xdebugger.frame.XFullValueEvaluator):javax.swing.JComponent
- p:evaluateAndShowHint():V
- hideHint():V
- p:onHintHidden():V
- toString():java.lang.String
a:com.intellij.xdebugger.impl.evaluate.quick.common.AbstractValueHint
- pf:myPoint:java.awt.Point
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType,com.intellij.openapi.util.TextRange):V
- pf:appendEvaluatorLink(com.intellij.xdebugger.frame.XFullValueEvaluator,com.intellij.ui.SimpleColoredComponent):V
- s:calculateOffset(com.intellij.openapi.editor.Editor,java.awt.Point):I
- p:canShowHint():Z
- p:createExpandableHintComponent(javax.swing.Icon,com.intellij.ui.SimpleColoredText,java.lang.Runnable,com.intellij.xdebugger.frame.XFullValueEvaluator):javax.swing.JComponent
- equals(java.lang.Object):Z
- pa:evaluateAndShowHint():V
- p:getCurrentRange():com.intellij.openapi.util.TextRange
- pf:getEditor():com.intellij.openapi.editor.Editor
- s:getHintType(com.intellij.openapi.editor.event.EditorMouseEvent):com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType
- f:getProject():com.intellij.openapi.project.Project
- p:getType():com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType
- hashCode():I
- pf:hideCurrentHint():V
- hideHint():V
- invokeHint():V
- invokeHint(java.lang.Runnable):V
- p:isHintHidden():Z
- isInsideHint(com.intellij.openapi.editor.Editor,java.awt.Point):Z
- p:isShowing():Z
- p:onHintHidden():V
- p:showHint(javax.swing.JComponent):Z
- *p:showTextPopup(com.intellij.xdebugger.impl.evaluate.quick.XDebuggerTreeCreator,com.intellij.openapi.util.Pair,java.lang.String,com.intellij.xdebugger.frame.XFullValueEvaluator):V
- p:showTooltipPopup(javax.swing.JComponent):V
- p:showTreePopup(com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator,java.lang.Object):V
com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator
- a:createDescriptorByNode(java.lang.Object,com.intellij.concurrency.ResultConsumer):V
- a:createTree(java.lang.Object):com.intellij.ui.treeStructure.Tree
- a:getTitle(java.lang.Object):java.lang.String
c:com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeWithHistoryPanel
- pf:myProject:com.intellij.openapi.project.Project
- pf:myTreeCreator:com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator
- <init>(java.lang.Object,com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator,com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- p:addToHistory(java.lang.Object):V
- p:createMainPanel(com.intellij.ui.treeStructure.Tree):com.intellij.util.ui.components.BorderLayoutPanel
- p:createToolbar(javax.swing.JPanel,com.intellij.ui.treeStructure.Tree):javax.swing.JComponent
- p:fillMainPanel(com.intellij.util.ui.components.BorderLayoutPanel,com.intellij.ui.treeStructure.Tree):com.intellij.util.ui.components.BorderLayoutPanel
- getMainPanel():javax.swing.JPanel
- getTree():com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- rebuild():V
- ps:registerTreeDisposable(com.intellij.openapi.Disposable,com.intellij.ui.treeStructure.Tree):V
- p:updateContainer(com.intellij.ui.treeStructure.Tree,java.lang.String):V
- p:updateTree(java.lang.Object):V
a:com.intellij.xdebugger.impl.evaluate.quick.common.QuickEvaluateHandler
- <init>():V
- a:canShowHint(com.intellij.openapi.project.Project):Z
- a:createValueHint(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType):com.intellij.xdebugger.impl.evaluate.quick.common.AbstractValueHint
- createValueHintAsync(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType):com.intellij.xdebugger.impl.evaluate.quick.common.QuickEvaluateHandler$CancellableHint
- a:getValueLookupDelay(com.intellij.openapi.project.Project):I
- a:isEnabled(com.intellij.openapi.project.Project):Z
- isEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):Z
f:com.intellij.xdebugger.impl.evaluate.quick.common.QuickEvaluateHandler$CancellableHint
- java.lang.Record
- <init>(org.jetbrains.concurrency.Promise,org.jetbrains.concurrency.Promise):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- hintPromise():org.jetbrains.concurrency.Promise
- infoPromise():org.jetbrains.concurrency.Promise
- s:resolved(com.intellij.xdebugger.impl.evaluate.quick.common.AbstractValueHint):com.intellij.xdebugger.impl.evaluate.quick.common.QuickEvaluateHandler$CancellableHint
- f:toString():java.lang.String
- tryCancel():V
e:com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType
- java.lang.Enum
- sf:MOUSE_ALT_OVER_HINT:com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType
- sf:MOUSE_CLICK_HINT:com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType
- sf:MOUSE_OVER_HINT:com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType
- s:valueOf(java.lang.String):com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType
- s:values():com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType[]
c:com.intellij.xdebugger.impl.evaluate.quick.common.ValueLookupManager
- com.intellij.openapi.editor.event.EditorMouseListener
- com.intellij.openapi.editor.event.EditorMouseMotionListener
- sf:DISABLE_VALUE_LOOKUP:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.xdebugger.impl.evaluate.quick.common.ValueLookupManager
- hideHint():V
- mouseExited(com.intellij.openapi.editor.event.EditorMouseEvent):V
- mouseMoved(com.intellij.openapi.editor.event.EditorMouseEvent):V
- showHint(com.intellij.xdebugger.impl.evaluate.quick.common.QuickEvaluateHandler,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.openapi.editor.event.EditorMouseEvent,com.intellij.xdebugger.impl.evaluate.quick.common.ValueHintType):V
- startListening():V
*a:com.intellij.xdebugger.impl.evaluate.quick.common.XDebuggerPopupPanel
- pf:myContent:com.intellij.util.ui.components.BorderLayoutPanel
- pf:myMainPanel:com.intellij.util.ui.components.BorderLayoutPanel
- p:myToolbar:com.intellij.openapi.actionSystem.impl.ActionToolbarImpl
- <init>():V
- pf:setAutoResizeUntilToolbarNotFull(java.lang.Runnable,com.intellij.openapi.Disposable):V
- pf:setContent(javax.swing.JComponent,com.intellij.openapi.actionSystem.DefaultActionGroup,java.lang.String,java.awt.Component):V
- p:shouldBeVisible(com.intellij.openapi.actionSystem.AnAction):Z
- ps:updatePopupBounds(java.awt.Window,I,I):V
*c:com.intellij.xdebugger.impl.evaluate.quick.common.XDebuggerTextPopup
- com.intellij.xdebugger.impl.evaluate.quick.common.XDebuggerPopupPanel
- sf:ACTION_PLACE:java.lang.String
- pf:myEditor:com.intellij.openapi.editor.Editor
- pf:myEvaluator:com.intellij.xdebugger.frame.XFullValueEvaluator
- pf:myHideRunnable:java.lang.Runnable
- pf:myInitialItem:java.lang.Object
- pf:myPoint:java.awt.Point
- pf:myProject:com.intellij.openapi.project.Project
- pf:myTextViewer:com.intellij.xdebugger.impl.ui.TextViewer
- p:myTree:com.intellij.ui.treeStructure.Tree
- pf:myTreeCreator:com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator
- p:myTreePopupIsShown:Z
- *:<init>(com.intellij.xdebugger.frame.XFullValueEvaluator,com.intellij.xdebugger.frame.XValue,com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator,java.lang.Object,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.openapi.project.Project,java.lang.Runnable):V
- p:getToolbarActions():com.intellij.openapi.actionSystem.DefaultActionGroup
- p:hideTextPopup():V
- ps:registerTreeDisposable(com.intellij.openapi.Disposable,com.intellij.ui.treeStructure.Tree):V
- p:shouldBeVisible(com.intellij.openapi.actionSystem.AnAction):Z
- show(java.lang.String):com.intellij.openapi.ui.popup.JBPopup
- p:showTreePopup(java.lang.Runnable):V
*c:com.intellij.xdebugger.impl.evaluate.quick.common.XDebuggerTreePopup
- com.intellij.xdebugger.impl.evaluate.quick.common.XDebuggerPopupPanel
- sf:ACTION_PLACE:java.lang.String
- pf:myEditor:com.intellij.openapi.editor.Editor
- pf:myHideRunnable:java.lang.Runnable
- pf:myPoint:java.awt.Point
- p:myPopup:com.intellij.openapi.ui.popup.JBPopup
- pf:myProject:com.intellij.openapi.project.Project
- pf:myTreeCreator:com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator
- *:<init>(com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.openapi.project.Project,java.lang.Runnable):V
- p:createPopupContent(com.intellij.ui.treeStructure.Tree):javax.swing.JComponent
- p:getToolbarActions():com.intellij.openapi.actionSystem.DefaultActionGroup
- ps:registerTreeDisposable(com.intellij.openapi.Disposable,com.intellij.ui.treeStructure.Tree):V
- s:setAutoResize(com.intellij.ui.treeStructure.Tree,javax.swing.JComponent,com.intellij.openapi.ui.popup.JBPopup):V
- p:shouldBeVisible(com.intellij.openapi.actionSystem.AnAction):Z
- show(java.lang.Object):com.intellij.openapi.ui.popup.JBPopup
- p:showTreePopup(com.intellij.ui.treeStructure.Tree):com.intellij.openapi.ui.popup.JBPopup
- s:updateDebugPopupBounds(com.intellij.ui.treeStructure.Tree,javax.swing.JComponent,com.intellij.openapi.ui.popup.JBPopup,Z):V
a:com.intellij.xdebugger.impl.frame.DebuggerFramesList
- com.intellij.ui.components.JBList
- com.intellij.ide.OccurenceNavigator
- <init>():V
- clear():V
- pa:createListRenderer():javax.swing.ListCellRenderer
- p:doInit():V
- getElementCount():I
- getModel():com.intellij.ui.CollectionListModel
- getNextMatch(java.lang.String,I,javax.swing.text.Position$Bias):I
- getNextOccurenceActionName():java.lang.String
- getPreviousOccurenceActionName():java.lang.String
- p:getSelectedFrameNavigatable():com.intellij.pom.Navigatable
- goNextOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- p:goOccurrence(I):com.intellij.ide.OccurenceNavigator$OccurenceInfo
- goPreviousOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- hasNextOccurence():Z
- hasPreviousOccurence():Z
- locationToIndex(java.awt.Point):I
- setModel(javax.swing.ListModel):V
f:com.intellij.xdebugger.impl.frame.StackInfo
- sf:Companion:com.intellij.xdebugger.impl.frame.StackInfo$Companion
- f:component1():com.intellij.xdebugger.impl.frame.StackInfo$StackKind
- f:component2():com.intellij.xdebugger.frame.XExecutionStack
- f:component3():java.lang.String
- f:copy(com.intellij.xdebugger.impl.frame.StackInfo$StackKind,com.intellij.xdebugger.frame.XExecutionStack,java.lang.String):com.intellij.xdebugger.impl.frame.StackInfo
- bs:copy$default(com.intellij.xdebugger.impl.frame.StackInfo,com.intellij.xdebugger.impl.frame.StackInfo$StackKind,com.intellij.xdebugger.frame.XExecutionStack,java.lang.String,I,java.lang.Object):com.intellij.xdebugger.impl.frame.StackInfo
- equals(java.lang.Object):Z
- f:getError():java.lang.String
- f:getKind():com.intellij.xdebugger.impl.frame.StackInfo$StackKind
- f:getStack():com.intellij.xdebugger.frame.XExecutionStack
- f:getText():java.lang.String
- hashCode():I
- toString():java.lang.String
f:com.intellij.xdebugger.impl.frame.StackInfo$Companion
- f:error(java.lang.String):com.intellij.xdebugger.impl.frame.StackInfo
- f:from(com.intellij.xdebugger.frame.XExecutionStack):com.intellij.xdebugger.impl.frame.StackInfo
- f:getLoading():com.intellij.xdebugger.impl.frame.StackInfo
e:com.intellij.xdebugger.impl.frame.StackInfo$StackKind
- java.lang.Enum
- sf:Error:com.intellij.xdebugger.impl.frame.StackInfo$StackKind
- sf:ExecutionStack:com.intellij.xdebugger.impl.frame.StackInfo$StackKind
- sf:Loading:com.intellij.xdebugger.impl.frame.StackInfo$StackKind
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.xdebugger.impl.frame.StackInfo$StackKind
- s:values():com.intellij.xdebugger.impl.frame.StackInfo$StackKind[]
c:com.intellij.xdebugger.impl.frame.WatchInplaceEditor
- com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeInplaceEditor
- <init>(com.intellij.xdebugger.impl.ui.tree.nodes.WatchesRootNode,com.intellij.xdebugger.impl.frame.XWatchesView,com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode,com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode):V
- cancelEditing():V
- doOKAction():V
- p:getEditorBounds():java.awt.Rectangle
a:com.intellij.xdebugger.impl.frame.XDebugView
- com.intellij.openapi.Disposable
- <init>():V
- pf:cancelClear():V
- pa:clear():V
- s:getData(com.intellij.openapi.actionSystem.DataKey,java.awt.Component):java.lang.Object
- getMainComponent():javax.swing.JComponent
- s:getSession(java.awt.Component):com.intellij.xdebugger.XDebugSession
- ps:getSession(java.util.EventObject):com.intellij.xdebugger.XDebugSession
- a:processSessionEvent(com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent,com.intellij.xdebugger.XDebugSession):V
- pf:requestClear():V
e:com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent
- java.lang.Enum
- sf:BEFORE_RESUME:com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent
- sf:FRAME_CHANGED:com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent
- sf:PAUSED:com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent
- sf:RESUMED:com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent
- sf:SETTINGS_CHANGED:com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent
- sf:STOPPED:com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent
- s:valueOf(java.lang.String):com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent
- s:values():com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent[]
f:com.intellij.xdebugger.impl.frame.XDebugViewSessionListener
- com.intellij.xdebugger.XDebugSessionListener
- s:attach(com.intellij.xdebugger.impl.frame.XDebugView,com.intellij.xdebugger.XDebugSession):V
- beforeSessionResume():V
- sessionPaused():V
- sessionResumed():V
- sessionStopped():V
- settingsChanged():V
- stackFrameChanged():V
c:com.intellij.xdebugger.impl.frame.XDebuggerFramesList
- com.intellij.xdebugger.impl.frame.DebuggerFramesList
- com.intellij.openapi.actionSystem.DataProvider
- <init>(com.intellij.openapi.project.Project):V
- p:createListRenderer():javax.swing.ListCellRenderer
- getData(java.lang.String):java.lang.Object
- p:getFrameNavigatable(com.intellij.xdebugger.frame.XStackFrame,Z):com.intellij.pom.Navigatable
- getSelectedFrame():com.intellij.xdebugger.frame.XStackFrame
- p:getSelectedFrameNavigatable():com.intellij.pom.Navigatable
- selectFrame(I):Z
- selectFrame(com.intellij.xdebugger.frame.XStackFrame):Z
- updateUI():V
c:com.intellij.xdebugger.impl.frame.XDebuggerFramesList$CopyStackAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.xdebugger.impl.frame.XDebuggerFramesList$ItemWithCustomBackgroundColor
- a:getBackgroundColor():java.awt.Color
com.intellij.xdebugger.impl.frame.XDebuggerFramesList$ItemWithSeparatorAbove
- a:getCaptionAboveOf():java.lang.String
- a:hasSeparatorAbove():Z
- setWithSeparator(Z):V
f:com.intellij.xdebugger.impl.frame.XDebuggerThreadsList
- com.intellij.ui.components.JBList
- sf:Companion:com.intellij.xdebugger.impl.frame.XDebuggerThreadsList$Companion
- <init>(javax.swing.ListCellRenderer):V
- f:clear():V
- f:getElementCount():I
- getModel():com.intellij.ui.CollectionListModel
- locationToIndex(java.awt.Point):I
- setModel(javax.swing.ListModel):V
f:com.intellij.xdebugger.impl.frame.XDebuggerThreadsList$Companion
- f:create(javax.swing.ListCellRenderer):com.intellij.xdebugger.impl.frame.XDebuggerThreadsList
- f:createDefault():com.intellij.xdebugger.impl.frame.XDebuggerThreadsList
- f:getTHREADS_LIST():com.intellij.openapi.actionSystem.DataKey
f:com.intellij.xdebugger.impl.frame.XFramesView
- com.intellij.xdebugger.impl.frame.XDebugView
- <init>(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- dispose():V
- getDefaultFocusedComponent():javax.swing.JComponent
- getMainComponent():javax.swing.JComponent
- getMainPanel():javax.swing.JPanel
- onFrameSelectionKeyPressed(java.util.function.Consumer):V
- processSessionEvent(com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent,com.intellij.xdebugger.XDebugSession):V
- s:shouldFoldHiddenFrames():Z
c:com.intellij.xdebugger.impl.frame.XFramesView$HiddenStackFramesItem
- com.intellij.xdebugger.frame.XStackFrame
- com.intellij.xdebugger.impl.frame.XDebuggerFramesList$ItemWithCustomBackgroundColor
- com.intellij.xdebugger.impl.frame.XDebuggerFramesList$ItemWithSeparatorAbove
- <init>(java.util.List):V
- customizePresentation(com.intellij.ui.ColoredTextContainer):V
- getBackgroundColor():java.awt.Color
- getCaptionAboveOf():java.lang.String
- hasSeparatorAbove():Z
f:com.intellij.xdebugger.impl.frame.XSplitterWatchesViewImpl
- com.intellij.xdebugger.impl.frame.XWatchesViewImpl
- com.intellij.ide.dnd.DnDNativeTarget
- com.intellij.xdebugger.impl.frame.XWatchesView
- sf:Companion:com.intellij.xdebugger.impl.frame.XSplitterWatchesViewImpl$Companion
- sf:proportionKey:java.lang.String
- <init>(com.intellij.xdebugger.impl.XDebugSessionImpl,Z,Z,Z):V
f:com.intellij.xdebugger.impl.frame.XSplitterWatchesViewImpl$Companion
com.intellij.xdebugger.impl.frame.XStackFrameContainerEx
- com.intellij.xdebugger.frame.XExecutionStack$XStackFrameContainer
- a:addStackFrames(java.util.List,com.intellij.xdebugger.frame.XStackFrame,Z):V
c:com.intellij.xdebugger.impl.frame.XStandaloneVariablesView
- com.intellij.xdebugger.impl.frame.XVariablesViewBase
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.frame.XStackFrame):V
- processSessionEvent(com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent,com.intellij.xdebugger.XDebugSession):V
- rebuildView():V
f:com.intellij.xdebugger.impl.frame.XThreadsFramesView
- com.intellij.xdebugger.impl.frame.XDebugView
- sf:Companion:com.intellij.xdebugger.impl.frame.XThreadsFramesView$Companion
- <init>(com.intellij.openapi.project.Project):V
- dispose():V
- f:getDefaultFocusedComponent():javax.swing.JComponent
- f:getFrames():com.intellij.xdebugger.impl.frame.XDebuggerFramesList
- getMainComponent():javax.swing.JComponent
- f:getProject():com.intellij.openapi.project.Project
- f:getThreads():com.intellij.xdebugger.impl.frame.XDebuggerThreadsList
- f:isThreadsViewVisible():Z
- processSessionEvent(com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent,com.intellij.xdebugger.XDebugSession):V
- f:saveUiState():V
- f:setThreadsVisible(Z):V
- f:start(com.intellij.xdebugger.XDebugSession):V
f:com.intellij.xdebugger.impl.frame.XThreadsFramesView$Companion
f:com.intellij.xdebugger.impl.frame.XThreadsView
- com.intellij.xdebugger.impl.frame.XDebugView
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.XDebugSessionImpl):V
- dispose():V
- f:getDefaultFocusedComponent():com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- getMainComponent():javax.swing.JPanel
- f:getPanel():javax.swing.JPanel
- f:getProject():com.intellij.openapi.project.Project
- processSessionEvent(com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent,com.intellij.xdebugger.XDebugSession):V
f:com.intellij.xdebugger.impl.frame.XThreadsView$FrameValue
- com.intellij.xdebugger.frame.XValue
- <init>(com.intellij.xdebugger.frame.XStackFrame):V
- computePresentation(com.intellij.xdebugger.frame.XValueNode,com.intellij.xdebugger.frame.XValuePlace):V
- f:getFrame():com.intellij.xdebugger.frame.XStackFrame
f:com.intellij.xdebugger.impl.frame.XThreadsView$FramesContainer
- com.intellij.xdebugger.frame.XValue
- <init>(com.intellij.xdebugger.frame.XExecutionStack):V
- computeChildren(com.intellij.xdebugger.frame.XCompositeNode):V
- computePresentation(com.intellij.xdebugger.frame.XValueNode,com.intellij.xdebugger.frame.XValuePlace):V
f:com.intellij.xdebugger.impl.frame.XThreadsView$ThreadsContainer
- com.intellij.xdebugger.frame.XValueContainer
- <init>(com.intellij.xdebugger.frame.XSuspendContext):V
- computeChildren(com.intellij.xdebugger.frame.XCompositeNode):V
- f:getSuspendContext():com.intellij.xdebugger.frame.XSuspendContext
f:com.intellij.xdebugger.impl.frame.XThreadsView$XThreadsRootNode
- com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode
- <init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.frame.XSuspendContext):V
f:com.intellij.xdebugger.impl.frame.XValueMarkers
- canMarkValue(com.intellij.xdebugger.frame.XValue):Z
- clear():V
- s:createValueMarkers(com.intellij.xdebugger.frame.XValueMarkerProvider):com.intellij.xdebugger.impl.frame.XValueMarkers
- getAllMarkers():java.util.Map
- getMarkup(com.intellij.xdebugger.frame.XValue):com.intellij.xdebugger.impl.ui.tree.ValueMarkup
- markValue(com.intellij.xdebugger.frame.XValue,com.intellij.xdebugger.impl.ui.tree.ValueMarkup):org.jetbrains.concurrency.Promise
- unmarkValue(com.intellij.xdebugger.frame.XValue):org.jetbrains.concurrency.Promise
c:com.intellij.xdebugger.impl.frame.XVariablesView
- com.intellij.xdebugger.impl.frame.XVariablesViewBase
- com.intellij.openapi.actionSystem.DataProvider
- pf:myComponent:javax.swing.JPanel
- pf:mySession:java.lang.ref.WeakReference
- <init>(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- p:addEmptyMessage(com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode):V
- p:beforeTreeBuild(com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent):V
- p:clear():V
- p:createMainPanel(javax.swing.JComponent):javax.swing.JPanel
- dispose():V
- getData(java.lang.String):java.lang.Object
- getMainComponent():javax.swing.JComponent
- getPanel():javax.swing.JPanel
- processSessionEvent(com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent,com.intellij.xdebugger.XDebugSession):V
f:com.intellij.xdebugger.impl.frame.XVariablesView$InlineVariablesInfo
- <init>():V
- s:get(com.intellij.xdebugger.XDebugSession):com.intellij.xdebugger.impl.frame.XVariablesView$InlineVariablesInfo
- getInlays():java.util.List
- s:set(com.intellij.xdebugger.XDebugSession,com.intellij.xdebugger.impl.frame.XVariablesView$InlineVariablesInfo):V
- setInlays(java.util.List):V
a:com.intellij.xdebugger.impl.frame.XVariablesViewBase
- com.intellij.xdebugger.impl.frame.XDebugView
- p:<init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.impl.frame.XValueMarkers):V
- p:buildTreeAndRestoreState(com.intellij.xdebugger.frame.XStackFrame):V
- p:clear():V
- ps:clearInlays(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):V
- pf:createNewRootNode(com.intellij.xdebugger.frame.XStackFrame):com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode
- dispose():V
- p:doCreateNewRootNode(com.intellij.xdebugger.frame.XStackFrame):com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode
- getDefaultFocusedComponent():javax.swing.JComponent
- getMainComponent():javax.swing.JComponent
- getPanel():javax.swing.JComponent
- f:getTree():com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- onReady():java.util.concurrent.CompletableFuture
com.intellij.xdebugger.impl.frame.XWatchesView
- sf:DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- a:addWatchExpression(com.intellij.xdebugger.XExpression,I,Z):V
- a:removeAllWatches():V
- a:removeWatches(java.util.List):V
c:com.intellij.xdebugger.impl.frame.XWatchesViewImpl
- com.intellij.xdebugger.impl.frame.XVariablesView
- com.intellij.ide.dnd.DnDNativeTarget
- com.intellij.xdebugger.impl.frame.XWatchesView
- com.intellij.xdebugger.impl.inline.XInlineWatchesView
- p:myRootNode:com.intellij.xdebugger.impl.ui.tree.nodes.WatchesRootNode
- <init>(com.intellij.xdebugger.impl.XDebugSessionImpl,Z):V
- p:<init>(com.intellij.xdebugger.impl.XDebugSessionImpl,Z,Z):V
- <init>(com.intellij.xdebugger.impl.XDebugSessionImpl,Z,Z,Z):V
- p:addEmptyMessage(com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode):V
- addInlineWatchExpression(com.intellij.xdebugger.impl.inline.InlineWatch,I,Z):V
- addWatchExpression(com.intellij.xdebugger.XExpression,I,Z):V
- addWatchExpression(com.intellij.xdebugger.XExpression,I,Z,Z):V
- p:beforeTreeBuild(com.intellij.xdebugger.impl.frame.XDebugView$SessionEvent):V
- p:buildTreeAndRestoreState(com.intellij.xdebugger.frame.XStackFrame):V
- computeWatches():V
- p:createMainPanel(javax.swing.JComponent):javax.swing.JPanel
- dispose():V
- p:doCreateNewRootNode(com.intellij.xdebugger.frame.XStackFrame):com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode
- drop(com.intellij.ide.dnd.DnDEvent):V
- getData(java.lang.String):java.lang.Object
- p:getExpressions():java.util.List
- moveWatchDown(com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode):V
- moveWatchUp(com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode):V
- removeAllWatches():V
- removeInlineWatches(java.util.Collection):V
- removeWatches(java.util.List):V
- update(com.intellij.ide.dnd.DnDEvent):Z
- updateSessionData():V
c:com.intellij.xdebugger.impl.frame.actions.XCopyWatchAction
- com.intellij.xdebugger.impl.frame.actions.XWatchesTreeActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):Z
- p:perform(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.frame.XWatchesView):V
c:com.intellij.xdebugger.impl.frame.actions.XEditWatchAction
- com.intellij.xdebugger.impl.frame.actions.XWatchesTreeActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:perform(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.frame.XWatchesView):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.frame.actions.XMoveWatchDown
- com.intellij.xdebugger.impl.frame.actions.XWatchesTreeActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):Z
- p:perform(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.frame.XWatchesView):V
c:com.intellij.xdebugger.impl.frame.actions.XMoveWatchUp
- com.intellij.xdebugger.impl.frame.actions.XWatchesTreeActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):Z
- p:perform(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.frame.XWatchesView):V
c:com.intellij.xdebugger.impl.frame.actions.XNewWatchAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.frame.actions.XRemoveAllWatchesAction
- com.intellij.xdebugger.impl.frame.actions.XWatchesTreeActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):Z
- p:perform(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.frame.XWatchesView):V
c:com.intellij.xdebugger.impl.frame.actions.XRemoveWatchAction
- com.intellij.xdebugger.impl.frame.actions.XWatchesTreeActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:perform(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.frame.XWatchesView):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.frame.actions.XSwitchWatchesInVariables
- com.intellij.openapi.actionSystem.ToggleAction
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.xdebugger.impl.frame.actions.XToggleEvaluateExpressionFieldAction
- com.intellij.openapi.project.DumbAwareToggleAction
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:isEvaluateExpressionFieldEnabled():Z
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- s:markAsEvaluateExpressionField(javax.swing.JComponent):V
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
a:com.intellij.xdebugger.impl.frame.actions.XWatchesTreeActionBase
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:getSelectedNodes(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,java.lang.Class):java.util.List
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):Z
- pa:perform(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.frame.XWatchesView):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.inline.DebuggerInlayListener
- com.intellij.openapi.editor.event.EditorMouseListener
- com.intellij.openapi.editor.event.EditorMouseMotionListener
- <init>(com.intellij.openapi.project.Project):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.xdebugger.impl.inline.DebuggerInlayListener
- mouseClicked(com.intellij.openapi.editor.event.EditorMouseEvent):V
- mouseMoved(com.intellij.openapi.editor.event.EditorMouseEvent):V
- startListening():V
f:com.intellij.xdebugger.impl.inline.InlineDebugRenderer
- com.intellij.openapi.editor.EditorCustomElementRenderer
- sf:INDENT:java.lang.String
- sf:NAME_VALUE_SEPARATION:java.lang.String
- <init>(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.XDebugSession):V
- getPresentation():com.intellij.ui.SimpleColoredText
- s:getXValueDescriptor(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):com.intellij.openapi.util.Pair
- isCustomNode():Z
- isErrorMessage():Z
- onClick(com.intellij.openapi.editor.Inlay,com.intellij.openapi.editor.event.EditorMouseEvent):V
- updatePresentation():V
f:com.intellij.xdebugger.impl.inline.InlineDebugRenderer$LinePainter
- sf:CACHE:com.intellij.openapi.util.Key
- <init>():V
- s:computeVariablePresentationWithChanges(java.lang.String,com.intellij.ui.SimpleColoredText,com.intellij.openapi.editor.markup.TextAttributes,I,com.intellij.openapi.project.Project):com.intellij.ui.SimpleColoredText
- s:createPresentation(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):com.intellij.ui.SimpleColoredText
- s:getOldValues(com.intellij.openapi.project.Project):java.util.Map
com.intellij.xdebugger.impl.inline.InlineValuePopupProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:accepts(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):Z
- a:showPopup(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.xdebugger.XDebugSession,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.impl.evaluate.quick.XDebuggerTreeCreator,com.intellij.openapi.editor.Editor,java.awt.Point,java.lang.Runnable):V
f:com.intellij.xdebugger.impl.inline.InlineWatch
- <init>(com.intellij.xdebugger.XExpression,com.intellij.xdebugger.XSourcePosition):V
- f:getExpression():com.intellij.xdebugger.XExpression
- f:getLine():I
- f:getPosition():com.intellij.xdebugger.XSourcePosition
- f:setMarker():Z
- f:setPosition(com.intellij.xdebugger.XSourcePosition):V
- f:updatePosition():Z
c:com.intellij.xdebugger.impl.inline.InlineWatchInplaceEditor
- com.intellij.xdebugger.impl.ui.InplaceEditor
- <init>(com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.XDebugSession,com.intellij.openapi.editor.Editor):V
- <init>(com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.XDebugSession,com.intellij.openapi.editor.Editor,com.intellij.xdebugger.XExpression):V
- p:beforeShow():V
- cancelEditing():V
- p:createInplaceEditorComponent():javax.swing.JComponent
- doOKAction():V
- getEditor():com.intellij.openapi.editor.Editor
- p:getEditorBounds():java.awt.Rectangle
- getEditorComponent():javax.swing.JComponent
- p:getExpression():com.intellij.xdebugger.XExpression
- p:getHostComponent():javax.swing.JComponent
- p:getPreferredFocusedComponent():javax.swing.JComponent
- p:getProject():com.intellij.openapi.project.Project
com.intellij.xdebugger.impl.inline.InlineWatchNode
- com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode
- a:getPosition():com.intellij.xdebugger.XSourcePosition
- a:getWatch():com.intellij.xdebugger.impl.inline.InlineWatch
c:com.intellij.xdebugger.impl.inline.InlineWatchNodeImpl
- com.intellij.xdebugger.impl.ui.tree.nodes.WatchNodeImpl
- com.intellij.xdebugger.impl.inline.InlineWatchNode
- <init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,com.intellij.xdebugger.impl.inline.InlineWatch,com.intellij.xdebugger.frame.XStackFrame):V
- getLink():com.intellij.xdebugger.frame.XDebuggerTreeNodeHyperlink
- getPosition():com.intellij.xdebugger.XSourcePosition
- getValueContainer():com.intellij.xdebugger.frame.XValue
- getWatch():com.intellij.xdebugger.impl.inline.InlineWatch
- nodeRemoved():V
c:com.intellij.xdebugger.impl.inline.InlineWatchesRootNode
- com.intellij.xdebugger.impl.ui.tree.nodes.WatchesRootNode
- <init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.frame.XWatchesView,java.util.List,java.util.List,com.intellij.xdebugger.frame.XStackFrame,Z):V
- addInlineWatchExpression(com.intellij.xdebugger.frame.XStackFrame,com.intellij.xdebugger.impl.inline.InlineWatch,I,Z):V
- clearChildren():V
- computeWatches():V
- editWatch(com.intellij.xdebugger.impl.ui.tree.nodes.WatchNodeImpl):V
- fireInlineNodeInserted(I):V
- getChildren():java.util.List
- getInlineWatchChildren():java.util.List
- getLoadedChildren():java.util.List
- headerNodesCount():I
- inlinesRootNodeIsShown():Z
- moveDown(com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode):V
- moveUp(com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode):V
- removeAllChildren():V
- removeChildNode(com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode):I
- removeInlineChildren(java.util.List):V
f:com.intellij.xdebugger.impl.inline.XDebuggerInlayUtil
- sf:INLINE_HINTS_DELIMETER:java.lang.String
- clearInlays():V
- createLineEndInlay(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.xdebugger.XDebugSession,com.intellij.xdebugger.XSourcePosition):Z
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.xdebugger.impl.inline.XDebuggerInlayUtil
*c:com.intellij.xdebugger.impl.inline.XDebuggerTextInlayPopup
- com.intellij.xdebugger.impl.evaluate.quick.common.XDebuggerTextPopup
- p:getToolbarActions():com.intellij.openapi.actionSystem.DefaultActionGroup
- s:showTextPopup(java.lang.String,com.intellij.xdebugger.impl.evaluate.quick.XDebuggerTreeCreator,com.intellij.openapi.util.Pair,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.XDebugSession,java.lang.Runnable):V
- p:showTreePopup(java.lang.Runnable):V
c:com.intellij.xdebugger.impl.inline.XDebuggerTreeInlayPopup
- com.intellij.xdebugger.impl.evaluate.quick.common.XDebuggerTreePopup
- p:getToolbarActions():com.intellij.openapi.actionSystem.DefaultActionGroup
- s:showTreePopup(com.intellij.xdebugger.impl.evaluate.quick.common.DebuggerTreeCreator,java.lang.Object,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.openapi.editor.Editor,java.awt.Point,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.XDebugSession,java.lang.Runnable):V
com.intellij.xdebugger.impl.inline.XInlineWatchesView
- sf:DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- a:addInlineWatchExpression(com.intellij.xdebugger.impl.inline.InlineWatch,I,Z):V
- a:removeInlineWatches(java.util.Collection):V
*:com.intellij.xdebugger.impl.pinned.items.PinToTopMemberValue
- com.intellij.xdebugger.impl.pinned.items.PinToTopValue
- a:canBePinned():Z
- getCustomMemberName():java.lang.String
- getCustomParentTag():java.lang.String
- isPinned():java.lang.Boolean
*:com.intellij.xdebugger.impl.pinned.items.PinToTopParentValue
- com.intellij.xdebugger.impl.pinned.items.PinToTopValue
- a:getTag():java.lang.String
f:com.intellij.xdebugger.impl.pinned.items.PinToTopUtilKt
- sf:canBePinned(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):Z
- sf:getParentPinToTopValue(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):com.intellij.xdebugger.impl.pinned.items.PinToTopParentValue
- sf:getPinInfo(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo
- sf:isPinned(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.xdebugger.impl.pinned.items.XDebuggerPinToTopManager):Z
*:com.intellij.xdebugger.impl.pinned.items.PinToTopValue
f:com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo
- sf:Companion:com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo$Companion
- <init>():V
- <init>(java.lang.String,java.lang.String):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:copy(java.lang.String,java.lang.String):com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo
- bs:copy$default(com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo
- equals(java.lang.Object):Z
- f:getKey():java.lang.String
- f:getMemberName():java.lang.String
- f:getParentTag():java.lang.String
- hashCode():I
- f:setMemberName(java.lang.String):V
- f:setParentTag(java.lang.String):V
- toString():java.lang.String
f:com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo$Companion
- f:getKey(java.lang.String,java.lang.String):java.lang.String
*:com.intellij.xdebugger.impl.pinned.items.XDebuggerPinToTopListener
- a:onPinnedItemAdded(com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo):V
- a:onPinnedItemRemoved(com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo):V
c:com.intellij.xdebugger.impl.pinned.items.XDebuggerPinToTopManager
- sf:Companion:com.intellij.xdebugger.impl.pinned.items.XDebuggerPinToTopManager$Companion
- <init>():V
- f:addItemInfo(com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo):V
- f:addListener(com.intellij.xdebugger.impl.pinned.items.XDebuggerPinToTopListener,com.intellij.openapi.Disposable):V
- f:getCompoundComparator():java.util.Comparator
- f:getPinToTopComparator():java.util.Comparator
- f:getPinnedItemInfos():java.util.List
- f:isEnabled():Z
- f:isItemPinned(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):Z
- f:isPinToTopSupported(com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode):Z
- f:isPinned(com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo):Z
- f:loadState(com.intellij.xdebugger.impl.PinToTopManagerState):V
- f:onNodeHovered(com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,com.intellij.openapi.Disposable):V
- f:removeItemInfo(com.intellij.xdebugger.impl.pinned.items.PinnedItemInfo):V
- f:removeListener(com.intellij.xdebugger.impl.pinned.items.XDebuggerPinToTopListener):V
- f:saveState(com.intellij.xdebugger.impl.PinToTopManagerState):V
f:com.intellij.xdebugger.impl.pinned.items.XDebuggerPinToTopManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.xdebugger.impl.pinned.items.XDebuggerPinToTopManager
f:com.intellij.xdebugger.impl.pinned.items.actions.XDebuggerPinToTopAction
- com.intellij.xdebugger.impl.ui.tree.actions.XDebuggerTreeActionBase
- sf:Companion:com.intellij.xdebugger.impl.pinned.items.actions.XDebuggerPinToTopAction$Companion
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.xdebugger.impl.pinned.items.actions.XDebuggerPinToTopAction$Companion
- f:pinToTopField(java.awt.event.MouseEvent,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):V
c:com.intellij.xdebugger.impl.runToolbar.ConfigurationXDebuggerResumeAction
- com.intellij.xdebugger.impl.runToolbar.XDebuggerResumeAction
- <init>():V
- getResumeHandler():com.intellij.xdebugger.impl.actions.handlers.XDebuggerResumeHandler
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.xdebugger.impl.runToolbar.CurrentSessionXDebuggerResumeAction
- com.intellij.xdebugger.impl.runToolbar.XDebuggerResumeAction
- <init>():V
- getResumeHandler():com.intellij.xdebugger.impl.actions.handlers.CurrentSessionXDebuggerResumeHandler
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.xdebugger.impl.runToolbar.InlineXDebuggerResumeAction
- com.intellij.xdebugger.impl.runToolbar.XDebuggerResumeAction
- <init>(com.intellij.execution.RunnerAndConfigurationSettings):V
- getResumeHandler():com.intellij.xdebugger.impl.actions.handlers.InlineXDebuggerResumeHandler
c:com.intellij.xdebugger.impl.runToolbar.RunToolbarPauseAction
- com.intellij.xdebugger.impl.runToolbar.RunToolbarXDebuggerAction
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
c:com.intellij.xdebugger.impl.runToolbar.RunToolbarResumeAction
- com.intellij.xdebugger.impl.runToolbar.RunToolbarXDebuggerAction
- <init>():V
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
a:com.intellij.xdebugger.impl.runToolbar.RunToolbarXDebuggerAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- com.intellij.execution.runToolbar.RTBarAction
- <init>():V
- checkMainSlotVisibility(com.intellij.execution.runToolbar.RunToolbarMainSlotState):Z
- getRightSideType():com.intellij.execution.runToolbar.RTBarAction$Type
- setShortcutSet(com.intellij.openapi.actionSystem.ShortcutSet):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.xdebugger.impl.runToolbar.XDebuggerInlineResumeCreator
- com.intellij.execution.InlineResumeCreator
- <init>():V
- getInlineResumeCreator(com.intellij.execution.RunnerAndConfigurationSettings,Z):com.intellij.openapi.actionSystem.AnAction
a:com.intellij.xdebugger.impl.runToolbar.XDebuggerResumeAction
- com.intellij.xdebugger.impl.actions.XDebuggerActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getHandler(com.intellij.xdebugger.impl.DebuggerSupport):com.intellij.xdebugger.impl.actions.DebuggerActionHandler
- a:getResumeHandler():com.intellij.xdebugger.impl.actions.handlers.CurrentSessionXDebuggerResumeHandler
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.settings.DataViewsConfigurableUi
- sf:DEBUGGER_VALUE_TOOLTIP_AUTO_SHOW_KEY:java.lang.String
- sf:DEBUGGER_VALUE_TOOLTIP_AUTO_SHOW_ON_SELECTION_KEY:java.lang.String
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- apply(com.intellij.xdebugger.impl.settings.XDebuggerDataViewSettings):V
- getComponent():javax.swing.JComponent
- isModified(com.intellij.xdebugger.impl.settings.XDebuggerDataViewSettings):Z
- reset(com.intellij.xdebugger.impl.settings.XDebuggerDataViewSettings):V
c:com.intellij.xdebugger.impl.settings.DebuggerConfigurable
- com.intellij.openapi.options.SearchableConfigurable$Parent
- <init>():V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- getConfigurables():com.intellij.openapi.options.Configurable[]
- getDisplayName():java.lang.String
- s:getDisplayNameText():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- hasOwnContent():Z
- isModified():Z
- reset():V
f:com.intellij.xdebugger.impl.settings.DebuggerConfigurableProvider
- com.intellij.openapi.options.ConfigurableProvider
- com.intellij.openapi.options.Configurable$WithEpDependencies
- <init>():V
- canCreateConfigurable():Z
- createConfigurable():com.intellij.openapi.options.Configurable
- getDependencies():java.util.Collection
c:com.intellij.xdebugger.impl.settings.ShowBreakpointsOverLineNumbersAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:isSelected():Z
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.settings.XDebuggerDataViewSettings
- com.intellij.xdebugger.settings.XDebuggerSettingsManager$DataViewSettings
- <init>():V
- getValueLookupDelay():I
- isAutoExpressions():Z
- isShowLibraryStackFrames():Z
- isShowValuesInline():Z
- isSortValues():Z
- setAutoExpressions(Z):V
- setShowLibraryStackFrames(Z):V
- setShowValuesInline(Z):V
- setSortValues(Z):V
- setValueLookupDelay(I):V
c:com.intellij.xdebugger.impl.settings.XDebuggerGeneralSettings
- <init>():V
- getEvaluationDialogMode():com.intellij.xdebugger.evaluation.EvaluationMode
- isConfirmBreakpointRemoval():Z
- isHideDebuggerOnProcessTermination():Z
- isRunToCursorGestureEnabled():Z
- isScrollToCenter():Z
- isShowDebuggerOnBreakpoint():Z
- isUnmuteOnStop():Z
- setConfirmBreakpointRemoval(Z):V
- setEvaluationDialogMode(com.intellij.xdebugger.evaluation.EvaluationMode):V
- setHideDebuggerOnProcessTermination(Z):V
- setRunToCursorGestureEnabled(Z):V
- setScrollToCenter(Z):V
- setShowDebuggerOnBreakpoint(Z):V
- setUnmuteOnStop(Z):V
f:com.intellij.xdebugger.impl.settings.XDebuggerSettingManagerImpl
- com.intellij.xdebugger.settings.XDebuggerSettingsManager
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- dispose():V
- findFirstSettings(java.util.function.Predicate):com.intellij.xdebugger.settings.XDebuggerSettings
- forEachSettings(java.util.function.Consumer):V
- getDataViewSettings():com.intellij.xdebugger.impl.settings.XDebuggerDataViewSettings
- getGeneralSettings():com.intellij.xdebugger.impl.settings.XDebuggerGeneralSettings
- s:getInstanceImpl():com.intellij.xdebugger.impl.settings.XDebuggerSettingManagerImpl
- getSettings(java.lang.Class):com.intellij.xdebugger.settings.XDebuggerSettings
- s:getSettingsEP():com.intellij.openapi.extensions.ExtensionPointName
- getState():com.intellij.xdebugger.impl.settings.XDebuggerSettingManagerImpl$SettingsState
- loadState(com.intellij.xdebugger.impl.settings.XDebuggerSettingManagerImpl$SettingsState):V
c:com.intellij.xdebugger.impl.settings.XDebuggerSettingManagerImpl$SettingsState
- specificStates:java.util.List
- <init>():V
- getDataViewSettings():com.intellij.xdebugger.impl.settings.XDebuggerDataViewSettings
- getGeneralSettings():com.intellij.xdebugger.impl.settings.XDebuggerGeneralSettings
- setDataViewSettings(com.intellij.xdebugger.impl.settings.XDebuggerDataViewSettings):V
- setGeneralSettings(com.intellij.xdebugger.impl.settings.XDebuggerGeneralSettings):V
f:com.intellij.xdebugger.impl.settings.XDebuggerSettingsStatisticsCollector
- <init>():V
- getGroup():com.intellij.internal.statistic.eventLog.EventLogGroup
- getMetrics():java.util.Set
c:com.intellij.xdebugger.impl.ui.BreakpointEditor
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- getMainPanel():javax.swing.JPanel
- setDelegate(com.intellij.xdebugger.impl.ui.BreakpointEditor$Delegate):V
- setPropertiesPanel(javax.swing.JComponent):V
- setShowMoreOptionsLink(Z):V
com.intellij.xdebugger.impl.ui.BreakpointEditor$Delegate
- a:done():V
- a:more():V
c:com.intellij.xdebugger.impl.ui.DebuggerColorsPage
- com.intellij.openapi.options.colors.ColorSettingsPage
- com.intellij.psi.codeStyle.DisplayPrioritySortable
- <init>():V
- getAdditionalHighlightingTagToDescriptorMap():java.util.Map
- getAttributeDescriptors():com.intellij.openapi.options.colors.AttributesDescriptor[]
- getColorDescriptors():com.intellij.openapi.options.colors.ColorDescriptor[]
- getDemoText():java.lang.String
- getDisplayName():java.lang.String
- getHighlighter():com.intellij.openapi.fileTypes.SyntaxHighlighter
- getIcon():javax.swing.Icon
- getPriority():com.intellij.psi.codeStyle.DisplayPriority
f:com.intellij.xdebugger.impl.ui.DebuggerCopyPastePreprocessor
- com.intellij.codeInsight.editorActions.CopyPastePreProcessor
- sf:REMOVE_NEWLINES_ON_PASTE:com.intellij.openapi.util.Key
- <init>():V
- preprocessOnCopy(com.intellij.psi.PsiFile,I[],I[],java.lang.String):java.lang.String
- preprocessOnPaste(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.String,com.intellij.openapi.editor.RawText):java.lang.String
- requiresAllDocumentsToBeCommitted(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):Z
c:com.intellij.xdebugger.impl.ui.DebuggerFocusManager
- com.intellij.openapi.project.ProjectManagerListener
- com.intellij.openapi.util.registry.RegistryValueListener
- com.intellij.xdebugger.XDebuggerManagerListener
- afterValueChanged(com.intellij.openapi.util.registry.RegistryValue):V
- processStarted(com.intellij.xdebugger.XDebugProcess):V
- processStopped(com.intellij.xdebugger.XDebugProcess):V
- projectClosed(com.intellij.openapi.project.Project):V
- projectOpened(com.intellij.openapi.project.Project):V
a:com.intellij.xdebugger.impl.ui.DebuggerSessionTabBase
- com.intellij.execution.runners.RunTab
- p:myConsole:com.intellij.execution.ui.ExecutionConsole
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.psi.search.GlobalSearchScope,Z):V
- p:attachNotificationTo(com.intellij.ui.content.Content):V
- s:getCustomizedActionGroup(java.lang.String):com.intellij.openapi.actionSystem.ActionGroup
- p:getRunProfile():com.intellij.execution.configurations.RunProfile
- select():V
f:com.intellij.xdebugger.impl.ui.DebuggerUIUtil
- sf:FULL_VALUE_POPUP_DIMENSION_KEY:java.lang.String
- s:addToWatches(com.intellij.xdebugger.impl.frame.XWatchesView,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):V
- *s:createTextViewer(java.lang.String,com.intellij.openapi.project.Project):com.intellij.xdebugger.impl.ui.TextViewer
- *s:createTextViewerPopupBuilder(javax.swing.JComponent,com.intellij.xdebugger.impl.ui.TextViewer,com.intellij.xdebugger.frame.XFullValueEvaluator,com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.Runnable):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- s:createValuePopup(com.intellij.openapi.project.Project,javax.swing.JComponent,java.lang.Runnable):com.intellij.openapi.ui.popup.JBPopup
- s:enableEditorOnCheck(javax.swing.JCheckBox,javax.swing.JComponent):V
- s:focusEditorOnCheck(javax.swing.JCheckBox,javax.swing.JComponent):V
- s:freezePaintingToReduceFlickering(java.awt.Component):Z
- s:getActionShortcutText(java.lang.String):java.lang.String
- s:getColorScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- s:getColorScheme(javax.swing.JComponent):com.intellij.openapi.editor.colors.EditorColorsScheme
- s:getNodeRawValue(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):java.lang.String
- s:getPositionForPopup(com.intellij.openapi.editor.Editor,I):com.intellij.ui.awt.RelativePoint
- s:getSelectionShortcutsAdText(java.lang.String[]):java.lang.String
- s:getSession(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.xdebugger.XDebugSession
- s:getSessionData(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.xdebugger.impl.ui.XDebugSessionData
- s:getWatchesView(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.xdebugger.impl.frame.XWatchesView
- s:invokeLater(java.lang.Runnable):V
- s:isInDetachedTree(com.intellij.openapi.actionSystem.AnActionEvent):Z
- s:isObsolete(java.lang.Object):Z
- s:registerActionOnComponent(java.lang.String,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- s:registerExtraHandleShortcuts(com.intellij.ui.popup.list.ListPopupImpl,com.intellij.openapi.util.Ref,java.lang.String[]):V
- s:repaintCurrentEditor(com.intellij.openapi.project.Project):V
- s:setActionEnabled(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- s:setTreeNodeValue(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.xdebugger.XExpression,com.intellij.util.Consumer):V
- s:shouldUseAntiFlickeringPanel():Z
- s:showBreakpointEditor(com.intellij.openapi.project.Project,javax.swing.JComponent,java.awt.Point,javax.swing.JComponent,java.lang.Runnable,java.lang.Object):com.intellij.openapi.ui.popup.Balloon
- s:showPopupForEditorLine(com.intellij.openapi.ui.popup.JBPopup,com.intellij.openapi.editor.Editor,I):V
- s:showValuePopup(com.intellij.xdebugger.frame.XFullValueEvaluator,java.awt.event.MouseEvent,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- s:showXBreakpointEditorBalloon(com.intellij.openapi.project.Project,java.awt.Point,javax.swing.JComponent,Z,com.intellij.xdebugger.breakpoints.XBreakpoint):V
f:com.intellij.xdebugger.impl.ui.DefaultLayoutOption
- com.intellij.xdebugger.impl.ui.FramesAndThreadsLayoutOptionBase
- <init>(com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$XDebugFramesAndThreadsLayoutOptions):V
- createView():com.intellij.xdebugger.impl.frame.XFramesView
- getDisplayName():java.lang.String
- getOptionKey():java.lang.String
c:com.intellij.xdebugger.impl.ui.ExecutionPointHighlighter
- sf:EXECUTION_POINT_HIGHLIGHTER_TOP_FRAME_KEY:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- <init>(com.intellij.openapi.project.Project,com.intellij.util.messages.MessageBusConnection):V
- getCurrentFile():com.intellij.openapi.vfs.VirtualFile
- hide():V
- isFullLineHighlighter():Z
- navigateTo():V
- show(com.intellij.xdebugger.XSourcePosition,Z,com.intellij.openapi.editor.markup.GutterIconRenderer):V
- show(com.intellij.xdebugger.XSourcePosition,Z,com.intellij.openapi.editor.markup.GutterIconRenderer,Z):V
- update(Z):V
- updateGutterIcon(com.intellij.openapi.editor.markup.GutterIconRenderer):V
com.intellij.xdebugger.impl.ui.ExecutionPointHighlighter$HighlighterProvider
- a:getHighlightRange():com.intellij.openapi.util.TextRange
a:com.intellij.xdebugger.impl.ui.FramesAndThreadsLayoutOptionBase
- com.intellij.ui.content.custom.options.PersistentContentCustomLayoutOption
- <init>(com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$XDebugFramesAndThreadsLayoutOptions):V
- a:createView():com.intellij.xdebugger.impl.frame.XDebugView
f:com.intellij.xdebugger.impl.ui.FramesOnlyLayoutOption
- com.intellij.xdebugger.impl.ui.SideBySideLayoutOptionBase
- <init>(com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$XDebugFramesAndThreadsLayoutOptions):V
- getDisplayName():java.lang.String
- getOptionKey():java.lang.String
a:com.intellij.xdebugger.impl.ui.InplaceEditor
- java.awt.event.AWTEventListener
- sf:IGNORE_MOUSE_EVENT:com.intellij.openapi.util.Key
- pf:myDisposable:com.intellij.openapi.Disposable
- <init>():V
- pa:beforeShow():V
- cancelEditing():V
- pa:createInplaceEditorComponent():javax.swing.JComponent
- doOKAction():V
- p:doPopupOKAction():V
- eventDispatched(java.awt.AWTEvent):V
- a:getEditor():com.intellij.openapi.editor.Editor
- pa:getEditorBounds():java.awt.Rectangle
- a:getEditorComponent():javax.swing.JComponent
- pa:getHostComponent():javax.swing.JComponent
- pa:getPreferredFocusedComponent():javax.swing.JComponent
- pa:getProject():com.intellij.openapi.project.Project
- isShown():Z
- p:onHidden():V
- p:onShown():V
- f:show():V
com.intellij.xdebugger.impl.ui.SessionTabComponentProvider
- a:createBottomLocalsComponent():javax.swing.JComponent
f:com.intellij.xdebugger.impl.ui.SideBySideLayoutOption
- com.intellij.xdebugger.impl.ui.SideBySideLayoutOptionBase
- <init>(com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$XDebugFramesAndThreadsLayoutOptions):V
- getDisplayName():java.lang.String
- getOptionKey():java.lang.String
a:com.intellij.xdebugger.impl.ui.SideBySideLayoutOptionBase
- com.intellij.xdebugger.impl.ui.FramesAndThreadsLayoutOptionBase
- <init>(com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$XDebugFramesAndThreadsLayoutOptions,Z):V
- createView():com.intellij.xdebugger.impl.frame.XThreadsFramesView
f:com.intellij.xdebugger.impl.ui.TextViewer
- com.intellij.ui.EditorTextField
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,Z,Z):V
- <init>(java.lang.String,com.intellij.openapi.project.Project):V
- <init>(java.lang.String,com.intellij.openapi.project.Project,Z):V
- setText(java.lang.String):V
f:com.intellij.xdebugger.impl.ui.ThreadsTreeLayoutOption
- com.intellij.xdebugger.impl.ui.FramesAndThreadsLayoutOptionBase
- <init>(com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$XDebugFramesAndThreadsLayoutOptions):V
- createView():com.intellij.xdebugger.impl.frame.XThreadsView
- getDisplayName():java.lang.String
- getOptionKey():java.lang.String
f:com.intellij.xdebugger.impl.ui.ThreadsViewConstants
- sf:DEFAULT_THREADS_VIEW_KEY:java.lang.String
- sf:FRAMES_ONLY_THREADS_VIEW_KEY:java.lang.String
- sf:INSTANCE:com.intellij.xdebugger.impl.ui.ThreadsViewConstants
- sf:SIDE_BY_SIDE_THREADS_VIEW_KEY:java.lang.String
- sf:THREADS_TREE_VIEW_KEY:java.lang.String
c:com.intellij.xdebugger.impl.ui.XDebugSessionData
- com.intellij.openapi.util.UserDataHolderBase
- sf:DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>(java.util.List,java.lang.String):V
- getConfigurationName():java.lang.String
- getWatchExpressions():java.util.List
- isBreakpointsMuted():Z
- setBreakpointsMuted(Z):V
- setWatchExpressions(java.util.List):V
c:com.intellij.xdebugger.impl.ui.XDebugSessionTab
- com.intellij.xdebugger.impl.ui.DebuggerSessionTabBase
- sf:TAB_KEY:com.intellij.openapi.actionSystem.DataKey
- p:mySession:com.intellij.xdebugger.impl.XDebugSessionImpl
- p:myWatchesView:com.intellij.xdebugger.impl.frame.XWatchesViewImpl
- p:<init>(com.intellij.xdebugger.impl.XDebugSessionImpl,javax.swing.Icon,com.intellij.execution.runners.ExecutionEnvironment,Z):V
- p:addVariablesAndWatches(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- ps:attachViewToSession(com.intellij.xdebugger.impl.XDebugSessionImpl,com.intellij.xdebugger.impl.frame.XDebugView):V
- p:computeWatches():V
- s:create(com.intellij.xdebugger.impl.XDebugSessionImpl,javax.swing.Icon,com.intellij.execution.runners.ExecutionEnvironment,com.intellij.execution.ui.RunContentDescriptor):com.intellij.xdebugger.impl.ui.XDebugSessionTab
- pf:createDefaultTabs(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- p:createWatchesContent(com.intellij.xdebugger.impl.XDebugSessionImpl,com.intellij.xdebugger.impl.frame.XWatchesViewImpl):com.intellij.ui.content.Content
- detachFromSession():V
- findOrRestoreContentIfNeeded(java.lang.String):com.intellij.ui.content.Content
- getData(java.lang.String):java.lang.Object
- p:getFramesContentId():java.lang.String
- getRunContentDescriptor():com.intellij.execution.ui.RunContentDescriptor
- getUi():com.intellij.execution.ui.RunnerLayoutUi
- p:getView(java.lang.String,java.lang.Class):java.lang.Object
- p:getWatchesContentId():java.lang.String
- getWatchesView():com.intellij.xdebugger.impl.frame.XWatchesView
- p:init(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- p:initDebuggerTab(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- p:initFocusingVariablesFromFramesView():V
- p:initListeners(com.intellij.execution.ui.RunnerLayoutUi):V
- p:initToolbars(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- isWatchesInVariables():Z
- rebuildViews():V
- p:registerAdditionalActions(com.intellij.openapi.actionSystem.DefaultActionGroup,com.intellij.openapi.actionSystem.DefaultActionGroup,com.intellij.openapi.actionSystem.DefaultActionGroup):V
- p:registerView(java.lang.String,com.intellij.xdebugger.impl.frame.XDebugView):V
- setWatchesInVariables(Z):V
- p:setWatchesInVariablesImpl():V
- s:showFramesView(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- s:showWatchesView(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- toFront(Z,java.lang.Runnable):V
- p:unregisterView(java.lang.String):V
f:com.intellij.xdebugger.impl.ui.XDebugSessionTab3
- com.intellij.xdebugger.impl.ui.XDebugSessionTabNewUI
- sf:Companion:com.intellij.xdebugger.impl.ui.XDebugSessionTab3$Companion
- sf:debuggerContentId:java.lang.String
- <init>(com.intellij.xdebugger.impl.XDebugSessionImpl,javax.swing.Icon,com.intellij.execution.runners.ExecutionEnvironment):V
- f:getThreadFramesView():com.intellij.xdebugger.impl.frame.XDebugView
- isSingleContent():Z
f:com.intellij.xdebugger.impl.ui.XDebugSessionTab3$Companion
*:com.intellij.xdebugger.impl.ui.XDebugSessionTabCustomizer
- allowFramesViewCustomization():Z
- forceShowNewDebuggerUi():Z
- getBottomLocalsComponentProvider():com.intellij.xdebugger.impl.ui.SessionTabComponentProvider
- getDefaultFramesViewKey():java.lang.String
f:com.intellij.xdebugger.impl.ui.XDebugSessionTabCustomizerKt
- sf:allowFramesViewCustomization(com.intellij.xdebugger.XDebugProcess):Z
- sf:forceShowNewDebuggerUi(com.intellij.xdebugger.XDebugProcess):Z
- sf:getBottomLocalsComponentProvider(com.intellij.xdebugger.XDebugProcess):com.intellij.xdebugger.impl.ui.SessionTabComponentProvider
c:com.intellij.xdebugger.impl.ui.XDebugSessionTabNewUI
- com.intellij.xdebugger.impl.ui.XDebugSessionTab
- <init>(com.intellij.xdebugger.impl.XDebugSessionImpl,javax.swing.Icon,com.intellij.execution.runners.ExecutionEnvironment):V
- p:getSupplier():com.intellij.openapi.wm.impl.content.SingleContentSupplier
- p:initDebuggerTab(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- p:initToolbars(com.intellij.xdebugger.impl.XDebugSessionImpl):V
- isSingleContent():Z
- f:updateToolbars():V
f:com.intellij.xdebugger.impl.ui.XDebugSessionTabNewUIKt
- sf:addDebugToolwindowActions(com.intellij.openapi.project.Project):V
f:com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings
- com.intellij.execution.ui.layout.actions.CustomContentLayoutSettings
- sf:Companion:com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$Companion
- sf:THREADS_VIEW_SETTINGS_KEY:java.lang.String
- <init>(com.intellij.xdebugger.impl.XDebugSessionImpl,com.intellij.ui.content.Content,com.intellij.xdebugger.impl.ui.XDebugSessionTab3):V
- getActions(com.intellij.execution.ui.layout.impl.RunnerContentUi):java.util.List
- f:getThreadsAndFramesOptions():com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$XDebugFramesAndThreadsLayoutOptions
- f:getVariablesLayoutSettings():com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$XDebugVariablesLayoutSettings
- restore():V
f:com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$Companion
- f:isVariablesViewVisible():Z
f:com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$XDebugFramesAndThreadsLayoutOptions
- com.intellij.ui.content.custom.options.PersistentContentCustomLayoutOptions
- <init>(com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings,com.intellij.xdebugger.impl.XDebugSessionImpl,com.intellij.ui.content.Content,com.intellij.xdebugger.impl.ui.XDebugSessionTab3):V
- getAvailableOptions():com.intellij.ui.content.custom.options.PersistentContentCustomLayoutOption[]
- f:getContent():com.intellij.ui.content.Content
- getDisplayName():java.lang.String
- f:getSession():com.intellij.xdebugger.impl.XDebugSessionImpl
- isHideOptionVisible():Z
- onHide():V
f:com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings$XDebugVariablesLayoutSettings
- com.intellij.ui.content.custom.options.ContentLayoutStateSettings
- <init>(com.intellij.xdebugger.impl.ui.XDebugTabLayoutSettings,com.intellij.ui.content.Content,com.intellij.xdebugger.impl.ui.XDebugSessionTab3):V
- f:getContent():com.intellij.ui.content.Content
- getDisplayName():java.lang.String
- isEnabled():Z
- isSelected():Z
- restore():V
- setSelected(Z):V
f:com.intellij.xdebugger.impl.ui.XDebugThreadsFramesViewChangeCollector
- sf:INSTANCE:com.intellij.xdebugger.impl.ui.XDebugThreadsFramesViewChangeCollector
- f:framesViewSelected(java.lang.String):V
- getGroup():com.intellij.internal.statistic.eventLog.EventLogGroup
a:com.intellij.xdebugger.impl.ui.XDebuggerEditorBase
- com.intellij.ui.Expandable
- p:<init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.evaluation.EvaluationMode,java.lang.String,com.intellij.xdebugger.XSourcePosition):V
- p:addChooser(javax.swing.JComponent):javax.swing.JComponent
- addCollapseButton(java.lang.Runnable):V
- p:addExpand(javax.swing.JComponent,Z):javax.swing.JComponent
- canGoBackward():Z
- canGoForward():Z
- collapse():V
- s:copyCaretPosition(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Editor):V
- p:createDocument(com.intellij.xdebugger.XExpression):com.intellij.openapi.editor.Document
- p:decorate(javax.swing.JComponent,Z,Z):javax.swing.JComponent
- pa:doSetText(com.intellij.xdebugger.XExpression):V
- expand():V
- s:foldNewLines(com.intellij.openapi.editor.ex.EditorEx):V
- a:getComponent():javax.swing.JComponent
- a:getEditor():com.intellij.openapi.editor.Editor
- getEditorComponent():javax.swing.JComponent
- getEditorsProvider():com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider
- a:getExpression():com.intellij.xdebugger.XExpression
- p:getFileType(com.intellij.xdebugger.XExpression):com.intellij.openapi.fileTypes.FileType
- getLanguageChooser():javax.swing.JComponent
- getMode():com.intellij.xdebugger.evaluation.EvaluationMode
- a:getPreferredFocusedComponent():javax.swing.JComponent
- f:getProject():com.intellij.openapi.project.Project
- getRecentExpressions():java.util.List
- goBackward():V
- goForward():V
- isExpanded():Z
- isUseSoftWraps():Z
- p:onHistoryChanged():V
- p:prepareEditor(com.intellij.openapi.editor.ex.EditorEx):V
- requestFocusInEditor():V
- saveTextInHistory():V
- a:selectAll():V
- setContext(com.intellij.psi.PsiElement):V
- setEnabled(Z):V
- setExpandHandler(java.lang.Runnable):V
- pf:setExpandable(com.intellij.openapi.editor.Editor):V
- setExpression(com.intellij.xdebugger.XExpression):V
- setSourcePosition(com.intellij.xdebugger.XSourcePosition):V
- setUseSoftWraps(Z):V
c:com.intellij.xdebugger.impl.ui.XDebuggerEmbeddedComboBox
- com.intellij.openapi.ui.ComboBox
- <init>():V
- <init>(javax.swing.ComboBoxModel,I):V
- getUI():com.intellij.xdebugger.impl.ui.EmbeddedComboBoxUI
- setExtension(javax.swing.JComponent):V
- setUI(javax.swing.plaf.ComboBoxUI):V
c:com.intellij.xdebugger.impl.ui.XDebuggerExpressionComboBox
- com.intellij.xdebugger.impl.ui.XDebuggerEditorBase
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,java.lang.String,com.intellij.xdebugger.XSourcePosition,Z,Z):V
- p:createComboBox(com.intellij.ui.CollectionComboBoxModel,I):com.intellij.openapi.ui.ComboBox
- p:createDocument(com.intellij.xdebugger.XExpression):com.intellij.openapi.editor.Document
- p:doSetText(com.intellij.xdebugger.XExpression):V
- fixEditorNotReleasedFalsePositiveException(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- getComboBox():com.intellij.openapi.ui.ComboBox
- getComponent():javax.swing.JComponent
- getEditor():com.intellij.openapi.editor.Editor
- getEditorComponent():javax.swing.JComponent
- getExpression():com.intellij.xdebugger.XExpression
- getPreferredFocusedComponent():javax.swing.JComponent
- p:onHistoryChanged():V
- p:prepareEditor(com.intellij.openapi.editor.ex.EditorEx):V
- selectAll():V
- setDocumentProcessor(java.util.function.Function):V
- setEnabled(Z):V
c:com.intellij.xdebugger.impl.ui.XDebuggerExpressionEditor
- com.intellij.xdebugger.impl.ui.XDebuggerEditorBase
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,java.lang.String,com.intellij.xdebugger.XSourcePosition,com.intellij.xdebugger.XExpression,Z,Z,Z):V
- p:doSetText(com.intellij.xdebugger.XExpression):V
- getComponent():javax.swing.JComponent
- getEditor():com.intellij.openapi.editor.Editor
- getEditorComponent():javax.swing.JComponent
- getExpression():com.intellij.xdebugger.XExpression
- getPreferredFocusedComponent():javax.swing.JComponent
- selectAll():V
- setEnabled(Z):V
f:com.intellij.xdebugger.impl.ui.XDebuggerUIConstants
- sf:CHANGED_VALUE_ATTRIBUTES:com.intellij.ui.SimpleTextAttributes
- sf:COLLECTING_DATA_HIGHLIGHT_ATTRIBUTES:com.intellij.ui.SimpleTextAttributes
- sf:EQ_TEXT:java.lang.String
- sf:ERROR_MESSAGE_ATTRIBUTES:com.intellij.ui.SimpleTextAttributes
- sf:ERROR_MESSAGE_ICON:javax.swing.Icon
- sf:EVALUATING_EXPRESSION_HIGHLIGHT_ATTRIBUTES:com.intellij.ui.SimpleTextAttributes
- sf:EXCEPTION_ATTRIBUTES:com.intellij.ui.SimpleTextAttributes
- sf:INFORMATION_MESSAGE_ICON:javax.swing.Icon
- sf:LAYOUT_VIEW_BREAKPOINT_CONDITION:java.lang.String
- sf:LAYOUT_VIEW_FINISH_CONDITION:java.lang.String
- sf:MODIFYING_VALUE_HIGHLIGHT_ATTRIBUTES:com.intellij.ui.SimpleTextAttributes
- sf:TYPE_ATTRIBUTES:com.intellij.ui.SimpleTextAttributes
- sf:VALUE_NAME_ATTRIBUTES:com.intellij.ui.SimpleTextAttributes
- s:getCollectingDataMessage():java.lang.String
- s:getEvaluatingExpressionMessage():java.lang.String
- s:getModifyingValueMessage():java.lang.String
com.intellij.xdebugger.impl.ui.XValueTextProvider
- a:getValueText():java.lang.String
- *a:shouldShowTextValue():Z
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogAllDebuggersFilter
- com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogDebuggersFilter
- sf:INSTANCE:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogAllDebuggersFilter
- canBeAppliedTo(java.util.Set):Z
- getDisplayText():java.lang.String
- getPersistentKey():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogCollectItemsUtilKt
- sf:collectAttachProcessItemsGroupByProcessInfo(com.intellij.openapi.project.Project,com.intellij.xdebugger.attach.XAttachHost,java.util.List,kotlin.coroutines.Continuation):java.lang.Object
com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogDebuggersFilter
- a:canBeAppliedTo(java.util.Set):Z
- a:getDisplayText():java.lang.String
- a:getPersistentKey():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogDebuggersFilterByGroup
- com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogDebuggersFilter
- <init>(com.intellij.xdebugger.attach.XAttachPresentationGroup):V
- canBeAppliedTo(java.util.Set):Z
- getDisplayText():java.lang.String
- getPersistentKey():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogDefaultItemPresentationProvider
- com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDialogItemPresentationProvider
- <init>():V
- getPriority():I
- isApplicableFor(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem):Z
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogDefaultPresentationProvider
- com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDialogPresentationProvider
- <init>():V
- getCustomHostTypeDisplayText(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType):java.lang.String
- getPriority():I
e:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType
- java.lang.Enum
- sf:DOCKER:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType
- sf:LOCAL:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType
- sf:REMOTE:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType
- f:getDisplayText():java.lang.String
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType
- s:values():com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType[]
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogItemPresentationInfo
- <init>(java.lang.String,com.intellij.ui.SimpleTextAttributes,java.lang.String,com.intellij.ui.SimpleTextAttributes,java.lang.String):V
- f:component1():java.lang.String
- f:component2():com.intellij.ui.SimpleTextAttributes
- f:component3():java.lang.String
- f:component4():com.intellij.ui.SimpleTextAttributes
- f:component5():java.lang.String
- f:copy(java.lang.String,com.intellij.ui.SimpleTextAttributes,java.lang.String,com.intellij.ui.SimpleTextAttributes,java.lang.String):com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogItemPresentationInfo
- bs:copy$default(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogItemPresentationInfo,java.lang.String,com.intellij.ui.SimpleTextAttributes,java.lang.String,com.intellij.ui.SimpleTextAttributes,java.lang.String,I,java.lang.Object):com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogItemPresentationInfo
- equals(java.lang.Object):Z
- f:getCommandLineText():java.lang.String
- f:getCommandLineTextAttributes():com.intellij.ui.SimpleTextAttributes
- f:getExecutableText():java.lang.String
- f:getExecutableTextAttributes():com.intellij.ui.SimpleTextAttributes
- f:getIndexedString():java.lang.String
- hashCode():I
- toString():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogPresentationService
- <init>():V
- f:getHostTypeDisplayText(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType):java.lang.String
- f:getItemPresentationInfo(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem):com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogItemPresentationInfo
c:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem$Companion
- p:<init>(com.intellij.execution.process.ProcessInfo,java.util.List,com.intellij.openapi.util.UserDataHolder):V
- f:getCommandLineText():java.lang.String
- f:getCommandLineTextAttributes():com.intellij.ui.SimpleTextAttributes
- f:getDataHolder():com.intellij.openapi.util.UserDataHolder
- f:getDebuggers():java.util.List
- f:getExecutableText():java.lang.String
- f:getExecutableTextAttributes():com.intellij.ui.SimpleTextAttributes
- f:getGroups():java.util.Set
- f:getGroupsWithItems():java.util.List
- f:getIndexedString():java.lang.String
- getMainDebugger(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogState):com.intellij.xdebugger.attach.XAttachDebugger
- f:getProcessInfo():com.intellij.execution.process.ProcessInfo
- toString():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem$Companion
- f:create(com.intellij.execution.process.ProcessInfo,java.util.Map,com.intellij.openapi.util.UserDataHolder):com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogSettings
- com.intellij.ide.actions.NonEmptyActionGroup
- com.intellij.openapi.actionSystem.RightAlignedToolbarAction
- com.intellij.openapi.actionSystem.ex.TooltipDescriptionProvider
- com.intellij.openapi.project.DumbAware
- <init>():V
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogState
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogState$Companion
- <init>(com.intellij.openapi.Disposable,com.intellij.openapi.actionSystem.DataContext):V
- f:getCurrentList():com.intellij.openapi.observable.properties.AtomicLazyProperty
- f:getDataContext():com.intellij.openapi.actionSystem.DataContext
- f:getDialogDisposable():com.intellij.openapi.Disposable
- f:getItemWasDoubleClicked():com.intellij.openapi.observable.properties.AtomicLazyProperty
- f:getSearchFieldValue():com.intellij.openapi.observable.properties.AtomicLazyProperty
- f:getSelectedDebuggerItem():com.intellij.openapi.observable.properties.AtomicLazyProperty
- f:getSelectedDebuggersFilter():com.intellij.openapi.observable.properties.AtomicLazyProperty
- f:getSelectedViewType():com.intellij.openapi.observable.properties.AtomicLazyProperty
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogState$Companion
- f:getCOLUMN_MINIMUM_WIDTH():I
- f:getDEFAULT_ROW_HEIGHT():I
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogUtilKt
- sf:attachToProcessWithDebugger(com.intellij.xdebugger.attach.XAttachDebugger,com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachToProcessItem,com.intellij.openapi.project.Project):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostAndProvider
- com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem
- <init>(com.intellij.xdebugger.attach.XAttachHost,com.intellij.xdebugger.attach.XAttachHostProvider,com.intellij.openapi.project.Project,com.intellij.openapi.util.UserDataHolder):V
- f:component1():com.intellij.xdebugger.attach.XAttachHost
- f:component2():com.intellij.xdebugger.attach.XAttachHostProvider
- f:component3():com.intellij.openapi.project.Project
- f:component4():com.intellij.openapi.util.UserDataHolder
- f:copy(com.intellij.xdebugger.attach.XAttachHost,com.intellij.xdebugger.attach.XAttachHostProvider,com.intellij.openapi.project.Project,com.intellij.openapi.util.UserDataHolder):com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostAndProvider
- bs:copy$default(com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostAndProvider,com.intellij.xdebugger.attach.XAttachHost,com.intellij.xdebugger.attach.XAttachHostProvider,com.intellij.openapi.project.Project,com.intellij.openapi.util.UserDataHolder,I,java.lang.Object):com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostAndProvider
- equals(java.lang.Object):Z
- f:getDataHolder():com.intellij.openapi.util.UserDataHolder
- getHost():com.intellij.xdebugger.attach.XAttachHost
- getIcon():javax.swing.Icon
- getId():java.lang.String
- getPresentation():java.lang.String
- f:getProject():com.intellij.openapi.project.Project
- f:getProvider():com.intellij.xdebugger.attach.XAttachHostProvider
- hashCode():I
- toString():java.lang.String
com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem
- a:getHost():com.intellij.xdebugger.attach.XAttachHost
- a:getIcon():javax.swing.Icon
- a:getId():java.lang.String
- a:getPresentation():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachItemsInfo
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.AttachItemsInfo$Companion
- <init>(java.util.List,java.util.List,com.intellij.openapi.util.UserDataHolder):V
- f:component1():java.util.List
- f:component2():java.util.List
- f:component3():com.intellij.openapi.util.UserDataHolder
- f:copy(java.util.List,java.util.List,com.intellij.openapi.util.UserDataHolder):com.intellij.xdebugger.impl.ui.attach.dialog.AttachItemsInfo
- bs:copy$default(com.intellij.xdebugger.impl.ui.attach.dialog.AttachItemsInfo,java.util.List,java.util.List,com.intellij.openapi.util.UserDataHolder,I,java.lang.Object):com.intellij.xdebugger.impl.ui.attach.dialog.AttachItemsInfo
- equals(java.lang.Object):Z
- f:getDataHolder():com.intellij.openapi.util.UserDataHolder
- f:getProcessItems():java.util.List
- f:getRecentItems():java.util.List
- hashCode():I
- toString():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachItemsInfo$Companion
- f:getEMPTY():com.intellij.xdebugger.impl.ui.attach.dialog.AttachItemsInfo
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachShowOnlyMyProcessesToggleAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- com.intellij.xdebugger.impl.ui.attach.dialog.ProcessPredicate
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.AttachShowOnlyMyProcessesToggleAction$Companion
- sf:DEFAULT:Z
- sf:SETTINGS_KEY:java.lang.String
- <init>():V
- get():java.util.function.Predicate
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachShowOnlyMyProcessesToggleAction$Companion
c:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessDialog
- com.intellij.openapi.ui.DialogWrapper
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessDialog$Companion
- <init>(com.intellij.openapi.project.Project,java.util.List,java.util.List,com.intellij.openapi.actionSystem.DataContext,com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType,javax.swing.JComponent):V
- b:<init>(com.intellij.openapi.project.Project,java.util.List,java.util.List,com.intellij.openapi.actionSystem.DataContext,com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType,javax.swing.JComponent,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- p:attach(com.intellij.xdebugger.attach.XAttachDebugger,com.intellij.xdebugger.impl.actions.AttachToProcessActionBase$AttachToProcessItem):V
- p:createCenterPanel():javax.swing.JComponent
- p:createDefaultActions():V
- p:createNorthPanel():javax.swing.JComponent
- p:getDimensionServiceKey():java.lang.String
- pf:getFilterTextField():com.intellij.ui.SearchTextField
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- p:onSearchFieldInsertUpdate():V
- f:setAttachView(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType):V
- f:updateProcesses():V
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessDialog$Companion
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessDialogFactory
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessDialogFactory$Companion
- <init>(com.intellij.openapi.project.Project):V
- f:getOpenDialog():com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessDialog
- f:showDialog(java.util.List,java.util.List,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessDialogFactory$Companion
- f:getDEFAULT_VIEW_HOST_TYPE():com.intellij.openapi.actionSystem.DataKey
a:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessView
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessView$Companion
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogState,com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayout,java.util.List):V
- pf:collectAndShowItems(com.intellij.xdebugger.attach.XAttachHost,kotlin.coroutines.Continuation):java.lang.Object
- pa:doUpdateProcesses(kotlin.coroutines.Continuation):java.lang.Object
- pf:getCenterPanel():javax.swing.JPanel
- pf:getCoroutineScope():kotlinx.coroutines.CoroutineScope
- f:getFocusedComponent():java.awt.Component
- a:getHostType():com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType
- f:getMainComponent():javax.swing.JPanel
- f:getName():java.lang.String
- pf:getState():com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogState
- pf:getUpdateScope():kotlinx.coroutines.CoroutineScope
- a:getViewActions():java.util.List
- pf:loadComponent(javax.swing.JComponent):com.intellij.openapi.Disposable
- pf:setUpdateScope(kotlinx.coroutines.CoroutineScope):V
- f:updateProcesses():V
- pf:withUiContextAnyModality(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessView$Companion
a:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts
- com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessView
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts$Companion
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogState,com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayout,java.util.List):V
- p:doUpdateProcesses(kotlin.coroutines.Continuation):java.lang.Object
- pa:getAddHostButtonAction():com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts$AddConnectionButtonAction
- a:getHostActions(java.util.Set,kotlin.jvm.functions.Function1):java.util.List
- p:getHostFromSet(java.util.Set):com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem
- a:getHosts(kotlin.coroutines.Continuation):java.lang.Object
- pa:getHostsComboBoxAction():com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts$AttachHostsComboBoxAction
- a:getSavedHost(java.util.Set):com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem
- getViewActions():java.util.List
- p:handleMultipleHosts(java.util.Set,com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem):com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem
- p:handleSingleHost(java.util.Set,com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem,com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem):com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem
- pf:hostsSettingsChanged():V
- a:isAddingConnectionEnabled():Z
- a:openSettings():V
- a:openSettingsAndCreateTemplate():V
- a:saveSelectedHost(com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem):V
- pf:updateHosts(kotlin.coroutines.Continuation):java.lang.Object
pf:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts$AddConnectionButtonAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- com.intellij.openapi.project.DumbAware
- java.awt.event.ActionListener
- <init>(com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- actionPerformed(java.awt.event.ActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- f:updateState(java.util.List):Z
pf:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts$AttachHostsComboBoxAction
- com.intellij.openapi.actionSystem.ex.ComboBoxAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts,Z):V
- b:<init>(com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- f:getSelectedItem():com.intellij.xdebugger.impl.ui.attach.dialog.AttachHostItem
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- f:updateState(java.util.List):Z
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts$Companion
- f:getDEFAULT_ATTACH_HOST():com.intellij.openapi.actionSystem.DataKey
pf:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts$ManageConnectionsAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessViewWithHosts):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.AttachToRemoteProcessViewProvider
- <init>():V
- getProcessView(com.intellij.openapi.project.Project,com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogState,com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayout,java.util.List,java.util.List):com.intellij.xdebugger.impl.ui.attach.dialog.AttachToProcessView
- isApplicable(java.util.List):Z
e:com.intellij.xdebugger.impl.ui.attach.dialog.AttachViewType
- java.lang.Enum
- sf:LIST:com.intellij.xdebugger.impl.ui.attach.dialog.AttachViewType
- sf:TREE:com.intellij.xdebugger.impl.ui.attach.dialog.AttachViewType
- f:getDisplayText():java.lang.String
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.xdebugger.impl.ui.attach.dialog.AttachViewType
- s:values():com.intellij.xdebugger.impl.ui.attach.dialog.AttachViewType[]
com.intellij.xdebugger.impl.ui.attach.dialog.ProcessPredicate
- java.util.function.Supplier
f:com.intellij.xdebugger.impl.ui.attach.dialog.diagnostics.ProcessesFetchingProblemAction
- <init>(java.lang.String,java.lang.String,kotlin.jvm.functions.Function4):V
- f:getAction():kotlin.jvm.functions.Function4
- f:getActionId():java.lang.String
- f:getActionName():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.diagnostics.ProcessesFetchingProblemException
- com.intellij.execution.ExecutionException
- <init>(javax.swing.Icon,java.lang.String,com.intellij.xdebugger.impl.ui.attach.dialog.diagnostics.ProcessesFetchingProblemAction):V
- f:getAction():com.intellij.xdebugger.impl.ui.attach.dialog.diagnostics.ProcessesFetchingProblemAction
- f:getDescriptionDisplayText():java.lang.String
- f:getIcon():javax.swing.Icon
*:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDebuggerButtonPresentationProvider
- a:getCustomActionPresentation():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDebuggerButtonPresentationProviderKt
- sf:getActionPresentation(com.intellij.xdebugger.attach.XAttachDebugger):java.lang.String
*:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDialogItemPresentationProvider
- *sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDialogItemPresentationProvider$Companion
- getIndexedString(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem):java.lang.String
- a:getPriority():I
- getProcessCommandLineText(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem):java.lang.String
- getProcessCommandLineTextAttributes(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem):com.intellij.ui.SimpleTextAttributes
- getProcessExecutableText(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem):java.lang.String
- getProcessExecutableTextAttributes(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem):com.intellij.ui.SimpleTextAttributes
- a:isApplicableFor(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem):Z
*f:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDialogItemPresentationProvider$Companion
- f:getEP():com.intellij.openapi.extensions.ExtensionPointName
*:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDialogPresentationProvider
- *sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDialogPresentationProvider$Companion
- a:getCustomHostTypeDisplayText(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogHostType):java.lang.String
- a:getPriority():I
*f:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDialogPresentationProvider$Companion
- f:getEP():com.intellij.openapi.extensions.ExtensionPointName
*:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDialogUiInvisibleDebuggerProvider
*:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachDialogUiInvisiblePresentationGroup
com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachHostSettingsProvider
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachHostSettingsProvider$Companion
- addSettingsChangedListener(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.lang.Runnable):V
- openAndCreateTemplate(com.intellij.openapi.project.Project):V
- openHostsSettings(com.intellij.openapi.project.Project):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachHostSettingsProvider$Companion
- f:getEP():com.intellij.openapi.extensions.ExtensionPointName
- f:setEP(com.intellij.openapi.extensions.ExtensionPointName):V
*:com.intellij.xdebugger.impl.ui.attach.dialog.extensions.XAttachTreeDebuggersPresentationProvider
- a:getDebuggersShortName():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.AttachDialogEmptyText
- com.intellij.util.ui.StatusText
- <init>(com.intellij.ui.table.JBTable,com.intellij.xdebugger.impl.ui.attach.dialog.items.AttachToProcessElementsFilters):V
- paint(java.awt.Component,java.awt.Graphics):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.AttachToProcessElementsFilters
- <init>(com.intellij.openapi.observable.properties.AtomicLazyProperty):V
- f:accept(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem):Z
- f:accept(java.util.Set):Z
- f:clear():V
- f:getSelectedFilter():com.intellij.openapi.observable.properties.AtomicLazyProperty
- f:matches(com.intellij.xdebugger.impl.ui.attach.dialog.items.nodes.AttachDialogElementNode):Z
- f:updatePattern(java.lang.String):V
com.intellij.xdebugger.impl.ui.attach.dialog.items.AttachToProcessItemsListBase
- a:addSelectionListener(com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- a:getFocusedComponent():javax.swing.JComponent
- a:getSelectedItem():com.intellij.xdebugger.impl.ui.attach.dialog.items.nodes.AttachDialogElementNode
- a:selectNextItem():V
- a:updateFilter(java.lang.String):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.AttachToProcessTableSelectionModel
- javax.swing.ListSelectionModel
- <init>(com.intellij.ui.table.JBTable):V
- addListSelectionListener(javax.swing.event.ListSelectionListener):V
- addSelectionInterval(I,I):V
- clearSelection():V
- getAnchorSelectionIndex():I
- getLeadSelectionIndex():I
- getMaxSelectionIndex():I
- getMinSelectionIndex():I
- getSelectionMode():I
- getValueIsAdjusting():Z
- insertIndexInterval(I,I,Z):V
- isSelectedIndex(I):Z
- isSelectionEmpty():Z
- removeIndexInterval(I,I):V
- removeListSelectionListener(javax.swing.event.ListSelectionListener):V
- removeSelectionInterval(I,I):V
- setAnchorSelectionIndex(I):V
- setLeadSelectionIndex(I):V
- setSelectionInterval(I,I):V
- setSelectionMode(I):V
- setValueIsAdjusting(Z):V
a:com.intellij.xdebugger.impl.ui.attach.dialog.items.cells.AttachTableCell
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.items.cells.AttachTableCell$Companion
- <init>(java.lang.String,com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayout):V
- getAlignment():I
- f:getColumnKey():java.lang.String
- f:getColumnsLayout():com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayout
- getIcon():javax.swing.Icon
- f:getPresentation(com.intellij.ui.SimpleColoredComponent,I):kotlin.Pair
- bs:getPresentation$default(com.intellij.xdebugger.impl.ui.attach.dialog.items.cells.AttachTableCell,com.intellij.ui.SimpleColoredComponent,I,I,java.lang.Object):kotlin.Pair
- getTag():java.lang.Object
- getTextAttributes():com.intellij.ui.SimpleTextAttributes
- getTextStartOffset(com.intellij.ui.SimpleColoredComponent):I
- pa:getTextToDisplay():java.lang.String
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.cells.AttachTableCell$Companion
- f:getIGNORE_EXPAND_HANDLER_GAP():I
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnInfo
- <init>(java.lang.String,java.lang.Class,java.lang.String,I):V
- f:component1():java.lang.String
- f:component2():java.lang.Class
- f:component3():java.lang.String
- f:component4():I
- f:copy(java.lang.String,java.lang.Class,java.lang.String,I):com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnInfo
- bs:copy$default(com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnInfo,java.lang.String,java.lang.Class,java.lang.String,I,I,java.lang.Object):com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnInfo
- equals(java.lang.Object):Z
- f:getColumnClass():java.lang.Class
- f:getColumnHeader():java.lang.String
- f:getColumnKey():java.lang.String
- f:getDefaultColumnWidth():I
- hashCode():I
- toString():java.lang.String
a:com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayout
- <init>():V
- a:createCell(I,com.intellij.xdebugger.impl.ui.attach.dialog.items.nodes.AttachDialogProcessNode,com.intellij.xdebugger.impl.ui.attach.dialog.items.AttachToProcessElementsFilters,Z):com.intellij.xdebugger.impl.ui.attach.dialog.items.cells.AttachTableCell
- f:getColumnClass(I):java.lang.Class
- f:getColumnClass(java.lang.String):java.lang.Class
- f:getColumnIndex(java.lang.String):I
- a:getColumnInfos():java.util.List
- f:getColumnKey(I):java.lang.String
- f:getColumnName(I):java.lang.String
- f:getColumnName(java.lang.String):java.lang.String
- f:getColumnWidth(java.lang.String):I
- f:getColumnsCount():I
- f:getMinimumViewWidth():I
- f:setColumnWidth(java.lang.String,I):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayoutService
- <init>():V
- f:getColumnsLayout():com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayout
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogDefaultColumnsLayout
- com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayout
- sf:COMMAND_LINE_CELL_KEY:java.lang.String
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogDefaultColumnsLayout$Companion
- sf:DEBUGGERS_CELL_KEY:java.lang.String
- sf:EXECUTABLE_CELL_KEY:java.lang.String
- sf:PID_CELL_KEY:java.lang.String
- sf:USER_CELL_KEY:java.lang.String
- <init>():V
- createCell(I,com.intellij.xdebugger.impl.ui.attach.dialog.items.nodes.AttachDialogProcessNode,com.intellij.xdebugger.impl.ui.attach.dialog.items.AttachToProcessElementsFilters,Z):com.intellij.xdebugger.impl.ui.attach.dialog.items.cells.AttachTableCell
- getColumnInfos():java.util.List
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogDefaultColumnsLayout$Companion
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.list.AttachToProcessListColumnModel
- javax.swing.table.DefaultTableColumnModel
- <init>(com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayout):V
com.intellij.xdebugger.impl.ui.attach.dialog.items.nodes.AttachDialogElementNode
- a:getProcessItem():com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem
- a:getRenderer(I):javax.swing.table.TableCellRenderer
- a:getValueAtColumn(I):java.lang.Object
- a:visit(com.intellij.xdebugger.impl.ui.attach.dialog.items.AttachToProcessElementsFilters):Z
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.nodes.AttachDialogProcessNode
- com.intellij.xdebugger.impl.ui.attach.dialog.items.nodes.AttachDialogElementNode
- <init>(com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem,com.intellij.xdebugger.impl.ui.attach.dialog.items.AttachToProcessElementsFilters,com.intellij.xdebugger.impl.ui.attach.dialog.items.columns.AttachDialogColumnsLayout):V
- f:getItem():com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem
- getProcessItem():com.intellij.xdebugger.impl.ui.attach.dialog.AttachDialogProcessItem
- getRenderer(I):javax.swing.table.TableCellRenderer
- getValueAtColumn(I):java.lang.Object
- toString():java.lang.String
- visit(com.intellij.xdebugger.impl.ui.attach.dialog.items.AttachToProcessElementsFilters):Z
com.intellij.xdebugger.impl.ui.attach.dialog.items.nodes.AttachSelectionIgnoredNode
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.separators.TableGroupHeaderColumnSeparator
- com.intellij.xdebugger.impl.ui.attach.dialog.items.separators.TableGroupHeaderSeparator
- <init>(Z):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.separators.TableGroupHeaderFirstColumnSeparator
- com.intellij.xdebugger.impl.ui.attach.dialog.items.separators.TableGroupHeaderSeparator
- <init>(java.lang.String,Z):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.separators.TableGroupHeaderLastColumnSeparator
- com.intellij.xdebugger.impl.ui.attach.dialog.items.separators.TableGroupHeaderSeparator
- <init>(Z):V
a:com.intellij.xdebugger.impl.ui.attach.dialog.items.separators.TableGroupHeaderSeparator
- com.intellij.ui.SeparatorWithText
- sf:Companion:com.intellij.xdebugger.impl.ui.attach.dialog.items.separators.TableGroupHeaderSeparator$Companion
- <init>(Z):V
- getInsets():java.awt.Insets
- pa:getModifiedLineInsets(java.awt.Insets):java.awt.Insets
- p:getPreferredElementSize():java.awt.Dimension
- p:paintComponent(java.awt.Graphics):V
f:com.intellij.xdebugger.impl.ui.attach.dialog.items.separators.TableGroupHeaderSeparator$Companion
- f:getExpectedHeight(Z,Z):I
f:com.intellij.xdebugger.impl.ui.tree.SetValueInplaceEditor
- com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeValueNodeInplaceEditor
- doOKAction():V
- s:show(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,java.lang.String):V
a:com.intellij.xdebugger.impl.ui.tree.TreeInplaceEditor
- com.intellij.xdebugger.impl.ui.InplaceEditor
- <init>():V
- p:beforeShow():V
- p:getEditorBounds():java.awt.Rectangle
- p:getHostComponent():javax.swing.JComponent
- pa:getNodePath():javax.swing.tree.TreePath
- pa:getTree():javax.swing.JTree
c:com.intellij.xdebugger.impl.ui.tree.ValueMarkerPresentationDialog
- com.intellij.xdebugger.impl.ui.tree.ValueMarkerPresentationDialogBase
- <init>(java.awt.Component,java.lang.String,java.util.Collection):V
a:com.intellij.xdebugger.impl.ui.tree.ValueMarkerPresentationDialogBase
- com.intellij.openapi.ui.DialogWrapper
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(java.awt.Component,java.lang.String,java.util.Collection):V
- p:createCenterPanel():javax.swing.JComponent
- getConfiguredMarkup():com.intellij.xdebugger.impl.ui.tree.ValueMarkup
- getPreferredFocusedComponent():javax.swing.JComponent
c:com.intellij.xdebugger.impl.ui.tree.ValueMarkup
- <init>(java.lang.String,java.awt.Color,java.lang.String):V
- getColor():java.awt.Color
- getText():java.lang.String
- getToolTipText():java.lang.String
c:com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- com.intellij.ide.dnd.aware.DnDAwareTree
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.DataProvider
- sf:SELECTED_NODES:com.intellij.openapi.actionSystem.DataKey
- sf:XDEBUGGER_TREE_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.XSourcePosition,java.lang.String,com.intellij.xdebugger.impl.frame.XValueMarkers):V
- addTreeListener(com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeListener):V
- addTreeListener(com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeListener,com.intellij.openapi.Disposable):V
- childrenLoaded(com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,java.util.List,Z):V
- dispose():V
- expandNodesOnLoad(com.intellij.openapi.util.Condition):V
- getData(java.lang.String):java.lang.Object
- getEditorsProvider():com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider
- getPinToTopManager():com.intellij.xdebugger.impl.pinned.items.XDebuggerPinToTopManager
- getProject():com.intellij.openapi.project.Project
- getRoot():com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode
- s:getSelectedNodes(com.intellij.openapi.actionSystem.DataContext):java.util.List
- getSourcePosition():com.intellij.xdebugger.XSourcePosition
- s:getTree(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- s:getTree(com.intellij.openapi.actionSystem.DataContext):com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- getTreeModel():javax.swing.tree.DefaultTreeModel
- getValueMarkers():com.intellij.xdebugger.impl.frame.XValueMarkers
- p:installSpeedSearch():V
- invokeLater(java.lang.Runnable):V
- isDetached():Z
- isUnderRemoteDebug():Z
- markNodesObsolete():V
- nodeLoaded(com.intellij.xdebugger.impl.ui.tree.nodes.RestorableStateNode,java.lang.String):V
- rebuildAndRestore(com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeState):V
- removeTreeListener(com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeListener):V
- selectNodeOnLoad(com.intellij.openapi.util.Condition,com.intellij.openapi.util.Condition):V
- setRoot(com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,Z):V
- setSourcePosition(com.intellij.xdebugger.XSourcePosition):V
- updateEditor():V
a:com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeInplaceEditor
- com.intellij.xdebugger.impl.ui.tree.TreeInplaceEditor
- pf:myExpressionEditor:com.intellij.xdebugger.impl.ui.XDebuggerExpressionComboBox
- pf:myNode:com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode
- pf:myTree:com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- <init>(com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,java.lang.String):V
- p:createInplaceEditorComponent():javax.swing.JComponent
- doOKAction():V
- p:doPopupOKAction():V
- pf:getAfterIconX():I
- getEditor():com.intellij.openapi.editor.Editor
- getEditorComponent():javax.swing.JComponent
- p:getExpression():com.intellij.xdebugger.XExpression
- p:getNodePath():javax.swing.tree.TreePath
- p:getPreferredFocusedComponent():javax.swing.JComponent
- p:getProject():com.intellij.openapi.project.Project
- p:getTree():com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- p:onHidden():V
- p:onShown():V
com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeListener
- childrenLoaded(com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,java.util.List,Z):V
- nodeLoaded(com.intellij.xdebugger.impl.ui.tree.nodes.RestorableStateNode,java.lang.String):V
f:com.intellij.xdebugger.impl.ui.tree.XDebuggerTreePanel
- com.intellij.ide.dnd.DnDSource
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.openapi.Disposable,com.intellij.xdebugger.XSourcePosition,java.lang.String,com.intellij.xdebugger.impl.frame.XValueMarkers):V
- canStartDragging(com.intellij.ide.dnd.DnDAction,java.awt.Point):Z
- createDraggedImage(com.intellij.ide.dnd.DnDAction,java.awt.Point,com.intellij.ide.dnd.DnDDragStartBean):com.intellij.openapi.util.Pair
- getMainPanel():javax.swing.JPanel
- getTree():com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- startDragging(com.intellij.ide.dnd.DnDAction,java.awt.Point):com.intellij.ide.dnd.DnDDragStartBean
c:com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeRenderer
- com.intellij.ui.ColoredTreeCellRenderer
- <init>(com.intellij.openapi.project.Project):V
- append(java.lang.String,com.intellij.ui.SimpleTextAttributes,java.lang.Object):V
- customizeCellRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- p:doPaint(java.awt.Graphics2D):V
- getFragmentTagAt(I):java.lang.Object
- getPreferredSize():java.awt.Dimension
- getToolTipText(java.awt.event.MouseEvent):java.lang.String
c:com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeRestorer
- com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeListener
- javax.swing.event.TreeSelectionListener
- sf:SELECTION_PATH_PROPERTY:java.lang.String
- <init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,java.awt.Rectangle):V
- childrenLoaded(com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,java.util.List,Z):V
- dispose():V
- isFinished():Z
- nodeLoaded(com.intellij.xdebugger.impl.ui.tree.nodes.RestorableStateNode,java.lang.String):V
- onFinished():java.util.concurrent.CompletableFuture
- valueChanged(javax.swing.event.TreeSelectionEvent):V
f:com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeState
- restoreState(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeRestorer
- s:saveState(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeState
c:com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeState$NodeInfo
- <init>(java.lang.String,java.lang.String,Z):V
- addChild(com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeState$NodeInfo):V
- getChild(com.intellij.xdebugger.XNamedTreeNode):com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeState$NodeInfo
- getValue():java.lang.String
- isExpanded():Z
- isSelected():Z
a:com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeValueNodeInplaceEditor
- com.intellij.xdebugger.impl.ui.tree.XDebuggerTreeInplaceEditor
- pf:myValueNode:com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl
- p:<init>(java.lang.String,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,java.lang.String):V
- p:createInplaceEditorComponent():javax.swing.JComponent
- p:getEditorBounds():java.awt.Rectangle
c:com.intellij.xdebugger.impl.ui.tree.XInspectDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.XSourcePosition,java.lang.String,com.intellij.xdebugger.frame.XValue,com.intellij.xdebugger.impl.frame.XValueMarkers,com.intellij.xdebugger.XDebugSession,Z):V
- p:createCenterPanel():javax.swing.JComponent
- p:createSouthPanel():javax.swing.JComponent
- p:getDimensionServiceKey():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getTree():com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
a:com.intellij.xdebugger.impl.ui.tree.XValueExtendedPresentation
- com.intellij.xdebugger.frame.presentation.XValuePresentation
- <init>():V
- isModified():Z
c:com.intellij.xdebugger.impl.ui.tree.actions.ShowReferringObjectsAction
- com.intellij.xdebugger.impl.ui.tree.actions.XDebuggerTreeActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:perform(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
*:com.intellij.xdebugger.impl.ui.tree.actions.ShowReferringObjectsAction$ReferrersTreeCustomizer
- a:getDialog(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,java.lang.String,com.intellij.xdebugger.XDebugSession):com.intellij.openapi.ui.DialogWrapper
c:com.intellij.xdebugger.impl.ui.tree.actions.SortValuesToggleAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.ui.tree.actions.XAddToWatchesTreeAction
- com.intellij.xdebugger.impl.ui.tree.actions.XDebuggerTreeActionBase
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:perform(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.ui.tree.actions.XCompareWithClipboardAction
- com.intellij.xdebugger.impl.ui.tree.actions.XFetchValueActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:handle(com.intellij.openapi.project.Project,java.lang.String,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):V
c:com.intellij.xdebugger.impl.ui.tree.actions.XCopyNameAction
- com.intellij.xdebugger.impl.ui.tree.actions.XDebuggerTreeActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:perform(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.ui.tree.actions.XCopyValueAction
- com.intellij.xdebugger.impl.ui.tree.actions.XFetchValueActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:handle(com.intellij.openapi.project.Project,java.lang.String,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):V
a:com.intellij.xdebugger.impl.ui.tree.actions.XDebuggerTreeActionBase
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:getSelectedNode(com.intellij.openapi.actionSystem.DataContext):com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl
- s:getSelectedNodes(com.intellij.openapi.actionSystem.DataContext):java.util.List
- s:getSelectedValue(com.intellij.openapi.actionSystem.DataContext):com.intellij.xdebugger.frame.XValue
- p:isEnabled(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.openapi.actionSystem.AnActionEvent):Z
- pa:perform(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.xdebugger.impl.ui.tree.actions.XFetchValueActionBase
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:addToCollector(java.util.List,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.xdebugger.impl.ui.tree.actions.XFetchValueActionBase$ValueCollector):V
- p:createCollector(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.xdebugger.impl.ui.tree.actions.XFetchValueActionBase$ValueCollector
- pa:handle(com.intellij.openapi.project.Project,java.lang.String,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):V
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.ui.tree.actions.XFetchValueActionBase$ValueCollector
- <init>(com.intellij.xdebugger.impl.ui.tree.actions.XFetchValueActionBase,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):V
- acquire():I
- add(java.lang.String):V
- add(java.lang.String,I):V
- evaluationComplete(I,java.lang.String):V
- finish():V
- getTree():com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- handleInCollector(com.intellij.openapi.project.Project,java.lang.String,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):V
c:com.intellij.xdebugger.impl.ui.tree.actions.XInspectAction
- com.intellij.xdebugger.impl.ui.tree.actions.XDebuggerTreeActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:perform(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.ui.tree.actions.XJumpToSourceAction
- com.intellij.xdebugger.impl.ui.tree.actions.XJumpToSourceActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:startComputingSourcePosition(com.intellij.xdebugger.frame.XValue,com.intellij.xdebugger.frame.XNavigatable):V
a:com.intellij.xdebugger.impl.ui.tree.actions.XJumpToSourceActionBase
- com.intellij.xdebugger.impl.ui.tree.actions.XDebuggerTreeActionBase
- <init>():V
- p:perform(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:startComputingSourcePosition(com.intellij.xdebugger.frame.XValue,com.intellij.xdebugger.frame.XNavigatable):V
c:com.intellij.xdebugger.impl.ui.tree.actions.XJumpToTypeSourceAction
- com.intellij.xdebugger.impl.ui.tree.actions.XJumpToSourceActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:startComputingSourcePosition(com.intellij.xdebugger.frame.XValue,com.intellij.xdebugger.frame.XNavigatable):V
c:com.intellij.xdebugger.impl.ui.tree.actions.XSetValueAction
- com.intellij.xdebugger.impl.ui.tree.actions.XDebuggerTreeActionBase
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:perform(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.xdebugger.impl.ui.tree.actions.XWatchTransferable
- java.awt.datatransfer.StringSelection
- sf:EXPRESSIONS_FLAVOR:java.awt.datatransfer.DataFlavor
- <init>(java.lang.String,java.util.List):V
- getTransferData(java.awt.datatransfer.DataFlavor):java.lang.Object
- getTransferDataFlavors():java.awt.datatransfer.DataFlavor[]
- isDataFlavorSupported(java.awt.datatransfer.DataFlavor):Z
c:com.intellij.xdebugger.impl.ui.tree.nodes.EvaluatingExpressionRootNode
- com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode
- <init>(com.intellij.xdebugger.impl.evaluate.XDebuggerEvaluationDialog,com.intellij.xdebugger.impl.ui.tree.XDebuggerTree):V
- p:createLoadingMessageNode():com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode
c:com.intellij.xdebugger.impl.ui.tree.nodes.EvaluatingExpressionRootNode$EvaluatingResultContainer
- com.intellij.xdebugger.frame.XValueContainer
- <init>(com.intellij.xdebugger.impl.evaluate.XDebuggerEvaluationDialog):V
- computeChildren(com.intellij.xdebugger.frame.XCompositeNode):V
c:com.intellij.xdebugger.impl.ui.tree.nodes.HeadlessValueEvaluationCallback
- com.intellij.xdebugger.impl.ui.tree.nodes.HeadlessValueEvaluationCallbackBase
- <init>(com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl):V
- getNode():com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl
- isObsolete():Z
c:com.intellij.xdebugger.impl.ui.tree.nodes.HeadlessValueEvaluationCallbackBase
- com.intellij.xdebugger.frame.XFullValueEvaluator$XFullValueEvaluationCallback
- <init>(com.intellij.openapi.project.Project):V
- errorOccurred(java.lang.String):V
- evaluated(java.lang.String):V
- evaluated(java.lang.String,java.awt.Font):V
- p:evaluationComplete(java.lang.String,com.intellij.openapi.project.Project):V
- isObsolete():Z
- showProgress():V
- startFetchingValue(com.intellij.xdebugger.frame.XFullValueEvaluator):V
c:com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode
- com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode
- p:<init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,Z):V
- appendToComponent(com.intellij.ui.ColoredTextContainer):V
- clearChildren():V
- s:createEllipsisNode(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,I,java.lang.Runnable):com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode
- s:createEvaluatingMessage(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode):com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode
- s:createInfoMessage(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,java.lang.String):com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode
- s:createInfoMessage(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,java.lang.String,javax.swing.event.HyperlinkListener):com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode
- s:createLoadingMessage(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode):com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode
- s:createMessageNode(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,java.lang.String,javax.swing.Icon):com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode
- s:createMessages(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,java.lang.String,com.intellij.xdebugger.frame.XDebuggerTreeNodeHyperlink,javax.swing.Icon,com.intellij.ui.SimpleTextAttributes):java.util.List
- getChildren():java.util.List
- getLink():com.intellij.xdebugger.frame.XDebuggerTreeNodeHyperlink
- getLoadedChildren():java.util.List
- isEllipsis():Z
f:com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode$HyperlinkListenerDelegator
- com.intellij.xdebugger.frame.XDebuggerTreeNodeHyperlink
- <init>(java.lang.String,java.lang.String,javax.swing.event.HyperlinkListener):V
- onClick(java.awt.event.MouseEvent):V
com.intellij.xdebugger.impl.ui.tree.nodes.RestorableStateNode
- com.intellij.xdebugger.XNamedTreeNode
- a:getPath():javax.swing.tree.TreePath
- a:getRawValue():java.lang.String
- a:isComputed():Z
- a:markChanged():V
com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode
- com.intellij.xdebugger.Obsolescent
- javax.swing.tree.TreeNode
- a:getExpression():com.intellij.xdebugger.XExpression
- a:setObsolete():V
c:com.intellij.xdebugger.impl.ui.tree.nodes.WatchNodeImpl
- com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl
- com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode
- <init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.WatchesRootNode,com.intellij.xdebugger.XExpression,com.intellij.xdebugger.frame.XStackFrame):V
- p:<init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,com.intellij.xdebugger.XExpression,com.intellij.xdebugger.frame.XNamedValue):V
- computePresentationIfNeeded():V
- p:evaluated():V
- getExpression():com.intellij.xdebugger.XExpression
- getValueContainer():com.intellij.xdebugger.frame.XValue
c:com.intellij.xdebugger.impl.ui.tree.nodes.WatchesRootNode
- com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode
- <init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.frame.XWatchesView,java.util.List,com.intellij.xdebugger.frame.XStackFrame,Z):V
- <init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.frame.XWatchesView,com.intellij.xdebugger.XExpression[]):V
- addNewWatch():V
- addResultNode(com.intellij.xdebugger.frame.XStackFrame,com.intellij.xdebugger.XExpression):V
- addWatchExpression(com.intellij.xdebugger.frame.XStackFrame,com.intellij.xdebugger.XExpression,I,Z):V
- clearChildren():V
- computeWatches():V
- editWatch(com.intellij.xdebugger.impl.ui.tree.nodes.WatchNodeImpl):V
- getChildren():java.util.List
- getLoadedChildren():java.util.List
- getWatchChildren():java.util.List
- getWatchExpressions():java.util.List
- headerNodesCount():I
- moveDown(com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode):V
- moveUp(com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode):V
- removeAllChildren():V
- removeChildNode(com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode):I
- removeChildren(java.util.Collection):V
- removeResultNode():V
a:com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode
- javax.swing.tree.TreeNode
- pf:myParent:com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode
- pf:myText:com.intellij.ui.SimpleColoredText
- pf:myTree:com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- p:<init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,Z):V
- appendToComponent(com.intellij.ui.ColoredTextContainer):V
- children():java.util.Enumeration
- a:clearChildren():V
- p:fireNodeChanged():V
- p:fireNodeStructureChanged():V
- p:fireNodeStructureChanged(javax.swing.tree.TreeNode):V
- p:fireNodesInserted(java.util.Collection):V
- p:fireNodesRemoved(I[],javax.swing.tree.TreeNode[]):V
- getAllowsChildren():Z
- getChildAt(I):javax.swing.tree.TreeNode
- getChildCount():I
- p:getChildNodes(I[]):javax.swing.tree.TreeNode[]
- a:getChildren():java.util.List
- getIcon():javax.swing.Icon
- getIconTag():java.lang.Object
- getIndex(javax.swing.tree.TreeNode):I
- getLink():com.intellij.xdebugger.frame.XDebuggerTreeNodeHyperlink
- a:getLoadedChildren():java.util.List
- p:getNodesIndices(java.util.Collection):I[]
- getParent():javax.swing.tree.TreeNode
- getPath():javax.swing.tree.TreePath
- getText():com.intellij.ui.SimpleColoredText
- getTree():com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- invokeNodeUpdate(java.lang.Runnable):V
- isLeaf():Z
- p:setIcon(javax.swing.Icon):V
- setLeaf(Z):V
- toString():java.lang.String
a:com.intellij.xdebugger.impl.ui.tree.nodes.XEvaluationCallbackBase
- com.intellij.xdebugger.evaluation.XDebuggerEvaluator$XEvaluationCallback
- <init>():V
c:com.intellij.xdebugger.impl.ui.tree.nodes.XStackFrameNode
- com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode
- <init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.frame.XStackFrame):V
a:com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode
- com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode
- com.intellij.xdebugger.frame.XCompositeNode
- javax.swing.tree.TreeNode
- pf:myValueContainer:com.intellij.xdebugger.frame.XValueContainer
- p:<init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,Z,com.intellij.xdebugger.frame.XValueContainer):V
- addChildren(com.intellij.xdebugger.frame.XValueChildrenList,Z):V
- addTemporaryEditorNode(javax.swing.Icon,java.lang.String):com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode
- clearChildren():V
- p:createLoadingMessageNode():com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode
- getChildren():java.util.List
- getLoadedChildren():java.util.List
- getValueContainer():com.intellij.xdebugger.frame.XValueContainer
- isObsolete():Z
- p:removeChildNode(java.util.List,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode):I
- removeTemporaryEditorNode(com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode):V
- setAlreadySorted(Z):V
- setErrorMessage(java.lang.String):V
- setErrorMessage(java.lang.String,com.intellij.xdebugger.frame.XDebuggerTreeNodeHyperlink):V
- setInfoMessage(java.lang.String,javax.swing.event.HyperlinkListener):V
- setMessage(java.lang.String,javax.swing.Icon,com.intellij.ui.SimpleTextAttributes,com.intellij.xdebugger.frame.XDebuggerTreeNodeHyperlink):V
- setObsolete():V
- setTemporaryMessage(com.intellij.xdebugger.impl.ui.tree.nodes.MessageTreeNode):V
- startComputingChildren():V
- tooManyChildren(I):V
- tooManyChildren(I,java.lang.Runnable):V
c:com.intellij.xdebugger.impl.ui.tree.nodes.XValueGroupNodeImpl
- com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode
- com.intellij.xdebugger.impl.ui.tree.nodes.RestorableStateNode
- <init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,com.intellij.xdebugger.frame.XValueGroup):V
- getName():java.lang.String
- getRawValue():java.lang.String
- isComputed():Z
- markChanged():V
- onExpansion(Z):V
- toString():java.lang.String
c:com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodeImpl
- com.intellij.xdebugger.impl.ui.tree.nodes.XValueContainerNode
- com.intellij.xdebugger.frame.XCompositeNode
- com.intellij.xdebugger.frame.XValueNode
- com.intellij.xdebugger.impl.ui.tree.nodes.RestorableStateNode
- com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodePresentationConfigurator$ConfigurableXValueNode
- sf:COMPARATOR:java.util.Comparator
- <init>(com.intellij.xdebugger.impl.ui.tree.XDebuggerTree,com.intellij.xdebugger.impl.ui.tree.nodes.XDebuggerTreeNode,java.lang.String,com.intellij.xdebugger.frame.XValue):V
- addAdditionalHyperlink(com.intellij.xdebugger.frame.XDebuggerTreeNodeHyperlink):V
- appendToComponent(com.intellij.ui.ColoredTextContainer):V
- applyPresentation(javax.swing.Icon,com.intellij.xdebugger.frame.presentation.XValuePresentation,Z):V
- s:buildText(com.intellij.xdebugger.frame.presentation.XValuePresentation,com.intellij.ui.ColoredTextContainer):V
- s:buildText(com.intellij.xdebugger.frame.presentation.XValuePresentation,com.intellij.ui.ColoredTextContainer,Z):V
- f:calculateEvaluationExpression():org.jetbrains.concurrency.Promise
- clearAdditionalHyperlinks():V
- clearFullValueEvaluator():V
- getFullValueEvaluator():com.intellij.xdebugger.frame.XFullValueEvaluator
- getIconTag():java.lang.Object
- getLink():com.intellij.xdebugger.frame.XDebuggerTreeNodeHyperlink
- getName():java.lang.String
- getRawValue():java.lang.String
- getValuePresentation():com.intellij.xdebugger.frame.presentation.XValuePresentation
- isComputed():Z
- markChanged():V
- setFullValueEvaluator(com.intellij.xdebugger.frame.XFullValueEvaluator):V
- setPresentation(javax.swing.Icon,com.intellij.xdebugger.frame.presentation.XValuePresentation,Z):V
- setPresentation(javax.swing.Icon,java.lang.String,java.lang.String,Z):V
- setValueModificationStarted():V
- toString():java.lang.String
f:com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodePresentationConfigurator
- <init>():V
- s:setPresentation(javax.swing.Icon,com.intellij.xdebugger.frame.presentation.XValuePresentation,Z,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodePresentationConfigurator$ConfigurableXValueNode):V
- s:setPresentation(javax.swing.Icon,java.lang.String,java.lang.String,java.lang.String,Z,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodePresentationConfigurator$ConfigurableXValueNode):V
- s:setPresentation(javax.swing.Icon,java.lang.String,java.lang.String,java.util.function.Function,Z,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodePresentationConfigurator$ConfigurableXValueNode):V
- s:setPresentation(javax.swing.Icon,java.lang.String,java.lang.String,Z,com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodePresentationConfigurator$ConfigurableXValueNode):V
com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodePresentationConfigurator$ConfigurableXValueNode
- a:applyPresentation(javax.swing.Icon,com.intellij.xdebugger.frame.presentation.XValuePresentation,Z):V
a:com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodePresentationConfigurator$ConfigurableXValueNodeImpl
- com.intellij.xdebugger.frame.XValueNode
- com.intellij.xdebugger.impl.ui.tree.nodes.XValueNodePresentationConfigurator$ConfigurableXValueNode
- <init>():V
- setPresentation(javax.swing.Icon,com.intellij.xdebugger.frame.presentation.XValuePresentation,Z):V
- setPresentation(javax.swing.Icon,java.lang.String,java.lang.String,Z):V
f:com.intellij.xdebugger.impl.ui.tree.nodes.XValuePresentationUtil
- <init>():V
- s:appendSeparator(com.intellij.ui.ColoredTextContainer,java.lang.String):V
- s:computeValueText(com.intellij.xdebugger.frame.presentation.XValuePresentation):java.lang.String
- s:isValueTextExtractor(com.intellij.xdebugger.frame.presentation.XValuePresentation$XValueTextRenderer):Z
- s:renderValue(java.lang.String,com.intellij.ui.ColoredTextContainer,com.intellij.ui.SimpleTextAttributes,I,java.lang.String):V
a:com.intellij.xdebugger.impl.ui.tree.nodes.XValueTextRendererBase
- com.intellij.xdebugger.frame.presentation.XValuePresentation$XValueTextRenderer
- <init>():V
- renderKeywordValue(java.lang.String):V
- renderNumericValue(java.lang.String):V
- pa:renderRawValue(java.lang.String,com.intellij.openapi.editor.colors.TextAttributesKey):V
- renderStringValue(java.lang.String):V
- f:renderValue(java.lang.String,com.intellij.openapi.editor.colors.TextAttributesKey):V
c:com.intellij.xdebugger.impl.ui.tree.nodes.XValueTextRendererImpl
- com.intellij.xdebugger.impl.ui.tree.nodes.XValueTextRendererBase
- <init>(com.intellij.ui.ColoredTextContainer):V
- renderComment(java.lang.String):V
- renderError(java.lang.String):V
- p:renderRawValue(java.lang.String,com.intellij.openapi.editor.colors.TextAttributesKey):V
- renderSpecialSymbol(java.lang.String):V
- renderStringValue(java.lang.String,java.lang.String,I):V
- renderValue(java.lang.String):V
c:com.intellij.xdebugger.memory.action.ShowClassesWithDiffAction
- com.intellij.openapi.actionSystem.ToggleAction
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.xdebugger.memory.action.SwitchUpdateModeAction
- com.intellij.openapi.actionSystem.ToggleAction
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.xdebugger.memory.component.InstancesTracker
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- add(java.lang.String,com.intellij.xdebugger.memory.tracking.TrackingType):V
- addTrackerListener(com.intellij.xdebugger.memory.event.InstancesTrackerListener):V
- addTrackerListener(com.intellij.xdebugger.memory.event.InstancesTrackerListener,com.intellij.openapi.Disposable):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.xdebugger.memory.component.InstancesTracker
- getState():com.intellij.xdebugger.memory.component.InstancesTracker$MyState
- getTrackedClasses():java.util.Map
- getTrackingType(java.lang.String):com.intellij.xdebugger.memory.tracking.TrackingType
- isBackgroundTrackingEnabled():Z
- isTracked(java.lang.String):Z
- loadState(com.intellij.xdebugger.memory.component.InstancesTracker$MyState):V
- remove(java.lang.String):V
- removeTrackerListener(com.intellij.xdebugger.memory.event.InstancesTrackerListener):V
- setBackgroundTackingEnabled(Z):V
c:com.intellij.xdebugger.memory.component.MemoryViewManager
- com.intellij.openapi.components.PersistentStateComponent
- sf:MEMORY_VIEW_CONTENT:java.lang.String
- <init>():V
- addMemoryViewManagerListener(com.intellij.xdebugger.memory.event.MemoryViewManagerListener,com.intellij.openapi.Disposable):V
- s:getInstance():com.intellij.xdebugger.memory.component.MemoryViewManager
- getState():com.intellij.xdebugger.memory.component.MemoryViewManagerState
- isAutoUpdateModeEnabled():Z
- isNeedShowDiffOnly():Z
- isNeedShowInstancesOnly():Z
- isNeedShowTrackedOnly():Z
- loadState(com.intellij.xdebugger.memory.component.MemoryViewManagerState):V
- setAutoUpdate(Z):V
- setShowDiffOnly(Z):V
- setShowTrackedOnly(Z):V
- setShowWithInstancesOnly(Z):V
f:com.intellij.xdebugger.memory.component.MemoryViewManagerState
- isAutoUpdateModeOn:Z
- isShowTrackedOnly:Z
- isShowWithDiffOnly:Z
- isShowWithInstancesOnly:Z
com.intellij.xdebugger.memory.event.InstancesTrackerListener
- java.util.EventListener
- backgroundTrackingValueChanged(Z):V
- classChanged(java.lang.String,com.intellij.xdebugger.memory.tracking.TrackingType):V
- classRemoved(java.lang.String):V
com.intellij.xdebugger.memory.event.MemoryViewManagerListener
- java.util.EventListener
- a:stateChanged(com.intellij.xdebugger.memory.component.MemoryViewManagerState):V
com.intellij.xdebugger.memory.tracking.TrackerForNewInstancesBase
- a:getCount():I
- a:isReady():Z
e:com.intellij.xdebugger.memory.tracking.TrackingType
- java.lang.Enum
- sf:CREATION:com.intellij.xdebugger.memory.tracking.TrackingType
- description():java.lang.String
- s:valueOf(java.lang.String):com.intellij.xdebugger.memory.tracking.TrackingType
- s:values():com.intellij.xdebugger.memory.tracking.TrackingType[]
a:com.intellij.xdebugger.memory.ui.ClassesFilteredViewBase
- com.intellij.util.ui.components.BorderLayoutPanel
- com.intellij.openapi.Disposable
- psf:DEFAULT_BATCH_SIZE:I
- psf:DELAY_BEFORE_INSTANCES_QUERY_COEFFICIENT:D
- psf:MAX_DELAY_MILLIS:D
- p:myIsActive:Z
- pf:myProject:com.intellij.openapi.project.Project
- pf:mySingleAlarm:com.intellij.xdebugger.memory.utils.SingleAlarmWithMutableDelay
- <init>(com.intellij.xdebugger.XDebugSession):V
- p:createClassesTable(com.intellij.xdebugger.memory.component.MemoryViewManagerState):com.intellij.xdebugger.memory.ui.ClassesTable
- p:doActivate():V
- p:doPause():V
- p:getAdditionalSessionListener():com.intellij.xdebugger.XDebugSessionListener
- getData(java.lang.String):java.lang.Object
- getDefaultFocusedComponent():javax.swing.JComponent
- pa:getInstancesWindow(com.intellij.xdebugger.memory.ui.TypeInfo,com.intellij.xdebugger.XDebugSession):com.intellij.xdebugger.memory.ui.InstancesWindowBase
- p:getStrategy(com.intellij.xdebugger.memory.ui.TypeInfo):com.intellij.xdebugger.memory.tracking.TrackerForNewInstancesBase
- getTable():com.intellij.xdebugger.memory.ui.ClassesTable
- p:handleClassSelection(com.intellij.xdebugger.memory.ui.TypeInfo):V
- pa:scheduleUpdateClassesCommand(com.intellij.xdebugger.frame.XSuspendContext):V
- p:updateClassesAndCounts(Z):V
- p:viewUpdated():V
c:com.intellij.xdebugger.memory.ui.ClassesTable
- com.intellij.ui.table.JBTable
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.DataProvider
- sf:REF_COUNT_PROVIDER_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:SELECTED_CLASS_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.memory.ui.ClassesFilteredViewBase,Z,Z,Z):V
- clean(java.lang.String):V
- p:customizeColumns():V
- dispose():V
- getClassByName(java.lang.String):com.intellij.xdebugger.memory.ui.TypeInfo
- p:getColumnDescriptors():com.intellij.xdebugger.memory.utils.AbstractTableColumnDescriptor[]
- getData(java.lang.String):java.lang.Object
- getSelectedClass():com.intellij.xdebugger.memory.ui.TypeInfo
- p:getTableModel():com.intellij.xdebugger.memory.ui.ClassesTable$DiffViewTableModel
- p:getTableSortingKeys():java.util.List
- p:getTypeInfoAt(I):com.intellij.xdebugger.memory.ui.TypeInfo
- isInClickableMode():Z
- makeClickable(java.lang.Runnable):V
- setBusy(Z):V
- updateClassesOnly(java.util.List):V
- updateContent(java.util.Map):V
c:com.intellij.xdebugger.memory.ui.ClassesTable$DiffViewTableModel
- com.intellij.xdebugger.memory.utils.AbstractTableModelWithColumns
- sf:CLASSNAME_COLUMN_INDEX:I
- sf:DIFF_COLUMN_INDEX:I
- getRowCount():I
a:com.intellij.xdebugger.memory.ui.ClassesTable$MyTableCellRenderer
- com.intellij.ui.ColoredTableCellRenderer
- <init>():V
- pa:addText(java.lang.Object,Z,I):V
- p:customizeCellRenderer(javax.swing.JTable,java.lang.Object,Z,Z,I,I):V
com.intellij.xdebugger.memory.ui.ClassesTable$ReferenceCountProvider
- a:getDiffCount(com.intellij.xdebugger.memory.ui.TypeInfo):I
- a:getNewInstancesCount(com.intellij.xdebugger.memory.ui.TypeInfo):I
- a:getTotalCount(com.intellij.xdebugger.memory.ui.TypeInfo):I
c:com.intellij.xdebugger.memory.ui.InstancesTree
- com.intellij.xdebugger.impl.ui.tree.XDebuggerTree
- <init>(com.intellij.openapi.project.Project,com.intellij.xdebugger.evaluation.XDebuggerEditorsProvider,com.intellij.xdebugger.impl.frame.XValueMarkers,java.lang.Runnable):V
- addChildren(com.intellij.xdebugger.frame.XValueChildrenList,Z):V
- rebuildTree(com.intellij.xdebugger.memory.ui.InstancesTree$RebuildPolicy):V
e:com.intellij.xdebugger.memory.ui.InstancesTree$RebuildPolicy
- java.lang.Enum
- sf:ONLY_UPDATE_LABELS:com.intellij.xdebugger.memory.ui.InstancesTree$RebuildPolicy
- sf:RELOAD_INSTANCES:com.intellij.xdebugger.memory.ui.InstancesTree$RebuildPolicy
- s:valueOf(java.lang.String):com.intellij.xdebugger.memory.ui.InstancesTree$RebuildPolicy
- s:values():com.intellij.xdebugger.memory.ui.InstancesTree$RebuildPolicy[]
a:com.intellij.xdebugger.memory.ui.InstancesViewBase
- com.intellij.ui.components.JBPanel
- com.intellij.openapi.Disposable
- <init>(java.awt.LayoutManager,com.intellij.xdebugger.XDebugSession,com.intellij.xdebugger.memory.utils.InstancesProvider):V
- dispose():V
- getInstancesProvider():com.intellij.xdebugger.memory.utils.InstancesProvider
- pa:getInstancesTree():com.intellij.xdebugger.memory.ui.InstancesTree
- p:getValueMarkers(com.intellij.xdebugger.XDebugSession):com.intellij.xdebugger.impl.frame.XValueMarkers
a:com.intellij.xdebugger.memory.ui.InstancesWindowBase
- com.intellij.openapi.ui.DialogWrapper
- psf:DEFAULT_WINDOW_HEIGHT:I
- psf:DEFAULT_WINDOW_WIDTH:I
- pf:className:java.lang.String
- <init>(com.intellij.xdebugger.XDebugSession,java.lang.String):V
- p:addWarningMessage(java.lang.String):V
- p:createActions():javax.swing.Action[]
- p:getDimensionServiceKey():java.lang.String
com.intellij.xdebugger.memory.ui.ReferenceInfo
com.intellij.xdebugger.memory.ui.TypeInfo
- a:canGetInstanceInfo():Z
- a:getInstances(I):java.util.List
- a:name():java.lang.String
a:com.intellij.xdebugger.memory.utils.AbstractTableColumnDescriptor
- p:<init>(java.lang.String,java.lang.Class):V
- getColumnClass():java.lang.Class
- getName():java.lang.String
- a:getValue(I):java.lang.Object
a:com.intellij.xdebugger.memory.utils.AbstractTableModelWithColumns
- javax.swing.table.AbstractTableModel
- <init>(com.intellij.xdebugger.memory.utils.AbstractTableModelWithColumns$TableColumnDescriptor[]):V
- getColumnClass(I):java.lang.Class
- getColumnCount():I
- getColumnName(I):java.lang.String
- getValueAt(I,I):java.lang.Object
com.intellij.xdebugger.memory.utils.InstancesProvider
- a:getInstances(I):java.util.List
f:com.intellij.xdebugger.memory.utils.KeyboardUtils
- <init>():V
- s:isBackSpace(I):Z
- s:isEnterKey(I):Z
- s:isPartOfJavaClassName(C):Z
- s:isUpDownKey(I):Z
c:com.intellij.xdebugger.memory.utils.SingleAlarmWithMutableDelay
- <init>(com.intellij.xdebugger.memory.utils.SingleAlarmWithMutableDelay$Task,com.intellij.openapi.Disposable):V
- cancelAllRequests():V
- cancelAndRequest(com.intellij.xdebugger.frame.XSuspendContext):V
- cancelAndRequestImmediate(com.intellij.xdebugger.frame.XSuspendContext):V
- setDelay(I):V
com.intellij.xdebugger.memory.utils.SingleAlarmWithMutableDelay$Task
- a:run(com.intellij.xdebugger.frame.XSuspendContext):V
