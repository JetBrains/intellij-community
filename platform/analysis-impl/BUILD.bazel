### auto-generated section `build intellij.platform.analysis.impl` start
load("@rules_jvm//:jvm.bzl", "jvm_library", "resourcegroup")

resourcegroup(
  name = "analysis-impl_resources",
  srcs = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "analysis-impl",
  module_name = "intellij.platform.analysis.impl",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java", "src/**/*.form", "gen/**/*.kt", "gen/**/*.java"], allow_empty = True),
  resources = [":analysis-impl_resources"],
  deps = [
    "//platform/analysis-api:analysis",
    "//platform/util/concurrency",
    "//platform/core-api:core",
    "//platform/core-impl",
    "//jps/model-api:model",
    "//jps/model-serialization",
    "//platform/projectModel-api:projectModel",
    "//platform/util",
    "//platform/editor-ui-api:editor-ui",
    "//platform/extensions",
    "//platform/projectModel-impl",
    "//platform/editor-ui-ex:editor-ex",
    "//platform/indexing-api:indexing",
    "//platform/indexing-impl",
    "@lib//:kotlin-stdlib",
    "//platform/util:util-ui",
    "//libraries/gson",
    "//libraries/fastutil",
    "//platform/core-ui",
    "//platform/code-style-api:codeStyle",
    "//platform/platform-util-io:ide-util-io",
    "//libraries/stream",
    "//platform/util/jdom",
    "@lib//:opentelemetry",
    "@lib//:opentelemetry-semconv",
    "//platform/diagnostic/telemetry",
    "//platform/util/text-matching",
    "//platform/diagnostic",
    "//libraries/jackson/databind",
    "//libraries/jackson/jackson",
    "//libraries/jackson/module-kotlin:libraries-jackson-module-kotlin",
    "//platform/util-class-loader:util-classLoader",
    "//libraries/kotlinx/serialization/core",
    "//libraries/kotlinx/serialization/json",
  ],
  exports = ["//platform/projectModel-impl"]
)
### auto-generated section `build intellij.platform.analysis.impl` end