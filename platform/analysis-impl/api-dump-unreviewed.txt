com.intellij.codeHighlighting.DirtyScopeTrackingHighlightingPassFactory
- com.intellij.codeHighlighting.TextEditorHighlightingPassFactory
- a:getPassId():I
a:com.intellij.codeHighlighting.EditorBoundHighlightingPass
- com.intellij.codeHighlighting.TextEditorHighlightingPass
- pf:myEditor:com.intellij.openapi.editor.Editor
- pf:myFile:com.intellij.psi.PsiFile
- p:<init>(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z):V
- s:assertHighlightingPassNotRunning():V
- ps:runPass():com.intellij.openapi.application.AccessToken
com.intellij.codeHighlighting.MainHighlightingPassFactory
- com.intellij.codeHighlighting.TextEditorHighlightingPassFactory
- a:createMainHighlightingPass(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,com.intellij.codeInsight.daemon.impl.HighlightInfoProcessor):com.intellij.codeHighlighting.TextEditorHighlightingPass
com.intellij.codeHighlighting.Pass
- sf:EXTERNAL_TOOLS:I
- sf:INJECTED_GENERAL:I
- sf:LAST_PASS:I
- sf:LINE_MARKERS:I
- sf:LOCAL_INSPECTIONS:I
- sf:POPUP_HINTS:I
- sf:SLOW_LINE_MARKERS:I
- sf:UPDATE_ALL:I
- sf:UPDATE_FOLDING:I
- sf:WHOLE_FILE_LOCAL_INSPECTIONS:I
- sf:WOLF:I
c:com.intellij.codeHighlighting.RainbowHighlighter
- sf:DEFAULT_RAINBOW_ON:java.lang.Boolean
- sf:RAINBOW_ANCHOR:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:RAINBOW_COLOR_KEYS:com.intellij.openapi.editor.colors.TextAttributesKey[]
- sf:RAINBOW_ELEMENT:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:RAINBOW_GRADIENT_DEMO:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:RAINBOW_TYPE:java.lang.String
- <init>(com.intellij.openapi.editor.colors.TextAttributesScheme):V
- s:colorDistance01(java.awt.Color,java.awt.Color):D
- s:createLazyRainbowKeyIfNeed(com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.colors.EditorColorsScheme):V
- s:createRainbowAttribute(java.awt.Color):com.intellij.openapi.editor.markup.TextAttributes
- s:createRainbowHLM():java.util.Map
- s:generatePaletteExample(java.lang.String):java.lang.String
- getColorsCount():I
- getInfo(I,I,I,com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.codeInsight.daemon.impl.HighlightInfo
- getInfo(I,com.intellij.psi.PsiElement,com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.codeInsight.daemon.impl.HighlightInfo
- s:getRainbowAttrWithLazyCreation(com.intellij.openapi.editor.colors.TextAttributesScheme,I):com.intellij.openapi.editor.colors.TextAttributesKey
- s:getRainbowRegereratedKeyMap():java.util.Map
- s:getRainbowTempKeys(com.intellij.openapi.editor.colors.TextAttributesScheme):com.intellij.openapi.editor.colors.TextAttributesKey[]
- s:isRainbowEnabled(com.intellij.openapi.editor.colors.TextAttributesScheme,com.intellij.lang.Language):java.lang.Boolean
- s:isRainbowEnabledWithInheritance(com.intellij.openapi.editor.colors.TextAttributesScheme,com.intellij.lang.Language):Z
- s:isRainbowKey(java.lang.Object):Z
- s:isRainbowTempKey(com.intellij.openapi.editor.colors.TextAttributesKey):Z
- s:resetRainbowGeneratedColors(com.intellij.openapi.editor.colors.TextAttributesScheme):V
- s:setRainbowEnabled(com.intellij.openapi.options.SchemeMetaInfo,com.intellij.lang.Language,java.lang.Boolean):V
- s:testRainbowGenerateColors(com.intellij.openapi.editor.colors.TextAttributesScheme):java.awt.Color[]
- s:transferRainbowState(com.intellij.openapi.options.SchemeMetaInfo,com.intellij.openapi.options.SchemeMetaInfo):V
a:com.intellij.codeHighlighting.TextEditorHighlightingPass
- com.intellij.codeHighlighting.HighlightingPass
- sf:EMPTY_ARRAY:com.intellij.codeHighlighting.TextEditorHighlightingPass[]
- pf:myDocument:com.intellij.openapi.editor.Document
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,Z):V
- f:applyInformationToEditor():V
- f:collectInformation(com.intellij.openapi.progress.ProgressIndicator):V
- a:doApplyInformationToEditor():V
- a:doCollectInformation(com.intellij.openapi.progress.ProgressIndicator):V
- getColorsScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- f:getCompletionPredecessorIds():I[]
- getDocument():com.intellij.openapi.editor.Document
- getExpiredCondition():com.intellij.openapi.util.Condition
- f:getId():I
- getInfos():java.util.List
- f:getStartingPredecessorIds():I[]
- p:isDumbMode():Z
- isRunIntentionPassAfter():Z
- p:isValid():Z
- setColorsScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- f:setCompletionPredecessorIds(I[]):V
- f:setId(I):V
- f:setStartingPredecessorIds(I[]):V
com.intellij.codeHighlighting.TextEditorHighlightingPassFactory
- com.intellij.openapi.project.PossiblyDumbAware
- a:createHighlightingPass(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.codeHighlighting.TextEditorHighlightingPass
com.intellij.codeHighlighting.TextEditorHighlightingPassFactoryRegistrar
- a:registerHighlightingPassFactory(com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar,com.intellij.openapi.project.Project):V
a:com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar
- registerTextEditorHighlightingPass(com.intellij.codeHighlighting.TextEditorHighlightingPassFactory,com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar$Anchor,I,Z,Z):I
- a:registerTextEditorHighlightingPass(com.intellij.codeHighlighting.TextEditorHighlightingPassFactory,I[],I[],Z,I):I
e:com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar$Anchor
- java.lang.Enum
- sf:AFTER:com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar$Anchor
- sf:BEFORE:com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar$Anchor
- sf:FIRST:com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar$Anchor
- sf:LAST:com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar$Anchor
- s:valueOf(java.lang.String):com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar$Anchor
- s:values():com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar$Anchor[]
a:com.intellij.codeInsight.AutoPopupController
- sf:ALLOW_AUTO_POPUP_FOR_SLASHES_IN_PATHS:com.intellij.openapi.util.Key
- sf:ALWAYS_AUTO_POPUP:com.intellij.openapi.util.Key
- sf:AUTO_POPUP_ON_FOCUS_GAINED:com.intellij.openapi.util.Key
- sf:NO_ADS:com.intellij.openapi.util.Key
- sf:SHOW_BOTTOM_PANEL_IN_LOOKUP_UI:com.intellij.openapi.util.Key
- <init>():V
- a:autoPopupMemberLookup(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.completion.CompletionType,com.intellij.openapi.util.Condition):V
- a:autoPopupMemberLookup(com.intellij.openapi.editor.Editor,com.intellij.openapi.util.Condition):V
- a:autoPopupParameterInfo(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):V
- a:cancelAllRequests():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.AutoPopupController
- a:scheduleAutoPopup(com.intellij.openapi.editor.Editor):V
- a:scheduleAutoPopup(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.completion.CompletionType,com.intellij.openapi.util.Condition):V
- a:waitForDelayedActions(J,java.util.concurrent.TimeUnit):V
c:com.intellij.codeInsight.CodeInsightSettings
- com.intellij.openapi.components.PersistentStateComponent
- java.lang.Cloneable
- ADD_IMPORTS_ON_PASTE:I
- ADD_MEMBER_IMPORTS_ON_THE_FLY:Z
- ADD_UNAMBIGIOUS_IMPORTS_ON_THE_FLY:Z
- sf:ALL:I
- sf:ASK:I
- AUTOCOMPLETE_ON_CODE_COMPLETION:Z
- AUTOCOMPLETE_ON_SMART_TYPE_COMPLETION:Z
- AUTOINSERT_PAIR_BRACKET:Z
- AUTOINSERT_PAIR_QUOTE:Z
- AUTO_POPUP_COMPLETION_LOOKUP:Z
- AUTO_POPUP_JAVADOC_INFO:Z
- AUTO_POPUP_PARAMETER_INFO:Z
- CLOSE_COMMENT_ON_ENTER:Z
- COMPLETION_CASE_SENSITIVE:I
- ENABLE_SECOND_REFORMAT:Z
- EXCLUDED_PACKAGES:java.lang.String[]
- sf:FIRST_LETTER:I
- HIGHLIGHT_BRACES:Z
- HIGHLIGHT_IDENTIFIER_UNDER_CARET:Z
- HIGHLIGHT_SCOPE:Z
- sf:INDENT_BLOCK:I
- sf:INDENT_EACH_LINE:I
- INDENT_TO_CARET_ON_PASTE:Z
- INSERT_BRACE_ON_ENTER:Z
- INSERT_SCRIPTLET_END_ON_ENTER:Z
- JAVADOC_GENERATE_CLOSING_TAG:Z
- JAVADOC_INFO_DELAY:I
- sf:JAVADOC_INFO_DELAY_RANGE:com.intellij.ide.ui.UINumericRange
- JAVADOC_STUB_ON_ENTER:Z
- JSP_ADD_UNAMBIGIOUS_IMPORTS_ON_THE_FLY:Z
- sf:NO:I
- sf:NONE:I
- sf:NO_REFORMAT:I
- OPTIMIZE_IMPORTS_ON_THE_FLY:Z
- PARAMETER_INFO_DELAY:I
- sf:PARAMETER_INFO_DELAY_RANGE:com.intellij.ide.ui.UINumericRange
- sf:REFORMAT_BLOCK:I
- REFORMAT_BLOCK_ON_RBRACE:Z
- REFORMAT_ON_PASTE:I
- SELECT_AUTOPOPUP_SUGGESTIONS_BY_CHARS:Z
- SHOW_FULL_SIGNATURES_IN_PARAMETER_INFO:Z
- SHOW_PARAMETER_NAME_HINTS_ON_COMPLETION:Z
- SMART_END_ACTION:Z
- SMART_INDENT_ON_ENTER:Z
- SURROUND_SELECTION_ON_QUOTE_TYPED:Z
- TAB_EXITS_BRACKETS_AND_QUOTES:Z
- USE_ACCESSORS_IN_EQUALS_HASHCODE:Z
- USE_INSTANCEOF_ON_EQUALS_PARAMETER:Z
- sf:YES:I
- <init>():V
- addPropertyChangeListener(java.beans.PropertyChangeListener,com.intellij.openapi.Disposable):V
- clone():com.intellij.codeInsight.CodeInsightSettings
- equals(java.lang.Object):Z
- getBackspaceMode():com.intellij.codeInsight.editorActions.SmartBackspaceMode
- getCompletionCaseSensitive():I
- s:getInstance():com.intellij.codeInsight.CodeInsightSettings
- getState():org.jdom.Element
- isSelectAutopopupSuggestionsByChars():Z
- loadState(org.jdom.Element):V
- noStateLoaded():V
- setBackspaceMode(com.intellij.codeInsight.editorActions.SmartBackspaceMode):V
- setCompletionCaseSensitive(I):V
- setSelectAutopopupSuggestionsByChars(Z):V
- writeExternal(org.jdom.Element):V
com.intellij.codeInsight.TargetElementEvaluatorEx
- com.intellij.codeInsight.TargetElementEvaluator
- a:isIdentifierPart(com.intellij.psi.PsiFile,java.lang.CharSequence,I):Z
a:com.intellij.codeInsight.TargetElementEvaluatorEx2
- com.intellij.codeInsight.TargetElementEvaluator
- <init>():V
- acceptImplementationForReference(com.intellij.psi.PsiReference,com.intellij.psi.PsiElement):Z
- adjustElement(com.intellij.openapi.editor.Editor,I,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- adjustReference(com.intellij.psi.PsiReference):com.intellij.psi.PsiElement
- adjustReferenceOrReferencedElement(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,I,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- adjustTargetElement(com.intellij.openapi.editor.Editor,I,I,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getGotoDeclarationTarget(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getNamedElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getSearchScope(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):com.intellij.psi.search.SearchScope
- getTargetCandidates(com.intellij.psi.PsiReference):java.util.Collection
- includeSelfInGotoImplementation(com.intellij.psi.PsiElement):Z
- isAcceptableNamedParent(com.intellij.psi.PsiElement):Z
- isAcceptableReferencedElement(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.util.ThreeState
f:com.intellij.codeInsight.TargetElementUtilBase
- sf:ELEMENT_NAME_ACCEPTED:I
- sf:REFERENCED_ELEMENT_ACCEPTED:I
- <init>():V
- s:adjustOffset(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,I):I
- s:findReference(com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiReference
- s:findReferenceWithoutExpectedCaret(com.intellij.openapi.editor.Editor):com.intellij.psi.PsiReference
- s:findTargetElement(com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiElement
- s:findTargetElement(com.intellij.openapi.editor.Editor,I,I):com.intellij.psi.PsiElement
- s:getElementEvaluatorsEx2(com.intellij.lang.Language):com.intellij.codeInsight.TargetElementEvaluatorEx2
- s:getNamedElement(com.intellij.psi.PsiElement,I):com.intellij.psi.PsiElement
c:com.intellij.codeInsight.completion.AddSpaceInsertHandler
- com.intellij.codeInsight.completion.InsertHandler
- sf:INSTANCE:com.intellij.codeInsight.completion.InsertHandler
- sf:INSTANCE_WITH_AUTO_POPUP:com.intellij.codeInsight.completion.InsertHandler
- <init>(java.lang.String,Z):V
- <init>(Z):V
- handleInsert(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement):V
- p:shouldOverwriteExistingSpace(com.intellij.openapi.editor.Editor):Z
c:com.intellij.codeInsight.completion.BaseCompletionLookupArranger
- com.intellij.codeInsight.lookup.LookupArranger
- com.intellij.codeInsight.completion.CompletionLookupArranger
- sf:FORCE_MIDDLE_MATCH:com.intellij.openapi.util.Key
- pf:myProcess:com.intellij.codeInsight.completion.CompletionProcessEx
- <init>(com.intellij.codeInsight.completion.CompletionProcessEx):V
- addElement(com.intellij.codeInsight.completion.CompletionResult):V
- addElement(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.CompletionSorter,com.intellij.codeInsight.completion.PrefixMatcher,com.intellij.codeInsight.lookup.LookupElementPresentation):V
- addElement(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.lookup.LookupElementPresentation):V
- p:applyFinalSorter(java.lang.Iterable):java.lang.Iterable
- arrangeItems():com.intellij.openapi.util.Pair
- arrangeItems(com.intellij.codeInsight.lookup.Lookup,Z):com.intellij.openapi.util.Pair
- createEmptyCopy():com.intellij.codeInsight.lookup.LookupArranger
- p:getExactMatches(java.util.List):java.util.List
- getLastLookupPrefix():java.lang.String
- getRelevanceObjects(java.lang.Iterable,Z):java.util.Map
- p:isAlphaSorted():Z
- isCompletion():Z
- itemSelected(com.intellij.codeInsight.lookup.LookupElement,C):V
- prefixChanged(com.intellij.codeInsight.lookup.Lookup):V
- prefixReplaced(com.intellij.codeInsight.lookup.Lookup,java.lang.String):V
- prefixTruncated(com.intellij.codeInsight.lookup.LookupEx,I):V
- p:removeItem(com.intellij.codeInsight.lookup.LookupElement,com.intellij.util.ProcessingContext):V
c:com.intellij.codeInsight.completion.BaseCompletionService
- com.intellij.codeInsight.completion.CompletionService
- sf:FORBID_WORD_COMPLETION:com.intellij.openapi.util.Key
- sf:LOOKUP_ELEMENT_RESULT_ADD_TIMESTAMP_MILLIS:com.intellij.openapi.util.Key
- sf:LOOKUP_ELEMENT_RESULT_SET_ORDER:com.intellij.openapi.util.Key
- p:apiCompletionProcess:com.intellij.codeInsight.completion.CompletionProcess
- <init>():V
- p:addWeighersBefore(com.intellij.codeInsight.completion.impl.CompletionSorterImpl):com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- p:createMatcher(java.lang.String,Z):com.intellij.codeInsight.completion.PrefixMatcher
- defaultSorter(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.PrefixMatcher):com.intellij.codeInsight.completion.CompletionSorter
- emptySorter():com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- getCurrentCompletion():com.intellij.codeInsight.completion.CompletionProcess
- performCompletion(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.util.Consumer):V
- p:processStatsWeigher(com.intellij.codeInsight.completion.impl.CompletionSorterImpl,com.intellij.psi.Weigher,com.intellij.codeInsight.completion.CompletionLocation):com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- setAdvertisementText(java.lang.String):V
- p:suggestPrefix(com.intellij.codeInsight.completion.CompletionParameters):java.lang.String
pc:com.intellij.codeInsight.completion.BaseCompletionService$BaseCompletionResultSet
- com.intellij.codeInsight.completion.CompletionResultSet
- pf:myOriginal:com.intellij.codeInsight.completion.BaseCompletionService$BaseCompletionResultSet
- pf:parameters:com.intellij.codeInsight.completion.CompletionParameters
- p:sorter:com.intellij.codeInsight.completion.CompletionSorter
- p:<init>(java.util.function.Consumer,com.intellij.codeInsight.completion.PrefixMatcher,com.intellij.codeInsight.completion.CompletionContributor,com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionSorter,com.intellij.codeInsight.completion.BaseCompletionService$BaseCompletionResultSet):V
- addElement(com.intellij.codeInsight.lookup.LookupElement):V
- addLookupAdvertisement(java.lang.String):V
- caseInsensitive():com.intellij.codeInsight.completion.CompletionResultSet
- passResult(com.intellij.codeInsight.completion.CompletionResult):V
- restartCompletionOnPrefixChange(com.intellij.patterns.ElementPattern):V
- restartCompletionWhenNothingMatches():V
- stopHere():V
- withPrefixMatcher(com.intellij.codeInsight.completion.PrefixMatcher):com.intellij.codeInsight.completion.CompletionResultSet
- withPrefixMatcher(java.lang.String):com.intellij.codeInsight.completion.CompletionResultSet
- withRelevanceSorter(com.intellij.codeInsight.completion.CompletionSorter):com.intellij.codeInsight.completion.CompletionResultSet
c:com.intellij.codeInsight.completion.CompletionContext
- sf:COMPLETION_CONTEXT_KEY:com.intellij.openapi.util.Key
- f:file:com.intellij.psi.PsiFile
- <init>(com.intellij.psi.PsiFile,com.intellij.codeInsight.completion.OffsetMap):V
- getOffsetMap():com.intellij.codeInsight.completion.OffsetMap
- getStartOffset():I
c:com.intellij.codeInsight.completion.CompletionData
- sf:LOOKUP_ELEMENT_PSI_REFERENCE:com.intellij.openapi.util.Key
- sf:NOT_JAVA_ID:com.intellij.patterns.ObjectPattern$Capture
- pf:myGenericVariant:com.intellij.codeInsight.completion.CompletionVariant
- p:<init>():V
- addKeywordVariants(java.util.Set,com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):V
- p:addLookupItem(java.util.Set,com.intellij.codeInsight.TailType,java.lang.Object,com.intellij.codeInsight.completion.CompletionVariant):V
- p:completeReference(com.intellij.psi.PsiReference,com.intellij.psi.PsiElement,java.util.Set,com.intellij.codeInsight.TailType,com.intellij.psi.filters.ElementFilter,com.intellij.codeInsight.completion.CompletionVariant):V
- completeReference(com.intellij.psi.PsiReference,java.util.Set,com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):V
- findPrefix(com.intellij.psi.PsiElement,I):java.lang.String
- s:findPrefixStatic(com.intellij.psi.PsiElement,I):java.lang.String
- findVariants(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):com.intellij.codeInsight.completion.CompletionVariant[]
- ps:getReferences(com.intellij.psi.impl.source.resolve.reference.impl.PsiMultiReference):com.intellij.psi.PsiReference[]
- s:objectToLookupItem(java.lang.Object):com.intellij.codeInsight.lookup.LookupElement
- p:registerVariant(com.intellij.codeInsight.completion.CompletionVariant):V
com.intellij.codeInsight.completion.CompletionLookupArranger
- sf:PREFIX_CHANGES:com.intellij.openapi.util.Key
- sf:WEIGHING_CONTEXT:com.intellij.openapi.util.Key
- a:addElement(com.intellij.codeInsight.completion.CompletionResult):V
- a:addElement(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.CompletionSorter,com.intellij.codeInsight.completion.PrefixMatcher,com.intellij.codeInsight.lookup.LookupElementPresentation):V
- a:arrangeItems():com.intellij.openapi.util.Pair
- a:itemMatcher(com.intellij.codeInsight.lookup.LookupElement):com.intellij.codeInsight.completion.PrefixMatcher
com.intellij.codeInsight.completion.CompletionProcessBase
- com.intellij.codeInsight.completion.CompletionProcess
- a:addWatchedPrefix(I,com.intellij.patterns.ElementPattern):V
f:com.intellij.codeInsight.completion.CompletionUtil
- sf:DUMMY_IDENTIFIER:java.lang.String
- sf:DUMMY_IDENTIFIER_TRIMMED:java.lang.String
- <init>():V
- s:emulateInsertion(com.intellij.codeInsight.completion.InsertionContext,I,com.intellij.codeInsight.lookup.LookupElement):com.intellij.codeInsight.completion.InsertionContext
- s:emulateInsertion(com.intellij.codeInsight.lookup.LookupElement,I,com.intellij.codeInsight.completion.InsertionContext):V
- s:findAlphanumericPrefix(com.intellij.codeInsight.completion.CompletionParameters):java.lang.String
- s:findIdentifierPrefix(com.intellij.openapi.editor.Document,I,com.intellij.patterns.ElementPattern,com.intellij.patterns.ElementPattern):java.lang.String
- s:findIdentifierPrefix(com.intellij.psi.PsiElement,I,com.intellij.patterns.ElementPattern,com.intellij.patterns.ElementPattern):java.lang.String
- s:findJavaIdentifierPrefix(com.intellij.codeInsight.completion.CompletionParameters):java.lang.String
- s:findJavaIdentifierPrefix(com.intellij.psi.PsiElement,I):java.lang.String
- s:findReferenceOrAlphanumericPrefix(com.intellij.codeInsight.completion.CompletionParameters):java.lang.String
- s:findReferencePrefix(com.intellij.codeInsight.completion.CompletionParameters):java.lang.String
- s:findReferencePrefix(com.intellij.psi.PsiElement,I):java.lang.String
- s:getCompletionDataByElement(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):com.intellij.codeInsight.completion.CompletionData
- s:getOriginalElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getOriginalOrSelf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getTargetElement(com.intellij.codeInsight.lookup.LookupElement):com.intellij.psi.PsiElement
- s:iterateLookupStrings(com.intellij.codeInsight.lookup.LookupElement):java.lang.Iterable
- s:newContext(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement,I,I):com.intellij.codeInsight.completion.InsertionContext
- s:shouldShowFeature(com.intellij.codeInsight.completion.CompletionParameters,java.lang.String):Z
- s:shouldShowFeature(com.intellij.openapi.project.Project,java.lang.String):Z
c:com.intellij.codeInsight.completion.CompletionVariant
- psf:DEFAULT_TAIL_TYPE:com.intellij.codeInsight.TailType
- <init>():V
- <init>(com.intellij.psi.filters.ElementFilter):V
- <init>(java.lang.Class,com.intellij.psi.filters.ElementFilter):V
- addCompletion(java.lang.String):V
- addCompletion(java.lang.String,com.intellij.codeInsight.TailType):V
- addCompletionFilter(com.intellij.psi.filters.ElementFilter):V
- addCompletionFilter(com.intellij.psi.filters.ElementFilter,com.intellij.codeInsight.TailType):V
- includeScopeClass(java.lang.Class):V
- includeScopeClass(java.lang.Class,Z):V
- setCaseInsensitive(Z):V
- setInsertHandler(com.intellij.codeInsight.completion.InsertHandler):V
c:com.intellij.codeInsight.completion.CompositeDeclarativeInsertHandler
- com.intellij.codeInsight.completion.InsertHandler
- sf:Companion:com.intellij.codeInsight.completion.CompositeDeclarativeInsertHandler$Companion
- <init>(java.util.Map,com.intellij.codeInsight.completion.InsertHandler):V
- f:getFallbackInsertHandler():com.intellij.codeInsight.completion.InsertHandler
- f:getHandlers():java.util.Map
- handleInsert(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement):V
f:com.intellij.codeInsight.completion.CompositeDeclarativeInsertHandler$Companion
- f:withUniversalHandler(java.lang.String,com.intellij.codeInsight.completion.DeclarativeInsertHandler):com.intellij.codeInsight.completion.CompositeDeclarativeInsertHandler
c:com.intellij.codeInsight.completion.DeclarativeInsertHandler
- com.intellij.codeInsight.completion.InsertHandler
- p:<init>(java.util.List,I,java.lang.Boolean,com.intellij.codeInsight.completion.InsertHandler,com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions):V
- pf:conditionalHandleInsert(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement,Z):V
- f:getAddCompletionChar():java.lang.Boolean
- f:getOffsetToPutCaret():I
- f:getPopupOptions():com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions
- f:getPostInsertHandler():com.intellij.codeInsight.completion.InsertHandler
- f:getTextOperations():java.util.List
- handleInsert(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement):V
f:com.intellij.codeInsight.completion.DeclarativeInsertHandler$AbsoluteTextEdit
- <init>(I,I,java.lang.String):V
- f:component1():I
- f:component2():I
- f:component3():java.lang.String
- f:copy(I,I,java.lang.String):com.intellij.codeInsight.completion.DeclarativeInsertHandler$AbsoluteTextEdit
- bs:copy$default(com.intellij.codeInsight.completion.DeclarativeInsertHandler$AbsoluteTextEdit,I,I,java.lang.String,I,java.lang.Object):com.intellij.codeInsight.completion.DeclarativeInsertHandler$AbsoluteTextEdit
- equals(java.lang.Object):Z
- f:getNewText():java.lang.String
- f:getRangeFrom():I
- f:getRangeTo():I
- hashCode():I
f:com.intellij.codeInsight.completion.DeclarativeInsertHandler$Builder
- <init>():V
- f:addOperation(I,I,java.lang.String):com.intellij.codeInsight.completion.DeclarativeInsertHandler$Builder
- f:addOperation(I,java.lang.String):com.intellij.codeInsight.completion.DeclarativeInsertHandler$Builder
- f:addOperation(com.intellij.codeInsight.completion.DeclarativeInsertHandler$RelativeTextEdit):com.intellij.codeInsight.completion.DeclarativeInsertHandler$Builder
- f:build():com.intellij.codeInsight.completion.DeclarativeInsertHandler
- f:getOffsetToPutCaret():I
- f:setOffsetToPutCaret(I):V
- f:withAddCompletionCharFlag(java.lang.Boolean):com.intellij.codeInsight.completion.DeclarativeInsertHandler$Builder
- f:withOffsetToPutCaret(I):com.intellij.codeInsight.completion.DeclarativeInsertHandler$Builder
- f:withPopupOptions(com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions):com.intellij.codeInsight.completion.DeclarativeInsertHandler$Builder
- f:withPostInsertHandler(com.intellij.codeInsight.completion.InsertHandler):com.intellij.codeInsight.completion.DeclarativeInsertHandler$Builder
com.intellij.codeInsight.completion.DeclarativeInsertHandler$HandlerProducer
- a:produce(com.intellij.codeInsight.completion.DeclarativeInsertHandler$Builder):V
f:com.intellij.codeInsight.completion.DeclarativeInsertHandler$LazyBuilder
- kotlin.Lazy
- <init>(Z,com.intellij.codeInsight.completion.DeclarativeInsertHandler$HandlerProducer):V
- getValue():com.intellij.codeInsight.completion.DeclarativeInsertHandler
- isInitialized():Z
a:com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions
- f:showPopup():Z
f:com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions$DoNotShow
- com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions
- sf:INSTANCE:com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions$DoNotShow
f:com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions$MemberLookup
- com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions
- sf:INSTANCE:com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions$MemberLookup
f:com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions$ParameterInfo
- com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions
- sf:INSTANCE:com.intellij.codeInsight.completion.DeclarativeInsertHandler$PopupOptions$ParameterInfo
f:com.intellij.codeInsight.completion.DeclarativeInsertHandler$RelativeTextEdit
- <init>(I,I,java.lang.String):V
- f:component1():I
- f:component2():I
- f:component3():java.lang.String
- f:copy(I,I,java.lang.String):com.intellij.codeInsight.completion.DeclarativeInsertHandler$RelativeTextEdit
- bs:copy$default(com.intellij.codeInsight.completion.DeclarativeInsertHandler$RelativeTextEdit,I,I,java.lang.String,I,java.lang.Object):com.intellij.codeInsight.completion.DeclarativeInsertHandler$RelativeTextEdit
- equals(java.lang.Object):Z
- f:getNewText():java.lang.String
- f:getRangeFrom():I
- f:getRangeTo():I
- hashCode():I
- f:toAbsolute(I):com.intellij.codeInsight.completion.DeclarativeInsertHandler$AbsoluteTextEdit
c:com.intellij.codeInsight.completion.GroupingWeigher
- com.intellij.codeInsight.completion.CompletionWeigher
- <init>():V
- weigh(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.CompletionLocation):java.lang.Integer
c:com.intellij.codeInsight.completion.LegacyCompletionContributor
- com.intellij.codeInsight.completion.CompletionContributor
- com.intellij.openapi.project.DumbAware
- <init>():V
- beforeCompletion(com.intellij.codeInsight.completion.CompletionInitializationContext):V
- s:completeReference(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionResultSet):Z
- fillCompletionVariants(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionResultSet):V
- s:processReferences(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionResultSet,com.intellij.util.PairConsumer):V
f:com.intellij.codeInsight.completion.OffsetsInFile
- <init>(com.intellij.psi.PsiFile):V
- <init>(com.intellij.psi.PsiFile,com.intellij.codeInsight.completion.OffsetMap):V
- f:copyWithReplacement(I,I,java.lang.String):com.intellij.codeInsight.completion.OffsetsInFile
- f:getFile():com.intellij.psi.PsiFile
- f:getOffsets():com.intellij.codeInsight.completion.OffsetMap
- f:replaceInCopy(com.intellij.psi.PsiFile,I,I,java.lang.String):java.util.function.Supplier
- f:toInjectedIfAny(I):com.intellij.codeInsight.completion.OffsetsInFile
- f:toTopLevelFile():com.intellij.codeInsight.completion.OffsetsInFile
c:com.intellij.codeInsight.completion.PriorityWeigher
- com.intellij.codeInsight.completion.CompletionWeigher
- <init>():V
- weigh(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.CompletionLocation):java.lang.Double
f:com.intellij.codeInsight.completion.StatisticsWeigher
- com.intellij.codeInsight.completion.CompletionWeigher
- <init>():V
- s:clearBaseStatisticsInfo(com.intellij.codeInsight.lookup.LookupElement):V
- s:getBaseStatisticsInfo(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.CompletionLocation):com.intellij.psi.statistics.StatisticsInfo
- weigh(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.CompletionLocation):java.lang.Comparable
c:com.intellij.codeInsight.completion.StatisticsWeigher$LookupStatisticsWeigher
- com.intellij.codeInsight.lookup.Classifier
- <init>(com.intellij.codeInsight.completion.CompletionLocation,com.intellij.codeInsight.lookup.Classifier):V
- addElement(com.intellij.codeInsight.lookup.LookupElement,com.intellij.util.ProcessingContext):V
- classify(java.lang.Iterable,com.intellij.util.ProcessingContext):java.lang.Iterable
- getSortingWeights(java.lang.Iterable,com.intellij.util.ProcessingContext):java.util.List
- removeElement(com.intellij.codeInsight.lookup.LookupElement,com.intellij.util.ProcessingContext):V
c:com.intellij.codeInsight.completion.impl.CamelHumpMatcher
- com.intellij.codeInsight.completion.PrefixMatcher
- <init>(java.lang.String):V
- <init>(java.lang.String,Z):V
- s:applyMiddleMatching(java.lang.String):java.lang.String
- cloneWithPrefix(java.lang.String):com.intellij.codeInsight.completion.PrefixMatcher
- s:forceStartMatching(com.intellij.openapi.Disposable):V
- isCaseSensitive():Z
- isStartMatch(com.intellij.codeInsight.lookup.LookupElement):Z
- isStartMatch(java.lang.String):Z
- matchingDegree(java.lang.String):I
- matchingDegree(java.lang.String,com.intellij.util.containers.FList):I
- matchingFragments(java.lang.String):com.intellij.util.containers.FList
- prefixMatches(com.intellij.codeInsight.lookup.LookupElement):Z
- prefixMatches(java.lang.String):Z
c:com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- com.intellij.codeInsight.completion.CompletionSorter
- buildClassifier(com.intellij.codeInsight.lookup.Classifier):com.intellij.codeInsight.lookup.Classifier
- equals(java.lang.Object):Z
- hashCode():I
- weigh(com.intellij.codeInsight.lookup.LookupElementWeigher):com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- weighAfter(java.lang.String,com.intellij.codeInsight.lookup.LookupElementWeigher[]):com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- weighBefore(java.lang.String,com.intellij.codeInsight.lookup.LookupElementWeigher[]):com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- s:weighingFactory(com.intellij.codeInsight.lookup.LookupElementWeigher):com.intellij.codeInsight.lookup.ClassifierFactory
- withClassifier(com.intellij.codeInsight.lookup.ClassifierFactory):com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- withClassifier(java.lang.String,Z,com.intellij.codeInsight.lookup.ClassifierFactory):com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- withoutClassifiers(java.util.function.Predicate):com.intellij.codeInsight.completion.impl.CompletionSorterImpl
f:com.intellij.codeInsight.completion.impl.LiftShorterItemsClassifier
- com.intellij.codeInsight.lookup.Classifier
- <init>(java.lang.String,com.intellij.codeInsight.lookup.Classifier,com.intellij.codeInsight.completion.impl.LiftShorterItemsClassifier$LiftingCondition,Z):V
- addElement(com.intellij.codeInsight.lookup.LookupElement,com.intellij.util.ProcessingContext):V
- classify(java.lang.Iterable,com.intellij.util.ProcessingContext):java.lang.Iterable
- getSortingWeights(java.lang.Iterable,com.intellij.util.ProcessingContext):java.util.List
- removeElement(com.intellij.codeInsight.lookup.LookupElement,com.intellij.util.ProcessingContext):V
c:com.intellij.codeInsight.completion.impl.LiftShorterItemsClassifier$LiftingCondition
- <init>():V
- shouldLift(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.lookup.LookupElement):Z
c:com.intellij.codeInsight.completion.impl.PreferStartMatching
- com.intellij.codeInsight.lookup.LookupElementWeigher
- <init>():V
- weigh(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.lookup.WeighingContext):java.lang.Comparable
c:com.intellij.codeInsight.completion.impl.RealPrefixMatchingWeigher
- com.intellij.codeInsight.lookup.LookupElementWeigher
- <init>():V
- s:getBestMatchingDegree(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.PrefixMatcher):I
- weigh(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.lookup.WeighingContext):java.lang.Comparable
c:com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettings
- NO_AUTO_IMPORT_PATTERN:java.lang.String
- SHOW_METHOD_SEPARATORS:Z
- p:myShowAddImportHints:Z
- <init>():V
- getAutoReparseDelay():I
- getErrorStripeMarkMinHeight():I
- s:getInstance():com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettings
- isCodeHighlightingChanged(com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettings):Z
- isImportHintEnabled():Z
- isNextErrorActionGoesToErrorsFirst():Z
- isSuppressWarnings():Z
- setAutoReparseDelay(I):V
- setErrorStripeMarkMinHeight(I):V
- setImportHintEnabled(Z):V
- setNextErrorActionGoesToErrorsFirst(Z):V
- setSuppressWarnings(Z):V
com.intellij.codeInsight.daemon.IdeValidationHost
- com.intellij.codeInsight.daemon.Validator$ValidationHost
- a:addMessageWithFixes(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInsight.daemon.Validator$ValidationHost$ErrorType,com.intellij.codeInsight.intention.IntentionAction[]):V
a:com.intellij.codeInsight.daemon.RainbowVisitor
- com.intellij.codeInsight.daemon.impl.HighlightVisitor
- <init>():V
- p:addInfo(com.intellij.codeInsight.daemon.impl.HighlightInfo):V
- analyze(com.intellij.psi.PsiFile,Z,com.intellij.codeInsight.daemon.impl.analysis.HighlightInfoHolder,java.lang.Runnable):Z
- a:clone():com.intellij.codeInsight.daemon.impl.HighlightVisitor
- p:getHighlighter():com.intellij.codeHighlighting.RainbowHighlighter
- p:getInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String,com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.codeInsight.daemon.impl.HighlightInfo
com.intellij.codeInsight.daemon.ReferenceImporter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- autoImportReferenceAtCursor(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- isAddUnambiguousImportsOnTheFlyEnabled(com.intellij.psi.PsiFile):Z
f:com.intellij.codeInsight.daemon.UsedColors
- <init>():V
- s:getOrAddColorIndex(com.intellij.openapi.util.UserDataHolderEx,java.lang.String,I):I
com.intellij.codeInsight.daemon.Validator
- a:validate(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.Validator$ValidationHost):V
com.intellij.codeInsight.daemon.Validator$ValidationHost
- sf:ERROR:I
- sf:INFO:I
- sf:WARNING:I
- a:addMessage(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInsight.daemon.Validator$ValidationHost$ErrorType):V
e:com.intellij.codeInsight.daemon.Validator$ValidationHost$ErrorType
- java.lang.Enum
- sf:ERROR:com.intellij.codeInsight.daemon.Validator$ValidationHost$ErrorType
- sf:INFO:com.intellij.codeInsight.daemon.Validator$ValidationHost$ErrorType
- sf:WARNING:com.intellij.codeInsight.daemon.Validator$ValidationHost$ErrorType
- s:valueOf(java.lang.String):com.intellij.codeInsight.daemon.Validator$ValidationHost$ErrorType
- s:values():com.intellij.codeInsight.daemon.Validator$ValidationHost$ErrorType[]
com.intellij.codeInsight.daemon.impl.AsyncDescriptionSupplier
- a:requestDescription():org.jetbrains.concurrency.Promise
a:com.intellij.codeInsight.daemon.impl.DaemonCodeAnalyzerEx
- com.intellij.codeInsight.daemon.DaemonCodeAnalyzer
- <init>():V
- a:getFileStatusMap():com.intellij.codeInsight.daemon.impl.FileStatusMap
- s:getInstanceEx(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.impl.DaemonCodeAnalyzerEx
- a:hasVisibleLightBulbOrPopup():Z
- a:isErrorAnalyzingFinished(com.intellij.psi.PsiFile):Z
- s:isHighlightingCompleted(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.project.Project):Z
- markDocumentDirty(com.intellij.openapi.editor.Document,java.lang.Object):V
- s:processHighlights(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.lang.annotation.HighlightSeverity,I,I,com.intellij.util.Processor):Z
- s:processHighlights(com.intellij.openapi.editor.ex.MarkupModelEx,com.intellij.openapi.project.Project,com.intellij.lang.annotation.HighlightSeverity,I,I,com.intellij.util.Processor):Z
- pa:progressIsAdvanced(com.intellij.codeInsight.daemon.impl.HighlightingSession,com.intellij.openapi.editor.Editor,D):V
c:com.intellij.codeInsight.daemon.impl.DaemonProgressIndicator
- com.intellij.openapi.progress.util.AbstractProgressIndicatorBase
- com.intellij.openapi.progress.StandardProgressIndicator
- <init>():V
- f:cancel():V
- f:cancel(java.lang.String):V
- f:cancel(java.lang.Throwable,java.lang.String):V
- f:checkCanceled():V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- f:isCanceled():Z
- isIndeterminate():Z
- p:onCancelled(java.lang.String):V
- p:onStop():V
- f:start():V
- f:stop():V
f:com.intellij.codeInsight.daemon.impl.DefaultHighlightUtil
- <init>():V
- s:checkBadCharacter(com.intellij.psi.PsiElement):com.intellij.codeInsight.daemon.impl.HighlightInfo
f:com.intellij.codeInsight.daemon.impl.FileStatusMap
- com.intellij.openapi.Disposable
- sf:CHANGES_NOT_ALLOWED_DURING_HIGHLIGHTING:java.lang.String
- allDirtyScopesAreNull(com.intellij.openapi.editor.Document):Z
- assertAllDirtyScopesAreNull(com.intellij.openapi.editor.Document):V
- dispose():V
- s:getDirtyTextRange(com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile,I):com.intellij.openapi.util.TextRange
- s:getDirtyTextRange(com.intellij.openapi.editor.Editor,I):com.intellij.openapi.util.TextRange
- getFileDirtyScope(com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile,I):com.intellij.openapi.util.TextRange
- s:log(java.lang.Object[]):V
- markFileUpToDate(com.intellij.openapi.editor.Document,I):V
- setErrorFoundFlag(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,Z):V
- toString(com.intellij.openapi.editor.Document):java.lang.String
Fc:com.intellij.codeInsight.daemon.impl.HighlightInfo
- com.intellij.openapi.util.Segment
- f:endOffset:I
- f:forcedTextAttributes:com.intellij.openapi.editor.markup.TextAttributes
- f:forcedTextAttributesKey:com.intellij.openapi.editor.colors.TextAttributesKey
- quickFixActionMarkers:java.util.List
- quickFixActionRanges:java.util.List
- f:startOffset:I
- f:type:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- s:convertSeverity(com.intellij.lang.annotation.HighlightSeverity):com.intellij.codeInsight.daemon.impl.HighlightInfoType
- s:convertSeverityToProblemHighlight(com.intellij.lang.annotation.HighlightSeverity):com.intellij.codeInspection.ProblemHighlightType
- s:convertType(com.intellij.codeInsight.daemon.impl.HighlightInfoType):com.intellij.codeInspection.ProblemHighlightType
- equals(java.lang.Object):Z
- findRegisteredQuickFix(java.util.function.BiFunction):java.lang.Object
- s:fromRangeHighlighter(com.intellij.openapi.editor.markup.RangeHighlighter):com.intellij.codeInsight.daemon.impl.HighlightInfo
- getActualEndOffset():I
- getActualStartOffset():I
- s:getAttributesByType(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.impl.HighlightInfoType,com.intellij.openapi.editor.colors.TextAttributesScheme):com.intellij.openapi.editor.markup.TextAttributes
- getDescription():java.lang.String
- getEndOffset():I
- getGutterIconRenderer():com.intellij.codeInsight.daemon.GutterMark
- getHighlighter():com.intellij.openapi.editor.ex.RangeHighlighterEx
- getInspectionToolId():java.lang.String
- getProblemGroup():com.intellij.lang.annotation.ProblemGroup
- getSameFamilyFix(com.intellij.codeInsight.daemon.impl.actions.IntentionActionWithFixAllOption):com.intellij.codeInsight.intention.IntentionAction
- getSeverity():com.intellij.lang.annotation.HighlightSeverity
- getStartOffset():I
- getText():java.lang.String
- getTextAttributes(com.intellij.psi.PsiElement,com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.markup.TextAttributes
- getToolTip():java.lang.String
- hasHint():Z
- hashCode():I
- isAfterEndOfLine():Z
- needUpdateOnTyping():Z
- s:newHighlightInfo(com.intellij.codeInsight.daemon.impl.HighlightInfoType):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- registerFix(com.intellij.codeInsight.intention.IntentionAction,java.util.List,java.lang.String,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.daemon.HighlightDisplayKey):V
- setHighlighter(com.intellij.openapi.editor.ex.RangeHighlighterEx):V
- unregisterQuickFix(com.intellij.openapi.util.Condition):V
com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:create():com.intellij.codeInsight.daemon.impl.HighlightInfo
- a:createUnconditionally():com.intellij.codeInsight.daemon.impl.HighlightInfo
- a:description(java.lang.String):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:descriptionAndTooltip(java.lang.String):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:endOfLine():com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:escapedToolTip(java.lang.String):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:fileLevelAnnotation():com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:group(I):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:gutterIconRenderer(com.intellij.openapi.editor.markup.GutterIconRenderer):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:inspectionToolId(java.lang.String):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:navigationShift(I):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:needsUpdateOnTyping(Z):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:problemGroup(com.intellij.lang.annotation.ProblemGroup):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:range(I,I):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:range(com.intellij.lang.ASTNode):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:range(com.intellij.openapi.util.TextRange):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:range(com.intellij.psi.PsiElement):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:range(com.intellij.psi.PsiElement,I,I):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:range(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:registerFix(com.intellij.codeInsight.intention.IntentionAction,java.util.List,java.lang.String,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.daemon.HighlightDisplayKey):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:severity(com.intellij.lang.annotation.HighlightSeverity):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:textAttributes(com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:textAttributes(com.intellij.openapi.editor.markup.TextAttributes):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
- a:unescapedToolTip(java.lang.String):com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder
f:com.intellij.codeInsight.daemon.impl.HighlightInfo$IntentionActionDescriptor
- <init>(com.intellij.codeInsight.intention.IntentionAction,java.util.List,java.lang.String,javax.swing.Icon,com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.lang.annotation.ProblemGroup,com.intellij.lang.annotation.HighlightSeverity):V
- <init>(com.intellij.codeInsight.intention.IntentionAction,java.util.List,java.lang.String,javax.swing.Icon,com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.lang.annotation.ProblemGroup,com.intellij.lang.annotation.HighlightSeverity,com.intellij.openapi.util.Segment):V
- equals(java.lang.Object):Z
- getAction():com.intellij.codeInsight.intention.IntentionAction
- getDisplayName():java.lang.String
- getIcon():javax.swing.Icon
- getOptions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):java.lang.Iterable
- getToolId():java.lang.String
com.intellij.codeInsight.daemon.impl.HighlightInfoFilter
- sf:EMPTY_ARRAY:com.intellij.codeInsight.daemon.impl.HighlightInfoFilter[]
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:accept(com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.psi.PsiFile):Z
com.intellij.codeInsight.daemon.impl.HighlightInfoPostFilter
- a:accept(com.intellij.codeInsight.daemon.impl.HighlightInfo):Z
a:com.intellij.codeInsight.daemon.impl.HighlightInfoProcessor
- <init>():V
- allHighlightsForRangeAreProduced(com.intellij.codeInsight.daemon.impl.HighlightingSession,J,java.util.List):V
- s:getEmpty():com.intellij.codeInsight.daemon.impl.HighlightInfoProcessor
- highlightsInsideVisiblePartAreProduced(com.intellij.codeInsight.daemon.impl.HighlightingSession,com.intellij.openapi.editor.Editor,java.util.List,com.intellij.openapi.util.TextRange,com.intellij.openapi.util.TextRange,I):V
- highlightsOutsideVisiblePartAreProduced(com.intellij.codeInsight.daemon.impl.HighlightingSession,com.intellij.openapi.editor.Editor,java.util.List,com.intellij.openapi.util.TextRange,com.intellij.openapi.util.TextRange,I):V
- infoIsAvailable(com.intellij.codeInsight.daemon.impl.HighlightingSession,com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.openapi.util.TextRange,com.intellij.openapi.util.TextRange,I):V
- progressIsAdvanced(com.intellij.codeInsight.daemon.impl.HighlightingSession,com.intellij.openapi.editor.Editor,D):V
com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:DEPRECATED:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:ELEMENT_UNDER_CARET_READ:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:ELEMENT_UNDER_CARET_SEVERITY:com.intellij.lang.annotation.HighlightSeverity
- sf:ELEMENT_UNDER_CARET_STRUCTURAL:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:ELEMENT_UNDER_CARET_WRITE:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:ERROR:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:GENERIC_WARNINGS_OR_ERRORS_FROM_SERVER:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:HIGHLIGHTED_REFERENCE_SEVERITY:com.intellij.lang.annotation.HighlightSeverity
- sf:INFO:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:INFORMATION:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:INJECTED_FRAGMENT_SEVERITY:com.intellij.lang.annotation.HighlightSeverity
- sf:INJECTED_FRAGMENT_SYNTAX_SEVERITY:com.intellij.lang.annotation.HighlightSeverity
- sf:INJECTED_LANGUAGE_BACKGROUND:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:INJECTED_LANGUAGE_FRAGMENT:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:MARKED_FOR_REMOVAL:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:PENDING_REFERENCE:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:POSSIBLE_PROBLEM:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:SYMBOL_TYPE_SEVERITY:com.intellij.lang.annotation.HighlightSeverity
- sf:TEXT_ATTRIBUTES:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:TODO:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:UNHANDLED_EXCEPTION:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:UNUSED_SYMBOL:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:UNUSED_SYMBOL_SHORT_NAME:java.lang.String
- sf:VISIBLE_IF_FOLDED:java.util.Set
- sf:WARNING:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:WEAK_WARNING:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- sf:WRONG_REF:com.intellij.codeInsight.daemon.impl.HighlightInfoType
- a:getAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- a:getSeverity(com.intellij.psi.PsiElement):com.intellij.lang.annotation.HighlightSeverity
- s:getUnusedSymbolDisplayName():java.lang.String
- isInspectionHighlightInfoType():Z
c:com.intellij.codeInsight.daemon.impl.HighlightInfoType$HighlightInfoTypeImpl
- com.intellij.codeInsight.daemon.impl.HighlightInfoType
- com.intellij.codeInsight.daemon.impl.HighlightInfoType$UpdateOnTypingSuppressible
- <init>(com.intellij.lang.annotation.HighlightSeverity,com.intellij.openapi.editor.colors.TextAttributesKey):V
- <init>(com.intellij.lang.annotation.HighlightSeverity,com.intellij.openapi.editor.colors.TextAttributesKey,Z):V
- equals(java.lang.Object):Z
- getAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- getSeverity(com.intellij.psi.PsiElement):com.intellij.lang.annotation.HighlightSeverity
- hashCode():I
- isApplicableToInspections():Z
- needsUpdateOnTyping():Z
- writeExternal(org.jdom.Element):V
f:com.intellij.codeInsight.daemon.impl.HighlightInfoType$HighlightInfoTypeSeverityByKey
- com.intellij.codeInsight.daemon.impl.HighlightInfoType
- <init>(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.openapi.editor.colors.TextAttributesKey):V
- getAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- getSeverity(com.intellij.psi.PsiElement):com.intellij.lang.annotation.HighlightSeverity
- getSeverityKey():com.intellij.codeInsight.daemon.HighlightDisplayKey
com.intellij.codeInsight.daemon.impl.HighlightInfoType$Iconable
- a:getIcon():javax.swing.Icon
com.intellij.codeInsight.daemon.impl.HighlightInfoType$UpdateOnTypingSuppressible
- a:needsUpdateOnTyping():Z
com.intellij.codeInsight.daemon.impl.HighlightRangeExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:isForceHighlightParents(com.intellij.psi.PsiFile):Z
com.intellij.codeInsight.daemon.impl.HighlightVisitor
- com.intellij.openapi.project.PossiblyDumbAware
- sf:ARRAY_FACTORY:com.intellij.util.ArrayFactory
- sf:EMPTY_ARRAY:com.intellij.codeInsight.daemon.impl.HighlightVisitor[]
- sf:EP_HIGHLIGHT_VISITOR:com.intellij.openapi.extensions.ExtensionPointName
- a:analyze(com.intellij.psi.PsiFile,Z,com.intellij.codeInsight.daemon.impl.analysis.HighlightInfoHolder,java.lang.Runnable):Z
- a:clone():com.intellij.codeInsight.daemon.impl.HighlightVisitor
- order():I
- a:suitableForFile(com.intellij.psi.PsiFile):Z
- a:visit(com.intellij.psi.PsiElement):V
com.intellij.codeInsight.daemon.impl.HighlightingSession
- a:getColorsScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- a:getDocument():com.intellij.openapi.editor.Document
- a:getProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
- a:getProject():com.intellij.openapi.project.Project
- a:getPsiFile():com.intellij.psi.PsiFile
- a:getVisibleRange():com.intellij.openapi.util.ProperTextRange
- a:isCanceled():Z
- a:isEssentialHighlightingOnly():Z
f:com.intellij.codeInsight.daemon.impl.IdentifierUtil
- <init>():V
- s:getNameIdentifier(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
com.intellij.codeInsight.daemon.impl.IntentionActionFilter
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- accept(com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile):Z
- accept(com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile,I):Z
a:com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass
- com.intellij.codeHighlighting.TextEditorHighlightingPass
- pf:myFile:com.intellij.psi.PsiFile
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,java.lang.String,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.TextRange,Z,com.intellij.codeInsight.daemon.impl.HighlightInfoProcessor):V
- advanceProgress(J):V
- pa:applyInformationWithProgress():V
- pa:collectInformationWithProgress(com.intellij.openapi.progress.ProgressIndicator):V
- f:doApplyInformationToEditor():V
- f:doCollectInformation(com.intellij.openapi.progress.ProgressIndicator):V
- p:getEditor():com.intellij.openapi.editor.Editor
- p:getHighlightingSession():com.intellij.codeInsight.daemon.impl.HighlightingSession
- getPresentableName():java.lang.String
- getProgress():D
- isFinished():Z
- p:isValid():Z
- setProgressLimit(J):V
a:com.intellij.codeInsight.daemon.impl.SeveritiesProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getSeveritiesHighlightInfoTypes():java.util.List
- isGotoBySeverityEnabled(com.intellij.lang.annotation.HighlightSeverity):Z
f:com.intellij.codeInsight.daemon.impl.SeverityRegistrar
- com.intellij.openapi.util.ModificationTracker
- java.util.Comparator
- <init>(com.intellij.util.messages.MessageBus):V
- compare(com.intellij.lang.annotation.HighlightSeverity,com.intellij.lang.annotation.HighlightSeverity):I
- getAllSeverities():java.util.List
- getCustomSeverityTextAttributes(com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.openapi.editor.markup.TextAttributes
- getHighlightInfoTypeBySeverity(com.intellij.lang.annotation.HighlightSeverity):com.intellij.codeInsight.daemon.impl.HighlightInfoType$HighlightInfoTypeImpl
- getModificationCount():J
- getSeverity(java.lang.String):com.intellij.lang.annotation.HighlightSeverity
- getSeverityByIndex(I):com.intellij.lang.annotation.HighlightSeverity
- s:getSeverityRegistrar(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.impl.SeverityRegistrar
- getTextAttributesBySeverity(com.intellij.lang.annotation.HighlightSeverity):com.intellij.openapi.editor.markup.TextAttributes
- s:isDefaultSeverity(com.intellij.lang.annotation.HighlightSeverity):Z
- isSeverityValid(java.lang.String):Z
- readExternal(org.jdom.Element):V
- registerSeverity(com.intellij.codeInsight.daemon.impl.SeverityRegistrar$SeverityBasedTextAttributes,java.awt.Color):V
- s:registerStandard(com.intellij.codeInsight.daemon.impl.HighlightInfoType,com.intellij.lang.annotation.HighlightSeverity):V
- s:registerStandard(java.util.Map):V
- setOrder(java.util.List):V
- s:standardSeverities():java.util.Collection
- unregisterSeverity(com.intellij.lang.annotation.HighlightSeverity):com.intellij.codeInsight.daemon.impl.SeverityRegistrar$SeverityBasedTextAttributes
- writeExternal(org.jdom.Element):V
f:com.intellij.codeInsight.daemon.impl.SeverityRegistrar$SeverityBasedTextAttributes
- <init>(com.intellij.openapi.editor.markup.TextAttributes,com.intellij.codeInsight.daemon.impl.HighlightInfoType$HighlightInfoTypeImpl):V
- equals(java.lang.Object):Z
- getAttributes():com.intellij.openapi.editor.markup.TextAttributes
- getSeverity():com.intellij.lang.annotation.HighlightSeverity
- getType():com.intellij.codeInsight.daemon.impl.HighlightInfoType$HighlightInfoTypeImpl
- hashCode():I
f:com.intellij.codeInsight.daemon.impl.UpdateHighlightersUtil
- <init>():V
- s:isFileLevelOrGutterAnnotation(com.intellij.codeInsight.daemon.impl.HighlightInfo):Z
- s:setHighlightersToEditor(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,I,I,java.util.Collection,com.intellij.openapi.editor.colors.EditorColorsScheme,I):V
- s:setHighlightersToSingleEditor(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,I,java.util.Collection,com.intellij.openapi.editor.colors.EditorColorsScheme,I):V
a:com.intellij.codeInsight.daemon.impl.actions.AbstractBatchSuppressByNoInspectionCommentFix
- com.intellij.codeInspection.ContainerBasedSuppressQuickFix
- com.intellij.codeInspection.InjectionAwareSuppressQuickFix
- com.intellij.openapi.util.Iconable
- pf:myID:java.lang.String
- <init>(java.lang.String,Z):V
- applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- p:createSuppression(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- generatePreview(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- p:getCommentLanguage(com.intellij.psi.PsiElement):com.intellij.lang.Language
- p:getCommentsFor(com.intellij.psi.PsiElement):java.util.List
- a:getContainer(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- getIcon(I):javax.swing.Icon
- getName():java.lang.String
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):Z
- isShouldBeAppliedToInjectionHost():com.intellij.util.ThreeState
- isSuppressAll():Z
- pf:replaceSuppressionComment(com.intellij.psi.PsiElement):V
- p:replaceSuppressionComments(com.intellij.psi.PsiElement):Z
- setShouldBeAppliedToInjectionHost(com.intellij.util.ThreeState):V
- p:setText(java.lang.String):V
com.intellij.codeInsight.daemon.impl.actions.IntentionActionWithFixAllOption
- com.intellij.codeInsight.intention.IntentionActionWithOptions
- belongsToMyFamily(com.intellij.codeInsight.daemon.impl.actions.IntentionActionWithFixAllOption):Z
- getFixAllText():java.lang.String
- getOptions():java.util.List
c:com.intellij.codeInsight.daemon.impl.actions.SuppressByCommentFix
- com.intellij.codeInsight.daemon.impl.actions.AbstractBatchSuppressByNoInspectionCommentFix
- p:mySuppressionHolderClass:java.lang.Class
- <init>(com.intellij.codeInsight.daemon.HighlightDisplayKey,java.lang.Class):V
- <init>(java.lang.String,java.lang.Class):V
- getContainer(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getText():java.lang.String
c:com.intellij.codeInsight.daemon.impl.actions.SuppressByCommentModCommandFix
- com.intellij.codeInsight.daemon.impl.actions.AbstractBatchSuppressByNoInspectionCommentModCommandFix
- p:mySuppressionHolderClass:java.lang.Class
- <init>(com.intellij.codeInsight.daemon.HighlightDisplayKey,java.lang.Class):V
- <init>(java.lang.String,java.lang.Class):V
- getContainer(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getText():java.lang.String
com.intellij.codeInsight.daemon.impl.analysis.ErrorQuickFixProvider
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- registerErrorQuickFix(com.intellij.psi.PsiErrorElement,com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder):V
c:com.intellij.codeInsight.daemon.impl.analysis.HighlightInfoHolder
- <init>(com.intellij.psi.PsiFile,com.intellij.codeInsight.daemon.impl.HighlightInfoFilter[]):V
- add(com.intellij.codeInsight.daemon.impl.HighlightInfo):Z
- clear():V
- get(I):com.intellij.codeInsight.daemon.impl.HighlightInfo
- getAnnotationSession():com.intellij.lang.annotation.AnnotationSession
- getColorsScheme():com.intellij.openapi.editor.colors.TextAttributesScheme
- getContextFile():com.intellij.psi.PsiFile
- getProject():com.intellij.openapi.project.Project
- hasErrorResults():Z
- size():I
Fa:com.intellij.codeInsight.daemon.impl.analysis.HighlightingLevelManager
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.impl.analysis.HighlightingLevelManager
- a:runEssentialHighlightingOnly(com.intellij.psi.PsiElement):Z
- a:shouldHighlight(com.intellij.psi.PsiElement):Z
- a:shouldInspect(com.intellij.psi.PsiElement):Z
f:com.intellij.codeInsight.daemon.impl.quickfix.QuickFixAction
- s:registerQuickFixAction(com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.codeInsight.intention.IntentionAction):V
- s:registerQuickFixActions(com.intellij.codeInsight.daemon.impl.HighlightInfo$Builder,com.intellij.openapi.util.TextRange,java.lang.Iterable):V
- s:registerQuickFixActions(com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.openapi.util.TextRange,java.lang.Iterable):V
c:com.intellij.codeInsight.dataflow.DFAEngine
- <init>(com.intellij.codeInsight.controlflow.Instruction[],com.intellij.codeInsight.dataflow.DfaInstance,com.intellij.codeInsight.dataflow.Semilattice):V
- performDFA():java.util.List
c:com.intellij.codeInsight.dataflow.DFALimitExceededException
- java.lang.Exception
- <init>(java.lang.String):V
com.intellij.codeInsight.dataflow.DfaInstance
- a:fun(java.lang.Object,com.intellij.codeInsight.controlflow.Instruction):java.lang.Object
- a:initial():java.lang.Object
com.intellij.codeInsight.dataflow.Semilattice
- a:eq(java.lang.Object,java.lang.Object):Z
- a:join(java.util.List):java.lang.Object
f:com.intellij.codeInsight.dataflow.SetUtil
- s:intersect(java.util.Set,java.util.Set):java.util.Set
c:com.intellij.codeInsight.dataflow.map.DFAMap
- <init>():V
- <init>(com.intellij.codeInsight.dataflow.map.DFAMap):V
- addKeys(java.util.HashSet):V
- asWritable():com.intellij.codeInsight.dataflow.map.DFAMap
- containsKey(java.lang.String):Z
- s:empty():com.intellij.codeInsight.dataflow.map.DFAMap
- entrySet():java.util.Collection
- equals(java.lang.Object):Z
- get(java.lang.String):java.lang.Object
- intersectKeys(java.util.Set):java.util.Set
- keySet():java.util.Set
- put(java.lang.String,java.lang.Object):V
- remove(java.lang.String):V
- toMap():java.util.Map
- values():java.util.Collection
c:com.intellij.codeInsight.dataflow.map.DFAMapEngine
- com.intellij.codeInsight.dataflow.DFAEngine
- <init>(com.intellij.codeInsight.controlflow.Instruction[],com.intellij.codeInsight.dataflow.map.DfaMapInstance,com.intellij.codeInsight.dataflow.map.MapSemilattice):V
com.intellij.codeInsight.dataflow.map.DfaMapInstance
- com.intellij.codeInsight.dataflow.DfaInstance
com.intellij.codeInsight.dataflow.map.MapSemilattice
- com.intellij.codeInsight.dataflow.Semilattice
f:com.intellij.codeInsight.intention.EmptyIntentionAction
- com.intellij.codeInsight.intention.AbstractEmptyIntentionAction
- com.intellij.codeInsight.intention.LowPriorityAction
- com.intellij.openapi.util.Iconable
- <init>(java.lang.String):V
- equals(java.lang.Object):Z
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getFamilyName():java.lang.String
- getIcon(I):javax.swing.Icon
- getText():java.lang.String
- hashCode():I
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
c:com.intellij.codeInsight.intention.choice.ChoiceTitleIntentionAction
- com.intellij.codeInsight.intention.AbstractEmptyIntentionAction
- com.intellij.codeInsight.intention.CustomizableIntentionAction
- com.intellij.codeInspection.LocalQuickFix
- java.lang.Comparable
- <init>(java.lang.String,java.lang.String):V
- applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- compareTo(com.intellij.codeInsight.intention.IntentionAction):I
- getFamilyName():java.lang.String
- getText():java.lang.String
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- isSelectable():Z
- isShowIcon():Z
- isShowSubmenu():Z
a:com.intellij.codeInsight.intention.choice.ChoiceVariantIntentionAction
- com.intellij.codeInspection.IntentionAndQuickFixAction
- com.intellij.codeInsight.daemon.impl.HighlightInfoType$Iconable
- com.intellij.codeInsight.intention.CustomizableIntentionAction
- com.intellij.openapi.util.Iconable
- java.lang.Comparable
- <init>():V
- compareTo(com.intellij.codeInsight.intention.IntentionAction):I
- getIcon():javax.swing.Icon
- getIcon(I):javax.swing.Icon
- a:getIndex():I
- isShowSubmenu():Z
com.intellij.codeInsight.intention.choice.DefaultIntentionActionWithChoice
- com.intellij.codeInsight.intention.IntentionActionWithChoice
- getAllAsFixes():java.util.List
f:com.intellij.codeInsight.intention.impl.config.IntentionActionWrapper
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.codeInsight.intention.IntentionActionDelegate
- com.intellij.openapi.actionSystem.ShortcutProvider
- java.lang.Comparable
- <init>(com.intellij.codeInsight.intention.IntentionActionBean):V
- compareTo(com.intellij.codeInsight.intention.IntentionAction):I
- equals(java.lang.Object):Z
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getDelegate():com.intellij.codeInsight.intention.IntentionAction
- getDescriptionDirectoryName():java.lang.String
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- getFullFamilyName():java.lang.String
- getImplementationClassName():java.lang.String
- getShortcut():com.intellij.openapi.actionSystem.ShortcutSet
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isApplicable(java.util.Collection):Z
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
c:com.intellij.codeInsight.intention.impl.config.LazyEditor
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.editor.Editor
- <init>(com.intellij.psi.PsiFile):V
- addEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- addEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- getAscent():I
- getCaretModel():com.intellij.openapi.editor.CaretModel
- getColorsScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- getComponent():javax.swing.JComponent
- getContentComponent():javax.swing.JComponent
- getDocument():com.intellij.openapi.editor.Document
- getEditorKind():com.intellij.openapi.editor.EditorKind
- getFoldingModel():com.intellij.openapi.editor.FoldingModel
- getGutter():com.intellij.openapi.editor.EditorGutter
- getHeaderComponent():javax.swing.JComponent
- getIndentsModel():com.intellij.openapi.editor.IndentsModel
- getInlayModel():com.intellij.openapi.editor.InlayModel
- getInsets():java.awt.Insets
- getLineHeight():I
- getMarkupModel():com.intellij.openapi.editor.markup.MarkupModel
- getMouseEventArea(java.awt.event.MouseEvent):com.intellij.openapi.editor.event.EditorMouseEventArea
- getProject():com.intellij.openapi.project.Project
- getScrollingModel():com.intellij.openapi.editor.ScrollingModel
- getSelectionModel():com.intellij.openapi.editor.SelectionModel
- getSettings():com.intellij.openapi.editor.EditorSettings
- getSoftWrapModel():com.intellij.openapi.editor.SoftWrapModel
- hasHeaderComponent():Z
- isColumnMode():Z
- isDisposed():Z
- isInsertMode():Z
- isOneLineMode():Z
- isViewer():Z
- logicalPositionToOffset(com.intellij.openapi.editor.LogicalPosition):I
- logicalPositionToXY(com.intellij.openapi.editor.LogicalPosition):java.awt.Point
- logicalToVisualPosition(com.intellij.openapi.editor.LogicalPosition):com.intellij.openapi.editor.VisualPosition
- offsetToLogicalPosition(I):com.intellij.openapi.editor.LogicalPosition
- offsetToVisualPosition(I):com.intellij.openapi.editor.VisualPosition
- offsetToVisualPosition(I,Z,Z):com.intellij.openapi.editor.VisualPosition
- removeEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- removeEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- setBorder(javax.swing.border.Border):V
- setHeaderComponent(javax.swing.JComponent):V
- visualPositionToPoint2D(com.intellij.openapi.editor.VisualPosition):java.awt.geom.Point2D
- visualPositionToXY(com.intellij.openapi.editor.VisualPosition):java.awt.Point
- visualToLogicalPosition(com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.editor.LogicalPosition
- xyToLogicalPosition(java.awt.Point):com.intellij.openapi.editor.LogicalPosition
- xyToVisualPosition(java.awt.Point):com.intellij.openapi.editor.VisualPosition
- xyToVisualPosition(java.awt.geom.Point2D):com.intellij.openapi.editor.VisualPosition
a:com.intellij.codeInsight.lookup.Classifier
- pf:myNext:com.intellij.codeInsight.lookup.Classifier
- p:<init>(com.intellij.codeInsight.lookup.Classifier,java.lang.String):V
- addElement(java.lang.Object,com.intellij.util.ProcessingContext):V
- a:classify(java.lang.Iterable,com.intellij.util.ProcessingContext):java.lang.Iterable
- f:getNext():com.intellij.codeInsight.lookup.Classifier
- f:getPresentableName():java.lang.String
- a:getSortingWeights(java.lang.Iterable,com.intellij.util.ProcessingContext):java.util.List
- removeElement(java.lang.Object,com.intellij.util.ProcessingContext):V
a:com.intellij.codeInsight.lookup.ClassifierFactory
- p:<init>(java.lang.String):V
- a:createClassifier(com.intellij.codeInsight.lookup.Classifier):com.intellij.codeInsight.lookup.Classifier
- equals(java.lang.Object):Z
- getId():java.lang.String
- hashCode():I
c:com.intellij.codeInsight.lookup.CommaTailType
- com.intellij.codeInsight.TailType
- sf:INSTANCE:com.intellij.codeInsight.TailType
- <init>():V
- processTail(com.intellij.openapi.editor.Editor,I):I
f:com.intellij.codeInsight.lookup.DefaultLookupItemRenderer
- com.intellij.codeInsight.lookup.LookupElementRenderer
- sf:INSTANCE:com.intellij.codeInsight.lookup.DefaultLookupItemRenderer
- <init>():V
- s:getRawIcon(com.intellij.codeInsight.lookup.LookupElement):javax.swing.Icon
- renderElement(com.intellij.codeInsight.lookup.LookupItem,com.intellij.codeInsight.lookup.LookupElementPresentation):V
c:com.intellij.codeInsight.lookup.EqTailType
- com.intellij.codeInsight.TailType
- sf:INSTANCE:com.intellij.codeInsight.TailType
- <init>():V
- p:isSpaceAroundAssignmentOperators(com.intellij.openapi.editor.Editor,I):Z
- processTail(com.intellij.openapi.editor.Editor,I):I
c:com.intellij.codeInsight.lookup.LookupItem
- com.intellij.codeInsight.lookup.LookupElement
- java.lang.Comparable
- sf:CASE_INSENSITIVE:java.lang.Object
- sf:CLASS_CONDITION_KEY:com.intellij.openapi.util.ClassConditionKey
- sf:EMPTY_ARRAY:com.intellij.codeInsight.lookup.LookupItem[]
- sf:FORCE_QUALIFY:java.lang.Object
- sf:HIGHLIGHTED_ATTR:java.lang.Object
- sf:ICON_ATTR:java.lang.Object
- sf:TAIL_TEXT_ATTR:java.lang.Object
- sf:TAIL_TEXT_SMALL_ATTR:java.lang.Object
- sf:TAIL_TYPE_ATTR:com.intellij.openapi.util.Key
- sf:TYPE_TEXT_ATTR:java.lang.Object
- <init>(java.lang.Object,java.lang.String):V
- addLookupStrings(java.lang.String[]):com.intellij.codeInsight.lookup.LookupItem
- compareTo(com.intellij.codeInsight.lookup.LookupItem):I
- equals(java.lang.Object):Z
- forceQualify():com.intellij.codeInsight.lookup.LookupItem
- getAllLookupStrings():java.util.Set
- getAttribute(com.intellij.openapi.util.Key):java.lang.Object
- getAttribute(java.lang.Object):java.lang.Object
- getAutoCompletionPolicy():com.intellij.codeInsight.lookup.AutoCompletionPolicy
- s:getDefaultTailType(C):com.intellij.codeInsight.TailType
- getInsertHandler():com.intellij.codeInsight.completion.InsertHandler
- getLookupString():java.lang.String
- getObject():java.lang.Object
- getPresentableText():java.lang.String
- f:getPriority():D
- getTailType():com.intellij.codeInsight.TailType
- s:handleCompletionChar(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.lookup.LookupElement,C):com.intellij.codeInsight.TailType
- handleInsert(com.intellij.codeInsight.completion.InsertionContext):V
- hashCode():I
- isCaseSensitive():Z
- renderElement(com.intellij.codeInsight.lookup.LookupElementPresentation):V
- setAttribute(com.intellij.openapi.util.Key,java.lang.Object):V
- setAttribute(java.lang.Object,java.lang.Object):V
- setAutoCompletionPolicy(com.intellij.codeInsight.lookup.AutoCompletionPolicy):com.intellij.codeInsight.lookup.LookupItem
- setBold():com.intellij.codeInsight.lookup.LookupItem
- setIcon(javax.swing.Icon):com.intellij.codeInsight.lookup.LookupItem
- setInsertHandler(com.intellij.codeInsight.completion.InsertHandler):com.intellij.codeInsight.lookup.LookupItem
- setLookupString(java.lang.String):V
- setObject(java.lang.Object):V
- setPresentableText(java.lang.String):com.intellij.codeInsight.lookup.LookupItem
- setPriority(D):com.intellij.codeInsight.lookup.LookupItem
- setTailText(java.lang.String,Z):com.intellij.codeInsight.lookup.LookupItem
- setTailType(com.intellij.codeInsight.TailType):com.intellij.codeInsight.lookup.LookupItem
com.intellij.codeInsight.lookup.LookupValueWithPsiElement
- a:getElement():com.intellij.psi.PsiElement
com.intellij.codeInsight.lookup.LookupValueWithUIHint
- com.intellij.codeInsight.lookup.PresentableLookupValue
- a:getTypeHint():java.lang.String
com.intellij.codeInsight.lookup.PresentableLookupValue
- a:getPresentation():java.lang.String
com.intellij.codeInsight.lookup.impl.ElementLookupRenderer
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:handlesItem(java.lang.Object):Z
- a:renderElement(com.intellij.codeInsight.lookup.LookupItem,java.lang.Object,com.intellij.codeInsight.lookup.LookupElementPresentation):V
f:com.intellij.codeInsight.navigation.action.GotoDeclarationUtil
- <init>():V
- s:findTargetElementsFromProviders(com.intellij.openapi.editor.Editor,I,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement[]
- s:findTargetElementsFromProviders(com.intellij.psi.PsiElement,I,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement[]
a:com.intellij.codeInsight.quickfix.UnresolvedReferenceQuickFixProvider
- <init>():V
- a:getReferenceClass():java.lang.Class
- a:registerFixes(com.intellij.psi.PsiReference,com.intellij.codeInsight.daemon.QuickFixActionRegistrar):V
com.intellij.codeInsight.template.RecalculatableResult
- com.intellij.codeInsight.template.Result
- a:handleRecalc(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,I,I):V
a:com.intellij.codeInsight.template.Template
- com.intellij.codeInsight.lookup.PresentableLookupValue
- sf:END:java.lang.String
- sf:SELECTION:java.lang.String
- <init>():V
- a:addEndVariable():V
- a:addSelectionEndVariable():V
- a:addSelectionStartVariable():V
- a:addTextSegment(java.lang.String):V
- a:addVariable(com.intellij.codeInsight.template.Expression,Z):com.intellij.codeInsight.template.impl.Variable
- a:addVariable(com.intellij.codeInsight.template.impl.Variable):V
- addVariable(java.lang.String,com.intellij.codeInsight.template.Expression,com.intellij.codeInsight.template.Expression,Z):com.intellij.codeInsight.template.impl.Variable
- a:addVariable(java.lang.String,com.intellij.codeInsight.template.Expression,com.intellij.codeInsight.template.Expression,Z,Z):com.intellij.codeInsight.template.impl.Variable
- addVariable(java.lang.String,com.intellij.codeInsight.template.Expression,Z):com.intellij.codeInsight.template.impl.Variable
- a:addVariable(java.lang.String,java.lang.String,java.lang.String,Z):com.intellij.codeInsight.template.impl.Variable
- a:addVariableSegment(java.lang.String):V
- s:getDefaultValue(com.intellij.codeInsight.template.Template$Property):Z
- a:getDescription():java.lang.String
- a:getId():java.lang.String
- a:getKey():java.lang.String
- getPresentation():java.lang.String
- a:getSegmentName(I):java.lang.String
- a:getSegmentOffset(I):I
- a:getSegmentsCount():I
- a:getString():java.lang.String
- a:getTemplateText():java.lang.String
- getValue(com.intellij.codeInsight.template.Template$Property):Z
- a:getVariables():java.util.List
- isScrollToTemplate():Z
- a:isToReformat():Z
- a:isToShortenLongNames():Z
- a:setInline(Z):V
- setScrollToTemplate(Z):V
- a:setToIndent(Z):V
- a:setToReformat(Z):V
- a:setToShortenLongNames(Z):V
- setValue(com.intellij.codeInsight.template.Template$Property,Z):V
e:com.intellij.codeInsight.template.Template$Property
- java.lang.Enum
- sf:USE_STATIC_IMPORT_IF_POSSIBLE:com.intellij.codeInsight.template.Template$Property
- s:valueOf(java.lang.String):com.intellij.codeInsight.template.Template$Property
- s:values():com.intellij.codeInsight.template.Template$Property[]
c:com.intellij.codeInsight.template.TemplateBuilderFactoryImpl
- com.intellij.codeInsight.template.TemplateBuilderFactory
- <init>():V
- createTemplateBuilder(com.intellij.psi.PsiElement):com.intellij.codeInsight.template.TemplateBuilder
c:com.intellij.codeInsight.template.TemplateBuilderImpl
- com.intellij.codeInsight.template.TemplateBuilder
- <init>(com.intellij.psi.PsiElement):V
- buildInlineTemplate():com.intellij.codeInsight.template.Template
- buildTemplate():com.intellij.codeInsight.template.Template
- getElementsCount():I
- initInlineTemplate(com.intellij.codeInsight.template.Template):com.intellij.codeInsight.template.Template
- initTemplate(com.intellij.codeInsight.template.Template):com.intellij.codeInsight.template.Template
- replaceElement(com.intellij.openapi.util.TextRange,java.lang.String,java.lang.String,Z):V
- replaceElement(com.intellij.psi.PsiElement,com.intellij.codeInsight.template.Expression):V
- replaceElement(com.intellij.psi.PsiElement,com.intellij.codeInsight.template.Expression,Z):V
- replaceElement(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.template.Expression):V
- replaceElement(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.String):V
- replaceElement(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.String,com.intellij.codeInsight.template.Expression,Z):V
- replaceElement(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.String,java.lang.String,Z):V
- replaceElement(com.intellij.psi.PsiElement,java.lang.String):V
- replaceElement(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInsight.template.Expression,Z):V
- replaceElement(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInsight.template.Expression,Z,Z):V
- replaceElement(com.intellij.psi.PsiElement,java.lang.String,java.lang.String,Z):V
- replaceElement(com.intellij.psi.PsiReference,java.lang.String,com.intellij.codeInsight.template.Expression,Z):V
- replaceElement(com.intellij.psi.PsiReference,java.lang.String,java.lang.String,Z):V
- replaceRange(com.intellij.openapi.util.TextRange,com.intellij.codeInsight.template.Expression):V
- replaceRange(com.intellij.openapi.util.TextRange,java.lang.String):V
- replaceRange(com.intellij.openapi.util.TextRange,java.lang.String,com.intellij.codeInsight.template.Expression,Z):V
- run(com.intellij.openapi.editor.Editor,Z):V
- runNonInteractively(Z):V
- setEndVariableAfter(com.intellij.psi.PsiElement):V
- setEndVariableBefore(com.intellij.psi.PsiElement):V
- setGreedyToRight(Z):V
- setScrollToTemplate(Z):com.intellij.codeInsight.template.TemplateBuilder
- setSelection(com.intellij.psi.PsiElement):V
- setVariableOrdering(java.util.Comparator):V
com.intellij.codeInsight.template.TemplateEditingListener
- a:beforeTemplateFinished(com.intellij.codeInsight.template.impl.TemplateState,com.intellij.codeInsight.template.Template):V
- beforeTemplateFinished(com.intellij.codeInsight.template.impl.TemplateState,com.intellij.codeInsight.template.Template,Z):V
- a:currentVariableChanged(com.intellij.codeInsight.template.impl.TemplateState,com.intellij.codeInsight.template.Template,I,I):V
- a:templateCancelled(com.intellij.codeInsight.template.Template):V
- a:templateFinished(com.intellij.codeInsight.template.Template,Z):V
- a:waitingForInput(com.intellij.codeInsight.template.Template):V
com.intellij.codeInsight.template.TemplateLookupSelectionHandler
- sf:KEY_IN_LOOKUP_ITEM:com.intellij.openapi.util.Key
- a:itemSelected(com.intellij.codeInsight.lookup.LookupElement,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,I,I):V
a:com.intellij.codeInsight.template.TemplateManager
- sf:TEMPLATE_STARTED_TOPIC:com.intellij.util.messages.Topic
- <init>():V
- a:createTemplate(java.lang.String,java.lang.String):com.intellij.codeInsight.template.Template
- a:createTemplate(java.lang.String,java.lang.String,java.lang.String):com.intellij.codeInsight.template.Template
- a:finishTemplate(com.intellij.openapi.editor.Editor):Z
- a:getActiveTemplate(com.intellij.openapi.editor.Editor):com.intellij.codeInsight.template.Template
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.template.TemplateManager
- a:runTemplate(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.Template):com.intellij.codeInsight.template.impl.TemplateState
- a:startTemplate(com.intellij.openapi.editor.Editor,C):Z
- a:startTemplate(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.Template):V
- a:startTemplate(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.Template,com.intellij.codeInsight.template.TemplateEditingListener):V
- a:startTemplate(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.Template,com.intellij.codeInsight.template.TemplateEditingListener,com.intellij.util.PairProcessor):V
- a:startTemplate(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.Template,Z,java.util.Map,com.intellij.codeInsight.template.TemplateEditingListener):V
- a:startTemplate(com.intellij.openapi.editor.Editor,java.lang.String,com.intellij.codeInsight.template.Template):V
com.intellij.codeInsight.template.TemplateManagerListener
- java.util.EventListener
- a:templateStarted(com.intellij.codeInsight.template.impl.TemplateState):V
c:com.intellij.codeInsight.template.impl.EmptyNode
- com.intellij.codeInsight.template.Expression
- <init>():V
- calculateLookupItems(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateResult(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- requiresCommittedPSI():Z
c:com.intellij.codeInsight.template.impl.MacroCallNode
- com.intellij.codeInsight.template.Expression
- <init>(com.intellij.codeInsight.template.Macro):V
- addParameter(com.intellij.codeInsight.template.Expression):V
- calculateLookupItems(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateResult(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- getLookupFocusDegree():com.intellij.codeInsight.lookup.LookupFocusDegree
- getMacro():com.intellij.codeInsight.template.Macro
- getParameters():com.intellij.codeInsight.template.Expression[]
f:com.intellij.codeInsight.template.impl.MacroParser
- <init>():V
- s:parse(java.lang.String):com.intellij.codeInsight.template.Expression
c:com.intellij.codeInsight.template.impl.SelectionNode
- com.intellij.codeInsight.template.Expression
- <init>():V
- calculateLookupItems(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateResult(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- requiresCommittedPSI():Z
f:com.intellij.codeInsight.template.impl.TemplateContext
- <init>():V
- createCopy():com.intellij.codeInsight.template.impl.TemplateContext
- s:getIdToType():kotlin.Lazy
- getOwnValue(com.intellij.codeInsight.template.TemplateContextType):java.lang.Boolean
- isEnabled(com.intellij.codeInsight.template.TemplateContextType):Z
- readTemplateContext(org.jdom.Element):V
- setDefaultContext(com.intellij.codeInsight.template.impl.TemplateContext):V
- setEnabled(com.intellij.codeInsight.template.TemplateContextType,Z):V
- writeTemplateContext(com.intellij.codeInsight.template.impl.TemplateContext):org.jdom.Element
- writeTemplateContext(com.intellij.codeInsight.template.impl.TemplateContext,kotlin.Lazy):org.jdom.Element
f:com.intellij.codeInsight.template.impl.TemplateContextTypes
- <init>():V
- s:getAllContextTypes():java.util.List
- s:getByClass(java.lang.Class):com.intellij.codeInsight.template.TemplateContextType
- s:getByClassOrNull(java.lang.Class):com.intellij.codeInsight.template.TemplateContextType
c:com.intellij.codeInsight.template.impl.TemplateImpl
- com.intellij.codeInsight.template.Template
- com.intellij.openapi.options.SchemeElement
- sf:ARG:java.lang.String
- sf:INTERNAL_VARS_SET:java.util.Set
- <init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- addEndVariable():V
- addSelectionEndVariable():V
- addSelectionStartVariable():V
- addVariable(com.intellij.codeInsight.template.Expression,Z):com.intellij.codeInsight.template.impl.Variable
- addVariable(com.intellij.codeInsight.template.impl.Variable):V
- addVariable(java.lang.String,com.intellij.codeInsight.template.Expression,com.intellij.codeInsight.template.Expression,Z,Z):com.intellij.codeInsight.template.impl.Variable
- addVariable(java.lang.String,java.lang.String,java.lang.String,Z):com.intellij.codeInsight.template.impl.Variable
- applyContext(com.intellij.codeInsight.template.impl.TemplateContext):V
- applyOptions(java.util.Map):V
- copy():com.intellij.codeInsight.template.impl.TemplateImpl
- createContext():com.intellij.codeInsight.template.impl.TemplateContext
- createOptions():java.util.Map
- equals(java.lang.Object):Z
- getDefaultValueStringAt(I):java.lang.String
- getDescription():java.lang.String
- getEndSegmentNumber():I
- getExpressionStringAt(I):java.lang.String
- getGroupName():java.lang.String
- getId():java.lang.String
- getKey():java.lang.String
- getShortcutChar():C
- getTemplateContext():com.intellij.codeInsight.template.impl.TemplateContext
- getVariableCount():I
- getVariableNameAt(I):java.lang.String
- getVariables():java.util.ArrayList
- hasArgument():Z
- hashCode():I
- isAlwaysStopAt(I):Z
- isDeactivated():Z
- isInline():Z
- isToIndent():Z
- isToReformat():Z
- isToShortenLongNames():Z
- removeAllParsed():V
- removeVariable(I):V
- resetFrom(com.intellij.codeInsight.template.impl.TemplateImpl):V
- setDeactivated(Z):V
- setDescription(java.lang.String):V
- setGroupName(java.lang.String):V
- setId(java.lang.String):V
- setInline(Z):V
- setKey(java.lang.String):V
- setPrimarySegment(I):V
- setShortcutChar(C):V
- setToIndent(Z):V
- setToReformat(Z):V
- setToShortenLongNames(Z):V
com.intellij.codeInsight.template.impl.TemplateOptionalProcessor
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getOptionName():java.lang.String
- a:isEnabled(com.intellij.codeInsight.template.Template):Z
- isVisible(com.intellij.codeInsight.template.Template,com.intellij.codeInsight.template.impl.TemplateContext):Z
- a:processText(com.intellij.openapi.project.Project,com.intellij.codeInsight.template.Template,com.intellij.openapi.editor.Document,com.intellij.openapi.editor.RangeMarker,com.intellij.openapi.editor.Editor):V
- setEnabled(com.intellij.codeInsight.template.Template,Z):V
com.intellij.codeInsight.template.impl.TemplatePreprocessor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:preprocessTemplate(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I,java.lang.String,java.lang.String):V
f:com.intellij.codeInsight.template.impl.TemplateState
- com.intellij.codeInsight.template.impl.TemplateStateBase
- com.intellij.openapi.Disposable
- sf:FORCE_TEMPLATE_RUNNING:com.intellij.openapi.util.Key
- sf:TEMPLATE_RANGE_HIGHLIGHTER_KEY:com.intellij.openapi.util.Key
- addTemplateStateListener(com.intellij.codeInsight.template.TemplateEditingListener):V
- considerNextTabOnLookupItemSelected(com.intellij.codeInsight.lookup.LookupElement):V
- dispose():V
- focusCurrentHighlighter(Z):V
- getCurrentExpressionContext():com.intellij.codeInsight.template.ExpressionContext
- getCurrentVariableNumber():I
- getCurrentVariableRange():com.intellij.openapi.util.TextRange
- getExpressionContextForSegment(I):com.intellij.codeInsight.template.ExpressionContext
- getProject():com.intellij.openapi.project.Project
- getSegmentRange(I):com.intellij.openapi.util.TextRange
- getSegmentsCount():I
- getTemplate():com.intellij.codeInsight.template.impl.TemplateImpl
- getVariableRange(java.lang.String):com.intellij.openapi.util.TextRange
- gotoEnd():V
- gotoEnd(Z):V
- isFinished():Z
- isLastVariable():Z
- isToProcessTab():Z
- nextTab():V
- previousTab():V
- setSegmentsGreedy(Z):V
- setTabStopHighlightersGreedy(Z):V
c:com.intellij.codeInsight.template.impl.TemplateStateBase
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Document):V
- p:getDocument():com.intellij.openapi.editor.Document
- getEditor():com.intellij.openapi.editor.Editor
- p:getPredefinedVariableValues():java.util.Map
- getProperties():java.util.Map
- p:getSelectionBeforeTemplate():java.lang.String
- getVariableValue(java.lang.String):com.intellij.codeInsight.template.TextResult
- p:restoreEmptyVariables(java.util.List):V
- p:setDocument(com.intellij.openapi.editor.Document):V
- p:setEditor(com.intellij.openapi.editor.Editor):V
- p:setPredefinedVariableValues(java.util.Map):V
f:com.intellij.codeInsight.template.impl.TemplateSubstitutionContext
- getDocument():com.intellij.openapi.editor.Document
- getOffset():I
- getProject():com.intellij.openapi.project.Project
- getPsiFile():com.intellij.psi.PsiFile
c:com.intellij.codeInsight.template.impl.Variable
- java.lang.Cloneable
- <init>(com.intellij.codeInsight.template.impl.Variable):V
- <init>(java.lang.String,com.intellij.codeInsight.template.Expression,com.intellij.codeInsight.template.Expression,Z,Z):V
- <init>(java.lang.String,java.lang.String,java.lang.String,Z):V
- clone():java.lang.Object
- equals(java.lang.Object):Z
- getDefaultValueExpression():com.intellij.codeInsight.template.Expression
- getDefaultValueString():java.lang.String
- getExpression():com.intellij.codeInsight.template.Expression
- getExpressionString():java.lang.String
- getName():java.lang.String
- hashCode():I
- isAlwaysStopAt():Z
- setAlwaysStopAt(Z):V
- setDefaultValueString(java.lang.String):V
- setExpressionString(java.lang.String):V
- skipOnStart():Z
c:com.intellij.codeInsight.template.impl.VariableNode
- com.intellij.codeInsight.template.Expression
- <init>(java.lang.String,com.intellij.codeInsight.template.Expression):V
- calculateLookupItems(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateResult(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- getInitialValue():com.intellij.codeInsight.template.Expression
- getName():java.lang.String
- requiresCommittedPSI():Z
f:com.intellij.codeInsight.template.macro.MacroFactory
- <init>():V
- s:createMacro(java.lang.String):com.intellij.codeInsight.template.Macro
- s:getMacros():com.intellij.codeInsight.template.Macro[]
- s:getMacros(java.lang.String):java.util.List
com.intellij.codeInsight.template.macro.TemplateCompletionProcessor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:nextTabOnItemSelected(com.intellij.codeInsight.template.ExpressionContext,com.intellij.codeInsight.lookup.LookupElement):Z
f:com.intellij.codeInsight.util.CodeCompletionKt
- sf:CodeCompletion:com.intellij.platform.diagnostic.telemetry.Scope
c:com.intellij.codeInspection.AddToInspectionOptionListFix
- com.intellij.modcommand.ModCommandQuickFix
- com.intellij.codeInsight.intention.LowPriorityAction
- <init>(com.intellij.codeInspection.InspectionProfileEntry,java.lang.String,java.lang.String,java.util.function.Function):V
- getFamilyName():java.lang.String
- getName():java.lang.String
- perform(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):com.intellij.modcommand.ModCommand
c:com.intellij.codeInspection.CommonProblemDescriptorImpl
- com.intellij.codeInspection.CommonProblemDescriptor
- getDescriptionTemplate():java.lang.String
- getFixes():com.intellij.codeInspection.QuickFix[]
c:com.intellij.codeInspection.DefaultInspectionToolResultExporter
- com.intellij.codeInspection.InspectionToolResultExporter
- sf:INSPECTION_RESULTS_ATTRIBUTE_KEY_ATTRIBUTE:java.lang.String
- sf:INSPECTION_RESULTS_DESCRIPTION_ELEMENT:java.lang.String
- sf:INSPECTION_RESULTS_FINGERPRINT_DATA:java.lang.String
- psf:INSPECTION_RESULTS_HINTS_ELEMENT:java.lang.String
- psf:INSPECTION_RESULTS_HINT_ELEMENT:java.lang.String
- sf:INSPECTION_RESULTS_ID_ATTRIBUTE:java.lang.String
- sf:INSPECTION_RESULTS_LANGUAGE:java.lang.String
- sf:INSPECTION_RESULTS_PROBLEM_CLASS_ELEMENT:java.lang.String
- sf:INSPECTION_RESULTS_SEVERITY_ATTRIBUTE:java.lang.String
- psf:INSPECTION_RESULTS_VALUE_ATTRIBUTE:java.lang.String
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- pf:myContext:com.intellij.codeInspection.ex.GlobalInspectionContextEx
- pf:myProblemElements:com.intellij.codeInspection.ui.util.SynchronizedBidiMultiMap
- pf:mySuppressedElements:com.intellij.codeInspection.ui.util.SynchronizedBidiMultiMap
- pf:myToolWrapper:com.intellij.codeInspection.ex.InspectionToolWrapper
- <init>(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ex.GlobalInspectionContextEx):V
- addProblemElement(com.intellij.codeInspection.reference.RefEntity,Z,com.intellij.codeInspection.CommonProblemDescriptor[]):V
- addProblemElement(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.CommonProblemDescriptor[]):V
- amnesty(com.intellij.codeInspection.CommonProblemDescriptor):V
- amnesty(com.intellij.codeInspection.reference.RefEntity):V
- p:clearContents():V
- exclude(com.intellij.codeInspection.CommonProblemDescriptor):V
- exclude(com.intellij.codeInspection.reference.RefEntity):V
- exportResults(java.util.function.Consumer,com.intellij.codeInspection.reference.RefEntity,java.util.function.Predicate):V
- exportResults(java.util.function.Consumer,java.util.function.Predicate,java.util.function.Predicate):V
- p:exportResults(com.intellij.codeInspection.CommonProblemDescriptor[],com.intellij.codeInspection.reference.RefEntity,java.util.function.BiConsumer,java.util.function.Predicate):V
- p:exportResults(com.intellij.codeInspection.CommonProblemDescriptor[],com.intellij.codeInspection.reference.RefEntity,java.util.function.Consumer,java.util.function.Predicate):V
- p:filterResolvedItems():Z
- getContent():java.util.Map
- getContext():com.intellij.codeInspection.ex.GlobalInspectionContextEx
- getElement(com.intellij.codeInspection.CommonProblemDescriptor):com.intellij.codeInspection.reference.RefEntity
- getProblemDescriptors():java.util.Collection
- getProblemElements():com.intellij.codeInspection.ui.util.SynchronizedBidiMultiMap
- getProject():com.intellij.openapi.project.Project
- getRefManager():com.intellij.codeInspection.reference.RefManager
- getResolvedElements():java.util.Collection
- getResolvedProblems(com.intellij.codeInspection.reference.RefEntity):com.intellij.codeInspection.CommonProblemDescriptor[]
- getSeverity(com.intellij.codeInspection.reference.RefElement):com.intellij.lang.annotation.HighlightSeverity
- p:getSeverityDelegateName():java.lang.String
- getToolWrapper():com.intellij.codeInspection.ex.InspectionToolWrapper
- hasReportedProblems():com.intellij.util.ThreeState
- isExcluded(com.intellij.codeInspection.CommonProblemDescriptor):Z
- isExcluded(com.intellij.codeInspection.reference.RefEntity):Z
- isProblemResolved(com.intellij.codeInspection.CommonProblemDescriptor):Z
- isProblemResolved(com.intellij.codeInspection.reference.RefEntity):Z
- p:registerContentEntry(com.intellij.codeInspection.reference.RefEntity,java.lang.String):V
- resolveProblem(com.intellij.codeInspection.CommonProblemDescriptor):V
- suppressProblem(com.intellij.codeInspection.CommonProblemDescriptor):V
- suppressProblem(com.intellij.codeInspection.reference.RefEntity):V
- updateContent():V
- p:updateProblemElements():V
- p:writeOutput(com.intellij.codeInspection.CommonProblemDescriptor[],com.intellij.codeInspection.reference.RefEntity):V
f:com.intellij.codeInspection.DeprecationUtil
- sf:DEPRECATION_ID:java.lang.String
- sf:DEPRECATION_SHORT_NAME:java.lang.String
- sf:FOR_REMOVAL_ID:java.lang.String
- sf:FOR_REMOVAL_SHORT_NAME:java.lang.String
- <init>():V
- s:getDeprecationDisplayName():java.lang.String
- s:getForRemovalDisplayName():java.lang.String
com.intellij.codeInspection.ExportedInspectionsResultModifier
- a:modifyResult(org.jdom.Element):V
c:com.intellij.codeInspection.ExternalAnnotatorInspectionVisitor
- com.intellij.psi.PsiElementVisitor
- <init>(com.intellij.codeInspection.ProblemsHolder,com.intellij.lang.annotation.ExternalAnnotator,Z):V
- s:checkFileWithExternalAnnotator(com.intellij.psi.PsiFile,com.intellij.codeInspection.InspectionManager,Z,com.intellij.lang.annotation.ExternalAnnotator):com.intellij.codeInspection.ProblemDescriptor[]
- visitFile(com.intellij.psi.PsiFile):V
c:com.intellij.codeInspection.ExternalAnnotatorInspectionVisitor$LocalQuickFixBackedByIntentionAction
- com.intellij.codeInspection.LocalQuickFixBackedByIntentionAction
- <init>(com.intellij.codeInsight.intention.IntentionAction):V
f:com.intellij.codeInspection.GlobalInspectionUtil
- <init>():V
- s:createInspectionMessage(java.lang.String):java.lang.String
- s:createProblem(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.openapi.util.TextRange,com.intellij.lang.annotation.ProblemGroup,com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.ProblemDescriptionsProcessor,com.intellij.codeInspection.GlobalInspectionContext):V
- s:createProblemDescriptor(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.openapi.util.TextRange,com.intellij.lang.annotation.ProblemGroup,com.intellij.codeInspection.InspectionManager):com.intellij.codeInspection.ProblemDescriptor
f:com.intellij.codeInspection.InspectionEngine
- <init>():V
- s:calcElementDialectIds(java.util.List,java.util.List):java.util.Set
- s:createVisitor(com.intellij.codeInspection.LocalInspectionTool,com.intellij.codeInspection.ProblemsHolder,Z,com.intellij.codeInspection.LocalInspectionToolSession):com.intellij.psi.PsiElementVisitor
- s:filterToolsApplicableByLanguage(java.util.Collection,java.util.Set,java.util.Set):java.util.List
- s:inspectElements(java.util.List,com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange,Z,Z,com.intellij.openapi.progress.ProgressIndicator,java.util.List,com.intellij.util.PairProcessor):java.util.Map
- s:inspectEx(java.util.List,com.intellij.psi.PsiFile,com.intellij.codeInspection.InspectionManager,Z,com.intellij.openapi.progress.ProgressIndicator):java.util.Map
- s:inspectEx(java.util.List,com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange,com.intellij.openapi.util.TextRange,Z,Z,Z,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.PairProcessor):java.util.Map
- s:runInspectionOnFile(com.intellij.psi.PsiFile,com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.GlobalInspectionContext):java.util.List
a:com.intellij.codeInspection.InspectionManagerBase
- com.intellij.codeInspection.InspectionManager
- <init>(com.intellij.openapi.project.Project):V
- createProblemDescriptor(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.String,com.intellij.codeInspection.ProblemHighlightType,Z,com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.ProblemDescriptor
- createProblemDescriptor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.ProblemHighlightType,Z,com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.ProblemDescriptor
- createProblemDescriptor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.ProblemHighlightType,com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.ProblemDescriptor
- createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix,com.intellij.codeInspection.ProblemHighlightType):com.intellij.codeInspection.ProblemDescriptor
- createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix,com.intellij.codeInspection.ProblemHighlightType,Z):com.intellij.codeInspection.ProblemDescriptor
- createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,Z,com.intellij.codeInspection.ProblemHighlightType,Z,com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.ProblemDescriptor
- createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,Z,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType):com.intellij.codeInspection.ProblemDescriptor
- createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType):com.intellij.codeInspection.ProblemDescriptor
- createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType,Z):com.intellij.codeInspection.ProblemDescriptor
- createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType,Z,Z):com.intellij.codeInspection.ProblemDescriptor
- createProblemDescriptor(java.lang.String,com.intellij.openapi.module.Module,com.intellij.codeInspection.QuickFix[]):com.intellij.codeInspection.ModuleProblemDescriptor
- createProblemDescriptor(java.lang.String,com.intellij.codeInspection.QuickFix[]):com.intellij.codeInspection.CommonProblemDescriptor
- defaultProcessFile(com.intellij.codeInspection.LocalInspectionTool,com.intellij.psi.PsiFile):java.util.List
- getCurrentProfile():java.lang.String
- getProject():com.intellij.openapi.project.Project
- setProfile(java.lang.String):V
com.intellij.codeInspection.InspectionToolResultExporter
- com.intellij.codeInspection.ProblemDescriptionsProcessor
- a:addProblemElement(com.intellij.codeInspection.reference.RefEntity,Z,com.intellij.codeInspection.CommonProblemDescriptor[]):V
- a:amnesty(com.intellij.codeInspection.CommonProblemDescriptor):V
- a:amnesty(com.intellij.codeInspection.reference.RefEntity):V
- a:exclude(com.intellij.codeInspection.CommonProblemDescriptor):V
- a:exclude(com.intellij.codeInspection.reference.RefEntity):V
- a:exportResults(java.util.function.Consumer,com.intellij.codeInspection.reference.RefEntity,java.util.function.Predicate):V
- a:exportResults(java.util.function.Consumer,java.util.function.Predicate,java.util.function.Predicate):V
- a:getContent():java.util.Map
- a:getProblemDescriptors():java.util.Collection
- a:getProblemElements():com.intellij.codeInspection.ui.util.SynchronizedBidiMultiMap
- a:getProject():com.intellij.openapi.project.Project
- a:getResolvedElements():java.util.Collection
- a:getResolvedProblems(com.intellij.codeInspection.reference.RefEntity):com.intellij.codeInspection.CommonProblemDescriptor[]
- a:getSeverity(com.intellij.codeInspection.reference.RefElement):com.intellij.lang.annotation.HighlightSeverity
- s:getSeverity(com.intellij.codeInspection.reference.RefEntity,com.intellij.psi.PsiElement,com.intellij.codeInspection.InspectionToolResultExporter):com.intellij.lang.annotation.HighlightSeverity
- a:getToolWrapper():com.intellij.codeInspection.ex.InspectionToolWrapper
- a:hasReportedProblems():com.intellij.util.ThreeState
- a:isExcluded(com.intellij.codeInspection.CommonProblemDescriptor):Z
- a:isExcluded(com.intellij.codeInspection.reference.RefEntity):Z
- a:isProblemResolved(com.intellij.codeInspection.CommonProblemDescriptor):Z
- a:isProblemResolved(com.intellij.codeInspection.reference.RefEntity):Z
- a:suppressProblem(com.intellij.codeInspection.CommonProblemDescriptor):V
- a:suppressProblem(com.intellij.codeInspection.reference.RefEntity):V
- a:updateContent():V
f:com.intellij.codeInspection.InspectionsResultUtil
- sf:AGGREGATE:java.lang.String
- sf:DESCRIPTIONS:java.lang.String
- sf:INSPECTIONS_NODE:java.lang.String
- sf:PROFILE:java.lang.String
- sf:XML_EXTENSION:java.lang.String
- <init>():V
- s:describeInspections(java.nio.file.Path,java.lang.String,com.intellij.codeInspection.InspectionProfile):V
- s:getInspectionResultPath(java.nio.file.Path,java.lang.String):java.nio.file.Path
- s:getWriter(java.nio.file.Path,java.lang.String):java.io.BufferedWriter
- s:writeInspectionResult(com.intellij.openapi.project.Project,java.lang.String,java.util.Collection,java.nio.file.Path,java.util.function.Function):V
c:com.intellij.codeInspection.ProblemDescriptorBase
- com.intellij.codeInspection.CommonProblemDescriptorImpl
- com.intellij.codeInspection.ProblemDescriptor
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType,Z,com.intellij.openapi.util.TextRange,Z,Z):V
- getContainingFile():com.intellij.openapi.vfs.VirtualFile
- getEndElement():com.intellij.psi.PsiElement
- getEnforcedTextAttributes():com.intellij.openapi.editor.colors.TextAttributesKey
- getFixes():com.intellij.codeInspection.LocalQuickFix[]
- getHighlightType():com.intellij.codeInspection.ProblemHighlightType
- getLineNumber():I
- getLineStartOffset():I
- getNavigatable():com.intellij.pom.Navigatable
- getProblemGroup():com.intellij.lang.annotation.ProblemGroup
- getProject():com.intellij.openapi.project.Project
- getPsiElement():com.intellij.psi.PsiElement
- getStartElement():com.intellij.psi.PsiElement
- getTextRange():com.intellij.openapi.util.TextRange
- getTextRangeForNavigation():com.intellij.openapi.util.TextRange
- getTextRangeInElement():com.intellij.openapi.util.TextRange
- isAfterEndOfLine():Z
- isOnTheFly():Z
- setNavigatable(com.intellij.pom.Navigatable):V
- setProblemGroup(com.intellij.lang.annotation.ProblemGroup):V
- setTextAttributes(com.intellij.openapi.editor.colors.TextAttributesKey):V
- showTooltip():Z
f:com.intellij.codeInspection.ProblemDescriptorUtil
- sf:LOC_REFERENCE:java.lang.String
- sf:NONE:I
- sf:REF_REFERENCE:java.lang.String
- sf:TRIM_AT_TREE_END:I
- sf:XML_CODE_MARKER:com.intellij.openapi.util.Couple
- <init>():V
- s:convertToProblemDescriptors(java.util.List,com.intellij.psi.PsiFile):com.intellij.codeInspection.ProblemDescriptor[]
- s:extractHighlightedText(com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.psi.PsiElement):java.lang.String
- s:extractHighlightedText(com.intellij.openapi.util.TextRange,com.intellij.psi.PsiElement):java.lang.String
- s:getHighlightInfoType(com.intellij.codeInspection.ProblemHighlightType,com.intellij.lang.annotation.HighlightSeverity,com.intellij.codeInsight.daemon.impl.SeverityRegistrar):com.intellij.codeInsight.daemon.impl.HighlightInfoType
- s:highlightTypeFromDescriptor(com.intellij.codeInspection.ProblemDescriptor,com.intellij.lang.annotation.HighlightSeverity,com.intellij.codeInsight.daemon.impl.SeverityRegistrar):com.intellij.codeInsight.daemon.impl.HighlightInfoType
- s:removeLocReference(java.lang.String):java.lang.String
- s:renderDescriptionMessage(com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.psi.PsiElement):java.lang.String
- s:renderDescriptionMessage(com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.psi.PsiElement,I):java.lang.String
- s:renderDescriptionMessage(com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.psi.PsiElement,Z):java.lang.String
- s:renderDescriptor(com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.psi.PsiElement,I):com.intellij.codeInspection.ProblemDescriptorUtil$ProblemPresentation
- s:sanitizeIllegalXmlChars(java.lang.String):java.lang.String
- s:toProblemDescriptor(com.intellij.psi.PsiFile,com.intellij.codeInsight.daemon.impl.HighlightInfo):com.intellij.codeInspection.ProblemDescriptor
- s:unescapeTags(java.lang.String):java.lang.String
com.intellij.codeInspection.ProblemDescriptorUtil$ProblemPresentation
- a:getDescription():java.lang.String
- a:getTooltip():java.lang.String
c:com.intellij.codeInspection.SetInspectionOptionFix
- com.intellij.codeInspection.IntentionAndQuickFixAction
- com.intellij.codeInsight.intention.LowPriorityAction
- com.intellij.openapi.util.Iconable
- <init>(com.intellij.codeInspection.LocalInspectionTool,java.lang.String,java.lang.String,I):V
- <init>(com.intellij.codeInspection.LocalInspectionTool,java.lang.String,java.lang.String,Z):V
- applyFix(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):V
- availableInBatchMode():Z
- generatePreview(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getFamilyName():java.lang.String
- getIcon(I):javax.swing.Icon
- getName():java.lang.String
- startInWriteAction():Z
f:com.intellij.codeInspection.SuppressIntentionActionFromFix
- com.intellij.codeInspection.SuppressIntentionAction
- java.lang.Comparable
- asModCommandAction():com.intellij.modcommand.ModCommandAction
- compareTo(com.intellij.codeInsight.intention.IntentionAction):I
- s:convertBatchToSuppressIntentionAction(com.intellij.codeInspection.SuppressQuickFix):com.intellij.codeInspection.SuppressIntentionAction
- s:convertBatchToSuppressIntentionActions(com.intellij.codeInspection.SuppressQuickFix[]):com.intellij.codeInspection.SuppressIntentionAction[]
- getContainer(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):Z
- isShouldBeAppliedToInjectionHost():com.intellij.util.ThreeState
- isSuppressAll():Z
- startInWriteAction():Z
f:com.intellij.codeInspection.SuppressionUtil
- sf:ALL:java.lang.String
- sf:COMMON_SUPPRESS_REGEXP:java.lang.String
- sf:FILE_PREFIX:java.lang.String
- sf:SUPPRESS_IN_FILE_LINE_COMMENT_PATTERN:java.util.regex.Pattern
- sf:SUPPRESS_IN_LINE_COMMENT_PATTERN:java.util.regex.Pattern
- s:createComment(com.intellij.openapi.project.Project,java.lang.String,com.intellij.lang.Language):com.intellij.psi.PsiComment
- s:createSuppression(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.lang.String,com.intellij.lang.Language):V
- s:getLineCommentPrefix(com.intellij.psi.PsiElement):java.lang.String
- s:getStatementToolSuppressedIn(com.intellij.psi.PsiElement,java.lang.String,java.lang.Class):com.intellij.psi.PsiElement
- s:getStatementToolSuppressedIn(com.intellij.psi.PsiElement,java.lang.String,java.lang.Class,java.util.regex.Pattern):com.intellij.psi.PsiElement
- s:inspectionResultSuppressed(com.intellij.psi.PsiElement,com.intellij.codeInspection.InspectionProfileEntry):Z
- s:inspectionResultSuppressed(com.intellij.psi.PsiElement,com.intellij.codeInspection.LocalInspectionTool):Z
- s:isInspectionToolIdMentioned(java.lang.String,java.lang.String):Z
- s:isSuppressed(com.intellij.psi.PsiElement,java.lang.String):Z
- s:isSuppressedInStatement(com.intellij.psi.PsiElement,java.lang.String,java.lang.Class):Z
- s:isSuppressionComment(com.intellij.psi.PsiElement):Z
- s:replaceSuppressionComment(com.intellij.psi.PsiElement,java.lang.String,Z,com.intellij.lang.Language):V
c:com.intellij.codeInspection.UpdateInspectionOptionFix
- com.intellij.modcommand.ModCommandAction
- <init>(com.intellij.codeInspection.InspectionProfileEntry,java.lang.String,java.lang.String,I):V
- <init>(com.intellij.codeInspection.InspectionProfileEntry,java.lang.String,java.lang.String,Z):V
- getFamilyName():java.lang.String
- getPresentation(com.intellij.modcommand.ActionContext):com.intellij.modcommand.Presentation
- perform(com.intellij.modcommand.ActionContext):com.intellij.modcommand.ModCommand
f:com.intellij.codeInspection.actions.CleanupAllIntention
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.codeInsight.intention.LowPriorityAction
- sf:INSTANCE:com.intellij.codeInspection.actions.CleanupAllIntention
- getFamilyName():java.lang.String
com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter
- a:cancel():V
- a:createClosureState(com.intellij.psi.PsiElement,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):V
- a:getComplexityLimit():I
- a:getFactory():com.intellij.codeInspection.dataFlow.value.DfaValueFactory
- a:getInstruction(I):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- a:getListener():com.intellij.codeInspection.dataFlow.lang.DfaListener
- a:interpret(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
- a:interpret(java.util.List):com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
c:com.intellij.codeInspection.dataFlow.interpreter.ReachabilityCountingInterpreter
- com.intellij.codeInspection.dataFlow.interpreter.StandardDataFlowInterpreter
- pf:myReached:java.util.BitSet
- <init>(com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow,com.intellij.codeInspection.dataFlow.lang.DfaListener,Z,Z,I):V
- p:acceptInstruction(com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- getUnreachable():java.util.Set
e:com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
- java.lang.Enum
- sf:ABORTED:com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
- sf:CANCELLED:com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
- sf:NOT_APPLICABLE:com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
- sf:OK:com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
- sf:TOO_COMPLEX:com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
- s:valueOf(java.lang.String):com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
- s:values():com.intellij.codeInspection.dataFlow.interpreter.RunnerResult[]
c:com.intellij.codeInspection.dataFlow.interpreter.StandardDataFlowInterpreter
- com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter
- sf:DEFAULT_MAX_STATES_PER_BRANCH:I
- <init>(com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow,com.intellij.codeInspection.dataFlow.lang.DfaListener):V
- <init>(com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow,com.intellij.codeInspection.dataFlow.lang.DfaListener,Z):V
- <init>(com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow,com.intellij.codeInspection.dataFlow.lang.DfaListener,Z,Z):V
- p:acceptInstruction(com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- p:afterInstruction(com.intellij.codeInspection.dataFlow.lang.ir.Instruction):V
- p:beforeInstruction(com.intellij.codeInspection.dataFlow.lang.ir.Instruction):V
- f:cancel():V
- createClosureState(com.intellij.psi.PsiElement,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):V
- getClosures():com.intellij.util.containers.MultiMap
- getComplexityLimit():I
- getFactory():com.intellij.codeInspection.dataFlow.value.DfaValueFactory
- getInstruction(I):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- getListener():com.intellij.codeInspection.dataFlow.lang.DfaListener
- f:interpret(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
- f:interpret(java.util.List):com.intellij.codeInspection.dataFlow.interpreter.RunnerResult
- stopOnCast():Z
- stopOnNull():Z
- wasForciblyMerged():Z
c:com.intellij.codeInspection.dataFlow.interpreter.StateQueue
- <init>():V
- getNextInstructionStates(java.util.Set):java.util.List
- isEmpty():Z
- offer(com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState):V
- processAll(com.intellij.util.Processor):Z
- s:squash(java.util.List):java.util.List
- wasForciblyMerged():Z
com.intellij.codeInspection.dataFlow.lang.DfaAnchor
com.intellij.codeInspection.dataFlow.lang.DfaListener
- sf:EMPTY:com.intellij.codeInspection.dataFlow.lang.DfaListener
- afterAssignment(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.lang.DfaAnchor):V
- beforeAssignment(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.lang.DfaAnchor):V
- beforePush(com.intellij.codeInspection.dataFlow.value.DfaValue[],com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.lang.DfaAnchor,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):V
- onCondition(com.intellij.codeInspection.dataFlow.lang.UnsatisfiedConditionProblem,com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.util.ThreeState,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):V
com.intellij.codeInspection.dataFlow.lang.UnsatisfiedConditionProblem
c:com.intellij.codeInspection.dataFlow.lang.ir.ClosureInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>(java.util.List):V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- getClosureElements():java.util.List
c:com.intellij.codeInspection.dataFlow.lang.ir.ConditionalGotoInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>(com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$ControlFlowOffset,com.intellij.codeInspection.dataFlow.types.DfType):V
- <init>(com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$ControlFlowOffset,com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.psi.PsiElement):V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- getOffset():I
- getPsiAnchor():com.intellij.psi.PsiElement
- getSuccessorIndexes():I[]
- isTarget(com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.lang.ir.Instruction):Z
- setOffset(I):V
f:com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow
- <init>(com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow,com.intellij.codeInspection.dataFlow.value.DfaValueFactory):V
- <init>(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.psi.PsiElement):V
- addInstruction(com.intellij.codeInspection.dataFlow.lang.ir.Instruction):V
- computeUnreachable(java.util.BitSet):java.util.Set
- createTempVariable(com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.value.DfaVariableValue
- finish():V
- finishElement(com.intellij.psi.PsiElement):V
- getEndOffset(com.intellij.psi.PsiElement):com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$ControlFlowOffset
- getFactory():com.intellij.codeInspection.dataFlow.value.DfaValueFactory
- getInstruction(I):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- getInstructionCount():I
- getInstructions():com.intellij.codeInspection.dataFlow.lang.ir.Instruction[]
- getLoopNumbers():I[]
- getNextOffset():com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$ControlFlowOffset
- getPsiAnchor():com.intellij.psi.PsiElement
- getStartOffset(com.intellij.psi.PsiElement):com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$ControlFlowOffset
- getSynthetics(com.intellij.psi.PsiElement):java.util.List
- s:isTempVariable(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):Z
- keepVariables(java.util.function.Predicate):V
- makeNop(I):V
- startElement(com.intellij.psi.PsiElement):V
a:com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$ControlFlowOffset
- <init>():V
- a:getInstructionOffset():I
c:com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$DeferredOffset
- com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$ControlFlowOffset
- <init>():V
- getInstructionOffset():I
- setOffset(I):V
c:com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$FixedOffset
- com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$ControlFlowOffset
- <init>(I):V
- getInstructionOffset():I
f:com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$Synthetic
- com.intellij.codeInspection.dataFlow.value.VariableDescriptor
- getDfType(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):com.intellij.codeInspection.dataFlow.types.DfType
- isStable():Z
c:com.intellij.codeInspection.dataFlow.lang.ir.ControlTransferInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>(com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue):V
- <init>(com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue,Z):V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- getSuccessorIndexes():I[]
- getTransfer():com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue
- isLinear():Z
com.intellij.codeInspection.dataFlow.lang.ir.DataFlowIRProvider
- sf:EP_NAME:com.intellij.lang.LanguageExtension
- s:computeUnreachableSegments(com.intellij.psi.PsiElement,java.util.Set):java.util.Collection
- a:createControlFlow(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.psi.PsiElement):com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow
- s:forElement(com.intellij.psi.PsiElement,com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow
- unreachableSegments(com.intellij.psi.PsiElement,java.util.Set):java.util.Collection
c:com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState
- java.lang.Comparable
- sf:EMPTY_ARRAY:com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- <init>(com.intellij.codeInspection.dataFlow.lang.ir.Instruction,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):V
- compareTo(com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState):I
- equals(java.lang.Object):Z
- getInstruction():com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- getMemoryState():com.intellij.codeInspection.dataFlow.memory.DfaMemoryState
- hashCode():I
- nextStates(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
c:com.intellij.codeInspection.dataFlow.lang.ir.DupInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>():V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
c:com.intellij.codeInspection.dataFlow.lang.ir.EnsureInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>(com.intellij.codeInspection.dataFlow.lang.UnsatisfiedConditionProblem,com.intellij.codeInspection.dataFlow.value.RelationType,com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue):V
- <init>(com.intellij.codeInspection.dataFlow.lang.UnsatisfiedConditionProblem,com.intellij.codeInspection.dataFlow.value.RelationType,com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue,Z):V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- createCondition(com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.DfaCondition
- getExceptionTransfer():com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue
- getProblem():com.intellij.codeInspection.dataFlow.lang.UnsatisfiedConditionProblem
- getSuccessorIndexes():I[]
- isLinear():Z
a:com.intellij.codeInspection.dataFlow.lang.ir.EvalInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.ExpressionPushingInstruction
- p:<init>(com.intellij.codeInspection.dataFlow.lang.DfaAnchor,I):V
- f:accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- a:eval(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.value.DfaValue[]):com.intellij.codeInspection.dataFlow.value.DfaValue
- f:getOperands():I
c:com.intellij.codeInspection.dataFlow.lang.ir.EvalUnknownInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.EvalInstruction
- <init>(com.intellij.codeInspection.dataFlow.lang.DfaAnchor,I):V
- <init>(com.intellij.codeInspection.dataFlow.lang.DfaAnchor,I,com.intellij.codeInspection.dataFlow.types.DfType):V
- eval(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.value.DfaValue[]):com.intellij.codeInspection.dataFlow.value.DfaValue
a:com.intellij.codeInspection.dataFlow.lang.ir.ExpressionPushingInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- p:<init>(com.intellij.codeInspection.dataFlow.lang.DfaAnchor):V
- getDfaAnchor():com.intellij.codeInspection.dataFlow.lang.DfaAnchor
- pf:pushResult(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.value.DfaValue[]):V
- pf:pushResult(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.DfaValue[]):V
c:com.intellij.codeInspection.dataFlow.lang.ir.FinishElementInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>(com.intellij.psi.PsiElement):V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- flushVars(java.util.Collection):V
- mayFlushSomething():Z
- removeFromFlushList(java.util.function.Predicate):V
c:com.intellij.codeInspection.dataFlow.lang.ir.FlushFieldsInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>():V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
c:com.intellij.codeInspection.dataFlow.lang.ir.FlushVariableInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- getVariable():com.intellij.codeInspection.dataFlow.value.DfaVariableValue
c:com.intellij.codeInspection.dataFlow.lang.ir.GetQualifiedValueInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.EvalInstruction
- <init>(com.intellij.codeInspection.dataFlow.value.VariableDescriptor):V
- <init>(com.intellij.codeInspection.dataFlow.value.VariableDescriptor,com.intellij.codeInspection.dataFlow.lang.DfaAnchor):V
- eval(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.value.DfaValue[]):com.intellij.codeInspection.dataFlow.value.DfaValue
- getRequiredDescriptors(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):java.util.List
c:com.intellij.codeInspection.dataFlow.lang.ir.GotoInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>(com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$ControlFlowOffset):V
- <init>(com.intellij.codeInspection.dataFlow.lang.ir.ControlFlow$ControlFlowOffset,Z):V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- getOffset():I
- getSuccessorIndexes():I[]
- setOffset(I):V
- shouldWidenBackBranch():Z
a:com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>():V
- a:accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- getIndex():I
- getRequiredDescriptors(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):java.util.List
- getSuccessorIndexes():I[]
- isLinear():Z
- pf:nextState(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState
- pf:nextStates(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- setIndex(I):V
c:com.intellij.codeInspection.dataFlow.lang.ir.PopInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>():V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
c:com.intellij.codeInspection.dataFlow.lang.ir.PushInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.EvalInstruction
- <init>(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.lang.DfaAnchor):V
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- eval(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.value.DfaValue[]):com.intellij.codeInspection.dataFlow.value.DfaValue
- getRequiredDescriptors(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):java.util.List
- getValue():com.intellij.codeInspection.dataFlow.value.DfaValue
c:com.intellij.codeInspection.dataFlow.lang.ir.PushValueInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.EvalInstruction
- <init>(com.intellij.codeInspection.dataFlow.types.DfType):V
- <init>(com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.lang.DfaAnchor):V
- eval(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.value.DfaValue[]):com.intellij.codeInspection.dataFlow.value.DfaValue
- getValue():com.intellij.codeInspection.dataFlow.types.DfType
c:com.intellij.codeInspection.dataFlow.lang.ir.ResultOfInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.EvalInstruction
- <init>(com.intellij.codeInspection.dataFlow.lang.DfaAnchor):V
- eval(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.value.DfaValue[]):com.intellij.codeInspection.dataFlow.value.DfaValue
- getDfaAnchor():com.intellij.codeInspection.dataFlow.lang.DfaAnchor
c:com.intellij.codeInspection.dataFlow.lang.ir.ReturnInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.ControlTransferInstruction
- <init>(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.util.containers.FList,com.intellij.psi.PsiElement):V
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- getAnchor():com.intellij.psi.PsiElement
c:com.intellij.codeInspection.dataFlow.lang.ir.SimpleAssignmentInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.ExpressionPushingInstruction
- <init>(com.intellij.codeInspection.dataFlow.lang.DfaAnchor,com.intellij.codeInspection.dataFlow.value.DfaVariableValue):V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- getDestination():com.intellij.codeInspection.dataFlow.value.DfaVariableValue
c:com.intellij.codeInspection.dataFlow.lang.ir.SpliceInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>(I,I[]):V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
c:com.intellij.codeInspection.dataFlow.lang.ir.SwapInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.Instruction
- <init>():V
- accept(com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.lang.ir.DfaInstructionState[]
c:com.intellij.codeInspection.dataFlow.lang.ir.WrapDerivedVariableInstruction
- com.intellij.codeInspection.dataFlow.lang.ir.EvalInstruction
- <init>(com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.value.DerivedVariableDescriptor):V
- <init>(com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.value.DerivedVariableDescriptor,com.intellij.codeInspection.dataFlow.lang.DfaAnchor):V
- eval(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.value.DfaValue[]):com.intellij.codeInspection.dataFlow.value.DfaValue
- getDerivedVariableDescriptor():com.intellij.codeInspection.dataFlow.value.DerivedVariableDescriptor
com.intellij.codeInspection.dataFlow.memory.DfaMemoryState
- a:afterMerge(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):V
- a:applyCondition(com.intellij.codeInspection.dataFlow.value.DfaCondition):Z
- a:applyContractCondition(com.intellij.codeInspection.dataFlow.value.DfaCondition):Z
- a:areEqual(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.DfaValue):Z
- a:createClosureState():com.intellij.codeInspection.dataFlow.memory.DfaMemoryState
- a:createCopy():com.intellij.codeInspection.dataFlow.memory.DfaMemoryState
- a:emptyStack():V
- a:flushFields():V
- a:flushFieldsQualifiedBy(java.util.Set):V
- a:flushVariable(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):V
- a:flushVariables(java.util.function.Predicate):V
- a:forgetVariables(java.util.function.Predicate):V
- a:getDfType(com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.types.DfType
- a:getDfTypeIncludingDerived(com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.types.DfType
- a:getMergeabilityKey():java.lang.Object
- a:getRelation(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.RelationType
- a:getStackSize():I
- a:getStackValue(I):com.intellij.codeInspection.dataFlow.value.DfaValue
- a:isEmptyStack():Z
- a:isEphemeral():Z
- a:isSuperStateOf(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):Z
- a:markEphemeral():V
- a:meetDfType(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.types.DfType):Z
- a:merge(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):V
- a:peek():com.intellij.codeInspection.dataFlow.value.DfaValue
- a:pop():com.intellij.codeInspection.dataFlow.value.DfaValue
- a:push(com.intellij.codeInspection.dataFlow.value.DfaValue):V
- a:setDfType(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.types.DfType):V
- a:setVarValue(com.intellij.codeInspection.dataFlow.value.DfaVariableValue,com.intellij.codeInspection.dataFlow.value.DfaValue):V
- a:tryJoinExactly(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.memory.DfaMemoryState
- a:updateDfType(com.intellij.codeInspection.dataFlow.value.DfaValue,java.util.function.UnaryOperator):V
- a:widen():V
c:com.intellij.codeInspection.dataFlow.memory.DfaMemoryStateImpl
- com.intellij.codeInspection.dataFlow.memory.DfaMemoryState
- pf:myStack:com.intellij.util.containers.Stack
- p:<init>(com.intellij.codeInspection.dataFlow.memory.DfaMemoryStateImpl):V
- <init>(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):V
- afterMerge(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):V
- applyCondition(com.intellij.codeInspection.dataFlow.value.DfaCondition):Z
- applyContractCondition(com.intellij.codeInspection.dataFlow.value.DfaCondition):Z
- areEqual(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.DfaValue):Z
- p:canonicalize(com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.DfaValue
- p:checkEphemeral(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.DfaValue):V
- createClosureState():com.intellij.codeInspection.dataFlow.memory.DfaMemoryStateImpl
- createCopy():com.intellij.codeInspection.dataFlow.memory.DfaMemoryStateImpl
- p:doFlush(com.intellij.codeInspection.dataFlow.value.DfaVariableValue,Z):V
- emptyStack():V
- equals(java.lang.Object):Z
- p:filterDfTypeOnAssignment(com.intellij.codeInspection.dataFlow.value.DfaVariableValue,com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.types.DfType
- flushFields():V
- flushFieldsQualifiedBy(java.util.Set):V
- flushVariable(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):V
- flushVariables(java.util.function.Predicate):V
- forRecordedVariableTypes(java.util.function.BiConsumer):V
- forgetVariables(java.util.function.Predicate):V
- getBinOpRange(com.intellij.codeInspection.dataFlow.value.DfaBinOpValue):com.intellij.codeInspection.dataFlow.types.DfType
- getDfType(com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.types.DfType
- getDfTypeIncludingDerived(com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.types.DfType
- p:getDistinctClassPairs():com.intellij.codeInspection.dataFlow.memory.DistinctPairSet
- getEqClassIndex(com.intellij.codeInspection.dataFlow.value.DfaValue):I
- getEqClasses():java.util.List
- getFactory():com.intellij.codeInspection.dataFlow.value.DfaValueFactory
- getMergeabilityKey():java.lang.Object
- p:getNonTrivialEqClasses():java.util.LinkedHashSet
- p:getRawEqClassIndex(I):I
- getRelation(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.RelationType
- getStackSize():I
- getStackValue(I):com.intellij.codeInspection.dataFlow.value.DfaValue
- hashCode():I
- isEmptyStack():Z
- isEphemeral():Z
- isSuperStateOf(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):Z
- markEphemeral():V
- meetDfType(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.types.DfType):Z
- p:meetVariableType(com.intellij.codeInspection.dataFlow.value.DfaVariableValue,com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.types.DfType):Z
- merge(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):V
- peek():com.intellij.codeInspection.dataFlow.value.DfaValue
- pop():com.intellij.codeInspection.dataFlow.value.DfaValue
- push(com.intellij.codeInspection.dataFlow.value.DfaValue):V
- recordVariableType(com.intellij.codeInspection.dataFlow.value.DfaVariableValue,com.intellij.codeInspection.dataFlow.types.DfType):V
- setDfType(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.types.DfType):V
- setVarValue(com.intellij.codeInspection.dataFlow.value.DfaVariableValue,com.intellij.codeInspection.dataFlow.value.DfaValue):V
- tryJoinExactly(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.memory.DfaMemoryState
- updateDfType(com.intellij.codeInspection.dataFlow.value.DfaValue,java.util.function.UnaryOperator):V
- widen():V
f:com.intellij.codeInspection.dataFlow.memory.DistinctPairSet
- java.util.AbstractSet
- <init>(com.intellij.codeInspection.dataFlow.memory.DfaMemoryStateImpl):V
- <init>(com.intellij.codeInspection.dataFlow.memory.DfaMemoryStateImpl,com.intellij.codeInspection.dataFlow.memory.DistinctPairSet):V
- addOrdered(I,I):Z
- addUnordered(I,I):V
- areDistinctUnordered(I,I):Z
- contains(java.lang.Object):Z
- dropOrder(com.intellij.codeInspection.dataFlow.memory.DistinctPairSet$DistinctPair):V
- getRelation(I,I):com.intellij.codeInspection.dataFlow.value.RelationType
- iterator():java.util.Iterator
- remove(java.lang.Object):Z
- size():I
- splitClass(I,I[]):V
- unite(I,I):Z
f:com.intellij.codeInspection.dataFlow.memory.DistinctPairSet$DistinctPair
- check():V
- equals(java.lang.Object):Z
- getFirst():com.intellij.codeInspection.dataFlow.memory.EqClass
- getFirstIndex():I
- getOtherClass(I):com.intellij.codeInspection.dataFlow.memory.EqClass
- getSecond():com.intellij.codeInspection.dataFlow.memory.EqClass
- getSecondIndex():I
- hashCode():I
- isOrdered():Z
com.intellij.codeInspection.dataFlow.memory.EqClass
- java.lang.Iterable
- a:asList():java.util.List
- a:contains(com.intellij.codeInspection.dataFlow.value.DfaValue):Z
- a:containsAll(com.intellij.codeInspection.dataFlow.memory.EqClass):Z
- a:getCanonicalVariable():com.intellij.codeInspection.dataFlow.value.DfaVariableValue
- a:getVariable(I):com.intellij.codeInspection.dataFlow.value.DfaVariableValue
- isEmpty():Z
- a:iterator():java.util.Iterator
- a:size():I
e:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- java.lang.Enum
- sf:AND:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- sf:DIV:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- sf:MINUS:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- sf:MOD:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- sf:MUL:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- sf:OR:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- sf:PLUS:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- sf:SHL:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- sf:SHR:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- sf:USHR:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- sf:XOR:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- eval(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- evalWide(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- isShift():Z
- s:valueOf(java.lang.String):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- s:values():com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp[]
a:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- a:abs(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- additionMayOverflow(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):Z
- s:all():com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- a:asRanges():java.util.List
- bitwiseAnd(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- bitwiseOr(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- bitwiseXor(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- a:contains(J):Z
- a:contains(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):Z
- div(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- s:empty():com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- s:fromConstant(java.lang.Object):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- fromRelation(com.intellij.codeInspection.dataFlow.value.RelationType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- s:fromRemainder(J,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- getConstantValue():java.lang.Long
- a:getPresentationText(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):java.lang.String
- a:intersects(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):Z
- a:isCardinalityBigger(J):Z
- isEmpty():Z
- a:join(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- a:max():J
- a:meet(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- a:min():J
- minus(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- a:mod(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- s:modRange(J,J,J,J):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- mul(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- mulWiden(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- a:negate(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- a:plus(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- plusWiden(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- s:point(J):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- s:range(J,J):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- shiftLeft(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- shiftRight(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- a:stream():java.util.stream.LongStream
- a:subtract(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- subtractionMayOverflow(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):Z
- a:tryJoinExactly(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- unsignedShiftRight(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- without(J):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
e:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType
- java.lang.Enum
- sf:INT32:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType
- sf:INT64:com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType
- additionMayOverflow(J,J):Z
- bits():I
- bytes():I
- cast(J):J
- fullRange():com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- max():J
- min():J
- subtractionMayOverflow(J,J):Z
- s:valueOf(java.lang.String):com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType
- s:values():com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType[]
a:com.intellij.codeInspection.dataFlow.types.DfAntiConstantType
- com.intellij.codeInspection.dataFlow.types.DfType
- pf:myNotValues:java.util.Set
- p:<init>(java.util.Set):V
- equals(java.lang.Object):Z
- getNotValues():java.util.Set
- hashCode():I
- p:renderValue(java.lang.Object):java.lang.String
a:com.intellij.codeInspection.dataFlow.types.DfConstantType
- com.intellij.codeInspection.dataFlow.types.DfType
- p:<init>(java.lang.Object):V
- equals(java.lang.Object):Z
- fromRelation(com.intellij.codeInspection.dataFlow.value.RelationType):com.intellij.codeInspection.dataFlow.types.DfType
- getConstantOfType(java.lang.Class):java.lang.Object
- getValue():java.lang.Object
- hashCode():I
- isConst(java.lang.Object):Z
- isSuperType(com.intellij.codeInspection.dataFlow.types.DfType):Z
- meet(com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.types.DfType
com.intellij.codeInspection.dataFlow.types.DfEphemeralType
- com.intellij.codeInspection.dataFlow.types.DfType
com.intellij.codeInspection.dataFlow.types.DfIntegralType
- com.intellij.codeInspection.dataFlow.types.DfType
- a:eval(com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp):com.intellij.codeInspection.dataFlow.types.DfType
- a:getLongRangeType():com.intellij.codeInspection.dataFlow.rangeSet.LongRangeType
- a:getRange():com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- getWideRange():com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet
- a:meetRange(com.intellij.codeInspection.dataFlow.rangeSet.LongRangeSet):com.intellij.codeInspection.dataFlow.types.DfType
com.intellij.codeInspection.dataFlow.types.DfType
- sf:BOTTOM:com.intellij.codeInspection.dataFlow.types.DfType
- sf:FAIL:com.intellij.codeInspection.dataFlow.types.DfType
- sf:NOT_FAIL:com.intellij.codeInspection.dataFlow.types.DfType
- sf:TOP:com.intellij.codeInspection.dataFlow.types.DfType
- correctForClosure():com.intellij.codeInspection.dataFlow.types.DfType
- correctForRelationResult(com.intellij.codeInspection.dataFlow.value.RelationType,Z):com.intellij.codeInspection.dataFlow.types.DfType
- correctTypeOnFlush(com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.types.DfType
- fromRelation(com.intellij.codeInspection.dataFlow.value.RelationType):com.intellij.codeInspection.dataFlow.types.DfType
- getBasicType():com.intellij.codeInspection.dataFlow.types.DfType
- getConstantOfType(java.lang.Class):java.lang.Object
- getDerivedValues():java.util.Map
- getDerivedVariables():java.util.List
- hasNonStandardEquivalence():Z
- isConst(java.lang.Object):Z
- isImmutableQualifier():Z
- isLocal():Z
- isMergeable(com.intellij.codeInspection.dataFlow.types.DfType):Z
- a:isSuperType(com.intellij.codeInspection.dataFlow.types.DfType):Z
- a:join(com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.types.DfType
- mayAlias(com.intellij.codeInspection.dataFlow.types.DfType):Z
- a:meet(com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.types.DfType
- meetRelation(com.intellij.codeInspection.dataFlow.value.RelationType,com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.types.DfType
- a:toString():java.lang.String
- a:tryJoinExactly(com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.types.DfType
- tryNegate():com.intellij.codeInspection.dataFlow.types.DfType
- widen():com.intellij.codeInspection.dataFlow.types.DfType
com.intellij.codeInspection.dataFlow.value.DerivedVariableDescriptor
- com.intellij.codeInspection.dataFlow.value.VariableDescriptor
- a:asDfType(com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.types.DfType
- a:asDfType(com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.types.DfType
- createValue(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.DfaValue
- equalityImpliesQualifierEquality():Z
- getDefaultValue():com.intellij.codeInspection.dataFlow.types.DfType
- getFromQualifier(com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.types.DfType
f:com.intellij.codeInspection.dataFlow.value.DfaBinOpValue
- com.intellij.codeInspection.dataFlow.value.DfaValue
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.value.DfaValue
- dependsOn(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):Z
- getDfType():com.intellij.codeInspection.dataFlow.types.DfIntegralType
- getLeft():com.intellij.codeInspection.dataFlow.value.DfaVariableValue
- getOperation():com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp
- getRight():com.intellij.codeInspection.dataFlow.value.DfaValue
c:com.intellij.codeInspection.dataFlow.value.DfaBinOpValue$Factory
- create(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.types.DfIntegralType,com.intellij.codeInspection.dataFlow.rangeSet.LongRangeBinOp):com.intellij.codeInspection.dataFlow.value.DfaValue
com.intellij.codeInspection.dataFlow.value.DfaCondition
- correctForRelationResult(Z):com.intellij.codeInspection.dataFlow.value.DfaCondition
- s:createCondition(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.RelationType,com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.DfaCondition
- s:getFalse():com.intellij.codeInspection.dataFlow.value.DfaCondition
- s:getTrue():com.intellij.codeInspection.dataFlow.value.DfaCondition
- s:getUnknown():com.intellij.codeInspection.dataFlow.value.DfaCondition
- a:isUnknown():Z
- a:negate():com.intellij.codeInspection.dataFlow.value.DfaCondition
- s:tryEvaluate(com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.value.RelationType,com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.value.DfaCondition$Exact
e:com.intellij.codeInspection.dataFlow.value.DfaCondition$Exact
- java.lang.Enum
- com.intellij.codeInspection.dataFlow.value.DfaCondition
- sf:FALSE:com.intellij.codeInspection.dataFlow.value.DfaCondition$Exact
- sf:TRUE:com.intellij.codeInspection.dataFlow.value.DfaCondition$Exact
- sf:UNKNOWN:com.intellij.codeInspection.dataFlow.value.DfaCondition$Exact
- isUnknown():Z
- negate():com.intellij.codeInspection.dataFlow.value.DfaCondition
- s:valueOf(java.lang.String):com.intellij.codeInspection.dataFlow.value.DfaCondition$Exact
- s:values():com.intellij.codeInspection.dataFlow.value.DfaCondition$Exact[]
f:com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue
- com.intellij.codeInspection.dataFlow.value.DfaValue
- sf:RETURN_TRANSFER:com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue$TransferTarget
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue
- dispatch(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter):java.util.List
- s:dispatch(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue$TransferTarget,com.intellij.util.containers.FList):java.util.List
- getPossibleTargetIndices():I[]
- getTarget():com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue$TransferTarget
- getTraps():com.intellij.util.containers.FList
com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue$TransferTarget
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue$TransferTarget
- dispatch(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter):java.util.List
- getPossibleTargets():I[]
com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue$Trap
- a:dispatch(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.interpreter.DataFlowInterpreter,com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue$TransferTarget,com.intellij.util.containers.FList):java.util.List
- a:getAnchor():com.intellij.psi.PsiElement
- getPossibleTargets():I[]
- link(com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue):V
f:com.intellij.codeInspection.dataFlow.value.DfaRelation
- java.lang.Record
- com.intellij.codeInspection.dataFlow.value.DfaCondition
- <init>(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.RelationType):V
- correctForRelationResult(Z):com.intellij.codeInspection.dataFlow.value.DfaCondition
- s:createRelation(com.intellij.codeInspection.dataFlow.value.DfaValue,com.intellij.codeInspection.dataFlow.value.RelationType,com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.DfaRelation
- f:equals(java.lang.Object):Z
- f:hashCode():I
- isEquality():Z
- isUnknown():Z
- leftOperand():com.intellij.codeInspection.dataFlow.value.DfaValue
- negate():com.intellij.codeInspection.dataFlow.value.DfaRelation
- relationType():com.intellij.codeInspection.dataFlow.value.RelationType
- rightOperand():com.intellij.codeInspection.dataFlow.value.DfaValue
f:com.intellij.codeInspection.dataFlow.value.DfaTypeValue
- com.intellij.codeInspection.dataFlow.value.DfaValue
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.value.DfaTypeValue
- getDfType():com.intellij.codeInspection.dataFlow.types.DfType
- s:isContractFail(com.intellij.codeInspection.dataFlow.value.DfaValue):Z
- s:isUnknown(com.intellij.codeInspection.dataFlow.value.DfaValue):Z
a:com.intellij.codeInspection.dataFlow.value.DfaValue
- sf:EMPTY_ARRAY:com.intellij.codeInspection.dataFlow.value.DfaValue[]
- pf:myFactory:com.intellij.codeInspection.dataFlow.value.DfaValueFactory
- p:<init>(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):V
- a:bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.value.DfaValue
- cond(com.intellij.codeInspection.dataFlow.value.RelationType,com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.value.DfaCondition
- f:cond(com.intellij.codeInspection.dataFlow.value.RelationType,com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.DfaCondition
- dependsOn(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):Z
- f:eq(com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.value.DfaCondition
- f:eq(com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.DfaCondition
- equals(java.lang.Object):Z
- getDfType():com.intellij.codeInspection.dataFlow.types.DfType
- getFactory():com.intellij.codeInspection.dataFlow.value.DfaValueFactory
- getID():I
- hashCode():I
- unite(com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.DfaValue
c:com.intellij.codeInspection.dataFlow.value.DfaValueFactory
- <init>(com.intellij.openapi.project.Project):V
- controlTransfer(com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue$TransferTarget,com.intellij.util.containers.FList):com.intellij.codeInspection.dataFlow.value.DfaControlTransferValue
- fromDfType(com.intellij.codeInspection.dataFlow.types.DfType):com.intellij.codeInspection.dataFlow.value.DfaTypeValue
- getBinOpFactory():com.intellij.codeInspection.dataFlow.value.DfaBinOpValue$Factory
- getContext():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getSentinel():com.intellij.codeInspection.dataFlow.value.DfaValue
- getUnknown():com.intellij.codeInspection.dataFlow.value.DfaTypeValue
- getValue(I):com.intellij.codeInspection.dataFlow.value.DfaValue
- getValues():java.util.Collection
- getVarFactory():com.intellij.codeInspection.dataFlow.value.DfaVariableValue$Factory
- getWrapperFactory():com.intellij.codeInspection.dataFlow.value.DfaWrappedValue$Factory
- setContext(com.intellij.psi.PsiElement):V
f:com.intellij.codeInspection.dataFlow.value.DfaVariableValue
- com.intellij.codeInspection.dataFlow.value.DfaValue
- alwaysEqualsToItself(com.intellij.codeInspection.dataFlow.types.DfType):Z
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.value.DfaVariableValue
- canBeCapturedInClosure():Z
- containsCalls():Z
- dependsOn(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):Z
- getDependentVariables():java.util.List
- getDepth():I
- getDescriptor():com.intellij.codeInspection.dataFlow.value.VariableDescriptor
- getDfType():com.intellij.codeInspection.dataFlow.types.DfType
- getInherentType():com.intellij.codeInspection.dataFlow.types.DfType
- getPsiVariable():com.intellij.psi.PsiElement
- getQualifier():com.intellij.codeInspection.dataFlow.value.DfaVariableValue
- isFlushableByCalls():Z
- withQualifier(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):com.intellij.codeInspection.dataFlow.value.DfaVariableValue
c:com.intellij.codeInspection.dataFlow.value.DfaVariableValue$Factory
- createVariableValue(com.intellij.codeInspection.dataFlow.value.VariableDescriptor):com.intellij.codeInspection.dataFlow.value.DfaVariableValue
- createVariableValue(com.intellij.codeInspection.dataFlow.value.VariableDescriptor,com.intellij.codeInspection.dataFlow.value.DfaVariableValue):com.intellij.codeInspection.dataFlow.value.DfaVariableValue
- getVariableValue(com.intellij.codeInspection.dataFlow.value.VariableDescriptor,com.intellij.codeInspection.dataFlow.value.DfaVariableValue):com.intellij.codeInspection.dataFlow.value.DfaVariableValue
f:com.intellij.codeInspection.dataFlow.value.DfaWrappedValue
- com.intellij.codeInspection.dataFlow.value.DfaValue
- bindToFactory(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):com.intellij.codeInspection.dataFlow.value.DfaValue
- dependsOn(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):Z
- getDfType():com.intellij.codeInspection.dataFlow.types.DfType
- getSpecialField():com.intellij.codeInspection.dataFlow.value.DerivedVariableDescriptor
- getWrappedValue():com.intellij.codeInspection.dataFlow.value.DfaVariableValue
c:com.intellij.codeInspection.dataFlow.value.DfaWrappedValue$Factory
- <init>(com.intellij.codeInspection.dataFlow.value.DfaValueFactory):V
- createWrapper(com.intellij.codeInspection.dataFlow.types.DfType,com.intellij.codeInspection.dataFlow.value.DerivedVariableDescriptor,com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.DfaValue
e:com.intellij.codeInspection.dataFlow.value.RelationType
- java.lang.Enum
- sf:EQ:com.intellij.codeInspection.dataFlow.value.RelationType
- sf:GE:com.intellij.codeInspection.dataFlow.value.RelationType
- sf:GT:com.intellij.codeInspection.dataFlow.value.RelationType
- sf:IS:com.intellij.codeInspection.dataFlow.value.RelationType
- sf:IS_NOT:com.intellij.codeInspection.dataFlow.value.RelationType
- sf:LE:com.intellij.codeInspection.dataFlow.value.RelationType
- sf:LT:com.intellij.codeInspection.dataFlow.value.RelationType
- sf:NE:com.intellij.codeInspection.dataFlow.value.RelationType
- s:equivalence(Z):com.intellij.codeInspection.dataFlow.value.RelationType
- getFlipped():com.intellij.codeInspection.dataFlow.value.RelationType
- getNegated():com.intellij.codeInspection.dataFlow.value.RelationType
- isInequality():Z
- isSubRelation(com.intellij.codeInspection.dataFlow.value.RelationType):Z
- meet(com.intellij.codeInspection.dataFlow.value.RelationType):com.intellij.codeInspection.dataFlow.value.RelationType
- s:valueOf(java.lang.String):com.intellij.codeInspection.dataFlow.value.RelationType
- s:values():com.intellij.codeInspection.dataFlow.value.RelationType[]
com.intellij.codeInspection.dataFlow.value.VariableDescriptor
- alwaysEqualsToItself(com.intellij.codeInspection.dataFlow.types.DfType):Z
- canBeCapturedInClosure():Z
- createValue(com.intellij.codeInspection.dataFlow.value.DfaValueFactory,com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.value.DfaValue
- a:getDfType(com.intellij.codeInspection.dataFlow.value.DfaVariableValue):com.intellij.codeInspection.dataFlow.types.DfType
- getInitialDfType(com.intellij.codeInspection.dataFlow.value.DfaVariableValue,com.intellij.psi.PsiElement):com.intellij.codeInspection.dataFlow.types.DfType
- getPsiElement():com.intellij.psi.PsiElement
- getQualifierConstraintFromValue(com.intellij.codeInspection.dataFlow.memory.DfaMemoryState,com.intellij.codeInspection.dataFlow.value.DfaValue):com.intellij.codeInspection.dataFlow.types.DfType
- isCall():Z
- isImplicitReadPossible():Z
- a:isStable():Z
- restrictFromState(com.intellij.codeInspection.dataFlow.value.DfaVariableValue,com.intellij.codeInspection.dataFlow.memory.DfaMemoryState):com.intellij.codeInspection.dataFlow.types.DfType
c:com.intellij.codeInspection.ex.ApplicationInspectionProfileManagerBase
- com.intellij.profile.codeInspection.BaseInspectionProfileManager
- sf:Companion:com.intellij.codeInspection.ex.ApplicationInspectionProfileManagerBase$Companion
- <init>():V
- fireProfileChanged(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- getCurrentProfile():com.intellij.codeInspection.ex.InspectionProfileImpl
- sf:getInstanceBase():com.intellij.codeInspection.ex.ApplicationInspectionProfileManagerBase
- pf:getLOAD_PROFILES():Z
- getProfile(java.lang.String,Z):com.intellij.codeInspection.ex.InspectionProfileImpl
- getProfiles():java.util.Collection
- pf:getProfilesAreInitialized():kotlin.Unit
- p:getSchemeManager():com.intellij.openapi.options.SchemeManager
- f:initProfiles():V
- loadProfile(java.lang.String):com.intellij.codeInspection.ex.InspectionProfileImpl
- pf:setLOAD_PROFILES(Z):V
- setRootProfile(java.lang.String):V
f:com.intellij.codeInspection.ex.ApplicationInspectionProfileManagerBase$Companion
- f:getInstanceBase():com.intellij.codeInspection.ex.ApplicationInspectionProfileManagerBase
e:com.intellij.codeInspection.ex.CodeQualityCategories
- java.lang.Enum
- sf:CODE_STYLE:com.intellij.codeInspection.ex.CodeQualityCategories
- sf:LEGAL:com.intellij.codeInspection.ex.CodeQualityCategories
- sf:PERFORMANCE:com.intellij.codeInspection.ex.CodeQualityCategories
- sf:RELIABILITY:com.intellij.codeInspection.ex.CodeQualityCategories
- sf:SANITY:com.intellij.codeInspection.ex.CodeQualityCategories
- sf:SECURITY:com.intellij.codeInspection.ex.CodeQualityCategories
- sf:UNSPECIFIED:com.intellij.codeInspection.ex.CodeQualityCategories
- s:getEntries():kotlin.enums.EnumEntries
- f:getId():java.lang.String
- s:valueOf(java.lang.String):com.intellij.codeInspection.ex.CodeQualityCategories
- s:values():com.intellij.codeInspection.ex.CodeQualityCategories[]
com.intellij.codeInspection.ex.DynamicGroupTool
- a:getChildren():java.util.List
com.intellij.codeInspection.ex.ExternalAnnotatorBatchInspection
- com.intellij.codeInspection.ex.PairedUnfairLocalInspectionTool
- checkFile(com.intellij.psi.PsiFile,com.intellij.codeInspection.GlobalInspectionContext,com.intellij.codeInspection.InspectionManager):com.intellij.codeInspection.ProblemDescriptor[]
- getInspectionForBatchShortName():java.lang.String
- a:getShortName():java.lang.String
c:com.intellij.codeInspection.ex.GlobalInspectionContextBase
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.codeInspection.GlobalInspectionContext
- sf:LOCAL_TOOL_ATTRIBUTE:java.lang.String
- sf:PROBLEMS_TAG_NAME:java.lang.String
- pf:myExtensions:java.util.Map
- p:myProgressIndicator:com.intellij.openapi.progress.ProgressIndicator
- <init>(com.intellij.openapi.project.Project):V
- p:appendJobDescriptor(com.intellij.codeInspection.ex.JobDescriptor):V
- s:assertUnderDaemonProgress():com.intellij.codeInsight.daemon.impl.DaemonProgressIndicator
- p:canceled():V
- p:classifyTool(java.util.List,java.util.List,java.util.List,com.intellij.codeInspection.ex.Tools,com.intellij.codeInspection.ex.InspectionToolWrapper):V
- cleanup():V
- s:cleanupElements(com.intellij.openapi.project.Project,java.lang.Runnable,java.util.function.Predicate,com.intellij.codeInspection.InspectionProfile,com.intellij.psi.PsiElement[]):V
- s:cleanupElements(com.intellij.openapi.project.Project,java.lang.Runnable,java.util.function.Predicate,com.intellij.psi.PsiElement[]):V
- s:cleanupElements(com.intellij.openapi.project.Project,java.lang.Runnable,com.intellij.psi.PsiElement[]):V
- close(Z):V
- codeCleanup(com.intellij.analysis.AnalysisScope,com.intellij.codeInspection.InspectionProfile,java.lang.String,java.lang.Runnable,Z):V
- codeCleanup(com.intellij.analysis.AnalysisScope,com.intellij.codeInspection.InspectionProfile,java.lang.String,java.lang.Runnable,Z,java.util.function.Predicate):V
- p:createOption():com.intellij.openapi.progress.PerformInBackgroundOption
- doInspections(com.intellij.analysis.AnalysisScope):V
- getCurrentProfile():com.intellij.codeInspection.ex.InspectionProfileImpl
- getCurrentScope():com.intellij.analysis.AnalysisScope
- getExtension(com.intellij.openapi.util.Key):java.lang.Object
- getProject():com.intellij.openapi.project.Project
- getRefManager():com.intellij.codeInspection.reference.RefManager
- getStdJobDescriptors():com.intellij.codeInspection.ex.StdJobDescriptors
- getTools():java.util.Map
- getUsedTools():java.util.List
- incrementJobDoneAmount(com.intellij.codeInspection.ex.JobDescriptor,java.lang.String):V
- initializeTools(java.util.List,java.util.List,java.util.List):V
- isSuppressed(com.intellij.psi.PsiElement,java.lang.String):Z
- isToCheckFile(com.intellij.psi.PsiFileSystemItem,com.intellij.codeInspection.InspectionProfileEntry):Z
- isToCheckMember(com.intellij.codeInspection.reference.RefElement,com.intellij.codeInspection.InspectionProfileEntry):Z
- p:launchInspections(com.intellij.analysis.AnalysisScope):V
- p:notifyInspectionsFinished(com.intellij.analysis.AnalysisScope):V
- performInspectionsWithProgress(com.intellij.analysis.AnalysisScope,Z,Z):V
- p:runTools(com.intellij.analysis.AnalysisScope,Z,Z):V
- setCurrentScope(com.intellij.analysis.AnalysisScope):V
- setExternalProfile(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- setRerunAction(java.lang.Runnable):V
- shouldCheck(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.GlobalInspectionTool):Z
c:com.intellij.codeInspection.ex.GlobalInspectionContextEx
- com.intellij.codeInspection.ex.GlobalInspectionContextBase
- sf:INSPECT_TOPIC:com.intellij.util.messages.Topic
- p:myProblemConsumer:com.intellij.codeInspection.ex.InspectionProblemConsumer
- <init>(com.intellij.openapi.project.Project):V
- p:createPresentation(com.intellij.codeInspection.ex.InspectionToolWrapper):com.intellij.codeInspection.InspectionToolResultExporter
- getGlobalReportedProblemFilter():com.intellij.codeInspection.ui.GlobalReportedProblemFilter
- getOutputPath():java.nio.file.Path
- getPathProfile():java.util.Map
- getPresentation(com.intellij.codeInspection.ex.InspectionToolWrapper):com.intellij.codeInspection.InspectionToolResultExporter
- getReportedProblemFilter():com.intellij.codeInspection.ui.ReportedProblemFilter
- launchInspectionsOffline(com.intellij.analysis.AnalysisScope,java.nio.file.Path,Z,java.util.List):V
- performInspectionsWithProgressAndExportResults(com.intellij.analysis.AnalysisScope,Z,Z,java.nio.file.Path,java.util.List):V
- setGlobalReportedProblemFilter(com.intellij.codeInspection.ui.GlobalReportedProblemFilter):V
- setProblemConsumer(com.intellij.codeInspection.ex.InspectionProblemConsumer):V
- setReportedProblemFilter(com.intellij.codeInspection.ui.ReportedProblemFilter):V
- startPathProfiling():V
f:com.intellij.codeInspection.ex.GlobalInspectionContextUtil
- <init>():V
- s:canRunInspections(com.intellij.openapi.project.Project,Z,java.lang.Runnable):Z
- s:retrieveRefElement(com.intellij.psi.PsiElement,com.intellij.codeInspection.GlobalInspectionContext):com.intellij.codeInspection.reference.RefElement
c:com.intellij.codeInspection.ex.GlobalInspectionToolWrapper
- com.intellij.codeInspection.ex.InspectionToolWrapper
- <init>(com.intellij.codeInspection.GlobalInspectionTool):V
- <init>(com.intellij.codeInspection.GlobalInspectionTool,com.intellij.codeInspection.InspectionEP):V
- <init>(com.intellij.codeInspection.InspectionEP):V
- createCopy():com.intellij.codeInspection.ex.GlobalInspectionToolWrapper
- getJobDescriptors(com.intellij.codeInspection.GlobalInspectionContext):com.intellij.codeInspection.ex.JobDescriptor[]
- getSharedLocalInspectionToolWrapper():com.intellij.codeInspection.ex.LocalInspectionToolWrapper
- initialize(com.intellij.codeInspection.GlobalInspectionContext):V
- worksInBatchModeOnly():Z
a:com.intellij.codeInspection.ex.HTMLComposerImpl
- com.intellij.codeInspection.HTMLComposer
- sf:A_CLOSING:java.lang.String
- sf:A_HREF_OPENING:java.lang.String
- psf:BR:java.lang.String
- sf:B_CLOSING:java.lang.String
- sf:B_OPENING:java.lang.String
- psf:CLOSE_TAG:java.lang.String
- sf:CODE_CLOSING:java.lang.String
- sf:CODE_OPENING:java.lang.String
- sf:NBSP:java.lang.String
- p:<init>():V
- p:appendAdditionalListItemInfo(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement):V
- appendElementInReferences(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement):V
- appendElementOutReferences(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement):V
- appendElementReference(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement):V
- appendElementReference(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement,java.lang.String,java.lang.String):V
- appendElementReference(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement,Z):V
- appendElementReference(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.String):V
- appendListItem(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement):V
- appendNoProblems(java.lang.StringBuilder):V
- p:appendQuickFix(java.lang.StringBuilder,java.lang.String):V
- p:appendResolution(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefEntity,java.lang.String[]):V
- a:compose(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefEntity):V
- compose(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.CommonProblemDescriptor):V
- composeNumereables(I,java.lang.String,java.lang.String,java.lang.String):java.lang.String
- doneList(java.lang.StringBuilder):V
- s:doneListItem(java.lang.StringBuilder):V
- doneProblemDescription(java.lang.StringBuilder):V
- p:genPageHeader(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefEntity):V
- getExtension(com.intellij.openapi.util.Key):java.lang.Object
- startList(java.lang.StringBuilder):V
- startListItem(java.lang.StringBuilder):V
- startProblemDescription(java.lang.StringBuilder):V
a:com.intellij.codeInspection.ex.InspectionElementsMergerBase
- com.intellij.codeInspection.ex.InspectionElementsMerger
- <init>():V
- p:areSettingsMerged(java.util.Map,org.jdom.Element):Z
- p:getSourceElement(java.util.Map,java.lang.String):org.jdom.Element
- p:isEnabledByDefault(java.lang.String):Z
- p:merge(java.util.Map):org.jdom.Element
- p:merge(java.util.Map,Z):org.jdom.Element
- p:transformElement(java.lang.String,org.jdom.Element,org.jdom.Element):org.jdom.Element
- p:writeMergedContent(org.jdom.Element):Z
- p:writeOldSettings(java.lang.String):org.jdom.Element
f:com.intellij.codeInspection.ex.InspectionMetaInformationService
- <init>(kotlinx.coroutines.CoroutineScope):V
- f:getState(kotlin.coroutines.Continuation):java.lang.Object
- f:invalidateState():V
f:com.intellij.codeInspection.ex.InspectionMetainformationServiceKt
- sf:getCWE_TOP25_2023():java.util.Set
com.intellij.codeInspection.ex.InspectionProblemConsumer
- a:consume(org.jdom.Element,com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.codeInspection.ex.InspectionToolWrapper):V
c:com.intellij.codeInspection.ex.InspectionProfileImpl
- com.intellij.codeInspection.ex.NewInspectionProfile
- sf:BASE_PROFILE:com.intellij.openapi.util.NotNullLazyValue
- s:INIT_INSPECTIONS:Z
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- pf:myBaseProfile:com.intellij.codeInspection.ex.InspectionProfileImpl
- p:myChangedToolNames:java.util.Set
- p:myLockedProfile:Z
- pf:myToolSupplier:com.intellij.codeInspection.ex.InspectionToolsSupplier
- p:myTools:java.util.Map
- pf:myUninitializedSettings:java.util.Map
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.codeInspection.ex.InspectionToolsSupplier,com.intellij.codeInspection.ex.InspectionProfileImpl):V
- <init>(java.lang.String,com.intellij.codeInspection.ex.InspectionToolsSupplier,com.intellij.profile.codeInspection.BaseInspectionProfileManager):V
- <init>(java.lang.String,com.intellij.codeInspection.ex.InspectionToolsSupplier,com.intellij.profile.codeInspection.BaseInspectionProfileManager,com.intellij.codeInspection.ex.InspectionProfileImpl,com.intellij.configurationStore.SchemeDataHolder):V
- <init>(java.lang.String,com.intellij.codeInspection.ex.InspectionToolsSupplier,com.intellij.profile.codeInspection.BaseInspectionProfileManager,com.intellij.configurationStore.SchemeDataHolder):V
- addScope(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.codeHighlighting.HighlightDisplayLevel,Z,com.intellij.openapi.project.Project):com.intellij.codeInspection.ex.ScopeToolState
- f:addTool(com.intellij.openapi.project.Project,com.intellij.codeInspection.ex.InspectionToolWrapper,java.util.Map):V
- cleanup(com.intellij.openapi.project.Project):V
- collectDependentInspections(com.intellij.codeInspection.ex.InspectionToolWrapper,java.util.Set,com.intellij.openapi.project.Project):V
- controllerFor(com.intellij.psi.PsiElement):com.intellij.codeInspection.options.OptionController
- convert(org.jdom.Element,com.intellij.openapi.project.Project):V
- f:copyFrom(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- s:copyToolSettings(com.intellij.codeInspection.ex.InspectionToolWrapper):com.intellij.codeInspection.ex.InspectionToolWrapper
- p:copyToolsConfigurations(com.intellij.openapi.project.Project):V
- p:createTools(com.intellij.openapi.project.Project):java.util.List
- disableAllTools(com.intellij.openapi.project.Project):V
- disableToolByDefault(java.util.Collection,com.intellij.openapi.project.Project):V
- disableTools(java.util.List,com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):V
- enableAllTools(com.intellij.openapi.project.Project):V
- enableTool(java.lang.String,com.intellij.openapi.project.Project):V
- enableTool(java.lang.String,com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):V
- enableTools(java.util.List,com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):V
- enableToolsByDefault(java.util.List,com.intellij.openapi.project.Project):V
- equals(java.lang.Object):Z
- findToolsById(java.lang.String,com.intellij.psi.PsiElement):java.util.List
- p:forceInitInspectionTools():Z
- getAllEnabledInspectionTools(com.intellij.openapi.project.Project):java.util.List
- getAllTools():java.util.List
- getDefaultStates(com.intellij.openapi.project.Project):java.util.List
- getDescription():java.lang.String
- getDisplayName():java.lang.String
- getEditorAttributes(java.lang.String,com.intellij.psi.PsiElement):com.intellij.openapi.editor.colors.TextAttributesKey
- getEditorAttributesKey(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):com.intellij.openapi.editor.colors.TextAttributesKey
- getErrorLevel(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.PsiElement):com.intellij.codeHighlighting.HighlightDisplayLevel
- getErrorLevel(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):com.intellij.codeHighlighting.HighlightDisplayLevel
- getInspectionTool(java.lang.String,com.intellij.openapi.project.Project):com.intellij.codeInspection.ex.InspectionToolWrapper
- getInspectionTool(java.lang.String,com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.InspectionToolWrapper
- getInspectionTools(com.intellij.psi.PsiElement):java.util.List
- getInspectionToolsSupplier():com.intellij.codeInspection.ex.InspectionToolsSupplier
- getModifiableModel():com.intellij.codeInspection.ex.InspectionProfileModifiableModel
- getNonDefaultTools(java.lang.String,com.intellij.openapi.project.Project):java.util.List
- f:getProfileManager():com.intellij.profile.codeInspection.BaseInspectionProfileManager
- getSchemeState():com.intellij.openapi.options.SchemeState
- getScopesOrder():java.util.List
- getSingleTool():java.lang.String
- getToolById(java.lang.String,com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.InspectionToolWrapper
- getToolDefaultState(java.lang.String,com.intellij.openapi.project.Project):com.intellij.codeInspection.ex.ScopeToolState
- getTools():java.util.Collection
- getTools(java.lang.String,com.intellij.openapi.project.Project):com.intellij.codeInspection.ex.ToolsImpl
- getToolsOrNull(java.lang.String,com.intellij.openapi.project.Project):com.intellij.codeInspection.ex.ToolsImpl
- getUnwrappedTool(com.intellij.openapi.util.Key,com.intellij.psi.PsiElement):com.intellij.codeInspection.InspectionProfileEntry
- getUnwrappedTool(java.lang.String,com.intellij.psi.PsiElement):com.intellij.codeInspection.InspectionProfileEntry
- getUsedSeverities():java.util.Set
- hashCode():I
- initInspectionTools():V
- initInspectionTools(com.intellij.openapi.project.Project):V
- isExecutable(com.intellij.openapi.project.Project):Z
- isProfileLocked():Z
- f:isProjectLevel():Z
- isToolEnabled(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.PsiElement):Z
- isToolEnabled(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):Z
- lockProfile(Z):V
- modifyProfile(com.intellij.util.Consumer):V
- modifyToolSettings(com.intellij.openapi.util.Key,com.intellij.psi.PsiElement,com.intellij.util.Consumer):V
- profileChanged():V
- readExternal(org.jdom.Element):V
- removeScope(java.lang.String,java.lang.String,com.intellij.openapi.project.Project):V
- removeScopes(java.util.List,java.lang.String,com.intellij.openapi.project.Project):V
- removeTool(com.intellij.codeInspection.ex.InspectionToolWrapper):V
- resetToBase(java.lang.String,com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):V
- scopesChanged():V
- setDescription(java.lang.String):V
- setEditorAttributesKey(java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.project.Project):V
- setEditorAttributesKey(java.util.List,com.intellij.openapi.editor.colors.TextAttributesKey,java.lang.String,com.intellij.openapi.project.Project):V
- setErrorLevel(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.codeHighlighting.HighlightDisplayLevel,com.intellij.openapi.project.Project):V
- setErrorLevel(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.codeHighlighting.HighlightDisplayLevel,java.lang.String,com.intellij.openapi.project.Project):V
- setErrorLevel(java.util.List,com.intellij.codeHighlighting.HighlightDisplayLevel,java.lang.String,com.intellij.openapi.project.Project):V
- f:setProfileManager(com.intellij.profile.codeInspection.BaseInspectionProfileManager):V
- f:setProjectLevel(Z):V
- setScopesOrder(java.util.List):V
- setSingleTool(java.lang.String):V
- f:setToolEnabled(java.lang.String,Z):V
- f:setToolEnabled(java.lang.String,Z,com.intellij.openapi.project.Project):V
- f:setToolEnabled(java.lang.String,Z,com.intellij.openapi.project.Project,Z):V
- s:setToolEnabled(Z,com.intellij.codeInspection.ex.InspectionProfileImpl,java.lang.String,com.intellij.openapi.project.Project):V
- s:setToolEnabled(Z,com.intellij.codeInspection.ex.InspectionProfileImpl,java.lang.String,Z,com.intellij.openapi.project.Project):V
- wasInitialized():Z
- writeExternal(org.jdom.Element):V
- writeScheme():org.jdom.Element
- ps:writeVersion(org.jdom.Element):V
f:com.intellij.codeInspection.ex.InspectionProfileKt
- sf:DEFAULT_PROFILE_NAME:java.lang.String
- sf:createSimple(java.lang.String,com.intellij.openapi.project.Project,java.util.List):com.intellij.codeInspection.ex.InspectionProfileImpl
- sf:getBASE_PROFILE():com.intellij.codeInspection.ex.InspectionProfileImpl
c:com.intellij.codeInspection.ex.InspectionProfileModifiableModel
- com.intellij.codeInspection.ex.InspectionProfileImpl
- <init>(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- f:commit():V
- p:copyToolsConfigurations(com.intellij.openapi.project.Project):V
- p:createTools(com.intellij.openapi.project.Project):java.util.List
- f:disableTool(java.lang.String,com.intellij.psi.PsiElement):V
- f:getSource():com.intellij.codeInspection.ex.InspectionProfileImpl
- f:isChanged():Z
- f:isProperSetting(java.lang.String):Z
- f:isProperSetting(java.lang.String,com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):Z
- f:resetToBase(com.intellij.openapi.project.Project):V
- resetToBase(java.lang.String,com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):V
- f:resetToEmpty(com.intellij.openapi.project.Project):V
- f:setModified(Z):V
f:com.intellij.codeInspection.ex.InspectionProfileModifiableModelKt
- sf:edit(com.intellij.codeInspection.ex.InspectionProfileImpl,kotlin.jvm.functions.Function1):V
- sf:modifyAndCommitProjectProfile(com.intellij.openapi.project.Project,com.intellij.util.Consumer):V
c:com.intellij.codeInspection.ex.InspectionProfileWrapper
- sf:PSI_ELEMENTS_BEING_COMMITTED:com.intellij.openapi.util.Key
- pf:myProfile:com.intellij.codeInspection.InspectionProfile
- pf:myProfileManager:com.intellij.profile.codeInspection.InspectionProfileManager
- <init>(com.intellij.codeInspection.InspectionProfile,com.intellij.profile.codeInspection.InspectionProfileManager):V
- <init>(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- s:checkInspectionsDuplicates(java.util.List):V
- s:getCustomInspectionProfileWrapper(com.intellij.psi.PsiFile):java.util.function.Function
- getErrorLevel(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.PsiElement):com.intellij.codeHighlighting.HighlightDisplayLevel
- getInspectionProfile():com.intellij.codeInspection.InspectionProfile
- getInspectionTool(java.lang.String,com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.InspectionToolWrapper
- getProfileManager():com.intellij.profile.codeInspection.InspectionProfileManager
- isToolEnabled(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.PsiElement):Z
- s:runWithCustomInspectionWrapper(com.intellij.psi.PsiFile,java.util.function.Function,java.lang.Runnable):V
- s:setCustomInspectionProfileWrapperTemporarily(com.intellij.psi.PsiFile,java.util.function.Function):V
f:com.intellij.codeInspection.ex.InspectionToolRegistrar
- com.intellij.codeInspection.ex.InspectionToolsSupplier
- sf:Companion:com.intellij.codeInspection.ex.InspectionToolRegistrar$Companion
- <init>(kotlinx.coroutines.CoroutineScope):V
- createTools():java.util.List
- sf:getInstance():com.intellij.codeInspection.ex.InspectionToolRegistrar
f:com.intellij.codeInspection.ex.InspectionToolRegistrar$Companion
- f:getInstance():com.intellij.codeInspection.ex.InspectionToolRegistrar
a:com.intellij.codeInspection.ex.InspectionToolsSupplier
- com.intellij.openapi.Disposable
- pf:listeners:com.intellij.util.containers.DisposableWrapperList
- <init>():V
- addListener(com.intellij.codeInspection.ex.InspectionToolsSupplier$Listener,com.intellij.openapi.Disposable):V
- a:createTools():java.util.List
- dispose():V
com.intellij.codeInspection.ex.InspectionToolsSupplier$Listener
- a:toolAdded(com.intellij.codeInspection.ex.InspectionToolWrapper):V
- a:toolRemoved(com.intellij.codeInspection.ex.InspectionToolWrapper):V
f:com.intellij.codeInspection.ex.InspectionToolsSupplier$Simple
- com.intellij.codeInspection.ex.InspectionToolsSupplier
- <init>(java.util.List):V
- createTools():java.util.List
c:com.intellij.codeInspection.ex.LocalInspectionToolWrapper
- com.intellij.codeInspection.ex.InspectionToolWrapper
- <init>(com.intellij.codeInspection.LocalInspectionEP):V
- <init>(com.intellij.codeInspection.LocalInspectionTool):V
- createCopy():com.intellij.codeInspection.ex.LocalInspectionToolWrapper
- s:findTool2RunInBatch(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.codeInspection.InspectionProfile,com.intellij.codeInspection.ex.InspectionToolWrapper):com.intellij.codeInspection.ex.InspectionToolWrapper
- s:findTool2RunInBatch(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.lang.String):com.intellij.codeInspection.ex.InspectionToolWrapper
- getAlternativeID():java.lang.String
- getID():java.lang.String
- getJobDescriptors(com.intellij.codeInspection.GlobalInspectionContext):com.intellij.codeInspection.ex.JobDescriptor[]
- isDumbAware():Z
- isUnfair():Z
- runForWholeFile():Z
f:com.intellij.codeInspection.ex.MetaInformation
- <init>(java.lang.String,java.util.List,java.lang.String,java.util.List):V
- f:component1():java.lang.String
- f:component2():java.util.List
- f:component3():java.lang.String
- f:component4():java.util.List
- f:copy(java.lang.String,java.util.List,java.lang.String,java.util.List):com.intellij.codeInspection.ex.MetaInformation
- bs:copy$default(com.intellij.codeInspection.ex.MetaInformation,java.lang.String,java.util.List,java.lang.String,java.util.List,I,java.lang.Object):com.intellij.codeInspection.ex.MetaInformation
- equals(java.lang.Object):Z
- f:getCategories():java.util.List
- f:getCodeQualityCategory():java.lang.String
- f:getCweIds():java.util.List
- f:getId():java.lang.String
- hashCode():I
f:com.intellij.codeInspection.ex.MetaInformationState
- f:inspections:java.util.Map
- <init>(java.util.Map):V
a:com.intellij.codeInspection.ex.NewInspectionProfile
- com.intellij.profile.ProfileEx
- com.intellij.codeInspection.InspectionProfile
- com.intellij.configurationStore.SerializableScheme
- <init>(java.lang.String):V
- a:getDisplayName():java.lang.String
- bsf:setToolEnabled$default(com.intellij.codeInspection.ex.NewInspectionProfile,java.lang.String,Z,com.intellij.openapi.project.Project,Z,I,java.lang.Object):V
com.intellij.codeInspection.ex.PairedUnfairLocalInspectionTool
- com.intellij.codeInspection.ex.UnfairLocalInspectionTool
- a:getInspectionForBatchShortName():java.lang.String
c:com.intellij.codeInspection.ex.ProblemDescriptorImpl
- com.intellij.codeInspection.ProblemDescriptorBase
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType,Z,com.intellij.openapi.util.TextRange,com.intellij.codeInspection.HintAction,Z):V
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType,Z,com.intellij.openapi.util.TextRange,Z):V
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType,Z,com.intellij.openapi.util.TextRange,Z,com.intellij.codeInspection.HintAction,Z):V
- getHintAction():com.intellij.codeInspection.HintAction
f:com.intellij.codeInspection.ex.ProblemDescriptorUserDataKt
- sf:FINGERPRINT_DATA:com.intellij.openapi.util.Key
f:com.intellij.codeInspection.ex.ReportConverterUtil
- <init>():V
- s:getReportConverter(java.lang.String):com.intellij.codeInspection.InspectionsReportConverter
- s:getResultsDataPath(com.intellij.openapi.Disposable,com.intellij.codeInspection.InspectionsReportConverter,java.lang.String):java.nio.file.Path
f:com.intellij.codeInspection.ex.ToolsImpl
- com.intellij.codeInspection.ex.Tools
- addTool(com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.codeInspection.ex.InspectionToolWrapper,Z,com.intellij.codeHighlighting.HighlightDisplayLevel):com.intellij.codeInspection.ex.ScopeToolState
- addTool(java.lang.String,com.intellij.codeInspection.ex.InspectionToolWrapper,Z,com.intellij.codeHighlighting.HighlightDisplayLevel):com.intellij.codeInspection.ex.ScopeToolState
- collectTools(java.util.List):V
- disableTool(com.intellij.psi.PsiElement):V
- enableTool(com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):V
- equals(java.lang.Object):Z
- getAttributesKey(com.intellij.psi.PsiElement):com.intellij.openapi.editor.colors.TextAttributesKey
- getDefaultState():com.intellij.codeInspection.ex.ScopeToolState
- getEnabledTool(com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.InspectionToolWrapper
- getEnabledTool(com.intellij.psi.PsiElement,Z):com.intellij.codeInspection.ex.InspectionToolWrapper
- getInspectionTool(com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.InspectionToolWrapper
- getLevel():com.intellij.codeHighlighting.HighlightDisplayLevel
- getLevel(com.intellij.psi.PsiElement):com.intellij.codeHighlighting.HighlightDisplayLevel
- getLevel(com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.openapi.project.Project):com.intellij.codeHighlighting.HighlightDisplayLevel
- getLevel(java.lang.String,com.intellij.openapi.project.Project):com.intellij.codeHighlighting.HighlightDisplayLevel
- getNonDefaultTools():java.util.List
- getShortName():java.lang.String
- getState(com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.ScopeToolState
- getTool():com.intellij.codeInspection.ex.InspectionToolWrapper
- getTools():java.util.List
- hashCode():I
- s:isAvailableInBatch(com.intellij.codeInspection.ex.ScopeToolState):Z
- isEnabled():Z
- isEnabled(com.intellij.psi.PsiElement):Z
- prependTool(com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.codeInspection.ex.InspectionToolWrapper,Z,com.intellij.codeHighlighting.HighlightDisplayLevel):com.intellij.codeInspection.ex.ScopeToolState
- removeAllScopes():V
- removeScope(java.lang.String):V
- setDefaultState(com.intellij.codeInspection.ex.InspectionToolWrapper,Z,com.intellij.codeHighlighting.HighlightDisplayLevel):V
- setDefaultState(com.intellij.codeInspection.ex.InspectionToolWrapper,Z,com.intellij.codeHighlighting.HighlightDisplayLevel,java.lang.String):V
- setEditorAttributesKey(java.lang.String,java.lang.String):V
- setEnabled(Z):V
- setLevel(com.intellij.codeHighlighting.HighlightDisplayLevel):V
- setLevel(com.intellij.codeHighlighting.HighlightDisplayLevel,com.intellij.psi.PsiElement):V
- setLevel(com.intellij.codeHighlighting.HighlightDisplayLevel,java.lang.String,com.intellij.openapi.project.Project):V
- setScope(I,com.intellij.psi.search.scope.packageSet.NamedScope):V
- writeExternal(org.jdom.Element):V
com.intellij.codeInspection.ex.UnfairLocalInspectionTool
c:com.intellij.codeInspection.ex.XSLTReportConverter
- com.intellij.codeInspection.InspectionsReportConverter
- <init>(java.lang.String):V
- convert(java.lang.String,java.lang.String,java.util.Map,java.util.List):V
- getFormatName():java.lang.String
- useTmpDirForRawData():Z
a:com.intellij.codeInspection.reference.RefElementImpl
- com.intellij.codeInspection.reference.RefEntityImpl
- com.intellij.codeInspection.reference.RefElement
- com.intellij.codeInspection.reference.WritableRefElement
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- p:<init>(com.intellij.psi.PsiFile,com.intellij.codeInspection.reference.RefManager):V
- p:<init>(java.lang.String,com.intellij.codeInspection.reference.RefElement):V
- p:<init>(java.lang.String,com.intellij.psi.PsiElement,com.intellij.codeInspection.reference.RefManager):V
- addInReference(com.intellij.codeInspection.reference.RefElement):V
- addOutReference(com.intellij.codeInspection.reference.RefElement):V
- addSuppression(java.lang.String):V
- areReferencesBuilt():Z
- getChildren():java.util.List
- getContainingEntry():com.intellij.codeInspection.reference.RefElement
- getContainingFile():com.intellij.psi.PsiFile
- getExternalName():java.lang.String
- getIcon(Z):javax.swing.Icon
- getInReferences():java.util.Collection
- getModule():com.intellij.codeInspection.reference.RefModule
- getOutReferences():java.util.Collection
- getPointer():com.intellij.psi.SmartPsiElementPointer
- getPsiElement():com.intellij.psi.PsiElement
- getURL():java.lang.String
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- hasSuspiciousCallers():Z
- pa:initialize():V
- f:initializeIfNeeded():V
- p:isDeleted():Z
- isEntry():Z
- isInitialized():Z
- isPermanentEntry():Z
- isReachable():Z
- isReferenced():Z
- isSuppressed(java.lang.String[]):Z
- isSuspicious():Z
- isValid():Z
- referenceRemoved():V
- setEntry(Z):V
- setInitialized(Z):V
- setPermanentEntry(Z):V
- setReachable(Z):V
a:com.intellij.codeInspection.reference.RefEntityImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.codeInspection.reference.RefEntity
- com.intellij.codeInspection.reference.WritableRefEntity
- p:myFlags:J
- pf:myManager:com.intellij.codeInspection.reference.RefManagerImpl
- p:<init>(java.lang.String,com.intellij.codeInspection.reference.RefManager):V
- accept(com.intellij.codeInspection.reference.RefVisitor):V
- add(com.intellij.codeInspection.reference.RefEntity):V
- p:addChild(com.intellij.codeInspection.reference.RefEntity):V
- checkAndSetFlag(J):Z
- checkFlag(J):Z
- getChildren():java.util.List
- getExternalName():java.lang.String
- getName():java.lang.String
- getOwner():com.intellij.codeInspection.reference.WritableRefEntity
- getQualifiedName():java.lang.String
- getRefManager():com.intellij.codeInspection.reference.RefManagerImpl
- removeChild(com.intellij.codeInspection.reference.RefEntity):V
- setFlag(Z,J):V
- setOwner(com.intellij.codeInspection.reference.WritableRefEntity):V
c:com.intellij.codeInspection.reference.RefFileImpl
- com.intellij.codeInspection.reference.RefElementImpl
- com.intellij.codeInspection.reference.RefFile
- <init>(com.intellij.psi.PsiFile,com.intellij.codeInspection.reference.RefManager):V
- accept(com.intellij.codeInspection.reference.RefVisitor):V
- getExternalName():java.lang.String
- getModule():com.intellij.codeInspection.reference.RefModule
- getPsiElement():com.intellij.psi.PsiFile
- p:initialize():V
c:com.intellij.codeInspection.reference.RefManagerImpl
- com.intellij.codeInspection.reference.RefManager
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope,com.intellij.codeInspection.GlobalInspectionContext):V
- belongsToScope(com.intellij.psi.PsiElement):Z
- buildReferences(com.intellij.codeInspection.reference.RefElement):V
- cleanup():V
- executeTask(java.lang.Runnable):V
- export(com.intellij.codeInspection.reference.RefEntity):org.jdom.Element
- export(com.intellij.codeInspection.reference.RefEntity,I):org.jdom.Element
- findAllDeclarations():V
- fireNodeMarkedReferenced(com.intellij.codeInspection.reference.RefElement,com.intellij.codeInspection.reference.RefElement,Z,Z,Z):V
- fireNodeMarkedReferenced(com.intellij.codeInspection.reference.RefElement,com.intellij.codeInspection.reference.RefElement,Z,Z,Z,com.intellij.psi.PsiElement):V
- fireNodeMarkedReferenced(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- getContainerElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiNamedElement
- getContext():com.intellij.codeInspection.GlobalInspectionContext
- getElements():java.util.List
- getExtension(com.intellij.openapi.util.Key):java.lang.Object
- getFromRefTableOrCache(com.intellij.psi.PsiElement,java.util.function.Supplier):com.intellij.codeInspection.reference.RefElement
- getFromRefTableOrCache(com.intellij.psi.PsiElement,java.util.function.Supplier,java.util.function.Consumer):com.intellij.codeInspection.reference.RefElement
- getGroupName(com.intellij.codeInspection.reference.RefElement):java.lang.String
- getLastUsedMask():J
- getProject():com.intellij.openapi.project.Project
- getPsiManager():com.intellij.psi.PsiManager
- getQualifiedName(com.intellij.codeInspection.reference.RefEntity):java.lang.String
- getRefModule(com.intellij.openapi.module.Module):com.intellij.codeInspection.reference.RefModule
- getRefProject():com.intellij.codeInspection.reference.RefProject
- getReference(com.intellij.psi.PsiElement):com.intellij.codeInspection.reference.RefElement
- getReference(com.intellij.psi.PsiElement,Z):com.intellij.codeInspection.reference.RefElement
- getReference(java.lang.String,java.lang.String):com.intellij.codeInspection.reference.RefEntity
- getRefinedElement(com.intellij.codeInspection.reference.RefEntity):com.intellij.codeInspection.reference.RefEntity
- getScope():com.intellij.analysis.AnalysisScope
- getSortedElements():java.util.List
- getType(com.intellij.codeInspection.reference.RefEntity):java.lang.String
- initializeAnnotators():V
- isDeclarationsFound():Z
- isInGraph(com.intellij.openapi.vfs.VirtualFile):Z
- isOfflineView():Z
- isValidPointForReference():Z
- iterate(com.intellij.codeInspection.reference.RefVisitor):V
- registerGraphAnnotator(com.intellij.codeInspection.reference.RefGraphAnnotator):V
- removeRefElement(com.intellij.codeInspection.reference.RefElement,java.util.List):V
- runInsideInspectionReadAction(java.lang.Runnable):V
- startOfflineView():V
- unregisterAnnotator(com.intellij.codeInspection.reference.RefGraphAnnotator):V
com.intellij.codeInspection.reference.WritableRefElement
- com.intellij.codeInspection.reference.RefElement
- com.intellij.codeInspection.reference.WritableRefEntity
- a:addInReference(com.intellij.codeInspection.reference.RefElement):V
- a:addOutReference(com.intellij.codeInspection.reference.RefElement):V
- a:addSuppression(java.lang.String):V
com.intellij.codeInspection.reference.WritableRefEntity
- com.intellij.codeInspection.reference.RefEntity
- a:add(com.intellij.codeInspection.reference.RefEntity):V
- a:removeChild(com.intellij.codeInspection.reference.RefEntity):V
- a:setOwner(com.intellij.codeInspection.reference.WritableRefEntity):V
com.intellij.codeInspection.ui.AggregateResultsExporter
- a:exportAggregateResults(java.util.function.Consumer):V
com.intellij.codeInspection.ui.GlobalReportedProblemFilter
- a:shouldReportProblem(com.intellij.codeInspection.reference.RefEntity,java.lang.String):Z
com.intellij.codeInspection.ui.ReportedProblemFilter
- a:shouldReportProblem(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.CommonProblemDescriptor[]):Z
a:com.intellij.codeInspection.ui.util.SynchronizedBidiMultiMap
- <init>():V
- pa:arrayFactory():com.intellij.util.ArrayFactory
- containsKey(java.lang.Object):Z
- containsValue(java.lang.Object):Z
- get(java.lang.Object):java.lang.Object[]
- getKeyFor(java.lang.Object):java.lang.Object
- getMap():java.util.Map
- getOrDefault(java.lang.Object,java.lang.Object[]):java.lang.Object[]
- getValues():java.util.Collection
- isEmpty():Z
- keys():java.util.Collection
- put(java.lang.Object,java.lang.Object[]):V
- remove(java.lang.Object):java.lang.Object[]
- remove(java.lang.Object,java.lang.Object):java.lang.Object[]
- removeValue(java.lang.Object):java.lang.Object
com.intellij.codeInspection.visibility.VisibilityExtension
- a:fillIgnoreList(com.intellij.codeInspection.reference.RefManager,com.intellij.codeInspection.ProblemDescriptionsProcessor):V
a:com.intellij.featureStatistics.FeatureUsageTracker
- SHOW_IN_COMPILATION_PROGRESS:Z
- SHOW_IN_OTHER_PROGRESS:Z
- <init>():V
- s:getInstance():com.intellij.featureStatistics.FeatureUsageTracker
- a:isToBeAdvertisedInLookup(java.lang.String,com.intellij.openapi.project.Project):Z
- a:isToBeShown(java.lang.String,com.intellij.openapi.project.Project):Z
- a:triggerFeatureShown(java.lang.String):V
- a:triggerFeatureUsed(java.lang.String):V
- a:triggerFeatureUsedByAction(java.lang.String):V
- a:triggerFeatureUsedByIntention(java.lang.Class):V
f:com.intellij.find.FindBundle
- sf:BUNDLE:java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
a:com.intellij.find.FindSettings
- <init>():V
- a:getCustomScope():java.lang.String
- a:getDefaultScopeName():java.lang.String
- a:getFileMask():java.lang.String
- s:getInstance():com.intellij.find.FindSettings
- a:getRecentFileMasks():java.lang.String[]
- a:initModelBySetings(com.intellij.find.FindModel):V
- a:isCaseSensitive():Z
- a:isExceptComments():Z
- a:isExceptCommentsAndLiterals():Z
- a:isExceptStringLiterals():Z
- a:isForward():Z
- a:isFromCursor():Z
- a:isGlobal():Z
- a:isInCommentsOnly():Z
- a:isInStringLiteralsOnly():Z
- a:isLocalCaseSensitive():Z
- a:isLocalRegularExpressions():Z
- a:isLocalWholeWordsOnly():Z
- a:isPreserveCase():Z
- a:isRegularExpressions():Z
- a:isScrollToResultsDuringTyping():Z
- a:isSearchOverloadedMethods():Z
- a:isShowResultsInSeparateView():Z
- a:isSkipResultsWithOneUsage():Z
- a:isWholeWordsOnly():Z
- a:setCaseSensitive(Z):V
- a:setCustomScope(java.lang.String):V
- a:setDefaultScopeName(java.lang.String):V
- a:setExceptComments(Z):V
- a:setExceptCommentsAndLiterals(Z):V
- a:setExceptStringLiterals(Z):V
- a:setFileMask(java.lang.String):V
- a:setForward(Z):V
- a:setFromCursor(Z):V
- a:setGlobal(Z):V
- a:setInCommentsOnly(Z):V
- a:setInStringLiteralsOnly(Z):V
- a:setLocalCaseSensitive(Z):V
- a:setLocalRegularExpressions(Z):V
- a:setLocalWholeWordsOnly(Z):V
- a:setPreserveCase(Z):V
- a:setRegularExpressions(Z):V
- a:setScrollToResultsDuringTyping(Z):V
- a:setSearchOverloadedMethods(Z):V
- a:setShowResultsInSeparateView(Z):V
- a:setSkipResultsWithOneUsage(Z):V
- a:setWholeWordsOnly(Z):V
- a:setWithSubdirectories(Z):V
com.intellij.find.FindUsagesSettings
- a:getDefaultScopeName():java.lang.String
- s:getInstance():com.intellij.find.FindUsagesSettings
- a:isSearchOverloadedMethods():Z
- a:isShowResultsInSeparateView():Z
- a:isSkipResultsWithOneUsage():Z
- a:setDefaultScopeName(java.lang.String):V
- a:setSearchOverloadedMethods(Z):V
- a:setShowResultsInSeparateView(Z):V
- a:setSkipResultsWithOneUsage(Z):V
c:com.intellij.find.findUsages.FindUsagesHandlerBase
- pf:myPsiElement:com.intellij.psi.PsiElement
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project):V
- s:createFindUsagesOptions(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):com.intellij.find.findUsages.FindUsagesOptions
- p:createSearchParameters(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,com.intellij.find.findUsages.FindUsagesOptions):com.intellij.psi.search.searches.ReferencesSearch$SearchParameters
- findReferencesToHighlight(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope):java.util.Collection
- getFindUsagesOptions():com.intellij.find.findUsages.FindUsagesOptions
- getFindUsagesOptions(com.intellij.openapi.actionSystem.DataContext):com.intellij.find.findUsages.FindUsagesOptions
- getPrimaryElements():com.intellij.psi.PsiElement[]
- f:getProject():com.intellij.openapi.project.Project
- f:getPsiElement():com.intellij.psi.PsiElement
- getSecondaryElements():com.intellij.psi.PsiElement[]
- p:getStringsToSearch(com.intellij.psi.PsiElement):java.util.Collection
- p:isSearchForTextOccurrencesAvailable(com.intellij.psi.PsiElement,Z):Z
- processElementUsages(com.intellij.psi.PsiElement,com.intellij.util.Processor,com.intellij.find.findUsages.FindUsagesOptions):Z
- processUsagesInText(com.intellij.psi.PsiElement,com.intellij.util.Processor,com.intellij.psi.search.GlobalSearchScope):Z
f:com.intellij.find.findUsages.FindUsagesHelper
- <init>():V
- s:processTextOccurrences(com.intellij.psi.PsiElement,java.lang.String,com.intellij.psi.search.GlobalSearchScope,com.intellij.usageView.UsageInfoFactory,com.intellij.util.Processor):Z
- s:processUsagesInText(com.intellij.psi.PsiElement,java.util.Collection,Z,com.intellij.psi.search.GlobalSearchScope,com.intellij.util.Processor):Z
c:com.intellij.find.findUsages.FindUsagesOptions
- java.lang.Cloneable
- fastTrack:com.intellij.psi.search.SearchRequestCollector
- isSearchForTextOccurrences:Z
- isUsages:Z
- searchScope:com.intellij.psi.search.SearchScope
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):V
- <init>(com.intellij.psi.search.SearchScope):V
- clone():com.intellij.find.findUsages.FindUsagesOptions
- equals(java.lang.Object):Z
- generateUsagesString():java.lang.String
- hashCode():I
a:com.intellij.find.findUsages.PersistentFindUsagesOptions
- com.intellij.find.findUsages.FindUsagesOptions
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):V
- <init>(com.intellij.psi.search.SearchScope):V
- a:setDefaults(com.intellij.openapi.project.Project):V
- a:storeDefaults(com.intellij.openapi.project.Project):V
c:com.intellij.find.impl.FindInProjectSettingsBase
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- addDirectory(java.lang.String):V
- addStringToFind(java.lang.String):V
- addStringToReplace(java.lang.String):V
- getMostRecentFindString():java.lang.String
- getMostRecentReplaceString():java.lang.String
- getRecentDirectories():java.util.List
- getRecentFindStrings():java.lang.String[]
- getRecentReplaceStrings():java.lang.String[]
- getState():com.intellij.find.impl.FindInProjectSettingsBase
- f:initializeComponent():V
- f:loadState(com.intellij.find.impl.FindInProjectSettingsBase):V
a:com.intellij.lang.LanguagePerFileMappings
- com.intellij.lang.PerFileMappingsBase
- com.intellij.lang.PerFileMappings
- <init>(com.intellij.openapi.project.Project):V
- p:getProject():com.intellij.openapi.project.Project
- p:getValueAttribute():java.lang.String
a:com.intellij.lang.PerFileMappingsBase
- com.intellij.lang.PerFileMappingsEx
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- <init>(com.intellij.openapi.project.Project):V
- cleanupForNextTest():V
- dispose():V
- a:getAvailableValues():java.util.List
- getConfiguredMapping(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- getDefaultMapping(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- getDirectlyConfiguredMapping(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- p:getFilePropertyPusher():com.intellij.openapi.roots.impl.FilePropertyPusher
- getImmediateMapping(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- getMapping(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- getMappings():java.util.Map
- p:getNotInHierarchy(com.intellij.openapi.vfs.VirtualFile,java.util.Map):java.lang.Object
- p:getProject():com.intellij.openapi.project.Project
- getState():org.jdom.Element
- p:getValueAttribute():java.lang.String
- p:handleUnknownMapping(com.intellij.openapi.vfs.VirtualFile,java.lang.String):java.lang.Object
- hasMappings():Z
- p:isDefaultMapping(com.intellij.openapi.vfs.VirtualFile,java.lang.Object):Z
- loadState(org.jdom.Element):V
- pa:serialize(java.lang.Object):java.lang.String
- setMapping(com.intellij.openapi.vfs.VirtualFile,java.lang.Object):V
- setMappings(java.util.Map):V
- p:shouldReparseFiles():Z
com.intellij.lang.PerFileMappingsEx
- com.intellij.lang.PerFileMappings
- a:getDefaultMapping(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- a:getMappings():java.util.Map
- a:setMappings(java.util.Map):V
c:com.intellij.lang.parser.GeneratedParserUtilBase
- sf:COMPLETION_STATE_KEY:com.intellij.openapi.util.Key
- sf:DUMMY_BLOCK:com.intellij.psi.tree.IElementType
- sf:LEFT_BINDER:com.intellij.lang.parser.GeneratedParserUtilBase$Hook
- sf:RIGHT_BINDER:com.intellij.lang.parser.GeneratedParserUtilBase$Hook
- sf:TOKEN_ADVANCER:com.intellij.lang.parser.GeneratedParserUtilBase$Parser
- sf:TRUE_CONDITION:com.intellij.lang.parser.GeneratedParserUtilBase$Parser
- sf:WS_BINDERS:com.intellij.lang.parser.GeneratedParserUtilBase$Hook
- sf:_AND_:I
- sf:_COLLAPSE_:I
- sf:_LEFT_:I
- sf:_LEFT_INNER_:I
- sf:_NONE_:I
- sf:_NOT_:I
- sf:_UPPER_:I
- <init>():V
- s:adapt_builder_(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder,com.intellij.lang.PsiParser):com.intellij.lang.PsiBuilder
- s:adapt_builder_(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder,com.intellij.lang.PsiParser,com.intellij.psi.tree.TokenSet[]):com.intellij.lang.PsiBuilder
- s:addVariant(com.intellij.lang.PsiBuilder,java.lang.String):V
- s:consumeToken(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType):Z
- s:consumeToken(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.TokenSet):Z
- s:consumeToken(com.intellij.lang.PsiBuilder,java.lang.String):Z
- s:consumeToken(com.intellij.lang.PsiBuilder,java.lang.String,Z):Z
- s:consumeTokenFast(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType):Z
- s:consumeTokenFast(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.TokenSet):Z
- s:consumeTokenFast(com.intellij.lang.PsiBuilder,java.lang.String):Z
- s:consumeTokenSmart(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType):Z
- s:consumeTokenSmart(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.TokenSet):Z
- s:consumeTokenSmart(com.intellij.lang.PsiBuilder,java.lang.String):Z
- s:consumeTokens(com.intellij.lang.PsiBuilder,I,com.intellij.psi.tree.IElementType[]):Z
- s:consumeTokensSmart(com.intellij.lang.PsiBuilder,I,com.intellij.psi.tree.IElementType[]):Z
- s:create_token_set_(com.intellij.psi.tree.IElementType[]):com.intellij.psi.tree.TokenSet
- s:current_position_(com.intellij.lang.PsiBuilder):I
- s:empty_element_parsed_guard_(com.intellij.lang.PsiBuilder,java.lang.String,I):Z
- s:enter_section_(com.intellij.lang.PsiBuilder):com.intellij.lang.PsiBuilder$Marker
- s:enter_section_(com.intellij.lang.PsiBuilder,I,I):com.intellij.lang.PsiBuilder$Marker
- s:enter_section_(com.intellij.lang.PsiBuilder,I,I,com.intellij.psi.tree.IElementType,java.lang.String):com.intellij.lang.PsiBuilder$Marker
- s:enter_section_(com.intellij.lang.PsiBuilder,I,I,java.lang.String):com.intellij.lang.PsiBuilder$Marker
- s:eof(com.intellij.lang.PsiBuilder,I):Z
- s:exit_section_(com.intellij.lang.PsiBuilder,I,com.intellij.lang.PsiBuilder$Marker,com.intellij.psi.tree.IElementType,Z,Z,com.intellij.lang.parser.GeneratedParserUtilBase$Parser):V
- s:exit_section_(com.intellij.lang.PsiBuilder,I,com.intellij.lang.PsiBuilder$Marker,Z,Z,com.intellij.lang.parser.GeneratedParserUtilBase$Parser):V
- s:exit_section_(com.intellij.lang.PsiBuilder,com.intellij.lang.PsiBuilder$Marker,com.intellij.psi.tree.IElementType,Z):V
- s:invalid_left_marker_guard_(com.intellij.lang.PsiBuilder,com.intellij.lang.PsiBuilder$Marker,java.lang.String):Z
- s:isWhitespaceOrComment(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType):Z
- s:leftMarkerIs(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType):Z
- s:nextTokenIs(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType):Z
- s:nextTokenIs(com.intellij.lang.PsiBuilder,java.lang.String):Z
- s:nextTokenIs(com.intellij.lang.PsiBuilder,java.lang.String,com.intellij.psi.tree.IElementType[]):Z
- s:nextTokenIsFast(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType):Z
- s:nextTokenIsFast(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.TokenSet):Z
- s:nextTokenIsFast(com.intellij.lang.PsiBuilder,java.lang.String):Z
- s:nextTokenIsFast(com.intellij.lang.PsiBuilder,java.lang.String,Z):I
- s:nextTokenIsFast(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType[]):Z
- s:nextTokenIsSlow(com.intellij.lang.PsiBuilder,java.lang.String,com.intellij.psi.tree.IElementType[]):Z
- s:nextTokenIsSmart(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType):Z
- s:nextTokenIsSmart(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType[]):Z
- s:parseAsTree(com.intellij.lang.parser.GeneratedParserUtilBase$ErrorState,com.intellij.lang.PsiBuilder,I,com.intellij.psi.tree.IElementType,Z,com.intellij.lang.parser.GeneratedParserUtilBase$Parser,com.intellij.lang.parser.GeneratedParserUtilBase$Parser):Z
- s:parseTokens(com.intellij.lang.PsiBuilder,I,com.intellij.psi.tree.IElementType[]):Z
- s:parseTokens(com.intellij.lang.PsiBuilder,Z,I,com.intellij.psi.tree.IElementType[]):Z
- s:parseTokensSmart(com.intellij.lang.PsiBuilder,I,com.intellij.psi.tree.IElementType[]):Z
- s:recursion_guard_(com.intellij.lang.PsiBuilder,I,java.lang.String):Z
- s:register_hook_(com.intellij.lang.PsiBuilder,com.intellij.lang.parser.GeneratedParserUtilBase$Hook,java.lang.Object):V
- s:register_hook_(com.intellij.lang.PsiBuilder,com.intellij.lang.parser.GeneratedParserUtilBase$Hook,java.lang.Object[]):V
- s:report_error_(com.intellij.lang.PsiBuilder,com.intellij.lang.parser.GeneratedParserUtilBase$ErrorState,Z):V
- s:report_error_(com.intellij.lang.PsiBuilder,Z):Z
c:com.intellij.lang.parser.GeneratedParserUtilBase$Builder
- com.intellij.lang.impl.PsiBuilderAdapter
- f:parser:com.intellij.lang.PsiParser
- f:state:com.intellij.lang.parser.GeneratedParserUtilBase$ErrorState
- <init>(com.intellij.lang.PsiBuilder,com.intellij.lang.parser.GeneratedParserUtilBase$ErrorState,com.intellij.lang.PsiParser):V
- getLexer():com.intellij.lexer.Lexer
- getProductions():java.util.List
c:com.intellij.lang.parser.GeneratedParserUtilBase$CompletionState
- com.intellij.util.Function
- f:items:java.util.Collection
- f:offset:I
- <init>(I):V
- addItem(com.intellij.lang.PsiBuilder,java.lang.String):V
- convertItem(java.lang.Object):java.lang.String
- fun(java.lang.Object):java.lang.String
- prefixMatches(com.intellij.lang.PsiBuilder,java.lang.String):Z
- prefixMatches(java.lang.String,java.lang.String):Z
c:com.intellij.lang.parser.GeneratedParserUtilBase$DummyBlock
- com.intellij.psi.impl.source.tree.CompositePsiElement
- getLanguage():com.intellij.lang.Language
- getReferences():com.intellij.psi.PsiReference[]
c:com.intellij.lang.parser.GeneratedParserUtilBase$ErrorState
- altExtendsChecker:com.intellij.util.PairProcessor
- altMode:Z
- braces:com.intellij.lang.BracePair[]
- completionState:com.intellij.lang.parser.GeneratedParserUtilBase$CompletionState
- currentFrame:com.intellij.lang.parser.GeneratedParserUtilBase$Frame
- tokenAdvancer:com.intellij.lang.parser.GeneratedParserUtilBase$Parser
- <init>():V
- clearVariants(com.intellij.lang.parser.GeneratedParserUtilBase$Frame):V
- s:get(com.intellij.lang.PsiBuilder):com.intellij.lang.parser.GeneratedParserUtilBase$ErrorState
- getExpected(I,Z):java.lang.String
- s:initState(com.intellij.lang.parser.GeneratedParserUtilBase$ErrorState,com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.TokenSet[]):V
- typeExtends(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
c:com.intellij.lang.parser.GeneratedParserUtilBase$Frame
- elementType:com.intellij.psi.tree.IElementType
- errorReportedAt:I
- lastVariantAt:I
- leftMarker:com.intellij.lang.PsiBuilder$Marker
- level:I
- modifiers:I
- name:java.lang.String
- offset:I
- parentFrame:com.intellij.lang.parser.GeneratedParserUtilBase$Frame
- position:I
- variantCount:I
- <init>():V
- init(com.intellij.lang.PsiBuilder,com.intellij.lang.parser.GeneratedParserUtilBase$ErrorState,I,I,com.intellij.psi.tree.IElementType,java.lang.String):com.intellij.lang.parser.GeneratedParserUtilBase$Frame
com.intellij.lang.parser.GeneratedParserUtilBase$Hook
- a:run(com.intellij.lang.PsiBuilder,com.intellij.lang.PsiBuilder$Marker,java.lang.Object):com.intellij.lang.PsiBuilder$Marker
com.intellij.lang.parser.GeneratedParserUtilBase$Parser
- a:parse(com.intellij.lang.PsiBuilder,I):Z
c:com.intellij.openapi.module.impl.scopes.JdkScope
- com.intellij.openapi.module.impl.scopes.LibraryScopeBase
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.JdkOrderEntry):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile[],com.intellij.openapi.vfs.VirtualFile[],java.lang.String):V
- calcHashCode():I
- equals(java.lang.Object):Z
f:com.intellij.openapi.module.impl.scopes.LibraryRuntimeClasspathScope
- com.intellij.psi.search.GlobalSearchScope
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.LibraryOrderEntry):V
- <init>(com.intellij.openapi.project.Project,java.util.Collection):V
- calcHashCode():I
- compare(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):I
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- equals(java.lang.Object):Z
- getRoots():java.util.List
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
c:com.intellij.openapi.module.impl.scopes.LibraryScope
- com.intellij.openapi.module.impl.scopes.LibraryScopeBase
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.libraries.Library):V
- calcHashCode():I
- equals(java.lang.Object):Z
- getDisplayName():java.lang.String
- getLibrary():com.intellij.openapi.roots.libraries.Library
a:com.intellij.openapi.module.impl.scopes.LibraryScopeBase
- com.intellij.psi.search.GlobalSearchScope
- pf:myIndex:com.intellij.openapi.roots.ProjectFileIndex
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile[],com.intellij.openapi.vfs.VirtualFile[]):V
- calcHashCode():I
- compare(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):I
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- equals(java.lang.Object):Z
- p:getFileRoot(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
f:com.intellij.openapi.module.impl.scopes.ModuleWithDependenciesScope
- com.intellij.psi.search.GlobalSearchScope
- sf:COMPILE_ONLY:I
- sf:LIBRARIES:I
- sf:MODULES:I
- sf:TESTS:I
- calcHashCode():I
- compare(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):I
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- equals(java.lang.Object):Z
- extractFileEnumeration():com.intellij.psi.search.impl.VirtualFileEnumeration
- getDisplayName():java.lang.String
- s:getFileEnumerationUnderRoots(java.util.Collection):com.intellij.psi.search.impl.VirtualFileEnumeration
- getModule():com.intellij.openapi.module.Module
- getRoots():java.util.Collection
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
- isSearchInModuleContent(com.intellij.openapi.module.Module,Z):Z
c:com.intellij.openapi.module.impl.scopes.ModulesScope
- com.intellij.psi.search.GlobalSearchScope
- <init>(java.util.Set,com.intellij.openapi.project.Project):V
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
com.intellij.openapi.paths.PriorityReference
- getPriority():D
c:com.intellij.openapi.paths.PsiDynaReference
- com.intellij.psi.PsiReferenceBase
- com.intellij.codeInsight.daemon.EmptyResolveMessageProvider
- com.intellij.codeInspection.LocalQuickFixProvider
- com.intellij.psi.PsiPolyVariantReference
- com.intellij.psi.PsiReferencesWrapper
- com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceOwner
- <init>(com.intellij.psi.PsiElement):V
- addReference(com.intellij.psi.PsiReference):V
- addReferences(java.util.Collection):V
- bindToElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:filterByOffset(com.intellij.psi.PsiReference[],I):com.intellij.psi.PsiReference[]
- getCanonicalText():java.lang.String
- getLastFileReference():com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReference
- getQuickFixes():com.intellij.codeInspection.LocalQuickFix[]
- getReferences():java.util.List
- getUnresolvedMessagePattern():java.lang.String
- handleElementRename(java.lang.String):com.intellij.psi.PsiElement
- p:innerResolve(Z):com.intellij.psi.ResolveResult[]
- isReferenceTo(com.intellij.psi.PsiElement):Z
- isSoft():Z
- multiResolve(Z):com.intellij.psi.ResolveResult[]
- resolve():com.intellij.psi.PsiElement
c:com.intellij.openapi.progress.util.ProgressIndicatorBase
- com.intellij.openapi.progress.util.AbstractProgressIndicatorExBase
- com.intellij.openapi.progress.StandardProgressIndicator
- <init>():V
- <init>(Z):V
- <init>(Z,Z):V
- f:cancel():V
- f:isCanceled():Z
com.intellij.openapi.progress.util.ProgressIndicatorWithDelayedPresentation
- sf:DEFAULT_PROGRESS_DIALOG_POSTPONE_TIME_MILLIS:I
- a:setDelayInMillis(I):V
f:com.intellij.openapi.roots.impl.LibraryScopeCache
- <init>(com.intellij.openapi.project.Project):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.roots.impl.LibraryScopeCache
- getLibrariesOnlyScope():com.intellij.psi.search.GlobalSearchScope
- getLibraryScope(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.search.GlobalSearchScope
- getLibraryScope(java.util.List):com.intellij.psi.search.GlobalSearchScope
- getLibraryUseScope(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.search.GlobalSearchScope
- getLibraryUseScope(java.util.List):com.intellij.psi.search.GlobalSearchScope
- getScopeForSdk(com.intellij.openapi.roots.JdkOrderEntry):com.intellij.psi.search.GlobalSearchScope
a:com.intellij.openapi.vfs.ex.dummy.DummyCachingFileSystem
- com.intellij.openapi.vfs.ex.dummy.DummyFileSystem
- <init>(java.lang.String):V
- p:beforeFileRename(com.intellij.openapi.vfs.VirtualFile,java.lang.Object,java.lang.String,java.lang.String):V
- p:cleanup():V
- p:clearCache():V
- f:createRoot(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- p:doRenameFile(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- ps:escapeSlash(java.lang.String):java.lang.String
- extractPresentableUrl(java.lang.String):java.lang.String
- p:fileRenamed(com.intellij.openapi.vfs.VirtualFile,java.lang.Object,java.lang.String,java.lang.String):V
- f:findFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- pa:findFileByPathInner(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- getCachedFiles():java.util.Collection
- p:getPresentableUrl(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getProject(java.lang.String):com.intellij.openapi.project.Project
- f:getProtocol():java.lang.String
- onProjectOpened(com.intellij.openapi.project.Project):V
- renameFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- p:retainFiles(java.util.function.Predicate):V
- ps:unescapeSlash(java.lang.String):java.lang.String
c:com.intellij.openapi.vfs.ex.dummy.DummyFileSystem
- com.intellij.openapi.vfs.DeprecatedVirtualFileSystem
- com.intellij.openapi.vfs.NonPhysicalFileSystem
- sf:PROTOCOL:java.lang.String
- <init>():V
- createChildDirectory(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createRoot(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- deleteFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- extractPresentableUrl(java.lang.String):java.lang.String
- findFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- fireBeforeContentsChange(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- fireContentsChanged(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,J):V
- s:getInstance():com.intellij.openapi.vfs.ex.dummy.DummyFileSystem
- getProtocol():java.lang.String
- refresh(Z):V
- refreshAndFindFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- renameFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
a:com.intellij.packageDependencies.DependenciesBuilder
- p:myFileCount:I
- p:myTotalFileCount:I
- p:<init>(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope):V
- analyze():V
- s:analyzeFileDependencies(com.intellij.psi.PsiFile,com.intellij.packageDependencies.DependenciesBuilder$DependencyProcessor):V
- s:analyzeFileDependencies(com.intellij.psi.PsiFile,com.intellij.packageDependencies.DependenciesBuilder$DependencyProcessor,com.intellij.packageDependencies.DependencyVisitorFactory$VisitorOptions):V
- a:doAnalyze():V
- findPaths(com.intellij.psi.PsiFile,com.intellij.psi.PsiFile):java.util.List
- getDependencies():java.util.Map
- getDirectDependencies():java.util.Map
- getIllegalDependencies():java.util.Map
- a:getInitialUsagesPosition():java.lang.String
- getProject():com.intellij.openapi.project.Project
- a:getRootNodeNameInUsageView():java.lang.String
- getScope():com.intellij.analysis.AnalysisScope
- a:isBackward():Z
- setInitialFileCount(I):V
- setTotalFileCount(I):V
com.intellij.packageDependencies.DependenciesBuilder$DependencyProcessor
- a:process(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
a:com.intellij.packageDependencies.DependencyVisitorFactory
- <init>():V
- s:createVisitor(com.intellij.psi.PsiFile,com.intellij.packageDependencies.DependenciesBuilder$DependencyProcessor,com.intellij.packageDependencies.DependencyVisitorFactory$VisitorOptions):com.intellij.psi.PsiElementVisitor
- a:getVisitor(com.intellij.packageDependencies.DependenciesBuilder$DependencyProcessor,com.intellij.packageDependencies.DependencyVisitorFactory$VisitorOptions):com.intellij.psi.PsiElementVisitor
a:com.intellij.packageDependencies.DependencyVisitorFactory$VisitorOptions
- sf:INCLUDE_IMPORTS:com.intellij.packageDependencies.DependencyVisitorFactory$VisitorOptions
- sf:SKIP_IMPORTS:com.intellij.packageDependencies.DependencyVisitorFactory$VisitorOptions
- <init>():V
- s:fromSettings(com.intellij.openapi.project.Project):com.intellij.packageDependencies.DependencyVisitorFactory$VisitorOptions
- a:skipImports():Z
c:com.intellij.packageDependencies.ForwardDependenciesBuilder
- com.intellij.packageDependencies.DependenciesBuilder
- <init>(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope):V
- <init>(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope,I):V
- <init>(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope,com.intellij.psi.search.GlobalSearchScope):V
- doAnalyze():V
- getDirectDependencies():java.util.Map
- getInitialUsagesPosition():java.lang.String
- getRootNodeNameInUsageView():java.lang.String
- getTransitiveBorder():I
- isBackward():Z
a:com.intellij.profile.ProfileEx
- com.intellij.openapi.options.ExternalizableScheme
- java.lang.Comparable
- sf:NAME:java.lang.String
- sf:PROFILE:java.lang.String
- sf:SCOPE:java.lang.String
- p:myName:java.lang.String
- pf:mySerializer:com.intellij.util.xmlb.SmartSerializer
- <init>(java.lang.String):V
- compareTo(java.lang.Object):I
- equals(java.lang.Object):Z
- getName():java.lang.String
- hashCode():I
- setName(java.lang.String):V
a:com.intellij.profile.codeInspection.BaseInspectionProfileManager
- com.intellij.profile.codeInspection.InspectionProjectProfileManager
- <init>(com.intellij.util.messages.MessageBus):V
- f:addProfile(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- f:deleteProfile(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- f:deleteProfile(java.lang.String):V
- a:fireProfileChanged(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- pa:getSchemeManager():com.intellij.openapi.options.SchemeManager
- f:getSeverityRegistrar():com.intellij.codeInsight.daemon.impl.SeverityRegistrar
- p:schemeRemoved(com.intellij.codeInspection.ex.InspectionProfileImpl):V
f:com.intellij.profile.codeInspection.InspectionProfileLoadUtil
- <init>():V
- s:getProfileName(java.nio.file.Path,org.jdom.Element):java.lang.String
- s:load(java.nio.file.Path,com.intellij.codeInspection.ex.InspectionToolsSupplier,com.intellij.profile.codeInspection.InspectionProfileManager):com.intellij.codeInspection.ex.InspectionProfileImpl
- s:load(org.jdom.Element,java.lang.String,com.intellij.codeInspection.ex.InspectionToolsSupplier,com.intellij.profile.codeInspection.InspectionProfileManager):com.intellij.codeInspection.ex.InspectionProfileImpl
com.intellij.profile.codeInspection.InspectionProfileManager
- sf:INSPECTION_DIR:java.lang.String
- a:getCurrentProfile():com.intellij.codeInspection.ex.InspectionProfileImpl
- s:getInstance():com.intellij.profile.codeInspection.InspectionProfileManager
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.profile.codeInspection.InspectionProfileManager
- getOwnSeverityRegistrar():com.intellij.codeInsight.daemon.impl.SeverityRegistrar
- getProfile(java.lang.String):com.intellij.codeInspection.ex.InspectionProfileImpl
- a:getProfile(java.lang.String,Z):com.intellij.codeInspection.ex.InspectionProfileImpl
- a:getProfiles():java.util.Collection
- getScopesManager():com.intellij.psi.search.scope.packageSet.NamedScopesHolder
- a:getSeverityRegistrar():com.intellij.codeInsight.daemon.impl.SeverityRegistrar
- s:hasTooLowSeverity(com.intellij.codeInspection.LocalInspectionToolSession,com.intellij.codeInspection.LocalInspectionTool):Z
- a:setRootProfile(java.lang.String):V
a:com.intellij.profile.codeInspection.InspectionProfileProcessor
- com.intellij.configurationStore.LazySchemeProcessor
- <init>():V
- getState(com.intellij.codeInspection.ex.InspectionProfileImpl):com.intellij.openapi.options.SchemeState
a:com.intellij.profile.codeInspection.InspectionProjectProfileManager
- com.intellij.profile.codeInspection.InspectionProfileManager
- <init>():V
- getInspectionProfile():com.intellij.codeInspection.InspectionProfile
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.profile.codeInspection.InspectionProjectProfileManager
- s:isInformationLevel(java.lang.String,com.intellij.psi.PsiElement):Z
com.intellij.profile.codeInspection.ProjectBasedInspectionProfileManager
- a:getProject():com.intellij.openapi.project.Project
c:com.intellij.profile.codeInspection.ProjectInspectionProfileManager
- com.intellij.profile.codeInspection.BaseInspectionProfileManager
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponentWithModificationTracker
- com.intellij.profile.codeInspection.ProjectBasedInspectionProfileManager
- sf:Companion:com.intellij.profile.codeInspection.ProjectInspectionProfileManager$Companion
- <init>(com.intellij.openapi.project.Project):V
- dispose():V
- f:fireProfileChanged():V
- fireProfileChanged(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- f:forceLoadSchemes():V
- getCurrentProfile():com.intellij.codeInspection.ex.InspectionProfileImpl
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.profile.codeInspection.ProjectInspectionProfileManager
- getProfile(java.lang.String,Z):com.intellij.codeInspection.ex.InspectionProfileImpl
- getProfiles():java.util.Collection
- f:getProject():com.intellij.openapi.project.Project
- f:getProjectProfile():java.lang.String
- p:getSchemeManager():com.intellij.openapi.options.SchemeManager
- getScopesManager():com.intellij.packageDependencies.DependencyValidationManager
- getState():org.jdom.Element
- getStateModificationCount():J
- initializeComponent():V
- f:isCurrentProfileInitialized():Z
- loadState(org.jdom.Element):V
- p:schemeRemoved(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- f:setCurrentProfile(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- setRootProfile(java.lang.String):V
- f:useApplicationProfile(java.lang.String):V
f:com.intellij.profile.codeInspection.ProjectInspectionProfileManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.profile.codeInspection.ProjectInspectionProfileManager
f:com.intellij.profile.codeInspection.ProjectInspectionProfileManagerKt
- sf:PROFILES_SETTINGS:java.lang.String
- sf:PROFILE_DIR:java.lang.String
- sf:PROJECT_DEFAULT_PROFILE_NAME:java.lang.String
a:com.intellij.psi.FilePropertyKeyImpl
- com.intellij.psi.FilePropertyKey
- sf:Companion:com.intellij.psi.FilePropertyKeyImpl$Companion
- p:<init>(java.lang.String,com.intellij.openapi.vfs.newvfs.FileAttribute):V
- sf:createPersistentBooleanKey(java.lang.String,java.lang.String,I):com.intellij.psi.FilePropertyKey
- sf:createPersistentEnumKey(java.lang.String,java.lang.String,I,java.lang.Class):com.intellij.psi.FilePropertyKey
- sf:createPersistentIntKey(java.lang.String,java.lang.String,I):com.intellij.psi.FilePropertyKey
- sf:createPersistentStringKey(java.lang.String,com.intellij.openapi.vfs.newvfs.FileAttribute):com.intellij.psi.FilePropertyKey
- sf:createPersistentStringKey(java.lang.String,com.intellij.openapi.vfs.newvfs.FileAttribute,java.util.function.Function,java.util.function.Function):com.intellij.psi.FilePropertyKey
- pa:fromRaw(java.lang.Object):java.lang.Object
- getPersistentValue(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- f:getUserDataKey():com.intellij.openapi.util.Key
- pf:readValue(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- pa:readValue(com.intellij.openapi.vfs.newvfs.AttributeInputStream):java.lang.Object
- setPersistentValue(com.intellij.openapi.vfs.VirtualFile,java.lang.Object):Z
- pa:toRaw(java.lang.Object):java.lang.Object
- pf:writeValue(com.intellij.openapi.vfs.VirtualFile,java.lang.Object):V
- pa:writeValue(com.intellij.openapi.vfs.newvfs.AttributeOutputStream,java.lang.Object):V
f:com.intellij.psi.FilePropertyKeyImpl$Companion
- f:createPersistentBooleanKey(java.lang.String,java.lang.String,I):com.intellij.psi.FilePropertyKey
- f:createPersistentEnumKey(java.lang.String,java.lang.String,I,java.lang.Class):com.intellij.psi.FilePropertyKey
- f:createPersistentIntKey(java.lang.String,java.lang.String,I):com.intellij.psi.FilePropertyKey
- f:createPersistentStringKey(java.lang.String,com.intellij.openapi.vfs.newvfs.FileAttribute):com.intellij.psi.FilePropertyKey
- f:createPersistentStringKey(java.lang.String,com.intellij.openapi.vfs.newvfs.FileAttribute,java.util.function.Function,java.util.function.Function):com.intellij.psi.FilePropertyKey
a:com.intellij.psi.ResolveScopeEnlarger
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getAdditionalResolveScope(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.psi.search.SearchScope
a:com.intellij.psi.ResolveScopeProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getResolveScope(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
f:com.intellij.psi.filters.TrueFilter
- com.intellij.psi.filters.ElementFilter
- sf:INSTANCE:com.intellij.psi.filters.ElementFilter
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
- isClassAcceptable(java.lang.Class):Z
f:com.intellij.psi.impl.source.resolve.reference.impl.providers.FileInfoManager
- <init>():V
- s:_getLookupItem(com.intellij.psi.PsiFile,java.lang.String,javax.swing.Icon):com.intellij.codeInsight.lookup.LookupElementBuilder
- s:getFileAdditionalInfo(com.intellij.psi.PsiElement):java.lang.String
- s:getFileInfoManager():com.intellij.psi.impl.source.resolve.reference.impl.providers.FileInfoManager
- s:getFileLookupItem(com.intellij.psi.PsiElement):java.lang.Object
- s:getFileLookupItem(com.intellij.psi.PsiElement,java.lang.String,javax.swing.Icon):com.intellij.codeInsight.lookup.LookupElementBuilder
c:com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference
- com.intellij.codeInsight.daemon.EmptyResolveMessageProvider
- com.intellij.codeInspection.LocalQuickFixProvider
- com.intellij.psi.PsiPolyVariantReference
- com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceOwner
- com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReference
- com.intellij.refactoring.rename.BindablePsiReference
- sf:EMPTY:com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference[]
- <init>(com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference):V
- <init>(com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceSet,com.intellij.openapi.util.TextRange,I,java.lang.String):V
- bindToElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- bindToElement(com.intellij.psi.PsiElement,Z):com.intellij.psi.PsiElement
- p:createLookupItem(com.intellij.psi.PsiElement):java.lang.Object
- decode(java.lang.String):java.lang.String
- p:encode(java.lang.String,com.intellij.psi.PsiElement):java.lang.String
- s:findFileReference(com.intellij.psi.PsiReference):com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference
- p:fixRefText(java.lang.String):com.intellij.psi.PsiElement
- getCanonicalText():java.lang.String
- p:getContexts():java.util.Collection
- p:getContextsForBindToElement(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceHelper):java.util.Collection
- getElement():com.intellij.psi.PsiElement
- getFileNameToCreate():java.lang.String
- getFileReferenceSet():com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceSet
- ps:getHelpers():com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceHelper[]
- getIndex():I
- getLastFileReference():com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference
- getNewFileTemplateName():java.lang.String
- getQuickFixes():com.intellij.codeInspection.LocalQuickFix[]
- getRangeInElement():com.intellij.openapi.util.TextRange
- getText():java.lang.String
- getUnresolvedMessagePattern():java.lang.String
- getVariants():java.lang.Object[]
- handleElementRename(java.lang.String):com.intellij.psi.PsiElement
- p:innerResolve(Z,com.intellij.psi.PsiFile):com.intellij.psi.ResolveResult[]
- p:innerResolveInContext(java.lang.String,com.intellij.psi.PsiFileSystemItem,java.util.Collection,Z):V
- innerSingleResolve(Z,com.intellij.psi.PsiFile):com.intellij.psi.PsiFileSystemItem
- f:isLast():Z
- isReferenceTo(com.intellij.psi.PsiElement):Z
- isSoft():Z
- multiResolve(Z):com.intellij.psi.ResolveResult[]
- ps:processVariants(com.intellij.psi.PsiFileSystemItem,com.intellij.psi.search.PsiFileSystemItemProcessor):V
- p:rename(java.lang.String):com.intellij.psi.PsiElement
- resolve():com.intellij.psi.PsiFileSystemItem
a:com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceCompletion
- <init>():V
- a:getFileReferenceCompletionVariants(com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference):java.lang.Object[]
- s:getInstance():com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceCompletion
a:com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceHelper
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- findRoot(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFileSystemItem
- getContexts(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- getPsiFileSystemItem(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFileSystemItem
- s:getPsiFileSystemItem(com.intellij.psi.PsiManager,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFileSystemItem
- getRoots(com.intellij.openapi.module.Module):java.util.Collection
- getRoots(com.intellij.openapi.module.Module,com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- getTargetContexts(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z):java.util.Collection
- isFallback():Z
- a:isMine(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- registerFixes(com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference):java.util.List
- trimUrl(java.lang.String):java.lang.String
f:com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceHelperRegistrar
- s:areElementsEquivalent(com.intellij.psi.PsiFileSystemItem,com.intellij.psi.PsiFileSystemItem):Z
- s:getHelpers():com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceHelper[]
- s:getHelpers(com.intellij.psi.PsiFileSystemItem):java.util.List
com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceResolver
- a:getVariants(com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference):java.util.Collection
- a:resolveFileReference(com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference,java.lang.String):com.intellij.psi.PsiFileSystemItem
c:com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceSet
- com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceSetParameters
- sf:ABSOLUTE_TOP_LEVEL:com.intellij.util.Function
- sf:DEFAULT_PATH_EVALUATOR_OPTION:com.intellij.psi.impl.source.resolve.reference.impl.providers.CustomizableReferenceProvider$CustomizationKey
- sf:DIRECTORY_FILTER:com.intellij.openapi.util.Condition
- sf:FILE_FILTER:com.intellij.openapi.util.Condition
- p:myReferences:com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference[]
- <init>(com.intellij.psi.PsiElement):V
- <init>(java.lang.String,com.intellij.psi.PsiElement,I,com.intellij.psi.PsiReferenceProvider,Z):V
- <init>(java.lang.String,com.intellij.psi.PsiElement,I,com.intellij.psi.PsiReferenceProvider,Z,Z):V
- <init>(java.lang.String,com.intellij.psi.PsiElement,I,com.intellij.psi.PsiReferenceProvider,Z,Z,com.intellij.openapi.fileTypes.FileType[]):V
- <init>(java.lang.String,com.intellij.psi.PsiElement,I,com.intellij.psi.PsiReferenceProvider,Z,Z,com.intellij.openapi.fileTypes.FileType[],Z):V
- absoluteUrlNeedsStartSlash():Z
- addCustomization(com.intellij.psi.impl.source.resolve.reference.impl.providers.CustomizableReferenceProvider$CustomizationKey,java.lang.Object):V
- computeDefaultContexts():java.util.Collection
- couldBeConvertedTo(Z):Z
- createFileReference(com.intellij.openapi.util.TextRange,I,java.lang.String):com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference
- s:createSet(com.intellij.psi.PsiElement,Z,Z,Z):com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceSet
- p:findSeparatorLength(java.lang.CharSequence,I):I
- p:findSeparatorOffset(java.lang.CharSequence,I):I
- s:getAbsoluteTopLevelDirLocations(com.intellij.psi.PsiFile):java.util.Collection
- getAllReferences():com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference[]
- p:getContainingFile():com.intellij.psi.PsiFile
- p:getContextByFileSystemItem(com.intellij.psi.PsiFileSystemItem):java.util.Collection
- getDefaultContexts():java.util.Collection
- getElement():com.intellij.psi.PsiElement
- p:getExtraContexts():java.util.Collection
- getLastReference():com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference
- p:getNewAbsolutePath(com.intellij.psi.PsiFileSystemItem,java.lang.String):java.lang.String
- p:getParentDirectoryContext():java.util.Collection
- getPathString():java.lang.String
- getReference(I):com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference
- p:getReferenceCompletionFilter():com.intellij.openapi.util.Condition
- getSeparatorString():java.lang.String
- getStartInElement():I
- getSuitableFileTypes():com.intellij.openapi.fileTypes.FileType[]
- getTargetContexts():java.util.Collection
- isAbsolutePathReference():Z
- isCaseSensitive():Z
- isEmptyPathAllowed():Z
- isEndingSlashNotAllowed():Z
- p:isSoft():Z
- p:isUrlEncoded():Z
- p:reparse():V
- p:reparse(java.lang.String,I):java.util.List
- resolve():com.intellij.psi.PsiFileSystemItem
- setEmptyPathAllowed(Z):V
- supportsExtendedCompletion():Z
- p:toFileSystemItems(java.util.Collection):java.util.Collection
- p:toFileSystemItems(com.intellij.openapi.vfs.VirtualFile[]):java.util.Collection
- p:useIncludingFileAsContext():Z
com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceSet$TargetContextEvaluator
- a:getTargetContexts(com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceSetParameters,com.intellij.psi.PsiFile):java.util.Collection
c:com.intellij.psi.impl.source.resolve.reference.impl.providers.FileTargetContext
- <init>(com.intellij.psi.PsiFileSystemItem):V
- <init>(com.intellij.psi.PsiFileSystemItem,java.lang.String[]):V
- equals(java.lang.Object):Z
- getFileSystemItem():com.intellij.psi.PsiFileSystemItem
- getPathToCreate():java.lang.String[]
- hashCode():I
- s:toTargetContexts(com.intellij.psi.PsiFileSystemItem):java.util.Collection
- s:toTargetContexts(java.util.Collection):java.util.Collection
c:com.intellij.psi.impl.source.resolve.reference.impl.providers.NullFileReferenceHelper
- com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceHelper
- sf:INSTANCE:com.intellij.psi.impl.source.resolve.reference.impl.providers.NullFileReferenceHelper
- <init>():V
- findRoot(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFileSystemItem
- getContexts(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- getRoots(com.intellij.openapi.module.Module):java.util.Collection
- isFallback():Z
- isMine(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
c:com.intellij.psi.impl.source.resolve.reference.impl.providers.SoftFileReferenceSet
- com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceSet
- <init>(com.intellij.psi.PsiElement):V
- <init>(java.lang.String,com.intellij.psi.PsiElement,I,com.intellij.psi.PsiReferenceProvider,Z):V
- <init>(java.lang.String,com.intellij.psi.PsiElement,I,com.intellij.psi.PsiReferenceProvider,Z,Z):V
- <init>(java.lang.String,com.intellij.psi.PsiElement,I,com.intellij.psi.PsiReferenceProvider,Z,Z,com.intellij.openapi.fileTypes.FileType[]):V
- <init>(java.lang.String,com.intellij.psi.PsiElement,I,com.intellij.psi.PsiReferenceProvider,Z,Z,com.intellij.openapi.fileTypes.FileType[],Z):V
- p:isSoft():Z
com.intellij.psi.impl.source.tree.injected.FallbackInjectionPerformer
- com.intellij.lang.injection.general.LanguageInjectionPerformer
- s:getInstance():com.intellij.psi.impl.source.tree.injected.FallbackInjectionPerformer
- a:registerSupportIfNone(com.intellij.psi.PsiElement,com.intellij.lang.injection.general.Injection):V
f:com.intellij.psi.impl.source.tree.injected.InjectedCaret
- com.intellij.openapi.editor.Caret
- clone(Z):com.intellij.openapi.editor.Caret
- dispose():V
- getCaretModel():com.intellij.openapi.editor.CaretModel
- getDelegate():com.intellij.openapi.editor.Caret
- getEditor():com.intellij.openapi.editor.Editor
- getLeadSelectionOffset():I
- getLeadSelectionPosition():com.intellij.openapi.editor.VisualPosition
- getLogicalPosition():com.intellij.openapi.editor.LogicalPosition
- getOffset():I
- getSelectedText():java.lang.String
- getSelectionEnd():I
- getSelectionEndPosition():com.intellij.openapi.editor.VisualPosition
- getSelectionRange():com.intellij.openapi.util.TextRange
- getSelectionStart():I
- getSelectionStartPosition():com.intellij.openapi.editor.VisualPosition
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- getVisualAttributes():com.intellij.openapi.editor.CaretVisualAttributes
- getVisualLineEnd():I
- getVisualLineStart():I
- getVisualPosition():com.intellij.openapi.editor.VisualPosition
- hasSelection():Z
- isAtBidiRunBoundary():Z
- isAtRtlLocation():Z
- isUpToDate():Z
- isValid():Z
- moveCaretRelatively(I,I,Z,Z):V
- moveToLogicalPosition(com.intellij.openapi.editor.LogicalPosition):V
- moveToOffset(I):V
- moveToOffset(I,Z):V
- moveToVisualPosition(com.intellij.openapi.editor.VisualPosition):V
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- putUserDataIfAbsent(com.intellij.openapi.util.Key,java.lang.Object):java.lang.Object
- removeSelection():V
- replace(com.intellij.openapi.util.Key,java.lang.Object,java.lang.Object):Z
- selectLineAtCaret():V
- selectWordAtCaret(Z):V
- setSelection(I,I):V
- setSelection(I,I,Z):V
- setSelection(I,com.intellij.openapi.editor.VisualPosition,I):V
- setSelection(com.intellij.openapi.editor.VisualPosition,I,com.intellij.openapi.editor.VisualPosition,I):V
- setSelection(com.intellij.openapi.editor.VisualPosition,I,com.intellij.openapi.editor.VisualPosition,I,Z):V
- setVisualAttributes(com.intellij.openapi.editor.CaretVisualAttributes):V
com.intellij.psi.impl.source.tree.injected.InjectedFileViewProvider
- com.intellij.psi.FileViewProvider
- com.intellij.psi.impl.FreeThreadedFileViewProvider
- cloneImpl():com.intellij.psi.FileViewProvider
- s:create(com.intellij.psi.impl.PsiManagerEx,com.intellij.psi.impl.source.tree.injected.VirtualFileWindowImpl,com.intellij.psi.impl.source.tree.injected.DocumentWindowImpl,com.intellij.lang.Language):com.intellij.psi.impl.source.tree.injected.InjectedFileViewProvider
- a:forceCachedPsi(com.intellij.psi.PsiFile):V
- a:getDocument():com.intellij.psi.impl.source.tree.injected.DocumentWindowImpl
- a:getLock():java.lang.Object
- a:getPatchingLeaves():Z
- getShreds():com.intellij.psi.impl.source.tree.injected.Place
- isDisposed():Z
- isEventSystemEnabledImpl():Z
- isPhysicalImpl():Z
- isValid():Z
- performNonPhysically(java.lang.Runnable):V
- rootChangedImpl(com.intellij.psi.PsiFile):V
- s:same(com.intellij.psi.impl.source.tree.injected.Place,com.intellij.psi.impl.source.tree.injected.Place):Z
- setShreds(com.intellij.psi.impl.source.tree.injected.Place):Z
f:com.intellij.psi.impl.source.tree.injected.InjectedLanguageUtil
- sf:FRANKENSTEIN_INJECTION:com.intellij.openapi.util.Key
- <init>():V
- s:enumerate(com.intellij.injected.editor.DocumentWindow,com.intellij.psi.PsiFile,com.intellij.psi.PsiLanguageInjectionHost$InjectedPsiVisitor):V
- s:findElementInInjected(com.intellij.psi.PsiLanguageInjectionHost,I):com.intellij.psi.PsiElement
- s:findInjectedFile(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.extapi.psi.PsiFileBase
- s:getCachedInjectedFileWithLanguage(com.intellij.psi.PsiElement,com.intellij.lang.Language):com.intellij.psi.PsiFile
- s:getCaretForInjectedLanguageNoCommit(com.intellij.openapi.editor.Caret,com.intellij.psi.PsiFile):com.intellij.openapi.editor.Caret
- s:getDocumentWindow(com.intellij.psi.PsiElement):com.intellij.injected.editor.DocumentWindow
- s:getEditorForInjectedLanguageNoCommit(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.psi.PsiFile):com.intellij.openapi.editor.Editor
- s:getEditorForInjectedLanguageNoCommit(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.openapi.editor.Editor
- s:getEditorForInjectedLanguageNoCommit(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.openapi.editor.Editor
- s:getInjectedEditorForInjectedFile(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.psi.PsiFile):com.intellij.openapi.editor.Editor
- s:getInjectedEditorForInjectedFile(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.openapi.editor.Editor
- s:getInjectedStart(java.util.List):I
- s:getTopLevelEditor(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.Editor
- s:hostToInjectedUnescaped(com.intellij.injected.editor.DocumentWindow,I):I
- s:injectReference(com.intellij.lang.injection.MultiHostRegistrar,com.intellij.lang.Language,java.lang.String,java.lang.String,com.intellij.psi.PsiLanguageInjectionHost,com.intellij.openapi.util.TextRange):V
- s:isHighlightInjectionBackground(com.intellij.psi.PsiLanguageInjectionHost):Z
- s:openEditorFor(com.intellij.psi.PsiFile,com.intellij.openapi.project.Project):com.intellij.openapi.editor.Editor
- s:processTokens(com.intellij.psi.PsiFile,java.util.List,java.util.function.BiConsumer):V
- s:putInjectedFileUserData(com.intellij.psi.PsiElement,com.intellij.lang.Language,com.intellij.openapi.util.Key,java.lang.Object):V
com.intellij.psi.impl.source.tree.injected.InjectionBackgroundSuppressor
c:com.intellij.psi.impl.source.tree.injected.Place
- java.util.AbstractList
- get(I):com.intellij.psi.PsiLanguageInjectionHost$Shred
- size():I
a:com.intellij.psi.search.PredefinedSearchScopeProvider
- sf:Companion:com.intellij.psi.search.PredefinedSearchScopeProvider$Companion
- <init>():V
- sf:getInstance():com.intellij.psi.search.PredefinedSearchScopeProvider
- a:getPredefinedScopes(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,Z):java.util.List
- getPredefinedScopesAsync(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,Z):org.jetbrains.concurrency.Promise
- getPredefinedScopesSuspend(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,Z,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.psi.search.PredefinedSearchScopeProvider$Companion
- f:getInstance():com.intellij.psi.search.PredefinedSearchScopeProvider
com.intellij.psi.search.SearchScopeProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- getDisplayName():java.lang.String
- getGeneralSearchScopes(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):java.util.List
- getSearchScopes(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):java.util.List
a:com.intellij.psi.search.SpecificNameItemProcessor
- com.intellij.psi.search.PsiFileSystemItemProcessor
- p:<init>(java.lang.String):V
- acceptItem(java.lang.String,Z):Z
- getName():java.lang.String
c:com.intellij.psi.templateLanguages.DefaultOuterLanguagePatcher
- com.intellij.psi.templateLanguages.TemplateDataElementType$OuterLanguageRangePatcher
- sf:OUTER_EXPRESSION_PLACEHOLDER:java.lang.String
- <init>():V
- getTextForOuterLanguageInsertionRange(com.intellij.psi.templateLanguages.TemplateDataElementType,java.lang.CharSequence):java.lang.String
c:com.intellij.psi.templateLanguages.MiddleTreePatcher
- com.intellij.psi.templateLanguages.TreePatcher
- <init>():V
- insert(com.intellij.psi.impl.source.tree.CompositeElement,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.templateLanguages.OuterLanguageElement):V
c:com.intellij.psi.templateLanguages.SimpleTreePatcher
- com.intellij.psi.templateLanguages.TreePatcher
- <init>():V
- insert(com.intellij.psi.impl.source.tree.CompositeElement,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.templateLanguages.OuterLanguageElement):V
c:com.intellij.psi.templateLanguages.TemplateDataElementType
- com.intellij.psi.tree.IFileElementType
- com.intellij.psi.templateLanguages.ITemplateDataElementType
- sf:TREE_PATCHER:com.intellij.lang.LanguageExtension
- <init>(java.lang.String,com.intellij.lang.Language,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):V
- p:appendCurrentTemplateToken(I,java.lang.CharSequence):com.intellij.psi.templateLanguages.TemplateDataModifications
- p:appendCurrentTemplateToken(java.lang.StringBuilder,java.lang.CharSequence,com.intellij.lexer.Lexer,com.intellij.psi.templateLanguages.TemplateDataElementType$RangeCollector):V
- p:collectTemplateModifications(java.lang.CharSequence,com.intellij.lexer.Lexer):com.intellij.psi.templateLanguages.TemplateDataModifications
- p:createBaseLexer(com.intellij.psi.templateLanguages.TemplateLanguageFileViewProvider):com.intellij.lexer.Lexer
- p:createOuterLanguageElement(java.lang.CharSequence,com.intellij.psi.tree.IElementType):com.intellij.psi.templateLanguages.OuterLanguageElementImpl
- p:createPsiFileFromSource(com.intellij.lang.Language,java.lang.CharSequence,com.intellij.psi.PsiManager):com.intellij.psi.PsiFile
- p:createTemplateFakeFileType(com.intellij.lang.Language):com.intellij.openapi.fileTypes.LanguageFileType
- p:createTemplateFile(com.intellij.psi.PsiFile,com.intellij.lang.Language,java.lang.CharSequence,com.intellij.psi.templateLanguages.TemplateLanguageFileViewProvider,com.intellij.psi.templateLanguages.TemplateDataElementType$RangeCollector):com.intellij.psi.PsiFile
- p:createTemplateText(java.lang.CharSequence,com.intellij.lexer.Lexer,com.intellij.psi.templateLanguages.TemplateDataElementType$RangeCollector):java.lang.CharSequence
- p:getTemplateDataInsertionTokens():com.intellij.psi.tree.TokenSet
- p:getTemplateFileLanguage(com.intellij.psi.templateLanguages.TemplateLanguageFileViewProvider):com.intellij.lang.Language
- p:isInsertionToken(com.intellij.psi.tree.IElementType,java.lang.CharSequence):Z
- parseContents(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- s:parseWithOuterAndRemoveRangesApplied(com.intellij.lang.ASTNode,com.intellij.lang.Language,java.util.function.Function):com.intellij.lang.ASTNode
com.intellij.psi.templateLanguages.TemplateDataElementType$OuterLanguageRangePatcher
- a:getTextForOuterLanguageInsertionRange(com.intellij.psi.templateLanguages.TemplateDataElementType,java.lang.CharSequence):java.lang.String
a:com.intellij.psi.templateLanguages.TemplateDataElementType$RangeCollector
- <init>():V
- addOuterRange(com.intellij.openapi.util.TextRange):V
- a:addOuterRange(com.intellij.openapi.util.TextRange,Z):V
- addRangeToRemove(com.intellij.openapi.util.TextRange):V
com.intellij.psi.templateLanguages.TemplateDataElementType$TemplateAwareElementType
- com.intellij.psi.tree.ILazyParseableElementTypeBase
- a:createTreeElement(java.lang.CharSequence):com.intellij.psi.impl.source.tree.TreeElement
pc:com.intellij.psi.templateLanguages.TemplateDataElementType$TemplateFileType
- com.intellij.openapi.fileTypes.LanguageFileType
- p:<init>(com.intellij.lang.Language):V
- getDefaultExtension():java.lang.String
- getDescription():java.lang.String
- getIcon():javax.swing.Icon
- getName():java.lang.String
c:com.intellij.psi.templateLanguages.TemplateDataModifications
- sf:EMPTY:com.intellij.psi.templateLanguages.TemplateDataModifications
- <init>():V
- addAll(com.intellij.psi.templateLanguages.TemplateDataModifications):Z
- addOuterRange(com.intellij.openapi.util.TextRange):V
- addOuterRange(com.intellij.openapi.util.TextRange,Z):V
- addRangeToRemove(I,java.lang.CharSequence):V
- applyToText(java.lang.CharSequence,com.intellij.psi.templateLanguages.TemplateDataElementType):com.intellij.openapi.util.Pair
- s:fromRangeToRemove(I,java.lang.CharSequence):com.intellij.psi.templateLanguages.TemplateDataModifications
c:com.intellij.refactoring.rename.CollisionUsageInfo
- com.intellij.refactoring.util.MoveRenameUsageInfo
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
c:com.intellij.refactoring.rename.NonCodeUsageInfoFactory
- com.intellij.usageView.UsageInfoFactory
- <init>(com.intellij.psi.PsiElement,java.lang.String):V
- createUsageInfo(com.intellij.psi.PsiElement,I,I):com.intellij.usageView.UsageInfo
f:com.intellij.refactoring.rename.RenameUtilBase
- s:doRenameGenericNamedElement(com.intellij.psi.PsiElement,java.lang.String,com.intellij.usageView.UsageInfo[],com.intellij.refactoring.listeners.RefactoringElementListener):V
- s:rename(com.intellij.usageView.UsageInfo,java.lang.String):V
- s:renameReference(com.intellij.psi.PsiElement,java.lang.String,com.intellij.psi.PsiReference):V
a:com.intellij.refactoring.rename.UnresolvableCollisionUsageInfo
- com.intellij.refactoring.rename.CollisionUsageInfo
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- a:getDescription():java.lang.String
c:com.intellij.refactoring.util.AbstractVariableData
- name:java.lang.String
- originalName:java.lang.String
- passAsParameter:Z
- <init>():V
- getName():java.lang.String
- getOriginalName():java.lang.String
- isPassAsParameter():Z
f:com.intellij.refactoring.util.NonCodeSearchDescriptionLocation
- com.intellij.psi.ElementDescriptionLocation
- sf:NON_JAVA:com.intellij.refactoring.util.NonCodeSearchDescriptionLocation
- sf:STRINGS_AND_COMMENTS:com.intellij.refactoring.util.NonCodeSearchDescriptionLocation
- getDefaultProvider():com.intellij.psi.ElementDescriptionProvider
- isNonJava():Z
f:com.intellij.refactoring.util.TextOccurrencesUtilBase
- s:addTextOccurrences(com.intellij.psi.PsiElement,java.lang.String,com.intellij.psi.search.GlobalSearchScope,java.util.Collection,com.intellij.usageView.UsageInfoFactory):V
- s:addUsagesInStringsAndComments(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,java.lang.String,java.util.Collection,com.intellij.usageView.UsageInfoFactory):V
- s:isStringLiteralElement(com.intellij.psi.PsiElement):Z
- s:processUsagesInStringsAndComments(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,java.lang.String,Z,com.intellij.util.PairProcessor):Z
- s:processUsagesInStringsAndComments(com.intellij.util.Processor,com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,java.lang.String,com.intellij.usageView.UsageInfoFactory):Z
com.intellij.util.ui.classpath.SimpleClasspathElement
- a:getClassesRootUrls():java.util.List
- a:getLibrary():com.intellij.openapi.roots.libraries.Library
- a:getLibraryName():java.lang.String
- a:getPresentableName():java.lang.String
- a:serialize(org.jdom.Element):V
f:com.intellij.util.ui.classpath.SimpleClasspathElementFactory
- s:convertToFiles(java.util.Collection,Z):java.util.List
- s:createElements(com.intellij.openapi.project.Project,org.jdom.Element):java.util.List
- s:createElements(com.intellij.openapi.roots.libraries.Library):java.util.List
- s:createElements(java.lang.String[]):java.util.List
c:com.intellij.util.ui.classpath.SingleRootClasspathElement
- com.intellij.util.ui.classpath.SimpleClasspathElement
- sf:URL_ELEMENT:java.lang.String
- <init>(java.lang.String):V
- equals(java.lang.Object):Z
- getClassesRootUrls():java.util.List
- getLibrary():com.intellij.openapi.roots.libraries.Library
- getLibraryName():java.lang.String
- getPresentableName():java.lang.String
- hashCode():I
- serialize(org.jdom.Element):V
