// Copyright 2000-2025 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.
/**
 * This file is generated by [com.intellij.platform.eel.codegen.BuildersGeneratorTest].
 */
package com.intellij.platform.eel.fs

import com.intellij.platform.eel.GeneratedBuilder
import com.intellij.platform.eel.fs.EelFileSystemApi.FileChangeType
import com.intellij.platform.eel.fs.EelFileSystemApi.WatchOptions
import com.intellij.platform.eel.fs.EelFileSystemApi.WatchedPath


@GeneratedBuilder.Result
class WatchOptionsBuilder() {
  private var changeTypes: Set<FileChangeType> = emptySet()

  private var paths: Set<WatchedPath> = emptySet()

  fun changeTypes(arg: Set<FileChangeType>): WatchOptionsBuilder = apply {
    this.changeTypes = arg
  }

  fun paths(arg: Set<WatchedPath>): WatchOptionsBuilder = apply {
    this.paths = arg
  }

  fun build(): WatchOptions =
    WatchOptionsImpl(
      changeTypes = changeTypes,
      paths = paths,
    )
}

@GeneratedBuilder.Result
internal class WatchOptionsImpl(
  override val changeTypes: Set<FileChangeType>,
  override val paths: Set<WatchedPath>,
) : WatchOptions