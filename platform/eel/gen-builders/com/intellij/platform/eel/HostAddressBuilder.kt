// Copyright 2000-2025 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.
/**
 * This file is generated by [com.intellij.platform.eel.codegen.BuildersGenerator].
 */
package com.intellij.platform.eel

import com.intellij.platform.eel.*
import com.intellij.platform.eel.EelTunnelsApi.HostAddress
import kotlin.time.Duration
import kotlin.time.Duration.Companion.seconds


@GeneratedBuilder.Result
class HostAddressBuilder {
  private var hostname: String = "localhost"

  private var port: UShort = 0u

  private var protocolPreference: EelIpPreference = EelIpPreference.USE_SYSTEM_DEFAULT

  private var timeout: Duration = 10.seconds

  fun hostname(arg: String): HostAddressBuilder = apply {
    this.hostname = arg
  }

  fun port(arg: UShort): HostAddressBuilder = apply {
    this.port = arg
  }

  /**
   * @see [Builder.preferIPv4]
   */
  fun protocolPreference(arg: EelIpPreference): HostAddressBuilder = apply {
    this.protocolPreference = arg
  }

  fun preferV4(): HostAddressBuilder =
    protocolPreference(EelIpPreference.PREFER_V4)

  fun preferV6(): HostAddressBuilder =
    protocolPreference(EelIpPreference.PREFER_V6)

  fun useSystemDefault(): HostAddressBuilder =
    protocolPreference(EelIpPreference.USE_SYSTEM_DEFAULT)

  /**
   * @see [Builder.connectionTimeout]
   */
  fun timeout(arg: Duration): HostAddressBuilder = apply {
    this.timeout = arg
  }

  fun build(): HostAddress =
    HostAddressImpl(
      hostname = hostname,
      port = port,
      protocolPreference = protocolPreference,
      timeout = timeout,
    )
}

@GeneratedBuilder.Result
internal class HostAddressImpl(
  override val hostname: String,
  override val port: UShort,
  override val protocolPreference: EelIpPreference,
  override val timeout: Duration,
) : HostAddress