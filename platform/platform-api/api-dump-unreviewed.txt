f:com.intellij.AppTopics
- sf:FILE_DOCUMENT_SYNC:com.intellij.util.messages.Topic
- <init>():V
com.intellij.ExtensionPoints
a:com.intellij.codeInsight.breadcrumbs.FileBreadcrumbsCollector
- sf:EP_NAME:com.intellij.openapi.extensions.ProjectExtensionPointName
- <init>():V
- a:computeCrumbs(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document,I,java.lang.Boolean):java.lang.Iterable
- s:findBreadcrumbsCollector(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.codeInsight.breadcrumbs.FileBreadcrumbsCollector
- a:handlesFile(com.intellij.openapi.vfs.VirtualFile):Z
- a:watchForChanges(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.Disposable,java.lang.Runnable):V
com.intellij.codeInsight.editorActions.TextBlockTransferableData
- sf:PLAIN_TEXT_PRIORITY:I
- a:getFlavor():java.awt.datatransfer.DataFlavor
- getOffsetCount():I
- getOffsets(I[],I):I
- getPriority():I
- setOffsets(I[],I):I
a:com.intellij.codeInsight.highlighting.TooltipLinkHandler
- <init>():V
- getDescription(java.lang.String,com.intellij.openapi.editor.Editor):java.lang.String
- getDescriptionTitle(java.lang.String,com.intellij.openapi.editor.Editor):java.lang.String
- handleLink(java.lang.String,com.intellij.openapi.editor.Editor):Z
a:com.intellij.codeInsight.hint.HintManager
- sf:ABOVE:S
- sf:DEFAULT:S
- sf:DONT_CONSUME_ESCAPE:I
- sf:HIDE_BY_ANY_KEY:I
- sf:HIDE_BY_CARET_MOVE:I
- sf:HIDE_BY_ESCAPE:I
- sf:HIDE_BY_LOOKUP_ITEM_CHANGE:I
- sf:HIDE_BY_MOUSEOVER:I
- sf:HIDE_BY_OTHER_HINT:I
- sf:HIDE_BY_SCROLLING:I
- sf:HIDE_BY_TEXT_CHANGE:I
- sf:HIDE_IF_OUT_OF_EDITOR:I
- sf:LEFT:S
- sf:RIGHT:S
- sf:RIGHT_UNDER:S
- sf:UNDER:S
- sf:UPDATE_BY_SCROLLING:I
- <init>():V
- s:getInstance():com.intellij.codeInsight.hint.HintManager
- a:hasShownHintsThatWillHideByOtherHint(Z):Z
- a:hideAllHints():V
- a:hideHints(I,Z,Z):Z
- a:setRequestFocusForNextHint(Z):V
- a:showErrorHint(com.intellij.openapi.editor.Editor,java.lang.String):V
- a:showErrorHint(com.intellij.openapi.editor.Editor,java.lang.String,I,I,S,I,I):V
- a:showErrorHint(com.intellij.openapi.editor.Editor,java.lang.String,S):V
- a:showHint(javax.swing.JComponent,com.intellij.ui.awt.RelativePoint,I,I):V
- a:showHint(javax.swing.JComponent,com.intellij.ui.awt.RelativePoint,I,I,java.lang.Runnable):V
- showInformationHint(com.intellij.openapi.editor.Editor,java.lang.String):V
- a:showInformationHint(com.intellij.openapi.editor.Editor,java.lang.String,javax.swing.event.HyperlinkListener):V
- a:showInformationHint(com.intellij.openapi.editor.Editor,java.lang.String,S):V
- a:showInformationHint(com.intellij.openapi.editor.Editor,javax.swing.JComponent):V
- a:showInformationHint(com.intellij.openapi.editor.Editor,javax.swing.JComponent,java.lang.Runnable):V
- a:showQuestionHint(com.intellij.openapi.editor.Editor,java.lang.String,I,I,com.intellij.codeInsight.hint.QuestionAction):V
- showSuccessHint(com.intellij.openapi.editor.Editor,java.lang.String):V
- showSuccessHint(com.intellij.openapi.editor.Editor,java.lang.String,javax.swing.event.HyperlinkListener):V
- showSuccessHint(com.intellij.openapi.editor.Editor,java.lang.String,S):V
@:com.intellij.codeInsight.hint.HintManager$HideFlags
- java.lang.annotation.Annotation
@:com.intellij.codeInsight.hint.HintManager$PositionFlags
- java.lang.annotation.Annotation
c:com.intellij.execution.ExecutionFinishedException
- com.intellij.execution.ExecutionException
- <init>():V
- <init>(java.lang.Throwable):V
c:com.intellij.execution.filters.BrowserHyperlinkInfo
- com.intellij.execution.filters.HyperlinkInfo
- <init>(java.lang.String):V
- navigate(com.intellij.openapi.project.Project):V
a:com.intellij.execution.filters.HyperlinkInfoBase
- com.intellij.execution.filters.HyperlinkInfo
- <init>():V
- navigate(com.intellij.openapi.project.Project):V
- a:navigate(com.intellij.openapi.project.Project,com.intellij.ui.awt.RelativePoint):V
c:com.intellij.execution.process.BinaryOSProcessHandler
- com.intellij.execution.process.OSProcessHandler
- <init>(com.intellij.execution.configurations.GeneralCommandLine):V
- <init>(java.lang.Process,java.lang.String,java.nio.charset.Charset):V
- p:createOutputDataReader():com.intellij.util.io.BaseDataReader
- getOutput():B[]
c:com.intellij.execution.process.CapturingAnsiEscapesAwareProcessHandler
- com.intellij.execution.process.CapturingProcessHandler
- <init>(com.intellij.execution.configurations.GeneralCommandLine):V
- <init>(java.lang.Process,java.lang.String):V
- p:createProcessAdapter(com.intellij.execution.process.ProcessOutput):com.intellij.execution.process.CapturingProcessAdapter
pc:com.intellij.execution.process.CapturingAnsiEscapesAwareProcessHandler$AnsiEscapesAwareAdapter
- com.intellij.execution.process.CapturingProcessAdapter
- com.intellij.execution.process.AnsiEscapeDecoder$ColoredTextAcceptor
- <init>(com.intellij.execution.process.ProcessOutput):V
- coloredTextAvailable(java.lang.String,com.intellij.openapi.util.Key):V
- onTextAvailable(com.intellij.execution.process.ProcessEvent,com.intellij.openapi.util.Key):V
f:com.intellij.execution.process.ColoredOutputTypeRegistryImpl
- <init>():V
- s:getAnsiColorKey(I):com.intellij.openapi.editor.colors.TextAttributesKey
- getOutputType(java.lang.String,com.intellij.openapi.util.Key):com.intellij.execution.process.ProcessOutputType
f:com.intellij.execution.process.ConsoleHighlighter
- sf:BLACK:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:BLUE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:BLUE_BRIGHT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CYAN:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CYAN_BRIGHT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DARKGRAY:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:GRAY:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:GREEN:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:GREEN_BRIGHT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:MAGENTA:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:MAGENTA_BRIGHT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:RED:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:RED_BRIGHT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:WHITE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:YELLOW:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:YELLOW_BRIGHT:com.intellij.openapi.editor.colors.TextAttributesKey
a:com.intellij.execution.process.ProcessHandlerFactory
- <init>():V
- a:createColoredProcessHandler(com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.process.OSProcessHandler
- a:createProcessHandler(com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.process.OSProcessHandler
- s:getInstance():com.intellij.execution.process.ProcessHandlerFactory
c:com.intellij.execution.ui.CommandLinePanel
- javax.swing.JPanel
- <init>(java.util.Collection,java.lang.String,com.intellij.openapi.Disposable):V
- getLeftInset():I
- getMinimumSize():java.awt.Dimension
- s:setMinimumWidth(java.awt.Component,I):java.awt.Dimension
c:com.intellij.execution.ui.FragmentHintManager
- <init>(com.intellij.util.Consumer,java.lang.String,java.lang.String,com.intellij.openapi.Disposable):V
- registerFragment(com.intellij.execution.ui.SettingsEditorFragment):V
- registerFragments(java.util.Collection):V
a:com.intellij.execution.ui.FragmentStatisticsService
- <init>():V
- s:getInstance():com.intellij.execution.ui.FragmentStatisticsService
- a:logHintsShown(com.intellij.openapi.project.Project,java.lang.String,I,J):V
- a:logNavigateOption(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
- a:logOptionModified(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
- a:logOptionRemoved(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.execution.ui.FragmentWrapper
- a:getComponentToRegister():javax.swing.JComponent
c:com.intellij.execution.ui.FragmentedSettingsBuilder
- com.intellij.openapi.Disposable
- com.intellij.openapi.options.CompositeSettingsBuilder
- sf:LARGE_TOP_INSET:I
- sf:LEFT_INSET:I
- sf:MEDIUM_TOP_INSET:I
- sf:TAG_HGAP:I
- sf:TAG_VGAP:I
- sf:TOP_INSET:I
- p:myGroupInset:I
- <init>(java.util.Collection,com.intellij.execution.ui.NestedGroupFragment,com.intellij.openapi.Disposable):V
- p:addBeforeRun(com.intellij.execution.ui.SettingsEditorFragment):V
- p:addFragments(java.util.List):V
- p:addHeader(com.intellij.execution.ui.SettingsEditorFragment):V
- p:addLine(java.awt.Component):V
- p:addLine(java.awt.Component,I,I,I):V
- p:addSubGroups(java.util.List):V
- p:addTagPanel(java.util.List):V
- createCompoundEditor():javax.swing.JComponent
- p:createHeaderSeparator():javax.swing.JComponent
- dispose():V
- getEditors():java.util.Collection
- setConfigId(java.lang.String):V
a:com.intellij.execution.ui.FragmentedSettingsEditor
- com.intellij.openapi.options.CompositeSettingsEditor
- pf:mySettings:com.intellij.execution.ui.FragmentedSettings
- p:<init>(com.intellij.execution.ui.FragmentedSettings):V
- applyEditorTo(com.intellij.execution.ui.FragmentedSettings):V
- pa:createFragments():java.util.Collection
- getBuilder():com.intellij.execution.ui.FragmentedSettingsBuilder
- pf:getFragments():java.util.Collection
- p:initFragments(java.util.Collection):V
- installWatcher(javax.swing.JComponent):V
- p:isDefaultSettings():Z
- isReadyForApply():Z
- resetEditorFrom(com.intellij.execution.ui.FragmentedSettings):V
f:com.intellij.execution.ui.FragmentedSettingsUtil
- <init>():V
- s:setupPlaceholderVisibility(com.intellij.ui.components.JBTextField):V
a:com.intellij.execution.ui.NestedGroupFragment
- com.intellij.execution.ui.SettingsEditorFragment
- p:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.function.Predicate):V
- p:applyEditorTo(com.intellij.execution.ui.FragmentedSettings):V
- pa:createChildren():java.util.List
- p:createEditor():javax.swing.JComponent
- p:getBuilder():com.intellij.execution.ui.FragmentedSettingsBuilder
- f:getChildren():java.util.List
- getChildrenGroupName():java.lang.String
- isInitiallyVisible(com.intellij.execution.ui.FragmentedSettings):Z
- isSelected():Z
- p:resetEditorFrom(com.intellij.execution.ui.FragmentedSettings):V
- setSelected(Z):V
c:com.intellij.execution.ui.SettingsEditorFragment
- com.intellij.openapi.options.SettingsEditor
- p:myComponent:javax.swing.JComponent
- <init>(java.lang.String,java.lang.String,java.lang.String,javax.swing.JComponent,I,com.intellij.execution.ui.SettingsEditorFragmentType,java.util.function.BiConsumer,java.util.function.BiConsumer,java.util.function.Predicate):V
- <init>(java.lang.String,java.lang.String,java.lang.String,javax.swing.JComponent,I,java.util.function.BiConsumer,java.util.function.BiConsumer,java.util.function.Predicate):V
- <init>(java.lang.String,java.lang.String,java.lang.String,javax.swing.JComponent,com.intellij.execution.ui.SettingsEditorFragmentType,java.util.function.BiConsumer,java.util.function.BiConsumer,java.util.function.Predicate):V
- <init>(java.lang.String,java.lang.String,java.lang.String,javax.swing.JComponent,java.util.function.BiConsumer,java.util.function.BiConsumer,java.util.function.Predicate):V
- addValidation(com.intellij.util.ThrowableConsumer):com.intellij.execution.ui.SettingsEditorFragment
- p:applyEditorTo(java.lang.Object):V
- component():javax.swing.JComponent
- p:createEditor():javax.swing.JComponent
- s:createTag(java.lang.String,java.lang.String,java.lang.String,java.util.function.Predicate,java.util.function.BiConsumer):com.intellij.execution.ui.SettingsEditorFragment
- s:createWrapper(java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.options.SettingsEditor,java.util.function.Predicate):com.intellij.execution.ui.SettingsEditorFragment
- getActionDescription():java.lang.String
- getActionHint():java.lang.String
- getAllComponents():javax.swing.JComponent[]
- getChildren():java.util.List
- getChildrenGroupName():java.lang.String
- getCustomActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- getEditorComponent():javax.swing.JComponent
- getGroup():java.lang.String
- getHint(javax.swing.JComponent):java.lang.String
- getHintComponent():javax.swing.JComponent
- getId():java.lang.String
- getMenuPosition():I
- getName():java.lang.String
- getPriority():I
- isBeforeRun():Z
- isCanBeHidden():Z
- isCommandLine():Z
- isEditor():Z
- isHeader():Z
- isInitiallyVisible(java.lang.Object):Z
- isRemovable():Z
- isSelected():Z
- isTag():Z
- p:logChange(Z,com.intellij.openapi.actionSystem.AnActionEvent):V
- p:resetEditorFrom(java.lang.Object):V
- setActionDescription(java.lang.String):V
- setActionHint(java.lang.String):V
- setCanBeHidden(Z):V
- setConfigId(java.lang.String):V
- setEditorGetter(java.util.function.Function):V
- setHint(java.lang.String):V
- setRemovable(Z):V
- setSelected(Z):V
- setValidation(java.util.function.Function):V
- toggle(Z,com.intellij.openapi.actionSystem.AnActionEvent):V
- p:validate(java.lang.Object):V
c:com.intellij.execution.ui.TagButton
- com.intellij.ui.components.JBLayeredPane
- com.intellij.openapi.Disposable
- sf:COMPONENT_VALIDATOR_TAG_PROVIDER:java.util.function.Function
- pf:myButton:javax.swing.JButton
- pf:myCloseButton:com.intellij.ui.InplaceButton
- psf:ourInset:I
- <init>(java.lang.String,java.util.function.Consumer):V
- addFocusListener(java.awt.event.FocusListener):V
- addMouseListener(java.awt.event.MouseListener):V
- dispose():V
- getText():java.lang.String
- hasFocus():Z
- p:layoutButtons():V
- removeFocusListener(java.awt.event.FocusListener):V
- removeMouseListener(java.awt.event.MouseListener):V
- setToolTip(java.lang.String):V
- p:updateButton(java.lang.String,javax.swing.Icon):V
c:com.intellij.execution.ui.VariantTagFragment
- com.intellij.execution.ui.SettingsEditorFragment
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.execution.ui.TagButton,java.util.function.Supplier,java.util.function.Function,java.util.function.BiConsumer,java.util.function.Predicate):V
- p:applyEditorTo(java.lang.Object):V
- s:createFragment(java.lang.String,java.lang.String,java.lang.String,java.util.function.Supplier,java.util.function.Function,java.util.function.BiConsumer,java.util.function.Predicate):com.intellij.execution.ui.VariantTagFragment
- getCustomActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- getSelectedVariant():java.lang.Object
- p:getVariantDescription(java.lang.Object):java.lang.String
- p:getVariantHint(java.lang.Object):java.lang.String
- p:getVariantName(java.lang.Object):java.lang.String
- p:getVariants():java.lang.Object[]
- isTag():Z
- p:resetEditorFrom(java.lang.Object):V
- setSelectedVariant(java.lang.Object):V
- setToggleListener(java.util.function.Consumer):V
- setVariantDescriptionProvider(java.util.function.Function):V
- setVariantHintProvider(java.util.function.Function):V
- setVariantNameProvider(java.util.function.Function):V
- toggle(Z,com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.execution.ui.utils.AbstractFragmentBuilder
- <init>():V
- a:build():com.intellij.execution.ui.SettingsEditorFragment
- f:getActionDescription():java.lang.String
- f:getActionHint():java.lang.String
- f:getGroup():java.lang.String
- f:setActionDescription(java.lang.String):V
- f:setActionHint(java.lang.String):V
- f:setGroup(java.lang.String):V
@:com.intellij.execution.ui.utils.FragmentsDsl
- java.lang.annotation.Annotation
f:com.intellij.execution.util.ExecutionErrorDialog
- s:show(com.intellij.execution.ExecutionException,java.lang.String,com.intellij.openapi.project.Project):V
com.intellij.featureStatistics.ApplicabilityFilter
- a:getPrefix():java.lang.String
- a:isApplicable(java.lang.String,com.intellij.openapi.project.Project):Z
f:com.intellij.featureStatistics.FeatureDescriptor
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,I,I,java.util.Set,I,I,com.intellij.featureStatistics.ProductivityFeaturesProvider):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,I,I,java.util.Set,I,com.intellij.featureStatistics.ProductivityFeaturesProvider):V
- adjustUsageInfo(I,J):V
- getActionEvents():java.util.List
- getDaysBeforeFirstShowUp():I
- getDaysBetweenSuccessiveShowUps():I
- getDependencyFeatures():java.lang.String[]
- getDisplayName():java.lang.String
- getGroupId():java.lang.String
- getId():java.lang.String
- getIntentionEvents():java.util.List
- getLastTimeShown():J
- getLastTimeUsed():J
- getProvider():java.lang.Class
- getShownCount():I
- getTipId():java.lang.String
- getUsageCount():I
- getUtilityScore():I
- isNeedToBeShownInGuide():Z
- isUnused():Z
f:com.intellij.featureStatistics.FeatureStatisticsBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
c:com.intellij.featureStatistics.FeatureStatisticsBundleEP
- com.intellij.serviceContainer.LazyExtensionInstance
- com.intellij.openapi.extensions.PluginAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- qualifiedName:java.lang.String
- <init>():V
- p:getImplementationClassName():java.lang.String
- getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
c:com.intellij.featureStatistics.GroupDescriptor
- psf:ID_ATTR:java.lang.String
- <init>(java.lang.String,java.lang.String):V
- getDisplayName():java.lang.String
- getId():java.lang.String
- readExternal(org.jdom.Element):V
f:com.intellij.featureStatistics.ProductivityFeatureNames
- sf:CODEASSISTS_HIGHLIGHT_RETURN:java.lang.String
- sf:CODEASSISTS_OVERRIDE_IMPLEMENT:java.lang.String
- sf:REFACTORING_INTRODUCE_VARIABLE:java.lang.String
a:com.intellij.featureStatistics.ProductivityFeaturesProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- getApplicabilityFilters():com.intellij.featureStatistics.ApplicabilityFilter[]
- getFeatureDescriptors():com.intellij.featureStatistics.FeatureDescriptor[]
- getGroupDescriptors():com.intellij.featureStatistics.GroupDescriptor[]
- getXmlFilesUrls():java.util.Collection
a:com.intellij.featureStatistics.ProductivityFeaturesRegistry
- <init>():V
- a:findFeatureByAction(java.lang.String):com.intellij.featureStatistics.FeatureDescriptor
- a:findFeatureByIntention(java.lang.Class):com.intellij.featureStatistics.FeatureDescriptor
- a:getFeatureDescriptor(java.lang.String):com.intellij.featureStatistics.FeatureDescriptor
- a:getFeatureIds():java.util.Set
- a:getGroupDescriptor(java.lang.String):com.intellij.featureStatistics.GroupDescriptor
- s:getInstance():com.intellij.featureStatistics.ProductivityFeaturesRegistry
- a:getMatchingFilters(java.lang.String):com.intellij.featureStatistics.ApplicabilityFilter[]
a:com.intellij.ide.ActionsTopHitProvider
- com.intellij.ide.SearchTopHitProvider
- <init>():V
- consumeTopHits(java.lang.String,java.util.function.Consumer,com.intellij.openapi.project.Project):V
- pa:getActionsMatrix():java.lang.String[][]
f:com.intellij.ide.ActivityTracker
- com.intellij.openapi.util.SimpleModificationTracker
- getCount():I
- s:getInstance():com.intellij.ide.ActivityTracker
- inc():V
com.intellij.ide.AutoScrollToSourceOptionProvider
- a:isAutoScrollMode():Z
- a:setAutoScrollMode(Z):V
f:com.intellij.ide.BrowserUtil
- s:browse(com.intellij.openapi.vfs.VirtualFile):V
- s:browse(java.io.File):V
- s:browse(java.lang.String):V
- s:browse(java.lang.String,com.intellij.openapi.project.Project):V
- s:browse(java.net.URI):V
- s:browse(java.net.URL):V
- s:browse(java.nio.file.Path):V
- s:getDocURL(java.lang.String):java.lang.String
- s:getOpenBrowserCommand(java.lang.String,java.lang.String,java.util.List,Z):java.util.List
- s:getURL(java.lang.String):java.net.URL
- s:isAbsoluteURL(java.lang.String):Z
- s:launchBrowser(java.lang.String):V
- s:open(java.lang.String):V
a:com.intellij.ide.CommonActionsManager
- <init>():V
- a:createCollapseAllAction(com.intellij.ide.TreeExpander,javax.swing.JComponent):com.intellij.openapi.actionSystem.AnAction
- a:createCollapseAllHeaderAction(com.intellij.ide.TreeExpander,javax.swing.JComponent):com.intellij.openapi.actionSystem.AnAction
- a:createCollapseAllHeaderAction(javax.swing.JTree):com.intellij.openapi.actionSystem.AnAction
- a:createExpandAllAction(com.intellij.ide.TreeExpander,javax.swing.JComponent):com.intellij.openapi.actionSystem.AnAction
- a:createExpandAllHeaderAction(com.intellij.ide.TreeExpander,javax.swing.JComponent):com.intellij.openapi.actionSystem.AnAction
- a:createExpandAllHeaderAction(javax.swing.JTree):com.intellij.openapi.actionSystem.AnAction
- a:createExportToTextFileAction(com.intellij.ide.ExporterToTextFile):com.intellij.openapi.actionSystem.AnAction
- a:createHelpAction(java.lang.String):com.intellij.openapi.actionSystem.AnAction
- a:createNextOccurenceAction(com.intellij.ide.OccurenceNavigator):com.intellij.openapi.actionSystem.AnAction
- a:createPrevOccurenceAction(com.intellij.ide.OccurenceNavigator):com.intellij.openapi.actionSystem.AnAction
- s:getInstance():com.intellij.ide.CommonActionsManager
- a:installAutoscrollToSourceHandler(com.intellij.openapi.project.Project,javax.swing.JTree,com.intellij.ide.AutoScrollToSourceOptionProvider):com.intellij.openapi.actionSystem.AnAction
com.intellij.ide.CompositeSelectInTarget
- com.intellij.ide.SelectInTarget
- a:getSubTargets(com.intellij.ide.SelectInContext):java.util.Collection
com.intellij.ide.CopyPasteSupport
- a:getCopyProvider():com.intellij.ide.CopyProvider
- a:getCutProvider():com.intellij.ide.CutProvider
- a:getPasteProvider():com.intellij.ide.PasteProvider
com.intellij.ide.CopyProvider
- com.intellij.openapi.actionSystem.ActionUpdateThreadAware
- a:isCopyEnabled(com.intellij.openapi.actionSystem.DataContext):Z
- a:isCopyVisible(com.intellij.openapi.actionSystem.DataContext):Z
- a:performCopy(com.intellij.openapi.actionSystem.DataContext):V
com.intellij.ide.CutProvider
- com.intellij.openapi.actionSystem.ActionUpdateThreadAware
- com.intellij.openapi.project.PossiblyDumbAware
- a:isCutEnabled(com.intellij.openapi.actionSystem.DataContext):Z
- a:isCutVisible(com.intellij.openapi.actionSystem.DataContext):Z
- a:performCut(com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.ide.DefaultTreeExpander
- com.intellij.ide.TreeExpander
- <init>(javax.swing.JTree):V
- <init>(kotlin.jvm.functions.Function0):V
- canCollapse():Z
- p:canCollapse(javax.swing.JTree):Z
- canExpand():Z
- p:canExpand(javax.swing.JTree):Z
- collapseAll():V
- p:collapseAll(javax.swing.JTree,I):V
- p:collapseAll(javax.swing.JTree,Z,I):V
- expandAll():V
- p:expandAll(javax.swing.JTree):V
- p:isEnabled(javax.swing.JTree):Z
- p:isShowing(javax.swing.JTree):Z
- p:showSelectionCentered(javax.swing.JTree):V
com.intellij.ide.DeleteProvider
- com.intellij.openapi.actionSystem.ActionUpdateThreadAware
- a:canDeleteElement(com.intellij.openapi.actionSystem.DataContext):Z
- a:deleteElement(com.intellij.openapi.actionSystem.DataContext):V
com.intellij.ide.ExporterToTextFile
- addSettingsChangedListener(javax.swing.event.ChangeListener):V
- a:canExport():Z
- exportedTo(java.lang.String):V
- a:getDefaultFilePath():java.lang.String
- a:getReportText():java.lang.String
- getSettingsEditor():javax.swing.JComponent
- removeSettingsChangedListener(javax.swing.event.ChangeListener):V
com.intellij.ide.FileEditorProvider
- a:openFileEditor():com.intellij.openapi.fileEditor.FileEditor
c:com.intellij.ide.FileEditorSelectInContext
- com.intellij.ide.SmartSelectInContext
- <init>(com.intellij.openapi.fileEditor.FileEditor,com.intellij.psi.PsiFile):V
- getEditor():com.intellij.openapi.editor.Editor
- getElementAtCaret(Z):com.intellij.psi.PsiElement
- getSelectorInFile():java.lang.Object
c:com.intellij.ide.FileSelectInContext
- com.intellij.ide.SelectInContext
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.ide.FileEditorProvider):V
- <init>(com.intellij.psi.PsiDirectory):V
- getFileEditorProvider():com.intellij.ide.FileEditorProvider
- getProject():com.intellij.openapi.project.Project
- getSelectorInFile():java.lang.Object
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
com.intellij.ide.FrameStateListener
- sf:TOPIC:com.intellij.util.messages.Topic
- onFrameActivated():V
- onFrameActivated(com.intellij.openapi.wm.IdeFrame):V
- onFrameDeactivated():V
- onFrameDeactivated(com.intellij.openapi.wm.IdeFrame):V
c:com.intellij.ide.HelpTooltip
- p:myMouseListener:java.awt.event.MouseAdapter
- <init>():V
- pf:createMouseListeners():V
- s:disableTooltip(java.awt.Component):V
- s:dispose(java.awt.Component):V
- s:enableTooltip(java.awt.Component):V
- equals(java.lang.Object):Z
- s:getShortcutAsHtml(java.lang.String):java.lang.String
- s:getTooltipFor(javax.swing.JComponent):com.intellij.ide.HelpTooltip
- s:hide(java.awt.Component):V
- p:hidePopup(Z):V
- installOn(javax.swing.JComponent):V
- setBrowserLink(java.lang.String,java.net.URL):com.intellij.ide.HelpTooltip
- setDescription(java.lang.String):com.intellij.ide.HelpTooltip
- setHideDelay(I):com.intellij.ide.HelpTooltip
- setInitialDelay(I):com.intellij.ide.HelpTooltip
- setLink(java.lang.String,java.lang.Runnable):com.intellij.ide.HelpTooltip
- setLink(java.lang.String,java.lang.Runnable,Z):com.intellij.ide.HelpTooltip
- setLocation(com.intellij.ide.HelpTooltip$Alignment):com.intellij.ide.HelpTooltip
- s:setMasterPopup(java.awt.Component,com.intellij.openapi.ui.popup.JBPopup):V
- s:setMasterPopupOpenCondition(java.awt.Component,java.util.function.BooleanSupplier):V
- setNeverHideOnTimeout(Z):com.intellij.ide.HelpTooltip
- setShortcut(com.intellij.openapi.actionSystem.Shortcut):com.intellij.ide.HelpTooltip
- setShortcut(java.lang.String):com.intellij.ide.HelpTooltip
- setTitle(java.lang.String):com.intellij.ide.HelpTooltip
- setTitle(java.util.function.Supplier):com.intellij.ide.HelpTooltip
e:com.intellij.ide.HelpTooltip$Alignment
- java.lang.Enum
- sf:BOTTOM:com.intellij.ide.HelpTooltip$Alignment
- sf:CURSOR:com.intellij.ide.HelpTooltip$Alignment
- sf:HELP_BUTTON:com.intellij.ide.HelpTooltip$Alignment
- sf:LEFT:com.intellij.ide.HelpTooltip$Alignment
- sf:RIGHT:com.intellij.ide.HelpTooltip$Alignment
- a:getPointFor(java.awt.Component,java.awt.Dimension,java.awt.Point):java.awt.Point
- s:valueOf(java.lang.String):com.intellij.ide.HelpTooltip$Alignment
- s:values():com.intellij.ide.HelpTooltip$Alignment[]
f:com.intellij.ide.IdeBundle
- sf:BUNDLE:java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
f:com.intellij.ide.NewProjectWizardLegacy
- <init>():V
- s:isAvailable():Z
com.intellij.ide.OccurenceNavigator
- com.intellij.openapi.actionSystem.ActionUpdateThreadAware
- sf:EMPTY:com.intellij.ide.OccurenceNavigator
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- a:getNextOccurenceActionName():java.lang.String
- a:getPreviousOccurenceActionName():java.lang.String
- a:goNextOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- a:goPreviousOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- a:hasNextOccurence():Z
- a:hasPreviousOccurence():Z
c:com.intellij.ide.OccurenceNavigator$OccurenceInfo
- <init>(com.intellij.pom.Navigatable,I,I):V
- getNavigateable():com.intellij.pom.Navigatable
- getOccurenceNumber():I
- getOccurencesCount():I
- s:position(I,I):com.intellij.ide.OccurenceNavigator$OccurenceInfo
a:com.intellij.ide.OccurenceNavigatorSupport
- com.intellij.ide.OccurenceNavigator
- <init>(javax.swing.JTree):V
- pa:createDescriptorForNode(javax.swing.tree.DefaultMutableTreeNode):com.intellij.pom.Navigatable
- findNextNodeAfter(javax.swing.JTree,javax.swing.tree.TreeNode,Z):javax.swing.tree.DefaultMutableTreeNode
- goNextOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- goPreviousOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- hasNextOccurence():Z
- hasPreviousOccurence():Z
- p:isOccurrenceNode(javax.swing.tree.DefaultMutableTreeNode):Z
com.intellij.ide.PasteProvider
- com.intellij.openapi.actionSystem.ActionUpdateThreadAware
- a:isPasteEnabled(com.intellij.openapi.actionSystem.DataContext):Z
- a:isPastePossible(com.intellij.openapi.actionSystem.DataContext):Z
- a:performPaste(com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.ide.Prefs
- <init>():V
- s:flush(java.lang.String):V
- s:get(java.lang.String,java.lang.String):java.lang.String
- s:getBoolean(java.lang.String,Z):Z
- s:getByteArray(java.lang.String,B[]):B[]
- s:getDouble(java.lang.String,D):D
- s:getFloat(java.lang.String,F):F
- s:getInt(java.lang.String,I):I
- s:getLong(java.lang.String,J):J
- s:put(java.lang.String,java.lang.String):V
- s:putBoolean(java.lang.String,Z):V
- s:putByteArray(java.lang.String,B[]):V
- s:putDouble(java.lang.String,D):V
- s:putFloat(java.lang.String,F):V
- s:putInt(java.lang.String,I):V
- s:putLong(java.lang.String,J):V
- s:remove(java.lang.String):V
a:com.intellij.ide.RemoteDesktopService
- <init>():V
- s:getInstance():com.intellij.ide.RemoteDesktopService
- a:isRemoteDesktopConnected():Z
- s:isRemoteSession():Z
a:com.intellij.ide.SaveAndSyncHandler
- sf:Companion:com.intellij.ide.SaveAndSyncHandler$Companion
- <init>():V
- a:blockSaveOnFrameDeactivation():V
- a:blockSyncOnFrameActivation():V
- disableAutoSave():com.intellij.openapi.application.AccessToken
- pf:getExternalChangesModificationTracker():com.intellij.openapi.util.SimpleModificationTracker
- sf:getInstance():com.intellij.ide.SaveAndSyncHandler
- a:refreshOpenFiles():V
- f:scheduleProjectSave(com.intellij.openapi.project.Project):V
- f:scheduleProjectSave(com.intellij.openapi.project.Project,Z):V
- bs:scheduleProjectSave$default(com.intellij.ide.SaveAndSyncHandler,com.intellij.openapi.project.Project,Z,I,java.lang.Object):V
- a:scheduleRefresh():V
- f:scheduleSave(com.intellij.ide.SaveAndSyncHandler$SaveTask):V
- a:unblockSaveOnFrameDeactivation():V
- a:unblockSyncOnFrameActivation():V
f:com.intellij.ide.SaveAndSyncHandler$Companion
- f:getInstance():com.intellij.ide.SaveAndSyncHandler
f:com.intellij.ide.SaveAndSyncHandler$SaveTask
- <init>():V
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,Z):V
- b:<init>(com.intellij.openapi.project.Project,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():com.intellij.openapi.project.Project
- f:component2():Z
- f:copy(com.intellij.openapi.project.Project,Z):com.intellij.ide.SaveAndSyncHandler$SaveTask
- bs:copy$default(com.intellij.ide.SaveAndSyncHandler$SaveTask,com.intellij.openapi.project.Project,Z,I,java.lang.Object):com.intellij.ide.SaveAndSyncHandler$SaveTask
- equals(java.lang.Object):Z
- f:getForceSavingAllSettings():Z
- f:getProject():com.intellij.openapi.project.Project
- hashCode():I
com.intellij.ide.SearchTopHitProvider
- sf:Companion:com.intellij.ide.SearchTopHitProvider$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:consumeTopHits(java.lang.String,java.util.function.Consumer,com.intellij.openapi.project.Project):V
- s:getTopHitAccelerator():java.lang.String
f:com.intellij.ide.SearchTopHitProvider$Companion
- f:getTopHitAccelerator():java.lang.String
com.intellij.ide.SelectInContext
- sf:DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- a:getFileEditorProvider():com.intellij.ide.FileEditorProvider
- a:getProject():com.intellij.openapi.project.Project
- a:getSelectorInFile():java.lang.Object
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- selectIn(com.intellij.ide.SelectInTarget,Z):Z
f:com.intellij.ide.SelectInManager
- sf:PROJECT:java.lang.String
- <init>(com.intellij.openapi.project.Project):V
- s:findSelectInTarget(java.lang.String,com.intellij.openapi.project.Project):com.intellij.ide.SelectInTarget
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.SelectInManager
- s:getProject():java.lang.String
- getTargetList():java.util.List
- getTargets():com.intellij.ide.SelectInTarget[]
f:com.intellij.ide.SelectInManager$SelectInTargetComparator
- java.util.Comparator
- sf:INSTANCE:java.util.Comparator
- <init>():V
- compare(com.intellij.ide.SelectInTarget,com.intellij.ide.SelectInTarget):I
com.intellij.ide.SelectInTarget
- com.intellij.openapi.project.PossiblyDumbAware
- a:canSelect(com.intellij.ide.SelectInContext):Z
- getMinorViewId():java.lang.String
- getToolWindowId():java.lang.String
- getWeight():F
- isAvailable(com.intellij.openapi.project.Project):Z
- a:selectIn(com.intellij.ide.SelectInContext,Z):V
- a:toString():java.lang.String
c:com.intellij.ide.SmartSelectInContext
- com.intellij.ide.FileSelectInContext
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.SmartPsiElementPointer):V
- <init>(com.intellij.psi.PsiFile,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,com.intellij.ide.FileEditorProvider):V
- getPsiFile():com.intellij.psi.PsiFile
- getSelectorInFile():java.lang.Object
a:com.intellij.ide.TextCopyProvider
- com.intellij.ide.CopyProvider
- <init>():V
- getLinesSeparator():java.lang.String
- a:getTextLinesToCopy():java.util.Collection
- isCopyEnabled(com.intellij.openapi.actionSystem.DataContext):Z
- isCopyVisible(com.intellij.openapi.actionSystem.DataContext):Z
- performCopy(com.intellij.openapi.actionSystem.DataContext):V
@:com.intellij.ide.TooltipTitle
- java.lang.annotation.Annotation
com.intellij.ide.TreeExpander
- a:canCollapse():Z
- a:canExpand():Z
- a:collapseAll():V
- expandAll():V
- isCollapseAllVisible():Z
- isExpandAllEnabled():Z
- isExpandAllVisible():Z
f:com.intellij.ide.TypeNameEP
- com.intellij.openapi.extensions.PluginAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- className:java.lang.String
- name:java.lang.String
- resourceBundle:java.lang.String
- resourceKey:java.lang.String
- <init>():V
- getTypeName():com.intellij.openapi.util.NullableLazyValue
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
a:com.intellij.ide.actions.ActionsCollector
- <init>():V
- s:getInstance():com.intellij.ide.actions.ActionsCollector
- a:onActionConfiguredByActionId(com.intellij.openapi.actionSystem.AnAction,java.lang.String):V
- a:record(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.lang.Language):V
- a:record(java.lang.String,java.awt.event.InputEvent,java.lang.Class):V
- a:recordUpdate(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,J):V
a:com.intellij.ide.actions.CloseTabToolbarAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
f:com.intellij.ide.actions.CollapseAllAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- <init>(kotlin.jvm.functions.Function1):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.CollapseAllToolbarAction
- com.intellij.ide.actions.TreeCollapseAllActionBase
- <init>(com.intellij.ide.TreeExpander):V
- <init>(com.intellij.ide.TreeExpander,java.lang.String):V
- p:getExpander(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.TreeExpander
- setTreeExpander(com.intellij.ide.TreeExpander):V
c:com.intellij.ide.actions.ContextHelpAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- <init>(java.lang.String):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getHelpId(com.intellij.openapi.actionSystem.DataContext):java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.ExpandAllAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- <init>(kotlin.jvm.functions.Function1):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.ExpandAllToolbarAction
- com.intellij.ide.actions.TreeExpandAllActionBase
- <init>(com.intellij.ide.TreeExpander):V
- <init>(com.intellij.ide.TreeExpander,java.lang.String):V
- p:getExpander(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.TreeExpander
- setTreeExpander(com.intellij.ide.TreeExpander):V
a:com.intellij.ide.actions.QuickSwitchSchemeAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- p:myActionPlace:java.lang.String
- p:<init>():V
- p:<init>(Z):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:fillActions(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DefaultActionGroup,com.intellij.openapi.actionSystem.DataContext):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getAidMethod():com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid
- p:getPopupTitle(com.intellij.openapi.actionSystem.AnActionEvent):java.lang.String
- p:isEnabled():Z
- p:preselectAction():com.intellij.openapi.util.Condition
- p:showPopup(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.ui.popup.ListPopup):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.TreeCollapseAllActionBase
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:getExpander(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.TreeExpander
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.TreeExpandAllActionBase
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:getExpander(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.TreeExpander
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.exclusion.ExcludeTreeNodeAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.ide.actions.exclusion.ExclusionHandler
- sf:EXCLUSION_HANDLER:com.intellij.openapi.actionSystem.DataKey
- a:excludeNode(java.lang.Object):V
- a:includeNode(java.lang.Object):V
- a:isActionEnabled(Z):Z
- a:isNodeExcluded(java.lang.Object):Z
- a:isNodeExclusionAvailable(java.lang.Object):Z
- a:onDone(Z):V
e:com.intellij.ide.browsers.BrowserFamily
- java.lang.Enum
- com.intellij.openapi.util.Iconable
- sf:CHROME:com.intellij.ide.browsers.BrowserFamily
- sf:EXPLORER:com.intellij.ide.browsers.BrowserFamily
- sf:FIREFOX:com.intellij.ide.browsers.BrowserFamily
- sf:SAFARI:com.intellij.ide.browsers.BrowserFamily
- createBrowserSpecificSettings():com.intellij.ide.browsers.BrowserSpecificSettings
- getExecutionPath():java.lang.String
- getIcon():javax.swing.Icon
- getIcon(I):javax.swing.Icon
- getName():java.lang.String
- s:valueOf(java.lang.String):com.intellij.ide.browsers.BrowserFamily
- s:values():com.intellij.ide.browsers.BrowserFamily[]
a:com.intellij.ide.browsers.BrowserLauncher
- sf:Companion:com.intellij.ide.browsers.BrowserLauncher$Companion
- <init>():V
- a:browse(java.io.File):V
- f:browse(java.lang.String,com.intellij.ide.browsers.WebBrowser):V
- a:browse(java.lang.String,com.intellij.ide.browsers.WebBrowser,com.intellij.openapi.project.Project):V
- f:browse(java.net.URI):V
- a:browse(java.nio.file.Path):V
- bs:browse$default(com.intellij.ide.browsers.BrowserLauncher,java.lang.String,com.intellij.ide.browsers.WebBrowser,com.intellij.openapi.project.Project,I,java.lang.Object):V
- sf:getInstance():com.intellij.ide.browsers.BrowserLauncher
- a:open(java.lang.String):V
f:com.intellij.ide.browsers.BrowserLauncher$Companion
- f:getInstance():com.intellij.ide.browsers.BrowserLauncher
a:com.intellij.ide.browsers.BrowserSpecificSettings
- java.lang.Cloneable
- <init>():V
- clone():com.intellij.ide.browsers.BrowserSpecificSettings
- a:createConfigurable():com.intellij.openapi.options.Configurable
- getAdditionalParameters():java.util.List
- getEnvironmentVariables():java.util.Map
a:com.intellij.ide.browsers.OpenInBrowserRequest
- <init>(com.intellij.psi.PsiFile):V
- <init>(com.intellij.psi.PsiFile,Z):V
- b:<init>(com.intellij.psi.PsiFile,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- a:getElement():com.intellij.psi.PsiElement
- getFile():com.intellij.psi.PsiFile
- f:getProject():com.intellij.openapi.project.Project
- f:getReloadMode():com.intellij.ide.browsers.ReloadMode
- f:getResult():java.util.Collection
- f:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- f:isAppendAccessToken():Z
- f:isForceFileUrlIfNoUrlProvider():Z
- f:isPhysicalFile():Z
- f:setAppendAccessToken(Z):V
- f:setReloadMode(com.intellij.ide.browsers.ReloadMode):V
- f:setResult(java.util.Collection):V
f:com.intellij.ide.browsers.OpenInBrowserRequestKt
- sf:createOpenInBrowserRequest(com.intellij.psi.PsiElement,Z):com.intellij.ide.browsers.OpenInBrowserRequest
- bs:createOpenInBrowserRequest$default(com.intellij.psi.PsiElement,Z,I,java.lang.Object):com.intellij.ide.browsers.OpenInBrowserRequest
e:com.intellij.ide.browsers.ReloadMode
- java.lang.Enum
- sf:DISABLED:com.intellij.ide.browsers.ReloadMode
- sf:RELOAD_ON_CHANGE:com.intellij.ide.browsers.ReloadMode
- sf:RELOAD_ON_SAVE:com.intellij.ide.browsers.ReloadMode
- s:getEntries():kotlin.enums.EnumEntries
- f:getTitle():java.lang.String
- s:valueOf(java.lang.String):com.intellij.ide.browsers.ReloadMode
- s:values():com.intellij.ide.browsers.ReloadMode[]
a:com.intellij.ide.browsers.UrlOpener
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:openUrl(com.intellij.ide.browsers.WebBrowser,java.lang.String,com.intellij.openapi.project.Project):Z
a:com.intellij.ide.browsers.WebBrowser
- <init>():V
- addOpenUrlParameter(java.util.List,java.lang.String):V
- a:getBrowserNotFoundMessage():java.lang.String
- a:getFamily():com.intellij.ide.browsers.BrowserFamily
- a:getIcon():javax.swing.Icon
- a:getId():java.util.UUID
- a:getName():java.lang.String
- a:getPath():java.lang.String
- a:getSpecificSettings():com.intellij.ide.browsers.BrowserSpecificSettings
a:com.intellij.ide.browsers.WebBrowserService
- <init>():V
- s:getInstance():com.intellij.ide.browsers.WebBrowserService
- a:getUrlsToOpen(com.intellij.ide.browsers.OpenInBrowserRequest,Z):java.util.Collection
- s:isHtmlOrXmlLanguage(com.intellij.lang.Language):Z
a:com.intellij.ide.browsers.WebBrowserUrlProvider
- com.intellij.openapi.project.PossiblyDumbAware
- <init>():V
- canHandleElement(com.intellij.ide.browsers.OpenInBrowserRequest):Z
- p:getUrl(com.intellij.ide.browsers.OpenInBrowserRequest,com.intellij.openapi.vfs.VirtualFile):com.intellij.util.Url
- getUrls(com.intellij.ide.browsers.OpenInBrowserRequest):java.util.Collection
f:com.intellij.ide.browsers.WebBrowserUrlProvider$BrowserException
- java.lang.Exception
- <init>(java.lang.String):V
f:com.intellij.ide.browsers.chrome.ChromeSettings
- com.intellij.ide.browsers.BrowserSpecificSettings
- sf:DISABLE_FIRST_RUN_EXPERIENCE_ARG:java.lang.String
- sf:NO_DEFAULT_BROWSER_CHECK_ARG:java.lang.String
- sf:NO_FIRST_RUN_ARG:java.lang.String
- sf:USER_DATA_DIR_ARG:java.lang.String
- <init>():V
- clone():com.intellij.ide.browsers.chrome.ChromeSettings
- createConfigurable():com.intellij.ide.browsers.chrome.ChromeSettingsConfigurable
- equals(java.lang.Object):Z
- getAdditionalParameters():java.util.List
- getCommandLineOptions():java.lang.String
- getEnvironmentVariables():java.util.Map
- getUserDataDirectoryPath():java.lang.String
- isUseCustomProfile():Z
- setCommandLineOptions(java.lang.String):V
- setEnvironmentVariables(java.util.Map):V
- setUseCustomProfile(Z):V
- setUserDataDirectoryPath(java.lang.String):V
c:com.intellij.ide.browsers.chrome.ChromeSettingsConfigurable
- com.intellij.openapi.options.Configurable
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.ide.browsers.chrome.ChromeSettings):V
- apply():V
- createComponent():javax.swing.JComponent
- enableRecommendedOptions():V
- s:getDefaultUserDataPath():java.lang.String
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- isModified():Z
- reset():V
c:com.intellij.ide.browsers.firefox.FirefoxProfile
- <init>(java.lang.String,java.lang.String,Z,Z):V
- getName():java.lang.String
- getPath():java.lang.String
- getProfileDirectory(java.io.File):java.io.File
- isDefault():Z
- isRelative():Z
f:com.intellij.ide.browsers.firefox.FirefoxSettings
- com.intellij.ide.browsers.BrowserSpecificSettings
- <init>():V
- <init>(java.lang.String,java.lang.String):V
- createConfigurable():com.intellij.openapi.options.Configurable
- equals(java.lang.Object):Z
- getAdditionalParameters():java.util.List
- getProfile():java.lang.String
- getProfilesIniFile():java.io.File
- getProfilesIniPath():java.lang.String
- setProfile(java.lang.String):V
- setProfilesIniPath(java.lang.String):V
c:com.intellij.ide.browsers.firefox.FirefoxSettingsConfigurable
- com.intellij.openapi.options.Configurable
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.ide.browsers.firefox.FirefoxSettings):V
- apply():V
- createComponent():javax.swing.JComponent
- s:createProfilesIniChooserDescriptor():com.intellij.openapi.fileChooser.FileChooserDescriptor
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- isModified():Z
- reset():V
f:com.intellij.ide.browsers.firefox.FirefoxUtil
- sf:PROFILES_INI_FILE:java.lang.String
- s:computeProfiles(java.io.File):java.util.List
- s:findProfileByNameOrDefault(java.lang.String,java.util.List):com.intellij.ide.browsers.firefox.FirefoxProfile
- s:getDefaultProfile(java.util.List):com.intellij.ide.browsers.firefox.FirefoxProfile
- s:getDefaultProfileIniPath():java.io.File
- s:getFirefoxExtensionsDir(com.intellij.ide.browsers.firefox.FirefoxSettings):java.io.File
com.intellij.ide.dnd.AdvancedDnDSource
- com.intellij.ide.dnd.DnDAware
- com.intellij.ide.dnd.DnDSource
- com.intellij.openapi.Disposable
f:com.intellij.ide.dnd.DnDActionInfo
- <init>(com.intellij.ide.dnd.DnDAction,java.awt.Point):V
- getAction():com.intellij.ide.dnd.DnDAction
- getPoint():java.awt.Point
- isCopy():Z
- isLink():Z
- isMove():Z
com.intellij.ide.dnd.DnDAware
- a:dropSelectionButUnderPoint(java.awt.Point):V
- a:getComponent():javax.swing.JComponent
- a:isOverSelection(java.awt.Point):Z
- a:processMouseEvent(java.awt.event.MouseEvent):V
c:com.intellij.ide.dnd.DnDImage
- <init>(java.awt.Image):V
- <init>(java.awt.Image,java.awt.Point):V
- getImage():java.awt.Image
- getPoint():java.awt.Point
a:com.intellij.ide.dnd.DnDManager
- <init>():V
- s:getInstance():com.intellij.ide.dnd.DnDManager
- a:getLastDropHandler():java.awt.Component
- a:registerSource(com.intellij.ide.dnd.AdvancedDnDSource):V
- a:registerSource(com.intellij.ide.dnd.DnDSource,javax.swing.JComponent):V
- a:registerSource(com.intellij.ide.dnd.DnDSource,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- a:registerTarget(com.intellij.ide.dnd.DnDTarget,javax.swing.JComponent):V
- a:registerTarget(com.intellij.ide.dnd.DnDTarget,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- a:unregisterSource(com.intellij.ide.dnd.AdvancedDnDSource):V
- a:unregisterSource(com.intellij.ide.dnd.DnDSource,javax.swing.JComponent):V
- a:unregisterTarget(com.intellij.ide.dnd.DnDTarget,javax.swing.JComponent):V
com.intellij.ide.dnd.DnDNativeTarget
- com.intellij.ide.dnd.DnDTarget
- sf:EVENT_KEY:java.lang.String
- sf:LOG:com.intellij.openapi.diagnostic.Logger
c:com.intellij.ide.dnd.DnDNativeTarget$EventInfo
- getFlavors():java.awt.datatransfer.DataFlavor[]
- getTextForFlavor(java.awt.datatransfer.DataFlavor):java.lang.String
- getTransferable():java.awt.datatransfer.Transferable
f:com.intellij.ide.dnd.DnDSupport
- com.intellij.ide.dnd.DnDDropHandler$WithResult
- com.intellij.ide.dnd.DnDSource
- com.intellij.ide.dnd.DnDTarget
- com.intellij.openapi.Disposable
- canStartDragging(com.intellij.ide.dnd.DnDAction,java.awt.Point):Z
- cleanUpOnLeave():V
- s:createBuilder(javax.swing.JComponent):com.intellij.ide.dnd.DnDSupportBuilder
- createDraggedImage(com.intellij.ide.dnd.DnDAction,java.awt.Point,com.intellij.ide.dnd.DnDDragStartBean):com.intellij.openapi.util.Pair
- dispose():V
- dragDropEnd(com.intellij.ide.dnd.DnDEvent,java.awt.dnd.DragSourceDropEvent):V
- dropActionChanged(I):V
- startDragging(com.intellij.ide.dnd.DnDAction,java.awt.Point):com.intellij.ide.dnd.DnDDragStartBean
- tryDrop(com.intellij.ide.dnd.DnDEvent):Z
- update(com.intellij.ide.dnd.DnDEvent):Z
com.intellij.ide.dnd.DnDSupportBuilder
- a:disableAsSource():com.intellij.ide.dnd.DnDSupportBuilder
- a:disableAsTarget():com.intellij.ide.dnd.DnDSupportBuilder
- a:enableAsNativeTarget():com.intellij.ide.dnd.DnDSupportBuilder
- a:install():V
- a:setBeanProvider(com.intellij.util.Function):com.intellij.ide.dnd.DnDSupportBuilder
- a:setCleanUpOnLeaveCallback(java.lang.Runnable):com.intellij.ide.dnd.DnDSupportBuilder
- a:setDisposableParent(com.intellij.openapi.Disposable):com.intellij.ide.dnd.DnDSupportBuilder
- a:setDropActionHandler(com.intellij.ide.dnd.DnDDropActionHandler):com.intellij.ide.dnd.DnDSupportBuilder
- a:setDropEndedCallback(java.lang.Runnable):com.intellij.ide.dnd.DnDSupportBuilder
- a:setDropHandler(com.intellij.ide.dnd.DnDDropHandler):com.intellij.ide.dnd.DnDSupportBuilder
- a:setDropHandlerWithResult(com.intellij.ide.dnd.DnDDropHandler$WithResult):com.intellij.ide.dnd.DnDSupportBuilder
- a:setImageProvider(com.intellij.util.Function):com.intellij.ide.dnd.DnDSupportBuilder
- a:setTargetChecker(com.intellij.ide.dnd.DnDTargetChecker):com.intellij.ide.dnd.DnDSupportBuilder
f:com.intellij.ide.dnd.SmoothAutoScroller
- <init>():V
com.intellij.ide.environment.EnvironmentKey
- sf:Companion:com.intellij.ide.environment.EnvironmentKey$Companion
- s:create(java.lang.String):com.intellij.ide.environment.EnvironmentKey
- a:getId():java.lang.String
f:com.intellij.ide.environment.EnvironmentKey$Companion
- f:create(java.lang.String):com.intellij.ide.environment.EnvironmentKey
f:com.intellij.ide.environment.EnvironmentKeyKt
- sf:getDescription(com.intellij.ide.environment.EnvironmentKey):java.lang.String
e:com.intellij.ide.errorTreeView.ErrorTreeElementKind
- java.lang.Enum
- sf:ERROR:com.intellij.ide.errorTreeView.ErrorTreeElementKind
- sf:GENERIC:com.intellij.ide.errorTreeView.ErrorTreeElementKind
- sf:INFO:com.intellij.ide.errorTreeView.ErrorTreeElementKind
- sf:NOTE:com.intellij.ide.errorTreeView.ErrorTreeElementKind
- sf:WARNING:com.intellij.ide.errorTreeView.ErrorTreeElementKind
- s:convertMessageFromCompilerErrorType(I):com.intellij.ide.errorTreeView.ErrorTreeElementKind
- getIcon():javax.swing.Icon
- getPresentableText():java.lang.String
- s:valueOf(java.lang.String):com.intellij.ide.errorTreeView.ErrorTreeElementKind
- s:values():com.intellij.ide.errorTreeView.ErrorTreeElementKind[]
c:com.intellij.ide.errorTreeView.HotfixData
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.util.Consumer):V
- equals(java.lang.Object):Z
- getErrorText():java.lang.String
- getFix():com.intellij.util.Consumer
- getFixComment():java.lang.String
- getId():java.lang.String
- hashCode():I
c:com.intellij.ide.errorTreeView.HotfixGate
- <init>(java.lang.String,com.intellij.util.ui.MutableErrorTreeView):V
- getGroupName():java.lang.String
- getView():com.intellij.util.ui.MutableErrorTreeView
c:com.intellij.ide.errorTreeView.SimpleErrorData
- <init>(com.intellij.ide.errorTreeView.ErrorTreeElementKind,java.lang.String[],com.intellij.openapi.vfs.VirtualFile):V
- getKind():com.intellij.ide.errorTreeView.ErrorTreeElementKind
- getMessages():java.lang.String[]
- getVf():com.intellij.openapi.vfs.VirtualFile
a:com.intellij.ide.plugins.PluginReplacement
- com.intellij.openapi.extensions.PluginAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(java.lang.String):V
- f:getNewPluginId():java.lang.String
- f:getOldPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- getReplacementMessage(com.intellij.ide.plugins.IdeaPluginDescriptor,com.intellij.ide.plugins.IdeaPluginDescriptor):java.lang.String
- f:setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
a:com.intellij.ide.ui.LafManager
- <init>():V
- a:addLafManagerListener(com.intellij.ide.ui.LafManagerListener):V
- a:getAutodetect():Z
- a:getAutodetectSupported():Z
- a:getCurrentLookAndFeel():javax.swing.UIManager$LookAndFeelInfo
- a:getCurrentUIThemeLookAndFeel():com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo
- a:getDefaultDarkLaf():com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo
- a:getDefaultLightLaf():com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo
- a:getInstalledLookAndFeels():javax.swing.UIManager$LookAndFeelInfo[]
- s:getInstance():com.intellij.ide.ui.LafManager
- a:removeLafManagerListener(com.intellij.ide.ui.LafManagerListener):V
- a:repaintUI():V
- a:resetPreferredEditorColorScheme():V
- a:setAutodetect(Z):V
- a:setCurrentLookAndFeel(com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo,Z):V
- setCurrentLookAndFeel(javax.swing.UIManager$LookAndFeelInfo):V
- setCurrentUIThemeLookAndFeel(com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo):V
- a:setPreferredDarkLaf(com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo):V
- a:setPreferredLightLaf(com.intellij.ide.ui.laf.UIThemeLookAndFeelInfo):V
- a:updateUI():V
com.intellij.ide.ui.LafManagerListener
- java.util.EventListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:lookAndFeelChanged(com.intellij.ide.ui.LafManager):V
com.intellij.ide.ui.ProductIcons
- s:getInstance():com.intellij.ide.ui.ProductIcons
- a:getProductIcon():javax.swing.Icon
- a:getProjectIcon():javax.swing.Icon
- a:getProjectNodeIcon():javax.swing.Icon
a:com.intellij.ide.ui.PublicFieldBasedOptionDescription
- com.intellij.ide.ui.search.BooleanOptionDescription
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- p:fireUpdated():V
- a:getInstance():java.lang.Object
- isOptionEnabled():Z
- setOptionState(Z):V
c:com.intellij.ide.ui.PublicMethodBasedOptionDescription
- com.intellij.ide.ui.search.BooleanOptionDescription
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.function.Supplier):V
- p:fireUpdated():V
- getInstance():java.lang.Object
- isOptionEnabled():Z
- setOptionState(Z):V
c:com.intellij.ide.ui.SplitterProportionsDataImpl
- com.intellij.openapi.ui.SplitterProportionsData
- <init>():V
- equals(java.lang.Object):Z
- externalizeFromDimensionService(java.lang.String):V
- externalizeToDimensionService(java.lang.String):V
- getProportions():java.util.List
- readExternal(org.jdom.Element):V
- restoreSplitterProportions(java.awt.Component):V
- saveSplitterProportions(java.awt.Component):V
- setProportions(java.util.List):V
- writeExternal(org.jdom.Element):V
f:com.intellij.ide.ui.SplitterProportionsDataImpl$SplitterProportionsConverter
- com.intellij.util.xmlb.Converter
- <init>():V
- fromString(java.lang.String):com.intellij.ide.ui.SplitterProportionsDataImpl
- toString(com.intellij.ide.ui.SplitterProportionsDataImpl):java.lang.String
e:com.intellij.ide.ui.TargetUIType
- java.lang.Enum
- sf:CLASSIC:com.intellij.ide.ui.TargetUIType
- sf:NEW:com.intellij.ide.ui.TargetUIType
- sf:UNSPECIFIED:com.intellij.ide.ui.TargetUIType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ide.ui.TargetUIType
- s:values():com.intellij.ide.ui.TargetUIType[]
com.intellij.ide.ui.VirtualFileAppearanceListener
- sf:TOPIC:com.intellij.util.messages.Topic
- s:fireVirtualFileAppearanceChanged(com.intellij.openapi.vfs.VirtualFile):V
- a:virtualFileAppearanceChanged(com.intellij.openapi.vfs.VirtualFile):V
a:com.intellij.ide.ui.search.ActionFromOptionDescriptorProvider
- sf:EP:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:provide(com.intellij.ide.ui.search.OptionDescription):com.intellij.openapi.actionSystem.AnAction
a:com.intellij.ide.ui.search.BooleanOptionDescription
- com.intellij.ide.ui.search.OptionDescription
- <init>(java.lang.String,java.lang.String):V
- a:isOptionEnabled():Z
- a:setOptionState(Z):V
com.intellij.ide.ui.search.BooleanOptionDescription$RequiresRebuild
c:com.intellij.ide.ui.search.OptionDescription
- java.lang.Comparable
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- compareTo(com.intellij.ide.ui.search.OptionDescription):I
- equals(java.lang.Object):Z
- f:getConfigurableId():java.lang.String
- f:getGroupName():java.lang.String
- f:getHit():java.lang.String
- getOption():java.lang.String
- f:getPath():java.lang.String
- getValue():java.lang.String
- hasExternalEditor():Z
- hashCode():I
- invokeInternalEditor():V
a:com.intellij.ide.ui.search.SearchableOptionContributor
- <init>():V
- contribute(com.intellij.ide.ui.search.SearchableOptionProcessor,kotlin.coroutines.Continuation):java.lang.Object
- processOptions(com.intellij.ide.ui.search.SearchableOptionProcessor):V
a:com.intellij.ide.ui.search.SearchableOptionProcessor
- <init>():V
- a:addOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,Z):V
a:com.intellij.ide.ui.search.SearchableOptionsRegistrar
- sf:SEARCHABLE_OPTIONS_XML_NAME:java.lang.String
- sf:SETTINGS_GROUP_SEPARATOR:java.lang.String
- <init>():V
- addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- a:getInnerPaths(com.intellij.openapi.options.SearchableConfigurable,java.lang.String):java.util.Set
- s:getInstance():com.intellij.ide.ui.search.SearchableOptionsRegistrar
- a:getProcessedWords(java.lang.String):java.util.Set
- a:getProcessedWordsWithoutStemming(java.lang.String):java.util.Set
- a:isStopWord(java.lang.String):Z
- a:replaceSynonyms(java.util.Set,com.intellij.openapi.options.SearchableConfigurable):java.util.Set
com.intellij.ide.ui.search.SearchableOptionsRegistrar$AdditionalLocationProvider
- a:getAdditionalLocation():java.nio.file.Path
c:com.intellij.ide.util.BrowseFilesListener
- java.awt.event.ActionListener
- sf:SINGLE_DIRECTORY_DESCRIPTOR:com.intellij.openapi.fileChooser.FileChooserDescriptor
- sf:SINGLE_FILE_DESCRIPTOR:com.intellij.openapi.fileChooser.FileChooserDescriptor
- pf:myChooserDescriptor:com.intellij.openapi.fileChooser.FileChooserDescriptor
- <init>(javax.swing.JTextField,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- <init>(javax.swing.JTextField,java.lang.String,java.lang.String,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- actionPerformed(java.awt.event.ActionEvent):V
- p:doSetText(java.lang.String):V
- p:getFileToSelect():com.intellij.openapi.vfs.VirtualFile
c:com.intellij.ide.util.DelegatingProgressIndicator
- com.intellij.openapi.progress.StandardProgressIndicator
- com.intellij.openapi.progress.WrappedProgressIndicator
- <init>():V
- <init>(com.intellij.openapi.progress.ProgressIndicator):V
- f:cancel():V
- f:checkCanceled():V
- finishNonCancelableSection():V
- pf:getDelegate():com.intellij.openapi.progress.ProgressIndicator
- getFraction():D
- getModalityState():com.intellij.openapi.application.ModalityState
- getOriginalProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
- getText():java.lang.String
- getText2():java.lang.String
- f:isCanceled():Z
- isIndeterminate():Z
- isModal():Z
- isPopupWasShown():Z
- isRunning():Z
- isShowing():Z
- popState():V
- pushState():V
- setFraction(D):V
- setIndeterminate(Z):V
- setModalityProgress(com.intellij.openapi.progress.ProgressIndicator):V
- setText(java.lang.String):V
- setText2(java.lang.String):V
- start():V
- startNonCancelableSection():V
- stop():V
f:com.intellij.ide.util.PropertiesComponentExKt
- sf:propComponentProperty(com.intellij.openapi.project.Project,I):kotlin.properties.ReadWriteProperty
- sf:propComponentProperty(com.intellij.openapi.project.Project,java.lang.String):kotlin.properties.ReadWriteProperty
- sf:propComponentProperty(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):kotlin.properties.ReadWriteProperty
- sf:propComponentProperty(com.intellij.openapi.project.Project,java.lang.String,Z):kotlin.properties.ReadWriteProperty
- sf:propComponentProperty(com.intellij.openapi.project.Project,Z):kotlin.properties.ReadWriteProperty
- bs:propComponentProperty$default(com.intellij.openapi.project.Project,I,I,java.lang.Object):kotlin.properties.ReadWriteProperty
- bs:propComponentProperty$default(com.intellij.openapi.project.Project,java.lang.String,I,java.lang.Object):kotlin.properties.ReadWriteProperty
- bs:propComponentProperty$default(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,I,java.lang.Object):kotlin.properties.ReadWriteProperty
- bs:propComponentProperty$default(com.intellij.openapi.project.Project,java.lang.String,Z,I,java.lang.Object):kotlin.properties.ReadWriteProperty
- bs:propComponentProperty$default(com.intellij.openapi.project.Project,Z,I,java.lang.Object):kotlin.properties.ReadWriteProperty
c:com.intellij.ide.util.treeView.NodeRenderer
- com.intellij.ui.ColoredTreeCellRenderer
- <init>():V
- customizeCellRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- p:fixIconIfNeeded(javax.swing.Icon,Z,Z):javax.swing.Icon
- p:getPresentation(java.lang.Object):com.intellij.navigation.ItemPresentation
- p:getSimpleTextAttributes(com.intellij.ide.projectView.PresentationData,java.awt.Color,java.lang.Object):com.intellij.ui.SimpleTextAttributes
- s:getSimpleTextAttributes(com.intellij.navigation.ItemPresentation):com.intellij.ui.SimpleTextAttributes
f:com.intellij.ide.util.treeView.TreeBuilderUtil
- <init>():V
- s:storePaths(javax.swing.JTree,javax.swing.tree.DefaultMutableTreeNode,java.util.List,java.util.List,Z):V
f:com.intellij.ide.util.treeView.TreeState
- com.intellij.openapi.util.JDOMExternalizable
- sf:CALLBACK:com.intellij.openapi.util.Key
- applyTo(javax.swing.JTree):V
- applyTo(javax.swing.JTree,java.lang.Object):V
- s:createFrom(org.jdom.Element):com.intellij.ide.util.treeView.TreeState
- s:createOn(javax.swing.JTree):com.intellij.ide.util.treeView.TreeState
- s:createOn(javax.swing.JTree,java.util.List,java.util.List):com.intellij.ide.util.treeView.TreeState
- s:createOn(javax.swing.JTree,javax.swing.tree.DefaultMutableTreeNode):com.intellij.ide.util.treeView.TreeState
- s:createOn(javax.swing.JTree,javax.swing.tree.TreePath):com.intellij.ide.util.treeView.TreeState
- s:createOn(javax.swing.JTree,Z,Z):com.intellij.ide.util.treeView.TreeState
- s:defaultPathElementId(java.lang.Object):java.lang.String
- s:defaultPathElementType(java.lang.Object):java.lang.String
- s:expand(javax.swing.JTree,java.util.function.Consumer):V
- isEmpty():Z
- readExternal(org.jdom.Element):V
- setScrollToSelection(Z):V
- writeExternal(org.jdom.Element):V
com.intellij.ide.warmup.WarmupConfigurator
- sf:Companion:com.intellij.ide.warmup.WarmupConfigurator$Companion
- a:getConfiguratorPresentableName():java.lang.String
- prepareEnvironment(java.nio.file.Path,kotlin.coroutines.Continuation):java.lang.Object
- bs:prepareEnvironment$suspendImpl(com.intellij.ide.warmup.WarmupConfigurator,java.nio.file.Path,kotlin.coroutines.Continuation):java.lang.Object
- a:runWarmup(com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.ide.warmup.WarmupConfigurator$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
com.intellij.ide.warmup.WarmupStatus
- sf:Companion:com.intellij.ide.warmup.WarmupStatus$Companion
f:com.intellij.ide.warmup.WarmupStatus$Companion
- f:currentStatus():com.intellij.ide.warmup.WarmupStatus
- f:isWarmupInProgress():Z
f:com.intellij.ide.warmup.WarmupStatus$Finished
- com.intellij.ide.warmup.WarmupStatus
- <init>(I):V
- f:component1():I
- f:copy(I):com.intellij.ide.warmup.WarmupStatus$Finished
- bs:copy$default(com.intellij.ide.warmup.WarmupStatus$Finished,I,I,java.lang.Object):com.intellij.ide.warmup.WarmupStatus$Finished
- equals(java.lang.Object):Z
- f:getIndexedFileCount():I
- hashCode():I
f:com.intellij.ide.warmup.WarmupStatus$InProgress
- com.intellij.ide.warmup.WarmupStatus
- sf:INSTANCE:com.intellij.ide.warmup.WarmupStatus$InProgress
f:com.intellij.ide.warmup.WarmupStatus$NotStarted
- com.intellij.ide.warmup.WarmupStatus
- sf:INSTANCE:com.intellij.ide.warmup.WarmupStatus$NotStarted
a:com.intellij.ide.wizard.AbstractWizard
- com.intellij.openapi.ui.DialogWrapper
- sf:KEY:com.intellij.openapi.util.Key
- p:myContentPanel:javax.swing.JPanel
- p:myCurrentStep:I
- p:myIcon:com.intellij.ide.wizard.AbstractWizard$TallImageComponent
- pf:mySteps:java.util.ArrayList
- <init>(java.lang.String,com.intellij.openapi.project.Project):V
- <init>(java.lang.String,java.awt.Component):V
- addStep(com.intellij.ide.wizard.Step):V
- addStep(com.intellij.ide.wizard.Step,I):V
- p:addStepComponent(java.awt.Component):java.lang.String
- p:canFinish():Z
- p:canGoNext():Z
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createSouthPanel():javax.swing.JComponent
- p:doHelpAction():V
- p:doNextAction():V
- p:doPreviousAction():V
- getCancelButton():javax.swing.JButton
- getContentComponent():javax.swing.JPanel
- getCurrentStep():I
- getCurrentStepComponent():java.awt.Component
- getCurrentStepObject():com.intellij.ide.wizard.Step
- p:getHelpButton():javax.swing.JButton
- pa:getHelpID():java.lang.String
- p:getNextButton():javax.swing.JButton
- pf:getNextStep():I
- p:getNextStep(I):I
- p:getNextStepObject():com.intellij.ide.wizard.Step
- p:getNumberOfSteps():I
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getPreviousButton():javax.swing.JButton
- pf:getPreviousStep():I
- p:getPreviousStep(I):I
- getStepCount():I
- p:helpAction():V
- p:init():V
- p:isFirstStep():Z
- p:isLastStep():Z
- s:isNewWizard():Z
- proceedToNextStep():V
- p:updateButtons():V
- updateButtons(Z,Z,Z):V
- p:updateStep():V
- pf:updateStep(com.intellij.ui.JBCardLayout$SwipeDirection):V
- updateWizardButtons():V
- p:useDialogWrapperSouthPanel():Z
f:com.intellij.ide.wizard.AbstractWizard$TallImageComponent
- com.intellij.ui.components.panels.OpaquePanel
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- paintIcon(java.awt.Graphics):V
- setIcon(javax.swing.Icon):V
f:com.intellij.idea.ActionsBundle
- sf:IDEA_ACTIONS_BUNDLE:java.lang.String
- s:actionDescription(java.lang.String):java.lang.String
- s:actionText(java.lang.String):java.lang.String
- s:groupText(java.lang.String):java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
c:com.intellij.internal.inspector.PropertyBean
- f:changed:Z
- f:propertyName:java.lang.String
- f:propertyValue:java.lang.Object
- <init>(java.lang.String,java.lang.Object):V
- <init>(java.lang.String,java.lang.Object,Z):V
com.intellij.internal.inspector.UiInspectorContextProvider
- a:getUiInspectorContext():java.util.List
com.intellij.internal.inspector.UiInspectorCustomComponentChildProvider
- com.intellij.internal.inspector.UiInspectorContextProvider
- a:getChildren():java.util.List
- a:getHighlightingBounds():java.awt.Rectangle
- a:getObjectForProperties():java.lang.Object
- a:getPropertiesMethodList():java.util.List
- a:getTreeName():java.lang.String
com.intellij.internal.inspector.UiInspectorCustomComponentProvider
- sf:Companion:com.intellij.internal.inspector.UiInspectorCustomComponentProvider$Companion
- sf:KEY:java.lang.String
- a:getChildren():java.util.List
f:com.intellij.internal.inspector.UiInspectorCustomComponentProvider$Companion
- sf:KEY:java.lang.String
com.intellij.internal.inspector.UiInspectorListRendererContextProvider
- a:getUiInspectorContext(javax.swing.JList,java.lang.Object,I):java.util.List
com.intellij.internal.inspector.UiInspectorPreciseContextProvider
- a:getUiInspectorContext(java.awt.event.MouseEvent):com.intellij.internal.inspector.UiInspectorPreciseContextProvider$UiInspectorInfo
f:com.intellij.internal.inspector.UiInspectorPreciseContextProvider$UiInspectorInfo
- java.lang.Record
- <init>(java.lang.String,java.util.List,java.awt.Component):V
- component():java.awt.Component
- f:equals(java.lang.Object):Z
- f:hashCode():I
- name():java.lang.String
- values():java.util.List
com.intellij.internal.inspector.UiInspectorTableRendererContextProvider
- a:getUiInspectorContext(javax.swing.JTable,java.lang.Object,I,I):java.util.List
com.intellij.internal.inspector.UiInspectorTreeRendererContextProvider
- a:getUiInspectorContext(javax.swing.JTree,java.lang.Object,I):java.util.List
c:com.intellij.internal.performanceTests.DummyProjectInitializationDiagnosticService
- com.intellij.internal.performanceTests.ProjectInitializationDiagnosticService
- <init>():V
- isProjectInitializationAndIndexingFinished():Z
- registerBeginningOfInitializationActivity(java.util.function.Supplier):com.intellij.internal.performanceTests.ProjectInitializationDiagnosticService$ActivityTracker
com.intellij.internal.performanceTests.ProjectInitializationDiagnosticService
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.internal.performanceTests.ProjectInitializationDiagnosticService
- a:isProjectInitializationAndIndexingFinished():Z
- a:registerBeginningOfInitializationActivity(java.util.function.Supplier):com.intellij.internal.performanceTests.ProjectInitializationDiagnosticService$ActivityTracker
- s:registerTracker(com.intellij.openapi.project.Project,java.lang.String):com.intellij.internal.performanceTests.ProjectInitializationDiagnosticService$ActivityTracker
com.intellij.internal.performanceTests.ProjectInitializationDiagnosticService$ActivityTracker
- a:activityFinished():V
f:com.intellij.lang.StdLanguages
- sf:JAVA:com.intellij.lang.Language
- sf:XML:com.intellij.lang.Language
c:com.intellij.mock.MockProgressIndicator
- com.intellij.openapi.progress.EmptyProgressIndicator
- <init>():V
c:com.intellij.navigation.DelegatingItemPresentation
- com.intellij.navigation.ColoredItemPresentation
- <init>(com.intellij.navigation.ItemPresentation):V
- getIcon(Z):javax.swing.Icon
- getLocationString():java.lang.String
- getPresentableText():java.lang.String
- getTextAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- withIcon(javax.swing.Icon):com.intellij.navigation.DelegatingItemPresentation
- withLocationString(java.lang.String):com.intellij.navigation.DelegatingItemPresentation
- withPresentableText(java.lang.String):com.intellij.navigation.DelegatingItemPresentation
c:com.intellij.notification.NotificationsAdapter
- com.intellij.notification.Notifications
- <init>():V
com.intellij.openapi.GitRepositoryInitializer
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- s:getInstance():com.intellij.openapi.GitRepositoryInitializer
- initRepository(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
- a:initRepository(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z):V
f:com.intellij.openapi.MnemonicHelper
- com.intellij.ui.ComponentTreeWatcher
- sf:DISABLE_MNEMONIC_PROCESSING:com.intellij.openapi.util.Key
- sf:MNEMONIC_CHECKER:com.intellij.openapi.util.Key
- checkForDuplicateMnemonics(I,java.lang.String):V
- checkForDuplicateMnemonics(javax.swing.AbstractButton):V
- checkForDuplicateMnemonics(javax.swing.JLabel):V
- s:getFocusAcceleratorKeyMask():I
- s:hasMnemonic(java.awt.Component,I):Z
- s:init(java.awt.Component):V
- s:registerMnemonicAction(javax.swing.JComponent,I):V
a:com.intellij.openapi.actionSystem.AbbreviationManager
- <init>():V
- a:findActions(java.lang.String):java.util.List
- a:getAbbreviations():java.util.Set
- a:getAbbreviations(java.lang.String):java.util.Set
- s:getInstance():com.intellij.openapi.actionSystem.AbbreviationManager
- a:register(java.lang.String,java.lang.String):V
- a:remove(java.lang.String,java.lang.String):V
- a:removeAllAbbreviations(java.lang.String):V
com.intellij.openapi.actionSystem.ActionButtonComponent
- sf:NORMAL:I
- sf:POPPED:I
- sf:PUSHED:I
- sf:SELECTED:I
- a:getHeight():I
- a:getInsets():java.awt.Insets
- a:getPopState():I
- a:getWidth():I
@:com.intellij.openapi.actionSystem.ActionButtonComponent$ButtonState
- java.lang.annotation.Annotation
c:com.intellij.openapi.actionSystem.ActionGroupWrapper
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.actionSystem.ActionWithDelegate
- com.intellij.openapi.actionSystem.PerformWithDocumentsCommitted
- <init>(com.intellij.openapi.actionSystem.ActionGroup):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- beforeActionPerformedUpdate(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- f:getDelegate():com.intellij.openapi.actionSystem.ActionGroup
- isDumbAware():Z
- isInInjectedContext():Z
- isPerformWithDocumentsCommitted():Z
- postProcessVisibleChildren(com.intellij.openapi.actionSystem.AnActionEvent,java.util.List):java.util.List
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.actionSystem.ActionInGroup
- getGroup():com.intellij.openapi.actionSystem.ActionGroup
- setAsSecondary(Z):com.intellij.openapi.actionSystem.ActionInGroup
com.intellij.openapi.actionSystem.ActionPromoter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- promote(java.util.List,com.intellij.openapi.actionSystem.DataContext):java.util.List
- suppress(java.util.List,com.intellij.openapi.actionSystem.DataContext):java.util.List
f:com.intellij.openapi.actionSystem.ActionStub
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ActionStubBase
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.extensions.PluginDescriptor,java.lang.String,com.intellij.openapi.project.ProjectType,java.util.function.Supplier):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- addSynonym(java.util.function.Supplier):V
- s:copyTemplatePresentation(com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.Presentation):V
- getClassName():java.lang.String
- getIconPath():java.lang.String
- getId():java.lang.String
- getPlugin():com.intellij.openapi.extensions.PluginDescriptor
- getProjectType():com.intellij.openapi.project.ProjectType
com.intellij.openapi.actionSystem.ActionStubBase
- a:getIconPath():java.lang.String
- a:getId():java.lang.String
- a:getPlugin():com.intellij.openapi.extensions.PluginDescriptor
- getPluginId():com.intellij.openapi.extensions.PluginId
e:com.intellij.openapi.actionSystem.ActionToolbarPosition
- java.lang.Enum
- sf:BOTTOM:com.intellij.openapi.actionSystem.ActionToolbarPosition
- sf:LEFT:com.intellij.openapi.actionSystem.ActionToolbarPosition
- sf:RIGHT:com.intellij.openapi.actionSystem.ActionToolbarPosition
- sf:TOP:com.intellij.openapi.actionSystem.ActionToolbarPosition
- s:valueOf(java.lang.String):com.intellij.openapi.actionSystem.ActionToolbarPosition
- s:values():com.intellij.openapi.actionSystem.ActionToolbarPosition[]
f:com.intellij.openapi.actionSystem.ActionWrapperUtil
- s:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnAction):V
- s:getActionUpdateThread(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getChildren(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.ActionGroup):com.intellij.openapi.actionSystem.AnAction[]
- s:update(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnAction):V
com.intellij.openapi.actionSystem.AlwaysVisibleActionGroup
com.intellij.openapi.actionSystem.AnActionHolder
- a:getAction():com.intellij.openapi.actionSystem.AnAction
c:com.intellij.openapi.actionSystem.AnActionWrapper
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ActionWithDelegate
- com.intellij.openapi.actionSystem.PerformWithDocumentsCommitted
- <init>(com.intellij.openapi.actionSystem.AnAction):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- beforeActionPerformedUpdate(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getDelegate():com.intellij.openapi.actionSystem.AnAction
- isDumbAware():Z
- isInInjectedContext():Z
- isPerformWithDocumentsCommitted():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.actionSystem.Anchor
- sf:AFTER:com.intellij.openapi.actionSystem.Anchor
- sf:BEFORE:com.intellij.openapi.actionSystem.Anchor
- sf:FIRST:com.intellij.openapi.actionSystem.Anchor
- sf:LAST:com.intellij.openapi.actionSystem.Anchor
com.intellij.openapi.actionSystem.CheckedActionGroup
f:com.intellij.openapi.actionSystem.CommonShortcuts
- sf:ALT_ENTER:com.intellij.openapi.actionSystem.ShortcutSet
- sf:CTRL_ENTER:com.intellij.openapi.actionSystem.ShortcutSet
- sf:DELETE:com.intellij.openapi.actionSystem.ShortcutSet
- sf:DOUBLE_CLICK_1:com.intellij.openapi.actionSystem.ShortcutSet
- sf:ENTER:com.intellij.openapi.actionSystem.ShortcutSet
- sf:ESCAPE:com.intellij.openapi.actionSystem.ShortcutSet
- sf:INSERT:com.intellij.openapi.actionSystem.ShortcutSet
- sf:MOVE_DOWN:com.intellij.openapi.actionSystem.ShortcutSet
- sf:MOVE_UP:com.intellij.openapi.actionSystem.ShortcutSet
- s:getCloseActiveWindow():com.intellij.openapi.actionSystem.ShortcutSet
- s:getContextHelp():com.intellij.openapi.actionSystem.ShortcutSet
- s:getCopy():com.intellij.openapi.actionSystem.ShortcutSet
- s:getCtrlEnter():com.intellij.openapi.actionSystem.ShortcutSet
- s:getDelete():com.intellij.openapi.actionSystem.ShortcutSet
- s:getDiff():com.intellij.openapi.actionSystem.ShortcutSet
- s:getDuplicate():com.intellij.openapi.actionSystem.ShortcutSet
- s:getEditSource():com.intellij.openapi.actionSystem.ShortcutSet
- s:getFind():com.intellij.openapi.actionSystem.ShortcutSet
- s:getInsert():com.intellij.openapi.actionSystem.ShortcutSet
- s:getInsertKeystroke():javax.swing.KeyStroke
- s:getMove():com.intellij.openapi.actionSystem.ShortcutSet
- s:getMoveDown():com.intellij.openapi.actionSystem.ShortcutSet
- s:getMoveEnd():com.intellij.openapi.actionSystem.ShortcutSet
- s:getMoveHome():com.intellij.openapi.actionSystem.ShortcutSet
- s:getMovePageDown():com.intellij.openapi.actionSystem.ShortcutSet
- s:getMovePageUp():com.intellij.openapi.actionSystem.ShortcutSet
- s:getMoveUp():com.intellij.openapi.actionSystem.ShortcutSet
- s:getNew():com.intellij.openapi.actionSystem.ShortcutSet
- s:getNewForDialogs():com.intellij.openapi.actionSystem.ShortcutSet
- s:getPaste():com.intellij.openapi.actionSystem.ShortcutSet
- s:getRecentFiles():com.intellij.openapi.actionSystem.ShortcutSet
- s:getRename():com.intellij.openapi.actionSystem.ShortcutSet
- s:getRerun():com.intellij.openapi.actionSystem.ShortcutSet
- s:getViewSource():com.intellij.openapi.actionSystem.ShortcutSet
com.intellij.openapi.actionSystem.CompactActionGroup
f:com.intellij.openapi.actionSystem.CompositeShortcutSet
- com.intellij.openapi.actionSystem.ShortcutSet
- <init>(com.intellij.openapi.actionSystem.ShortcutSet[]):V
- getShortcuts():com.intellij.openapi.actionSystem.Shortcut[]
- hasShortcuts():Z
f:com.intellij.openapi.actionSystem.Constraints
- java.lang.Cloneable
- sf:FIRST:com.intellij.openapi.actionSystem.Constraints
- sf:LAST:com.intellij.openapi.actionSystem.Constraints
- myAnchor:com.intellij.openapi.actionSystem.Anchor
- myRelativeToActionId:java.lang.String
- <init>(com.intellij.openapi.actionSystem.Anchor,java.lang.String):V
- clone():java.lang.Object
com.intellij.openapi.actionSystem.DataConstants
- sf:PROJECT:java.lang.String
- sf:VIRTUAL_FILE:java.lang.String
c:com.intellij.openapi.actionSystem.DecorativeElement
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.actionSystem.ActionGroup
- <init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,java.util.List):V
- <init>(java.lang.String,Z):V
- <init>(java.util.List):V
- <init>(java.util.function.Supplier,java.util.List):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- <init>(java.util.function.Supplier,Z):V
- <init>(com.intellij.openapi.actionSystem.AnAction[]):V
- f:add(com.intellij.openapi.actionSystem.AnAction):V
- f:add(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.ActionManager):V
- f:add(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Constraints):V
- f:add(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Constraints,com.intellij.openapi.actionSystem.ActionManager):V
- f:addAction(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.ActionInGroup
- f:addAction(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Constraints):com.intellij.openapi.actionSystem.ActionInGroup
- f:addAction(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.Constraints,com.intellij.openapi.actionSystem.ActionManager):com.intellij.openapi.actionSystem.ActionInGroup
- f:addAll(com.intellij.openapi.actionSystem.ActionGroup):V
- f:addAll(java.util.Collection):V
- f:addAll(java.util.Collection,com.intellij.openapi.actionSystem.ActionManager):V
- f:addAll(com.intellij.openapi.actionSystem.AnAction[]):V
- f:addSeparator():V
- addSeparator(java.lang.String):V
- containsAction(com.intellij.openapi.actionSystem.AnAction):Z
- copyFromGroup(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- s:createFlatGroup(java.util.function.Supplier):com.intellij.openapi.actionSystem.DefaultActionGroup
- s:createPopupGroup(java.util.function.Supplier):com.intellij.openapi.actionSystem.DefaultActionGroup
- s:createPopupGroupWithEmptyText():com.intellij.openapi.actionSystem.DefaultActionGroup
- f:getChildActionsOrStubs():com.intellij.openapi.actionSystem.AnAction[]
- f:getChildren(com.intellij.openapi.actionSystem.ActionManager):com.intellij.openapi.actionSystem.AnAction[]
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- f:getChildren(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.actionSystem.ActionManager):com.intellij.openapi.actionSystem.AnAction[]
- f:getChildrenCount():I
- getConstraints(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.Constraints
- getModificationStamp():I
- f:remove(com.intellij.openapi.actionSystem.AnAction):V
- f:remove(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.ActionManager):V
- f:remove(com.intellij.openapi.actionSystem.AnAction,java.lang.String):V
- f:removeAll():V
- replaceAction(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnAction):Z
c:com.intellij.openapi.actionSystem.DefaultCompactActionGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- <init>():V
- <init>(java.lang.String,Z):V
- <init>(com.intellij.openapi.actionSystem.AnAction[]):V
f:com.intellij.openapi.actionSystem.EmptyAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- <init>(Z):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:createEmptyAction(java.lang.String,javax.swing.Icon,Z):com.intellij.openapi.actionSystem.AnAction
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:registerWithShortcutSet(java.lang.String,com.intellij.openapi.actionSystem.ShortcutSet,javax.swing.JComponent):com.intellij.openapi.actionSystem.AnAction
- s:setupAction(com.intellij.openapi.actionSystem.AnAction,java.lang.String,javax.swing.JComponent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:wrap(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.AnAction
c:com.intellij.openapi.actionSystem.EmptyAction$MyDelegatingAction
- com.intellij.openapi.actionSystem.AnActionWrapper
- <init>(com.intellij.openapi.actionSystem.AnAction):V
f:com.intellij.openapi.actionSystem.EmptyActionGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.openapi.actionSystem.KeyboardGestureAction
e:com.intellij.openapi.actionSystem.KeyboardGestureAction$ModifierType
- java.lang.Enum
- sf:dblClick:com.intellij.openapi.actionSystem.KeyboardGestureAction$ModifierType
- sf:hold:com.intellij.openapi.actionSystem.KeyboardGestureAction$ModifierType
- s:valueOf(java.lang.String):com.intellij.openapi.actionSystem.KeyboardGestureAction$ModifierType
- s:values():com.intellij.openapi.actionSystem.KeyboardGestureAction$ModifierType[]
c:com.intellij.openapi.actionSystem.KeyboardModifierGestureShortcut
- com.intellij.openapi.actionSystem.Shortcut
- p:<init>(javax.swing.KeyStroke,com.intellij.openapi.actionSystem.KeyboardGestureAction$ModifierType):V
- equals(java.lang.Object):Z
- getStroke():javax.swing.KeyStroke
- getType():com.intellij.openapi.actionSystem.KeyboardGestureAction$ModifierType
- hashCode():I
- isKeyboard():Z
- s:newInstance(com.intellij.openapi.actionSystem.KeyboardGestureAction$ModifierType,javax.swing.KeyStroke):com.intellij.openapi.actionSystem.Shortcut
- startsWith(com.intellij.openapi.actionSystem.Shortcut):Z
c:com.intellij.openapi.actionSystem.KeyboardModifierGestureShortcut$DblClick
- com.intellij.openapi.actionSystem.KeyboardModifierGestureShortcut
- <init>(javax.swing.KeyStroke):V
f:com.intellij.openapi.actionSystem.KeyboardModifierGestureShortcut$Hold
- com.intellij.openapi.actionSystem.KeyboardModifierGestureShortcut
- <init>(javax.swing.KeyStroke):V
com.intellij.openapi.actionSystem.MacOtherAction
c:com.intellij.openapi.actionSystem.MouseShortcut
- com.intellij.openapi.actionSystem.Shortcut
- sf:BUTTON_WHEEL_DOWN:I
- sf:BUTTON_WHEEL_UP:I
- <init>(I,I,I):V
- equals(java.lang.Object):Z
- getButton():I
- s:getButton(java.awt.event.MouseEvent):I
- getClickCount():I
- getModifiers():I
- hashCode():I
- isKeyboard():Z
- startsWith(com.intellij.openapi.actionSystem.Shortcut):Z
com.intellij.openapi.actionSystem.PerformWithDocumentsCommitted
- s:commitDocumentsIfNeeded(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent):V
- isPerformWithDocumentsCommitted():Z
- s:isPerformWithDocumentsCommitted(com.intellij.openapi.actionSystem.AnAction):Z
c:com.intellij.openapi.actionSystem.PlatformDataKeys
- com.intellij.openapi.actionSystem.PlatformCoreDataKeys
- sf:CONTENT_MANAGER:com.intellij.openapi.actionSystem.DataKey
- sf:CONTEXT_MENU_POINT:com.intellij.openapi.actionSystem.DataKey
- sf:COPY_PROVIDER:com.intellij.openapi.actionSystem.DataKey
- sf:CUT_PROVIDER:com.intellij.openapi.actionSystem.DataKey
- sf:DELETE_ELEMENT_PROVIDER:com.intellij.openapi.actionSystem.DataKey
- sf:DOMINANT_HINT_AREA_RECTANGLE:com.intellij.openapi.actionSystem.DataKey
- sf:EXPORTER_TO_TEXT_FILE:com.intellij.openapi.actionSystem.DataKey
- sf:LAST_ACTIVE_FILE_EDITOR:com.intellij.openapi.actionSystem.DataKey
- sf:LAST_ACTIVE_TOOL_WINDOWS:com.intellij.openapi.actionSystem.DataKey
- sf:MODALITY_STATE:com.intellij.openapi.actionSystem.DataKey
- sf:NONEMPTY_CONTENT_MANAGER:com.intellij.openapi.actionSystem.DataKey
- sf:PASTE_PROVIDER:com.intellij.openapi.actionSystem.DataKey
- sf:PREDEFINED_TEXT:com.intellij.openapi.actionSystem.DataKey
- sf:SPEED_SEARCH_COMPONENT:com.intellij.openapi.actionSystem.DataKey
- sf:SPEED_SEARCH_LOCATOR:com.intellij.openapi.actionSystem.DataKey
- sf:SPEED_SEARCH_TEXT:com.intellij.openapi.actionSystem.DataKey
- sf:STATUS_BAR:com.intellij.openapi.actionSystem.DataKey
- sf:TOOL_WINDOW:com.intellij.openapi.actionSystem.DataKey
- sf:TREE_EXPANDER:com.intellij.openapi.actionSystem.DataKey
- sf:TREE_EXPANDER_HIDE_ACTIONS_IF_NO_EXPANDER:com.intellij.openapi.actionSystem.DataKey
- sf:UI_DISPOSABLE:com.intellij.openapi.actionSystem.DataKey
- <init>():V
com.intellij.openapi.actionSystem.PopupAction
c:com.intellij.openapi.actionSystem.PressureShortcut
- com.intellij.openapi.actionSystem.MouseShortcut
- <init>(D):V
- equals(java.lang.Object):Z
- getButton():I
- getClickCount():I
- getModifiers():I
- getStage():D
- hashCode():I
- startsWith(com.intellij.openapi.actionSystem.Shortcut):Z
f:com.intellij.openapi.actionSystem.Separator
- com.intellij.openapi.actionSystem.DecorativeElement
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.actionSystem.SeparatorAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- <init>(java.lang.String):V
- <init>(java.util.function.Supplier):V
- s:create():com.intellij.openapi.actionSystem.Separator
- s:create(java.lang.String):com.intellij.openapi.actionSystem.Separator
- equals(java.lang.Object):Z
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getInstance():com.intellij.openapi.actionSystem.Separator
- getText():java.lang.String
a:com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.Toggleable
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- <init>(java.util.function.Supplier,javax.swing.Icon):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- a:isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- a:setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.actionSystem.ToggleOptionAction
- com.intellij.openapi.actionSystem.ToggleAction
- <init>(com.intellij.openapi.actionSystem.ToggleOptionAction$Option):V
- <init>(com.intellij.openapi.actionSystem.ToggleOptionAction$Option,javax.swing.Icon):V
- <init>(java.util.function.Function):V
- <init>(java.util.function.Function,javax.swing.Icon):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- f:isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- f:setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.openapi.actionSystem.ToggleOptionAction$Option
- getDescription():java.lang.String
- getName():java.lang.String
- isAlwaysVisible():Z
- isEnabled():Z
- a:isSelected():Z
- a:setSelected(Z):V
com.intellij.openapi.actionSystem.Toggleable
- s:isSelected(com.intellij.openapi.actionSystem.Presentation):Z
- s:isSelected(javax.swing.JComponent):java.lang.Boolean
- s:setSelected(com.intellij.openapi.actionSystem.Presentation,Z):V
- s:setSelected(javax.swing.JComponent,java.lang.Boolean):V
a:com.intellij.openapi.actionSystem.ex.ActionManagerEx
- com.intellij.openapi.actionSystem.ActionManager
- sf:Companion:com.intellij.openapi.actionSystem.ex.ActionManagerEx$Companion
- <init>():V
- a:addActionPopupMenuListener(com.intellij.openapi.actionSystem.ex.ActionPopupMenuListener,com.intellij.openapi.Disposable):V
- a:createActionToolbar(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,Z,java.util.function.Function):com.intellij.openapi.actionSystem.ActionToolbar
- a:createActionToolbar(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,Z,Z):com.intellij.openapi.actionSystem.ActionToolbar
- a:createActionToolbar(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,Z,Z,Z):com.intellij.openapi.actionSystem.ActionToolbar
- f:fireAfterActionPerformed(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.AnActionEvent):V
- a:fireAfterEditorTyping(C,com.intellij.openapi.actionSystem.DataContext):V
- f:fireBeforeActionPerformed(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.AnActionEvent):V
- a:fireBeforeEditorTyping(C,com.intellij.openapi.actionSystem.DataContext):V
- sf:getInstanceEx():com.intellij.openapi.actionSystem.ex.ActionManagerEx
- sf:getKeyStroke(java.lang.String):javax.swing.KeyStroke
- a:getLastPreformedActionId():java.lang.String
- a:getPluginActions(com.intellij.openapi.extensions.PluginId):java.lang.String[]
- a:getPrevPreformedActionId():java.lang.String
- a:getRegistrationOrderComparator():java.util.Comparator
- a:isActionPopupStackEmpty():Z
- a:performWithActionCallbacks(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,java.lang.Runnable):V
f:com.intellij.openapi.actionSystem.ex.ActionManagerEx$Companion
- f:getInstanceEx():com.intellij.openapi.actionSystem.ex.ActionManagerEx
- f:getKeyStroke(java.lang.String):javax.swing.KeyStroke
com.intellij.openapi.actionSystem.ex.ActionPopupMenuListener
- actionPopupMenuCreated(com.intellij.openapi.actionSystem.ActionPopupMenu):V
- actionPopupMenuReleased(com.intellij.openapi.actionSystem.ActionPopupMenu):V
f:com.intellij.openapi.actionSystem.ex.ActionUtil
- sf:ALLOW_PlAIN_LETTER_SHORTCUTS:com.intellij.openapi.util.Key
- sf:ALWAYS_VISIBLE_GROUP:com.intellij.openapi.util.Key
- sf:ALWAYS_VISIBLE_INLINE_ACTION:com.intellij.openapi.util.Key
- sf:COMPONENT_PROVIDER:com.intellij.openapi.util.Key
- sf:HIDE_DISABLED_CHILDREN:com.intellij.openapi.util.Key
- sf:HIDE_DROPDOWN_ICON:com.intellij.openapi.util.Key
- sf:INLINE_ACTIONS:com.intellij.openapi.util.Key
- sf:INSTANCE:com.intellij.openapi.actionSystem.ex.ActionUtil
- sf:KEYBOARD_SHORTCUT_SUFFIX:com.intellij.openapi.util.Key
- sf:SEARCH_TAG:com.intellij.openapi.util.Key
- sf:SECONDARY_ICON:com.intellij.openapi.util.Key
- sf:SECONDARY_TEXT:com.intellij.openapi.util.Key
- sf:SHOW_TEXT_IN_TOOLBAR:com.intellij.openapi.util.Key
- sf:SUPPRESS_SUBMENU:com.intellij.openapi.util.Key
- sf:TOOLTIP_TEXT:com.intellij.openapi.util.Key
- sf:USE_SMALL_FONT_IN_TOOLBAR:com.intellij.openapi.util.Key
- sf:clearActions(javax.swing.JComponent):V
- sf:copyFrom(com.intellij.openapi.actionSystem.AnAction,java.lang.String):com.intellij.openapi.actionSystem.AnAction
- sf:copyRegisteredShortcuts(javax.swing.JComponent,javax.swing.JComponent):V
- sf:createActionFromSwingAction(javax.swing.Action):com.intellij.openapi.actionSystem.AnAction
- sf:createActionListener(java.lang.String,java.awt.Component,java.lang.String):java.awt.event.ActionListener
- sf:createEmptyEvent():com.intellij.openapi.actionSystem.AnActionEvent
- sf:getActionUnavailableMessage(java.lang.String):java.lang.String
- sf:getActions(javax.swing.JComponent):java.util.List
- sf:getActionsUnavailableMessage(java.util.List):java.lang.String
- sf:getDelegateChainRoot(com.intellij.openapi.actionSystem.AnAction):java.lang.Object
- sf:getDelegateChainRootAction(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.AnAction
- sf:getMnemonicAsShortcut(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.ShortcutSet
- sf:getUnavailableMessage(java.lang.String,Z):java.lang.String
- sf:invokeAction(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,java.lang.Runnable):V
- sf:invokeAction(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.DataContext,java.lang.String,java.awt.event.InputEvent,java.lang.Runnable):V
- sf:invokeAction(com.intellij.openapi.actionSystem.AnAction,java.awt.Component,java.lang.String,java.awt.event.InputEvent,java.lang.Runnable):V
- sf:isDumbMode(com.intellij.openapi.project.Project):Z
- sf:lastUpdateAndCheckDumb(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,Z):Z
- sf:mergeFrom(com.intellij.openapi.actionSystem.AnAction,java.lang.String):com.intellij.openapi.actionSystem.AnAction
- sf:performActionDumbAwareWithCallbacks(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent):V
- sf:performDumbAwareUpdate(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,Z):Z
- sf:performDumbAwareWithCallbacks(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,java.lang.Runnable):V
- sf:performInputEventHandlerWithCallbacks(com.intellij.openapi.actionSystem.ActionUiKind,java.lang.String,java.awt.event.InputEvent,java.lang.Runnable):V
- sf:registerForEveryKeyboardShortcut(javax.swing.JComponent,java.awt.event.ActionListener,com.intellij.openapi.actionSystem.ShortcutSet):V
- sf:showDumbModeWarning(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent[]):V
- sf:underModalProgress(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.util.Computable):java.lang.Object
- sf:wrap(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.AnAction
- sf:wrap(java.lang.String):com.intellij.openapi.actionSystem.AnAction
a:com.intellij.openapi.actionSystem.ex.CheckboxAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- p:<init>():V
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- p:<init>(java.util.function.Supplier):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- p:updateCustomComponent(javax.swing.JCheckBox,com.intellij.openapi.actionSystem.Presentation):V
- updateCustomComponent(javax.swing.JComponent,com.intellij.openapi.actionSystem.Presentation):V
a:com.intellij.openapi.actionSystem.ex.ComboBoxAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- p:myPopupTitle:java.lang.String
- p:<init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:createActionPopup(com.intellij.openapi.actionSystem.DataContext,javax.swing.JComponent,java.lang.Runnable):com.intellij.openapi.ui.popup.JBPopup
- p:createActionPopup(com.intellij.openapi.actionSystem.DefaultActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.Runnable):com.intellij.openapi.ui.popup.JBPopup
- p:createComboBoxButton(com.intellij.openapi.actionSystem.Presentation):com.intellij.openapi.actionSystem.ex.ComboBoxAction$ComboBoxButton
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- p:createPopupActionGroup(javax.swing.JComponent):com.intellij.openapi.actionSystem.DefaultActionGroup
- p:createPopupActionGroup(javax.swing.JComponent,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DefaultActionGroup
- s:getArrowIcon(Z):javax.swing.Icon
- p:getMaxRows():I
- p:getMinHeight():I
- p:getMinWidth():I
- p:getPreselectCondition():com.intellij.openapi.util.Condition
- p:isNoWrapping(java.lang.String):Z
- isSmallVariant():Z
- setPopupTitle(java.lang.String):V
- setSmallVariant(Z):V
- p:shouldShowDisabledActions():Z
c:com.intellij.openapi.actionSystem.ex.ComboBoxAction$ComboBoxButton
- javax.swing.JButton
- com.intellij.ui.UserActivityProviderComponent
- <init>(com.intellij.openapi.actionSystem.ex.ComboBoxAction,com.intellij.openapi.actionSystem.Presentation):V
- addNotify():V
- p:createPopup(java.lang.Runnable):com.intellij.openapi.ui.popup.JBPopup
- p:doRightClick():V
- p:fireActionPerformed(java.awt.event.ActionEvent):V
- getArrowGap():I
- p:getComponentGraphics(java.awt.Graphics):java.awt.Graphics
- p:getDataContext():com.intellij.openapi.actionSystem.DataContext
- getFont():java.awt.Font
- getPresentation():com.intellij.openapi.actionSystem.Presentation
- getToolTipText():java.lang.String
- getUIClassID():java.lang.String
- isArrowVisible():Z
- p:isArrowVisible(com.intellij.openapi.actionSystem.Presentation):Z
- isOpaque():Z
- isSmallVariant():Z
- p:performClickOnMousePress():Z
- p:presentationChanged(java.beans.PropertyChangeEvent):V
- removeNotify():V
- setFont(java.awt.Font):V
- setLabel(javax.swing.JLabel):V
- showPopup():V
- updateUI():V
pc:com.intellij.openapi.actionSystem.ex.ComboBoxAction$ComboBoxButton$MyButtonModel
- javax.swing.DefaultButtonModel
- p:<init>(com.intellij.openapi.actionSystem.ex.ComboBoxAction$ComboBoxButton):V
- isArmed():Z
- isPressed():Z
c:com.intellij.openapi.actionSystem.ex.DefaultCustomComponentAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>(java.util.function.Supplier):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
a:com.intellij.openapi.actionSystem.ex.ThreeStateCheckboxAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- sf:STATE_PROPERTY:com.intellij.openapi.util.Key
- p:<init>():V
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- p:<init>(java.util.function.Supplier):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- a:isSelected(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.util.ui.ThreeStateCheckBox$State
- a:setSelected(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.util.ui.ThreeStateCheckBox$State):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- updateCustomComponent(javax.swing.JComponent,com.intellij.openapi.actionSystem.Presentation):V
com.intellij.openapi.actionSystem.ex.TooltipDescriptionProvider
com.intellij.openapi.actionSystem.ex.TooltipLinkProvider
- a:getTooltipLink(javax.swing.JComponent):com.intellij.openapi.actionSystem.ex.TooltipLinkProvider$TooltipLink
c:com.intellij.openapi.actionSystem.ex.TooltipLinkProvider$TooltipLink
- f:action:java.lang.Runnable
- f:tooltip:java.lang.String
- <init>(java.lang.String,java.lang.Runnable):V
a:com.intellij.openapi.application.ApplicationStarterEx
- com.intellij.openapi.application.ApplicationStarter
- <init>():V
a:com.intellij.openapi.command.CommandAdapter
- com.intellij.openapi.command.CommandListener
- <init>():V
a:com.intellij.openapi.components.AbstractProjectComponent
- com.intellij.openapi.components.ProjectComponent
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project):V
com.intellij.openapi.components.SettingsSavingComponent
- a:save():V
a:com.intellij.openapi.diagnostic.ErrorReportSubmitter
- com.intellij.openapi.extensions.PluginAware
- <init>():V
- changeReporterAccount(java.awt.Component):V
- getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- getPrivacyNoticeText():java.lang.String
- a:getReportActionText():java.lang.String
- getReporterAccount():java.lang.String
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
- submit(com.intellij.openapi.diagnostic.IdeaLoggingEvent[],java.awt.Component):com.intellij.openapi.diagnostic.SubmittedReportInfo
- submit(com.intellij.openapi.diagnostic.IdeaLoggingEvent[],java.lang.String,java.awt.Component,com.intellij.util.Consumer):Z
c:com.intellij.openapi.diagnostic.IdeaLoggingEvent
- <init>(java.lang.String,java.lang.Throwable):V
- <init>(java.lang.String,java.lang.Throwable,java.lang.Object):V
- <init>(java.lang.String,java.lang.Throwable,java.util.List,com.intellij.ide.plugins.IdeaPluginDescriptor,java.lang.Object):V
- getAttachments():java.util.List
- getData():java.lang.Object
- getMessage():java.lang.String
- getPlugin():com.intellij.ide.plugins.IdeaPluginDescriptor
- getThrowable():java.lang.Throwable
- getThrowableText():java.lang.String
c:com.intellij.openapi.diagnostic.SubmittedReportInfo
- <init>(com.intellij.openapi.diagnostic.SubmittedReportInfo$SubmissionStatus):V
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.diagnostic.SubmittedReportInfo$SubmissionStatus):V
- getLinkText():java.lang.String
- getStatus():com.intellij.openapi.diagnostic.SubmittedReportInfo$SubmissionStatus
- getURL():java.lang.String
e:com.intellij.openapi.diagnostic.SubmittedReportInfo$SubmissionStatus
- java.lang.Enum
- sf:DUPLICATE:com.intellij.openapi.diagnostic.SubmittedReportInfo$SubmissionStatus
- sf:FAILED:com.intellij.openapi.diagnostic.SubmittedReportInfo$SubmissionStatus
- sf:NEW_ISSUE:com.intellij.openapi.diagnostic.SubmittedReportInfo$SubmissionStatus
- s:valueOf(java.lang.String):com.intellij.openapi.diagnostic.SubmittedReportInfo$SubmissionStatus
- s:values():com.intellij.openapi.diagnostic.SubmittedReportInfo$SubmissionStatus[]
c:com.intellij.openapi.editor.DisposableEditorPanel
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.editor.Editor):V
- dispose():V
c:com.intellij.openapi.editor.DocumentFragment
- <init>(com.intellij.openapi.editor.Document,I,I):V
- equals(java.lang.Object):Z
- getDocument():com.intellij.openapi.editor.Document
- getTextRange():com.intellij.openapi.util.TextRange
- hashCode():I
f:com.intellij.openapi.editor.EditorBundle
- sf:BUNDLE:java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
a:com.intellij.openapi.editor.EditorCopyPasteHelper
- sf:TRIM_TEXT_ON_PASTE_KEY:java.lang.String
- <init>():V
- copySelectionToClipboard(com.intellij.openapi.editor.Editor):V
- s:getInstance():com.intellij.openapi.editor.EditorCopyPasteHelper
- a:getSelectionTransferable(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.EditorCopyPasteHelper$CopyPasteOptions):java.awt.datatransfer.Transferable
- a:pasteFromClipboard(com.intellij.openapi.editor.Editor):com.intellij.openapi.util.TextRange[]
- a:pasteTransferable(com.intellij.openapi.editor.Editor,java.awt.datatransfer.Transferable):com.intellij.openapi.util.TextRange[]
f:com.intellij.openapi.editor.EditorCopyPasteHelper$CopyPasteOptions
- java.lang.Record
- java.io.Serializable
- sf:DEFAULT:com.intellij.openapi.editor.EditorCopyPasteHelper$CopyPasteOptions
- <init>(Z):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- isCopiedFromEmptySelection():Z
c:com.intellij.openapi.editor.EditorCopyPasteHelper$TooLargeContentException
- java.lang.RuntimeException
- <init>(I):V
- getContentLength():I
f:com.intellij.openapi.editor.EditorModificationUtil
- com.intellij.openapi.editor.EditorModificationUtilEx
- s:calcBlockSelectionState(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.LogicalPosition):java.util.List
- s:checkModificationAllowed(com.intellij.openapi.editor.Editor):Z
- s:deleteSelectedTextForAllCarets(com.intellij.openapi.editor.Editor):V
- s:getContentsToPasteToEditor(com.intellij.util.Producer):java.awt.datatransfer.Transferable
- s:getStringContent(java.awt.datatransfer.Transferable):java.lang.String
- s:moveAllCaretsRelatively(com.intellij.openapi.editor.Editor,I):V
- s:moveCaretRelatively(com.intellij.openapi.editor.Editor,I):V
- s:requestWriting(com.intellij.openapi.editor.Editor):Z
- s:setReadOnlyHint(com.intellij.openapi.editor.Editor,java.lang.String):V
- s:setReadOnlyHint(com.intellij.openapi.editor.Editor,java.lang.String,javax.swing.event.HyperlinkListener):V
- s:typeInStringAtCaretHonorMultipleCarets(com.intellij.openapi.editor.Editor,java.lang.String):V
- s:typeInStringAtCaretHonorMultipleCarets(com.intellij.openapi.editor.Editor,java.lang.String,I):V
- s:typeInStringAtCaretHonorMultipleCarets(com.intellij.openapi.editor.Editor,java.lang.String,Z):V
- s:typeInStringAtCaretHonorMultipleCarets(com.intellij.openapi.editor.Editor,java.lang.String,Z,I):V
- s:zeroWidthBlockSelectionAtCaretColumn(com.intellij.openapi.editor.Editor,I,I):V
com.intellij.openapi.editor.EditorNavigationDelegate
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:navigateToLineEnd(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.editor.EditorNavigationDelegate$Result
e:com.intellij.openapi.editor.EditorNavigationDelegate$Result
- java.lang.Enum
- sf:CONTINUE:com.intellij.openapi.editor.EditorNavigationDelegate$Result
- sf:STOP:com.intellij.openapi.editor.EditorNavigationDelegate$Result
- s:valueOf(java.lang.String):com.intellij.openapi.editor.EditorNavigationDelegate$Result
- s:values():com.intellij.openapi.editor.EditorNavigationDelegate$Result[]
c:com.intellij.openapi.editor.EditorNavigationDelegateAdapter
- com.intellij.openapi.editor.EditorNavigationDelegate
- <init>():V
- navigateToLineEnd(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.editor.EditorNavigationDelegate$Result
c:com.intellij.openapi.editor.RawText
- java.io.Serializable
- java.lang.Cloneable
- rawText:java.lang.String
- <init>(java.lang.String):V
- clone():java.lang.Object
- s:fromTransferable(java.awt.datatransfer.Transferable):com.intellij.openapi.editor.RawText
- s:getDataFlavor():java.awt.datatransfer.DataFlavor
com.intellij.openapi.editor.actionSystem.ActionPlan
- a:getCaretOffset():I
- a:getText():com.intellij.util.text.ImmutableCharSequence
- a:replace(I,I,java.lang.String):V
- a:setCaretOffset(I):V
f:com.intellij.openapi.editor.actionSystem.CaretSpecificDataContext
- com.intellij.openapi.actionSystem.DataContextWrapper
- s:create(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.Caret):com.intellij.openapi.editor.actionSystem.CaretSpecificDataContext
- getRawCustomData(java.lang.String):java.lang.Object
a:com.intellij.openapi.editor.actionSystem.EditorAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- p:<init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- f:actionPerformed(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):V
- beforeActionPerformedUpdate(com.intellij.openapi.actionSystem.AnActionEvent):V
- clearDynamicHandlersCache():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getEditor(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.editor.Editor
- f:getHandler():com.intellij.openapi.editor.actionSystem.EditorActionHandler
- getHandlerOfType(java.lang.Class):java.lang.Object
- setInjectedContext(Z):V
- f:setupHandler(com.intellij.openapi.editor.actionSystem.EditorActionHandler):com.intellij.openapi.editor.actionSystem.EditorActionHandler
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.DataContext):V
- updateForKeyboardAccess(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.DataContext):V
a:com.intellij.openapi.editor.actionSystem.EditorActionHandler
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- p:<init>():V
- p:<init>(Z):V
- s:caretDataContext(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.Caret):com.intellij.openapi.actionSystem.DataContext
- p:doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- execute(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):V
- f:execute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- executeInCommand(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):Z
- getCommandGroupId(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.actionSystem.DocCommandGroupId
- isEnabled(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):Z
- f:isEnabled(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
- p:isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
- runForAllCarets():Z
a:com.intellij.openapi.editor.actionSystem.EditorActionHandler$ForEachCaret
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- p:<init>():V
- pa:doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.openapi.editor.actionSystem.EditorActionHandlerBean
- com.intellij.openapi.extensions.PluginAware
- action:java.lang.String
- implementationClass:java.lang.String
- <init>():V
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
a:com.intellij.openapi.editor.actionSystem.EditorActionManager
- <init>():V
- a:getActionHandler(java.lang.String):com.intellij.openapi.editor.actionSystem.EditorActionHandler
- s:getInstance():com.intellij.openapi.editor.actionSystem.EditorActionManager
- a:getReadonlyFragmentModificationHandler():com.intellij.openapi.editor.actionSystem.ReadonlyFragmentModificationHandler
- a:getReadonlyFragmentModificationHandler(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.actionSystem.ReadonlyFragmentModificationHandler
- a:getTypedAction():com.intellij.openapi.editor.actionSystem.TypedAction
- a:setActionHandler(java.lang.String,com.intellij.openapi.editor.actionSystem.EditorActionHandler):com.intellij.openapi.editor.actionSystem.EditorActionHandler
- a:setReadonlyFragmentModificationHandler(com.intellij.openapi.editor.Document,com.intellij.openapi.editor.actionSystem.ReadonlyFragmentModificationHandler):V
- a:setReadonlyFragmentModificationHandler(com.intellij.openapi.editor.actionSystem.ReadonlyFragmentModificationHandler):com.intellij.openapi.editor.actionSystem.ReadonlyFragmentModificationHandler
com.intellij.openapi.editor.actionSystem.EditorTextInsertHandler
- a:execute(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext,com.intellij.util.Producer):V
f:com.intellij.openapi.editor.actionSystem.EditorTypedHandlerBean
- implementationClass:java.lang.String
- <init>():V
a:com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- p:<init>():V
- p:<init>(Z):V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- executeWriteAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):V
- executeWriteAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
a:com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler$ForEachCaret
- com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler
- p:<init>():V
- a:executeWriteAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
com.intellij.openapi.editor.actionSystem.LatencyAwareEditorAction
com.intellij.openapi.editor.actionSystem.LatencyListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:recordTypingLatency(com.intellij.openapi.editor.Editor,java.lang.String,J):V
com.intellij.openapi.editor.actionSystem.LatencyRecorder
- s:getInstance():com.intellij.openapi.editor.actionSystem.LatencyRecorder
- a:recordLatencyAwareAction(com.intellij.openapi.editor.Editor,java.lang.String,J):V
a:com.intellij.openapi.editor.actionSystem.TypedAction
- <init>():V
- f:actionPerformed(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext):V
- beforeActionPerformed(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.ActionPlan):V
- getHandler():com.intellij.openapi.editor.actionSystem.TypedActionHandler
- s:getInstance():com.intellij.openapi.editor.actionSystem.TypedAction
- getRawHandler():com.intellij.openapi.editor.actionSystem.TypedActionHandler
- setupHandler(com.intellij.openapi.editor.actionSystem.TypedActionHandler):com.intellij.openapi.editor.actionSystem.TypedActionHandler
- setupRawHandler(com.intellij.openapi.editor.actionSystem.TypedActionHandler):com.intellij.openapi.editor.actionSystem.TypedActionHandler
com.intellij.openapi.editor.actionSystem.TypedActionHandler
- a:execute(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext):V
com.intellij.openapi.editor.actionSystem.TypedActionHandlerEx
- com.intellij.openapi.editor.actionSystem.TypedActionHandler
- a:beforeExecute(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.ActionPlan):V
a:com.intellij.openapi.editor.event.EditorFactoryAdapter
- com.intellij.openapi.editor.event.EditorFactoryListener
- <init>():V
a:com.intellij.openapi.editor.event.EditorMouseAdapter
- com.intellij.openapi.editor.event.EditorMouseListener
- <init>():V
a:com.intellij.openapi.editor.event.EditorMouseMotionAdapter
- com.intellij.openapi.editor.event.EditorMouseMotionListener
- <init>():V
c:com.intellij.openapi.editor.event.MockDocumentEvent
- com.intellij.openapi.editor.event.DocumentEvent
- <init>(com.intellij.openapi.editor.Document,I):V
- getNewFragment():java.lang.CharSequence
- getNewLength():I
- getOffset():I
- getOldFragment():java.lang.CharSequence
- getOldLength():I
- getOldTimeStamp():J
c:com.intellij.openapi.editor.highlighter.FragmentedEditorHighlighter
- com.intellij.openapi.editor.highlighter.EditorHighlighter
- <init>(com.intellij.openapi.editor.highlighter.EditorHighlighter,com.intellij.openapi.util.TextRange):V
- createIterator(I):com.intellij.openapi.editor.highlighter.HighlighterIterator
- setEditor(com.intellij.openapi.editor.highlighter.HighlighterClient):V
c:com.intellij.openapi.editor.highlighter.LightHighlighterClient
- com.intellij.openapi.editor.highlighter.HighlighterClient
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):V
- getDocument():com.intellij.openapi.editor.Document
- getProject():com.intellij.openapi.project.Project
- repaint(I,I):V
com.intellij.openapi.editor.markup.InspectionWidgetActionProvider
- sf:Companion:com.intellij.openapi.editor.markup.InspectionWidgetActionProvider$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createAction(com.intellij.openapi.editor.Editor):com.intellij.openapi.actionSystem.AnAction
f:com.intellij.openapi.editor.markup.InspectionWidgetActionProvider$Companion
e:com.intellij.openapi.editor.markup.InspectionsLevel
- java.lang.Enum
- sf:ALL:com.intellij.openapi.editor.markup.InspectionsLevel
- sf:ESSENTIAL:com.intellij.openapi.editor.markup.InspectionsLevel
- sf:NONE:com.intellij.openapi.editor.markup.InspectionsLevel
- sf:SYNTAX:com.intellij.openapi.editor.markup.InspectionsLevel
- f:getDescription():java.lang.String
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.editor.markup.InspectionsLevel
- s:values():com.intellij.openapi.editor.markup.InspectionsLevel[]
com.intellij.openapi.editor.textarea.TextComponentEditor
- com.intellij.openapi.editor.Editor
f:com.intellij.openapi.fileChooser.FileChooser
- s:chooseFile(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:chooseFile(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Consumer):V
- s:chooseFile(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,java.awt.Component,com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Consumer):V
- s:chooseFile(com.intellij.openapi.fileChooser.FileChooserDescriptor,java.awt.Component,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:chooseFiles(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile[]
- s:chooseFiles(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Consumer):V
- s:chooseFiles(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,java.awt.Component,com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Consumer):V
- s:chooseFiles(com.intellij.openapi.fileChooser.FileChooserDescriptor,java.awt.Component,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile[]
com.intellij.openapi.fileChooser.FileChooser$FileChooserConsumer
- com.intellij.util.Consumer
- a:cancelled():V
com.intellij.openapi.fileChooser.FileChooserDialog
- sf:PREFER_LAST_OVER_TO_SELECT:com.intellij.openapi.actionSystem.DataKey
- a:choose(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile[]):com.intellij.openapi.vfs.VirtualFile[]
- choose(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.vfs.VirtualFile[]
a:com.intellij.openapi.fileChooser.FileChooserFactory
- <init>():V
- a:createFileChooser(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,java.awt.Component):com.intellij.openapi.fileChooser.FileChooserDialog
- createFileTextField(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.Disposable):com.intellij.openapi.fileChooser.FileTextField
- a:createFileTextField(com.intellij.openapi.fileChooser.FileChooserDescriptor,Z,com.intellij.openapi.Disposable):com.intellij.openapi.fileChooser.FileTextField
- a:createPathChooser(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project,java.awt.Component):com.intellij.openapi.fileChooser.PathChooserDialog
- a:createSaveFileDialog(com.intellij.openapi.fileChooser.FileSaverDescriptor,com.intellij.openapi.project.Project):com.intellij.openapi.fileChooser.FileSaverDialog
- a:createSaveFileDialog(com.intellij.openapi.fileChooser.FileSaverDescriptor,java.awt.Component):com.intellij.openapi.fileChooser.FileSaverDialog
- s:getInstance():com.intellij.openapi.fileChooser.FileChooserFactory
- a:installFileCompletion(javax.swing.JTextField,com.intellij.openapi.fileChooser.FileChooserDescriptor,Z,com.intellij.openapi.Disposable):V
com.intellij.openapi.fileChooser.FileChooserPanel
- a:currentDirectory():java.nio.file.Path
- a:getComponent():javax.swing.JComponent
- a:hasHistory(Z):Z
- a:hiddenFiles():Z
- a:load(java.nio.file.Path):V
- a:loadHistory(Z):V
- a:loadParent():V
- a:pathBar():Z
- a:projectDetection():Z
- a:reload(java.nio.file.Path):V
- a:reloadAfter(com.intellij.openapi.util.ThrowableComputable):V
- a:selectedPaths():java.util.List
- a:toggleHiddenFiles():Z
- a:togglePathBar():Z
- a:toggleProjectDetection():Z
c:com.intellij.openapi.fileChooser.FileSaverDescriptor
- com.intellij.openapi.fileChooser.FileChooserDescriptor
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- <init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String[]):V
- withDescription(java.lang.String):com.intellij.openapi.fileChooser.FileSaverDescriptor
- withTitle(java.lang.String):com.intellij.openapi.fileChooser.FileSaverDescriptor
f:com.intellij.openapi.fileChooser.FileSaverDescriptorFactory
- sf:INSTANCE:com.intellij.openapi.fileChooser.FileSaverDescriptorFactory
- sf:createSingleFileNoJarsDescriptor():com.intellij.openapi.fileChooser.FileSaverDescriptor
com.intellij.openapi.fileChooser.FileSaverDialog
- a:save(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFileWrapper
- save(java.lang.String):com.intellij.openapi.vfs.VirtualFileWrapper
- a:save(java.nio.file.Path,java.lang.String):com.intellij.openapi.vfs.VirtualFileWrapper
com.intellij.openapi.fileChooser.FileSystemTree
- com.intellij.openapi.Disposable
- sf:DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- a:addListener(com.intellij.openapi.fileChooser.FileSystemTree$Listener,com.intellij.openapi.Disposable):V
- a:areHiddensShown():Z
- a:expand(com.intellij.openapi.vfs.VirtualFile,java.lang.Runnable):V
- a:getData(com.intellij.openapi.actionSystem.DataKey):java.lang.Object
- a:getNewFileParent():com.intellij.openapi.vfs.VirtualFile
- a:getSelectedFile():com.intellij.openapi.vfs.VirtualFile
- a:getSelectedFiles():com.intellij.openapi.vfs.VirtualFile[]
- a:getTree():javax.swing.JTree
- a:isUnderRoots(com.intellij.openapi.vfs.VirtualFile):Z
- a:select(com.intellij.openapi.vfs.VirtualFile,java.lang.Runnable):V
- a:select(com.intellij.openapi.vfs.VirtualFile[],java.lang.Runnable):V
- a:selectionExists():Z
- a:showHiddens(Z):V
- a:updateTree():V
com.intellij.openapi.fileChooser.FileSystemTree$Listener
- a:selectionChanged(java.util.List):V
com.intellij.openapi.fileChooser.FileTextField
- sf:KEY:java.lang.String
- a:getField():javax.swing.JTextField
- getSelectedFile():com.intellij.openapi.vfs.VirtualFile
- a:isPopupDisplayed():Z
c:com.intellij.openapi.fileChooser.FileTypeDescriptor
- com.intellij.openapi.fileChooser.FileChooserDescriptor
- <init>(java.lang.String,java.lang.String[]):V
com.intellij.openapi.fileChooser.PathChooserDialog
- sf:PREFER_LAST_OVER_EXPLICIT:com.intellij.openapi.actionSystem.DataKey
- a:choose(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Consumer):V
com.intellij.openapi.fileEditor.AsyncFileEditorProvider
- com.intellij.openapi.fileEditor.FileEditorProvider
- com.intellij.openapi.project.DumbAware
- createEditorAsync(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.AsyncFileEditorProvider$Builder
a:com.intellij.openapi.fileEditor.AsyncFileEditorProvider$Builder
- <init>():V
- a:build():com.intellij.openapi.fileEditor.FileEditor
com.intellij.openapi.fileEditor.DocumentsEditor
- com.intellij.openapi.fileEditor.FileEditor
- a:getDocuments():com.intellij.openapi.editor.Document[]
a:com.intellij.openapi.fileEditor.FileDocumentManagerAdapter
- com.intellij.openapi.fileEditor.FileDocumentManagerListener
- <init>():V
com.intellij.openapi.fileEditor.FileDocumentManagerListener
- java.util.EventListener
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:TOPIC:com.intellij.util.messages.Topic
- afterDocumentUnbound(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document):V
- beforeAllDocumentsSaving():V
- beforeAnyDocumentSaving(com.intellij.openapi.editor.Document,Z):V
- beforeDocumentSaving(com.intellij.openapi.editor.Document):V
- beforeFileContentReload(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document):V
- fileContentLoaded(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document):V
- fileContentReloaded(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document):V
- fileWithNoDocumentChanged(com.intellij.openapi.vfs.VirtualFile):V
- unsavedDocumentDropped(com.intellij.openapi.editor.Document):V
- unsavedDocumentsDropped():V
a:com.intellij.openapi.fileEditor.FileDocumentSynchronizationVetoer
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- mayReloadFileContent(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document):Z
- maySaveDocument(com.intellij.openapi.editor.Document,Z):Z
a:com.intellij.openapi.fileEditor.FileEditorManagerAdapter
- com.intellij.openapi.fileEditor.FileEditorManagerListener
- <init>():V
c:com.intellij.openapi.fileEditor.PsiElementNavigatable
- com.intellij.pom.Navigatable
- <init>(com.intellij.psi.PsiElement):V
- canNavigate():Z
- canNavigateToSource():Z
- f:navigate(Z):V
com.intellij.openapi.fileEditor.TrailingSpacesOptions
- a:isChangedLinesOnly():Z
- a:isEnsureNewLineAtEOF():Z
- a:isKeepTrailingSpacesOnCaretLine():Z
- a:isRemoveTrailingBlankLines():Z
- a:isStripTrailingSpaces():Z
com.intellij.openapi.fileEditor.TrailingSpacesOptionsProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getOptions(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.TrailingSpacesOptionsProvider$Options
com.intellij.openapi.fileEditor.TrailingSpacesOptionsProvider$Options
- a:getChangedLinesOnly():java.lang.Boolean
- a:getEnsureNewLineAtEOF():java.lang.Boolean
- a:getKeepTrailingSpacesOnCaretLine():java.lang.Boolean
- a:getRemoveTrailingBlankLines():java.lang.Boolean
- a:getStripTrailingSpaces():java.lang.Boolean
com.intellij.openapi.fileEditor.TransferableFileEditorState
- com.intellij.openapi.fileEditor.FileEditorState
- a:getEditorId():java.lang.String
- a:getTransferableOptions():java.util.Map
- a:setCopiedFromMasterEditor():V
- a:setTransferableOptions(java.util.Map):V
a:com.intellij.openapi.fileEditor.WeighedFileEditorProvider
- com.intellij.openapi.fileEditor.FileEditorProvider
- <init>():V
- getWeight():D
- isDumbAware():Z
a:com.intellij.openapi.help.HelpManager
- <init>():V
- s:getInstance():com.intellij.openapi.help.HelpManager
- a:invokeHelp(java.lang.String):V
- ps:logWillOpenHelpId(java.lang.String):V
com.intellij.openapi.help.KeymapHelpIdPresenter
- a:getKeymapIdForHelp(com.intellij.openapi.keymap.Keymap):java.lang.String
a:com.intellij.openapi.help.WebHelpProvider
- com.intellij.openapi.extensions.PluginAware
- <init>():V
- a:getHelpPageUrl(java.lang.String):java.lang.String
- getHelpTopicPrefix():java.lang.String
- f:setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
com.intellij.openapi.ide.CutElementMarker
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:isCutElement(java.lang.Object):Z
c:com.intellij.openapi.ide.KillRingTransferable
- java.awt.datatransfer.Transferable
- <init>(java.lang.String,com.intellij.openapi.editor.Document,I,I,Z):V
- getDocument():com.intellij.openapi.editor.Document
- getEndOffset():I
- getStartOffset():I
- getTransferData(java.awt.datatransfer.DataFlavor):java.lang.Object
- getTransferDataFlavors():java.awt.datatransfer.DataFlavor[]
- isCut():Z
- isDataFlavorSupported(java.awt.datatransfer.DataFlavor):Z
- isReadyToCombine():Z
- setReadyToCombine(Z):V
com.intellij.openapi.ide.SmartSelectProvider
- sf:EP:com.intellij.openapi.extensions.ExtensionPointName
- a:canDecreaseSelection(java.lang.Object):Z
- a:canIncreaseSelection(java.lang.Object):Z
- a:decreaseSelection(java.lang.Object):V
- a:getSource(com.intellij.openapi.actionSystem.DataContext):java.lang.Object
- a:increaseSelection(java.lang.Object):V
- isEnabled(com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.openapi.keymap.KeyMapBundle
- sf:BUNDLE:java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
com.intellij.openapi.keymap.Keymap
- com.intellij.openapi.options.Scheme
- a:addShortcut(java.lang.String,com.intellij.openapi.actionSystem.Shortcut):V
- a:canModify():Z
- a:deriveKeymap(java.lang.String):com.intellij.openapi.keymap.Keymap
- a:getActionIdList():java.util.Collection
- a:getActionIdList(com.intellij.openapi.actionSystem.Shortcut):java.util.List
- a:getActionIds():java.lang.String[]
- a:getActionIds(com.intellij.openapi.actionSystem.MouseShortcut):java.util.List
- a:getActionIds(com.intellij.openapi.actionSystem.Shortcut):java.lang.String[]
- a:getActionIds(javax.swing.KeyStroke):java.lang.String[]
- a:getActionIds(javax.swing.KeyStroke,javax.swing.KeyStroke):java.lang.String[]
- a:getConflicts(java.lang.String,com.intellij.openapi.actionSystem.KeyboardShortcut):java.util.Map
- a:getName():java.lang.String
- a:getParent():com.intellij.openapi.keymap.Keymap
- a:getPresentableName():java.lang.String
- a:getShortcuts(java.lang.String):com.intellij.openapi.actionSystem.Shortcut[]
- a:hasActionId(java.lang.String,com.intellij.openapi.actionSystem.MouseShortcut):Z
- a:removeAllActionShortcuts(java.lang.String):V
- a:removeShortcut(java.lang.String,com.intellij.openapi.actionSystem.Shortcut):V
com.intellij.openapi.keymap.KeymapExtension
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createGroup(com.intellij.openapi.util.Condition,com.intellij.openapi.project.Project):com.intellij.openapi.keymap.KeymapGroup
- getGroupLocation():com.intellij.openapi.keymap.KeymapExtension$KeymapLocation
- skipPluginGroup(com.intellij.openapi.extensions.PluginId):Z
e:com.intellij.openapi.keymap.KeymapExtension$KeymapLocation
- java.lang.Enum
- sf:OTHER:com.intellij.openapi.keymap.KeymapExtension$KeymapLocation
- sf:TOP_LEVEL:com.intellij.openapi.keymap.KeymapExtension$KeymapLocation
- s:valueOf(java.lang.String):com.intellij.openapi.keymap.KeymapExtension$KeymapLocation
- s:values():com.intellij.openapi.keymap.KeymapExtension$KeymapLocation[]
com.intellij.openapi.keymap.KeymapGroup
- a:addActionId(java.lang.String):V
- a:addGroup(com.intellij.openapi.keymap.KeymapGroup):V
a:com.intellij.openapi.keymap.KeymapGroupFactory
- <init>():V
- a:createGroup(java.lang.String):com.intellij.openapi.keymap.KeymapGroup
- a:createGroup(java.lang.String,javax.swing.Icon):com.intellij.openapi.keymap.KeymapGroup
- s:getInstance():com.intellij.openapi.keymap.KeymapGroupFactory
a:com.intellij.openapi.keymap.KeymapManager
- sf:DEFAULT_IDEA_KEYMAP:java.lang.String
- sf:GNOME_KEYMAP:java.lang.String
- sf:KDE_KEYMAP:java.lang.String
- sf:MAC_OS_X_10_5_PLUS_KEYMAP:java.lang.String
- sf:MAC_OS_X_KEYMAP:java.lang.String
- sf:X_WINDOW_KEYMAP:java.lang.String
- <init>():V
- a:getActiveKeymap():com.intellij.openapi.keymap.Keymap
- s:getInstance():com.intellij.openapi.keymap.KeymapManager
- a:getKeymap(java.lang.String):com.intellij.openapi.keymap.Keymap
- a:removeKeymapManagerListener(com.intellij.openapi.keymap.KeymapManagerListener):V
com.intellij.openapi.keymap.KeymapManagerListener
- sf:TOPIC:com.intellij.util.messages.Topic
- activeKeymapChanged(com.intellij.openapi.keymap.Keymap):V
- keymapAdded(com.intellij.openapi.keymap.Keymap):V
- keymapRemoved(com.intellij.openapi.keymap.Keymap):V
- shortcutChanged(com.intellij.openapi.keymap.Keymap,java.lang.String):V
- shortcutChanged(com.intellij.openapi.keymap.Keymap,java.lang.String,Z):V
- shortcutsChanged(com.intellij.openapi.keymap.Keymap,java.util.Collection,Z):V
c:com.intellij.openapi.keymap.KeymapTextContext
- <init>():V
- getKeyText(I):java.lang.String
- getKeystrokeText(javax.swing.KeyStroke):java.lang.String
- getMouseShortcutString(com.intellij.openapi.actionSystem.MouseShortcut):java.lang.String
- getMouseShortcutText(com.intellij.openapi.actionSystem.MouseShortcut):java.lang.String
- getShortcutText(com.intellij.openapi.actionSystem.Shortcut):java.lang.String
- getShortcutText(java.lang.String):java.lang.String
- isSimplifiedMacShortcuts():Z
- parseMouseShortcut(java.lang.String):com.intellij.openapi.actionSystem.MouseShortcut
f:com.intellij.openapi.keymap.KeymapUtil
- s:createMouseShortcut(java.awt.event.MouseEvent):com.intellij.openapi.actionSystem.MouseShortcut
- s:createTooltipText(java.lang.String,com.intellij.openapi.actionSystem.AnAction):java.lang.String
- s:createTooltipText(java.lang.String,java.lang.String):java.lang.String
- s:filterKeyStrokes(com.intellij.openapi.actionSystem.ShortcutSet,javax.swing.KeyStroke[]):com.intellij.openapi.actionSystem.ShortcutSet
- s:getActiveKeymapShortcuts(java.lang.String):com.intellij.openapi.actionSystem.ShortcutSet
- s:getFirstKeyboardShortcutText(com.intellij.openapi.actionSystem.AnAction):java.lang.String
- s:getFirstKeyboardShortcutText(com.intellij.openapi.actionSystem.ShortcutSet):java.lang.String
- s:getFirstKeyboardShortcutText(java.lang.String):java.lang.String
- s:getFirstMouseShortcutText(java.lang.String):java.lang.String
- s:getKeyStroke(com.intellij.openapi.actionSystem.ShortcutSet):javax.swing.KeyStroke
- s:getKeyStroke(java.lang.String):javax.swing.KeyStroke
- s:getKeyStrokes(com.intellij.openapi.actionSystem.ShortcutSet):java.util.Collection
- s:getKeyText(I):java.lang.String
- s:getKeystrokeText(javax.swing.KeyStroke):java.lang.String
- s:getMnemonicAsShortcut(I):com.intellij.openapi.actionSystem.CustomShortcutSet
- s:getModifiersText(I):java.lang.String
- s:getMouseShortcutString(com.intellij.openapi.actionSystem.MouseShortcut):java.lang.String
- s:getMouseShortcutText(com.intellij.openapi.actionSystem.MouseShortcut):java.lang.String
- s:getPreferredShortcutText(com.intellij.openapi.actionSystem.Shortcut[]):java.lang.String
- s:getPrimaryShortcut(java.lang.String):com.intellij.openapi.actionSystem.Shortcut
- s:getShortcutText(com.intellij.openapi.actionSystem.Shortcut):java.lang.String
- s:getShortcutText(com.intellij.openapi.actionSystem.ShortcutSet):java.lang.String
- s:getShortcutText(java.lang.String):java.lang.String
- s:getShortcutTextOrNull(java.lang.String):java.lang.String
- s:getShortcutsForMnemonicChar(C):com.intellij.openapi.actionSystem.CustomShortcutSet
- s:getShortcutsForMnemonicCode(I):com.intellij.openapi.actionSystem.CustomShortcutSet
- s:getShortcutsText(com.intellij.openapi.actionSystem.Shortcut[]):java.lang.String
- s:isEmacsKeymap():Z
- s:isEmacsKeymap(com.intellij.openapi.keymap.Keymap):Z
- s:isEventForAction(java.awt.event.KeyEvent,java.lang.String):Z
- s:isSimplifiedMacShortcuts():Z
- s:isTooltipRequest(java.awt.event.KeyEvent):Z
- s:matchActionMouseShortcutsModifiers(com.intellij.openapi.keymap.Keymap,I,java.lang.String):Z
- s:parseMouseShortcut(java.lang.String):com.intellij.openapi.actionSystem.MouseShortcut
- s:reassignAction(javax.swing.JComponent,javax.swing.KeyStroke,javax.swing.KeyStroke,I):Z
- s:reassignAction(javax.swing.JComponent,javax.swing.KeyStroke,javax.swing.KeyStroke,I,Z):Z
f:com.intellij.openapi.keymap.MacKeymapUtil
- sf:APPLE:java.lang.String
- sf:BACKSPACE:java.lang.String
- sf:CAPS_LOCK:java.lang.String
- sf:CLEAR:java.lang.String
- sf:COMMAND:java.lang.String
- sf:CONTROL:java.lang.String
- sf:DELETE:java.lang.String
- sf:DOWN:java.lang.String
- sf:EJECT:java.lang.String
- sf:END:java.lang.String
- sf:ENTER:java.lang.String
- sf:ESCAPE:java.lang.String
- sf:HOME:java.lang.String
- sf:LEFT:java.lang.String
- sf:NUMBER_LOCK:java.lang.String
- sf:NUM_PAD:java.lang.String
- sf:OPTION:java.lang.String
- sf:PAGE_DOWN:java.lang.String
- sf:PAGE_UP:java.lang.String
- sf:POWER3:java.lang.String
- sf:RETURN:java.lang.String
- sf:RIGHT:java.lang.String
- sf:SHIFT:java.lang.String
- sf:SPACE:java.lang.String
- sf:TAB:java.lang.String
- sf:TAB_BACK:java.lang.String
- sf:UP:java.lang.String
- <init>():V
- s:getKeyModifiersTextForMacOSLeopard(I):java.lang.String
- s:getKeyStrokeText(javax.swing.KeyStroke):java.lang.String
- s:getKeyStrokeText(javax.swing.KeyStroke,java.lang.String,Z):java.lang.String
- s:getKeyText(I):java.lang.String
- s:getModifiersText(I,java.lang.String):java.lang.String
f:com.intellij.openapi.keymap.NationalKeyboardSupport
- com.intellij.openapi.components.PersistentStateComponent
- sf:VMOption:java.lang.String
- <init>():V
- getEnabled():Z
- s:getInstance():com.intellij.openapi.keymap.NationalKeyboardSupport
- s:getKeymapBundleKey():java.lang.String
- s:getLanguageForComponent(java.awt.Component):java.lang.String
- getState():com.intellij.openapi.keymap.NationalKeyboardSupport$OptionSet
- s:getVMOption():java.lang.String
- s:isSupportedKeyboardLayout(java.awt.Component):Z
- loadState(com.intellij.openapi.keymap.NationalKeyboardSupport$OptionSet):V
- noStateLoaded():V
- setEnabled(Z):V
f:com.intellij.openapi.keymap.NationalKeyboardSupport$OptionSet
- enabled:Z
- <init>():V
f:com.intellij.openapi.observable.util.BindUtil
- sf:bind(com.intellij.openapi.observable.properties.ObservableMutableProperty,com.intellij.openapi.observable.properties.ObservableMutableProperty):V
- sf:bind(com.intellij.openapi.observable.properties.ObservableMutableProperty,com.intellij.openapi.observable.properties.ObservableProperty):V
- sf:bind(com.intellij.openapi.ui.TextFieldWithBrowseButton,com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.openapi.ui.TextFieldWithBrowseButton
- sf:bind(com.intellij.openapi.ui.TextFieldWithBrowseButton,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.ui.TextFieldWithBrowseButton
- sf:bind(com.intellij.ui.components.DropDownLink,com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.ui.components.DropDownLink
- sf:bind(com.intellij.ui.components.DropDownLink,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.ui.components.DropDownLink
- sf:bind(com.intellij.util.ui.StatusText,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.util.ui.StatusText
- sf:bind(com.intellij.util.ui.ThreeStateCheckBox,com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.util.ui.ThreeStateCheckBox
- sf:bind(com.intellij.util.ui.ThreeStateCheckBox,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.util.ui.ThreeStateCheckBox
- sf:bind(javax.swing.JComboBox,com.intellij.openapi.observable.properties.ObservableMutableProperty):javax.swing.JComboBox
- sf:bind(javax.swing.JComboBox,com.intellij.openapi.observable.properties.ObservableProperty):javax.swing.JComboBox
- sf:bind(javax.swing.JLabel,com.intellij.openapi.observable.properties.ObservableProperty):javax.swing.JLabel
- sf:bind(javax.swing.JList,com.intellij.openapi.observable.properties.ObservableMutableProperty):javax.swing.JList
- sf:bind(javax.swing.JList,com.intellij.openapi.observable.properties.ObservableProperty):javax.swing.JList
- sf:bind(javax.swing.JToggleButton,com.intellij.openapi.observable.properties.ObservableMutableProperty):javax.swing.JToggleButton
- sf:bind(javax.swing.JToggleButton,com.intellij.openapi.observable.properties.ObservableProperty):javax.swing.JToggleButton
- sf:bind(javax.swing.JTree,com.intellij.openapi.observable.properties.ObservableMutableProperty):javax.swing.JTree
- sf:bind(javax.swing.JTree,com.intellij.openapi.observable.properties.ObservableProperty):javax.swing.JTree
- sf:bind(javax.swing.text.JTextComponent,com.intellij.openapi.observable.properties.ObservableMutableProperty):javax.swing.text.JTextComponent
- sf:bind(javax.swing.text.JTextComponent,com.intellij.openapi.observable.properties.ObservableProperty):javax.swing.text.JTextComponent
- sf:bindBooleanStorage(com.intellij.openapi.observable.properties.ObservableMutableProperty,java.lang.String):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:bindEmptyText(com.intellij.openapi.ui.TextFieldWithBrowseButton,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.ui.TextFieldWithBrowseButton
- sf:bindEmptyText(com.intellij.util.ui.ComponentWithEmptyText,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.util.ui.ComponentWithEmptyText
- sf:bindEnabled(java.awt.Component,com.intellij.openapi.observable.properties.ObservableProperty):java.awt.Component
- sf:bindIntStorage(com.intellij.openapi.observable.properties.ObservableMutableProperty,java.lang.String):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:bindStorage(com.intellij.openapi.observable.properties.ObservableMutableProperty,java.lang.String):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:bindVisible(java.awt.Component,com.intellij.openapi.observable.properties.ObservableProperty):java.awt.Component
- sf:lockOrSkip(java.util.concurrent.atomic.AtomicBoolean,kotlin.jvm.functions.Function0):V
f:com.intellij.openapi.observable.util.ListenerUiUtil
- sf:onceWhenFocusGained(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:onceWhenFocusGained$default(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:onceWhenTreeChanged(javax.swing.JTree,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- sf:onceWhenTreeChanged(javax.swing.tree.TreeModel,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:onceWhenTreeChanged$default(javax.swing.JTree,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:onceWhenTreeChanged$default(javax.swing.tree.TreeModel,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenCaretMoved(javax.swing.text.JTextComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenCaretMoved$default(javax.swing.text.JTextComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenDocumentChanged(com.intellij.ui.EditorTextComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- sf:whenDocumentChanged(javax.swing.text.Document,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenDocumentChanged$default(com.intellij.ui.EditorTextComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenDocumentChanged$default(javax.swing.text.Document,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenFocusGained(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenFocusGained$default(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenFocusLost(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenFocusLost$default(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bsf:whenItemSelected(com.intellij.ui.components.DropDownLink,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bsf:whenItemSelected(java.awt.ItemSelectable,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bsf:whenItemSelected(javax.swing.JComboBox,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenItemSelected$default(com.intellij.ui.components.DropDownLink,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenItemSelected$default(java.awt.ItemSelectable,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenItemSelected$default(javax.swing.JComboBox,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenKeyPressed(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenKeyPressed$default(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenKeyReleased(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenKeyReleased$default(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenKeyTyped(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenKeyTyped$default(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenListChanged(javax.swing.ListModel,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenListChanged$default(javax.swing.ListModel,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenMouseMoved(javax.swing.JComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenMouseMoved$default(javax.swing.JComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenMousePressed(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenMousePressed$default(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenMouseReleased(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenMouseReleased$default(java.awt.Component,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenPopupMenuWillBecomeInvisible(javax.swing.JComboBox,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenPopupMenuWillBecomeInvisible$default(javax.swing.JComboBox,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenSizeChanged(javax.swing.JComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenSizeChanged$default(javax.swing.JComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenStateChanged(java.awt.ItemSelectable,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenStateChanged$default(java.awt.ItemSelectable,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenTableChanged(com.intellij.ui.table.TableView,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- sf:whenTableChanged(com.intellij.util.ui.TableViewModel,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenTableChanged$default(com.intellij.ui.table.TableView,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenTableChanged$default(com.intellij.util.ui.TableViewModel,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bsf:whenTextChanged(com.intellij.openapi.ui.TextFieldWithBrowseButton,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bsf:whenTextChanged(com.intellij.ui.SearchTextField,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bsf:whenTextChanged(javax.swing.text.Document,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bsf:whenTextChanged(javax.swing.text.JTextComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenTextChanged$default(com.intellij.openapi.ui.TextFieldWithBrowseButton,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenTextChanged$default(com.intellij.ui.SearchTextField,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenTextChanged$default(javax.swing.text.Document,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenTextChanged$default(javax.swing.text.JTextComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenTreeChanged(javax.swing.JTree,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- sf:whenTreeChanged(javax.swing.tree.TreeModel,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenTreeChanged$default(javax.swing.JTree,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenTreeChanged$default(javax.swing.tree.TreeModel,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
f:com.intellij.openapi.observable.util.ListenerWithValueUiUtil
- sf:whenItemSelected(com.intellij.ui.components.DropDownLink,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- sf:whenItemSelected(javax.swing.JComboBox,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenItemSelected$default(com.intellij.ui.components.DropDownLink,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenItemSelected$default(javax.swing.JComboBox,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- sf:whenTextChanged(com.intellij.openapi.ui.TextFieldWithBrowseButton,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- sf:whenTextChanged(com.intellij.ui.SearchTextField,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- sf:whenTextChanged(javax.swing.text.Document,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- sf:whenTextChanged(javax.swing.text.JTextComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:whenTextChanged$default(com.intellij.openapi.ui.TextFieldWithBrowseButton,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenTextChanged$default(com.intellij.ui.SearchTextField,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenTextChanged$default(javax.swing.text.Document,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:whenTextChanged$default(javax.swing.text.JTextComponent,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
f:com.intellij.openapi.observable.util.ModificationTrackerUtilKt
- sf:createPropertyModificationTracker(com.intellij.openapi.observable.properties.ObservableMutableProperty,com.intellij.openapi.Disposable):com.intellij.openapi.util.ModificationTracker
- bs:createPropertyModificationTracker$default(com.intellij.openapi.observable.properties.ObservableMutableProperty,com.intellij.openapi.Disposable,I,java.lang.Object):com.intellij.openapi.util.ModificationTracker
- sf:createTextModificationTracker(javax.swing.JTextField,com.intellij.openapi.Disposable):com.intellij.openapi.util.ModificationTracker
- bs:createTextModificationTracker$default(javax.swing.JTextField,com.intellij.openapi.Disposable,I,java.lang.Object):com.intellij.openapi.util.ModificationTracker
- sf:plus(com.intellij.openapi.util.ModificationTracker,com.intellij.openapi.util.ModificationTracker):com.intellij.openapi.util.ModificationTracker
f:com.intellij.openapi.observable.util.PropertyOperationUtil
- sf:and(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:div(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:equalsTo(com.intellij.openapi.observable.properties.ObservableProperty,java.lang.Object):com.intellij.openapi.observable.properties.ObservableProperty
- sf:isNotNull(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:isNull(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:joinCanonicalPath(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.observable.properties.ObservableProperty[]):com.intellij.openapi.observable.properties.ObservableProperty
- sf:joinSystemDependentPath(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.observable.properties.ObservableProperty[]):com.intellij.openapi.observable.properties.ObservableProperty
- sf:minus(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:not(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:notEqualsTo(com.intellij.openapi.observable.properties.ObservableProperty,java.lang.Object):com.intellij.openapi.observable.properties.ObservableProperty
- sf:notNull(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:operation(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.observable.properties.ObservableProperty,kotlin.jvm.functions.Function2):com.intellij.openapi.observable.properties.ObservableProperty
- sf:operation(java.util.List,kotlin.jvm.functions.Function1):com.intellij.openapi.observable.properties.ObservableProperty
- sf:operation(com.intellij.openapi.observable.properties.ObservableProperty[],kotlin.jvm.functions.Function1):com.intellij.openapi.observable.properties.ObservableProperty
- sf:or(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:plus(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:times(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:toStringBooleanProperty(com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:toStringIntProperty(com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:toStringProperty(com.intellij.openapi.observable.properties.ObservableMutableProperty,kotlin.jvm.functions.Function1):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:toStringProperty(com.intellij.openapi.observable.properties.ObservableMutableProperty,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:toStringProperty(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:toUiPathProperty(com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:toUiPathProperty(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:transform(com.intellij.openapi.observable.properties.ObservableMutableProperty,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:transform(com.intellij.openapi.observable.properties.ObservableProperty,kotlin.jvm.functions.Function1):com.intellij.openapi.observable.properties.ObservableProperty
- sf:trim(com.intellij.openapi.observable.properties.ObservableMutableProperty):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:trim(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
- sf:xor(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.observable.properties.ObservableProperty
f:com.intellij.openapi.observable.util.PropertyUiUtilKt
- sf:getHeightProperty(javax.swing.JComponent):com.intellij.openapi.observable.properties.ObservableProperty
- sf:getProportionProperty(com.intellij.openapi.ui.Splitter):com.intellij.openapi.observable.properties.ObservableMutableProperty
- sf:getSizeProperty(javax.swing.JComponent):com.intellij.openapi.observable.properties.ObservableProperty
- sf:getWidthProperty(javax.swing.JComponent):com.intellij.openapi.observable.properties.ObservableProperty
f:com.intellij.openapi.observable.util.RevertOnDisposeUtilKt
- sf:addActionListener(com.intellij.openapi.ui.ComponentWithBrowseButton,com.intellij.openapi.Disposable,java.awt.event.ActionListener):V
- bs:addActionListener$default(com.intellij.openapi.ui.ComponentWithBrowseButton,com.intellij.openapi.Disposable,java.awt.event.ActionListener,I,java.lang.Object):V
- sf:addCaretListener(javax.swing.text.JTextComponent,com.intellij.openapi.Disposable,javax.swing.event.CaretListener):V
- bs:addCaretListener$default(javax.swing.text.JTextComponent,com.intellij.openapi.Disposable,javax.swing.event.CaretListener,I,java.lang.Object):V
- sf:addComponent(java.awt.Container,java.awt.Component,com.intellij.openapi.Disposable):V
- bs:addComponent$default(java.awt.Container,java.awt.Component,com.intellij.openapi.Disposable,I,java.lang.Object):V
- sf:addComponentListener(java.awt.Component,com.intellij.openapi.Disposable,java.awt.event.ComponentListener):V
- bs:addComponentListener$default(java.awt.Component,com.intellij.openapi.Disposable,java.awt.event.ComponentListener,I,java.lang.Object):V
- sf:addDocumentListener(com.intellij.ui.EditorTextComponent,com.intellij.openapi.Disposable,com.intellij.openapi.editor.event.DocumentListener):V
- sf:addDocumentListener(javax.swing.text.Document,com.intellij.openapi.Disposable,javax.swing.event.DocumentListener):V
- bs:addDocumentListener$default(com.intellij.ui.EditorTextComponent,com.intellij.openapi.Disposable,com.intellij.openapi.editor.event.DocumentListener,I,java.lang.Object):V
- bs:addDocumentListener$default(javax.swing.text.Document,com.intellij.openapi.Disposable,javax.swing.event.DocumentListener,I,java.lang.Object):V
- sf:addFocusListener(java.awt.Component,com.intellij.openapi.Disposable,java.awt.event.FocusListener):V
- bs:addFocusListener$default(java.awt.Component,com.intellij.openapi.Disposable,java.awt.event.FocusListener,I,java.lang.Object):V
- sf:addItemListener(java.awt.ItemSelectable,com.intellij.openapi.Disposable,java.awt.event.ItemListener):V
- bs:addItemListener$default(java.awt.ItemSelectable,com.intellij.openapi.Disposable,java.awt.event.ItemListener,I,java.lang.Object):V
- sf:addKeyListener(java.awt.Component,com.intellij.openapi.Disposable,java.awt.event.KeyListener):V
- bs:addKeyListener$default(java.awt.Component,com.intellij.openapi.Disposable,java.awt.event.KeyListener,I,java.lang.Object):V
- sf:addListDataListener(javax.swing.ListModel,com.intellij.openapi.Disposable,javax.swing.event.ListDataListener):V
- bs:addListDataListener$default(javax.swing.ListModel,com.intellij.openapi.Disposable,javax.swing.event.ListDataListener,I,java.lang.Object):V
- sf:addMouseHoverListener(javax.swing.JComponent,com.intellij.openapi.Disposable,com.intellij.ui.hover.HoverListener):V
- bs:addMouseHoverListener$default(javax.swing.JComponent,com.intellij.openapi.Disposable,com.intellij.ui.hover.HoverListener,I,java.lang.Object):V
- sf:addMouseListener(java.awt.Component,com.intellij.openapi.Disposable,java.awt.event.MouseListener):V
- bs:addMouseListener$default(java.awt.Component,com.intellij.openapi.Disposable,java.awt.event.MouseListener,I,java.lang.Object):V
- sf:addPopupMenuListener(javax.swing.JComboBox,com.intellij.openapi.Disposable,javax.swing.event.PopupMenuListener):V
- bs:addPopupMenuListener$default(javax.swing.JComboBox,com.intellij.openapi.Disposable,javax.swing.event.PopupMenuListener,I,java.lang.Object):V
- sf:addPropertyChangeListener(java.awt.Component,java.lang.String,com.intellij.openapi.Disposable,java.beans.PropertyChangeListener):V
- bs:addPropertyChangeListener$default(java.awt.Component,java.lang.String,com.intellij.openapi.Disposable,java.beans.PropertyChangeListener,I,java.lang.Object):V
- sf:addTableModelListener(com.intellij.util.ui.TableViewModel,com.intellij.openapi.Disposable,javax.swing.event.TableModelListener):V
- bs:addTableModelListener$default(com.intellij.util.ui.TableViewModel,com.intellij.openapi.Disposable,javax.swing.event.TableModelListener,I,java.lang.Object):V
- sf:addTreeModelListener(javax.swing.tree.TreeModel,com.intellij.openapi.Disposable,javax.swing.event.TreeModelListener):V
- bs:addTreeModelListener$default(javax.swing.tree.TreeModel,com.intellij.openapi.Disposable,javax.swing.event.TreeModelListener,I,java.lang.Object):V
- sf:set(com.intellij.openapi.observable.properties.ObservableMutableProperty,java.lang.Object,com.intellij.openapi.Disposable):V
- bs:set$default(com.intellij.openapi.observable.properties.ObservableMutableProperty,java.lang.Object,com.intellij.openapi.Disposable,I,java.lang.Object):V
a:com.intellij.openapi.options.BaseConfigurable
- com.intellij.openapi.options.Configurable
- p:myModified:Z
- <init>():V
- getPreferredFocusedComponent():javax.swing.JComponent
- isModified():Z
- p:setModified(Z):V
a:com.intellij.openapi.options.BoundConfigurable
- com.intellij.openapi.options.DslConfigurableBase
- com.intellij.openapi.options.Configurable
- <init>(java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
a:com.intellij.openapi.options.BoundSearchableConfigurable
- com.intellij.openapi.options.BoundConfigurable
- com.intellij.openapi.options.SearchableConfigurable
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- getId():java.lang.String
c:com.intellij.openapi.options.CancelledConfigurationException
- com.intellij.openapi.options.ConfigurationException
- <init>():V
a:com.intellij.openapi.options.ConfigurableBase
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- p:<init>(java.lang.String,java.lang.String,java.lang.String):V
- f:apply():V
- f:createComponent():javax.swing.JComponent
- pa:createUi():com.intellij.openapi.options.ConfigurableUi
- disposeUIResources():V
- enableSearch(java.lang.String):java.lang.Runnable
- f:getDisplayName():java.lang.String
- f:getHelpTopic():java.lang.String
- f:getId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- pa:getSettings():java.lang.Object
- f:isModified():Z
- reset():V
com.intellij.openapi.options.ConfigurableGroup
- com.intellij.openapi.options.Configurable$Composite
- getDescription():java.lang.String
- a:getDisplayName():java.lang.String
a:com.intellij.openapi.options.ConfigurableSchemeExporter
- com.intellij.openapi.options.SchemeExporter
- <init>():V
- a:exportScheme(com.intellij.openapi.options.Scheme,java.io.OutputStream,java.lang.Object):V
- f:exportScheme(com.intellij.openapi.project.Project,com.intellij.openapi.options.Scheme,java.io.OutputStream):V
- a:getConfiguration(java.awt.Component,com.intellij.openapi.options.Scheme):java.lang.Object
com.intellij.openapi.options.ConfigurableUi
- a:apply(java.lang.Object):V
- enableSearch(java.lang.String):java.lang.Runnable
- a:getComponent():javax.swing.JComponent
- getPreferredFocusedComponent():javax.swing.JComponent
- a:isModified(java.lang.Object):Z
- a:reset(java.lang.Object):V
a:com.intellij.openapi.options.DialogPanelConfigurableBase
- com.intellij.openapi.options.DialogPanelUnnamedConfigurableBase
- com.intellij.openapi.options.Configurable
- <init>():V
a:com.intellij.openapi.options.DialogPanelUnnamedConfigurableBase
- com.intellij.openapi.options.UnnamedConfigurable
- <init>():V
- f:apply():V
- f:cancel():V
- f:createComponent():javax.swing.JComponent
- pa:createPanel():com.intellij.openapi.ui.DialogPanel
- f:disposeUIResources():V
- f:getPreferredFocusedComponent():javax.swing.JComponent
- f:isModified():Z
- f:reset():V
a:com.intellij.openapi.options.DslConfigurableBase
- com.intellij.openapi.options.UnnamedConfigurable
- <init>():V
- apply():V
- f:createComponent():javax.swing.JComponent
- a:createPanel():com.intellij.openapi.ui.DialogPanel
- disposeUIResources():V
- pf:getDisposable():com.intellij.openapi.Disposable
- getPreferredFocusedComponent():javax.swing.JComponent
- isModified():Z
- reset():V
c:com.intellij.openapi.options.GroupSettingsBuilder
- com.intellij.openapi.options.CompositeSettingsBuilder
- <init>(com.intellij.openapi.options.SettingsEditorGroup):V
- createCompoundEditor():javax.swing.JComponent
- getEditors():java.util.Collection
- selectEditor(java.lang.String):V
com.intellij.openapi.options.MasterDetails
- a:getDetails():com.intellij.openapi.ui.DetailsComponent
- a:getMaster():javax.swing.JComponent
- a:getToolbar():javax.swing.JComponent
- a:initUi():V
com.intellij.openapi.options.NonDefaultProjectConfigurable
a:com.intellij.openapi.options.SchemeExporter
- <init>():V
- exportScheme(com.intellij.openapi.project.Project,com.intellij.openapi.options.Scheme,java.io.OutputStream):V
- getDefaultDir(com.intellij.openapi.project.Project):com.intellij.openapi.vfs.VirtualFile
- getDefaultFileName(java.lang.String):java.lang.String
- a:getExtension():java.lang.String
com.intellij.openapi.options.SchemeFactory
- a:createNewScheme(java.lang.String):com.intellij.openapi.options.Scheme
c:com.intellij.openapi.options.SchemeImportException
- java.lang.Exception
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.Throwable):V
- isWarning():Z
- setWarning():com.intellij.openapi.options.SchemeImportException
com.intellij.openapi.options.SchemeImporter
- getAdditionalImportInfo(com.intellij.openapi.options.Scheme):java.lang.String
- getImportFile():com.intellij.openapi.vfs.VirtualFile
- a:getSourceExtensions():java.lang.String[]
- a:importScheme(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.options.Scheme,com.intellij.openapi.options.SchemeFactory):com.intellij.openapi.options.Scheme
a:com.intellij.openapi.options.SettingsEditorConfigurable
- com.intellij.openapi.options.BaseConfigurable
- <init>(com.intellij.openapi.options.SettingsEditor,java.lang.Object):V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- getEditor():com.intellij.openapi.options.SettingsEditor
- getSettings():java.lang.Object
- reset():V
f:com.intellij.openapi.options.SettingsEditorWrapper
- com.intellij.openapi.options.SettingsEditor
- <init>(com.intellij.openapi.options.SettingsEditor,java.util.function.Function):V
- applyEditorTo(java.lang.Object):V
- createEditor():javax.swing.JComponent
- disposeEditor():V
- resetEditorFrom(java.lang.Object):V
a:com.intellij.openapi.options.ShowSettingsUtil
- <init>():V
- a:editConfigurable(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable):Z
- a:editConfigurable(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable,java.lang.Runnable):Z
- a:editConfigurable(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable,java.util.function.Consumer):Z
- a:editConfigurable(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.options.Configurable):Z
- a:editConfigurable(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.options.Configurable,Z):Z
- a:editConfigurable(java.awt.Component,com.intellij.openapi.options.Configurable):Z
- a:editConfigurable(java.awt.Component,com.intellij.openapi.options.Configurable,java.lang.Runnable):Z
- a:editConfigurable(java.awt.Component,java.lang.String):Z
- a:editConfigurable(java.awt.Component,java.lang.String,com.intellij.openapi.options.Configurable):Z
- a:editConfigurable(java.awt.Component,java.lang.String,java.lang.Runnable):Z
- s:getInstance():com.intellij.openapi.options.ShowSettingsUtil
- s:getSettingsMenuName():java.lang.String
- a:showSettingsDialog(com.intellij.openapi.project.Project,com.intellij.openapi.options.Configurable):V
- a:showSettingsDialog(com.intellij.openapi.project.Project,java.lang.Class):V
- a:showSettingsDialog(com.intellij.openapi.project.Project,java.lang.Class,java.util.function.Consumer):V
- a:showSettingsDialog(com.intellij.openapi.project.Project,java.lang.String):V
- a:showSettingsDialog(com.intellij.openapi.project.Project,java.util.function.Predicate,java.util.function.Consumer):V
- a:showSettingsDialog(com.intellij.openapi.project.Project,com.intellij.openapi.options.ConfigurableGroup[]):V
f:com.intellij.openapi.options.SimpleConfigurable
- com.intellij.openapi.options.ConfigurableBase
- s:create(java.lang.String,java.lang.String,java.lang.Class,com.intellij.openapi.util.Getter):com.intellij.openapi.options.SimpleConfigurable
- s:create(java.lang.String,java.lang.String,java.lang.Class,java.util.function.Supplier):com.intellij.openapi.options.SimpleConfigurable
- s:create(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,com.intellij.openapi.util.Getter):com.intellij.openapi.options.SimpleConfigurable
- s:create(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.util.function.Supplier):com.intellij.openapi.options.SimpleConfigurable
- getOriginalClass():java.lang.Class
a:com.intellij.openapi.options.colors.AbstractKeyDescriptor
- p:<init>(java.util.function.Supplier,java.lang.Object):V
- getDisplayName():java.lang.String
- getKey():java.lang.Object
pc:com.intellij.openapi.options.colors.AbstractKeyDescriptor$StaticSupplier
- java.util.function.Supplier
- p:<init>(java.lang.String):V
- get():java.lang.String
f:com.intellij.openapi.options.colors.AttributesDescriptor
- com.intellij.openapi.options.colors.AbstractKeyDescriptor
- <init>(java.lang.String,com.intellij.openapi.editor.colors.TextAttributesKey):V
- <init>(java.util.function.Supplier,com.intellij.openapi.editor.colors.TextAttributesKey):V
- getKey():com.intellij.openapi.editor.colors.TextAttributesKey
com.intellij.openapi.options.colors.ColorAndFontDescriptorsProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getAttributeDescriptors():com.intellij.openapi.options.colors.AttributesDescriptor[]
- a:getColorDescriptors():com.intellij.openapi.options.colors.ColorDescriptor[]
- a:getDisplayName():java.lang.String
f:com.intellij.openapi.options.colors.ColorDescriptor
- com.intellij.openapi.options.colors.AbstractKeyDescriptor
- sf:EMPTY_ARRAY:com.intellij.openapi.options.colors.ColorDescriptor[]
- <init>(java.lang.String,com.intellij.openapi.editor.colors.ColorKey,com.intellij.openapi.options.colors.ColorDescriptor$Kind):V
- <init>(java.util.function.Supplier,com.intellij.openapi.editor.colors.ColorKey,com.intellij.openapi.options.colors.ColorDescriptor$Kind):V
- getKey():com.intellij.openapi.editor.colors.ColorKey
- getKind():com.intellij.openapi.options.colors.ColorDescriptor$Kind
e:com.intellij.openapi.options.colors.ColorDescriptor$Kind
- java.lang.Enum
- sf:BACKGROUND:com.intellij.openapi.options.colors.ColorDescriptor$Kind
- sf:BACKGROUND_WITH_TRANSPARENCY:com.intellij.openapi.options.colors.ColorDescriptor$Kind
- sf:FOREGROUND:com.intellij.openapi.options.colors.ColorDescriptor$Kind
- sf:FOREGROUND_WITH_TRANSPARENCY:com.intellij.openapi.options.colors.ColorDescriptor$Kind
- isBackground():Z
- isForeground():Z
- isWithTransparency():Z
- s:valueOf(java.lang.String):com.intellij.openapi.options.colors.ColorDescriptor$Kind
- s:values():com.intellij.openapi.options.colors.ColorDescriptor$Kind[]
com.intellij.openapi.options.colors.ColorSettingsPage
- com.intellij.openapi.options.colors.ColorAndFontDescriptorsProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- customizeColorScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.colors.EditorColorsScheme
- getAdditionalHighlightingTagToColorKeyMap():java.util.Map
- a:getAdditionalHighlightingTagToDescriptorMap():java.util.Map
- getAdditionalInlineElementToDescriptorMap():java.util.Map
- a:getDemoText():java.lang.String
- a:getHighlighter():com.intellij.openapi.fileTypes.SyntaxHighlighter
- a:getIcon():javax.swing.Icon
- getPreviewEditorCustomizer():com.intellij.openapi.options.colors.ColorSettingsPage$PreviewCustomizer
com.intellij.openapi.options.colors.ColorSettingsPage$PreviewCustomizer
- a:addCustomizations(com.intellij.openapi.editor.Editor,java.lang.String):com.intellij.openapi.util.TextRange
- a:getCustomizationAt(com.intellij.openapi.editor.Editor,java.awt.Point):java.lang.String
- a:removeCustomizations(com.intellij.openapi.editor.Editor):V
a:com.intellij.openapi.options.colors.ColorSettingsPages
- <init>():V
- a:getAttributeDescriptor(com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.openapi.util.Pair
- a:getColorDescriptor(com.intellij.openapi.editor.colors.ColorKey):com.intellij.openapi.util.Pair
- s:getInstance():com.intellij.openapi.options.colors.ColorSettingsPages
- a:getRegisteredPages():com.intellij.openapi.options.colors.ColorSettingsPage[]
- a:registerPage(com.intellij.openapi.options.colors.ColorSettingsPage):V
com.intellij.openapi.options.colors.EditorHighlightingProvidingColorSettingsPage
- com.intellij.openapi.options.colors.ColorSettingsPage
- a:createEditorHighlighter(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.highlighter.EditorHighlighter
com.intellij.openapi.options.colors.RainbowColorSettingsPage
- com.intellij.openapi.options.colors.ColorSettingsPage
- a:getLanguage():com.intellij.lang.Language
- getRainbowDescriptors():java.util.Map
- isRainbowType(com.intellij.openapi.editor.colors.TextAttributesKey):Z
a:com.intellij.openapi.project.DumbAwareToggleAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- p:<init>():V
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- p:<init>(java.util.function.Supplier):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
f:com.intellij.openapi.project.DumbUnawareHider
- com.intellij.ui.components.JBPanelWithEmptyText
- <init>(javax.swing.JComponent):V
- getContent():javax.swing.JComponent
- setContentVisible(Z):V
f:com.intellij.openapi.project.LightEditActionFactory
- s:create(com.intellij.util.Consumer):com.intellij.openapi.project.DumbAwareAction
- s:create(java.lang.String,com.intellij.util.Consumer):com.intellij.openapi.project.DumbAwareAction
a:com.intellij.openapi.project.ProjectManagerAdapter
- com.intellij.openapi.project.ProjectManagerListener
- <init>():V
a:com.intellij.openapi.project.ProjectReloadState
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.project.ProjectReloadState
- a:isAfterAutomaticReload():Z
- a:onBeforeAutomaticProjectReload():V
f:com.intellij.openapi.project.configuration.HeadlessLogging
- sf:INSTANCE:com.intellij.openapi.project.configuration.HeadlessLogging
- f:logFatalError(java.lang.String):V
- f:logFatalError(java.lang.Throwable):V
- f:logMessage(java.lang.String):V
- f:logWarning(java.lang.String):V
- f:logWarning(java.lang.Throwable):V
- f:loggingFlow():kotlinx.coroutines.flow.SharedFlow
com.intellij.openapi.project.configuration.HeadlessLogging$HeadlessLoggingService
- sf:Companion:com.intellij.openapi.project.configuration.HeadlessLogging$HeadlessLoggingService$Companion
- a:logEntry(com.intellij.openapi.project.configuration.HeadlessLogging$LogEntry):V
- a:loggingFlow():kotlinx.coroutines.flow.SharedFlow
f:com.intellij.openapi.project.configuration.HeadlessLogging$HeadlessLoggingService$Companion
- f:getInstance():com.intellij.openapi.project.configuration.HeadlessLogging$HeadlessLoggingService
f:com.intellij.openapi.project.configuration.HeadlessLogging$LogEntry
- <init>(com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind,com.intellij.openapi.project.configuration.HeadlessLogging$Message):V
- f:component1():com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind
- f:component2():com.intellij.openapi.project.configuration.HeadlessLogging$Message
- f:copy(com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind,com.intellij.openapi.project.configuration.HeadlessLogging$Message):com.intellij.openapi.project.configuration.HeadlessLogging$LogEntry
- bs:copy$default(com.intellij.openapi.project.configuration.HeadlessLogging$LogEntry,com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind,com.intellij.openapi.project.configuration.HeadlessLogging$Message,I,java.lang.Object):com.intellij.openapi.project.configuration.HeadlessLogging$LogEntry
- equals(java.lang.Object):Z
- f:getMessage():com.intellij.openapi.project.configuration.HeadlessLogging$Message
- f:getSeverity():com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind
- hashCode():I
com.intellij.openapi.project.configuration.HeadlessLogging$Message
- a:representation():java.lang.String
f:com.intellij.openapi.project.configuration.HeadlessLogging$Message$Exception
- com.intellij.openapi.project.configuration.HeadlessLogging$Message
- bsf:box-impl(java.lang.Throwable):com.intellij.openapi.project.configuration.HeadlessLogging$Message$Exception
- s:constructor-impl(java.lang.Throwable):java.lang.Throwable
- equals(java.lang.Object):Z
- s:equals-impl(java.lang.Throwable,java.lang.Object):Z
- sf:equals-impl0(java.lang.Throwable,java.lang.Throwable):Z
- f:getException():java.lang.Throwable
- hashCode():I
- s:hashCode-impl(java.lang.Throwable):I
- representation():java.lang.String
- s:representation-impl(java.lang.Throwable):java.lang.String
- s:toString-impl(java.lang.Throwable):java.lang.String
- bf:unbox-impl():java.lang.Throwable
f:com.intellij.openapi.project.configuration.HeadlessLogging$Message$Plain
- com.intellij.openapi.project.configuration.HeadlessLogging$Message
- bsf:box-impl(java.lang.String):com.intellij.openapi.project.configuration.HeadlessLogging$Message$Plain
- s:constructor-impl(java.lang.String):java.lang.String
- equals(java.lang.Object):Z
- s:equals-impl(java.lang.String,java.lang.Object):Z
- sf:equals-impl0(java.lang.String,java.lang.String):Z
- f:getMessage():java.lang.String
- hashCode():I
- s:hashCode-impl(java.lang.String):I
- representation():java.lang.String
- s:representation-impl(java.lang.String):java.lang.String
- s:toString-impl(java.lang.String):java.lang.String
- bf:unbox-impl():java.lang.String
e:com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind
- java.lang.Enum
- sf:Fatal:com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind
- sf:Info:com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind
- sf:Warning:com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind
- s:values():com.intellij.openapi.project.configuration.HeadlessLogging$SeverityKind[]
com.intellij.openapi.project.impl.ProjectLifecycleListener
- sf:TOPIC:com.intellij.util.messages.Topic
- afterProjectClosed(com.intellij.openapi.project.Project):V
f:com.intellij.openapi.rd.GraphicsExKt
- sf:fill2DRect(java.awt.Graphics2D,java.awt.Rectangle,java.awt.Color):V
- sf:fill2DRoundRect(java.awt.Graphics2D,java.awt.Rectangle,D,java.awt.Color):V
- sf:paint2DLine(java.awt.Graphics2D,D,D,D,D,com.intellij.ui.paint.LinePainter2D$StrokeType,D,java.awt.Color):V
- sf:paint2DLine(java.awt.Graphics2D,java.awt.Point,java.awt.Point,com.intellij.ui.paint.LinePainter2D$StrokeType,D,java.awt.Color):V
com.intellij.openapi.roots.ui.CellAppearanceEx
- a:customize(com.intellij.ui.SimpleColoredComponent):V
- a:getText():java.lang.String
a:com.intellij.openapi.roots.ui.FileAppearanceService
- <init>():V
- a:empty():com.intellij.openapi.roots.ui.CellAppearanceEx
- a:forInvalidUrl(java.lang.String):com.intellij.openapi.roots.ui.CellAppearanceEx
- a:forIoFile(java.io.File):com.intellij.openapi.roots.ui.CellAppearanceEx
- a:forVirtualFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.roots.ui.CellAppearanceEx
- s:getInstance():com.intellij.openapi.roots.ui.FileAppearanceService
com.intellij.openapi.roots.ui.ModifiableCellAppearanceEx
- com.intellij.openapi.roots.ui.CellAppearanceEx
- a:setIcon(javax.swing.Icon):V
a:com.intellij.openapi.roots.ui.SdkAppearanceService
- <init>():V
- a:forNullSdk(Z):com.intellij.openapi.roots.ui.CellAppearanceEx
- a:forSdk(com.intellij.openapi.projectRoots.Sdk,Z,Z,Z):com.intellij.openapi.roots.ui.CellAppearanceEx
- a:forSdk(com.intellij.openapi.projectRoots.SdkTypeId,java.lang.String,java.lang.String,Z,Z,Z):com.intellij.openapi.roots.ui.CellAppearanceEx
- s:getInstance():com.intellij.openapi.roots.ui.SdkAppearanceService
a:com.intellij.openapi.roots.ui.util.BaseTextCommentCellAppearance
- com.intellij.openapi.roots.ui.CellAppearanceEx
- <init>():V
- customize(com.intellij.ui.SimpleColoredComponent):V
- pa:getIcon():javax.swing.Icon
- pa:getPrimaryText():java.lang.String
- pa:getSecondaryText():java.lang.String
- getText():java.lang.String
- setCommentAttributes(com.intellij.ui.SimpleTextAttributes):V
- setTextAttributes(com.intellij.ui.SimpleTextAttributes):V
c:com.intellij.openapi.roots.ui.util.CompositeAppearance
- com.intellij.openapi.roots.ui.ModifiableCellAppearanceEx
- <init>():V
- p:addSectionAt(I,com.intellij.openapi.roots.ui.util.CompositeAppearance$TextSection):V
- customize(com.intellij.ui.SimpleColoredComponent):V
- equals(java.lang.Object):Z
- getBeginning():com.intellij.openapi.roots.ui.util.CompositeAppearance$DequeEnd
- getEnding():com.intellij.openapi.roots.ui.util.CompositeAppearance$DequeEnd
- getIcon():javax.swing.Icon
- getSectionsIterator():java.util.Iterator
- getSuffix():com.intellij.openapi.roots.ui.util.CompositeAppearance$DequeEnd
- getText():java.lang.String
- hashCode():I
- s:invalid(java.lang.String):com.intellij.openapi.roots.ui.util.CompositeAppearance
- setIcon(javax.swing.Icon):V
- s:single(java.lang.String):com.intellij.openapi.roots.ui.util.CompositeAppearance
- s:single(java.lang.String,com.intellij.ui.SimpleTextAttributes):com.intellij.openapi.roots.ui.util.CompositeAppearance
- s:textComment(java.lang.String,java.lang.String):com.intellij.openapi.roots.ui.util.CompositeAppearance
a:com.intellij.openapi.roots.ui.util.CompositeAppearance$DequeEnd
- <init>(com.intellij.openapi.roots.ui.util.CompositeAppearance):V
- addComment(java.lang.String):V
- addComment(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- a:addSection(com.intellij.openapi.roots.ui.util.CompositeAppearance$TextSection):V
- addSurrounded(java.lang.String,java.lang.String,java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- addText(java.lang.String):V
- addText(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):V
- addText(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- getAppearance():com.intellij.openapi.roots.ui.util.CompositeAppearance
c:com.intellij.openapi.roots.ui.util.CompositeAppearance$TextSection
- <init>(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):V
- equals(java.lang.Object):Z
- getText():java.lang.String
- getTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
- hashCode():I
c:com.intellij.openapi.roots.ui.util.SimpleTextCellAppearance
- com.intellij.openapi.roots.ui.ModifiableCellAppearanceEx
- <init>(java.lang.String,javax.swing.Icon,com.intellij.ui.SimpleTextAttributes):V
- customize(com.intellij.ui.SimpleColoredComponent):V
- getText():java.lang.String
- getTextAttributes():com.intellij.ui.SimpleTextAttributes
- s:invalid(java.lang.String,javax.swing.Icon):com.intellij.openapi.roots.ui.util.SimpleTextCellAppearance
- s:regular(java.lang.String,javax.swing.Icon):com.intellij.openapi.roots.ui.util.SimpleTextCellAppearance
- setIcon(javax.swing.Icon):V
- s:synthetic(java.lang.String,javax.swing.Icon):com.intellij.openapi.roots.ui.util.SimpleTextCellAppearance
a:com.intellij.openapi.ui.AbstractPainter
- com.intellij.openapi.ui.Painter
- <init>():V
- addListener(com.intellij.openapi.ui.Painter$Listener):V
- a:executePaint(java.awt.Component,java.awt.Graphics2D):V
- p:fireNeedsRepaint(javax.swing.JComponent):V
- needsRepaint():Z
- f:paint(java.awt.Component,java.awt.Graphics2D):V
- removeListener(com.intellij.openapi.ui.Painter$Listener):V
- setNeedsRepaint(java.lang.Object,java.lang.Object):java.lang.Object
- setNeedsRepaint(Z):V
- setNeedsRepaint(Z,javax.swing.JComponent):V
f:com.intellij.openapi.ui.BrowseFolderDescriptor
- com.intellij.openapi.fileChooser.FileChooserDescriptor
- sf:Companion:com.intellij.openapi.ui.BrowseFolderDescriptor$Companion
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- sf:asBrowseFolderDescriptor(com.intellij.openapi.fileChooser.FileChooserDescriptor):com.intellij.openapi.ui.BrowseFolderDescriptor
- f:getConvertFileToText():kotlin.jvm.functions.Function1
- f:getConvertPathToText():kotlin.jvm.functions.Function1
- f:getConvertTextToPath():kotlin.jvm.functions.Function1
- f:setConvertFileToText(kotlin.jvm.functions.Function1):V
- f:setConvertPathToText(kotlin.jvm.functions.Function1):V
- f:setConvertTextToPath(kotlin.jvm.functions.Function1):V
f:com.intellij.openapi.ui.BrowseFolderDescriptor$Companion
- f:asBrowseFolderDescriptor(com.intellij.openapi.fileChooser.FileChooserDescriptor):com.intellij.openapi.ui.BrowseFolderDescriptor
- f:withFileToTextConvertor(com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.BrowseFolderDescriptor
- f:withPathToTextConvertor(com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.BrowseFolderDescriptor
- f:withTextToPathConvertor(com.intellij.openapi.fileChooser.FileChooserDescriptor,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.BrowseFolderDescriptor
c:com.intellij.openapi.ui.ComboBox
- com.intellij.openapi.ui.ComboBoxWithWidePopup
- java.awt.event.AWTEventListener
- sf:IS_BORDERLESS_PROPERTY:java.lang.String
- sf:IS_EMBEDDED_PROPERTY:java.lang.String
- sf:IS_TABLE_CELL_EDITOR_PROPERTY:java.lang.String
- sf:TABLE_CELL_EDITOR_PROPERTY:java.lang.String
- p:myPaintingNow:Z
- <init>():V
- <init>(I):V
- <init>(javax.swing.ComboBoxModel):V
- <init>(javax.swing.ComboBoxModel,I):V
- <init>(java.lang.Object[]):V
- <init>(java.lang.Object[],I):V
- addNotify():V
- eventDispatched(java.awt.AWTEvent):V
- getInputMethodRequests():java.awt.im.InputMethodRequests
- f:getMinimumSize():java.awt.Dimension
- getPopup():javax.swing.plaf.basic.ComboPopup
- getPreferredSize():java.awt.Dimension
- isSwingPopup():Z
- isUsePreferredSizeAsMinimum():Z
- paint(java.awt.Graphics):V
- s:registerTableCellEditor(javax.swing.JComboBox,javax.swing.table.TableCellEditor):V
- registerTableCellEditor(javax.swing.table.TableCellEditor):V
- removeNotify():V
- f:setEditor(javax.swing.ComboBoxEditor):V
- setKeySelectionManager(javax.swing.JComboBox$KeySelectionManager):V
- setMinimumAndPreferredWidth(I):V
- setPopupVisible(Z):V
- setSwingPopup(Z):V
- setUsePreferredSizeAsMinimum(Z):V
c:com.intellij.openapi.ui.ComboBoxTableRenderer
- javax.swing.JLabel
- com.intellij.openapi.ui.popup.JBPopupListener
- javax.swing.table.TableCellEditor
- javax.swing.table.TableCellRenderer
- p:myListenerList:javax.swing.event.EventListenerList
- <init>(java.lang.Object[]):V
- addCellEditorListener(javax.swing.event.CellEditorListener):V
- cancelCellEditing():V
- chooseItem(I):V
- p:customizeComponent(java.lang.Object,javax.swing.JTable,Z):V
- p:fireEditingCanceled():V
- p:fireEditingEvent(Z):V
- p:fireEditingStopped():V
- getCellEditorValue():java.lang.Object
- p:getIconFor(java.lang.Object):javax.swing.Icon
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- p:getPreferredSizeMaxValues():I
- p:getSeparatorAbove(java.lang.Object):com.intellij.openapi.ui.popup.ListSeparator
- getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,Z,I,I):java.awt.Component
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
- p:getTextFor(java.lang.Object):java.lang.String
- p:isApplicable(java.lang.Object,I):Z
- isCellEditable(java.util.EventObject):Z
- p:onChosen(java.lang.Object):java.lang.Runnable
- onClosed(com.intellij.openapi.ui.popup.LightweightWindowEvent):V
- p:paintComponent(java.awt.Graphics):V
- removeCellEditorListener(javax.swing.event.CellEditorListener):V
- shouldSelectCell(java.util.EventObject):Z
- stopCellEditing():Z
- withClickCount(I):com.intellij.openapi.ui.ComboBoxTableRenderer
c:com.intellij.openapi.ui.ComboBoxWithWidePopup
- javax.swing.JComboBox
- <init>():V
- <init>(javax.swing.ComboBoxModel):V
- <init>(java.lang.Object[]):V
- getItem():java.lang.Object
- p:getMinLength():I
- getMinimumPopupWidth():I
- setItem(java.lang.Object):V
- setMinLength(I):V
- setRenderer(javax.swing.ListCellRenderer):V
c:com.intellij.openapi.ui.ComboBoxWithWidePopup$AdjustingListCellRenderer
- javax.swing.ListCellRenderer
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
c:com.intellij.openapi.ui.ComponentValidator
- sf:CWBB_PROVIDER:java.util.function.Function
- <init>(com.intellij.openapi.Disposable):V
- andRegisterOnDocumentListener(javax.swing.JComponent):com.intellij.openapi.ui.ComponentValidator
- andRegisterOnDocumentListener(javax.swing.text.JTextComponent):com.intellij.openapi.ui.ComponentValidator
- andStartOnFocusLost():com.intellij.openapi.ui.ComponentValidator
- s:createPopupBuilder(com.intellij.openapi.ui.ValidationInfo,java.util.function.Consumer):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- enableValidation():V
- s:getBorder():javax.swing.border.Border
- s:getInstance(javax.swing.JComponent):java.util.Optional
- getValidationInfo():com.intellij.openapi.ui.ValidationInfo
- installOn(javax.swing.JComponent):com.intellij.openapi.ui.ComponentValidator
- revalidate():V
- updateInfo(com.intellij.openapi.ui.ValidationInfo):V
- withFocusValidator(java.util.function.Supplier):com.intellij.openapi.ui.ComponentValidator
- withHyperlinkListener(javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.ComponentValidator
- withOutlineProvider(java.util.function.Function):com.intellij.openapi.ui.ComponentValidator
- withValidator(java.util.function.Supplier):com.intellij.openapi.ui.ComponentValidator
- s:withinComponent(com.intellij.openapi.ui.ValidationInfo,java.awt.event.MouseEvent):Z
c:com.intellij.openapi.ui.ComponentWithBrowseButton
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- <init>(javax.swing.JComponent,java.awt.event.ActionListener):V
- addActionListener(java.awt.event.ActionListener):V
- addBrowseFolderListener(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor):V
- addBrowseFolderListener(com.intellij.openapi.project.Project,com.intellij.openapi.ui.ComponentWithBrowseButton$BrowseFolderActionListener):V
- addBrowseFolderListener(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor):V
- addBrowseFolderListener(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor,Z):V
- addFileSaverDialog(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileSaverDescriptor,com.intellij.openapi.ui.TextComponentAccessor):V
- dispose():V
- getButton():com.intellij.openapi.ui.FixedSizeButton
- f:getChildComponent():javax.swing.JComponent
- p:getDefaultIcon():javax.swing.Icon
- p:getHoveredIcon():javax.swing.Icon
- p:getIconTooltip():java.lang.String
- s:getTooltip():java.lang.String
- pf:processKeyBinding(javax.swing.KeyStroke,java.awt.event.KeyEvent,I,Z):Z
- removeActionListener(java.awt.event.ActionListener):V
- f:requestFocus():V
- setBackground(java.awt.Color):V
- setButtonEnabled(Z):V
- setButtonIcon(javax.swing.Icon):V
- setButtonVisible(Z):V
- setEnabled(Z):V
- f:setNextFocusableComponent(java.awt.Component):V
- setTextFieldPreferredWidth(I):V
c:com.intellij.openapi.ui.ComponentWithBrowseButton$BrowseFolderActionListener
- com.intellij.openapi.ui.BrowseFolderRunnable
- java.awt.event.ActionListener
- <init>(com.intellij.openapi.ui.ComponentWithBrowseButton,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor):V
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.ui.ComponentWithBrowseButton,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor):V
- actionPerformed(java.awt.event.ActionEvent):V
f:com.intellij.openapi.ui.ComponentWithBrowseButton$MyDoClickAction
- com.intellij.openapi.project.DumbAwareAction
- <init>(com.intellij.openapi.ui.FixedSizeButton):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:addTo(com.intellij.openapi.ui.FixedSizeButton,javax.swing.JComponent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- registerShortcut(javax.swing.JComponent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.ui.DetailsComponent
- <init>():V
- <init>(Z,Z):V
- disposeUIResources():V
- forProject(com.intellij.openapi.project.Project):V
- getComponent():javax.swing.JComponent
- getContentGutter():javax.swing.JComponent
- setBannerActions(javax.swing.Action[]):V
- setBannerMinHeight(I):V
- setContent(javax.swing.JComponent):V
- setDetailsModeEnabled(Z):V
- setEmptyContentText(java.lang.String):com.intellij.openapi.ui.DetailsComponent
- setPaintBorder(Z):V
- setPrefix(java.lang.String[]):V
- setText(java.lang.String[]):V
- update():V
- updateBannerActions():V
com.intellij.openapi.ui.DetailsComponent$Facade
- a:getDetailsComponent():com.intellij.openapi.ui.DetailsComponent
c:com.intellij.openapi.ui.DialogBuilder
- com.intellij.openapi.Disposable
- sf:REQUEST_FOCUS_ENABLED:java.lang.String
- <init>():V
- <init>(com.intellij.openapi.project.Project):V
- <init>(java.awt.Component):V
- addAction(javax.swing.Action):V
- addActionDescriptor(com.intellij.openapi.ui.DialogBuilder$ActionDescriptor):com.intellij.openapi.ui.DialogBuilder$ActionDescriptor
- addCancelAction():com.intellij.openapi.ui.DialogBuilder$CustomizableAction
- addCloseButton():com.intellij.openapi.ui.DialogBuilder$CustomizableAction
- addDisposable(com.intellij.openapi.Disposable):V
- addLeftSideAction(javax.swing.Action):com.intellij.openapi.ui.DialogBuilder
- addOkAction():com.intellij.openapi.ui.DialogBuilder$CustomizableAction
- centerPanel(javax.swing.JComponent):com.intellij.openapi.ui.DialogBuilder
- dimensionKey(java.lang.String):com.intellij.openapi.ui.DialogBuilder
- dispose():V
- getCancelAction():com.intellij.openapi.ui.DialogBuilder$CustomizableAction
- getCenterPanel():java.awt.Component
- getDialogWrapper():com.intellij.openapi.ui.DialogWrapper
- getOkAction():com.intellij.openapi.ui.DialogBuilder$CustomizableAction
- getWindow():java.awt.Window
- okActionEnabled(Z):com.intellij.openapi.ui.DialogBuilder
- removeAllActions():V
- resizable(Z):com.intellij.openapi.ui.DialogBuilder
- setActionDescriptors(com.intellij.openapi.ui.DialogBuilder$ActionDescriptor[]):V
- setButtonsAlignment(I):V
- setCancelOperation(java.lang.Runnable):V
- setCenterPanel(javax.swing.JComponent):V
- setDimensionServiceKey(java.lang.String):V
- setErrorText(java.lang.String):V
- setErrorText(java.lang.String,javax.swing.JComponent):V
- setHelpId(java.lang.String):V
- setNorthPanel(javax.swing.JComponent):com.intellij.openapi.ui.DialogBuilder
- setOkActionEnabled(Z):V
- setOkOperation(java.lang.Runnable):V
- setPreferredFocusComponent(javax.swing.JComponent):V
- setTitle(java.lang.String):V
- show():I
- showAndGet():Z
- showModal(Z):V
- showNotModal():V
- title(java.lang.String):com.intellij.openapi.ui.DialogBuilder
com.intellij.openapi.ui.DialogBuilder$ActionDescriptor
- a:getAction(com.intellij.openapi.ui.DialogWrapper):javax.swing.Action
f:com.intellij.openapi.ui.DialogBuilder$CancelActionDescriptor
- com.intellij.openapi.ui.DialogBuilder$ActionDescriptor
- com.intellij.openapi.ui.DialogBuilder$CustomizableAction
- <init>():V
c:com.intellij.openapi.ui.DialogBuilder$CloseDialogAction
- com.intellij.openapi.ui.DialogBuilder$DialogActionDescriptor
- <init>():V
- <init>(java.lang.String,I,I):V
- p:createAction(com.intellij.openapi.ui.DialogWrapper):javax.swing.Action
- s:createDefault(java.lang.String,I,I):com.intellij.openapi.ui.DialogBuilder$CloseDialogAction
c:com.intellij.openapi.ui.DialogBuilder$CustomActionDescriptor
- com.intellij.openapi.ui.DialogBuilder$ActionDescriptor
- <init>(javax.swing.Action):V
- getAction(com.intellij.openapi.ui.DialogWrapper):javax.swing.Action
com.intellij.openapi.ui.DialogBuilder$CustomizableAction
- a:setText(java.lang.String):V
a:com.intellij.openapi.ui.DialogBuilder$DialogActionDescriptor
- com.intellij.openapi.ui.DialogBuilder$ActionDescriptor
- p:<init>(java.lang.String,I):V
- pa:createAction(com.intellij.openapi.ui.DialogWrapper):javax.swing.Action
- getAction(com.intellij.openapi.ui.DialogWrapper):javax.swing.Action
- setDefault(Z):V
f:com.intellij.openapi.ui.DialogBuilder$OkActionDescriptor
- com.intellij.openapi.ui.DialogBuilder$ActionDescriptor
- com.intellij.openapi.ui.DialogBuilder$CustomizableAction
- <init>():V
f:com.intellij.openapi.ui.DialogEarthquakeShaker
- s:shake(java.awt.Window):V
- startShake():V
f:com.intellij.openapi.ui.DialogPanel
- com.intellij.ui.components.JBPanel
- <init>():V
- <init>(java.awt.LayoutManager):V
- f:apply():V
- f:getApplyCallbacks():java.util.Map
- f:getComponentValidateCallbacks():java.util.Map
- f:getPreferredFocusedComponent():javax.swing.JComponent
- f:getResetCallbacks():java.util.Map
- f:getValidateCallbacks():java.util.List
- f:getValidationRequestors():java.util.Map
- f:getValidationsOnApply():java.util.Map
- f:getValidationsOnInput():java.util.Map
- f:isModified():Z
- f:isModifiedCallbacks():java.util.Map
- f:registerValidators(com.intellij.openapi.Disposable):V
- f:registerValidators(com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
- bs:registerValidators$default(com.intellij.openapi.ui.DialogPanel,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- f:reset():V
- f:setApplyCallbacks(java.util.Map):V
- f:setComponentValidateCallbacks(java.util.Map):V
- f:setModifiedCallbacks(java.util.Map):V
- f:setPreferredFocusedComponent(javax.swing.JComponent):V
- f:setResetCallbacks(java.util.Map):V
- f:setValidateCallbacks(java.util.List):V
- f:setValidationRequestors(java.util.Map):V
- f:setValidationsOnApply(java.util.Map):V
- f:setValidationsOnInput(java.util.Map):V
- f:validateAll():java.util.List
a:com.intellij.openapi.ui.DialogWrapper
- sf:CANCEL_EXIT_CODE:I
- sf:CLOSE_EXIT_CODE:I
- sf:DEFAULT_ACTION:java.lang.String
- sf:DEFAULT_ACTION_ORDER:I
- sf:DIALOG_CONTENT_PANEL_PROPERTY:java.lang.Object
- sf:ERROR_FOREGROUND_COLOR:java.awt.Color
- sf:FOCUSED_ACTION:java.lang.String
- sf:MAC_ACTION_ORDER:java.lang.String
- sf:NEXT_USER_EXIT_CODE:I
- sf:OK_EXIT_CODE:I
- p:myCancelAction:javax.swing.Action
- p:myCheckBoxDoNotShowDialog:javax.swing.JCheckBox
- pf:myDisposable:com.intellij.openapi.Disposable
- p:myHelpAction:javax.swing.Action
- p:myOKAction:javax.swing.Action
- p:myPerformAction:Z
- p:myPreferredFocusedComponent:javax.swing.JComponent
- p:<init>(com.intellij.openapi.project.Project):V
- p:<init>(com.intellij.openapi.project.Project,java.awt.Component,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):V
- p:<init>(com.intellij.openapi.project.Project,java.awt.Component,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType,Z):V
- p:<init>(com.intellij.openapi.project.Project,java.awt.Component,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType,Z,Z):V
- p:<init>(com.intellij.openapi.project.Project,Z):V
- p:<init>(com.intellij.openapi.project.Project,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):V
- p:<init>(com.intellij.openapi.project.Project,Z,Z):V
- p:<init>(java.awt.Component,Z):V
- p:<init>(java.util.function.Function):V
- p:<init>(Z):V
- p:<init>(Z,Z):V
- f:addKeyListener(java.awt.event.KeyListener):V
- f:addMouseListener(java.awt.event.MouseListener):V
- f:addMouseListener(java.awt.event.MouseMotionListener):V
- p:applyFields():V
- beforeShowCallback():V
- p:canRecordDialogId():Z
- centerRelativeToParent():V
- clickDefaultButton():V
- f:close(I):V
- f:close(I,com.intellij.openapi.ui.ExitActionType):V
- f:close(I,Z):V
- f:close(I,Z,com.intellij.openapi.ui.ExitActionType):V
- p:continuousValidation():Z
- p:createActions():javax.swing.Action[]
- p:createButtonsPanel(java.util.List):javax.swing.JPanel
- p:createCancelAction():java.awt.event.ActionListener
- pa:createCenterPanel():javax.swing.JComponent
- p:createContentPane():javax.swing.JComponent
- p:createContentPaneBorder():javax.swing.border.Border
- p:createDefaultActions():V
- s:createDefaultBorder():javax.swing.border.Border
- p:createDoNotAskCheckbox():javax.swing.JComponent
- p:createHelpButton(java.awt.Insets):javax.swing.JButton
- p:createJButtonForAction(javax.swing.Action):javax.swing.JButton
- s:createJButtonForAction(javax.swing.Action,javax.swing.JRootPane):javax.swing.JButton
- p:createLeftSideActions():javax.swing.Action[]
- p:createNorthPanel():javax.swing.JComponent
- p:createPeer(com.intellij.openapi.project.Project,Z):com.intellij.openapi.ui.DialogWrapperPeer
- p:createPeer(com.intellij.openapi.project.Project,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):com.intellij.openapi.ui.DialogWrapperPeer
- p:createPeer(java.awt.Component,Z):com.intellij.openapi.ui.DialogWrapperPeer
- p:createPeer(java.awt.Window,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):com.intellij.openapi.ui.DialogWrapperPeer
- p:createPeer(java.awt.Window,Z,Z):com.intellij.openapi.ui.DialogWrapperPeer
- p:createRootLayout():java.awt.LayoutManager
- p:createSouthAdditionalPanel():javax.swing.JPanel
- p:createSouthPanel():javax.swing.JComponent
- p:createSouthPanel(java.util.List,java.util.List,Z):javax.swing.JPanel
- p:createTitlePane():javax.swing.JComponent
- p:dispose():V
- disposeIfNeeded():V
- doCancelAction():V
- doCancelAction(java.awt.AWTEvent):V
- p:doHelpAction():V
- p:doOKAction():V
- p:doValidate():com.intellij.openapi.ui.ValidationInfo
- p:doValidateAll():java.util.List
- s:extractMnemonic(java.lang.String):com.intellij.openapi.util.Pair
- s:findInstance(java.awt.Component):com.intellij.openapi.ui.DialogWrapper
- s:findInstanceFromFocus():com.intellij.openapi.ui.DialogWrapper
- p:getButton(javax.swing.Action):javax.swing.JButton
- p:getButtonMap():java.util.Map
- p:getCancelAction():javax.swing.Action
- getContentPane():java.awt.Container
- getContentPanel():javax.swing.JComponent
- p:getContinuousValidationThreadToUse():com.intellij.util.Alarm$ThreadToUse
- f:getDimensionKey():java.lang.String
- p:getDimensionServiceKey():java.lang.String
- f:getDisposable():com.intellij.openapi.Disposable
- p:getDoNotShowMessage():java.lang.String
- p:getErrorTextAlignment():I
- getExitCode():I
- p:getHelpAction():javax.swing.Action
- p:getHelpId():java.lang.String
- f:getHorizontalStretch():F
- getInitialLocation():java.awt.Point
- getInitialSize():java.awt.Dimension
- getLocation():java.awt.Point
- p:getOKAction():javax.swing.Action
- getOwner():java.awt.Window
- f:getPeer():com.intellij.openapi.ui.DialogWrapperPeer
- getPreferredFocusedComponent():javax.swing.JComponent
- getPreferredSize():java.awt.Dimension
- getRootPane():javax.swing.JRootPane
- getSize():java.awt.Dimension
- p:getStyle():com.intellij.openapi.ui.DialogWrapper$DialogStyle
- getTitle():java.lang.String
- f:getVerticalStretch():F
- getWindow():java.awt.Window
- p:hasErrors(javax.swing.JComponent):Z
- p:init():V
- pf:initResizeListener():V
- pf:initValidation():V
- isAutoAdjustable():Z
- isDisposed():Z
- isModal():Z
- f:isModalProgress():Z
- ps:isMoveHelpButtonLeft():Z
- isOK():Z
- isOKActionEnabled():Z
- p:isProgressDialog():Z
- isResizable():Z
- isShowing():Z
- isVisible():Z
- s:layoutButtonsPanel(java.util.List):javax.swing.JPanel
- pack():V
- p:postponeValidation():Z
- p:processDoNotAskOnOk(I):V
- repaint():V
- p:setAutoAdjustable(Z):Z
- pf:setButtonsAlignment(I):V
- pf:setCancelButtonText(java.lang.String):V
- f:setCrossClosesWindow(Z):V
- setDoNotAskOption(com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):V
- setDoNotAskOption(com.intellij.openapi.ui.DoNotAskOption):V
- pf:setErrorHtml(com.intellij.openapi.util.text.HtmlChunk):V
- pf:setErrorHtml(com.intellij.openapi.util.text.HtmlChunk,javax.swing.JComponent):V
- pf:setErrorInfoAll(java.util.List):V
- p:setErrorText(java.lang.String):V
- p:setErrorText(java.lang.String,javax.swing.JComponent):V
- p:setHelpTooltip(javax.swing.JButton):V
- pf:setHorizontalStretch(F):V
- setInitialLocationCallback(com.intellij.openapi.util.Computable):V
- setLocation(I,I):V
- setLocation(java.awt.Point):V
- setModal(Z):V
- setOKActionEnabled(Z):V
- pf:setOKButtonIcon(javax.swing.Icon):V
- pf:setOKButtonMnemonic(I):V
- pf:setOKButtonText(java.lang.String):V
- pf:setOKButtonTooltip(java.lang.String):V
- setOnDeactivationAction(java.lang.Runnable):V
- setResizable(Z):V
- setSize(I,I):V
- setSizeDuringPack():Z
- setTitle(java.lang.String):V
- setUndecorated(Z):V
- setValidationDelay(I):V
- pf:setVerticalStretch(F):V
- p:shouldAddErrorNearButtons():Z
- shouldCloseOnCross():Z
- show():V
- showAndGet():Z
- showAndGetOk():com.intellij.openapi.util.AsyncResult
- p:sortActionsOnMac(java.util.List):V
- p:startTrackingValidation():V
- toBack():V
- p:toBeShown():Z
- toFront():V
- p:updateErrorInfo(java.util.List):V
- validate():V
pf:com.intellij.openapi.ui.DialogWrapper$CancelAction
- com.intellij.openapi.ui.DialogWrapper$DialogWrapperAction
e:com.intellij.openapi.ui.DialogWrapper$DialogStyle
- java.lang.Enum
- sf:COMPACT:com.intellij.openapi.ui.DialogWrapper$DialogStyle
- sf:NO_STYLE:com.intellij.openapi.ui.DialogWrapper$DialogStyle
- s:valueOf(java.lang.String):com.intellij.openapi.ui.DialogWrapper$DialogStyle
- s:values():com.intellij.openapi.ui.DialogWrapper$DialogStyle[]
pa:com.intellij.openapi.ui.DialogWrapper$DialogWrapperAction
- javax.swing.AbstractAction
- p:<init>(com.intellij.openapi.ui.DialogWrapper,java.lang.String):V
- actionPerformed(java.awt.event.ActionEvent):V
- pa:doAction(java.awt.event.ActionEvent):V
pc:com.intellij.openapi.ui.DialogWrapper$DialogWrapperExitAction
- com.intellij.openapi.ui.DialogWrapper$DialogWrapperAction
- pf:myExitCode:I
- <init>(com.intellij.openapi.ui.DialogWrapper,java.lang.String,I):V
- p:doAction(java.awt.event.ActionEvent):V
com.intellij.openapi.ui.DialogWrapper$DoNotAskOption
- com.intellij.openapi.ui.DoNotAskOption
a:com.intellij.openapi.ui.DialogWrapper$DoNotAskOption$Adapter
- com.intellij.openapi.ui.DoNotAskOption$Adapter
- com.intellij.openapi.ui.DialogWrapper$DoNotAskOption
- <init>():V
f:com.intellij.openapi.ui.DialogWrapper$HelpAction
- javax.swing.AbstractAction
- <init>(java.lang.Runnable):V
- actionPerformed(java.awt.event.ActionEvent):V
e:com.intellij.openapi.ui.DialogWrapper$IdeModalityType
- java.lang.Enum
- sf:IDE:com.intellij.openapi.ui.DialogWrapper$IdeModalityType
- sf:MODELESS:com.intellij.openapi.ui.DialogWrapper$IdeModalityType
- sf:PROJECT:com.intellij.openapi.ui.DialogWrapper$IdeModalityType
- toAwtModality():java.awt.Dialog$ModalityType
- s:valueOf(java.lang.String):com.intellij.openapi.ui.DialogWrapper$IdeModalityType
- s:values():com.intellij.openapi.ui.DialogWrapper$IdeModalityType[]
pc:com.intellij.openapi.ui.DialogWrapper$OkAction
- com.intellij.openapi.ui.DialogWrapper$DialogWrapperAction
- p:<init>(com.intellij.openapi.ui.DialogWrapper):V
- p:doAction(java.awt.event.ActionEvent):V
com.intellij.openapi.ui.DialogWrapperDialog
- a:getDialogWrapper():com.intellij.openapi.ui.DialogWrapper
a:com.intellij.openapi.ui.DialogWrapperPeer
- sf:HAVE_INITIAL_SELECTION:java.lang.Object
- <init>():V
- a:addKeyListener(java.awt.event.KeyListener):V
- a:addMouseListener(java.awt.event.MouseListener):V
- a:addMouseListener(java.awt.event.MouseMotionListener):V
- a:centerInParent():V
- pa:dispose():V
- a:getContentPane():java.awt.Container
- getCurrentModalEntities():java.lang.Object[]
- a:getLocation():java.awt.Point
- a:getOwner():java.awt.Window
- a:getPreferredSize():java.awt.Dimension
- a:getRootPane():javax.swing.JRootPane
- a:getSize():java.awt.Dimension
- a:getTitle():java.lang.String
- a:getWindow():java.awt.Window
- a:isHeadless():Z
- a:isModal():Z
- a:isResizable():Z
- a:isShowing():Z
- a:isVisible():Z
- a:pack():V
- a:repaint():V
- a:setAppIcons():V
- a:setContentPane(javax.swing.JComponent):V
- a:setLocation(I,I):V
- a:setLocation(java.awt.Point):V
- a:setModal(Z):V
- a:setOnDeactivationAction(com.intellij.openapi.Disposable,java.lang.Runnable):V
- a:setResizable(Z):V
- a:setSize(I,I):V
- a:setTitle(java.lang.String):V
- a:setUndecorated(Z):V
- a:show():java.util.concurrent.CompletableFuture
- a:toBack():V
- a:toFront():V
- a:validate():V
a:com.intellij.openapi.ui.DialogWrapperPeerFactory
- <init>():V
- a:createPeer(com.intellij.openapi.ui.DialogWrapper,com.intellij.openapi.project.Project,Z):com.intellij.openapi.ui.DialogWrapperPeer
- a:createPeer(com.intellij.openapi.ui.DialogWrapper,com.intellij.openapi.project.Project,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):com.intellij.openapi.ui.DialogWrapperPeer
- a:createPeer(com.intellij.openapi.ui.DialogWrapper,java.awt.Component,Z):com.intellij.openapi.ui.DialogWrapperPeer
- a:createPeer(com.intellij.openapi.ui.DialogWrapper,java.awt.Window,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):com.intellij.openapi.ui.DialogWrapperPeer
- a:createPeer(com.intellij.openapi.ui.DialogWrapper,Z):com.intellij.openapi.ui.DialogWrapperPeer
- a:createPeer(com.intellij.openapi.ui.DialogWrapper,Z,com.intellij.openapi.ui.DialogWrapper$IdeModalityType):com.intellij.openapi.ui.DialogWrapperPeer
- s:getInstance():com.intellij.openapi.ui.DialogWrapperPeerFactory
com.intellij.openapi.ui.ErrorBorderCapable
c:com.intellij.openapi.ui.FixedComboBoxEditor
- javax.swing.ComboBoxEditor
- <init>():V
- addActionListener(java.awt.event.ActionListener):V
- getEditorComponent():java.awt.Component
- getField():com.intellij.ui.components.JBTextField
- getItem():java.lang.Object
- removeActionListener(java.awt.event.ActionListener):V
- selectAll():V
- setItem(java.lang.Object):V
c:com.intellij.openapi.ui.FixedSizeButton
- javax.swing.JButton
- <init>():V
- <init>(I):V
- <init>(javax.swing.JComponent):V
- getAttachedComponent():javax.swing.JComponent
- getMaximumSize():java.awt.Dimension
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- setAttachedComponent(javax.swing.JComponent):V
- setSize(I):V
com.intellij.openapi.ui.GenericListComponentUpdater
- a:paintBusy(Z):V
- a:replaceModel(java.util.List):V
c:com.intellij.openapi.ui.JBCheckboxMenuItem
- javax.swing.JCheckBoxMenuItem
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon,Z):V
- <init>(java.lang.String,Z):V
- <init>(javax.swing.Action):V
- <init>(javax.swing.Icon):V
- paint(java.awt.Graphics):V
c:com.intellij.openapi.ui.JBMenuItem
- javax.swing.JMenuItem
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(javax.swing.Action):V
- paint(java.awt.Graphics):V
c:com.intellij.openapi.ui.JBPopupMenu
- javax.swing.JPopupMenu
- <init>():V
- <init>(java.lang.String):V
- paint(java.awt.Graphics):V
- processMouseWheelEvent(java.awt.event.MouseWheelEvent):V
- setLayout(java.awt.LayoutManager):V
- show(java.awt.Component,I,I):V
- s:showAbove(java.awt.Component,javax.swing.JPopupMenu):V
- s:showAt(com.intellij.ui.awt.RelativePoint,javax.swing.JPopupMenu):V
- s:showAtRight(java.awt.Component,javax.swing.JPopupMenu):V
- s:showBelow(java.awt.Component,java.lang.String,com.intellij.openapi.actionSystem.ActionGroup):V
- s:showBelow(java.awt.Component,javax.swing.JPopupMenu):V
- s:showByEditor(com.intellij.openapi.editor.Editor,javax.swing.JPopupMenu):V
- s:showByEvent(java.awt.event.MouseEvent,java.lang.String,com.intellij.openapi.actionSystem.ActionGroup):V
- s:showByEvent(java.awt.event.MouseEvent,javax.swing.JPopupMenu):V
c:com.intellij.openapi.ui.LabeledComponent
- javax.swing.JPanel
- com.intellij.ui.PanelWithAnchor
- <init>():V
- s:create(javax.swing.JComponent,java.lang.String):com.intellij.openapi.ui.LabeledComponent
- s:create(javax.swing.JComponent,java.lang.String,java.lang.String):com.intellij.openapi.ui.LabeledComponent
- getAnchor():javax.swing.JComponent
- getComponent():javax.swing.JComponent
- getComponentClass():java.lang.String
- getLabel():com.intellij.ui.components.JBLabel
- getLabelInsets():java.awt.Insets
- getLabelLocation():java.lang.String
- getOwnAnchor():javax.swing.JComponent
- getRawText():java.lang.String
- getText():java.lang.String
- setAnchor(javax.swing.JComponent):V
- setComponent(javax.swing.JComponent):V
- setComponentClass(java.lang.String):V
- setEnabled(Z):V
- setLabelInsets(java.awt.Insets):V
- setLabelLocation(java.lang.String):V
- setText(java.lang.String):V
c:com.intellij.openapi.ui.LabeledComponent$TextWithMnemonic
- <init>(java.lang.String,I):V
- s:fromLabel(javax.swing.JLabel):com.intellij.openapi.ui.LabeledComponent$TextWithMnemonic
- s:fromTextWithMnemonic(java.lang.String):com.intellij.openapi.ui.LabeledComponent$TextWithMnemonic
- getTextWithMnemonic():java.lang.String
- setToLabel(javax.swing.JLabel):V
c:com.intellij.openapi.ui.LoadingDecorator
- sf:Companion:com.intellij.openapi.ui.LoadingDecorator$Companion
- sf:OVERLAY_BACKGROUND:java.awt.Color
- <init>(javax.swing.JComponent,com.intellij.openapi.Disposable,I):V
- <init>(javax.swing.JComponent,com.intellij.openapi.Disposable,I,Z):V
- <init>(javax.swing.JComponent,com.intellij.openapi.Disposable,I,Z,com.intellij.util.ui.AnimatedIcon):V
- b:<init>(javax.swing.JComponent,com.intellij.openapi.Disposable,I,Z,com.intellij.util.ui.AnimatedIcon,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(javax.swing.JComponent,com.intellij.openapi.Disposable,I,Z,com.intellij.util.ui.AsyncProcessIcon):V
- b:<init>(javax.swing.JComponent,com.intellij.openapi.Disposable,I,Z,com.intellij.util.ui.AsyncProcessIcon,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- p:customizeLoadingLayer(javax.swing.JPanel,javax.swing.JLabel,com.intellij.util.ui.AnimatedIcon):com.intellij.ui.components.panels.NonOpaquePanel
- pf:doStartLoading(Z):V
- f:getComponent():javax.swing.JComponent
- f:getLoadingText():java.lang.String
- f:getOverlayBackground():java.awt.Color
- f:isLoading():Z
- f:setLoadingText(java.lang.String):V
- f:setOverlayBackground(java.awt.Color):V
- startLoading(Z):V
- stopLoading():V
f:com.intellij.openapi.ui.LoadingDecorator$Companion
com.intellij.openapi.ui.LoadingDecorator$CursorAware
a:com.intellij.openapi.ui.MasterDetailsComponent
- com.intellij.openapi.options.Configurable
- com.intellij.openapi.options.MasterDetails
- com.intellij.openapi.ui.DetailsComponent$Facade
- psf:COPY_ICON:javax.swing.Icon
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- sf:TREE_NAME:java.lang.String
- sf:TREE_OBJECT:java.lang.String
- pf:TREE_UPDATER:java.lang.Runnable
- p:myAutoScrollHandler:com.intellij.ui.AutoScrollToSourceHandler
- p:myCurrentConfigurable:com.intellij.openapi.ui.NamedConfigurable
- p:myHistory:com.intellij.ui.navigation.History
- myNorthPanel:javax.swing.JPanel
- p:myRoot:com.intellij.openapi.ui.MasterDetailsComponent$MyNode
- pf:myState:com.intellij.openapi.ui.MasterDetailsState
- p:myToReInitWholePanel:Z
- p:myTree:com.intellij.ui.treeStructure.Tree
- p:myWholePanel:javax.swing.JPanel
- p:<init>():V
- p:<init>(com.intellij.openapi.ui.MasterDetailsState):V
- addItemsChangeListener(com.intellij.openapi.ui.MasterDetailsComponent$ItemsChangeListener):V
- p:addNode(com.intellij.openapi.ui.MasterDetailsComponent$MyNode,com.intellij.openapi.ui.MasterDetailsComponent$MyNode):V
- p:addNotify():V
- apply():V
- pf:checkForEmptyAndDuplicatedNames(java.lang.String,java.lang.String,java.lang.Class):V
- p:clearChildren():V
- p:createActions(Z):java.util.List
- createComponent():javax.swing.JComponent
- p:createToolbarActionGroup():com.intellij.openapi.actionSystem.DefaultActionGroup
- disposeUIResources():V
- ensureInitialized(com.intellij.openapi.ui.NamedConfigurable):V
- ps:findNodeByCondition(javax.swing.tree.TreeNode,com.intellij.openapi.util.Condition):com.intellij.openapi.ui.MasterDetailsComponent$MyNode
- ps:findNodeByName(javax.swing.tree.TreeNode,java.lang.String):com.intellij.openapi.ui.MasterDetailsComponent$MyNode
- s:findNodeByObject(javax.swing.tree.TreeNode,java.lang.Object):com.intellij.openapi.ui.MasterDetailsComponent$MyNode
- ps:forAll(java.util.function.Predicate):java.util.function.Predicate
- p:getAdditionalActions():java.util.ArrayList
- p:getComponentStateKey():java.lang.String
- getDetails():com.intellij.openapi.ui.DetailsComponent
- getDetailsComponent():com.intellij.openapi.ui.DetailsComponent
- p:getEmptySelectionString():java.lang.String
- getHelpTopic():java.lang.String
- getMaster():javax.swing.JComponent
- p:getNodeComparator():java.util.Comparator
- p:getPanelPreferredSize():java.awt.Dimension
- getSelectedConfigurable():com.intellij.openapi.ui.NamedConfigurable
- f:getSelectedNode():com.intellij.openapi.ui.MasterDetailsComponent$MyNode
- getSelectedObject():java.lang.Object
- getSplitter():com.intellij.openapi.ui.Splitter
- p:getState():com.intellij.openapi.ui.MasterDetailsState
- p:getStateService():com.intellij.openapi.ui.MasterDetailsStateService
- getToolbar():javax.swing.JComponent
- getTree():com.intellij.ui.treeStructure.Tree
- p:initTree():V
- initUi():V
- p:initializeConfigurable(com.intellij.openapi.ui.NamedConfigurable):V
- p:isAutoScrollEnabled():Z
- p:isInitialized(com.intellij.openapi.ui.NamedConfigurable):Z
- isModified():Z
- p:loadComponentState():V
- p:loadState(com.intellij.openapi.ui.MasterDetailsState):V
- p:onItemDeleted(java.lang.Object):V
- p:processRemovedItems():V
- p:reInitWholePanelIfNeeded():V
- p:removeNodes(java.util.List):V
- p:removePaths(javax.swing.tree.TreePath[]):V
- reset():V
- pf:restoreLastSelection():V
- selectNodeInTree(java.lang.Object):V
- selectNodeInTree(java.lang.String):V
- selectNodeInTree(javax.swing.tree.DefaultMutableTreeNode):com.intellij.openapi.util.ActionCallback
- selectNodeInTree(javax.swing.tree.DefaultMutableTreeNode,Z):com.intellij.openapi.util.ActionCallback
- selectNodeInTree(javax.swing.tree.DefaultMutableTreeNode,Z,Z):com.intellij.openapi.util.ActionCallback
- setHistory(com.intellij.ui.navigation.History):V
- p:setSelectedNode(com.intellij.openapi.ui.MasterDetailsComponent$MyNode):V
- p:sortDescendants(com.intellij.openapi.ui.MasterDetailsComponent$MyNode):V
- p:updateMultiSelection(java.util.List):Z
- p:updateSelection(com.intellij.openapi.ui.NamedConfigurable):V
- p:wasObjectStored(java.lang.Object):Z
com.intellij.openapi.ui.MasterDetailsComponent$ActionGroupWithPreselection
- a:getActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- getDefaultIndex():I
p:com.intellij.openapi.ui.MasterDetailsComponent$ItemsChangeListener
- a:itemChanged(java.lang.Object):V
- itemsExternallyChanged():V
pc:com.intellij.openapi.ui.MasterDetailsComponent$MyActionGroupWrapper
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.ui.MasterDetailsComponent,com.intellij.openapi.actionSystem.ActionGroup):V
- <init>(com.intellij.openapi.ui.MasterDetailsComponent,com.intellij.openapi.ui.MasterDetailsComponent$ActionGroupWithPreselection):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.ui.MasterDetailsComponent$MyColoredTreeCellRenderer
- com.intellij.ui.ColoredTreeCellRenderer
- <init>():V
- customizeCellRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- p:getAdditionalAttributes(com.intellij.openapi.ui.MasterDetailsComponent$MyNode):com.intellij.ui.SimpleTextAttributes
- p:renderIcon(com.intellij.openapi.ui.MasterDetailsComponent$MyNode,Z):V
- p:renderName(com.intellij.openapi.ui.MasterDetailsComponent$MyNode):V
pc:com.intellij.openapi.ui.MasterDetailsComponent$MyDeleteAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.ui.MasterDetailsComponent):V
- <init>(com.intellij.openapi.ui.MasterDetailsComponent,java.util.function.Predicate):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.ui.MasterDetailsComponent$MyNode
- javax.swing.tree.DefaultMutableTreeNode
- <init>(com.intellij.openapi.ui.NamedConfigurable):V
- <init>(com.intellij.openapi.ui.NamedConfigurable,Z):V
- getConfigurable():com.intellij.openapi.ui.NamedConfigurable
- getDisplayName():java.lang.String
- getIcon(Z):javax.swing.Icon
- getLocationString():java.lang.String
- isDisplayInBold():Z
- p:reloadNode(javax.swing.tree.DefaultTreeModel):V
- setDisplayInBold(Z):V
pc:com.intellij.openapi.ui.MasterDetailsComponent$MyRootNode
- com.intellij.openapi.ui.MasterDetailsComponent$MyNode
- <init>():V
c:com.intellij.openapi.ui.MasterDetailsState
- <init>():V
- getLastEditedConfigurable():java.lang.String
- getProportions():com.intellij.ide.ui.SplitterProportionsDataImpl
- setLastEditedConfigurable(java.lang.String):V
- setProportions(com.intellij.ide.ui.SplitterProportionsDataImpl):V
f:com.intellij.openapi.ui.MasterDetailsStateService
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- getComponentState(java.lang.String,java.lang.Class):com.intellij.openapi.ui.MasterDetailsState
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.ui.MasterDetailsStateService
- getState():com.intellij.openapi.ui.MasterDetailsStateService$States
- loadState(com.intellij.openapi.ui.MasterDetailsStateService$States):V
- setComponentState(java.lang.String,com.intellij.openapi.ui.MasterDetailsState):V
f:com.intellij.openapi.ui.MasterDetailsStateService$ComponentState
- myKey:java.lang.String
- mySettings:org.jdom.Element
- <init>():V
f:com.intellij.openapi.ui.MasterDetailsStateService$States
- <init>():V
- getStates():java.util.List
- setStates(java.util.List):V
c:com.intellij.openapi.ui.MessageMultilineInputDialog
- com.intellij.openapi.ui.Messages$InputDialog
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator,java.lang.String[],I):V
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- p:createScrollableTextComponent():javax.swing.JComponent
- p:createTextFieldComponent():javax.swing.text.JTextComponent
f:com.intellij.openapi.ui.MessageUtil
- sf:showOkCancelDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption,com.intellij.openapi.project.Project):I
- bs:showOkCancelDialog$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption,com.intellij.openapi.project.Project,I,java.lang.Object):I
- sf:showOkNoDialog(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):Z
- bs:showOkNoDialog$default(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,I,java.lang.Object):Z
- sf:showYesNoDialog(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):Z
- bs:showYesNoDialog$default(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,I,java.lang.Object):Z
Fc:com.intellij.openapi.ui.Messages
- sf:CANCEL:I
- sf:CANCEL_BUTTON:java.lang.String
- sf:NO:I
- sf:NO_BUTTON:java.lang.String
- sf:OK:I
- sf:OK_BUTTON:java.lang.String
- sf:YES:I
- sf:YES_BUTTON:java.lang.String
- <init>():V
- s:canShowMacSheetPanel():Z
- s:configureMessagePaneUi(javax.swing.JTextPane,java.lang.String):javax.swing.JTextPane
- s:configureMessagePaneUi(javax.swing.JTextPane,java.lang.String,com.intellij.util.ui.UIUtil$FontSize):javax.swing.JTextPane
- s:createMessageDialogRemover(com.intellij.openapi.project.Project):java.lang.Runnable
- s:getCancelButton():java.lang.String
- s:getErrorIcon():javax.swing.Icon
- s:getInformationIcon():javax.swing.Icon
- s:getNoButton():java.lang.String
- s:getOkButton():java.lang.String
- s:getQuestionIcon():javax.swing.Icon
- s:getWarningIcon():javax.swing.Icon
- s:getYesButton():java.lang.String
- s:installHyperlinkSupport(javax.swing.JTextPane):V
- s:isMacSheetEmulation():Z
- s:showCheckboxMessageDialog(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,Z,I,I,javax.swing.Icon,com.intellij.util.PairFunction):I
- s:showCheckboxMessageDialog(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,Z,I,I,javax.swing.Icon,java.util.function.BiFunction):I
- s:showCheckboxOkCancelDialog(java.lang.String,java.lang.String,java.lang.String,Z,I,I,javax.swing.Icon):I
- s:showChooseDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String[],java.lang.String):I
- s:showChooseDialog(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,javax.swing.Icon):I
- s:showConfirmationDialog(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String,java.lang.String):I
- s:showDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],I,I,javax.swing.Icon):I
- s:showDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String[],I,javax.swing.Icon):I
- s:showDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String[],I,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):I
- s:showDialog(java.awt.Component,java.lang.String,java.lang.String,java.lang.String[],I,javax.swing.Icon):I
- s:showDialog(java.lang.String,java.lang.String,java.lang.String[],I,I,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):I
- s:showDialog(java.lang.String,java.lang.String,java.lang.String[],I,I,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption,java.lang.String):I
- s:showDialog(java.lang.String,java.lang.String,java.lang.String[],I,javax.swing.Icon):I
- s:showDialog(java.lang.String,java.lang.String,java.lang.String[],I,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):I
- s:showEditableChooseDialog(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String[],java.lang.String,com.intellij.openapi.ui.InputValidator):java.lang.String
- s:showErrorDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- s:showErrorDialog(java.awt.Component,java.lang.String):V
- s:showErrorDialog(java.awt.Component,java.lang.String,java.lang.String):V
- s:showErrorDialog(java.lang.String,java.lang.String):V
- s:showIdeaMessageDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String[],I,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):I
- s:showInfoMessage(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- s:showInfoMessage(java.awt.Component,java.lang.String,java.lang.String):V
- s:showInfoMessage(java.lang.String,java.lang.String):V
- s:showInputDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):java.lang.String
- s:showInputDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator):java.lang.String
- s:showInputDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator,com.intellij.openapi.util.TextRange):java.lang.String
- s:showInputDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator,com.intellij.openapi.util.TextRange,java.lang.String):java.lang.String
- s:showInputDialog(java.awt.Component,java.lang.String,java.lang.String,javax.swing.Icon):java.lang.String
- s:showInputDialog(java.awt.Component,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator):java.lang.String
- s:showInputDialog(java.lang.String,java.lang.String,javax.swing.Icon):java.lang.String
- s:showInputDialog(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator):java.lang.String
- s:showInputDialogWithCheckBox(java.lang.String,java.lang.String,java.lang.String,Z,Z,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator):com.intellij.openapi.util.Pair
- s:showMessageDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):V
- s:showMessageDialog(java.awt.Component,java.lang.String,java.lang.String,javax.swing.Icon):V
- s:showMessageDialog(java.lang.String,java.lang.String,javax.swing.Icon):V
- s:showMultilineInputDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.InputValidator):java.lang.String
- s:showOkCancelDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showOkCancelDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):I
- s:showOkCancelDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showOkCancelDialog(java.awt.Component,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showOkCancelDialog(java.awt.Component,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showOkCancelDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showOkCancelDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):I
- s:showOkCancelDialog(java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showPasswordDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):java.lang.String
- s:showPasswordDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.InputValidator):java.lang.String
- s:showPasswordDialog(java.lang.String,java.lang.String):java.lang.String
- s:showTextAreaDialog(javax.swing.JTextField,java.lang.String,java.lang.String):V
- s:showTextAreaDialog(javax.swing.JTextField,java.lang.String,java.lang.String,com.intellij.util.Function,com.intellij.util.Function):V
- s:showTwoStepConfirmationDialog(java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showWarningDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- s:showWarningDialog(java.awt.Component,java.lang.String,java.lang.String):V
- s:showWarningDialog(java.lang.String,java.lang.String):V
- s:showYesNoCancelDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showYesNoCancelDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showYesNoCancelDialog(java.awt.Component,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showYesNoCancelDialog(java.awt.Component,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showYesNoCancelDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showYesNoCancelDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):I
- s:showYesNoCancelDialog(java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showYesNoDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showYesNoDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):I
- s:showYesNoDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showYesNoDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):I
- s:showYesNoDialog(java.awt.Component,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showYesNoDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):I
- s:showYesNoDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.ui.DialogWrapper$DoNotAskOption):I
- s:showYesNoDialog(java.lang.String,java.lang.String,javax.swing.Icon):I
- s:wrapToScrollPaneIfNeeded(javax.swing.JComponent,I,I):javax.swing.JComponent
- s:wrapToScrollPaneIfNeeded(javax.swing.JComponent,I,I,I):javax.swing.JComponent
c:com.intellij.openapi.ui.Messages$InputDialog
- com.intellij.openapi.ui.messages.MessageDialog
- sf:INPUT_DIALOG_COLUMNS:I
- p:myField:javax.swing.text.JTextComponent
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator,java.lang.String[],I):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator,java.lang.String[],I,java.lang.String):V
- <init>(java.awt.Component,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createMessagePanel():javax.swing.JPanel
- p:createNorthPanel():javax.swing.JComponent
- p:createScrollableTextComponent():javax.swing.JComponent
- p:createTextComponent():javax.swing.JComponent
- p:createTextFieldComponent():javax.swing.text.JTextComponent
- p:doOKAction():V
- getInputString():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getTextField():javax.swing.text.JTextComponent
@:com.intellij.openapi.ui.Messages$OkCancelResult
- java.lang.annotation.Annotation
@:com.intellij.openapi.ui.Messages$YesNoCancelResult
- java.lang.annotation.Annotation
@:com.intellij.openapi.ui.Messages$YesNoResult
- java.lang.annotation.Annotation
c:com.intellij.openapi.ui.MultiLineLabelUI
- javax.swing.plaf.basic.BasicLabelUI
- <init>():V
- s:computeMultiLineDimension(java.awt.FontMetrics,java.lang.String[]):java.awt.Dimension
- s:convertTabs(java.lang.String,I):java.lang.String
- p:drawString(java.awt.Graphics,java.lang.String,I,I,I):V
- p:layoutCL(javax.swing.JLabel,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle):java.lang.String
- s:layoutCompoundLabel(java.awt.FontMetrics,java.lang.String[],javax.swing.Icon,I,I,I,I,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,I):java.lang.String
- s:layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String[],javax.swing.Icon,I,I,I,I,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,I):java.lang.String
- p:paintDisabledText(javax.swing.JLabel,java.awt.Graphics,java.lang.String,I,I):V
- p:paintEnabledText(javax.swing.JLabel,java.awt.Graphics,java.lang.String,I,I):V
- splitStringByLines(java.lang.String):java.lang.String[]
a:com.intellij.openapi.ui.NamedConfigurable
- com.intellij.openapi.options.Configurable
- b:$$$getRootComponent$$$():javax.swing.JComponent
- p:<init>():V
- p:<init>(Z,java.lang.Runnable):V
- p:checkName(java.lang.String):V
- f:createComponent():javax.swing.JComponent
- a:createOptionsPanel():javax.swing.JComponent
- p:createTopRightComponent():javax.swing.JComponent
- a:getBannerSlogan():java.lang.String
- a:getEditableObject():java.lang.Object
- getIcon(Z):javax.swing.Icon
- isNameEditable():Z
- p:isUpdatingNameFieldFromDisplayName():Z
- p:resetOptionsPanel():V
- a:setDisplayName(java.lang.String):V
- setNameFieldShown(Z):V
- updateName():V
a:com.intellij.openapi.ui.NamedItemsListEditor
- com.intellij.openapi.ui.MasterDetailsComponent
- p:<init>(com.intellij.openapi.ui.Namer,com.intellij.openapi.util.Factory,com.intellij.openapi.util.Cloner,java.util.function.BiPredicate,java.util.List):V
- p:<init>(com.intellij.openapi.ui.Namer,com.intellij.openapi.util.Factory,com.intellij.openapi.util.Cloner,java.util.function.BiPredicate,java.util.List,Z):V
- apply():V
- askForProfileName(java.lang.String):java.lang.String
- p:canCopy(java.lang.Object):Z
- p:canDelete(java.lang.Object):Z
- p:createActions(Z):java.util.List
- pa:createConfigurable(java.lang.Object):com.intellij.openapi.options.UnnamedConfigurable
- p:createItem():java.lang.Object
- p:findByName(java.lang.String):java.lang.Object
- p:getCopyDialogTitle():java.lang.String
- p:getCreateNewDialogTitle():java.lang.String
- p:getCurrentItems():java.util.List
- p:getItemConfigurable(java.lang.Object):com.intellij.openapi.options.UnnamedConfigurable
- getItems():java.util.List
- p:getNewLabelText():java.lang.String
- getSelectedItem():java.lang.Object
- isModified():Z
- p:onItemCloned(java.lang.Object):V
- p:onItemCreated(java.lang.Object):V
- p:onItemDeleted(java.lang.Object):V
- reset():V
- selectItem(java.lang.Object):V
- p:setDisplayName(java.lang.Object,java.lang.String):V
- setShowIcons(Z):V
- p:wasObjectStored(java.lang.Object):Z
com.intellij.openapi.ui.Namer
- a:canRename(java.lang.Object):Z
- a:getName(java.lang.Object):java.lang.String
- a:setName(java.lang.Object,java.lang.String):V
c:com.intellij.openapi.ui.NonEmptyInputValidator
- com.intellij.openapi.ui.InputValidator
- <init>():V
- canClose(java.lang.String):Z
- checkInput(java.lang.String):Z
c:com.intellij.openapi.ui.NonProportionalOnePixelSplitter
- com.intellij.ui.OnePixelSplitter
- sf:Companion:com.intellij.openapi.ui.NonProportionalOnePixelSplitter$Companion
- <init>(Z,java.lang.String,F,com.intellij.openapi.Disposable,com.intellij.openapi.project.Project):V
- b:<init>(Z,java.lang.String,F,com.intellij.openapi.Disposable,com.intellij.openapi.project.Project,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addNotify():V
- p:loadProportion():V
- saveProportion():V
- setProportion(F):V
f:com.intellij.openapi.ui.NonProportionalOnePixelSplitter$Companion
c:com.intellij.openapi.ui.OnePixelDivider
- com.intellij.openapi.ui.Divider
- sf:BACKGROUND:java.awt.Color
- p:myDragging:Z
- p:myPoint:java.awt.Point
- <init>(Z,com.intellij.openapi.ui.Splittable):V
- addNotify():V
- isVertical():Z
- p:noDeepestComponent(java.awt.event.MouseEvent,java.awt.Component):Z
- paint(java.awt.Graphics):V
- p:processMouseEvent(java.awt.event.MouseEvent):V
- p:processMouseMotionEvent(java.awt.event.MouseEvent):V
- removeNotify():V
- setOrientation(Z):V
- setResizeEnabled(Z):V
- setSwitchOrientationEnabled(Z):V
com.intellij.openapi.ui.OptionAction
- javax.swing.Action
- sf:AN_ACTION:java.lang.String
- a:getOptions():javax.swing.Action[]
com.intellij.openapi.ui.Painter
- a:addListener(com.intellij.openapi.ui.Painter$Listener):V
- a:needsRepaint():Z
- a:paint(java.awt.Component,java.awt.Graphics2D):V
- a:removeListener(com.intellij.openapi.ui.Painter$Listener):V
com.intellij.openapi.ui.Painter$Listener
- a:onNeedsRepaint(com.intellij.openapi.ui.Painter,javax.swing.JComponent):V
a:com.intellij.openapi.ui.PanelWithActionsAndCloseButton
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- pf:myContentManager:com.intellij.ui.content.ContentManager
- <init>(com.intellij.ui.content.ContentManager,java.lang.String):V
- <init>(com.intellij.ui.content.ContentManager,java.lang.String,Z):V
- p:addActionsTo(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- pa:createCenterPanel():javax.swing.JComponent
- p:disableClose():V
- getHelpId():java.lang.String
- p:init():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
c:com.intellij.openapi.ui.PanelWithText
- javax.swing.JPanel
- <init>():V
- <init>(java.lang.String):V
- setText(java.lang.String):V
f:com.intellij.openapi.ui.PersistentThreeComponentSplitter
- com.intellij.openapi.ui.ThreeComponentsSplitter
- <init>(Z,Z,java.lang.String,com.intellij.openapi.Disposable,com.intellij.openapi.project.Project,F,F):V
- b:<init>(Z,Z,java.lang.String,com.intellij.openapi.Disposable,com.intellij.openapi.project.Project,F,F,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addNotify():V
- doLayout():V
- f:saveProportions():V
c:com.intellij.openapi.ui.SelectFromListDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,java.lang.Object[],com.intellij.openapi.ui.SelectFromListDialog$ToStringAspect,java.lang.String,I):V
- addToDialog(javax.swing.JComponent,java.lang.String):V
- p:createCenterPanel():javax.swing.JComponent
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelection():java.lang.Object[]
- setSelection(java.lang.String):V
com.intellij.openapi.ui.SelectFromListDialog$ToStringAspect
- a:getToStirng(java.lang.Object):java.lang.String
f:com.intellij.openapi.ui.ShadowAction
- <init>(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnAction,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- <init>(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnAction,javax.swing.JComponent,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.Disposable):V
- <init>(com.intellij.openapi.actionSystem.AnAction,java.lang.String,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- reconnect(com.intellij.openapi.actionSystem.AnAction):V
c:com.intellij.openapi.ui.SimpleToolWindowPanel
- com.intellij.ui.components.JBPanelWithEmptyText
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.ui.switcher.QuickActionProvider
- sf:SCROLLED_STATE:com.intellij.openapi.util.Key
- p:myVertical:Z
- <init>(Z):V
- <init>(Z,Z):V
- s:collectActions(javax.swing.JComponent):java.util.List
- getActions(Z):java.util.List
- getComponent():javax.swing.JComponent
- getContent():javax.swing.JComponent
- getToolbar():javax.swing.JComponent
- isToolbarVisible():Z
- isVertical():Z
- p:paintComponent(java.awt.Graphics):V
- setContent(javax.swing.JComponent):V
- setProvideQuickActions(Z):com.intellij.openapi.ui.SimpleToolWindowPanel
- setToolbar(javax.swing.JComponent):V
- setVertical(Z):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
com.intellij.openapi.ui.SplitterProportionsData
- com.intellij.openapi.util.JDOMExternalizable
- a:externalizeFromDimensionService(java.lang.String):V
- a:externalizeToDimensionService(java.lang.String):V
- a:restoreSplitterProportions(java.awt.Component):V
- a:saveSplitterProportions(java.awt.Component):V
c:com.intellij.openapi.ui.StripeTable
- com.intellij.ui.table.JBTable
- <init>(javax.swing.table.TableModel):V
- s:apply(com.intellij.ui.table.JBTable):V
com.intellij.openapi.ui.TestDialog
- sf:DEFAULT:com.intellij.openapi.ui.TestDialog
- sf:NO:com.intellij.openapi.ui.TestDialog
- sf:OK:com.intellij.openapi.ui.TestDialog
- sf:YES:com.intellij.openapi.ui.TestDialog
- a:show(java.lang.String):I
f:com.intellij.openapi.ui.TestDialogManager
- <init>():V
- s:getTestImplementation():com.intellij.openapi.ui.TestDialog
- s:getTestInputImplementation():com.intellij.openapi.ui.TestInputDialog
- s:setTestDialog(com.intellij.openapi.ui.TestDialog):com.intellij.openapi.ui.TestDialog
- s:setTestDialog(com.intellij.openapi.ui.TestDialog,com.intellij.openapi.Disposable):com.intellij.openapi.ui.TestDialog
- s:setTestInputDialog(com.intellij.openapi.ui.TestInputDialog):com.intellij.openapi.ui.TestInputDialog
com.intellij.openapi.ui.TestInputDialog
- sf:DEFAULT:com.intellij.openapi.ui.TestInputDialog
- sf:OK:com.intellij.openapi.ui.TestInputDialog
- a:show(java.lang.String):java.lang.String
- show(java.lang.String,com.intellij.openapi.ui.InputValidator):java.lang.String
c:com.intellij.openapi.ui.TextBrowseFolderListener
- com.intellij.openapi.ui.ComponentWithBrowseButton$BrowseFolderActionListener
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project):V
f:com.intellij.openapi.ui.TextComponentAccessors
- sf:TEXT_FIELD_WITH_HISTORY_WHOLE_TEXT:com.intellij.openapi.ui.TextComponentAccessor
- sf:TEXT_FIELD_WITH_STORED_HISTORY_WHOLE_TEXT:com.intellij.openapi.ui.TextComponentAccessor
c:com.intellij.openapi.ui.TextFieldWithBrowseButton
- com.intellij.openapi.ui.ComponentWithBrowseButton
- com.intellij.ui.TextAccessor
- <init>():V
- <init>(java.awt.event.ActionListener):V
- <init>(java.awt.event.ActionListener,com.intellij.openapi.Disposable):V
- <init>(javax.swing.JTextField):V
- <init>(javax.swing.JTextField,java.awt.event.ActionListener):V
- <init>(javax.swing.JTextField,java.awt.event.ActionListener,com.intellij.openapi.Disposable):V
- addBrowseFolderListener(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- addBrowseFolderListener(com.intellij.openapi.ui.TextBrowseFolderListener):V
- addBrowseFolderListener(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- addDocumentListener(javax.swing.event.DocumentListener):V
- getText():java.lang.String
- getTextField():javax.swing.JTextField
- p:installPathCompletion(com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- p:installPathCompletion(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.Disposable):V
- isEditable():Z
- setEditable(Z):V
- setText(java.lang.String):V
c:com.intellij.openapi.ui.TextFieldWithBrowseButton$NoPathCompletion
- com.intellij.openapi.ui.TextFieldWithBrowseButton
- <init>():V
- <init>(java.awt.event.ActionListener):V
- <init>(javax.swing.JTextField):V
- <init>(javax.swing.JTextField,java.awt.event.ActionListener):V
- p:installPathCompletion(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.Disposable):V
c:com.intellij.openapi.ui.ThreeComponentsSplitter
- javax.swing.JPanel
- <init>():V
- <init>(com.intellij.openapi.Disposable):V
- <init>(Z):V
- <init>(Z,Z):V
- b:<init>(Z,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:addDividerResizeListener(java.awt.event.ComponentListener):V
- addNotify():V
- doLayout():V
- pf:firstVisible():Z
- f:getDividerWidth():I
- f:getFirstComponent():javax.swing.JComponent
- f:getFirstSize():I
- f:getInnerComponent():javax.swing.JComponent
- f:getLastComponent():javax.swing.JComponent
- f:getLastSize():I
- f:getMaxSize(Z):I
- f:getMinSize():I
- f:getMinSize(Z):I
- getMinimumSize():java.awt.Dimension
- f:getOrientation():Z
- isVisible():Z
- pf:lastVisible():Z
- removeNotify():V
- f:setDividerMouseZoneSize(I):V
- f:setDividerWidth(I):V
- f:setFirstComponent(javax.swing.JComponent):V
- f:setFirstSize(I):V
- f:setHonorComponentsMinimumSize(Z):V
- f:setInnerComponent(javax.swing.JComponent):V
- f:setLastComponent(javax.swing.JComponent):V
- f:setLastSize(I):V
- f:setMinSize(I):V
- f:setOrientation(Z):V
- f:setShowDividerControls(Z):V
- updateUI():V
f:com.intellij.openapi.ui.TitlePanel
- javax.swing.JPanel
- <init>(java.lang.String,java.lang.String):V
c:com.intellij.openapi.ui.TreeComboBox
- com.intellij.openapi.ui.ComboBoxWithWidePopup
- <init>(javax.swing.tree.TreeModel):V
- <init>(javax.swing.tree.TreeModel,Z):V
- <init>(javax.swing.tree.TreeModel,Z,java.lang.String):V
- createFakeTree():javax.swing.JTree
- getTreeModel():javax.swing.tree.TreeModel
- setTreeModel(javax.swing.tree.TreeModel,Z):V
com.intellij.openapi.ui.TreeComboBox$CustomPresentation
- a:append(com.intellij.ui.SimpleColoredComponent,I):V
- a:getIcon(I,I):javax.swing.Icon
com.intellij.openapi.ui.TypingTarget
- a:type(java.lang.String):com.intellij.openapi.util.ActionCallback
f:com.intellij.openapi.ui.UiUtils
- sf:addExtension(com.intellij.ui.components.fields.ExtendableTextField,javax.swing.Icon,javax.swing.Icon,java.lang.String,kotlin.jvm.functions.Function0):V
- bs:addExtension$default(com.intellij.ui.components.fields.ExtendableTextField,javax.swing.Icon,javax.swing.Icon,java.lang.String,kotlin.jvm.functions.Function0,I,java.lang.Object):V
- sf:addKeyboardAction(javax.swing.JComponent,java.util.List,kotlin.jvm.functions.Function1):V
- sf:addKeyboardAction(javax.swing.JComponent,javax.swing.KeyStroke[],kotlin.jvm.functions.Function1):V
- sf:addPreferredFocusedComponent(javax.swing.JComponent,javax.swing.JComponent):V
- sf:asSequence(javax.swing.ListModel):kotlin.sequences.Sequence
- sf:asSequence(javax.swing.tree.TreeModel):kotlin.sequences.Sequence
- sf:getActionShortcutText(java.lang.String):java.lang.String
- sf:getCanonicalPath(java.lang.String):java.lang.String
- sf:getCanonicalPath(java.lang.String,Z):java.lang.String
- bs:getCanonicalPath$default(java.lang.String,Z,I,java.lang.Object):java.lang.String
- sf:getCollectionModel(com.intellij.openapi.ui.ComboBox):com.intellij.ui.CollectionComboBoxModel
- sf:getEmptyText(com.intellij.openapi.ui.TextFieldWithBrowseButton):com.intellij.util.ui.StatusText
- sf:getJbTextField(com.intellij.openapi.ui.TextFieldWithBrowseButton):com.intellij.ui.components.JBTextField
- sf:getKeyStrokes(java.lang.String[]):java.util.List
- sf:getPREFERRED_FOCUSED_COMPONENT():com.intellij.openapi.util.Key
- sf:getPreferredFocusedComponent(javax.swing.JComponent):javax.swing.JComponent
- sf:getPresentablePath(java.lang.String):java.lang.String
- sf:getTreePath(javax.swing.tree.TreeModel,java.lang.Object):javax.swing.tree.TreePath
- sf:isComponentUnderMouse(java.awt.Component):Z
- sf:isFocusAncestor(java.awt.Component):Z
- sf:isTextUnderMouse(javax.swing.text.JTextComponent,java.awt.event.MouseEvent):Z
- sf:naturalSorted(java.lang.Iterable):java.util.List
- sf:putUserData(javax.swing.JComponent,com.intellij.openapi.util.Key,java.lang.Object):V
- sf:removeKeyboardAction(javax.swing.JComponent,java.util.List):V
- sf:removeKeyboardAction(javax.swing.JComponent,javax.swing.KeyStroke[]):V
- sf:setEmptyState(com.intellij.openapi.ui.TextFieldWithBrowseButton,java.lang.String):com.intellij.openapi.ui.TextFieldWithBrowseButton
- sf:setEmptyState(java.awt.Component,java.lang.String):java.awt.Component
- sf:shortenText(java.lang.String,I,I,F,I,kotlin.jvm.functions.Function1,java.lang.String):java.lang.String
- bs:shortenText$default(java.lang.String,I,I,F,I,kotlin.jvm.functions.Function1,java.lang.String,I,java.lang.Object):java.lang.String
- sf:shortenTextWithEllipsis(java.lang.String,I,I,F,I,kotlin.jvm.functions.Function1,Z):java.lang.String
- bs:shortenTextWithEllipsis$default(java.lang.String,I,I,F,I,kotlin.jvm.functions.Function1,Z,I,java.lang.Object):java.lang.String
f:com.intellij.openapi.ui.cellvalidators.CellTooltipManager
c:com.intellij.openapi.ui.cellvalidators.StatefulValidatingCellEditor
- javax.swing.DefaultCellEditor
- java.util.function.Supplier
- <init>(javax.swing.JComboBox,com.intellij.openapi.Disposable):V
- <init>(javax.swing.JTextField,com.intellij.openapi.Disposable):V
- cancelCellEditing():V
- get():com.intellij.openapi.ui.ValidationInfo
- getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,Z,I,I):java.awt.Component
- stopCellEditing():Z
c:com.intellij.openapi.ui.cellvalidators.ValidatingTableCellRendererWrapper
- com.intellij.ui.CellRendererPanel
- javax.swing.table.TableCellRenderer
- sf:CELL_VALIDATION_PROPERTY:java.lang.String
- getPreferredSize():java.awt.Dimension
- f:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
- p:paintComponent(java.awt.Graphics):V
f:com.intellij.openapi.ui.cellvalidators.ValidationUtils
- sf:ERROR_EXTENSION:com.intellij.ui.components.fields.ExtendableTextComponent$Extension
- sf:WARNING_EXTENSION:com.intellij.ui.components.fields.ExtendableTextComponent$Extension
- s:setExtension(com.intellij.ui.components.fields.ExtendableTextComponent,com.intellij.openapi.ui.ValidationInfo):V
- s:setExtension(com.intellij.ui.components.fields.ExtendableTextComponent,com.intellij.ui.components.fields.ExtendableTextComponent$Extension,Z):V
c:com.intellij.openapi.ui.messages.MessageDialog
- com.intellij.openapi.ui.DialogWrapper
- p:myDefaultOptionIndex:I
- p:myExitActionTypes:com.intellij.openapi.ui.ExitActionType[]
- p:myFocusedOptionIndex:I
- p:myIcon:javax.swing.Icon
- p:myMessage:java.lang.String
- p:myOptions:java.lang.String[]
- p:<init>():V
- p:<init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.lang.String,java.lang.String[],I,I,javax.swing.Icon,com.intellij.openapi.ui.DoNotAskOption,Z):V
- <init>(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.lang.String,java.lang.String[],I,I,javax.swing.Icon,com.intellij.openapi.ui.DoNotAskOption,Z,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.lang.String,java.lang.String[],I,I,javax.swing.Icon,com.intellij.openapi.ui.DoNotAskOption,Z,java.lang.String,java.lang.String,com.intellij.openapi.ui.ExitActionType[]):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.String[],I,javax.swing.Icon,Z):V
- <init>(com.intellij.openapi.project.Project,Z):V
- <init>(java.lang.String,java.lang.String,java.lang.String[],I,javax.swing.Icon):V
- p:_init(java.lang.String,java.lang.String,java.lang.String[],I,I,javax.swing.Icon,com.intellij.openapi.ui.DoNotAskOption,java.lang.String):V
- p:_init(java.lang.String,java.lang.String,java.lang.String[],I,I,javax.swing.Icon,com.intellij.openapi.ui.DoNotAskOption,java.lang.String,java.lang.String,com.intellij.openapi.ui.ExitActionType[]):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createIconPanel():javax.swing.JPanel
- p:createMessageComponent(java.lang.String):javax.swing.JTextPane
- p:createMessagePanel():javax.swing.JPanel
- doCancelAction():V
- p:doCreateCenterPanel():javax.swing.JComponent
- p:getHelpId():java.lang.String
c:com.intellij.openapi.ui.messages.TwoStepConfirmationDialog
- com.intellij.openapi.ui.messages.MessageDialog
- <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,Z,I,I,javax.swing.Icon,java.util.function.BiFunction):V
- p:createCenterPanel():javax.swing.JComponent
- p:createCheckComponent():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- getExitCode():I
- getPreferredFocusedComponent():javax.swing.JComponent
a:com.intellij.openapi.ui.panel.ComponentPanel
- sf:DECORATED_PANEL_PROPERTY:java.lang.String
- <init>():V
- a:getCommentText():java.lang.String
- s:getComponentPanel(javax.swing.JComponent):com.intellij.openapi.ui.panel.ComponentPanel
- a:setCommentText(java.lang.String):V
c:com.intellij.openapi.ui.panel.ComponentPanelBuilder
- com.intellij.openapi.ui.panel.GridBagPanelBuilder
- sf:MAX_COMMENT_WIDTH:I
- <init>(javax.swing.JComponent):V
- addToPanel(javax.swing.JPanel,java.awt.GridBagConstraints,Z):V
- anchorLabelOn(com.intellij.util.ui.UI$Anchor):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- s:computeCommentInsets(javax.swing.JComponent,Z):java.awt.Insets
- constrainsValid():Z
- s:createCommentComponent(java.lang.String,Z):javax.swing.JLabel
- s:createCommentComponent(java.lang.String,Z,I):javax.swing.JLabel
- s:createCommentComponent(java.lang.String,Z,I,Z):javax.swing.JLabel
- s:createNonWrappingCommentComponent(java.lang.String):javax.swing.JLabel
- createPanel():javax.swing.JPanel
- s:getCommentFont(java.awt.Font):java.awt.Font
- gridWidth():I
- moveCommentRight():com.intellij.openapi.ui.panel.ComponentPanelBuilder
- moveLabelOnTop():com.intellij.openapi.ui.panel.ComponentPanelBuilder
- resizeX(Z):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- resizeY(Z):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- withComment(java.lang.String):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- withComment(java.lang.String,Z):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- withCommentHyperlinkListener(javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- withCommentIcon(javax.swing.Icon):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- withLabel(java.lang.String):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- withTooltip(java.lang.String):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- withTooltipLink(java.lang.String,java.lang.Runnable):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- withTopRightComponent(javax.swing.JComponent):com.intellij.openapi.ui.panel.ComponentPanelBuilder
com.intellij.openapi.ui.panel.GridBagPanelBuilder
- com.intellij.openapi.ui.panel.PanelBuilder
- a:addToPanel(javax.swing.JPanel,java.awt.GridBagConstraints,Z):V
- a:gridWidth():I
com.intellij.openapi.ui.panel.PanelBuilder
- a:constrainsValid():Z
- a:createPanel():javax.swing.JPanel
c:com.intellij.openapi.ui.panel.PanelGridBuilder
- com.intellij.openapi.ui.panel.PanelBuilder
- <init>():V
- add(com.intellij.openapi.ui.panel.PanelBuilder):com.intellij.openapi.ui.panel.PanelGridBuilder
- constrainsValid():Z
- createPanel():javax.swing.JPanel
- resize():com.intellij.openapi.ui.panel.PanelGridBuilder
- splitColumns():com.intellij.openapi.ui.panel.PanelGridBuilder
a:com.intellij.openapi.ui.panel.ProgressPanel
- com.intellij.openapi.ui.panel.ComponentPanel
- <init>():V
- a:getCancelButton():com.intellij.ui.InplaceButton
- a:getCancelButtonAsButton():javax.swing.JButton
- a:getLabelText():java.lang.String
- s:getProgressPanel(javax.swing.JComponent):com.intellij.openapi.ui.panel.ProgressPanel
- a:getState():com.intellij.openapi.ui.panel.ProgressPanel$State
- a:getSuspendButton():com.intellij.ui.InplaceButton
- a:setCommentEnabled(Z):V
- a:setLabelEnabled(Z):V
- a:setLabelText(java.lang.String):V
- a:setSeparatorEnabled(Z):V
- a:setState(com.intellij.openapi.ui.panel.ProgressPanel$State):V
- a:setText2(java.lang.String):V
- a:setText2Enabled(Z):V
e:com.intellij.openapi.ui.panel.ProgressPanel$State
- java.lang.Enum
- sf:CANCELLED:com.intellij.openapi.ui.panel.ProgressPanel$State
- sf:PAUSED:com.intellij.openapi.ui.panel.ProgressPanel$State
- sf:PLAYING:com.intellij.openapi.ui.panel.ProgressPanel$State
- s:valueOf(java.lang.String):com.intellij.openapi.ui.panel.ProgressPanel$State
- s:values():com.intellij.openapi.ui.panel.ProgressPanel$State[]
c:com.intellij.openapi.ui.panel.ProgressPanelBuilder
- com.intellij.openapi.ui.panel.GridBagPanelBuilder
- com.intellij.openapi.ui.panel.PanelBuilder
- <init>(javax.swing.JProgressBar):V
- addToPanel(javax.swing.JPanel,java.awt.GridBagConstraints,Z):V
- andCancelAsButton():com.intellij.openapi.ui.panel.ProgressPanelBuilder
- andCancelText(java.lang.String):com.intellij.openapi.ui.panel.ProgressPanelBuilder
- andSmallIcons():com.intellij.openapi.ui.panel.ProgressPanelBuilder
- constrainsValid():Z
- createPanel():javax.swing.JPanel
- gridWidth():I
- moveLabelLeft():com.intellij.openapi.ui.panel.ProgressPanelBuilder
- withCancel(java.lang.Runnable):com.intellij.openapi.ui.panel.ProgressPanelBuilder
- withLabel(java.lang.String):com.intellij.openapi.ui.panel.ProgressPanelBuilder
- withPause(java.lang.Runnable):com.intellij.openapi.ui.panel.ProgressPanelBuilder
- withResume(java.lang.Runnable):com.intellij.openapi.ui.panel.ProgressPanelBuilder
- withText2():com.intellij.openapi.ui.panel.ProgressPanelBuilder
- withTopSeparator():com.intellij.openapi.ui.panel.ProgressPanelBuilder
- withoutComment():com.intellij.openapi.ui.panel.ProgressPanelBuilder
c:com.intellij.openapi.ui.popup.ActiveIcon
- com.intellij.ui.icons.ReplaceableIcon
- javax.swing.Icon
- p:<init>(com.intellij.openapi.ui.popup.ActiveIcon):V
- <init>(javax.swing.Icon):V
- <init>(javax.swing.Icon,javax.swing.Icon):V
- getIconHeight():I
- getIconWidth():I
- getInactive():javax.swing.Icon
- getRegular():javax.swing.Icon
- paintIcon(java.awt.Component,java.awt.Graphics,I,I):V
- replaceBy(com.intellij.ui.icons.IconReplacer):com.intellij.openapi.ui.popup.ActiveIcon
- setActive(Z):V
- p:setIcons(javax.swing.Icon,javax.swing.Icon):V
com.intellij.openapi.ui.popup.BalloonBuilder
- a:createBalloon():com.intellij.openapi.ui.popup.Balloon
- a:setAnimationCycle(I):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setBlockClicksThroughBalloon(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setBorderColor(java.awt.Color):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setBorderInsets(java.awt.Insets):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setCalloutShift(I):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setClickHandler(java.awt.event.ActionListener,Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setCloseButtonEnabled(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setContentInsets(java.awt.Insets):com.intellij.openapi.ui.popup.BalloonBuilder
- setCornerRadius(I):com.intellij.openapi.ui.popup.BalloonBuilder
- setCornerToPointerDistance(I):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setDialogMode(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setDisposable(com.intellij.openapi.Disposable):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setFadeoutTime(J):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setFillColor(java.awt.Color):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setHideOnAction(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setHideOnClickOutside(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setHideOnCloseClick(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setHideOnFrameResize(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setHideOnKeyOutside(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setHideOnLinkClick(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setLayer(com.intellij.openapi.ui.popup.Balloon$Layer):com.intellij.openapi.ui.popup.BalloonBuilder
- setPointerShiftedToStart(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- setPointerSize(java.awt.Dimension):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setPositionChangeXShift(I):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setPositionChangeYShift(I):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setRequestFocus(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setShadow(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setShowCallout(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setSmallVariant(Z):com.intellij.openapi.ui.popup.BalloonBuilder
- a:setTitle(java.lang.String):com.intellij.openapi.ui.popup.BalloonBuilder
com.intellij.openapi.ui.popup.BalloonListener
- sf:Companion:com.intellij.openapi.ui.popup.BalloonListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- a:balloonShown(com.intellij.openapi.ui.popup.Balloon):V
f:com.intellij.openapi.ui.popup.BalloonListener$Companion
com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:addListener(com.intellij.openapi.ui.popup.JBPopupListener):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:addUserData(java.lang.Object):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:createPopup():com.intellij.openapi.ui.popup.JBPopup
- a:setAdText(java.lang.String):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setAdText(java.lang.String,I):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setAdvertiser(javax.swing.JComponent):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setAlpha(F):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setBelongsToGlobalPopupStack(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- setBorderColor(java.awt.Color):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setCancelButton(com.intellij.openapi.ui.popup.IconButton):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setCancelCallback(com.intellij.openapi.util.Computable):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setCancelKeyEnabled(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setCancelOnClickOutside(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setCancelOnMouseOutCallback(com.intellij.openapi.ui.popup.MouseChecker):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setCancelOnOtherWindowOpen(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setCancelOnWindowDeactivation(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setCommandButton(com.intellij.ui.ActiveComponent):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setCouldPin(com.intellij.util.Processor):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setDimensionServiceKey(com.intellij.openapi.project.Project,java.lang.String,Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setFocusOwners(java.awt.Component[]):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setFocusable(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setKeyEventHandler(com.intellij.util.BooleanFunction):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setKeyboardActions(java.util.List):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setLocateByContent(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setLocateWithinScreenBounds(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setMaskProvider(com.intellij.openapi.ui.popup.MaskProvider):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setMayBeParent(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setMinSize(java.awt.Dimension):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setModalContext(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setMovable(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setNormalWindowLevel(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setOkHandler(java.lang.Runnable):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setProject(com.intellij.openapi.project.Project):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setRequestFocus(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setRequestFocusCondition(com.intellij.openapi.project.Project,com.intellij.openapi.util.Condition):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setResizable(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setSettingButtons(java.awt.Component):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setShowBorder(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setShowShadow(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setStretchToOwnerHeight(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setStretchToOwnerWidth(Z):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setTitle(java.lang.String):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:setTitleIcon(com.intellij.openapi.ui.popup.ActiveIcon):com.intellij.openapi.ui.popup.ComponentPopupBuilder
com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:addListener(com.intellij.openapi.ui.popup.JBPopupListener):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:createPopup():com.intellij.openapi.ui.popup.JBPopup
- a:getBackgroundUpdater():com.intellij.openapi.ui.GenericListComponentUpdater
- a:registerKeyboardAction(javax.swing.KeyStroke,java.awt.event.ActionListener):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setAccessibleName(java.lang.String):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setAdText(java.lang.String):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setAdText(java.lang.String,I):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setAdvertiser(javax.swing.JComponent):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setAlpha(F):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setAutoPackHeightOnFiltering(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setAutoSelectIfEmpty(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setAutoselectOnMouseMove(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setCancelCallback(com.intellij.openapi.util.Computable):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setCancelKeyEnabled(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setCancelOnClickOutside(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setCancelOnOtherWindowOpen(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setCancelOnWindowDeactivation(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setCloseOnEnter(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setCouldPin(com.intellij.util.Processor):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setDimensionServiceKey(java.lang.String):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setFilterAlwaysVisible(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setFont(java.awt.Font):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setItemChosenCallback(com.intellij.util.Consumer):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setItemSelectedCallback(com.intellij.util.Consumer):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setItemsChosenCallback(com.intellij.util.Consumer):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setMayBeParent(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setMinSize(java.awt.Dimension):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setModalContext(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setMovable(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setNamerForFiltering(com.intellij.util.Function):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setRenderer(javax.swing.ListCellRenderer):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setRequestFocus(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setResizable(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setSelectedValue(java.lang.Object,Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setSelectionMode(I):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setSettingButton(java.awt.Component):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setTitle(java.lang.String):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setUseDimensionServiceForXYLocation(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:setVisibleRowCount(I):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:withFixedRendererSize(java.awt.Dimension):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- a:withHintUpdateSupply():com.intellij.openapi.ui.popup.IPopupChooserBuilder
c:com.intellij.openapi.ui.popup.IconButton
- com.intellij.openapi.ui.popup.ActiveIcon
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon):V
- getHovered():javax.swing.Icon
- getTooltip():java.lang.String
- replaceBy(com.intellij.ui.icons.IconReplacer):com.intellij.openapi.ui.popup.IconButton
com.intellij.openapi.ui.popup.IdePopupEventDispatcher
- a:close():Z
- a:dispatch(java.awt.AWTEvent):Z
- a:getComponent():java.awt.Component
- a:getPopupStream():java.util.stream.Stream
- a:requestFocus():Z
- setRestoreFocusSilently():V
a:com.intellij.openapi.ui.popup.JBPopupAdapter
- com.intellij.openapi.ui.popup.JBPopupListener
- <init>():V
a:com.intellij.openapi.ui.popup.JBPopupFactory
- <init>():V
- createActionGroupPopup(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid,Z):com.intellij.openapi.ui.popup.ListPopup
- createActionGroupPopup(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid,Z,java.lang.Runnable,I):com.intellij.openapi.ui.popup.ListPopup
- a:createActionGroupPopup(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid,Z,java.lang.Runnable,I,com.intellij.openapi.util.Condition,java.lang.String):com.intellij.openapi.ui.popup.ListPopup
- createActionGroupPopup(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid,Z,java.lang.String):com.intellij.openapi.ui.popup.ListPopup
- createActionGroupPopup(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,Z,java.lang.Runnable,I):com.intellij.openapi.ui.popup.ListPopup
- a:createActionGroupPopup(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,java.lang.Runnable,I,com.intellij.openapi.util.Condition):com.intellij.openapi.ui.popup.ListPopup
- a:createActionsStep(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,java.lang.String,Z,Z,java.lang.String,java.awt.Component,Z,I,Z):com.intellij.openapi.ui.popup.ListPopupStep
- createActionsStep(com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.DataContext,Z,Z,java.lang.String,java.awt.Component,Z,I,Z):com.intellij.openapi.ui.popup.ListPopupStep
- a:createBalloonBuilder(javax.swing.JComponent):com.intellij.openapi.ui.popup.BalloonBuilder
- a:createComponentPopupBuilder(javax.swing.JComponent,javax.swing.JComponent):com.intellij.openapi.ui.popup.ComponentPopupBuilder
- a:createConfirmation(java.lang.String,java.lang.Runnable,I):com.intellij.openapi.ui.popup.ListPopup
- a:createConfirmation(java.lang.String,java.lang.String,java.lang.String,java.lang.Runnable,I):com.intellij.openapi.ui.popup.ListPopup
- a:createConfirmation(java.lang.String,java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable,I):com.intellij.openapi.ui.popup.ListPopup
- a:createDialogBalloonBuilder(javax.swing.JComponent,java.lang.String):com.intellij.openapi.ui.popup.BalloonBuilder
- a:createHtmlTextBalloonBuilder(com.intellij.util.ui.Html,javax.swing.Icon,java.awt.Color,java.awt.Color,javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.popup.BalloonBuilder
- a:createHtmlTextBalloonBuilder(java.lang.String,com.intellij.openapi.ui.MessageType,javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.popup.BalloonBuilder
- a:createHtmlTextBalloonBuilder(java.lang.String,javax.swing.Icon,java.awt.Color,java.awt.Color,javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.popup.BalloonBuilder
- createHtmlTextBalloonBuilder(java.lang.String,javax.swing.Icon,java.awt.Color,javax.swing.event.HyperlinkListener):com.intellij.openapi.ui.popup.BalloonBuilder
- a:createListPopup(com.intellij.openapi.project.Project,com.intellij.openapi.ui.popup.ListPopupStep,java.util.function.Function):com.intellij.openapi.ui.popup.ListPopup
- a:createListPopup(com.intellij.openapi.ui.popup.ListPopupStep):com.intellij.openapi.ui.popup.ListPopup
- a:createListPopup(com.intellij.openapi.ui.popup.ListPopupStep,I):com.intellij.openapi.ui.popup.ListPopup
- createListPopupBuilder(javax.swing.JList):com.intellij.openapi.ui.popup.PopupChooserBuilder
- a:createMessage(java.lang.String):com.intellij.openapi.ui.popup.JBPopup
- a:createPopupChooserBuilder(java.util.List):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- createPopupChooserBuilder(javax.swing.JTable):com.intellij.openapi.ui.popup.PopupChooserBuilder
- pa:createPopupComponentAdapter(com.intellij.openapi.ui.popup.PopupChooserBuilder,javax.swing.JList):com.intellij.openapi.ui.popup.PopupChooserBuilder$PopupComponentAdapter
- pa:createPopupComponentAdapter(com.intellij.openapi.ui.popup.PopupChooserBuilder,javax.swing.JTable):com.intellij.openapi.ui.popup.PopupChooserBuilder$PopupComponentAdapter
- pa:createPopupComponentAdapter(com.intellij.openapi.ui.popup.PopupChooserBuilder,javax.swing.JTree):com.intellij.openapi.ui.popup.PopupChooserBuilder$PopupComponentAdapter
- a:createTree(com.intellij.openapi.ui.popup.JBPopup,com.intellij.openapi.ui.popup.TreePopupStep,java.lang.Object):com.intellij.openapi.ui.popup.TreePopup
- a:createTree(com.intellij.openapi.ui.popup.TreePopupStep):com.intellij.openapi.ui.popup.TreePopup
- a:getCenterOf(javax.swing.JComponent,javax.swing.JComponent):java.awt.Point
- getChildFocusedPopup(java.awt.Component):com.intellij.openapi.ui.popup.JBPopup
- a:getChildPopups(java.awt.Component):java.util.List
- s:getInstance():com.intellij.openapi.ui.popup.JBPopupFactory
- a:getParentBalloonFor(java.awt.Component):com.intellij.openapi.ui.popup.Balloon
- guessBestPopupLocation(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ui.awt.RelativePoint
- a:guessBestPopupLocation(com.intellij.openapi.actionSystem.DataContext):com.intellij.ui.awt.RelativePoint
- a:guessBestPopupLocation(com.intellij.openapi.editor.Editor):com.intellij.ui.awt.RelativePoint
- a:guessBestPopupLocation(javax.swing.JComponent):com.intellij.ui.awt.RelativePoint
- a:isBestPopupLocationVisible(com.intellij.openapi.editor.Editor):Z
- isChildPopupFocused(java.awt.Component):Z
- a:isPopupActive():Z
e:com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid
- java.lang.Enum
- sf:ALPHA_NUMBERING:com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid
- sf:MNEMONICS:com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid
- sf:NUMBERING:com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid
- sf:SPEEDSEARCH:com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid
- s:valueOf(java.lang.String):com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid
- s:values():com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid[]
com.intellij.openapi.ui.popup.ListPopupStepEx
- com.intellij.openapi.ui.popup.ListPopupStep
- getSecondaryIconFor(java.lang.Object):javax.swing.Icon
- getSecondaryTextFor(java.lang.Object):java.lang.String
- a:getTooltipTextFor(java.lang.Object):java.lang.String
- onChosen(java.lang.Object,Z,I):com.intellij.openapi.ui.popup.PopupStep
- onChosen(java.lang.Object,Z,java.awt.event.InputEvent):com.intellij.openapi.ui.popup.PopupStep
- a:setEmptyText(com.intellij.util.ui.StatusText):V
c:com.intellij.openapi.ui.popup.PopupChooserBuilder
- com.intellij.openapi.ui.popup.IPopupChooserBuilder
- <init>(javax.swing.JList):V
- <init>(javax.swing.JTable):V
- <init>(javax.swing.JTree):V
- addAdditionalChooseKeystroke(javax.swing.KeyStroke):com.intellij.openapi.ui.popup.PopupChooserBuilder
- p:addCenterComponentToContentPane(javax.swing.JPanel,javax.swing.JComponent):V
- addListener(com.intellij.openapi.ui.popup.JBPopupListener):com.intellij.openapi.ui.popup.PopupChooserBuilder
- createPopup():com.intellij.openapi.ui.popup.JBPopup
- getBackgroundUpdater():com.intellij.openapi.ui.GenericListComponentUpdater
- getChooserComponent():javax.swing.JComponent
- getItemsNamer():com.intellij.util.Function
- getPreferableFocusComponent():javax.swing.JComponent
- getScrollPane():javax.swing.JScrollPane
- getVisibleRowCount():I
- isAutoPackHeightOnFiltering():Z
- isAutoselectOnMouseMove():Z
- isFilterAlwaysVisible():Z
- registerKeyboardAction(javax.swing.KeyStroke,java.awt.event.ActionListener):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setAccessibleName(java.lang.String):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- setAdText(java.lang.String):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setAdText(java.lang.String,I):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setAdvertiser(javax.swing.JComponent):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setAlpha(F):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setAutoPackHeightOnFiltering(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- setAutoSelectIfEmpty(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setAutoselectOnMouseMove(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setCancelCallback(com.intellij.openapi.util.Computable):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setCancelKeyEnabled(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setCancelOnClickOutside(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setCancelOnOtherWindowOpen(Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- setCancelOnWindowDeactivation(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setCloseOnEnter(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setCommandButton(com.intellij.ui.ActiveComponent):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setContentSplitter(com.intellij.ui.JBSplitter):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setCouldPin(com.intellij.util.Processor):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setDimensionServiceKey(java.lang.String):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setEastComponent(javax.swing.JComponent):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setFilterAlwaysVisible(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setFilteringEnabled(com.intellij.util.Function):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setFocusOwners(java.awt.Component[]):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setFont(java.awt.Font):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- setItemChoosenCallback(java.lang.Runnable):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setItemChosenCallback(com.intellij.util.Consumer):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- setItemChosenCallback(java.lang.Runnable):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setItemSelectedCallback(com.intellij.util.Consumer):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- setItemsChosenCallback(com.intellij.util.Consumer):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- setMayBeParent(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setMinSize(java.awt.Dimension):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setModalContext(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setMovable(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setNamerForFiltering(com.intellij.util.Function):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setNorthComponent(javax.swing.JComponent):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setRenderer(javax.swing.ListCellRenderer):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- setRequestFocus(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setResizable(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setSelectedValue(java.lang.Object,Z):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- setSelectionMode(I):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- setSettingButton(java.awt.Component):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setSouthComponent(javax.swing.JComponent):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setTitle(java.lang.String):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setUseDimensionServiceForXYLocation(Z):com.intellij.openapi.ui.popup.PopupChooserBuilder
- setVisibleRowCount(I):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- withFixedRendererSize(java.awt.Dimension):com.intellij.openapi.ui.popup.IPopupChooserBuilder
- withHintUpdateSupply():com.intellij.openapi.ui.popup.IPopupChooserBuilder
com.intellij.openapi.ui.popup.PopupChooserBuilder$PopupComponentAdapter
- addMouseListener(java.awt.event.MouseListener):V
- autoSelect():V
- buildFinalComponent():javax.swing.JComponent
- checkResetFilter():Z
- a:createScrollPane():javax.swing.JScrollPane
- getBackgroundUpdater():com.intellij.openapi.ui.GenericListComponentUpdater
- a:getComponent():javax.swing.JComponent
- getKeyEventHandler():java.util.function.Predicate
- hasOwnScrollPane():Z
- setFixedRendererSize(java.awt.Dimension):V
- setFont(java.awt.Font):V
- a:setItemChosenCallback(com.intellij.util.Consumer):V
- setItemSelectedCallback(com.intellij.util.Consumer):V
- a:setItemsChosenCallback(com.intellij.util.Consumer):V
- setRenderer(javax.swing.ListCellRenderer):V
- setSelectedValue(java.lang.Object,Z):V
- setSelectionMode(I):V
e:com.intellij.openapi.ui.popup.PopupCornerType
- java.lang.Enum
- sf:None:com.intellij.openapi.ui.popup.PopupCornerType
- sf:RoundedTooltip:com.intellij.openapi.ui.popup.PopupCornerType
- sf:RoundedWindow:com.intellij.openapi.ui.popup.PopupCornerType
- s:valueOf(java.lang.String):com.intellij.openapi.ui.popup.PopupCornerType
- s:values():com.intellij.openapi.ui.popup.PopupCornerType[]
a:com.intellij.openapi.ui.popup.StackingPopupDispatcher
- com.intellij.openapi.ui.popup.IdePopupEventDispatcher
- <init>():V
- a:close():Z
- a:closeActivePopup():Z
- a:dispatchKeyEvent(java.awt.event.KeyEvent):Z
- a:eventDispatched(java.awt.AWTEvent):V
- getFocusedPopup():com.intellij.openapi.ui.popup.JBPopup
- s:getInstance():com.intellij.openapi.ui.popup.StackingPopupDispatcher
- a:hidePersistentPopups():V
- a:isPopupFocused():Z
- a:onPopupHidden(com.intellij.openapi.ui.popup.JBPopup):V
- a:onPopupShown(com.intellij.openapi.ui.popup.JBPopup,Z):V
- a:requestFocus():Z
- a:restorePersistentPopups():V
com.intellij.openapi.ui.popup.TreePopup
- com.intellij.openapi.ui.popup.JBPopup
com.intellij.openapi.ui.popup.TreePopupStep
- com.intellij.openapi.ui.popup.PopupStep
- a:getProject():com.intellij.openapi.project.Project
- a:getStructure():com.intellij.ide.util.treeView.AbstractTreeStructure
- a:isRootVisible():Z
- a:isSelectable(java.lang.Object,java.lang.Object):Z
c:com.intellij.openapi.ui.popup.util.BaseListPopupStep
- com.intellij.openapi.ui.popup.util.BaseStep
- com.intellij.openapi.ui.popup.ListPopupStep
- p:<init>():V
- <init>(java.lang.String,java.util.List):V
- <init>(java.lang.String,java.util.List,java.util.List):V
- <init>(java.lang.String,java.util.List,javax.swing.Icon):V
- <init>(java.lang.String,java.lang.Object[]):V
- <init>(java.lang.String,java.lang.Object[],javax.swing.Icon[]):V
- canceled():V
- getBackgroundFor(java.lang.Object):java.awt.Color
- getDefaultOptionIndex():I
- getForegroundFor(java.lang.Object):java.awt.Color
- getIconFor(java.lang.Object):javax.swing.Icon
- getSeparatorAbove(java.lang.Object):com.intellij.openapi.ui.popup.ListSeparator
- getTextFor(java.lang.Object):java.lang.String
- f:getTitle():java.lang.String
- f:getValues():java.util.List
- hasSubstep(java.lang.Object):Z
- pf:init(java.lang.String,java.util.List,java.util.List):V
- isSelectable(java.lang.Object):Z
- onChosen(java.lang.Object,Z):com.intellij.openapi.ui.popup.PopupStep
- setDefaultOptionIndex(I):V
a:com.intellij.openapi.ui.popup.util.BaseStep
- com.intellij.openapi.ui.popup.MnemonicNavigationFilter
- com.intellij.openapi.ui.popup.PopupStep
- com.intellij.openapi.ui.popup.SpeedSearchFilter
- <init>():V
- doFinalStep(java.lang.Runnable):com.intellij.openapi.ui.popup.PopupStep
- getFinalRunnable():java.lang.Runnable
- getIndexedString(java.lang.Object):java.lang.String
- getMnemonicNavigationFilter():com.intellij.openapi.ui.popup.MnemonicNavigationFilter
- getMnemonicPos(java.lang.Object):I
- getSpeedSearchFilter():com.intellij.openapi.ui.popup.SpeedSearchFilter
- isAutoSelectionEnabled():Z
- isMnemonicsNavigationEnabled():Z
- isSpeedSearchEnabled():Z
c:com.intellij.openapi.ui.popup.util.BaseTreePopupStep
- com.intellij.openapi.ui.popup.util.BaseStep
- com.intellij.openapi.ui.popup.TreePopupStep
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.ide.util.treeView.AbstractTreeStructure):V
- canceled():V
- getProject():com.intellij.openapi.project.Project
- getStructure():com.intellij.ide.util.treeView.AbstractTreeStructure
- getTextFor(java.lang.Object):java.lang.String
- getTitle():java.lang.String
- getValues():java.util.List
- hasSubstep(java.lang.Object):Z
- isRootVisible():Z
- isSelectable(java.lang.Object,java.lang.Object):Z
- isSpeedSearchEnabled():Z
- onChosen(java.lang.Object,Z):com.intellij.openapi.ui.popup.PopupStep
c:com.intellij.openapi.ui.popup.util.MinimizeButton
- com.intellij.openapi.ui.popup.IconButton
- <init>(java.lang.String):V
f:com.intellij.openapi.ui.popup.util.PopupUtil
- s:addToggledStateListener(com.intellij.openapi.ui.popup.JBPopup,com.intellij.openapi.actionSystem.Presentation):V
- s:applyNewUIBackground(java.awt.Component):V
- s:applyPreviewTitleInsets(javax.swing.JComponent):V
- s:configListRendererFixedHeight(com.intellij.ui.popup.list.SelectablePanel):V
- s:configListRendererFlexibleHeight(com.intellij.ui.popup.list.SelectablePanel):V
- s:createComplexPopupTextFieldBorder():javax.swing.border.Border
- s:getActiveComponent():java.awt.Component
- s:getComplexPopupHorizontalHeaderBorder():javax.swing.border.Border
- s:getComplexPopupVerticalHeaderBorder():javax.swing.border.Border
- s:getListInsets(Z,Z):java.awt.Insets
- s:getOwner(java.awt.Component):java.awt.Component
- s:getPopupContainerFor(java.awt.Component):com.intellij.openapi.ui.popup.JBPopup
- s:getPopupFor(java.awt.Window):com.intellij.openapi.ui.popup.JBPopup
- s:getPopupToggleComponent(com.intellij.openapi.ui.popup.JBPopup):java.awt.Component
- s:getPopupType(javax.swing.PopupFactory):I
- s:handleEscKeyEvent():Z
- s:isComboPopupKeyEvent(java.awt.event.ComponentEvent,javax.swing.JComboBox):Z
- s:setPopupToggleComponent(com.intellij.openapi.ui.popup.JBPopup,java.awt.Component):V
- s:setPopupType(javax.swing.PopupFactory,I):V
- s:showBalloonForActiveComponent(java.lang.String,com.intellij.openapi.ui.MessageType):V
- s:showBalloonForActiveFrame(java.lang.String,com.intellij.openapi.ui.MessageType):V
- s:showBalloonForComponent(java.awt.Component,java.lang.String,com.intellij.openapi.ui.MessageType,Z,com.intellij.openapi.Disposable):V
- s:showForActionButtonEvent(com.intellij.openapi.ui.popup.JBPopup,com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.ui.popup.util.RoundedCellRenderer
- javax.swing.ListCellRenderer
- <init>(javax.swing.ListCellRenderer):V
- <init>(javax.swing.ListCellRenderer,Z):V
- b:<init>(javax.swing.ListCellRenderer,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
com.intellij.openapi.ui.validation.DialogValidation
- a:validate():com.intellij.openapi.ui.ValidationInfo
com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- a:curry(java.lang.Object):com.intellij.openapi.ui.validation.DialogValidation
com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- a:curry(java.lang.Object):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
com.intellij.openapi.ui.validation.DialogValidationRequestor
- a:subscribe(com.intellij.openapi.Disposable,kotlin.jvm.functions.Function0):V
com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
- a:invoke(java.lang.Object):com.intellij.openapi.ui.validation.DialogValidationRequestor
f:com.intellij.openapi.ui.validation.OperationUtilKt
- sf:and(com.intellij.openapi.ui.validation.DialogValidation$WithParameter,com.intellij.openapi.ui.validation.DialogValidation$WithParameter):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:and(com.intellij.openapi.ui.validation.DialogValidation$WithParameter,com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:and(com.intellij.openapi.ui.validation.DialogValidation$WithParameter,com.intellij.openapi.ui.validation.DialogValidation):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:and(com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters,com.intellij.openapi.ui.validation.DialogValidation$WithParameter):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:and(com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters,com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:and(com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters,com.intellij.openapi.ui.validation.DialogValidation):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:and(com.intellij.openapi.ui.validation.DialogValidation,com.intellij.openapi.ui.validation.DialogValidation$WithParameter):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:and(com.intellij.openapi.ui.validation.DialogValidation,com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:and(com.intellij.openapi.ui.validation.DialogValidation,com.intellij.openapi.ui.validation.DialogValidation):com.intellij.openapi.ui.validation.DialogValidation
- sf:asWarning(com.intellij.openapi.ui.validation.DialogValidation$WithParameter):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:asWarning(com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:asWarning(com.intellij.openapi.ui.validation.DialogValidation):com.intellij.openapi.ui.validation.DialogValidation
- sf:forProperty(com.intellij.openapi.ui.validation.DialogValidation$WithParameter):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:forProperty(com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:forTextComponent(com.intellij.openapi.ui.validation.DialogValidation$WithParameter):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:forTextFieldWithBrowseButton(com.intellij.openapi.ui.validation.DialogValidation$WithParameter):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:invoke(com.intellij.openapi.ui.validation.DialogValidation$WithParameter,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.ui.validation.DialogValidation
- sf:invoke(com.intellij.openapi.ui.validation.DialogValidation$WithParameter,java.lang.Object):com.intellij.openapi.ui.validation.DialogValidation
- sf:invoke(com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters,java.lang.Object):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:invoke(com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters,java.lang.Object,com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.openapi.ui.validation.DialogValidation
- sf:invoke(com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters,java.lang.Object,java.lang.Object):com.intellij.openapi.ui.validation.DialogValidation
- sf:transformParameter(com.intellij.openapi.ui.validation.DialogValidation$WithParameter,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:transformResult(com.intellij.openapi.ui.validation.DialogValidation$WithParameter,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:transformResult(com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:transformResult(com.intellij.openapi.ui.validation.DialogValidation,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.validation.DialogValidation
- sf:trimParameter(com.intellij.openapi.ui.validation.DialogValidation$WithParameter):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:withOKEnabled(com.intellij.openapi.ui.validation.DialogValidation$WithParameter):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:withOKEnabled(com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:withOKEnabled(com.intellij.openapi.ui.validation.DialogValidation):com.intellij.openapi.ui.validation.DialogValidation
f:com.intellij.openapi.ui.validation.RequestorUtilKt
- sf:and(com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter,com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter):com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
- sf:and(com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter,com.intellij.openapi.ui.validation.DialogValidationRequestor):com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
- sf:and(com.intellij.openapi.ui.validation.DialogValidationRequestor,com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter):com.intellij.openapi.ui.validation.DialogValidationRequestor$WithParameter
- sf:and(com.intellij.openapi.ui.validation.DialogValidationRequestor,com.intellij.openapi.ui.validation.DialogValidationRequestor):com.intellij.openapi.ui.validation.DialogValidationRequestor
f:com.intellij.openapi.ui.validation.ValidationUtilKt
- sf:validationErrorFor(kotlin.jvm.functions.Function1):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:validationErrorFor(kotlin.jvm.functions.Function2):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:validationErrorIf(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:validationErrorIf(java.lang.String,kotlin.jvm.functions.Function2):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
- sf:validationPathErrorFor(kotlin.jvm.functions.Function1):com.intellij.openapi.ui.validation.DialogValidation$WithParameter
- sf:validationPathErrorFor(kotlin.jvm.functions.Function2):com.intellij.openapi.ui.validation.DialogValidation$WithTwoParameters
c:com.intellij.openapi.util.DefaultModificationTracker
- com.intellij.openapi.util.SimpleModificationTracker
- <init>():V
f:com.intellij.openapi.util.DimensionService
- com.intellij.openapi.util.SimpleModificationTracker
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- s:getInstance():com.intellij.openapi.util.DimensionService
- getLocation(java.lang.String):java.awt.Point
- getLocation(java.lang.String,com.intellij.openapi.project.Project):java.awt.Point
- getSize(java.lang.String):java.awt.Dimension
- getSize(java.lang.String,com.intellij.openapi.project.Project):java.awt.Dimension
- getState():org.jdom.Element
- loadState(org.jdom.Element):V
- setLocation(java.lang.String,java.awt.Point):V
- setLocation(java.lang.String,java.awt.Point,com.intellij.openapi.project.Project):V
- setSize(java.lang.String,java.awt.Dimension):V
- setSize(java.lang.String,java.awt.Dimension,com.intellij.openapi.project.Project):V
a:com.intellij.openapi.util.NamedRunnable
- java.lang.Runnable
- p:<init>(java.lang.String):V
- p:trace(java.lang.Object):V
com.intellij.openapi.util.Weighted
- a:getWeight():D
com.intellij.openapi.util.WindowState
- a:applyTo(java.awt.Window):V
- a:getExtendedState():I
- a:getLocation():java.awt.Point
- a:getSize():java.awt.Dimension
- a:isFullScreen():Z
a:com.intellij.openapi.util.WindowStateService
- sf:USE_APPLICATION_WIDE_STORE_KEY_PREFIX:java.lang.String
- p:<init>(com.intellij.openapi.project.Project):V
- f:getBounds(java.lang.String):java.awt.Rectangle
- a:getBoundsFor(java.lang.Object,java.lang.String):java.awt.Rectangle
- s:getInstance():com.intellij.openapi.util.WindowStateService
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.util.WindowStateService
- f:getLocation(java.lang.String):java.awt.Point
- a:getLocationFor(java.lang.Object,java.lang.String):java.awt.Point
- f:getSize(java.lang.String):java.awt.Dimension
- a:getSizeFor(java.lang.Object,java.lang.String):java.awt.Dimension
- f:getState(java.lang.String,java.awt.Window):com.intellij.openapi.util.WindowState
- a:getStateFor(com.intellij.openapi.project.Project,java.lang.String,java.awt.Window):com.intellij.openapi.util.WindowState
- f:putBounds(java.lang.String,java.awt.Rectangle):V
- a:putBoundsFor(java.lang.Object,java.lang.String,java.awt.Rectangle):V
- f:putLocation(java.lang.String,java.awt.Point):V
- a:putLocationFor(java.lang.Object,java.lang.String,java.awt.Point):V
- f:putSize(java.lang.String,java.awt.Dimension):V
- a:putSizeFor(java.lang.Object,java.lang.String,java.awt.Dimension):V
a:com.intellij.openapi.util.process.InterruptibleActivity
- p:<init>(J,java.util.concurrent.TimeUnit):V
- f:execute():I
- pa:interrupt():V
- pa:processTimeout():I
- p:processTimeoutInEDT():I
- pa:start():V
- f:touch():V
a:com.intellij.openapi.util.process.InterruptibleProcess
- com.intellij.openapi.util.process.InterruptibleActivity
- p:<init>(java.lang.Process,J,java.util.concurrent.TimeUnit):V
- s:close(java.lang.Process):V
- closeProcess():V
- f:getErrorStream():java.io.InputStream
- getExitCode():I
- f:getInputStream():java.io.InputStream
- p:interrupt():V
- p:start():V
f:com.intellij.openapi.util.process.ProcessCloseUtil
- <init>():V
- s:close(java.lang.Process):V
com.intellij.openapi.vcs.impl.CancellableRunnable
- java.lang.Runnable
- a:cancel():V
a:com.intellij.openapi.vcs.impl.ProcessWaiter
- p:myErrStreamListener:com.intellij.openapi.vcs.impl.CancellableRunnable
- p:myInStreamListener:com.intellij.openapi.vcs.impl.CancellableRunnable
- <init>():V
- cancelListeners():V
- pa:createStreamListener(java.io.InputStream):com.intellij.openapi.vcs.impl.CancellableRunnable
- execute(com.intellij.openapi.util.process.InterruptibleProcess,J):I
- getErrStreamListener():com.intellij.openapi.vcs.impl.CancellableRunnable
- getInStreamListener():com.intellij.openapi.vcs.impl.CancellableRunnable
- p:tryReadStreams(I):Z
f:com.intellij.openapi.vfs.VirtualFileWrapper
- <init>(java.io.File):V
- exists():Z
- getFile():java.io.File
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- getVirtualFile(Z):com.intellij.openapi.vfs.VirtualFile
c:com.intellij.openapi.wm.AppIconScheme
- <init>():V
com.intellij.openapi.wm.AppIconScheme$Progress
- sf:BUILD:com.intellij.openapi.wm.AppIconScheme$Progress
- sf:INDEXING:com.intellij.openapi.wm.AppIconScheme$Progress
- sf:TESTS:com.intellij.openapi.wm.AppIconScheme$Progress
- a:getErrorColor():java.awt.Color
- a:getOkColor():java.awt.Color
a:com.intellij.openapi.wm.BannerStartPagePromoter
- <init>():V
- p:createButton():javax.swing.JComponent
- p:createHeader():javax.swing.JLabel
- pa:getActionLabel():java.lang.String
- p:getCloseAction():kotlin.jvm.functions.Function1
- pa:getDescription():java.lang.String
- pa:getHeaderLabel():java.lang.String
- pa:getPromoImage():javax.swing.Icon
- getPromotion(Z):javax.swing.JComponent
- p:onBannerHide():V
- p:onBannerShown():V
- pa:runAction():V
com.intellij.openapi.wm.CustomStatusBarWidget
- com.intellij.openapi.wm.StatusBarWidget
- a:getComponent():javax.swing.JComponent
com.intellij.openapi.wm.IconLikeCustomStatusBarWidget
- com.intellij.openapi.wm.CustomStatusBarWidget
com.intellij.openapi.wm.IdeGlassPane
- a:addMouseListener(java.awt.event.MouseListener,kotlinx.coroutines.CoroutineScope):V
- a:addMouseMotionPreprocessor(java.awt.event.MouseMotionListener,com.intellij.openapi.Disposable):V
- a:addMousePreprocessor(java.awt.event.MouseListener,com.intellij.openapi.Disposable):V
- a:addPainter(java.awt.Component,com.intellij.openapi.ui.Painter,com.intellij.openapi.Disposable):V
- a:setCursor(java.awt.Cursor,java.lang.Object):V
com.intellij.openapi.wm.IdeGlassPane$TopComponent
- a:canBePreprocessed(java.awt.event.MouseEvent):Z
f:com.intellij.openapi.wm.IdeGlassPaneUtil
- s:canBePreprocessed(java.awt.event.MouseEvent):Z
- s:find(java.awt.Component):com.intellij.openapi.wm.IdeGlassPane
- s:installPainter(javax.swing.JComponent,com.intellij.openapi.ui.Painter,com.intellij.openapi.Disposable):V
com.intellij.openapi.wm.IdeRootPaneNorthExtension
- sf:Companion:com.intellij.openapi.wm.IdeRootPaneNorthExtension$Companion
- createComponent(com.intellij.openapi.project.Project,Z):javax.swing.JComponent
- a:getKey():java.lang.String
f:com.intellij.openapi.wm.IdeRootPaneNorthExtension$Companion
com.intellij.openapi.wm.InteractiveCourseData
- a:getAction():javax.swing.Action
- a:getActionButtonName():java.lang.String
- a:getDescription():java.lang.String
- a:getIcon():javax.swing.Icon
- a:getName():java.lang.String
- isEduTools():Z
- newContentMarker():javax.swing.JComponent
com.intellij.openapi.wm.InteractiveCourseFactory
- sf:Companion:com.intellij.openapi.wm.InteractiveCourseFactory$Companion
- a:getCourseData():com.intellij.openapi.wm.InteractiveCourseData
- a:getDisabledText():java.lang.String
- a:getInteractiveCourseComponent():javax.swing.JComponent
- a:isActive():Z
- a:isEnabled():Z
f:com.intellij.openapi.wm.InteractiveCourseFactory$Companion
- f:getINTERACTIVE_COURSE_FACTORY_EP():com.intellij.openapi.extensions.ExtensionPointName
com.intellij.openapi.wm.LightEditFrame
f:com.intellij.openapi.wm.RegisterToolWindowTask
- sf:Companion:com.intellij.openapi.wm.RegisterToolWindowTask$Companion
- <init>(java.lang.String,com.intellij.openapi.wm.ToolWindowAnchor,javax.swing.JComponent,Z,Z,Z,Z,com.intellij.openapi.wm.ToolWindowFactory,javax.swing.Icon,java.util.function.Supplier):V
- b:<init>(java.lang.String,com.intellij.openapi.wm.ToolWindowAnchor,javax.swing.JComponent,Z,Z,Z,Z,com.intellij.openapi.wm.ToolWindowFactory,javax.swing.Icon,java.util.function.Supplier,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- sf:closable(java.lang.String,java.util.function.Supplier,javax.swing.Icon):com.intellij.openapi.wm.RegisterToolWindowTask
- sf:closable(java.lang.String,java.util.function.Supplier,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.RegisterToolWindowTask
- sf:closable(java.lang.String,javax.swing.Icon):com.intellij.openapi.wm.RegisterToolWindowTask
- sf:closable(java.lang.String,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.RegisterToolWindowTask
- sf:lazyAndClosable(java.lang.String,com.intellij.openapi.wm.ToolWindowFactory,javax.swing.Icon):com.intellij.openapi.wm.RegisterToolWindowTask
- sf:lazyAndClosable(java.lang.String,com.intellij.openapi.wm.ToolWindowFactory,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.RegisterToolWindowTask
- sf:notClosable(java.lang.String):com.intellij.openapi.wm.RegisterToolWindowTask
- sf:notClosable(java.lang.String,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.RegisterToolWindowTask
- sf:notClosable(java.lang.String,javax.swing.Icon):com.intellij.openapi.wm.RegisterToolWindowTask
- sf:notClosable(java.lang.String,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.RegisterToolWindowTask
f:com.intellij.openapi.wm.RegisterToolWindowTask$Companion
- f:closable(java.lang.String,java.util.function.Supplier,javax.swing.Icon):com.intellij.openapi.wm.RegisterToolWindowTask
- f:closable(java.lang.String,java.util.function.Supplier,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.RegisterToolWindowTask
- f:closable(java.lang.String,javax.swing.Icon):com.intellij.openapi.wm.RegisterToolWindowTask
- f:closable(java.lang.String,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.RegisterToolWindowTask
- bs:closable$default(com.intellij.openapi.wm.RegisterToolWindowTask$Companion,java.lang.String,java.util.function.Supplier,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor,I,java.lang.Object):com.intellij.openapi.wm.RegisterToolWindowTask
- bs:closable$default(com.intellij.openapi.wm.RegisterToolWindowTask$Companion,java.lang.String,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor,I,java.lang.Object):com.intellij.openapi.wm.RegisterToolWindowTask
- f:lazyAndClosable(java.lang.String,com.intellij.openapi.wm.ToolWindowFactory,javax.swing.Icon):com.intellij.openapi.wm.RegisterToolWindowTask
- f:lazyAndClosable(java.lang.String,com.intellij.openapi.wm.ToolWindowFactory,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.RegisterToolWindowTask
- bs:lazyAndClosable$default(com.intellij.openapi.wm.RegisterToolWindowTask$Companion,java.lang.String,com.intellij.openapi.wm.ToolWindowFactory,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor,I,java.lang.Object):com.intellij.openapi.wm.RegisterToolWindowTask
- f:notClosable(java.lang.String):com.intellij.openapi.wm.RegisterToolWindowTask
- f:notClosable(java.lang.String,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.RegisterToolWindowTask
- f:notClosable(java.lang.String,javax.swing.Icon):com.intellij.openapi.wm.RegisterToolWindowTask
- f:notClosable(java.lang.String,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.RegisterToolWindowTask
- bs:notClosable$default(com.intellij.openapi.wm.RegisterToolWindowTask$Companion,java.lang.String,com.intellij.openapi.wm.ToolWindowAnchor,I,java.lang.Object):com.intellij.openapi.wm.RegisterToolWindowTask
- bs:notClosable$default(com.intellij.openapi.wm.RegisterToolWindowTask$Companion,java.lang.String,javax.swing.Icon,com.intellij.openapi.wm.ToolWindowAnchor,I,java.lang.Object):com.intellij.openapi.wm.RegisterToolWindowTask
f:com.intellij.openapi.wm.RegisterToolWindowTaskBuilder
- anchor:com.intellij.openapi.wm.ToolWindowAnchor
- canCloseContent:Z
- contentFactory:com.intellij.openapi.wm.ToolWindowFactory
- hideOnEmptyContent:Z
- icon:javax.swing.Icon
- shouldBeAvailable:Z
- sideTool:Z
- stripeTitle:java.util.function.Supplier
- <init>(java.lang.String):V
- f:build():com.intellij.openapi.wm.RegisterToolWindowTask
com.intellij.openapi.wm.StatusBarWidgetFactory
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- canBeEnabledOn(com.intellij.openapi.wm.StatusBar):Z
- createWidget(com.intellij.openapi.project.Project):com.intellij.openapi.wm.StatusBarWidget
- createWidget(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):com.intellij.openapi.wm.StatusBarWidget
- disposeWidget(com.intellij.openapi.wm.StatusBarWidget):V
- a:getDisplayName():java.lang.String
- a:getId():java.lang.String
- isAvailable(com.intellij.openapi.project.Project):Z
- isConfigurable():Z
- isEnabledByDefault():Z
com.intellij.openapi.wm.StatusBarWidgetProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- getAnchor():java.lang.String
- a:getWidget(com.intellij.openapi.project.Project):com.intellij.openapi.wm.StatusBarWidget
- isCompatibleWith(com.intellij.openapi.wm.IdeFrame):Z
f:com.intellij.openapi.wm.ToolWindowAllowlistEP
- id:java.lang.String
- <init>():V
f:com.intellij.openapi.wm.ToolWindowBalloonShowOptions
- <init>(java.lang.String,com.intellij.openapi.ui.MessageType,java.lang.String,javax.swing.Icon,javax.swing.event.HyperlinkListener,java.util.function.Consumer):V
- b:<init>(java.lang.String,com.intellij.openapi.ui.MessageType,java.lang.String,javax.swing.Icon,javax.swing.event.HyperlinkListener,java.util.function.Consumer,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.String
- f:component2():com.intellij.openapi.ui.MessageType
- f:component3():java.lang.String
- f:component4():javax.swing.Icon
- f:component5():javax.swing.event.HyperlinkListener
- f:component6():java.util.function.Consumer
- f:copy(java.lang.String,com.intellij.openapi.ui.MessageType,java.lang.String,javax.swing.Icon,javax.swing.event.HyperlinkListener,java.util.function.Consumer):com.intellij.openapi.wm.ToolWindowBalloonShowOptions
- bs:copy$default(com.intellij.openapi.wm.ToolWindowBalloonShowOptions,java.lang.String,com.intellij.openapi.ui.MessageType,java.lang.String,javax.swing.Icon,javax.swing.event.HyperlinkListener,java.util.function.Consumer,I,java.lang.Object):com.intellij.openapi.wm.ToolWindowBalloonShowOptions
- equals(java.lang.Object):Z
- f:getBalloonCustomizer():java.util.function.Consumer
- f:getHtmlBody():java.lang.String
- f:getIcon():javax.swing.Icon
- f:getListener():javax.swing.event.HyperlinkListener
- f:getToolWindowId():java.lang.String
- f:getType():com.intellij.openapi.ui.MessageType
- hashCode():I
c:com.intellij.openapi.wm.ToolWindowEP
- com.intellij.openapi.extensions.PluginAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- anchor:java.lang.String
- canCloseContents:Z
- conditionClass:java.lang.String
- factoryClass:java.lang.String
- icon:java.lang.String
- id:java.lang.String
- isDoNotActivateOnStart:Z
- largeStripeAnchor:java.lang.String
- secondary:Z
- side:Z
- <init>():V
- getCondition(com.intellij.openapi.extensions.PluginDescriptor):com.intellij.openapi.util.Condition
- f:getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- getToolWindowFactory(com.intellij.openapi.extensions.PluginDescriptor):com.intellij.openapi.wm.ToolWindowFactory
- f:setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
com.intellij.openapi.wm.ToolWindowFactory
- com.intellij.openapi.project.PossiblyDumbAware
- a:createToolWindowContent(com.intellij.openapi.project.Project,com.intellij.openapi.wm.ToolWindow):V
- init(com.intellij.openapi.wm.ToolWindow):V
- isApplicable(com.intellij.openapi.project.Project):Z
- isApplicableAsync(com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- bs:isApplicableAsync$suspendImpl(com.intellij.openapi.wm.ToolWindowFactory,com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- isDoNotActivateOnStart():Z
- shouldBeAvailable(com.intellij.openapi.project.Project):Z
a:com.intellij.openapi.wm.ToolWindowManager
- sf:Companion:com.intellij.openapi.wm.ToolWindowManager$Companion
- <init>():V
- a:activateEditorComponent():V
- a:canShowNotification(java.lang.String):Z
- a:getActiveToolWindowId():java.lang.String
- a:getFocusManager():com.intellij.openapi.wm.IdeFocusManager
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.wm.ToolWindowManager
- a:getLastActiveToolWindowId():java.lang.String
- getLocationIcon(java.lang.String,javax.swing.Icon):javax.swing.Icon
- getShowInFindToolWindowIcon():javax.swing.Icon
- a:getToolWindow(java.lang.String):com.intellij.openapi.wm.ToolWindow
- a:getToolWindowBalloon(java.lang.String):com.intellij.openapi.ui.popup.Balloon
- a:getToolWindowIdSet():java.util.Set
- a:getToolWindowIds():java.lang.String[]
- a:invokeLater(java.lang.Runnable):V
- a:isEditorComponentActive():Z
- a:isMaximized(com.intellij.openapi.wm.ToolWindow):Z
- isStripeButtonShow(com.intellij.openapi.wm.ToolWindow):Z
- a:notifyByBalloon(com.intellij.openapi.wm.ToolWindowBalloonShowOptions):V
- f:notifyByBalloon(java.lang.String,com.intellij.openapi.ui.MessageType,java.lang.String):V
- f:notifyByBalloon(java.lang.String,com.intellij.openapi.ui.MessageType,java.lang.String,javax.swing.Icon,javax.swing.event.HyperlinkListener):V
- f:registerToolWindow(java.lang.String,javax.swing.JComponent,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.ToolWindow
- f:registerToolWindow(java.lang.String,kotlin.jvm.functions.Function1):com.intellij.openapi.wm.ToolWindow
- f:registerToolWindow(java.lang.String,Z,com.intellij.openapi.wm.ToolWindowAnchor):com.intellij.openapi.wm.ToolWindow
- f:registerToolWindow(java.lang.String,Z,com.intellij.openapi.wm.ToolWindowAnchor,com.intellij.openapi.Disposable):com.intellij.openapi.wm.ToolWindow
- f:registerToolWindow(java.lang.String,Z,com.intellij.openapi.wm.ToolWindowAnchor,com.intellij.openapi.Disposable,Z):com.intellij.openapi.wm.ToolWindow
- f:registerToolWindow(java.lang.String,Z,com.intellij.openapi.wm.ToolWindowAnchor,com.intellij.openapi.Disposable,Z,Z):com.intellij.openapi.wm.ToolWindow
- f:registerToolWindow(java.lang.String,Z,com.intellij.openapi.wm.ToolWindowAnchor,Z):com.intellij.openapi.wm.ToolWindow
- a:setMaximized(com.intellij.openapi.wm.ToolWindow,Z):V
- a:unregisterToolWindow(java.lang.String):V
f:com.intellij.openapi.wm.ToolWindowManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.wm.ToolWindowManager
f:com.intellij.openapi.wm.WeakFocusStackManager
- s:getInstance():com.intellij.openapi.wm.WeakFocusStackManager
- getLastFocusedOutside(java.awt.Container):java.awt.Component
com.intellij.openapi.wm.WelcomeFrameProvider
- a:createFrame():com.intellij.openapi.wm.IdeFrame
com.intellij.openapi.wm.WelcomeScreen
- com.intellij.openapi.Disposable
- a:getWelcomePanel():javax.swing.JComponent
- setupFrame(javax.swing.JFrame):V
com.intellij.openapi.wm.WelcomeScreenProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createWelcomeScreen(javax.swing.JRootPane):com.intellij.openapi.wm.WelcomeScreen
- a:isAvailable():Z
com.intellij.openapi.wm.WelcomeScreenTab
- a:getAssociatedComponent():javax.swing.JComponent
- getChildTabs():java.util.List
- getChildTabsName():java.lang.String
- a:getKeyComponent(javax.swing.JComponent):javax.swing.JComponent
- updateComponent():V
com.intellij.openapi.wm.WelcomeTabFactory
- sf:WELCOME_TAB_FACTORY_EP:com.intellij.openapi.extensions.ExtensionPointName
- createWelcomeTabs(com.intellij.openapi.wm.WelcomeScreen,com.intellij.openapi.Disposable):java.util.List
- isApplicable():Z
com.intellij.openapi.wm.WindowInfo
- a:getAnchor():com.intellij.openapi.wm.ToolWindowAnchor
- a:getContentUiType():com.intellij.openapi.wm.ToolWindowContentUiType
- a:getFloatingBounds():java.awt.Rectangle
- a:getId():java.lang.String
- a:getInternalType():com.intellij.openapi.wm.ToolWindowType
- a:getOrder():I
- a:getSideWeight():F
- a:getToolWindowPaneId():java.lang.String
- a:getType():com.intellij.openapi.wm.ToolWindowType
- a:getWeight():F
- a:isActiveOnStart():Z
- a:isAutoHide():Z
- a:isDocked():Z
- a:isMaximized():Z
- a:isShowStripeButton():Z
- a:isSplit():Z
- a:isVisible():Z
f:com.intellij.openapi.wm.WindowInfoKt
- sf:WINDOW_INFO_DEFAULT_TOOL_WINDOW_PANE_ID:java.lang.String
- sf:getSafeToolWindowPaneId(com.intellij.openapi.wm.WindowInfo):java.lang.String
f:com.intellij.openapi.wm.ext.LibraryDependentToolWindow
- com.intellij.openapi.wm.ToolWindowEP
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- librarySearchClass:java.lang.String
- showOnStripeByDefault:Z
- <init>():V
- getLibrarySearchHelper():com.intellij.openapi.wm.ext.LibrarySearchHelper
com.intellij.openapi.wm.ext.LibrarySearchHelper
- a:isLibraryExists(com.intellij.openapi.project.Project):Z
com.intellij.platform.ide.customization.ExternalProductResourceUrls
- sf:Companion:com.intellij.platform.ide.customization.ExternalProductResourceUrls$Companion
- a:computePatchUrl(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.util.BuildNumber):com.intellij.util.Url
- getBugReportUrl():kotlin.jvm.functions.Function1
- getDownloadPageUrl():com.intellij.util.Url
- getFeedbackReporter():com.intellij.platform.ide.customization.FeedbackReporter
- getGettingStartedPageUrl():com.intellij.util.Url
- getHelpPageUrl():kotlin.jvm.functions.Function1
- s:getInstance():com.intellij.platform.ide.customization.ExternalProductResourceUrls
- getKeyboardShortcutsPdfUrl():com.intellij.util.Url
- getTechnicalSupportUrl():kotlin.jvm.functions.Function1
- a:getUpdateMetadataUrl():com.intellij.util.Url
- getWhatIsNewPageUrl():com.intellij.util.Url
- getYouTubeChannelUrl():com.intellij.util.Url
f:com.intellij.platform.ide.customization.ExternalProductResourceUrls$Companion
- f:getInstance():com.intellij.platform.ide.customization.ExternalProductResourceUrls
com.intellij.platform.ide.customization.FeedbackReporter
- a:feedbackFormUrl(java.lang.String):com.intellij.util.Url
- a:getDestinationDescription():java.lang.String
- showFeedbackForm(com.intellij.openapi.project.Project,Z):Z
a:com.intellij.pom.NavigatableAdapter
- com.intellij.pom.Navigatable
- <init>():V
- canNavigate():Z
- canNavigateToSource():Z
- s:navigate(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I,Z):V
- s:navigate(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z):V
com.intellij.pom.NavigatableWithText
- com.intellij.pom.Navigatable
- a:getNavigateActionText(Z):java.lang.String
f:com.intellij.pom.NonNavigatable
- com.intellij.pom.Navigatable
- sf:INSTANCE:com.intellij.pom.Navigatable
a:com.intellij.projectImport.ProjectOpenProcessor
- sf:Companion:com.intellij.projectImport.ProjectOpenProcessor$Companion
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- askConfirmationForOpeningProject(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):I
- canImportProjectAfterwards():Z
- a:canOpenProject(com.intellij.openapi.vfs.VirtualFile):Z
- a:doOpenProject(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,Z):com.intellij.openapi.project.Project
- getIcon():javax.swing.Icon
- getIcon(com.intellij.openapi.vfs.VirtualFile):javax.swing.Icon
- sf:getImportProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.projectImport.ProjectOpenProcessor
- a:getName():java.lang.String
- importProjectAfterwards(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
- importProjectAfterwardsAsync(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,kotlin.coroutines.Continuation):java.lang.Object
- isProjectFile(com.intellij.openapi.vfs.VirtualFile):Z
- isStrongProjectInfoHolder():Z
- lookForProjectsInDirectory():Z
- openProjectAsync(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,Z,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.projectImport.ProjectOpenProcessor$Companion
- f:getImportProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.projectImport.ProjectOpenProcessor
- f:getImportProvider(com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.projectImport.ProjectOpenProcessor
- f:getUnimplementedOpenAsync():java.lang.UnsupportedOperationException
a:com.intellij.projectImport.ProjectSetProcessor
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:PROJECT:java.lang.String
- <init>():V
- a:getId():java.lang.String
- a:processEntries(java.util.List,com.intellij.projectImport.ProjectSetProcessor$Context,java.lang.Runnable):V
c:com.intellij.projectImport.ProjectSetProcessor$Context
- directory:com.intellij.openapi.vfs.VirtualFile
- directoryName:java.lang.String
- project:com.intellij.openapi.project.Project
- <init>():V
f:com.intellij.psi.PsiBundle
- <init>():V
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
a:com.intellij.ui.AbstractFieldPanel
- javax.swing.JPanel
- p:myButtons:java.util.ArrayList
- p:myLabel:javax.swing.JLabel
- <init>(javax.swing.JComponent):V
- <init>(javax.swing.JComponent,java.lang.String,java.lang.String,java.awt.event.ActionListener,java.lang.Runnable):V
- createComponent():V
- f:getChangeListener():java.lang.Runnable
- f:getComponent():javax.swing.JComponent
- p:getDefaultIcon():javax.swing.Icon
- p:getDoClickAction():com.intellij.openapi.ui.ComponentWithBrowseButton$MyDoClickAction
- f:getFieldLabel():javax.swing.JLabel
- p:getHoveredIcon():javax.swing.Icon
- p:getIconTooltip():java.lang.String
- a:getText():java.lang.String
- isEnabled():Z
- setBrowseButtonActionListener(java.awt.event.ActionListener):V
- f:setChangeListener(java.lang.Runnable):V
- setDisplayedMnemonic(C):V
- setDisplayedMnemonicIndex(I):V
- setEnabled(Z):V
- setLabelText(java.lang.String):V
- a:setText(java.lang.String):V
pc:com.intellij.ui.AbstractFieldPanel$Viewer
- com.intellij.openapi.ui.DialogWrapper
- p:myTextArea:javax.swing.JTextArea
- <init>(com.intellij.ui.AbstractFieldPanel):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:doOKAction():V
- getPreferredFocusedComponent():javax.swing.JComponent
a:com.intellij.ui.AddDeleteListPanel
- com.intellij.ui.PanelWithButtons
- com.intellij.util.ui.ComponentWithEmptyText
- p:myList:com.intellij.ui.components.JBList
- p:myListModel:javax.swing.DefaultListModel
- <init>(java.lang.String,java.util.List):V
- p:addElement(java.lang.Object):V
- p:createButtons():javax.swing.JButton[]
- p:createMainComponent():javax.swing.JComponent
- p:customizeDecorator(com.intellij.ui.ToolbarDecorator):V
- pa:findItemToAdd():java.lang.Object
- getEmptyText():com.intellij.util.ui.StatusText
- p:getLabelText():java.lang.String
- p:getListCellRenderer():javax.swing.ListCellRenderer
- getListItems():java.lang.Object[]
- p:initPanel():V
a:com.intellij.ui.AddEditDeleteListPanel
- com.intellij.ui.AddDeleteListPanel
- <init>(java.lang.String,java.util.List):V
- p:customizeDecorator(com.intellij.ui.ToolbarDecorator):V
- pa:editSelectedItem(java.lang.Object):java.lang.Object
a:com.intellij.ui.AddEditRemovePanel
- com.intellij.ui.PanelWithButtons
- com.intellij.util.ui.ComponentWithEmptyText
- <init>(com.intellij.ui.AddEditRemovePanel$TableModel,java.util.List):V
- <init>(com.intellij.ui.AddEditRemovePanel$TableModel,java.util.List,java.lang.String):V
- pa:addItem():java.lang.Object
- p:createButtons():javax.swing.JButton[]
- p:createMainComponent():javax.swing.JComponent
- p:createTable():com.intellij.ui.table.JBTable
- p:createToolbarDecorator():com.intellij.ui.ToolbarDecorator
- p:doAdd():V
- p:doDown():V
- p:doEdit():V
- p:doRemove():V
- p:doUp():V
- pa:editItem(java.lang.Object):java.lang.Object
- getData():java.util.List
- getEmptyText():com.intellij.util.ui.StatusText
- p:getLabelText():java.lang.String
- getTable():com.intellij.ui.table.JBTable
- p:initPanel():V
- isUpDownSupported():Z
- pa:removeItem(java.lang.Object):Z
- setData(java.util.List):V
- setRenderer(I,javax.swing.table.TableCellRenderer):V
- setSelected(java.lang.Object):V
a:com.intellij.ui.AddEditRemovePanel$TableModel
- <init>():V
- getColumnClass(I):java.lang.Class
- a:getColumnCount():I
- a:getColumnName(I):java.lang.String
- a:getField(java.lang.Object,I):java.lang.Object
- isEditable(I):Z
- setValue(java.lang.Object,java.lang.Object,I):V
a:com.intellij.ui.AnActionButton
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ShortcutProvider
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- <init>(java.util.function.Supplier,javax.swing.Icon):V
- addActionButtonListener(com.intellij.ui.AnActionButton$ActionButtonListener,com.intellij.openapi.Disposable):V
- f:addCustomUpdater(com.intellij.ui.AnActionButtonUpdater):V
- s:fromAction(com.intellij.openapi.actionSystem.AnAction):com.intellij.ui.AnActionButton
- getContextComponent():javax.swing.JComponent
- getDataContext():com.intellij.openapi.actionSystem.DataContext
- f:getPreferredPopupPoint():com.intellij.ui.awt.RelativePoint
- getShortcut():com.intellij.openapi.actionSystem.ShortcutSet
- isEnabled():Z
- isVisible():Z
- removeActionButtonListener(com.intellij.ui.AnActionButton$ActionButtonListener):Z
- setContextComponent(javax.swing.JComponent):V
- setEnabled(Z):V
- setShortcut(com.intellij.openapi.actionSystem.ShortcutSet):V
- setVisible(Z):V
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
- updateButton(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.ui.AnActionButton$ActionButtonListener
- isEnabledChanged(Z):V
- isVisibleChanged(Z):V
c:com.intellij.ui.AnActionButton$AnActionButtonWrapper
- com.intellij.ui.AnActionButton
- com.intellij.openapi.actionSystem.ActionWithDelegate
- <init>(com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.AnAction):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getDelegate():com.intellij.openapi.actionSystem.AnAction
- isDumbAware():Z
- updateButton(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ui.AnActionButton$CheckedAnActionButton
- com.intellij.ui.AnActionButton$AnActionButtonWrapper
- com.intellij.openapi.actionSystem.CheckedActionGroup
- <init>(com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.AnAction):V
com.intellij.ui.AnActionButtonRunnable
- com.intellij.util.ParameterizedRunnable
com.intellij.ui.AnActionButtonUpdater
- a:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent):Z
a:com.intellij.ui.AutoScrollFromSourceHandler
- pf:myAlarm:com.intellij.util.Alarm
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- createToggleAction():com.intellij.openapi.actionSystem.ToggleAction
- p:getActionDescription():java.lang.String
- p:getActionName():java.lang.String
- p:getAlarmDelay():J
- p:getModalityState():com.intellij.openapi.application.ModalityState
- install():V
- pa:isAutoScrollEnabled():Z
- pa:selectElementFromEditor(com.intellij.openapi.fileEditor.FileEditor):V
- p:selectInAlarm(com.intellij.openapi.fileEditor.FileEditor):V
- pa:setAutoScrollEnabled(Z):V
a:com.intellij.ui.AutoScrollToSourceHandler
- <init>():V
- f:cancelAllRequests():V
- f:createToggleAction():com.intellij.openapi.actionSystem.ToggleAction
- p:getActionDescription():java.lang.String
- p:getActionName():java.lang.String
- f:install(javax.swing.JList):V
- f:install(javax.swing.JTable):V
- f:install(javax.swing.JTree):V
- pa:isAutoScrollMode():Z
- p:needToCheckFocus():Z
- f:onMouseClicked(java.awt.Component):V
- p:scrollToSource(java.awt.Component):V
- pa:setAutoScrollMode(Z):V
c:com.intellij.ui.BrowserHyperlinkListener
- com.intellij.ui.HyperlinkAdapter
- sf:INSTANCE:com.intellij.ui.BrowserHyperlinkListener
- <init>():V
- p:hyperlinkActivated(javax.swing.event.HyperlinkEvent):V
c:com.intellij.ui.Cell
- f:column:I
- f:row:I
- <init>(I,I):V
- equals(java.lang.Object):Z
- getColumn():I
- getRow():I
- hashCode():I
c:com.intellij.ui.CellRendererPanel
- javax.swing.JPanel
- <init>():V
- <init>(java.awt.LayoutManager):V
- doLayout():V
- p:firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object):V
- firePropertyChange(java.lang.String,Z,Z):V
- forceInvalidate():V
- getPreferredSize():java.awt.Dimension
- invalidate():V
- f:isSelected():Z
- p:paintComponent(java.awt.Graphics):V
- f:preferredSize():java.awt.Dimension
- repaint():V
- repaint(J,I,I,I,I):V
- repaint(java.awt.Rectangle):V
- reshape(I,I,I,I):V
- revalidate():V
- setForcedBackground(java.awt.Color):V
- f:setSelected(Z):V
- pf:super_getPreferredSize():java.awt.Dimension
- pf:super_validate():V
- validate():V
com.intellij.ui.Changeable
- a:hasChanged():Z
c:com.intellij.ui.CheckBoxList
- com.intellij.ui.components.JBList
- <init>():V
- <init>(com.intellij.ui.CheckBoxListListener):V
- <init>(javax.swing.DefaultListModel):V
- <init>(javax.swing.DefaultListModel,com.intellij.ui.CheckBoxListListener):V
- addItem(java.lang.Object,java.lang.String,Z):V
- p:adjustRendering(javax.swing.JComponent,javax.swing.JCheckBox,I,Z,Z):javax.swing.JComponent
- clear():V
- p:findPointRelativeToCheckBox(I,I,javax.swing.JCheckBox,I):java.awt.Point
- p:findPointRelativeToCheckBoxWithAdjustedRendering(I,I,javax.swing.JCheckBox,I):java.awt.Point
- getAllItems():java.util.Set
- p:getBackground(Z):java.awt.Color
- getCheckedItems():java.util.List
- p:getForeground(Z):java.awt.Color
- getItemAt(I):java.lang.Object
- p:getSecondaryText(I):java.lang.String
- p:isEnabled(I):Z
- isItemSelected(I):Z
- isItemSelected(java.lang.Object):Z
- setCheckBoxListListener(com.intellij.ui.CheckBoxListListener):V
- setItemSelected(java.lang.Object,Z):V
- setItems(java.util.List,com.intellij.util.Function):V
- setStringItems(java.util.Map):V
- updateItem(java.lang.Object,java.lang.Object,java.lang.String):V
c:com.intellij.ui.CheckBoxWithColorChooser
- javax.swing.JPanel
- <init>(java.lang.String):V
- <init>(java.lang.String,Z):V
- <init>(java.lang.String,Z,java.awt.Color):V
- getColor():java.awt.Color
- isSelected():Z
- setColor(java.awt.Color):V
- setMnemonic(C):V
- setSelected(Z):V
c:com.intellij.ui.CheckboxTreeBase
- com.intellij.ui.treeStructure.Tree
- <init>():V
- <init>(com.intellij.ui.CheckboxTreeBase$CheckboxTreeCellRendererBase,com.intellij.ui.CheckedTreeNode):V
- <init>(com.intellij.ui.CheckboxTreeBase$CheckboxTreeCellRendererBase,com.intellij.ui.CheckedTreeNode,com.intellij.ui.CheckboxTreeBase$CheckPolicy):V
- addCheckboxTreeListener(com.intellij.ui.CheckboxTreeListener):V
- getCheckedNodes(java.lang.Class,com.intellij.ui.treeStructure.Tree$NodeFilter):java.lang.Object[]
- getToggleClickCount():I
- p:nodeStateWillChange(com.intellij.ui.CheckedTreeNode):V
- p:onDoubleClick(com.intellij.ui.CheckedTreeNode):V
- p:onNodeStateChanged(com.intellij.ui.CheckedTreeNode):V
- setNodeState(com.intellij.ui.CheckedTreeNode,Z):V
c:com.intellij.ui.CheckboxTreeBase$CheckPolicy
- <init>(Z,Z,Z,Z):V
- <init>(Z,Z,Z,Z,Z):V
c:com.intellij.ui.CheckboxTreeBase$CheckboxTreeCellRendererBase
- javax.swing.JPanel
- javax.swing.tree.TreeCellRenderer
- f:myCheckbox:com.intellij.util.ui.ThreeStateCheckBox
- p:myIgnoreInheritance:Z
- <init>():V
- <init>(Z):V
- <init>(Z,Z):V
- customizeRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getCheckbox():javax.swing.JCheckBox
- getTextRenderer():com.intellij.ui.ColoredTreeCellRenderer
- f:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):java.awt.Component
c:com.intellij.ui.CheckboxTreeHelper
- sf:DEFAULT_POLICY:com.intellij.ui.CheckboxTreeBase$CheckPolicy
- <init>(com.intellij.ui.CheckboxTreeBase$CheckPolicy,com.intellij.util.EventDispatcher):V
- s:getCheckedNodes(java.lang.Class,com.intellij.ui.treeStructure.Tree$NodeFilter,javax.swing.tree.TreeModel):java.lang.Object[]
- initTree(com.intellij.ui.treeStructure.Tree,javax.swing.JComponent,com.intellij.ui.CheckboxTreeBase$CheckboxTreeCellRendererBase):V
- s:isToggleEvent(java.awt.event.KeyEvent,javax.swing.JComponent):Z
- setNodeState(com.intellij.ui.treeStructure.Tree,com.intellij.ui.CheckedTreeNode,Z):V
f:com.intellij.ui.ClearTextAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ui.ColorChooser
- <init>():V
- s:chooseColor(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.awt.Color):java.awt.Color
- s:chooseColor(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.awt.Color,Z):java.awt.Color
- s:chooseColor(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.awt.Color,Z,java.util.List,Z):java.awt.Color
- s:chooseColor(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.awt.Color,Z,Z):java.awt.Color
- s:chooseColor(java.awt.Component,java.lang.String,java.awt.Color):java.awt.Color
- s:chooseColor(java.awt.Component,java.lang.String,java.awt.Color,Z):java.awt.Color
- s:chooseColor(java.awt.Component,java.lang.String,java.awt.Color,Z,java.util.List,Z):java.awt.Color
- s:chooseColor(java.awt.Component,java.lang.String,java.awt.Color,Z,Z):java.awt.Color
f:com.intellij.ui.ColorChooserService
- sf:Companion:com.intellij.ui.ColorChooserService$Companion
- <init>():V
- sf:getInstance():com.intellij.ui.ColorChooserService
- f:showColorPickerPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.ui.picker.ColorListener,com.intellij.ui.awt.RelativePoint,Z):V
- f:showDialog(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.awt.Color):java.awt.Color
- f:showDialog(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.awt.Color,Z):java.awt.Color
- f:showDialog(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.awt.Color,Z,java.util.List):java.awt.Color
- f:showDialog(com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.awt.Color,Z,java.util.List,Z):java.awt.Color
- f:showDialog(java.awt.Component,java.lang.String,java.awt.Color):java.awt.Color
- f:showDialog(java.awt.Component,java.lang.String,java.awt.Color,Z):java.awt.Color
- f:showDialog(java.awt.Component,java.lang.String,java.awt.Color,Z,java.util.List):java.awt.Color
- f:showDialog(java.awt.Component,java.lang.String,java.awt.Color,Z,java.util.List,Z):java.awt.Color
- bs:showDialog$default(com.intellij.ui.ColorChooserService,com.intellij.openapi.project.Project,java.awt.Component,java.lang.String,java.awt.Color,Z,java.util.List,Z,I,java.lang.Object):java.awt.Color
- bs:showDialog$default(com.intellij.ui.ColorChooserService,java.awt.Component,java.lang.String,java.awt.Color,Z,java.util.List,Z,I,java.lang.Object):java.awt.Color
- f:showPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.openapi.editor.Editor,com.intellij.ui.picker.ColorListener):V
- f:showPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.openapi.editor.Editor,com.intellij.ui.picker.ColorListener,Z):V
- f:showPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.openapi.editor.Editor,com.intellij.ui.picker.ColorListener,Z,Z):V
- f:showPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.openapi.editor.Editor,com.intellij.ui.picker.ColorListener,Z,Z,com.intellij.ui.picker.ColorPickerPopupCloseListener):V
- f:showPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.ui.picker.ColorListener):V
- f:showPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.ui.picker.ColorListener,com.intellij.ui.awt.RelativePoint):V
- f:showPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.ui.picker.ColorListener,com.intellij.ui.awt.RelativePoint,Z):V
- f:showPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.ui.picker.ColorListener,com.intellij.ui.awt.RelativePoint,Z,Z):V
- f:showPopup(com.intellij.openapi.project.Project,java.awt.Color,com.intellij.ui.picker.ColorListener,com.intellij.ui.awt.RelativePoint,Z,Z,com.intellij.ui.picker.ColorPickerPopupCloseListener):V
- bs:showPopup$default(com.intellij.ui.ColorChooserService,com.intellij.openapi.project.Project,java.awt.Color,com.intellij.openapi.editor.Editor,com.intellij.ui.picker.ColorListener,Z,Z,com.intellij.ui.picker.ColorPickerPopupCloseListener,I,java.lang.Object):V
- bs:showPopup$default(com.intellij.ui.ColorChooserService,com.intellij.openapi.project.Project,java.awt.Color,com.intellij.ui.picker.ColorListener,com.intellij.ui.awt.RelativePoint,Z,Z,com.intellij.ui.picker.ColorPickerPopupCloseListener,I,java.lang.Object):V
f:com.intellij.ui.ColorChooserService$Companion
- f:getInstance():com.intellij.ui.ColorChooserService
c:com.intellij.ui.ColorPanel
- javax.swing.JComponent
- <init>():V
- addActionListener(java.awt.event.ActionListener):V
- doLayout():V
- getPreferredSize():java.awt.Dimension
- getSelectedColor():java.awt.Color
- getToolTipText():java.lang.String
- onPressed():V
- onPressed(I):V
- removeActionListener(java.awt.event.ActionListener):V
- setEditable(Z):V
- setEnabled(Z):V
- setSelectedColor(java.awt.Color):V
- setSupportTransparency(Z):V
com.intellij.ui.ColorPickerListener
- a:closed(java.awt.Color):V
- a:colorChanged(java.awt.Color):V
a:com.intellij.ui.ColoredListCellRenderer
- com.intellij.ui.SimpleColoredComponent
- javax.swing.ListCellRenderer
- p:myForeground:java.awt.Color
- p:mySelected:Z
- p:mySelectionForeground:java.awt.Color
- <init>():V
- f:append(java.lang.String,com.intellij.ui.SimpleTextAttributes,Z):V
- pa:customizeCellRenderer(javax.swing.JList,java.lang.Object,I,Z,Z):V
- firePropertyChange(java.lang.String,B,B):V
- firePropertyChange(java.lang.String,C,C):V
- firePropertyChange(java.lang.String,D,D):V
- firePropertyChange(java.lang.String,F,F):V
- firePropertyChange(java.lang.String,I,I):V
- firePropertyChange(java.lang.String,J,J):V
- firePropertyChange(java.lang.String,S,S):V
- firePropertyChange(java.lang.String,Z,Z):V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- getPreferredSize():java.awt.Dimension
- invalidate():V
- repaint():V
- repaint(J,I,I,I,I):V
- repaint(java.awt.Rectangle):V
- revalidate():V
- p:revalidateAndRepaint():V
- validate():V
a:com.intellij.ui.ColoredTableCellRenderer
- com.intellij.ui.SimpleColoredRenderer
- javax.swing.table.TableCellRenderer
- <init>():V
- pa:customizeCellRenderer(javax.swing.JTable,java.lang.Object,Z,Z,I,I):V
- f:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
a:com.intellij.ui.ColoredTreeCellRenderer
- com.intellij.ui.SimpleColoredComponent
- javax.swing.tree.TreeCellRenderer
- p:mySelected:Z
- p:myTree:javax.swing.JTree
- p:myUsedCustomSpeedSearchHighlighting:Z
- <init>():V
- append(java.lang.String,com.intellij.ui.SimpleTextAttributes,Z):V
- p:calcFocusedState():Z
- a:customizeCellRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- firePropertyChange(java.lang.String,B,B):V
- firePropertyChange(java.lang.String,C,C):V
- firePropertyChange(java.lang.String,D,D):V
- firePropertyChange(java.lang.String,F,F):V
- firePropertyChange(java.lang.String,I,I):V
- firePropertyChange(java.lang.String,J,J):V
- p:firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object):V
- firePropertyChange(java.lang.String,S,S):V
- firePropertyChange(java.lang.String,Z,Z):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getFont():java.awt.Font
- getTree():javax.swing.JTree
- f:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):java.awt.Component
- invalidate():V
- pf:isFocused():Z
- repaint(J,I,I,I,I):V
- revalidate():V
- p:revalidateAndRepaint():V
- setOpaque(Z):V
- validate():V
pc:com.intellij.ui.ColoredTreeCellRenderer$AccessibleColoredTreeCellRenderer
- com.intellij.ui.SimpleColoredComponent$AccessibleSimpleColoredComponent
- p:<init>(com.intellij.ui.ColoredTreeCellRenderer):V
c:com.intellij.ui.ComboBoxFieldPanel
- com.intellij.ui.AbstractFieldPanel
- <init>():V
- <init>(java.lang.String[],java.lang.String,java.lang.String,java.awt.event.ActionListener):V
- <init>(java.lang.String[],java.lang.String,java.lang.String,java.awt.event.ActionListener,java.lang.Runnable):V
- addItemSetText(java.lang.String):V
- createComponent():V
- getComboBox():javax.swing.JComboBox
- getText():java.lang.String
- setItems(java.lang.Object[]):V
- setText(java.lang.String):V
c:com.intellij.ui.ComboboxWithBrowseButton
- com.intellij.openapi.ui.ComponentWithBrowseButton
- <init>():V
- <init>(javax.swing.JComboBox):V
- addBrowseFolderListener(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- getComboBox():javax.swing.JComboBox
- setTextFieldPreferredWidth(I):V
f:com.intellij.ui.CommonActionsPanel
- javax.swing.JPanel
- addNotify():V
- getAnAction(com.intellij.ui.CommonActionsPanel$Buttons):com.intellij.openapi.actionSystem.AnAction
- getAnActionButton(com.intellij.ui.CommonActionsPanel$Buttons):com.intellij.ui.AnActionButton
- s:getCommonShortcut(com.intellij.ui.CommonActionsPanel$Buttons):com.intellij.openapi.actionSystem.ShortcutSet
- getPosition():com.intellij.openapi.actionSystem.ActionToolbarPosition
- getPreferredPopupPoint(com.intellij.openapi.actionSystem.AnAction):com.intellij.ui.awt.RelativePoint
- getToolbar():com.intellij.openapi.actionSystem.ActionToolbar
- setCustomShortcuts(com.intellij.ui.CommonActionsPanel$Buttons,com.intellij.openapi.actionSystem.ShortcutSet[]):V
- setEnabled(com.intellij.ui.CommonActionsPanel$Buttons,Z):V
- setToolbarLabel(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionToolbarPosition):V
e:com.intellij.ui.CommonActionsPanel$Buttons
- java.lang.Enum
- sf:ADD:com.intellij.ui.CommonActionsPanel$Buttons
- sf:DOWN:com.intellij.ui.CommonActionsPanel$Buttons
- sf:EDIT:com.intellij.ui.CommonActionsPanel$Buttons
- sf:REMOVE:com.intellij.ui.CommonActionsPanel$Buttons
- sf:UP:com.intellij.ui.CommonActionsPanel$Buttons
- getIcon():javax.swing.Icon
- getText():java.lang.String
- s:valueOf(java.lang.String):com.intellij.ui.CommonActionsPanel$Buttons
- s:values():com.intellij.ui.CommonActionsPanel$Buttons[]
com.intellij.ui.CommonActionsPanel$Listener
- doAdd():V
- doDown():V
- doEdit():V
- doRemove():V
- doUp():V
com.intellij.ui.ComponentWithExpandableItems
- a:getExpandableItemsHandler():com.intellij.ui.ExpandableItemsHandler
- a:setExpandableItemsEnabled(Z):V
com.intellij.ui.ComponentWithFileColors
- a:isFileColorsEnabled():Z
c:com.intellij.ui.ContextHelpLabel
- com.intellij.ui.components.JBLabel
- <init>(java.lang.String,java.lang.String):V
- addNotify():V
- s:create(java.lang.String):com.intellij.ui.ContextHelpLabel
- s:create(java.lang.String,java.lang.String):com.intellij.ui.ContextHelpLabel
- s:createFromTooltip(com.intellij.ide.HelpTooltip):com.intellij.ui.ContextHelpLabel
- s:createWithBrowserLink(java.lang.String,java.lang.String,java.lang.String,java.net.URL):com.intellij.ui.ContextHelpLabel
- s:createWithLink(java.lang.String,java.lang.String,java.lang.String,java.lang.Runnable):com.intellij.ui.ContextHelpLabel
- s:createWithLink(java.lang.String,java.lang.String,java.lang.String,Z,java.lang.Runnable):com.intellij.ui.ContextHelpLabel
- removeNotify():V
- setPreferredSize(java.awt.Dimension):V
a:com.intellij.ui.CustomizeColoredTreeCellRenderer
- <init>():V
- a:customizeCellRenderer(com.intellij.ui.SimpleColoredComponent,javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- getTag():java.lang.Object
c:com.intellij.ui.DisabledTraversalPolicy
- java.awt.FocusTraversalPolicy
- <init>():V
- getComponentAfter(java.awt.Container,java.awt.Component):java.awt.Component
- getComponentBefore(java.awt.Container,java.awt.Component):java.awt.Component
- getDefaultComponent(java.awt.Container):java.awt.Component
- getFirstComponent(java.awt.Container):java.awt.Component
- getLastComponent(java.awt.Container):java.awt.Component
c:com.intellij.ui.DottedBorder
- javax.swing.border.Border
- <init>(java.awt.Color):V
- <init>(java.awt.Insets,java.awt.Color):V
- getBorderInsets(java.awt.Component):java.awt.Insets
- isBorderOpaque():Z
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
a:com.intellij.ui.DoubleClickListener
- com.intellij.ui.ClickListener
- <init>():V
- f:onClick(java.awt.event.MouseEvent,I):Z
- pa:onDoubleClick(java.awt.event.MouseEvent):Z
f:com.intellij.ui.DrawUtil
- s:drawPlainRect(java.awt.Graphics,I,I,I,I):V
- s:drawRoundRect(java.awt.Graphics,D,D,D,D,java.awt.Color):V
- s:isSimplifiedUI():Z
com.intellij.ui.DropAreaAware
- a:getDropArea():java.awt.Rectangle
a:com.intellij.ui.DumbAwareActionButton
- com.intellij.ui.AnActionButton
- com.intellij.openapi.project.DumbAware
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- <init>(java.util.function.Supplier,javax.swing.Icon):V
f:com.intellij.ui.EditableRowTable
- s:createButtonsTable(javax.swing.JTable,com.intellij.ui.RowEditableTableModel,Z):javax.swing.JPanel
c:com.intellij.ui.EditorComboBoxRenderer
- javax.swing.plaf.basic.BasicComboBoxRenderer
- <init>(javax.swing.ComboBoxEditor):V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
c:com.intellij.ui.EditorNotificationPanel
- javax.swing.JPanel
- com.intellij.codeInsight.intention.IntentionActionProvider
- com.intellij.openapi.util.Weighted
- pf:myBackgroundColor:java.awt.Color
- pf:myBackgroundColorKey:com.intellij.openapi.editor.colors.ColorKey
- pf:myGearLabel:javax.swing.JLabel
- pf:myLabel:javax.swing.JLabel
- pf:myLinksPanel:javax.swing.JPanel
- <init>():V
- <init>(com.intellij.openapi.editor.Editor,java.awt.Color,com.intellij.openapi.editor.colors.ColorKey):V
- <init>(com.intellij.openapi.editor.Editor,java.awt.Color,com.intellij.openapi.editor.colors.ColorKey,com.intellij.ui.EditorNotificationPanel$Status):V
- <init>(com.intellij.openapi.editor.colors.ColorKey):V
- <init>(com.intellij.openapi.editor.colors.ColorKey,com.intellij.ui.EditorNotificationPanel$Status):V
- <init>(com.intellij.openapi.fileEditor.FileEditor):V
- <init>(com.intellij.openapi.fileEditor.FileEditor,com.intellij.ui.EditorNotificationPanel$Status):V
- <init>(com.intellij.openapi.fileEditor.FileEditor,java.awt.Color):V
- <init>(com.intellij.openapi.fileEditor.FileEditor,java.awt.Color,com.intellij.openapi.editor.colors.ColorKey):V
- <init>(com.intellij.openapi.fileEditor.FileEditor,java.awt.Color,com.intellij.openapi.editor.colors.ColorKey,com.intellij.ui.EditorNotificationPanel$Status):V
- <init>(com.intellij.ui.EditorNotificationPanel$Status):V
- <init>(java.awt.Color):V
- <init>(java.awt.Color,com.intellij.ui.EditorNotificationPanel$Status):V
- clear():V
- createActionLabel(java.lang.String,com.intellij.ui.EditorNotificationPanel$ActionHandler,Z):com.intellij.ui.HyperlinkLabel
- f:createActionLabel(java.lang.String,java.lang.Runnable):com.intellij.ui.HyperlinkLabel
- createActionLabel(java.lang.String,java.lang.Runnable,Z):com.intellij.ui.HyperlinkLabel
- f:createActionLabel(java.lang.String,java.lang.String):com.intellij.ui.HyperlinkLabel
- f:createActionLabel(java.lang.String,java.lang.String,Z):com.intellij.ui.HyperlinkLabel
- p:executeAction(java.lang.String):V
- findLabelByName(java.lang.String):com.intellij.ui.HyperlinkLabel
- p:getActionPlace():java.lang.String
- getBackground():java.awt.Color
- getIntentionAction():com.intellij.codeInsight.intention.IntentionActionWithOptions
- p:getIntentionActionFamilyName():java.lang.String
- p:getIntentionActionPriority():com.intellij.codeInsight.intention.PriorityAction$Priority
- p:getIntentionActionText():java.lang.String
- getText():java.lang.String
- s:getToolbarBackground():java.awt.Color
- getWeight():D
- icon(javax.swing.Icon):com.intellij.ui.EditorNotificationPanel
- noIcon():com.intellij.ui.EditorNotificationPanel
- f:setCloseAction(java.lang.Runnable):com.intellij.ui.InplaceButton
- setText(java.lang.String):V
- text(java.lang.String):com.intellij.ui.EditorNotificationPanel
- updateUI():V
- s:wrapPanels(java.util.List,javax.swing.JPanel,com.intellij.ui.EditorNotificationPanel$Status):V
com.intellij.ui.EditorNotificationPanel$ActionHandler
- generatePreview(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- a:handlePanelActionClick(com.intellij.ui.EditorNotificationPanel,javax.swing.event.HyperlinkEvent):V
- a:handleQuickFixClick(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
e:com.intellij.ui.EditorNotificationPanel$Status
- java.lang.Enum
- sf:Error:com.intellij.ui.EditorNotificationPanel$Status
- sf:Info:com.intellij.ui.EditorNotificationPanel$Status
- sf:Promo:com.intellij.ui.EditorNotificationPanel$Status
- sf:Success:com.intellij.ui.EditorNotificationPanel$Status
- sf:Warning:com.intellij.ui.EditorNotificationPanel$Status
- getIcon():javax.swing.Icon
- s:valueOf(java.lang.String):com.intellij.ui.EditorNotificationPanel$Status
- s:values():com.intellij.ui.EditorNotificationPanel$Status[]
com.intellij.ui.EditorNotificationProvider
- com.intellij.openapi.project.PossiblyDumbAware
- sf:CONST_NULL:java.util.function.Function
- sf:EP_NAME:com.intellij.openapi.extensions.ProjectExtensionPointName
- a:collectNotificationData(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.function.Function
a:com.intellij.ui.EditorNotifications
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ui.EditorNotifications
- getStoredFileLevelIntentions(com.intellij.openapi.fileEditor.FileEditor):java.util.List
- removeNotificationsForProvider(com.intellij.ui.EditorNotificationProvider):V
- s:updateAll():V
- a:updateAllNotifications():V
- a:updateNotifications(com.intellij.openapi.vfs.VirtualFile):V
- a:updateNotifications(com.intellij.ui.EditorNotificationProvider):V
a:com.intellij.ui.EditorNotifications$Provider
- com.intellij.ui.EditorNotificationProvider
- <init>():V
- collectNotificationData(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.function.Function
- createNotificationPanel(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.FileEditor):javax.swing.JComponent
- createNotificationPanel(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.project.Project):javax.swing.JComponent
- a:getKey():com.intellij.openapi.util.Key
c:com.intellij.ui.EnumComboBoxModel
- javax.swing.AbstractListModel
- javax.swing.ComboBoxModel
- <init>(java.lang.Class):V
- p:createEnumSet(java.lang.Class):java.util.EnumSet
- getElementAt(I):java.lang.Enum
- getSelectedItem():java.lang.Enum
- getSize():I
- setSelectedItem(java.lang.Enum):V
- setSelectedItem(java.lang.Object):V
c:com.intellij.ui.ErrorLabel
- javax.swing.JLabel
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon):V
- s:drawWave(java.awt.Component,java.awt.Graphics,I,java.lang.String):V
- p:paintComponent(java.awt.Graphics):V
- setErrorText(java.lang.String,java.awt.Color):V
- setToolTipText(java.lang.String):V
f:com.intellij.ui.ExcludingTraversalPolicy
- java.awt.FocusTraversalPolicy
- <init>(java.awt.FocusTraversalPolicy,java.awt.Component[]):V
- <init>(java.awt.Component[]):V
- exclude(java.awt.Component):V
- getComponentAfter(java.awt.Container,java.awt.Component):java.awt.Component
- getComponentBefore(java.awt.Container,java.awt.Component):java.awt.Component
- getDefaultComponent(java.awt.Container):java.awt.Component
- getFirstComponent(java.awt.Container):java.awt.Component
- getLastComponent(java.awt.Container):java.awt.Component
com.intellij.ui.Expandable
- a:collapse():V
- a:expand():V
- a:isExpanded():Z
com.intellij.ui.ExpandableItemsHandler
- sf:EXPANDED_RENDERER:com.intellij.openapi.util.Key
- sf:IGNORE_ITEM_SELECTION:com.intellij.openapi.util.Key
- sf:IGNORE_MOUSE_HOVER:com.intellij.openapi.util.Key
- sf:RENDERER_DISABLED:com.intellij.openapi.util.Key
- sf:USE_RENDERER_BOUNDS:com.intellij.openapi.util.Key
- a:getExpandedItems():java.util.Collection
- a:isEnabled():Z
- a:setEnabled(Z):V
a:com.intellij.ui.ExpandableItemsHandlerFactory
- <init>():V
- pa:doInstall(javax.swing.JComponent):com.intellij.ui.ExpandableItemsHandler
- s:install(javax.swing.JComponent):com.intellij.ui.ExpandableItemsHandler
f:com.intellij.ui.ExpandedItemListCellRendererWrapper
- javax.swing.ListCellRenderer
- <init>(javax.swing.ListCellRenderer,com.intellij.ui.ExpandableItemsHandler):V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- getWrappee():javax.swing.ListCellRenderer
- s:unwrap(javax.swing.ListCellRenderer):javax.swing.ListCellRenderer
c:com.intellij.ui.ExpandedItemRendererComponentWrapper
- javax.swing.JComponent
- getDelegate():java.awt.Component
- getToolTipLocation(java.awt.event.MouseEvent):java.awt.Point
- getToolTipText():java.lang.String
- getToolTipText(java.awt.event.MouseEvent):java.lang.String
- setBorder(javax.swing.border.Border):V
- s:unwrap(java.awt.Component):java.awt.Component
- s:wrap(java.awt.Component):com.intellij.ui.ExpandedItemRendererComponentWrapper
c:com.intellij.ui.FieldPanel
- com.intellij.ui.AbstractFieldPanel
- com.intellij.ui.TextAccessor
- <init>():V
- <init>(java.lang.String,java.lang.String,java.awt.event.ActionListener,java.lang.Runnable):V
- p:<init>(javax.swing.JTextField):V
- <init>(javax.swing.JTextField,java.lang.String,java.lang.String,java.awt.event.ActionListener,java.lang.Runnable):V
- s:create(java.lang.String,java.lang.String):com.intellij.ui.FieldPanel
- createComponent():V
- getText():java.lang.String
- getTextField():javax.swing.JTextField
- setEditable(Z):V
- setText(java.lang.String):V
- s:withPaths(java.lang.String,java.lang.String):com.intellij.ui.FieldPanel
- s:withPaths(java.lang.String,java.lang.String,java.awt.event.ActionListener,java.lang.Runnable):com.intellij.ui.FieldPanel
a:com.intellij.ui.FilterComponent
- javax.swing.JPanel
- <init>(java.lang.String,I):V
- <init>(java.lang.String,I,Z):V
- dispose():V
- a:filter():V
- getFilter():java.lang.String
- p:getPopupLocationComponent():javax.swing.JComponent
- getTextEditor():javax.swing.JTextField
- p:onEscape(java.awt.event.KeyEvent):V
- p:onlineFilter():V
- requestFocusInWindow():Z
- reset():V
- selectText():V
- setFilter(java.lang.String):V
- p:setHistory(java.util.List):V
- setHistorySize(I):V
- setSelectedItem(java.lang.String):V
- userTriggeredFilter():V
com.intellij.ui.FullScreenSupport
- sf:NEW:java.util.function.Function
- a:addListener(java.awt.Window):V
- a:isFullScreen():Z
- a:removeListener(java.awt.Window):V
f:com.intellij.ui.Grayer
- com.intellij.ui.Graphics2DDelegate
- <init>(java.awt.Graphics2D,java.awt.Color):V
- create():java.awt.Graphics
- drawChars(C[],I,I,I,I):V
- drawString(java.lang.String,F,F):V
- drawString(java.lang.String,I,I):V
- drawString(java.text.AttributedCharacterIterator,F,F):V
- drawString(java.text.AttributedCharacterIterator,I,I):V
- setColor(java.awt.Color):V
c:com.intellij.ui.GroupHeaderSeparator
- com.intellij.ui.SeparatorWithText
- <init>(java.awt.Insets):V
- p:getPreferredElementSize():java.awt.Dimension
- isHideLine():Z
- p:paintComponent(java.awt.Graphics):V
- setHideLine(Z):V
a:com.intellij.ui.GroupedElementsRenderer
- javax.accessibility.Accessible
- p:myComponent:javax.swing.JComponent
- p:myRendererComponent:com.intellij.ui.GroupedElementsRenderer$MyComponent
- p:mySeparatorComponent:com.intellij.ui.SeparatorWithText
- p:myTextLabel:com.intellij.ui.ErrorLabel
- <init>():V
- pf:configureComponent(java.lang.String,java.lang.String,javax.swing.Icon,javax.swing.Icon,Z,Z,java.lang.String,I):javax.swing.JComponent
- pa:createItemComponent():javax.swing.JComponent
- p:createSeparator():com.intellij.ui.SeparatorWithText
- getAccessibleContext():javax.accessibility.AccessibleContext
- pa:getBackground():java.awt.Color
- p:getDefaultItemComponentBorder():javax.swing.border.Border
- p:getDelegateAccessibleDescription():java.lang.String
- p:getDelegateAccessibleName():java.lang.String
- pa:getForeground():java.awt.Color
- getItemComponent():javax.swing.JComponent
- pa:getSelectionBackground():java.awt.Color
- pa:getSelectionForeground():java.awt.Color
- pa:layout():V
- p:setComponentIcon(javax.swing.Icon,javax.swing.Icon):V
- pf:setDeselected(javax.swing.JComponent):V
- pf:setForegroundSelected(javax.swing.JComponent,Z):V
- pf:setSelected(javax.swing.JComponent):V
- pf:setSelected(javax.swing.JComponent,Z):V
- p:setSeparatorFont(java.awt.Font):V
- p:updateSelection(Z,javax.swing.JComponent,javax.swing.JComponent):V
a:com.intellij.ui.GroupedElementsRenderer$List
- com.intellij.ui.GroupedElementsRenderer
- <init>():V
- p:getBackground():java.awt.Color
- p:getForeground():java.awt.Color
- pf:getSelectionBackground():java.awt.Color
- pf:getSelectionForeground():java.awt.Color
- p:layout():V
c:com.intellij.ui.GroupedElementsRenderer$MyComponent
- com.intellij.ui.components.panels.OpaquePanel
- com.intellij.internal.inspector.UiInspectorContextProvider
- <init>(com.intellij.ui.GroupedElementsRenderer):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getPreferredSize():java.awt.Dimension
- getUiInspectorContext():java.util.List
- setPreferredWidth(I):V
a:com.intellij.ui.GroupedElementsRenderer$Tree
- com.intellij.ui.GroupedElementsRenderer
- javax.swing.tree.TreeCellRenderer
- <init>():V
- p:getBackground():java.awt.Color
- p:getForeground():java.awt.Color
- p:getSelectionBackground():java.awt.Color
- p:getSelectionForeground():java.awt.Color
- p:layout():V
f:com.intellij.ui.GuiUtils
- <init>():V
- s:colorToHex(java.awt.Color):java.lang.String
- s:constructFieldWithBrowseButton(com.intellij.ui.TextFieldWithHistory,java.awt.event.ActionListener):javax.swing.JPanel
- s:constructFieldWithBrowseButton(javax.swing.JComponent,java.awt.event.ActionListener):javax.swing.JPanel
- s:createUndoableTextField():javax.swing.JTextField
- s:createVerticalStrut():java.awt.Component
- s:enableChildren(java.awt.Component,Z,javax.swing.JComponent[]):V
- s:enableChildren(Z,java.awt.Component[]):V
- s:getDisplayedMnemonic(java.lang.String):C
- s:getDisplayedMnemonicIndex(java.lang.String):I
- s:getSizeByChars(I,javax.swing.JComponent):java.awt.Dimension
- s:getTextWithoutMnemonicEscaping(java.lang.String):java.lang.String
- s:installVisibilityReferent(javax.swing.JComponent,javax.swing.JComponent):V
- s:invokeLaterIfNeeded(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- s:iterateChildren(java.awt.Component,java.util.function.Consumer,javax.swing.JComponent[]):V
- s:removePotentiallyLeakingReferences(java.awt.Container):V
- s:replaceJSplitPaneWithIDEASplitter(javax.swing.JComponent):V
- s:replaceJSplitPaneWithIDEASplitter(javax.swing.JComponent,Z):V
- s:runOrInvokeAndWait(java.lang.Runnable):V
- s:showComponents(Z,java.awt.Component[]):V
c:com.intellij.ui.HighlightableCellRenderer
- com.intellij.ui.HighlightableComponent
- javax.swing.ListCellRenderer
- javax.swing.tree.TreeCellRenderer
- <init>():V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):java.awt.Component
c:com.intellij.ui.HighlightableComponent
- javax.swing.JComponent
- javax.accessibility.Accessible
- p:myHasFocus:Z
- p:myHighlightedRegions:java.util.ArrayList
- p:myIcon:javax.swing.Icon
- p:myIconTextGap:I
- p:myIsSelected:Z
- p:myPaintUnfocusedSelection:Z
- p:myText:java.lang.String
- <init>():V
- addHighlighter(I,I,com.intellij.openapi.editor.markup.TextAttributes):V
- p:applyRenderingHints(java.awt.Graphics):V
- p:enforceBackgroundOutsideText(java.awt.Color):V
- findRegionByX(I):com.intellij.ui.HighlightedRegion
- getAccessibleContext():javax.accessibility.AccessibleContext
- getHighlightedRegionsBoundsMap():java.util.Map
- getIcon():javax.swing.Icon
- p:getIconOffset():I
- getIconTextGap():I
- getPreferredSize():java.awt.Dimension
- getRegionText(com.intellij.ui.HighlightedRegion):java.lang.String
- p:getStringWidth(java.lang.String,java.awt.FontMetrics):I
- getText():java.lang.String
- p:getTextOffset():I
- isIconAtRight():Z
- p:paintComponent(java.awt.Graphics):V
- p:setDoNotHighlight(Z):V
- setIcon(javax.swing.Icon):V
- setIconAtRight(Z):V
- setIconTextGap(I):V
- setText(java.lang.String):V
- updateUI():V
pc:com.intellij.ui.HighlightableComponent$AccessibleHighlightable
- javax.swing.JComponent$AccessibleJComponent
- p:<init>(com.intellij.ui.HighlightableComponent):V
- getAccessibleName():java.lang.String
- getAccessibleRole():javax.accessibility.AccessibleRole
f:com.intellij.ui.HighlightedText
- <init>():V
- appendText(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):V
- appendText(C[],com.intellij.openapi.editor.markup.TextAttributes):V
- applyToComponent(com.intellij.ui.HighlightableComponent):V
- equals(java.lang.Object):Z
- getText():java.lang.String
c:com.intellij.ui.HyperlinkLabel
- com.intellij.ui.HighlightableComponent
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.awt.Color):V
- <init>(java.lang.String,java.awt.Color,java.awt.Color,java.awt.Color):V
- addHyperlinkListener(javax.swing.event.HyperlinkListener):V
- addNotify():V
- p:adjustSize():V
- doClick():V
- p:fireHyperlinkEvent(java.awt.event.InputEvent):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getText():java.lang.String
- p:processComponentKeyEvent(java.awt.event.KeyEvent):V
- p:processMouseEvent(java.awt.event.MouseEvent):V
- p:processMouseMotionEvent(java.awt.event.MouseEvent):V
- removeHyperlinkListener(javax.swing.event.HyperlinkListener):V
- removeNotify():V
- setFontSize(com.intellij.util.ui.UIUtil$FontSize):V
- setForeground(java.awt.Color):V
- setHtmlText(java.lang.String):V
- setHyperlinkTarget(java.lang.String):V
- setHyperlinkText(java.lang.String):V
- setHyperlinkText(java.lang.String,java.lang.String,java.lang.String):V
- setText(java.lang.String):V
- setTextWithHyperlink(java.lang.String):V
- setUseIconAsLink(Z):V
- updateUI():V
pc:com.intellij.ui.HyperlinkLabel$AccessibleHyperlinkLabel
- com.intellij.ui.HighlightableComponent$AccessibleHighlightable
- javax.accessibility.AccessibleAction
- p:<init>(com.intellij.ui.HyperlinkLabel):V
- doAccessibleAction(I):Z
- getAccessibleAction():javax.accessibility.AccessibleAction
- getAccessibleActionCount():I
- getAccessibleActionDescription(I):java.lang.String
- getAccessibleRole():javax.accessibility.AccessibleRole
f:com.intellij.ui.IdeBorderFactory
- sf:BORDER_ROUNDNESS:I
- sf:TITLED_BORDER_BOTTOM_INSET:I
- sf:TITLED_BORDER_INDENT:I
- sf:TITLED_BORDER_LEFT_INSET:I
- sf:TITLED_BORDER_RIGHT_INSET:I
- sf:TITLED_BORDER_TOP_INSET:I
- s:createBorder():javax.swing.border.Border
- s:createBorder(I):javax.swing.border.Border
- s:createBorder(java.awt.Color):javax.swing.border.Border
- s:createBorder(java.awt.Color,I):javax.swing.border.Border
- s:createEmptyBorder():javax.swing.border.Border
- s:createEmptyBorder(I,I,I,I):javax.swing.border.Border
- s:createEmptyBorder(java.awt.Insets):javax.swing.border.Border
- s:createRoundedBorder():com.intellij.ui.RoundedLineBorder
- s:createRoundedBorder(I):com.intellij.ui.RoundedLineBorder
- s:createRoundedBorder(I,I):com.intellij.ui.RoundedLineBorder
- s:createTitledBorder(java.lang.String):javax.swing.border.TitledBorder
- s:createTitledBorder(java.lang.String,Z):com.intellij.ui.border.IdeaTitledBorder
- s:createTitledBorder(java.lang.String,Z,java.awt.Insets):com.intellij.ui.border.IdeaTitledBorder
f:com.intellij.ui.IdeBorderFactory$PlainSmallWithIndent
- s:createTitledBorder(javax.swing.border.Border,java.lang.String,I,I,java.awt.Font,java.awt.Color):javax.swing.border.TitledBorder
f:com.intellij.ui.IdeBorderFactory$PlainSmallWithIndentWithoutInsets
- s:createTitledBorder(javax.swing.border.Border,java.lang.String,I,I,java.awt.Font,java.awt.Color):javax.swing.border.TitledBorder
f:com.intellij.ui.IdeBorderFactory$PlainSmallWithoutIndent
- s:createTitledBorder(javax.swing.border.Border,java.lang.String,I,I,java.awt.Font,java.awt.Color):javax.swing.border.TitledBorder
f:com.intellij.ui.IdeBorderFactory$PlainSmallWithoutIndentWithoutInsets
- s:createTitledBorder(javax.swing.border.Border,java.lang.String,I,I,java.awt.Font,java.awt.Color):javax.swing.border.TitledBorder
c:com.intellij.ui.IdeUICustomization
- <init>():V
- getActionDescription(java.lang.String):java.lang.String
- getActionText(java.lang.String):java.lang.String
- s:getInstance():com.intellij.ui.IdeUICustomization
- getProjectViewTitle(com.intellij.openapi.project.Project):java.lang.String
- getSelectAutopopupByCharsText():java.lang.String
- getUiThemeEditorSchemeId(java.lang.String,java.lang.String):java.lang.String
- getVcsToolWindowName():java.lang.String
- projectMessage(java.lang.String,java.lang.Object[]):java.lang.String
- projectMessagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
c:com.intellij.ui.InlineBanner
- com.intellij.ui.InlineBannerBase
- <init>():V
- <init>(com.intellij.ui.EditorNotificationPanel$Status):V
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.ui.EditorNotificationPanel$Status):V
- b:<init>(java.lang.String,com.intellij.ui.EditorNotificationPanel$Status,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:addAction(java.lang.String,java.lang.Runnable):com.intellij.ui.InlineBanner
- f:close():V
- p:getStatus():com.intellij.ui.EditorNotificationPanel$Status
- removeFromParent():V
- f:setCloseAction(java.lang.Runnable):com.intellij.ui.InlineBanner
- f:setGearAction(java.lang.String,java.lang.Runnable):com.intellij.ui.InlineBanner
- f:setIcon(javax.swing.Icon):com.intellij.ui.InlineBanner
- f:setMessage(java.lang.String):com.intellij.ui.InlineBanner
- p:setStatus(com.intellij.ui.EditorNotificationPanel$Status):V
- f:showCloseButton(Z):com.intellij.ui.InlineBanner
a:com.intellij.ui.InlineBannerBase
- com.intellij.ui.components.JBPanel
- <init>(com.intellij.ui.EditorNotificationPanel$Status,I,java.lang.String):V
- pf:getCenterPanel():javax.swing.JPanel
- pf:getIconPanel():javax.swing.JPanel
- pf:getMessage():javax.swing.JEditorPane
- pf:getMessageText():java.lang.String
- p:getStatus():com.intellij.ui.EditorNotificationPanel$Status
- p:paintComponent(java.awt.Graphics):V
- setBounds(I,I,I,I):V
- pf:setMessageText(java.lang.String):V
- p:setStatus(com.intellij.ui.EditorNotificationPanel$Status):V
a:com.intellij.ui.InplaceAddEditRemovePanel
- com.intellij.ui.AddEditRemovePanel
- <init>(com.intellij.ui.AddEditRemovePanel$TableModel,java.util.List):V
- <init>(com.intellij.ui.AddEditRemovePanel$TableModel,java.util.List,java.lang.String):V
- p:doAdd():V
- p:doEdit():V
- p:editItem(java.lang.Object):java.lang.Object
c:com.intellij.ui.InplaceButton
- javax.swing.JComponent
- com.intellij.ui.ActiveComponent
- javax.accessibility.Accessible
- <init>(com.intellij.openapi.ui.popup.IconButton,java.awt.event.ActionListener):V
- <init>(com.intellij.openapi.ui.popup.IconButton,java.awt.event.ActionListener,java.util.function.Consumer,com.intellij.util.ui.TimedDeadzone$Length):V
- <init>(java.lang.String,javax.swing.Icon,java.awt.event.ActionListener):V
- doClick():V
- doClick(java.awt.event.MouseEvent):V
- p:doRepaintComponent(java.awt.Component):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getComponent():javax.swing.JComponent
- getIcon():javax.swing.Icon
- getPreferredSize():java.awt.Dimension
- isActive():Z
- p:paintComponent(java.awt.Graphics):V
- p:paintHover(java.awt.Graphics):V
- p:paintHover(java.awt.Graphics,java.awt.Color):V
- p:paintHover(java.awt.Graphics,Z):V
- setActive(Z):V
- setFillBg(Z):com.intellij.ui.InplaceButton
- setHoveringEnabled(Z):V
- setIcon(javax.swing.Icon):V
- setIcons(com.intellij.openapi.ui.popup.IconButton):V
- setIcons(javax.swing.Icon,javax.swing.Icon,javax.swing.Icon):V
- setMouseDeadzone(com.intellij.util.ui.TimedDeadzone$Length):V
- setPainting(Z):V
- setTransform(I,I):V
pc:com.intellij.ui.InplaceButton$AccessibleInplaceButton
- javax.swing.JComponent$AccessibleJComponent
- javax.accessibility.AccessibleAction
- javax.accessibility.AccessibleExtendedComponent
- p:<init>(com.intellij.ui.InplaceButton):V
- doAccessibleAction(I):Z
- getAccessibleAction():javax.accessibility.AccessibleAction
- getAccessibleActionCount():I
- getAccessibleActionDescription(I):java.lang.String
- getAccessibleDescription():java.lang.String
- getAccessibleKeyBinding():javax.accessibility.AccessibleKeyBinding
- getAccessibleName():java.lang.String
- getAccessibleRole():javax.accessibility.AccessibleRole
- getAccessibleStateSet():javax.accessibility.AccessibleStateSet
- getTitledBorderText():java.lang.String
- getToolTipText():java.lang.String
f:com.intellij.ui.InsertPathAction
- com.intellij.openapi.actionSystem.AnAction
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:addTo(javax.swing.text.JTextComponent):V
- s:addTo(javax.swing.text.JTextComponent,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- s:addTo(javax.swing.text.JTextComponent,com.intellij.openapi.fileChooser.FileChooserDescriptor,Z):V
- s:copyFromTo(javax.swing.text.JTextComponent,javax.swing.text.JTextComponent):V
- s:removeFrom(javax.swing.text.JTextComponent):V
c:com.intellij.ui.JBCardLayout
- java.awt.CardLayout
- <init>():V
- <init>(I,I):V
- addLayoutComponent(java.lang.String,java.awt.Component):V
- findComponentById(java.lang.String):java.awt.Component
- first(java.awt.Container):V
- last(java.awt.Container):V
- layoutContainer(java.awt.Container):V
- s:main(java.lang.String[]):V
- next(java.awt.Container):V
- previous(java.awt.Container):V
- removeLayoutComponent(java.awt.Component):V
- show(java.awt.Container,java.lang.String):V
- swipe(java.awt.Container,java.lang.String,com.intellij.ui.JBCardLayout$SwipeDirection):V
- swipe(java.awt.Container,java.lang.String,com.intellij.ui.JBCardLayout$SwipeDirection,java.lang.Runnable):V
e:com.intellij.ui.JBCardLayout$SwipeDirection
- java.lang.Enum
- sf:AUTO:com.intellij.ui.JBCardLayout$SwipeDirection
- sf:BACKWARD:com.intellij.ui.JBCardLayout$SwipeDirection
- sf:FORWARD:com.intellij.ui.JBCardLayout$SwipeDirection
- s:valueOf(java.lang.String):com.intellij.ui.JBCardLayout$SwipeDirection
- s:values():com.intellij.ui.JBCardLayout$SwipeDirection[]
c:com.intellij.ui.JBDefaultTreeCellRenderer
- javax.swing.tree.DefaultTreeCellRenderer
- <init>():V
- <init>(javax.swing.JTree):V
- <init>(Z):V
- getBorderSelectionColor():java.awt.Color
- p:getSelectionForeground(javax.swing.JTree):java.awt.Color
c:com.intellij.ui.JBIntSpinner
- javax.swing.JSpinner
- <init>(I,I,I):V
- <init>(I,I,I,I):V
- <init>(com.intellij.ide.ui.UINumericRange):V
- getMax():I
- getMin():I
- getNumber():I
- setEditor(javax.swing.JComponent):V
- setMax(I):V
- setMin(I):V
- setNumber(I):V
c:com.intellij.ui.JBSplitter
- com.intellij.openapi.ui.Splitter
- <init>():V
- <init>(F):V
- <init>(java.lang.String,F):V
- <init>(Z):V
- <init>(Z,F):V
- <init>(Z,F,F,F):V
- <init>(Z,java.lang.String,F):V
- <init>(Z,java.lang.String,F,F):V
- addNotify():V
- f:getSplitterProportionKey():java.lang.String
- p:loadProportion():V
- p:saveProportion():V
- f:setAndLoadSplitterProportionKey(java.lang.String):V
- setProportion(F):V
- f:setSplitterProportionKey(java.lang.String):V
f:com.intellij.ui.LineEndDecorator
- <init>():V
- s:getArrowShape(java.awt.geom.Line2D,java.awt.geom.Point2D):java.awt.Shape
a:com.intellij.ui.ListCellRendererWrapper
- javax.swing.ListCellRenderer
- <init>():V
- a:customize(javax.swing.JList,java.lang.Object,I,Z,Z):V
- f:getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- f:setBackground(java.awt.Color):V
- f:setClientProperty(java.lang.Object,java.lang.Object):V
- f:setFont(java.awt.Font):V
- f:setForeground(java.awt.Color):V
- f:setIcon(javax.swing.Icon):V
- f:setSeparator():V
- f:setText(java.lang.String):V
- f:setToolTipText(java.lang.String):V
f:com.intellij.ui.ListFocusTraversalPolicy
- javax.swing.LayoutFocusTraversalPolicy
- <init>(java.util.List):V
- getComponentAfter(java.awt.Container,java.awt.Component):java.awt.Component
- getComponentBefore(java.awt.Container,java.awt.Component):java.awt.Component
- getFirstComponent(java.awt.Container):java.awt.Component
- getLastComponent(java.awt.Container):java.awt.Component
f:com.intellij.ui.ListUtil
- sf:SELECTED_BY_MOUSE_EVENT:java.lang.String
- <init>():V
- s:addAllItems(javax.swing.ListModel,java.util.List):V
- s:addMoveDownListener(javax.swing.JButton,javax.swing.JList):com.intellij.ui.ListUtil$Updatable
- s:addMoveUpListener(javax.swing.JButton,javax.swing.JList):com.intellij.ui.ListUtil$Updatable
- s:addRemoveListener(javax.swing.JButton,javax.swing.JList):com.intellij.ui.ListUtil$Updatable
- s:addRemoveListener(javax.swing.JButton,javax.swing.JList,com.intellij.ui.ListUtil$RemoveNotification):com.intellij.ui.ListUtil$Updatable
- s:canMoveSelectedItemsDown(javax.swing.JList):Z
- s:canMoveSelectedItemsUp(javax.swing.JList):Z
- s:canRemoveSelectedItems(javax.swing.JList):Z
- s:canRemoveSelectedItems(javax.swing.JList,com.intellij.openapi.util.Condition):Z
- s:disableWhenNoSelection(javax.swing.JButton,javax.swing.JList):com.intellij.ui.ListUtil$Updatable
- s:getDeepestRendererChildComponentAt(javax.swing.JList,java.awt.Point):java.awt.Component
- s:getIndex(javax.swing.ListModel,java.lang.Object):I
- s:getItem(javax.swing.ListModel,I):java.lang.Object
- s:installAutoSelectOnMouseMove(javax.swing.JList):java.awt.event.MouseMotionListener
- s:isPointOnSelection(javax.swing.JList,I,I):Z
- s:moveSelectedItemsDown(javax.swing.JList):I
- s:moveSelectedItemsUp(javax.swing.JList):I
- s:removeAllItems(javax.swing.ListModel):V
- s:removeIndices(javax.swing.JList,I[]):java.util.List
- s:removeItem(javax.swing.ListModel,I):V
- s:removeSelectedItems(javax.swing.JList):java.util.List
- s:removeSelectedItems(javax.swing.JList,com.intellij.openapi.util.Condition):java.util.List
com.intellij.ui.ListUtil$RemoveNotification
- a:itemsRemoved(java.util.List):V
a:com.intellij.ui.ListUtil$Updatable
- <init>(javax.swing.JButton):V
- enable(Z):V
- p:setButtonEnabled(Z):V
- pa:update():V
c:com.intellij.ui.LoadingNode
- javax.swing.tree.DefaultMutableTreeNode
- sf:Companion:com.intellij.ui.LoadingNode$Companion
- <init>():V
- <init>(java.lang.String):V
- b:<init>(java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- sf:getText():java.lang.String
f:com.intellij.ui.LoadingNode$Companion
- f:getText():java.lang.String
a:com.intellij.ui.MouseDragHelper
- java.awt.event.MouseAdapter
- com.intellij.openapi.util.Weighted
- java.awt.KeyEventDispatcher
- java.awt.event.MouseMotionListener
- sf:DRAG_START_DEADZONE:I
- pf:myDragComponent:javax.swing.JComponent
- p:myPressedOnScreenPoint:java.awt.Point
- <init>(com.intellij.openapi.Disposable,javax.swing.JComponent):V
- p:canFinishDragging(java.awt.event.MouseEvent):Z
- p:canFinishDragging(javax.swing.JComponent,com.intellij.ui.awt.RelativePoint):Z
- p:canStartDragging(javax.swing.JComponent,java.awt.Point):Z
- cancelDragging():Z
- s:checkModifiers(java.awt.event.InputEvent):Z
- dispatchKeyEvent(java.awt.event.KeyEvent):Z
- p:getDragStartDeadzone(java.awt.Point,java.awt.Point):I
- getWeight():D
- s:isComponentDraggable(java.awt.Component):Z
- pf:isDragJustStarted():Z
- p:isDragOut(java.awt.event.MouseEvent,java.awt.Point,java.awt.Point):Z
- mouseDragged(java.awt.event.MouseEvent):V
- mouseMoved(java.awt.event.MouseEvent):V
- f:mousePressed(java.awt.event.MouseEvent):V
- mouseReleased(java.awt.event.MouseEvent):V
- pa:processDrag(java.awt.event.MouseEvent,java.awt.Point,java.awt.Point):V
- p:processDragCancel():V
- p:processDragFinish(java.awt.event.MouseEvent,Z):V
- p:processDragOut(java.awt.event.MouseEvent,java.awt.Point,java.awt.Point,Z):V
- p:processDragOutCancel():V
- p:processDragOutFinish(java.awt.event.MouseEvent):V
- p:processMousePressed(java.awt.event.MouseEvent):V
- s:setComponentDraggable(javax.swing.JComponent,Z):V
- start():V
- stop():V
c:com.intellij.ui.MultiLineTooltipUI
- javax.swing.plaf.metal.MetalToolTipUI
- <init>():V
- getPreferredSize(javax.swing.JComponent):java.awt.Dimension
- paint(java.awt.Graphics,javax.swing.JComponent):V
c:com.intellij.ui.MutableCollectionComboBoxModel
- com.intellij.ui.CollectionComboBoxModel
- javax.swing.MutableComboBoxModel
- <init>():V
- <init>(java.util.List):V
- <init>(java.util.List,java.lang.Object):V
- addElement(java.lang.Object):V
- addItem(java.lang.Object):V
- pf:fireIntervalAdded(java.lang.Object,I,I):V
- pf:fireIntervalRemoved(java.lang.Object,I,I):V
- insertElementAt(java.lang.Object,I):V
- removeElement(java.lang.Object):V
- removeElementAt(I):V
- update(java.util.List):V
f:com.intellij.ui.NewUI
- s:isEnabled():Z
c:com.intellij.ui.NonFocusableCheckBox
- javax.swing.JCheckBox
- <init>():V
- <init>(java.lang.String):V
f:com.intellij.ui.NotificationsOverlay
- <init>():V
- f:addNotification(com.intellij.ui.InlineBanner):V
- f:clearNotifications():V
- f:getComponent():javax.swing.JComponent
- f:removeNotification(com.intellij.ui.InlineBanner):V
- f:wrapComponent(javax.swing.JComponent):javax.swing.JPanel
c:com.intellij.ui.NumberDocument
- javax.swing.text.PlainDocument
- <init>():V
- insertString(I,java.lang.String,javax.swing.text.AttributeSet):V
c:com.intellij.ui.OnePixelSplitter
- com.intellij.ui.JBSplitter
- <init>():V
- <init>(F):V
- <init>(java.lang.String,F):V
- <init>(Z):V
- <init>(Z,F):V
- <init>(Z,F,F,F):V
- <init>(Z,java.lang.String,F):V
- <init>(Z,java.lang.String,F,F):V
- p:createDivider():com.intellij.openapi.ui.Divider
- getBlindZone():java.util.function.Supplier
- p:init():V
- setBlindZone(java.util.function.Supplier):V
c:com.intellij.ui.OptionGroup
- com.intellij.ui.PanelWithAnchor
- <init>():V
- <init>(java.lang.String):V
- add(javax.swing.JComponent):V
- add(javax.swing.JComponent,javax.swing.JComponent):V
- add(javax.swing.JComponent,javax.swing.JComponent,Z):V
- add(javax.swing.JComponent,Z):V
- createPanel():javax.swing.JPanel
- getAnchor():javax.swing.JComponent
- setAnchor(javax.swing.JComponent):V
a:com.intellij.ui.OptionalChooserComponent
- com.intellij.ui.CheckBoxListListener
- com.intellij.util.ui.ComponentWithEmptyText
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(java.util.List):V
- apply():V
- checkBoxSelectionChanged(I,Z):V
- pa:createCheckBox(java.lang.Object,Z):javax.swing.JCheckBox
- getContentPane():javax.swing.JPanel
- getCurrentModel():java.util.ArrayList
- getEmptyText():com.intellij.util.ui.StatusText
- getList():com.intellij.ui.CheckBoxList
- getSelectedIndex():I
- isModified():Z
- refresh():V
- removeAt(I):Z
- removeSelected():Z
- reset():V
- setInitialList(java.util.List):V
- setSelectedIndex(I):V
a:com.intellij.ui.OrderPanel
- javax.swing.JPanel
- p:<init>(java.lang.Class):V
- p:<init>(java.lang.Class,Z,java.lang.String):V
- f:add(java.lang.Object):V
- addAll(java.util.Collection):V
- f:clear():V
- pf:getCheckboxColumn():I
- pf:getEntryColumn():I
- pf:getEntryTable():javax.swing.JTable
- pf:getValueAt(I):java.lang.Object
- isCheckable(java.lang.Object):Z
- a:isChecked(java.lang.Object):Z
- f:remove(java.lang.Object):V
- a:setChecked(java.lang.Object,Z):V
com.intellij.ui.OrderPanelListener
- java.util.EventListener
- a:entryMoved():V
com.intellij.ui.PaintingParent
- getChildRec(java.awt.Component):java.awt.Rectangle
c:com.intellij.ui.PaintingParent$Wrapper
- javax.swing.JPanel
- com.intellij.ui.PaintingParent
- <init>(java.awt.Component):V
a:com.intellij.ui.PanelWithButtons
- javax.swing.JPanel
- <init>():V
- pa:createButtons():javax.swing.JButton[]
- pa:createMainComponent():javax.swing.JComponent
- pa:getLabelText():java.lang.String
- p:initPanel():V
f:com.intellij.ui.PathTextClipping
- com.intellij.ui.SimpleColoredComponent$FragmentTextClipper
- sf:Companion:com.intellij.ui.PathTextClipping$Companion
- <init>():V
- clipText(com.intellij.ui.SimpleColoredComponent,java.awt.Graphics2D,I,java.lang.String,I):java.lang.String
- sf:getInstance():com.intellij.ui.PathTextClipping
f:com.intellij.ui.PathTextClipping$Companion
- f:getInstance():com.intellij.ui.PathTextClipping
c:com.intellij.ui.PathsChooserComponent
- com.intellij.util.ui.ComponentWithEmptyText
- <init>(java.util.List,com.intellij.ui.PathsChooserComponent$PathProcessor):V
- <init>(java.util.List,com.intellij.ui.PathsChooserComponent$PathProcessor,com.intellij.openapi.project.Project):V
- apply():V
- getContentPane():javax.swing.JPanel
- getEmptyText():com.intellij.util.ui.StatusText
- getValues():java.util.List
- isModified():Z
- reset():V
com.intellij.ui.PathsChooserComponent$PathProcessor
- a:addPath(java.util.List,java.lang.String):Z
- a:removePath(java.util.List,java.lang.String):Z
a:com.intellij.ui.PopupHandler
- java.awt.event.MouseAdapter
- <init>():V
- s:installFollowingSelectionTreePopup(javax.swing.JTree,com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):com.intellij.ui.PopupHandler
- s:installPopupHandler(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):java.awt.event.MouseListener
- s:installPopupHandler(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,com.intellij.openapi.actionSystem.ActionManager):java.awt.event.MouseListener
- s:installPopupHandler(javax.swing.JComponent,java.lang.String,java.lang.String):V
- s:installPopupMenu(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):com.intellij.ui.PopupHandler
- s:installPopupMenu(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,javax.swing.event.PopupMenuListener):com.intellij.ui.PopupHandler
- s:installPopupMenu(javax.swing.JComponent,java.lang.String,java.lang.String):com.intellij.ui.PopupHandler
- s:installRowSelectionTablePopup(javax.swing.JTable,com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):com.intellij.ui.PopupHandler
- s:installSelectionListPopup(javax.swing.JList,com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):com.intellij.ui.PopupHandler
- s:installUnknownPopupHandler(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup):java.awt.event.MouseListener
- s:installUnknownPopupHandler(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup,com.intellij.openapi.actionSystem.ActionManager):java.awt.event.MouseListener
- a:invokePopup(java.awt.Component,I,I):V
- mouseClicked(java.awt.event.MouseEvent):V
- mousePressed(java.awt.event.MouseEvent):V
- mouseReleased(java.awt.event.MouseEvent):V
a:com.intellij.ui.PopupMenuListenerAdapter
- javax.swing.event.PopupMenuListener
- <init>():V
- popupMenuCanceled(javax.swing.event.PopupMenuEvent):V
- popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent):V
- popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent):V
c:com.intellij.ui.PortField
- com.intellij.ui.JBIntSpinner
- <init>():V
- <init>(I):V
- <init>(I,I):V
- isSpecified():Z
- setMin(I):V
c:com.intellij.ui.RawCommandLineEditor
- javax.swing.JPanel
- com.intellij.execution.ui.FragmentWrapper
- com.intellij.ui.TextAccessor
- <init>():V
- <init>(com.intellij.util.Function,com.intellij.util.Function):V
- attachLabel(javax.swing.JLabel):V
- getComponentToRegister():javax.swing.JComponent
- getDialogCaption():java.lang.String
- getDocument():javax.swing.text.Document
- getEditorField():com.intellij.ui.components.fields.ExpandableTextField
- getText():java.lang.String
- getTextField():javax.swing.JTextField
- setDescriptor(com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- setDescriptor(com.intellij.openapi.fileChooser.FileChooserDescriptor,Z):V
- setDialogCaption(java.lang.String):V
- setEnabled(Z):V
- setText(java.lang.String):V
- withMonospaced(Z):com.intellij.ui.RawCommandLineEditor
f:com.intellij.ui.RelativeFont
- java.beans.PropertyChangeListener
- sf:BOLD:com.intellij.ui.RelativeFont
- sf:HUGE:com.intellij.ui.RelativeFont
- sf:ITALIC:com.intellij.ui.RelativeFont
- sf:LARGE:com.intellij.ui.RelativeFont
- sf:NORMAL:com.intellij.ui.RelativeFont
- sf:PLAIN:com.intellij.ui.RelativeFont
- sf:SMALL:com.intellij.ui.RelativeFont
- sf:TINY:com.intellij.ui.RelativeFont
- derive(java.awt.Font):java.awt.Font
- family(java.lang.String):com.intellij.ui.RelativeFont
- fromResource(java.lang.String,I):com.intellij.ui.RelativeFont
- fromResource(java.lang.String,I,F):com.intellij.ui.RelativeFont
- install(java.awt.Component):java.awt.Component
- large():com.intellij.ui.RelativeFont
- propertyChange(java.beans.PropertyChangeEvent):V
- scale(I):com.intellij.ui.RelativeFont
- scale(I,F):com.intellij.ui.RelativeFont
- small():com.intellij.ui.RelativeFont
- style(I):com.intellij.ui.RelativeFont
- s:uninstallFrom(java.awt.Component):java.awt.Component
a:com.intellij.ui.ReorderableListController
- p:<init>(javax.swing.JList):V
- addAction(com.intellij.openapi.actionSystem.AnAction):V
- pa:addActionDescription(com.intellij.ui.ReorderableListController$ActionDescription):V
- addAddAction(java.lang.String,com.intellij.openapi.util.Factory,Z):com.intellij.ui.ReorderableListController$AddActionDescription
- addAddMultipleAction(java.lang.String,com.intellij.openapi.util.Factory,Z):com.intellij.ui.ReorderableListController$AddMultipleActionDescription
- addMoveDownAction():V
- addMoveUpAction():V
- addRemoveAction(java.lang.String):com.intellij.ui.ReorderableListController$RemoveActionDescription
- s:create(javax.swing.JList,com.intellij.openapi.actionSystem.DefaultActionGroup):com.intellij.ui.ReorderableListController
- getList():javax.swing.JList
pa:com.intellij.ui.ReorderableListController$ActionDescription
- p:<init>():V
- a:createAction(javax.swing.JComponent):com.intellij.openapi.actionSystem.AnAction
com.intellij.ui.ReorderableListController$ActionNotification
- a:afterActionPerformed(java.lang.Object):V
c:com.intellij.ui.ReorderableListController$AddActionDescription
- com.intellij.ui.ReorderableListController$AddActionDescriptionBase
- <init>(com.intellij.ui.ReorderableListController,java.lang.String,com.intellij.openapi.util.Factory,Z):V
- p:addInternal(java.lang.Object):java.lang.Object
a:com.intellij.ui.ReorderableListController$AddActionDescriptionBase
- com.intellij.ui.ReorderableListController$CustomActionDescription
- <init>(java.lang.String,com.intellij.openapi.util.Factory,Z):V
- pa:addInternal(java.lang.Object):java.lang.Object
- createAction(javax.swing.JComponent):com.intellij.ui.ReorderableListController$CustomActionDescription$BaseAction
- getActionIcon():javax.swing.Icon
- getActionName():java.lang.String
- setIcon(javax.swing.Icon):V
c:com.intellij.ui.ReorderableListController$AddMultipleActionDescription
- com.intellij.ui.ReorderableListController$AddActionDescriptionBase
- <init>(com.intellij.ui.ReorderableListController,java.lang.String,com.intellij.openapi.util.Factory,Z):V
- p:addInternal(java.util.Collection):java.util.Collection
a:com.intellij.ui.ReorderableListController$CustomActionDescription
- com.intellij.ui.ReorderableListController$ActionDescription
- <init>():V
- addPostHandler(com.intellij.ui.ReorderableListController$ActionNotification):V
- a:createAction(javax.swing.JComponent):com.intellij.ui.ReorderableListController$CustomActionDescription$BaseAction
- pa:getActionIcon():javax.swing.Icon
- pa:getActionName():java.lang.String
- p:runPostHandlers(java.lang.Object):V
- setShowText(Z):V
pc:com.intellij.ui.ReorderableListController$CustomActionDescription$BaseAction
- com.intellij.openapi.project.DumbAwareAction
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ui.ReorderableListController$RemoveActionDescription
- com.intellij.ui.ReorderableListController$CustomActionDescription
- <init>(com.intellij.ui.ReorderableListController,java.lang.String):V
- createAction(javax.swing.JComponent):com.intellij.ui.ReorderableListController$CustomActionDescription$BaseAction
- p:getActionIcon():javax.swing.Icon
- p:getActionName():java.lang.String
- getList():javax.swing.JList
- setConfirmation(com.intellij.openapi.util.Condition):V
- setEnableCondition(com.intellij.openapi.util.Condition):V
com.intellij.ui.RowEditableTableModel
- javax.swing.table.TableModel
- a:addRow():V
- a:exchangeRows(I,I):V
- a:removeRow(I):V
f:com.intellij.ui.RowsDnDSupport
- s:install(javax.swing.JList,com.intellij.util.ui.EditableModel):V
- s:install(javax.swing.JTable,com.intellij.util.ui.EditableModel):V
- s:install(javax.swing.JTree,com.intellij.util.ui.EditableModel):V
com.intellij.ui.RowsDnDSupport$RefinedDropSupport
- a:canDrop(I,I,com.intellij.ui.RowsDnDSupport$RefinedDropSupport$Position):Z
- a:drop(I,I,com.intellij.ui.RowsDnDSupport$RefinedDropSupport$Position):V
- a:isDropInto(javax.swing.JComponent,I,I):Z
e:com.intellij.ui.RowsDnDSupport$RefinedDropSupport$Position
- java.lang.Enum
- sf:ABOVE:com.intellij.ui.RowsDnDSupport$RefinedDropSupport$Position
- sf:BELOW:com.intellij.ui.RowsDnDSupport$RefinedDropSupport$Position
- sf:INTO:com.intellij.ui.RowsDnDSupport$RefinedDropSupport$Position
- s:valueOf(java.lang.String):com.intellij.ui.RowsDnDSupport$RefinedDropSupport$Position
- s:values():com.intellij.ui.RowsDnDSupport$RefinedDropSupport$Position[]
f:com.intellij.ui.ScrollPaneFactory
- javax.swing.ScrollPaneConstants
- s:createScrollPane():javax.swing.JScrollPane
- s:createScrollPane(I,I):javax.swing.JScrollPane
- s:createScrollPane(java.awt.Component):javax.swing.JScrollPane
- s:createScrollPane(java.awt.Component,I):javax.swing.JScrollPane
- s:createScrollPane(java.awt.Component,I,I):javax.swing.JScrollPane
- s:createScrollPane(java.awt.Component,I,I,Z):javax.swing.JScrollPane
- s:createScrollPane(java.awt.Component,Z):javax.swing.JScrollPane
f:com.intellij.ui.ScrollingUtil
- sf:ROW_PADDING:I
- <init>():V
- s:ensureIndexIsVisible(javax.swing.JList,I,I):V
- s:ensureIndexIsVisible(javax.swing.JTable,I,I):V
- s:ensureRangeIsVisible(javax.swing.JList,I,I):V
- s:ensureSelectionExists(javax.swing.JList):V
- s:ensureSelectionExists(javax.swing.JTable):V
- s:getReadableRow(javax.swing.JTable,I):I
- s:getVisibleRows(javax.swing.JTable):com.intellij.openapi.util.Couple
- s:installActions(javax.swing.JList):V
- s:installActions(javax.swing.JList,javax.swing.JComponent):V
- s:installActions(javax.swing.JList,javax.swing.JComponent,Z):V
- s:installActions(javax.swing.JTable):V
- s:installActions(javax.swing.JTable,Z):V
- s:installActions(javax.swing.JTable,Z,javax.swing.JComponent):V
- s:installMoveDownAction(javax.swing.JList,javax.swing.JComponent):V
- s:installMoveEndAction(javax.swing.JList,javax.swing.JComponent):V
- s:installMoveHomeAction(javax.swing.JList,javax.swing.JComponent):V
- s:installMovePageDownAction(javax.swing.JList,javax.swing.JComponent):V
- s:installMovePageUpAction(javax.swing.JList,javax.swing.JComponent):V
- s:installMoveUpAction(javax.swing.JList,javax.swing.JComponent):V
- s:isEmpty(javax.swing.JComponent):Z
- s:isIndexFullyVisible(javax.swing.JList,I):Z
- s:isVisible(javax.swing.JTable,I):Z
- s:moveDown(javax.swing.JList,I):V
- s:moveDown(javax.swing.JTable,I,Z):V
- s:moveEnd(javax.swing.JList):V
- s:moveEnd(javax.swing.JTable):V
- s:moveHome(javax.swing.JList):V
- s:moveHome(javax.swing.JTable):V
- s:movePageDown(javax.swing.JList):V
- s:movePageDown(javax.swing.JTable):V
- s:movePageUp(javax.swing.JList):V
- s:movePageUp(javax.swing.JTable):V
- s:moveUp(javax.swing.JList,I):V
- s:moveUp(javax.swing.JTable,I,Z):V
- s:redirectExpandSelection(javax.swing.JList,javax.swing.JComponent):V
- s:selectItem(javax.swing.JList,I):V
- s:selectItem(javax.swing.JList,java.lang.Object):Z
a:com.intellij.ui.ScrollingUtil$ListScrollAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAwareAction
- com.intellij.ui.ScrollingUtil$ScrollingAction
- p:<init>(com.intellij.openapi.actionSystem.ShortcutSet,javax.swing.JComponent):V
com.intellij.ui.ScrollingUtil$ScrollingAction
- com.intellij.openapi.project.DumbAware
c:com.intellij.ui.SearchTextField
- javax.swing.JPanel
- sf:ALT_SHOW_HISTORY_KEYSTROKE:javax.swing.KeyStroke
- sf:ALT_SHOW_HISTORY_SHORTCUT:com.intellij.openapi.actionSystem.CustomShortcutSet
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- sf:SHOW_HISTORY_KEYSTROKE:javax.swing.KeyStroke
- sf:SHOW_HISTORY_SHORTCUT:com.intellij.openapi.actionSystem.CustomShortcutSet
- <init>():V
- <init>(java.lang.String):V
- <init>(Z):V
- <init>(Z,java.lang.String):V
- <init>(Z,Z,java.lang.String):V
- addCurrentTextToHistory():V
- addDocumentListener(javax.swing.event.DocumentListener):V
- addKeyboardListener(java.awt.event.KeyListener):V
- addNotify():V
- p:createItemChosenCallback(javax.swing.JList):java.lang.Runnable
- getHistory():java.util.List
- p:getPopupLocationComponent():java.awt.Component
- getSelectedIndex():I
- getText():java.lang.String
- getTextEditor():com.intellij.ui.components.JBTextField
- p:hidePopup():V
- p:historyItemChosen(java.lang.String):V
- pf:keyEventToTextField(java.awt.event.KeyEvent):V
- p:onFieldCleared():V
- p:onFocusGained():V
- p:onFocusLost():V
- p:preprocessEventForTextField(java.awt.event.KeyEvent):Z
- processInputMethodEvent(java.awt.event.InputMethodEvent):V
- removeDocumentListener(javax.swing.event.DocumentListener):V
- removeNotify():V
- requestFocus():V
- requestFocusInWindow():Z
- reset():V
- selectText():V
- p:setEmptyHistory():V
- setHistory(java.util.List):V
- p:setHistoryPropertyName(java.lang.String):V
- setHistorySize(I):V
- setSelectedItem(java.lang.String):V
- setText(java.lang.String):V
- p:showPopup():V
- p:toClearTextOnEscape():Z
f:com.intellij.ui.SearchTextField$FindAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ui.SearchTextField$MyModel
- javax.swing.AbstractListModel
- <init>(com.intellij.ui.SearchTextField):V
- addElement(java.lang.String):Z
- fireContentsChanged():V
- getElementAt(I):java.lang.String
- getSelectedItem():java.lang.String
- getSize():I
- insertElementAt(java.lang.String,I):V
- setItems(java.util.List):V
- setSelectedItem(java.lang.String):V
pc:com.intellij.ui.SearchTextField$TextFieldWithProcessing
- com.intellij.ui.components.JBTextField
- p:<init>():V
- processKeyEvent(java.awt.event.KeyEvent):V
f:com.intellij.ui.SeparatorFactory
- s:createSeparator(java.lang.String,javax.swing.JComponent):com.intellij.ui.TitledSeparator
c:com.intellij.ui.SeparatorWithText
- javax.swing.JComponent
- javax.accessibility.Accessible
- sf:DEFAULT_H_GAP:I
- p:myAlignment:I
- p:myCaption:java.lang.String
- p:myPrefWidth:I
- p:myTextForeground:java.awt.Color
- <init>():V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getCaption():java.lang.String
- ps:getHgap():I
- p:getLabelSize(java.awt.Insets):java.awt.Dimension
- getMinimumSize():java.awt.Dimension
- p:getPreferredElementSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- getTextForeground():java.awt.Color
- ps:getVgap():I
- p:paintComponent(java.awt.Graphics):V
- p:paintLine(java.awt.Graphics,I,I,I):V
- p:paintLinePart(java.awt.Graphics,I,I,I,I):V
- setCaption(java.lang.String):V
- setCaptionCentered(Z):V
- setMinimumWidth(I):V
- setTextForeground(java.awt.Color):V
pc:com.intellij.ui.SeparatorWithText$AccessibleSeparatorWithText
- javax.swing.JComponent$AccessibleJComponent
- p:<init>(com.intellij.ui.SeparatorWithText):V
- getAccessibleName():java.lang.String
- getAccessibleRole():javax.accessibility.AccessibleRole
e:com.intellij.ui.Side
- java.lang.Enum
- sf:BOTTOM:com.intellij.ui.Side
- sf:Companion:com.intellij.ui.Side$Companion
- sf:LEFT:com.intellij.ui.Side
- sf:RIGHT:com.intellij.ui.Side
- sf:TOP:com.intellij.ui.Side
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.Side
- s:values():com.intellij.ui.Side[]
f:com.intellij.ui.Side$Companion
- f:getTOP_AND_BOTTOM():java.util.Set
c:com.intellij.ui.SimpleColoredComponent
- javax.swing.JComponent
- com.intellij.ui.ColoredTextContainer
- javax.accessibility.Accessible
- sf:FRAGMENT_ICON:I
- p:myIconTextGap:I
- <init>():V
- f:append(java.lang.String):com.intellij.ui.SimpleColoredComponent
- f:append(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- f:append(java.lang.String,com.intellij.ui.SimpleTextAttributes,I,I):V
- append(java.lang.String,com.intellij.ui.SimpleTextAttributes,java.lang.Object):V
- append(java.lang.String,com.intellij.ui.SimpleTextAttributes,Z):V
- appendHTML(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- appendTextPadding(I):V
- appendTextPadding(I,I):V
- f:appendWithClipping(java.lang.String,com.intellij.ui.SimpleColoredComponent$FragmentTextClipper):com.intellij.ui.SimpleColoredComponent
- f:appendWithClipping(java.lang.String,com.intellij.ui.SimpleTextAttributes,com.intellij.ui.SimpleColoredComponent$FragmentTextClipper):com.intellij.ui.SimpleColoredComponent
- p:applyAdditionalHints(java.awt.Graphics2D):V
- change(java.lang.Runnable,Z):V
- clear():V
- f:computePreferredSize(Z):java.awt.Dimension
- p:doPaint(java.awt.Graphics2D):V
- p:doPaintFragmentBackground(java.awt.Graphics2D,I,java.awt.Color,I,I,I,I):V
- p:doPaintIcon(java.awt.Graphics2D,javax.swing.Icon,I):V
- p:doPaintText(java.awt.Graphics2D,I,Z):I
- findFragmentAt(I):I
- p:formatToLabel(javax.swing.JLabel):javax.swing.JLabel
- getAccessibleContext():javax.accessibility.AccessibleContext
- p:getActiveTextColor(java.awt.Color):java.awt.Color
- p:getBaseFont():java.awt.Font
- getBaseline(I,I):I
- getCharSequence(Z):java.lang.CharSequence
- getFragmentCount():I
- getFragmentTag(I):java.lang.Object
- getFragmentTagAt(I):java.lang.Object
- f:getIcon():javax.swing.Icon
- getIconTextGap():I
- getIpad():java.awt.Insets
- p:getMinHeight():I
- getMinimumSize():java.awt.Dimension
- getMyBorder():javax.swing.border.Border
- getPreferredSize():java.awt.Dimension
- s:getTextBaseLine(java.awt.FontMetrics,I):I
- getToolTipText(java.awt.event.MouseEvent):java.lang.String
- isIconOnTheRight():Z
- isIconOpaque():Z
- isTransparentIconBackground():Z
- iterator():com.intellij.ui.SimpleColoredComponent$ColoredIterator
- iterator(I):com.intellij.ui.SimpleColoredComponent$ColoredIterator
- p:paintBackground(java.awt.Graphics2D,I,I,I):V
- p:paintComponent(java.awt.Graphics):V
- p:paintIcon(java.awt.Graphics,javax.swing.Icon,I):V
- p:revalidateAndRepaint():V
- p:setBorderInsets(java.awt.Insets):V
- setDynamicSearchMatchHighlighting(Z):V
- pf:setFocusBorderAroundIcon(Z):V
- f:setIcon(javax.swing.Icon):V
- setIconOnTheRight(Z):V
- setIconOpaque(Z):V
- setIconTextGap(I):V
- setIpad(java.awt.Insets):V
- setMyBorder(javax.swing.border.Border):V
- pf:setPaintFocusBorder(Z):V
- setTextAlign(I):V
- setTransparentIconBackground(Z):V
- p:shouldDrawBackground():Z
- p:shouldDrawDimmed():Z
- updateUI():V
pc:com.intellij.ui.SimpleColoredComponent$AccessibleSimpleColoredComponent
- javax.swing.JComponent$AccessibleJComponent
- p:<init>(com.intellij.ui.SimpleColoredComponent):V
- getAccessibleName():java.lang.String
- getAccessibleRole():javax.accessibility.AccessibleRole
c:com.intellij.ui.SimpleColoredComponent$BrowserLauncherTag
- java.lang.Runnable
- <init>(java.lang.String):V
- run():V
com.intellij.ui.SimpleColoredComponent$ColoredIterator
- java.util.Iterator
- a:getEndOffset():I
- a:getFragment():java.lang.String
- a:getOffset():I
- a:getTag():java.lang.Object
- a:getTextAttributes():com.intellij.ui.SimpleTextAttributes
- a:setFragment(java.lang.String):V
- a:setTag(java.lang.Object):V
- a:setTextAttributes(com.intellij.ui.SimpleTextAttributes):V
- a:split(I,com.intellij.ui.SimpleTextAttributes):I
f:com.intellij.ui.SimpleColoredComponent$DefaultFragmentTextClipper
- com.intellij.ui.SimpleColoredComponent$FragmentTextClipper
- sf:INSTANCE:com.intellij.ui.SimpleColoredComponent$FragmentTextClipper
- <init>():V
- clipText(com.intellij.ui.SimpleColoredComponent,java.awt.Graphics2D,I,java.lang.String,I):java.lang.String
com.intellij.ui.SimpleColoredComponent$FragmentTextClipper
- a:clipText(com.intellij.ui.SimpleColoredComponent,java.awt.Graphics2D,I,java.lang.String,I):java.lang.String
c:com.intellij.ui.SimpleColoredRenderer
- com.intellij.ui.SimpleColoredComponent
- <init>():V
- acquireState(javax.swing.JTable,Z,Z,I,I):V
- append(java.lang.String,com.intellij.ui.SimpleTextAttributes,Z):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getCellState():com.intellij.ui.TableCellState
- p:modifyAttributes(com.intellij.ui.SimpleTextAttributes):com.intellij.ui.SimpleTextAttributes
- p:paintComponent(java.awt.Graphics):V
- p:revalidateAndRepaint():V
- setCellState(com.intellij.ui.TableCellState):V
- p:shouldPaintBackground():Z
a:com.intellij.ui.SimpleListCellRenderer
- com.intellij.ui.components.JBLabel
- javax.swing.ListCellRenderer
- <init>():V
- s:create(com.intellij.ui.SimpleListCellRenderer$Customizer):com.intellij.ui.SimpleListCellRenderer
- s:create(java.lang.String,com.intellij.util.Function):com.intellij.ui.SimpleListCellRenderer
- a:customize(javax.swing.JList,java.lang.Object,I,Z,Z):V
- firePropertyChange(java.lang.String,B,B):V
- firePropertyChange(java.lang.String,C,C):V
- firePropertyChange(java.lang.String,D,D):V
- firePropertyChange(java.lang.String,F,F):V
- firePropertyChange(java.lang.String,I,I):V
- firePropertyChange(java.lang.String,J,J):V
- p:firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object):V
- firePropertyChange(java.lang.String,S,S):V
- firePropertyChange(java.lang.String,Z,Z):V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- getPreferredSize():java.awt.Dimension
- invalidate():V
- repaint():V
- repaint(J,I,I,I,I):V
- repaint(java.awt.Rectangle):V
- revalidate():V
- validate():V
com.intellij.ui.SimpleListCellRenderer$Customizer
- a:customize(com.intellij.ui.components.JBLabel,java.lang.Object,I):V
c:com.intellij.ui.TextFieldWithHistory
- com.intellij.openapi.ui.ComboBox
- <init>():V
- addCurrentTextToHistory():V
- addDocumentListener(javax.swing.event.DocumentListener):V
- addKeyboardListener(java.awt.event.KeyListener):V
- getHistory():java.util.List
- getText():java.lang.String
- getTextEditor():javax.swing.JTextField
- removeDocumentListener(javax.swing.event.DocumentListener):V
- removeNotify():V
- selectText():V
- setHistory(java.util.List):V
- setHistorySize(I):V
- setPopupVisible(Z):V
- setText(java.lang.String):V
- setTextAndAddToHistory(java.lang.String):V
c:com.intellij.ui.TextFieldWithHistory$MyModel
- javax.swing.AbstractListModel
- javax.swing.ComboBoxModel
- <init>(com.intellij.ui.TextFieldWithHistory):V
- addElement(java.lang.Object):V
- contains(java.lang.String):Z
- fireContentsChanged():V
- getElementAt(I):java.lang.Object
- getSelectedItem():java.lang.Object
- getSize():I
- insertElementAt(java.lang.Object,I):V
- setItems(java.util.List):V
- setSelectedItem(java.lang.Object):V
c:com.intellij.ui.TextFieldWithHistoryWithBrowseButton
- com.intellij.openapi.ui.ComponentWithBrowseButton
- <init>():V
- addBrowseFolderListener(com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor):V
- addBrowseFolderListener(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor):V
- addBrowseFolderListener(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.ui.TextComponentAccessor,Z):V
- getText():java.lang.String
- removeNotify():V
- setText(java.lang.String):V
- setTextAndAddToHistory(java.lang.String):V
c:com.intellij.ui.TextFieldWithStoredHistory
- com.intellij.ui.TextFieldWithHistory
- <init>(java.lang.String):V
- <init>(java.lang.String,Z):V
- addCurrentTextToHistory():V
- reset():V
c:com.intellij.ui.TitledBorderWithMnemonic
- javax.swing.border.TitledBorder
- <init>(java.lang.String):V
- <init>(javax.swing.border.Border):V
- <init>(javax.swing.border.Border,java.lang.String):V
- <init>(javax.swing.border.Border,java.lang.String,I,I):V
- <init>(javax.swing.border.Border,java.lang.String,I,I,java.awt.Font):V
- <init>(javax.swing.border.Border,java.lang.String,I,I,java.awt.Font,java.awt.Color):V
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
c:com.intellij.ui.TitledSeparator
- javax.swing.JPanel
- com.intellij.openapi.ui.ComboBox$SelectableItem
- sf:BOTTOM_INSET:I
- sf:SEPARATOR_LEFT_INSET:I
- sf:SEPARATOR_RIGHT_INSET:I
- sf:TOP_INSET:I
- pf:myLabel:com.intellij.ui.components.JBLabel
- pf:mySeparator:javax.swing.JSeparator
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.JComponent):V
- s:createEmptyBorder():javax.swing.border.Border
- p:createLabel():com.intellij.ui.components.JBLabel
- getAccessibleContext():javax.accessibility.AccessibleContext
- getLabel():javax.swing.JLabel
- getLabelFor():java.awt.Component
- getSeparator():javax.swing.JSeparator
- getText():java.lang.String
- getTitleFont():java.awt.Font
- isSelectable():Z
- setEnabled(Z):V
- setLabelFocusable(Z):V
- setLabelFor(java.awt.Component):V
- setText(java.lang.String):V
- setTitleFont(java.awt.Font):V
- updateUI():V
a:com.intellij.ui.ToggleActionButton
- com.intellij.ui.AnActionButton
- com.intellij.openapi.actionSystem.Toggleable
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier,javax.swing.Icon):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- a:isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- a:setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- f:updateButton(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ui.ToolbarDecorator
- sf:DECORATOR_KEY:java.lang.String
- p:myAddAction:com.intellij.ui.AnActionButtonRunnable
- p:myAddActionEnabled:Z
- p:myDownAction:com.intellij.ui.AnActionButtonRunnable
- p:myDownActionEnabled:Z
- p:myEditAction:com.intellij.ui.AnActionButtonRunnable
- p:myEditActionEnabled:Z
- p:myPanelBorder:javax.swing.border.Border
- p:myRemoveAction:com.intellij.ui.AnActionButtonRunnable
- p:myRemoveActionEnabled:Z
- p:myScrollPaneBorder:javax.swing.border.Border
- p:myToolbarBorder:javax.swing.border.Border
- p:myUpAction:com.intellij.ui.AnActionButtonRunnable
- p:myUpActionEnabled:Z
- <init>():V
- addExtraAction(com.intellij.openapi.actionSystem.AnAction):com.intellij.ui.ToolbarDecorator
- addExtraAction(com.intellij.ui.AnActionButton):com.intellij.ui.ToolbarDecorator
- addExtraActions(com.intellij.openapi.actionSystem.AnAction[]):com.intellij.ui.ToolbarDecorator
- addExtraActions(com.intellij.ui.AnActionButton[]):com.intellij.ui.ToolbarDecorator
- s:createDecorator(com.intellij.ui.table.TableView,com.intellij.util.ui.ElementProducer):com.intellij.ui.ToolbarDecorator
- s:createDecorator(javax.swing.JComponent):com.intellij.ui.ToolbarDecorator
- s:createDecorator(javax.swing.JComponent,com.intellij.util.ui.ElementProducer):com.intellij.ui.ToolbarDecorator
- s:createDecorator(javax.swing.JList):com.intellij.ui.ToolbarDecorator
- s:createDecorator(javax.swing.JList,com.intellij.util.ui.EditableModel):com.intellij.ui.ToolbarDecorator
- s:createDecorator(javax.swing.JTable):com.intellij.ui.ToolbarDecorator
- s:createDecorator(javax.swing.JTree):com.intellij.ui.ToolbarDecorator
- createListener(com.intellij.ui.CommonActionsPanel):com.intellij.ui.CommonActionsPanel$Listener
- createPanel():javax.swing.JPanel
- disableAddAction():com.intellij.ui.ToolbarDecorator
- disableDownAction():com.intellij.ui.ToolbarDecorator
- disableRemoveAction():com.intellij.ui.ToolbarDecorator
- disableUpAction():com.intellij.ui.ToolbarDecorator
- disableUpDownActions():com.intellij.ui.ToolbarDecorator
- s:findAddButton(javax.swing.JComponent):com.intellij.ui.AnActionButton
- s:findDownButton(javax.swing.JComponent):com.intellij.ui.AnActionButton
- s:findEditButton(javax.swing.JComponent):com.intellij.ui.AnActionButton
- s:findRemoveButton(javax.swing.JComponent):com.intellij.ui.AnActionButton
- s:findUpButton(javax.swing.JComponent):com.intellij.ui.AnActionButton
- f:getActionsPanel():com.intellij.ui.CommonActionsPanel
- pa:getComponent():javax.swing.JComponent
- initPosition():com.intellij.ui.ToolbarDecorator
- p:installDnD():V
- pa:installDnDSupport():V
- pa:isModelEditable():Z
- setActionGroup(com.intellij.openapi.actionSystem.ActionGroup):com.intellij.ui.ToolbarDecorator
- setAddAction(com.intellij.ui.AnActionButtonRunnable):com.intellij.ui.ToolbarDecorator
- setAddActionName(java.lang.String):com.intellij.ui.ToolbarDecorator
- setAddActionUpdater(com.intellij.ui.AnActionButtonUpdater):com.intellij.ui.ToolbarDecorator
- setAddIcon(javax.swing.Icon):com.intellij.ui.ToolbarDecorator
- setAsUsualTopToolbar():com.intellij.ui.ToolbarDecorator
- setButtonComparator(java.lang.String[]):com.intellij.ui.ToolbarDecorator
- setEditAction(com.intellij.ui.AnActionButtonRunnable):com.intellij.ui.ToolbarDecorator
- setEditActionName(java.lang.String):com.intellij.ui.ToolbarDecorator
- setEditActionUpdater(com.intellij.ui.AnActionButtonUpdater):com.intellij.ui.ToolbarDecorator
- setForcedDnD():com.intellij.ui.ToolbarDecorator
- setMinimumSize(java.awt.Dimension):com.intellij.ui.ToolbarDecorator
- setMoveDownAction(com.intellij.ui.AnActionButtonRunnable):com.intellij.ui.ToolbarDecorator
- setMoveDownActionName(java.lang.String):com.intellij.ui.ToolbarDecorator
- setMoveDownActionUpdater(com.intellij.ui.AnActionButtonUpdater):com.intellij.ui.ToolbarDecorator
- setMoveUpAction(com.intellij.ui.AnActionButtonRunnable):com.intellij.ui.ToolbarDecorator
- setMoveUpActionName(java.lang.String):com.intellij.ui.ToolbarDecorator
- setMoveUpActionUpdater(com.intellij.ui.AnActionButtonUpdater):com.intellij.ui.ToolbarDecorator
- setPanelBorder(javax.swing.border.Border):com.intellij.ui.ToolbarDecorator
- setPreferredSize(java.awt.Dimension):com.intellij.ui.ToolbarDecorator
- setRemoveAction(com.intellij.ui.AnActionButtonRunnable):com.intellij.ui.ToolbarDecorator
- setRemoveActionName(java.lang.String):com.intellij.ui.ToolbarDecorator
- setRemoveActionUpdater(com.intellij.ui.AnActionButtonUpdater):com.intellij.ui.ToolbarDecorator
- setScrollPaneBorder(javax.swing.border.Border):com.intellij.ui.ToolbarDecorator
- setToolbarBorder(javax.swing.border.Border):com.intellij.ui.ToolbarDecorator
- setToolbarPosition(com.intellij.openapi.actionSystem.ActionToolbarPosition):com.intellij.ui.ToolbarDecorator
- setVisibleRowCount(I):com.intellij.ui.ToolbarDecorator
- pa:updateButtons():V
- p:updateExtraElementActions(Z):V
a:com.intellij.ui.ToolbarDecorator$ElementActionButton
- com.intellij.ui.AnActionButton
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon):V
c:com.intellij.ui.ToolbarDecoratorActionPromoter
- com.intellij.openapi.actionSystem.ActionPromoter
- <init>():V
- promote(java.util.List,com.intellij.openapi.actionSystem.DataContext):java.util.List
com.intellij.ui.ToolbarService
- sf:Companion:com.intellij.ui.ToolbarService$Companion
- a:setCustomTitleBar(java.awt.Window,javax.swing.JRootPane,kotlin.jvm.functions.Function1):V
- a:setTransparentTitleBar(java.awt.Window,javax.swing.JRootPane,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):V
- setTransparentTitleBar(java.awt.Window,javax.swing.JRootPane,kotlin.jvm.functions.Function1):V
f:com.intellij.ui.ToolbarService$Companion
- f:getInstance():com.intellij.ui.ToolbarService
f:com.intellij.ui.TransparentSplitter
- com.intellij.ui.OnePixelSplitter
- <init>():V
- <init>(F):V
- <init>(java.lang.String,F):V
- <init>(Z):V
- <init>(Z,F):V
- <init>(Z,F,F,F):V
- <init>(Z,java.lang.String,F):V
- getDividerWidth():I
c:com.intellij.ui.TreeCopyProvider
- com.intellij.ide.CopyProvider
- <init>(javax.swing.JTree):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isCopyEnabled(com.intellij.openapi.actionSystem.DataContext):Z
- isCopyVisible(com.intellij.openapi.actionSystem.DataContext):Z
- performCopy(com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.ui.UIBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
c:com.intellij.ui.border.IdeaTitledBorder
- javax.swing.border.TitledBorder
- <init>(java.lang.String,I,java.awt.Insets):V
- acceptMinimumSize(java.awt.Component):V
- getBorderInsets(java.awt.Component,java.awt.Insets):java.awt.Insets
- getInsideInsets():java.awt.Insets
- getMinimumSize(java.awt.Component):java.awt.Dimension
- getOutsideInsets():java.awt.Insets
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
- setShowLine(Z):com.intellij.ui.border.IdeaTitledBorder
- setTitle(java.lang.String):V
c:com.intellij.ui.components.ActionLink
- javax.swing.JButton
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.awt.event.ActionListener):V
- b:<init>(java.lang.String,java.awt.event.ActionListener,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.lang.String,kotlin.jvm.functions.Function1):V
- <init>(javax.swing.Action):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- f:getAutoHideOnDisable():Z
- getUIClassID():java.lang.String
- f:getVisited():Z
- f:setAutoHideOnDisable(Z):V
- f:setContextHelpIcon():V
- f:setDropDownLinkIcon():V
- f:setExternalLinkIcon():V
- f:setIcon(javax.swing.Icon,Z):V
- f:setLinkIcon():V
- f:setVisited(Z):V
- updateUI():V
- f:withFont(java.awt.Font):com.intellij.ui.components.ActionLink
c:com.intellij.ui.components.AnActionLink
- com.intellij.ui.components.ActionLink
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- <init>(com.intellij.openapi.actionSystem.AnAction,java.lang.String):V
- <init>(java.lang.String,com.intellij.openapi.actionSystem.AnAction):V
- <init>(java.lang.String,com.intellij.openapi.actionSystem.AnAction,java.lang.String):V
- <init>(java.lang.String,java.lang.String):V
- f:getDataProvider():com.intellij.openapi.actionSystem.DataProvider
- f:setDataProvider(com.intellij.openapi.actionSystem.DataProvider):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.ui.components.BrowserLink
- com.intellij.ui.components.ActionLink
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String):V
- <init>(javax.swing.Icon,java.lang.String,java.lang.String):V
- <init>(javax.swing.Icon,java.lang.String,java.lang.String,java.lang.String):V
- f:getUrl():java.lang.String
c:com.intellij.ui.components.DropDownLink
- com.intellij.ui.components.ActionLink
- <init>(java.lang.Object,java.util.List):V
- <init>(java.lang.Object,java.util.List,java.util.function.Consumer):V
- b:<init>(java.lang.Object,java.util.List,java.util.function.Consumer,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.lang.Object,java.util.List,java.util.function.Consumer,Z):V
- <init>(java.lang.Object,kotlin.jvm.functions.Function1):V
- createRenderer():javax.swing.ListCellRenderer
- f:getPopupState():com.intellij.ui.popup.PopupState
- f:getSelectedItem():java.lang.Object
- getSelectedObjects():java.lang.Object[]
- p:itemToString(java.lang.Object):java.lang.String
- p:performAction():V
- p:popupPoint():java.awt.Point
- f:setSelectedItem(java.lang.Object):V
c:com.intellij.ui.components.FixedColumnsModel
- com.intellij.ui.components.MultiColumnListModel
- <init>(javax.swing.ListModel,I):V
- getColumn(I):I
- getColumnCount():I
- getRow(I):I
- getRowCount():I
- toListIndex(I,I):I
com.intellij.ui.components.Interpolable
- a:getTargetValue():I
- a:getValue():I
- a:setCurrentValue(I):V
- a:setValue(I):V
c:com.intellij.ui.components.Interpolator
- <init>(java.util.function.Supplier,java.util.function.Consumer):V
- getTarget():I
- setTarget(I,I):V
c:com.intellij.ui.components.JBBox
- javax.swing.Box
- <init>(I):V
- s:createHorizontalBox():com.intellij.ui.components.JBBox
- s:createVerticalBox():com.intellij.ui.components.JBBox
- getAccessibleContext():javax.accessibility.AccessibleContext
pf:com.intellij.ui.components.JBBox$AccessibleJBBox
- javax.swing.Box$AccessibleBox
- getAccessibleRole():javax.accessibility.AccessibleRole
c:com.intellij.ui.components.JBCheckBox
- javax.swing.JCheckBox
- com.intellij.ui.AnchorableComponent
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,Z):V
- getAnchor():javax.swing.JComponent
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- setAnchor(javax.swing.JComponent):V
- setTextIcon(javax.swing.Icon):Z
c:com.intellij.ui.components.JBCheckBoxMenuItem
- javax.swing.JCheckBoxMenuItem
- javax.accessibility.Accessible
- <init>():V
- getAccessibleContext():javax.accessibility.AccessibleContext
pc:com.intellij.ui.components.JBCheckBoxMenuItem$AccessibleJBCheckBoxMenuItem
- javax.swing.JCheckBoxMenuItem$AccessibleJCheckBoxMenuItem
- p:<init>(com.intellij.ui.components.JBCheckBoxMenuItem):V
- getAccessibleRole():javax.accessibility.AccessibleRole
c:com.intellij.ui.components.JBComboBoxLabel
- javax.swing.JPanel
- <init>():V
- getIcon():javax.swing.Icon
- getText():java.lang.String
- setEnabled(Z):V
- setForeground(java.awt.Color):V
- setHorizontalAlignment(I):V
- setIcon(javax.swing.Icon):V
- setRegularIcon():V
- setSelectionIcon():V
- setText(java.lang.String):V
- setTextFont(java.awt.Font):V
c:com.intellij.ui.components.JBLabel
- javax.swing.JLabel
- com.intellij.ui.AnchorableComponent
- com.intellij.util.ui.components.JBComponent
- <init>():V
- <init>(com.intellij.util.ui.UIUtil$ComponentStyle):V
- <init>(java.lang.String):V
- <init>(java.lang.String,I):V
- <init>(java.lang.String,com.intellij.util.ui.UIUtil$ComponentStyle):V
- <init>(java.lang.String,com.intellij.util.ui.UIUtil$ComponentStyle,com.intellij.util.ui.UIUtil$FontColor):V
- <init>(java.lang.String,javax.swing.Icon,I):V
- <init>(javax.swing.Icon):V
- <init>(javax.swing.Icon,I):V
- andOpaque():com.intellij.ui.components.JBLabel
- andTransparent():com.intellij.ui.components.JBLabel
- p:createHyperlinkListener():javax.swing.event.HyperlinkListener
- getAnchor():javax.swing.JComponent
- getComponentStyle():com.intellij.util.ui.UIUtil$ComponentStyle
- getFontColor():com.intellij.util.ui.UIUtil$FontColor
- getForeground():java.awt.Color
- getLayout():java.awt.BorderLayout
- getMaximumSize():java.awt.Dimension
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- isAllowAutoWrapping():Z
- p:paintComponent(java.awt.Graphics):V
- setAllowAutoWrapping(Z):com.intellij.ui.components.JBLabel
- setAnchor(javax.swing.JComponent):V
- setBounds(I,I,I,I):V
- setComponentStyle(com.intellij.util.ui.UIUtil$ComponentStyle):V
- setCopyable(Z):com.intellij.ui.components.JBLabel
- setEnabled(Z):V
- setFocusable(Z):V
- setFont(java.awt.Font):V
- setFontColor(com.intellij.util.ui.UIUtil$FontColor):V
- setForeground(java.awt.Color):V
- setHorizontalTextPosition(I):V
- setIcon(javax.swing.Icon):V
- setIconTextGap(I):V
- setIconWithAlignment(javax.swing.Icon,I,I):V
- setText(java.lang.String):V
- setToolTipText(java.lang.String):V
- setVerticalTextPosition(I):V
- updateUI():V
- withBorder(javax.swing.border.Border):com.intellij.ui.components.JBLabel
- withFont(com.intellij.util.ui.JBFont):com.intellij.ui.components.JBLabel
f:com.intellij.ui.components.JBLabelDecorator
- com.intellij.ui.components.JBLabel
- s:createJBLabelDecorator():com.intellij.ui.components.JBLabelDecorator
- s:createJBLabelDecorator(java.lang.String):com.intellij.ui.components.JBLabelDecorator
- setBold(Z):com.intellij.ui.components.JBLabelDecorator
- setComponentStyleDecorative(com.intellij.util.ui.UIUtil$ComponentStyle):com.intellij.ui.components.JBLabelDecorator
- setFontColorDecorative(com.intellij.util.ui.UIUtil$FontColor):com.intellij.ui.components.JBLabelDecorator
c:com.intellij.ui.components.JBLayeredPane
- javax.swing.JLayeredPane
- <init>():V
- add(java.awt.Component,I):java.awt.Component
- doLayout():V
- getMinimumSize():java.awt.Dimension
- isFullOverlayLayout():Z
- setFullOverlayLayout(Z):V
c:com.intellij.ui.components.JBList
- javax.swing.JList
- com.intellij.ui.ComponentWithExpandableItems
- com.intellij.util.ui.ComponentWithEmptyText
- sf:IGNORE_LIST_ROW_HEIGHT:java.lang.String
- <init>():V
- <init>(java.util.Collection):V
- <init>(javax.swing.ListModel):V
- <init>(java.lang.Object[]):V
- s:createDefaultListModel(java.lang.Iterable):javax.swing.DefaultListModel
- s:createDefaultListModel(java.lang.Object[]):javax.swing.DefaultListModel
- p:createExpandableItemsHandler():com.intellij.ui.ExpandableItemsHandler
- disableEmptyText():V
- p:doCopyToClipboardAction():V
- doLayout():V
- getAccessibleContext():javax.accessibility.AccessibleContext
- p:getComponentGraphics(java.awt.Graphics):java.awt.Graphics
- getEmptyText():com.intellij.util.ui.StatusText
- getExpandableItemsHandler():com.intellij.ui.ExpandableItemsHandler
- getInputMethodRequests():java.awt.im.InputMethodRequests
- getItemsCount():I
- getPreferredSize():java.awt.Dimension
- getScrollableBlockIncrement(java.awt.Rectangle,I,I):I
- getScrollableUnitIncrement(java.awt.Rectangle,I,I):I
- installCellRenderer(com.intellij.util.NotNullFunction):V
- isEmpty():Z
- p:itemToText(I,java.lang.Object):java.lang.String
- paint(java.awt.Graphics):V
- p:paintComponent(java.awt.Graphics):V
- removeNotify():V
- repaint(J,I,I,I,I):V
- setCellRenderer(javax.swing.ListCellRenderer):V
- setDataProvider(com.intellij.openapi.actionSystem.DataProvider):V
- setDropTargetIndex(I):V
- setEmptyText(java.lang.String):V
- setExpandableItemsEnabled(Z):V
- setOffsetFromElementTopForDnD(com.intellij.util.Function):V
- setPaintBusy(Z):V
- setUI(javax.swing.plaf.ListUI):V
- pf:super_getPreferredSize():java.awt.Dimension
pc:com.intellij.ui.components.JBList$AccessibleJBList
- javax.swing.JList$AccessibleJList
- p:<init>(com.intellij.ui.components.JBList):V
- getAccessibleAt(java.awt.Point):javax.accessibility.Accessible
- getAccessibleChild(I):javax.accessibility.Accessible
- getAccessibleRole():javax.accessibility.AccessibleRole
pc:com.intellij.ui.components.JBList$AccessibleJBList$AccessibleJBListChild
- javax.swing.JList$AccessibleJList$AccessibleJListChild
- <init>(com.intellij.ui.components.JBList$AccessibleJBList,com.intellij.ui.components.JBList,I):V
- getAccessibleRole():javax.accessibility.AccessibleRole
c:com.intellij.ui.components.JBList$StripedListCellRenderer
- javax.swing.DefaultListCellRenderer
- <init>():V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
c:com.intellij.ui.components.JBLoadingPanel
- javax.swing.JPanel
- <init>(java.awt.LayoutManager,com.intellij.openapi.Disposable):V
- <init>(java.awt.LayoutManager,com.intellij.openapi.Disposable,I):V
- b:<init>(java.awt.LayoutManager,com.intellij.openapi.Disposable,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.awt.LayoutManager,java.util.function.Function):V
- add(java.awt.Component):java.awt.Component
- add(java.awt.Component,I):java.awt.Component
- add(java.awt.Component,java.lang.Object):V
- f:addListener(com.intellij.ui.components.JBLoadingPanelListener):V
- f:getContentPanel():javax.swing.JPanel
- f:getLoadingText():java.lang.String
- getPreferredSize():java.awt.Dimension
- f:isLoading():Z
- f:removeListener(com.intellij.ui.components.JBLoadingPanelListener):Z
- setLayout(java.awt.LayoutManager):V
- f:setLoadingText(java.lang.String):V
- startLoading():V
- stopLoading():V
com.intellij.ui.components.JBLoadingPanelListener
- a:onLoadingFinish():V
- a:onLoadingStart():V
a:com.intellij.ui.components.JBLoadingPanelListener$Adapter
- com.intellij.ui.components.JBLoadingPanelListener
- <init>():V
- onLoadingFinish():V
- onLoadingStart():V
c:com.intellij.ui.components.JBMenu
- javax.swing.JMenu
- javax.accessibility.Accessible
- <init>():V
- getAccessibleContext():javax.accessibility.AccessibleContext
pc:com.intellij.ui.components.JBMenu$AccessibleJBMenu
- javax.swing.JMenu$AccessibleJMenu
- p:<init>(com.intellij.ui.components.JBMenu):V
- getAccessibleStateSet():javax.accessibility.AccessibleStateSet
c:com.intellij.ui.components.JBOptionButton
- javax.swing.JButton
- com.intellij.openapi.util.Weighted
- sf:Companion:com.intellij.ui.components.JBOptionButton$Companion
- sf:PLACE:java.lang.String
- sf:PROP_OPTIONS:java.lang.String
- sf:PROP_OPTION_TOOLTIP:java.lang.String
- <init>(javax.swing.Action,javax.swing.Action[]):V
- f:closePopup():V
- f:getAddSeparator():Z
- sf:getDefaultShowPopupShortcut():com.intellij.openapi.actionSystem.CustomShortcutSet
- sf:getDefaultTooltip():java.lang.String
- f:getHideDisabledOptions():Z
- f:getOptionTooltipText():java.lang.String
- f:getOptions():javax.swing.Action[]
- f:getPopupBackgroundColor():java.awt.Color
- f:getPopupHandler():kotlin.jvm.functions.Function1
- f:getSelectFirstItem():Z
- f:getShowPopupYOffset():I
- getUI():com.intellij.ui.components.OptionButtonUI
- getUIClassID():java.lang.String
- getWeight():D
- f:isSimpleButton():Z
- f:setAddSeparator(Z):V
- f:setHideDisabledOptions(Z):V
- f:setOptionTooltipText(java.lang.String):V
- f:setOptions(java.util.List):V
- f:setOptions(javax.swing.Action[]):V
- f:setPopupBackgroundColor(java.awt.Color):V
- f:setPopupHandler(kotlin.jvm.functions.Function1):V
- f:setSelectFirstItem(Z):V
- f:setShowPopupYOffset(I):V
- f:showPopup(javax.swing.Action,Z):V
- bs:showPopup$default(com.intellij.ui.components.JBOptionButton,javax.swing.Action,Z,I,java.lang.Object):V
- f:togglePopup():V
f:com.intellij.ui.components.JBOptionButton$Companion
- f:getDefaultShowPopupShortcut():com.intellij.openapi.actionSystem.CustomShortcutSet
- f:getDefaultTooltip():java.lang.String
c:com.intellij.ui.components.JBPanelWithEmptyText
- com.intellij.ui.components.JBPanel
- com.intellij.util.ui.ComponentWithEmptyText
- <init>():V
- <init>(java.awt.LayoutManager):V
- getEmptyText():com.intellij.util.ui.StatusText
- p:paintComponent(java.awt.Graphics):V
- withEmptyText(java.lang.String):com.intellij.ui.components.JBPanelWithEmptyText
c:com.intellij.ui.components.JBPasswordField
- javax.swing.JPasswordField
- com.intellij.util.ui.ComponentWithEmptyText
- <init>():V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getEmptyText():com.intellij.util.ui.StatusText
- p:paintComponent(java.awt.Graphics):V
- setPasswordIsStored(Z):V
c:com.intellij.ui.components.JBRadioButton
- javax.swing.JRadioButton
- com.intellij.ui.AnchorableComponent
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon,Z):V
- <init>(java.lang.String,Z):V
- <init>(javax.swing.Action):V
- <init>(javax.swing.Icon):V
- <init>(javax.swing.Icon,Z):V
- getAnchor():javax.swing.JComponent
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- setAnchor(javax.swing.JComponent):V
c:com.intellij.ui.components.JBScrollBar
- javax.swing.JScrollBar
- com.intellij.openapi.wm.IdeGlassPane$TopComponent
- com.intellij.ui.components.Interpolable
- sf:LEADING:java.lang.String
- sf:TRACK:com.intellij.openapi.util.Key
- sf:TRAILING:java.lang.String
- <init>():V
- <init>(I):V
- <init>(I,I,I,I,I):V
- p:addImpl(java.awt.Component,java.lang.Object,I):V
- canBePreprocessed(java.awt.event.MouseEvent):Z
- s:createDefaultUI():javax.swing.plaf.ScrollBarUI
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ScrollBarUI
- s:createUI(javax.swing.JComponent,Z):javax.swing.plaf.ScrollBarUI
- getBlockIncrement(I):I
- p:getDeltaAdjusted(java.awt.event.MouseWheelEvent):D
- getTargetValue():I
- getUnitIncrement(I):I
- handleMouseWheelEvent(java.awt.event.MouseWheelEvent):Z
- isThin():Z
- setBlockIncrement(I):V
- setCurrentValue(I):V
- setUnitIncrement(I):V
- setValue(I):V
- toggle(Z):V
- updateUI():V
c:com.intellij.ui.components.JBScrollPane
- javax.swing.JScrollPane
- sf:IGNORE_SCROLLBAR_IN_INSETS:com.intellij.openapi.util.Key
- sf:IGNORE_SCROLL_LATCHING:com.intellij.openapi.util.Key
- p:statusComponent:javax.swing.JComponent
- <init>():V
- <init>(I):V
- <init>(I,I):V
- <init>(java.awt.Component):V
- <init>(java.awt.Component,I,I):V
- s:canBePreprocessed(java.awt.event.MouseEvent,javax.swing.JScrollBar):Z
- createHorizontalScrollBar():javax.swing.JScrollBar
- s:createIndentBorder():com.intellij.ui.components.JBScrollPane$ViewportBorder
- createVerticalScrollBar():javax.swing.JScrollBar
- p:createViewport():javax.swing.JViewport
- getBackground():java.awt.Color
- getStatusComponent():javax.swing.JComponent
- isOptimizedDrawingEnabled():Z
- isOverlappingScrollBar():Z
- s:isScrollEvent(java.awt.event.MouseWheelEvent):Z
- paint(java.awt.Graphics):V
- p:paintBorder(java.awt.Graphics):V
- p:paintChildren(java.awt.Graphics):V
- p:processMouseWheelEvent(java.awt.event.MouseWheelEvent):V
- setOverlappingScrollBar(Z):V
- setStatusComponent(javax.swing.JComponent):V
- setUI(javax.swing.plaf.ScrollPaneUI):V
- p:setupCorners():V
e:com.intellij.ui.components.JBScrollPane$Alignment
- java.lang.Enum
- sf:BOTTOM:com.intellij.ui.components.JBScrollPane$Alignment
- sf:LEFT:com.intellij.ui.components.JBScrollPane$Alignment
- sf:RIGHT:com.intellij.ui.components.JBScrollPane$Alignment
- sf:TOP:com.intellij.ui.components.JBScrollPane$Alignment
- s:get(javax.swing.JComponent):com.intellij.ui.components.JBScrollPane$Alignment
- s:valueOf(java.lang.String):com.intellij.ui.components.JBScrollPane$Alignment
- s:values():com.intellij.ui.components.JBScrollPane$Alignment[]
e:com.intellij.ui.components.JBScrollPane$Flip
- java.lang.Enum
- sf:BOTH:com.intellij.ui.components.JBScrollPane$Flip
- sf:HORIZONTAL:com.intellij.ui.components.JBScrollPane$Flip
- sf:NONE:com.intellij.ui.components.JBScrollPane$Flip
- sf:VERTICAL:com.intellij.ui.components.JBScrollPane$Flip
- s:valueOf(java.lang.String):com.intellij.ui.components.JBScrollPane$Flip
- s:values():com.intellij.ui.components.JBScrollPane$Flip[]
c:com.intellij.ui.components.JBScrollPane$Layout
- javax.swing.ScrollPaneLayout
- p:statusComponent:java.awt.Component
- <init>():V
- addLayoutComponent(java.lang.String,java.awt.Component):V
- layoutContainer(java.awt.Container):V
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
- syncWithScrollPane(javax.swing.JScrollPane):V
c:com.intellij.ui.components.JBScrollPane$ViewportBorder
- javax.swing.border.LineBorder
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
c:com.intellij.ui.components.JBSlider
- javax.swing.JSlider
- <init>():V
- <init>(I):V
- <init>(I,I):V
- <init>(I,I,I):V
- <init>(I,I,I,I):V
- <init>(javax.swing.BoundedRangeModel):V
- p:fireStateChanged():V
- f:setValueWithoutEvents(I):V
f:com.intellij.ui.components.JBSlidingPanel
- com.intellij.ui.components.JBPanel
- <init>():V
- add(java.awt.Component):java.awt.Component
- add(java.awt.Component,I):java.awt.Component
- add(java.awt.Component,java.lang.Object):V
- add(java.awt.Component,java.lang.Object,I):V
- getLayout():com.intellij.ui.JBCardLayout
- swipe(java.lang.String,com.intellij.ui.JBCardLayout$SwipeDirection):com.intellij.openapi.util.ActionCallback
c:com.intellij.ui.components.JBTabbedPane
- javax.swing.JTabbedPane
- java.awt.event.HierarchyListener
- sf:LABEL_FROM_TABBED_PANE:java.lang.String
- <init>():V
- <init>(I):V
- <init>(I,I):V
- p:getComponentGraphics(java.awt.Graphics):java.awt.Graphics
- p:getInsetsForTabComponent():java.awt.Insets
- getTabComponentInsets():java.awt.Insets
- hierarchyChanged(java.awt.event.HierarchyEvent):V
- insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,I):V
- removeNotify():V
- setComponentAt(I,java.awt.Component):V
- setSelectedIndex(I):V
- setTabComponentInsets(java.awt.Insets):V
- setTitleAt(I,java.lang.String):V
- updateUI():V
c:com.intellij.ui.components.JBTextArea
- javax.swing.JTextArea
- com.intellij.util.ui.ComponentWithEmptyText
- <init>():V
- <init>(I,I):V
- <init>(java.lang.String):V
- <init>(java.lang.String,I,I):V
- <init>(javax.swing.text.Document):V
- <init>(javax.swing.text.Document,java.lang.String,I,I):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- p:getComponentGraphics(java.awt.Graphics):java.awt.Graphics
- getEmptyText():com.intellij.util.ui.StatusText
- getPreferredSize():java.awt.Dimension
- p:paintComponent(java.awt.Graphics):V
- scrollRectToVisible(java.awt.Rectangle):V
- updateUI():V
c:com.intellij.ui.components.JBTextField
- javax.swing.JTextField
- com.intellij.ui.TextAccessor
- com.intellij.util.ui.ComponentWithEmptyText
- <init>():V
- <init>(I):V
- <init>(java.lang.String):V
- <init>(java.lang.String,I):V
- p:createDefaultModel():javax.swing.text.Document
- getAccessibleContext():javax.accessibility.AccessibleContext
- p:getComponentGraphics(java.awt.Graphics):java.awt.Graphics
- getEmptyText():com.intellij.util.ui.StatusText
- p:getEmptyTextComponentBounds(java.awt.Rectangle):java.awt.Rectangle
- getToolTipText(java.awt.event.MouseEvent):java.lang.String
- p:paintComponent(java.awt.Graphics):V
- setText(java.lang.String):V
- setTextToTriggerEmptyTextStatus(java.lang.String):V
- updateUI():V
f:com.intellij.ui.components.JBThinOverlappingScrollBar
- com.intellij.ui.components.JBScrollBar
- <init>(I):V
- isThin():Z
c:com.intellij.ui.components.JBViewport
- javax.swing.JViewport
- com.intellij.ui.components.ZoomableViewport
- sf:ATTACH_STATUS_TEXT:com.intellij.openapi.util.Key
- sf:FORCE_VISIBLE_ROW_COUNT_KEY:com.intellij.openapi.util.Key
- <init>():V
- p:computeBlit(I,I,java.awt.Point,java.awt.Point,java.awt.Dimension,java.awt.Rectangle):Z
- p:createLayoutManager():java.awt.LayoutManager
- p:createZooming():com.intellij.ui.components.ZoomingDelegate
- getBackground():java.awt.Color
- p:getComponentGraphics(java.awt.Graphics):java.awt.Graphics
- getMagnificator():com.intellij.ui.components.Magnificator
- isPaintingNow():Z
- magnificationFinished(D):V
- magnificationStarted(java.awt.Point):V
- magnify(D):V
- paint(java.awt.Graphics):V
- scrollRectToVisible(java.awt.Rectangle):V
- setView(java.awt.Component):V
- setViewPosition(java.awt.Point):V
com.intellij.ui.components.Magnificator
- sf:CLIENT_PROPERTY_KEY:com.intellij.openapi.util.Key
- a:magnify(D,java.awt.Point):java.awt.Point
c:com.intellij.ui.components.MultiColumnList
- javax.swing.JTable
- <init>(javax.swing.ListModel):V
- <init>(java.lang.Object[]):V
- getDelegate():javax.swing.JList
- getModel():com.intellij.ui.components.MultiColumnListModel
- getPreferredSize():java.awt.Dimension
- s:main(java.lang.String[]):V
- p:processKeyEvent(java.awt.event.KeyEvent):V
- setCellRenderer(javax.swing.ListCellRenderer):V
- setFixedColumnsMode(I):V
- setFixedRowsMode(I):V
a:com.intellij.ui.components.MultiColumnListModel
- javax.swing.table.AbstractTableModel
- javax.swing.table.TableModel
- <init>(javax.swing.ListModel):V
- a:getColumn(I):I
- a:getRow(I):I
- getSize():I
- getValueAt(I,I):java.lang.Object
- a:toListIndex(I,I):I
c:com.intellij.ui.components.OnOffButton
- javax.swing.JToggleButton
- <init>():V
- getOffText():java.lang.String
- getOnText():java.lang.String
- getUIClassID():java.lang.String
- setOffText(java.lang.String):V
- setOnText(java.lang.String):V
- updateUI():V
a:com.intellij.ui.components.OptionButtonUI
- javax.swing.plaf.ButtonUI
- <init>():V
- a:closePopup():V
- a:showPopup(javax.swing.Action,Z):V
- bs:showPopup$default(com.intellij.ui.components.OptionButtonUI,javax.swing.Action,Z,I,java.lang.Object):V
- a:togglePopup():V
c:com.intellij.ui.components.ProgressBarLoadingDecorator
- com.intellij.openapi.ui.LoadingDecorator
- <init>(javax.swing.JPanel,com.intellij.openapi.Disposable,I):V
- p:customizeLoadingLayer(javax.swing.JPanel,javax.swing.JLabel,com.intellij.util.ui.AnimatedIcon):com.intellij.ui.components.panels.NonOpaquePanel
- getProgressBar():javax.swing.JProgressBar
- p:isOnTop():Z
- startLoading():V
- startLoading(Z):V
- stopLoading():V
c:com.intellij.ui.components.TextComponentEmptyText
- com.intellij.util.ui.StatusText
- sf:STATUS_VISIBLE_FUNCTION:java.lang.String
- p:adjustComponentBounds(javax.swing.JComponent,java.awt.Rectangle):java.awt.Rectangle
- getStatusTriggerText():java.lang.String
- p:getTextComponentBound():java.awt.Rectangle
- p:isStatusVisible():Z
- paintStatusText(java.awt.Graphics):V
- resetFontToOwnerFont():V
- setTextToTriggerStatus(java.lang.String):V
- s:setupPlaceholderVisibility(javax.swing.text.JTextComponent):V
f:com.intellij.ui.components.WideSelectionListUI
- javax.swing.plaf.basic.BasicListUI
- <init>():V
- s:createUI(javax.swing.JComponent):javax.swing.plaf.ComponentUI
- getCellBounds(javax.swing.JList,I,I):java.awt.Rectangle
- paint(java.awt.Graphics,javax.swing.JComponent):V
com.intellij.ui.components.ZoomableViewport
- a:getMagnificator():com.intellij.ui.components.Magnificator
- a:magnificationFinished(D):V
- a:magnificationStarted(java.awt.Point):V
- a:magnify(D):V
c:com.intellij.ui.components.ZoomingDelegate
- <init>(javax.swing.JComponent,javax.swing.JComponent):V
- p:convertToContentCoordinates(java.awt.Point):java.awt.Point
- isActive():Z
- magnificationFinished(D):V
- magnificationStarted(java.awt.Point):V
- ps:magnificationToScale(D):D
- magnify(D):V
- paint(java.awt.Graphics):V
- p:scrollTo(I,I):V
c:com.intellij.ui.components.breadcrumbs.Breadcrumbs
- com.intellij.ui.components.JBPanelWithEmptyText
- p:hovered:com.intellij.ui.components.breadcrumbs.Crumb
- p:selected:com.intellij.ui.components.breadcrumbs.Crumb
- <init>():V
- getAccessibleContext():javax.accessibility.AccessibleContext
- p:getAttributes(com.intellij.ui.components.breadcrumbs.Crumb):com.intellij.openapi.editor.markup.TextAttributes
- p:getBackground(com.intellij.ui.components.breadcrumbs.Crumb):java.awt.Color
- getBaseline(I,I):I
- getCrumbAt(I,I):com.intellij.ui.components.breadcrumbs.Crumb
- p:getCrumbBounds(com.intellij.ui.components.breadcrumbs.Crumb):java.awt.Rectangle
- getCrumbs():java.lang.Iterable
- p:getEffectColor(com.intellij.ui.components.breadcrumbs.Crumb):java.awt.Color
- p:getEffectPainter(com.intellij.openapi.editor.markup.EffectType):com.intellij.ui.paint.EffectPainter
- p:getEffectType(com.intellij.ui.components.breadcrumbs.Crumb):com.intellij.openapi.editor.markup.EffectType
- getFont():java.awt.Font
- p:getFont(com.intellij.ui.components.breadcrumbs.Crumb):java.awt.Font
- p:getFontStyle(com.intellij.ui.components.breadcrumbs.Crumb):I
- p:getForeground(com.intellij.ui.components.breadcrumbs.Crumb):java.awt.Color
- p:getMarkerForeground(com.intellij.ui.components.breadcrumbs.Crumb):java.awt.Color
- getToolTipText(java.awt.event.MouseEvent):java.lang.String
- isAfterSelected(com.intellij.ui.components.breadcrumbs.Crumb):Z
- isHovered(com.intellij.ui.components.breadcrumbs.Crumb):Z
- isSelected(com.intellij.ui.components.breadcrumbs.Crumb):Z
- onHover(java.util.function.BiConsumer):V
- onSelect(java.util.function.BiConsumer):V
- p:paintComponent(java.awt.Graphics):V
- p:paintMarker(java.awt.Graphics2D,I,I,I,I,com.intellij.ui.components.breadcrumbs.Crumb,I):V
- setCrumbs(java.lang.Iterable):V
pc:com.intellij.ui.components.breadcrumbs.Breadcrumbs$AccessibleBreadcrumbs
- javax.swing.JPanel$AccessibleJPanel
- p:<init>(com.intellij.ui.components.breadcrumbs.Breadcrumbs):V
- getAccessibleAt(java.awt.Point):javax.accessibility.Accessible
- getAccessibleChild(I):javax.accessibility.Accessible
- getAccessibleChildrenCount():I
pc:com.intellij.ui.components.breadcrumbs.Breadcrumbs$AccessibleBreadcrumbs$AccessibleCrumb
- javax.accessibility.AccessibleContext
- javax.accessibility.Accessible
- p:myIndex:I
- p:myText:java.lang.String
- <init>(com.intellij.ui.components.breadcrumbs.Breadcrumbs$AccessibleBreadcrumbs,I,java.lang.String):V
- getAccessibleChild(I):javax.accessibility.Accessible
- getAccessibleChildrenCount():I
- getAccessibleContext():javax.accessibility.AccessibleContext
- getAccessibleIndexInParent():I
- getAccessibleName():java.lang.String
- getAccessibleRole():javax.accessibility.AccessibleRole
- getAccessibleStateSet():javax.accessibility.AccessibleStateSet
- getLocale():java.util.Locale
com.intellij.ui.components.breadcrumbs.Crumb
- getContextActions():java.util.List
- getIcon():javax.swing.Icon
- getText():java.lang.String
- getTooltip():java.lang.String
c:com.intellij.ui.components.breadcrumbs.Crumb$Impl
- com.intellij.ui.components.breadcrumbs.Crumb
- <init>(com.intellij.ui.breadcrumbs.BreadcrumbsProvider,com.intellij.psi.PsiElement):V
- <init>(javax.swing.Icon,java.lang.String,java.lang.String,java.util.List):V
- <init>(javax.swing.Icon,java.lang.String,java.lang.String,javax.swing.Action[]):V
- getContextActions():java.util.List
- getIcon():javax.swing.Icon
- getText():java.lang.String
- getTooltip():java.lang.String
c:com.intellij.ui.components.editors.JBComboBoxTableCellEditorComponent
- com.intellij.ui.components.JBLabel
- myWide:Z
- <init>():V
- <init>(javax.swing.JTable):V
- addActionListener(java.awt.event.ActionListener):V
- addNotify():V
- getEditorValue():java.lang.Object
- getOptions():java.lang.Object[]
- getToString():com.intellij.util.Function
- setCell(javax.swing.JTable,I,I):V
- setColumn(I):V
- setDefaultValue(java.lang.Object):V
- setOptions(java.lang.Object[]):V
- setRenderer(javax.swing.ListCellRenderer):V
- setRow(I):V
- setTable(javax.swing.JTable):V
- setToString(com.intellij.util.Function):V
- setWide(Z):V
c:com.intellij.ui.components.fields.CommaSeparatedIntegersField
- com.intellij.ui.components.JBTextField
- <init>():V
- <init>(java.lang.String,I,I,java.lang.String):V
- clear():V
- getDefaultValue():java.util.List
- getValue():java.util.List
- getValueEditor():com.intellij.ui.components.fields.valueEditors.ValueEditor
- getValueName():java.lang.String
- isEmpty():Z
- setDefaultValue(java.util.List):V
- setValue(java.util.List):V
- validateContent():V
c:com.intellij.ui.components.fields.ExpandableTextField
- com.intellij.ui.components.fields.ExtendableTextField
- com.intellij.ui.Expandable
- <init>():V
- <init>(com.intellij.util.Function,com.intellij.util.Function):V
- collapse():V
- p:createExtensions():java.util.List
- p:createTextArea(java.lang.String,Z,java.awt.Color,java.awt.Color,java.awt.Font):javax.swing.JTextArea
- expand():V
- getTitle():java.lang.String
- isExpanded():Z
- setEnabled(Z):V
- setMonospaced(Z):V
- setTitle(java.lang.String):V
com.intellij.ui.components.fields.ExtendableTextComponent
- sf:VARIANT:java.lang.String
- a:addExtension(com.intellij.ui.components.fields.ExtendableTextComponent$Extension):V
- a:getExtensions():java.util.List
- a:removeExtension(com.intellij.ui.components.fields.ExtendableTextComponent$Extension):V
- a:setExtensions(java.util.Collection):V
- a:setExtensions(com.intellij.ui.components.fields.ExtendableTextComponent$Extension[]):V
com.intellij.ui.components.fields.ExtendableTextComponent$Extension
- s:create(javax.swing.Icon,java.lang.String,java.lang.Runnable):com.intellij.ui.components.fields.ExtendableTextComponent$Extension
- s:create(javax.swing.Icon,javax.swing.Icon,java.lang.String,java.lang.Runnable):com.intellij.ui.components.fields.ExtendableTextComponent$Extension
- getActionOnClick():java.lang.Runnable
- getActionOnClick(java.awt.event.InputEvent):java.lang.Runnable
- getAfterIconOffset():I
- getButtonSize():java.awt.Dimension
- a:getIcon(Z):javax.swing.Icon
- getIconGap():I
- getPreferredSpace():I
- getTooltip():java.lang.String
- isIconBeforeText():Z
- isSelected():Z
c:com.intellij.ui.components.fields.ExtendableTextField
- com.intellij.ui.components.JBTextField
- com.intellij.ui.components.fields.ExtendableTextComponent
- <init>():V
- <init>(I):V
- <init>(java.lang.String):V
- <init>(java.lang.String,I):V
- addExtension(com.intellij.ui.components.fields.ExtendableTextComponent$Extension):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- getExtensions():java.util.List
- p:getOriginalAccessibleContext():javax.accessibility.AccessibleContext
- removeExtension(com.intellij.ui.components.fields.ExtendableTextComponent$Extension):V
- setExtensions(java.util.Collection):V
- setExtensions(com.intellij.ui.components.fields.ExtendableTextComponent$Extension[]):V
- setUI(javax.swing.plaf.TextUI):V
c:com.intellij.ui.components.fields.IntegerField
- com.intellij.ui.components.JBTextField
- <init>():V
- <init>(java.lang.String,I,I):V
- getDefaultValue():java.lang.Integer
- getMaxValue():I
- getMinValue():I
- getValue():java.lang.Integer
- getValueEditor():com.intellij.ui.components.fields.valueEditors.IntegerValueEditor
- getValueName():java.lang.String
- isCanBeEmpty():Z
- resetToDefault():V
- setCanBeEmpty(Z):V
- setDefaultValue(java.lang.Integer):V
- setDefaultValueText(java.lang.String):V
- setMaxValue(I):V
- setMinValue(I):V
- setValue(java.lang.Integer):V
- setValueName(java.lang.String):V
- validateContent():V
a:com.intellij.ui.components.fields.valueEditors.AbstractValueEditor
- com.intellij.ui.components.fields.valueEditors.ValueEditor
- p:<init>(java.lang.String,java.lang.Object):V
- addListener(com.intellij.ui.components.fields.valueEditors.ValueEditor$Listener):V
- fireValueChanged(java.lang.Object):V
- getDefaultValue():java.lang.Object
- getValue():java.lang.Object
- getValueName():java.lang.String
- setDefaultValue(java.lang.Object):V
- setValue(java.lang.Object):V
- setValueName(java.lang.String):V
- validateContent():V
c:com.intellij.ui.components.fields.valueEditors.CommaSeparatedIntegersValueEditor
- com.intellij.ui.components.fields.valueEditors.TextFieldValueEditor
- <init>(javax.swing.JTextField,java.lang.String,I,I):V
- s:intListToString(java.util.List):java.lang.String
- isValid(java.util.List):Z
- parseValue(java.lang.String):java.util.List
- valueToString(java.util.List):java.lang.String
c:com.intellij.ui.components.fields.valueEditors.IntegerValueEditor
- com.intellij.ui.components.fields.valueEditors.TextFieldValueEditor
- <init>(javax.swing.JTextField,java.lang.String,java.lang.Integer):V
- getMaxValue():I
- getMinValue():I
- isCanBeEmpty():Z
- p:isShowError(java.lang.String):Z
- isValid(java.lang.Integer):Z
- parseValue(java.lang.String):java.lang.Integer
- setCanBeEmpty(Z):V
- setMaxValue(I):V
- setMinValue(I):V
- valueToString(java.lang.Integer):java.lang.String
a:com.intellij.ui.components.fields.valueEditors.TextFieldValueEditor
- com.intellij.ui.components.fields.valueEditors.AbstractValueEditor
- <init>(javax.swing.JTextField,java.lang.String,java.lang.Object):V
- getValueText():java.lang.String
- p:isShowError(java.lang.String):Z
- p:setErrorText(java.lang.String):V
- setValueText(java.lang.String):V
- p:validateTextOnChange(java.lang.String,javax.swing.event.DocumentEvent):java.lang.String
com.intellij.ui.components.fields.valueEditors.ValueEditor
- a:addListener(com.intellij.ui.components.fields.valueEditors.ValueEditor$Listener):V
- a:getDefaultValue():java.lang.Object
- a:getValue():java.lang.Object
- a:getValueName():java.lang.String
- a:getValueText():java.lang.String
- a:isValid(java.lang.Object):Z
- a:parseValue(java.lang.String):java.lang.Object
- a:setDefaultValue(java.lang.Object):V
- a:setValue(java.lang.Object):V
- a:setValueText(java.lang.String):V
- a:validateContent():V
- a:valueToString(java.lang.Object):java.lang.String
com.intellij.ui.components.fields.valueEditors.ValueEditor$Listener
- a:valueChanged(java.lang.Object):V
c:com.intellij.ui.components.labels.ActionLink
- com.intellij.ui.components.labels.LinkLabel
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- <init>(java.lang.String,com.intellij.openapi.actionSystem.AnAction):V
- <init>(java.lang.String,javax.swing.Icon,com.intellij.openapi.actionSystem.AnAction):V
- <init>(java.lang.String,javax.swing.Icon,com.intellij.openapi.actionSystem.AnAction,java.lang.Runnable,java.lang.String):V
- doClick(java.awt.event.InputEvent):V
- getAction():com.intellij.openapi.actionSystem.AnAction
- getActiveColor():java.awt.Color
- p:getNormal():java.awt.Color
- p:getTextColor():java.awt.Color
- p:getVisited():java.awt.Color
- setActiveColor(java.awt.Color):V
- setNormalColor(java.awt.Color):V
- setVisitedColor(java.awt.Color):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
c:com.intellij.ui.components.labels.BoldLabel
- javax.swing.JLabel
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,I):V
- <init>(java.lang.String,javax.swing.Icon,I):V
- <init>(javax.swing.Icon):V
- <init>(javax.swing.Icon,I):V
- setText(java.lang.String):V
c:com.intellij.ui.components.labels.DropDownLink
- com.intellij.ui.components.labels.LinkLabel
- <init>(java.lang.Object,java.lang.Runnable):V
- <init>(java.lang.Object,java.util.List,com.intellij.util.Consumer,Z):V
- <init>(java.lang.Object,java.util.function.Function):V
- getChosenItem():java.lang.Object
c:com.intellij.ui.components.labels.LinkLabel
- javax.swing.JLabel
- p:myPaintUnderline:Z
- p:myUnderline:Z
- <init>():V
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon,com.intellij.ui.components.labels.LinkListener):V
- <init>(java.lang.String,javax.swing.Icon,com.intellij.ui.components.labels.LinkListener,java.lang.Object):V
- s:create(java.lang.String,java.lang.Runnable):com.intellij.ui.components.labels.LinkLabel
- doClick():V
- doClick(java.awt.event.InputEvent):V
- entered(java.awt.event.MouseEvent):V
- exited(java.awt.event.MouseEvent):V
- getAccessibleContext():javax.accessibility.AccessibleContext
- p:getActive():java.awt.Color
- p:getHover():java.awt.Color
- getLinkData():java.lang.Object
- p:getNormal():java.awt.Color
- p:getStatusBarText():java.lang.String
- p:getTextBounds():java.awt.Rectangle
- p:getTextColor():java.awt.Color
- getTextRectangleCenter():java.awt.Point
- p:getUnderlineColor():java.awt.Color
- p:getUnderlineShift():I
- p:getVisited():java.awt.Color
- p:isInClickableArea(java.awt.Point):Z
- isVisited():Z
- p:onSetActive(Z):V
- p:paintComponent(java.awt.Graphics):V
- pressed(java.awt.event.MouseEvent):V
- removeNotify():V
- setHoveringIcon(javax.swing.Icon):V
- setIcon(javax.swing.Icon):V
- setListener(com.intellij.ui.components.labels.LinkListener,java.lang.Object):V
- setPaintUnderline(Z):V
pc:com.intellij.ui.components.labels.LinkLabel$AccessibleLinkLabel
- javax.swing.JLabel$AccessibleJLabel
- javax.accessibility.AccessibleAction
- p:<init>(com.intellij.ui.components.labels.LinkLabel):V
- doAccessibleAction(I):Z
- getAccessibleActionCount():I
- getAccessibleActionDescription(I):java.lang.String
- getAccessibleRole():javax.accessibility.AccessibleRole
com.intellij.ui.components.labels.LinkListener
- sf:NULL:com.intellij.ui.components.labels.LinkListener
- a:linkSelected(com.intellij.ui.components.labels.LinkLabel,java.lang.Object):V
c:com.intellij.ui.components.labels.SwingActionLink
- com.intellij.ui.components.labels.LinkLabel
- com.intellij.ui.components.labels.LinkListener
- <init>(javax.swing.Action):V
- linkSelected(com.intellij.ui.components.labels.LinkLabel,javax.swing.Action):V
c:com.intellij.ui.components.panels.FlowLayoutWrapper
- com.intellij.ui.components.panels.NonOpaquePanel
- <init>(javax.swing.JComponent):V
- <init>(javax.swing.JComponent,javax.swing.border.Border):V
c:com.intellij.ui.components.panels.HorizontalBox
- javax.swing.JPanel
- <init>():V
- add(java.awt.Component):java.awt.Component
- remove(java.awt.Component):V
- removeAll():V
f:com.intellij.ui.components.panels.HorizontalLayout
- java.awt.LayoutManager2
- sf:CENTER:java.lang.String
- sf:Companion:com.intellij.ui.components.panels.HorizontalLayout$Companion
- sf:FILL:I
- sf:LEFT:java.lang.String
- sf:RIGHT:java.lang.String
- <init>(I):V
- <init>(I,I):V
- b:<init>(I,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addLayoutComponent(java.awt.Component,java.lang.Object):V
- addLayoutComponent(java.lang.String,java.awt.Component):V
- f:components():kotlin.sequences.Sequence
- getLayoutAlignmentX(java.awt.Container):F
- getLayoutAlignmentY(java.awt.Container):F
- invalidateLayout(java.awt.Container):V
- layoutContainer(java.awt.Container):V
- maximumLayoutSize(java.awt.Container):java.awt.Dimension
- minimumLayoutSize(java.awt.Container):java.awt.Dimension
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
- removeLayoutComponent(java.awt.Component):V
f:com.intellij.ui.components.panels.HorizontalLayout$Companion
e:com.intellij.ui.components.panels.HorizontalLayout$Group
- java.lang.Enum
- sf:CENTER:com.intellij.ui.components.panels.HorizontalLayout$Group
- sf:LEFT:com.intellij.ui.components.panels.HorizontalLayout$Group
- sf:RIGHT:com.intellij.ui.components.panels.HorizontalLayout$Group
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.components.panels.HorizontalLayout$Group
- s:values():com.intellij.ui.components.panels.HorizontalLayout$Group[]
c:com.intellij.ui.components.panels.NonOpaquePanel
- com.intellij.ui.components.panels.Wrapper
- <init>():V
- <init>(java.awt.LayoutManager):V
- <init>(java.awt.LayoutManager,javax.swing.JComponent):V
- <init>(java.awt.LayoutManager,Z):V
- <init>(javax.swing.JComponent):V
- <init>(Z):V
- setOpaque(Z):V
- s:setTransparent(javax.swing.JComponent):V
c:com.intellij.ui.components.panels.OpaquePanel
- javax.swing.JPanel
- <init>():V
- <init>(java.awt.Color):V
- <init>(java.awt.LayoutManager):V
- <init>(java.awt.LayoutManager,java.awt.Color):V
- p:paintComponent(java.awt.Graphics):V
c:com.intellij.ui.components.panels.OpaquePanel$List
- com.intellij.ui.components.panels.OpaquePanel
- <init>():V
- <init>(java.awt.Color):V
- <init>(java.awt.LayoutManager):V
- <init>(java.awt.LayoutManager,java.awt.Color):V
c:com.intellij.ui.components.panels.OpaqueWrapper
- com.intellij.ui.components.panels.Wrapper
- <init>(java.awt.LayoutManager,javax.swing.JComponent,java.awt.Color):V
- <init>(javax.swing.JComponent,java.awt.Color):V
- p:paintComponent(java.awt.Graphics):V
c:com.intellij.ui.components.panels.RowGridLayout
- java.awt.LayoutManager
- <init>(I,I,I,I):V
- b:<init>(I,I,I,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- addLayoutComponent(java.lang.String,java.awt.Component):V
- p:getCellSize(java.util.List):java.awt.Dimension
- layoutContainer(java.awt.Container):V
- minimumLayoutSize(java.awt.Container):java.awt.Dimension
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
- removeLayoutComponent(java.awt.Component):V
a:com.intellij.ui.components.panels.ValidatingComponent
- com.intellij.ui.components.panels.NonOpaquePanel
- p:<init>():V
- p:createErrorLabel():javax.swing.JLabel
- pa:createMainComponent():javax.swing.JComponent
- f:doInitialize():V
- doLayout():V
- getErrorLabel():javax.swing.JLabel
- getErrorText():java.lang.String
- getMainComponent():javax.swing.JComponent
- setErrorText(java.lang.String):V
- setLabel(javax.swing.JLabel):V
c:com.intellij.ui.components.panels.VerticalBox
- com.intellij.ui.components.JBBox
- <init>():V
- add(java.awt.Component):java.awt.Component
f:com.intellij.ui.components.panels.VerticalLayout
- java.awt.LayoutManager2
- sf:BOTTOM:java.lang.String
- sf:CENTER:java.lang.String
- sf:FILL:I
- sf:TOP:java.lang.String
- <init>(I):V
- <init>(I,I):V
- <init>(com.intellij.util.ui.JBValue,I):V
- addLayoutComponent(java.awt.Component,java.lang.Object):V
- addLayoutComponent(java.lang.String,java.awt.Component):V
- getComponents():java.util.List
- getLayoutAlignmentX(java.awt.Container):F
- getLayoutAlignmentY(java.awt.Container):F
- invalidateLayout(java.awt.Container):V
- layoutContainer(java.awt.Container):V
- maximumLayoutSize(java.awt.Container):java.awt.Dimension
- minimumLayoutSize(java.awt.Container):java.awt.Dimension
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
- removeLayoutComponent(java.awt.Component):V
c:com.intellij.ui.components.panels.Wrapper
- javax.swing.JPanel
- com.intellij.openapi.ui.NullableComponent
- <init>():V
- <init>(java.awt.LayoutManager):V
- <init>(java.awt.LayoutManager,javax.swing.JComponent):V
- <init>(java.awt.LayoutManager,Z):V
- <init>(javax.swing.JComponent):V
- <init>(Z):V
- getPreferredSize():java.awt.Dimension
- getTargetComponent():javax.swing.JComponent
- isNull():Z
- requestFocus():V
- f:requestFocus(Z):Z
- requestFocusInWindow():Z
- requestFocusInternal():V
- setContent(javax.swing.JComponent):V
- f:setHorizontalSizeReferent(javax.swing.JComponent):com.intellij.ui.components.panels.Wrapper
- f:setVerticalSizeReferent(javax.swing.JComponent):com.intellij.ui.components.panels.Wrapper
f:com.intellij.ui.components.panels.Wrapper$North
- com.intellij.ui.components.panels.Wrapper
- <init>(javax.swing.JComponent):V
c:com.intellij.ui.content.ContentManagerAdapter
- com.intellij.ui.content.ContentManagerListener
- <init>():V
com.intellij.ui.content.TabbedContent
- com.intellij.ui.content.Content
- sf:SPLIT_PROPERTY_PREFIX:java.lang.String
- addContent(com.intellij.ui.content.TabDescriptor,Z):V
- a:addContent(javax.swing.JComponent,java.lang.String,Z):V
- getId():com.intellij.ui.content.TabGroupId
- getSelectedIndex():I
- a:getTabs():java.util.List
- a:getTitlePrefix():java.lang.String
- hasMultipleTabs():Z
- a:removeContent(javax.swing.JComponent):V
- a:selectContent(I):V
- a:split():V
com.intellij.ui.docking.DockContainer
- a:add(com.intellij.ui.docking.DockableContent,com.intellij.ui.awt.RelativePoint):V
- addListener(com.intellij.ui.docking.DockContainer$Listener,com.intellij.openapi.Disposable):V
- closeAll():V
- a:getAcceptArea():com.intellij.ui.awt.RelativeRectangle
- getAcceptAreaFallback():com.intellij.ui.awt.RelativeRectangle
- a:getContainerComponent():javax.swing.JComponent
- a:getContentResponse(com.intellij.ui.docking.DockableContent,com.intellij.ui.awt.RelativePoint):com.intellij.ui.docking.DockContainer$ContentResponse
- a:isDisposeWhenEmpty():Z
- a:isEmpty():Z
- processDropOver(com.intellij.ui.docking.DockableContent,com.intellij.ui.awt.RelativePoint):java.awt.Image
- resetDropOver(com.intellij.ui.docking.DockableContent):V
- startDropOver(com.intellij.ui.docking.DockableContent,com.intellij.ui.awt.RelativePoint):java.awt.Image
e:com.intellij.ui.docking.DockContainer$ContentResponse
- java.lang.Enum
- sf:ACCEPT_COPY:com.intellij.ui.docking.DockContainer$ContentResponse
- sf:ACCEPT_MOVE:com.intellij.ui.docking.DockContainer$ContentResponse
- sf:DENY:com.intellij.ui.docking.DockContainer$ContentResponse
- canAccept():Z
- s:valueOf(java.lang.String):com.intellij.ui.docking.DockContainer$ContentResponse
- s:values():com.intellij.ui.docking.DockContainer$ContentResponse[]
com.intellij.ui.docking.DockContainer$Dialog
- com.intellij.ui.docking.DockContainer
com.intellij.ui.docking.DockContainer$Listener
- contentAdded(java.lang.Object):V
- contentRemoved(java.lang.Object):V
com.intellij.ui.docking.DockContainer$Persistent
- com.intellij.ui.docking.DockContainer
- a:getDockContainerType():java.lang.String
- a:getState():org.jdom.Element
com.intellij.ui.docking.DockContainerFactory
- a:createContainer(com.intellij.ui.docking.DockableContent):com.intellij.ui.docking.DockContainer
com.intellij.ui.docking.DockContainerFactory$Persistent
- com.intellij.ui.docking.DockContainerFactory
- a:loadContainerFrom(org.jdom.Element):com.intellij.ui.docking.DockContainer
a:com.intellij.ui.docking.DockManager
- <init>():V
- a:getContainerFor(java.awt.Component,java.util.function.Predicate):com.intellij.ui.docking.DockContainer
- a:getContainers():java.util.Set
- a:getDimensionKeyForFocus(java.lang.String):java.lang.String
- a:getIdeFrame(com.intellij.ui.docking.DockContainer):com.intellij.openapi.wm.IdeFrame
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ui.docking.DockManager
- a:register(com.intellij.ui.docking.DockContainer,com.intellij.openapi.Disposable):V
- a:register(java.lang.String,com.intellij.ui.docking.DockContainerFactory,com.intellij.openapi.Disposable):V
com.intellij.ui.docking.DockableContent
- a:close():V
- a:getDockContainerType():java.lang.String
- a:getKey():java.lang.Object
- a:getPreferredSize():java.awt.Dimension
- a:getPresentation():com.intellij.openapi.actionSystem.Presentation
- a:getPreviewImage():java.awt.Image
com.intellij.ui.docking.DockableContentContainer
- a:add(com.intellij.ui.awt.RelativePoint):V
com.intellij.ui.dsl.builder.ButtonsGroup
- com.intellij.ui.dsl.builder.RowsRange
- a:bind(com.intellij.ui.dsl.builder.MutableProperty,java.lang.Class):com.intellij.ui.dsl.builder.ButtonsGroup
- a:enabled(Z):com.intellij.ui.dsl.builder.ButtonsGroup
- a:enabledIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.ButtonsGroup
- a:visible(Z):com.intellij.ui.dsl.builder.ButtonsGroup
- a:visibleIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.ButtonsGroup
f:com.intellij.ui.dsl.builder.ChangeContext
- <init>(java.lang.Object,Z):V
- f:component1():java.lang.Object
- f:component2():Z
- f:copy(java.lang.Object,Z):com.intellij.ui.dsl.builder.ChangeContext
- bs:copy$default(com.intellij.ui.dsl.builder.ChangeContext,java.lang.Object,Z,I,java.lang.Object):com.intellij.ui.dsl.builder.ChangeContext
- equals(java.lang.Object):Z
- f:getBinding():Z
- f:getEvent():java.lang.Object
- hashCode():I
e:com.intellij.ui.dsl.builder.DslComponentProperty
- java.lang.Enum
- sf:ICONS_PROVIDER:com.intellij.ui.dsl.builder.DslComponentProperty
- sf:INTERACTIVE_COMPONENT:com.intellij.ui.dsl.builder.DslComponentProperty
- sf:LABEL_FOR:com.intellij.ui.dsl.builder.DslComponentProperty
- sf:ROW_LABEL:com.intellij.ui.dsl.builder.DslComponentProperty
- sf:SKIP_LABEL_FOR_ASSIGNMENT:com.intellij.ui.dsl.builder.DslComponentProperty
- sf:VERTICAL_COMPONENT_GAP:com.intellij.ui.dsl.builder.DslComponentProperty
- sf:VISUAL_PADDINGS:com.intellij.ui.dsl.builder.DslComponentProperty
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.dsl.builder.DslComponentProperty
- s:values():com.intellij.ui.dsl.builder.DslComponentProperty[]
c:com.intellij.ui.dsl.builder.EmptySpacingConfiguration
- com.intellij.ui.dsl.builder.SpacingConfiguration
- <init>():V
- getButtonGroupHeaderBottomGap():I
- getDialogUnscaledGaps():com.intellij.ui.dsl.gridLayout.UnscaledGaps
- getHorizontalColumnsGap():I
- getHorizontalDefaultGap():I
- getHorizontalIndent():I
- getHorizontalSmallGap():I
- getHorizontalToggleButtonIndent():I
- getSegmentedButtonHorizontalGap():I
- getSegmentedButtonVerticalGap():I
- getVerticalComponentGap():I
- getVerticalMediumGap():I
- getVerticalSmallGap():I
com.intellij.ui.dsl.builder.HyperlinkEventAction
- sf:Companion:com.intellij.ui.dsl.builder.HyperlinkEventAction$Companion
- sf:HTML_HYPERLINK_INSTANCE:com.intellij.ui.dsl.builder.HyperlinkEventAction
- a:hyperlinkActivated(javax.swing.event.HyperlinkEvent):V
- hyperlinkEntered(javax.swing.event.HyperlinkEvent):V
- hyperlinkExited(javax.swing.event.HyperlinkEvent):V
f:com.intellij.ui.dsl.builder.HyperlinkEventAction$Companion
com.intellij.ui.dsl.builder.IconsProvider
- a:getIcon(java.lang.String):javax.swing.Icon
c:com.intellij.ui.dsl.builder.IntelliJSpacingConfiguration
- com.intellij.ui.dsl.builder.SpacingConfiguration
- <init>():V
- getButtonGroupHeaderBottomGap():I
- getDialogUnscaledGaps():com.intellij.ui.dsl.gridLayout.UnscaledGaps
- getHorizontalColumnsGap():I
- getHorizontalDefaultGap():I
- getHorizontalIndent():I
- getHorizontalSmallGap():I
- getHorizontalToggleButtonIndent():I
- getSegmentedButtonHorizontalGap():I
- getSegmentedButtonVerticalGap():I
- getVerticalComponentGap():I
- getVerticalMediumGap():I
- getVerticalSmallGap():I
com.intellij.ui.dsl.builder.MutableProperty
- a:get():java.lang.Object
- a:set(java.lang.Object):V
f:com.intellij.ui.dsl.builder.MutablePropertyKt
- sf:MutableProperty(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.ui.dsl.builder.MutableProperty
- sf:toBooleanProperty(com.intellij.openapi.util.registry.RegistryValue):com.intellij.ui.dsl.builder.MutableProperty
- sf:toMutableProperty(kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.MutableProperty
- sf:toNonNullableProperty(kotlin.reflect.KMutableProperty0,java.lang.Object):com.intellij.ui.dsl.builder.MutableProperty
- sf:toNullableProperty(com.intellij.ui.dsl.builder.MutableProperty):com.intellij.ui.dsl.builder.MutableProperty
- sf:toNullableProperty(com.intellij.ui.dsl.builder.MutableProperty,java.lang.Object):com.intellij.ui.dsl.builder.MutableProperty
- sf:toNullableProperty(kotlin.reflect.KMutableProperty0):com.intellij.ui.dsl.builder.MutableProperty
- sf:toNullableProperty(kotlin.reflect.KMutableProperty0,java.lang.Object):com.intellij.ui.dsl.builder.MutableProperty
com.intellij.ui.dsl.builder.RowsRange
- a:enabled(Z):com.intellij.ui.dsl.builder.RowsRange
- a:enabledIf(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.ui.dsl.builder.RowsRange
- a:enabledIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.RowsRange
- a:visible(Z):com.intellij.ui.dsl.builder.RowsRange
- a:visibleIf(com.intellij.openapi.observable.properties.ObservableProperty):com.intellij.ui.dsl.builder.RowsRange
- a:visibleIf(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.dsl.builder.RowsRange
com.intellij.ui.dsl.builder.SpacingConfiguration
- a:getButtonGroupHeaderBottomGap():I
- getDialogUnscaledGaps():com.intellij.ui.dsl.gridLayout.UnscaledGaps
- a:getHorizontalColumnsGap():I
- a:getHorizontalDefaultGap():I
- a:getHorizontalIndent():I
- a:getHorizontalSmallGap():I
- a:getHorizontalToggleButtonIndent():I
- a:getSegmentedButtonHorizontalGap():I
- a:getSegmentedButtonVerticalGap():I
- a:getVerticalComponentGap():I
- a:getVerticalMediumGap():I
- a:getVerticalSmallGap():I
f:com.intellij.ui.dsl.builder.UtilsKt
- sf:DEFAULT_COMMENT_WIDTH:I
- sf:MAX_LINE_LENGTH_NO_WRAP:I
- sf:MAX_LINE_LENGTH_WORD_WRAP:I
- sf:asRange(com.intellij.ide.ui.UINumericRange):kotlin.ranges.IntRange
- sf:classIconProvider(java.lang.Class):com.intellij.ui.dsl.builder.IconsProvider
- sf:cleanupHtml(java.lang.String):java.lang.String
- sf:listCellRenderer(kotlin.jvm.functions.Function2):com.intellij.ui.SimpleListCellRenderer
f:com.intellij.ui.dsl.builder.VerticalComponentGap
- sf:BOTH:com.intellij.ui.dsl.builder.VerticalComponentGap
- sf:Companion:com.intellij.ui.dsl.builder.VerticalComponentGap$Companion
- sf:NONE:com.intellij.ui.dsl.builder.VerticalComponentGap
- <init>():V
- <init>(java.lang.Boolean,java.lang.Boolean):V
- b:<init>(java.lang.Boolean,java.lang.Boolean,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.Boolean
- f:component2():java.lang.Boolean
- f:copy(java.lang.Boolean,java.lang.Boolean):com.intellij.ui.dsl.builder.VerticalComponentGap
- bs:copy$default(com.intellij.ui.dsl.builder.VerticalComponentGap,java.lang.Boolean,java.lang.Boolean,I,java.lang.Object):com.intellij.ui.dsl.builder.VerticalComponentGap
- equals(java.lang.Object):Z
- f:getBottom():java.lang.Boolean
- f:getTop():java.lang.Boolean
- hashCode():I
f:com.intellij.ui.dsl.builder.VerticalComponentGap$Companion
f:com.intellij.ui.dsl.gridLayout.Gaps
- sf:Companion:com.intellij.ui.dsl.gridLayout.Gaps$Companion
- sf:EMPTY:com.intellij.ui.dsl.gridLayout.Gaps
- <init>():V
- <init>(I,I,I,I):V
- b:<init>(I,I,I,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():I
- f:component2():I
- f:component3():I
- f:component4():I
- f:copy(I,I,I,I):com.intellij.ui.dsl.gridLayout.Gaps
- bs:copy$default(com.intellij.ui.dsl.gridLayout.Gaps,I,I,I,I,I,java.lang.Object):com.intellij.ui.dsl.gridLayout.Gaps
- equals(java.lang.Object):Z
- f:getBottom():I
- f:getLeft():I
- f:getRight():I
- f:getTop():I
- hashCode():I
f:com.intellij.ui.dsl.gridLayout.Gaps$Companion
f:com.intellij.ui.dsl.gridLayout.GapsKt
- bsf:JBGaps(I,I,I,I):com.intellij.ui.dsl.gridLayout.Gaps
- bs:JBGaps$default(I,I,I,I,I,java.lang.Object):com.intellij.ui.dsl.gridLayout.Gaps
com.intellij.ui.dsl.gridLayout.Grid
- a:getColumnsGaps():java.util.List
- a:getResizableColumns():java.util.Set
- a:getResizableRows():java.util.Set
- a:getRowsGaps():java.util.List
e:com.intellij.ui.dsl.gridLayout.HorizontalAlign
- java.lang.Enum
- sf:CENTER:com.intellij.ui.dsl.gridLayout.HorizontalAlign
- sf:FILL:com.intellij.ui.dsl.gridLayout.HorizontalAlign
- sf:LEFT:com.intellij.ui.dsl.gridLayout.HorizontalAlign
- sf:RIGHT:com.intellij.ui.dsl.gridLayout.HorizontalAlign
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.dsl.gridLayout.HorizontalAlign
- s:values():com.intellij.ui.dsl.gridLayout.HorizontalAlign[]
com.intellij.ui.dsl.gridLayout.UnscaledGaps
- sf:Companion:com.intellij.ui.dsl.gridLayout.UnscaledGaps$Companion
- sf:EMPTY:com.intellij.ui.dsl.gridLayout.UnscaledGaps
- a:getBottom():I
- getHeight():I
- a:getLeft():I
- a:getRight():I
- a:getTop():I
- getWidth():I
f:com.intellij.ui.dsl.gridLayout.UnscaledGaps$Companion
f:com.intellij.ui.dsl.gridLayout.UnscaledGapsKt
- sf:UnscaledGaps(I):com.intellij.ui.dsl.gridLayout.UnscaledGaps
- sf:UnscaledGaps(I,I,I,I):com.intellij.ui.dsl.gridLayout.UnscaledGaps
- bs:UnscaledGaps$default(I,I,I,I,I,java.lang.Object):com.intellij.ui.dsl.gridLayout.UnscaledGaps
- sf:toJBEmptyBorder(com.intellij.ui.dsl.gridLayout.UnscaledGaps):com.intellij.util.ui.JBEmptyBorder
- sf:toUnscaledGaps(java.awt.Insets):com.intellij.ui.dsl.gridLayout.UnscaledGaps
com.intellij.ui.dsl.gridLayout.UnscaledGapsX
- sf:Companion:com.intellij.ui.dsl.gridLayout.UnscaledGapsX$Companion
- sf:EMPTY:com.intellij.ui.dsl.gridLayout.UnscaledGapsX
- a:getLeft():I
- a:getRight():I
- getWidth():I
f:com.intellij.ui.dsl.gridLayout.UnscaledGapsX$Companion
f:com.intellij.ui.dsl.gridLayout.UnscaledGapsXKt
- sf:UnscaledGapsX(I,I):com.intellij.ui.dsl.gridLayout.UnscaledGapsX
- bs:UnscaledGapsX$default(I,I,I,java.lang.Object):com.intellij.ui.dsl.gridLayout.UnscaledGapsX
com.intellij.ui.dsl.gridLayout.UnscaledGapsY
- sf:Companion:com.intellij.ui.dsl.gridLayout.UnscaledGapsY$Companion
- sf:EMPTY:com.intellij.ui.dsl.gridLayout.UnscaledGapsY
- a:getBottom():I
- getHeight():I
- a:getTop():I
f:com.intellij.ui.dsl.gridLayout.UnscaledGapsY$Companion
f:com.intellij.ui.dsl.gridLayout.UnscaledGapsYKt
- sf:UnscaledGapsY(I,I):com.intellij.ui.dsl.gridLayout.UnscaledGapsY
- bs:UnscaledGapsY$default(I,I,I,java.lang.Object):com.intellij.ui.dsl.gridLayout.UnscaledGapsY
e:com.intellij.ui.dsl.gridLayout.VerticalAlign
- java.lang.Enum
- sf:BOTTOM:com.intellij.ui.dsl.gridLayout.VerticalAlign
- sf:CENTER:com.intellij.ui.dsl.gridLayout.VerticalAlign
- sf:FILL:com.intellij.ui.dsl.gridLayout.VerticalAlign
- sf:TOP:com.intellij.ui.dsl.gridLayout.VerticalAlign
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.dsl.gridLayout.VerticalAlign
- s:values():com.intellij.ui.dsl.gridLayout.VerticalAlign[]
f:com.intellij.ui.dsl.listCellRenderer.BuilderKt
- sf:listCellRenderer(kotlin.jvm.functions.Function1):javax.swing.ListCellRenderer
- sf:textListCellRenderer(kotlin.jvm.functions.Function1):javax.swing.ListCellRenderer
com.intellij.ui.dualView.CellWrapper
- a:wrap(java.awt.Component,javax.swing.JTable,java.lang.Object,Z,Z,I,I,java.lang.Object):V
com.intellij.ui.dualView.DualTreeElement
- a:shouldBeInTheFlatView():Z
f:com.intellij.ui.dualView.DualView
- javax.swing.JPanel
- <init>(java.lang.Object,com.intellij.ui.dualView.DualViewColumnInfo[],java.lang.String,com.intellij.openapi.project.Project):V
- addListSelectionListener(javax.swing.event.ListSelectionListener):V
- collapseAll():V
- dispose():V
- expandAll():V
- getFlatView():com.intellij.ui.table.TableView
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- getSelection():java.util.List
- getTree():com.intellij.ui.treeStructure.Tree
- getTreeView():com.intellij.ui.dualView.TreeTableView
- installDoubleClickHandler(com.intellij.openapi.actionSystem.AnAction):V
- rebuild():V
- restoreState():V
- saveState():V
- setCellWrapper(com.intellij.ui.dualView.CellWrapper):V
- setEmptyText(java.lang.String):V
- setRoot(javax.swing.tree.TreeNode,java.util.List):V
- setRootVisible(Z):V
- setSelectionInterval(I,I):V
- setShowGrid(Z):V
- setTreeCellRenderer(javax.swing.tree.TreeCellRenderer):V
- setViewBorder(javax.swing.border.Border):V
- setZipByHeight(Z):V
- switchToTheFlatMode():V
- switchToTheTreeMode():V
a:com.intellij.ui.dualView.DualViewColumnInfo
- com.intellij.util.ui.ColumnInfo
- <init>(java.lang.String):V
- a:shouldBeShownIsTheTable():Z
- a:shouldBeShownIsTheTree():Z
com.intellij.ui.dualView.TableCellRendererWrapper
- javax.swing.table.TableCellRenderer
- a:getBaseRenderer():javax.swing.table.TableCellRenderer
c:com.intellij.ui.dualView.TreeTableView
- com.intellij.ui.treeStructure.treetable.TreeTable
- com.intellij.ui.table.SelectionProvider
- <init>(com.intellij.ui.treeStructure.treetable.ListTreeTableModelOnColumns):V
- addSelection(java.lang.Object):V
- createTableRenderer(com.intellij.ui.treeStructure.treetable.TreeTableModel):com.intellij.ui.treeStructure.treetable.TreeTableCellRenderer
- getCellEditor(I,I):javax.swing.table.TableCellEditor
- getCellRenderer(I,I):javax.swing.table.TableCellRenderer
- pf:getColumnInfo(I):com.intellij.util.ui.ColumnInfo
- getFlattenItems():java.util.List
- getItems():java.util.List
- p:getRowElement(I):java.lang.Object
- getSelection():java.util.List
- setTableModel(com.intellij.ui.treeStructure.treetable.TreeTableModel):V
c:com.intellij.ui.dualView.TreeTableView$CellRendererWrapper
- com.intellij.ui.dualView.TableCellRendererWrapper
- <init>(javax.swing.table.TableCellRenderer):V
- getBaseRenderer():javax.swing.table.TableCellRenderer
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
f:com.intellij.ui.hover.HoverUtilsKt
- sf:addHoverAndPressStateListener(javax.swing.JComponent,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2):V
- bs:addHoverAndPressStateListener$default(javax.swing.JComponent,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,I,java.lang.Object):V
f:com.intellij.ui.layout.AdvancedSettingsPredicate
- com.intellij.ui.layout.ComponentPredicate
- <init>(java.lang.String,com.intellij.openapi.Disposable):V
- addListener(kotlin.jvm.functions.Function1):V
- f:getDisposable():com.intellij.openapi.Disposable
- f:getId():java.lang.String
- invoke():java.lang.Boolean
f:com.intellij.ui.layout.ComboBoxPredicate
- com.intellij.ui.layout.ComponentPredicate
- <init>(javax.swing.JComboBox,kotlin.jvm.functions.Function1):V
- addListener(kotlin.jvm.functions.Function1):V
- invoke():java.lang.Boolean
a:com.intellij.ui.layout.ComponentPredicate
- kotlin.jvm.functions.Function0
- sf:Companion:com.intellij.ui.layout.ComponentPredicate$Companion
- <init>():V
- a:addListener(kotlin.jvm.functions.Function1):V
f:com.intellij.ui.layout.ComponentPredicate$Companion
- f:fromObservableProperty(com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.Disposable):com.intellij.ui.layout.ComponentPredicate
- bs:fromObservableProperty$default(com.intellij.ui.layout.ComponentPredicate$Companion,com.intellij.openapi.observable.properties.ObservableProperty,com.intellij.openapi.Disposable,I,java.lang.Object):com.intellij.ui.layout.ComponentPredicate
- f:fromValue(Z):com.intellij.ui.layout.ComponentPredicate
- f:getFALSE():com.intellij.ui.layout.ComponentPredicate
- f:getTRUE():com.intellij.ui.layout.ComponentPredicate
f:com.intellij.ui.layout.ComponentPredicateKt
- sf:and(com.intellij.ui.layout.ComponentPredicate,com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.layout.ComponentPredicate
- sf:editableValueMatches(javax.swing.JComboBox,kotlin.jvm.functions.Function1):com.intellij.ui.layout.ComponentPredicate
- sf:enteredTextSatisfies(javax.swing.text.JTextComponent,kotlin.jvm.functions.Function1):com.intellij.ui.layout.ComponentPredicate
- sf:getSelected(javax.swing.AbstractButton):com.intellij.ui.layout.ComponentPredicate
- sf:not(com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.layout.ComponentPredicate
- sf:or(com.intellij.ui.layout.ComponentPredicate,com.intellij.ui.layout.ComponentPredicate):com.intellij.ui.layout.ComponentPredicate
- sf:selectedValueIs(javax.swing.JComboBox,java.lang.Object):com.intellij.ui.layout.ComponentPredicate
- sf:selectedValueMatches(javax.swing.JComboBox,kotlin.jvm.functions.Function1):com.intellij.ui.layout.ComponentPredicate
f:com.intellij.ui.mac.touchbar.Touchbar
- <init>():V
- s:addActions(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup):V
- s:getActions(javax.swing.JComponent):com.intellij.openapi.actionSystem.ActionGroup
- s:setActions(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup):V
- s:setActions(javax.swing.JComponent,com.intellij.openapi.actionSystem.AnAction):V
- s:setActions(javax.swing.JComponent,java.lang.String):V
- s:setButtonActions(javax.swing.JComponent,java.util.Collection,java.util.Collection,javax.swing.JButton):V
- s:setButtonActions(javax.swing.JComponent,java.util.Collection,java.util.Collection,javax.swing.JButton,com.intellij.openapi.actionSystem.ActionGroup):V
f:com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- <init>():V
- getComponent():javax.swing.JComponent
- s:getCustomizations(com.intellij.openapi.actionSystem.AnAction):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- isCrossEsc():Z
- isDefault():Z
- isPrincipal():Z
- isShowImage():Z
- isShowText():Z
- s:setComponent(com.intellij.openapi.actionSystem.AnAction,javax.swing.JComponent):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- setComponent(javax.swing.JComponent):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- setCrossEsc(Z):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- s:setDefault(com.intellij.openapi.actionSystem.AnAction,Z):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- setDefault(Z):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- s:setPrincipal(com.intellij.openapi.actionSystem.AnAction,Z):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- setPrincipal(Z):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- setShowImage(Z):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- s:setShowText(com.intellij.openapi.actionSystem.AnAction,Z):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
- setShowText(Z):com.intellij.ui.mac.touchbar.TouchbarActionCustomizations
f:com.intellij.ui.messager.Callout
- sf:NORTH_EAST:I
- sf:NORTH_WEST:I
- sf:SOUTH_EAST:I
- sf:SOUTH_WEST:I
- <init>():V
- s:main(java.lang.String[]):V
- s:showText(com.intellij.ui.awt.RelativePoint,I,java.lang.String):V
- s:showText(javax.swing.JComponent,I,java.lang.String):V
- s:showText(javax.swing.JTree,javax.swing.tree.TreePath,I,java.lang.String):V
- s:showTextBelow(javax.swing.JComponent,java.lang.String):V
c:com.intellij.ui.messager.CalloutComponent
- p:myTargetComponent:javax.swing.JComponent
- p:myTargetWindow:java.awt.Window
- <init>(javax.swing.JComponent):V
- show(I,com.intellij.ui.awt.RelativePoint):V
f:com.intellij.ui.navigation.History
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.ui.navigation.Place$Navigator):V
- addListener(com.intellij.ui.navigation.HistoryListener,com.intellij.openapi.Disposable):V
- back():V
- canGoBack():Z
- canGoForward():Z
- clear():V
- forward():V
- isNavigatingNow():Z
- navigateTo(com.intellij.ui.navigation.Place):V
- pushPlaceForElement(java.lang.String,java.lang.Object):V
- pushQueryPlace():V
- query():com.intellij.ui.navigation.Place
com.intellij.ui.navigation.HistoryListener
- navigationFinished(com.intellij.ui.navigation.Place,com.intellij.ui.navigation.Place):V
- navigationStarted(com.intellij.ui.navigation.Place,com.intellij.ui.navigation.Place):V
f:com.intellij.ui.navigation.Place
- com.intellij.util.ui.update.ComparableObject
- <init>():V
- cloneForElement(java.lang.String,java.lang.Object):com.intellij.ui.navigation.Place
- copyFrom(com.intellij.ui.navigation.Place):V
- equals(java.lang.Object):Z
- getEqualityObjects():java.lang.Object[]
- getPath(java.lang.String):java.lang.Object
- s:goFurther(java.lang.Object,com.intellij.ui.navigation.Place,Z):com.intellij.openapi.util.ActionCallback
- hashCode():I
- isMoreGeneralFor(com.intellij.ui.navigation.Place):Z
- putPath(java.lang.String,java.lang.Object):com.intellij.ui.navigation.Place
- s:queryFurther(java.lang.Object,com.intellij.ui.navigation.Place):V
com.intellij.ui.navigation.Place$Navigator
- isValid(com.intellij.ui.navigation.Place):Z
- navigateTo(com.intellij.ui.navigation.Place,Z):com.intellij.openapi.util.ActionCallback
- queryPlace(com.intellij.ui.navigation.Place):V
- setHistory(com.intellij.ui.navigation.History):V
e:com.intellij.ui.paint.EffectPainter
- java.lang.Enum
- com.intellij.util.ui.RegionPainter
- sf:BOLD_DOTTED_UNDERSCORE:com.intellij.ui.paint.EffectPainter
- sf:BOLD_LINE_UNDERSCORE:com.intellij.ui.paint.EffectPainter
- sf:LINE_UNDERSCORE:com.intellij.ui.paint.EffectPainter
- sf:STRIKE_THROUGH:com.intellij.ui.paint.EffectPainter
- sf:WAVE_UNDERSCORE:com.intellij.ui.paint.EffectPainter
- s:valueOf(java.lang.String):com.intellij.ui.paint.EffectPainter
- s:values():com.intellij.ui.paint.EffectPainter[]
e:com.intellij.ui.paint.EffectPainter2D
- java.lang.Enum
- com.intellij.ui.paint.RegionPainter2D
- sf:BOLD_DOTTED_UNDERSCORE:com.intellij.ui.paint.EffectPainter2D
- sf:BOLD_LINE_UNDERSCORE:com.intellij.ui.paint.EffectPainter2D
- sf:LINE_UNDERSCORE:com.intellij.ui.paint.EffectPainter2D
- sf:STRIKE_THROUGH:com.intellij.ui.paint.EffectPainter2D
- sf:WAVE_UNDERSCORE:com.intellij.ui.paint.EffectPainter2D
- s:maybeScaleFontMetricsThickness_TestOnly(D,java.awt.Font):D
- s:valueOf(java.lang.String):com.intellij.ui.paint.EffectPainter2D
- s:values():com.intellij.ui.paint.EffectPainter2D[]
com.intellij.ui.picker.ColorListener
- a:colorChanged(java.awt.Color,java.lang.Object):V
com.intellij.ui.picker.ColorPickerPopupCloseListener
- a:onPopupClosed():V
a:com.intellij.ui.popup.HintUpdateSupply
- <init>(com.intellij.ui.components.JBList):V
- <init>(com.intellij.ui.table.JBTable):V
- <init>(com.intellij.ui.treeStructure.Tree):V
- p:<init>(javax.swing.JComponent):V
- pa:getPsiElementForHint(java.lang.Object):com.intellij.psi.PsiElement
- s:getSupply(javax.swing.JComponent):com.intellij.ui.popup.HintUpdateSupply
- hideHint():V
- s:hideHint(javax.swing.JComponent):V
- s:installDataContextHintUpdateSupply(javax.swing.JComponent):V
- s:installHintUpdateSupply(javax.swing.JComponent,com.intellij.util.Function):V
- p:installListListener(javax.swing.JList):V
- s:installSimpleHintUpdateSupply(javax.swing.JComponent):V
- p:installTableListener(javax.swing.JTable):V
- p:installTreeListener(javax.swing.JTree):V
- registerHint(com.intellij.openapi.ui.popup.JBPopup):V
- shouldUpdateHint():Z
- updateHint(com.intellij.psi.PsiElement):V
a:com.intellij.ui.popup.PopupUpdateProcessorBase
- com.intellij.openapi.ui.popup.JBPopupListener
- <init>():V
- a:updatePopup(java.lang.Object):V
c:com.intellij.ui.popup.list.GroupedItemsListRenderer
- com.intellij.ui.GroupedElementsRenderer$List
- javax.swing.ListCellRenderer
- p:myCurrentIndex:I
- p:myDescriptor:com.intellij.openapi.ui.popup.ListItemDescriptor
- p:myNextStepLabel:javax.swing.JLabel
- <init>(com.intellij.openapi.ui.popup.ListItemDescriptor):V
- p:createItemComponent():javax.swing.JComponent
- p:createLabel():V
- p:customizeComponent(javax.swing.JList,java.lang.Object,I,Z,Z):V
- p:customizeComponent(javax.swing.JList,java.lang.Object,Z):V
- p:getItemIcon(java.lang.Object,Z):javax.swing.Icon
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- getNextStepLabel():javax.swing.JLabel
- p:layoutComponent(javax.swing.JComponent):javax.swing.JComponent
c:com.intellij.ui.popup.util.PopupState
- com.intellij.openapi.ui.popup.JBPopupListener
- javax.swing.event.PopupMenuListener
- <init>():V
- beforeShown(com.intellij.openapi.ui.popup.LightweightWindowEvent):V
- isRecentlyHidden():Z
- onClosed(com.intellij.openapi.ui.popup.LightweightWindowEvent):V
- popupMenuCanceled(javax.swing.event.PopupMenuEvent):V
- popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent):V
- popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent):V
f:com.intellij.ui.roots.FilePathClipper
- java.awt.event.ComponentListener
- componentHidden(java.awt.event.ComponentEvent):V
- componentMoved(java.awt.event.ComponentEvent):V
- componentResized(java.awt.event.ComponentEvent):V
- componentShown(java.awt.event.ComponentEvent):V
- s:install(javax.swing.JLabel,javax.swing.JComponent):V
c:com.intellij.ui.roots.IconActionComponent
- com.intellij.ui.roots.ScalableIconComponent
- <init>(javax.swing.Icon,javax.swing.Icon,java.lang.String,java.lang.Runnable):V
c:com.intellij.ui.roots.ResizingWrapper
- javax.swing.JComponent
- pf:myWrappedComponent:javax.swing.JComponent
- <init>(javax.swing.JComponent):V
c:com.intellij.ui.roots.ScalableIconComponent
- javax.swing.JComponent
- <init>(javax.swing.Icon):V
- <init>(javax.swing.Icon,javax.swing.Icon):V
- p:paintComponent(java.awt.Graphics):V
- f:setSelected(Z):V
c:com.intellij.ui.roots.ToolbarPanel
- javax.swing.JPanel
- <init>(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):V
- <init>(javax.swing.JComponent,com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,javax.swing.JComponent):V
com.intellij.ui.speedSearch.ElementFilter
- a:shouldBeShowing(java.lang.Object):Z
com.intellij.ui.speedSearch.ElementFilter$Active
- com.intellij.ui.speedSearch.ElementFilter
- a:addListener(com.intellij.ui.speedSearch.ElementFilter$Listener,com.intellij.openapi.Disposable):V
- a:fireUpdate(java.lang.Object,Z,Z):org.jetbrains.concurrency.Promise
a:com.intellij.ui.speedSearch.ElementFilter$Active$Impl
- com.intellij.ui.speedSearch.ElementFilter$Active
- <init>():V
- addListener(com.intellij.ui.speedSearch.ElementFilter$Listener,com.intellij.openapi.Disposable):V
- fireUpdate(java.lang.Object,Z,Z):org.jetbrains.concurrency.Promise
com.intellij.ui.speedSearch.ElementFilter$Listener
- a:update(java.lang.Object,Z,Z):org.jetbrains.concurrency.Promise
c:com.intellij.ui.speedSearch.FilteringListModel
- javax.swing.AbstractListModel
- <init>(javax.swing.ListModel):V
- addAll(java.util.List):V
- contains(java.lang.Object):Z
- dispose():V
- getElementAt(I):java.lang.Object
- getElementIndex(java.lang.Object):I
- p:getElementsToFilter():java.util.Collection
- getOriginalModel():javax.swing.ListModel
- getSize():I
- refilter():V
- remove(I):V
- p:replace(I,I,java.util.List):V
- replaceAll(java.util.List):V
- setFilter(com.intellij.openapi.util.Condition):V
c:com.intellij.ui.speedSearch.FilteringTableModel
- javax.swing.table.AbstractTableModel
- <init>(javax.swing.table.TableModel,java.lang.Class):V
- p:addToFiltered(java.util.List):V
- dispose():V
- getColumnClass(I):java.lang.Class
- getColumnCount():I
- getColumnName(I):java.lang.String
- getOriginalIndex(I):I
- getOriginalModel():javax.swing.table.TableModel
- getRowCount():I
- getSize():I
- getValueAt(I,I):java.lang.Object
- isCellEditable(I,I):Z
- refilter():V
- setFilter(com.intellij.openapi.util.Condition):V
- setValueAt(java.lang.Object,I,I):V
f:com.intellij.ui.speedSearch.ListWithFilter
- javax.swing.JPanel
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- getInputMethodRequests():java.awt.im.InputMethodRequests
- getList():javax.swing.JList
- getScrollPane():javax.swing.JScrollPane
- getSpeedSearch():com.intellij.ui.speedSearch.SpeedSearch
- processInputMethodEvent(java.awt.event.InputMethodEvent):V
- requestFocus():V
- resetFilter():Z
- setAutoPackHeight(Z):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- s:wrap(javax.swing.JList,javax.swing.JScrollPane,com.intellij.util.Function):javax.swing.JComponent
- s:wrap(javax.swing.JList,javax.swing.JScrollPane,com.intellij.util.Function,Z):javax.swing.JComponent
- s:wrap(javax.swing.JList,javax.swing.JScrollPane,com.intellij.util.Function,Z,Z,Z):javax.swing.JComponent
c:com.intellij.ui.speedSearch.NameFilteringListModel
- com.intellij.ui.speedSearch.FilteringListModel
- <init>(javax.swing.JList,com.intellij.util.Function,com.intellij.openapi.util.Condition,com.intellij.ui.speedSearch.SpeedSearchSupply):V
- <init>(javax.swing.ListModel,com.intellij.util.Function,com.intellij.openapi.util.Condition,com.intellij.openapi.util.Computable):V
- getClosestMatchIndex():I
- p:replace(I,I,java.util.List):V
c:com.intellij.ui.speedSearch.SpeedSearch
- com.intellij.ui.speedSearch.SpeedSearchSupply
- java.awt.event.KeyListener
- sf:PUNCTUATION_MARKS:java.lang.String
- <init>():V
- <init>(Z):V
- activate():V
- addChangeListener(java.beans.PropertyChangeListener):V
- backspace():V
- p:doActivate():V
- findAndSelectElement(java.lang.String):V
- getEnteredPrefix():java.lang.String
- getFilter():java.lang.String
- getMatcher():com.intellij.util.text.Matcher
- getTextField():javax.swing.JComponent
- isActive():Z
- isAvailable():Z
- isHoldingFilter():Z
- isPopupActive():Z
- isSupported():Z
- keyPressed(java.awt.event.KeyEvent):V
- keyReleased(java.awt.event.KeyEvent):V
- keyTyped(java.awt.event.KeyEvent):V
- matchingFragments(java.lang.String):java.lang.Iterable
- noHits():V
- processKeyEvent(java.awt.event.KeyEvent):V
- refreshSelection():V
- removeChangeListener(java.beans.PropertyChangeListener):V
- reset():V
- setEnabled(Z):V
- p:shouldBeActive():Z
- shouldBeShowing(java.lang.String):Z
- type(java.lang.String):V
- update():V
- updatePattern(java.lang.String):V
a:com.intellij.ui.speedSearch.SpeedSearchInputMethodRequests
- java.awt.im.InputMethodRequests
- <init>():V
- cancelLatestCommittedText(java.text.AttributedCharacterIterator$Attribute[]):java.text.AttributedCharacterIterator
- p:ensurePopupIsShown():V
- getCommittedText(I,I,java.text.AttributedCharacterIterator$Attribute[]):java.text.AttributedCharacterIterator
- getCommittedTextLength():I
- pa:getDelegate():java.awt.im.InputMethodRequests
- getInsertPositionOffset():I
- getLocationOffset(I,I):java.awt.font.TextHitInfo
- getSelectedText(java.text.AttributedCharacterIterator$Attribute[]):java.text.AttributedCharacterIterator
- getTextLocation(java.awt.font.TextHitInfo):java.awt.Rectangle
a:com.intellij.ui.speedSearch.SpeedSearchSupply
- psf:BACKGROUND_COLOR:com.intellij.ui.JBColor
- psf:BORDER_COLOR:com.intellij.ui.JBColor
- sf:ENTERED_PREFIX_PROPERTY_NAME:java.lang.String
- psf:ERROR_FOREGROUND_COLOR:com.intellij.ui.JBColor
- psf:FOREGROUND_COLOR:com.intellij.ui.JBColor
- sf:SEARCH_QUERY_KEY:java.lang.String
- sf:SPEED_SEARCH_CURRENT_QUERY:com.intellij.openapi.actionSystem.DataKey
- <init>():V
- a:addChangeListener(java.beans.PropertyChangeListener):V
- a:findAndSelectElement(java.lang.String):V
- getEnteredPrefix():java.lang.String
- getInputMethodRequests():java.awt.im.InputMethodRequests
- s:getSupply(javax.swing.JComponent):com.intellij.ui.speedSearch.SpeedSearchSupply
- s:getSupply(javax.swing.JComponent,Z):com.intellij.ui.speedSearch.SpeedSearchSupply
- p:installSupplyTo(javax.swing.JComponent):V
- installSupplyTo(javax.swing.JComponent,Z):V
- isObjectFilteredOut(java.lang.Object):Z
- a:isPopupActive():Z
- a:matchingFragments(java.lang.String):java.lang.Iterable
- a:refreshSelection():V
- a:removeChangeListener(java.beans.PropertyChangeListener):V
- supportsNavigation():Z
f:com.intellij.ui.speedSearch.SpeedSearchUtil
- s:appendColoredFragmentForMatcher(java.lang.String,com.intellij.ui.SimpleColoredComponent,com.intellij.ui.SimpleTextAttributes,com.intellij.util.text.Matcher,java.awt.Color,Z):V
- s:appendColoredFragments(com.intellij.ui.SimpleColoredComponent,java.lang.String,java.lang.Iterable,com.intellij.ui.SimpleTextAttributes,com.intellij.ui.SimpleTextAttributes):V
- s:appendFragmentsForSpeedSearch(javax.swing.JComponent,java.lang.String,com.intellij.ui.SimpleTextAttributes,Z,com.intellij.ui.SimpleColoredComponent):V
- s:appendSpeedSearchColoredFragments(com.intellij.ui.SimpleColoredComponent,java.lang.String,java.lang.Iterable,com.intellij.ui.SimpleTextAttributes,Z):V
- s:applySpeedSearchHighlighting(com.intellij.ui.SimpleColoredComponent,java.lang.Iterable,Z):V
- s:applySpeedSearchHighlighting(com.intellij.ui.speedSearch.SpeedSearchSupply,com.intellij.ui.SimpleColoredComponent,Z,Z):V
- s:applySpeedSearchHighlighting(javax.swing.JComponent,com.intellij.ui.SimpleColoredComponent,Z,Z):V
- s:applySpeedSearchHighlightingFiltered(javax.swing.JTree,java.lang.Object,com.intellij.ui.SimpleColoredComponent,Z,Z):V
- s:getDefaultHardSeparators():java.lang.String
c:com.intellij.ui.switcher.ShowQuickActionPopupAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ui.table.AdditionalTableHeader
- javax.swing.JPanel
- <init>():V
- addNotify():V
- pf:changeTableAtPositionHelper(javax.swing.JTable,javax.swing.JTable):V
- a:createColumnsController():com.intellij.ui.table.AdditionalTableHeader$ColumnsControllerPanel
- a:detachController():V
- f:disposeOldTable(javax.swing.JTable,javax.swing.JTable):V
- pf:getColumnsController():com.intellij.ui.table.AdditionalTableHeader$ColumnsControllerPanel
- f:getPosition():com.intellij.ui.table.AdditionalTableHeader$Position
- pf:getResizer():java.awt.event.ComponentAdapter
- a:getTable():javax.swing.JTable
- installTable(javax.swing.JTable):V
- p:recreateController():V
- pf:removeController():V
- pf:setColumnsController(com.intellij.ui.table.AdditionalTableHeader$ColumnsControllerPanel):V
- f:setPosition(com.intellij.ui.table.AdditionalTableHeader$Position):V
- pa:setTable(javax.swing.JTable):V
- setVisible(Z):V
a:com.intellij.ui.table.AdditionalTableHeader$ColumnsControllerPanel
- javax.swing.JPanel
- javax.swing.event.TableColumnModelListener
- p:autoRun:I
- p:myPreferredSize:java.awt.Dimension
- <init>(javax.swing.JTable):V
- columnAdded(javax.swing.event.TableColumnModelEvent):V
- columnMarginChanged(javax.swing.event.ChangeEvent):V
- columnMoved(javax.swing.event.TableColumnModelEvent):V
- columnRemoved(javax.swing.event.TableColumnModelEvent):V
- columnSelectionChanged(javax.swing.event.ListSelectionEvent):V
- a:computeMyPreferredSize():java.awt.Dimension
- a:createColumn(I):com.intellij.ui.table.AdditionalTableHeader$ColumnsControllerPanel$AdditionalPanel
- f:detach():V
- f:getColumns():java.util.LinkedList
- pf:getMyPreferredSize():java.awt.Dimension
- f:getTable():javax.swing.JTable
- pf:getTableColumnModel():javax.swing.table.TableColumnModel
- pf:getTableModel():javax.swing.table.TableModel
- pf:isCorrectModel():Z
- pf:placeComponents():V
- pf:setMyPreferredSize(java.awt.Dimension):V
- pf:update():V
- a:updateColumns():V
a:com.intellij.ui.table.AdditionalTableHeader$ColumnsControllerPanel$AdditionalPanel
- javax.swing.JPanel
- java.beans.PropertyChangeListener
- <init>(com.intellij.ui.table.AdditionalTableHeader$ColumnsControllerPanel,javax.swing.table.TableColumn):V
- a:detach():V
- f:getMyHeight():I
- f:getMyWidth():I
- f:getTableColumn():javax.swing.table.TableColumn
- propertyChange(java.beans.PropertyChangeEvent):V
- f:setMyHeight(I):V
- f:setMyWidth(I):V
- a:updateHeight():V
e:com.intellij.ui.table.AdditionalTableHeader$Position
- java.lang.Enum
- sf:INLINE:com.intellij.ui.table.AdditionalTableHeader$Position
- sf:NONE:com.intellij.ui.table.AdditionalTableHeader$Position
- sf:REPLACE:com.intellij.ui.table.AdditionalTableHeader$Position
- sf:TOP:com.intellij.ui.table.AdditionalTableHeader$Position
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.table.AdditionalTableHeader$Position
- s:values():com.intellij.ui.table.AdditionalTableHeader$Position[]
f:com.intellij.ui.table.AdditionalTableHeaderPositionHelper
- java.beans.PropertyChangeListener
- <init>(com.intellij.ui.table.AdditionalTableHeader):V
- f:changeTable(javax.swing.JTable,javax.swing.JTable):V
- f:currentHeaderContainmentUpdate():V
- f:findTableHeader():java.awt.Component
- f:getMyLocation():com.intellij.ui.table.AdditionalTableHeader$Position
- f:getPosition():com.intellij.ui.table.AdditionalTableHeader$Position
- f:getStatisticsHeader():com.intellij.ui.table.AdditionalTableHeader
- f:headerVisibilityChanged(Z):V
- propertyChange(java.beans.PropertyChangeEvent):V
- f:setMyLocation(com.intellij.ui.table.AdditionalTableHeader$Position):V
- f:setPosition(com.intellij.ui.table.AdditionalTableHeader$Position):V
- f:setStatisticsHeader(com.intellij.ui.table.AdditionalTableHeader):V
c:com.intellij.ui.table.BaseTableView
- com.intellij.ui.table.JBTable
- <init>(javax.swing.table.TableModel):V
- <init>(javax.swing.table.TableModel,javax.swing.table.TableColumnModel):V
- s:restore(com.intellij.ide.util.PropertiesComponent,java.lang.String,javax.swing.JTable):V
- s:restoreWidth(com.intellij.ide.util.PropertiesComponent,java.lang.String,javax.swing.table.TableColumnModel):V
- s:restoreWidth(com.intellij.util.Function,javax.swing.table.TableColumnModel):V
- s:store(com.intellij.ide.util.PropertiesComponent,java.lang.String,javax.swing.JTable):V
- s:storeWidth(com.intellij.ide.util.PropertiesComponent,java.lang.String,javax.swing.table.TableColumnModel):V
- s:storeWidth(java.util.function.BiConsumer,javax.swing.table.TableColumnModel):V
c:com.intellij.ui.table.JBTable
- javax.swing.JTable
- com.intellij.ui.ComponentWithExpandableItems
- com.intellij.util.ui.ComponentWithEmptyText
- sf:COLUMN_RESIZE_AREA_WIDTH:I
- sf:PREFERRED_SCROLLABLE_VIEWPORT_HEIGHT_IN_ROWS:I
- p:myBusyIcon:com.intellij.util.ui.AsyncProcessIcon
- <init>():V
- <init>(javax.swing.table.TableModel):V
- <init>(javax.swing.table.TableModel,javax.swing.table.TableColumnModel):V
- p:calculateRowHeight():I
- s:createBooleanEditor():javax.swing.DefaultCellEditor
- p:createBusyIcon():com.intellij.util.ui.AsyncProcessIcon
- p:createDefaultTableHeader():javax.swing.table.JTableHeader
- p:createExpandableItemsHandler():com.intellij.ui.ExpandableItemsHandler
- p:createRowSorter(javax.swing.table.TableModel):javax.swing.table.TableRowSorter
- doLayout():V
- editCellAt(I,I,java.util.EventObject):Z
- getAccessibleContext():javax.accessibility.AccessibleContext
- getAdditionalRowsCount():I
- p:getComponentGraphics(java.awt.Graphics):java.awt.Graphics
- getEmptyText():com.intellij.util.ui.StatusText
- getExpandableItemsHandler():com.intellij.ui.ExpandableItemsHandler
- getExpandedColumnWidth(I):I
- getForeground():java.awt.Color
- p:getHoveredRowBackground():java.awt.Color
- getInputMethodRequests():java.awt.im.InputMethodRequests
- getPreferredScrollableViewportSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- getRowHeight():I
- getScrollableUnitIncrement(java.awt.Rectangle,I,I):I
- getShowLastHorizontalLine():Z
- p:getStripeColor():java.awt.Color
- getSurrendersFocusOnKeystroke():Z
- getVisibleRowCount():I
- p:initializeLocalVars():V
- isEmpty():Z
- p:isSortOnUpdates():Z
- isStriped():Z
- p:onTableChanged(javax.swing.event.TableModelEvent):V
- paint(java.awt.Graphics):V
- p:paintChildren(java.awt.Graphics):V
- p:paintComponent(java.awt.Graphics):V
- prepareRenderer(javax.swing.table.TableCellRenderer,I,I):java.awt.Component
- p:processMouseEvent(java.awt.event.MouseEvent):V
- removeNotify():V
- resetDefaultFocusTraversalKeys():V
- setAdditionalRowsCount(I):V
- setEnableAntialiasing(Z):V
- setExpandableItemsEnabled(Z):V
- setMaxItemsForSizeCalculation(I):V
- setModel(javax.swing.table.TableModel):V
- setPaintBusy(Z):V
- setRowHeight(I):V
- setShowColumns(Z):V
- setShowHorizontalLines(Z):V
- setShowLastHorizontalLine(Z):V
- setShowVerticalLines(Z):V
- setStriped(Z):V
- setVisibleRowCount(I):V
- s:setupCheckboxShortcut(javax.swing.JTable,I):Z
- setupEasyFocusTraversing():V
- surrendersFocusOnKeyStroke():Z
- updateUI():V
pc:com.intellij.ui.table.JBTable$AccessibleJBTable
- javax.swing.JTable$AccessibleJTable
- p:<init>(com.intellij.ui.table.JBTable):V
- getAccessibleAt(I,I):javax.accessibility.Accessible
- getAccessibleAt(java.awt.Point):javax.accessibility.Accessible
- getAccessibleChild(I):javax.accessibility.Accessible
pc:com.intellij.ui.table.JBTable$AccessibleJBTable$AccessibleJBTableCell
- javax.swing.JTable$AccessibleJTable$AccessibleJTableCell
- <init>(com.intellij.ui.table.JBTable$AccessibleJBTable,javax.swing.JTable,I,I,I):V
- p:getCurrentAccessibleContext():javax.accessibility.AccessibleContext
- p:getCurrentComponent():java.awt.Component
pc:com.intellij.ui.table.JBTable$DefaultColumnInfoBasedRowSorter
- javax.swing.table.TableRowSorter
- <init>(javax.swing.table.TableModel):V
- getComparator(I):java.util.Comparator
- isSortable(I):Z
- p:useToString(I):Z
pc:com.intellij.ui.table.JBTable$InvisibleResizableHeader
- com.intellij.ui.table.JBTable$JBTableHeader
- <init>(com.intellij.ui.table.JBTable):V
- p:canMoveOrResizeColumn(I):Z
- getCursor():java.awt.Cursor
- getHeaderRect(I):java.awt.Rectangle
- setCursor(java.awt.Cursor):V
- setTable(javax.swing.JTable):V
pc:com.intellij.ui.table.JBTable$JBTableHeader
- javax.swing.table.JTableHeader
- com.intellij.ui.ComponentWithExpandableItems
- <init>(com.intellij.ui.table.JBTable):V
- getExpandableItemsHandler():com.intellij.ui.ExpandableItemsHandler
- getForeground():java.awt.Color
- getToolTipText(java.awt.event.MouseEvent):java.lang.String
- p:packColumn(I):V
- paint(java.awt.Graphics):V
- p:processMouseEvent(java.awt.event.MouseEvent):V
- setExpandableItemsEnabled(Z):V
com.intellij.ui.table.SelectionProvider
- a:addSelection(java.lang.Object):V
- a:clearSelection():V
- a:getSelection():java.util.Collection
c:com.intellij.ui.table.TableView
- com.intellij.ui.table.BaseTableView
- com.intellij.ui.table.SelectionProvider
- <init>():V
- <init>(com.intellij.util.ui.ListTableModel):V
- addSelection(java.lang.Object):V
- p:createDefaultEditors():V
- p:createDefaultRenderers():V
- getCellEditor(I,I):javax.swing.table.TableCellEditor
- getCellRenderer(I,I):javax.swing.table.TableCellRenderer
- getComponent():javax.swing.JTable
- getItems():java.util.List
- getListTableModel():com.intellij.util.ui.ListTableModel
- getRow(I):java.lang.Object
- getSelectedObject():java.lang.Object
- getSelectedObjects():java.util.List
- getSelection():java.util.Collection
- getTableViewModel():com.intellij.util.ui.TableViewModel
- setMinRowHeight(I):V
- setModel(javax.swing.table.TableModel):V
- setModelAndUpdateColumns(com.intellij.util.ui.ListTableModel):V
- setSelection(java.util.Collection):V
- stopEditing():V
- tableChanged(javax.swing.event.TableModelEvent):V
- updateColumnSizes():V
com.intellij.ui.tabs.JBEditorTabsBase
- com.intellij.ui.tabs.JBTabs
com.intellij.ui.tabs.JBTabPainter
- sf:Companion:com.intellij.ui.tabs.JBTabPainter$Companion
- a:fillBackground(java.awt.Graphics2D,java.awt.Rectangle):V
- a:getBackgroundColor():java.awt.Color
- getCustomBackground(java.awt.Color,Z,Z,Z):java.awt.Color
- s:getDEBUGGER():com.intellij.ui.tabs.JBTabPainter
- s:getDEFAULT():com.intellij.ui.tabs.JBTabPainter
- s:getEDITOR():com.intellij.ui.tabs.impl.JBEditorTabPainter
- s:getTOOL_WINDOW():com.intellij.ui.tabs.JBTabPainter
- a:getTabTheme():com.intellij.ui.tabs.impl.themes.TabTheme
- a:paintBorderLine(java.awt.Graphics2D,I,java.awt.Point,java.awt.Point):V
- a:paintSelectedTab(com.intellij.ui.tabs.JBTabsPosition,java.awt.Graphics2D,java.awt.Rectangle,I,java.awt.Color,Z,Z):V
- a:paintTab(com.intellij.ui.tabs.JBTabsPosition,java.awt.Graphics2D,java.awt.Rectangle,I,java.awt.Color,Z,Z):V
- a:paintUnderline(com.intellij.ui.tabs.JBTabsPosition,java.awt.Rectangle,I,java.awt.Graphics2D,Z):V
f:com.intellij.ui.tabs.JBTabPainter$Companion
- f:getDEBUGGER():com.intellij.ui.tabs.JBTabPainter
- f:getDEFAULT():com.intellij.ui.tabs.JBTabPainter
- f:getEDITOR():com.intellij.ui.tabs.impl.JBEditorTabPainter
- f:getTOOL_WINDOW():com.intellij.ui.tabs.JBTabPainter
com.intellij.ui.tabs.JBTabs
- com.intellij.ui.DropAreaAware
- a:addListener(com.intellij.ui.tabs.TabsListener):com.intellij.ui.tabs.JBTabs
- a:addListener(com.intellij.ui.tabs.TabsListener,com.intellij.openapi.Disposable):com.intellij.ui.tabs.JBTabs
- a:addTab(com.intellij.ui.tabs.TabInfo):com.intellij.ui.tabs.TabInfo
- a:addTab(com.intellij.ui.tabs.TabInfo,I):com.intellij.ui.tabs.TabInfo
- a:addTabMouseListener(java.awt.event.MouseListener):com.intellij.ui.tabs.JBTabs
- a:findInfo(java.awt.Component):com.intellij.ui.tabs.TabInfo
- a:findInfo(java.awt.event.MouseEvent):com.intellij.ui.tabs.TabInfo
- a:findInfo(java.lang.Object):com.intellij.ui.tabs.TabInfo
- a:getComponent():javax.swing.JComponent
- a:getDataProvider():com.intellij.openapi.actionSystem.DataProvider
- getDropArea():java.awt.Rectangle
- a:getIndexOf(com.intellij.ui.tabs.TabInfo):I
- a:getPresentation():com.intellij.ui.tabs.JBTabsPresentation
- a:getSelectedInfo():com.intellij.ui.tabs.TabInfo
- a:getTabAt(I):com.intellij.ui.tabs.TabInfo
- a:getTabCount():I
- a:getTabLabel(com.intellij.ui.tabs.TabInfo):java.awt.Component
- a:getTabs():java.util.List
- a:getTargetInfo():com.intellij.ui.tabs.TabInfo
- a:processDropOver(com.intellij.ui.tabs.TabInfo,com.intellij.ui.awt.RelativePoint):V
- a:removeAllTabs():V
- a:removeTab(com.intellij.ui.tabs.TabInfo):com.intellij.openapi.util.ActionCallback
- a:requestFocus():V
- a:resetDropOver(com.intellij.ui.tabs.TabInfo):V
- a:select(com.intellij.ui.tabs.TabInfo,Z):com.intellij.openapi.util.ActionCallback
- a:setDataProvider(com.intellij.openapi.actionSystem.DataProvider):com.intellij.ui.tabs.JBTabs
- a:setNavigationActionBinding(java.lang.String,java.lang.String):V
- a:setPopupGroup(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String,Z):com.intellij.ui.tabs.JBTabs
- a:setPopupGroup(java.util.function.Supplier,java.lang.String,Z):com.intellij.ui.tabs.JBTabs
- a:setSelectionChangeHandler(com.intellij.ui.tabs.JBTabs$SelectionChangeHandler):com.intellij.ui.tabs.JBTabs
- a:startDropOver(com.intellij.ui.tabs.TabInfo,com.intellij.ui.awt.RelativePoint):java.awt.Image
com.intellij.ui.tabs.JBTabs$SelectionChangeHandler
- a:execute(com.intellij.ui.tabs.TabInfo,Z,com.intellij.openapi.util.ActiveRunnable):com.intellij.openapi.util.ActionCallback
com.intellij.ui.tabs.JBTabsEx
- com.intellij.ui.tabs.JBTabs
- sf:Companion:com.intellij.ui.tabs.JBTabsEx$Companion
- sf:NAVIGATION_ACTIONS_KEY:com.intellij.openapi.actionSystem.DataKey
- a:addTabSilently(com.intellij.ui.tabs.TabInfo,I):com.intellij.ui.tabs.TabInfo
- a:getDropInfoIndex():I
- a:getDropSide():I
- a:getToSelectOnRemoveOf(com.intellij.ui.tabs.TabInfo):com.intellij.ui.tabs.TabInfo
- a:isEditorTabs():Z
- a:isEmptyVisible():Z
- a:isHideTopPanel():Z
- a:setHideTopPanel(Z):V
- a:setTitleProducer(kotlin.jvm.functions.Function0):V
- a:sortTabs(java.util.Comparator):V
- a:updateTabActions(Z):V
f:com.intellij.ui.tabs.JBTabsEx$Companion
f:com.intellij.ui.tabs.JBTabsFactory
- sf:INSTANCE:com.intellij.ui.tabs.JBTabsFactory
- sf:createEditorTabs(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):com.intellij.ui.tabs.JBEditorTabsBase
- sf:createTabs(com.intellij.openapi.project.Project):com.intellij.ui.tabs.JBTabs
- sf:createTabs(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):com.intellij.ui.tabs.JBTabs
e:com.intellij.ui.tabs.JBTabsPosition
- java.lang.Enum
- sf:bottom:com.intellij.ui.tabs.JBTabsPosition
- sf:left:com.intellij.ui.tabs.JBTabsPosition
- sf:right:com.intellij.ui.tabs.JBTabsPosition
- sf:top:com.intellij.ui.tabs.JBTabsPosition
- isSide():Z
- s:valueOf(java.lang.String):com.intellij.ui.tabs.JBTabsPosition
- s:values():com.intellij.ui.tabs.JBTabsPosition[]
com.intellij.ui.tabs.JBTabsPresentation
- a:getTabsPosition():com.intellij.ui.tabs.JBTabsPosition
- a:isHideTabs():Z
- a:setAlphabeticalMode(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setEmptyText(java.lang.String):com.intellij.ui.tabs.JBTabsPresentation
- a:setFirstTabOffset(I):V
- a:setFocusCycle(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setHideTabs(Z):V
- a:setInnerInsets(java.awt.Insets):com.intellij.ui.tabs.JBTabsPresentation
- a:setPaintBlocked(Z,Z):V
- a:setPaintFocus(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setSideComponentBefore(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setSideComponentOnTabs(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setSideComponentVertical(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setSingleRow(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setSupportsCompression(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setTabDraggingEnabled(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setTabLabelActionsAutoHide(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setTabLabelActionsMouseDeadzone(com.intellij.util.ui.TimedDeadzone$Length):com.intellij.ui.tabs.JBTabsPresentation
- a:setTabsPosition(com.intellij.ui.tabs.JBTabsPosition):com.intellij.ui.tabs.JBTabsPresentation
- a:setToDrawBorderIfTabsHidden(Z):com.intellij.ui.tabs.JBTabsPresentation
- a:setUiDecorator(com.intellij.ui.tabs.UiDecorator):com.intellij.ui.tabs.JBTabsPresentation
f:com.intellij.ui.tabs.TabInfo
- com.intellij.openapi.ui.Queryable
- com.intellij.ui.PlaceProvider
- sf:ACTION_GROUP:java.lang.String
- sf:ALERT_ICON:java.lang.String
- sf:ALERT_STATUS:java.lang.String
- sf:COMPONENT:java.lang.String
- sf:Companion:com.intellij.ui.tabs.TabInfo$Companion
- sf:ENABLED:java.lang.String
- sf:HIDDEN:java.lang.String
- sf:ICON:java.lang.String
- sf:TAB_ACTION_GROUP:java.lang.String
- sf:TAB_COLOR:java.lang.String
- sf:TEXT:java.lang.String
- <init>(javax.swing.JComponent):V
- f:append(java.lang.String,com.intellij.ui.SimpleTextAttributes):com.intellij.ui.tabs.TabInfo
- f:canBeDraggedOut():Z
- f:clearText(Z):com.intellij.ui.tabs.TabInfo
- f:fireAlert():V
- f:getActionsContextComponent():javax.swing.JComponent
- f:getAlertIcon():com.intellij.ui.content.AlertIcon
- f:getBlinkCount():I
- f:getChangeSupport():java.beans.PropertyChangeSupport
- f:getColoredText():com.intellij.ui.SimpleColoredText
- f:getComponent():javax.swing.JComponent
- f:getDefaultForeground():java.awt.Color
- f:getDragDelegate():com.intellij.ui.tabs.TabInfo$DragDelegate
- f:getDragOutDelegate():com.intellij.ui.tabs.TabInfo$DragOutDelegate
- f:getForeSideComponent():javax.swing.JComponent
- f:getGroup():com.intellij.openapi.actionSystem.ActionGroup
- f:getIcon():javax.swing.Icon
- f:getLastFocusOwner():javax.swing.JComponent
- f:getObject():java.lang.Object
- getPlace():java.lang.String
- f:getPreferredFocusableComponent():javax.swing.JComponent
- f:getPreviousSelection():com.intellij.ui.tabs.TabInfo
- f:getSideComponent():javax.swing.JComponent
- f:getTabActionPlace():java.lang.String
- f:getTabColor():java.awt.Color
- f:getTabLabelActions():com.intellij.openapi.actionSystem.ActionGroup
- f:getTabPaneActions():com.intellij.openapi.actionSystem.ActionGroup
- f:getText():java.lang.String
- f:getTooltipText():java.lang.String
- f:isAlertRequested():Z
- f:isEnabled():Z
- f:isHidden():Z
- f:isPinned():Z
- putInfo(java.util.Map):V
- f:resetAlertRequest():V
- f:revalidate():V
- f:setActions(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):com.intellij.ui.tabs.TabInfo
- f:setActionsContextComponent(javax.swing.JComponent):com.intellij.ui.tabs.TabInfo
- f:setAlertIcon(com.intellij.ui.content.AlertIcon):com.intellij.ui.tabs.TabInfo
- f:setBlinkCount(I):V
- f:setComponent(java.awt.Component):com.intellij.ui.tabs.TabInfo
- f:setComponent(javax.swing.JComponent):V
- f:setDefaultAttributes(com.intellij.openapi.editor.markup.TextAttributes):com.intellij.ui.tabs.TabInfo
- f:setDefaultForeground(java.awt.Color):com.intellij.ui.tabs.TabInfo
- f:setDefaultStyle(I):com.intellij.ui.tabs.TabInfo
- f:setDragDelegate(com.intellij.ui.tabs.TabInfo$DragDelegate):V
- f:setDragOutDelegate(com.intellij.ui.tabs.TabInfo$DragOutDelegate):com.intellij.ui.tabs.TabInfo
- f:setEnabled(Z):V
- f:setForeSideComponent(javax.swing.JComponent):com.intellij.ui.tabs.TabInfo
- f:setHidden(Z):V
- f:setIcon(javax.swing.Icon):com.intellij.ui.tabs.TabInfo
- f:setLastFocusOwner(javax.swing.JComponent):V
- f:setObject(java.lang.Object):com.intellij.ui.tabs.TabInfo
- f:setPreferredFocusableComponent(javax.swing.JComponent):com.intellij.ui.tabs.TabInfo
- f:setPreviousSelection(com.intellij.ui.tabs.TabInfo):V
- f:setSideComponent(javax.swing.JComponent):com.intellij.ui.tabs.TabInfo
- f:setTabColor(java.awt.Color):com.intellij.ui.tabs.TabInfo
- f:setTabLabelActions(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):com.intellij.ui.tabs.TabInfo
- f:setTabPaneActions(com.intellij.openapi.actionSystem.ActionGroup):com.intellij.ui.tabs.TabInfo
- f:setText(java.lang.String):com.intellij.ui.tabs.TabInfo
- f:setTooltipText(java.lang.String):com.intellij.ui.tabs.TabInfo
- f:stopAlerting():V
f:com.intellij.ui.tabs.TabInfo$Companion
com.intellij.ui.tabs.TabInfo$DragDelegate
- a:dragFinishedOrCanceled():V
- a:dragStarted(java.awt.event.MouseEvent):V
com.intellij.ui.tabs.TabInfo$DragOutDelegate
- a:dragOutCancelled(com.intellij.ui.tabs.TabInfo):V
- a:dragOutFinished(java.awt.event.MouseEvent,com.intellij.ui.tabs.TabInfo):V
- a:dragOutStarted(java.awt.event.MouseEvent,com.intellij.ui.tabs.TabInfo):V
- a:processDragOut(java.awt.event.MouseEvent,com.intellij.ui.tabs.TabInfo):V
com.intellij.ui.tabs.TabsListener
- beforeSelectionChanged(com.intellij.ui.tabs.TabInfo,com.intellij.ui.tabs.TabInfo):V
- selectionChanged(com.intellij.ui.tabs.TabInfo,com.intellij.ui.tabs.TabInfo):V
- tabRemoved(com.intellij.ui.tabs.TabInfo):V
- tabsMoved():V
f:com.intellij.ui.tabs.TabsUtil
- sf:NEW_TAB_VERTICAL_PADDING:I
- s:getDropSideFor(java.awt.Point,javax.swing.JComponent):I
- s:getLabelFont():java.awt.Font
- s:getTabsHeight():I
- s:getTabsHeight(I):I
- s:updateBoundsWithDropSide(java.awt.Rectangle,I):V
com.intellij.ui.tabs.UiDecorator
- a:getDecoration():com.intellij.ui.tabs.UiDecorator$UiDecoration
f:com.intellij.ui.tabs.UiDecorator$UiDecoration
- <init>():V
- <init>(java.awt.Font):V
- <init>(java.awt.Font,java.awt.Insets):V
- <init>(java.awt.Font,java.awt.Insets,java.util.function.Function):V
- <init>(java.awt.Font,java.awt.Insets,java.util.function.Function,java.lang.Integer):V
- b:<init>(java.awt.Font,java.awt.Insets,java.util.function.Function,java.lang.Integer,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.awt.Font
- f:component2():java.awt.Insets
- f:component3():java.util.function.Function
- f:component4():java.lang.Integer
- f:copy(java.awt.Font,java.awt.Insets,java.util.function.Function,java.lang.Integer):com.intellij.ui.tabs.UiDecorator$UiDecoration
- bs:copy$default(com.intellij.ui.tabs.UiDecorator$UiDecoration,java.awt.Font,java.awt.Insets,java.util.function.Function,java.lang.Integer,I,java.lang.Object):com.intellij.ui.tabs.UiDecorator$UiDecoration
- equals(java.lang.Object):Z
- f:getContentInsetsSupplier():java.util.function.Function
- f:getIconTextGap():java.lang.Integer
- f:getLabelFont():java.awt.Font
- f:getLabelInsets():java.awt.Insets
- hashCode():I
c:com.intellij.ui.tabs.impl.DefaultEditorTabsPainter
- com.intellij.ui.tabs.impl.JBEditorTabsPainter
- <init>(com.intellij.ui.tabs.impl.JBEditorTabs):V
- doPaintBackground(java.awt.Graphics2D,java.awt.Rectangle,Z,java.awt.Rectangle):V
- doPaintInactive(java.awt.Graphics2D,java.awt.Rectangle,I,I,I,I,java.awt.Color,I,I,Z):V
- getBackgroundColor():java.awt.Color
- p:getDefaultTabColor():java.awt.Color
- p:getInactiveMaskColor():java.awt.Color
f:com.intellij.ui.tabs.impl.DefaultTabPainterAdapter
- com.intellij.ui.tabs.impl.TabPainterAdapter
- <init>(com.intellij.ui.tabs.JBTabPainter):V
- getTabPainter():com.intellij.ui.tabs.JBTabPainter
c:com.intellij.ui.tabs.impl.JBDefaultTabPainter
- com.intellij.ui.tabs.JBTabPainter
- <init>():V
- <init>(com.intellij.ui.tabs.impl.themes.TabTheme):V
- b:<init>(com.intellij.ui.tabs.impl.themes.TabTheme,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- fillBackground(java.awt.Graphics2D,java.awt.Rectangle):V
- getBackgroundColor():java.awt.Color
- getCustomBackground(java.awt.Color,Z,Z,Z):java.awt.Color
- getTabTheme():com.intellij.ui.tabs.impl.themes.TabTheme
- f:getTheme():com.intellij.ui.tabs.impl.themes.TabTheme
- paintBorderLine(java.awt.Graphics2D,I,java.awt.Point,java.awt.Point):V
- paintSelectedTab(com.intellij.ui.tabs.JBTabsPosition,java.awt.Graphics2D,java.awt.Rectangle,I,java.awt.Color,Z,Z):V
- paintTab(com.intellij.ui.tabs.JBTabsPosition,java.awt.Graphics2D,java.awt.Rectangle,I,java.awt.Color,Z,Z):V
- paintUnderline(com.intellij.ui.tabs.JBTabsPosition,java.awt.Rectangle,I,java.awt.Graphics2D,Z):V
- p:underlineRectangle(com.intellij.ui.tabs.JBTabsPosition,java.awt.Rectangle,I):java.awt.Rectangle
f:com.intellij.ui.tabs.impl.JBEditorTabPainter
- com.intellij.ui.tabs.impl.JBDefaultTabPainter
- <init>():V
- f:paintBottomGap(com.intellij.ui.tabs.JBTabsPosition,java.awt.Graphics2D,java.awt.Rectangle,I):V
- f:paintLeftGap(com.intellij.ui.tabs.JBTabsPosition,java.awt.Graphics2D,java.awt.Rectangle,I):V
- f:paintRightGap(com.intellij.ui.tabs.JBTabsPosition,java.awt.Graphics2D,java.awt.Rectangle,I):V
- f:paintTopGap(com.intellij.ui.tabs.JBTabsPosition,java.awt.Graphics2D,java.awt.Rectangle,I):V
c:com.intellij.ui.tabs.impl.JBEditorTabs
- com.intellij.ide.ui.UISettingsListener
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.openapi.ui.Queryable
- com.intellij.ui.switcher.QuickActionProvider
- com.intellij.ui.tabs.JBEditorTabsBase
- com.intellij.ui.tabs.JBTabsEx
- com.intellij.ui.tabs.JBTabsPresentation
- com.intellij.ui.tabs.impl.MorePopupAware
- java.beans.PropertyChangeListener
- javax.accessibility.Accessible
- javax.swing.JComponent
- javax.swing.event.PopupMenuListener
- sf:Companion:com.intellij.ui.tabs.impl.JBEditorTabs$Companion
- sf:MARK_MODIFIED_KEY:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.ActionManager,com.intellij.openapi.wm.IdeFocusManager,com.intellij.openapi.Disposable):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.wm.IdeFocusManager,com.intellij.openapi.Disposable):V
- isAlphabeticalMode():Z
- isEditorTabs():Z
- setAlphabeticalMode(Z):com.intellij.ui.tabs.JBTabsPresentation
- shouldPaintBottomBorder():Z
- uiSettingsChanged(com.intellij.ide.ui.UISettings):V
- useSmallLabels():Z
f:com.intellij.ui.tabs.impl.JBEditorTabs$Companion
a:com.intellij.ui.tabs.impl.JBEditorTabsPainter
- psf:BORDER_COLOR:java.awt.Color
- psf:DEFAULT_TAB_COLOR:java.awt.Color
- psf:INACTIVE_MASK_COLOR:java.awt.Color
- psf:UNDERLINE_COLOR:java.awt.Color
- p:myDefaultTabColor:java.awt.Color
- pf:myTabs:com.intellij.ui.tabs.impl.JBEditorTabs
- <init>(com.intellij.ui.tabs.impl.JBEditorTabs):V
- a:doPaintBackground(java.awt.Graphics2D,java.awt.Rectangle,Z,java.awt.Rectangle):V
- a:doPaintInactive(java.awt.Graphics2D,java.awt.Rectangle,I,I,I,I,java.awt.Color,I,I,Z):V
- a:getBackgroundColor():java.awt.Color
- getEmptySpaceColor():java.awt.Color
- setDefaultTabColor(java.awt.Color):V
com.intellij.ui.tabs.impl.MorePopupAware
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- sf:KEY_TOOLWINDOW_TITLE:com.intellij.openapi.actionSystem.DataKey
- a:canShowMorePopup():Z
- a:showMorePopup():com.intellij.openapi.ui.popup.JBPopup
a:com.intellij.ui.tabs.impl.ShapeTransform
- p:myPath:java.awt.geom.GeneralPath
- p:<init>(java.awt.Rectangle,I,I,Z):V
- f:closePath():com.intellij.ui.tabs.impl.ShapeTransform
- a:copy():com.intellij.ui.tabs.impl.ShapeTransform
- a:createTransform(java.awt.Rectangle):com.intellij.ui.tabs.impl.ShapeTransform
- f:deltaX(I):I
- f:deltaY(I):I
- f:doRect(I,I,I,I):com.intellij.ui.tabs.impl.ShapeTransform
- f:getHeight():I
- a:getMaxX():I
- a:getMaxY():I
- f:getShape():java.awt.geom.GeneralPath
- pf:getShapeRect():java.awt.Rectangle
- f:getWidth():I
- a:getX():I
- a:getY():I
- f:lineTo(I,I):com.intellij.ui.tabs.impl.ShapeTransform
- f:moveTo(I,I):com.intellij.ui.tabs.impl.ShapeTransform
- f:quadTo(I,I,I,I):com.intellij.ui.tabs.impl.ShapeTransform
- f:reset():com.intellij.ui.tabs.impl.ShapeTransform
- pf:reset(java.awt.Rectangle):com.intellij.ui.tabs.impl.ShapeTransform
- a:transformInsets(java.awt.Insets):java.awt.Insets
- a:transformLine(I,I,I,I):java.awt.geom.Line2D$Float
- f:transformY1(java.lang.Object,java.lang.Object):java.lang.Object
c:com.intellij.ui.tabs.impl.ShapeTransform$Bottom
- com.intellij.ui.tabs.impl.ShapeTransform
- <init>():V
- <init>(java.awt.Rectangle):V
- <init>(java.awt.Rectangle,java.awt.geom.GeneralPath):V
- copy():com.intellij.ui.tabs.impl.ShapeTransform
- createTransform(java.awt.Rectangle):com.intellij.ui.tabs.impl.ShapeTransform
- getMaxX():I
- getMaxY():I
- getX():I
- getY():I
- transformInsets(java.awt.Insets):java.awt.Insets
- transformLine(I,I,I,I):java.awt.geom.Line2D$Float
c:com.intellij.ui.tabs.impl.ShapeTransform$Left
- com.intellij.ui.tabs.impl.ShapeTransform
- <init>():V
- <init>(java.awt.Rectangle):V
- <init>(java.awt.Rectangle,java.awt.geom.GeneralPath):V
- copy():com.intellij.ui.tabs.impl.ShapeTransform
- createTransform(java.awt.Rectangle):com.intellij.ui.tabs.impl.ShapeTransform
- getMaxX():I
- getMaxY():I
- getX():I
- getY():I
- transformInsets(java.awt.Insets):java.awt.Insets
- transformLine(I,I,I,I):java.awt.geom.Line2D$Float
c:com.intellij.ui.tabs.impl.ShapeTransform$Right
- com.intellij.ui.tabs.impl.ShapeTransform
- <init>():V
- <init>(java.awt.Rectangle):V
- <init>(java.awt.Rectangle,java.awt.geom.GeneralPath):V
- copy():com.intellij.ui.tabs.impl.ShapeTransform
- createTransform(java.awt.Rectangle):com.intellij.ui.tabs.impl.ShapeTransform
- getMaxX():I
- getMaxY():I
- getX():I
- getY():I
- transformInsets(java.awt.Insets):java.awt.Insets
- transformLine(I,I,I,I):java.awt.geom.Line2D$Float
c:com.intellij.ui.tabs.impl.ShapeTransform$Top
- com.intellij.ui.tabs.impl.ShapeTransform
- <init>():V
- <init>(java.awt.Rectangle):V
- <init>(java.awt.Rectangle,java.awt.geom.GeneralPath):V
- copy():com.intellij.ui.tabs.impl.ShapeTransform
- createTransform(java.awt.Rectangle):com.intellij.ui.tabs.impl.ShapeTransform
- getMaxX():I
- getMaxY():I
- getX():I
- getY():I
- transformInsets(java.awt.Insets):java.awt.Insets
- transformLine(I,I,I,I):java.awt.geom.Line2D$Float
c:com.intellij.ui.tabs.impl.SingleHeightTabs
- com.intellij.ui.tabs.impl.JBEditorTabs
- sf:Companion:com.intellij.ui.tabs.impl.SingleHeightTabs$Companion
- sf:UNSCALED_PREF_HEIGHT:I
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.wm.IdeFocusManager,com.intellij.openapi.Disposable):V
- p:createTabLabel(com.intellij.ui.tabs.TabInfo):com.intellij.ui.tabs.impl.TabLabel
f:com.intellij.ui.tabs.impl.SingleHeightTabs$Companion
c:com.intellij.ui.tabs.impl.TabLabel
- javax.swing.JPanel
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- javax.accessibility.Accessible
- pf:label:com.intellij.ui.SimpleColoredComponent
- f:apply(com.intellij.ui.tabs.UiDecorator$UiDecoration):V
- pf:createLayeredIcon():com.intellij.ui.LayeredIcon
- editLabelForeground(java.awt.Color):java.awt.Color
- f:getAccessibleContext():javax.accessibility.AccessibleContext
- f:getActionsPosition():com.intellij.ui.tabs.impl.TabLabel$ActionsPosition
- pf:getEffectiveBackground():java.awt.Color
- getIconAlpha():F
- f:getInfo():com.intellij.ui.tabs.TabInfo
- f:getLabelComponent():javax.swing.JComponent
- f:getNotStrictPreferredSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- f:getToolTipText(java.awt.event.MouseEvent):java.lang.String
- p:handlePopup(java.awt.event.MouseEvent):V
- isFocusable():Z
- f:isForcePaintBorders():Z
- isHovered():Z
- f:isLastInRow():Z
- f:isLastPinned():Z
- f:isNextToLastPinned():Z
- f:isPinned():Z
- p:isShowTabActions():Z
- p:isTabActionsOnTheRight():Z
- f:paint(java.awt.Graphics):V
- pf:paintChildren(java.awt.Graphics):V
- pf:paintComponent(java.awt.Graphics):V
- pf:paintFadeout(java.awt.Graphics):V
- f:paintOffscreen(java.awt.Graphics):V
- f:repaintAttraction():Z
- setAlignmentToCenter(Z):V
- f:setForcePaintBorders(Z):V
- p:setHovered(Z):V
- f:setIcon(javax.swing.Icon):V
- pf:setPlaceholderContent(Z,javax.swing.JComponent):V
- setTabActions(com.intellij.openapi.actionSystem.ActionGroup):V
- f:setTabActionsAutoHide(Z):V
- f:setTabEnabled(Z):V
- f:setText(com.intellij.ui.SimpleColoredText):V
- p:shouldPaintFadeout():Z
- f:toggleShowActions(Z):V
- f:uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- f:updateTabActions():Z
pf:com.intellij.ui.tabs.impl.TabLabel$AccessibleTabLabel
- javax.swing.JPanel$AccessibleJPanel
- <init>(com.intellij.ui.tabs.impl.TabLabel):V
- getAccessibleDescription():java.lang.String
- getAccessibleName():java.lang.String
- getAccessibleRole():javax.accessibility.AccessibleRole
e:com.intellij.ui.tabs.impl.TabLabel$ActionsPosition
- java.lang.Enum
- sf:LEFT:com.intellij.ui.tabs.impl.TabLabel$ActionsPosition
- sf:NONE:com.intellij.ui.tabs.impl.TabLabel$ActionsPosition
- sf:RIGHT:com.intellij.ui.tabs.impl.TabLabel$ActionsPosition
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ui.tabs.impl.TabLabel$ActionsPosition
- s:values():com.intellij.ui.tabs.impl.TabLabel$ActionsPosition[]
f:com.intellij.ui.tabs.impl.TabLabel$MergedUiDecoration
- f:contentInsetsSupplier:java.util.function.Function
- f:iconTextGap:I
- f:labelInsets:java.awt.Insets
- <init>(java.awt.Insets,java.util.function.Function,I):V
- f:component1():java.awt.Insets
- f:component2():java.util.function.Function
- f:component3():I
- f:copy(java.awt.Insets,java.util.function.Function,I):com.intellij.ui.tabs.impl.TabLabel$MergedUiDecoration
- bs:copy$default(com.intellij.ui.tabs.impl.TabLabel$MergedUiDecoration,java.awt.Insets,java.util.function.Function,I,I,java.lang.Object):com.intellij.ui.tabs.impl.TabLabel$MergedUiDecoration
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.ui.tabs.impl.TabLabel$TabLabelLayout
- java.awt.BorderLayout
- <init>(com.intellij.ui.tabs.impl.TabLabel):V
- addLayoutComponent(java.awt.Component,java.lang.Object):V
- layoutContainer(java.awt.Container):V
- f:setRightAlignment(Z):V
a:com.intellij.ui.tabs.impl.TabLayout
- sf:DEADZONE_FOR_DECLARE_TAB_HIDDEN:I
- <init>():V
- createShapeTransform(java.awt.Dimension):com.intellij.ui.tabs.impl.ShapeTransform
- createShapeTransform(java.awt.Rectangle):com.intellij.ui.tabs.impl.ShapeTransform
- s:getDragOutMultiplier():D
- a:getDropIndexFor(java.awt.Point):I
- a:getDropSideFor(java.awt.Point):I
- s:getMaxPinnedTabWidth():I
- ps:getMinTabWidth():I
- getScrollOffset():I
- isDragOut(com.intellij.ui.tabs.impl.TabLabel,I,I):Z
- isScrollable():Z
- isSideComponentOnTabs():Z
- isTabHidden(com.intellij.ui.tabs.TabInfo):Z
- isWithScrollBar():Z
- scroll(I):V
- s:showPinnedTabsSeparately():Z
com.intellij.ui.tabs.impl.TabPainterAdapter
- a:getTabPainter():com.intellij.ui.tabs.JBTabPainter
- getTabTheme():com.intellij.ui.tabs.impl.themes.TabTheme
a:com.intellij.ui.tabs.impl.multiRow.TabsRow
- <init>(java.util.List,Z,Z):V
- f:getInfos():java.util.List
- f:getWithEntryPointToolbar():Z
- f:getWithTitle():Z
f:com.intellij.ui.tabs.impl.table.TablePassInfo
- f:invisible:java.util.List
- f:tabRectangle:java.awt.Rectangle
- f:toFitRec:java.awt.Rectangle
- getHeaderRectangle():java.awt.Rectangle
- getRequiredLength():I
- getRowCount():I
- getScrollExtent():I
- isInSelectionRow(com.intellij.ui.tabs.TabInfo):Z
c:com.intellij.ui.tabs.impl.themes.DefaultTabTheme
- com.intellij.ui.tabs.impl.themes.TabTheme
- <init>():V
- getBackground():java.awt.Color
- getBorderColor():java.awt.Color
- getHoverBackground():java.awt.Color
- getHoverInactiveBackground():java.awt.Color
- getInactiveColoredTabBackground():java.awt.Color
- getInactiveUnderlineColor():java.awt.Color
- getUnderlineColor():java.awt.Color
- getUnderlineHeight():I
- getUnderlinedTabBackground():java.awt.Color
- getUnderlinedTabForeground():java.awt.Color
- getUnderlinedTabInactiveBackground():java.awt.Color
- getUnderlinedTabInactiveForeground():java.awt.Color
f:com.intellij.ui.tabs.impl.themes.EditorTabTheme
- com.intellij.ui.tabs.impl.themes.TabTheme
- <init>():V
- getBackground():java.awt.Color
- getBorderColor():java.awt.Color
- f:getGlobalScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- getHoverBackground():java.awt.Color
- getHoverInactiveBackground():java.awt.Color
- getHoverSelectedBackground():java.awt.Color
- getHoverSelectedInactiveBackground():java.awt.Color
- getInactiveColoredTabBackground():java.awt.Color
- getInactiveUnderlineColor():java.awt.Color
- getTopBorderThickness():I
- getUnderlineArc():I
- getUnderlineColor():java.awt.Color
- getUnderlineHeight():I
- getUnderlinedTabBackground():java.awt.Color
- getUnderlinedTabForeground():java.awt.Color
- getUnderlinedTabInactiveBackground():java.awt.Color
- getUnderlinedTabInactiveForeground():java.awt.Color
com.intellij.ui.tabs.impl.themes.TabTheme
- a:getBackground():java.awt.Color
- a:getBorderColor():java.awt.Color
- a:getHoverBackground():java.awt.Color
- a:getHoverInactiveBackground():java.awt.Color
- getHoverSelectedBackground():java.awt.Color
- getHoverSelectedInactiveBackground():java.awt.Color
- a:getInactiveColoredTabBackground():java.awt.Color
- a:getInactiveUnderlineColor():java.awt.Color
- getTopBorderThickness():I
- getUnderlineArc():I
- a:getUnderlineColor():java.awt.Color
- a:getUnderlineHeight():I
- a:getUnderlinedTabBackground():java.awt.Color
- a:getUnderlinedTabForeground():java.awt.Color
- a:getUnderlinedTabInactiveBackground():java.awt.Color
- a:getUnderlinedTabInactiveForeground():java.awt.Color
com.intellij.ui.treeStructure.AlwaysExpandedTree
- a:isAlwaysExpanded():Z
c:com.intellij.ui.treeStructure.AutoExpandSimpleNodeListener
- com.intellij.util.ui.tree.TreeModelAdapter
- <init>(javax.swing.JTree):V
- treeNodesInserted(javax.swing.event.TreeModelEvent):V
com.intellij.ui.treeStructure.BgtAwareTreeModel
- javax.swing.tree.TreeModel
a:com.intellij.ui.treeStructure.CachingSimpleNode
- com.intellij.ui.treeStructure.SimpleNode
- p:<init>(com.intellij.openapi.project.Project,com.intellij.ide.util.treeView.NodeDescriptor):V
- p:<init>(com.intellij.ui.treeStructure.SimpleNode):V
- pa:buildChildren():com.intellij.ui.treeStructure.SimpleNode[]
- cleanUpCache():V
- p:getCached():com.intellij.ui.treeStructure.SimpleNode[]
- f:getChildren():com.intellij.ui.treeStructure.SimpleNode[]
- p:onChildrenBuilt():V
f:com.intellij.ui.treeStructure.CachingTreePath
- javax.swing.tree.TreePath
- <init>(java.lang.Object):V
- <init>(javax.swing.tree.TreePath,java.lang.Object):V
- <init>(java.lang.Object[]):V
- getPathCount():I
- pathByAddingChild(java.lang.Object):javax.swing.tree.TreePath
c:com.intellij.ui.treeStructure.NullNode
- com.intellij.ui.treeStructure.SimpleNode
- <init>():V
- getChildren():com.intellij.ui.treeStructure.SimpleNode[]
c:com.intellij.ui.treeStructure.PatchedDefaultMutableTreeNode
- javax.swing.tree.DefaultMutableTreeNode
- <init>():V
- <init>(java.lang.Object):V
- getText():java.lang.String
a:com.intellij.ui.treeStructure.SimpleNode
- com.intellij.ide.util.treeView.PresentableNodeDescriptor
- com.intellij.ui.tree.LeafState$Supplier
- com.intellij.util.ui.update.ComparableObject
- psf:NO_CHILDREN:com.intellij.ui.treeStructure.SimpleNode[]
- p:<init>():V
- p:<init>(com.intellij.openapi.project.Project):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.ide.util.treeView.NodeDescriptor):V
- p:<init>(com.intellij.ui.treeStructure.SimpleNode):V
- f:addColoredFragment(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- p:doUpdate(com.intellij.ide.projectView.PresentationData):V
- f:equals(java.lang.Object):Z
- getChildAt(I):com.intellij.ui.treeStructure.SimpleNode
- getChildCount():I
- getChildToHighlightAt(I):com.intellij.ui.treeStructure.SimpleNode
- a:getChildren():com.intellij.ui.treeStructure.SimpleNode[]
- getElement():java.lang.Object
- getEqualityObjects():java.lang.Object[]
- p:getErrorAttributes():com.intellij.ui.SimpleTextAttributes
- getIndex(com.intellij.ui.treeStructure.SimpleNode):I
- getLeafState():com.intellij.ui.tree.LeafState
- f:getParent():com.intellij.ui.treeStructure.SimpleNode
- p:getPlainAttributes():com.intellij.ui.SimpleTextAttributes
- getWeight():I
- handleDoubleClickOrEnter(com.intellij.ui.treeStructure.SimpleTree,java.awt.event.InputEvent):V
- handleSelection(com.intellij.ui.treeStructure.SimpleTree):V
- f:hashCode():I
- isAlwaysLeaf():Z
- isAlwaysShowPlus():Z
- isAutoExpandNode():Z
- f:setPlainText(java.lang.String):V
- shouldHaveSeparator():Z
- p:update(com.intellij.ide.projectView.PresentationData):V
- p:updateElement():java.lang.Object
c:com.intellij.ui.treeStructure.SimpleTree
- com.intellij.ui.treeStructure.Tree
- javax.swing.event.CellEditorListener
- <init>():V
- <init>(javax.swing.tree.TreeModel):V
- addSelectionPath(javax.swing.tree.TreePath):V
- addSelectionPaths(javax.swing.tree.TreePath[]):V
- cancelEditing():V
- p:configureUiHelper(com.intellij.ui.TreeUIHelper):V
- doClick(I):V
- editingCanceled(javax.swing.event.ChangeEvent):V
- editingStopped(javax.swing.event.ChangeEvent):V
- getBuilderModel():javax.swing.tree.DefaultTreeModel
- getEditingPath():javax.swing.tree.TreePath
- getEditorComponent():javax.swing.JComponent
- getMinimumSize():java.awt.Dimension
- getNodeFor(I):com.intellij.ui.treeStructure.SimpleNode
- getNodeFor(javax.swing.tree.TreePath):com.intellij.ui.treeStructure.SimpleNode
- getPathFor(com.intellij.ui.treeStructure.SimpleNode):javax.swing.tree.TreePath
- getRenderer():com.intellij.ide.util.treeView.NodeRenderer
- getSelectedNode():com.intellij.ui.treeStructure.SimpleNode
- getSelectedNodesIfUniform():com.intellij.ui.treeStructure.SimpleNode[]
- p:invokeContextMenu(java.awt.event.MouseEvent):V
- isEditing():Z
- isMultipleSelection():Z
- isPathEditable(javax.swing.tree.TreePath):Z
- isSelectionEmpty():Z
- p:paintChildren(java.awt.Graphics):V
- p:paintComponent(java.awt.Graphics):V
- p:paintNodes():Z
- processKeyEvent(java.awt.event.KeyEvent):V
- setCellEditor(javax.swing.tree.TreeCellEditor):V
- f:setMinSizeInRows(I):V
- setPopupGroup(com.intellij.openapi.actionSystem.ActionGroup,java.lang.String):V
- startEditingAtPath(javax.swing.tree.TreePath):V
- stopEditing():Z
a:com.intellij.ui.treeStructure.SimpleTreeStructure
- com.intellij.ide.util.treeView.AbstractTreeStructure
- <init>():V
- f:clearCaches():V
- commit():V
- createDescriptor(java.lang.Object,com.intellij.ide.util.treeView.NodeDescriptor):com.intellij.ide.util.treeView.NodeDescriptor
- getChildElements(java.lang.Object):java.lang.Object[]
- getParentElement(java.lang.Object):java.lang.Object
- hasSomethingToCommit():Z
- isAlwaysLeaf(java.lang.Object):Z
c:com.intellij.ui.treeStructure.SimpleTreeStructure$Impl
- com.intellij.ui.treeStructure.SimpleTreeStructure
- <init>(com.intellij.ui.treeStructure.SimpleNode):V
- getRootElement():java.lang.Object
c:com.intellij.ui.treeStructure.Tree
- com.intellij.openapi.ui.Queryable
- com.intellij.ui.ComponentWithExpandableItems
- com.intellij.ui.ComponentWithFileColors
- com.intellij.ui.tree.TreePathBackgroundSupplier
- com.intellij.util.ui.ComponentWithEmptyText
- javax.swing.JTree
- <init>():V
- <init>(javax.swing.tree.TreeModel):V
- <init>(javax.swing.tree.TreeNode):V
- addNotify():V
- addTreeExpansionListener(javax.swing.event.TreeExpansionListener):V
- p:clearToggledPaths():V
- collapsePath(javax.swing.tree.TreePath):V
- collapsePaths(java.lang.Iterable):V
- p:createTreeModelListener():javax.swing.event.TreeModelListener
- doLayout():V
- expandPaths(java.lang.Iterable):V
- p:firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object):V
- fireTreeCollapsed(javax.swing.tree.TreePath):V
- fireTreeExpanded(javax.swing.tree.TreePath):V
- getAdditionalRowsCount():I
- getBackground():java.awt.Color
- p:getComponentGraphics(java.awt.Graphics):java.awt.Graphics
- getDeepestRendererComponentAt(I,I):java.awt.Component
- p:getDescendantToggledPaths(javax.swing.tree.TreePath):java.util.Enumeration
- getDragEnabled():Z
- getEffectiveAdditionalRowsCount():I
- getEmptyText():com.intellij.util.ui.StatusText
- getExpandableItemsHandler():com.intellij.ui.ExpandableItemsHandler
- getExpandedDescendants(javax.swing.tree.TreePath):java.util.Enumeration
- getExpandedPaths():java.util.Set
- getFileColorFor(java.lang.Object):java.awt.Color
- getFileColorForPath(javax.swing.tree.TreePath):java.awt.Color
- getFileColorForRow(I):java.awt.Color
- getForeground():java.awt.Color
- getInputMethodRequests():java.awt.im.InputMethodRequests
- getNextMatch(java.lang.String,I,javax.swing.text.Position$Bias):javax.swing.tree.TreePath
- getPath(com.intellij.ide.util.treeView.PresentableNodeDescriptor):javax.swing.tree.TreePath
- getPathBackground(javax.swing.tree.TreePath,I):java.awt.Color
- getPreferredSize():java.awt.Dimension
- getScrollableUnitIncrement(java.awt.Rectangle,I,I):I
- getSelectedNodes(java.lang.Class,com.intellij.ui.treeStructure.Tree$NodeFilter):java.lang.Object[]
- p:getWideSelectionBackgroundCondition():com.intellij.openapi.util.Condition
- hasBeenExpanded(javax.swing.tree.TreePath):Z
- isEmpty():Z
- p:isEmptyTextVisible():Z
- isExpanded(I):Z
- isExpanded(javax.swing.tree.TreePath):Z
- isFileColorsEnabled():Z
- isHorizontalAutoScrollingEnabled():Z
- p:isWideSelection():Z
- paint(java.awt.Graphics):V
- p:paintComponent(java.awt.Graphics):V
- p:paintFileColorGutter(java.awt.Graphics):V
- p:paintNodes():Z
- p:processKeyEvent(java.awt.event.KeyEvent):V
- p:processMouseEvent(java.awt.event.MouseEvent):V
- putInfo(java.util.Map):V
- p:removeDescendantToggledPaths(java.util.Enumeration):V
- removeNotify():V
- removeTreeExpansionListener(javax.swing.event.TreeExpansionListener):V
- scrollPathToVisible(javax.swing.tree.TreePath):V
- setAdditionalRowsCount(I):V
- setExpandableItemsEnabled(Z):V
- p:setExpandedState(javax.swing.tree.TreePath,Z):V
- setHoldSize(Z):V
- setHorizontalAutoScrollingEnabled(Z):V
- f:setLineStyleAngled():V
- setPaintBusy(Z):V
- setToggleClickCount(I):V
- setTransferHandler(javax.swing.TransferHandler):V
- setUI(javax.swing.plaf.TreeUI):V
- p:shouldShowBusyIconIfNeeded():Z
com.intellij.ui.treeStructure.Tree$NodeFilter
- a:accept(java.lang.Object):Z
f:com.intellij.ui.treeStructure.TreeBulkExpansionEvent
- javax.swing.event.TreeExpansionEvent
- <init>(java.lang.Object,javax.swing.tree.TreePath,Z):V
- f:isBulkOperationInProgress():Z
com.intellij.ui.treeStructure.TreeBulkExpansionListener
- javax.swing.event.TreeExpansionListener
- treeBulkCollapseEnded(com.intellij.ui.treeStructure.TreeBulkExpansionEvent):V
- treeBulkCollapseStarted(com.intellij.ui.treeStructure.TreeBulkExpansionEvent):V
- treeBulkExpansionEnded(com.intellij.ui.treeStructure.TreeBulkExpansionEvent):V
- treeBulkExpansionStarted(com.intellij.ui.treeStructure.TreeBulkExpansionEvent):V
f:com.intellij.ui.treeStructure.TreeSwingModelKt
f:com.intellij.ui.treeStructure.TreeViewModelKt
c:com.intellij.ui.treeStructure.WeightBasedComparator
- java.util.Comparator
- sf:FULL_INSTANCE:com.intellij.ui.treeStructure.WeightBasedComparator
- sf:INSTANCE:com.intellij.ui.treeStructure.WeightBasedComparator
- <init>():V
- <init>(Z):V
- compare(com.intellij.ide.util.treeView.NodeDescriptor,com.intellij.ide.util.treeView.NodeDescriptor):I
- ps:compareToString(com.intellij.ide.util.treeView.NodeDescriptor,com.intellij.ide.util.treeView.NodeDescriptor):I
- p:compareWeights(I,I):I
- p:getWeight(com.intellij.ide.util.treeView.NodeDescriptor):I
c:com.intellij.ui.treeStructure.actions.CollapseAllAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- pf:collapseToLevel:I
- p:myTree:javax.swing.JTree
- <init>(javax.swing.JTree):V
- <init>(javax.swing.JTree,I):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:getTree():javax.swing.JTree
c:com.intellij.ui.treeStructure.actions.ExpandAllAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- p:myTree:javax.swing.JTree
- <init>(javax.swing.JTree):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:getTree():javax.swing.JTree
c:com.intellij.ui.treeStructure.filtered.FilteringTreeStructure
- com.intellij.ide.util.treeView.AbstractTreeStructure
- pf:myLeaves:java.util.HashSet
- pf:myRoot:com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$FilteringNode
- <init>(com.intellij.ui.speedSearch.ElementFilter,com.intellij.ide.util.treeView.AbstractTreeStructure):V
- <init>(com.intellij.ui.speedSearch.ElementFilter,com.intellij.ide.util.treeView.AbstractTreeStructure,Z):V
- asyncCommit():com.intellij.openapi.util.ActionCallback
- commit():V
- createDescriptor(java.lang.Object,com.intellij.ide.util.treeView.NodeDescriptor):com.intellij.ide.util.treeView.NodeDescriptor
- createFilteringNode(java.lang.Object):com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$FilteringNode
- getChildElements(java.lang.Object):java.lang.Object[]
- getParentElement(java.lang.Object):java.lang.Object
- getRootElement():com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$FilteringNode
- getVisibleLeaves():java.util.List
- getVisibleNodeFor(java.lang.Object):com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$FilteringNode
- hasSomethingToCommit():Z
- isAlwaysLeaf(java.lang.Object):Z
- isToBuildChildrenInBackground(java.lang.Object):Z
- rebuild():V
- refilter():V
c:com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$FilteringNode
- com.intellij.ui.treeStructure.SimpleNode
- <init>(com.intellij.ui.treeStructure.filtered.FilteringTreeStructure,com.intellij.ui.treeStructure.SimpleNode,java.lang.Object):V
- children():java.util.List
- p:doUpdate(com.intellij.ide.projectView.PresentationData):V
- getChildren():com.intellij.ui.treeStructure.SimpleNode[]
- getDelegate():java.lang.Object
- getEqualityObjects():java.lang.Object[]
- getParentNode():com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$FilteringNode
- getWeight():I
- isAlwaysLeaf():Z
- isAlwaysShowPlus():Z
- isContentHighlighted():Z
- isHighlightableContentNode(com.intellij.ide.util.treeView.PresentableNodeDescriptor):Z
- setDelegate(java.lang.Object):V
pe:com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$State
- java.lang.Enum
- sf:HIDDEN:com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$State
- sf:UNKNOWN:com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$State
- sf:VISIBLE:com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$State
- s:valueOf(java.lang.String):com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$State
- s:values():com.intellij.ui.treeStructure.filtered.FilteringTreeStructure$State[]
c:com.intellij.ui.treeStructure.treetable.DefaultTreeTableExpander
- com.intellij.ide.DefaultTreeExpander
- <init>(com.intellij.ui.treeStructure.treetable.TreeTable):V
- p:isShowing(javax.swing.JTree):Z
c:com.intellij.ui.treeStructure.treetable.ListTreeTableModel
- javax.swing.tree.DefaultTreeModel
- com.intellij.ui.treeStructure.treetable.TreeTableModel
- <init>(javax.swing.tree.TreeNode,com.intellij.util.ui.ColumnInfo[]):V
- getChild(java.lang.Object,I):java.lang.Object
- getChildCount(java.lang.Object):I
- getColumnClass(I):java.lang.Class
- getColumnCount():I
- getColumnName(I):java.lang.String
- getValueAt(java.lang.Object,I):java.lang.Object
- isCellEditable(java.lang.Object,I):Z
- setTree(javax.swing.JTree):V
- setValueAt(java.lang.Object,java.lang.Object,I):V
c:com.intellij.ui.treeStructure.treetable.ListTreeTableModelOnColumns
- javax.swing.tree.DefaultTreeModel
- com.intellij.ui.treeStructure.treetable.TreeTableModel
- com.intellij.util.ui.SortableColumnModel
- <init>(javax.swing.tree.TreeNode,com.intellij.util.ui.ColumnInfo[]):V
- getChild(java.lang.Object,I):java.lang.Object
- getChildCount(java.lang.Object):I
- getColumnClass(I):java.lang.Class
- getColumnCount():I
- getColumnInfos():com.intellij.util.ui.ColumnInfo[]
- getColumnName(I):java.lang.String
- getColumns():com.intellij.util.ui.ColumnInfo[]
- getDefaultSortKey():javax.swing.RowSorter$SortKey
- getItems():java.util.List
- getRowValue(I):java.lang.Object
- getValueAt(java.lang.Object,I):java.lang.Object
- isCellEditable(java.lang.Object,I):Z
- isSortable():Z
- setColumns(com.intellij.util.ui.ColumnInfo[]):Z
- setSortable(Z):V
- setTree(javax.swing.JTree):V
- setValueAt(java.lang.Object,java.lang.Object,I):V
c:com.intellij.ui.treeStructure.treetable.TreeColumnInfo
- com.intellij.util.ui.ColumnInfo
- <init>(java.lang.String):V
- f:getColumnClass():java.lang.Class
- f:valueOf(java.lang.Object):java.lang.Object
c:com.intellij.ui.treeStructure.treetable.TreeTable
- com.intellij.ui.table.JBTable
- <init>(com.intellij.ui.treeStructure.treetable.TreeTableModel):V
- p:adapt(com.intellij.ui.treeStructure.treetable.TreeTableModel):com.intellij.ui.treeStructure.treetable.TreeTableModelAdapter
- addSelectedPath(javax.swing.tree.TreePath):V
- createTableRenderer(com.intellij.ui.treeStructure.treetable.TreeTableModel):com.intellij.ui.treeStructure.treetable.TreeTableCellRenderer
- editCellAt(I,I,java.util.EventObject):Z
- getEditingRow():I
- getTableModel():com.intellij.ui.treeStructure.treetable.TreeTableModel
- getTree():com.intellij.ui.treeStructure.treetable.TreeTableTree
- p:isTreeColumn(I):Z
- putTreeClientProperty(java.lang.Object,java.lang.Object):V
- removeSelectedPath(javax.swing.tree.TreePath):V
- setMinRowHeight(I):V
- setModel(com.intellij.ui.treeStructure.treetable.TreeTableModel):V
- setProcessCursorKeys(Z):V
- setRootVisible(Z):V
- setRowHeight(I):V
- setTableModel(com.intellij.ui.treeStructure.treetable.TreeTableModel):V
- setTreeCellRenderer(javax.swing.tree.TreeCellRenderer):V
- updateUI():V
c:com.intellij.ui.treeStructure.treetable.TreeTableCellEditor
- javax.swing.AbstractCellEditor
- javax.swing.table.TableCellEditor
- <init>(javax.swing.table.TableCellRenderer):V
- getCellEditorValue():java.lang.Object
- getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,Z,I,I):java.awt.Component
- isCellEditable(java.util.EventObject):Z
c:com.intellij.ui.treeStructure.treetable.TreeTableCellRenderer
- com.intellij.util.ui.ClientPropertyHolder
- javax.swing.table.TableCellRenderer
- <init>(com.intellij.ui.treeStructure.treetable.TreeTable,com.intellij.ui.treeStructure.treetable.TreeTableTree):V
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
- putClientProperty(java.lang.String,java.lang.Object):V
- putClientProperty(java.lang.String,java.lang.String):V
- setCellRenderer(javax.swing.tree.TreeCellRenderer):V
- setDefaultBorder(javax.swing.border.Border):V
- setRootVisible(Z):V
- setShowsRootHandles(Z):V
com.intellij.ui.treeStructure.treetable.TreeTableModel
- javax.swing.tree.TreeModel
- a:getColumnClass(I):java.lang.Class
- a:getColumnCount():I
- a:getColumnName(I):java.lang.String
- a:getValueAt(java.lang.Object,I):java.lang.Object
- a:isCellEditable(java.lang.Object,I):Z
- a:setTree(javax.swing.JTree):V
- a:setValueAt(java.lang.Object,java.lang.Object,I):V
c:com.intellij.ui.treeStructure.treetable.TreeTableModelAdapter
- javax.swing.table.AbstractTableModel
- <init>(com.intellij.ui.treeStructure.treetable.TreeTableModel,javax.swing.JTree,javax.swing.JTable):V
- p:delayedFireTableDataChanged():V
- fireTableDataChanged():V
- getColumnClass(I):java.lang.Class
- getColumnCount():I
- getColumnName(I):java.lang.String
- getRowCount():I
- getValueAt(I,I):java.lang.Object
- isCellEditable(I,I):Z
- p:nodeForRow(I):java.lang.Object
- setValueAt(java.lang.Object,I,I):V
c:com.intellij.ui.treeStructure.treetable.TreeTableTree
- com.intellij.ui.treeStructure.Tree
- <init>(javax.swing.tree.TreeModel,com.intellij.ui.treeStructure.treetable.TreeTable):V
- _processKeyEvent(java.awt.event.KeyEvent):V
- getOriginalCellRenderer():javax.swing.tree.TreeCellRenderer
- getPathBounds(javax.swing.tree.TreePath):java.awt.Rectangle
- p:getTreeColumnOffsetX():I
- getTreeTable():com.intellij.ui.treeStructure.treetable.TreeTable
- pf:isWideSelection():Z
- paint(java.awt.Graphics):V
- setBorder(javax.swing.border.Border):V
- setBounds(I,I,I,I):V
- setCellFocused(Z):V
- setCellRenderer(javax.swing.tree.TreeCellRenderer):V
- setRowHeight(I):V
- setTreeTableTreeBorder(javax.swing.border.Border):V
- setVisibleRow(I):V
- updateUI():V
com.intellij.ui.viewModel.extraction.ToolWindowViewModelListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:toolWindowChanged(java.lang.String):V
- a:toolWindowsChanged():V
f:com.intellij.util.ApplicationKt
- sf:getApplication():com.intellij.openapi.application.Application
c:com.intellij.util.ContentsUtil
- <init>():V
- s:addContent(com.intellij.ui.content.ContentManager,com.intellij.ui.content.Content,Z):V
- s:addOrReplaceContent(com.intellij.ui.content.ContentManager,com.intellij.ui.content.Content,Z):V
- s:closeContentTab(com.intellij.ui.content.ContentManager,com.intellij.ui.content.Content):V
f:com.intellij.util.EditSourceOnDoubleClickHandler
- sf:INSTANCE:com.intellij.util.EditSourceOnDoubleClickHandler
- sf:install(com.intellij.ui.treeStructure.treetable.TreeTable):V
- sf:install(javax.swing.JList):V
- sf:install(javax.swing.JList,java.lang.Runnable):V
- sf:install(javax.swing.JTable):V
- sf:install(javax.swing.JTree):V
- sf:install(javax.swing.JTree,java.lang.Runnable):V
- bs:install$default(javax.swing.JList,java.lang.Runnable,I,java.lang.Object):V
- bs:install$default(javax.swing.JTree,java.lang.Runnable,I,java.lang.Object):V
- sf:isExpandPreferable(javax.swing.JTree,javax.swing.tree.TreePath):Z
- sf:isToggleEvent(javax.swing.JTree,java.awt.event.MouseEvent):Z
c:com.intellij.util.EditSourceOnDoubleClickHandler$TreeMouseListener
- com.intellij.ui.DoubleClickListener
- <init>(javax.swing.JTree):V
- <init>(javax.swing.JTree,java.lang.Runnable):V
- b:<init>(javax.swing.JTree,java.lang.Runnable,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- installOn(java.awt.Component,Z):V
- onDoubleClick(java.awt.event.MouseEvent):Z
- p:processDoubleClick(java.awt.event.MouseEvent,com.intellij.openapi.actionSystem.DataContext,javax.swing.tree.TreePath):V
- uninstall(java.awt.Component):V
f:com.intellij.util.EditSourceOnEnterKeyHandler
- <init>():V
- s:install(javax.swing.JComponent):V
- s:install(javax.swing.JComponent,java.lang.Runnable):V
- s:install(javax.swing.JTree):V
a:com.intellij.util.Icons
- com.intellij.util.PlatformIcons
- <init>():V
f:com.intellij.util.MixinEP
- com.intellij.serviceContainer.LazyExtensionInstance
- com.intellij.openapi.extensions.PluginAware
- implementationClass:java.lang.String
- key:java.lang.String
- <init>():V
- getInstance():java.lang.Object
- getKey():java.lang.Class
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
f:com.intellij.util.OpenSourceUtil
- s:navigate(Z,Z,java.lang.Iterable):Z
- s:navigate(Z,Z,com.intellij.pom.Navigatable[]):V
- s:navigate(Z,com.intellij.pom.Navigatable[]):V
- s:navigate(com.intellij.pom.Navigatable[]):V
- s:navigateToSource(Z,Z,com.intellij.pom.Navigatable):Z
- s:navigateToSource(Z,Z,java.lang.Iterable):Z
- s:openSourcesFrom(com.intellij.openapi.actionSystem.DataContext,Z):V
c:com.intellij.util.animation.components.BezierPainter
- javax.swing.JComponent
- <init>(D,D,D,D):V
- f:getEasing():com.intellij.util.animation.Easing
- f:getFirstControlPoint():java.awt.geom.Point2D
- f:getSecondControlPoint():java.awt.geom.Point2D
- p:paintComponent(java.awt.Graphics):V
- f:setFirstControlPoint(java.awt.geom.Point2D):V
- f:setSecondControlPoint(java.awt.geom.Point2D):V
a:com.intellij.util.config.AbstractProperty
- sf:NAME_COMPARATOR:java.util.Comparator
- <init>():V
- areEqual(java.lang.Object,java.lang.Object):Z
- f:cast(java.lang.Object):java.lang.Object
- a:copy(java.lang.Object):java.lang.Object
- get(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer):java.lang.Object
- a:getDefault(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer):java.lang.Object
- a:getName():java.lang.String
- set(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,java.lang.Object):V
a:com.intellij.util.config.AbstractProperty$AbstractPropertyContainer
- sf:EMPTY:com.intellij.util.config.AbstractProperty$AbstractPropertyContainer
- <init>():V
- f:areValueEqual(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,com.intellij.util.config.AbstractProperty[]):Z
- f:copyFrom(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,com.intellij.util.config.AbstractProperty[]):V
- pf:delegateGet(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,com.intellij.util.config.AbstractProperty):java.lang.Object
- pf:delegateSet(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,com.intellij.util.config.AbstractProperty,java.lang.Object):V
- pa:getValueOf(com.intellij.util.config.AbstractProperty):java.lang.Object
- a:hasProperty(com.intellij.util.config.AbstractProperty):Z
- pa:setValueOf(com.intellij.util.config.AbstractProperty,java.lang.Object):V
c:com.intellij.util.config.BooleanProperty
- com.intellij.util.config.ValueProperty
- <init>(java.lang.String,Z):V
- primSet(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,Z):V
- value(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer):Z
c:com.intellij.util.config.DumbAwareToggleBooleanProperty
- com.intellij.util.config.ToggleBooleanProperty
- com.intellij.openapi.project.DumbAware
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,com.intellij.util.config.BooleanProperty):V
c:com.intellij.util.config.DumbAwareToggleInvertedBooleanProperty
- com.intellij.util.config.ToggleInvertedBooleanProperty
- com.intellij.openapi.project.DumbAware
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,com.intellij.util.config.BooleanProperty):V
f:com.intellij.util.config.ExternalizablePropertyContainer
- com.intellij.util.config.AbstractProperty$AbstractPropertyContainer
- <init>():V
- hasProperty(com.intellij.util.config.AbstractProperty):Z
- readExternal(org.jdom.Element):V
- registerProperty(com.intellij.util.config.AbstractProperty,com.intellij.util.config.Externalizer):V
- registerProperty(com.intellij.util.config.ListProperty,java.lang.String,com.intellij.util.config.Externalizer):V
- rememberKey(com.intellij.util.config.AbstractProperty):V
- writeExternal(org.jdom.Element):V
com.intellij.util.config.Externalizer
- sf:BOOLEAN:com.intellij.util.config.Externalizer
- sf:INTEGER:com.intellij.util.config.Externalizer
- sf:STORAGE:com.intellij.util.config.Externalizer
- sf:STRING:com.intellij.util.config.Externalizer
- sf:VALUE_ATTRIBUTE:java.lang.String
- a:readValue(org.jdom.Element):java.lang.Object
- a:writeValue(org.jdom.Element,java.lang.Object):V
a:com.intellij.util.config.Externalizer$BaseExternalizer
- com.intellij.util.config.Externalizer
- <init>():V
- writeValue(org.jdom.Element,java.lang.Object):V
f:com.intellij.util.config.Externalizer$FactoryBased
- com.intellij.util.config.Externalizer
- <init>(com.intellij.openapi.util.Factory):V
- readValue(org.jdom.Element):com.intellij.openapi.util.JDOMExternalizable
- writeValue(org.jdom.Element,com.intellij.openapi.util.JDOMExternalizable):V
com.intellij.util.config.Externalizer$SkippableValue
f:com.intellij.util.config.Externalizer$StorageExternalizer
- com.intellij.util.config.Externalizer
- <init>():V
- readValue(org.jdom.Element):com.intellij.util.config.Storage
- writeValue(org.jdom.Element,com.intellij.util.config.Storage):V
f:com.intellij.util.config.IntProperty
- com.intellij.util.config.ValueProperty
- <init>(java.lang.String,I):V
- primSet(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,I):V
- value(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer):I
f:com.intellij.util.config.ListProperty
- com.intellij.util.config.AbstractProperty
- <init>(java.lang.String):V
- copy(java.util.List):java.util.List
- s:create(java.lang.String):com.intellij.util.config.ListProperty
- getDefault(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer):java.util.List
- getIterator(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer):java.util.Iterator
- getModifiableList(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer):java.util.ArrayList
- getName():java.lang.String
com.intellij.util.config.Storage
- a:get(java.lang.String):java.lang.String
- a:put(java.lang.String,java.lang.String):V
f:com.intellij.util.config.Storage$MapStorage
- com.intellij.util.config.Storage
- <init>():V
- get(java.lang.String):java.lang.String
- getKeys():java.util.Iterator
- put(java.lang.String,java.lang.String):V
f:com.intellij.util.config.Storage$PropertiesComponentStorage
- com.intellij.util.config.Storage
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.ide.util.PropertiesComponent):V
- get(java.lang.String):java.lang.String
- put(java.lang.String,java.lang.String):V
f:com.intellij.util.config.StorageProperty
- com.intellij.util.config.AbstractProperty
- <init>(java.lang.String):V
- copy(com.intellij.util.config.Storage):com.intellij.util.config.Storage
- getDefault(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer):com.intellij.util.config.Storage
- getName():java.lang.String
c:com.intellij.util.config.StringProperty
- com.intellij.util.config.ValueProperty
- <init>(java.lang.String,java.lang.String):V
- areEqual(java.lang.String,java.lang.String):Z
c:com.intellij.util.config.ToggleBooleanProperty
- com.intellij.openapi.actionSystem.ToggleAction
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,com.intellij.util.config.BooleanProperty):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getProperties():com.intellij.util.config.AbstractProperty$AbstractPropertyContainer
- p:getProperty():com.intellij.util.config.AbstractProperty
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
a:com.intellij.util.config.ToggleBooleanProperty$Disablable
- com.intellij.util.config.ToggleBooleanProperty
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,com.intellij.util.config.BooleanProperty):V
- pa:isEnabled():Z
- pa:isVisible():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.util.config.ToggleInvertedBooleanProperty
- com.intellij.util.config.ToggleBooleanProperty
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.util.config.AbstractProperty$AbstractPropertyContainer,com.intellij.util.config.BooleanProperty):V
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.util.config.ValueProperty
- com.intellij.util.config.AbstractProperty
- <init>(java.lang.String,java.lang.Object):V
- copy(java.lang.Object):java.lang.Object
- getDefault(com.intellij.util.config.AbstractProperty$AbstractPropertyContainer):java.lang.Object
- getName():java.lang.String
c:com.intellij.util.net.AuthenticationDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(java.awt.Component,java.lang.String,java.lang.String,java.lang.String,java.lang.String,Z):V
- p:createCenterPanel():javax.swing.JComponent
- getPanel():com.intellij.util.net.AuthenticationPanel
- getPreferredFocusedComponent():javax.swing.JComponent
c:com.intellij.util.net.AuthenticationPanel
- javax.swing.JPanel
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean):V
- getLogin():java.lang.String
- getPassword():C[]
- getPreferredFocusedComponent():javax.swing.JComponent
- isRememberPassword():Z
e:com.intellij.util.net.HTTPMethod
- java.lang.Enum
- sf:DELETE:com.intellij.util.net.HTTPMethod
- sf:GET:com.intellij.util.net.HTTPMethod
- sf:HEAD:com.intellij.util.net.HTTPMethod
- sf:OPTIONS:com.intellij.util.net.HTTPMethod
- sf:PATCH:com.intellij.util.net.HTTPMethod
- sf:POST:com.intellij.util.net.HTTPMethod
- sf:PUT:com.intellij.util.net.HTTPMethod
- sf:TRACE:com.intellij.util.net.HTTPMethod
- s:valueOf(java.lang.String):com.intellij.util.net.HTTPMethod
- s:values():com.intellij.util.net.HTTPMethod[]
c:com.intellij.util.net.HttpConfigurable
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- AUTHENTICATION_CANCELLED:Z
- CHECK_CONNECTION_URL:java.lang.String
- KEEP_PROXY_PASSWORD:Z
- LAST_ERROR:java.lang.String
- PAC_URL:java.lang.String
- PROXY_AUTHENTICATION:Z
- PROXY_EXCEPTIONS:java.lang.String
- PROXY_HOST:java.lang.String
- PROXY_PORT:I
- PROXY_TYPE_IS_SOCKS:Z
- USE_HTTP_PROXY:Z
- USE_PAC_URL:Z
- USE_PROXY_PAC:Z
- <init>():V
- dispose():V
- s:editConfigurable(javax.swing.JComponent):Z
- getGenericPassword(java.lang.String,I):java.net.PasswordAuthentication
- getGenericPromptedAuthentication(java.lang.String,java.lang.String,java.lang.String,I,Z):java.net.PasswordAuthentication
- s:getInstance():com.intellij.util.net.HttpConfigurable
- getJvmProperties(Z,java.net.URI):java.util.List
- getOnlyBySettingsSelector():java.net.ProxySelector
- getPlainProxyPassword():java.lang.String
- getPromptedAuthentication(java.lang.String,java.lang.String):java.net.PasswordAuthentication
- getProxyLogin():java.lang.String
- getState():com.intellij.util.net.HttpConfigurable
- initializeComponent():V
- isGenericPasswordCanceled(java.lang.String,I):Z
- isHttpProxyEnabledForUrl(java.lang.String):Z
- isProxyException(java.net.URI):Z
- s:isRealProxy(java.net.Proxy):Z
- loadState(com.intellij.util.net.HttpConfigurable):V
- openConnection(java.lang.String):java.net.URLConnection
- openHttpConnection(java.lang.String):java.net.HttpURLConnection
- prepareURL(java.lang.String):V
- putGenericPassword(java.lang.String,I,java.net.PasswordAuthentication,Z):V
- readExternal(org.jdom.Element):V
- removeGeneric(com.intellij.util.proxy.CommonProxy$HostInfo):V
- setPlainProxyPassword(java.lang.String):V
- setProxyLogin(java.lang.String):V
- writeExternal(org.jdom.Element):V
f:com.intellij.util.net.HttpConnectionUtils
- sf:INSTANCE:com.intellij.util.net.HttpConnectionUtils
- sf:openConnection(java.lang.String):java.net.URLConnection
- sf:openHttpConnection(java.lang.String):java.net.HttpURLConnection
- sf:prepareUrl(java.lang.String):V
c:com.intellij.util.net.HttpProxyConfigurable
- com.intellij.openapi.options.ConfigurableBase
- com.intellij.openapi.options.Configurable$NoMargin
- <init>():V
- <init>(com.intellij.util.net.HttpConfigurable):V
- <init>(com.intellij.util.net.ProxySettings):V
- p:createUi():com.intellij.openapi.options.ConfigurableUi
- p:getSettings():com.intellij.util.net.ProxySettings
f:com.intellij.util.net.IOExceptionDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(java.lang.String,java.lang.String):V
- s:showErrorDialog(java.lang.String,java.lang.String):Z
f:com.intellij.util.net.IdeProxyAuthenticator
- java.net.Authenticator
- <init>(com.intellij.util.net.ProxyAuthentication):V
f:com.intellij.util.net.IdeProxySelector
- java.net.ProxySelector
- sf:Companion:com.intellij.util.net.IdeProxySelector$Companion
- <init>(com.intellij.util.net.ProxyConfigurationProvider):V
- connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException):V
- select(java.net.URI):java.util.List
f:com.intellij.util.net.IdeProxySelector$Companion
f:com.intellij.util.net.IdeaWideAuthenticator
- com.intellij.util.proxy.NonStaticAuthenticator
- <init>(com.intellij.util.net.HttpConfigurable):V
- getPasswordAuthentication():java.net.PasswordAuthentication
f:com.intellij.util.net.IdeaWideProxySelector
- java.net.ProxySelector
- <init>(com.intellij.util.net.HttpConfigurable):V
- connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException):V
- select(java.net.URI):java.util.List
com.intellij.util.net.JdkProxyCustomizer
- sf:Companion:com.intellij.util.net.JdkProxyCustomizer$Companion
- a:customizeAuthenticator(java.net.Authenticator):com.intellij.openapi.application.AccessToken
- a:customizeProxySelector(java.net.ProxySelector):com.intellij.openapi.application.AccessToken
- s:getInstance():com.intellij.util.net.JdkProxyCustomizer
f:com.intellij.util.net.JdkProxyCustomizer$Companion
- f:getInstance():com.intellij.util.net.JdkProxyCustomizer
com.intellij.util.net.JdkProxyProvider
- sf:Companion:com.intellij.util.net.JdkProxyProvider$Companion
- s:ensureDefault():V
- a:getAuthenticator():java.net.Authenticator
- s:getInstance():com.intellij.util.net.JdkProxyProvider
- a:getProxySelector():java.net.ProxySelector
f:com.intellij.util.net.JdkProxyProvider$Companion
- f:ensureDefault():V
- f:getInstance():com.intellij.util.net.JdkProxyProvider
com.intellij.util.net.ProxyAuthentication
- sf:Companion:com.intellij.util.net.ProxyAuthentication$Companion
- a:enablePromptedAuthentication(java.lang.String,I):V
- s:getInstance():com.intellij.util.net.ProxyAuthentication
- a:getKnownAuthentication(java.lang.String,I):com.intellij.credentialStore.Credentials
- a:getPromptedAuthentication(java.lang.String,java.lang.String,I):com.intellij.credentialStore.Credentials
- a:isPromptedAuthenticationCancelled(java.lang.String,I):Z
f:com.intellij.util.net.ProxyAuthentication$Companion
- f:getInstance():com.intellij.util.net.ProxyAuthentication
f:com.intellij.util.net.ProxyAuthenticationKt
- sf:getOrPromptAuthentication(com.intellij.util.net.ProxyAuthentication,java.lang.String,java.lang.String,I):com.intellij.credentialStore.Credentials
com.intellij.util.net.ProxyConfiguration
- sf:Companion:com.intellij.util.net.ProxyConfiguration$Companion
- s:buildProxyExceptionsMatcher(java.lang.String):java.util.function.Predicate
- s:getAutodetect():com.intellij.util.net.ProxyConfiguration$AutoDetectProxy
- s:getDirect():com.intellij.util.net.ProxyConfiguration$DirectProxy
- s:proxy(com.intellij.util.net.ProxyConfiguration$ProxyProtocol,java.lang.String,I,java.lang.String):com.intellij.util.net.ProxyConfiguration$StaticProxyConfiguration
- s:proxyAutoConfiguration(java.net.URL):com.intellij.util.net.ProxyConfiguration$ProxyAutoConfiguration
com.intellij.util.net.ProxyConfiguration$AutoDetectProxy
- com.intellij.util.net.ProxyConfiguration
f:com.intellij.util.net.ProxyConfiguration$Companion
- f:buildProxyExceptionsMatcher(java.lang.String):java.util.function.Predicate
- f:getAutodetect():com.intellij.util.net.ProxyConfiguration$AutoDetectProxy
- f:getDirect():com.intellij.util.net.ProxyConfiguration$DirectProxy
- f:proxy(com.intellij.util.net.ProxyConfiguration$ProxyProtocol,java.lang.String,I,java.lang.String):com.intellij.util.net.ProxyConfiguration$StaticProxyConfiguration
- bs:proxy$default(com.intellij.util.net.ProxyConfiguration$Companion,com.intellij.util.net.ProxyConfiguration$ProxyProtocol,java.lang.String,I,java.lang.String,I,java.lang.Object):com.intellij.util.net.ProxyConfiguration$StaticProxyConfiguration
- f:proxyAutoConfiguration(java.net.URL):com.intellij.util.net.ProxyConfiguration$ProxyAutoConfiguration
com.intellij.util.net.ProxyConfiguration$DirectProxy
- com.intellij.util.net.ProxyConfiguration
com.intellij.util.net.ProxyConfiguration$ProxyAutoConfiguration
- com.intellij.util.net.ProxyConfiguration
- a:getPacUrl():java.net.URL
e:com.intellij.util.net.ProxyConfiguration$ProxyProtocol
- java.lang.Enum
- sf:HTTP:com.intellij.util.net.ProxyConfiguration$ProxyProtocol
- sf:SOCKS:com.intellij.util.net.ProxyConfiguration$ProxyProtocol
- f:getDefaultPort():I
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.util.net.ProxyConfiguration$ProxyProtocol
- s:values():com.intellij.util.net.ProxyConfiguration$ProxyProtocol[]
com.intellij.util.net.ProxyConfiguration$StaticProxyConfiguration
- com.intellij.util.net.ProxyConfiguration
- a:getExceptions():java.lang.String
- a:getHost():java.lang.String
- a:getPort():I
- a:getProtocol():com.intellij.util.net.ProxyConfiguration$ProxyProtocol
com.intellij.util.net.ProxyConfigurationProvider
- a:getProxyConfiguration():com.intellij.util.net.ProxyConfiguration
com.intellij.util.net.ProxyCredentialProvider
- a:getCredentials(java.lang.String,I):com.intellij.credentialStore.Credentials
com.intellij.util.net.ProxyCredentialStore
- sf:Companion:com.intellij.util.net.ProxyCredentialStore$Companion
- a:areCredentialsRemembered(java.lang.String,I):Z
- a:clearAllCredentials():V
- a:clearTransientCredentials():V
- a:getCredentials(java.lang.String,I):com.intellij.credentialStore.Credentials
- s:getInstance():com.intellij.util.net.ProxyCredentialStore
- a:setCredentials(java.lang.String,I,com.intellij.credentialStore.Credentials,Z):V
f:com.intellij.util.net.ProxyCredentialStore$Companion
- f:getInstance():com.intellij.util.net.ProxyCredentialStore
f:com.intellij.util.net.ProxyCredentialStoreKt
- sf:asProxyCredentialProvider(com.intellij.util.net.ProxyCredentialStore):com.intellij.util.net.ProxyCredentialProvider
com.intellij.util.net.ProxySettings
- sf:Companion:com.intellij.util.net.ProxySettings$Companion
- s:getDefaultProxyConfiguration():com.intellij.util.net.ProxyConfiguration
- s:getInstance():com.intellij.util.net.ProxySettings
- a:getProxyConfiguration():com.intellij.util.net.ProxyConfiguration
f:com.intellij.util.net.ProxySettings$Companion
- f:getDefaultProxyConfiguration():com.intellij.util.net.ProxyConfiguration
- f:getInstance():com.intellij.util.net.ProxySettings
f:com.intellij.util.net.ProxySettingsKt
- sf:asConfigurationProvider(com.intellij.util.net.ProxySettings):com.intellij.util.net.ProxyConfigurationProvider
com.intellij.util.net.ProxySettingsOverrideProvider
- sf:Companion:com.intellij.util.net.ProxySettingsOverrideProvider$Companion
- s:areProxySettingsOverridden():Z
- a:getProxyConfigurationProvider():com.intellij.util.net.ProxyConfigurationProvider
- a:getShouldUserSettingsBeOverriden():Z
f:com.intellij.util.net.ProxySettingsOverrideProvider$Companion
- f:areProxySettingsOverridden():Z
f:com.intellij.util.net.ProxyUtils
- sf:NO_PROXY_LIST:java.util.List
- sf:asJavaProxy(com.intellij.util.net.ProxyConfiguration$StaticProxyConfiguration):java.net.Proxy
- sf:asJvmProperties(com.intellij.util.net.ProxyConfiguration$StaticProxyConfiguration,com.intellij.util.net.ProxyCredentialProvider):java.util.Map
- sf:asJvmProperties(java.net.Proxy):java.util.Map
- sf:editConfigurable(com.intellij.util.net.ProxySettings,javax.swing.JComponent):Z
- sf:getApplicableProxiesAsJvmProperties(java.net.URI,com.intellij.util.net.ProxyCredentialProvider,java.net.ProxySelector):java.util.List
- bs:getApplicableProxiesAsJvmProperties$default(java.net.URI,com.intellij.util.net.ProxyCredentialProvider,java.net.ProxySelector,I,java.lang.Object):java.util.List
- sf:getHostNameReliably(java.lang.String,java.net.InetAddress,java.net.URL):java.lang.String
- sf:getStaticProxyCredentials(com.intellij.util.net.ProxySettings,com.intellij.util.net.ProxyCredentialProvider):com.intellij.credentialStore.Credentials
- sf:isRealProxy(java.net.Proxy):Z
- sf:setStaticProxyCredentials(com.intellij.util.net.ProxySettings,com.intellij.util.net.ProxyCredentialStore,com.intellij.credentialStore.Credentials,Z):V
c:com.intellij.util.net.ssl.CertificateInfoPanel
- javax.swing.JPanel
- <init>(java.security.cert.X509Certificate):V
- s:formatHex(java.lang.String,Z):java.lang.String
- getCertificate():java.security.cert.X509Certificate
com.intellij.util.net.ssl.CertificateListener
- java.util.EventListener
- a:certificateAdded(java.security.cert.X509Certificate):V
- a:certificateRemoved(java.security.cert.X509Certificate):V
f:com.intellij.util.net.ssl.CertificateManager
- com.intellij.openapi.components.PersistentStateComponent
- sf:COMPONENT_NAME:java.lang.String
- sf:Companion:com.intellij.util.net.ssl.CertificateManager$Companion
- sf:DEFAULT_PASSWORD:java.lang.String
- sf:DEFAULT_PATH:java.lang.String
- sf:DIALOG_VISIBILITY_TIMEOUT:J
- <init>(kotlinx.coroutines.CoroutineScope):V
- f:getCacertsPath():java.lang.String
- f:getCustomTrustManager():com.intellij.util.net.ssl.ConfirmingTrustManager$MutableTrustManager
- sf:getDefaultKeyManagers():javax.net.ssl.KeyManager[]
- sf:getInstance():com.intellij.util.net.ssl.CertificateManager
- f:getPassword():java.lang.String
- f:getSslContext():javax.net.ssl.SSLContext
- getState():com.intellij.util.net.ssl.CertificateManager$Config
- sf:getSystemSslContext():javax.net.ssl.SSLContext
- f:getTrustManager():com.intellij.util.net.ssl.ConfirmingTrustManager
- loadState(com.intellij.util.net.ssl.CertificateManager$Config):V
f:com.intellij.util.net.ssl.CertificateManager$Companion
- f:getDefaultKeyManagers():javax.net.ssl.KeyManager[]
- f:getInstance():com.intellij.util.net.ssl.CertificateManager
- f:getSystemSslContext():javax.net.ssl.SSLContext
- f:showAcceptDialog(java.util.concurrent.Callable):Z
f:com.intellij.util.net.ssl.CertificateManager$Config
- ACCEPT_AUTOMATICALLY:Z
- <init>():V
- <init>(Z):V
- b:<init>(Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():Z
- f:copy(Z):com.intellij.util.net.ssl.CertificateManager$Config
- bs:copy$default(com.intellij.util.net.ssl.CertificateManager$Config,Z,I,java.lang.Object):com.intellij.util.net.ssl.CertificateManager$Config
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.util.net.ssl.CertificateUtil
- sf:JKS:java.lang.String
- sf:PKCS12:java.lang.String
- sf:PKIX:java.lang.String
- sf:TLS:java.lang.String
- sf:X509:java.lang.String
- s:getCommonName(java.security.cert.X509Certificate):java.lang.String
- s:loadX509Certificate(java.lang.String):java.security.cert.X509Certificate
c:com.intellij.util.net.ssl.CertificateWarningDialog
- com.intellij.openapi.ui.DialogWrapper
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(java.security.cert.X509Certificate,java.lang.String,java.lang.String,java.lang.String):V
- p:createCenterPanel():javax.swing.JComponent
- s:createExpiredCertificateWarning(java.security.cert.X509Certificate):com.intellij.util.net.ssl.CertificateWarningDialog
- s:createUntrustedCertificateWarning(java.security.cert.X509Certificate):com.intellij.util.net.ssl.CertificateWarningDialog
- s:createUntrustedCertificateWarning(java.security.cert.X509Certificate,java.lang.String,java.lang.String):com.intellij.util.net.ssl.CertificateWarningDialog
f:com.intellij.util.net.ssl.CertificateWrapper
- sf:NOT_AVAILABLE:java.lang.String
- <init>(java.security.cert.X509Certificate):V
- equals(java.lang.Object):Z
- getCertificate():java.security.cert.X509Certificate
- getIssuerField(com.intellij.util.net.ssl.CertificateWrapper$CommonField):java.lang.String
- getIssuerFields():java.util.Map
- getIssuerX500Principal():javax.security.auth.x500.X500Principal
- getNotAfter():java.util.Date
- getNotBefore():java.util.Date
- getSerialNumber():java.lang.String
- getSha1Fingerprint():java.lang.String
- getSha256Fingerprint():java.lang.String
- getSubjectField(com.intellij.util.net.ssl.CertificateWrapper$CommonField):java.lang.String
- getSubjectFields():java.util.Map
- getSubjectX500Principal():javax.security.auth.x500.X500Principal
- getVersion():I
- hashCode():I
- isExpired():Z
- isNotYetValid():Z
- isSelfSigned():Z
- isValid():Z
e:com.intellij.util.net.ssl.CertificateWrapper$CommonField
- java.lang.Enum
- sf:COMMON_NAME:com.intellij.util.net.ssl.CertificateWrapper$CommonField
- sf:COUNTRY:com.intellij.util.net.ssl.CertificateWrapper$CommonField
- sf:LOCATION:com.intellij.util.net.ssl.CertificateWrapper$CommonField
- sf:ORGANIZATION:com.intellij.util.net.ssl.CertificateWrapper$CommonField
- sf:ORGANIZATION_UNIT:com.intellij.util.net.ssl.CertificateWrapper$CommonField
- sf:STATE:com.intellij.util.net.ssl.CertificateWrapper$CommonField
- getLongName():java.lang.String
- getShortName():java.lang.String
- s:valueOf(java.lang.String):com.intellij.util.net.ssl.CertificateWrapper$CommonField
- s:values():com.intellij.util.net.ssl.CertificateWrapper$CommonField[]
a:com.intellij.util.net.ssl.ClientOnlyTrustManager
- javax.net.ssl.X509ExtendedTrustManager
- <init>():V
- checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String):V
- checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket):V
- checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine):V
- checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket):V
- checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine):V
f:com.intellij.util.net.ssl.ConfirmingTrustManager
- com.intellij.util.net.ssl.ClientOnlyTrustManager
- f:myUntrustedCertificateStrategy:java.lang.ThreadLocal
- checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String):V
- checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,com.intellij.util.net.ssl.ConfirmingTrustManager$CertificateConfirmationParameters):V
- checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket):V
- checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine):V
- checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,Z,Z):V
- s:createForStorage(java.lang.String,java.lang.String):com.intellij.util.net.ssl.ConfirmingTrustManager
- getAcceptedIssuers():java.security.cert.X509Certificate[]
- getCustomManager():com.intellij.util.net.ssl.ConfirmingTrustManager$MutableTrustManager
f:com.intellij.util.net.ssl.ConfirmingTrustManager$CertificateConfirmationParameters
- s:askConfirmation(Z,java.lang.String,java.lang.Runnable):com.intellij.util.net.ssl.ConfirmingTrustManager$CertificateConfirmationParameters
- s:doNotAskConfirmation():com.intellij.util.net.ssl.ConfirmingTrustManager$CertificateConfirmationParameters
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.util.net.ssl.ConfirmingTrustManager$MutableTrustManager
- com.intellij.util.net.ssl.ClientOnlyTrustManager
- addCertificate(java.lang.String):Z
- addCertificate(java.security.cert.X509Certificate):Z
- addListener(com.intellij.util.net.ssl.CertificateListener):V
- checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String):V
- containsCertificate(java.lang.String):Z
- getAcceptedIssuers():java.security.cert.X509Certificate[]
- getAliases():java.util.List
- getCertificate(java.lang.String):java.security.cert.X509Certificate
- getCertificates():java.util.List
- removeCertificate(java.lang.String):Z
- removeCertificate(java.security.cert.X509Certificate):Z
- removeListener(com.intellij.util.net.ssl.CertificateListener):V
f:com.intellij.util.net.ssl.DefaultInitialUntrustedCertificateStrategyProvider
- com.intellij.util.net.ssl.InitialUntrustedCertificateStrategyProvider
- <init>():V
- getStrategy():com.intellij.util.net.ssl.UntrustedCertificateStrategyWithReason
com.intellij.util.net.ssl.InitialUntrustedCertificateStrategyProvider
- a:getStrategy():com.intellij.util.net.ssl.UntrustedCertificateStrategyWithReason
e:com.intellij.util.net.ssl.UntrustedCertificateStrategy
- java.lang.Enum
- sf:ASK_USER:com.intellij.util.net.ssl.UntrustedCertificateStrategy
- sf:REJECT:com.intellij.util.net.ssl.UntrustedCertificateStrategy
- s:valueOf(java.lang.String):com.intellij.util.net.ssl.UntrustedCertificateStrategy
- s:values():com.intellij.util.net.ssl.UntrustedCertificateStrategy[]
f:com.intellij.util.net.ssl.UntrustedCertificateStrategyWithReason
- <init>(com.intellij.util.net.ssl.UntrustedCertificateStrategy,java.lang.String):V
- f:component1():com.intellij.util.net.ssl.UntrustedCertificateStrategy
- f:component2():java.lang.String
- f:copy(com.intellij.util.net.ssl.UntrustedCertificateStrategy,java.lang.String):com.intellij.util.net.ssl.UntrustedCertificateStrategyWithReason
- bs:copy$default(com.intellij.util.net.ssl.UntrustedCertificateStrategyWithReason,com.intellij.util.net.ssl.UntrustedCertificateStrategy,java.lang.String,I,java.lang.Object):com.intellij.util.net.ssl.UntrustedCertificateStrategyWithReason
- equals(java.lang.Object):Z
- f:getReason():java.lang.String
- f:getStrategy():com.intellij.util.net.ssl.UntrustedCertificateStrategy
- hashCode():I
f:com.intellij.util.text.DateFormatUtil
- sf:DAY:J
- sf:DAY_FACTOR:J
- sf:HOUR:J
- sf:MINUTE:J
- sf:MONTH:J
- sf:SECOND:J
- sf:TIME_SHORT_12H:java.lang.String
- sf:TIME_SHORT_24H:java.lang.String
- sf:WEEK:J
- sf:YEAR:J
- s:formatAboutDialogDate(java.util.Date):java.lang.String
- s:formatBetweenDates(J,J):java.lang.String
- s:formatDate(J):java.lang.String
- s:formatDate(java.util.Date):java.lang.String
- s:formatDateTime(J):java.lang.String
- s:formatDateTime(java.util.Date):java.lang.String
- s:formatFrequency(J):java.lang.String
- s:formatPrettyDate(J):java.lang.String
- s:formatPrettyDate(java.util.Date):java.lang.String
- s:formatPrettyDateTime(J):java.lang.String
- s:formatPrettyDateTime(java.util.Date):java.lang.String
- s:formatTime(J):java.lang.String
- s:formatTime(java.util.Date):java.lang.String
- s:formatTimeWithSeconds(J):java.lang.String
- s:formatTimeWithSeconds(java.util.Date):java.lang.String
- s:getDateFormat():com.intellij.util.text.SyncDateFormat
- s:getDateTimeFormat():com.intellij.util.text.SyncDateFormat
- s:getDifferenceInDays(java.util.Date,java.util.Date):J
- s:getSampleDateTime():java.util.Date
- s:toZoned(J):java.time.ZonedDateTime
- s:toZoned(java.util.Date):java.time.ZonedDateTime
c:com.intellij.util.text.DefaultJBDateTimeFormatter
- com.intellij.util.text.JBDateTimeFormatter
- <init>():V
f:com.intellij.util.text.JBDateFormat
- <init>():V
- s:getFormatter():com.intellij.util.text.JBDateTimeFormatter
a:com.intellij.util.text.JBDateTimeFormatter
- <init>():V
- formatDate(J):java.lang.String
- formatDate(java.util.Date):java.lang.String
- formatDateTime(J):java.lang.String
- formatDateTime(java.util.Date):java.lang.String
- formatPrettyDate(J):java.lang.String
- formatPrettyDate(java.util.Date):java.lang.String
- formatPrettyDateTime(J):java.lang.String
- formatPrettyDateTime(java.util.Date):java.lang.String
- formatTime(J):java.lang.String
- formatTime(java.util.Date):java.lang.String
- formatTimeWithSeconds(J):java.lang.String
- formatTimeWithSeconds(java.util.Date):java.lang.String
f:com.intellij.util.text.SyncDateFormat
- <init>(java.text.DateFormat):V
- format(J):java.lang.String
- format(java.util.Date):java.lang.String
- getDelegate():java.text.DateFormat
- parse(java.lang.String):java.util.Date
- toPattern():java.lang.String
c:com.intellij.util.ui.AnimatedIcon
- javax.swing.JComponent
- com.intellij.openapi.Disposable
- pf:animator:com.intellij.util.ui.Animator
- pf:passiveIcon:javax.swing.Icon
- <init>(java.lang.String,javax.swing.Icon[],javax.swing.Icon,I):V
- <init>(java.lang.String,javax.swing.Icon[],javax.swing.Icon,I,kotlinx.coroutines.CoroutineScope):V
- p:calcPreferredSize():java.awt.Dimension
- dispose():V
- getMaximumSize():java.awt.Dimension
- getMinimumSize():java.awt.Dimension
- p:getPassiveIcon():javax.swing.Icon
- getPreferredSize():java.awt.Dimension
- isRunning():Z
- p:paintComponent(java.awt.Graphics):V
- p:paintIcon(java.awt.Graphics,javax.swing.Icon,I,I):V
- resume():V
- setPaintPassiveIcon(Z):V
- suspend():V
- updateUI():V
a:com.intellij.util.ui.Animator
- pf:isForward:Z
- <init>(java.lang.String,I,I,Z):V
- <init>(java.lang.String,I,I,Z,Z):V
- <init>(java.lang.String,I,I,Z,Z,kotlinx.coroutines.CoroutineScope):V
- b:<init>(java.lang.String,I,I,Z,Z,kotlinx.coroutines.CoroutineScope,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- dispose():V
- f:isDisposed():Z
- f:isForward():Z
- f:isRunning():Z
- p:paintCycleEnd():V
- a:paintNow(I,I,I):V
- f:reset():V
- resume():V
- f:suspend():V
c:com.intellij.util.ui.AsyncProcessIcon
- com.intellij.util.ui.AnimatedIcon
- sf:COUNT:I
- sf:CYCLE_LENGTH:I
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon[],javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon[],javax.swing.Icon,kotlinx.coroutines.CoroutineScope):V
- <init>(kotlinx.coroutines.CoroutineScope):V
- p:calcPreferredSize():java.awt.Dimension
- p:calculateBounds(javax.swing.JComponent):java.awt.Rectangle
- s:createBig(java.lang.String):com.intellij.util.ui.AnimatedIcon
- s:createBig(kotlinx.coroutines.CoroutineScope):com.intellij.util.ui.AnimatedIcon
- isDisposed():Z
- updateLocation(javax.swing.JComponent):V
c:com.intellij.util.ui.AsyncProcessIcon$Big
- com.intellij.util.ui.AsyncProcessIcon
- <init>(java.lang.String):V
c:com.intellij.util.ui.AsyncProcessIcon$BigCentered
- com.intellij.util.ui.AsyncProcessIcon$Big
- <init>(java.lang.String):V
- p:calculateBounds(javax.swing.JComponent):java.awt.Rectangle
a:com.intellij.util.ui.BaseButtonBehavior
- sf:MOUSE_PRESSED_RELEASED:I
- <init>(javax.swing.JComponent):V
- <init>(javax.swing.JComponent,com.intellij.util.ui.TimedDeadzone$Length):V
- p:<init>(javax.swing.JComponent,com.intellij.util.ui.TimedDeadzone$Length,java.lang.Void):V
- p:<init>(javax.swing.JComponent,java.lang.Void):V
- pa:execute(java.awt.event.MouseEvent):V
- f:isFocused():Z
- f:isHovered():Z
- f:isPressedByKeyboard():Z
- f:isPressedByMouse():Z
- p:pass(java.awt.event.MouseEvent):V
- p:repaint(java.awt.Component):V
- p:repaintComponent():V
- setActionTrigger(I):V
- setMouseDeadzone(com.intellij.util.ui.TimedDeadzone$Length):V
- setupListeners():V
c:com.intellij.util.ui.CalendarView
- javax.swing.JPanel
- <init>():V
- <init>(com.intellij.util.ui.CalendarView$Mode):V
- getCalendar():java.util.Calendar
- getDate():java.util.Date
- getDaysCombo():javax.swing.JComponent
- registerEnterHandler(java.lang.Runnable):V
- setDate(java.util.Date):V
e:com.intellij.util.ui.CalendarView$Mode
- java.lang.Enum
- sf:DATE:com.intellij.util.ui.CalendarView$Mode
- sf:DATETIME:com.intellij.util.ui.CalendarView$Mode
- sf:TIME:com.intellij.util.ui.CalendarView$Mode
- s:valueOf(java.lang.String):com.intellij.util.ui.CalendarView$Mode
- s:values():com.intellij.util.ui.CalendarView$Mode[]
c:com.intellij.util.ui.CheckBox
- javax.swing.JCheckBox
- <init>(java.lang.String,com.intellij.codeInspection.InspectionProfileEntry,java.lang.String):V
- <init>(java.lang.String,java.lang.Object,java.lang.String):V
a:com.intellij.util.ui.ColumnInfo
- sf:EMPTY_ARRAY:com.intellij.util.ui.ColumnInfo[]
- <init>(java.lang.String):V
- s:emptyArray():com.intellij.util.ui.ColumnInfo[]
- equals(java.lang.Object):Z
- getAdditionalWidth():I
- getColumnClass():java.lang.Class
- getComparator():java.util.Comparator
- getCustomizedRenderer(java.lang.Object,javax.swing.table.TableCellRenderer):javax.swing.table.TableCellRenderer
- getEditor(java.lang.Object):javax.swing.table.TableCellEditor
- getIcon():javax.swing.Icon
- getMaxStringValue():java.lang.String
- getName():java.lang.String
- getPreferredStringValue():java.lang.String
- getRenderer(java.lang.Object):javax.swing.table.TableCellRenderer
- getTooltipText():java.lang.String
- getWidth(javax.swing.JTable):I
- hasError():Z
- hashCode():I
- isCellEditable(java.lang.Object):Z
- f:isSortable():Z
- setName(java.lang.String):V
- setValue(java.lang.Object,java.lang.Object):V
- a:valueOf(java.lang.Object):java.lang.Object
a:com.intellij.util.ui.ComboBoxCellEditor
- javax.swing.DefaultCellEditor
- <init>():V
- pa:getComboBoxItems():java.util.List
- getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,Z,I,I):java.awt.Component
- p:isComboboxEditable():Z
- stopCellEditing():Z
com.intellij.util.ui.ComponentWithEmptyText
- a:getEmptyText():com.intellij.util.ui.StatusText
f:com.intellij.util.ui.DialogUtil
- s:registerMnemonic(javax.swing.AbstractButton):V
- s:registerMnemonic(javax.swing.AbstractButton,C):V
- s:registerMnemonic(javax.swing.JLabel,javax.swing.JComponent):V
- s:registerMnemonic(javax.swing.JLabel,javax.swing.JComponent,C):V
- s:setTextWithMnemonic(javax.swing.AbstractButton,java.lang.String):V
- s:setTextWithMnemonic(javax.swing.AbstractButton,java.lang.String,C):V
c:com.intellij.util.ui.DirProvider
- <init>():V
- dir():java.lang.String
- getDefaultExtension():java.lang.String
com.intellij.util.ui.ErrorTreeView
- com.intellij.openapi.Disposable
- sf:CURRENT_EXCEPTION_DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- a:addMessage(I,java.lang.String[],com.intellij.openapi.vfs.VirtualFile,I,I,java.lang.Object):V
- a:addMessage(I,java.lang.String[],com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,I,I,java.lang.Object):V
- a:addMessage(I,java.lang.String[],java.lang.String,com.intellij.pom.Navigatable,java.lang.String,java.lang.String,java.lang.Object):V
- a:getComponent():javax.swing.JComponent
c:com.intellij.util.ui.FormBuilder
- <init>():V
- addComponent(javax.swing.JComponent):com.intellij.util.ui.FormBuilder
- addComponent(javax.swing.JComponent,I):com.intellij.util.ui.FormBuilder
- addComponentFillVertically(javax.swing.JComponent,I):com.intellij.util.ui.FormBuilder
- addComponentToRightColumn(javax.swing.JComponent):com.intellij.util.ui.FormBuilder
- addComponentToRightColumn(javax.swing.JComponent,I):com.intellij.util.ui.FormBuilder
- addLabeledComponent(java.lang.String,javax.swing.JComponent):com.intellij.util.ui.FormBuilder
- addLabeledComponent(java.lang.String,javax.swing.JComponent,I):com.intellij.util.ui.FormBuilder
- addLabeledComponent(java.lang.String,javax.swing.JComponent,I,Z):com.intellij.util.ui.FormBuilder
- addLabeledComponent(java.lang.String,javax.swing.JComponent,Z):com.intellij.util.ui.FormBuilder
- addLabeledComponent(javax.swing.JComponent,javax.swing.JComponent):com.intellij.util.ui.FormBuilder
- addLabeledComponent(javax.swing.JComponent,javax.swing.JComponent,I):com.intellij.util.ui.FormBuilder
- addLabeledComponent(javax.swing.JComponent,javax.swing.JComponent,I,Z):com.intellij.util.ui.FormBuilder
- addLabeledComponent(javax.swing.JComponent,javax.swing.JComponent,Z):com.intellij.util.ui.FormBuilder
- addLabeledComponentFillVertically(java.lang.String,javax.swing.JComponent):com.intellij.util.ui.FormBuilder
- addSeparator():com.intellij.util.ui.FormBuilder
- addSeparator(I):com.intellij.util.ui.FormBuilder
- addTooltip(java.lang.String):com.intellij.util.ui.FormBuilder
- addVerticalGap(I):com.intellij.util.ui.FormBuilder
- s:createFormBuilder():com.intellij.util.ui.FormBuilder
- p:getFill(javax.swing.JComponent):I
- getLineCount():I
- getPanel():javax.swing.JPanel
- setAlignLabelOnRight(Z):com.intellij.util.ui.FormBuilder
- setFormLeftIndent(I):com.intellij.util.ui.FormBuilder
- setHorizontalGap(I):com.intellij.util.ui.FormBuilder
- setVertical(Z):com.intellij.util.ui.FormBuilder
- setVerticalGap(I):com.intellij.util.ui.FormBuilder
a:com.intellij.util.ui.ImmutableColumnInfo
- com.intellij.util.ui.ColumnInfo
- <init>(java.lang.String):V
- a:withValue(java.lang.Object,java.lang.Object):java.lang.Object
f:com.intellij.util.ui.IoErrorText
- <init>():V
- s:message(java.lang.Throwable):java.lang.String
f:com.intellij.util.ui.LafIconLookup
- sf:INSTANCE:com.intellij.util.ui.LafIconLookup
- f:findIcon(java.lang.String,Z,Z,Z,Z,Z,com.intellij.util.ui.DirProvider):javax.swing.Icon
- bs:findIcon$default(com.intellij.util.ui.LafIconLookup,java.lang.String,Z,Z,Z,Z,Z,com.intellij.util.ui.DirProvider,I,java.lang.Object):javax.swing.Icon
- sf:getDisabledIcon(java.lang.String):javax.swing.Icon
- sf:getIcon(java.lang.String):javax.swing.Icon
- sf:getIcon(java.lang.String,Z):javax.swing.Icon
- sf:getIcon(java.lang.String,Z,Z):javax.swing.Icon
- sf:getIcon(java.lang.String,Z,Z,Z):javax.swing.Icon
- sf:getIcon(java.lang.String,Z,Z,Z,Z):javax.swing.Icon
- sf:getIcon(java.lang.String,Z,Z,Z,Z,Z):javax.swing.Icon
- bs:getIcon$default(java.lang.String,Z,Z,Z,Z,Z,I,java.lang.Object):javax.swing.Icon
- sf:getSelectedIcon(java.lang.String):javax.swing.Icon
c:com.intellij.util.ui.ListTableModel
- com.intellij.util.ui.TableViewModel
- com.intellij.util.ui.EditableModel
- <init>(com.intellij.util.ui.ColumnInfo[]):V
- <init>(com.intellij.util.ui.ColumnInfo[],java.util.List):V
- <init>(com.intellij.util.ui.ColumnInfo[],java.util.List,I):V
- <init>(com.intellij.util.ui.ColumnInfo[],java.util.List,I,javax.swing.SortOrder):V
- addRow():V
- addRow(java.lang.Object):V
- addRows(java.util.Collection):V
- canExchangeRows(I,I):Z
- exchangeRows(I,I):V
- p:getAspectOf(I,java.lang.Object):java.lang.Object
- getColumnClass(I):java.lang.Class
- getColumnCount():I
- getColumnInfos():com.intellij.util.ui.ColumnInfo[]
- getColumnName(I):java.lang.String
- getDefaultSortKey():javax.swing.RowSorter$SortKey
- getItem(I):java.lang.Object
- getItems():java.util.List
- getRowCount():I
- getRowValue(I):java.lang.Object
- getValueAt(I,I):java.lang.Object
- indexOf(java.lang.Object):I
- insertRow(I,java.lang.Object):V
- isCellEditable(I,I):Z
- isSortable():Z
- removeRow(I):V
- setColumnInfos(com.intellij.util.ui.ColumnInfo[]):Z
- setItem(I,java.lang.Object):V
- setItems(java.util.List):V
- setSortable(Z):V
- setValueAt(java.lang.Object,I,I):V
- setValueAt(java.lang.Object,I,I,Z):V
com.intellij.util.ui.MessageCategory
- sf:ERROR:I
- sf:INFORMATION:I
- sf:NOTE:I
- sf:SIMPLE:I
- sf:STATISTICS:I
- sf:WARNING:I
com.intellij.util.ui.MutableErrorTreeView
- com.intellij.util.ui.ErrorTreeView
- a:addFixedHotfixGroup(java.lang.String,java.util.List):V
- a:addHotfixGroup(com.intellij.ide.errorTreeView.HotfixData,java.util.List):V
- a:getGroupChildrenData(java.lang.String):java.util.List
- a:reload():V
- a:removeGroup(java.lang.String):V
a:com.intellij.util.ui.OptionsDialog
- com.intellij.openapi.ui.DialogWrapper
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project):V
- p:<init>(com.intellij.openapi.project.Project,Z):V
- p:<init>(java.awt.Component,Z):V
- p:<init>(Z):V
- p:canBeHidden():Z
- pa:isToBeShown():Z
- pa:setToBeShown(Z,Z):V
- s:shiftIsPressed(I):Z
- pa:shouldSaveOptionsOnCancel():Z
a:com.intellij.util.ui.OptionsMessageDialog
- com.intellij.util.ui.OptionsDialog
- p:<init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):V
- ps:assignMnemonic(java.lang.String,javax.swing.Action):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- pa:getCancelActionName():java.lang.String
- pa:getOkActionName():java.lang.String
f:com.intellij.util.ui.PresentableEnumUtil
- s:fill(com.intellij.openapi.ui.ComboBox,java.lang.Class):com.intellij.openapi.ui.ComboBox
- s:fill(javax.swing.JComboBox,java.lang.Class):javax.swing.JComboBox
com.intellij.util.ui.SortableColumnModel
- a:getColumnInfos():com.intellij.util.ui.ColumnInfo[]
- a:getDefaultSortKey():javax.swing.RowSorter$SortKey
- a:getRowValue(I):java.lang.Object
- a:isSortable():Z
- a:setSortable(Z):V
a:com.intellij.util.ui.StatusText
- sf:DEFAULT_ATTRIBUTES:com.intellij.ui.SimpleTextAttributes
- <init>():V
- p:<init>(javax.swing.JComponent):V
- p:adjustComponentBounds(javax.swing.JComponent,java.awt.Rectangle):java.awt.Rectangle
- appendLine(java.lang.String):com.intellij.util.ui.StatusText
- appendLine(java.lang.String,com.intellij.ui.SimpleTextAttributes,java.awt.event.ActionListener):com.intellij.util.ui.StatusText
- appendLine(javax.swing.Icon,java.lang.String,com.intellij.ui.SimpleTextAttributes,java.awt.event.ActionListener):com.intellij.util.ui.StatusText
- appendSecondaryText(java.lang.String,com.intellij.ui.SimpleTextAttributes,java.awt.event.ActionListener):com.intellij.util.ui.StatusText
- appendText(I,I,java.lang.String,com.intellij.ui.SimpleTextAttributes,java.awt.event.ActionListener):com.intellij.util.ui.StatusText
- appendText(I,I,javax.swing.Icon,java.lang.String,com.intellij.ui.SimpleTextAttributes,java.awt.event.ActionListener):com.intellij.util.ui.StatusText
- appendText(java.lang.String):com.intellij.util.ui.StatusText
- appendText(java.lang.String,com.intellij.ui.SimpleTextAttributes):com.intellij.util.ui.StatusText
- appendText(java.lang.String,com.intellij.ui.SimpleTextAttributes,java.awt.event.ActionListener):com.intellij.util.ui.StatusText
- attachTo(java.awt.Component):V
- attachTo(java.awt.Component,java.awt.Component):V
- clear():com.intellij.util.ui.StatusText
- getComponent():com.intellij.ui.SimpleColoredComponent
- s:getDefaultEmptyText():java.lang.String
- getPointBelow():java.awt.Point
- getPreferredSize():java.awt.Dimension
- getSecondaryComponent():com.intellij.ui.SimpleColoredComponent
- getText():java.lang.String
- p:getTextComponentBound():java.awt.Rectangle
- getWrappedFragmentsIterable():java.lang.Iterable
- isCenterAlignText():Z
- p:isFontSet():Z
- f:isShowAboveCenter():Z
- pa:isStatusVisible():Z
- paint(java.awt.Component,java.awt.Graphics):V
- resetFont():V
- setCenterAlignText(Z):V
- setFont(java.awt.Font):V
- f:setShowAboveCenter(Z):com.intellij.util.ui.StatusText
- setText(java.lang.String):com.intellij.util.ui.StatusText
- setText(java.lang.String,com.intellij.ui.SimpleTextAttributes):com.intellij.util.ui.StatusText
- withUnscaledGapAfter(I):com.intellij.util.ui.StatusText
pf:com.intellij.util.ui.StatusText$Column
pf:com.intellij.util.ui.StatusText$Fragment
a:com.intellij.util.ui.TableViewModel
- javax.swing.table.AbstractTableModel
- com.intellij.util.ui.SortableColumnModel
- <init>():V
- a:getItems():java.util.List
- a:setItems(java.util.List):V
f:com.intellij.util.ui.TimedDeadzone
- sf:DEFAULT:com.intellij.util.ui.TimedDeadzone$Length
- sf:NULL:com.intellij.util.ui.TimedDeadzone$Length
- <init>(com.intellij.util.ui.TimedDeadzone$Length):V
- clear():V
- enter(java.awt.event.MouseEvent):V
- getLength():I
- isWithin():Z
- setLength(com.intellij.util.ui.TimedDeadzone$Length):V
c:com.intellij.util.ui.TimedDeadzone$Length
- <init>(I):V
- getLength():I
f:com.intellij.util.ui.UI
- <init>():V
- s:scale(I):I
e:com.intellij.util.ui.UI$Anchor
- java.lang.Enum
- sf:Bottom:com.intellij.util.ui.UI$Anchor
- sf:Center:com.intellij.util.ui.UI$Anchor
- sf:Top:com.intellij.util.ui.UI$Anchor
- s:valueOf(java.lang.String):com.intellij.util.ui.UI$Anchor
- s:values():com.intellij.util.ui.UI$Anchor[]
f:com.intellij.util.ui.UI$PanelFactory
- <init>():V
- s:grid():com.intellij.openapi.ui.panel.PanelGridBuilder
- s:panel(javax.swing.JComponent):com.intellij.openapi.ui.panel.ComponentPanelBuilder
- s:panel(javax.swing.JProgressBar):com.intellij.openapi.ui.panel.ProgressPanelBuilder
a:com.intellij.util.ui.scroll.BoundedRangeModelThresholdListener
- javax.swing.event.ChangeListener
- sf:Companion:com.intellij.util.ui.scroll.BoundedRangeModelThresholdListener$Companion
- <init>(javax.swing.BoundedRangeModel,F):V
- sf:install(javax.swing.JScrollBar,F,kotlin.jvm.functions.Function0):V
- sf:install(javax.swing.JScrollBar,kotlin.jvm.functions.Function0):V
- a:onThresholdReached():V
- stateChanged(javax.swing.event.ChangeEvent):V
f:com.intellij.util.ui.scroll.BoundedRangeModelThresholdListener$Companion
- f:install(javax.swing.JScrollBar,F,kotlin.jvm.functions.Function0):V
- f:install(javax.swing.JScrollBar,kotlin.jvm.functions.Function0):V
- bs:install$default(com.intellij.util.ui.scroll.BoundedRangeModelThresholdListener$Companion,javax.swing.JScrollBar,F,kotlin.jvm.functions.Function0,I,java.lang.Object):V
c:com.intellij.util.ui.tree.IndexTreePathState
- com.intellij.util.ui.tree.TreePathState
- <init>(javax.swing.tree.TreePath):V
- getRestoredPath():javax.swing.tree.TreePath
- restoreSelection(javax.swing.JTree):V
com.intellij.util.ui.tree.TreePathState
- sf:NULL:com.intellij.util.ui.tree.TreePathState
- a:getRestoredPath():javax.swing.tree.TreePath
f:com.intellij.util.ui.tree.TreeUtil
- sf:EMPTY_TREE_PATH:javax.swing.tree.TreePath[]
- s:addChildrenTo(javax.swing.tree.MutableTreeNode,java.util.List):V
- s:collapseAll(javax.swing.JTree,I):V
- s:collapseAll(javax.swing.JTree,Z,I):V
- s:collapsePaths(javax.swing.JTree,java.lang.Iterable):V
- s:collectExpandedObjects(javax.swing.JTree,java.util.function.Function):java.util.List
- s:collectExpandedObjects(javax.swing.JTree,javax.swing.tree.TreePath,java.util.function.Function):java.util.List
- s:collectExpandedPaths(javax.swing.JTree):java.util.List
- s:collectExpandedPaths(javax.swing.JTree,javax.swing.tree.TreePath):java.util.List
- s:collectExpandedUserObjects(javax.swing.JTree):java.util.List
- s:collectExpandedUserObjects(javax.swing.JTree,javax.swing.tree.TreePath):java.util.List
- s:collectSelectedObjects(javax.swing.JTree,java.util.function.Function):java.util.List
- s:collectSelectedObjects(javax.swing.JTree,javax.swing.tree.TreePath,java.util.function.Function):java.util.List
- s:collectSelectedObjectsOfType(javax.swing.JTree,java.lang.Class):java.util.List
- s:collectSelectedPaths(javax.swing.JTree):java.util.List
- s:collectSelectedPaths(javax.swing.JTree,javax.swing.tree.TreePath):java.util.List
- s:collectSelectedUserObjects(javax.swing.JTree):java.util.List
- s:collectSelectedUserObjects(javax.swing.JTree,javax.swing.tree.TreePath):java.util.List
- s:dropSelectionButUnderPoint(javax.swing.JTree,java.awt.Point):V
- s:ensureSelection(javax.swing.JTree):V
- s:expand(javax.swing.JTree,I):V
- s:expand(javax.swing.JTree,I,java.lang.Runnable):V
- s:expand(javax.swing.JTree,com.intellij.ui.tree.TreeVisitor,java.util.function.Consumer):V
- s:expandAll(javax.swing.JTree):V
- s:expandAll(javax.swing.JTree,java.lang.Runnable):V
- s:expandPaths(javax.swing.JTree,java.lang.Iterable):V
- s:expandRootChildIfOnlyOne(javax.swing.JTree):V
- s:findNode(javax.swing.tree.DefaultMutableTreeNode,com.intellij.openapi.util.Condition):javax.swing.tree.DefaultMutableTreeNode
- s:findNodeWithObject(java.lang.Object,javax.swing.tree.TreeModel,java.lang.Object):javax.swing.tree.TreeNode
- s:findNodeWithObject(javax.swing.tree.DefaultMutableTreeNode,java.lang.Object):javax.swing.tree.DefaultMutableTreeNode
- s:findObjectInPath(javax.swing.tree.TreePath,java.lang.Class):java.lang.Object
- s:getAbstractTreeNode(java.lang.Object):com.intellij.ide.util.treeView.AbstractTreeNode
- s:getAbstractTreeNode(javax.swing.tree.TreePath):com.intellij.ide.util.treeView.AbstractTreeNode
- s:getDepthOffset(javax.swing.JTree):I
- s:getDisplayOrderComparator(javax.swing.JTree):java.util.Comparator
- s:getExpandControlRange(javax.swing.JTree,javax.swing.tree.TreePath):com.intellij.util.Range
- s:getFirstLeafNodePath(javax.swing.JTree):javax.swing.tree.TreePath
- s:getFirstNodePath(javax.swing.JTree):javax.swing.tree.TreePath
- s:getLastUserObject(java.lang.Class,javax.swing.tree.TreePath):java.lang.Object
- s:getLastUserObject(javax.swing.tree.TreePath):java.lang.Object
- s:getNavigatable(javax.swing.JTree,javax.swing.tree.TreePath):com.intellij.pom.Navigatable
- s:getNodeDepth(javax.swing.JTree,javax.swing.tree.TreePath):I
- s:getParentNodeOfType(com.intellij.ide.util.treeView.AbstractTreeNode,java.lang.Class):java.lang.Object
- s:getPath(javax.swing.tree.TreeNode,javax.swing.tree.TreeNode):javax.swing.tree.TreePath
- s:getPathForLocation(javax.swing.JTree,I,I):javax.swing.tree.TreePath
- s:getPathFromRoot(javax.swing.tree.TreeNode):javax.swing.tree.TreePath
- s:getPointForBounds(javax.swing.JComponent,java.awt.Rectangle):com.intellij.ui.awt.RelativePoint
- s:getPointForPath(javax.swing.JTree,javax.swing.tree.TreePath):com.intellij.ui.awt.RelativePoint
- s:getPointForRow(javax.swing.JTree,I):com.intellij.ui.awt.RelativePoint
- s:getPointForSelection(javax.swing.JTree):com.intellij.ui.awt.RelativePoint
- s:getRowForLocation(javax.swing.JTree,I,I):I
- s:getRowForNode(javax.swing.JTree,javax.swing.tree.DefaultMutableTreeNode):I
- s:getSelectedPathIfOne(javax.swing.JTree):javax.swing.tree.TreePath
- s:getUserObject(java.lang.Class,java.lang.Object):java.lang.Object
- s:getUserObject(java.lang.Object):java.lang.Object
- s:getVisibleRowCount(javax.swing.JTree):I
- s:hasManyNodes(com.intellij.ui.treeStructure.Tree,I):Z
- s:hasManyNodes(javax.swing.tree.TreeNode,I):Z
- s:indexedBinarySearch(javax.swing.tree.TreeNode,javax.swing.tree.TreeNode,java.util.Comparator):I
- s:insertNode(javax.swing.tree.MutableTreeNode,javax.swing.tree.MutableTreeNode,javax.swing.tree.DefaultTreeModel,java.util.Comparator):V
- s:insertNode(javax.swing.tree.MutableTreeNode,javax.swing.tree.MutableTreeNode,javax.swing.tree.DefaultTreeModel,Z,java.util.Comparator):V
- s:installActions(javax.swing.JTree):V
- s:isAncestor(javax.swing.tree.TreeNode,javax.swing.tree.TreeNode):Z
- s:isBulkExpandCollapseSupported(javax.swing.JTree):Z
- s:isCyclicScrollingAllowed():Z
- s:isLoadingNode(java.lang.Object):Z
- s:isLoadingPath(javax.swing.tree.TreePath):Z
- s:isOverSelection(javax.swing.JTree,java.awt.Point):Z
- s:listChildren(javax.swing.tree.TreeNode):java.util.List
- s:makeVisible(javax.swing.JTree,com.intellij.ui.tree.TreeVisitor,java.util.function.Consumer):V
- s:modelTraverser(javax.swing.tree.TreeModel):com.intellij.util.containers.JBTreeTraverser
- s:moveDown(javax.swing.JTree):com.intellij.openapi.util.ActionCallback
- s:movePageDown(javax.swing.JTree):com.intellij.openapi.util.ActionCallback
- s:movePageUp(javax.swing.JTree):com.intellij.openapi.util.ActionCallback
- s:moveSelectedRow(javax.swing.JTree,I):V
- s:moveUp(javax.swing.JTree):com.intellij.openapi.util.ActionCallback
- s:nextVisiblePath(javax.swing.JTree,I,java.util.function.Predicate):javax.swing.tree.TreePath
- s:nextVisiblePath(javax.swing.JTree,I,Z,java.util.function.Predicate):javax.swing.tree.TreePath
- s:nextVisiblePath(javax.swing.JTree,javax.swing.tree.TreePath,java.util.function.Predicate):javax.swing.tree.TreePath
- s:nextVisibleSibling(javax.swing.JTree,javax.swing.tree.TreePath):javax.swing.tree.TreePath
- s:nodeChildren(java.lang.Object,javax.swing.tree.TreeModel):com.intellij.util.containers.JBIterable
- s:nodeChildren(javax.swing.tree.TreeNode):com.intellij.util.containers.JBIterable
- s:previousVisiblePath(javax.swing.JTree,I,java.util.function.Predicate):javax.swing.tree.TreePath
- s:previousVisiblePath(javax.swing.JTree,I,Z,java.util.function.Predicate):javax.swing.tree.TreePath
- s:previousVisiblePath(javax.swing.JTree,javax.swing.tree.TreePath,java.util.function.Predicate):javax.swing.tree.TreePath
- s:previousVisibleSibling(javax.swing.JTree,javax.swing.tree.TreePath):javax.swing.tree.TreePath
- s:promiseExpand(javax.swing.JTree,I):org.jetbrains.concurrency.Promise
- s:promiseExpand(javax.swing.JTree,com.intellij.ui.tree.TreeVisitor):org.jetbrains.concurrency.Promise
- s:promiseExpand(javax.swing.JTree,java.util.stream.Stream):org.jetbrains.concurrency.Promise
- s:promiseExpand(javax.swing.JTree,javax.swing.tree.TreePath):org.jetbrains.concurrency.Promise
- s:promiseExpandAll(javax.swing.JTree):org.jetbrains.concurrency.Promise
- s:promiseMakeVisible(javax.swing.JTree,com.intellij.ui.tree.TreeVisitor):org.jetbrains.concurrency.Promise
- s:promiseMakeVisible(javax.swing.JTree,java.util.stream.Stream):org.jetbrains.concurrency.Promise
- s:promiseMakeVisible(javax.swing.JTree,javax.swing.tree.TreePath):org.jetbrains.concurrency.Promise
- s:promiseSelect(javax.swing.JTree,com.intellij.ui.tree.TreeVisitor):org.jetbrains.concurrency.Promise
- s:promiseSelect(javax.swing.JTree,java.util.stream.Stream):org.jetbrains.concurrency.Promise
- s:promiseSelect(javax.swing.JTree,javax.swing.tree.TreePath):org.jetbrains.concurrency.Promise
- s:promiseSelectFirst(javax.swing.JTree):org.jetbrains.concurrency.Promise
- s:promiseSelectFirstLeaf(javax.swing.JTree):org.jetbrains.concurrency.Promise
- s:promiseVisit(javax.swing.JTree,com.intellij.ui.tree.TreeVisitor):org.jetbrains.concurrency.Promise
- s:removeLastPathComponent(javax.swing.JTree,javax.swing.tree.TreePath):V
- s:removeSelected(javax.swing.JTree):V
- s:repaintPath(javax.swing.JTree,javax.swing.tree.TreePath):V
- s:repaintRow(javax.swing.JTree,I):V
- s:restoreExpandedPaths(javax.swing.JTree,java.util.List):V
- s:scrollToVisible(javax.swing.JTree,javax.swing.tree.TreePath,Z):Z
- s:selectFirstNode(javax.swing.JTree):com.intellij.openapi.util.ActionCallback
- s:selectInTree(com.intellij.openapi.project.Project,javax.swing.tree.DefaultMutableTreeNode,Z,javax.swing.JTree,Z):com.intellij.openapi.util.ActionCallback
- s:selectInTree(javax.swing.tree.DefaultMutableTreeNode,Z,javax.swing.JTree):com.intellij.openapi.util.ActionCallback
- s:selectInTree(javax.swing.tree.DefaultMutableTreeNode,Z,javax.swing.JTree,Z):com.intellij.openapi.util.ActionCallback
- s:selectNode(javax.swing.JTree,javax.swing.tree.TreeNode):V
- s:selectPath(javax.swing.JTree,javax.swing.tree.TreePath):com.intellij.openapi.util.ActionCallback
- s:selectPath(javax.swing.JTree,javax.swing.tree.TreePath,Z):com.intellij.openapi.util.ActionCallback
- s:selectRow(javax.swing.JTree,I):V
- s:setNavigatableProvider(javax.swing.JTree,java.util.function.Function):V
- s:showAndSelect(javax.swing.JTree,I,I,I,I):com.intellij.openapi.util.ActionCallback
- s:showAndSelect(javax.swing.JTree,I,I,I,I,Z):com.intellij.openapi.util.ActionCallback
- s:showAndSelect(javax.swing.JTree,I,I,I,I,Z,Z):com.intellij.openapi.util.ActionCallback
- s:showAndSelect(javax.swing.JTree,I,I,I,I,Z,Z,Z):com.intellij.openapi.util.ActionCallback
- s:showRowCentered(javax.swing.JTree,I,Z):com.intellij.openapi.util.ActionCallback
- s:showRowCentered(javax.swing.JTree,I,Z,Z):com.intellij.openapi.util.ActionCallback
- s:sort(javax.swing.tree.DefaultMutableTreeNode,java.util.Comparator):V
- s:sort(javax.swing.tree.DefaultTreeModel,java.util.Comparator):V
- s:sortChildren(javax.swing.tree.MutableTreeNode,java.util.Comparator):V
- s:sortRecursively(javax.swing.tree.MutableTreeNode,java.util.Comparator):V
- s:traverse(javax.swing.tree.TreeNode,com.intellij.util.ui.tree.TreeUtil$Traverse):Z
- s:traverseDepth(javax.swing.tree.TreeNode,com.intellij.util.ui.tree.TreeUtil$Traverse):Z
- s:treeNodeTraverser(javax.swing.tree.TreeNode):com.intellij.util.containers.JBTreeTraverser
- s:treePathTraverser(javax.swing.JTree):com.intellij.util.containers.JBTreeTraverser
- s:treeTraverser(javax.swing.JTree):com.intellij.util.containers.JBTreeTraverser
- s:unselectPath(javax.swing.JTree,javax.swing.tree.TreePath):V
- s:visit(javax.swing.JTree,com.intellij.ui.tree.TreeVisitor,java.util.function.Consumer):V
- s:visitVisibleRows(javax.swing.JTree,com.intellij.ui.tree.TreeVisitor):javax.swing.tree.TreePath
- s:visitVisibleRows(javax.swing.JTree,java.util.function.Function,java.util.function.Consumer):V
com.intellij.util.ui.tree.TreeUtil$Traverse
- a:accept(java.lang.Object):Z
a:com.intellij.xml.breadcrumbs.BreadcrumbsItem
- <init>():V
- a:getDisplayText():java.lang.String
- getPresentation():com.intellij.xml.breadcrumbs.CrumbPresentation
- getTooltip():java.lang.String
com.intellij.xml.breadcrumbs.BreadcrumbsItemListener
- a:itemHovered(com.intellij.xml.breadcrumbs.BreadcrumbsItem):V
- a:itemSelected(com.intellij.xml.breadcrumbs.BreadcrumbsItem,I):V
a:com.intellij.xml.breadcrumbs.BreadcrumbsPresentationProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getCrumbPresentations(com.intellij.psi.PsiElement[]):com.intellij.xml.breadcrumbs.CrumbPresentation[]
a:com.intellij.xml.breadcrumbs.CrumbPresentation
- <init>():V
- a:getBackgroundColor(Z,Z,Z):java.awt.Color
com.intellij.xml.breadcrumbs.LazyTooltipCrumb
- com.intellij.ui.components.breadcrumbs.Crumb
- a:needCalculateTooltip():Z
com.intellij.xml.breadcrumbs.NavigatableCrumb
- com.intellij.ui.components.breadcrumbs.Crumb
- getAnchorOffset():I
- a:getHighlightRange():com.intellij.openapi.util.TextRange
- a:navigate(com.intellij.openapi.editor.Editor,Z):V
