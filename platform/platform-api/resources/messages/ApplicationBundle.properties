title.screen.reader.support=Screen Reader Support
confirmation.screen.reader.enable=Screen reader detected. Do you want to enable screen readers support option?
title.settings.import.failed=Settings Import Failed
error.unable.to.import.settings=Unable to import settings. {0}
title.installation.home.required=Config Folder or Installation Home Required
error.please.select.previous.installation.home=Please select previous {0} config folder or installation home
error.selected.current.installation.home=You have selected current {0} config folder or installation home
error.does.not.appear.to.be.installation.home={0} does not appear to be {1} config folder or installation home
error.no.read.permissions=You do not have read permissions to {0}
radio.do.not.import=Do not import settings
radio.import.auto=Previous version
radio.import=Config or installation folder:
title.import.settings=Import {0} Settings
restart.import.settings=Imported settings contain custom VM options.\nPlease restart the IDE to apply these options.
restart.import.now=Restart now
restart.import.later=Restart later
button.ok=OK
title.code.completion=Code Completion
editbox.lookup.height=Lookup height (items):
editbox.autopopup.javadoc.in=Show the documentation popup in
checkbox.show.signatures=Show signatures
checkbox.show.full.signatures=Show full method signatures
editbox.auto.complete=Show suggestions as you type
editbox.autopopup.in=Show the parameter info popup in
editbox.ms=ms
editbox.complete.with.parameters=Show parameter name hints on completion
title.parameter.info=Parameter Info
radio.insert.both.parentheses=Insert '()'
checkbox.insert.both.parentheses.when.no.arguments=Insert '()' when no arguments
radio.insert.left.parenthesis=Insert '('
label.complete.brackets=Brackets:
label.complete.autopopup=Autopopup:
label.autocomplete.when.only.one.choice=Automatically insert single suggestions for:
checkbox.show.static.members.after.instance.qualifier=Show static members after instance qualifier
checkbox.autocomplete.common.prefix=Autocomplete common prefix
checkbox.autocomplete.smart.type=Smart Type Completion
checkbox.autocomplete.basic=Basic Completion
combobox.case.sensitive.completion=Case sensitive completion:
combobox.autocomplete.case.sensitive.all=All
combobox.autocomplete.case.sensitive.none=None
combobox.autocomplete.case.sensitive.first.letter=First letter
editbox.blanklines.before.package.statement=Before package statement:
editbox.blanklines.after.package.statement=After package statement:
editbox.blanklines.before.imports=Before imports:
editbox.blanklines.after.imports=After imports:
editbox.blanklines.around.class=Around class:
editbox.blanklines.around.field=Around field:
editbox.blanklines.around.method=Around method:
editbox.blanklines.before.method.body=Before method body:
editbox.blanklines.after.class.header=After class header:
editbox.blanklines.before.class.end=Before class end:
editbox.blanklines.after.anonymous.class.header=After anonymous class header:
title.blank.lines=Blank Lines
title.keep.blank.lines=Keep Maximum Blank Lines
title.minimum.blank.lines=Minimum Blank Lines
editbox.keep.blanklines.in.declarations=In declarations:
editbox.keep.blanklines.in.code=In code:
editbox.keep.blanklines.before.rbrace=Before '}':
editbox.keep.blanklines.between.header.and.package=Between header and package:
listbox.members.order.fields=Instance fields
listbox.members.order.static.fields=Static fields
listbox.members.order.methods=Instance methods
listbox.members.order.static.methods=Static methods
listbox.members.order.constructors=Constructors
listbox.members.order.inner.classes=Inner classes
listbox.members.order.inner.static.classes=Static inner classes
title.naming.comment.code=Comment Code
checkbox.block.comment.at.first.column=Block comment at first column
checkbox.line.comment.at.first.column=Line comment at first column
title.order.of.members=Order of Members
button.move.down=Move &Down
button.move.up=Move &Up
title.lookup.list=Lookup List
title.code.generation=Code Generation
title.insert.new.line.before.tags=Insert New Line Before Tags
title.remove.line.breaks.before.tags=Remove Line Breaks Before Tags
title.do.not.indent.children.of=Do not Indent Children Of
title.inline.elements=Inline Elements
title.keep.whitespaces.inside=Keep Whitespaces Inside
title.dont.wrap.if.inline.content=Don't Break If Inline Content Only
checkbox.parentheses.around.method.arguments=Add parentheses around method arguments
radiogroup.rename.local.variables=Specify refactoring options:
radiobutton.rename.local.variables.inplace=In the editor
radiobutton.rename.local.variables.in.dialog=In the modal dialogs
checkbox.rename.local.variables.preselect=Preselect old name
generated.quote.marks=Generated quote marks:
title.spaces=Spaces
label.wrap.attributes=Wrap attributes:
title.imports=Imports
title.general=General
title.other.tabs.and.indents=Other
do.not.import.inner.classes.picker.title=Inner Class
do.not.import.inner.classes.add.button=Add Inner Class Name
do.not.import.inner.classes.remove.button=Remove Inner Class Name
checkbox.use.fully.qualified.class.names.in.javadoc=Use fully qualified class names in javadoc
button.add.blank=Add Blank
button.remove=R&emove
listbox.import.all.other.imports=<all other imports>
listbox.import.blank.line=<blank line>
button.add.package.p=Add &Package
button.remove.r=&Remove

wrapping.and.braces=Wrapping and Braces

wrapping.wrap.on.typing=Wrap on typing
wrapping.wrap.on.typing.no.wrap=No
wrapping.wrap.on.typing.wrap=Yes
wrapping.wrap.on.typing.default=Default

wrapping.keep.when.reformatting=Keep when reformatting
wrapping.keep.line.breaks=Line breaks
wrapping.keep.comment.at.first.column=Comment at first column
wrapping.keep.simple.classes.in.one.line=Simple classes in one line
wrapping.keep.simple.methods.in.one.line=Simple methods in one line
wrapping.keep.simple.lambdas.in.one.line=Simple lambdas in one line
wrapping.keep.multiple.expressions.in.one.line=Multiple expressions in one line
wrapping.keep.simple.blocks.in.one.line=Simple blocks in one line

wrapping.do.not.wrap=Do not wrap
wrapping.wrap.if.long=Wrap if long
wrapping.chop.down.if.long=Chop down if long
wrapping.wrap.always=Wrap always

wrapping.force.braces.do.not.force=Do not force
wrapping.force.braces.when.multiline=When multiline
wrapping.force.braces.always=Always

wrapping.brace.placement=Braces placement
wrapping.brace.placement.class.declaration=In class declaration
wrapping.brace.placement.method.declaration=In method declaration
wrapping.brace.placement.other=Other
wrapping.brace.placement.lambda=In lambda declaration
wrapping.brace.placement.end.of.line=End of line
wrapping.brace.placement.next.line.if.wrapped=Next line if wrapped
wrapping.brace.placement.next.line=Next line
wrapping.brace.placement.next.line.shifted=Next line shifted
wrapping.brace.placement.next.line.each.shifted=Next line, each shifted

wrapping.align.when.multiline=Align when multiline
wrapping.align.parenthesised.when.multiline=Align parenthesised when multiline
wrapping.align.fields.in.columns=Align fields in columns
wrapping.align.variables.in.columns=Align variables in columns
wrapping.align.assignments.in.columns=Align assignments in columns
wrapping.align.simple.methods.in.columns=Align simple methods in columns

wrapping.else.on.new.line='else' on new line
wrapping.while.on.new.line='while' on new line
wrapping.catch.on.new.line='catch' on new line
wrapping.finally.on.new.line='finally' on new line
wrapping.method.parentheses=Method parentheses
wrapping.special.else.if.braces.treatment=Special 'else if' treatment
wrapping.indent.case.from.switch=Indent 'case' branches
wrapping.indent.break.from.case=Indent 'break' from 'case'
wrapping.case.statements.on.one.line=Each 'case' on a separate line
wrapping.force.braces=Force braces

wrapping.method.parameters=Method declaration parameters
wrapping.method.arguments=Method call arguments
wrapping.chained.method.calls=Chained method calls
wrapping.chained.method.call.first.on.new.line=Wrap first call
wrapping.for.statement='for()' statement
wrapping.if.statement='if()' statement
wrapping.while.statement='while()' statement
wrapping.dowhile.statement='do ... while()' statement
wrapping.switch.statement='switch' statement
wrapping.try.statement='try' statement
wrapping.try.resources='try-with-resources'
wrapping.binary.operations=Binary expressions
wrapping.extends.implements.list=Extends/implements list
wrapping.extends.implements.keyword=Extends/implements keyword
wrapping.throws.list=Throws list
wrapping.throws.keyword=Throws keyword
wrapping.align.throws.keyword=Align 'throws' to method start
wrapping.ternary.operation=Ternary operation
wrapping.assignment.variables.groups=Fields/variables groups
wrapping.assignment.statement=Assignment statement
wrapping.array.initializer=Array initializer
wrapping.modifier.list=Modifier list
wrapping.assert.statement=Assert statement
wrapping.new.line.after.lpar=New line after '('
wrapping.rpar.on.new.line=Place ')' on new line
wrapping.new.line.after.lbracket=New line after '['
wrapping.rbracket.on.new.line=Place ']' on new line
wrapping.take.priority.over.call.chain.wrapping=Take priority over call chain wrapping
wrapping.operation.sign.on.next.line=Operation sign on next line
wrapping.comma.on.next.line=',' on next line
wrapping.assignment.sign.on.next.line=Assignment sign on next line
wrapping.assignment.align.consecutive.variable.declarations=Align consecutive variable declarations
wrapping.quest.and.colon.signs.on.next.line='?' and ':' signs on next line
wrapping.new.line.after.lbrace=New line after '{'
wrapping.rbrace.on.new.line=Place '}' on new line
wrapping.after.modifier.list=Wrap after modifier list
wrapping.colon.signs.on.next.line=':' signs on next line
wrapping.classes.annotation=Class annotations
wrapping.methods.annotation=Method annotations
wrapping.fields.annotation=Field annotations
wrapping.parameters.annotation=Parameter annotations
wrapping.local.variables.annotation=Local variable annotations
wrapping.enum.constants=Enum constants
wrapping.long.lines=Ensure right margin is not exceeded
wrapping.comments=Comments
wrapping.comments.wrap.at.right.margin=Wrap at right margin
checkbox.align.multiline.chained.methods=Chained methods
checkbox.align.multiline.method.parameters=Method parameters
checkbox.align.multiline.call.arguments=Call arguments
checkbox.align.multiline.extends.list=Extends list
checkbox.align.multiline.throws.list=Throws list
checkbox.align.multiline.fields.groups=Group declarations
checkbox.align.multiline.parenthesized.expression=Parenthesized expression
checkbox.align.multiline.binary.operation=Binary operation
checkbox.align.multiline.ternary.operation=Ternary operation
checkbox.align.multiline.assignments=Assignments
checkbox.align.multiline.for.statement=For statement
checkbox.align.multiline.array.initializer=Array initializer
title.place.on.new.line=Place on New Line
checkbox.keep.when.reformatting.control.statement.in.one.line=Control statement in one line
title.braces.placement=Braces Placement
combobox.force.braces.if=if ():
combobox.force.braces.for=for ():
combobox.force.braces.while=while ():
combobox.force.braces.do.while=do ... while():
label.loading.page.please.wait=Loading...
button.save.as=Save As...
button.delete=Delete
editbox.scheme.type.name=Scheme
html.project.uses.own.code.style=<html><body>The current project is configured to use its own code style.<br>Changes made to global code style settings will not affect formatting in the current project.<br>See Project Settings | Code Style.<br>Press \\&quot;Edit Global Settings\\&quot; button below if you still want to edit global settings.</body></html>
title.edit.global.settings=Edit &Global Settings
title.settings=Settings
title.global.code.style=Global\nCode Style
group.spaces.around.operators=Around Operators
group.spaces.before.parentheses=Before Parentheses
group.spaces.before.left.brace=Before Left Brace
group.spaces.after.right.brace=Before Keywords
group.spaces.within=Within
group.spaces.in.ternary.operator=In Ternary Operator (?:)
group.spaces.in.type.arguments=Within Type Arguments
group.spaces.in.type.arguments.block=Type Arguments
group.spaces.in.type.parameters.block=Type Parameters
group.spaces.other=Other
checkbox.spaces.method.call.parentheses=Method call parentheses
checkbox.spaces.method.declaration.parentheses=Method declaration parentheses
checkbox.spaces.if.parentheses='if' parentheses
checkbox.spaces.while.parentheses='while' parentheses
checkbox.spaces.for.parentheses='for' parentheses
checkbox.spaces.try.parentheses='try' parentheses
checkbox.spaces.catch.parentheses='catch' parentheses
checkbox.spaces.switch.parentheses='switch' parentheses
checkbox.spaces.synchronized.parentheses='synchronized' parentheses
checkbox.spaces.annotation.parameters=Annotation parameters
checkbox.spaces.assignment.operators=Assignment operators (=, +=, ...)
checkbox.spaces.logical.operators=Logical operators (\\&\\&, ||)
checkbox.spaces.equality.operators=Equality operators (==, !=)
checkbox.spaces.relational.operators=Relational operators (<, >, <=, >=)
checkbox.spaces.bitwise.operators=Bitwise operators (\\&, |, ^)
checkbox.spaces.additive.operators=Additive operators (+, -)
checkbox.spaces.multiplicative.operators=Multiplicative operators (*, /, %)
checkbox.spaces.shift.operators=Shift operators (<<, >>, >>>)
checkbox.spaces.around.unary.operator=Unary operators (!, -, +, ++, --)
checkbox.spaces.class.left.brace=Class left brace
checkbox.spaces.method.left.brace=Method left brace
checkbox.spaces.if.left.brace='if' left brace
checkbox.spaces.else.left.brace='else' left brace
checkbox.spaces.while.left.brace='while' left brace
checkbox.spaces.for.left.brace='for' left brace
checkbox.spaces.do.left.brace='do' left brace
checkbox.spaces.switch.left.brace='switch' left brace
checkbox.spaces.try.left.brace='try' left brace
checkbox.spaces.catch.left.brace='catch' left brace
checkbox.spaces.finally.left.brace='finally' left brace
checkbox.spaces.synchronized.left.brace='synchronized' left brace
checkbox.spaces.array.initializer.left.brace=Array initializer left brace
checkbox.spaces.annotation.array.initializer.left.brace=Annotation array initializer left brace
checkbox.spaces.else.keyword='else' keyword
checkbox.spaces.while.keyword='while' keyword
checkbox.spaces.catch.keyword='catch' keyword
checkbox.spaces.finally.keyword='finally' keyword
checkbox.spaces.within.brackets=Brackets
checkbox.spaces.within.braces=Code braces
checkbox.spaces.within.array.initializer.braces=Array initializer braces
checkbox.spaces.within.empty.array.initializer.braces=Empty array initializer braces
checkbox.spaces.within.parentheses=Grouping parentheses
checkbox.spaces.checkbox.spaces.method.call.parentheses=Method call parentheses
checkbox.spaces.checkbox.spaces.empty.method.call.parentheses=Empty method call parentheses
checkbox.spaces.checkbox.spaces.method.declaration.parentheses=Method declaration parentheses
checkbox.spaces.checkbox.spaces.empty.method.declaration.parentheses=Empty method declaration parentheses
checkbox.spaces.type.cast.parentheses=Type cast parentheses
checkbox.spaces.annotation.parentheses=Annotation parentheses
checkbox.spaces.before.question=Before '?'
checkbox.spaces.after.question=After '?'
checkbox.spaces.before.colon=Before ':'
checkbox.spaces.after.colon=After ':'
checkbox.spaces.after.colon.in.label.declaration=After ':' in label declaration
checkbox.spaces.after.comma=After comma
checkbox.spaces.before.comma=Before comma
checkbox.spaces.before.opening.angle.bracket=Before opening angle bracket
checkbox.spaces.after.semicolon=After 'for' semicolon
checkbox.spaces.before.semicolon=Before 'for' semicolon
checkbox.spaces.after.type.cast=After type cast
title.editor=General
title.code.editing=Code Editing
combobox.strip.modified.lines=Modified Lines
combobox.strip.all=All
combobox.strip.none=None
combobox.insert.imports.all=All
combobox.insert.imports.ask=Ask
combobox.insert.imports.none=None
combobox.paste.reformat.none=None
combobox.paste.reformat.indent.block=Indent block
combobox.paste.reformat.indent.each.line=Indent each line
combobox.paste.reformat.reformat.block=Reformat block
combobox.smart.backspace=Unindent on Backspace:
combobox.smart.backspace.off=Disabled
combobox.smart.backspace.simple=To nearest indent position
combobox.smart.backspace.smart=To proper indent position
combobox.tab.placement.none=None
combobox.tab.placement.top=Top
combobox.tab.placement.left=Left
combobox.tab.placement.bottom=Bottom
combobox.tab.placement.right=Right
tab.editor.settings.behavior=Behavior
tab.editor.settings.appearance=Appearance
groupbox.display=Display
checkbox.smooth.scrolling=Enable smooth scrolling
checkbox.show.whitespaces=Show whitespaces
checkbox.show.leading.whitespaces=Leading
checkbox.show.inner.whitespaces=Inner
checkbox.show.trailing.whitespaces=Trailing
checkbox.show.method.separators=Show method separators
checkbox.show.parameter.name.hints=Show parameter name hints
checkbox.show.small.icons.in.gutter=Show icons preview in gutter for small icons (Java)
checkbox.show.gutter.icons=Show gutter &icons
checkbox.show.line.numbers=Show line numbers
checkbox.show.indent.guides=Show indent guides
checkbox.highlight.only.current.declaration=Highlight only current declaration
checkbox.show.intention.bulb=Show intention bulb
configurable.breadcrumbs=Breadcrumbs
configure.breadcrumbs.colors=Manage colors
checkbox.show.breadcrumbs=Show breadcrumbs
radio.show.breadcrumbs.above=Top
radio.show.breadcrumbs.below=Bottom
label.breadcrumbs.placement=Placement:
label.breadcrumbs.languages=Languages:
checkbox.right.margin=Show hard wrap and visual guides (configured in Code Style options)
checkbox.use.block.caret=Use block caret
checkbox.caret.blinking.ms=Caret blinking (ms):
checkbox.mark.modified.tabs.with.asterisk=Mark modified (*)
checkbox.show.tabs.tooltips=Show full path on mouse hover
group.code.folding=Code Folding
checkbox.collapse.generic.constructor.parameters=Generic constructor and method parameters
checkbox.collapse.inner.classes=Inner classes
checkbox.collapse.simple.property.accessors=Simple property accessors
checkbox.collapse.boolean.parameters=Inline parameter names for literal call arguments
checkbox.collapse.method.bodies=Method bodies
checkbox.collapse.javadoc.comments=Documentation comments
checkbox.collapse.title.imports=Imports
checkbox.collapse.file.header=File header
checkbox.collapse.custom.folding.regions=Custom folding regions
label.fold.by.default=Fold by default:
checkbox.show.code.folding.outline=Show code folding outline
group.tab.appearance=Appearance
combobox.editor.tab.tabslayout=Tab layout
editbox.tab.limit=Tab limit:
checkbox.smart.tab.reuse=Open declaration source in the same tab
checkbox.smart.tab.reuse.inline.help=When navigating to a method/class/variable declaration, the source file that contains the declaration will replace the current tab if there are no changes.
combobox.editor.tab.placement=Tab placement
checkbox.editor.tabs.in.single.row=Show tabs in one row
tabs.close.button.placement=Close button position
checkbox.editor.scroll.if.need=Hide tabs if there is no space
checkbox.show.file.icon.in.editor.tabs=Show file icon
checkbox.show.file.extension.in.editor.tabs=Show file extension
checkbox.show.directory.for.non.unique.files=Show directory for non-unique file names
group.tab.closing.policy=Closing Policy
radio.activate.most.recently.opened.tab=<html>Most recently opened tab</html>
radio.activate.left.neighbouring.tab=<html>The tab on the left</html>
radio.activate.right.neighbouring.tab=<html>The tab on the right</html>
label.when.closing.active.editor=When the current tab is closed, activate:
radio.close.less.frequently.used.files=Close unused
radio.close.non.modified.files.first=Close unchanged
label.when.number.of.opened.editors.exceeds.tab.limit=<html>When tabs exceed the limit:</html>
group.tab.order=Tab Order
checkbox.sort.tabs.alphabetically=Sort tabs alphabetically
checkbox.open.new.tabs.at.the.end=Open new tabs at the end
group.soft.wraps=Soft Wraps
checkbox.use.soft.wraps.at.editor=Soft-wrap these files:
soft.wraps.file.masks.empty.text=No files
soft.wraps.file.masks.hint=Use * and ? as wildcards and ; to separate patterns
checkbox.use.soft.wraps.at.console=Use soft wraps in console
checkbox.use.custom.soft.wraps.indent=Use the original line's indent for wrapped fragments
label.use.custom.soft.wraps.indent=Add additional indent:
label.use.custom.soft.wraps.indent.symbols.suffix=symbols
checkbox.show.softwraps.only.for.caret.line=Only show soft-wrap indicators for the current line
group.virtual.space=Virtual Space
checkbox.allow.placement.of.caret.label=Allow caret placement:
checkbox.allow.placement.of.caret.after.end.of.line=After the end of line
checkbox.allow.placement.of.caret.inside.tabs=Inside tabs
checkbox.show.virtual.space.at.file.bottom=Show virtual space at the bottom of the file
checkbox.optimize.imports.on.the.fly=Optimize imports on the fly (for current project)
checkbox.add.unambiguous.imports.on.the.fly=Add unambiguous imports on the fly
combobox.strip.trailing.spaces.on.save=Strip trailing spaces on Save for:
checkbox.show.quick.doc.on.mouse.over=Show quick doc on mouse over element (ms):
group.limits=Limits
editbox.recent.files.limit=Recent files limit:
editbox.recent.locations.limit=Recent locations limit:
editbox.console.history.limit=Console commands history size:
checkbox.override.console.cycle.buffer.size=Override console cycle buffer size ({0} KB)
checkbox.override.console.cycle.buffer.size.warning.unlimited=Warning: unlimited buffer size can cause performance degradation
checkbox.override.console.cycle.buffer.size.warning.too.large=Warning: large buffer size can cause performance degradation
combobox.console.default.encoding.label=Default Encoding
combobox.console.favorites.separator.label=Favorites
combobox.console.more.separator.label=More
editbox.maximum.number.of.contents.to.keep.in.clipboard=<html>Maximum number of contents to keep  in clipboard:</html>
group.caret.movement=Caret Movement
label.word.move.caret.actions.behavior=When moving by words:
combobox.item.stick.to.word.boundaries=Jump to the current word boundaries
combobox.item.jump.to.word.start=Always jump to the word start
combobox.item.jump.to.word.end=Always jump to the word end
combobox.item.jump.to.neighboring.word=Jump to the next/previous word boundaries
combobox.item.stop.at.all.word.boundaries=Stop at both word boundaries
label.word.move.caret.actions.behavior.at.line.break=Upon line break:
combobox.item.proceed.to.word.boundary=Ignore line breaks
combobox.item.stay.on.current.line=Jump to the current line boundaries
combobox.item.jump.to.neighboring.line=Jump to the next/previous line boundaries
combobox.item.stop.at.line.start=Always jump to the line start
combobox.item.stop.at.line.end=Always jump to the line end
combobox.item.stop.at.both.line.ends=Stop at both line boundaries
combobox.item.hint.ide.default={0} default
combobox.item.hint.os.default.linux=Linux default
combobox.item.hint.os.default.mac=macOS default
combobox.item.hint.os.default.unix=Unix default
combobox.item.hint.os.default.windows=Windows default
group.brace.highlighting=Highlight on Caret Movement
checkbox.highlight.matched.brace=Matched brace
checkbox.highlight.current.scope=Current scope
combobox.paste.reformat=Reformat on paste:
group.advanced.mouse.usages=Mouse Control
checkbox.enable.ctrl.mousewheel.changes.font.size=Change font size with Ctrl+Mouse Wheel
checkbox.enable.ctrl.mousewheel.changes.font.size.macos=Change font size with Command+Mouse Wheel
checkbox.enable.drag.n.drop.functionality.in.editor=Move code fragments with drag-and-drop
checkbox.enable.drag.n.drop.functionality.in.editor.comment=To copy, hold Ctrl while dragging
checkbox.honor.camelhumps.words.settings.on.double.click=Honor "CamelHumps" words settings when selecting on double click
group.smart.keys=Smart Keys
checkbox.use.camelhumps.words=Use "CamelHumps" words
checkbox.surround.selection.on.typing.quote.or.brace=Surround selection on typing quote or brace
checkbox.enable.double.ctrl=Add multiple carets on double {0} with arrow keys
checkbox.tab.exists.brackets.and.quotes=Jump outside closing bracket/quote with Tab when typing
checkbox.insert.pair.quote=Insert pair quote
checkbox.insert.pair.bracket=Insert paired brackets (), [], {}, <>
checkbox.javadoc.stub.after.slash.star.star=Insert documentation comment stub
checkbox.insert.pair.percent.gt.in.jsp=Insert pair '%>' in JSP
checkbox.insert.pair.curly.brace=Insert pair '}'
checkbox.smart.indent=Smart indent
label.smart.enter=Smart Enter:
checkbox.smart.end.on.blank.line=End on blank line moves caret to indent position
checkbox.smart.home=Home moves caret to first non-whitespace character
checkbox.indenting.backspace=Backspace smart indent
group.error.highlighting=Error Highlighting
group.quick.documentation=Quick Documentation
group.editor.tooltips=Editor Tooltips
group.enter.title=Enter
editbox.autoreparse.delay=Autoreparse delay:
editbox.autoreparse.delay.ms.suffix=milliseconds
editbox.error.stripe.mark.min.height=Error stripe mark min height:
editbox.error.stripe.mark.min.height.pixels.suffix=pixels
combobox.next.error.action.goes.to.label=The 'Next Error' action goes through:
combobox.next.error.action.goes.to.errors=The problems with the highest priority
combobox.next.error.action.goes.to.all.problems=All problems
checkbox.show.import.popup=Show import &popup
checkbox.indent.use.tab.character=Use tab character
checkbox.indent.smart.tabs=Smart tabs
editbox.indent.tab.size=Tab size:
editbox.indent.indent=Indent:
editbox.indent.continuation.indent=Continuation indent:
editbox.indent.label.indent=Label indent:
checkbox.indent.keep.indents.on.empty.lines=Keep indents on empty lines
checkbox.indent.absolute.label.indent=Absolute label indent
checkbox.use.relative.indents=Use indents relative to expression start
tooltip.indent.must.be.multiple.of.tab.size.for.smart.tabs.to.operate=Indent must be multiple of tab size for smart tabs to operate
combobox.crlf.system.dependent=System-Dependent
combobox.crlf.unix=Unix and macOS (\\n)
combobox.crlf.windows=Windows (\\r\\n)
combobox.crlf.mac=Classic macOS (\\r)
group.tabs.and.indents=Tabs and Indents
checkbox.indent.use.same.settings.for.all.file.types=Use default indent options (General)
tab.indent.other=Other
combobox.line.separator.for.new.files=Line separator:
editbox.right.margin.columns=Hard wrap at
checkbox.wrap.typing.on.right.margin=Wrap when typing reaches right margin
checkbox.after.description=After description
checkbox.after.parameter.descriptions=After parameter descriptions
checkbox.after.return.tag=After return tag
checkbox.enable.leading.asterisks=Enable leading asterisks
option.table.sizing.text=Chop down if long.
title.choose.code.style.scheme=Choose Code Style Scheme
radio.use.per.project.code.style.scheme=Use per-project code style scheme
radio.use.global.code.style=Use global code style
button.import=Import...
button.export=Export...
button.edit.global.settings=Edit Global Settings...
label.edit.per.project.or.global.code.style=<html><body>Check option above on for per-project code style configuration<br>or use global code style. Global code style settings can be configured<br>in IDE Settings/Global Code Style</body></html>
title.project.code.style=Project\nCode Style
title.code.style.settings.import=Settings Import
title.import.scheme.from=Import From
title.import.scheme.chooser=Import Scheme
import.scheme.shared=Shared Scheme
message.code.style.scheme.already.exists=Scheme {0} already exists. Overwrite settings?
code.style.scheme.import.unnamed=Unnamed
message.code.style.scheme.import.success={0} settings were imported to {1} scheme.{2}
message.code.style.scheme.import.failure={0} import failed with error message: {1}
scheme.exporter.ui.export.as.title=Export As
scheme.exporter.ui.file.chooser.title=Target File
scheme.exporter.ui.file.chooser.message=Export to
scheme.exporter.ui.scheme.exported.message={0} {1} was exported to {2}
scheme.exporter.ui.cannot.write.message=Cannot write to selected file/location.
scheme.exporter.ui.export.failed=Export failed: {0}
code.style.widget.configure.indents=Configure Indents for {0}...
code.style.set.from.menu.language=Language

label.name=Name:
error.scheme.must.have.a.name=Scheme must have a name
error.illegal.scheme.name=Illegal scheme name
error.a.scheme.with.this.name.already.exists.or.was.deleted.without.applying.the.changes=A scheme with this name already exists or was deleted without applying the changes
title.select.font=Select Font
settings.editor.font.restored.defaults=Restore Defaults
settings.editor.font.overwrite=Use color scheme font instead of the
settings.editor.console.font.overwrite=Use console font instead of the
action.apply.editor.font.settings=Apply editor font settings
checkbox.show.only.monospaced.fonts=Show only monospaced fonts
primary.font=Font:
secondary.font=Fallback font:
use.ligatures=Enable font ligatures
ligatures.jre.warning=<html>The JRE you are running {0} with<br>is known to have performance issues<br>related to ligatures support.<br>Use <a href="https://confluence.jetbrains.com/display/IDEADEV/JetBrains+Runtime+Environment">JetBrains Runtime</a> instead to enable ligatures.
settings.editor.font.none=<None>
settings.editor.font.overridden.message=Current editor font: {0}, {1}
settings.editor.font.defined.in.color.scheme.message= \u2014 defined in the color scheme
editbox.enter.tag.name=Enter tag name:
title.tag.name=Tag Name
checkbox.color.background=Background
checkbox.color.foreground=Foreground
checkbox.color.effects=Effects
checkbox.color.error.stripe.mark=Error stripe mark
combobox.effect.bordered=Bordered
combobox.effect.underscored=Underscored
combobox.effect.boldunderscored=Bold Underscored
combobox.effect.underwaved=Underwaved
combobox.effect.strikeout=Strikeout
combobox.effect.bold.dottedline=Dotted Line
checkbox.font.bold=Bold
checkbox.font.italic=Italic
label.font.type=Font
label.inherit.attributes=Inherit values from:
title.diff=Diff \\& Merge
title.vcs=VCS
title.file.status.colors=File Status Colors
title.file.status.color=File Status Color:
title.file.status.color.restore.default=Restore Default
file.status.colors.header.status=File Status
file.status.colors.header.color=Color
file.status.color.none=UI Font Color
file.status.color.menu.choose.color=Custom...
file.status.color.menu.normal.text=UI Font Color
file.status.color.menu.reset.to.default=Default
title.scope.based=By Scope
title.colors.and.fonts=Color Scheme
title.colors.scheme.font=Color Scheme Font
title.console.font=Console Font
progress.analysing.font=Analysing font: {0}
group.editor.font=Editor Font
label.fallback.fonts.list.description=For symbols not supported by the main font
quickdoc.tooltip.font.size.by.wheel=Slider or Ctrl+Wheel change font size
label.font.size=Font size:
label.font.name=Name:
editbox.font.size=Size:
editbox.line.spacing=Line spacing:
progress.analyzing.fonts=Analyzing Fonts
error.readonly.scheme.cannot.be.modified=Read-only scheme cannot be modified. Please do "Save As..." first.
error.shared.scheme.cannot.be.modified=Shared scheme cannot be modified. Please do "Save As..." first.
title.cannot.modify.readonly.scheme=Cannot Modify Read-Only Scheme
hint.readonly.scheme.cannot.be.modified=Read-only scheme, copy to edit
title.path.variables=Path Variables
editbox.path.macro.value=Value:
editbox.path.macro.name=Name:
button.edit=&Edit
button.edit.dialog=&Edit...
button.add=&Add...
error.variable.already.exists=Variable with name {0} already exists
column.name=Name
column.value=Value
title.add.variable=Add Variable
title.edit.variable=Edit Variable
error.path.variable.is.undefined=Path variable "{0}" is undefined
text.no.path.variables=No path variables
config.import.invalid.directory.error={0} is not a directory!
command.exit=Exit
exit.confirm.title=Confirm Exit
exit.confirm.prompt=Are you sure you want to exit {0}?
exit.confirm.prompt.tasks=You have background tasks running. Are you sure you want to stop them and exit {0}?
exclude.from.completion.group=Exclude from import and completion:
exclude.from.completion.prompt=Enter the name of the package or class to exclude from auto-import and class name completion:
exclude.from.completion.title=Exclude Package
exclude.from.imports.add=A&dd
edit.code.folding.options=Open code folding options
button.new=&New...
building.include.indices=Building include indices...
loading.include.indices=Loading include indices...
auto.import=Auto Import
title.other.languages=Other Languages
title.tabs.and.indents=Tabs and Indents

launcher.script.title=Create Launcher Script
launcher.script.luke=<html>Launcher script creation is now managed in Toolbox App settings.<br> \
  See the <a href="https://blog.jetbrains.com/blog/2018/08/23/toolbox-app-1-11-whats-new/">Toolbox App announcement</a> for more details.</html>
launcher.script.prompt=<html>You can create a launcher script to enable opening files and projects in {0} from the command line.<br> \
  Please specify the name of the script and the path where it should be created:</html>
launcher.script.overwrite=The file ''{0}'' already exists. Would you like to overwrite it?
launcher.script.overwrite.button=&Overwrite
launcher.script.sudo.prompt=Please enter your password to create a launcher script in a ''{0}''
launcher.script.progress=Creating launcher script...

desktop.entry.title=Create Desktop Entry
desktop.entry.success=You may now exit {0} and start it from the system menu.<br/> \
  If a new menu entry is not shown, please restart your login session.
desktop.entry.xdg.missing=Unfortunately, xdg-utils seem to be unavailable on your system.
desktop.entry.icon.missing=Unable to locate suitable application icon in ''{0}''.
desktop.entry.script.missing=Unable to locate suitable startup script in ''{0}''.
desktop.entry.sudo.prompt=Please enter your password to create a desktop entry

watcher.slow.sync=External file changes sync may be slow
watcher.exe.not.found=Native file watcher executable not found
watcher.exe.compile=Unfortunately, JetBrains does not officially support native file watcher for this architecture. \
  Please follow <a href="https://confluence.jetbrains.com/display/IDEADEV/Compiling+File+Watcher">these instructions</a> to compile it yourself.
watcher.exe.not.exists=Native file watcher is not supported on this platform
watcher.exe.not.exe=Native file watcher is not executable: <a href="{0}">{0}</a>
watcher.failed.to.start=File watcher failed to start
watcher.gave.up=File watcher gave up to operate
watcher.non.watchable.project=Project files cannot be watched (are they under network mount?)

fs.case.sensitivity.mismatch.title=Filesystem Case-Sensitivity Mismatch
fs.case.sensitivity.mismatch.message=\
  The project seems to be located on a case-{0,choice,0#|1#in}sensitive file system.<br> \
  This does not match the IDE setting (controlled by property "<tt>idea.case.sensitive.fs</tt>")<br> \
  <a href="https://confluence.jetbrains.com/display/IDEADEV/Filesystem+Case-Sensitivity+Mismatch">More details.</a>

arrangement.title.settings.tab=Arrangement
arrangement.text.empty.rule=<empty rule>
arrangement.text.type=Type
arrangement.text.modifier=Modifier
arrangement.text.name=Name
arrangement.order.name=Order
arrangement.action.rule.add.text=Add rule
arrangement.action.rule.add.description=Add new arrangement rule
arrangement.action.section.rule.add.text=Add section rule
arrangement.action.section.rule.add.description=Add new section arrangement rule
arrangement.action.rule.remove.text=Remove rule(s)
arrangement.action.rule.remove.description=Remove selected arrangement rule(s)
arrangement.action.rule.edit.text=Edit rule
arrangement.action.rule.edit.description=Edit selected arrangement rule
arrangement.action.rule.move.up.text=Move up
arrangement.action.rule.move.up.description=Move selected arrangement rule(s) up
arrangement.action.rule.move.down.text=Move down
arrangement.action.rule.move.down.description=Move selected arrangement rule(s) down
arrangement.action.alias.rule.add.edit.text=Configure matching rules aliases
arrangement.action.alias.rule.add.edit.description=Configure aliases for arrangement matching rules
arrangement.settings.section.groups=Grouping rules:
arrangement.settings.section.match=Matching rules:
arrangement.settings.section.rule.custom.token.title=Rules Alias Definitions
arrangement.settings.section.rule.sequence=Rules alias definitions:
arrangement.settings.groups.property.field=Group property field with corresponding getter/setter
arrangement.settings.groups.dependent.methods=Keep dependent methods together
arrangement.settings.groups.overridden.methods=Keep overridden methods together
arrangement.settings.groups.getters.and.setters.together=Keep getters and setters together
arrangement.settings.order.type.keep=keep order
arrangement.settings.order.type.by.name=order by name
arrangement.settings.order.type.depth.first=depth-first order
arrangement.settings.order.type.breadth.first=breadth-first order
arrangement.settings.text.general.type=Type:
arrangement.settings.text.general.modifier=Modifier:
arrangement.settings.text.general.name=Name:
arrangement.settings.text.general.text=Text:
arrangement.settings.text.general.order=Order:
arrangement.settings.text.general.sequence=Aliases:
arrangement.settings.text.general.xml.namespace=Namespace:
arrangement.settings.text.entry.type.xml.tag=tag
arrangement.settings.text.entry.type.xml.attribute=attribute
arrangement.settings.additional.force.combobox.name=Force rearrange:
arrangement.settings.additional.force.rearrange.always=Always
arrangement.settings.additional.force.rearrange.never=Never
arrangement.settings.additional.force.rearrange.according.to.dialog=Use current mode (toggled in the Reformat Code dialog)
arrangement.settings.additional.title=Additional settings
arrangement.settings.validation.duplicate.matching.rule=Matching rule have to be unique in the current settings. Duplicated rules will be ignored.
arrangement.settings.validation.duplicate.section.text=Section text have to be unique in the current settings. Rule with duplicated text will be ignored.
arrangement.settings.validation.empty.section.rule=Section should contain at least one arrangement entry otherwise it will be never inserted.
arrangement.settings.validation.end.section.rule.without.start=Can not find start section rule for the current end rule.


checkbox.spaces.around.lambda.arrow=Lambda arrow
checkbox.spaces.around.method.ref.dbl.colon.arrow=Method reference double colon
settings.code.style.general.default.options=Default Options
settings.code.style.general.indents.detection=Indents Detection
settings.code.style.general.formatter.control=Formatter Control
settings.code.style.general.enable.formatter.tags=Enable formatter markers in comments
settings.code.style.general.formatter.off.tag=Formatter off\:
settings.code.style.general.formatter.on.tag=Formatter on\:
settings.code.style.general.formatter.marker.regexp=Enable regular expressions in formatter markers
settings.code.style.general.formatter.marker.invalid.regexp=Invalid regular expression
settings.code.style.general.autodetect.indents=Detect and use existing file indents for editing
settings.code.style.general.file.pattern=Pattern:
settings.code.style.general.file.pattern.new=New File Pattern
settings.code.style.general.file.pattern.edit=Edit File Pattern
settings.code.style.general.excluded.files=Do not format, optimize imports, arrange code:
import.scheme.chooser.source=From\:
import.scheme.chooser.destination=To\:
checkbox.reformat.on.typing.rbrace=Reformat block on typing '}'
settings.code.style.import.xml.error.invalid.file=The file doesn''t seem to be  a valid Intellij IDEA XML scheme, it should contain ''code_scheme root'' element, found ''{0}'' instead.
settings.code.style.import.xml.error.missing.scheme.name=Scheme 'name' attribute not found.
settings.code.style.import.xml.error.can.not.load=Can''t load code style scheme {0}.

group.richcopy=Rich-Text Copy
radiogroup.enable.richcopy.label=Copy{0} a text fragment as:
radiobutton.enable.richcopy.as.rich.text=Rich text
radiobutton.enable.richcopy.as.simple.text=Plain text
radiobutton.enable.richcopy.as.rich.text.comment=All formatting will be copied, including font, colors and so on
combobox.richcopy.color.scheme=Color scheme for copied fragment:
combobox.richcopy.color.scheme.active=Active scheme

settings.code.style.default.general=Default
wrapping.wrap.if.multiple.annotations=Wrap if multiple
wrapping.after.annotations=After last field annotation

reformat.changed.text.file.too.big.notification.groupId=Reformat changed text
reformat.changed.text.file.too.big.notification.title=Couldn't calculate changed ranges
reformat.changed.text.file.too.big.notification.text=file {0} is too big or there are too many changes
bulk.reformat.prepare.progress.text=Preparing...
bulk.reformat.process.progress.text=Processing...

code.style.different.indent.size.detected=This file is indented with {0} instead of {1} configured for the project

code.style.indent.detector.reject=Indent New Lines with {0}
code.style.indent.detector.disable=Disable Indents Detection for Project
code.style.indent.detector.enable=Enable Indents Detection for Project
code.style.indent.detector.apply=<html>Indent New Lines with {0}  <span style="color:#{1}">detected</span>
code.style.indent.detector.reindent=Reindent File with {0}
code.style.indent.detector.notification.content=Indents detection disabled
code.style.indent.provider.notification.re.enable=Undo
code.style.indent.provider.notification.settings=Code Style Settings

editorsearch.matches={0, choice, 0#0 results|1#1 result|2#{0} results}
editorsearch.current.cursor.position={0}/{1}
editorsearch.toomuch={0}+
editorsearch.noselection=No selection
editorsearch.empty.string.matches=Vague pattern
editorsearch.in.selection=Search in selection only
editorsearch.in.selection.with.hint=Search in selection. {0} to search for selected text
code.style.other.file.types=Other File Types
code.style.other.label=Text files and unsupported file types\:

checkbox.line.comment.add.space=Add a space at comment start

rainbow.option.panel.display.name=Semantic highlighting
checkbox.stop.1=Color #1
checkbox.stop.2=Color #2
checkbox.stop.3=Color #3
checkbox.stop.4=Color #4
checkbox.stop.5=Color #5
checkbox.rainbow=Semantic highlighting
rainbow.option.description=<html><font color=gray><sub>Assign each parameter or variable<br>its own color from the spectrum below:

color.scheme.reset=Reset
color.scheme.reset.message=Reset the scheme to its default values?\nNote: all the changes you have made to the scheme will be lost.
color.scheme.reset.title=Restore Defaults

color.scheme.theme.change.confirmation=Looks like you have set a {0} editor color scheme.\nWould you like to set {0} theme for entire {1}?
color.scheme.theme.change.confirmation.title=Change {0} Theme

settings.code.style.reset.to.defaults.message=Change all code style settings to their default values?\nNote: all the changes you have made to the scheme will be lost.
settings.code.style.reset.to.defaults.title=Restore Defaults
editor.settings.delete.trailing.spaces.on.caret.line=Delete trailing spaces on caret line
settings.editor.scheme.copy=Duplicate...
settings.editor.scheme.delete=Delete...
settings.editor.scheme.import=Import {0}
settings.editor.scheme.export=Export
settings.editor.scheme.reset=Restore Defaults
settings.editor.scheme.copy.to.project=Copy to Project...
settings.editor.scheme.copy.to.ide=Copy to IDE...
settings.editor.scheme.copy.to.ide.title=Copy Project Scheme to IDE
settings.editor.scheme.copy.to.ide.label=IDE Scheme Name:
settings.editor.scheme.copy.to.project.title=Copy Setting to Project
settings.editor.scheme.copy.to.project.message=Overwrite project settings with values from {0}?
settings.editor.scheme.import.success={0} was imported to {1} scheme.
settings.editor.scheme.import.failure=Import failed: {0} is not a valid scheme.
settings.editor.scheme.import.chooser.button=Import
settings.editor.scheme.import.chooser.title=Choose Schemes
title.save.code.style.scheme.as=Duplicate Code Style Scheme As
title.save.color.scheme.as=Duplicate Color Scheme As
settings.code.style.visual.guides=Visual guides
settings.code.style.general.visual.guides.hint=Specify one guide (80) or several (80, 120)

project.code.style.migration.title=Project code style settings migration
project.code.style.migration.message=The code style settings of your project {0} were migrated to the new format. We''re keeping the old format for now, for backwards compatibility.
margin.columns=columns
combobox.lineseparator.for.new.files.hint=Applied to new files

integer.field.value.expected=A value is expected
integer.field.value.out.of.range=Value ''{0}'' is out of range {1}..{2}
integer.field.value.not.a.number=Value ''{0}'' is not an integer number
integer.field.value.default=Default
settings.soft.margins.empty.list=None
settings.default.value.prefix=Default: {0}

editor.appearance.show.external.annotations=External annotations
editor.appearance.show.inferred.annotations=Inferred annotations

editor.appearance.show.chain.call.type.hints=Show chain call type hints
editor.appearance.show.chain.call.type.hints.toggle.on=Show hints for chain calls
editor.appearance.show.chain.call.type.hints.toggle.off=Hide hints for chain calls

settings.hints=Inlay Hints

light.edit.close.title=Close Document
light.edit.close.message=The document has been modified.\nDo you want to save the changes?
light.edit.close.save=Save
light.edit.close.discard=Discard
light.edit.close.cancel=Cancel

light.edit.exit.title=Save Documents
light.edit.exit.message=There are unsaved documents.\nDo you want to save the changes?

light.edit.open.in.project.intention=Open file in project...
light.edit.open.in.project.progress.message=Searching Project Root
light.edit.open.in.project.dialog.title=Choose Project Root Directory
light.edit.action.recentFile.text=Open _Recent

light.edit.unableToOpenFile.text={0} is unsupported binary file
light.edit.unableToOpenFile.title=Unable to Open File


custom.option=Custom...
configurable.CodeStyleSchemesConfigurable.display.name=Code Style
configurable.ArrangementRuleAliasesListEditor.display.name=Custom Composite Tokens

configurable.editor.tabs.display.name=Editor Tabs
label.show.notification.after=Show notification after:
checkbox.show.notification.after.reformat.code.action=Reformatting code
checkbox.show.notification.after.optimize.imports.action=Imports optimization
checkbox.highlight.usages.of.element.at.caret=Usages of element at caret
checkbox.show.inline.dialog.on.local.variable.references=Show inline dialog for local variables
group.formatting=Formatting
group.refactorings=Refactorings
editor.options.scrolling=Scrolling
editor.options.prefer.scrolling.editor.label=Caret behavior:
editor.options.prefer.scrolling.editor.canvas.to.keep.caret.line.centered=Keep the caret in place, scroll editor canvas
editor.options.prefer.moving.caret.line.to.minimize.editor.scrolling=Move caret, minimize editor scrolling
editor.options.save.files.group=Save Files
editor.options.gutter.group=Gutter
editor.options.line.feed=Ensure an empty line at the end of a file on Save
editor.options.quick.doc.on.mouse.hover=Show quick documentation on mouse move
editor.options.highlight.modified.line=Highlight modified lines in the gutter
editor.options.highlight.modified.line.error.stripe=Highlight modified lines in error stripe on the scrollbar
editor.options.whitespace.line.color=Highlight lines with whitespace-only modifications with a different color
editor.options.tooltip.delay=Tooltip delay:
editor.options.ms=milliseconds
completion.option.match.case=Match case:   
completion.option.first.letter.only=First letter only  
completion.option.all.letters=All letters
completion.option.sort.suggestions.alphabetically=Sort suggestions alphabetically
completion.option.insert.selected.suggestion=Insert selected suggestion by pressing space, dot, or other context-dependent keys
console.fold.console.lines=Fold console lines that contain:
console.enter.substring.folded=Enter a substring of a console line you'd like to see folded:
console.fold.exceptions=Exceptions:
console.enter.substring.dont.fold\:=Enter a substring of a console line you don't want to fold:
console.fold.nothing=Fold nothing
console.no.exceptions=No exceptions
checkbox.use.small.font.for.labels=Use small font for labels
editbox.blanklines.around.field.in.interface=Around field in interface:
editbox.blanklines.around.method.in.interface=Around method in interface:
settings.editor.font.default=default
custom.option.description=Set custom page size

intentions.are.not.available.message=Intentions are not available while indices are updating.
settings.code.style.formatter.control.do.not.format.title=Do not format:
settings.code.style.formatter.control.tab.title=Formatter Control
settings.code.style.general.tab.title=General