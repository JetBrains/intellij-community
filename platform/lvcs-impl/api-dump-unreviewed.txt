f:com.intellij.history.core.ByteContentRetriever
- <init>(com.intellij.history.integration.IdeaGateway,com.intellij.history.core.LocalHistoryFacade,com.intellij.openapi.vfs.VirtualFile,com.intellij.history.FileRevisionTimestampComparator):V
- getResult():B[]
c:com.intellij.history.core.ChangeList
- <init>(com.intellij.history.core.ChangeListStorage):V
- f:accept(com.intellij.history.core.changes.ChangeVisitor):V
- f:addChange(com.intellij.history.core.changes.Change):V
- f:beginChangeSet():V
- f:close():V
- f:endChangeSet(java.lang.String,com.intellij.history.ActivityId):com.intellij.history.core.changes.ChangeSet
- f:force():V
- f:forceBeginChangeSet():com.intellij.history.core.changes.ChangeSet
- f:getChangesInTests():java.util.List
- f:iterChanges():java.lang.Iterable
- f:nextId():J
- f:purgeObsolete(J):V
- f:setIntervalBetweenActivities(I):V
com.intellij.history.core.ChangeListStorage
- a:close():V
- a:force():V
- a:nextId():J
- a:purge(J,I,com.intellij.util.Consumer):V
- a:readPrevious(I,it.unimi.dsi.fastutil.ints.IntSet):com.intellij.history.core.ChangeSetHolder
- a:writeNextSet(com.intellij.history.core.changes.ChangeSet):V
f:com.intellij.history.core.ChangeListStorageImpl
- com.intellij.history.core.ChangeListStorage
- <init>(java.nio.file.Path):V
- close():V
- force():V
- nextId():J
- purge(J,I,com.intellij.util.Consumer):V
- readPrevious(I,it.unimi.dsi.fastutil.ints.IntSet):com.intellij.history.core.ChangeSetHolder
- writeNextSet(com.intellij.history.core.changes.ChangeSet):V
*c:com.intellij.history.core.ChangeProcessorBase
- <init>(java.lang.String,java.lang.String,kotlin.jvm.functions.Function1):V
- process(com.intellij.history.core.changes.ChangeSet,com.intellij.history.core.changes.Change,java.lang.String):V
f:com.intellij.history.core.ChangeSetHolder
- java.lang.Record
- <init>(I,com.intellij.history.core.changes.ChangeSet):V
- changeSet():com.intellij.history.core.changes.ChangeSet
- f:equals(java.lang.Object):Z
- f:hashCode():I
- id():I
- f:toString():java.lang.String
a:com.intellij.history.core.Content
- <init>():V
- equals(java.lang.Object):Z
- a:getBytes():B[]
- getBytesIfAvailable():B[]
- getString(com.intellij.history.core.tree.Entry,com.intellij.history.integration.IdeaGateway):java.lang.String
- a:isAvailable():Z
- a:release():V
- toString():java.lang.String
- write(java.io.DataOutput):V
f:com.intellij.history.core.DataStreamUtil
- <init>():V
- s:readChange(java.io.DataInput):com.intellij.history.core.changes.Change
- s:readEntry(java.io.DataInput):com.intellij.history.core.tree.Entry
- s:readString(java.io.DataInput):java.lang.String
- s:readStringOrNull(java.io.DataInput):java.lang.String
- s:writeChange(java.io.DataOutput,com.intellij.history.core.changes.Change):V
- s:writeEntry(java.io.DataOutput,com.intellij.history.core.tree.Entry):V
- s:writeString(java.io.DataOutput,java.lang.String):V
- s:writeStringOrNull(java.io.DataOutput,java.lang.String):V
f:com.intellij.history.core.InMemoryChangeListStorage
- com.intellij.history.core.ChangeListStorage
- <init>():V
- close():V
- force():V
- nextId():J
- purge(J,I,com.intellij.util.Consumer):V
- readPrevious(I,it.unimi.dsi.fastutil.ints.IntSet):com.intellij.history.core.ChangeSetHolder
- writeNextSet(com.intellij.history.core.changes.ChangeSet):V
com.intellij.history.core.LabelImpl
- a:getByteContent(com.intellij.history.core.tree.RootEntry,java.lang.String):com.intellij.history.ByteContent
- a:getLabelChangeId():J
c:com.intellij.history.core.LocalHistoryFacade
- <init>(com.intellij.history.core.ChangeList):V
- f:accept(com.intellij.history.core.changes.ChangeVisitor):V
- f:addChangeInTests(com.intellij.history.core.changes.StructuralChange):V
- f:addListener(com.intellij.history.core.LocalHistoryFacade$Listener,com.intellij.openapi.Disposable):V
- f:beginChangeSet():V
- f:contentChanged(java.lang.String,com.intellij.history.core.Content,J):V
- f:created(java.lang.String,Z):V
- f:deleted(java.lang.String,com.intellij.history.core.tree.Entry):V
- f:endChangeSet(java.lang.String):V
- f:endChangeSet(java.lang.String,com.intellij.history.ActivityId):V
- bs:endChangeSet$default(com.intellij.history.core.LocalHistoryFacade,java.lang.String,com.intellij.history.ActivityId,I,java.lang.Object):V
- f:forceBeginChangeSet():V
- f:getChangeListInTests():com.intellij.history.core.ChangeList
- f:moved(java.lang.String,java.lang.String):V
- f:putLabelInTests(com.intellij.history.core.changes.PutLabelChange):V
- f:putSystemLabel(java.lang.String,java.lang.String,I):com.intellij.history.core.LabelImpl
- f:putUserLabel(java.lang.String,java.lang.String):com.intellij.history.core.LabelImpl
- f:readOnlyStatusChanged(java.lang.String,Z):V
- f:removeListener(com.intellij.history.core.LocalHistoryFacade$Listener):V
- f:renamed(java.lang.String,java.lang.String):V
- f:revertUpToChange(com.intellij.history.core.tree.RootEntry,J,java.lang.String,Z,Z):java.lang.String
- f:revertUpToChangeSet(com.intellij.history.core.tree.RootEntry,J,java.lang.String,Z,Z):java.lang.String
a:com.intellij.history.core.LocalHistoryFacade$Listener
- <init>():V
- changeAdded(com.intellij.history.core.changes.Change):V
- changeSetFinished(com.intellij.history.core.changes.ChangeSet):V
f:com.intellij.history.core.LocalHistoryFacadeKt
- *sf:collectChanges(com.intellij.history.core.LocalHistoryFacade,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1):V
f:com.intellij.history.core.LocalHistoryRecordsTable
- com.intellij.util.io.storage.AbstractRecordsTable
- <init>(java.nio.file.Path,com.intellij.util.io.StorageLockContext):V
- getFSTimestamp():J
- getFirstRecord():I
- getLastId():J
- getLastRecord():I
- getNextRecord(I):I
- getPrevRecord(I):I
- getTimestamp(I):J
- setFSTimestamp(J):V
- setFirstRecord(I):V
- setLastId(J):V
- setLastRecord(I):V
- setNextRecord(I,I):V
- setPrevRecord(I,I):V
- setTimestamp(I,J):V
f:com.intellij.history.core.LocalHistoryStorage
- com.intellij.util.io.storage.IStorage
- <init>(java.nio.file.Path):V
- createNextRecord():I
- deleteRecordsUpTo(I):V
- getFSTimestamp():J
- getFirstRecord():I
- getLastId():J
- getLastRecord():I
- getNextRecord(I):I
- getOffsetAndSize(I):com.intellij.openapi.util.Pair
- getPrevRecord(I):I
- getTimestamp(I):J
- setFSTimestamp(J):V
- setLastId(J):V
f:com.intellij.history.core.Paths
- sf:DELIM:C
- <init>():V
- s:appended(java.lang.String,java.lang.String):java.lang.String
- s:createDvcsFilePath(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.FilePath
- s:createDvcsFilePath(java.lang.String,Z):com.intellij.openapi.vcs.FilePath
- s:equals(java.lang.String,java.lang.String):Z
- s:getNameOf(java.lang.String):java.lang.String
- s:getParentOf(java.lang.String):java.lang.String
- s:isCaseSensitive():Z
- s:isParent(java.lang.String,java.lang.String):Z
- s:isParentOrChild(java.lang.String,java.lang.String):Z
- s:relativeIfUnder(java.lang.String,java.lang.String):java.lang.String
- s:renamed(java.lang.String,java.lang.String):java.lang.String
- s:reparented(java.lang.String,java.lang.String):java.lang.String
- s:setCaseSensitive(Z):V
- s:split(java.lang.String):java.lang.Iterable
- s:useSystemCaseSensitivity():V
f:com.intellij.history.core.RevisionsCollector
- <init>():V
- s:collect(com.intellij.history.core.LocalHistoryFacade,com.intellij.history.core.tree.RootEntry,java.lang.String,java.lang.String,java.lang.String):java.util.List
- s:collect(com.intellij.history.core.LocalHistoryFacade,com.intellij.history.core.tree.RootEntry,java.lang.String,java.lang.String,java.lang.String,Z):java.util.List
c:com.intellij.history.core.StoredContent
- com.intellij.history.core.Content
- <init>(I):V
- <init>(java.io.DataInput):V
- s:acquireContent(com.intellij.openapi.vfs.VirtualFile):com.intellij.history.core.StoredContent
- s:acquireContent(B[]):com.intellij.history.core.StoredContent
- equals(java.lang.Object):Z
- getBytes():B[]
- getContentId():I
- hashCode():I
- isAvailable():Z
- release():V
- s:transientContent(com.intellij.openapi.vfs.VirtualFile):com.intellij.history.core.StoredContent
- write(java.io.DataOutput):V
a:com.intellij.history.core.changes.Change
- p:<init>(J):V
- p:<init>(java.io.DataInput):V
- accept(com.intellij.history.core.changes.ChangeVisitor):V
- a:affectsMatching(java.util.regex.Pattern):Z
- a:affectsPath(java.lang.String):Z
- a:affectsProject(java.lang.String):Z
- f:equals(java.lang.Object):Z
- a:getContentsToPurge():java.util.List
- getId():J
- f:hashCode():I
- a:isCreationalFor(java.lang.String):Z
- write(java.io.DataOutput):V
f:com.intellij.history.core.changes.ChangeSet
- <init>(J,J):V
- <init>(java.io.DataInput):V
- accept(com.intellij.history.core.changes.ChangeVisitor):V
- addChange(com.intellij.history.core.changes.Change):V
- anyChangeMatches(java.util.function.Predicate):Z
- equals(java.lang.Object):Z
- getActivityId():com.intellij.history.ActivityId
- getAffectedPaths():java.util.List
- getChanges():java.util.List
- getContentsToPurge():java.util.List
- getFirstChange():com.intellij.history.core.changes.Change
- getId():J
- getLabel():java.lang.String
- getLabelColor():I
- getLastChange():com.intellij.history.core.changes.Change
- getName():java.lang.String
- getTimestamp():J
- hashCode():I
- isContentChangeOnly():Z
- isEmpty():Z
- isLabelOnly():Z
- isSystemLabelOnly():Z
- lock():V
- setActivityId(com.intellij.history.ActivityId):V
- setName(java.lang.String):V
- toString():java.lang.String
- write(java.io.DataOutput):V
a:com.intellij.history.core.changes.ChangeVisitor
- <init>():V
- begin(com.intellij.history.core.changes.ChangeSet):V
- end(com.intellij.history.core.changes.ChangeSet):V
- finished():V
- p:stop():V
- visit(com.intellij.history.core.changes.ContentChange):V
- visit(com.intellij.history.core.changes.CreateEntryChange):V
- visit(com.intellij.history.core.changes.DeleteChange):V
- visit(com.intellij.history.core.changes.MoveChange):V
- visit(com.intellij.history.core.changes.PutLabelChange):V
- visit(com.intellij.history.core.changes.ROStatusChange):V
- visit(com.intellij.history.core.changes.RenameChange):V
- visit(com.intellij.history.core.changes.StructuralChange):V
f:com.intellij.history.core.changes.ChangeVisitor$StopVisitingException
- java.lang.Exception
- <init>():V
f:com.intellij.history.core.changes.ContentChange
- com.intellij.history.core.changes.StructuralChange
- <init>(J,java.lang.String,com.intellij.history.core.Content,J):V
- <init>(java.io.DataInput):V
- accept(com.intellij.history.core.changes.ChangeVisitor):V
- getContentsToPurge():java.util.List
- getOldContent():com.intellij.history.core.Content
- getOldTimestamp():J
- revertOn(com.intellij.history.core.tree.RootEntry,Z):V
- write(java.io.DataOutput):V
f:com.intellij.history.core.changes.CreateDirectoryChange
- com.intellij.history.core.changes.CreateEntryChange
- <init>(J,java.lang.String):V
- <init>(java.io.DataInput):V
a:com.intellij.history.core.changes.CreateEntryChange
- com.intellij.history.core.changes.StructuralChange
- <init>(J,java.lang.String):V
- <init>(java.io.DataInput):V
- accept(com.intellij.history.core.changes.ChangeVisitor):V
- isCreationalFor(java.lang.String):Z
- revertOn(com.intellij.history.core.tree.RootEntry,Z):V
f:com.intellij.history.core.changes.CreateFileChange
- com.intellij.history.core.changes.CreateEntryChange
- <init>(J,java.lang.String):V
- <init>(java.io.DataInput):V
f:com.intellij.history.core.changes.DeleteChange
- com.intellij.history.core.changes.StructuralChange
- <init>(J,java.lang.String,com.intellij.history.core.tree.Entry):V
- <init>(java.io.DataInput):V
- accept(com.intellij.history.core.changes.ChangeVisitor):V
- getContentsToPurge():java.util.List
- getDeletedEntry():com.intellij.history.core.tree.Entry
- isDeletionOf(java.lang.String):Z
- revertOn(com.intellij.history.core.tree.RootEntry,Z):V
- write(java.io.DataOutput):V
f:com.intellij.history.core.changes.MoveChange
- com.intellij.history.core.changes.StructuralChange
- <init>(J,java.lang.String,java.lang.String):V
- <init>(java.io.DataInput):V
- accept(com.intellij.history.core.changes.ChangeVisitor):V
- getOldParent():java.lang.String
- getOldPath():java.lang.String
- revertOn(com.intellij.history.core.tree.RootEntry,Z):V
- write(java.io.DataOutput):V
c:com.intellij.history.core.changes.PutLabelChange
- com.intellij.history.core.changes.Change
- <init>(J,java.lang.String,java.lang.String):V
- <init>(java.io.DataInput):V
- accept(com.intellij.history.core.changes.ChangeVisitor):V
- affectsMatching(java.util.regex.Pattern):Z
- affectsPath(java.lang.String):Z
- affectsProject(java.lang.String):Z
- getContentsToPurge():java.util.List
- getName():java.lang.String
- getProjectId():java.lang.String
- isCreationalFor(java.lang.String):Z
- write(java.io.DataOutput):V
f:com.intellij.history.core.changes.PutSystemLabelChange
- com.intellij.history.core.changes.PutLabelChange
- <init>(J,java.lang.String,java.lang.String,I):V
- <init>(java.io.DataInput):V
- getColor():I
- write(java.io.DataOutput):V
f:com.intellij.history.core.changes.ROStatusChange
- com.intellij.history.core.changes.StructuralChange
- <init>(J,java.lang.String,Z):V
- <init>(java.io.DataInput):V
- accept(com.intellij.history.core.changes.ChangeVisitor):V
- getOldStatus():Z
- revertOn(com.intellij.history.core.tree.RootEntry,Z):V
- write(java.io.DataOutput):V
f:com.intellij.history.core.changes.RenameChange
- com.intellij.history.core.changes.StructuralChange
- <init>(J,java.lang.String,java.lang.String):V
- <init>(java.io.DataInput):V
- accept(com.intellij.history.core.changes.ChangeVisitor):V
- getOldName():java.lang.String
- getOldPath():java.lang.String
- revertOn(com.intellij.history.core.tree.RootEntry,Z):V
- write(java.io.DataOutput):V
a:com.intellij.history.core.changes.StructuralChange
- com.intellij.history.core.changes.Change
- pf:myPath:java.lang.String
- p:<init>(J,java.lang.String):V
- p:<init>(java.io.DataInput):V
- affectsMatching(java.util.regex.Pattern):Z
- affectsPath(java.lang.String):Z
- affectsProject(java.lang.String):Z
- p:cannotRevert(java.lang.String,Z):V
- p:getAffectedPaths():java.lang.String[]
- getContentsToPurge():java.util.List
- getOldPath():java.lang.String
- getPath():java.lang.String
- isCreationalFor(java.lang.String):Z
- p:removeEntry(com.intellij.history.core.tree.Entry):V
- a:revertOn(com.intellij.history.core.tree.RootEntry,Z):V
- revertPath(java.lang.String):java.lang.String
- toString():java.lang.String
- write(java.io.DataOutput):V
f:com.intellij.history.core.revisions.ChangeRevision
- com.intellij.history.core.revisions.Revision
- <init>(com.intellij.history.core.LocalHistoryFacade,com.intellij.history.core.tree.RootEntry,java.lang.String,com.intellij.history.core.changes.ChangeSet,Z):V
- findEntry():com.intellij.history.core.tree.Entry
- getAffectedFileNames():com.intellij.openapi.util.Pair
- getChangeSetId():java.lang.Long
- getChangeSetName():java.lang.String
- getLabel():java.lang.String
- getLabelColor():I
- getRoot():com.intellij.history.core.tree.RootEntry
- getTimestamp():J
- toString():java.lang.String
f:com.intellij.history.core.revisions.CurrentRevision
- com.intellij.history.core.revisions.Revision
- <init>(com.intellij.history.core.tree.RootEntry,java.lang.String):V
- equals(java.lang.Object):Z
- findEntry():com.intellij.history.core.tree.Entry
- getRoot():com.intellij.history.core.tree.RootEntry
- getTimestamp():J
- hashCode():I
f:com.intellij.history.core.revisions.Difference
- <init>(com.intellij.history.core.tree.Entry,com.intellij.history.core.tree.Entry,Z):V
- <init>(Z,com.intellij.history.core.tree.Entry,com.intellij.history.core.tree.Entry):V
- <init>(Z,com.intellij.history.core.tree.Entry,com.intellij.history.core.tree.Entry,Z):V
- getFilePath():com.intellij.openapi.vcs.FilePath
- getLeft():com.intellij.history.core.tree.Entry
- getLeftContentRevision(com.intellij.history.integration.IdeaGateway):com.intellij.openapi.vcs.changes.ContentRevision
- getRight():com.intellij.history.core.tree.Entry
- getRightContentRevision(com.intellij.history.integration.IdeaGateway):com.intellij.openapi.vcs.changes.ContentRevision
- isFile():Z
a:com.intellij.history.core.revisions.Revision
- <init>():V
- a:findEntry():com.intellij.history.core.tree.Entry
- getAffectedFileNames():com.intellij.openapi.util.Pair
- getChangeSetId():java.lang.Long
- getChangeSetName():java.lang.String
- s:getDifferencesBetween(com.intellij.history.core.revisions.Revision,com.intellij.history.core.revisions.Revision):java.util.List
- getLabel():java.lang.String
- getLabelColor():I
- a:getRoot():com.intellij.history.core.tree.RootEntry
- a:getTimestamp():J
- isLabel():Z
c:com.intellij.history.core.tree.DirectoryEntry
- com.intellij.history.core.tree.Entry
- <init>(I):V
- <init>(java.io.DataInput,Z):V
- <init>(java.lang.String):V
- addChild(com.intellij.history.core.tree.Entry):V
- addChildren(java.util.Collection):V
- p:checkDoesNotExist(com.intellij.history.core.tree.Entry,java.lang.String):Z
- p:collectCreatedDifferences(java.util.function.BiConsumer):V
- p:collectDeletedDifferences(java.util.function.BiConsumer):V
- collectDifferencesWith(com.intellij.history.core.tree.Entry,java.util.function.BiConsumer):V
- copy():com.intellij.history.core.tree.DirectoryEntry
- p:copyEntry():com.intellij.history.core.tree.DirectoryEntry
- getChildren():java.util.List
- getTimestamp():J
- hasUnavailableContent(java.util.List):Z
- isDirectory():Z
- removeChild(com.intellij.history.core.tree.Entry):V
- write(java.io.DataOutput):V
a:com.intellij.history.core.tree.Entry
- <init>(I):V
- <init>(java.io.DataInput):V
- <init>(java.lang.String):V
- addChild(com.intellij.history.core.tree.Entry):V
- addChildren(java.util.Collection):V
- ps:calcNameHash(java.lang.CharSequence):I
- pa:collectCreatedDifferences(java.util.function.BiConsumer):V
- pa:collectDeletedDifferences(java.util.function.BiConsumer):V
- pa:collectDifferencesWith(com.intellij.history.core.tree.Entry,java.util.function.BiConsumer):V
- a:copy():com.intellij.history.core.tree.Entry
- findChild(java.lang.String):com.intellij.history.core.tree.Entry
- findEntry(java.lang.String):com.intellij.history.core.tree.Entry
- getChildren():java.util.List
- getContent():com.intellij.history.core.Content
- s:getDifferencesBetween(com.intellij.history.core.tree.Entry,com.intellij.history.core.tree.Entry):java.util.List
- s:getDifferencesBetween(com.intellij.history.core.tree.Entry,com.intellij.history.core.tree.Entry,Z):java.util.List
- getEntry(java.lang.String):com.intellij.history.core.tree.Entry
- getName():java.lang.String
- getNameHash():I
- getNameId():I
- getNameSequence():java.lang.CharSequence
- getParent():com.intellij.history.core.tree.Entry
- getPath():java.lang.String
- a:getTimestamp():J
- hasEntry(java.lang.String):Z
- hasUnavailableContent():Z
- hasUnavailableContent(java.util.List):Z
- isDirectory():Z
- isOutdated(J):Z
- isReadOnly():Z
- nameEquals(java.lang.String):Z
- pathEquals(java.lang.String):Z
- removeChild(com.intellij.history.core.tree.Entry):V
- setContent(com.intellij.history.core.Content,J):V
- setName(java.lang.String):V
- p:setParent(com.intellij.history.core.tree.DirectoryEntry):V
- setReadOnly(Z):V
- ps:toNameId(java.lang.String):I
- toString():java.lang.String
- write(java.io.DataOutput):V
f:com.intellij.history.core.tree.FileEntry
- com.intellij.history.core.tree.Entry
- <init>(I,com.intellij.history.core.Content,J,Z):V
- <init>(java.io.DataInput,Z):V
- <init>(java.lang.String,com.intellij.history.core.Content,J,Z):V
- collectDifferencesWith(com.intellij.history.core.tree.Entry,java.util.function.BiConsumer):V
- copy():com.intellij.history.core.tree.FileEntry
- getContent():com.intellij.history.core.Content
- getTimestamp():J
- hasUnavailableContent(java.util.List):Z
- isReadOnly():Z
- setContent(com.intellij.history.core.Content,J):V
- setReadOnly(Z):V
- write(java.io.DataOutput):V
f:com.intellij.history.core.tree.RootEntry
- com.intellij.history.core.tree.DirectoryEntry
- <init>():V
- copy():com.intellij.history.core.tree.RootEntry
- ensureDirectoryExists(java.lang.String):com.intellij.history.core.tree.Entry
- write(java.io.DataOutput):V
c:com.intellij.history.integration.IdeaGateway
- <init>():V
- acquireAndClearCurrentContent(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document):com.intellij.openapi.util.Pair
- acquireAndUpdateActualContent(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document):com.intellij.openapi.util.Pair
- areContentChangesVersioned(com.intellij.openapi.vfs.VirtualFile):Z
- areContentChangesVersioned(java.lang.String):Z
- createEntryForDeletion(com.intellij.openapi.vfs.VirtualFile):com.intellij.history.core.tree.Entry
- createTransientEntry(com.intellij.openapi.vfs.VirtualFile):com.intellij.history.core.tree.Entry
- createTransientRootEntry():com.intellij.history.core.tree.RootEntry
- createTransientRootEntryForPath(java.lang.String,Z):com.intellij.history.core.tree.RootEntry
- createTransientRootEntryForPaths(java.util.Collection,Z):com.intellij.history.core.tree.RootEntry
- ensureFilesAreWritable(com.intellij.openapi.project.Project,java.util.List):Z
- findOrCreateFileSafely(com.intellij.openapi.vfs.VirtualFile,java.lang.String,Z):com.intellij.openapi.vfs.VirtualFile
- findOrCreateFileSafely(java.lang.String,Z):com.intellij.openapi.vfs.VirtualFile
- findVirtualFile(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- getDocument(java.lang.String):com.intellij.openapi.editor.Document
- getFileType(java.lang.String):com.intellij.openapi.fileTypes.FileType
- s:getNameOrUrlPart(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getPathOrUrl(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- ps:getVersionedFilterData():com.intellij.history.integration.IdeaGateway$VersionedFilterData
- isVersioned(com.intellij.openapi.vfs.VirtualFile):Z
- isVersioned(com.intellij.openapi.vfs.VirtualFile,Z):Z
- s:iterateDBChildren(com.intellij.openapi.vfs.VirtualFile):java.lang.Iterable
- s:loadAndIterateChildren(com.intellij.openapi.vfs.VirtualFile):java.lang.Iterable
- registerUnsavedDocuments(com.intellij.history.core.LocalHistoryFacade):V
- runWithVfsEventsDispatchContext(java.util.List,Z,java.lang.Runnable):V
- saveAllUnsavedDocuments():V
- stringFromBytes(B[],java.lang.String):java.lang.String
pf:com.intellij.history.integration.IdeaGateway$VersionedFilterData
f:com.intellij.history.integration.LocalHistoryActionImpl
- com.intellij.history.LocalHistoryAction
- <init>(com.intellij.history.integration.LocalHistoryEventDispatcher,java.lang.String,com.intellij.history.ActivityId):V
- finish():V
- start():V
f:com.intellij.history.integration.LocalHistoryBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
f:com.intellij.history.integration.LocalHistoryImpl
- com.intellij.history.LocalHistory
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.history.integration.LocalHistoryImpl$Companion
- <init>(kotlinx.coroutines.CoroutineScope):V
- f:cleanupForNextTest():V
- dispose():V
- getByteContent(com.intellij.openapi.vfs.VirtualFile,com.intellij.history.FileRevisionTimestampComparator):B[]
- f:getFacade():com.intellij.history.core.LocalHistoryFacade
- f:getGateway():com.intellij.history.integration.IdeaGateway
- sf:getInstanceImpl():com.intellij.history.integration.LocalHistoryImpl
- f:isDisabled():Z
- isUnderControl(com.intellij.openapi.vfs.VirtualFile):Z
- putEventLabel(com.intellij.openapi.project.Project,java.lang.String,com.intellij.history.ActivityId):com.intellij.history.Label
- putSystemLabel(com.intellij.openapi.project.Project,java.lang.String,I):com.intellij.history.Label
- putUserLabel(com.intellij.openapi.project.Project,java.lang.String):com.intellij.history.Label
- startAction(java.lang.String,com.intellij.history.ActivityId):com.intellij.history.LocalHistoryAction
f:com.intellij.history.integration.LocalHistoryImpl$Companion
- f:getInstanceImpl():com.intellij.history.integration.LocalHistoryImpl
- f:getStorageDir():java.nio.file.Path
f:com.intellij.history.integration.ValidateHistoryAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.history.integration.patches.PatchCreator
- <init>():V
- s:create(com.intellij.openapi.project.Project,java.util.List,java.nio.file.Path,Z,com.intellij.openapi.vcs.changes.CommitContext):V
f:com.intellij.history.integration.revertion.DifferenceReverter
- com.intellij.history.integration.revertion.Reverter
- <init>(com.intellij.openapi.project.Project,com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,java.util.List,com.intellij.history.core.revisions.Revision):V
- <init>(com.intellij.openapi.project.Project,com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,java.util.List,java.util.function.Supplier):V
- doRevert(Z):V
a:com.intellij.history.integration.revertion.Reverter
- pf:myGateway:com.intellij.history.integration.IdeaGateway
- p:myVcs:com.intellij.history.core.LocalHistoryFacade
- p:<init>(com.intellij.openapi.project.Project,com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,java.util.function.Supplier):V
- p:askForReadOnlyStatusClearing():Z
- askUserForProceeding():java.util.List
- checkCanRevert():java.util.List
- pa:doRevert():V
- getCommandName():java.lang.String
- pa:getFilesToClearROStatus():java.util.List
- s:getRevertCommandName(com.intellij.history.core.revisions.Revision):java.lang.String
- revert():V
f:com.intellij.history.integration.revertion.SelectionReverter
- com.intellij.history.integration.revertion.Reverter
- <init>(com.intellij.openapi.project.Project,com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.history.integration.ui.models.SelectionCalculator,com.intellij.history.core.revisions.Revision,com.intellij.history.core.tree.Entry,I,I):V
- <init>(com.intellij.openapi.project.Project,com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.history.integration.ui.models.SelectionCalculator,com.intellij.platform.lvcs.impl.RevisionId,java.lang.String,I,I,java.util.function.Supplier):V
f:com.intellij.history.integration.revertion.UndoChangeRevertingVisitor
- com.intellij.history.core.changes.ChangeVisitor
- <init>(com.intellij.history.integration.IdeaGateway,java.lang.Long,java.lang.Long):V
- finished():V
- visit(com.intellij.history.core.changes.ContentChange):V
- visit(com.intellij.history.core.changes.CreateEntryChange):V
- visit(com.intellij.history.core.changes.DeleteChange):V
- visit(com.intellij.history.core.changes.MoveChange):V
- visit(com.intellij.history.core.changes.ROStatusChange):V
- visit(com.intellij.history.core.changes.RenameChange):V
f:com.intellij.history.integration.revertion.UndoChangeRevertingVisitor$RuntimeIOException
- java.lang.RuntimeException
- <init>(java.lang.Throwable):V
a:com.intellij.history.integration.ui.actions.LocalHistoryAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:actionPerformed(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getGateway():com.intellij.history.integration.IdeaGateway
- p:getVcs():com.intellij.history.core.LocalHistoryFacade
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.history.integration.ui.actions.LocalHistoryGroup
- com.intellij.ide.actions.NonTrivialActionGroup
- com.intellij.openapi.project.DumbAware
- <init>():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.history.integration.ui.actions.PutLabelAction
- com.intellij.history.integration.ui.actions.LocalHistoryAction
- <init>():V
f:com.intellij.history.integration.ui.actions.RecentChangesAction
- com.intellij.history.integration.ui.actions.LocalHistoryAction
- <init>():V
c:com.intellij.history.integration.ui.actions.ShowHistoryAction
- com.intellij.history.integration.ui.actions.LocalHistoryAction
- <init>():V
- p:actionPerformed(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.openapi.actionSystem.AnActionEvent):V
- p:getFile(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.vfs.VirtualFile
- p:isEnabled(com.intellij.history.integration.IdeaGateway,com.intellij.openapi.vfs.VirtualFile):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.history.integration.ui.actions.ShowProjectHistoryAction
- com.intellij.history.integration.ui.actions.ShowHistoryAction
- <init>():V
f:com.intellij.history.integration.ui.actions.ShowSelectionHistoryAction
- com.intellij.history.integration.ui.actions.ShowHistoryAction
- <init>():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.history.integration.ui.models.DirectoryChangeModel
- <init>(com.intellij.history.core.revisions.Difference,com.intellij.history.integration.IdeaGateway):V
- canShowFileDifference():Z
- getContentRevision(I):com.intellij.openapi.vcs.changes.ContentRevision
- getDifference():com.intellij.history.core.revisions.Difference
- getEntry(I):com.intellij.history.core.tree.Entry
- getEntryName(I):java.lang.String
- isFile():Z
c:com.intellij.history.integration.ui.models.DirectoryHistoryDialogModel
- com.intellij.history.integration.ui.models.HistoryDialogModel
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.LocalHistoryFacade,com.intellij.openapi.vfs.VirtualFile):V
- p:createChange(com.intellij.history.core.revisions.Difference):com.intellij.history.integration.ui.views.DirectoryChange
- createReverter():com.intellij.history.integration.revertion.Reverter
- createRevisionReverter(java.util.List):com.intellij.history.integration.revertion.Reverter
- getKind():com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind
f:com.intellij.history.integration.ui.models.EntireFileDifferenceModel
- com.intellij.history.integration.ui.models.FileDifferenceModel
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.tree.Entry,com.intellij.history.core.tree.Entry,Z):V
c:com.intellij.history.integration.ui.models.EntireFileHistoryDialogModel
- com.intellij.history.integration.ui.models.FileHistoryDialogModel
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.LocalHistoryFacade,com.intellij.openapi.vfs.VirtualFile):V
- getDifferenceModel():com.intellij.history.integration.ui.models.FileDifferenceModel
a:com.intellij.history.integration.ui.models.FileDifferenceModel
- pf:myGateway:com.intellij.history.integration.IdeaGateway
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,Z):V
- s:createRequest(com.intellij.history.integration.ui.models.FileDifferenceModel,com.intellij.history.integration.ui.models.RevisionProcessingProgress):com.intellij.diff.requests.ContentDiffRequest
- pa:getEditableRightDiffContent(com.intellij.history.integration.ui.models.RevisionProcessingProgress):com.intellij.diff.contents.DiffContent
- getLeftDiffContent(com.intellij.history.integration.ui.models.RevisionProcessingProgress):com.intellij.diff.contents.DiffContent
- pa:getLeftEntry():com.intellij.history.core.tree.Entry
- getLeftTitle(com.intellij.history.integration.ui.models.RevisionProcessingProgress):java.lang.String
- pa:getReadOnlyLeftDiffContent(com.intellij.history.integration.ui.models.RevisionProcessingProgress):com.intellij.diff.contents.DiffContent
- pa:getReadOnlyRightDiffContent(com.intellij.history.integration.ui.models.RevisionProcessingProgress):com.intellij.diff.contents.DiffContent
- getRightDiffContent(com.intellij.history.integration.ui.models.RevisionProcessingProgress):com.intellij.diff.contents.DiffContent
- pa:getRightEntry():com.intellij.history.core.tree.Entry
- getRightTitle(com.intellij.history.integration.ui.models.RevisionProcessingProgress):java.lang.String
- getTitle():java.lang.String
- pa:isLeftContentAvailable(com.intellij.history.integration.ui.models.RevisionProcessingProgress):Z
- pa:isRightContentAvailable(com.intellij.history.integration.ui.models.RevisionProcessingProgress):Z
a:com.intellij.history.integration.ui.models.FileHistoryDialogModel
- com.intellij.history.integration.ui.models.HistoryDialogModel
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.LocalHistoryFacade,com.intellij.openapi.vfs.VirtualFile):V
- createReverter():com.intellij.history.integration.revertion.Reverter
- filterContents(java.lang.String):java.util.Set
- a:getDifferenceModel():com.intellij.history.integration.ui.models.FileDifferenceModel
- getKind():com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind
a:com.intellij.history.integration.ui.models.HistoryDialogModel
- p:myBefore:Z
- pf:myFile:com.intellij.openapi.vfs.VirtualFile
- pf:myGateway:com.intellij.history.integration.IdeaGateway
- pf:myProject:com.intellij.openapi.project.Project
- pf:myVcs:com.intellij.history.core.LocalHistoryFacade
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.LocalHistoryFacade,com.intellij.openapi.vfs.VirtualFile):V
- canPerformCreatePatch():Z
- clearRevisions():V
- p:collectRevisionData():com.intellij.history.integration.ui.models.RevisionData
- p:createChange(com.intellij.history.core.revisions.Difference):com.intellij.openapi.vcs.changes.Change
- a:createReverter():com.intellij.history.integration.revertion.Reverter
- p:createRootEntry():com.intellij.history.core.tree.RootEntry
- getChanges():java.util.List
- getCurrentRevision():com.intellij.history.core.revisions.Revision
- p:getDifferences():java.util.List
- p:getLeftEntry():com.intellij.history.core.tree.Entry
- getLeftRevision():com.intellij.history.core.revisions.Revision
- p:getRevisionData():com.intellij.history.integration.ui.models.RevisionData
- getRevisions():java.util.List
- p:getRightEntry():com.intellij.history.core.tree.Entry
- getRightRevision():com.intellij.history.core.revisions.Revision
- getTitle():java.lang.String
- isCreatePatchEnabled():Z
- isCurrentRevisionSelected():Z
- isRevertEnabled():Z
- myFilter():java.lang.String
- processContents(com.intellij.util.PairProcessor):V
- resetSelection():Z
- selectRevisions(I,I):Z
- setFilter(java.lang.String):V
com.intellij.history.integration.ui.models.Progress
- sf:EMPTY:com.intellij.history.integration.ui.models.Progress
- a:processed(I):V
c:com.intellij.history.integration.ui.models.Progress$Empty
- com.intellij.history.integration.ui.models.Progress
- <init>():V
- processed(I):V
f:com.intellij.history.integration.ui.models.RevisionData
- <init>(com.intellij.history.core.revisions.Revision,java.util.List):V
- f:component1():com.intellij.history.core.revisions.Revision
- f:component2():java.util.List
- f:copy(com.intellij.history.core.revisions.Revision,java.util.List):com.intellij.history.integration.ui.models.RevisionData
- bs:copy$default(com.intellij.history.integration.ui.models.RevisionData,com.intellij.history.core.revisions.Revision,java.util.List,I,java.lang.Object):com.intellij.history.integration.ui.models.RevisionData
- equals(java.lang.Object):Z
- f:getCurrentRevision():com.intellij.history.core.revisions.Revision
- f:getRevisions():java.util.List
- hashCode():I
- toString():java.lang.String
f:com.intellij.history.integration.ui.models.RevisionDataKt
- sf:filterContents(com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.openapi.vfs.VirtualFile,java.util.List,java.lang.String,Z):java.util.Set
- sf:filterContents(com.intellij.history.integration.ui.models.SelectionCalculator,java.lang.String):java.util.Set
- sf:getAllRevisions(com.intellij.history.integration.ui.models.RevisionData):java.util.List
f:com.intellij.history.integration.ui.models.RevisionItem
- f:labels:java.util.LinkedList
- f:revision:com.intellij.history.core.revisions.Revision
- <init>(com.intellij.history.core.revisions.Revision):V
com.intellij.history.integration.ui.models.RevisionProcessingProgress
- com.intellij.history.integration.ui.models.Progress
- sf:EMPTY:com.intellij.history.integration.ui.models.RevisionProcessingProgress
- a:processingLeftRevision():V
- a:processingRightRevision():V
c:com.intellij.history.integration.ui.models.RevisionProcessingProgress$Empty
- com.intellij.history.integration.ui.models.RevisionProcessingProgress
- <init>():V
- processed(I):V
- processingLeftRevision():V
- processingRightRevision():V
f:com.intellij.history.integration.ui.models.RevisionSelectionCalculator
- com.intellij.history.integration.ui.models.SelectionCalculator
- <init>(com.intellij.history.integration.IdeaGateway,java.util.List,I,I):V
- f:canCalculateFor(com.intellij.history.core.revisions.Revision,com.intellij.history.integration.ui.models.Progress):Z
a:com.intellij.history.integration.ui.models.SelectionCalculator
- sf:Companion:com.intellij.history.integration.ui.models.SelectionCalculator$Companion
- <init>(com.intellij.history.integration.IdeaGateway,java.util.List,I,I):V
- f:canCalculateFor(com.intellij.platform.lvcs.impl.RevisionId,com.intellij.history.integration.ui.models.Progress):Z
- sf:create(com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.tree.RootEntry,java.lang.String,java.util.List,I,I):com.intellij.history.integration.ui.models.SelectionCalculator
- sf:create(com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.tree.RootEntry,java.lang.String,java.util.List,I,I,Z):com.intellij.history.integration.ui.models.SelectionCalculator
- pa:getEntry(com.intellij.platform.lvcs.impl.RevisionId):com.intellij.history.core.tree.Entry
- f:getSelectionFor(com.intellij.platform.lvcs.impl.RevisionId,com.intellij.history.integration.ui.models.Progress):com.intellij.diff.Block
- f:processContents(kotlin.jvm.functions.Function2):V
f:com.intellij.history.integration.ui.models.SelectionCalculator$Companion
- f:create(com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.tree.RootEntry,java.lang.String,java.util.List,I,I):com.intellij.history.integration.ui.models.SelectionCalculator
- f:create(com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.tree.RootEntry,java.lang.String,java.util.List,I,I,Z):com.intellij.history.integration.ui.models.SelectionCalculator
- bs:create$default(com.intellij.history.integration.ui.models.SelectionCalculator$Companion,com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.tree.RootEntry,java.lang.String,java.util.List,I,I,Z,I,java.lang.Object):com.intellij.history.integration.ui.models.SelectionCalculator
f:com.intellij.history.integration.ui.models.SelectionDifferenceModel
- com.intellij.history.integration.ui.models.FileDifferenceModel
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.history.integration.ui.models.RevisionSelectionCalculator,com.intellij.history.core.revisions.Revision,com.intellij.history.core.revisions.Revision,I,I,Z):V
f:com.intellij.history.integration.ui.views.DirectoryChange
- com.intellij.openapi.vcs.changes.Change
- <init>(com.intellij.history.integration.ui.models.DirectoryChangeModel):V
- canShowFileDifference():Z
- getDifference():com.intellij.history.core.revisions.Difference
- getModel():com.intellij.history.integration.ui.models.DirectoryChangeModel
c:com.intellij.history.integration.ui.views.DirectoryHistoryDialog
- com.intellij.history.integration.ui.views.HistoryDialog
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.openapi.vfs.VirtualFile):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.openapi.vfs.VirtualFile,Z):V
- p:createDiffPanel(javax.swing.JPanel,com.intellij.ui.ExcludingTraversalPolicy):com.intellij.openapi.util.Pair
- p:createModel(com.intellij.history.core.LocalHistoryFacade):com.intellij.history.integration.ui.models.DirectoryHistoryDialogModel
- p:doUpdateDiffs(com.intellij.history.integration.ui.models.DirectoryHistoryDialogModel):java.lang.Runnable
- p:getHelpId():java.lang.String
- p:setDiffBorder(javax.swing.border.Border):V
- p:showSearchField():Z
- p:updateActions():V
c:com.intellij.history.integration.ui.views.FileHistoryDialog
- com.intellij.history.integration.ui.views.HistoryDialog
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.openapi.vfs.VirtualFile):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.openapi.vfs.VirtualFile,Z):V
- p:addExtraToolbar(javax.swing.JPanel):V
- p:createDiffPanel(javax.swing.JPanel,com.intellij.ui.ExcludingTraversalPolicy):com.intellij.openapi.util.Pair
- p:createDifference(com.intellij.history.integration.ui.models.FileDifferenceModel):com.intellij.diff.requests.ContentDiffRequest
- p:createModel(com.intellij.history.core.LocalHistoryFacade):com.intellij.history.integration.ui.models.FileHistoryDialogModel
- dispose():V
- p:doUpdateDiffs(com.intellij.history.integration.ui.models.FileHistoryDialogModel):java.lang.Runnable
- s:findLeftEditor(javax.swing.JComponent):com.intellij.openapi.editor.Editor
- p:getHelpId():java.lang.String
- p:setDiffBorder(javax.swing.border.Border):V
- s:updateEditorSearch(com.intellij.openapi.project.Project,com.intellij.find.SearchTextArea,com.intellij.openapi.editor.Editor):V
a:com.intellij.history.integration.ui.views.HistoryDialog
- com.intellij.openapi.ui.FrameWrapper
- pf:myFile:com.intellij.openapi.vfs.VirtualFile
- p:myForceUpdateDiff:Z
- pf:myGateway:com.intellij.history.integration.IdeaGateway
- p:myModel:com.intellij.history.integration.ui.models.HistoryDialogModel
- pf:myProject:com.intellij.openapi.project.Project
- p:myRevisionsList:com.intellij.history.integration.ui.views.RevisionsList
- p:<init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.openapi.vfs.VirtualFile,Z):V
- p:addExtraToolbar(javax.swing.JPanel):V
- p:createComponent():javax.swing.JComponent
- pa:createDiffPanel(javax.swing.JPanel,com.intellij.ui.ExcludingTraversalPolicy):com.intellij.openapi.util.Pair
- p:createDifference(com.intellij.history.integration.ui.models.FileDifferenceModel):com.intellij.diff.requests.ContentDiffRequest
- pa:createModel(com.intellij.history.core.LocalHistoryFacade):com.intellij.history.integration.ui.models.HistoryDialogModel
- dispose():V
- pa:doUpdateDiffs(com.intellij.history.integration.ui.models.HistoryDialogModel):java.lang.Runnable
- p:getDimensionKey():java.lang.String
- pa:getHelpId():java.lang.String
- p:getRevisions():java.util.List
- p:init():V
- p:revert():V
- p:revert(com.intellij.history.integration.revertion.Reverter):V
- p:scheduleRevisionsUpdate(com.intellij.util.Consumer):V
- pa:setDiffBorder(javax.swing.border.Border):V
- showError(java.lang.String):V
- p:showRevisionsList():Z
- p:updateActions():V
pa:com.intellij.history.integration.ui.views.HistoryDialog$MyAction
- com.intellij.openapi.actionSystem.AnAction
- p:<init>(com.intellij.history.integration.ui.views.HistoryDialog,java.lang.String,java.lang.String,javax.swing.Icon):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:doPerform(com.intellij.history.integration.ui.models.HistoryDialogModel):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:isEnabled(com.intellij.history.integration.ui.models.HistoryDialogModel):Z
- performIfEnabled():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.history.integration.ui.views.RevisionsList
- sf:RECENT_PERIOD:I
- <init>(com.intellij.history.integration.ui.views.RevisionsList$SelectionListener):V
- getComponent():javax.swing.JComponent
- isEmpty():Z
- moveSelection(Z):V
- setFilteredRevisions(java.util.Set):V
- updateData(com.intellij.history.integration.ui.models.HistoryDialogModel):V
f:com.intellij.history.integration.ui.views.RevisionsList$MyCellRenderer
- javax.swing.table.TableCellRenderer
- <init>(com.intellij.ui.table.JBTable):V
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
f:com.intellij.history.integration.ui.views.RevisionsList$MyModel
- javax.swing.table.AbstractTableModel
- <init>(java.util.List,java.util.Map):V
- getColumnCount():I
- getPeriod(com.intellij.history.integration.ui.models.RevisionItem):com.intellij.history.integration.ui.views.RevisionsList$Period
- getRowCount():I
- getValueAt(I,I):com.intellij.history.integration.ui.models.RevisionItem
com.intellij.history.integration.ui.views.RevisionsList$SelectionListener
- a:revisionsSelected(I,I):V
f:com.intellij.history.integration.ui.views.SelectionHistoryDialog
- com.intellij.history.integration.ui.views.FileHistoryDialog
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.openapi.vfs.VirtualFile,I,I):V
c:com.intellij.history.integration.ui.views.SelectionHistoryDialogModel
- com.intellij.history.integration.ui.models.FileHistoryDialogModel
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.LocalHistoryFacade,com.intellij.openapi.vfs.VirtualFile,I,I):V
- p:collectRevisionData():com.intellij.history.integration.ui.models.RevisionData
- createReverter():com.intellij.history.integration.revertion.Reverter
- filterContents(java.lang.String):java.util.Set
- getDifferenceModel():com.intellij.history.integration.ui.models.FileDifferenceModel
- getKind():com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind
a:com.intellij.history.utils.RunnableAdapter
- java.lang.Runnable
- <init>():V
- a:doRun():V
- run():V
f:com.intellij.openapi.command.impl.ChangeRange
- <init>(com.intellij.history.integration.IdeaGateway,com.intellij.history.core.LocalHistoryFacade,java.lang.Long):V
- revert(com.intellij.openapi.command.impl.ChangeRange):com.intellij.openapi.command.impl.ChangeRange
f:com.intellij.openapi.command.impl.FileUndoProvider
- com.intellij.openapi.command.impl.UndoProvider
- com.intellij.openapi.vfs.newvfs.BulkFileListener
- sf:LOG:com.intellij.openapi.diagnostic.Logger
- <init>():V
- after(java.util.List):V
- before(java.util.List):V
- commandFinished(com.intellij.openapi.project.Project):V
- commandStarted(com.intellij.openapi.project.Project):V
*f:com.intellij.platform.lvcs.impl.ActivityData
- com.intellij.openapi.util.UserDataHolderBase
- *sf:Companion:com.intellij.platform.lvcs.impl.ActivityData$Companion
- <init>(java.util.List):V
- f:component1():java.util.List
- f:copy(java.util.List):com.intellij.platform.lvcs.impl.ActivityData
- bs:copy$default(com.intellij.platform.lvcs.impl.ActivityData,java.util.List,I,java.lang.Object):com.intellij.platform.lvcs.impl.ActivityData
- equals(java.lang.Object):Z
- f:getItems():java.util.List
- hashCode():I
- toString():java.lang.String
*f:com.intellij.platform.lvcs.impl.ActivityData$Companion
- f:getEMPTY():com.intellij.platform.lvcs.impl.ActivityData
*:com.intellij.platform.lvcs.impl.ActivityDiffData
- a:getPresentableChanges():java.lang.Iterable
com.intellij.platform.lvcs.impl.ActivityDiffObject
- com.intellij.openapi.vcs.changes.ui.PresentableChange
- a:createProducer(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ui.ChangeDiffRequestChain$Producer
*:com.intellij.platform.lvcs.impl.ActivityItem
- a:getTimestamp():J
*f:com.intellij.platform.lvcs.impl.ActivityPresentation
- <init>(java.lang.String,javax.swing.Icon):V
- f:component1():java.lang.String
- f:component2():javax.swing.Icon
- f:copy(java.lang.String,javax.swing.Icon):com.intellij.platform.lvcs.impl.ActivityPresentation
- bs:copy$default(com.intellij.platform.lvcs.impl.ActivityPresentation,java.lang.String,javax.swing.Icon,I,java.lang.Object):com.intellij.platform.lvcs.impl.ActivityPresentation
- equals(java.lang.Object):Z
- f:getIcon():javax.swing.Icon
- f:getText():java.lang.String
- hashCode():I
- toString():java.lang.String
*:com.intellij.platform.lvcs.impl.ActivityProvider
- a:filterActivityList(com.intellij.platform.lvcs.impl.ActivityScope,com.intellij.platform.lvcs.impl.ActivityData,java.lang.String):java.util.Set
- a:getActivityItemsChanged(com.intellij.platform.lvcs.impl.ActivityScope):kotlinx.coroutines.flow.Flow
- a:getPresentation(com.intellij.platform.lvcs.impl.ActivityItem):com.intellij.platform.lvcs.impl.ActivityPresentation
- a:isActivityFilterSupported(com.intellij.platform.lvcs.impl.ActivityScope):Z
- a:isScopeFilterSupported(com.intellij.platform.lvcs.impl.ActivityScope):Z
- a:loadActivityList(com.intellij.platform.lvcs.impl.ActivityScope,java.lang.String):com.intellij.platform.lvcs.impl.ActivityData
- a:loadDiffData(com.intellij.platform.lvcs.impl.ActivityScope,com.intellij.platform.lvcs.impl.ActivitySelection):com.intellij.platform.lvcs.impl.ActivityDiffData
- a:loadSingleDiff(com.intellij.platform.lvcs.impl.ActivityScope,com.intellij.platform.lvcs.impl.ActivitySelection):com.intellij.diff.chains.DiffRequestProducer
*:com.intellij.platform.lvcs.impl.ActivityScope
- *sf:Companion:com.intellij.platform.lvcs.impl.ActivityScope$Companion
- s:fromFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.platform.lvcs.impl.ActivityScope
*f:com.intellij.platform.lvcs.impl.ActivityScope$Companion
- f:fromFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.platform.lvcs.impl.ActivityScope
*f:com.intellij.platform.lvcs.impl.ActivityScope$Directory
- com.intellij.platform.lvcs.impl.ActivityScope$File
- <init>(com.intellij.openapi.vfs.VirtualFile):V
- f:component1():com.intellij.openapi.vfs.VirtualFile
- f:copy(com.intellij.openapi.vfs.VirtualFile):com.intellij.platform.lvcs.impl.ActivityScope$Directory
- bs:copy$default(com.intellij.platform.lvcs.impl.ActivityScope$Directory,com.intellij.openapi.vfs.VirtualFile,I,java.lang.Object):com.intellij.platform.lvcs.impl.ActivityScope$Directory
- equals(java.lang.Object):Z
- getFile():com.intellij.openapi.vfs.VirtualFile
- hashCode():I
- toString():java.lang.String
*:com.intellij.platform.lvcs.impl.ActivityScope$File
- com.intellij.platform.lvcs.impl.ActivityScope
- a:getFile():com.intellij.openapi.vfs.VirtualFile
*f:com.intellij.platform.lvcs.impl.ActivityScope$Recent
- com.intellij.platform.lvcs.impl.ActivityScope
- sf:INSTANCE:com.intellij.platform.lvcs.impl.ActivityScope$Recent
- equals(java.lang.Object):Z
- hashCode():I
- toString():java.lang.String
*f:com.intellij.platform.lvcs.impl.ActivityScope$Selection
- com.intellij.platform.lvcs.impl.ActivityScope$File
- <init>(com.intellij.openapi.vfs.VirtualFile,I,I):V
- f:component1():com.intellij.openapi.vfs.VirtualFile
- f:component2():I
- f:component3():I
- f:copy(com.intellij.openapi.vfs.VirtualFile,I,I):com.intellij.platform.lvcs.impl.ActivityScope$Selection
- bs:copy$default(com.intellij.platform.lvcs.impl.ActivityScope$Selection,com.intellij.openapi.vfs.VirtualFile,I,I,I,java.lang.Object):com.intellij.platform.lvcs.impl.ActivityScope$Selection
- equals(java.lang.Object):Z
- getFile():com.intellij.openapi.vfs.VirtualFile
- f:getFrom():I
- f:getTo():I
- hashCode():I
- toString():java.lang.String
*f:com.intellij.platform.lvcs.impl.ActivityScope$SingleFile
- com.intellij.platform.lvcs.impl.ActivityScope$File
- <init>(com.intellij.openapi.vfs.VirtualFile):V
- f:component1():com.intellij.openapi.vfs.VirtualFile
- f:copy(com.intellij.openapi.vfs.VirtualFile):com.intellij.platform.lvcs.impl.ActivityScope$SingleFile
- bs:copy$default(com.intellij.platform.lvcs.impl.ActivityScope$SingleFile,com.intellij.openapi.vfs.VirtualFile,I,java.lang.Object):com.intellij.platform.lvcs.impl.ActivityScope$SingleFile
- equals(java.lang.Object):Z
- getFile():com.intellij.openapi.vfs.VirtualFile
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.lvcs.impl.ActivityScopeKt
- sf:getFilePath(com.intellij.platform.lvcs.impl.ActivityScope$File):com.intellij.openapi.vcs.FilePath
- sf:getHasMultipleFiles(com.intellij.platform.lvcs.impl.ActivityScope):Z
- sf:getPresentableName(com.intellij.platform.lvcs.impl.ActivityScope):java.lang.String
*f:com.intellij.platform.lvcs.impl.ActivitySelection
- <init>(java.util.List,com.intellij.platform.lvcs.impl.ActivityData):V
- f:component1():java.util.List
- f:component2():com.intellij.platform.lvcs.impl.ActivityData
- f:copy(java.util.List,com.intellij.platform.lvcs.impl.ActivityData):com.intellij.platform.lvcs.impl.ActivitySelection
- bs:copy$default(com.intellij.platform.lvcs.impl.ActivitySelection,java.util.List,com.intellij.platform.lvcs.impl.ActivityData,I,java.lang.Object):com.intellij.platform.lvcs.impl.ActivitySelection
- equals(java.lang.Object):Z
- f:getData():com.intellij.platform.lvcs.impl.ActivityData
- f:getSelectedItems():java.util.List
- hashCode():I
- toString():java.lang.String
a:com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- com.intellij.platform.lvcs.impl.ActivityItem
- <init>(com.intellij.history.core.changes.ChangeSet):V
- equals(java.lang.Object):Z
- f:getActivityId():com.intellij.history.ActivityId
- f:getId():J
- a:getName():java.lang.String
- getTimestamp():J
- hashCode():I
f:com.intellij.platform.lvcs.impl.ChangeSetActivityItemKt
- sf:toActivityItem(com.intellij.history.core.changes.ChangeSet,com.intellij.platform.lvcs.impl.ActivityScope):com.intellij.platform.lvcs.impl.ActivityItem
com.intellij.platform.lvcs.impl.ChangeSetSelection
- a:getData():com.intellij.platform.lvcs.impl.ActivityData
- a:getLeftItem():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- a:getRightItem():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
f:com.intellij.platform.lvcs.impl.ChangeSetSelection$Interval
- com.intellij.platform.lvcs.impl.ChangeSetSelection
- <init>(com.intellij.platform.lvcs.impl.ChangeSetActivityItem,com.intellij.platform.lvcs.impl.ChangeSetActivityItem,com.intellij.platform.lvcs.impl.ActivityData):V
- f:component1():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- f:component2():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- f:component3():com.intellij.platform.lvcs.impl.ActivityData
- f:copy(com.intellij.platform.lvcs.impl.ChangeSetActivityItem,com.intellij.platform.lvcs.impl.ChangeSetActivityItem,com.intellij.platform.lvcs.impl.ActivityData):com.intellij.platform.lvcs.impl.ChangeSetSelection$Interval
- bs:copy$default(com.intellij.platform.lvcs.impl.ChangeSetSelection$Interval,com.intellij.platform.lvcs.impl.ChangeSetActivityItem,com.intellij.platform.lvcs.impl.ChangeSetActivityItem,com.intellij.platform.lvcs.impl.ActivityData,I,java.lang.Object):com.intellij.platform.lvcs.impl.ChangeSetSelection$Interval
- equals(java.lang.Object):Z
- getData():com.intellij.platform.lvcs.impl.ActivityData
- f:getLeftChangeSet():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- getLeftItem():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- f:getRightChangeSet():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- getRightItem():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.lvcs.impl.ChangeSetSelection$Single
- com.intellij.platform.lvcs.impl.ChangeSetSelection
- <init>(com.intellij.platform.lvcs.impl.ChangeSetActivityItem,com.intellij.platform.lvcs.impl.ActivityData):V
- f:component1():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- f:component2():com.intellij.platform.lvcs.impl.ActivityData
- f:copy(com.intellij.platform.lvcs.impl.ChangeSetActivityItem,com.intellij.platform.lvcs.impl.ActivityData):com.intellij.platform.lvcs.impl.ChangeSetSelection$Single
- bs:copy$default(com.intellij.platform.lvcs.impl.ChangeSetSelection$Single,com.intellij.platform.lvcs.impl.ChangeSetActivityItem,com.intellij.platform.lvcs.impl.ActivityData,I,java.lang.Object):com.intellij.platform.lvcs.impl.ChangeSetSelection$Single
- equals(java.lang.Object):Z
- f:getChangeSet():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- getData():com.intellij.platform.lvcs.impl.ActivityData
- getLeftItem():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- getRightItem():com.intellij.platform.lvcs.impl.ChangeSetActivityItem
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.lvcs.impl.ChangeSetSelectionKt
- sf:getLeftRevision(com.intellij.platform.lvcs.impl.ChangeSetSelection):com.intellij.platform.lvcs.impl.RevisionId
- sf:getRightRevision(com.intellij.platform.lvcs.impl.ChangeSetSelection):com.intellij.platform.lvcs.impl.RevisionId
- sf:toChangeSetSelection(com.intellij.platform.lvcs.impl.ActivitySelection):com.intellij.platform.lvcs.impl.ChangeSetSelection
f:com.intellij.platform.lvcs.impl.LocalHistoryActivityProviderKt
- sf:getACTIVITY_PRESENTATION_PROVIDER_EP():com.intellij.openapi.extensions.ExtensionPointName
a:com.intellij.platform.lvcs.impl.RevisionId
f:com.intellij.platform.lvcs.impl.RevisionId$ChangeSet
- com.intellij.platform.lvcs.impl.RevisionId
- <init>(J):V
- f:component1():J
- f:copy(J):com.intellij.platform.lvcs.impl.RevisionId$ChangeSet
- bs:copy$default(com.intellij.platform.lvcs.impl.RevisionId$ChangeSet,J,I,java.lang.Object):com.intellij.platform.lvcs.impl.RevisionId$ChangeSet
- equals(java.lang.Object):Z
- f:getId():J
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.lvcs.impl.RevisionId$Current
- com.intellij.platform.lvcs.impl.RevisionId
- sf:INSTANCE:com.intellij.platform.lvcs.impl.RevisionId$Current
- equals(java.lang.Object):Z
- hashCode():I
- toString():java.lang.String
f:com.intellij.platform.lvcs.impl.RevisionIdKt
- sf:getRevisionId(com.intellij.platform.lvcs.impl.ChangeSetActivityItem):com.intellij.platform.lvcs.impl.RevisionId
a:com.intellij.platform.lvcs.impl.actions.ChangeSetSelectionAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- a:actionPerformed(com.intellij.openapi.project.Project,com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.platform.lvcs.impl.ActivityScope,com.intellij.platform.lvcs.impl.ChangeSetSelection):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.platform.lvcs.impl.actions.CreatePatchAction
- com.intellij.platform.lvcs.impl.actions.ChangeSetSelectionAction
- <init>():V
- actionPerformed(com.intellij.openapi.project.Project,com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.platform.lvcs.impl.ActivityScope,com.intellij.platform.lvcs.impl.ChangeSetSelection):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
f:com.intellij.platform.lvcs.impl.actions.RevertAction
- com.intellij.platform.lvcs.impl.actions.ChangeSetSelectionAction
- <init>():V
- actionPerformed(com.intellij.openapi.project.Project,com.intellij.history.core.LocalHistoryFacade,com.intellij.history.integration.IdeaGateway,com.intellij.platform.lvcs.impl.ActivityScope,com.intellij.platform.lvcs.impl.ChangeSetSelection):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
f:com.intellij.platform.lvcs.impl.actions.RevertDifferencesAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.platform.lvcs.impl.diff.EntryDiffContentKt
- sf:createCurrentDiffContent(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,java.lang.String):com.intellij.diff.contents.DiffContent
- sf:createCurrentDiffContent(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,java.lang.String,I,I):com.intellij.diff.contents.DiffContent
- sf:createDiffContent(com.intellij.history.integration.IdeaGateway,com.intellij.history.core.tree.Entry,J,com.intellij.history.integration.ui.models.SelectionCalculator,com.intellij.history.integration.ui.models.RevisionProcessingProgress):com.intellij.diff.contents.DiffContent
- sf:createDiffContent(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.history.core.tree.Entry):com.intellij.diff.contents.DiffContent
f:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter
- sf:INSTANCE:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter
- getGroup():com.intellij.internal.statistic.eventLog.EventLogGroup
- f:logActionInvoked(com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$ActionKind,com.intellij.platform.lvcs.impl.ActivityScope):V
- f:logActionInvoked(com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$ActionKind,com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind):V
- f:logFilter(com.intellij.openapi.project.Project,com.intellij.platform.lvcs.impl.ActivityScope,kotlin.jvm.functions.Function0):java.lang.Object
- f:logFilter(com.intellij.openapi.project.Project,com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind,kotlin.jvm.functions.Function0):java.lang.Object
- f:logFilterUsed(com.intellij.platform.lvcs.impl.ActivityScope):V
- f:logFilterUsed(com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind):V
- f:logLoadDiff(com.intellij.openapi.project.Project,com.intellij.platform.lvcs.impl.ActivityScope,kotlin.jvm.functions.Function0):java.lang.Object
- f:logLoadDiff(com.intellij.openapi.project.Project,com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind,kotlin.jvm.functions.Function0):java.lang.Object
- f:logLoadItems(com.intellij.openapi.project.Project,com.intellij.platform.lvcs.impl.ActivityScope,kotlin.jvm.functions.Function0):java.lang.Object
- f:logLoadItems(com.intellij.openapi.project.Project,com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind,kotlin.jvm.functions.Function0):java.lang.Object
- f:logLocalHistoryOpened(com.intellij.platform.lvcs.impl.ActivityScope):V
- f:logLocalHistoryOpened(com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind):V
e:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$ActionKind
- java.lang.Enum
- sf:CreatePatch:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$ActionKind
- sf:Diff:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$ActionKind
- sf:RevertChanges:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$ActionKind
- sf:RevertRevisions:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$ActionKind
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$ActionKind
- s:values():com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$ActionKind[]
e:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind
- java.lang.Enum
- sf:Directory:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind
- sf:File:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind
- sf:Recent:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind
- sf:Selection:com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind
- s:values():com.intellij.platform.lvcs.impl.statistics.LocalHistoryCounter$Kind[]
f:com.intellij.platform.lvcs.impl.ui.ActivityChangesBrowser
- com.intellij.openapi.vcs.changes.ui.AsyncChangesBrowserBase
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.project.Project):V
- dispose():V
- getData(java.lang.String):java.lang.Object
- f:getDiffData():com.intellij.platform.lvcs.impl.ActivityDiffData
- f:setDiffData(com.intellij.platform.lvcs.impl.ActivityDiffData):V
com.intellij.platform.lvcs.impl.ui.ActivityModelListener
- java.util.EventListener
- onDiffDataLoadingStarted():V
- onDiffDataLoadingStopped(com.intellij.platform.lvcs.impl.ActivityDiffData):V
- onFilteringStarted():V
- onFilteringStopped(java.util.Set):V
- onItemsLoadingStarted():V
- onItemsLoadingStopped(com.intellij.platform.lvcs.impl.ActivityData):V
- onSelectionChanged(com.intellij.platform.lvcs.impl.ActivitySelection):V
f:com.intellij.platform.lvcs.impl.ui.ActivityService
- <init>(kotlinx.coroutines.CoroutineScope):V
- f:getCoroutineScope():kotlinx.coroutines.CoroutineScope
f:com.intellij.platform.lvcs.impl.ui.ActivityToolWindow
- sf:INSTANCE:com.intellij.platform.lvcs.impl.ui.ActivityToolWindow
- sf:showTab(com.intellij.openapi.project.Project,com.intellij.ui.content.Content):V
- f:showTab(com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):Z
f:com.intellij.platform.lvcs.impl.ui.ActivityView
- com.intellij.ui.components.JBPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.DataProvider
- sf:Companion:com.intellij.platform.lvcs.impl.ui.ActivityView$Companion
- <init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.platform.lvcs.impl.ActivityScope,Z):V
- b:<init>(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.platform.lvcs.impl.ActivityScope,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- dispose():V
- f:getActivityScope():com.intellij.platform.lvcs.impl.ActivityScope
- getData(java.lang.String):java.lang.Object
- f:getPreferredFocusedComponent():javax.swing.JComponent
- sf:isViewAvailable():Z
- sf:isViewEnabled():Z
- sf:showInDialog(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.platform.lvcs.impl.ActivityScope):V
- sf:showInToolWindow(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.platform.lvcs.impl.ActivityScope):V
f:com.intellij.platform.lvcs.impl.ui.ActivityView$Companion
- f:isViewAvailable():Z
- f:isViewEnabled():Z
- f:showInDialog(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.platform.lvcs.impl.ActivityScope):V
- f:showInToolWindow(com.intellij.openapi.project.Project,com.intellij.history.integration.IdeaGateway,com.intellij.platform.lvcs.impl.ActivityScope):V
*f:com.intellij.platform.lvcs.impl.ui.ActivityViewDataKeys
- sf:INSTANCE:com.intellij.platform.lvcs.impl.ui.ActivityViewDataKeys
- f:getSCOPE():com.intellij.openapi.actionSystem.DataKey
- f:getSELECTED_DIFFERENCES():com.intellij.openapi.actionSystem.DataKey
- f:getSELECTION():com.intellij.openapi.actionSystem.DataKey
