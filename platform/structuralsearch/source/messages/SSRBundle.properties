
#replacement dialog preview
structural.replace.preview.dialog.title=Structural Replace Preview
replace.preview.oktext=&Replace
replacement.code=Replacement code

# Search Dialog specific titles/options
structural.search.title=Structural Search
search.template=Search template:
template.name.button=Template name

save.template.description.button=Save Template
save.template.text.button=S&ave Template...
save.inspection.action.text=Save Template as Inspection...
create.inspection.from.template.action.text=Create Inspection from Template...
new.template.defaultname=user defined

recursive.matching.checkbox=&Recursive
reformat.checkbox=Re&format
use.static.import.checkbox=Use static &imports
search.target.label=Search &target:

history.button=&History
history.button.description=Show structural search history
copy.existing.template.button=E&xisting Templates...
filter.button=Toggle Filter Panel
filter.button.description=Toggle variable filters panel
tools.button=Tools

open.in.new.tab.checkbox=Open results in new ta&b

search.dialog.scope.label=&Scope
search.dialog.file.type.label=File t&ype:
search.dialog.context.label=C&ontext:

import.template.action=Import Template from Clipboard
export.template.action=Export Template to Clipboard
no.template.found.warning=No template found on the clipboard
import.template.script.warning.title=Warning: pattern contains script
import.template.script.corrupted=Corrupted template found on the clipboard
import.template.script.warning=Note that the imported template contains {1,choice,1#a Groovy Script filter|1<{1} Groovy Script filters} and any script has access to the complete {0} internals. Please make sure that the script does not cause damage before using this template.
switch.to.search.action=Switch to Search
switch.to.replace.action=Switch to Replace

#search usage view specific
looking.in.progress.message=Looking in {0}
found.progress.message=Found {0} matches
occurrences.of=fragments matching template ''{0}''
occurrences.of.0.in.1=Template ''{0}'' in {1}
replace.occurrences.of.0.with.1.in.2=Replace ''{0}'' in {2} with ''{1}''
occurrence=match
found.occurrences=Found Matches in {0}
targets.node.text=Structural Search Template

# search dialog messages
this.pattern.is.malformed.message=the specified pattern is malformed\n {0}
this.pattern.is.unsupported.message=the specified pattern is unsupported
incorrect.pattern.message=Incorrect pattern

used.templates.history.dialog.title=Used Templates History
existing.templates.dialog.title=Existing Templates
selecttemplate.template.preview=Template preview:
selecttemplate.template.label.please.select.template=<html><body><center>Please select a template in the tree on the left.</center></body></html>

# filters
count.filter.name=Count
reference.filter.name=Reference
script.filter.name=Script
text.filter.name=Text
type.filter.name=Type
context.filter.name=Context
add.filter.title=Add Filter
add.filter.label=Add filter
add.script.label=Add script
count.label=Count={0}
max.label=Max=
min.label=Min=
reference.label=Reference=
reference.0.label=Reference={0}
script.label=Script=
script.0.label=Script={0}
text.label=Text=
text.0.label=Text={0}
type.label=Type=
type.0.label=Type={0}
context.label=Context=
context.0.label=Context={0}
within.hierarchy.label=, within hierarchy
whole.words.label=, whole words
within.type.hierarchy.check.box=Within type hierarchy
whole.words.check.box=Words
regex.check.box=Regex
no.filters.whole.template.label=No filters added for the whole template.
no.filters.for.0.label=No filters added for ${0}$.
no.script.for.0.label=No script added for ${0}$.
filters.for.whole.template.title=Filters for the whole template:
filters.for.0.title=Filters for ${0}$:

type.filter.help.text=<p>The type of the matched expression is checked against the provided "|"-separated patterns. <p>Use "!" to invert the pattern.
text.filter.help.text=<p>Text of the match is checked against the provided pattern. <p>Use "!" to invert the pattern. <p>Regular expressions are supported.
script.filter.match.variable.help.text=<p>Use the GroovyScript IntelliJ API to filter the search results. \
  When the specified script returns <code>false</code>, the found element will not be in the search results. \
  Non-boolean script results will be converted to boolean. <p>Available variables: {0}
script.filter.replacement.variable.help.text=<p>Use the GroovyScript Intellij API to create a custom replacement, for advanced renaming, \
  rewriting or refactoring. When replacing, the variable in the replace template will be replaced with the String result of the specified script. \
  <p>Available variables: {0}
reference.filter.help.text=<p>Preconfigured search patterns can be autocompleted with {0}.\
  <p>The referenced element is checked against the provided pattern.<p>Use "!" to invert the pattern.


# Replace Dialog specific titles/options
structural.replace.title=Structural Replace
shorten.fully.qualified.names.checkbox=Sh&orten fully qualified names
replacement.template.label=Replace template:

# Replace validation messages
unsupported.replacement.pattern.message=Unsupported replacement pattern {0}
malformed.replacement.pattern.message=Malformed replacement pattern {0}

#replacement usage view specific
preview.replacement.button=&Preview Replacement
do.replace.all.button=Replace &All
replace.selected.button=&Replace Selected

# predefined configuration categories
expressions.category=Java/Expressions
user.defined.category=User Defined
xml_html.category=XML//HTML
generics.category=Java/Generics
misc.category=Java/Miscellaneous
metadata.category=Java/Comments, Javadoc and Metadata
class.category=Java/Class-based
operators.category=Java/Operators
j2ee.category=Java/Java EE
interesting.category=Java/Interesting
used.templates=Used templates:

# predefined configuration names

predefined.configuration.method.calls=method calls
predefined.configuration.struts.1.1.actions=Struts 1.1 actions
predefined.configuration.ejb.interface=ejb interface
predefined.configuration.servlets=servlets
predefined.configuration.unboxing.in.method.calls=unboxing in method calls
predefined.configuration.boxing.in.method.calls=boxing in method calls
predefined.configuration.unboxing.in.declarations=unboxing in declarations
predefined.configuration.boxing.in.declarations=boxing in declarations
predefined.configuration.any.unboxing=unboxed expressions
predefined.configuration.any.boxing=boxed expressions
predefined.configuration.filters=filters
predefined.configuration.session.ejb=session ejb
predefined.configuration.fields.variables.read=fields/variables read
predefined.configuration.symbol=symbol
predefined.configuration.inner.classes=inner classes
predefined.configuration.]junit.test.cases=junit test cases
predefined.configuration.ifs=if's
predefined.configuration.anonymous.classes=anonymous classes
predefined.configuration.javadoc.tags=javadoc tags
predefined.configuration.all.methods.of.the.class.within.hierarchy=all methods of a class (within hierarchy)
predefined.configuration.similar.methods.structure=similar methods structure
predefined.configuration.class.implements.two.interfaces=class implementing two interfaces
predefined.configuration.bean.info.classes=Bean info classes
predefined.configuration.all.expressions.of.some.type=all expressions of some type
predefined.configuration.variables.of.generic.types=variables of generic types
predefined.configuration.diamond.operators=diamond operators
predefined.configuration.method.returns.bounded.wildcard=method returns bounded wildcard
predefined.configuration.generic.constructors=generic constructors
predefined.configuration.comments=comments
predefined.configuration.fields_variables.with.given.name.pattern.updated=fields/variables with given name pattern updated
predefined.configuration.trys=try's
predefined.configuration.try.without.resources=try statements without resources and catch blocks
predefined.configuration.switch.with.branches=switch statements \\& expressions with few branches
predefined.configuration.labeled.break=labeled break statements
predefined.configuration.block.dcls=block dcls
predefined.configuration.methods.of.the.class=constructors \\& methods
predefined.configuration.deprecated.methods=deprecated methods
predefined.configuration.instanceof=instanceof
predefined.configuration.implementors.of.interface.within.hierarchy=implementors of interface (within hierarchy)
predefined.configuration.generic.casts=generic casts
predefined.configuration.field.selections=field selections
predefined.configuration.fields.of.the.class=fields of a class
predefined.configuration.array.access=array access
predefined.configuration.usage.of.derived.type.in.cast=usage of derived type in cast
predefined.configuration.annotated.methods=annotated methods
predefined.configuration.not.annotated.methods=not annotated methods
predefined.configuration.annotation.declarations=annotation declarations
predefined.configuration.annotations=annotations
predefined.configuration.annotated.class=annotated classes
predefined.configuration.entity.ejb=entity ejb
predefined.configuration.generic.methods=generic methods
predefined.configuration.cloneable.implementations=Cloneable implementations
predefined.configuration.xdoclet.metadata=XDoclet metadata
predefined.configuration.type.var.substitutions.in.intanceof.with.generic.types=type var substitutions in intanceof with generic types
predefined.configuration.singletons=singletons
predefined.configuration.switches=switches
predefined.configuration.foreaches=foreach loops
predefined.configuration.interfaces=interfaces
predefined.configuration.string.literals=string literals
predefined.configuration.all.inner.classes.within.hierarchy=all inner classes (within hierarchy)
predefined.configuration.direct.subclasses=direct subclasses
predefined.configuration.javadoc.annotated.methods=javadoc annotated methods \\& constructors
predefined.configuration.javadoc.annotated.fields=javadoc annotated fields
predefined.configuration.assignments=assignments
predefined.configuration.casts=casts
predefined.configuration.serializable.classes.and.their.serialization.implementation=Serializable classes and their serialization implementation
predefined.configuration.annotated.fields=annotated fields
predefined.configuration.generic.classes=generic classes
predefined.configuration.javadoc.annotated.class=javadoc annotated class
predefined.configuration.constructors.of.the.class=class constructors
predefined.configuration.typed.symbol=typed symbol
predefined.configuration.all.fields.of.the.class=all fields of a class
predefined.configuration.instance.fields.of.the.class=instance fields of a class
predefined.configuration.packagelocal.fields.of.the.class=package-private fields
predefined.configuration.classes=classes
predefined.configuration.classes.interfaces.enums=classes, interfaces \\& enums
predefined.configuration.new.expressions=new expressions
predefined.configuration.lambdas=lambdas
predefined.configuration.method.references=method references
predefined.configuration.string.concatenations=string concatenations with many operands
predefined.configuration.deprecated.method.calls=method calls to deprecated methods
predefined.configuration.methods.with.final.parameters=methods \\& constructors with final parameters
predefined.configuration.class.static.blocks=static initializers
predefined.configuration.class.instance.initialization.blocks=instance initializers
predefined.configuration.class.any.initialization.blocks=any initializer
predefined.configuration.logging.without.if=logging without if
predefined.configuration.assert.without.description=assert statement without description
predefined.configuration.class.with.parameterless.constructors=classes with parameterless constructors
predefined.configuration.static.fields.without.final=static fields that are not final
predefined.configuration.sample.method.invokation.with.constant.argument=sample method invocation with constant argument
predefined.configuration.interfaces.having.no.descendants=interface that is not implemented or extended
predefined.configuration.enums=enums

# edit variable constraint dialog options
invalid.regular.expression=Invalid regular expression\: {0}
unlimited.placeholder=Unlimited

# tooltip message fragment on ss variables
no.constraints.specified.tooltip.message=no constraints specified
no.filters.tooltip.message=no filters
script.option.text=Script text\:
min.occurs.tooltip.message=[{0},{1}]
target.tooltip.message=target
text.tooltip.message=text{0,choice,0#=|1#\u2260}{1}{2,choice,0#|1#, whole words}{3,choice,0#|1#, within hierarchy}
hierarchy.tooltip.message=within hierarchy
exprtype.tooltip.message=type{0,choice,0#=|1#\u2260}{1}{2,choice,0#|1#, within hierarchy}
expected.type.tooltip.message=expected type{0,choice,0#=|1#\u2260}{1}{2,choice,0#|1#, within hierarchy}
script.tooltip.message=script
within.constraints.tooltip.message=within{0,choice,0#=|1#\u2260}{1}
reference.target.tooltip.message=reference{0,choice,0#=|1#\u2260}{1}
complete.match.variable.tooltip.message=<html>Complete Match: {0}
replacement.variable.is.not.defined.message=Replacement variable ''{0}'' has no script
replacement.variable.is.not.valid=Replacement variable ''{0}'' has script code problem: {1}
replacement.template.is.not.expression.error.message=An expression can not be replaced with a non-expression
replacement.not.supported.for.filetype=Replacement is not supported for {0} file type
search.template.is.not.expression.error.message=A non-expression can not be replaced with an expression

modify.editor.content.command.name=Modify Editor Content
option.is.not.recognized.error.message=Constraint ''{0}'' not recognized

error.only.one.target.allowed=Only one target allowed
error.condition.only.on.first.variable.reference=Constraints are only allowed on the first reference of a variable
error.two.different.type.constraints=Two different type constraints
error.incorrect.regexp.constraint=Incorrect reg exp constraint: {0} for {1}
error.expected.character=Character expected after single quote
error.overflow=Value overflow
error.expected.digit=Digit expected
error.expected.brace1=Digit, '}' or ',' expected
error.expected.brace2=Digit or '}' expected
error.empty.quantifier=Empty quantifier
error.expected.condition=Constraint expected after ''{0}''
error.expected.condition.name=Constraint name missing
error.expected.value=''{0}'' expected
error.unexpected.value=Unexpected ''{0}''
invalid.modifier.type=Invalid modifier type {0}
error.argument.expected=Argument expected on ''{0}'' constraint
error.cannot.invert=Cannot invert ''{0}'' constraint
error.only.applicable.to.complete.match=Constraint ''{0}'' is only applicable to Complete Match

SSRInspection.replace.with=Replace with ''{0}''
SSRInspection.family.name=Replace Structurally
SSRInspection.display.name=Structural search inspection
SSRInspection.add.search.template.button=Add Search Template...
SSRInspection.add.replace.template.button=Add Replace Template...
overwrite.message=A template with the same name already exists. Replacing it will overwrite its current contents.
overwrite.title="{0}" Exists, Replace?
template.in.use.message=Template ''{0}'' is used from template ''{1}''. Are you sure you want to remove it?
ssr.will.not.find.anything=The specified pattern does not match anything in scope ''{0}''
inspection.script.problem={0}\n in Structural Search inspection template ''{1}''
inspection.template.problem=Structural Search inspection problem in template ''{0}''
search.template.problem=Structural Search: {0}
search.script.problem=Structural Search script threw an exception: {0}
complete.match.variable.name=Complete match
regular.expression.help.label=Regular Expressions Help
template.in.use.title=Template ''{0}'' In Use

structural.search.group.name=Structural search
edit.metadata.button=Edit Metadata...
add.pattern.action=Add Pattern
templates.title=Templates:
add.inspection.button=Add Structural Search && Replace Inspection
remove.inspection.button=Remove Structural Search && Replace Inspection

meta.data.dialog.title=Structural Search Inspection
inspection.name.label=Inspection name:
problem.descriptor.label=Problem tool tip (use macro #ref to insert highlighted code):
description.label=Description:
suppress.id.label=Suppress ID:
no.description.message=No description provided

name.must.not.be.empty.warning=Name must not be empty
inspection.with.name.exists.warning=Inspection with name ''{0}'' already exists
suppress.id.must.match.regex.warning=Suppress ID must match regex [a-zA-Z_0-9.-]+
suppress.id.in.use.warning=Suppress ID ''{0}'' is already in use by another inspection
button.replace=Replace
popup.content.directory=Not a directory
command.name.adjust.line.indent=Adjust Line Indent
command.name.live.search.template.builder=Live Search Template Builder
tooltip.preconfigured.search.patterns=<p>Preconfigured search patterns can be autocompleted with {0}.<p>The provided pattern is used to constrain the target template context