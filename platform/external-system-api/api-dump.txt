com.intellij.openapi.externalSystem.ExternalSystemAutoImportAware
- getAffectedExternalProjectFiles(java.lang.String,com.intellij.openapi.project.Project):java.util.List
- a:getAffectedExternalProjectPath(java.lang.String,com.intellij.openapi.project.Project):java.lang.String
com.intellij.openapi.externalSystem.ExternalSystemConfigurableAware
- a:getConfigurable(com.intellij.openapi.project.Project):com.intellij.openapi.options.Configurable
com.intellij.openapi.externalSystem.ExternalSystemManager
- com.intellij.openapi.externalSystem.service.ParametersEnhancer
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- createTestConsoleProperties(com.intellij.openapi.project.Project,com.intellij.execution.Executor,com.intellij.execution.configurations.RunConfiguration):java.lang.Object
- a:getExecutionSettingsProvider():com.intellij.util.Function
- a:getExternalProjectDescriptor():com.intellij.openapi.fileChooser.FileChooserDescriptor
- a:getLocalSettingsProvider():com.intellij.util.Function
- a:getProjectResolverClass():java.lang.Class
- getSearchScope(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.execution.ExternalSystemTaskExecutionSettings):com.intellij.psi.search.GlobalSearchScope
- a:getSettingsProvider():com.intellij.util.Function
- a:getSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
- getTaskManagerClass():java.lang.Class
a:com.intellij.openapi.externalSystem.ExternalSystemModulePropertyManager
- sf:Companion:com.intellij.openapi.externalSystem.ExternalSystemModulePropertyManager$Companion
- <init>():V
- a:getExternalModuleGroup():java.lang.String
- a:getExternalModuleType():java.lang.String
- a:getExternalModuleVersion():java.lang.String
- a:getExternalSystemId():java.lang.String
- sf:getInstance(com.intellij.openapi.module.Module):com.intellij.openapi.externalSystem.ExternalSystemModulePropertyManager
- a:getLinkedProjectId():java.lang.String
- a:getLinkedProjectPath():java.lang.String
- a:getRootProjectPath():java.lang.String
- a:isMavenized():Z
- a:setExternalId(com.intellij.openapi.externalSystem.model.ProjectSystemId):V
- a:setExternalModuleType(java.lang.String):V
- a:setExternalOptions(com.intellij.openapi.externalSystem.model.ProjectSystemId,com.intellij.openapi.externalSystem.model.project.ModuleData,com.intellij.openapi.externalSystem.model.project.ProjectData):V
- a:setLinkedProjectPath(java.lang.String):V
- a:setMavenized(Z):V
- a:setRootProjectPath(java.lang.String):V
- a:swapStore():V
- a:unlinkExternalOptions():V
f:com.intellij.openapi.externalSystem.ExternalSystemModulePropertyManager$Companion
- f:getInstance(com.intellij.openapi.module.Module):com.intellij.openapi.externalSystem.ExternalSystemModulePropertyManager
com.intellij.openapi.externalSystem.ExternalSystemUiAware
- a:getExternalProjectConfigDescriptor():com.intellij.openapi.fileChooser.FileChooserDescriptor
- a:getProjectIcon():javax.swing.Icon
- getProjectRepresentationName(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):java.lang.String
- a:getProjectRepresentationName(java.lang.String,java.lang.String):java.lang.String
- a:getTaskIcon():javax.swing.Icon
e:com.intellij.openapi.externalSystem.autoimport.ExternalSystemModificationType
- java.lang.Enum
- sf:EXTERNAL:com.intellij.openapi.externalSystem.autoimport.ExternalSystemModificationType
- sf:HIDDEN:com.intellij.openapi.externalSystem.autoimport.ExternalSystemModificationType
- sf:INTERNAL:com.intellij.openapi.externalSystem.autoimport.ExternalSystemModificationType
- sf:UNKNOWN:com.intellij.openapi.externalSystem.autoimport.ExternalSystemModificationType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.externalSystem.autoimport.ExternalSystemModificationType
- s:values():com.intellij.openapi.externalSystem.autoimport.ExternalSystemModificationType[]
com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectAware
- a:getProjectId():com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectId
- a:getSettingsFiles():java.util.Set
- a:reloadProject(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectReloadContext):V
- a:subscribe(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectListener,com.intellij.openapi.Disposable):V
f:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectId
- <init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):V
- f:component1():com.intellij.openapi.externalSystem.model.ProjectSystemId
- f:component2():java.lang.String
- f:copy(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectId
- bs:copy$default(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectId,com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String,I,java.lang.Object):com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectId
- equals(java.lang.Object):Z
- f:getDebugName():java.lang.String
- f:getExternalProjectPath():java.lang.String
- f:getProjectName():java.lang.String
- f:getSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
- hashCode():I
com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectListener
- onProjectReloadFinish(com.intellij.openapi.externalSystem.autoimport.ExternalSystemRefreshStatus):V
- onProjectReloadStart():V
- onSettingsFilesListChange():V
com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectNotificationAware
- sf:Companion:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectNotificationAware$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectNotificationAware
- a:getSystemIds():java.util.Set
- a:isNotificationVisible():Z
- a:notificationExpire():V
- a:notificationExpire(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectId):V
- a:notificationNotify(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectAware):V
f:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectNotificationAware$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectNotificationAware
- f:isNotificationVisibleProperty(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.observable.properties.ObservableProperty
- f:whenNotificationChanged(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function0):V
- f:whenNotificationChanged(com.intellij.openapi.project.Project,kotlin.jvm.functions.Function0):V
com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectNotificationAware$Listener
- onNotificationChanged(com.intellij.openapi.project.Project):V
com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectReloadContext
- a:getHasUndefinedModifications():Z
- a:getSettingsFilesContext():com.intellij.openapi.externalSystem.autoimport.ExternalSystemSettingsFilesReloadContext
- a:isExplicitReload():Z
com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTracker
- sf:Companion:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTracker$Companion
- a:activate(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectId):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTracker
- a:markDirty(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectId):V
- a:markDirtyAllProjects():V
- a:register(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectAware):V
- register(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectAware,com.intellij.openapi.Disposable):V
- a:remove(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectId):V
- a:scheduleChangeProcessing():V
- a:scheduleProjectRefresh():V
f:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTracker$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTracker
com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings
- sf:Companion:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings$Companion
- a:getAutoReloadType():com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings$AutoReloadType
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings
- a:setAutoReloadType(com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings$AutoReloadType):V
e:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings$AutoReloadType
- java.lang.Enum
- sf:ALL:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings$AutoReloadType
- sf:NONE:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings$AutoReloadType
- sf:SELECTIVE:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings$AutoReloadType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings$AutoReloadType
- s:values():com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings$AutoReloadType[]
f:com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTrackerSettings
e:com.intellij.openapi.externalSystem.autoimport.ExternalSystemRefreshStatus
- java.lang.Enum
- sf:CANCEL:com.intellij.openapi.externalSystem.autoimport.ExternalSystemRefreshStatus
- sf:FAILURE:com.intellij.openapi.externalSystem.autoimport.ExternalSystemRefreshStatus
- sf:SUCCESS:com.intellij.openapi.externalSystem.autoimport.ExternalSystemRefreshStatus
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.externalSystem.autoimport.ExternalSystemRefreshStatus
- s:values():com.intellij.openapi.externalSystem.autoimport.ExternalSystemRefreshStatus[]
com.intellij.openapi.externalSystem.autoimport.ExternalSystemSettingsFilesReloadContext
- a:getCreated():java.util.Set
- a:getDeleted():java.util.Set
- a:getUpdated():java.util.Set
com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectAware
- sf:Companion:com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectAware$Companion
- buildFileExtensions():java.lang.String[]
- s:getInstance(com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectAware
- a:getSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
- a:isBuildFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- a:isLinkedProject(com.intellij.openapi.project.Project,java.lang.String):Z
- linkAndLoadProject(com.intellij.openapi.project.Project,java.lang.String):V
- linkAndLoadProjectAsync(com.intellij.openapi.project.Project,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- bs:linkAndLoadProjectAsync$suspendImpl(com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectAware,com.intellij.openapi.project.Project,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- a:subscribe(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.autolink.ExternalSystemProjectLinkListener,com.intellij.openapi.Disposable):V
- unlinkProject(com.intellij.openapi.project.Project,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- bs:unlinkProject$suspendImpl(com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectAware,com.intellij.openapi.project.Project,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectAware$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
- f:getInstance(com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectAware
com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectSettings
- sf:Companion:com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectSettings$Companion
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectSettings
- a:isEnabledAutoLink():Z
- a:setEnabledAutoLink(Z):V
f:com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectSettings$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.autolink.ExternalSystemUnlinkedProjectSettings
com.intellij.openapi.externalSystem.debugger.DebuggerBackendExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:RUNTIME_MODULE_DIR_KEY:com.intellij.openapi.util.Key
- a:debugConfigurationSettings(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):com.intellij.execution.RunnerAndConfigurationSettings
- executionEnvironmentVariables(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):java.util.Map
- a:id():java.lang.String
- initializationCode(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):java.util.List
- isAlwaysAttached():Z
- splitParameters(java.lang.String):java.util.HashMap
f:com.intellij.openapi.externalSystem.dependency.analyzer.DAArtifact
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data$Artifact
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:component3():java.lang.String
- f:copy(java.lang.String,java.lang.String,java.lang.String):com.intellij.openapi.externalSystem.dependency.analyzer.DAArtifact
- bs:copy$default(com.intellij.openapi.externalSystem.dependency.analyzer.DAArtifact,java.lang.String,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.openapi.externalSystem.dependency.analyzer.DAArtifact
- equals(java.lang.Object):Z
- getArtifactId():java.lang.String
- getGroupId():java.lang.String
- getVersion():java.lang.String
- hashCode():I
f:com.intellij.openapi.externalSystem.dependency.analyzer.DADependency
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency
- <init>(com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data,com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Scope,com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency,java.util.List):V
- f:component1():com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data
- f:component2():com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Scope
- f:component3():com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency
- f:component4():java.util.List
- f:copy(com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data,com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Scope,com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency,java.util.List):com.intellij.openapi.externalSystem.dependency.analyzer.DADependency
- bs:copy$default(com.intellij.openapi.externalSystem.dependency.analyzer.DADependency,com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data,com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Scope,com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency,java.util.List,I,java.lang.Object):com.intellij.openapi.externalSystem.dependency.analyzer.DADependency
- equals(java.lang.Object):Z
- getData():com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data
- getParent():com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency
- getScope():com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Scope
- getStatus():java.util.List
- hashCode():I
f:com.intellij.openapi.externalSystem.dependency.analyzer.DAModule
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data$Module
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.openapi.externalSystem.dependency.analyzer.DAModule
- bs:copy$default(com.intellij.openapi.externalSystem.dependency.analyzer.DAModule,java.lang.String,I,java.lang.Object):com.intellij.openapi.externalSystem.dependency.analyzer.DAModule
- equals(java.lang.Object):Z
- getName():java.lang.String
- hashCode():I
f:com.intellij.openapi.externalSystem.dependency.analyzer.DAOmitted
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Status$Omitted
- sf:INSTANCE:com.intellij.openapi.externalSystem.dependency.analyzer.DAOmitted
f:com.intellij.openapi.externalSystem.dependency.analyzer.DAProject
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerProject
- <init>(com.intellij.openapi.module.Module,java.lang.String):V
- equals(java.lang.Object):Z
- getModule():com.intellij.openapi.module.Module
- getTitle():java.lang.String
- hashCode():I
f:com.intellij.openapi.externalSystem.dependency.analyzer.DAScope
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Scope
- <init>(java.lang.String,java.lang.String):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:copy(java.lang.String,java.lang.String):com.intellij.openapi.externalSystem.dependency.analyzer.DAScope
- bs:copy$default(com.intellij.openapi.externalSystem.dependency.analyzer.DAScope,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.openapi.externalSystem.dependency.analyzer.DAScope
- equals(java.lang.Object):Z
- getName():java.lang.String
- getTitle():java.lang.String
- hashCode():I
f:com.intellij.openapi.externalSystem.dependency.analyzer.DAWarning
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Status$Warning
- <init>(java.lang.String):V
- getMessage():java.lang.String
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerContributor
- a:getDependencies(com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerProject):java.util.List
- a:getDependencyScopes(com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerProject):java.util.List
- a:getProjects():java.util.List
- a:whenDataChanged(kotlin.jvm.functions.Function0,com.intellij.openapi.Disposable):V
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency
- com.intellij.openapi.util.UserDataHolder
- a:getData():com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data
- a:getParent():com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency
- a:getScope():com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Scope
- a:getStatus():java.util.List
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data
- com.intellij.openapi.util.UserDataHolder
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data$Artifact
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data
- a:getArtifactId():java.lang.String
- a:getGroupId():java.lang.String
- a:getVersion():java.lang.String
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data$Module
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data
- a:getName():java.lang.String
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Scope
- com.intellij.openapi.util.UserDataHolder
- a:getName():java.lang.String
- a:getTitle():java.lang.String
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Status
- com.intellij.openapi.util.UserDataHolder
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Status$Omitted
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Status
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Status$Warning
- com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Status
- a:getMessage():java.lang.String
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerExtension
- sf:Companion:com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerExtension$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createContributor(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerContributor
- a:isApplicable(com.intellij.openapi.externalSystem.model.ProjectSystemId):Z
f:com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerExtension$Companion
- f:createExtensionDisposable(com.intellij.openapi.externalSystem.model.ProjectSystemId,com.intellij.openapi.Disposable):com.intellij.openapi.Disposable
- f:getExtension(com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerExtension
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerProject
- com.intellij.openapi.util.UserDataHolder
- a:getModule():com.intellij.openapi.module.Module
- a:getTitle():java.lang.String
com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerView
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- sf:ACTION_PLACE:java.lang.String
- sf:Companion:com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerView$Companion
- a:setSelectedDependency(com.intellij.openapi.module.Module,com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data):V
- a:setSelectedDependency(com.intellij.openapi.module.Module,com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerDependency$Data,java.lang.String):V
- a:setSelectedDependency(com.intellij.openapi.module.Module,java.util.List):V
- a:setSelectedDependency(com.intellij.openapi.module.Module,java.util.List,java.lang.String):V
- a:setSelectedExternalProject(com.intellij.openapi.module.Module):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.openapi.externalSystem.dependency.analyzer.DependencyAnalyzerView$Companion
- sf:ACTION_PLACE:java.lang.String
- f:getDEPENDENCIES():com.intellij.openapi.actionSystem.DataKey
- f:getDEPENDENCY():com.intellij.openapi.actionSystem.DataKey
- f:getVIEW():com.intellij.openapi.actionSystem.DataKey
com.intellij.openapi.externalSystem.execution.ExternalSystemExecutionConsoleManager
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- attachExecutionConsole(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.task.ExternalSystemTask,com.intellij.execution.runners.ExecutionEnvironment,com.intellij.execution.process.ProcessHandler):com.intellij.execution.ui.ExecutionConsole
- a:getExternalSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
- a:getRestartActions(com.intellij.execution.ui.ExecutionConsole):com.intellij.openapi.actionSystem.AnAction[]
- a:isApplicableFor(com.intellij.openapi.externalSystem.model.task.ExternalSystemTask):Z
- a:onOutput(com.intellij.execution.ui.ExecutionConsole,com.intellij.execution.process.ProcessHandler,java.lang.String,com.intellij.openapi.util.Key):V
- onStatusChange(com.intellij.execution.ui.ExecutionConsole,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationEvent):V
com.intellij.openapi.externalSystem.importing.ImportSpec
- a:getArguments():java.lang.String
- a:getCallback():com.intellij.openapi.externalSystem.service.project.ExternalProjectRefreshCallback
- a:getExternalSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
- a:getProgressExecutionMode():com.intellij.openapi.externalSystem.service.execution.ProgressExecutionMode
- a:getProject():com.intellij.openapi.project.Project
- a:getUserData():com.intellij.openapi.util.UserDataHolderBase
- a:getVmOptions():java.lang.String
- a:isActivateBuildToolWindowOnFailure():Z
- a:isActivateBuildToolWindowOnStart():Z
- a:isNavigateToError():com.intellij.util.ThreeState
- a:isPreviewMode():Z
- a:shouldCreateDirectoriesForEmptyContentRoots():Z
c:com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- <init>(com.intellij.openapi.externalSystem.importing.ImportSpec):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId):V
- activateBuildToolWindowOnStart():com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- build():com.intellij.openapi.externalSystem.importing.ImportSpec
- callback(com.intellij.openapi.externalSystem.service.project.ExternalProjectRefreshCallback):com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- createDirectoriesForEmptyContentRoots():com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- dontNavigateToError():com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- dontReportRefreshErrors():com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- forceWhenUptodate(Z):com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- navigateToError():com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- use(com.intellij.openapi.externalSystem.service.execution.ProgressExecutionMode):com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- usePreviewMode():com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- withArguments(java.lang.String):com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- withUserData(com.intellij.openapi.util.UserDataHolderBase):com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
- withVmOptions(java.lang.String):com.intellij.openapi.externalSystem.importing.ImportSpecBuilder
c:com.intellij.openapi.externalSystem.model.DataNode
- com.intellij.openapi.util.UserDataHolderEx
- java.io.Serializable
- <init>(com.intellij.openapi.externalSystem.model.Key,java.lang.Object,com.intellij.openapi.externalSystem.model.DataNode):V
- addChild(com.intellij.openapi.externalSystem.model.DataNode):V
- clear(Z):V
- createChild(com.intellij.openapi.externalSystem.model.Key,java.lang.Object):com.intellij.openapi.externalSystem.model.DataNode
- equals(java.lang.Object):Z
- getChildren():java.util.Collection
- getCopyableUserData(com.intellij.openapi.util.Key):java.lang.Object
- getData():java.lang.Object
- getData(com.intellij.openapi.externalSystem.model.Key):java.lang.Object
- getDataNode(com.intellij.openapi.externalSystem.model.Key):com.intellij.openapi.externalSystem.model.DataNode
- getKey():com.intellij.openapi.externalSystem.model.Key
- getParent():com.intellij.openapi.externalSystem.model.DataNode
- getParent(java.lang.Class):com.intellij.openapi.externalSystem.model.DataNode
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- graphCopy():com.intellij.openapi.externalSystem.model.DataNode
- hashCode():I
- isIgnored():Z
- isReady():Z
- nodeCopy():com.intellij.openapi.externalSystem.model.DataNode
- s:nodeCopy(com.intellij.openapi.externalSystem.model.DataNode):com.intellij.openapi.externalSystem.model.DataNode
- putCopyableUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- putUserDataIfAbsent(com.intellij.openapi.util.Key,java.lang.Object):java.lang.Object
- removeUserData(com.intellij.openapi.util.Key):V
- replace(com.intellij.openapi.util.Key,java.lang.Object,java.lang.Object):Z
- setIgnored(Z):V
- validateData():Z
- f:visit(java.util.function.Consumer):V
- visitData(java.util.function.Function):V
com.intellij.openapi.externalSystem.model.ExternalProjectInfo
- a:copy():com.intellij.openapi.externalSystem.model.ExternalProjectInfo
- a:getBuildNumber():java.lang.String
- a:getExternalProjectPath():java.lang.String
- a:getExternalProjectStructure():com.intellij.openapi.externalSystem.model.DataNode
- a:getLastImportTimestamp():J
- a:getLastSuccessfulImportTimestamp():J
- a:getProjectSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
f:com.intellij.openapi.externalSystem.model.Key
- java.io.Serializable
- java.lang.Comparable
- <init>(java.lang.String,I):V
- compareTo(com.intellij.openapi.externalSystem.model.Key):I
- s:create(java.lang.Class,I):com.intellij.openapi.externalSystem.model.Key
- equals(java.lang.Object):Z
- getDataType():java.lang.String
- getProcessingWeight():I
- hashCode():I
c:com.intellij.openapi.externalSystem.model.LocationAwareExternalSystemException
- com.intellij.openapi.externalSystem.model.ExternalSystemException
- <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String[]):V
- <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String[]):V
- <init>(java.lang.String,java.lang.String,java.lang.String[]):V
- <init>(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String[]):V
- <init>(java.lang.Throwable,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String[]):V
- getColumn():java.lang.Integer
- getFilePath():java.lang.String
- getLine():java.lang.Integer
f:com.intellij.openapi.externalSystem.model.ProjectKeys
- sf:CONFIGURATION:com.intellij.openapi.externalSystem.model.Key
- sf:CONTENT_ROOT:com.intellij.openapi.externalSystem.model.Key
- sf:DEPENDENCIES_GRAPH:com.intellij.openapi.externalSystem.model.Key
- sf:LIBRARY:com.intellij.openapi.externalSystem.model.Key
- sf:LIBRARY_DEPENDENCY:com.intellij.openapi.externalSystem.model.Key
- sf:MODULE:com.intellij.openapi.externalSystem.model.Key
- sf:MODULE_DEPENDENCY:com.intellij.openapi.externalSystem.model.Key
- sf:PROJECT:com.intellij.openapi.externalSystem.model.Key
- sf:TASK:com.intellij.openapi.externalSystem.model.Key
- sf:TEST:com.intellij.openapi.externalSystem.model.Key
f:com.intellij.openapi.externalSystem.model.ProjectSystemId
- java.io.Serializable
- sf:IDE:com.intellij.openapi.externalSystem.model.ProjectSystemId
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- s:findById(java.lang.String):com.intellij.openapi.externalSystem.model.ProjectSystemId
- getId():java.lang.String
- getReadableName():java.lang.String
- hashCode():I
- intern():com.intellij.openapi.externalSystem.model.ProjectSystemId
f:com.intellij.openapi.externalSystem.model.SerializationKt
- sf:createCacheReadConfiguration(com.intellij.openapi.diagnostic.Logger):com.intellij.serialization.ReadConfiguration
- sf:createCacheReadConfiguration(com.intellij.openapi.diagnostic.Logger,java.lang.ClassLoader):com.intellij.serialization.ReadConfiguration
- bs:createCacheReadConfiguration$default(com.intellij.openapi.diagnostic.Logger,java.lang.ClassLoader,I,java.lang.Object):com.intellij.serialization.ReadConfiguration
- sf:createCacheWriteConfiguration():com.intellij.serialization.WriteConfiguration
- sf:createDataNodeReadConfiguration(kotlin.jvm.functions.Function2):com.intellij.serialization.ReadConfiguration
c:com.intellij.openapi.externalSystem.model.execution.ExternalSystemTaskExecutionSettings
- java.lang.Cloneable
- sf:JVM_AGENT_SETUP_KEY:com.intellij.openapi.util.Key
- sf:TAG_NAME:java.lang.String
- <init>():V
- clone():com.intellij.openapi.externalSystem.model.execution.ExternalSystemTaskExecutionSettings
- equals(java.lang.Object):Z
- getEnv():java.util.Map
- getExecutionName():java.lang.String
- getExternalProjectPath():java.lang.String
- getExternalSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
- getExternalSystemIdString():java.lang.String
- getScriptParameters():java.lang.String
- getTaskDescriptions():java.util.List
- getTaskNames():java.util.List
- getVmOptions():java.lang.String
- hashCode():I
- isPassParentEnvs():Z
- setEnv(java.util.Map):V
- setExecutionName(java.lang.String):V
- setExternalProjectPath(java.lang.String):V
- setExternalSystemIdString(java.lang.String):V
- setFrom(com.intellij.openapi.externalSystem.model.execution.ExternalSystemTaskExecutionSettings):V
- setPassParentEnvs(Z):V
- setScriptParameters(java.lang.String):V
- setTaskDescriptions(java.util.List):V
- setTaskNames(java.util.List):V
- setVmOptions(java.lang.String):V
c:com.intellij.openapi.externalSystem.model.execution.ExternalTaskExecutionInfo
- <init>():V
- <init>(com.intellij.openapi.externalSystem.model.execution.ExternalSystemTaskExecutionSettings,java.lang.String):V
- equals(java.lang.Object):Z
- getDescription():java.lang.String
- getExecutorId():java.lang.String
- getSettings():com.intellij.openapi.externalSystem.model.execution.ExternalSystemTaskExecutionSettings
- hashCode():I
- setExecutorId(java.lang.String):V
- setSettings(com.intellij.openapi.externalSystem.model.execution.ExternalSystemTaskExecutionSettings):V
c:com.intellij.openapi.externalSystem.model.execution.ExternalTaskPojo
- java.lang.Comparable
- <init>():V
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- compareTo(com.intellij.openapi.externalSystem.model.execution.ExternalTaskPojo):I
- equals(java.lang.Object):Z
- s:from(com.intellij.openapi.externalSystem.model.task.TaskData):com.intellij.openapi.externalSystem.model.execution.ExternalTaskPojo
- getDescription():java.lang.String
- getLinkedExternalProjectPath():java.lang.String
- getName():java.lang.String
- hashCode():I
- setDescription(java.lang.String):V
- setLinkedExternalProjectPath(java.lang.String):V
- setName(java.lang.String):V
a:com.intellij.openapi.externalSystem.model.project.AbstractDependencyData
- com.intellij.openapi.externalSystem.model.project.AbstractExternalEntityData
- com.intellij.openapi.externalSystem.model.project.DependencyData
- com.intellij.openapi.externalSystem.model.project.Named
- com.intellij.openapi.externalSystem.model.project.OrderAware
- p:<init>(com.intellij.openapi.externalSystem.model.project.ModuleData,com.intellij.openapi.externalSystem.model.project.AbstractExternalEntityData):V
- equals(java.lang.Object):Z
- getExternalName():java.lang.String
- getInternalName():java.lang.String
- getOrder():I
- getOwnerModule():com.intellij.openapi.externalSystem.model.project.ModuleData
- getScope():com.intellij.openapi.roots.DependencyScope
- getTarget():com.intellij.openapi.externalSystem.model.project.AbstractExternalEntityData
- hashCode():I
- isExported():Z
- setExported(Z):V
- setExternalName(java.lang.String):V
- setInternalName(java.lang.String):V
- setOrder(I):V
- setOwnerModule(com.intellij.openapi.externalSystem.model.project.ModuleData):V
- setScope(com.intellij.openapi.roots.DependencyScope):V
- setTarget(com.intellij.openapi.externalSystem.model.project.AbstractExternalEntityData):V
a:com.intellij.openapi.externalSystem.model.project.AbstractExternalEntityData
- com.intellij.openapi.externalSystem.model.project.ExternalEntityData
- <init>(com.intellij.openapi.externalSystem.model.ProjectSystemId):V
- equals(java.lang.Object):Z
- getOwner():com.intellij.openapi.externalSystem.model.ProjectSystemId
- hashCode():I
a:com.intellij.openapi.externalSystem.model.project.AbstractNamedData
- com.intellij.openapi.externalSystem.model.project.AbstractExternalEntityData
- com.intellij.openapi.externalSystem.model.project.Named
- <init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):V
- <init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getExternalName():java.lang.String
- getInternalName():java.lang.String
- hashCode():I
- setExternalName(java.lang.String):V
- setInternalName(java.lang.String):V
f:com.intellij.openapi.externalSystem.model.project.ContentRootData
- com.intellij.openapi.externalSystem.model.project.AbstractExternalEntityData
- <init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):V
- getPaths(com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType):java.util.Collection
- getRootPath():java.lang.String
- storePath(com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType,java.lang.String):V
- storePath(com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType,java.lang.String,java.lang.String):V
c:com.intellij.openapi.externalSystem.model.project.ContentRootData$SourceRoot
- java.io.Serializable
- <init>(java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getPackagePrefix():java.lang.String
- getPath():java.lang.String
- hashCode():I
com.intellij.openapi.externalSystem.model.project.DependencyData
- com.intellij.openapi.externalSystem.model.project.ExternalEntityData
- a:getOwnerModule():com.intellij.openapi.externalSystem.model.project.ModuleData
- a:getScope():com.intellij.openapi.roots.DependencyScope
- a:getTarget():com.intellij.openapi.externalSystem.model.project.ExternalEntityData
- a:isExported():Z
com.intellij.openapi.externalSystem.model.project.ExternalConfigPathAware
- a:getLinkedExternalProjectPath():java.lang.String
com.intellij.openapi.externalSystem.model.project.ExternalEntityData
- java.io.Serializable
- a:getOwner():com.intellij.openapi.externalSystem.model.ProjectSystemId
c:com.intellij.openapi.externalSystem.model.project.ExternalModuleBuildClasspathPojo
- <init>():V
- <init>(java.lang.String,java.util.List):V
- equals(java.lang.Object):Z
- getEntries():java.util.List
- getPath():java.lang.String
- hashCode():I
- setEntries(java.util.List):V
- setPath(java.lang.String):V
c:com.intellij.openapi.externalSystem.model.project.ExternalProjectBuildClasspathPojo
- <init>():V
- <init>(java.lang.String,java.util.List,java.util.Map):V
- equals(java.lang.Object):Z
- getModulesBuildClasspath():java.util.Map
- getName():java.lang.String
- getProjectBuildClasspath():java.util.List
- hashCode():I
- setModulesBuildClasspath(java.util.Map):V
- setName(java.lang.String):V
- setProjectBuildClasspath(java.util.List):V
c:com.intellij.openapi.externalSystem.model.project.ExternalProjectPojo
- java.lang.Comparable
- <init>():V
- <init>(java.lang.String,java.lang.String):V
- compareTo(com.intellij.openapi.externalSystem.model.project.ExternalProjectPojo):I
- equals(java.lang.Object):Z
- s:from(com.intellij.openapi.externalSystem.model.project.Named):com.intellij.openapi.externalSystem.model.project.ExternalProjectPojo
- getName():java.lang.String
- getPath():java.lang.String
- hashCode():I
- setName(java.lang.String):V
- setPath(java.lang.String):V
com.intellij.openapi.externalSystem.model.project.Identifiable
- a:getId():java.lang.String
f:com.intellij.openapi.externalSystem.model.project.LibraryData
- com.intellij.openapi.externalSystem.model.project.AbstractNamedData
- com.intellij.openapi.externalSystem.model.project.Named
- com.intellij.openapi.externalSystem.model.project.ProjectCoordinate
- <init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):V
- <init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String,Z):V
- addPath(com.intellij.openapi.externalSystem.model.project.LibraryPathType,java.lang.String):V
- equals(java.lang.Object):Z
- forgetAllPaths():V
- getArtifactId():java.lang.String
- getGroupId():java.lang.String
- getPaths(com.intellij.openapi.externalSystem.model.project.LibraryPathType):java.util.Set
- getVersion():java.lang.String
- hashCode():I
- isUnresolved():Z
- setArtifactId(java.lang.String):V
- setGroup(java.lang.String):V
- setVersion(java.lang.String):V
f:com.intellij.openapi.externalSystem.model.project.LibraryDependencyData
- com.intellij.openapi.externalSystem.model.project.AbstractDependencyData
- com.intellij.openapi.externalSystem.model.project.Named
- <init>(com.intellij.openapi.externalSystem.model.project.ModuleData,com.intellij.openapi.externalSystem.model.project.LibraryData,com.intellij.openapi.externalSystem.model.project.LibraryLevel):V
- equals(java.lang.Object):Z
- getLevel():com.intellij.openapi.externalSystem.model.project.LibraryLevel
- hashCode():I
- setLevel(com.intellij.openapi.externalSystem.model.project.LibraryLevel):V
e:com.intellij.openapi.externalSystem.model.project.LibraryLevel
- java.lang.Enum
- sf:MODULE:com.intellij.openapi.externalSystem.model.project.LibraryLevel
- sf:PROJECT:com.intellij.openapi.externalSystem.model.project.LibraryLevel
- s:valueOf(java.lang.String):com.intellij.openapi.externalSystem.model.project.LibraryLevel
- s:values():com.intellij.openapi.externalSystem.model.project.LibraryLevel[]
e:com.intellij.openapi.externalSystem.model.project.LibraryPathType
- java.lang.Enum
- sf:ANNOTATION:com.intellij.openapi.externalSystem.model.project.LibraryPathType
- sf:BINARY:com.intellij.openapi.externalSystem.model.project.LibraryPathType
- sf:DOC:com.intellij.openapi.externalSystem.model.project.LibraryPathType
- sf:EXCLUDED:com.intellij.openapi.externalSystem.model.project.LibraryPathType
- sf:SOURCE:com.intellij.openapi.externalSystem.model.project.LibraryPathType
- s:valueOf(java.lang.String):com.intellij.openapi.externalSystem.model.project.LibraryPathType
- s:values():com.intellij.openapi.externalSystem.model.project.LibraryPathType[]
c:com.intellij.openapi.externalSystem.model.project.ModuleData
- com.intellij.openapi.externalSystem.model.project.AbstractNamedData
- com.intellij.openapi.externalSystem.model.project.ExternalConfigPathAware
- com.intellij.openapi.externalSystem.model.project.Identifiable
- com.intellij.openapi.externalSystem.model.project.Named
- <init>(java.lang.String,com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- p:<init>(java.lang.String,com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getArtifacts():java.util.List
- getCompileOutputPath(com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType):java.lang.String
- getDescription():java.lang.String
- getGroup():java.lang.String
- getId():java.lang.String
- getIdeGrouping():java.lang.String
- getIdeModuleGroup():java.lang.String[]
- getIdeParentGrouping():java.lang.String
- getLinkedExternalProjectPath():java.lang.String
- getModuleFileDirectoryPath():java.lang.String
- getModuleName():java.lang.String
- getModuleTypeId():java.lang.String
- getProductionModuleId():java.lang.String
- getProperty(java.lang.String):java.lang.String
- getPublication():com.intellij.openapi.externalSystem.model.project.ProjectCoordinate
- getSdkName():java.lang.String
- getSourceCompatibility():java.lang.String
- getTargetCompatibility():java.lang.String
- getVersion():java.lang.String
- hashCode():I
- internalSetSdkName(java.lang.String):V
- internalSetSourceCompatibility(java.lang.String):V
- internalSetTargetCompatibility(java.lang.String):V
- isInheritProjectCompileOutputPath():Z
- isSetSdkName():Z
- isSetSourceCompatibility():Z
- isSetTargetCompatibility():Z
- setArtifacts(java.util.List):V
- setCompileOutputPath(com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType,java.lang.String):V
- setDescription(java.lang.String):V
- setExternalCompilerOutputPath(com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType,java.lang.String):V
- setGroup(java.lang.String):V
- setIdeModuleGroup(java.lang.String[]):V
- setInheritProjectCompileOutputPath(Z):V
- setModuleName(java.lang.String):V
- setProductionModuleId(java.lang.String):V
- setProperty(java.lang.String,java.lang.String):V
- setPublication(com.intellij.openapi.externalSystem.model.project.ProjectCoordinate):V
- setSdkName(java.lang.String):V
- setSourceCompatibility(java.lang.String):V
- setTargetCompatibility(java.lang.String):V
- setVersion(java.lang.String):V
- useExternalCompilerOutput(Z):V
f:com.intellij.openapi.externalSystem.model.project.ModuleDependencyData
- com.intellij.openapi.externalSystem.model.project.AbstractDependencyData
- <init>(com.intellij.openapi.externalSystem.model.project.ModuleData,com.intellij.openapi.externalSystem.model.project.ModuleData):V
- equals(java.lang.Object):Z
- getModuleDependencyArtifacts():java.util.Collection
- hashCode():I
- isProductionOnTestDependency():Z
- setModuleDependencyArtifacts(java.util.Collection):V
- setProductionOnTestDependency(Z):V
f:com.intellij.openapi.externalSystem.model.project.ModuleSdkData
- com.intellij.openapi.externalSystem.model.project.SdkData
- sf:Companion:com.intellij.openapi.externalSystem.model.project.ModuleSdkData$Companion
- sf:KEY:com.intellij.openapi.externalSystem.model.Key
- <init>(java.lang.String):V
f:com.intellij.openapi.externalSystem.model.project.ModuleSdkData$Companion
com.intellij.openapi.externalSystem.model.project.Named
- a:getExternalName():java.lang.String
- a:getInternalName():java.lang.String
- a:setExternalName(java.lang.String):V
- a:setInternalName(java.lang.String):V
com.intellij.openapi.externalSystem.model.project.OrderAware
- a:getOrder():I
com.intellij.openapi.externalSystem.model.project.ProjectCoordinate
- a:getArtifactId():java.lang.String
- a:getGroupId():java.lang.String
- a:getVersion():java.lang.String
c:com.intellij.openapi.externalSystem.model.project.ProjectData
- com.intellij.openapi.externalSystem.model.project.AbstractNamedData
- com.intellij.openapi.externalSystem.model.project.ExternalConfigPathAware
- com.intellij.openapi.externalSystem.model.project.Identifiable
- <init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String,java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getDescription():java.lang.String
- getGroup():java.lang.String
- getId():java.lang.String
- getIdeGrouping():java.lang.String
- getIdeProjectFileDirectoryPath():java.lang.String
- getLinkedExternalProjectPath():java.lang.String
- getVersion():java.lang.String
- hashCode():I
- setDescription(java.lang.String):V
- setGroup(java.lang.String):V
- setIdeGrouping(java.lang.String):V
- setIdeProjectFileDirectoryPath(java.lang.String):V
- setVersion(java.lang.String):V
c:com.intellij.openapi.externalSystem.model.project.ProjectId
- com.intellij.openapi.externalSystem.model.project.ProjectCoordinate
- java.io.Serializable
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- s:append(java.lang.StringBuilder,java.lang.String):V
- equals(java.lang.Object):Z
- equals(java.lang.String,java.lang.String):Z
- equals(java.lang.String,java.lang.String,java.lang.String):Z
- getArtifactId():java.lang.String
- getDisplayString():java.lang.String
- getGroupId():java.lang.String
- getKey():java.lang.String
- getVersion():java.lang.String
- hashCode():I
f:com.intellij.openapi.externalSystem.model.project.ProjectSdkData
- com.intellij.openapi.externalSystem.model.project.SdkData
- sf:Companion:com.intellij.openapi.externalSystem.model.project.ProjectSdkData$Companion
- sf:KEY:com.intellij.openapi.externalSystem.model.Key
- <init>(java.lang.String):V
f:com.intellij.openapi.externalSystem.model.project.ProjectSdkData$Companion
a:com.intellij.openapi.externalSystem.model.project.SdkData
- equals(java.lang.Object):Z
- f:getSdkName():java.lang.String
- hashCode():I
- f:setSdkName(java.lang.String):V
f:com.intellij.openapi.externalSystem.model.project.TestData
- com.intellij.openapi.externalSystem.model.project.AbstractExternalEntityData
- <init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String,java.lang.String,java.util.Set):V
- getSourceFolders():java.util.Set
- getTestName():java.lang.String
- getTestTaskName():java.lang.String
c:com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings
- com.intellij.openapi.util.UserDataHolder
- java.io.Serializable
- sf:DEBUG_SERVER_PROCESS_KEY:com.intellij.openapi.util.Key
- sf:REMOTE_PROCESS_IDLE_TTL_IN_MS_KEY:java.lang.String
- <init>():V
- <init>(com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings):V
- addEnvironmentVariable(java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getArguments():java.util.List
- getEnv():java.util.Map
- getJvmArguments():java.util.List
- getRemoteProcessIdleTtlInMs():J
- getTasks():java.util.List
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- hashCode():I
- isDebugServerProcess():Z
- isPassParentEnvs():Z
- isVerboseProcessing():Z
- passParentEnvs(Z):com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings
- prependArguments(java.lang.String[]):V
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- setRemoteProcessIdleTtlInMs(J):V
- setTasks(java.util.List):V
- setVerboseProcessing(Z):V
- withArgument(java.lang.String):com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings
- withArguments(java.util.Collection):com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings
- withArguments(java.lang.String[]):com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings
- withEnvironmentVariables(java.util.Map):com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings
- withVmOption(java.lang.String):com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings
- withVmOptions(java.util.Collection):com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings
- withVmOptions(java.lang.String[]):com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings
com.intellij.openapi.externalSystem.model.task.ExternalSystemTask
- a:cancel(com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener[]):Z
- a:cancel(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener[]):Z
- a:execute(com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener[]):V
- a:execute(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener[]):V
- a:getError():java.lang.Throwable
- a:getId():com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId
- a:getState():com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState
- a:refreshState():V
f:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId
- java.io.Serializable
- s:create(com.intellij.openapi.externalSystem.model.ProjectSystemId,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskType,com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId
- s:create(com.intellij.openapi.externalSystem.model.ProjectSystemId,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskType,java.lang.String):com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId
- equals(java.lang.Object):Z
- findProject():com.intellij.openapi.project.Project
- getId():J
- getIdeProjectId():java.lang.String
- s:getProjectId(com.intellij.openapi.project.Project):java.lang.String
- getProjectSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
- getType():com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskType
- hashCode():I
c:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationEvent
- java.io.Serializable
- <init>(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.String):V
- equals(java.lang.Object):Z
- getDescription():java.lang.String
- getId():com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId
- hashCode():I
com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener
- java.util.EventListener
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:NULL_OBJECT:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener
- beforeCancel(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onCancel(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onCancel(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onEnd(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onEnd(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onEnvironmentPrepared(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onFailure(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.Exception):V
- onFailure(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.Exception):V
- onStart(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onStart(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.String):V
- onStart(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onStatusChange(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationEvent):V
- onSuccess(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onSuccess(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onTaskOutput(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.String,Z):V
a:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListenerAdapter
- com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener
- sf:NULL_OBJECT:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener
- <init>():V
- <init>(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener):V
- beforeCancel(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onCancel(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onCancel(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onEnd(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onEnd(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onEnvironmentPrepared(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onFailure(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.Exception):V
- onFailure(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.Exception):V
- onStart(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onStart(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.String):V
- onStart(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onStatusChange(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationEvent):V
- onSuccess(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onSuccess(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):V
- onTaskOutput(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.String,Z):V
e:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState
- java.lang.Enum
- sf:CANCELED:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState
- sf:CANCELING:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState
- sf:CANCELLATION_FAILED:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState
- sf:FAILED:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState
- sf:FINISHED:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState
- sf:IN_PROGRESS:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState
- sf:NOT_STARTED:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState
- isStopped():Z
- s:valueOf(java.lang.String):com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState
- s:values():com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskState[]
e:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskType
- java.lang.Enum
- sf:EXECUTE_TASK:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskType
- sf:REFRESH_TASKS_LIST:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskType
- sf:RESOLVE_PROJECT:com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskType
- s:valueOf(java.lang.String):com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskType
- s:values():com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskType[]
f:com.intellij.openapi.externalSystem.model.task.TaskData
- com.intellij.openapi.externalSystem.model.project.AbstractExternalEntityData
- com.intellij.openapi.externalSystem.model.project.ExternalConfigPathAware
- java.lang.Comparable
- <init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String,java.lang.String,java.lang.String):V
- compareTo(com.intellij.openapi.externalSystem.model.task.TaskData):I
- equals(java.lang.Object):Z
- getDescription():java.lang.String
- getGroup():java.lang.String
- getLinkedExternalProjectPath():java.lang.String
- getName():java.lang.String
- getType():java.lang.String
- hashCode():I
- isInherited():Z
- isJvm():Z
- isJvmTest():Z
- isTest():Z
- setGroup(java.lang.String):V
- setInherited(Z):V
- setJvm(Z):V
- setJvmTest(Z):V
- setTest(Z):V
- setType(java.lang.String):V
f:com.intellij.openapi.externalSystem.model.task.event.ExternalSystemFinishEvent
- com.intellij.openapi.externalSystem.model.task.event.ExternalSystemProgressEvent
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor,com.intellij.openapi.externalSystem.model.task.event.OperationResult):V
- f:getOperationResult():com.intellij.openapi.externalSystem.model.task.event.OperationResult
f:com.intellij.openapi.externalSystem.model.task.event.ExternalSystemMessageEvent
- com.intellij.openapi.externalSystem.model.task.event.ExternalSystemProgressEvent
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor,java.lang.String):V
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor,Z,java.lang.String,java.lang.String):V
- f:getDescription():java.lang.String
- f:getMessage():java.lang.String
- f:isStdOut():Z
c:com.intellij.openapi.externalSystem.model.task.event.ExternalSystemProgressEvent
- java.io.Serializable
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor):V
- f:getDescriptor():com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor
- f:getDisplayName():java.lang.String
- f:getEventId():java.lang.String
- f:getEventTime():J
- f:getParentEventId():java.lang.String
f:com.intellij.openapi.externalSystem.model.task.event.ExternalSystemStartEvent
- com.intellij.openapi.externalSystem.model.task.event.ExternalSystemProgressEvent
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor):V
f:com.intellij.openapi.externalSystem.model.task.event.ExternalSystemStatusEvent
- com.intellij.openapi.externalSystem.model.task.event.ExternalSystemProgressEvent
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor,J,J,java.lang.String):V
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor,J,J,java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor,J,J,java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getDescription():java.lang.String
- f:getProgress():J
- f:getTotal():J
- f:getUnit():java.lang.String
c:com.intellij.openapi.externalSystem.model.task.event.ExternalSystemTaskExecutionEvent
- com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationEvent
- <init>(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,com.intellij.openapi.externalSystem.model.task.event.ExternalSystemProgressEvent):V
- getProgressEvent():com.intellij.openapi.externalSystem.model.task.event.ExternalSystemProgressEvent
c:com.intellij.openapi.externalSystem.model.task.event.Failure
- java.io.Serializable
- <init>(java.lang.String,java.lang.String,java.util.List):V
- f:getCauses():java.util.List
- f:getDescription():java.lang.String
- f:getMessage():java.lang.String
f:com.intellij.openapi.externalSystem.model.task.event.FailureResult
- com.intellij.openapi.externalSystem.model.task.event.OperationResult
- <init>(J,J,java.util.List):V
- f:getFailures():java.util.List
c:com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor
- java.io.Serializable
- <init>(java.lang.String,J):V
- f:getDisplayName():java.lang.String
- f:getEventTime():J
- f:getHint():java.lang.String
- f:setHint(java.lang.String):V
c:com.intellij.openapi.externalSystem.model.task.event.OperationResult
- java.io.Serializable
- <init>(J,J):V
- f:getEndTime():J
- f:getStartTime():J
f:com.intellij.openapi.externalSystem.model.task.event.SkippedResult
- com.intellij.openapi.externalSystem.model.task.event.OperationResult
- <init>(J,J):V
f:com.intellij.openapi.externalSystem.model.task.event.SuccessResult
- com.intellij.openapi.externalSystem.model.task.event.OperationResult
- <init>(J,J,Z):V
- f:isUpToDate():Z
f:com.intellij.openapi.externalSystem.model.task.event.TaskOperationDescriptor
- com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor
- <init>(java.lang.String,J,java.lang.String):V
- f:getTaskName():java.lang.String
f:com.intellij.openapi.externalSystem.model.task.event.TestAssertionFailure
- com.intellij.openapi.externalSystem.model.task.event.TestFailure
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getActualFile():java.lang.String
- f:getActualText():java.lang.String
- f:getExpectedFile():java.lang.String
- f:getExpectedText():java.lang.String
c:com.intellij.openapi.externalSystem.model.task.event.TestFailure
- com.intellij.openapi.externalSystem.model.task.event.Failure
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,Z):V
- f:getExceptionName():java.lang.String
- f:getStackTrace():java.lang.String
- f:isTestError():Z
f:com.intellij.openapi.externalSystem.model.task.event.TestOperationDescriptor
- com.intellij.openapi.externalSystem.model.task.event.OperationDescriptor
- <init>(java.lang.String,J,java.lang.String,java.lang.String,java.lang.String):V
- f:getClassName():java.lang.String
- f:getMethodName():java.lang.String
- f:getSuiteName():java.lang.String
c:com.intellij.openapi.externalSystem.service.ImportCanceledException
- java.lang.RuntimeException
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.Throwable):V
- <init>(java.lang.Throwable):V
com.intellij.openapi.externalSystem.service.ParametersEnhancer
- a:enhanceRemoteProcessing(com.intellij.execution.configurations.SimpleJavaParameters):V
com.intellij.openapi.externalSystem.service.execution.ExternalSystemOutputDispatcherFactory
- sf:Companion:com.intellij.openapi.externalSystem.service.execution.ExternalSystemOutputDispatcherFactory$Companion
- a:create(java.lang.Object,com.intellij.build.BuildProgressListener,Z,java.util.List):com.intellij.openapi.externalSystem.service.execution.ExternalSystemOutputMessageDispatcher
- a:getExternalSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
f:com.intellij.openapi.externalSystem.service.execution.ExternalSystemOutputDispatcherFactory$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
com.intellij.openapi.externalSystem.service.execution.ExternalSystemOutputMessageDispatcher
- com.intellij.build.BuildProgressListener
- java.io.Closeable
- java.lang.Appendable
- a:getStdOut():Z
- a:invokeOnCompletion(java.util.function.Consumer):V
- a:setStdOut(Z):V
com.intellij.openapi.externalSystem.service.execution.ExternalSystemOutputParserProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getBuildOutputParsers(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId):java.util.List
- a:getExternalSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
e:com.intellij.openapi.externalSystem.service.execution.ProgressExecutionMode
- java.lang.Enum
- sf:IN_BACKGROUND_ASYNC:com.intellij.openapi.externalSystem.service.execution.ProgressExecutionMode
- sf:MODAL_SYNC:com.intellij.openapi.externalSystem.service.execution.ProgressExecutionMode
- sf:NO_PROGRESS_ASYNC:com.intellij.openapi.externalSystem.service.execution.ProgressExecutionMode
- sf:NO_PROGRESS_SYNC:com.intellij.openapi.externalSystem.service.execution.ProgressExecutionMode
- sf:START_IN_FOREGROUND_ASYNC:com.intellij.openapi.externalSystem.service.execution.ProgressExecutionMode
- s:valueOf(java.lang.String):com.intellij.openapi.externalSystem.service.execution.ProgressExecutionMode
- s:values():com.intellij.openapi.externalSystem.service.execution.ProgressExecutionMode[]
c:com.intellij.openapi.externalSystem.service.execution.cmd.ParametersListLexer
- <init>(java.lang.String):V
- getCurrentToken():java.lang.String
- getTokenEnd():I
- getTokenStart():I
- nextToken():Z
com.intellij.openapi.externalSystem.service.project.ExternalLibraryPathTypeMapper
- s:getInstance():com.intellij.openapi.externalSystem.service.project.ExternalLibraryPathTypeMapper
- a:map(com.intellij.openapi.externalSystem.model.project.LibraryPathType):com.intellij.openapi.roots.OrderRootType
com.intellij.openapi.externalSystem.service.project.ExternalProjectRefreshCallback
- onFailure(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.String,java.lang.String):V
- onFailure(java.lang.String,java.lang.String):V
- onSuccess(com.intellij.openapi.externalSystem.model.DataNode):V
- onSuccess(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,com.intellij.openapi.externalSystem.model.DataNode):V
com.intellij.openapi.externalSystem.service.project.ExternalSystemProjectResolver
- a:cancelTask(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener):Z
- resolveProjectInfo(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.lang.String,Z,com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener):com.intellij.openapi.externalSystem.model.DataNode
com.intellij.openapi.externalSystem.service.project.IdeModelsProvider
- a:findIdeLibrary(com.intellij.openapi.externalSystem.model.project.LibraryData):com.intellij.openapi.roots.libraries.Library
- a:findIdeModule(com.intellij.openapi.externalSystem.model.project.ModuleData):com.intellij.openapi.module.Module
- a:findIdeModule(java.lang.String):com.intellij.openapi.module.Module
- a:findIdeModuleDependency(com.intellij.openapi.externalSystem.model.project.ModuleDependencyData,com.intellij.openapi.module.Module):com.intellij.openapi.roots.ModuleOrderEntry
- a:findIdeModuleLibraryOrderEntries(com.intellij.openapi.externalSystem.model.project.ModuleData,java.util.List):java.util.Map
- a:findIdeModuleOrderEntry(com.intellij.openapi.externalSystem.model.project.DependencyData):com.intellij.openapi.roots.OrderEntry
- a:getAllDependentModules(com.intellij.openapi.module.Module):java.util.List
- a:getAllLibraries():com.intellij.openapi.roots.libraries.Library[]
- a:getContentRoots(com.intellij.openapi.module.Module):com.intellij.openapi.vfs.VirtualFile[]
- a:getLibraryByName(java.lang.String):com.intellij.openapi.roots.libraries.Library
- a:getLibraryUrls(com.intellij.openapi.roots.libraries.Library,com.intellij.openapi.roots.OrderRootType):java.lang.String[]
- a:getModules():com.intellij.openapi.module.Module[]
- a:getModules(com.intellij.openapi.externalSystem.model.project.ProjectData):com.intellij.openapi.module.Module[]
- a:getOrderEntries(com.intellij.openapi.module.Module):com.intellij.openapi.roots.OrderEntry[]
- a:getSourceRoots(com.intellij.openapi.module.Module):com.intellij.openapi.vfs.VirtualFile[]
- a:getSourceRoots(com.intellij.openapi.module.Module,Z):com.intellij.openapi.vfs.VirtualFile[]
- a:getUnloadedModuleDescription(com.intellij.openapi.externalSystem.model.project.ModuleData):com.intellij.openapi.module.UnloadedModuleDescription
com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider
- com.intellij.openapi.externalSystem.service.project.IdeModelsProvider
- com.intellij.openapi.util.UserDataHolder
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:commit():V
- a:createLibrary(java.lang.String):com.intellij.openapi.roots.libraries.Library
- a:createLibrary(java.lang.String,com.intellij.openapi.roots.ProjectModelExternalSource):com.intellij.openapi.roots.libraries.Library
- a:dispose():V
- a:getModalityStateForQuestionDialogs():com.intellij.openapi.application.ModalityState
- a:getModifiableFacetModel(com.intellij.openapi.module.Module):com.intellij.facet.ModifiableFacetModel
- a:getModifiableLibraryModel(com.intellij.openapi.roots.libraries.Library):com.intellij.openapi.roots.libraries.Library$ModifiableModel
- a:getModifiableModuleModel():com.intellij.openapi.module.ModifiableModuleModel
- a:getModifiableProjectLibrariesModel():com.intellij.openapi.roots.libraries.LibraryTable$ModifiableModel
- a:getModifiableRootModel(com.intellij.openapi.module.Module):com.intellij.openapi.roots.ModifiableRootModel
- a:getProductionModuleName(com.intellij.openapi.module.Module):java.lang.String
- a:newModule(com.intellij.openapi.externalSystem.model.project.ModuleData):com.intellij.openapi.module.Module
- a:newModule(java.lang.String,java.lang.String):com.intellij.openapi.module.Module
- a:removeLibrary(com.intellij.openapi.roots.libraries.Library):V
- a:setTestModuleProperties(com.intellij.openapi.module.Module,java.lang.String):V
com.intellij.openapi.externalSystem.service.project.ProjectDataManager
- a:createModifiableModelsProvider(com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider
- a:ensureTheDataIsReadyToUse(com.intellij.openapi.externalSystem.model.DataNode):V
- a:findService(com.intellij.openapi.externalSystem.model.Key):java.util.List
- a:findWorkspaceService(com.intellij.openapi.externalSystem.model.Key):java.util.List
- a:getExternalProjectData(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):com.intellij.openapi.externalSystem.model.ExternalProjectInfo
- a:getExternalProjectsData(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId):java.util.Collection
- s:getInstance():com.intellij.openapi.externalSystem.service.project.ProjectDataManager
- a:importData(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.project.Project):V
- a:importData(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider):V
- importData(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.project.Project,Z):V
com.intellij.openapi.externalSystem.service.project.autoimport.ExternalSystemProjectsWatcher
- a:markDirty(com.intellij.openapi.module.Module):V
- a:markDirty(java.lang.String):V
- a:markDirtyAllExternalProjects():V
a:com.intellij.openapi.externalSystem.service.project.manage.AbstractProjectDataService
- com.intellij.openapi.externalSystem.service.project.manage.ProjectDataService
- f:EMPTY_LIST:com.intellij.openapi.util.Computable$PredefinedValueComputable
- <init>():V
- computeOrphanData(java.util.Collection,com.intellij.openapi.externalSystem.model.project.ProjectData,com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider):com.intellij.openapi.util.Computable
- a:getTargetDataKey():com.intellij.openapi.externalSystem.model.Key
- importData(java.util.Collection,com.intellij.openapi.externalSystem.model.project.ProjectData,com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider):V
- removeData(com.intellij.openapi.util.Computable,java.util.Collection,com.intellij.openapi.externalSystem.model.project.ProjectData,com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider):V
com.intellij.openapi.externalSystem.service.project.manage.ExternalProjectsManager
- a:getExternalProjectsWatcher():com.intellij.openapi.externalSystem.service.project.autoimport.ExternalSystemProjectsWatcher
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.externalSystem.service.project.manage.ExternalProjectsManager
- a:getProject():com.intellij.openapi.project.Project
- a:isIgnored(com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):Z
- a:refreshProject(java.lang.String,com.intellij.openapi.externalSystem.importing.ImportSpec):V
- a:runWhenInitialized(java.lang.Runnable):V
- a:setIgnored(com.intellij.openapi.externalSystem.model.DataNode,Z):V
com.intellij.openapi.externalSystem.service.project.manage.ProjectDataImportListener
- sf:TOPIC:com.intellij.util.messages.Topic
- onFinalTasksFinished(java.lang.String):V
- onFinalTasksStarted(java.lang.String):V
- onImportFailed(java.lang.String):V
- onImportFailed(java.lang.String,java.lang.Throwable):V
- onImportFinished(java.lang.String):V
- onImportStarted(java.lang.String):V
com.intellij.openapi.externalSystem.service.project.manage.ProjectDataService
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:computeOrphanData(java.util.Collection,com.intellij.openapi.externalSystem.model.project.ProjectData,com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider):com.intellij.openapi.util.Computable
- a:getTargetDataKey():com.intellij.openapi.externalSystem.model.Key
- a:importData(java.util.Collection,com.intellij.openapi.externalSystem.model.project.ProjectData,com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider):V
- onFailureImport(com.intellij.openapi.project.Project):V
- onSuccessImport(java.util.Collection,com.intellij.openapi.externalSystem.model.project.ProjectData,com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.service.project.IdeModelsProvider):V
- postProcess(java.util.Collection,com.intellij.openapi.externalSystem.model.project.ProjectData,com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider):V
- a:removeData(com.intellij.openapi.util.Computable,java.util.Collection,com.intellij.openapi.externalSystem.model.project.ProjectData,com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider):V
com.intellij.openapi.externalSystem.service.project.settings.BeforeRunTaskImporter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:canImport(java.lang.String):Z
- a:process(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider,com.intellij.execution.configurations.RunConfiguration,java.util.List,java.util.Map):java.util.List
com.intellij.openapi.externalSystem.service.project.settings.FacetConfigurationImporter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:canHandle(java.lang.String):Z
- a:process(com.intellij.openapi.module.Module,java.lang.String,java.util.Map,com.intellij.facet.FacetManager):java.util.Collection
com.intellij.openapi.externalSystem.service.project.settings.RunConfigurationImporter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:canImport(java.lang.String):Z
- a:getConfigurationFactory():com.intellij.execution.configurations.ConfigurationFactory
- a:process(com.intellij.openapi.project.Project,com.intellij.execution.configurations.RunConfiguration,java.util.Map,com.intellij.openapi.externalSystem.service.project.IdeModifiableModelsProvider):V
a:com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings
- p:state:com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$State
- p:<init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,com.intellij.openapi.project.Project):V
- p:<init>(com.intellij.openapi.externalSystem.model.ProjectSystemId,com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$State):V
- fillState(com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$State):V
- forgetExternalProjects(java.util.Set):V
- getAvailableProjects():java.util.Map
- getExternalConfigModificationStamps():java.util.Map
- getProjectSyncType():java.util.Map
- getRecentTasks():java.util.List
- getState():com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$State
- invalidateCaches():V
- loadState(com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$State):V
- setAvailableProjects(java.util.Map):V
c:com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$State
- availableProjects:java.util.Map
- modificationStamps:java.util.Map
- projectSyncType:java.util.Map
- f:recentTasks:java.util.List
- <init>():V
e:com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$SyncType
- java.lang.Enum
- sf:IMPORT:com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$SyncType
- sf:PREVIEW:com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$SyncType
- sf:RE_IMPORT:com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$SyncType
- s:valueOf(java.lang.String):com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$SyncType
- s:values():com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings$SyncType[]
a:com.intellij.openapi.externalSystem.settings.AbstractExternalSystemSettings
- com.intellij.openapi.Disposable
- p:<init>(com.intellij.util.messages.Topic,com.intellij.openapi.project.Project):V
- pa:checkSettings(com.intellij.openapi.externalSystem.settings.ExternalProjectSettings,com.intellij.openapi.externalSystem.settings.ExternalProjectSettings):V
- pa:copyExtraSettingsFrom(com.intellij.openapi.externalSystem.settings.AbstractExternalSystemSettings):V
- copyFrom(com.intellij.openapi.externalSystem.settings.AbstractExternalSystemSettings):V
- dispose():V
- p:doSubscribe(com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListener,com.intellij.openapi.Disposable):V
- p:fillState(com.intellij.openapi.externalSystem.settings.AbstractExternalSystemSettings$State):V
- getChangesTopic():com.intellij.util.messages.Topic
- getLinkedProjectSettings(java.lang.String):com.intellij.openapi.externalSystem.settings.ExternalProjectSettings
- getLinkedProjectsSettings():java.util.Collection
- getProject():com.intellij.openapi.project.Project
- getPublisher():com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListener
- linkProject(com.intellij.openapi.externalSystem.settings.ExternalProjectSettings):V
- p:loadState(com.intellij.openapi.externalSystem.settings.AbstractExternalSystemSettings$State):V
- setLinkedProjectsSettings(java.util.Collection):V
- showSelectiveImportDialogOnInitialImport():Z
- subscribe(com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListener):V
- subscribe(com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListener,com.intellij.openapi.Disposable):V
- unlinkExternalProject(java.lang.String):Z
c:com.intellij.openapi.externalSystem.settings.AbstractExternalSystemSettings$AlreadyImportedProjectException
- java.lang.IllegalArgumentException
- <init>(java.lang.String):V
com.intellij.openapi.externalSystem.settings.AbstractExternalSystemSettings$State
- a:getLinkedExternalProjectsSettings():java.util.Set
- a:setLinkedExternalProjectsSettings(java.util.Set):V
c:com.intellij.openapi.externalSystem.settings.DelegatingExternalSystemSettingsListener
- com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListener
- <init>(com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListener):V
- onBulkChangeEnd():V
- onBulkChangeStart():V
- onProjectRenamed(java.lang.String,java.lang.String):V
- onProjectsLinked(java.util.Collection):V
- onProjectsLoaded(java.util.Collection):V
- onProjectsUnlinked(java.util.Set):V
a:com.intellij.openapi.externalSystem.settings.ExternalProjectSettings
- java.lang.Cloneable
- java.lang.Comparable
- <init>():V
- a:clone():com.intellij.openapi.externalSystem.settings.ExternalProjectSettings
- compareTo(com.intellij.openapi.externalSystem.settings.ExternalProjectSettings):I
- p:copyTo(com.intellij.openapi.externalSystem.settings.ExternalProjectSettings):V
- equals(java.lang.Object):Z
- getExternalProjectPath():java.lang.String
- getModules():java.util.Set
- hashCode():I
- isCreateEmptyContentRootDirectories():Z
- isUseQualifiedModuleNames():Z
- setCreateEmptyContentRootDirectories(Z):V
- setExternalProjectPath(java.lang.String):V
- setModules(java.util.Set):V
- setUseAutoImport(Z):V
- setUseQualifiedModuleNames(Z):V
- setupNewProjectDefault():V
com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListener
- onBulkChangeEnd():V
- onBulkChangeStart():V
- onProjectRenamed(java.lang.String,java.lang.String):V
- onProjectsLinked(java.util.Collection):V
- onProjectsLoaded(java.util.Collection):V
- onProjectsUnlinked(java.util.Set):V
com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListenerEx
- sf:Companion:com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListenerEx$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- onProjectsLinked(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.ExternalSystemManager,java.util.Collection):V
- onProjectsLoaded(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.ExternalSystemManager,java.util.Collection):V
- onProjectsUnlinked(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.ExternalSystemManager,java.util.Set):V
f:com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListenerEx$Companion
f:com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalModuleBuildClasspathEntity
- <init>(java.lang.String,java.util.List):V
- f:component1():java.lang.String
- f:component2():java.util.List
- f:copy(java.lang.String,java.util.List):com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalModuleBuildClasspathEntity
- bs:copy$default(com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalModuleBuildClasspathEntity,java.lang.String,java.util.List,I,java.lang.Object):com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalModuleBuildClasspathEntity
- equals(java.lang.Object):Z
- f:getEntries():java.util.List
- f:getPath():java.lang.String
- hashCode():I
f:com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectBuildClasspathEntity
- <init>(java.lang.String,java.util.List,java.util.Map):V
- f:component1():java.lang.String
- f:component2():java.util.List
- f:component3():java.util.Map
- f:copy(java.lang.String,java.util.List,java.util.Map):com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectBuildClasspathEntity
- bs:copy$default(com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectBuildClasspathEntity,java.lang.String,java.util.List,java.util.Map,I,java.lang.Object):com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectBuildClasspathEntity
- equals(java.lang.Object):Z
- f:getModuleBuildClasspath():java.util.Map
- f:getName():java.lang.String
- f:getProjectBuildClasspath():java.util.List
- hashCode():I
com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntity
- com.intellij.platform.workspace.storage.WorkspaceEntity
- sf:Companion:com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntity$Companion
- s:create(java.util.Map,com.intellij.platform.workspace.storage.EntitySource):com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntity$Builder
- s:create(java.util.Map,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntity$Builder
- a:getProjectsBuildClasspath():java.util.Map
com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntity$Builder
- com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntitySource():com.intellij.platform.workspace.storage.EntitySource
- a:getProjectsBuildClasspath():java.util.Map
- a:setEntitySource(com.intellij.platform.workspace.storage.EntitySource):V
- a:setProjectsBuildClasspath(java.util.Map):V
f:com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntity$Companion
- com.intellij.platform.workspace.storage.EntityType
- f:create(java.util.Map,com.intellij.platform.workspace.storage.EntitySource):com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntity$Builder
- f:create(java.util.Map,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1):com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntity$Builder
- bs:create$default(com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntity$Companion,java.util.Map,com.intellij.platform.workspace.storage.EntitySource,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntity$Builder
f:com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntitySource
- com.intellij.platform.workspace.storage.EntitySource
- sf:INSTANCE:com.intellij.openapi.externalSystem.settings.workspaceModel.ExternalProjectsBuildClasspathEntitySource
com.intellij.openapi.externalSystem.task.ExternalSystemTaskManager
- a:cancelTask(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener):Z
- executeTasks(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.util.List,java.lang.String,com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings,java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener):V
- executeTasks(com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,java.util.List,java.lang.String,com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings,java.util.List,java.util.List,java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener):V
- executeTasks(java.lang.String,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskId,com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings,com.intellij.openapi.externalSystem.model.task.ExternalSystemTaskNotificationListener):V
com.intellij.openapi.externalSystem.task.TaskCallback
- a:onFailure():V
- a:onSuccess():V
c:com.intellij.openapi.externalSystem.task.TaskCallbackAdapter
- com.intellij.openapi.externalSystem.task.TaskCallback
- <init>():V
- onFailure():V
- onSuccess():V
com.intellij.openapi.externalSystem.ui.ExternalSystemIconProvider
- sf:Companion:com.intellij.openapi.externalSystem.ui.ExternalSystemIconProvider$Companion
- s:getExtension(com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.ui.ExternalSystemIconProvider
- getProjectIcon():javax.swing.Icon
- getReloadIcon():javax.swing.Icon
f:com.intellij.openapi.externalSystem.ui.ExternalSystemIconProvider$Companion
- f:getExtension(com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.ui.ExternalSystemIconProvider
com.intellij.openapi.externalSystem.ui.ExternalSystemTextProvider
- sf:Companion:com.intellij.openapi.externalSystem.ui.ExternalSystemTextProvider$Companion
- s:getExtension(com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.ui.ExternalSystemTextProvider
- a:getSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
- getUPNHelpText():java.lang.String
- getUPNLinkActionText():java.lang.String
- getUPNSkipActionText():java.lang.String
- getUPNText(java.lang.String):java.lang.String
f:com.intellij.openapi.externalSystem.ui.ExternalSystemTextProvider$Companion
- f:getExtension(com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.ui.ExternalSystemTextProvider
a:com.intellij.openapi.externalSystem.util.DisposeAwareProjectChange
- java.lang.Runnable
- p:<init>(com.intellij.openapi.components.ComponentManager):V
- a:execute():V
- f:run():V
f:com.intellij.openapi.externalSystem.util.ExternalSystemActivityKey
- com.intellij.platform.backend.observation.ActivityKey
- sf:INSTANCE:com.intellij.openapi.externalSystem.util.ExternalSystemActivityKey
- getPresentableName():java.lang.String
f:com.intellij.openapi.externalSystem.util.ExternalSystemApiUtil
- sf:ORDER_AWARE_COMPARATOR:java.util.Comparator
- sf:PATH_SEPARATOR:java.lang.String
- s:addToInvokeLater(java.lang.Runnable):V
- s:buildErrorMessage(java.lang.Throwable):java.lang.String
- s:doWriteAction(com.intellij.openapi.util.Computable):java.lang.Object
- s:doWriteAction(java.lang.Runnable):V
- s:executeOnEdt(com.intellij.openapi.util.Computable):java.lang.Object
- s:executeOnEdt(Z,java.lang.Runnable):V
- s:executeProjectChangeAction(com.intellij.openapi.components.ComponentManager,java.lang.Runnable):V
- s:executeProjectChangeAction(com.intellij.openapi.externalSystem.util.DisposeAwareProjectChange):V
- s:executeProjectChangeAction(Z,com.intellij.openapi.components.ComponentManager,java.lang.Runnable):V
- s:executeProjectChangeAction(Z,com.intellij.openapi.externalSystem.util.DisposeAwareProjectChange):V
- s:extractNameFromPath(java.lang.String):java.lang.String
- s:find(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.externalSystem.model.Key):com.intellij.openapi.externalSystem.model.DataNode
- s:find(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.externalSystem.model.Key,com.intellij.util.BooleanFunction):com.intellij.openapi.externalSystem.model.DataNode
- s:findAll(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.externalSystem.model.Key):java.util.Collection
- s:findAllRecursively(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.externalSystem.model.Key):java.util.Collection
- s:findAllRecursively(com.intellij.openapi.externalSystem.model.DataNode,java.util.function.Predicate):java.util.Collection
- s:findAllRecursively(java.util.Collection):java.util.Collection
- s:findAllRecursively(java.util.Collection,java.util.function.Predicate):java.util.Collection
- s:findChild(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.externalSystem.model.Key,java.util.function.Predicate):com.intellij.openapi.externalSystem.model.DataNode
- s:findFirstRecursively(com.intellij.openapi.externalSystem.model.DataNode,java.util.function.Predicate):com.intellij.openapi.externalSystem.model.DataNode
- s:findFirstRecursively(java.util.Collection,java.util.function.Predicate):com.intellij.openapi.externalSystem.model.DataNode
- s:findModuleNode(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):com.intellij.openapi.externalSystem.model.DataNode
- s:findParent(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.externalSystem.model.Key):com.intellij.openapi.externalSystem.model.DataNode
- s:findParentRecursively(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.externalSystem.model.Key,java.util.function.Predicate):com.intellij.openapi.externalSystem.model.DataNode
- s:findProjectInfo(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):com.intellij.openapi.externalSystem.model.ExternalProjectInfo
- s:findProjectNode(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):com.intellij.openapi.externalSystem.model.DataNode
- s:findProjectTasks(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):java.util.Collection
- s:getAllManagers():java.util.List
- s:getChildren(com.intellij.openapi.externalSystem.model.DataNode,com.intellij.openapi.externalSystem.model.Key):java.util.Collection
- s:getExecutionSettings(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.model.settings.ExternalSystemExecutionSettings
- s:getExternalModuleType(com.intellij.openapi.module.Module):java.lang.String
- s:getExternalProjectConfigDescriptor(com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.fileChooser.FileChooserDescriptor
- s:getExternalProjectContentRoots(com.intellij.openapi.module.Module,com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType):java.util.Collection
- s:getExternalProjectContentRoots(com.intellij.openapi.module.Module,java.util.Collection):java.util.Collection
- s:getExternalProjectGroup(com.intellij.openapi.module.Module):java.lang.String
- s:getExternalProjectId(com.intellij.openapi.module.Module):java.lang.String
- s:getExternalProjectPath(com.intellij.openapi.module.Module):java.lang.String
- s:getExternalProjectVersion(com.intellij.openapi.module.Module):java.lang.String
- s:getExternalRootProjectPath(com.intellij.openapi.module.Module):java.lang.String
- s:getLibraryName(com.intellij.openapi.roots.libraries.Library):java.lang.String
- s:getLocalFileSystemPath(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:getLocalSettings(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.settings.AbstractExternalSystemLocalSettings
- s:getManager(com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.ExternalSystemManager
- s:getProjectRepresentationName(java.lang.String,java.lang.String):java.lang.String
- s:getRootProjectPath(java.lang.String,com.intellij.openapi.externalSystem.model.ProjectSystemId,com.intellij.openapi.project.Project):java.lang.String
- s:getSettings(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.externalSystem.settings.AbstractExternalSystemSettings
- s:group(java.util.Collection):com.intellij.util.containers.MultiMap
- s:groupBy(java.util.Collection,com.intellij.openapi.externalSystem.model.Key):com.intellij.util.containers.MultiMap
- s:groupBy(java.util.Collection,java.lang.Class):com.intellij.util.containers.MultiMap
- s:isExternalSystemAwareModule(com.intellij.openapi.externalSystem.model.ProjectSystemId,com.intellij.openapi.module.Module):Z
- s:isExternalSystemAwareModule(java.lang.String,com.intellij.openapi.module.Module):Z
- s:isExternalSystemLibrary(com.intellij.openapi.roots.libraries.Library,com.intellij.openapi.externalSystem.model.ProjectSystemId):Z
- s:isInProcessMode(com.intellij.openapi.externalSystem.model.ProjectSystemId):Z
- s:isOneToOneMapping(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.project.ProjectData,com.intellij.openapi.module.Module[]):Z
- s:isRelated(com.intellij.openapi.roots.libraries.Library,com.intellij.openapi.externalSystem.model.project.LibraryData):Z
- s:normalizePath(java.lang.String):java.lang.String
- s:orderAwareSort(java.util.List):V
- s:recursiveGroup(java.util.Collection):com.intellij.util.containers.MultiMap
- s:stacktraceAsString(java.lang.Throwable):java.lang.String
- s:subscribe(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId,com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListener):V
- s:subscribe(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId,com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsListener,com.intellij.openapi.Disposable):V
- s:toCanonicalPath(java.lang.String):java.lang.String
- s:toExternalSource(com.intellij.openapi.externalSystem.model.ProjectSystemId):com.intellij.openapi.roots.ProjectModelExternalSource
- s:visit(com.intellij.openapi.externalSystem.model.DataNode,java.util.function.Consumer):V
c:com.intellij.openapi.externalSystem.util.ExternalSystemBundle
- com.intellij.DynamicBundle
- sf:PATH_TO_BUNDLE:java.lang.String
- <init>():V
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
f:com.intellij.openapi.externalSystem.util.ExternalSystemConstants
- sf:BUILTIN_LIBRARY_DATA_SERVICE_ORDER:I
- sf:BUILTIN_MODULE_DATA_SERVICE_ORDER:I
- sf:BUILTIN_PROJECT_DATA_SERVICE_ORDER:I
- sf:BUILTIN_SERVICE_ORDER:I
- sf:BUILTIN_TOOL_WINDOW_SERVICE_ORDER:I
- sf:DEBUG_RUNNER_ID:java.lang.String
- sf:EXTERNAL_SYSTEM_ID_KEY:java.lang.String
- sf:EXTERNAL_SYSTEM_REMOTE_COMMUNICATION_MANAGER_DEBUG_PORT:java.lang.String
- sf:PATH_SEPARATOR:C
- sf:RUNNER_ID:java.lang.String
- sf:UNORDERED:I
- sf:USE_IN_PROCESS_COMMUNICATION_REGISTRY_KEY_SUFFIX:java.lang.String
- sf:VERBOSE_PROCESSING:Z
- <init>():V
com.intellij.openapi.externalSystem.util.ExternalSystemContentRootContributor
- a:findContentRoots(com.intellij.openapi.module.Module,java.util.Collection):java.util.Collection
- a:isApplicable(java.lang.String):Z
f:com.intellij.openapi.externalSystem.util.ExternalSystemContentRootContributor$ExternalContentRoot
- <init>(java.nio.file.Path,com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType):V
- f:component1():java.nio.file.Path
- f:component2():com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType
- f:copy(java.nio.file.Path,com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType):com.intellij.openapi.externalSystem.util.ExternalSystemContentRootContributor$ExternalContentRoot
- bs:copy$default(com.intellij.openapi.externalSystem.util.ExternalSystemContentRootContributor$ExternalContentRoot,java.nio.file.Path,com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType,I,java.lang.Object):com.intellij.openapi.externalSystem.util.ExternalSystemContentRootContributor$ExternalContentRoot
- equals(java.lang.Object):Z
- f:getPath():java.nio.file.Path
- f:getRootType():com.intellij.openapi.externalSystem.model.project.ExternalSystemSourceType
- hashCode():I
f:com.intellij.openapi.externalSystem.util.ExternalSystemInProgressService
- <init>():V
- f:externalSystemActivityStarted():V
- f:isInProgress():Z
- f:unlinkedActivityStarted():V
c:com.intellij.openapi.externalSystem.util.IntegrationKey
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):V
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.externalSystem.model.ProjectSystemId,java.lang.String):V
- equals(java.lang.Object):Z
- getExternalProjectConfigPath():java.lang.String
- getExternalSystemId():com.intellij.openapi.externalSystem.model.ProjectSystemId
- getIdeProjectLocationHash():java.lang.String
- getIdeProjectName():java.lang.String
- hashCode():I
@:com.intellij.openapi.externalSystem.util.Order
- java.lang.annotation.Annotation
- a:value():I
c:com.intellij.openapi.externalSystem.view.ExternalProjectsViewState
- groupModules:Z
- groupTasks:Z
- showIgnored:Z
- showInheritedTasks:Z
- treeState:org.jdom.Element
- <init>():V
