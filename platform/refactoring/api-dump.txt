a:com.intellij.codeInsight.highlighting.HighlightManager
- sf:HIDE_BY_ANY_KEY:I
- sf:HIDE_BY_ESCAPE:I
- sf:HIDE_BY_TEXT_CHANGE:I
- <init>():V
- a:addOccurrenceHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.colors.TextAttributesKey,I,java.util.Collection):V
- a:addOccurrenceHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.markup.TextAttributes,I,java.util.Collection,java.awt.Color):V
- a:addOccurrenceHighlights(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement[],com.intellij.openapi.editor.colors.TextAttributesKey,Z,java.util.Collection):V
- a:addOccurrenceHighlights(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiReference[],com.intellij.openapi.editor.colors.TextAttributesKey,Z,java.util.Collection):V
- a:addRangeHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.colors.TextAttributesKey,Z,java.util.Collection):V
- a:addRangeHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.colors.TextAttributesKey,Z,Z,java.util.Collection):V
- a:addRangeHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.markup.TextAttributes,Z,java.util.Collection):V
- a:addRangeHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.markup.TextAttributes,Z,Z,java.util.Collection):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.highlighting.HighlightManager
- a:removeSegmentHighlighter(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.markup.RangeHighlighter):Z
@:com.intellij.codeInsight.highlighting.HighlightManager$HideFlags
- java.lang.annotation.Annotation
com.intellij.find.FindInProjectSettings
- a:addDirectory(java.lang.String):V
- a:addStringToFind(java.lang.String):V
- a:addStringToReplace(java.lang.String):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.find.FindInProjectSettings
- a:getMostRecentFindString():java.lang.String
- a:getMostRecentReplaceString():java.lang.String
- a:getRecentDirectories():java.util.List
- a:getRecentFindStrings():java.lang.String[]
- a:getRecentReplaceStrings():java.lang.String[]
a:com.intellij.find.FindManager
- sf:FIND_MODEL_TOPIC:com.intellij.util.messages.Topic
- <init>():V
- a:canFindUsages(com.intellij.psi.PsiElement):Z
- a:clearFindingNextUsageInFile():V
- a:closeFindDialog():V
- a:createReplaceInFileModel():com.intellij.find.FindModel
- a:findNextUsageInEditor(com.intellij.openapi.editor.Editor):Z
- a:findPreviousUsageInEditor(com.intellij.openapi.editor.Editor):Z
- a:findString(java.lang.CharSequence,I,com.intellij.find.FindModel):com.intellij.find.FindResult
- a:findString(java.lang.CharSequence,I,com.intellij.find.FindModel,com.intellij.openapi.vfs.VirtualFile):com.intellij.find.FindResult
- a:findUsages(com.intellij.psi.PsiElement):V
- a:findUsages(com.intellij.psi.PsiElement,Z):V
- a:findUsagesInEditor(com.intellij.psi.PsiElement,com.intellij.openapi.fileEditor.FileEditor):V
- a:findUsagesInScope(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope):V
- a:findWasPerformed():Z
- a:getFindInFileModel():com.intellij.find.FindModel
- a:getFindInProjectModel():com.intellij.find.FindModel
- a:getFindNextModel():com.intellij.find.FindModel
- a:getFindNextModel(com.intellij.openapi.editor.Editor):com.intellij.find.FindModel
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.find.FindManager
- a:getPreviousFindModel():com.intellij.find.FindModel
- a:getStringToReplace(java.lang.String,com.intellij.find.FindModel,I,java.lang.CharSequence):java.lang.String
- a:selectNextOccurrenceWasPerformed():Z
- a:setFindNextModel(com.intellij.find.FindModel):V
- a:setFindWasPerformed():V
- a:setPreviousFindModel(com.intellij.find.FindModel):V
- a:setSelectNextOccurrenceWasPerformed():V
- a:showFindDialog(com.intellij.find.FindModel,java.lang.Runnable):V
- a:showMalformedReplacementPrompt(com.intellij.find.FindModel,java.lang.String,com.intellij.find.FindManager$MalformedReplacementStringException):I
- a:showPromptDialog(com.intellij.find.FindModel,java.lang.String):I
- a:showSettingsAndFindUsages(com.intellij.navigation.NavigationItem[]):V
c:com.intellij.find.FindManager$MalformedReplacementStringException
- java.lang.Exception
- <init>(java.lang.String,java.lang.Throwable):V
com.intellij.find.FindManager$PromptResult
- sf:ALL:I
- sf:ALL_FILES:I
- sf:ALL_IN_THIS_FILE:I
- sf:CANCEL:I
- sf:OK:I
- sf:SKIP:I
- sf:SKIP_ALL_IN_THIS_FILE:I
@:com.intellij.find.FindManager$PromptResultValue
- java.lang.annotation.Annotation
com.intellij.find.FindModelListener
- a:findNextModelChanged():V
a:com.intellij.find.FindResult
- com.intellij.openapi.util.TextRange
- <init>(I,I):V
- a:isStringFound():Z
c:com.intellij.find.findUsages.PsiElement2UsageTargetAdapter
- com.intellij.navigation.ItemPresentation
- com.intellij.navigation.PsiElementNavigationItem
- com.intellij.openapi.actionSystem.DataProvider
- com.intellij.usages.ConfigurableUsageTarget
- com.intellij.usages.PsiElementUsageTarget
- pf:myOptions:com.intellij.find.findUsages.FindUsagesOptions
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.find.findUsages.FindUsagesOptions,Z):V
- <init>(com.intellij.psi.PsiElement,Z):V
- canNavigate():Z
- canNavigateToSource():Z
- s:convert(com.intellij.psi.PsiElement[]):com.intellij.find.findUsages.PsiElement2UsageTargetAdapter[]
- s:convert(com.intellij.psi.PsiElement[],Z):com.intellij.find.findUsages.PsiElement2UsageTargetAdapter[]
- s:convertToPsiElements(com.intellij.find.findUsages.PsiElement2UsageTargetAdapter[]):com.intellij.psi.PsiElement[]
- findUsages():V
- findUsagesInEditor(com.intellij.openapi.fileEditor.FileEditor):V
- getData(java.lang.String):java.lang.Object
- getElement():com.intellij.psi.PsiElement
- getFiles():com.intellij.openapi.vfs.VirtualFile[]
- getIcon(Z):javax.swing.Icon
- getLocationString():java.lang.String
- getLongDescriptiveName():java.lang.String
- getName():java.lang.String
- getPresentableText():java.lang.String
- getPresentation():com.intellij.navigation.ItemPresentation
- getProject():com.intellij.openapi.project.Project
- getShortcut():com.intellij.openapi.actionSystem.KeyboardShortcut
- getTargetElement():com.intellij.psi.PsiElement
- highlightUsages(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,Z):V
- isReadOnly():Z
- isValid():Z
- navigate(Z):V
- showSettings():V
- update():V
f:com.intellij.ide.actions.FqnUtil
- <init>():V
- s:elementToFqn(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):java.lang.String
- s:getFileFqn(com.intellij.psi.PsiFile):java.lang.String
- s:getQualifiedNameFromProviders(com.intellij.psi.PsiElement):java.lang.String
- s:getVirtualFileFqn(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.lang.String
com.intellij.ide.actions.QualifiedNameProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:adjustElementToCopy(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:getQualifiedName(com.intellij.psi.PsiElement):java.lang.String
- insertQualifiedName(java.lang.String,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):V
- a:qualifiedNameToElement(java.lang.String,com.intellij.openapi.project.Project):com.intellij.psi.PsiElement
f:com.intellij.ide.actions.QualifiedNameProviderUtil
- s:adjustElementToCopy(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getQualifiedName(com.intellij.psi.PsiElement):java.lang.String
- s:qualifiedNameToElement(java.lang.String,com.intellij.openapi.project.Project):com.intellij.psi.PsiElement
com.intellij.ide.actions.VirtualFileQualifiedNameProvider
- a:getQualifiedName(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
com.intellij.lang.ContextAwareActionHandler
- a:isAvailableForQuickList(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.lang.LanguageRefactoringSupport
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageRefactoringSupport
- forContext(com.intellij.psi.PsiElement):com.intellij.lang.refactoring.RefactoringSupportProvider
- s:getInstance():com.intellij.lang.LanguageRefactoringSupport
a:com.intellij.lang.refactoring.InlineActionHandler
- <init>():V
- a:canInlineElement(com.intellij.psi.PsiElement):Z
- canInlineElementInEditor(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):Z
- getActionName(com.intellij.psi.PsiElement):java.lang.String
- a:inlineElement(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):V
- a:isEnabledForLanguage(com.intellij.lang.Language):Z
- isEnabledOnElement(com.intellij.psi.PsiElement):Z
- isEnabledOnElement(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):Z
com.intellij.lang.refactoring.InlineHandler
- canInlineElement(com.intellij.psi.PsiElement):Z
- a:createInliner(com.intellij.psi.PsiElement,com.intellij.lang.refactoring.InlineHandler$Settings):com.intellij.lang.refactoring.InlineHandler$Inliner
- a:prepareInlineElement(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,Z):com.intellij.lang.refactoring.InlineHandler$Settings
- a:removeDefinition(com.intellij.psi.PsiElement,com.intellij.lang.refactoring.InlineHandler$Settings):V
com.intellij.lang.refactoring.InlineHandler$Inliner
- a:getConflicts(com.intellij.psi.PsiReference,com.intellij.psi.PsiElement):com.intellij.util.containers.MultiMap
- a:inlineUsage(com.intellij.usageView.UsageInfo,com.intellij.psi.PsiElement):V
com.intellij.lang.refactoring.InlineHandler$Settings
- sf:CANNOT_INLINE_SETTINGS:com.intellij.lang.refactoring.InlineHandler$Settings
- a:isOnlyOneReferenceToInline():Z
f:com.intellij.lang.refactoring.InlineHandlers
- com.intellij.lang.LanguageExtension
- s:getInlineHandlers(com.intellij.lang.Language):java.util.List
a:com.intellij.lang.refactoring.RefactoringSupportProvider
- <init>():V
- getChangeSignatureHandler():com.intellij.refactoring.changeSignature.ChangeSignatureHandler
- getExtractClassHandler():com.intellij.refactoring.RefactoringActionHandler
- getExtractInterfaceHandler():com.intellij.refactoring.RefactoringActionHandler
- getExtractMethodHandler():com.intellij.refactoring.RefactoringActionHandler
- getExtractModuleHandler():com.intellij.refactoring.RefactoringActionHandler
- getExtractSuperClassHandler():com.intellij.refactoring.RefactoringActionHandler
- getIntroduceConstantHandler():com.intellij.refactoring.RefactoringActionHandler
- getIntroduceFieldHandler():com.intellij.refactoring.RefactoringActionHandler
- getIntroduceFunctionalParameterHandler():com.intellij.refactoring.RefactoringActionHandler
- getIntroduceFunctionalVariableHandler():com.intellij.refactoring.RefactoringActionHandler
- getIntroduceParameterHandler():com.intellij.refactoring.RefactoringActionHandler
- getIntroduceVariableHandler():com.intellij.refactoring.RefactoringActionHandler
- getIntroduceVariableHandler(com.intellij.psi.PsiElement):com.intellij.refactoring.RefactoringActionHandler
- getPullUpHandler():com.intellij.refactoring.RefactoringActionHandler
- getPushDownHandler():com.intellij.refactoring.RefactoringActionHandler
- isAvailable(com.intellij.psi.PsiElement):Z
- isInplaceIntroduceAvailable(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- isInplaceRenameAvailable(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- isMemberInplaceRenameAvailable(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- isSafeDeleteAvailable(com.intellij.psi.PsiElement):Z
a:com.intellij.refactoring.BaseRefactoringProcessor
- java.lang.Runnable
- p:myPrepareSuccessfulSwingThreadCallback:java.lang.Runnable
- pf:myProject:com.intellij.openapi.project.Project
- pf:myRefactoringScope:com.intellij.psi.search.SearchScope
- p:<init>(com.intellij.openapi.project.Project):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.psi.search.SearchScope,java.lang.Runnable):V
- p:<init>(com.intellij.openapi.project.Project,java.lang.Runnable):V
- p:computeUnloadedModulesFromUseScope(com.intellij.usageView.UsageViewDescriptor):java.util.Set
- p:createConflictsDialog(com.intellij.util.containers.MultiMap,com.intellij.usageView.UsageInfo[]):com.intellij.refactoring.ConflictsDialogBase
- pa:createUsageViewDescriptor(com.intellij.usageView.UsageInfo[]):com.intellij.usageView.UsageViewDescriptor
- p:customizeUsagesView(com.intellij.usageView.UsageViewDescriptor,com.intellij.usages.UsageView):V
- p:doRun():V
- p:execute(com.intellij.usageView.UsageInfo[]):V
- executeEx(com.intellij.usageView.UsageInfo[]):V
- pa:findUsages():com.intellij.usageView.UsageInfo[]
- p:getAfterData(com.intellij.usageView.UsageInfo[]):com.intellij.refactoring.listeners.RefactoringEventData
- p:getBeforeData():com.intellij.refactoring.listeners.RefactoringEventData
- pa:getCommandName():java.lang.String
- p:getElementsToWrite(com.intellij.usageView.UsageViewDescriptor):java.util.Collection
- p:getRefactoringId():java.lang.String
- p:getTransaction():com.intellij.refactoring.listeners.impl.RefactoringTransaction
- p:getUndoConfirmationPolicy():com.intellij.openapi.command.UndoConfirmationPolicy
- p:isGlobalUndoAction():Z
- p:isPreviewUsages(com.intellij.usageView.UsageInfo[]):Z
- p:isToBeChanged(com.intellij.usageView.UsageInfo):Z
- p:performPsiSpoilingRefactoring():V
- pa:performRefactoring(com.intellij.usageView.UsageInfo[]):V
- p:prepareConflictsDialog(com.intellij.util.containers.MultiMap,com.intellij.usageView.UsageInfo[]):com.intellij.refactoring.ConflictsDialogBase
- p:prepareSuccessful():V
- p:preprocessUsages(com.intellij.openapi.util.Ref):Z
- p:previewRefactoring(com.intellij.usageView.UsageInfo[]):V
- s:processConflicts(com.intellij.openapi.project.Project,com.intellij.util.containers.MultiMap):Z
- p:refreshElements(com.intellij.psi.PsiElement[]):V
- f:run():V
- s:runWithDisabledPreview(com.intellij.util.ThrowableRunnable):V
- setPrepareSuccessfulSwingThreadCallback(java.lang.Runnable):V
- setPreviewUsages(Z):V
- p:shouldDisableAccessChecks():Z
- p:showConflicts(com.intellij.util.containers.MultiMap,com.intellij.usageView.UsageInfo[]):Z
- p:skipNonCodeUsages():Z
f:com.intellij.refactoring.BaseRefactoringProcessor$ConflictsInTestsException
- java.lang.RuntimeException
- <init>(java.util.Collection):V
- getMessage():java.lang.String
- getMessages():java.util.Collection
- s:isTestIgnore():Z
- s:withIgnoredConflicts(com.intellij.util.ThrowableRunnable):V
c:com.intellij.refactoring.BaseRefactoringProcessor$UnknownReferenceTypeException
- java.lang.RuntimeException
- <init>(com.intellij.lang.Language):V
com.intellij.refactoring.ConflictsDialogBase
- a:isShowConflicts():Z
- a:setCommandName(java.lang.String):V
- a:showAndGet():Z
com.intellij.refactoring.PreviewableRefactoringActionHandler
- com.intellij.refactoring.RefactoringActionHandler
- generatePreview(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
com.intellij.refactoring.RefactoringActionHandler
- a:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- a:invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
com.intellij.refactoring.RefactoringActionHandlerOnPsiElement
- com.intellij.refactoring.PreviewableRefactoringActionHandler
- a:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):V
f:com.intellij.refactoring.RefactoringBundle
- s:getCannotRefactorMessage(java.lang.String):java.lang.String
- s:getEscalateVisibility():java.lang.String
- s:getSearchForTextOccurrencesText():java.lang.String
- s:getSearchInCommentsAndStringsText():java.lang.String
- s:getVisibilityAsIs():java.lang.String
- s:getVisibilityPackageLocal():java.lang.String
- s:getVisibilityPrivate():java.lang.String
- s:getVisibilityProtected():java.lang.String
- s:getVisibilityPublic():java.lang.String
- s:message(java.lang.String):java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
com.intellij.refactoring.RefactoringHelper
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:performOperation(com.intellij.openapi.project.Project,java.lang.Object):V
- a:prepareOperation(com.intellij.usageView.UsageInfo[],java.util.List):java.lang.Object
f:com.intellij.refactoring.RefactoringSettings
- com.intellij.openapi.components.PersistentStateComponent
- ASK_FOR_RENAME_DECLARATION_WHEN_RENAME_FILE:Z
- MOVE_SEARCH_FOR_REFERENCES_FOR_FILE:Z
- RENAME_DECLARATION_WHEN_RENAME_FILE:Z
- RENAME_SEARCH_FOR_REFERENCES_FOR_DIRECTORY:Z
- RENAME_SEARCH_FOR_REFERENCES_FOR_FILE:Z
- RENAME_SEARCH_FOR_TEXT_FOR_FILE:Z
- RENAME_SEARCH_IN_COMMENTS_FOR_FILE:Z
- RENAME_SHOW_AUTOMATIC_RENAMING_DIALOG:Z
- SAFE_DELETE_SEARCH_IN_COMMENTS:Z
- SAFE_DELETE_SEARCH_IN_NON_JAVA:Z
- SAFE_DELETE_WHEN_DELETE:Z
- <init>():V
- s:getInstance():com.intellij.refactoring.RefactoringSettings
- getState():com.intellij.refactoring.RefactoringSettings
- loadState(com.intellij.refactoring.RefactoringSettings):V
com.intellij.refactoring.changeSignature.ChangeInfo
- a:getLanguage():com.intellij.lang.Language
- a:getMethod():com.intellij.psi.PsiElement
- a:getNewName():java.lang.String
- a:getNewParameters():com.intellij.refactoring.changeSignature.ParameterInfo[]
- a:isGenerateDelegate():Z
- a:isNameChanged():Z
- a:isParameterNamesChanged():Z
- a:isParameterSetOrOrderChanged():Z
- a:isParameterTypesChanged():Z
- a:isReturnTypeChanged():Z
com.intellij.refactoring.changeSignature.ChangeSignatureHandler
- com.intellij.refactoring.RefactoringActionHandler
- a:findTargetMember(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- findTargetMember(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement
- a:getTargetNotFoundMessage():java.lang.String
- a:invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
com.intellij.refactoring.changeSignature.ChangeSignatureUsageProcessor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:findConflicts(com.intellij.refactoring.changeSignature.ChangeInfo,com.intellij.openapi.util.Ref):com.intellij.util.containers.MultiMap
- a:findUsages(com.intellij.refactoring.changeSignature.ChangeInfo):com.intellij.usageView.UsageInfo[]
- a:processPrimaryMethod(com.intellij.refactoring.changeSignature.ChangeInfo):Z
- a:processUsage(com.intellij.refactoring.changeSignature.ChangeInfo,com.intellij.usageView.UsageInfo,Z,com.intellij.usageView.UsageInfo[]):Z
- a:registerConflictResolvers(java.util.List,com.intellij.refactoring.rename.ResolveSnapshotProvider,com.intellij.usageView.UsageInfo[],com.intellij.refactoring.changeSignature.ChangeInfo):V
- a:setupDefaultValues(com.intellij.refactoring.changeSignature.ChangeInfo,com.intellij.openapi.util.Ref,com.intellij.openapi.project.Project):Z
- a:shouldPreviewUsages(com.intellij.refactoring.changeSignature.ChangeInfo,com.intellij.usageView.UsageInfo[]):Z
c:com.intellij.refactoring.changeSignature.ChangeSignatureUsageProviders
- com.intellij.lang.LanguageExtension
- <init>():V
- s:findProvider(com.intellij.lang.Language):com.intellij.refactoring.changeSignature.ChangeSignatureUsageProvider
com.intellij.refactoring.changeSignature.OverriderMethodUsageInfo
- a:getBaseMethod():com.intellij.psi.PsiNamedElement
- a:getOverridingMethod():com.intellij.psi.PsiNamedElement
com.intellij.refactoring.changeSignature.ParameterInfo
- sf:NEW_PARAMETER:I
- getActualValue(com.intellij.psi.PsiElement,java.lang.Object):com.intellij.psi.PsiElement
- a:getDefaultValue():java.lang.String
- a:getName():java.lang.String
- a:getOldIndex():I
- a:getTypeText():java.lang.String
- isNew():Z
- a:isUseAnySingleVariable():Z
- a:setName(java.lang.String):V
- a:setUseAnySingleVariable(Z):V
com.intellij.refactoring.changeSignature.PossiblyIncorrectUsage
- a:isCorrect():Z
com.intellij.refactoring.changeSignature.PsiCallReference
- com.intellij.psi.PsiReference
- a:handleChangeSignature(com.intellij.refactoring.changeSignature.ChangeInfo):com.intellij.psi.PsiElement
a:com.intellij.refactoring.classMembers.MemberInfoBase
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- p:displayName:java.lang.String
- p:isStatic:Z
- p:overrides:java.lang.Boolean
- <init>(com.intellij.psi.PsiElement):V
- getDisplayName():java.lang.String
- getMember():com.intellij.psi.PsiElement
- getOverrides():java.lang.Boolean
- isChecked():Z
- isStatic():Z
- isToAbstract():Z
- setChecked(Z):V
- setToAbstract(Z):V
- updateMember(com.intellij.psi.PsiElement):V
c:com.intellij.refactoring.classMembers.MemberInfoBase$EmptyFilter
- com.intellij.refactoring.classMembers.MemberInfoBase$Filter
- <init>():V
- includeMember(com.intellij.psi.PsiElement):Z
com.intellij.refactoring.classMembers.MemberInfoBase$Filter
- a:includeMember(com.intellij.psi.PsiElement):Z
com.intellij.refactoring.extractMethod.ExtractMethodDecorator
- a:createMethodSignature(com.intellij.refactoring.extractMethod.ExtractMethodSettings):java.lang.String
f:com.intellij.refactoring.extractMethod.ExtractMethodHelper
- <init>():V
- s:collectDuplicates(com.intellij.refactoring.extractMethod.SimpleDuplicatesFinder,java.util.List,com.intellij.psi.PsiElement):java.util.List
- s:processDuplicates(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.util.List,com.intellij.refactoring.extractMethod.SimpleDuplicatesFinder,com.intellij.openapi.editor.Editor,com.intellij.util.Consumer):V
- s:replaceDuplicates(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.util.Consumer,java.util.List):V
com.intellij.refactoring.extractMethod.ExtractMethodSettings
- a:getAbstractVariableData():com.intellij.refactoring.util.AbstractVariableData[]
- a:getMethodName():java.lang.String
- a:getVisibility():java.lang.Object
com.intellij.refactoring.extractMethod.ExtractMethodValidator
- a:check(java.lang.String):java.lang.String
- a:isValidName(java.lang.String):Z
c:com.intellij.refactoring.extractMethod.SimpleDuplicatesFinder
- pf:myOriginalToDuplicateLocalVariable:java.util.Map
- p:myReplacement:com.intellij.psi.PsiElement
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.util.Collection,com.intellij.refactoring.util.AbstractVariableData[]):V
- p:annotatePattern():V
- p:canReplace(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- p:deannotatePattern():V
- findDuplicates(java.util.List,com.intellij.psi.PsiElement):java.util.List
- p:isDuplicateFragment(com.intellij.psi.PsiElement):com.intellij.refactoring.extractMethod.SimpleMatch
- p:isVariable(com.intellij.psi.PsiElement):Z
- setReplacement(com.intellij.psi.PsiElement):V
f:com.intellij.refactoring.extractMethod.SimpleMatch
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- changeOutput(java.lang.String):V
- changeParameter(java.lang.String,java.lang.String):V
- getChangedOutput():java.lang.String
- getChangedParameters():java.util.Map
- getEndElement():com.intellij.psi.PsiElement
- getStartElement():com.intellij.psi.PsiElement
f:com.intellij.refactoring.listeners.RefactoringElementListenerComposite
- com.intellij.refactoring.listeners.RefactoringElementListener
- com.intellij.refactoring.listeners.UndoRefactoringElementListener
- <init>():V
- addListener(com.intellij.refactoring.listeners.RefactoringElementListener):V
- elementMoved(com.intellij.psi.PsiElement):V
- elementRenamed(com.intellij.psi.PsiElement):V
- undoElementMovedOrRenamed(com.intellij.psi.PsiElement,java.lang.String):V
f:com.intellij.refactoring.listeners.RefactoringEventData
- com.intellij.openapi.util.UserDataHolderBase
- sf:CONFLICTS_KEY:com.intellij.openapi.util.Key
- sf:PSI_ELEMENT_ARRAY_KEY:com.intellij.openapi.util.Key
- sf:PSI_ELEMENT_KEY:com.intellij.openapi.util.Key
- sf:STRING_PROPERTIES:com.intellij.openapi.util.Key
- sf:USAGE_INFOS_KEY:com.intellij.openapi.util.Key
- <init>():V
- addElement(com.intellij.psi.PsiElement):V
- addElements(java.util.Collection):V
- addElements(com.intellij.psi.PsiElement[]):V
- addMembers(java.lang.Object[],com.intellij.util.Function):V
- addStringProperties(java.lang.String[]):V
- addUsages(java.util.Collection):V
com.intellij.refactoring.listeners.RefactoringEventListener
- sf:REFACTORING_EVENT_TOPIC:com.intellij.util.messages.Topic
- conflictsDetected(java.lang.String,com.intellij.refactoring.listeners.RefactoringEventData):V
- redoRefactoring(java.lang.String):V
- a:refactoringDone(java.lang.String,com.intellij.refactoring.listeners.RefactoringEventData):V
- refactoringStarted(java.lang.String,com.intellij.refactoring.listeners.RefactoringEventData):V
- undoRefactoring(java.lang.String):V
a:com.intellij.refactoring.listeners.RefactoringListenerManager
- <init>():V
- a:addListenerProvider(com.intellij.refactoring.listeners.RefactoringElementListenerProvider):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.refactoring.listeners.RefactoringListenerManager
a:com.intellij.refactoring.listeners.UndoRefactoringElementAdapter
- com.intellij.refactoring.listeners.RefactoringElementListener
- com.intellij.refactoring.listeners.UndoRefactoringElementListener
- <init>():V
- f:elementMoved(com.intellij.psi.PsiElement):V
- f:elementRenamed(com.intellij.psi.PsiElement):V
- pa:refactored(com.intellij.psi.PsiElement,java.lang.String):V
- f:undoElementMovedOrRenamed(com.intellij.psi.PsiElement,java.lang.String):V
com.intellij.refactoring.listeners.impl.RefactoringTransaction
- a:commit():V
- a:getElementListener(com.intellij.psi.PsiElement):com.intellij.refactoring.listeners.RefactoringElementListener
com.intellij.refactoring.rename.NameSuggestionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getSuggestedNames(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.util.Set):com.intellij.psi.codeStyle.SuggestedNameInfo
- s:suggestNames(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.util.Set):com.intellij.psi.codeStyle.SuggestedNameInfo
a:com.intellij.refactoring.rename.PreferrableNameSuggestionProvider
- com.intellij.refactoring.rename.NameSuggestionProvider
- <init>():V
- shouldCheckOthers():Z
c:com.intellij.refactoring.rename.PsiElementRenameHandler
- com.intellij.refactoring.rename.RenameHandler
- sf:DEFAULT_NAME:com.intellij.openapi.actionSystem.DataKey
- sf:NAME_SUGGESTIONS:com.intellij.openapi.actionSystem.DataKey
- <init>():V
- s:canRename(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):Z
- s:getElement(com.intellij.openapi.actionSystem.DataContext):com.intellij.psi.PsiElement
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- s:invoke(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- s:invoke(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,Z):V
- isAvailableOnDataContext(com.intellij.openapi.actionSystem.DataContext):Z
- s:isVetoed(com.intellij.psi.PsiElement):Z
- s:rename(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- s:rename(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,java.lang.String):V
- s:rename(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,java.lang.String,com.intellij.refactoring.rename.RenamePsiElementProcessorBase):V
- p:shouldCheckInProject():Z
com.intellij.refactoring.rename.RenameHandler
- com.intellij.refactoring.RefactoringActionHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:isAvailableOnDataContext(com.intellij.openapi.actionSystem.DataContext):Z
- isRenaming(com.intellij.openapi.actionSystem.DataContext):Z
com.intellij.refactoring.rename.RenameInputValidator
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getPattern():com.intellij.patterns.ElementPattern
- a:isInputValid(java.lang.String,com.intellij.psi.PsiElement,com.intellij.util.ProcessingContext):Z
com.intellij.refactoring.rename.RenameInputValidatorEx
- com.intellij.refactoring.rename.RenameInputValidator
- a:getErrorMessage(java.lang.String,com.intellij.openapi.project.Project):java.lang.String
f:com.intellij.refactoring.rename.RenameInputValidatorRegistry
- s:getInputErrorValidator(com.intellij.psi.PsiElement):com.intellij.util.Function
- s:getInputValidator(com.intellij.psi.PsiElement):com.intellij.openapi.util.Condition
a:com.intellij.refactoring.rename.RenamePsiElementProcessorBase
- sf:DEFAULT:com.intellij.refactoring.rename.RenamePsiElementProcessorBase
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:canProcessElement(com.intellij.psi.PsiElement):Z
- createDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.refactoring.rename.RenameRefactoringDialog
- createUsageInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiReference,com.intellij.psi.PsiElement):com.intellij.usageView.UsageInfo
- findCollisions(com.intellij.psi.PsiElement,java.lang.String,java.util.Map,java.util.List):V
- findExistingNameConflicts(com.intellij.psi.PsiElement,java.lang.String,com.intellij.util.containers.MultiMap):V
- findExistingNameConflicts(com.intellij.psi.PsiElement,java.lang.String,com.intellij.util.containers.MultiMap,java.util.Map):V
- findReferences(com.intellij.psi.PsiElement):java.util.Collection
- findReferences(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,Z):java.util.Collection
- findReferences(com.intellij.psi.PsiElement,Z):java.util.Collection
- s:forPsiElement(com.intellij.psi.PsiElement):com.intellij.refactoring.rename.RenamePsiElementProcessorBase
- forcesShowPreview():Z
- getElementToSearchInStringsAndComments(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getHelpID(com.intellij.psi.PsiElement):java.lang.String
- getPostRenameCallback(com.intellij.psi.PsiElement,java.lang.String,com.intellij.refactoring.listeners.RefactoringElementListener):java.lang.Runnable
- getQualifiedNameAfterRename(com.intellij.psi.PsiElement,java.lang.String,Z):java.lang.String
- getTextOccurrenceSearchStrings(com.intellij.psi.PsiElement,java.lang.String):com.intellij.openapi.util.Pair
- isInplaceRenameSupported():Z
- isToSearchForTextOccurrences(com.intellij.psi.PsiElement):Z
- isToSearchInComments(com.intellij.psi.PsiElement):Z
- prepareRenaming(com.intellij.psi.PsiElement,java.lang.String,java.util.Map):V
- prepareRenaming(com.intellij.psi.PsiElement,java.lang.String,java.util.Map,com.intellij.psi.search.SearchScope):V
- renameElement(com.intellij.psi.PsiElement,java.lang.String,com.intellij.usageView.UsageInfo[],com.intellij.refactoring.listeners.RefactoringElementListener):V
- setToSearchForTextOccurrences(com.intellij.psi.PsiElement,Z):V
- setToSearchInComments(com.intellij.psi.PsiElement,Z):V
- showRenamePreviewButton(com.intellij.psi.PsiElement):Z
- substituteElementToRename(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement
- substituteElementToRename(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.Pass):V
com.intellij.refactoring.rename.RenamePsiElementProcessorBase$DefaultRenamePsiElementProcessor
a:com.intellij.refactoring.rename.RenamePsiElementProcessorWrapper
- com.intellij.refactoring.rename.RenamePsiElementProcessorBase
- <init>(com.intellij.refactoring.rename.RenamePsiElementProcessorBase):V
- canProcessElement(com.intellij.psi.PsiElement):Z
- createDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.refactoring.rename.RenameRefactoringDialog
- createUsageInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiReference,com.intellij.psi.PsiElement):com.intellij.usageView.UsageInfo
- equals(java.lang.Object):Z
- findCollisions(com.intellij.psi.PsiElement,java.lang.String,java.util.Map,java.util.List):V
- findExistingNameConflicts(com.intellij.psi.PsiElement,java.lang.String,com.intellij.util.containers.MultiMap):V
- findExistingNameConflicts(com.intellij.psi.PsiElement,java.lang.String,com.intellij.util.containers.MultiMap,java.util.Map):V
- findReferences(com.intellij.psi.PsiElement):java.util.Collection
- findReferences(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,Z):java.util.Collection
- findReferences(com.intellij.psi.PsiElement,Z):java.util.Collection
- forcesShowPreview():Z
- getElementToSearchInStringsAndComments(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getHelpID(com.intellij.psi.PsiElement):java.lang.String
- getPostRenameCallback(com.intellij.psi.PsiElement,java.lang.String,com.intellij.refactoring.listeners.RefactoringElementListener):java.lang.Runnable
- f:getProcessor():com.intellij.refactoring.rename.RenamePsiElementProcessorBase
- getQualifiedNameAfterRename(com.intellij.psi.PsiElement,java.lang.String,Z):java.lang.String
- getTextOccurrenceSearchStrings(com.intellij.psi.PsiElement,java.lang.String):com.intellij.openapi.util.Pair
- hashCode():I
- isInplaceRenameSupported():Z
- isToSearchForTextOccurrences(com.intellij.psi.PsiElement):Z
- isToSearchInComments(com.intellij.psi.PsiElement):Z
- prepareRenaming(com.intellij.psi.PsiElement,java.lang.String,java.util.Map):V
- prepareRenaming(com.intellij.psi.PsiElement,java.lang.String,java.util.Map,com.intellij.psi.search.SearchScope):V
- renameElement(com.intellij.psi.PsiElement,java.lang.String,com.intellij.usageView.UsageInfo[],com.intellij.refactoring.listeners.RefactoringElementListener):V
- setToSearchForTextOccurrences(com.intellij.psi.PsiElement,Z):V
- setToSearchInComments(com.intellij.psi.PsiElement,Z):V
- showRenamePreviewButton(com.intellij.psi.PsiElement):Z
- substituteElementToRename(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement
- substituteElementToRename(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.Pass):V
com.intellij.refactoring.rename.RenameRefactoringDialog
- addSuggestedNames(java.util.Collection):V
- a:close():V
- a:getSuggestedNames():java.lang.String[]
- a:performRename(java.lang.String):V
- a:show():V
a:com.intellij.refactoring.rename.RenameRefactoringDialogProvider
- <init>():V
- a:createDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.refactoring.rename.RenameRefactoringDialog
- isApplicable(com.intellij.refactoring.rename.RenamePsiElementProcessorBase):Z
e:com.intellij.refactoring.rename.RenameScopeType
- java.lang.Enum
- sf:CurrentFile:com.intellij.refactoring.rename.RenameScopeType
- sf:Module:com.intellij.refactoring.rename.RenameScopeType
- sf:Production:com.intellij.refactoring.rename.RenameScopeType
- sf:Project:com.intellij.refactoring.rename.RenameScopeType
- sf:Tests:com.intellij.refactoring.rename.RenameScopeType
- sf:ThirdParty:com.intellij.refactoring.rename.RenameScopeType
- sf:Unknown:com.intellij.refactoring.rename.RenameScopeType
- s:getEntries():kotlin.enums.EnumEntries
- f:getFusName():java.lang.String
- s:valueOf(java.lang.String):com.intellij.refactoring.rename.RenameScopeType
- s:values():com.intellij.refactoring.rename.RenameScopeType[]
f:com.intellij.refactoring.rename.RenameUtil
- s:addConflictDescriptions(com.intellij.usageView.UsageInfo[],com.intellij.util.containers.MultiMap):V
- s:assertNonCompileElement(com.intellij.psi.PsiElement):V
- s:buildPackagePrefixChangedMessage(com.intellij.openapi.vfs.VirtualFile[],java.lang.StringBuffer,java.lang.String):V
- s:checkRename(com.intellij.psi.PsiElement,java.lang.String):V
- s:doRename(com.intellij.psi.PsiElement,java.lang.String,com.intellij.usageView.UsageInfo[],com.intellij.openapi.project.Project,com.intellij.refactoring.listeners.RefactoringElementListener):V
- s:doRenameGenericNamedElement(com.intellij.psi.PsiElement,java.lang.String,com.intellij.usageView.UsageInfo[],com.intellij.refactoring.listeners.RefactoringElementListener):V
- s:findUsages(com.intellij.psi.PsiElement,java.lang.String,com.intellij.psi.search.SearchScope,Z,Z,java.util.Map):com.intellij.usageView.UsageInfo[]
- s:findUsages(com.intellij.psi.PsiElement,java.lang.String,Z,Z,java.util.Map):com.intellij.usageView.UsageInfo[]
- s:getUsageViewType(com.intellij.psi.PsiElement):java.lang.String
- s:hasNonCodeUsages(com.intellij.psi.PsiElement,java.lang.String,com.intellij.psi.search.SearchScope,Z,Z):Z
- s:isValidName(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.lang.String):Z
- s:removeConflictUsages(java.util.Set):java.util.List
- s:rename(com.intellij.usageView.UsageInfo,java.lang.String):V
- s:renameNonCodeUsages(com.intellij.openapi.project.Project,com.intellij.refactoring.util.NonCodeUsageInfo[]):V
- s:showErrorMessage(com.intellij.util.IncorrectOperationException,com.intellij.psi.PsiElement,com.intellij.openapi.project.Project):V
a:com.intellij.refactoring.rename.ResolveSnapshotProvider
- <init>():V
- a:createSnapshot(com.intellij.psi.PsiElement):com.intellij.refactoring.rename.ResolveSnapshotProvider$ResolveSnapshot
a:com.intellij.refactoring.rename.ResolveSnapshotProvider$ResolveSnapshot
- <init>():V
- a:apply(java.lang.String):V
a:com.intellij.refactoring.rename.naming.AutomaticRenamer
- pf:myElements:java.util.List
- p:<init>():V
- allowChangeSuggestedName():Z
- p:canonicalNameToName(java.lang.String,com.intellij.psi.PsiNamedElement):java.lang.String
- doNotRename(com.intellij.psi.PsiNamedElement):V
- a:entityName():java.lang.String
- findUsages(java.util.List,Z,Z):V
- findUsages(java.util.List,Z,Z,java.util.List):V
- findUsages(java.util.List,Z,Z,java.util.List,java.util.Map):V
- a:getDialogDescription():java.lang.String
- a:getDialogTitle():java.lang.String
- getElements():java.util.List
- getNewName(com.intellij.psi.PsiNamedElement):java.lang.String
- getRenames():java.util.Map
- hasAnythingToRename():Z
- isSelectedByDefault():Z
- p:nameToCanonicalName(java.lang.String,com.intellij.psi.PsiNamedElement):java.lang.String
- setRename(com.intellij.psi.PsiNamedElement,java.lang.String):V
- p:suggestAllNames(java.lang.String,java.lang.String):V
- p:suggestNameForElement(com.intellij.psi.PsiNamedElement,com.intellij.refactoring.rename.naming.NameSuggester,java.lang.String,java.lang.String):java.lang.String
com.intellij.refactoring.rename.naming.AutomaticRenamerFactory
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createRenamer(com.intellij.psi.PsiElement,java.lang.String,java.util.Collection):com.intellij.refactoring.rename.naming.AutomaticRenamer
- a:getOptionName():java.lang.String
- a:isApplicable(com.intellij.psi.PsiElement):Z
- a:isEnabled():Z
- a:setEnabled(Z):V
f:com.intellij.refactoring.rename.naming.NameSuggester
- <init>(java.lang.String,java.lang.String):V
- suggestName(java.lang.String):java.lang.String
com.intellij.refactoring.suggested.SuggestedRefactoringProvider
- sf:Companion:com.intellij.refactoring.suggested.SuggestedRefactoringProvider$Companion
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.refactoring.suggested.SuggestedRefactoringProvider
- a:reset():V
f:com.intellij.refactoring.suggested.SuggestedRefactoringProvider$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.refactoring.suggested.SuggestedRefactoringProvider
f:com.intellij.refactoring.util.CommonRefactoringUtil
- s:checkReadOnlyStatus(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):Z
- s:checkReadOnlyStatus(com.intellij.openapi.project.Project,java.util.Collection,java.util.Collection,Z):Z
- s:checkReadOnlyStatus(com.intellij.openapi.project.Project,java.util.Collection,Z):Z
- s:checkReadOnlyStatus(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[]):Z
- s:checkReadOnlyStatus(com.intellij.psi.PsiElement):Z
- s:checkReadOnlyStatus(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,java.lang.String):Z
- s:checkReadOnlyStatusRecursively(com.intellij.openapi.project.Project,java.util.Collection):Z
- s:checkReadOnlyStatusRecursively(com.intellij.openapi.project.Project,java.util.Collection,Z):Z
- s:collectReadOnlyFiles(com.intellij.openapi.vfs.VirtualFile,java.util.Collection):V
- s:findElementsFromCaretsAndSelections(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,java.lang.Class,java.util.function.Predicate):java.util.List
- s:getElementAtCaret(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- s:getPsiElementArray(com.intellij.openapi.actionSystem.DataContext):com.intellij.psi.PsiElement[]
- s:htmlEmphasize(java.lang.String):java.lang.String
- s:isAncestor(com.intellij.psi.PsiElement,java.util.Collection):Z
- s:showErrorHint(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.lang.String,java.lang.String,java.lang.String):V
- s:showErrorMessage(java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.project.Project):V
- s:sortDepthFirstRightLeftOrder(com.intellij.usageView.UsageInfo[]):V
c:com.intellij.refactoring.util.CommonRefactoringUtil$RefactoringErrorHintException
- java.lang.RuntimeException
- <init>(java.lang.String):V
