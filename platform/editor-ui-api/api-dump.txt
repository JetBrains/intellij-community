com.intellij.codeHighlighting.BackgroundEditorHighlighter
- a:createPassesForEditor():com.intellij.codeHighlighting.HighlightingPass[]
com.intellij.codeHighlighting.HighlightingPass
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EMPTY_ARRAY:com.intellij.codeHighlighting.HighlightingPass[]
- a:applyInformationToEditor():V
- a:collectInformation(com.intellij.openapi.progress.ProgressIndicator):V
- getExpiredCondition():com.intellij.openapi.util.Condition
com.intellij.codeInsight.actions.ReaderModeMatcher
- a:matches(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.actions.ReaderModeProvider$ReaderMode):java.lang.Boolean
com.intellij.codeInsight.actions.ReaderModeProvider
- applyModeChanged(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,Z,Z):V
e:com.intellij.codeInsight.actions.ReaderModeProvider$ReaderMode
- java.lang.Enum
- sf:LIBRARIES:com.intellij.codeInsight.actions.ReaderModeProvider$ReaderMode
- sf:LIBRARIES_AND_READ_ONLY:com.intellij.codeInsight.actions.ReaderModeProvider$ReaderMode
- sf:READ_ONLY:com.intellij.codeInsight.actions.ReaderModeProvider$ReaderMode
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeInsight.actions.ReaderModeProvider$ReaderMode
- s:values():com.intellij.codeInsight.actions.ReaderModeProvider$ReaderMode[]
com.intellij.codeInsight.daemon.GutterMark
- com.intellij.openapi.project.PossiblyDumbAware
- a:getIcon():javax.swing.Icon
- a:getTooltipText():java.lang.String
com.intellij.codeInsight.daemon.NonHideableIconGutterMark
- com.intellij.codeInsight.daemon.GutterMark
a:com.intellij.ide.DataManager
- a:getDataContext():com.intellij.openapi.actionSystem.DataContext
- a:getDataContext(java.awt.Component):com.intellij.openapi.actionSystem.DataContext
- a:getDataContext(java.awt.Component,I,I):com.intellij.openapi.actionSystem.DataContext
- f:getDataContextFromFocus():com.intellij.openapi.util.AsyncResult
- a:getDataContextFromFocusAsync():org.jetbrains.concurrency.Promise
- s:getDataProvider(javax.swing.JComponent):com.intellij.openapi.actionSystem.DataProvider
- s:getInstance():com.intellij.ide.DataManager
- s:getInstanceIfCreated():com.intellij.ide.DataManager
- a:loadFromDataContext(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.util.Key):java.lang.Object
- s:registerDataProvider(javax.swing.JComponent,com.intellij.openapi.actionSystem.DataProvider):V
- s:removeDataProvider(javax.swing.JComponent):V
- a:saveInDataContext(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.util.Key,java.lang.Object):V
f:com.intellij.ide.highlighter.HighlighterFactory
- s:createHighlighter(com.intellij.openapi.editor.colors.EditorColorsScheme,java.lang.String,com.intellij.openapi.project.Project):com.intellij.openapi.editor.highlighter.EditorHighlighter
- s:createHighlighter(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.colors.EditorColorsScheme,com.intellij.openapi.project.Project):com.intellij.openapi.editor.highlighter.EditorHighlighter
- s:createHighlighter(com.intellij.openapi.fileTypes.SyntaxHighlighter,com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.highlighter.EditorHighlighter
- s:createHighlighter(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):com.intellij.openapi.editor.highlighter.EditorHighlighter
- s:createHighlighter(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.highlighter.EditorHighlighter
- s:createHighlighter(com.intellij.openapi.project.Project,java.lang.String):com.intellij.openapi.editor.highlighter.EditorHighlighter
- s:createHighlighter(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.colors.EditorColorsScheme,com.intellij.openapi.project.Project):com.intellij.openapi.editor.highlighter.EditorHighlighter
f:com.intellij.ide.lightEdit.LightEdit
- s:owns(com.intellij.openapi.project.Project):Z
c:com.intellij.ide.projectView.PresentationData
- com.intellij.navigation.ColoredItemPresentation
- com.intellij.navigation.LocationPresentation
- com.intellij.util.ui.update.ComparableObject
- java.lang.Cloneable
- <init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.editor.colors.TextAttributesKey):V
- addText(com.intellij.ide.util.treeView.PresentableNodeDescriptor$ColoredFragment):V
- addText(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- applyFrom(com.intellij.ide.projectView.PresentationData):V
- clear():V
- clearText():V
- clone():com.intellij.ide.projectView.PresentationData
- copyFrom(com.intellij.ide.projectView.PresentationData):V
- equals(java.lang.Object):Z
- f:getBackground():java.awt.Color
- getColoredText():java.util.List
- getEqualityObjects():java.lang.Object[]
- getForcedTextForeground():java.awt.Color
- getIcon(Z):javax.swing.Icon
- getLocationPrefix():java.lang.String
- getLocationString():java.lang.String
- getLocationSuffix():java.lang.String
- getPresentableText():java.lang.String
- getTextAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- getTooltip():java.lang.String
- hasSeparatorAbove():Z
- hashCode():I
- isChanged():Z
- setAttributesKey(com.intellij.openapi.editor.colors.TextAttributesKey):V
- f:setBackground(java.awt.Color):V
- setChanged(Z):V
- setForcedTextForeground(java.awt.Color):V
- setIcon(javax.swing.Icon):V
- setLocationString(java.lang.String):V
- setPresentableText(java.lang.String):V
- setSeparatorAbove(Z):V
- setTooltip(java.lang.String):V
- updateFrom(com.intellij.navigation.ItemPresentation):V
com.intellij.ide.projectView.RootsProvider
- a:getRoots():java.util.Collection
com.intellij.ide.projectView.SettingsProvider
- a:getSettings():com.intellij.ide.projectView.ViewSettings
com.intellij.ide.projectView.TreeStructureProvider
- com.intellij.openapi.project.PossiblyDumbAware
- getData(java.util.Collection,java.lang.String):java.lang.Object
- a:modify(com.intellij.ide.util.treeView.AbstractTreeNode,java.util.Collection,com.intellij.ide.projectView.ViewSettings):java.util.Collection
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink,java.util.Collection):V
com.intellij.ide.projectView.ViewSettings
- com.intellij.ide.util.treeView.NodeOptions
- sf:DEFAULT:com.intellij.ide.projectView.ViewSettings
- isFlattenModules():Z
- isFoldersAlwaysOnTop():Z
- isShowMembers():Z
- isShowModules():Z
- isShowScratchesAndConsoles():Z
- isShowURL():Z
- isStructureView():Z
c:com.intellij.ide.projectView.ViewSettings$Immutable
- com.intellij.ide.util.treeView.NodeOptions$Immutable
- com.intellij.ide.projectView.ViewSettings
- sf:DEFAULT:com.intellij.ide.projectView.ViewSettings
- <init>(com.intellij.ide.projectView.ViewSettings):V
- equals(java.lang.Object):Z
- hashCode():I
- isFlattenModules():Z
- isFoldersAlwaysOnTop():Z
- isShowMembers():Z
- isShowModules():Z
- isShowScratchesAndConsoles():Z
- isShowURL():Z
- isStructureView():Z
com.intellij.ide.structureView.FileEditorPositionListener
- a:onCurrentElementChanged():V
com.intellij.ide.structureView.ModelListener
- a:onModelChanged():V
com.intellij.ide.structureView.SearchableTextProvider
- com.intellij.ide.structureView.StructureViewTreeElement
- getSearchableText():java.lang.String
com.intellij.ide.structureView.StructureView
- com.intellij.openapi.Disposable
- a:centerSelectedRow():V
- a:getComponent():javax.swing.JComponent
- a:getTreeModel():com.intellij.ide.structureView.StructureViewModel
- a:navigateToSelectedElement(Z):Z
- a:restoreState():V
- a:storeState():V
com.intellij.ide.structureView.StructureViewBuilder
- sf:PROVIDER:com.intellij.ide.structureView.StructureViewBuilderProvider
- a:createStructureView(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.project.Project):com.intellij.ide.structureView.StructureView
- createStructureViewSuspend(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- bs:createStructureViewSuspend$suspendImpl(com.intellij.ide.structureView.StructureViewBuilder,com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
- s:getProvider():com.intellij.ide.structureView.StructureViewBuilderProvider
com.intellij.ide.structureView.StructureViewBuilderProvider
- a:getStructureViewBuilder(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.ide.structureView.StructureViewBuilder
a:com.intellij.ide.structureView.StructureViewFactory
- a:createStructureView(com.intellij.openapi.fileEditor.FileEditor,com.intellij.ide.structureView.StructureViewModel,com.intellij.openapi.project.Project):com.intellij.ide.structureView.StructureView
- a:createStructureView(com.intellij.openapi.fileEditor.FileEditor,com.intellij.ide.structureView.StructureViewModel,com.intellij.openapi.project.Project,Z):com.intellij.ide.structureView.StructureView
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.structureView.StructureViewFactory
com.intellij.ide.structureView.StructureViewModel
- com.intellij.ide.util.treeView.smartTree.TreeModel
- com.intellij.openapi.Disposable
- a:addEditorPositionListener(com.intellij.ide.structureView.FileEditorPositionListener):V
- a:addModelListener(com.intellij.ide.structureView.ModelListener):V
- a:dispose():V
- a:getCurrentEditorElement():java.lang.Object
- getElementStatus(java.lang.Object):com.intellij.openapi.vcs.FileStatus
- a:getRoot():com.intellij.ide.structureView.StructureViewTreeElement
- a:removeEditorPositionListener(com.intellij.ide.structureView.FileEditorPositionListener):V
- a:removeModelListener(com.intellij.ide.structureView.ModelListener):V
- a:shouldEnterElement(java.lang.Object):Z
com.intellij.ide.structureView.StructureViewModel$ActionHandler
- a:handleClick(com.intellij.ide.structureView.StructureViewTreeElement,I):Z
com.intellij.ide.structureView.StructureViewModel$ElementInfoProvider
- com.intellij.ide.structureView.StructureViewModel
- a:isAlwaysLeaf(com.intellij.ide.structureView.StructureViewTreeElement):Z
- a:isAlwaysShowsPlus(com.intellij.ide.structureView.StructureViewTreeElement):Z
com.intellij.ide.structureView.StructureViewModel$ExpandInfoProvider
- a:isAutoExpand(com.intellij.ide.structureView.StructureViewTreeElement):Z
- a:isSmartExpand():Z
c:com.intellij.ide.structureView.StructureViewModelBase
- com.intellij.ide.structureView.TextEditorBasedStructureViewModel
- <init>(com.intellij.psi.PsiFile,com.intellij.ide.structureView.StructureViewTreeElement):V
- <init>(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.ide.structureView.StructureViewTreeElement):V
- getRoot():com.intellij.ide.structureView.StructureViewTreeElement
- getSorters():com.intellij.ide.util.treeView.smartTree.Sorter[]
- p:getSuitableClasses():java.lang.Class[]
- withSorters(com.intellij.ide.util.treeView.smartTree.Sorter[]):com.intellij.ide.structureView.StructureViewModelBase
- withSuitableClasses(java.lang.Class[]):com.intellij.ide.structureView.StructureViewModelBase
com.intellij.ide.structureView.StructureViewTreeElement
- com.intellij.ide.util.treeView.smartTree.TreeElement
- com.intellij.pom.Navigatable
- sf:EMPTY_ARRAY:com.intellij.ide.structureView.StructureViewTreeElement[]
- a:getValue():java.lang.Object
a:com.intellij.ide.structureView.TextEditorBasedStructureViewModel
- com.intellij.ide.structureView.StructureViewModel
- com.intellij.ide.util.treeView.smartTree.ProvidingTreeModel
- p:<init>(com.intellij.openapi.editor.Editor):V
- p:<init>(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- p:<init>(com.intellij.psi.PsiFile):V
- f:addEditorPositionListener(com.intellij.ide.structureView.FileEditorPositionListener):V
- addModelListener(com.intellij.ide.structureView.ModelListener):V
- dispose():V
- p:findAcceptableElement(com.intellij.psi.PsiElement):java.lang.Object
- fireModelUpdate():V
- getCurrentEditorElement():java.lang.Object
- p:getEditor():com.intellij.openapi.editor.Editor
- getElementStatus(java.lang.Object):com.intellij.openapi.vcs.FileStatus
- getFilters():com.intellij.ide.util.treeView.smartTree.Filter[]
- getGroupers():com.intellij.ide.util.treeView.smartTree.Grouper[]
- getNodeProviders():java.util.Collection
- p:getPsiFile():com.intellij.psi.PsiFile
- getSorters():com.intellij.ide.util.treeView.smartTree.Sorter[]
- p:getSuitableClasses():java.lang.Class[]
- isEnabled(com.intellij.ide.util.treeView.smartTree.NodeProvider):Z
- p:isSuitable(com.intellij.psi.PsiElement):Z
- isValid():Z
- f:removeEditorPositionListener(com.intellij.ide.structureView.FileEditorPositionListener):V
- removeModelListener(com.intellij.ide.structureView.ModelListener):V
- shouldEnterElement(java.lang.Object):Z
a:com.intellij.ide.structureView.TreeBasedStructureViewBuilder
- com.intellij.ide.structureView.StructureViewBuilder
- <init>():V
- createStructureView(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.project.Project):com.intellij.ide.structureView.StructureView
- createStructureView(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.project.Project,com.intellij.ide.structureView.StructureViewModel):com.intellij.ide.structureView.StructureView
- a:createStructureViewModel(com.intellij.openapi.editor.Editor):com.intellij.ide.structureView.StructureViewModel
- isRootNodeShown():Z
e:com.intellij.ide.ui.AntialiasingType
- java.lang.Enum
- sf:GREYSCALE:com.intellij.ide.ui.AntialiasingType
- sf:OFF:com.intellij.ide.ui.AntialiasingType
- sf:SUBPIXEL:com.intellij.ide.ui.AntialiasingType
- s:canUseSubpixelAAForEditor():Z
- s:canUseSubpixelAAForIDE():Z
- s:getAAHintForSwingComponent():java.lang.Object
- s:getAATextInfoForSwingComponent():com.intellij.util.ui.AATextInfo
- s:getKeyForCurrentScope(Z):java.lang.Object
- getPresentableName():java.lang.String
- getTextInfo():com.intellij.util.ui.AATextInfo
- s:updateContext(java.awt.font.FontRenderContext,Z):java.awt.font.FontRenderContext
- s:valueOf(java.lang.String):com.intellij.ide.ui.AntialiasingType
- s:values():com.intellij.ide.ui.AntialiasingType[]
e:com.intellij.ide.ui.ColorBlindness
- java.lang.Enum
- sf:achromatopsia:com.intellij.ide.ui.ColorBlindness
- sf:deuteranopia:com.intellij.ide.ui.ColorBlindness
- f:key:java.lang.String
- sf:protanopia:com.intellij.ide.ui.ColorBlindness
- sf:tritanopia:com.intellij.ide.ui.ColorBlindness
- s:valueOf(java.lang.String):com.intellij.ide.ui.ColorBlindness
- s:values():com.intellij.ide.ui.ColorBlindness[]
c:com.intellij.ide.ui.ColorBlindnessSupport
- <init>():V
- s:get(com.intellij.ide.ui.ColorBlindness):com.intellij.ide.ui.ColorBlindnessSupport
- getFilter():java.awt.image.ImageFilter
e:com.intellij.ide.ui.NavBarLocation
- java.lang.Enum
- sf:BOTTOM:com.intellij.ide.ui.NavBarLocation
- sf:TOP:com.intellij.ide.ui.NavBarLocation
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ide.ui.NavBarLocation
- s:values():com.intellij.ide.ui.NavBarLocation[]
f:com.intellij.ide.ui.NotRoamableUiOptions
- f:editorAAType:com.intellij.ide.ui.AntialiasingType
- f:experimentalSingleStripe:Z
- f:fontFace:java.lang.String
- f:fontScale:F
- f:fontSize:F
- f:ideAAType:com.intellij.ide.ui.AntialiasingType
- f:ideScale:F
- f:overrideLafFonts:Z
- f:overrideLafFontsWasMigrated:Z
- f:presentationModeIdeScale:F
- <init>():V
- f:component1():com.intellij.ide.ui.AntialiasingType
- f:component10():Z
- f:component2():com.intellij.ide.ui.AntialiasingType
- f:component3():java.lang.String
- f:component4():F
- f:component5():F
- f:component6():F
- f:component7():F
- f:component8():Z
- f:component9():Z
- f:copy(com.intellij.ide.ui.AntialiasingType,com.intellij.ide.ui.AntialiasingType,java.lang.String,F,F,F,F,Z,Z,Z):com.intellij.ide.ui.NotRoamableUiOptions
- bs:copy$default(com.intellij.ide.ui.NotRoamableUiOptions,com.intellij.ide.ui.AntialiasingType,com.intellij.ide.ui.AntialiasingType,java.lang.String,F,F,F,F,Z,Z,Z,I,java.lang.Object):com.intellij.ide.ui.NotRoamableUiOptions
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.ide.ui.NotRoamableUiSettings
- com.intellij.openapi.components.SerializablePersistentStateComponent
- sf:Companion:com.intellij.ide.ui.NotRoamableUiSettings$Companion
- f:getEditorAAType():com.intellij.ide.ui.AntialiasingType
- f:getExperimentalSingleStripe():Z
- f:getFontFace():java.lang.String
- f:getFontScale():F
- f:getFontSize():F
- f:getIdeAAType():com.intellij.ide.ui.AntialiasingType
- f:getIdeScale():F
- f:getOverrideLafFonts():Z
- f:getPresentationModeIdeScale():F
- loadState(com.intellij.ide.ui.NotRoamableUiOptions):V
- noStateLoaded():V
- f:setEditorAAType(com.intellij.ide.ui.AntialiasingType):V
- f:setExperimentalSingleStripe(Z):V
- f:setFontFace(java.lang.String):V
- f:setFontScale(F):V
- f:setFontSize(F):V
- f:setIdeAAType(com.intellij.ide.ui.AntialiasingType):V
- f:setIdeScale(F):V
- f:setOverrideLafFonts(Z):V
- f:setPresentationModeIdeScale(F):V
f:com.intellij.ide.ui.NotRoamableUiSettings$Companion
- f:getInstance():com.intellij.ide.ui.NotRoamableUiSettings
e:com.intellij.ide.ui.UIDensity
- java.lang.Enum
- sf:COMPACT:com.intellij.ide.ui.UIDensity
- sf:DEFAULT:com.intellij.ide.ui.UIDensity
- s:valueOf(java.lang.String):com.intellij.ide.ui.UIDensity
- s:values():com.intellij.ide.ui.UIDensity[]
f:com.intellij.ide.ui.UISettings
- com.intellij.openapi.components.PersistentStateComponentWithModificationTracker
- sf:ANIMATION_DURATION:I
- sf:Companion:com.intellij.ide.ui.UISettings$Companion
- EDITOR_TAB_LIMIT:I
- sf:TABS_NONE:I
- <init>():V
- <init>(com.intellij.ide.ui.NotRoamableUiSettings):V
- f:addUISettingsListener(com.intellij.ide.ui.UISettingsListener,com.intellij.openapi.Disposable):V
- f:fireUISettingsChanged():V
- f:getActiveRightEditorOnClose():Z
- f:getAllowMergeButtons():Z
- f:getAlwaysKeepTabsAlphabeticallySorted():Z
- f:getAnimateWindows():Z
- f:getAnimatedScrolling():Z
- f:getAnimatedScrollingCurvePoints():I
- f:getAnimatedScrollingDuration():I
- f:getCloseTabButtonOnTheRight():Z
- f:getColorBlindness():com.intellij.ide.ui.ColorBlindness
- f:getCompactMode():Z
- f:getCompactTreeIndents():Z
- f:getConsoleCommandHistoryLimit():I
- f:getConsoleCycleBufferSizeKb():I
- f:getCurrentIdeScale():F
- f:getCycleScrolling():Z
- sf:getDefFontScale():F
- sf:getDefFontSize():F
- f:getDifferentiateProjects():Z
- f:getDisableMnemonics():Z
- f:getDisableMnemonicsInControls():Z
- f:getDndWithPressedAltOnly():Z
- f:getEditorAAType():com.intellij.ide.ui.AntialiasingType
- sf:getEditorFractionalMetricsHint():java.lang.Object
- f:getEditorTabLimit():I
- f:getEditorTabPlacement():I
- f:getExpandNodesWithSingleClick():Z
- f:getFontFace():java.lang.String
- f:getFontScale():F
- f:getFontSize():I
- f:getFontSize2D():F
- f:getFullPathsInWindowHeader():Z
- f:getHideKnownExtensionInTabs():Z
- f:getHideNavigationOnFocusLoss():Z
- f:getHideTabsIfNeeded():Z
- f:getHideToolStripes():Z
- f:getIdeAAType():com.intellij.ide.ui.AntialiasingType
- f:getIdeScale():F
- sf:getInstance():com.intellij.ide.ui.UISettings
- sf:getInstanceOrNull():com.intellij.ide.ui.UISettings
- f:getKeepPopupsForToggles():Z
- f:getLeftHorizontalSplit():Z
- f:getMarkModifiedTabsWithAsterisk():Z
- f:getMaxLookupListHeight():I
- f:getMaxLookupWidth():I
- f:getMergeMainMenuWithWindowTitle():Z
- f:getNavBarLocation():com.intellij.ide.ui.NavBarLocation
- f:getOpenInPreviewTabIfPossible():Z
- f:getOpenTabsAtTheEnd():Z
- f:getOpenTabsInMainWindow():Z
- f:getOverrideConsoleCycleBufferSize():Z
- f:getOverrideLafFonts():Z
- f:getPinFindInPath():Z
- f:getPresentationMode():Z
- f:getPresentationModeFontSize():I
- f:getPresentationModeIdeScale():F
- f:getRecentFilesLimit():I
- f:getRecentLocationsLimit():I
- f:getRememberSizeForEachToolWindowNewUI():Z
- f:getRememberSizeForEachToolWindowOldUI():Z
- f:getReuseNotModifiedTabs():Z
- f:getRightHorizontalSplit():Z
- f:getScrollTabLayoutInEditor():Z
- f:getSeparateMainMenu():Z
- sf:getShadowInstance():com.intellij.ide.ui.UISettings
- f:getShowBreakpointsOverLineNumbers():Z
- f:getShowCloseButton():Z
- f:getShowDirectoryForNonUniqueFilenames():Z
- f:getShowEditorToolTip():Z
- f:getShowFileIconInTabs():Z
- f:getShowIconInQuickNavigation():Z
- f:getShowIconsInMenus():Z
- f:getShowInplaceComments():Z
- f:getShowMainMenu():Z
- f:getShowMainToolbar():Z
- f:getShowMembersInNavigationBar():Z
- f:getShowNavigationBar():Z
- f:getShowNavigationBarInBottom():Z
- f:getShowNewMainToolbar():Z
- f:getShowPreviewInSearchEverywhere():Z
- f:getShowStatusBar():Z
- f:getShowTabsTooltips():Z
- f:getShowToolWindowsNames():Z
- f:getShowToolWindowsNumbers():Z
- f:getShowTreeIndentGuides():Z
- f:getShowVisualFormattingLayer():Z
- f:getSmoothScrolling():Z
- f:getSortBookmarks():Z
- f:getSortLookupElementsLexicographically():Z
- f:getSortTabsAlphabetically():Z
- getState():com.intellij.ide.ui.UISettingsState
- getStateModificationCount():J
- f:getToolWindowLeftSideCustomWidth():I
- f:getToolWindowRightSideCustomWidth():I
- f:getUiDensity():com.intellij.ide.ui.UIDensity
- f:getUseContrastScrollbars():Z
- f:getUseSmallLabelsOnTabs():Z
- f:getWideScreenSupport():Z
- loadState(com.intellij.ide.ui.UISettingsState):V
- noStateLoaded():V
- sf:restoreFontSize(F,java.lang.Float):F
- f:setActiveRightEditorOnClose(Z):V
- f:setAlwaysKeepTabsAlphabeticallySorted(Z):V
- f:setColorBlindness(com.intellij.ide.ui.ColorBlindness):V
- f:setCompactMode(Z):V
- f:setCompactTreeIndents(Z):V
- f:setConsoleCommandHistoryLimit(I):V
- f:setConsoleCycleBufferSizeKb(I):V
- f:setCurrentIdeScale(F):V
- f:setDifferentiateProjects(Z):V
- f:setDisableMnemonics(Z):V
- f:setDisableMnemonicsInControls(Z):V
- f:setDndWithPressedAltOnly(Z):V
- f:setEditorAAType(com.intellij.ide.ui.AntialiasingType):V
- f:setEditorTabLimit(I):V
- f:setEditorTabPlacement(I):V
- f:setExpandNodesWithSingleClick(Z):V
- f:setFontFace(java.lang.String):V
- f:setFontScale(F):V
- f:setFontSize(I):V
- f:setFontSize2D(F):V
- f:setFullPathsInWindowHeader(Z):V
- f:setHideKnownExtensionInTabs(Z):V
- f:setHideToolStripes(Z):V
- f:setIdeAAType(com.intellij.ide.ui.AntialiasingType):V
- f:setIdeScale(F):V
- f:setKeepPopupsForToggles(Z):V
- f:setLeftHorizontalSplit(Z):V
- f:setMarkModifiedTabsWithAsterisk(Z):V
- f:setMaxLookupListHeight(I):V
- f:setMaxLookupWidth(I):V
- f:setMergeMainMenuWithWindowTitle(Z):V
- f:setNavBarLocation(com.intellij.ide.ui.NavBarLocation):V
- f:setOpenInPreviewTabIfPossible(Z):V
- f:setOpenTabsAtTheEnd(Z):V
- f:setOpenTabsInMainWindow(Z):V
- f:setOverrideConsoleCycleBufferSize(Z):V
- f:setOverrideLafFonts(Z):V
- f:setPinFindInPath(Z):V
- f:setPresentationMode(Z):V
- f:setPresentationModeFontSize(I):V
- f:setPresentationModeIdeScale(F):V
- f:setRecentFilesLimit(I):V
- f:setRecentLocationsLimit(I):V
- f:setRememberSizeForEachToolWindowNewUI(Z):V
- f:setRememberSizeForEachToolWindowOldUI(Z):V
- f:setReuseNotModifiedTabs(Z):V
- f:setRightHorizontalSplit(Z):V
- f:setSeparateMainMenu(Z):V
- f:setShowBreakpointsOverLineNumbers(Z):V
- f:setShowDirectoryForNonUniqueFilenames(Z):V
- f:setShowEditorToolTip(Z):V
- f:setShowFileIconInTabs(Z):V
- f:setShowIconsInMenus(Z):V
- f:setShowInplaceComments(Z):V
- f:setShowMainMenu(Z):V
- f:setShowMainToolbar(Z):V
- f:setShowMembersInNavigationBar(Z):V
- f:setShowNavigationBar(Z):V
- f:setShowNewMainToolbar(Z):V
- f:setShowPreviewInSearchEverywhere(Z):V
- f:setShowStatusBar(Z):V
- f:setShowTabsTooltips(Z):V
- f:setShowToolWindowsNames(Z):V
- f:setShowToolWindowsNumbers(Z):V
- f:setShowTreeIndentGuides(Z):V
- f:setShowVisualFormattingLayer(Z):V
- f:setSmoothScrolling(Z):V
- f:setSortBookmarks(Z):V
- f:setSortLookupElementsLexicographically(Z):V
- f:setSortTabsAlphabetically(Z):V
- f:setToolWindowLeftSideCustomWidth(I):V
- f:setToolWindowRightSideCustomWidth(I):V
- f:setUiDensity(com.intellij.ide.ui.UIDensity):V
- f:setUseContrastScrollbars(Z):V
- f:setUseSmallLabelsOnTabs(Z):V
- f:setWideScreenSupport(Z):V
- sf:setupAntialiasing(java.awt.Graphics):V
- sf:setupComponentAntialiasing(javax.swing.JComponent):V
- sf:setupEditorAntialiasing(javax.swing.JComponent):V
- sf:setupFractionalMetrics(java.awt.Graphics2D):V
- sf:setupFractionalMetrics(javax.swing.JComponent):V
f:com.intellij.ide.ui.UISettings$Companion
- f:getDefFontScale():F
- f:getDefFontSize():F
- f:getEditorFractionalMetricsHint():java.lang.Object
- f:getInstance():com.intellij.ide.ui.UISettings
- f:getInstanceOrNull():com.intellij.ide.ui.UISettings
- f:getPreferredFractionalMetricsValue():java.lang.Object
- f:getShadowInstance():com.intellij.ide.ui.UISettings
- f:restoreFontSize(F,java.lang.Float):F
- f:setupAntialiasing(java.awt.Graphics):V
- f:setupComponentAntialiasing(javax.swing.JComponent):V
- f:setupEditorAntialiasing(javax.swing.JComponent):V
- f:setupFractionalMetrics(java.awt.Graphics2D):V
- f:setupFractionalMetrics(javax.swing.JComponent):V
com.intellij.ide.ui.UISettingsListener
- java.util.EventListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:uiSettingsChanged(com.intellij.ide.ui.UISettings):V
f:com.intellij.ide.ui.UISettingsState
- com.intellij.openapi.components.BaseState
- <init>():V
- f:_incrementModificationCount():V
- f:getActiveMruEditorOnClose():Z
- f:getActiveRightEditorOnClose():Z
- f:getAllowMergeButtons():Z
- f:getAlphaModeDelay():I
- f:getAlphaModeRatio():F
- f:getAlwaysKeepTabsAlphabeticallySorted():Z
- f:getAnimatedScrolling():Z
- f:getAnimatedScrollingCurvePoints():I
- f:getAnimatedScrollingDuration():I
- f:getCloseNonModifiedFilesFirst():Z
- f:getCloseTabButtonOnTheRight():Z
- f:getColorBlindness():com.intellij.ide.ui.ColorBlindness
- f:getCompactTreeIndents():Z
- f:getConsoleCommandHistoryLimit():I
- f:getConsoleCycleBufferSizeKb():I
- f:getDefaultAutoScrollToSource():Z
- f:getDifferentiateProjects():Z
- f:getDisableMnemonics():Z
- f:getDisableMnemonicsInControls():Z
- f:getDndWithPressedAltOnly():Z
- f:getEditorTabLimit():I
- f:getEditorTabPlacement():I
- f:getEnableAlphaMode():Z
- f:getExpandNodesWithSingleClick():Z
- f:getFontFace():java.lang.String
- f:getFontScale():F
- f:getFontSize():I
- f:getFullPathsInWindowHeader():Z
- f:getHideKnownExtensionInTabs():Z
- f:getHideTabsIfNeeded():Z
- f:getHideToolStripes():Z
- f:getKeepPopupsForToggles():Z
- f:getLeftHorizontalSplit():Z
- f:getMarkModifiedTabsWithAsterisk():Z
- f:getMaxLookupListHeight():I
- f:getMaxLookupWidth():I
- f:getMergeEqualStackTraces():Z
- f:getMergeMainMenuWithWindowTitle():Z
- f:getMoveMouseOnDefaultButton():Z
- f:getNavigateToPreview():Z
- f:getNavigationBarLocation():com.intellij.ide.ui.NavBarLocation
- f:getOpenInPreviewTabIfPossible():Z
- f:getOpenTabsAtTheEnd():Z
- f:getOpenTabsInMainWindow():Z
- f:getOverrideConsoleCycleBufferSize():Z
- f:getPinFindInPath():Z
- f:getPresentationMode():Z
- f:getPresentationModeFontSize():I
- f:getRecentFilesLimit():I
- f:getRecentLocationsLimit():I
- f:getRememberSizeForEachToolWindowNewUI():Z
- f:getRememberSizeForEachToolWindowOldUI():Z
- f:getReuseNotModifiedTabs():Z
- f:getRightHorizontalSplit():Z
- f:getScrollTabLayoutInEditor():Z
- f:getSeparateMainMenu():Z
- f:getShowBreakpointsOverLineNumbers():Z
- f:getShowCloseButton():Z
- f:getShowDirectoryForNonUniqueFilenames():Z
- f:getShowEditorToolTip():Z
- f:getShowFileIconInTabs():Z
- f:getShowIconsInMenus():Z
- f:getShowInplaceComments():Z
- f:getShowMainMenu():Z
- f:getShowMainToolbar():Z
- f:getShowMembersInNavigationBar():Z
- f:getShowNavigationBar():Z
- f:getShowNewMainToolbar():Z
- f:getShowPinnedTabsInASeparateRow():Z
- f:getShowPreviewInSearchEverywhere():Z
- f:getShowStatusBar():Z
- f:getShowTabsTooltips():Z
- f:getShowToolWindowsNames():Z
- f:getShowToolWindowsNumbers():Z
- f:getShowTreeIndentGuides():Z
- f:getShowVisualFormattingLayer():Z
- f:getShowWriteThreadIndicator():Z
- f:getSmoothScrolling():Z
- f:getSortBookmarks():Z
- f:getSortLookupElementsLexicographically():Z
- f:getSortTabsAlphabetically():Z
- f:getToolWindowLeftSideCustomWidth():I
- f:getToolWindowRightSideCustomWidth():I
- f:getUiDensity():com.intellij.ide.ui.UIDensity
- f:getUseContrastScrollBars():Z
- f:getUseSmallLabelsOnTabs():Z
- f:getWideScreenSupport():Z
- f:setActiveMruEditorOnClose(Z):V
- f:setActiveRightEditorOnClose(Z):V
- f:setAllowMergeButtons(Z):V
- f:setAlphaModeDelay(I):V
- f:setAlphaModeRatio(F):V
- f:setAlwaysKeepTabsAlphabeticallySorted(Z):V
- f:setAnimatedScrolling(Z):V
- f:setAnimatedScrollingCurvePoints(I):V
- f:setAnimatedScrollingDuration(I):V
- f:setCloseNonModifiedFilesFirst(Z):V
- f:setCloseTabButtonOnTheRight(Z):V
- f:setColorBlindness(com.intellij.ide.ui.ColorBlindness):V
- f:setCompactTreeIndents(Z):V
- f:setConsoleCommandHistoryLimit(I):V
- f:setConsoleCycleBufferSizeKb(I):V
- f:setDefaultAutoScrollToSource(Z):V
- f:setDifferentiateProjects(Z):V
- f:setDisableMnemonics(Z):V
- f:setDisableMnemonicsInControls(Z):V
- f:setDndWithPressedAltOnly(Z):V
- f:setEditorTabLimit(I):V
- f:setEditorTabPlacement(I):V
- f:setEnableAlphaMode(Z):V
- f:setExpandNodesWithSingleClick(Z):V
- f:setFontFace(java.lang.String):V
- f:setFontScale(F):V
- f:setFontSize(I):V
- f:setFullPathsInWindowHeader(Z):V
- f:setHideKnownExtensionInTabs(Z):V
- f:setHideTabsIfNeeded(Z):V
- f:setHideToolStripes(Z):V
- f:setKeepPopupsForToggles(Z):V
- f:setLeftHorizontalSplit(Z):V
- f:setMarkModifiedTabsWithAsterisk(Z):V
- f:setMaxLookupListHeight(I):V
- f:setMaxLookupWidth(I):V
- f:setMergeEqualStackTraces(Z):V
- f:setMergeMainMenuWithWindowTitle(Z):V
- f:setMoveMouseOnDefaultButton(Z):V
- f:setNavigateToPreview(Z):V
- f:setNavigationBarLocation(com.intellij.ide.ui.NavBarLocation):V
- f:setOpenInPreviewTabIfPossible(Z):V
- f:setOpenTabsAtTheEnd(Z):V
- f:setOpenTabsInMainWindow(Z):V
- f:setOverrideConsoleCycleBufferSize(Z):V
- f:setPinFindInPath(Z):V
- f:setPresentationMode(Z):V
- f:setPresentationModeFontSize(I):V
- f:setRecentFilesLimit(I):V
- f:setRecentLocationsLimit(I):V
- f:setRememberSizeForEachToolWindowNewUI(Z):V
- f:setRememberSizeForEachToolWindowOldUI(Z):V
- f:setReuseNotModifiedTabs(Z):V
- f:setRightHorizontalSplit(Z):V
- f:setScrollTabLayoutInEditor(Z):V
- f:setSeparateMainMenu(Z):V
- f:setShowBreakpointsOverLineNumbers(Z):V
- f:setShowCloseButton(Z):V
- f:setShowDirectoryForNonUniqueFilenames(Z):V
- f:setShowEditorToolTip(Z):V
- f:setShowFileIconInTabs(Z):V
- f:setShowIconsInMenus(Z):V
- f:setShowInplaceComments(Z):V
- f:setShowMainMenu(Z):V
- f:setShowMainToolbar(Z):V
- f:setShowMembersInNavigationBar(Z):V
- f:setShowNavigationBar(Z):V
- f:setShowNewMainToolbar(Z):V
- f:setShowPinnedTabsInASeparateRow(Z):V
- f:setShowPreviewInSearchEverywhere(Z):V
- f:setShowStatusBar(Z):V
- f:setShowTabsTooltips(Z):V
- f:setShowToolWindowsNames(Z):V
- f:setShowToolWindowsNumbers(Z):V
- f:setShowTreeIndentGuides(Z):V
- f:setShowVisualFormattingLayer(Z):V
- f:setShowWriteThreadIndicator(Z):V
- f:setSmoothScrolling(Z):V
- f:setSortBookmarks(Z):V
- f:setSortLookupElementsLexicographically(Z):V
- f:setSortTabsAlphabetically(Z):V
- f:setToolWindowLeftSideCustomWidth(I):V
- f:setToolWindowRightSideCustomWidth(I):V
- f:setUiDensity(com.intellij.ide.ui.UIDensity):V
- f:setUseContrastScrollBars(Z):V
- f:setUseSmallLabelsOnTabs(Z):V
- f:setWideScreenSupport(Z):V
f:com.intellij.ide.ui.UISettingsStateKt
- sf:getDefaultAnimatedScrollingDuration():I
f:com.intellij.ide.ui.UISettingsUtils
- sf:Companion:com.intellij.ide.ui.UISettingsUtils$Companion
- <init>(com.intellij.ide.ui.UISettings):V
- f:getCurrentDefaultScale():F
- f:getCurrentIdeScale():F
- sf:getInstance():com.intellij.ide.ui.UISettingsUtils
- f:getPresentationModeFontSize():F
- f:getScaledConsoleFontSize():F
- f:getScaledEditorFontSize():F
- sf:percentValue(F):I
- f:scaleFontSize(F):F
- sf:scaleFontSize(F,F):F
- f:setCurrentIdeScale(F):V
- f:setPresentationModeFontSize(F):V
- sf:with(com.intellij.ide.ui.UISettings):com.intellij.ide.ui.UISettingsUtils
f:com.intellij.ide.ui.UISettingsUtils$Companion
- f:defaultScale(Z):F
- f:getInstance():com.intellij.ide.ui.UISettingsUtils
- f:percentValue(F):I
- f:scaleFontSize(F,F):F
- f:with(com.intellij.ide.ui.UISettings):com.intellij.ide.ui.UISettingsUtils
f:com.intellij.ide.ui.UISettingsUtilsKt
- sf:getPercentStringValue(F):java.lang.String
- sf:getPercentValue(F):I
com.intellij.ide.util.ActionShortcutProvider
- a:getActionIdForShortcut():java.lang.String
com.intellij.ide.util.FileStructureFilter
- com.intellij.ide.util.treeView.smartTree.Filter
- a:getCheckBoxText():java.lang.String
- a:getShortcut():com.intellij.openapi.actionSystem.Shortcut[]
com.intellij.ide.util.FileStructureNodeProvider
- com.intellij.ide.util.treeView.smartTree.NodeProvider
- a:getCheckBoxText():java.lang.String
- a:getShortcut():com.intellij.openapi.actionSystem.Shortcut[]
a:com.intellij.ide.util.treeView.AbstractTreeNode
- com.intellij.ide.util.treeView.PresentableNodeDescriptor
- com.intellij.navigation.NavigationItem
- com.intellij.openapi.ui.Queryable$Contributor
- com.intellij.ui.tree.LeafState$Supplier
- psf:TREE_WRAPPER_VALUE:java.lang.Object
- p:<init>(com.intellij.openapi.project.Project,java.lang.Object):V
- p:appendInplaceComments(com.intellij.ide.util.treeView.InplaceCommentAppender):V
- apply(java.util.Map):V
- canRepresent(java.lang.Object):Z
- p:computeBackgroundColor():java.awt.Color
- equals(java.lang.Object):Z
- getChildToHighlightAt(I):com.intellij.ide.util.treeView.PresentableNodeDescriptor
- a:getChildren():java.util.Collection
- f:getElement():com.intellij.ide.util.treeView.AbstractTreeNode
- f:getEqualityObject():java.lang.Object
- getFileStatus():com.intellij.openapi.vcs.FileStatus
- getFileStatusColor(com.intellij.openapi.vcs.FileStatus):java.awt.Color
- getLeafState():com.intellij.ui.tree.LeafState
- getName():java.lang.String
- f:getParent():com.intellij.ide.util.treeView.AbstractTreeNode
- f:getParentDescriptor():com.intellij.ide.util.treeView.NodeDescriptor
- pf:getParentValue():java.lang.Object
- getTestPresentation():java.lang.String
- p:getToolTip():java.lang.String
- f:getValue():java.lang.Object
- p:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- p:hasProblemFileBeneath():Z
- hashCode():I
- isAlwaysExpand():Z
- isAlwaysLeaf():Z
- isAlwaysShowPlus():Z
- isAutoExpandAllowed():Z
- isIncludedInExpandAll():Z
- p:postprocess(com.intellij.ide.projectView.PresentationData):V
- p:recordValueSetTrace(Z):V
- f:setParent(com.intellij.ide.util.treeView.AbstractTreeNode):V
- f:setValue(java.lang.Object):V
- p:shouldUpdateData():Z
- toTestString(com.intellij.openapi.ui.Queryable$PrintInfo):java.lang.String
- p:valueIsCut():Z
a:com.intellij.ide.util.treeView.AbstractTreeStructure
- <init>():V
- asyncCommit():com.intellij.openapi.util.ActionCallback
- s:asyncCommitDocuments(com.intellij.openapi.project.Project):com.intellij.openapi.util.ActionCallback
- a:commit():V
- a:createDescriptor(java.lang.Object,com.intellij.ide.util.treeView.NodeDescriptor):com.intellij.ide.util.treeView.NodeDescriptor
- a:getChildElements(java.lang.Object):java.lang.Object[]
- getLeafState(java.lang.Object):com.intellij.ui.tree.LeafState
- a:getParentElement(java.lang.Object):java.lang.Object
- a:getRootElement():java.lang.Object
- a:hasSomethingToCommit():Z
- isAlwaysLeaf(java.lang.Object):Z
- isToBuildChildrenInBackground(java.lang.Object):Z
- isValid(java.lang.Object):Z
- revalidateElement(java.lang.Object):java.lang.Object
f:com.intellij.ide.util.treeView.AlphaComparator
- java.util.Comparator
- sf:INSTANCE:com.intellij.ide.util.treeView.AlphaComparator
- compare(com.intellij.ide.util.treeView.NodeDescriptor,com.intellij.ide.util.treeView.NodeDescriptor):I
- s:getInstance():com.intellij.ide.util.treeView.AlphaComparator
c:com.intellij.ide.util.treeView.FileNameComparator
- java.util.Comparator
- sf:INSTANCE:java.util.Comparator
- <init>():V
- compare(java.lang.String,java.lang.String):I
- s:getInstance():java.util.Comparator
f:com.intellij.ide.util.treeView.IndexComparator
- java.util.Comparator
- sf:INSTANCE:com.intellij.ide.util.treeView.IndexComparator
- compare(com.intellij.ide.util.treeView.NodeDescriptor,com.intellij.ide.util.treeView.NodeDescriptor):I
- s:getInstance():com.intellij.ide.util.treeView.IndexComparator
com.intellij.ide.util.treeView.InplaceCommentAppender
- a:append(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
a:com.intellij.ide.util.treeView.NodeDescriptor
- p:myClosedIcon:javax.swing.Icon
- p:myColor:java.awt.Color
- p:myName:java.lang.String
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.util.treeView.NodeDescriptor):V
- applyFrom(com.intellij.ide.util.treeView.NodeDescriptor):V
- expandOnDoubleClick():Z
- f:getChildrenSortingStamp():J
- f:getColor():java.awt.Color
- s:getDefaultWeight():I
- a:getElement():java.lang.Object
- s:getEmptyArray():com.intellij.ide.util.treeView.NodeDescriptor[]
- f:getIcon():javax.swing.Icon
- getIndex():I
- getParentDescriptor():com.intellij.ide.util.treeView.NodeDescriptor
- f:getProject():com.intellij.openapi.project.Project
- f:getUpdateCount():J
- getWeight():I
- isWasDeclaredAlwaysLeaf():Z
- f:setChildrenSortingStamp(J):V
- setIcon(javax.swing.Icon):V
- setIndex(I):V
- f:setUpdateCount(J):V
- setWasDeclaredAlwaysLeaf(Z):V
- a:update():Z
a:com.intellij.ide.util.treeView.NodeDescriptor$NodeComparator
- java.util.Comparator
- <init>():V
- getStamp():J
- incStamp():V
- f:setStamp(J):V
f:com.intellij.ide.util.treeView.NodeDescriptor$NodeComparator$Delegate
- com.intellij.ide.util.treeView.NodeDescriptor$NodeComparator
- <init>(com.intellij.ide.util.treeView.NodeDescriptor$NodeComparator):V
- compare(com.intellij.ide.util.treeView.NodeDescriptor,com.intellij.ide.util.treeView.NodeDescriptor):I
- getStamp():J
- incStamp():V
- setDelegate(com.intellij.ide.util.treeView.NodeDescriptor$NodeComparator):V
com.intellij.ide.util.treeView.NodeDescriptorProvidingKey
- a:getKey():java.lang.Object
com.intellij.ide.util.treeView.NodeOptions
- isAbbreviatePackageNames():Z
- isCompactDirectories():Z
- isFlattenPackages():Z
- isHideEmptyMiddlePackages():Z
- isShowLibraryContents():Z
c:com.intellij.ide.util.treeView.NodeOptions$Immutable
- com.intellij.ide.util.treeView.NodeOptions
- sf:DEFAULT:com.intellij.ide.util.treeView.NodeOptions
- <init>(com.intellij.ide.util.treeView.NodeOptions):V
- equals(java.lang.Object):Z
- hashCode():I
- isAbbreviatePackageNames():Z
- isCompactDirectories():Z
- isFlattenPackages():Z
- isHideEmptyMiddlePackages():Z
- isShowLibraryContents():Z
com.intellij.ide.util.treeView.PathElementIdProvider
- a:getPathElementId():java.lang.String
- getPathElementType():java.lang.String
a:com.intellij.ide.util.treeView.PresentableNodeDescriptor
- com.intellij.ide.util.treeView.NodeDescriptor
- p:<init>(com.intellij.openapi.project.Project,com.intellij.ide.util.treeView.NodeDescriptor):V
- pf:apply(com.intellij.ide.projectView.PresentationData):Z
- pf:apply(com.intellij.ide.projectView.PresentationData,com.intellij.ide.projectView.PresentationData):Z
- applyFrom(com.intellij.ide.util.treeView.NodeDescriptor):V
- p:computeBackgroundColor():java.awt.Color
- p:createPresentation():com.intellij.ide.projectView.PresentationData
- getChildToHighlightAt(I):com.intellij.ide.util.treeView.PresentableNodeDescriptor
- getHighlightColor():java.awt.Color
- getName():java.lang.String
- f:getPresentation():com.intellij.ide.projectView.PresentationData
- pf:getTemplatePresentation():com.intellij.ide.projectView.PresentationData
- isAncestorOrSelf(com.intellij.ide.util.treeView.NodeDescriptor):Z
- isContentHighlighted():Z
- isHighlightableContentNode(com.intellij.ide.util.treeView.PresentableNodeDescriptor):Z
- isParentOf(com.intellij.ide.util.treeView.NodeDescriptor):Z
- p:postprocess(com.intellij.ide.projectView.PresentationData):V
- p:shouldApply():Z
- p:shouldPostprocess():Z
- p:shouldUpdateData():Z
- f:update():Z
- pa:update(com.intellij.ide.projectView.PresentationData):V
c:com.intellij.ide.util.treeView.PresentableNodeDescriptor$ColoredFragment
- <init>(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- <init>(java.lang.String,java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- equals(java.lang.Object):Z
- getAttributes():com.intellij.ui.SimpleTextAttributes
- getText():java.lang.String
- getToolTip():java.lang.String
- hashCode():I
c:com.intellij.ide.util.treeView.TreeAnchorizer
- s:anchorizeList(java.util.Collection):java.util.List
- createAnchor(java.lang.Object):java.lang.Object
- freeAnchor(java.lang.Object):V
- s:getService():com.intellij.ide.util.treeView.TreeAnchorizer
- retrieveElement(java.lang.Object):java.lang.Object
- s:retrieveList(java.util.Collection):java.util.List
c:com.intellij.ide.util.treeView.TreeUpdatePass
- <init>(javax.swing.tree.DefaultMutableTreeNode):V
- addToUpdated(com.intellij.ide.util.treeView.NodeDescriptor):V
- expire():V
- getCurrentNode():javax.swing.tree.DefaultMutableTreeNode
- getNode():javax.swing.tree.DefaultMutableTreeNode
- getUpdateStamp():J
- isExpired():Z
- isUpdateChildren():Z
- isUpdateStructure():Z
- isUpdated(com.intellij.ide.util.treeView.NodeDescriptor):Z
- setCurrentNode(javax.swing.tree.DefaultMutableTreeNode):V
- setUpdateChildren(Z):com.intellij.ide.util.treeView.TreeUpdatePass
- setUpdateStamp(J):com.intellij.ide.util.treeView.TreeUpdatePass
- setUpdateStructure(Z):com.intellij.ide.util.treeView.TreeUpdatePass
- willUpdate(javax.swing.tree.DefaultMutableTreeNode):Z
com.intellij.ide.util.treeView.TreeVisitor
- a:visit(java.lang.Object):Z
com.intellij.ide.util.treeView.ValidateableNode
- a:isValid():Z
com.intellij.ide.util.treeView.WeighedItem
- a:getWeight():I
com.intellij.ide.util.treeView.smartTree.ActionPresentation
- a:getDescription():java.lang.String
- a:getIcon():javax.swing.Icon
- a:getText():java.lang.String
c:com.intellij.ide.util.treeView.smartTree.ActionPresentationData
- com.intellij.ide.util.treeView.smartTree.ActionPresentation
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- getDescription():java.lang.String
- getIcon():javax.swing.Icon
- getText():java.lang.String
com.intellij.ide.util.treeView.smartTree.Filter
- com.intellij.ide.util.treeView.smartTree.TreeAction
- sf:EMPTY_ARRAY:com.intellij.ide.util.treeView.smartTree.Filter[]
- a:isReverted():Z
- a:isVisible(com.intellij.ide.util.treeView.smartTree.TreeElement):Z
com.intellij.ide.util.treeView.smartTree.Group
- a:getChildren():java.util.Collection
- a:getPresentation():com.intellij.navigation.ItemPresentation
com.intellij.ide.util.treeView.smartTree.Grouper
- com.intellij.ide.util.treeView.smartTree.TreeAction
- sf:EMPTY_ARRAY:com.intellij.ide.util.treeView.smartTree.Grouper[]
- a:group(com.intellij.ide.util.treeView.AbstractTreeNode,java.util.Collection):java.util.Collection
com.intellij.ide.util.treeView.smartTree.NodeProvider
- com.intellij.ide.util.treeView.smartTree.TreeAction
- com.intellij.openapi.project.PossiblyDumbAware
- a:provideNodes(com.intellij.ide.util.treeView.smartTree.TreeElement):java.util.Collection
com.intellij.ide.util.treeView.smartTree.ProvidingTreeModel
- com.intellij.ide.util.treeView.smartTree.TreeModel
- a:getNodeProviders():java.util.Collection
- a:isEnabled(com.intellij.ide.util.treeView.smartTree.NodeProvider):Z
com.intellij.ide.util.treeView.smartTree.SortableTreeElement
- a:getAlphaSortKey():java.lang.String
com.intellij.ide.util.treeView.smartTree.Sorter
- com.intellij.ide.util.treeView.smartTree.TreeAction
- sf:ALPHA_SORTER:com.intellij.ide.util.treeView.smartTree.Sorter
- sf:EMPTY_ARRAY:com.intellij.ide.util.treeView.smartTree.Sorter[]
- s:getAlphaSorterId():java.lang.String
- a:getComparator():java.util.Comparator
- a:isVisible():Z
f:com.intellij.ide.util.treeView.smartTree.SorterUtil
- s:getStringPresentation(java.lang.Object):java.lang.String
com.intellij.ide.util.treeView.smartTree.TreeAction
- a:getName():java.lang.String
- a:getPresentation():com.intellij.ide.util.treeView.smartTree.ActionPresentation
com.intellij.ide.util.treeView.smartTree.TreeElement
- sf:EMPTY_ARRAY:com.intellij.ide.util.treeView.smartTree.TreeElement[]
- a:getChildren():com.intellij.ide.util.treeView.smartTree.TreeElement[]
- a:getPresentation():com.intellij.navigation.ItemPresentation
com.intellij.ide.util.treeView.smartTree.TreeModel
- a:getFilters():com.intellij.ide.util.treeView.smartTree.Filter[]
- a:getGroupers():com.intellij.ide.util.treeView.smartTree.Grouper[]
- a:getRoot():com.intellij.ide.util.treeView.smartTree.TreeElement
- a:getSorters():com.intellij.ide.util.treeView.smartTree.Sorter[]
com.intellij.injected.editor.InjectedFileChangesHandler
- com.intellij.openapi.Disposable
- a:commitToOriginal(com.intellij.openapi.editor.event.DocumentEvent):V
- a:handlesRange(com.intellij.openapi.util.TextRange):Z
- a:isValid():Z
- a:tryReuse(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):Z
com.intellij.injected.editor.InjectedFileChangesHandlerProvider
- a:createFileChangesHandler(java.util.List,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile):com.intellij.injected.editor.InjectedFileChangesHandler
f:com.intellij.lang.LanguageStructureViewBuilder
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageStructureViewBuilder
- s:getInstance():com.intellij.lang.LanguageStructureViewBuilder
- getStructureViewBuilder(com.intellij.psi.PsiFile):com.intellij.ide.structureView.StructureViewBuilder
com.intellij.lang.PsiStructureViewFactory
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getStructureViewBuilder(com.intellij.psi.PsiFile):com.intellij.ide.structureView.StructureViewBuilder
com.intellij.navigation.AnonymousElementProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getAnonymousElements(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement[]
a:com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.actionSystem.AnAction
- sf:EMPTY_GROUP:com.intellij.openapi.actionSystem.ActionGroup
- <init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,Z):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,java.util.function.Supplier):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- <init>(java.util.function.Supplier,Z):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- a:getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.actionSystem.ActionManager):com.intellij.openapi.actionSystem.AnAction[]
- f:isPopup():Z
- f:isPrimary(com.intellij.openapi.actionSystem.AnAction):Z
- f:isSearchable():Z
- postProcessVisibleChildren(com.intellij.openapi.actionSystem.AnActionEvent,java.util.List):java.util.List
- f:setPopup(Z):V
- f:setSearchable(Z):V
a:com.intellij.openapi.actionSystem.ActionManager
- a:addAnActionListener(com.intellij.openapi.actionSystem.ex.AnActionListener):V
- addAnActionListener(com.intellij.openapi.actionSystem.ex.AnActionListener,com.intellij.openapi.Disposable):V
- a:addTimerListener(com.intellij.openapi.actionSystem.TimerListener):V
- a:createActionPopupMenu(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup):com.intellij.openapi.actionSystem.ActionPopupMenu
- a:createActionToolbar(java.lang.String,com.intellij.openapi.actionSystem.ActionGroup,Z):com.intellij.openapi.actionSystem.ActionToolbar
- a:getAction(java.lang.String):com.intellij.openapi.actionSystem.AnAction
- a:getActionIdList(java.lang.String):java.util.List
- a:getActionIds(java.lang.String):java.lang.String[]
- a:getActionOrStub(java.lang.String):com.intellij.openapi.actionSystem.AnAction
- a:getId(com.intellij.openapi.actionSystem.AnAction):java.lang.String
- s:getInstance():com.intellij.openapi.actionSystem.ActionManager
- a:getKeyboardShortcut(java.lang.String):com.intellij.openapi.actionSystem.KeyboardShortcut
- a:isGroup(java.lang.String):Z
- a:registerAction(java.lang.String,com.intellij.openapi.actionSystem.AnAction):V
- a:registerAction(java.lang.String,com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.extensions.PluginId):V
- a:removeTimerListener(com.intellij.openapi.actionSystem.TimerListener):V
- a:replaceAction(java.lang.String,com.intellij.openapi.actionSystem.AnAction):V
- a:tryToExecute(com.intellij.openapi.actionSystem.AnAction,java.awt.event.InputEvent,java.awt.Component,java.lang.String,Z):com.intellij.openapi.util.ActionCallback
- a:unregisterAction(java.lang.String):V
com.intellij.openapi.actionSystem.ActionPopupMenu
- a:getActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- a:getComponent():javax.swing.JPopupMenu
- a:getPlace():java.lang.String
- a:setDataContext(java.util.function.Supplier):V
- a:setTargetComponent(javax.swing.JComponent):V
com.intellij.openapi.actionSystem.ActionToolbar
- sf:ACTION_BUTTON_CONSTRAINT:java.lang.String
- sf:ACTION_TOOLBAR_PROPERTY_KEY:java.lang.String
- sf:AUTO_LAYOUT_POLICY:I
- sf:CUSTOM_COMPONENT_CONSTRAINT:java.lang.String
- sf:DEFAULT_MINIMUM_BUTTON_SIZE:java.awt.Dimension
- sf:NAVBAR_MINIMUM_BUTTON_SIZE:java.awt.Dimension
- sf:NOWRAP_LAYOUT_POLICY:I
- sf:SECONDARY_ACTION_CONSTRAINT:java.lang.String
- sf:SECONDARY_ACTION_PROPERTY:java.lang.String
- sf:SEPARATOR_CONSTRAINT:java.lang.String
- sf:WRAP_LAYOUT_POLICY:I
- addListener(com.intellij.openapi.actionSystem.ActionToolbarListener,com.intellij.openapi.Disposable):V
- adjustTheSameSize(Z):V
- s:experimentalToolbarMinimumButtonSize():java.awt.Dimension
- s:findToolbarBy(java.awt.Component):com.intellij.openapi.actionSystem.ActionToolbar
- a:getActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- a:getActions():java.util.List
- a:getComponent():javax.swing.JComponent
- s:getDataContextFor(java.awt.Component):com.intellij.openapi.actionSystem.DataContext
- a:getLayoutStrategy():com.intellij.openapi.actionSystem.toolbarLayout.ToolbarLayoutStrategy
- a:getMaxButtonHeight():I
- a:getMinimumButtonSize():java.awt.Dimension
- a:getOrientation():I
- a:getPlace():java.lang.String
- a:getToolbarDataContext():com.intellij.openapi.actionSystem.DataContext
- a:hasVisibleActions():Z
- a:isReservePlaceAutoPopupIcon():Z
- setLayoutPolicy(I):V
- a:setLayoutSecondaryActions(Z):V
- a:setLayoutStrategy(com.intellij.openapi.actionSystem.toolbarLayout.ToolbarLayoutStrategy):V
- a:setMiniMode(Z):V
- a:setMinimumButtonSize(java.awt.Dimension):V
- a:setOrientation(I):V
- a:setReservePlaceAutoPopupIcon(Z):V
- a:setSecondaryActionsIcon(javax.swing.Icon):V
- a:setSecondaryActionsIcon(javax.swing.Icon,Z):V
- a:setSecondaryActionsShortcut(java.lang.String):V
- a:setSecondaryActionsTooltip(java.lang.String):V
- setShowSeparatorTitles(Z):V
- a:setTargetComponent(javax.swing.JComponent):V
- a:updateActionsAsync():java.util.concurrent.Future
- a:updateActionsImmediately():V
@:com.intellij.openapi.actionSystem.ActionToolbar$LayoutPolicy
- java.lang.annotation.Annotation
com.intellij.openapi.actionSystem.ActionToolbarListener
- java.util.EventListener
- actionsUpdated():V
com.intellij.openapi.actionSystem.ActionUiKind
- sf:Companion:com.intellij.openapi.actionSystem.ActionUiKind$Companion
- sf:MAIN_MENU:com.intellij.openapi.actionSystem.ActionUiKind$Popup
- sf:NONE:com.intellij.openapi.actionSystem.ActionUiKind
- sf:POPUP:com.intellij.openapi.actionSystem.ActionUiKind$Popup
- sf:SEARCH_POPUP:com.intellij.openapi.actionSystem.ActionUiKind$Popup
- sf:TOOLBAR:com.intellij.openapi.actionSystem.ActionUiKind$Toolbar
f:com.intellij.openapi.actionSystem.ActionUiKind$Companion
com.intellij.openapi.actionSystem.ActionUiKind$Popup
- com.intellij.openapi.actionSystem.ActionUiKind
- isMainMenu():Z
- isSearchPopup():Z
com.intellij.openapi.actionSystem.ActionUiKind$Toolbar
- com.intellij.openapi.actionSystem.ActionUiKind
- isHorizontal():Z
e:com.intellij.openapi.actionSystem.ActionUpdateThread
- java.lang.Enum
- sf:BGT:com.intellij.openapi.actionSystem.ActionUpdateThread
- sf:EDT:com.intellij.openapi.actionSystem.ActionUpdateThread
- s:valueOf(java.lang.String):com.intellij.openapi.actionSystem.ActionUpdateThread
- s:values():com.intellij.openapi.actionSystem.ActionUpdateThread[]
com.intellij.openapi.actionSystem.ActionUpdateThreadAware
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
com.intellij.openapi.actionSystem.ActionUpdateThreadAware$Recursive
- com.intellij.openapi.actionSystem.ActionUpdateThreadAware
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
a:com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ActionUpdateThreadAware
- com.intellij.openapi.project.PossiblyDumbAware
- sf:ACTIONS_KEY:com.intellij.openapi.util.Key
- sf:EMPTY_ARRAY:com.intellij.openapi.actionSystem.AnAction[]
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- <init>(java.util.function.Supplier,javax.swing.Icon):V
- <init>(javax.swing.Icon):V
- a:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- addSynonym(java.util.function.Supplier):V
- addTextOverride(java.lang.String,java.lang.String):V
- addTextOverride(java.lang.String,java.util.function.Supplier):V
- beforeActionPerformedUpdate(com.intellij.openapi.actionSystem.AnActionEvent):V
- f:copyFrom(com.intellij.openapi.actionSystem.AnAction):V
- f:copyShortcutFrom(com.intellij.openapi.actionSystem.AnAction):V
- displayTextInToolbar():Z
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getEventProject(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.project.Project
- f:getShortcutSet():com.intellij.openapi.actionSystem.ShortcutSet
- getSynonyms():java.util.List
- f:getTemplatePresentation():com.intellij.openapi.actionSystem.Presentation
- f:getTemplateText():java.lang.String
- isDumbAware():Z
- f:isEnabledInModalContext():Z
- isInInjectedContext():Z
- f:registerCustomShortcutSet(I,I,javax.swing.JComponent):V
- f:registerCustomShortcutSet(com.intellij.openapi.actionSystem.ShortcutSet,javax.swing.JComponent):V
- f:registerCustomShortcutSet(com.intellij.openapi.actionSystem.ShortcutSet,javax.swing.JComponent,com.intellij.openapi.Disposable):V
- f:registerCustomShortcutSet(javax.swing.JComponent,com.intellij.openapi.Disposable):V
- pf:setEnabledInModalContext(Z):V
- setInjectedContext(Z):V
- f:unregisterCustomShortcutSet(javax.swing.JComponent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- useSmallerFontForTextInToolbar():Z
c:com.intellij.openapi.actionSystem.AnActionEvent
- com.intellij.ui.PlaceProvider
- <init>(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.Presentation,java.lang.String,com.intellij.openapi.actionSystem.ActionUiKind,java.awt.event.InputEvent,I,com.intellij.openapi.actionSystem.ActionManager):V
- <init>(java.awt.event.InputEvent,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.ActionManager,I):V
- <init>(java.awt.event.InputEvent,com.intellij.openapi.actionSystem.DataContext,java.lang.String,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.ActionManager,I,Z,Z):V
- accept(com.intellij.openapi.actionSystem.AnActionEventVisitor):V
- s:createEvent(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.Presentation,java.lang.String,com.intellij.openapi.actionSystem.ActionUiKind,java.awt.event.InputEvent):com.intellij.openapi.actionSystem.AnActionEvent
- s:createEvent(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.Presentation,java.lang.String,com.intellij.openapi.actionSystem.ActionUiKind,java.awt.event.InputEvent):com.intellij.openapi.actionSystem.AnActionEvent
- s:createFromAnAction(com.intellij.openapi.actionSystem.AnAction,java.awt.event.InputEvent,java.lang.String,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.AnActionEvent
- s:createFromDataContext(java.lang.String,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.AnActionEvent
- s:createFromInputEvent(com.intellij.openapi.actionSystem.AnAction,java.awt.event.InputEvent,java.lang.String):com.intellij.openapi.actionSystem.AnActionEvent
- s:createFromInputEvent(java.awt.event.InputEvent,java.lang.String,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.AnActionEvent
- s:createFromInputEvent(java.awt.event.InputEvent,java.lang.String,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.DataContext,Z,Z):com.intellij.openapi.actionSystem.AnActionEvent
- f:getActionManager():com.intellij.openapi.actionSystem.ActionManager
- f:getData(com.intellij.openapi.actionSystem.DataKey):java.lang.Object
- f:getDataContext():com.intellij.openapi.actionSystem.DataContext
- s:getInjectedDataContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DataContext
- f:getInputEvent():java.awt.event.InputEvent
- f:getModifiers():I
- f:getPlace():java.lang.String
- f:getPresentation():com.intellij.openapi.actionSystem.Presentation
- f:getProject():com.intellij.openapi.project.Project
- f:getRequiredData(com.intellij.openapi.actionSystem.DataKey):java.lang.Object
- f:getUiKind():com.intellij.openapi.actionSystem.ActionUiKind
- f:getUpdateSession():com.intellij.openapi.actionSystem.UpdateSession
- f:isFromActionToolbar():Z
- f:isFromContextMenu():Z
- f:isFromMainMenu():Z
- f:isFromSearchPopup():Z
- f:isInInjectedContext():Z
- f:setInjectedContext(Z):V
- f:setUpdateSession(com.intellij.openapi.actionSystem.UpdateSession):V
- f:withDataContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.AnActionEvent
c:com.intellij.openapi.actionSystem.AnActionEventVisitor
- <init>():V
- visitEvent(com.intellij.openapi.actionSystem.AnActionEvent):V
- visitGestureFinishEvent(com.intellij.openapi.actionSystem.AnActionEvent):V
- visitGestureInitEvent(com.intellij.openapi.actionSystem.AnActionEvent):V
- visitGesturePerformedEvent(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.actionSystem.AnActionResult
- isIgnored():Z
- isPerformed():Z
c:com.intellij.openapi.actionSystem.CommonDataKeys
- sf:CARET:com.intellij.openapi.actionSystem.DataKey
- sf:EDITOR:com.intellij.openapi.actionSystem.DataKey
- sf:EDITOR_EVEN_IF_INACTIVE:com.intellij.openapi.actionSystem.DataKey
- sf:EDITOR_VIRTUAL_SPACE:com.intellij.openapi.actionSystem.DataKey
- sf:HOST_EDITOR:com.intellij.openapi.actionSystem.DataKey
- sf:LANGUAGE:com.intellij.openapi.actionSystem.DataKey
- sf:NAVIGATABLE:com.intellij.openapi.actionSystem.DataKey
- sf:NAVIGATABLE_ARRAY:com.intellij.openapi.actionSystem.DataKey
- sf:PROJECT:com.intellij.openapi.actionSystem.DataKey
- sf:PSI_ELEMENT:com.intellij.openapi.actionSystem.DataKey
- sf:PSI_FILE:com.intellij.openapi.actionSystem.DataKey
- sf:SYMBOLS:com.intellij.openapi.actionSystem.DataKey
- sf:VIRTUAL_FILE:com.intellij.openapi.actionSystem.DataKey
- sf:VIRTUAL_FILE_ARRAY:com.intellij.openapi.actionSystem.DataKey
- <init>():V
f:com.intellij.openapi.actionSystem.CustomShortcutSet
- com.intellij.openapi.actionSystem.ShortcutSet
- sf:EMPTY:com.intellij.openapi.actionSystem.CustomShortcutSet
- <init>(javax.swing.KeyStroke):V
- <init>(com.intellij.openapi.actionSystem.Shortcut[]):V
- <init>(java.lang.Integer[]):V
- s:fromString(java.lang.String[]):com.intellij.openapi.actionSystem.CustomShortcutSet
- s:fromStrings(java.util.Collection):com.intellij.openapi.actionSystem.CustomShortcutSet
- getShortcuts():com.intellij.openapi.actionSystem.Shortcut[]
- hasShortcuts():Z
c:com.intellij.openapi.actionSystem.CustomizedDataContext
- com.intellij.openapi.actionSystem.DataContext
- com.intellij.openapi.util.UserDataHolder
- sf:EXPLICIT_NULL:java.lang.Object
- <init>():V
- p:<init>(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.DataProvider,com.intellij.openapi.util.UserDataHolder):V
- p:<init>(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.DataProvider,Z):V
- p:<init>(com.intellij.openapi.actionSystem.DataContext,Z):V
- p:<init>(Z):V
- s:create(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.DataProvider):com.intellij.openapi.actionSystem.CustomizedDataContext
- F:getData(java.lang.String):java.lang.Object
- getInjectedDataContext():com.intellij.openapi.actionSystem.DataContext
- F:getParent():com.intellij.openapi.actionSystem.DataContext
- getRawCustomData(java.lang.String):java.lang.Object
- f:getUserData(com.intellij.openapi.util.Key):java.lang.Object
- f:putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- s:withProvider(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.DataProvider):com.intellij.openapi.actionSystem.DataContext
- s:withSnapshot(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.DataSnapshotProvider):com.intellij.openapi.actionSystem.DataContext
c:com.intellij.openapi.actionSystem.DataContextWrapper
- com.intellij.openapi.actionSystem.CustomizedDataContext
- <init>(com.intellij.openapi.actionSystem.DataContext):V
- getRawCustomData(java.lang.String):java.lang.Object
com.intellij.openapi.actionSystem.DynamicActionGroup
e:com.intellij.openapi.actionSystem.KeepPopupOnPerform
- java.lang.Enum
- sf:Always:com.intellij.openapi.actionSystem.KeepPopupOnPerform
- sf:IfPreferred:com.intellij.openapi.actionSystem.KeepPopupOnPerform
- sf:IfRequested:com.intellij.openapi.actionSystem.KeepPopupOnPerform
- sf:Never:com.intellij.openapi.actionSystem.KeepPopupOnPerform
- s:valueOf(java.lang.String):com.intellij.openapi.actionSystem.KeepPopupOnPerform
- s:values():com.intellij.openapi.actionSystem.KeepPopupOnPerform[]
f:com.intellij.openapi.actionSystem.KeyboardShortcut
- com.intellij.openapi.actionSystem.Shortcut
- <init>(javax.swing.KeyStroke,javax.swing.KeyStroke):V
- equals(java.lang.Object):Z
- s:fromString(java.lang.String):com.intellij.openapi.actionSystem.KeyboardShortcut
- getFirstKeyStroke():javax.swing.KeyStroke
- getSecondKeyStroke():javax.swing.KeyStroke
- hashCode():I
- isKeyboard():Z
- startsWith(com.intellij.openapi.actionSystem.Shortcut):Z
com.intellij.openapi.actionSystem.OverridingAction
f:com.intellij.openapi.actionSystem.Presentation
- java.lang.Cloneable
- sf:DEFAULT_WEIGHT:D
- sf:EVEN_HIGHER_WEIGHT:D
- sf:HIGHER_WEIGHT:D
- sf:NULL_STRING:java.util.function.Supplier
- sf:NULL_TEXT_WITH_MNEMONIC:java.util.function.Supplier
- sf:PROP_DESCRIPTION:java.lang.String
- sf:PROP_DISABLED_ICON:java.lang.String
- sf:PROP_ENABLED:java.lang.String
- sf:PROP_HOVERED_ICON:java.lang.String
- sf:PROP_ICON:java.lang.String
- sf:PROP_MNEMONIC_INDEX:java.lang.String
- sf:PROP_MNEMONIC_KEY:java.lang.String
- sf:PROP_SELECTED_ICON:java.lang.String
- sf:PROP_TEXT:java.lang.String
- sf:PROP_TEXT_WITH_SUFFIX:java.lang.String
- sf:PROP_VALUE:com.intellij.openapi.util.Key
- sf:PROP_VISIBLE:java.lang.String
- <init>():V
- <init>(java.lang.String):V
- <init>(java.util.function.Supplier):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- clone():com.intellij.openapi.actionSystem.Presentation
- copyFrom(com.intellij.openapi.actionSystem.Presentation):V
- copyFrom(com.intellij.openapi.actionSystem.Presentation,java.awt.Component):V
- copyFrom(com.intellij.openapi.actionSystem.Presentation,java.awt.Component,Z):V
- getClientProperty(com.intellij.openapi.util.Key):java.lang.Object
- getClientProperty(java.lang.String):java.lang.Object
- getDescription():java.lang.String
- getDisabledIcon():javax.swing.Icon
- getDisplayedMnemonicIndex():I
- getHoveredIcon():javax.swing.Icon
- getIcon():javax.swing.Icon
- getIconSupplier():java.util.function.Supplier
- getKeepPopupOnPerform():com.intellij.openapi.actionSystem.KeepPopupOnPerform
- getMnemonic():I
- getSelectedIcon():javax.swing.Icon
- getText():java.lang.String
- getText(Z):java.lang.String
- getTextWithMnemonic():java.lang.String
- getTextWithMnemonic(java.util.function.Supplier,Z):java.util.function.Supplier
- getTextWithPossibleMnemonic():java.util.function.Supplier
- getWeight():D
- isApplicationScope():Z
- isDisableGroupIfEmpty():Z
- isEnabled():Z
- isEnabledAndVisible():Z
- isHideGroupIfEmpty():Z
- isPerformGroup():Z
- isPopupGroup():Z
- isTemplate():Z
- isVisible():Z
- s:newTemplatePresentation():com.intellij.openapi.actionSystem.Presentation
- putClientProperty(com.intellij.openapi.util.Key,java.lang.Object):V
- putClientProperty(java.lang.String,java.lang.Object):V
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- restoreTextWithMnemonic(com.intellij.openapi.actionSystem.Presentation):V
- setApplicationScope(Z):V
- setDescription(java.lang.String):V
- setDescription(java.util.function.Supplier):V
- setDisableGroupIfEmpty(Z):V
- setDisabledIcon(javax.swing.Icon):V
- setEnabled(Z):V
- setEnabledAndVisible(Z):V
- setHideGroupIfEmpty(Z):V
- setHoveredIcon(javax.swing.Icon):V
- setIcon(javax.swing.Icon):V
- setIconSupplier(java.util.function.Supplier):V
- setKeepPopupOnPerform(com.intellij.openapi.actionSystem.KeepPopupOnPerform):V
- setPerformGroup(Z):V
- setPopupGroup(Z):V
- setSelectedIcon(javax.swing.Icon):V
- setText(java.lang.String):V
- setText(java.lang.String,Z):V
- setText(java.util.function.Supplier):V
- setText(java.util.function.Supplier,Z):V
- setTextWithMnemonic(java.util.function.Supplier):V
- setVisible(Z):V
- setWeight(D):V
com.intellij.openapi.actionSystem.RightAlignedToolbarAction
a:com.intellij.openapi.actionSystem.Shortcut
- sf:EMPTY_ARRAY:com.intellij.openapi.actionSystem.Shortcut[]
- <init>():V
- a:isKeyboard():Z
- a:startsWith(com.intellij.openapi.actionSystem.Shortcut):Z
com.intellij.openapi.actionSystem.ShortcutSet
- a:getShortcuts():com.intellij.openapi.actionSystem.Shortcut[]
- hasShortcuts():Z
com.intellij.openapi.actionSystem.TimerListener
- a:getModalityState():com.intellij.openapi.application.ModalityState
- a:run():V
com.intellij.openapi.actionSystem.UpdateInBackground
- isUpdateInBackground():Z
- s:isUpdateInBackground(com.intellij.openapi.actionSystem.AnAction):Z
com.intellij.openapi.actionSystem.UpdateSession
- sf:EMPTY:com.intellij.openapi.actionSystem.UpdateSession
- children(com.intellij.openapi.actionSystem.ActionGroup):java.util.List
- compute(java.lang.Object,java.lang.String,com.intellij.openapi.actionSystem.ActionUpdateThread,java.util.function.Supplier):java.lang.Object
- expandedChildren(com.intellij.openapi.actionSystem.ActionGroup):java.lang.Iterable
- presentation(com.intellij.openapi.actionSystem.AnAction):com.intellij.openapi.actionSystem.Presentation
- sharedData(com.intellij.openapi.util.Key,java.util.function.Supplier):java.lang.Object
com.intellij.openapi.actionSystem.ex.AnActionListener
- sf:TOPIC:com.intellij.util.messages.Topic
- afterActionPerformed(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.actionSystem.AnActionResult):V
- afterActionPerformed(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.AnActionEvent):V
- afterEditorTyping(C,com.intellij.openapi.actionSystem.DataContext):V
- beforeActionPerformed(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent):V
- beforeActionPerformed(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.AnActionEvent):V
- beforeEditorTyping(C,com.intellij.openapi.actionSystem.DataContext):V
- beforeShortcutTriggered(com.intellij.openapi.actionSystem.Shortcut,java.util.List,com.intellij.openapi.actionSystem.DataContext):V
com.intellij.openapi.actionSystem.ex.CustomComponentAction
- sf:ACTION_KEY:com.intellij.openapi.util.Key
- sf:COMPONENT_KEY:com.intellij.openapi.util.Key
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation):javax.swing.JComponent
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- updateCustomComponent(javax.swing.JComponent,com.intellij.openapi.actionSystem.Presentation):V
com.intellij.openapi.actionSystem.ex.InlineActionsHolder
- getInlineActions():java.util.List
com.intellij.openapi.actionSystem.ex.MainMenuPresentationAware
- a:alwaysShowIconInMainMenu():Z
com.intellij.openapi.actionSystem.remoting.ActionWithMergeId
- getMergeId():java.lang.String
com.intellij.openapi.actionSystem.toolbarLayout.ToolbarLayoutStrategy
- sf:AUTOLAYOUT_STRATEGY:com.intellij.openapi.actionSystem.toolbarLayout.ToolbarLayoutStrategy
- sf:COMPRESSING_STRATEGY:com.intellij.openapi.actionSystem.toolbarLayout.ToolbarLayoutStrategy
- sf:NOWRAP_STRATEGY:com.intellij.openapi.actionSystem.toolbarLayout.ToolbarLayoutStrategy
- sf:WRAP_STRATEGY:com.intellij.openapi.actionSystem.toolbarLayout.ToolbarLayoutStrategy
- a:calcMinimumSize(com.intellij.openapi.actionSystem.ActionToolbar):java.awt.Dimension
- a:calcPreferredSize(com.intellij.openapi.actionSystem.ActionToolbar):java.awt.Dimension
- a:calculateBounds(com.intellij.openapi.actionSystem.ActionToolbar):java.util.List
com.intellij.openapi.editor.BlockInlayPriority
- sf:ANNOTATIONS:I
- sf:CODE_AUTHOR:I
- sf:CODE_VISION_INHERITORS:I
- sf:CODE_VISION_USAGES:I
- sf:DOC_RENDER:I
- sf:PROBLEMS:I
com.intellij.openapi.editor.Caret
- com.intellij.openapi.Disposable
- com.intellij.openapi.util.UserDataHolderEx
- a:clone(Z):com.intellij.openapi.editor.Caret
- a:getCaretModel():com.intellij.openapi.editor.CaretModel
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getLeadSelectionOffset():I
- a:getLeadSelectionPosition():com.intellij.openapi.editor.VisualPosition
- a:getLogicalPosition():com.intellij.openapi.editor.LogicalPosition
- a:getOffset():I
- a:getSelectedText():java.lang.String
- a:getSelectionEnd():I
- a:getSelectionEndPosition():com.intellij.openapi.editor.VisualPosition
- getSelectionRange():com.intellij.openapi.util.TextRange
- a:getSelectionStart():I
- a:getSelectionStartPosition():com.intellij.openapi.editor.VisualPosition
- a:getVisualAttributes():com.intellij.openapi.editor.CaretVisualAttributes
- a:getVisualLineEnd():I
- a:getVisualLineStart():I
- a:getVisualPosition():com.intellij.openapi.editor.VisualPosition
- a:hasSelection():Z
- a:isAtBidiRunBoundary():Z
- a:isAtRtlLocation():Z
- a:isUpToDate():Z
- a:isValid():Z
- a:moveCaretRelatively(I,I,Z,Z):V
- a:moveToLogicalPosition(com.intellij.openapi.editor.LogicalPosition):V
- a:moveToOffset(I):V
- a:moveToOffset(I,Z):V
- a:moveToVisualPosition(com.intellij.openapi.editor.VisualPosition):V
- a:removeSelection():V
- a:selectLineAtCaret():V
- a:selectWordAtCaret(Z):V
- a:setSelection(I,I):V
- a:setSelection(I,I,Z):V
- a:setSelection(I,com.intellij.openapi.editor.VisualPosition,I):V
- a:setSelection(com.intellij.openapi.editor.VisualPosition,I,com.intellij.openapi.editor.VisualPosition,I):V
- a:setSelection(com.intellij.openapi.editor.VisualPosition,I,com.intellij.openapi.editor.VisualPosition,I,Z):V
- a:setVisualAttributes(com.intellij.openapi.editor.CaretVisualAttributes):V
com.intellij.openapi.editor.CaretAction
- a:perform(com.intellij.openapi.editor.Caret):V
com.intellij.openapi.editor.CaretActionListener
- java.util.EventListener
- afterAllCaretsAction():V
- beforeAllCaretsAction():V
com.intellij.openapi.editor.CaretModel
- a:addCaret(com.intellij.openapi.editor.LogicalPosition,Z):com.intellij.openapi.editor.Caret
- addCaret(com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.editor.Caret
- a:addCaret(com.intellij.openapi.editor.VisualPosition,Z):com.intellij.openapi.editor.Caret
- a:addCaretActionListener(com.intellij.openapi.editor.CaretActionListener,com.intellij.openapi.Disposable):V
- a:addCaretListener(com.intellij.openapi.editor.event.CaretListener):V
- addCaretListener(com.intellij.openapi.editor.event.CaretListener,com.intellij.openapi.Disposable):V
- a:getAllCarets():java.util.List
- a:getCaretAt(com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.editor.Caret
- a:getCaretCount():I
- a:getCaretsAndSelections():java.util.List
- a:getCurrentCaret():com.intellij.openapi.editor.Caret
- getLogicalPosition():com.intellij.openapi.editor.LogicalPosition
- a:getMaxCaretCount():I
- getOffset():I
- a:getPrimaryCaret():com.intellij.openapi.editor.Caret
- a:getTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
- getVisualLineEnd():I
- getVisualLineStart():I
- getVisualPosition():com.intellij.openapi.editor.VisualPosition
- isUpToDate():Z
- moveCaretRelatively(I,I,Z,Z,Z):V
- moveToLogicalPosition(com.intellij.openapi.editor.LogicalPosition):V
- moveToOffset(I):V
- moveToOffset(I,Z):V
- moveToVisualPosition(com.intellij.openapi.editor.VisualPosition):V
- a:removeCaret(com.intellij.openapi.editor.Caret):Z
- a:removeCaretListener(com.intellij.openapi.editor.event.CaretListener):V
- a:removeSecondaryCarets():V
- a:runBatchCaretOperation(java.lang.Runnable):V
- a:runForEachCaret(com.intellij.openapi.editor.CaretAction):V
- a:runForEachCaret(com.intellij.openapi.editor.CaretAction,Z):V
- a:setCaretsAndSelections(java.util.List):V
- a:setCaretsAndSelections(java.util.List,Z):V
- a:supportsMultipleCarets():Z
c:com.intellij.openapi.editor.CaretState
- <init>(com.intellij.openapi.editor.LogicalPosition,I,com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.LogicalPosition):V
- <init>(com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.LogicalPosition):V
- getCaretPosition():com.intellij.openapi.editor.LogicalPosition
- getSelectionEnd():com.intellij.openapi.editor.LogicalPosition
- getSelectionStart():com.intellij.openapi.editor.LogicalPosition
- getVisualColumnAdjustment():I
f:com.intellij.openapi.editor.CaretVisualAttributes
- sf:DEFAULT:com.intellij.openapi.editor.CaretVisualAttributes
- <init>(java.awt.Color,com.intellij.openapi.editor.CaretVisualAttributes$Weight):V
- <init>(java.awt.Color,com.intellij.openapi.editor.CaretVisualAttributes$Weight,com.intellij.openapi.editor.CaretVisualAttributes$Shape,F):V
- getColor():java.awt.Color
- s:getDefault():com.intellij.openapi.editor.CaretVisualAttributes
- getShape():com.intellij.openapi.editor.CaretVisualAttributes$Shape
- getThickness():F
- getWeight():com.intellij.openapi.editor.CaretVisualAttributes$Weight
- getWidth(I):I
e:com.intellij.openapi.editor.CaretVisualAttributes$Shape
- java.lang.Enum
- sf:BAR:com.intellij.openapi.editor.CaretVisualAttributes$Shape
- sf:BLOCK:com.intellij.openapi.editor.CaretVisualAttributes$Shape
- sf:BOX:com.intellij.openapi.editor.CaretVisualAttributes$Shape
- sf:DEFAULT:com.intellij.openapi.editor.CaretVisualAttributes$Shape
- sf:UNDERSCORE:com.intellij.openapi.editor.CaretVisualAttributes$Shape
- s:valueOf(java.lang.String):com.intellij.openapi.editor.CaretVisualAttributes$Shape
- s:values():com.intellij.openapi.editor.CaretVisualAttributes$Shape[]
e:com.intellij.openapi.editor.CaretVisualAttributes$Weight
- java.lang.Enum
- sf:HEAVY:com.intellij.openapi.editor.CaretVisualAttributes$Weight
- sf:NORMAL:com.intellij.openapi.editor.CaretVisualAttributes$Weight
- sf:THIN:com.intellij.openapi.editor.CaretVisualAttributes$Weight
- getDelta():I
- s:valueOf(java.lang.String):com.intellij.openapi.editor.CaretVisualAttributes$Weight
- s:values():com.intellij.openapi.editor.CaretVisualAttributes$Weight[]
f:com.intellij.openapi.editor.DefaultLanguageHighlighterColors
- sf:BLOCK_COMMENT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:BRACES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:BRACKETS:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CLASS_NAME:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CLASS_REFERENCE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:COMMA:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CONSTANT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOC_CODE_BLOCK:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOC_CODE_INLINE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOC_COMMENT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOC_COMMENT_GUIDE:com.intellij.openapi.editor.colors.ColorKey
- sf:DOC_COMMENT_LINK:com.intellij.openapi.editor.colors.ColorKey
- sf:DOC_COMMENT_MARKUP:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOC_COMMENT_TAG:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOC_COMMENT_TAG_VALUE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOC_TIPS_SHORTCUT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:FUNCTION_CALL:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:FUNCTION_DECLARATION:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:GLOBAL_VARIABLE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:HIGHLIGHTED_REFERENCE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:IDENTIFIER:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INLAY_DEFAULT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INLAY_TEXT_WITHOUT_BACKGROUND:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INLINE_PARAMETER_HINT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INLINE_PARAMETER_HINT_CURRENT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INLINE_PARAMETER_HINT_HIGHLIGHTED:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INLINE_REFACTORING_SETTINGS_DEFAULT:com.intellij.openapi.editor.colors.ColorKey
- sf:INLINE_REFACTORING_SETTINGS_FOCUSED:com.intellij.openapi.editor.colors.ColorKey
- sf:INLINE_REFACTORING_SETTINGS_HOVERED:com.intellij.openapi.editor.colors.ColorKey
- sf:INLINE_SUGGESTION:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INSTANCE_FIELD:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INSTANCE_METHOD:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INTERFACE_NAME:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INVALID_STRING_ESCAPE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:KEYWORD:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:LABEL:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:LINE_COMMENT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:LOCAL_VARIABLE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:MARKUP_ATTRIBUTE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:MARKUP_ENTITY:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:MARKUP_TAG:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:METADATA:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:NUMBER:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:OPERATION_SIGN:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:PARAMETER:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:PARENTHESES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:PREDEFINED_SYMBOL:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:REASSIGNED_LOCAL_VARIABLE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:REASSIGNED_PARAMETER:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:SEMICOLON:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:STATIC_FIELD:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:STATIC_METHOD:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:STRING:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:TEMPLATE_LANGUAGE_COLOR:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:VALID_STRING_ESCAPE:com.intellij.openapi.editor.colors.TextAttributesKey
- <init>():V
com.intellij.openapi.editor.Editor
- com.intellij.openapi.util.UserDataHolder
- sf:EMPTY_ARRAY:com.intellij.openapi.editor.Editor[]
- a:addEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- addEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener,com.intellij.openapi.Disposable):V
- a:addEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- addEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener,com.intellij.openapi.Disposable):V
- calculateVisibleRange():com.intellij.openapi.util.ProperTextRange
- getAscent():I
- a:getCaretModel():com.intellij.openapi.editor.CaretModel
- a:getColorsScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- a:getComponent():javax.swing.JComponent
- a:getContentComponent():javax.swing.JComponent
- a:getDocument():com.intellij.openapi.editor.Document
- a:getEditorKind():com.intellij.openapi.editor.EditorKind
- a:getFoldingModel():com.intellij.openapi.editor.FoldingModel
- a:getGutter():com.intellij.openapi.editor.EditorGutter
- a:getHeaderComponent():javax.swing.JComponent
- getHighlighter():com.intellij.openapi.editor.highlighter.EditorHighlighter
- a:getIndentsModel():com.intellij.openapi.editor.IndentsModel
- a:getInlayModel():com.intellij.openapi.editor.InlayModel
- a:getInsets():java.awt.Insets
- a:getLineHeight():I
- a:getMarkupModel():com.intellij.openapi.editor.markup.MarkupModel
- a:getMouseEventArea(java.awt.event.MouseEvent):com.intellij.openapi.editor.event.EditorMouseEventArea
- a:getProject():com.intellij.openapi.project.Project
- a:getScrollingModel():com.intellij.openapi.editor.ScrollingModel
- a:getSelectionModel():com.intellij.openapi.editor.SelectionModel
- a:getSettings():com.intellij.openapi.editor.EditorSettings
- a:getSoftWrapModel():com.intellij.openapi.editor.SoftWrapModel
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- a:hasHeaderComponent():Z
- a:isColumnMode():Z
- a:isDisposed():Z
- a:isInsertMode():Z
- a:isOneLineMode():Z
- a:isViewer():Z
- a:logicalPositionToOffset(com.intellij.openapi.editor.LogicalPosition):I
- a:logicalPositionToXY(com.intellij.openapi.editor.LogicalPosition):java.awt.Point
- a:logicalToVisualPosition(com.intellij.openapi.editor.LogicalPosition):com.intellij.openapi.editor.VisualPosition
- a:offsetToLogicalPosition(I):com.intellij.openapi.editor.LogicalPosition
- offsetToPoint2D(I):java.awt.geom.Point2D
- offsetToPoint2D(I,Z,Z):java.awt.geom.Point2D
- offsetToVisualLine(I,Z):I
- a:offsetToVisualPosition(I):com.intellij.openapi.editor.VisualPosition
- a:offsetToVisualPosition(I,Z,Z):com.intellij.openapi.editor.VisualPosition
- offsetToXY(I):java.awt.Point
- offsetToXY(I,Z,Z):java.awt.Point
- a:removeEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- a:removeEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- a:setBorder(javax.swing.border.Border):V
- a:setHeaderComponent(javax.swing.JComponent):V
- visualLineToY(I):I
- visualLineToYRange(I):I[]
- visualPositionToOffset(com.intellij.openapi.editor.VisualPosition):I
- a:visualPositionToPoint2D(com.intellij.openapi.editor.VisualPosition):java.awt.geom.Point2D
- a:visualPositionToXY(com.intellij.openapi.editor.VisualPosition):java.awt.Point
- a:visualToLogicalPosition(com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.editor.LogicalPosition
- a:xyToLogicalPosition(java.awt.Point):com.intellij.openapi.editor.LogicalPosition
- a:xyToVisualPosition(java.awt.Point):com.intellij.openapi.editor.VisualPosition
- a:xyToVisualPosition(java.awt.geom.Point2D):com.intellij.openapi.editor.VisualPosition
- yToVisualLine(I):I
f:com.intellij.openapi.editor.EditorCoreUtil
- s:createEmptyHighlighter(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):com.intellij.openapi.editor.highlighter.EditorHighlighter
- s:inVirtualSpace(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.LogicalPosition):Z
- s:indentLine(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,I,I,Z):I
- s:indentLine(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,I,Z):V
- s:isTrueSmoothScrollingEnabled():Z
com.intellij.openapi.editor.EditorCustomElementRenderer
- calcGutterIconRenderer(com.intellij.openapi.editor.Inlay):com.intellij.openapi.editor.markup.GutterIconRenderer
- calcHeightInPixels(com.intellij.openapi.editor.Inlay):I
- a:calcWidthInPixels(com.intellij.openapi.editor.Inlay):I
- getContextMenuGroup(com.intellij.openapi.editor.Inlay):com.intellij.openapi.actionSystem.ActionGroup
- getContextMenuGroupId(com.intellij.openapi.editor.Inlay):java.lang.String
- paint(com.intellij.openapi.editor.Inlay,java.awt.Graphics2D,java.awt.geom.Rectangle2D,com.intellij.openapi.editor.markup.TextAttributes):V
- paint(com.intellij.openapi.editor.Inlay,java.awt.Graphics,java.awt.Rectangle,com.intellij.openapi.editor.markup.TextAttributes):V
Fa:com.intellij.openapi.editor.EditorFactory
- <init>():V
- a:addEditorFactoryListener(com.intellij.openapi.editor.event.EditorFactoryListener):V
- a:addEditorFactoryListener(com.intellij.openapi.editor.event.EditorFactoryListener,com.intellij.openapi.Disposable):V
- a:createDocument(java.lang.CharSequence):com.intellij.openapi.editor.Document
- a:createDocument(C[]):com.intellij.openapi.editor.Document
- a:createEditor(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.Editor
- a:createEditor(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):com.intellij.openapi.editor.Editor
- a:createEditor(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.editor.EditorKind):com.intellij.openapi.editor.Editor
- a:createEditor(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,Z):com.intellij.openapi.editor.Editor
- a:createEditor(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.editor.Editor
- a:createEditor(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z,com.intellij.openapi.editor.EditorKind):com.intellij.openapi.editor.Editor
- a:createViewer(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.Editor
- a:createViewer(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):com.intellij.openapi.editor.Editor
- a:createViewer(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.openapi.editor.EditorKind):com.intellij.openapi.editor.Editor
- f:editors(com.intellij.openapi.editor.Document):java.util.stream.Stream
- a:editors(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):java.util.stream.Stream
- a:getAllEditors():com.intellij.openapi.editor.Editor[]
- a:getEditorList():java.util.List
- f:getEditors(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.Editor[]
- f:getEditors(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):com.intellij.openapi.editor.Editor[]
- a:getEventMulticaster():com.intellij.openapi.editor.event.EditorEventMulticaster
- s:getInstance():com.intellij.openapi.editor.EditorFactory
- a:refreshAllEditors():V
- a:releaseEditor(com.intellij.openapi.editor.Editor):V
- a:removeEditorFactoryListener(com.intellij.openapi.editor.event.EditorFactoryListener):V
com.intellij.openapi.editor.EditorGutter
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- a:closeAllAnnotations():V
- a:closeTextAnnotations(java.util.Collection):V
- a:getTextAnnotations():java.util.List
- a:isAnnotationsShown():Z
- a:registerTextAnnotation(com.intellij.openapi.editor.TextAnnotationGutterProvider):V
- a:registerTextAnnotation(com.intellij.openapi.editor.TextAnnotationGutterProvider,com.intellij.openapi.editor.EditorGutterAction):V
- setLineNumberConverter(com.intellij.openapi.editor.LineNumberConverter):V
- a:setLineNumberConverter(com.intellij.openapi.editor.LineNumberConverter,com.intellij.openapi.editor.LineNumberConverter):V
com.intellij.openapi.editor.EditorGutterAction
- a:doAction(I):V
- a:getCursor(I):java.awt.Cursor
e:com.intellij.openapi.editor.EditorKind
- java.lang.Enum
- sf:CONSOLE:com.intellij.openapi.editor.EditorKind
- sf:DIFF:com.intellij.openapi.editor.EditorKind
- sf:MAIN_EDITOR:com.intellij.openapi.editor.EditorKind
- sf:PREVIEW:com.intellij.openapi.editor.EditorKind
- sf:UNTYPED:com.intellij.openapi.editor.EditorKind
- s:valueOf(java.lang.String):com.intellij.openapi.editor.EditorKind
- s:values():com.intellij.openapi.editor.EditorKind[]
com.intellij.openapi.editor.EditorSettings
- a:areGutterIconsShown():Z
- a:areStickyLinesShown():Z
- a:getAdditionalColumnsCount():I
- a:getAdditionalLinesCount():I
- a:getCaretBlinkPeriod():I
- a:getCustomSoftWrapIndent():I
- a:getHorizontalScrollJump():I
- a:getHorizontalScrollOffset():I
- a:getLineCursorWidth():I
- a:getLineNumerationType():com.intellij.openapi.editor.EditorSettings$LineNumerationType
- a:getRightMargin(com.intellij.openapi.project.Project):I
- a:getSoftMargins():java.util.List
- a:getStickyLinesLimit():I
- a:getTabSize(com.intellij.openapi.project.Project):I
- a:getVerticalScrollJump():I
- a:getVerticalScrollOffset():I
- a:isAdditionalPageAtBottom():Z
- a:isAllSoftWrapsShown():Z
- a:isAllowSingleLogicalLineFolding():Z
- a:isAnimatedScrolling():Z
- a:isAutoCodeFoldingEnabled():Z
- a:isBlinkCaret():Z
- a:isBlockCursor():Z
- a:isCamelWords():Z
- a:isCaretInsideTabs():Z
- a:isCaretRowShown():Z
- a:isDndEnabled():Z
- a:isFoldingOutlineShown():Z
- a:isFullLineHeightCursor():Z
- a:isHighlightSelectionOccurrences():Z
- a:isIndentGuidesShown():Z
- a:isInnerWhitespaceShown():Z
- a:isInsertParenthesesAutomatically():Z
- a:isLeadingWhitespaceShown():Z
- a:isLineMarkerAreaShown():Z
- a:isLineNumbersAfterIcons():Z
- a:isLineNumbersShown():Z
- a:isMouseClickSelectionHonorsCamelWords():Z
- isPaintSoftWraps():Z
- a:isPreselectRename():Z
- a:isRefrainFromScrolling():Z
- a:isRightMarginShown():Z
- a:isSelectionWhitespaceShown():Z
- a:isShowIntentionBulb():Z
- a:isShowingSpecialChars():Z
- a:isSmartHome():Z
- a:isTrailingWhitespaceShown():Z
- a:isUseCustomSoftWrapIndent():Z
- a:isUseSoftWraps():Z
- a:isUseTabCharacter(com.intellij.openapi.project.Project):Z
- a:isVariableInplaceRenameEnabled():Z
- a:isVirtualSpace():Z
- a:isWheelFontChangeEnabled():Z
- a:isWhitespacesShown():Z
- a:isWrapWhenTypingReachesRightMargin(com.intellij.openapi.project.Project):Z
- a:resetCamelWords():V
- a:resetWheelFontChangeEnabled():V
- a:setAdditionalColumnsCount(I):V
- a:setAdditionalLinesCount(I):V
- a:setAdditionalPageAtBottom(Z):V
- a:setAllowSingleLogicalLineFolding(Z):V
- a:setAnimatedScrolling(Z):V
- a:setAutoCodeFoldingEnabled(Z):V
- a:setBlinkCaret(Z):V
- a:setBlockCursor(Z):V
- a:setCamelWords(Z):V
- a:setCaretBlinkPeriod(I):V
- a:setCaretInsideTabs(Z):V
- a:setCaretRowShown(Z):V
- a:setCustomSoftWrapIndent(I):V
- a:setDndEnabled(Z):V
- a:setFoldingOutlineShown(Z):V
- a:setFullLineHeightCursor(Z):V
- a:setGutterIconsShown(Z):V
- a:setHighlightSelectionOccurrences(Z):V
- a:setHorizontalScrollJump(I):V
- a:setHorizontalScrollOffset(I):V
- a:setIndentGuidesShown(Z):V
- a:setInnerWhitespaceShown(Z):V
- a:setLanguageSupplier(java.util.function.Supplier):V
- a:setLeadingWhitespaceShown(Z):V
- a:setLineCursorWidth(I):V
- a:setLineMarkerAreaShown(Z):V
- a:setLineNumbersAfterIcons(Z):V
- a:setLineNumbersShown(Z):V
- a:setLineNumerationType(com.intellij.openapi.editor.EditorSettings$LineNumerationType):V
- a:setMouseClickSelectionHonorsCamelWords(Z):V
- setPaintSoftWraps(Z):V
- a:setPreselectRename(Z):V
- a:setRefrainFromScrolling(Z):V
- a:setRightMargin(I):V
- a:setRightMarginShown(Z):V
- a:setSelectionWhitespaceShown(Z):V
- a:setShowIntentionBulb(Z):V
- a:setShowingSpecialChars(Z):V
- a:setSmartHome(Z):V
- a:setSoftMargins(java.util.List):V
- a:setTabSize(I):V
- a:setTrailingWhitespaceShown(Z):V
- a:setUseCustomSoftWrapIndent(Z):V
- a:setUseSoftWraps(Z):V
- a:setUseTabCharacter(Z):V
- a:setVariableInplaceRenameEnabled(Z):V
- a:setVerticalScrollJump(I):V
- a:setVerticalScrollOffset(I):V
- a:setVirtualSpace(Z):V
- a:setWheelFontChangeEnabled(Z):V
- a:setWhitespacesShown(Z):V
- a:setWrapWhenTypingReachesRightMargin(Z):V
e:com.intellij.openapi.editor.EditorSettings$LineNumerationType
- java.lang.Enum
- sf:ABSOLUTE:com.intellij.openapi.editor.EditorSettings$LineNumerationType
- sf:HYBRID:com.intellij.openapi.editor.EditorSettings$LineNumerationType
- sf:RELATIVE:com.intellij.openapi.editor.EditorSettings$LineNumerationType
- s:valueOf(java.lang.String):com.intellij.openapi.editor.EditorSettings$LineNumerationType
- s:values():com.intellij.openapi.editor.EditorSettings$LineNumerationType[]
com.intellij.openapi.editor.FoldRegion
- com.intellij.openapi.editor.RangeMarker
- sf:EMPTY_ARRAY:com.intellij.openapi.editor.FoldRegion[]
- areInnerHighlightersMuted():Z
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getGroup():com.intellij.openapi.editor.FoldingGroup
- a:getPlaceholderText():java.lang.String
- a:isExpanded():Z
- isGutterMarkEnabledForSingleLine():Z
- a:setExpanded(Z):V
- setGutterMarkEnabledForSingleLine(Z):V
- setInnerHighlightersMuted(Z):V
- setPlaceholderText(java.lang.String):V
- a:shouldNeverExpand():Z
com.intellij.openapi.editor.FoldingModel
- a:addFoldRegion(I,I,java.lang.String):com.intellij.openapi.editor.FoldRegion
- a:getAllFoldRegions():com.intellij.openapi.editor.FoldRegion[]
- a:getCollapsedRegionAtOffset(I):com.intellij.openapi.editor.FoldRegion
- a:getFoldRegion(I,I):com.intellij.openapi.editor.FoldRegion
- a:isOffsetCollapsed(I):Z
- a:removeFoldRegion(com.intellij.openapi.editor.FoldRegion):V
- runBatchFoldingOperation(java.lang.Runnable):V
- a:runBatchFoldingOperation(java.lang.Runnable,Z):V
- a:runBatchFoldingOperation(java.lang.Runnable,Z,Z):V
- runBatchFoldingOperationDoNotCollapseCaret(java.lang.Runnable):V
com.intellij.openapi.editor.GutterMarkPreprocessor
- a:processMarkers(java.util.List):java.util.List
com.intellij.openapi.editor.HighlighterColors
- sf:BAD_CHARACTER:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:NO_HIGHLIGHTING:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:TEXT:com.intellij.openapi.editor.colors.TextAttributesKey
f:com.intellij.openapi.editor.IndentGuideDescriptor
- f:codeConstructStartLine:I
- f:endLine:I
- f:indentLevel:I
- f:startLine:I
- <init>(I,I,I):V
- <init>(I,I,I,I):V
- equals(java.lang.Object):Z
- hashCode():I
com.intellij.openapi.editor.IndentStrategy
- a:canIndent(I,I,com.intellij.psi.PsiElement):Z
com.intellij.openapi.editor.IndentsModel
- a:assumeIndents(java.util.List):V
- a:getCaretIndentGuide():com.intellij.openapi.editor.IndentGuideDescriptor
- a:getDescriptor(I,I):com.intellij.openapi.editor.IndentGuideDescriptor
com.intellij.openapi.editor.Inlay
- com.intellij.openapi.Disposable
- com.intellij.openapi.util.UserDataHolderEx
- a:getBounds():java.awt.Rectangle
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getGutterIconRenderer():com.intellij.openapi.editor.markup.GutterIconRenderer
- a:getHeightInPixels():I
- a:getOffset():I
- a:getPlacement():com.intellij.openapi.editor.Inlay$Placement
- getProperties():com.intellij.openapi.editor.InlayProperties
- a:getRenderer():com.intellij.openapi.editor.EditorCustomElementRenderer
- a:getVisualPosition():com.intellij.openapi.editor.VisualPosition
- a:getWidthInPixels():I
- a:isRelatedToPrecedingText():Z
- a:isValid():Z
- a:repaint():V
- a:update():V
e:com.intellij.openapi.editor.Inlay$Placement
- java.lang.Enum
- sf:ABOVE_LINE:com.intellij.openapi.editor.Inlay$Placement
- sf:AFTER_LINE_END:com.intellij.openapi.editor.Inlay$Placement
- sf:BELOW_LINE:com.intellij.openapi.editor.Inlay$Placement
- sf:INLINE:com.intellij.openapi.editor.Inlay$Placement
- s:valueOf(java.lang.String):com.intellij.openapi.editor.Inlay$Placement
- s:values():com.intellij.openapi.editor.Inlay$Placement[]
com.intellij.openapi.editor.InlayModel
- a:addAfterLineEndElement(I,com.intellij.openapi.editor.InlayProperties,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- a:addAfterLineEndElement(I,Z,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- a:addBlockElement(I,com.intellij.openapi.editor.InlayProperties,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- a:addBlockElement(I,Z,Z,I,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- addInlineElement(I,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- a:addInlineElement(I,com.intellij.openapi.editor.InlayProperties,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- a:addInlineElement(I,Z,I,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- a:addInlineElement(I,Z,com.intellij.openapi.editor.EditorCustomElementRenderer):com.intellij.openapi.editor.Inlay
- a:addListener(com.intellij.openapi.editor.InlayModel$Listener,com.intellij.openapi.Disposable):V
- a:execute(Z,java.lang.Runnable):V
- a:getAfterLineEndElementsForLogicalLine(I):java.util.List
- a:getAfterLineEndElementsInRange(I,I):java.util.List
- getAfterLineEndElementsInRange(I,I,java.lang.Class):java.util.List
- a:getBlockElementsForVisualLine(I,Z):java.util.List
- a:getBlockElementsInRange(I,I):java.util.List
- getBlockElementsInRange(I,I,java.lang.Class):java.util.List
- a:getElementAt(java.awt.Point):com.intellij.openapi.editor.Inlay
- getElementAt(java.awt.Point,java.lang.Class):com.intellij.openapi.editor.Inlay
- a:getInlineElementAt(com.intellij.openapi.editor.VisualPosition):com.intellij.openapi.editor.Inlay
- a:getInlineElementsInRange(I,I):java.util.List
- getInlineElementsInRange(I,I,java.lang.Class):java.util.List
- hasAfterLineEndElements():Z
- hasBlockElements():Z
- a:hasInlineElementAt(I):Z
- hasInlineElementAt(com.intellij.openapi.editor.VisualPosition):Z
- hasInlineElements():Z
- hasInlineElementsInRange(I,I):Z
- a:isInBatchMode():Z
- a:setConsiderCaretPositionOnDocumentUpdates(Z):V
com.intellij.openapi.editor.InlayModel$ChangeFlags
- sf:GUTTER_ICON_PROVIDER_CHANGED:I
- sf:HEIGHT_CHANGED:I
- sf:WIDTH_CHANGED:I
com.intellij.openapi.editor.InlayModel$Listener
- java.util.EventListener
- onAdded(com.intellij.openapi.editor.Inlay):V
- onBatchModeFinish(com.intellij.openapi.editor.Editor):V
- onBatchModeStart(com.intellij.openapi.editor.Editor):V
- onRemoved(com.intellij.openapi.editor.Inlay):V
- onUpdated(com.intellij.openapi.editor.Inlay):V
- onUpdated(com.intellij.openapi.editor.Inlay,I):V
a:com.intellij.openapi.editor.InlayModel$SimpleAdapter
- com.intellij.openapi.editor.InlayModel$Listener
- <init>():V
- onAdded(com.intellij.openapi.editor.Inlay):V
- onRemoved(com.intellij.openapi.editor.Inlay):V
f:com.intellij.openapi.editor.InlayProperties
- <init>():V
- disableSoftWrapping(Z):com.intellij.openapi.editor.InlayProperties
- getPriority():I
- isRelatedToPrecedingText():Z
- isShownAbove():Z
- isShownWhenFolded():Z
- isSoftWrappingDisabled():Z
- priority(I):com.intellij.openapi.editor.InlayProperties
- relatesToPrecedingText(Z):com.intellij.openapi.editor.InlayProperties
- showAbove(Z):com.intellij.openapi.editor.InlayProperties
- showWhenFolded(Z):com.intellij.openapi.editor.InlayProperties
com.intellij.openapi.editor.LineNumberConverter
- sf:DEFAULT:com.intellij.openapi.editor.LineNumberConverter
- a:convert(com.intellij.openapi.editor.Editor,I):java.lang.Integer
- convertLineNumberToString(com.intellij.openapi.editor.Editor,I):java.lang.String
- a:getMaxLineNumber(com.intellij.openapi.editor.Editor):java.lang.Integer
- getMaxLineNumberString(com.intellij.openapi.editor.Editor):java.lang.String
- shouldRepaintOnCaretMovement():Z
com.intellij.openapi.editor.LineNumberConverter$Increasing
- com.intellij.openapi.editor.LineNumberConverter
- getMaxLineNumber(com.intellij.openapi.editor.Editor):java.lang.Integer
com.intellij.openapi.editor.LineWrapPositionStrategy
- a:calculateWrapPosition(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,I,I,I,Z,Z):I
c:com.intellij.openapi.editor.LogicalPosition
- java.lang.Comparable
- f:column:I
- f:leansForward:Z
- f:line:I
- <init>(I,I):V
- <init>(I,I,Z):V
- compareTo(com.intellij.openapi.editor.LogicalPosition):I
- equals(java.lang.Object):Z
- getColumn():I
- getLine():I
- hashCode():I
- leanForward(Z):com.intellij.openapi.editor.LogicalPosition
f:com.intellij.openapi.editor.PlatformEditorBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
e:com.intellij.openapi.editor.ScrollType
- java.lang.Enum
- sf:CENTER:com.intellij.openapi.editor.ScrollType
- sf:CENTER_DOWN:com.intellij.openapi.editor.ScrollType
- sf:CENTER_UP:com.intellij.openapi.editor.ScrollType
- sf:MAKE_VISIBLE:com.intellij.openapi.editor.ScrollType
- sf:RELATIVE:com.intellij.openapi.editor.ScrollType
- s:valueOf(java.lang.String):com.intellij.openapi.editor.ScrollType
- s:values():com.intellij.openapi.editor.ScrollType[]
com.intellij.openapi.editor.ScrollingModel
- a:addVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener):V
- addVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener,com.intellij.openapi.Disposable):V
- a:disableAnimation():V
- a:enableAnimation():V
- a:getHorizontalScrollOffset():I
- a:getVerticalScrollOffset():I
- a:getVisibleArea():java.awt.Rectangle
- a:getVisibleAreaOnScrollingFinished():java.awt.Rectangle
- a:removeVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener):V
- a:runActionOnScrollingFinished(java.lang.Runnable):V
- a:scroll(I,I):V
- a:scrollHorizontally(I):V
- a:scrollTo(com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.ScrollType):V
- a:scrollToCaret(com.intellij.openapi.editor.ScrollType):V
- a:scrollVertically(I):V
com.intellij.openapi.editor.ScrollingModel$ScrollingHelper
- a:calculateScrollingLocation(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.LogicalPosition):java.awt.Point
- a:calculateScrollingLocation(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.VisualPosition):java.awt.Point
com.intellij.openapi.editor.ScrollingModel$Supplier
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getScrollPane():javax.swing.JScrollPane
- a:getScrollingHelper():com.intellij.openapi.editor.ScrollingModel$ScrollingHelper
com.intellij.openapi.editor.SelectionModel
- a:addSelectionListener(com.intellij.openapi.editor.event.SelectionListener):V
- addSelectionListener(com.intellij.openapi.editor.event.SelectionListener,com.intellij.openapi.Disposable):V
- a:copySelectionToClipboard():V
- a:getBlockSelectionEnds():I[]
- a:getBlockSelectionStarts():I[]
- a:getEditor():com.intellij.openapi.editor.Editor
- getLeadSelectionOffset():I
- getLeadSelectionPosition():com.intellij.openapi.editor.VisualPosition
- getSelectedText():java.lang.String
- getSelectedText(Z):java.lang.String
- getSelectionEnd():I
- getSelectionEndPosition():com.intellij.openapi.editor.VisualPosition
- getSelectionStart():I
- getSelectionStartPosition():com.intellij.openapi.editor.VisualPosition
- a:getTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
- hasSelection():Z
- hasSelection(Z):Z
- removeSelection():V
- removeSelection(Z):V
- a:removeSelectionListener(com.intellij.openapi.editor.event.SelectionListener):V
- selectLineAtCaret():V
- selectWordAtCaret(Z):V
- a:setBlockSelection(com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.LogicalPosition):V
- setSelection(I,I):V
- setSelection(I,com.intellij.openapi.editor.VisualPosition,I):V
- setSelection(com.intellij.openapi.editor.VisualPosition,I,com.intellij.openapi.editor.VisualPosition,I):V
com.intellij.openapi.editor.SoftWrap
- com.intellij.openapi.editor.TextChange
- a:getIndentInColumns():I
- a:getIndentInPixels():I
com.intellij.openapi.editor.SoftWrapModel
- a:beforeDocumentChangeAtCaret():V
- a:getSoftWrap(I):com.intellij.openapi.editor.SoftWrap
- a:getSoftWrapsForLine(I):java.util.List
- a:getSoftWrapsForRange(I,I):java.util.List
- a:isInsideOrBeforeSoftWrap(com.intellij.openapi.editor.VisualPosition):Z
- a:isInsideSoftWrap(com.intellij.openapi.editor.VisualPosition):Z
- a:isSoftWrappingEnabled():Z
- a:isVisible(com.intellij.openapi.editor.SoftWrap):Z
- a:release():V
f:com.intellij.openapi.editor.SyntaxHighlighterColors
- sf:BRACES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:BRACKETS:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:COMMA:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOC_COMMENT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOC_COMMENT_MARKUP:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOC_COMMENT_TAG:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DOT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INVALID_STRING_ESCAPE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:JAVA_BLOCK_COMMENT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:JAVA_SEMICOLON:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:KEYWORD:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:LINE_COMMENT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:NUMBER:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:OPERATION_SIGN:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:PARENTHS:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:STRING:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:VALID_STRING_ESCAPE:com.intellij.openapi.editor.colors.TextAttributesKey
- <init>():V
com.intellij.openapi.editor.TextAnnotationGutterProvider
- a:getBgColor(I,com.intellij.openapi.editor.Editor):java.awt.Color
- a:getColor(I,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.colors.ColorKey
- getLeftMargin():I
- a:getLineText(I,com.intellij.openapi.editor.Editor):java.lang.String
- a:getPopupActions(I,com.intellij.openapi.editor.Editor):java.util.List
- a:getStyle(I,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.colors.EditorFontType
- a:getToolTip(I,com.intellij.openapi.editor.Editor):java.lang.String
- a:gutterClosed():V
- useMargin():Z
com.intellij.openapi.editor.TextAnnotationGutterProvider$Filler
- com.intellij.openapi.editor.TextAnnotationGutterProvider
- a:getWidth():I
f:com.intellij.openapi.editor.VisualPosition
- f:column:I
- f:leansRight:Z
- f:line:I
- <init>(I,I):V
- <init>(I,I,Z):V
- after(com.intellij.openapi.editor.VisualPosition):Z
- equals(java.lang.Object):Z
- getColumn():I
- getLine():I
- hashCode():I
- leanRight(Z):com.intellij.openapi.editor.VisualPosition
f:com.intellij.openapi.editor.actions.LanguageWordBoundaryFilter
- com.intellij.lang.LanguageExtension
- s:getInstance():com.intellij.openapi.editor.actions.LanguageWordBoundaryFilter
c:com.intellij.openapi.editor.actions.WordBoundaryFilter
- <init>():V
- isWordBoundary(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
a:com.intellij.openapi.editor.bidi.BidiRegionsSeparator
- <init>():V
- a:createBorderBetweenTokens(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
f:com.intellij.openapi.editor.bidi.LanguageBidiRegionsSeparator
- com.intellij.lang.LanguageExtension
- s:getInstance():com.intellij.openapi.editor.bidi.LanguageBidiRegionsSeparator
com.intellij.openapi.editor.colors.EditorColors
- sf:ADDED_LINES_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:ANNOTATIONS_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:ANNOTATIONS_LAST_COMMIT_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:BORDER_LINES_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:BREADCRUMBS_BORDER_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:BREADCRUMBS_CURRENT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:BREADCRUMBS_DEFAULT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:BREADCRUMBS_HOVERED:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:BREADCRUMBS_INACTIVE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CARET_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:CARET_ROW_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:CHANGED_LINES_POPUP:com.intellij.openapi.editor.colors.ColorKey
- sf:CODE_LENS_BORDER_COLOR:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DELETED_LINES_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:DELETED_TEXT_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DIFF_BLOCK_AREA_HIGHLIGHT_MARKER:com.intellij.openapi.editor.colors.ColorKey
- sf:DOCUMENTATION_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:EDITOR_GUTTER_BACKGROUND:com.intellij.openapi.editor.colors.ColorKey
- sf:FOLDED_TEXT_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:FOLDED_TEXT_BORDER_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:GUTTER_BACKGROUND:com.intellij.openapi.editor.colors.ColorKey
- sf:IDENTIFIER_UNDER_CARET_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:IGNORED_ADDED_LINES_BORDER_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:IGNORED_DELETED_LINES_BORDER_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:IGNORED_MODIFIED_LINES_BORDER_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:INDENT_GUIDE_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:INJECTED_LANGUAGE_FRAGMENT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:LINE_NUMBERS_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:LINE_NUMBER_ON_CARET_ROW_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:LIVE_TEMPLATE_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:LIVE_TEMPLATE_INACTIVE_SEGMENT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:MATCHED_BRACES_INDENT_GUIDE_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:MODIFIED_LINES_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:MODIFIED_TAB_ICON_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:NOTIFICATION_BACKGROUND:com.intellij.openapi.editor.colors.ColorKey
- sf:PREVIEW_BACKGROUND:com.intellij.openapi.editor.colors.ColorKey
- sf:PREVIEW_BORDER_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:READONLY_BACKGROUND_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:READONLY_FRAGMENT_BACKGROUND_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:REFERENCE_HYPERLINK_COLOR:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:RIGHT_MARGIN_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:SCROLLBAR_THUMB_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:SEARCH_RESULT_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:SELECTED_INDENT_GUIDE_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:SELECTED_TEARLINE_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:SELECTION_BACKGROUND_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:SELECTION_FOREGROUND_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:SOFT_WRAP_SIGN_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:STICKY_LINES_BACKGROUND:com.intellij.openapi.editor.colors.ColorKey
- sf:STICKY_LINES_BORDER_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:STICKY_LINES_HOVERED_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:STRING_CONTENT_INDENT_GUIDE_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:TABS_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:TAB_SELECTED:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:TAB_SELECTED_INACTIVE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:TAB_UNDERLINE:com.intellij.openapi.editor.colors.ColorKey
- sf:TAB_UNDERLINE_INACTIVE:com.intellij.openapi.editor.colors.ColorKey
- sf:TEARLINE_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:TEXT_SEARCH_RESULT_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:VISUAL_INDENT_GUIDE_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:WHITESPACES_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:WHITESPACES_MODIFIED_LINES_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:WRITE_IDENTIFIER_UNDER_CARET_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:WRITE_SEARCH_RESULT_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- s:createInjectedLanguageFragmentKey(com.intellij.lang.Language):com.intellij.openapi.editor.colors.TextAttributesKey
f:com.intellij.openapi.editor.colors.EditorColors$GlobalScheme
- <init>():V
- s:getColor(com.intellij.openapi.editor.colors.ColorKey):java.awt.Color
com.intellij.openapi.editor.colors.EditorColorsListener
- java.util.EventListener
- a:globalSchemeChange(com.intellij.openapi.editor.colors.EditorColorsScheme):V
a:com.intellij.openapi.editor.colors.EditorColorsManager
- sf:DEFAULT_SCHEME_NAME:java.lang.String
- sf:TOPIC:com.intellij.util.messages.Topic
- a:addColorScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- a:getActiveVisibleScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- a:getAllSchemes():com.intellij.openapi.editor.colors.EditorColorsScheme[]
- s:getColorSchemeFileExtension():java.lang.String
- s:getDefaultSchemeName():java.lang.String
- a:getGlobalScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- s:getInstance():com.intellij.openapi.editor.colors.EditorColorsManager
- a:getScheme(java.lang.String):com.intellij.openapi.editor.colors.EditorColorsScheme
- getSchemeForCurrentUITheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- isDarkEditor():Z
- a:isDefaultScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):Z
- a:isUseOnlyMonospacedFonts():Z
- reloadKeepingActiveScheme():V
- resolveSchemeParent(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- a:setGlobalScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- a:setUseOnlyMonospacedFonts(Z):V
com.intellij.openapi.editor.colors.EditorColorsScheme
- com.intellij.openapi.editor.colors.TextAttributesScheme
- com.intellij.openapi.options.Scheme
- com.intellij.openapi.options.SchemeMetaInfo
- java.lang.Cloneable
- a:clone():java.lang.Object
- getAttributes(com.intellij.openapi.editor.colors.TextAttributesKey,Z):com.intellij.openapi.editor.markup.TextAttributes
- a:getColor(com.intellij.openapi.editor.colors.ColorKey):java.awt.Color
- a:getConsoleFontName():java.lang.String
- a:getConsoleFontPreferences():com.intellij.openapi.editor.colors.FontPreferences
- a:getConsoleFontSize():I
- getConsoleFontSize2D():F
- a:getConsoleLineSpacing():F
- a:getDefaultBackground():java.awt.Color
- a:getDefaultForeground():java.awt.Color
- s:getDefaultSchemeName():java.lang.String
- a:getEditorFontName():java.lang.String
- a:getEditorFontSize():I
- getEditorFontSize2D():F
- a:getFont(com.intellij.openapi.editor.colors.EditorFontType):java.awt.Font
- a:getFontPreferences():com.intellij.openapi.editor.colors.FontPreferences
- a:getLineSpacing():F
- getQuickDocFontSize():com.intellij.openapi.options.FontSize
- isUseAppFontPreferencesInEditor():Z
- isUseEditorFontPreferencesInConsole():Z
- a:isUseLigatures():Z
- a:readExternal(org.jdom.Element):V
- a:setAttributes(com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.markup.TextAttributes):V
- a:setColor(com.intellij.openapi.editor.colors.ColorKey,java.awt.Color):V
- a:setConsoleFontName(java.lang.String):V
- a:setConsoleFontPreferences(com.intellij.openapi.editor.colors.FontPreferences):V
- setConsoleFontSize(F):V
- a:setConsoleFontSize(I):V
- a:setConsoleLineSpacing(F):V
- a:setEditorFontName(java.lang.String):V
- setEditorFontSize(F):V
- a:setEditorFontSize(I):V
- a:setFontPreferences(com.intellij.openapi.editor.colors.FontPreferences):V
- a:setLineSpacing(F):V
- a:setName(java.lang.String):V
- setQuickDocFontSize(com.intellij.openapi.options.FontSize):V
- setUseAppFontPreferencesInEditor():V
- setUseEditorFontPreferencesInConsole():V
- a:setUseLigatures(Z):V
f:com.intellij.openapi.editor.colors.EditorColorsUtil
- s:createColorKey(java.lang.String,java.awt.Color):com.intellij.openapi.editor.colors.ColorKey
- s:getColor(java.awt.Component,com.intellij.openapi.editor.colors.ColorKey):java.awt.Color
- s:getColorSchemeForBackground(java.awt.Color):com.intellij.openapi.editor.colors.EditorColorsScheme
- s:getColorSchemeForComponent(javax.swing.JComponent):com.intellij.openapi.editor.colors.EditorColorsScheme
- s:getColorSchemeForPrinting():com.intellij.openapi.editor.colors.EditorColorsScheme
- s:getGlobalOrDefaultColor(com.intellij.openapi.editor.colors.ColorKey):java.awt.Color
- s:getGlobalOrDefaultColorScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- s:updateNotInHierarchyComponentUIAndColors(java.awt.Component):V
a:com.intellij.openapi.editor.colors.EditorFontCache
- <init>():V
- a:getFont(com.intellij.openapi.editor.colors.EditorFontType):java.awt.Font
- s:getInstance():com.intellij.openapi.editor.colors.EditorFontCache
- a:reset():V
e:com.intellij.openapi.editor.colors.EditorFontType
- java.lang.Enum
- sf:BOLD:com.intellij.openapi.editor.colors.EditorFontType
- sf:BOLD_ITALIC:com.intellij.openapi.editor.colors.EditorFontType
- sf:CONSOLE_BOLD:com.intellij.openapi.editor.colors.EditorFontType
- sf:CONSOLE_BOLD_ITALIC:com.intellij.openapi.editor.colors.EditorFontType
- sf:CONSOLE_ITALIC:com.intellij.openapi.editor.colors.EditorFontType
- sf:CONSOLE_PLAIN:com.intellij.openapi.editor.colors.EditorFontType
- sf:ITALIC:com.intellij.openapi.editor.colors.EditorFontType
- sf:PLAIN:com.intellij.openapi.editor.colors.EditorFontType
- s:forJavaStyle(I):com.intellij.openapi.editor.colors.EditorFontType
- s:getConsoleType(com.intellij.openapi.editor.colors.EditorFontType):com.intellij.openapi.editor.colors.EditorFontType
- getGlobalFont():java.awt.Font
- s:getGlobalPlainFont():java.awt.Font
- s:valueOf(java.lang.String):com.intellij.openapi.editor.colors.EditorFontType
- s:values():com.intellij.openapi.editor.colors.EditorFontType[]
com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptor
- apply(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- a:getGroup():java.lang.String
- a:getScheme():com.intellij.openapi.editor.colors.EditorColorsScheme
- a:getType():java.lang.String
- a:isModified():Z
com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptorWithPath
- com.intellij.openapi.editor.colors.EditorSchemeAttributeDescriptor
- s:getNameSeparator():java.lang.String
c:com.intellij.openapi.editor.colors.FontPreferences
- sf:DEFAULT_FONT_NAME:java.lang.String
- sf:DEFAULT_FONT_SIZE:I
- sf:DEFAULT_LINE_SPACING:F
- sf:FALLBACK_FONT_FAMILY:java.lang.String
- sf:JETBRAINS_MONO:java.lang.String
- sf:LINUX_DEFAULT_FONT_FAMILY:java.lang.String
- sf:MAC_OS_DEFAULT_FONT_FAMILY:java.lang.String
- sf:WINDOWS_DEFAULT_FONT_FAMILY:java.lang.String
- <init>():V
- copyTo(com.intellij.openapi.editor.colors.FontPreferences):V
- getBoldSubFamily():java.lang.String
- s:getDefaultFontName():java.lang.String
- getEffectiveFontFamilies():java.util.List
- getFontFamily():java.lang.String
- getLineSpacing():F
- getRealFontFamilies():java.util.List
- getRegularSubFamily():java.lang.String
- getSize(java.lang.String):I
- getSize2D(java.lang.String):F
- hasSize(java.lang.String):Z
- useLigatures():Z
f:com.intellij.openapi.editor.colors.GlobalEditorScheme
- s:getBackground(com.intellij.openapi.editor.colors.TextAttributesKey):java.awt.Color
- s:getColor(com.intellij.openapi.editor.colors.ColorKey):java.awt.Color
- s:getDefaultBackground():java.awt.Color
- s:getDefaultForeground():java.awt.Color
a:com.intellij.openapi.editor.colors.ModifiableFontPreferences
- com.intellij.openapi.editor.colors.FontPreferences
- <init>():V
- a:addFontFamily(java.lang.String):V
- a:clear():V
- a:clearFonts():V
- register(java.lang.String,F):V
- a:register(java.lang.String,I):V
- a:resetFontSizes():V
- a:setBoldSubFamily(java.lang.String):V
- a:setEffectiveFontFamilies(java.util.List):V
- setFontSize(java.lang.String,F):V
- a:setFontSize(java.lang.String,I):V
- a:setLineSpacing(F):V
- a:setRealFontFamilies(java.util.List):V
- a:setRegularSubFamily(java.lang.String):V
- setTemplateFontSize(F):V
- a:setTemplateFontSize(I):V
- a:setUseLigatures(Z):V
a:com.intellij.openapi.editor.event.CaretAdapter
- com.intellij.openapi.editor.event.CaretListener
- <init>():V
c:com.intellij.openapi.editor.event.CaretEvent
- java.util.EventObject
- <init>(com.intellij.openapi.editor.Caret,com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.LogicalPosition):V
- getCaret():com.intellij.openapi.editor.Caret
- getEditor():com.intellij.openapi.editor.Editor
- getNewPosition():com.intellij.openapi.editor.LogicalPosition
- getOldPosition():com.intellij.openapi.editor.LogicalPosition
com.intellij.openapi.editor.event.CaretListener
- java.util.EventListener
- caretAdded(com.intellij.openapi.editor.event.CaretEvent):V
- caretPositionChanged(com.intellij.openapi.editor.event.CaretEvent):V
- caretRemoved(com.intellij.openapi.editor.event.CaretEvent):V
com.intellij.openapi.editor.event.EditorEventMulticaster
- a:addCaretListener(com.intellij.openapi.editor.event.CaretListener):V
- a:addCaretListener(com.intellij.openapi.editor.event.CaretListener,com.intellij.openapi.Disposable):V
- a:addDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- a:addDocumentListener(com.intellij.openapi.editor.event.DocumentListener,com.intellij.openapi.Disposable):V
- a:addEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- a:addEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener,com.intellij.openapi.Disposable):V
- a:addEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- a:addEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener,com.intellij.openapi.Disposable):V
- a:addSelectionListener(com.intellij.openapi.editor.event.SelectionListener):V
- a:addSelectionListener(com.intellij.openapi.editor.event.SelectionListener,com.intellij.openapi.Disposable):V
- a:addVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener):V
- addVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener,com.intellij.openapi.Disposable):V
- a:removeCaretListener(com.intellij.openapi.editor.event.CaretListener):V
- a:removeDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- a:removeEditorMouseListener(com.intellij.openapi.editor.event.EditorMouseListener):V
- a:removeEditorMouseMotionListener(com.intellij.openapi.editor.event.EditorMouseMotionListener):V
- a:removeSelectionListener(com.intellij.openapi.editor.event.SelectionListener):V
- a:removeVisibleAreaListener(com.intellij.openapi.editor.event.VisibleAreaListener):V
f:com.intellij.openapi.editor.event.EditorFactoryEvent
- java.util.EventObject
- <init>(com.intellij.openapi.editor.EditorFactory,com.intellij.openapi.editor.Editor):V
- getEditor():com.intellij.openapi.editor.Editor
- getFactory():com.intellij.openapi.editor.EditorFactory
com.intellij.openapi.editor.event.EditorFactoryListener
- java.util.EventListener
- editorCreated(com.intellij.openapi.editor.event.EditorFactoryEvent):V
- editorReleased(com.intellij.openapi.editor.event.EditorFactoryEvent):V
c:com.intellij.openapi.editor.event.EditorMouseEvent
- java.util.EventObject
- <init>(com.intellij.openapi.editor.Editor,java.awt.event.MouseEvent,com.intellij.openapi.editor.event.EditorMouseEventArea):V
- <init>(com.intellij.openapi.editor.Editor,java.awt.event.MouseEvent,com.intellij.openapi.editor.event.EditorMouseEventArea,I,com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.VisualPosition,Z,com.intellij.openapi.editor.FoldRegion,com.intellij.openapi.editor.Inlay,com.intellij.openapi.editor.markup.GutterIconRenderer):V
- consume():V
- getArea():com.intellij.openapi.editor.event.EditorMouseEventArea
- getCollapsedFoldRegion():com.intellij.openapi.editor.FoldRegion
- getEditor():com.intellij.openapi.editor.Editor
- getGutterIconRenderer():com.intellij.openapi.editor.markup.GutterIconRenderer
- getInlay():com.intellij.openapi.editor.Inlay
- getLogicalPosition():com.intellij.openapi.editor.LogicalPosition
- getMouseEvent():java.awt.event.MouseEvent
- getOffset():I
- getVisualPosition():com.intellij.openapi.editor.VisualPosition
- isConsumed():Z
- isOverText():Z
f:com.intellij.openapi.editor.event.EditorMouseEventArea
- sf:ANNOTATIONS_AREA:com.intellij.openapi.editor.event.EditorMouseEventArea
- sf:EDITING_AREA:com.intellij.openapi.editor.event.EditorMouseEventArea
- sf:FOLDING_OUTLINE_AREA:com.intellij.openapi.editor.event.EditorMouseEventArea
- sf:LINE_MARKERS_AREA:com.intellij.openapi.editor.event.EditorMouseEventArea
- sf:LINE_NUMBERS_AREA:com.intellij.openapi.editor.event.EditorMouseEventArea
com.intellij.openapi.editor.event.EditorMouseListener
- java.util.EventListener
- mouseClicked(com.intellij.openapi.editor.event.EditorMouseEvent):V
- mouseEntered(com.intellij.openapi.editor.event.EditorMouseEvent):V
- mouseExited(com.intellij.openapi.editor.event.EditorMouseEvent):V
- mousePressed(com.intellij.openapi.editor.event.EditorMouseEvent):V
- mouseReleased(com.intellij.openapi.editor.event.EditorMouseEvent):V
com.intellij.openapi.editor.event.EditorMouseMotionListener
- java.util.EventListener
- mouseDragged(com.intellij.openapi.editor.event.EditorMouseEvent):V
- mouseMoved(com.intellij.openapi.editor.event.EditorMouseEvent):V
c:com.intellij.openapi.editor.event.SelectionEvent
- java.util.EventObject
- <init>(com.intellij.openapi.editor.Editor,I,I,I,I):V
- <init>(com.intellij.openapi.editor.Editor,I[],I[],I[],I[]):V
- getEditor():com.intellij.openapi.editor.Editor
- getNewRange():com.intellij.openapi.util.TextRange
- getNewRanges():com.intellij.openapi.util.TextRange[]
- getOldRange():com.intellij.openapi.util.TextRange
- getOldRanges():com.intellij.openapi.util.TextRange[]
com.intellij.openapi.editor.event.SelectionListener
- java.util.EventListener
- selectionChanged(com.intellij.openapi.editor.event.SelectionEvent):V
f:com.intellij.openapi.editor.event.VisibleAreaEvent
- java.util.EventObject
- <init>(com.intellij.openapi.editor.Editor,java.awt.Rectangle,java.awt.Rectangle):V
- getEditor():com.intellij.openapi.editor.Editor
- getNewRectangle():java.awt.Rectangle
- getOldRectangle():java.awt.Rectangle
com.intellij.openapi.editor.event.VisibleAreaListener
- java.util.EventListener
- a:visibleAreaChanged(com.intellij.openapi.editor.event.VisibleAreaEvent):V
c:com.intellij.openapi.editor.ex.util.EmptyEditorHighlighter
- com.intellij.openapi.editor.ex.PrioritizedDocumentListener
- com.intellij.openapi.editor.highlighter.EditorHighlighter
- <init>():V
- <init>(com.intellij.openapi.editor.colors.EditorColorsScheme,com.intellij.openapi.editor.colors.TextAttributesKey):V
- <init>(com.intellij.openapi.editor.markup.TextAttributes):V
- createIterator(I):com.intellij.openapi.editor.highlighter.HighlighterIterator
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- getPriority():I
- setColorScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- setEditor(com.intellij.openapi.editor.highlighter.HighlighterClient):V
- setText(java.lang.CharSequence):V
com.intellij.openapi.editor.highlighter.EditorHighlighter
- com.intellij.openapi.editor.event.DocumentListener
- a:createIterator(I):com.intellij.openapi.editor.highlighter.HighlighterIterator
- setColorScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- a:setEditor(com.intellij.openapi.editor.highlighter.HighlighterClient):V
- setText(java.lang.CharSequence):V
a:com.intellij.openapi.editor.highlighter.EditorHighlighterFactory
- sf:Companion:com.intellij.openapi.editor.highlighter.EditorHighlighterFactory$Companion
- a:createEditorHighlighter(com.intellij.openapi.editor.colors.EditorColorsScheme,java.lang.String,com.intellij.openapi.project.Project):com.intellij.openapi.editor.highlighter.EditorHighlighter
- a:createEditorHighlighter(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.colors.EditorColorsScheme,com.intellij.openapi.project.Project):com.intellij.openapi.editor.highlighter.EditorHighlighter
- a:createEditorHighlighter(com.intellij.openapi.fileTypes.SyntaxHighlighter,com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.highlighter.EditorHighlighter
- a:createEditorHighlighter(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):com.intellij.openapi.editor.highlighter.EditorHighlighter
- a:createEditorHighlighter(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.highlighter.EditorHighlighter
- a:createEditorHighlighter(com.intellij.openapi.project.Project,java.lang.String):com.intellij.openapi.editor.highlighter.EditorHighlighter
- a:createEditorHighlighter(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.colors.EditorColorsScheme,com.intellij.openapi.project.Project):com.intellij.openapi.editor.highlighter.EditorHighlighter
- sf:getInstance():com.intellij.openapi.editor.highlighter.EditorHighlighterFactory
f:com.intellij.openapi.editor.highlighter.EditorHighlighterFactory$Companion
- f:getInstance():com.intellij.openapi.editor.highlighter.EditorHighlighterFactory
com.intellij.openapi.editor.highlighter.HighlighterClient
- a:getDocument():com.intellij.openapi.editor.Document
- a:getProject():com.intellij.openapi.project.Project
- a:repaint(I,I):V
com.intellij.openapi.editor.highlighter.HighlighterIterator
- a:advance():V
- a:atEnd():Z
- a:getDocument():com.intellij.openapi.editor.Document
- a:getEnd():I
- a:getStart():I
- a:getTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
- a:getTokenType():com.intellij.psi.tree.IElementType
- a:retreat():V
com.intellij.openapi.editor.markup.ActiveGutterRenderer
- com.intellij.openapi.editor.markup.LineMarkerRenderer
- com.intellij.util.ui.accessibility.SimpleAccessible
- calcBounds(com.intellij.openapi.editor.Editor,I,java.awt.Rectangle):java.awt.Rectangle
- canDoAction(com.intellij.openapi.editor.Editor,java.awt.event.MouseEvent):Z
- canDoAction(java.awt.event.MouseEvent):Z
- a:doAction(com.intellij.openapi.editor.Editor,java.awt.event.MouseEvent):V
- getAccessibleName():java.lang.String
- getAccessibleTooltipText():java.lang.String
- getTooltipText():java.lang.String
com.intellij.openapi.editor.markup.CustomHighlighterRenderer
- isForeground():Z
- a:paint(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.markup.RangeHighlighter,java.awt.Graphics):V
com.intellij.openapi.editor.markup.GutterDraggableObject
- sf:flavor:java.awt.datatransfer.DataFlavor
- a:copy(I,com.intellij.openapi.vfs.VirtualFile,I):Z
- getCursor(I,I):java.awt.Cursor
- getCursor(I,com.intellij.openapi.vfs.VirtualFile,I):java.awt.Cursor
- s:getFlavors():java.awt.datatransfer.DataFlavor[]
- remove():V
a:com.intellij.openapi.editor.markup.GutterIconRenderer
- com.intellij.codeInsight.daemon.GutterMark
- com.intellij.openapi.project.PossiblyDumbAware
- com.intellij.util.ui.accessibility.SimpleAccessible
- <init>():V
- a:equals(java.lang.Object):Z
- getAccessibleName():java.lang.String
- getAccessibleTooltipText():java.lang.String
- getAlignment():com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment
- getClickAction():com.intellij.openapi.actionSystem.AnAction
- getDraggableObject():com.intellij.openapi.editor.markup.GutterDraggableObject
- f:getFeatureId():java.lang.String
- getMiddleButtonClickAction():com.intellij.openapi.actionSystem.AnAction
- getPopupMenuActions():com.intellij.openapi.actionSystem.ActionGroup
- getRightButtonClickAction():com.intellij.openapi.actionSystem.AnAction
- getTooltipText():java.lang.String
- a:hashCode():I
- isNavigateAction():Z
e:com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment
- java.lang.Enum
- sf:CENTER:com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment
- sf:LEFT:com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment
- sf:RIGHT:com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment
- getWeight():I
- s:valueOf(java.lang.String):com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment
- s:values():com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment[]
com.intellij.openapi.editor.markup.HighlighterLayer
- sf:ADDITIONAL_SYNTAX:I
- sf:CARET_ROW:I
- sf:CONSOLE_FILTER:I
- sf:ELEMENT_UNDER_CARET:I
- sf:ERROR:I
- sf:FIRST:I
- sf:GUARDED_BLOCKS:I
- sf:HYPERLINK:I
- sf:LAST:I
- sf:SELECTION:I
- sf:SYNTAX:I
- sf:WARNING:I
- sf:WEAK_WARNING:I
e:com.intellij.openapi.editor.markup.HighlighterTargetArea
- java.lang.Enum
- sf:EXACT_RANGE:com.intellij.openapi.editor.markup.HighlighterTargetArea
- sf:LINES_IN_RANGE:com.intellij.openapi.editor.markup.HighlighterTargetArea
- s:valueOf(java.lang.String):com.intellij.openapi.editor.markup.HighlighterTargetArea
- s:values():com.intellij.openapi.editor.markup.HighlighterTargetArea[]
com.intellij.openapi.editor.markup.LineMarkerRenderer
- a:paint(com.intellij.openapi.editor.Editor,java.awt.Graphics,java.awt.Rectangle):V
com.intellij.openapi.editor.markup.LineSeparatorRenderer
- a:drawLine(java.awt.Graphics,I,I,I):V
com.intellij.openapi.editor.markup.MarkupEditorFilter
- sf:EMPTY:com.intellij.openapi.editor.markup.MarkupEditorFilter
- a:avaliableIn(com.intellij.openapi.editor.Editor):Z
com.intellij.openapi.editor.markup.MarkupModel
- com.intellij.openapi.util.UserDataHolder
- a:addLineHighlighter(I,I,com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.markup.RangeHighlighter
- a:addLineHighlighter(com.intellij.openapi.editor.colors.TextAttributesKey,I,I):com.intellij.openapi.editor.markup.RangeHighlighter
- a:addRangeHighlighter(I,I,I,com.intellij.openapi.editor.markup.TextAttributes,com.intellij.openapi.editor.markup.HighlighterTargetArea):com.intellij.openapi.editor.markup.RangeHighlighter
- a:addRangeHighlighter(com.intellij.openapi.editor.colors.TextAttributesKey,I,I,I,com.intellij.openapi.editor.markup.HighlighterTargetArea):com.intellij.openapi.editor.markup.RangeHighlighter
- a:getAllHighlighters():com.intellij.openapi.editor.markup.RangeHighlighter[]
- a:getDocument():com.intellij.openapi.editor.Document
- a:removeAllHighlighters():V
- a:removeHighlighter(com.intellij.openapi.editor.markup.RangeHighlighter):V
com.intellij.openapi.editor.markup.RangeHighlighter
- com.intellij.openapi.editor.RangeMarker
- sf:EMPTY_ARRAY:com.intellij.openapi.editor.markup.RangeHighlighter[]
- a:getCustomRenderer():com.intellij.openapi.editor.markup.CustomHighlighterRenderer
- a:getEditorFilter():com.intellij.openapi.editor.markup.MarkupEditorFilter
- a:getErrorStripeMarkColor(com.intellij.openapi.editor.colors.EditorColorsScheme):java.awt.Color
- a:getErrorStripeTooltip():java.lang.Object
- a:getGutterIconRenderer():com.intellij.openapi.editor.markup.GutterIconRenderer
- a:getLayer():I
- a:getLineMarkerRenderer():com.intellij.openapi.editor.markup.LineMarkerRenderer
- a:getLineSeparatorColor():java.awt.Color
- a:getLineSeparatorPlacement():com.intellij.openapi.editor.markup.SeparatorPlacement
- a:getLineSeparatorRenderer():com.intellij.openapi.editor.markup.LineSeparatorRenderer
- a:getTargetArea():com.intellij.openapi.editor.markup.HighlighterTargetArea
- getTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
- a:getTextAttributes(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.markup.TextAttributes
- a:getTextAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- a:isThinErrorStripeMark():Z
- a:setCustomRenderer(com.intellij.openapi.editor.markup.CustomHighlighterRenderer):V
- a:setEditorFilter(com.intellij.openapi.editor.markup.MarkupEditorFilter):V
- a:setErrorStripeMarkColor(java.awt.Color):V
- a:setErrorStripeTooltip(java.lang.Object):V
- a:setGutterIconRenderer(com.intellij.openapi.editor.markup.GutterIconRenderer):V
- a:setLineMarkerRenderer(com.intellij.openapi.editor.markup.LineMarkerRenderer):V
- a:setLineSeparatorColor(java.awt.Color):V
- a:setLineSeparatorPlacement(com.intellij.openapi.editor.markup.SeparatorPlacement):V
- a:setLineSeparatorRenderer(com.intellij.openapi.editor.markup.LineSeparatorRenderer):V
- a:setTextAttributesKey(com.intellij.openapi.editor.colors.TextAttributesKey):V
- a:setThinErrorStripeMark(Z):V
e:com.intellij.openapi.editor.markup.SeparatorPlacement
- java.lang.Enum
- sf:BOTTOM:com.intellij.openapi.editor.markup.SeparatorPlacement
- sf:TOP:com.intellij.openapi.editor.markup.SeparatorPlacement
- s:valueOf(java.lang.String):com.intellij.openapi.editor.markup.SeparatorPlacement
- s:values():com.intellij.openapi.editor.markup.SeparatorPlacement[]
com.intellij.openapi.fileEditor.FileEditor
- com.intellij.openapi.Disposable
- com.intellij.openapi.util.UserDataHolder
- sf:EMPTY_ARRAY:com.intellij.openapi.fileEditor.FileEditor[]
- a:addPropertyChangeListener(java.beans.PropertyChangeListener):V
- deselectNotify():V
- getBackgroundHighlighter():com.intellij.codeHighlighting.BackgroundEditorHighlighter
- a:getComponent():javax.swing.JComponent
- getCurrentLocation():com.intellij.openapi.fileEditor.FileEditorLocation
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFilesToRefresh():java.util.List
- a:getName():java.lang.String
- a:getPreferredFocusedComponent():javax.swing.JComponent
- s:getPropModified():java.lang.String
- s:getPropValid():java.lang.String
- getState(com.intellij.openapi.fileEditor.FileEditorStateLevel):com.intellij.openapi.fileEditor.FileEditorState
- getStructureViewBuilder():com.intellij.ide.structureView.StructureViewBuilder
- getTabActions():com.intellij.openapi.actionSystem.ActionGroup
- a:isModified():Z
- a:isValid():Z
- a:removePropertyChangeListener(java.beans.PropertyChangeListener):V
- selectNotify():V
- a:setState(com.intellij.openapi.fileEditor.FileEditorState):V
- setState(com.intellij.openapi.fileEditor.FileEditorState,Z):V
com.intellij.openapi.fileEditor.FileEditorLocation
- java.lang.Comparable
- a:getEditor():com.intellij.openapi.fileEditor.FileEditor
com.intellij.openapi.fileEditor.FileEditorNavigatable
- com.intellij.pom.Navigatable
- a:getFile():com.intellij.openapi.vfs.VirtualFile
- isUseCurrentWindow():Z
- isUsePreviewTab():Z
com.intellij.openapi.fileEditor.FileEditorState
- sf:INSTANCE:com.intellij.openapi.fileEditor.FileEditorState
- a:canBeMergedWith(com.intellij.openapi.fileEditor.FileEditorState,com.intellij.openapi.fileEditor.FileEditorStateLevel):Z
e:com.intellij.openapi.fileEditor.FileEditorStateLevel
- java.lang.Enum
- sf:FULL:com.intellij.openapi.fileEditor.FileEditorStateLevel
- sf:NAVIGATION:com.intellij.openapi.fileEditor.FileEditorStateLevel
- sf:UNDO:com.intellij.openapi.fileEditor.FileEditorStateLevel
- s:valueOf(java.lang.String):com.intellij.openapi.fileEditor.FileEditorStateLevel
- s:values():com.intellij.openapi.fileEditor.FileEditorStateLevel[]
com.intellij.openapi.fileEditor.FileEditorWithTextEditors
- com.intellij.openapi.fileEditor.FileEditor
- a:getEmbeddedEditors():java.util.List
com.intellij.openapi.fileEditor.NavigatableFileEditor
- com.intellij.openapi.fileEditor.FileEditor
- a:canNavigateTo(com.intellij.pom.Navigatable):Z
- a:navigateTo(com.intellij.pom.Navigatable):V
com.intellij.openapi.fileEditor.TextEditor
- com.intellij.openapi.fileEditor.NavigatableFileEditor
- a:getEditor():com.intellij.openapi.editor.Editor
com.intellij.openapi.fileTypes.EditorHighlighterProvider
- a:getEditorHighlighter(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.highlighter.EditorHighlighter
f:com.intellij.openapi.fileTypes.FileTypeEditorHighlighterProviders
- com.intellij.openapi.fileTypes.FileTypeExtension
- sf:INSTANCE:com.intellij.openapi.fileTypes.FileTypeEditorHighlighterProviders
- s:getInstance():com.intellij.openapi.fileTypes.FileTypeEditorHighlighterProviders
f:com.intellij.openapi.fileTypes.LanguageSyntaxHighlighters
- com.intellij.lang.LanguageExtension
- s:getInstance():com.intellij.openapi.fileTypes.LanguageSyntaxHighlighters
c:com.intellij.openapi.fileTypes.PlainSyntaxHighlighter
- com.intellij.openapi.fileTypes.SyntaxHighlighter
- <init>():V
- getHighlightingLexer():com.intellij.lexer.Lexer
- getTokenHighlights(com.intellij.psi.tree.IElementType):com.intellij.openapi.editor.colors.TextAttributesKey[]
c:com.intellij.openapi.fileTypes.PlainSyntaxHighlighterFactory
- com.intellij.openapi.fileTypes.SyntaxHighlighterFactory
- <init>():V
- getSyntaxHighlighter(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.SyntaxHighlighter
a:com.intellij.openapi.fileTypes.SingleLazyInstanceSyntaxHighlighterFactory
- com.intellij.openapi.fileTypes.SyntaxHighlighterFactory
- <init>():V
- pa:createHighlighter():com.intellij.openapi.fileTypes.SyntaxHighlighter
- f:getSyntaxHighlighter(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.SyntaxHighlighter
com.intellij.openapi.fileTypes.SyntaxHighlighter
- sf:PROVIDER:com.intellij.openapi.fileTypes.SyntaxHighlighterProvider
- a:getHighlightingLexer():com.intellij.lexer.Lexer
- a:getTokenHighlights(com.intellij.psi.tree.IElementType):com.intellij.openapi.editor.colors.TextAttributesKey[]
a:com.intellij.openapi.fileTypes.SyntaxHighlighterBase
- com.intellij.openapi.fileTypes.SyntaxHighlighter
- psf:EMPTY:com.intellij.openapi.editor.colors.TextAttributesKey[]
- <init>():V
- ps:fillMap(java.util.Map,com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.psi.tree.IElementType[]):V
- s:fillMap(java.util.Map,com.intellij.psi.tree.TokenSet,com.intellij.openapi.editor.colors.TextAttributesKey):V
- s:pack(com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.openapi.editor.colors.TextAttributesKey[]
- s:pack(com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.openapi.editor.colors.TextAttributesKey[]
- s:pack(com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.colors.TextAttributesKey[]):com.intellij.openapi.editor.colors.TextAttributesKey[]
- s:pack(com.intellij.openapi.editor.colors.TextAttributesKey[],com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.openapi.editor.colors.TextAttributesKey[]
- s:pack(com.intellij.openapi.editor.colors.TextAttributesKey[],com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.openapi.editor.colors.TextAttributesKey[]
- ps:safeMap(java.util.Map,com.intellij.psi.tree.IElementType,com.intellij.openapi.editor.colors.TextAttributesKey):V
- ps:safeMap(java.util.Map,com.intellij.psi.tree.TokenSet,com.intellij.openapi.editor.colors.TextAttributesKey):V
a:com.intellij.openapi.fileTypes.SyntaxHighlighterFactory
- sf:LANGUAGE_FACTORY:com.intellij.openapi.fileTypes.SyntaxHighlighterLanguageFactory
- <init>():V
- s:getLanguageFactory():com.intellij.openapi.fileTypes.SyntaxHighlighterLanguageFactory
- s:getSyntaxHighlighter(com.intellij.lang.Language,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.SyntaxHighlighter
- s:getSyntaxHighlighter(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.SyntaxHighlighter
- a:getSyntaxHighlighter(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.SyntaxHighlighter
f:com.intellij.openapi.fileTypes.SyntaxHighlighterLanguageFactory
- com.intellij.lang.LanguageExtension
com.intellij.openapi.fileTypes.SyntaxHighlighterProvider
- a:create(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.SyntaxHighlighter
Fa:com.intellij.openapi.ide.CopyPasteManager
- sf:CUT_COLOR:java.awt.Color
- a:addContentChangedListener(com.intellij.openapi.ide.CopyPasteManager$ContentChangedListener):V
- a:addContentChangedListener(com.intellij.openapi.ide.CopyPasteManager$ContentChangedListener,com.intellij.openapi.Disposable):V
- a:areDataFlavorsAvailable(java.awt.datatransfer.DataFlavor[]):Z
- s:copyTextToClipboard(java.lang.String):V
- a:getAllContents():java.awt.datatransfer.Transferable[]
- a:getContents():java.awt.datatransfer.Transferable
- a:getContents(java.awt.datatransfer.DataFlavor):java.lang.Object
- s:getCutColor():java.awt.Color
- s:getInstance():com.intellij.openapi.ide.CopyPasteManager
- getSystemSelectionContents():java.awt.datatransfer.Transferable
- a:isCutElement(java.lang.Object):Z
- isSystemSelectionSupported():Z
- a:removeContentChangedListener(com.intellij.openapi.ide.CopyPasteManager$ContentChangedListener):V
- a:setContents(java.awt.datatransfer.Transferable):V
- setSystemSelectionContents(java.awt.datatransfer.Transferable):V
- a:stopKillRings():V
- a:stopKillRings(com.intellij.openapi.editor.Document):V
com.intellij.openapi.ide.CopyPasteManager$ContentChangedListener
- java.util.EventListener
- a:contentChanged(java.awt.datatransfer.Transferable,java.awt.datatransfer.Transferable):V
com.intellij.openapi.ide.Sizeable
- a:getSize():I
e:com.intellij.openapi.options.FontSize
- java.lang.Enum
- sf:LARGE:com.intellij.openapi.options.FontSize
- sf:MEDIUM:com.intellij.openapi.options.FontSize
- sf:SMALL:com.intellij.openapi.options.FontSize
- sf:XX_LARGE:com.intellij.openapi.options.FontSize
- sf:XX_SMALL:com.intellij.openapi.options.FontSize
- sf:X_LARGE:com.intellij.openapi.options.FontSize
- sf:X_SMALL:com.intellij.openapi.options.FontSize
- getSize():I
- larger():com.intellij.openapi.options.FontSize
- smaller():com.intellij.openapi.options.FontSize
- s:valueOf(java.lang.String):com.intellij.openapi.options.FontSize
- s:values():com.intellij.openapi.options.FontSize[]
e:com.intellij.openapi.options.advanced.AdvancedSettingType
- java.lang.Enum
- sf:Bool:com.intellij.openapi.options.advanced.AdvancedSettingType
- sf:Enum:com.intellij.openapi.options.advanced.AdvancedSettingType
- sf:Int:com.intellij.openapi.options.advanced.AdvancedSettingType
- sf:String:com.intellij.openapi.options.advanced.AdvancedSettingType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.options.advanced.AdvancedSettingType
- s:values():com.intellij.openapi.options.advanced.AdvancedSettingType[]
a:com.intellij.openapi.options.advanced.AdvancedSettings
- sf:Companion:com.intellij.openapi.options.advanced.AdvancedSettings$Companion
- <init>():V
- sf:getBoolean(java.lang.String):Z
- pa:getDefault(java.lang.String):java.lang.Object
- sf:getDefaultBoolean(java.lang.String):Z
- sf:getDefaultEnum(java.lang.String,java.lang.Class):java.lang.Enum
- sf:getDefaultInt(java.lang.String):I
- sf:getDefaultString(java.lang.String):java.lang.String
- sf:getEnum(java.lang.String,java.lang.Class):java.lang.Enum
- sf:getInstance():com.intellij.openapi.options.advanced.AdvancedSettings
- sf:getInstanceIfCreated():com.intellij.openapi.options.advanced.AdvancedSettings
- sf:getInt(java.lang.String):I
- pa:getSetting(java.lang.String):java.lang.Object
- sf:getString(java.lang.String):java.lang.String
- sf:setBoolean(java.lang.String,Z):V
- sf:setEnum(java.lang.String,java.lang.Enum):V
- sf:setInt(java.lang.String,I):V
- a:setSetting(java.lang.String,java.lang.Object,com.intellij.openapi.options.advanced.AdvancedSettingType):V
- sf:setString(java.lang.String,java.lang.String):V
f:com.intellij.openapi.options.advanced.AdvancedSettings$Companion
- f:getBoolean(java.lang.String):Z
- f:getDefaultBoolean(java.lang.String):Z
- f:getDefaultEnum(java.lang.String,java.lang.Class):java.lang.Enum
- f:getDefaultInt(java.lang.String):I
- f:getDefaultString(java.lang.String):java.lang.String
- f:getEnum(java.lang.String,java.lang.Class):java.lang.Enum
- f:getInstance():com.intellij.openapi.options.advanced.AdvancedSettings
- f:getInstanceIfCreated():com.intellij.openapi.options.advanced.AdvancedSettings
- f:getInt(java.lang.String):I
- f:getString(java.lang.String):java.lang.String
- f:setBoolean(java.lang.String,Z):V
- f:setEnum(java.lang.String,java.lang.Enum):V
- f:setInt(java.lang.String,I):V
- f:setString(java.lang.String,java.lang.String):V
com.intellij.openapi.options.advanced.AdvancedSettingsChangeListener
- sf:Companion:com.intellij.openapi.options.advanced.AdvancedSettingsChangeListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- a:advancedSettingChanged(java.lang.String,java.lang.Object,java.lang.Object):V
f:com.intellij.openapi.options.advanced.AdvancedSettingsChangeListener$Companion
f:com.intellij.openapi.util.NlsActions
@:com.intellij.openapi.util.NlsActions$ActionDescription
- java.lang.annotation.Annotation
@:com.intellij.openapi.util.NlsActions$ActionText
- java.lang.annotation.Annotation
com.intellij.openapi.util.PropertyOwner
- a:getPropertyName():java.lang.String
com.intellij.openapi.vcs.ElementStatusTracker
- a:getElementStatus(com.intellij.psi.PsiElement):com.intellij.openapi.vcs.FileStatus
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.ElementStatusTracker
com.intellij.openapi.vcs.FileStatus
- sf:ADDED:com.intellij.openapi.vcs.FileStatus
- sf:COLOR_MERGE:java.awt.Color
- sf:COLOR_MISSING:java.awt.Color
- sf:COLOR_MODIFIED:java.awt.Color
- sf:COLOR_OUT_OF_DATE:java.awt.Color
- sf:COLOR_UNKNOWN:java.awt.Color
- sf:DELETED:com.intellij.openapi.vcs.FileStatus
- sf:DELETED_FROM_FS:com.intellij.openapi.vcs.FileStatus
- sf:HIJACKED:com.intellij.openapi.vcs.FileStatus
- sf:IGNORED:com.intellij.openapi.vcs.FileStatus
- sf:MERGE:com.intellij.openapi.vcs.FileStatus
- sf:MERGED_WITH_BOTH_CONFLICTS:com.intellij.openapi.vcs.FileStatus
- sf:MERGED_WITH_CONFLICTS:com.intellij.openapi.vcs.FileStatus
- sf:MERGED_WITH_PROPERTY_CONFLICTS:com.intellij.openapi.vcs.FileStatus
- sf:MODIFIED:com.intellij.openapi.vcs.FileStatus
- sf:NOT_CHANGED:com.intellij.openapi.vcs.FileStatus
- sf:NOT_CHANGED_IMMEDIATE:com.intellij.openapi.vcs.FileStatus
- sf:NOT_CHANGED_RECURSIVE:com.intellij.openapi.vcs.FileStatus
- sf:OBSOLETE:com.intellij.openapi.vcs.FileStatus
- sf:SUPPRESSED:com.intellij.openapi.vcs.FileStatus
- sf:SWITCHED:com.intellij.openapi.vcs.FileStatus
- sf:UNKNOWN:com.intellij.openapi.vcs.FileStatus
- a:getColor():java.awt.Color
- a:getColorKey():com.intellij.openapi.editor.colors.ColorKey
- a:getId():java.lang.String
- a:getText():java.lang.String
f:com.intellij.openapi.vcs.FileStatusFactory
- createFileStatus(java.lang.String,java.lang.String):com.intellij.openapi.vcs.FileStatus
- createFileStatus(java.lang.String,java.lang.String,java.awt.Color):com.intellij.openapi.vcs.FileStatus
- createFileStatus(java.lang.String,java.util.function.Supplier,com.intellij.openapi.extensions.PluginId):com.intellij.openapi.vcs.FileStatus
- createFileStatus(java.lang.String,java.util.function.Supplier,java.awt.Color,com.intellij.openapi.extensions.PluginId):com.intellij.openapi.vcs.FileStatus
- s:getInstance():com.intellij.openapi.vcs.FileStatusFactory
com.intellij.openapi.vcs.FileStatusListener
- fileStatusChanged(com.intellij.openapi.vfs.VirtualFile):V
- fileStatusesChanged():V
a:com.intellij.openapi.vcs.FileStatusManager
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- addFileStatusListener(com.intellij.openapi.vcs.FileStatusListener,com.intellij.openapi.Disposable):V
- a:fileStatusChanged(com.intellij.openapi.vfs.VirtualFile):V
- a:fileStatusesChanged():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.FileStatusManager
- getNotChangedDirectoryColor(com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- a:getRecursiveStatus(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.FileStatus
- a:getStatus(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.FileStatus
com.intellij.presentation.FilePresentationService
- s:getFileBackgroundColor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- a:getFileBackgroundColor(com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- a:getFileBackgroundColor(com.intellij.psi.PsiElement):java.awt.Color
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.presentation.FilePresentationService
f:com.intellij.psi.search.TodoAttributesUtil
- s:createDefault():com.intellij.psi.search.TodoAttributes
- s:getDefaultColorSchemeTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
com.intellij.psi.util.PsiEditorUtil
- s:findEditor(com.intellij.psi.PsiElement):com.intellij.openapi.editor.Editor
- a:findEditorByPsiElement(com.intellij.psi.PsiElement):com.intellij.openapi.editor.Editor
- s:getInstance():com.intellij.psi.util.PsiEditorUtil
- s:getPsiFile(com.intellij.openapi.editor.Editor):com.intellij.psi.PsiFile
f:com.intellij.psi.util.PsiEditorUtil$Service
- <init>():V
- s:getInstance():com.intellij.psi.util.PsiEditorUtil
com.intellij.ui.PlaceHolder
- com.intellij.ui.PlaceProvider
- a:setPlace(java.lang.String):V
com.intellij.ui.PlaceProvider
- a:getPlace():java.lang.String
com.intellij.ui.breadcrumbs.BreadcrumbsProvider
- a:acceptElement(com.intellij.psi.PsiElement):Z
- getChildren(com.intellij.psi.PsiElement):java.util.List
- getContextActions(com.intellij.psi.PsiElement):java.util.List
- getElementIcon(com.intellij.psi.PsiElement):javax.swing.Icon
- a:getElementInfo(com.intellij.psi.PsiElement):java.lang.String
- getElementTooltip(com.intellij.psi.PsiElement):java.lang.String
- a:getLanguages():com.intellij.lang.Language[]
- getParent(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- isShownByDefault():Z
f:com.intellij.ui.breadcrumbs.BreadcrumbsUtil
- s:getInfoProvider(com.intellij.lang.Language):com.intellij.ui.breadcrumbs.BreadcrumbsProvider
com.intellij.ui.list.ListCellBackgroundSupplier
- a:getCellBackground(java.lang.Object,I):java.awt.Color
com.intellij.ui.switcher.QuickActionProvider
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- a:getActions(Z):java.util.List
- a:getComponent():javax.swing.JComponent
- a:getName():java.lang.String
- isCycleRoot():Z
e:com.intellij.ui.tree.LeafState
- java.lang.Enum
- sf:ALWAYS:com.intellij.ui.tree.LeafState
- sf:ASYNC:com.intellij.ui.tree.LeafState
- sf:DEFAULT:com.intellij.ui.tree.LeafState
- sf:NEVER:com.intellij.ui.tree.LeafState
- s:valueOf(java.lang.String):com.intellij.ui.tree.LeafState
- s:values():com.intellij.ui.tree.LeafState[]
com.intellij.ui.tree.LeafState$Supplier
- a:getLeafState():com.intellij.ui.tree.LeafState
f:com.intellij.ui.tree.TreeCollector
- add(java.lang.Object):Z
- get():java.util.List
f:com.intellij.ui.tree.TreeCollector$TreePathLeafs
- <init>():V
- s:collect(java.util.Collection):java.util.List
- s:collect(javax.swing.tree.TreePath[]):java.util.List
- s:create():com.intellij.ui.tree.TreeCollector
f:com.intellij.ui.tree.TreeCollector$TreePathRoots
- <init>():V
- s:collect(java.util.Collection):java.util.List
- s:collect(javax.swing.tree.TreePath[]):java.util.List
- s:create():com.intellij.ui.tree.TreeCollector
f:com.intellij.ui.tree.TreeCollector$VirtualFileLeafs
- <init>():V
- s:collect(java.util.Collection):java.util.List
- s:collect(com.intellij.openapi.vfs.VirtualFile[]):java.util.List
- s:create():com.intellij.ui.tree.TreeCollector
f:com.intellij.ui.tree.TreeCollector$VirtualFileRoots
- <init>():V
- s:collect(java.util.Collection):java.util.List
- s:collect(com.intellij.openapi.vfs.VirtualFile[]):java.util.List
- s:create():com.intellij.ui.tree.TreeCollector
com.intellij.ui.tree.TreePathBackgroundSupplier
- a:getPathBackground(javax.swing.tree.TreePath,I):java.awt.Color
com.intellij.ui.tree.TreeVisitor
- a:visit(javax.swing.tree.TreePath):com.intellij.ui.tree.TreeVisitor$Action
com.intellij.ui.tree.TreeVisitor$Acceptor
- a:accept(com.intellij.ui.tree.TreeVisitor):org.jetbrains.concurrency.Promise
e:com.intellij.ui.tree.TreeVisitor$Action
- java.lang.Enum
- sf:CONTINUE:com.intellij.ui.tree.TreeVisitor$Action
- sf:INTERRUPT:com.intellij.ui.tree.TreeVisitor$Action
- sf:SKIP_CHILDREN:com.intellij.ui.tree.TreeVisitor$Action
- sf:SKIP_SIBLINGS:com.intellij.ui.tree.TreeVisitor$Action
- s:valueOf(java.lang.String):com.intellij.ui.tree.TreeVisitor$Action
- s:values():com.intellij.ui.tree.TreeVisitor$Action[]
a:com.intellij.ui.tree.TreeVisitor$ByComponent
- com.intellij.ui.tree.TreeVisitor
- <init>(java.lang.Object,com.intellij.util.Function):V
- <init>(java.lang.Object,java.lang.Class):V
- pa:contains(java.lang.Object,java.lang.Object):Z
- p:matches(java.lang.Object,java.lang.Object):Z
- p:visit(java.lang.Object):com.intellij.ui.tree.TreeVisitor$Action
- visit(javax.swing.tree.TreePath):com.intellij.ui.tree.TreeVisitor$Action
c:com.intellij.ui.tree.TreeVisitor$ByTreePath
- com.intellij.ui.tree.TreeVisitor
- <init>(javax.swing.tree.TreePath,com.intellij.util.Function):V
- <init>(Z,javax.swing.tree.TreePath,com.intellij.util.Function):V
- p:matches(java.lang.Object,java.lang.Object):Z
- visit(javax.swing.tree.TreePath):com.intellij.ui.tree.TreeVisitor$Action
- p:visit(javax.swing.tree.TreePath,java.lang.Object):com.intellij.ui.tree.TreeVisitor$Action
- p:visit(javax.swing.tree.TreePath,java.lang.Object,I):com.intellij.ui.tree.TreeVisitor$Action
com.intellij.ui.tree.TreeVisitor$LoadingAwareAcceptor
- com.intellij.ui.tree.TreeVisitor$Acceptor
- accept(com.intellij.ui.tree.TreeVisitor):org.jetbrains.concurrency.Promise
- a:accept(com.intellij.ui.tree.TreeVisitor,Z):org.jetbrains.concurrency.Promise
