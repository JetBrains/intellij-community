f:com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystem
- java.nio.file.FileSystem
- <init>(com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystemProvider,com.intellij.platform.ijent.fs.IjentFileSystemApi):V
- close():V
- getFileStores():java.lang.Iterable
- getPath(java.lang.String,java.lang.String[]):com.intellij.platform.ijent.community.impl.nio.IjentNioPath
- getPathMatcher(java.lang.String):java.nio.file.PathMatcher
- getRootDirectories():java.lang.Iterable
- getSeparator():java.lang.String
- getUserPrincipalLookupService():java.nio.file.attribute.UserPrincipalLookupService
- isOpen():Z
- isReadOnly():Z
- newWatchService():java.nio.file.WatchService
- provider():com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystemProvider
- supportedFileAttributeViews():java.util.Set
*f:com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystemProvider
- java.nio.file.spi.FileSystemProvider
- *sf:Companion:com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystemProvider$Companion
- <init>():V
- checkAccess(java.nio.file.Path,java.nio.file.AccessMode[]):V
- copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[]):V
- createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[]):V
- delete(java.nio.file.Path):V
- getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[]):java.nio.file.attribute.FileAttributeView
- getFileStore(java.nio.file.Path):java.nio.file.FileStore
- getFileSystem(java.net.URI):com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystem
- sf:getInstance():com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystemProvider
- getPath(java.net.URI):com.intellij.platform.ijent.community.impl.nio.IjentNioPath
- getScheme():java.lang.String
- isHidden(java.nio.file.Path):Z
- isSameFile(java.nio.file.Path,java.nio.file.Path):Z
- move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[]):V
- newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[]):java.nio.channels.SeekableByteChannel
- newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter):java.nio.file.DirectoryStream
- newFileChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[]):java.nio.channels.FileChannel
- newFileSystem(java.net.URI,java.util.Map):com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystem
- readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[]):java.nio.file.attribute.BasicFileAttributes
- readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[]):java.util.Map
- setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[]):V
*f:com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystemProvider$Companion
- f:getInstance():com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystemProvider
- f:mockIjentFsApiGetter(kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function1):V
f:com.intellij.platform.ijent.community.impl.nio.IjentNioFileSystemUtil
- sf:asNioFileSystem(com.intellij.platform.ijent.fs.IjentFileSystemApi):java.nio.file.FileSystem
*f:com.intellij.platform.ijent.community.impl.nio.IjentNioPath
- java.nio.file.Path
- compareTo(java.nio.file.Path):I
- endsWith(java.nio.file.Path):Z
- equals(java.lang.Object):Z
- getFileName():java.nio.file.Path
- getFileSystem():java.nio.file.FileSystem
- f:getIjentId():com.intellij.platform.ijent.IjentId
- f:getIjentPath():com.intellij.platform.ijent.fs.IjentPath
- getName(I):java.nio.file.Path
- getNameCount():I
- getParent():java.nio.file.Path
- getRoot():java.nio.file.Path
- hashCode():I
- isAbsolute():Z
- normalize():java.nio.file.Path
- register(java.nio.file.WatchService,java.nio.file.WatchEvent$Kind[],java.nio.file.WatchEvent$Modifier[]):java.nio.file.WatchKey
- relativize(java.nio.file.Path):java.nio.file.Path
- resolve(java.nio.file.Path):java.nio.file.Path
- startsWith(java.nio.file.Path):Z
- subpath(I,I):java.nio.file.Path
- toAbsolutePath():com.intellij.platform.ijent.community.impl.nio.IjentNioPath
- toRealPath(java.nio.file.LinkOption[]):java.nio.file.Path
- toString():java.lang.String
- toUri():java.net.URI
