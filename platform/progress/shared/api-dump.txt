com.intellij.platform.ide.progress.ModalTaskOwner
- s:component(java.awt.Component):com.intellij.platform.ide.progress.ModalTaskOwner
- s:guess():com.intellij.platform.ide.progress.ModalTaskOwner
- s:project(com.intellij.openapi.project.Project):com.intellij.platform.ide.progress.ModalTaskOwner
com.intellij.platform.ide.progress.TaskCancellation
- sf:Companion:com.intellij.platform.ide.progress.TaskCancellation$Companion
- s:cancellable():com.intellij.platform.ide.progress.TaskCancellation$Cancellable
- s:nonCancellable():com.intellij.platform.ide.progress.TaskCancellation$NonCancellable
com.intellij.platform.ide.progress.TaskCancellation$Cancellable
- com.intellij.platform.ide.progress.TaskCancellation
- sf:Companion:com.intellij.platform.ide.progress.TaskCancellation$Cancellable$Companion
- a:withButtonText(java.lang.String):com.intellij.platform.ide.progress.TaskCancellation$Cancellable
- a:withTooltipText(java.lang.String):com.intellij.platform.ide.progress.TaskCancellation$Cancellable
f:com.intellij.platform.ide.progress.TaskCancellation$Cancellable$Companion
- f:serializer():kotlinx.serialization.KSerializer
f:com.intellij.platform.ide.progress.TaskCancellation$Companion
- f:cancellable():com.intellij.platform.ide.progress.TaskCancellation$Cancellable
- f:nonCancellable():com.intellij.platform.ide.progress.TaskCancellation$NonCancellable
- f:serializer():kotlinx.serialization.KSerializer
com.intellij.platform.ide.progress.TaskCancellation$NonCancellable
- com.intellij.platform.ide.progress.TaskCancellation
- sf:Companion:com.intellij.platform.ide.progress.TaskCancellation$NonCancellable$Companion
f:com.intellij.platform.ide.progress.TaskCancellation$NonCancellable$Companion
- f:serializer():kotlinx.serialization.KSerializer
f:com.intellij.platform.ide.progress.TasksKt
- sf:runWithModalProgressBlocking(com.intellij.openapi.project.Project,java.lang.String,kotlin.jvm.functions.Function2):java.lang.Object
- sf:runWithModalProgressBlocking(com.intellij.platform.ide.progress.ModalTaskOwner,java.lang.String,com.intellij.platform.ide.progress.TaskCancellation,kotlin.jvm.functions.Function2):java.lang.Object
- bs:runWithModalProgressBlocking$default(com.intellij.platform.ide.progress.ModalTaskOwner,java.lang.String,com.intellij.platform.ide.progress.TaskCancellation,kotlin.jvm.functions.Function2,I,java.lang.Object):java.lang.Object
- sf:withBackgroundProgress(com.intellij.openapi.project.Project,java.lang.String,com.intellij.platform.ide.progress.TaskCancellation,com.intellij.platform.ide.progress.suspender.TaskSuspender,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- sf:withBackgroundProgress(com.intellij.openapi.project.Project,java.lang.String,com.intellij.platform.ide.progress.TaskCancellation,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- sf:withBackgroundProgress(com.intellij.openapi.project.Project,java.lang.String,com.intellij.platform.ide.progress.suspender.TaskSuspender,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- sf:withBackgroundProgress(com.intellij.openapi.project.Project,java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- sf:withBackgroundProgress(com.intellij.openapi.project.Project,java.lang.String,Z,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- sf:withModalProgress(com.intellij.openapi.project.Project,java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- sf:withModalProgress(com.intellij.platform.ide.progress.ModalTaskOwner,java.lang.String,com.intellij.platform.ide.progress.TaskCancellation,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
com.intellij.platform.ide.progress.suspender.TaskSuspender
- sf:Companion:com.intellij.platform.ide.progress.suspender.TaskSuspender$Companion
- a:isPaused():Z
- a:pause(java.lang.String):V
- bs:pause$default(com.intellij.platform.ide.progress.suspender.TaskSuspender,java.lang.String,I,java.lang.Object):V
- a:resume():V
- s:suspendable(java.lang.String):com.intellij.platform.ide.progress.suspender.TaskSuspender
f:com.intellij.platform.ide.progress.suspender.TaskSuspender$Companion
- f:suspendable(java.lang.String):com.intellij.platform.ide.progress.suspender.TaskSuspender
f:com.intellij.platform.ide.progress.suspender.TaskSuspenderKt
- sf:asContextElement(com.intellij.platform.ide.progress.suspender.TaskSuspender):kotlin.coroutines.CoroutineContext
a:com.intellij.platform.ide.progress.suspender.TaskSuspenderState
f:com.intellij.platform.ide.progress.suspender.TaskSuspenderState$Active
- com.intellij.platform.ide.progress.suspender.TaskSuspenderState
- sf:INSTANCE:com.intellij.platform.ide.progress.suspender.TaskSuspenderState$Active
f:com.intellij.platform.ide.progress.suspender.TaskSuspenderState$Paused
- com.intellij.platform.ide.progress.suspender.TaskSuspenderState
- <init>(java.lang.String):V
- f:getSuspendedReason():java.lang.String
