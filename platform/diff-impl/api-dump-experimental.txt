*f:com.intellij.diff.tools.combined.BlockBounds
- <init>(com.intellij.diff.tools.combined.CombinedBlockId,I,I):V
- f:component1():com.intellij.diff.tools.combined.CombinedBlockId
- f:component2():I
- f:component3():I
- f:copy(com.intellij.diff.tools.combined.CombinedBlockId,I,I):com.intellij.diff.tools.combined.BlockBounds
- bs:copy$default(com.intellij.diff.tools.combined.BlockBounds,com.intellij.diff.tools.combined.CombinedBlockId,I,I,I,java.lang.Object):com.intellij.diff.tools.combined.BlockBounds
- equals(java.lang.Object):Z
- f:getBlockId():com.intellij.diff.tools.combined.CombinedBlockId
- f:getHeight():I
- f:getMaxY():I
- f:getMinY():I
- hashCode():I
*:com.intellij.diff.tools.combined.BlockOrder
- a:getBlocksCount():I
- a:getOrNull(I):com.intellij.diff.tools.combined.CombinedBlockId
- a:indexOf(com.intellij.diff.tools.combined.CombinedBlockId):I
- a:iterateBlocks():java.lang.Iterable
*f:com.intellij.diff.tools.combined.BlockState
- com.intellij.diff.tools.combined.BlockOrder
- <init>(java.util.List,com.intellij.diff.tools.combined.CombinedBlockId):V
- f:addListener(com.intellij.diff.tools.combined.BlockStateListener,com.intellij.openapi.Disposable):V
- canGoNext():Z
- canGoPrev():Z
- getBlocksCount():I
- f:getCurrentBlock():com.intellij.diff.tools.combined.CombinedBlockId
- getOrNull(I):com.intellij.diff.tools.combined.CombinedBlockId
- goNext():V
- goPrev():V
- indexOf(com.intellij.diff.tools.combined.CombinedBlockId):I
- iterateBlocks():java.lang.Iterable
- f:setCurrentBlock(com.intellij.diff.tools.combined.CombinedBlockId):V
*:com.intellij.diff.tools.combined.BlockStateListener
- java.util.EventListener
- a:onCurrentChanged(com.intellij.diff.tools.combined.CombinedBlockId,com.intellij.diff.tools.combined.CombinedBlockId):V
*:com.intellij.diff.tools.combined.CombinedBlockId
*f:com.intellij.diff.tools.combined.CombinedBlockProducer
- <init>(com.intellij.diff.tools.combined.CombinedBlockId,com.intellij.diff.chains.DiffRequestProducer):V
- f:getId():com.intellij.diff.tools.combined.CombinedBlockId
- f:getProducer():com.intellij.diff.chains.DiffRequestProducer
*:com.intellij.diff.tools.combined.CombinedCollapsibleDiffBlock
- com.intellij.diff.tools.combined.CombinedSelectableDiffBlock
- a:addListener(com.intellij.diff.tools.combined.CombinedDiffBlockListener,com.intellij.openapi.Disposable):V
- a:setCollapsed(Z):V
*:com.intellij.diff.tools.combined.CombinedDiffBlock
- com.intellij.openapi.Disposable
- a:getBody():javax.swing.JComponent
- a:getComponent():javax.swing.JComponent
- a:getHeader():javax.swing.JComponent
- a:getId():com.intellij.diff.tools.combined.CombinedBlockId
- a:getPreferredFocusComponent():javax.swing.JComponent
- a:getStickyHeaderComponent():javax.swing.JComponent
- updateBlockContent(com.intellij.diff.tools.combined.CombinedDiffBlockContent):V
*f:com.intellij.diff.tools.combined.CombinedDiffBlockContent
- <init>(com.intellij.diff.FrameDiffTool$DiffViewer,com.intellij.diff.tools.combined.CombinedBlockId):V
- f:getBlockId():com.intellij.diff.tools.combined.CombinedBlockId
- f:getViewer():com.intellij.diff.FrameDiffTool$DiffViewer
*:com.intellij.diff.tools.combined.CombinedDiffBlockFactory
- a:createBlock(com.intellij.openapi.project.Project,com.intellij.diff.tools.combined.CombinedDiffBlockContent,Z):com.intellij.diff.tools.combined.CombinedDiffBlock
*:com.intellij.diff.tools.combined.CombinedDiffBlockListener
- java.util.EventListener
- a:onCollapseStateChanged(com.intellij.diff.tools.combined.CombinedBlockId,Z):V
*:com.intellij.diff.tools.combined.CombinedDiffCaretNavigation
- a:moveCaretPageDown():V
- a:moveCaretPageUp():V
- a:moveCaretToNextBlock():V
- a:moveCaretToPrevBlock():V
*:com.intellij.diff.tools.combined.CombinedDiffComponentProcessor
- com.intellij.diff.impl.DiffEditorViewer
- a:cleanBlocks():V
- a:getBlocks():java.util.List
- a:setBlocks(java.util.List):V
f:com.intellij.diff.tools.combined.CombinedDiffKeysKt
- *sf:getCOMBINED_DIFF_MAIN_UI():com.intellij.openapi.util.Key
- *sf:getCOMBINED_DIFF_SCROLL_TO_BLOCK():com.intellij.openapi.util.Key
- *sf:getCOMBINED_DIFF_VIEWER():com.intellij.openapi.actionSystem.DataKey
- *sf:getCOMBINED_DIFF_VIEWER_INITIAL_FOCUS_REQUEST():com.intellij.openapi.util.Key
- *sf:getCOMBINED_DIFF_VIEWER_KEY():com.intellij.openapi.util.Key
- *sf:getDISABLE_LOADING_BLOCKS():com.intellij.openapi.util.Key
*:com.intellij.diff.tools.combined.CombinedDiffManager
- *sf:Companion:com.intellij.diff.tools.combined.CombinedDiffManager$Companion
- a:createProcessor(java.lang.String):com.intellij.diff.tools.combined.CombinedDiffComponentProcessor
- bs:createProcessor$default(com.intellij.diff.tools.combined.CombinedDiffManager,java.lang.String,I,java.lang.Object):com.intellij.diff.tools.combined.CombinedDiffComponentProcessor
*f:com.intellij.diff.tools.combined.CombinedDiffManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.diff.tools.combined.CombinedDiffManager
*:com.intellij.diff.tools.combined.CombinedDiffModelListener
- java.util.EventListener
- a:onModelReset():V
- a:onRequestContentsUnloaded(java.util.Map):V
- a:onRequestsLoaded(com.intellij.diff.tools.combined.CombinedBlockId,com.intellij.diff.requests.DiffRequest):V
*:com.intellij.diff.tools.combined.CombinedDiffNavigation
- a:canGoNextBlock():Z
- a:canGoNextDiff():Z
- a:canGoPrevBlock():Z
- a:canGoPrevDiff():Z
- a:goNextBlock():V
- a:goNextDiff():V
- a:goPrevBlock():V
- a:goPrevDiff():V
*f:com.intellij.diff.tools.combined.CombinedDiffRegistry
- sf:INSTANCE:com.intellij.diff.tools.combined.CombinedDiffRegistry
- f:addStateListener(java.lang.Runnable,com.intellij.openapi.Disposable):V
- f:getFilesLimit():I
- f:getMaxBlockCountInMemory():I
- f:getPreloadedBlocksCount():I
- f:isEnabled():Z
- f:setCombinedDiffEnabled(Z):V
*f:com.intellij.diff.tools.combined.CombinedDiffUIState
- <init>():V
- f:getDiffInfoStateFlow():kotlinx.coroutines.flow.StateFlow
- f:getSeparatorState():kotlinx.coroutines.flow.Flow
- f:reset():V
- f:setDiffInfo(com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState):V
- f:setSearchMode(Z):V
- f:setStickyHeaderUnderBorder(Z):V
*a:com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState
*f:com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState$Empty
- com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState
- sf:INSTANCE:com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState$Empty
- equals(java.lang.Object):Z
- hashCode():I
*f:com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState$SingleTitle
- com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState$SingleTitle
- bs:copy$default(com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState$SingleTitle,java.lang.String,I,java.lang.Object):com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState$SingleTitle
- equals(java.lang.Object):Z
- f:getTitle():java.lang.String
- hashCode():I
*f:com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState$TwoTitles
- com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState
- <init>(java.lang.String,java.lang.String):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:copy(java.lang.String,java.lang.String):com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState$TwoTitles
- bs:copy$default(com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState$TwoTitles,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.diff.tools.combined.CombinedDiffUIState$DiffInfoState$TwoTitles
- equals(java.lang.Object):Z
- f:getLeftTitle():java.lang.String
- f:getRightTitle():java.lang.String
- hashCode():I
*a:com.intellij.diff.tools.combined.CombinedDiffVirtualFile
- com.intellij.diff.editor.DiffViewerVirtualFile
- <init>(java.lang.String,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- a:createViewer(com.intellij.openapi.project.Project):com.intellij.diff.tools.combined.CombinedDiffComponentProcessor
- getPath():java.lang.String
*f:com.intellij.diff.tools.combined.CombinedPathBlockId
- com.intellij.diff.tools.combined.CombinedBlockId
- <init>(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FileStatus,java.lang.Object):V
- b:<init>(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FileStatus,java.lang.Object,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():com.intellij.openapi.vcs.FilePath
- f:component2():com.intellij.openapi.vcs.FileStatus
- f:component3():java.lang.Object
- f:copy(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FileStatus,java.lang.Object):com.intellij.diff.tools.combined.CombinedPathBlockId
- bs:copy$default(com.intellij.diff.tools.combined.CombinedPathBlockId,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FileStatus,java.lang.Object,I,java.lang.Object):com.intellij.diff.tools.combined.CombinedPathBlockId
- equals(java.lang.Object):Z
- f:getFileStatus():com.intellij.openapi.vcs.FileStatus
- f:getPath():com.intellij.openapi.vcs.FilePath
- f:getTag():java.lang.Object
- hashCode():I
*:com.intellij.diff.tools.combined.CombinedSelectableDiffBlock
- com.intellij.diff.tools.combined.CombinedDiffBlock
- a:setSelected(Z):V
- updateBorder(Z):V
*:com.intellij.diff.util.CombinedDiffToggle
- *sf:Companion:com.intellij.diff.util.CombinedDiffToggle$Companion
- s:getDEFAULT():com.intellij.diff.util.CombinedDiffToggle
- a:isCombinedDiffEnabled():Z
- a:setCombinedDiffEnabled(Z):V
*f:com.intellij.diff.util.CombinedDiffToggle$Companion
- f:getDEFAULT():com.intellij.diff.util.CombinedDiffToggle
*c:com.intellij.openapi.diff.LineStatusMarkerColorScheme
- *sf:Companion:com.intellij.openapi.diff.LineStatusMarkerColorScheme$Companion
- sf:DEFAULT:com.intellij.openapi.diff.LineStatusMarkerColorScheme
- <init>():V
- getBorderColor(com.intellij.openapi.editor.Editor):java.awt.Color
- getColor(com.intellij.openapi.editor.Editor,B):java.awt.Color
- getErrorStripeColor(B):java.awt.Color
- getIgnoredBorderColor(com.intellij.openapi.editor.Editor,B):java.awt.Color
*f:com.intellij.openapi.diff.LineStatusMarkerColorScheme$Companion
*:com.intellij.openapi.vcs.ex.LineStatusMarkerRangesSource
- a:findRange(com.intellij.openapi.vcs.ex.Range):com.intellij.openapi.vcs.ex.Range
- a:getRanges():java.util.List
- a:isValid():Z
*:com.intellij.openapi.vcs.ex.LineStatusMarkerRendererWithPopupController
- a:reopenRange(com.intellij.openapi.editor.Editor,com.intellij.openapi.vcs.ex.Range,java.awt.Point):V
- a:scrollAndShow(com.intellij.openapi.editor.Editor,com.intellij.openapi.vcs.ex.Range):V
- a:showAfterScroll(com.intellij.openapi.editor.Editor,com.intellij.openapi.vcs.ex.Range):V
- a:showHintAt(com.intellij.openapi.editor.Editor,com.intellij.openapi.vcs.ex.Range,java.awt.Point):V
*f:com.intellij.openapi.vcs.ex.RangeExclusionState$Partial
- com.intellij.openapi.vcs.ex.RangeExclusionState
- <init>(I,I,java.util.BitSet,java.util.BitSet):V
- f:getAdditionsCount():I
- f:getDeletionsCount():I
- getHasExcluded():Z
- getHasIncluded():Z
- f:getIncludedAdditionsCount():I
- f:getIncludedDeletionsCount():I
- f:iterateAdditionOffsets(kotlin.jvm.functions.Function3):V
- f:iterateDeletionOffsets(kotlin.jvm.functions.Function3):V
- f:iterateIncludedAdditionRanges(com.intellij.diff.util.Range,kotlin.jvm.functions.Function1):V
- f:iterateIncludedDeletionRanges(com.intellij.diff.util.Range,kotlin.jvm.functions.Function1):V
- f:validate(I,I):V
