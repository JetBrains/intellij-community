c:com.intellij.extapi.psi.StubBasedPsiElementBase
- com.intellij.extapi.psi.ASTDelegatePsiElement
- *:<init>(com.intellij.psi.stubs.StubElement,com.intellij.psi.tree.IElementType):V
- *pf:getElementTypeImpl():com.intellij.psi.tree.IElementType
- *f:getRequiredStubOrPsiChild(com.intellij.psi.tree.IElementType):com.intellij.psi.PsiElement
- *f:getRequiredStubOrPsiChild(com.intellij.psi.tree.IElementType,java.lang.Class):com.intellij.psi.PsiElement
- *f:getStubOrPsiChild(com.intellij.psi.tree.IElementType):com.intellij.psi.PsiElement
- *f:getStubOrPsiChild(com.intellij.psi.tree.IElementType,java.lang.Class):com.intellij.psi.PsiElement
*f:com.intellij.ide.plugins.IdeaPluginDescriptorExtensions
- *sf:getContentModuleName(com.intellij.ide.plugins.IdeaPluginDescriptor):java.lang.String
- *sf:getContentModules(com.intellij.ide.plugins.IdeaPluginDescriptor):java.util.List
- *sf:getMainDescriptor(com.intellij.ide.plugins.IdeaPluginDescriptor):com.intellij.ide.plugins.IdeaPluginDescriptor
- *sf:getModuleDependencies(com.intellij.ide.plugins.IdeaPluginDescriptor):com.intellij.ide.plugins.ModuleDependencies
- *sf:isRequiredContentModule(com.intellij.ide.plugins.IdeaPluginDescriptor):Z
*f:com.intellij.ide.plugins.ModuleDependencies
- <init>(java.util.List,java.util.List):V
- f:getModules():java.util.List
- f:getPlugins():java.util.List
*f:com.intellij.ide.plugins.ModuleDependencies$ModuleReference
- <init>(java.lang.String):V
- f:getName():java.lang.String
*f:com.intellij.ide.plugins.ModuleDependencies$PluginReference
- <init>(com.intellij.openapi.extensions.PluginId):V
- f:getId():com.intellij.openapi.extensions.PluginId
*:com.intellij.ide.plugins.PluginEnabler
- sf:HEADLESS:com.intellij.ide.plugins.PluginEnabler$Headless
- a:disable(java.util.Collection):Z
- disableById(java.util.Set):Z
- a:enable(java.util.Collection):Z
- enableById(java.util.Set):Z
- s:getInstance():com.intellij.ide.plugins.PluginEnabler
- a:isDisabled(com.intellij.openapi.extensions.PluginId):Z
*:com.intellij.ide.plugins.PluginEnabler$Headless
- com.intellij.ide.plugins.PluginEnabler
- a:isIgnoredDisabledPlugins():Z
- a:setIgnoredDisabledPlugins(Z):V
f:com.intellij.ide.plugins.PluginManagerCore
- *sf:isLoaded(com.intellij.openapi.extensions.PluginDescriptor):Z
*:com.intellij.ide.plugins.PluginNonLoadReason
- a:getDetailedMessage():java.lang.String
- a:getLogMessage():java.lang.String
- a:getPlugin():com.intellij.ide.plugins.IdeaPluginDescriptor
- a:getShortMessage():java.lang.String
- a:getShouldNotifyUser():Z
*c:com.intellij.lang.impl.TokenSequence
- com.intellij.lexer.TokenList
- asLexer():com.intellij.lexer.Lexer
- getTokenCount():I
- getTokenEnd(I):I
- getTokenStart(I):I
- getTokenType(I):com.intellij.psi.tree.IElementType
- getTokenizedText():java.lang.CharSequence
- s:performLexing(java.lang.CharSequence,com.intellij.lexer.Lexer):com.intellij.lexer.TokenList
com.intellij.openapi.application.ex.ApplicationEx
- com.intellij.openapi.application.Application
- *:addWriteActionListener(com.intellij.openapi.application.WriteActionListener,com.intellij.openapi.Disposable):V
- *:runWriteActionWithCancellableProgressInDispatchThread(java.lang.String,com.intellij.openapi.project.Project,javax.swing.JComponent,java.util.function.Consumer):Z
- *:runWriteActionWithNonCancellableProgressInDispatchThread(java.lang.String,com.intellij.openapi.project.Project,javax.swing.JComponent,java.util.function.Consumer):Z
a:com.intellij.openapi.application.ex.ApplicationInfoEx
- com.intellij.openapi.application.ApplicationInfo
- *a:isPreview():Z
*a:com.intellij.openapi.editor.impl.DocumentWriteAccessGuard
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- ps:fail(java.lang.String):com.intellij.openapi.editor.impl.DocumentWriteAccessGuard$Result
- a:isWritable(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.impl.DocumentWriteAccessGuard$Result
- ps:success():com.intellij.openapi.editor.impl.DocumentWriteAccessGuard$Result
*c:com.intellij.openapi.editor.impl.DocumentWriteAccessGuard$Result
- getFailureReason():java.lang.String
- isSuccess():Z
a:com.intellij.openapi.fileEditor.impl.FileDocumentManagerBase
- com.intellij.openapi.fileEditor.FileDocumentManager
- *s:isTrackable(com.intellij.openapi.vfs.VirtualFile):Z
*f:com.intellij.psi.DummyBlockType
- sf:DUMMY_BLOCK:com.intellij.psi.tree.IElementType
- <init>():V
*c:com.intellij.psi.DummyBlockType$DummyBlock
- com.intellij.psi.impl.source.tree.CompositePsiElement
- <init>():V
- getLanguage():com.intellij.lang.Language
- getReferences():com.intellij.psi.PsiReference[]
com.intellij.psi.impl.PsiFileEx
- com.intellij.psi.PsiFile
- *s:isBatchReferenceProcessingEnabled(com.intellij.psi.PsiFile):Z
*:com.intellij.psi.impl.PsiFileEx$BatchReferenceProcessingSuppressor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:isSuppressed(com.intellij.psi.PsiFile):Z
f:com.intellij.psi.impl.PsiModificationTrackerImpl
- com.intellij.psi.impl.PsiTreeChangePreprocessor
- com.intellij.psi.util.PsiModificationTracker
- *:incLanguageModificationCount(com.intellij.lang.Language):V
f:com.intellij.psi.impl.file.PsiFileImplUtil
- *s:setNonPhysicalFileDeleteHandler(com.intellij.psi.PsiFile,java.util.function.Consumer):V
a:com.intellij.psi.impl.source.PsiFileImpl
- com.intellij.psi.impl.ElementBase
- com.intellij.openapi.ui.Queryable
- com.intellij.psi.impl.PsiFileEx
- com.intellij.psi.impl.source.PsiFileWithStubSupport
- java.lang.Cloneable
- *:getStubDescriptor():com.intellij.psi.stubs.LanguageStubDescriptor
c:com.intellij.psi.impl.source.resolve.ResolveCache
- com.intellij.openapi.Disposable
- *:resolveWithCaching(com.intellij.model.psi.PsiSymbolReference,com.intellij.psi.impl.source.resolve.ResolveCache$PsiSymbolReferenceResolver):java.util.Collection
- *:resolveWithCaching(com.intellij.model.psi.PsiSymbolReference,Z,com.intellij.psi.impl.source.resolve.ResolveCache$PsiSymbolReferenceResolver):java.util.Collection
*:com.intellij.psi.impl.source.resolve.ResolveCache$PsiSymbolReferenceResolver
- a:resolve(com.intellij.model.psi.PsiSymbolReference):java.util.Collection
c:com.intellij.psi.stubs.PsiFileStubImpl
- com.intellij.psi.stubs.StubBase
- com.intellij.psi.stubs.PsiFileStub
- *:getElementType():com.intellij.psi.tree.IElementType
- *:getStubSerializer():com.intellij.psi.stubs.ObjectStubSerializer
*f:com.intellij.psi.stubs.StubElementUtil
- sf:shouldCreateStubForPsi(com.intellij.psi.stubs.StubElementFactory,com.intellij.psi.PsiElement):Z
f:com.intellij.psi.stubs.StubTreeBuilder
- *s:getStubbedRootDescriptors(com.intellij.psi.FileViewProvider):java.util.List
