a:com.intellij.codeInsight.CodeInsightUtilCore
- com.intellij.codeInsight.FileModificationService
- <init>():V
- s:findElementInRange(com.intellij.psi.PsiFile,I,I,java.lang.Class,com.intellij.lang.Language):com.intellij.psi.PsiElement
- s:forcePsiPostprocessAndRestoreElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:forcePsiPostprocessAndRestoreElement(com.intellij.psi.PsiElement,Z):com.intellij.psi.PsiElement
- s:parseStringCharacters(java.lang.String,java.lang.StringBuilder,I[]):Z
- s:parseStringCharacters(java.lang.String,java.lang.StringBuilder,I[],Z):Z
- s:parseStringCharacters(java.lang.String,I[]):java.lang.CharSequence
com.intellij.codeInsight.TargetElementEvaluator
- getElementByReference(com.intellij.psi.PsiReference,I):com.intellij.psi.PsiElement
- a:includeSelfInGotoImplementation(com.intellij.psi.PsiElement):Z
f:com.intellij.codeInsight.completion.CompletionUtilCoreImpl
- <init>():V
- s:getOriginalElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getOriginalElement(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- s:getOriginalOrSelf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
c:com.intellij.codeInsight.controlflow.ControlFlowBuilder
- sf:LOG:com.intellij.openapi.diagnostic.Logger
- instructionCount:I
- instructions:java.util.List
- pending:java.util.List
- prevInstruction:com.intellij.codeInsight.controlflow.Instruction
- transparentInstructionCount:I
- <init>():V
- addEdge(com.intellij.codeInsight.controlflow.Instruction,com.intellij.codeInsight.controlflow.Instruction):V
- p:addEntryPointNode(com.intellij.psi.PsiElement):V
- f:addNode(com.intellij.codeInsight.controlflow.Instruction):V
- f:addNodeAndCheckPending(com.intellij.codeInsight.controlflow.Instruction):V
- addPendingEdge(com.intellij.psi.PsiElement,com.intellij.codeInsight.controlflow.Instruction):V
- f:build(com.intellij.psi.PsiElementVisitor,com.intellij.psi.PsiElement):com.intellij.codeInsight.controlflow.ControlFlow
- f:checkPending(com.intellij.codeInsight.controlflow.Instruction):V
- f:completeControlFlow():com.intellij.codeInsight.controlflow.ControlFlow
- findInstructionByElement(com.intellij.psi.PsiElement):com.intellij.codeInsight.controlflow.Instruction
- f:flowAbrupted():V
- f:getControlFlow():com.intellij.codeInsight.controlflow.ControlFlow
- processPending(com.intellij.codeInsight.controlflow.ControlFlowBuilder$PendingProcessor):V
- f:startConditionalNode(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):com.intellij.codeInsight.controlflow.Instruction
- startNode(com.intellij.psi.PsiElement):com.intellij.codeInsight.controlflow.Instruction
- f:startTransparentNode(com.intellij.psi.PsiElement,java.lang.String):com.intellij.codeInsight.controlflow.TransparentInstruction
- f:updatePendingElementScope(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- f:visitFor(com.intellij.psi.PsiElementVisitor,com.intellij.psi.PsiElement):V
com.intellij.codeInsight.controlflow.ControlFlowBuilder$PendingProcessor
- a:process(com.intellij.psi.PsiElement,com.intellij.codeInsight.controlflow.Instruction):V
com.intellij.codeInsight.controlflow.ControlFlowProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getAdditionalInfo(com.intellij.codeInsight.controlflow.Instruction):java.lang.String
- a:getControlFlow(com.intellij.psi.PsiElement):com.intellij.codeInsight.controlflow.ControlFlow
f:com.intellij.codeInsight.controlflow.ControlFlowUtil
- s:createGraph(com.intellij.codeInsight.controlflow.Instruction[]):com.intellij.util.graph.Graph
- s:findInstructionNumberByElement(com.intellij.codeInsight.controlflow.Instruction[],com.intellij.psi.PsiElement):I
- s:iterate(I,com.intellij.codeInsight.controlflow.Instruction[],com.intellij.util.Function,Z):V
- s:iteratePrev(I,com.intellij.codeInsight.controlflow.Instruction[],com.intellij.util.Function):V
- s:process(com.intellij.codeInsight.controlflow.Instruction[],I,com.intellij.util.Processor):Z
e:com.intellij.codeInsight.controlflow.ControlFlowUtil$Operation
- java.lang.Enum
- sf:BREAK:com.intellij.codeInsight.controlflow.ControlFlowUtil$Operation
- sf:CONTINUE:com.intellij.codeInsight.controlflow.ControlFlowUtil$Operation
- sf:NEXT:com.intellij.codeInsight.controlflow.ControlFlowUtil$Operation
- s:valueOf(java.lang.String):com.intellij.codeInsight.controlflow.ControlFlowUtil$Operation
- s:values():com.intellij.codeInsight.controlflow.ControlFlowUtil$Operation[]
c:com.intellij.codeInsight.controlflow.impl.ConditionalInstructionImpl
- com.intellij.codeInsight.controlflow.impl.InstructionImpl
- com.intellij.codeInsight.controlflow.ConditionalInstruction
- <init>(com.intellij.codeInsight.controlflow.ControlFlowBuilder,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):V
- getCondition():com.intellij.psi.PsiElement
- getResult():Z
c:com.intellij.codeInsight.controlflow.impl.ControlFlowImpl
- com.intellij.codeInsight.controlflow.ControlFlow
- <init>(com.intellij.codeInsight.controlflow.Instruction[]):V
- getInstructions():com.intellij.codeInsight.controlflow.Instruction[]
c:com.intellij.codeInsight.controlflow.impl.DetachedInstructionImpl
- com.intellij.codeInsight.controlflow.impl.InstructionBaseImpl
- <init>(com.intellij.psi.PsiElement):V
- f:addNode(com.intellij.codeInsight.controlflow.ControlFlowBuilder):V
- f:addToInstructions(com.intellij.codeInsight.controlflow.ControlFlowBuilder):V
- f:addTransparentNode(com.intellij.codeInsight.controlflow.ControlFlowBuilder):V
- num():I
- updateNum(I):V
a:com.intellij.codeInsight.controlflow.impl.InstructionBaseImpl
- com.intellij.codeInsight.controlflow.Instruction
- pf:myElement:com.intellij.psi.PsiElement
- <init>(com.intellij.psi.PsiElement):V
- f:allPred():java.util.List
- f:allSucc():java.util.List
- getElement():com.intellij.psi.PsiElement
- getElementPresentation():java.lang.String
- p:id():java.lang.String
c:com.intellij.codeInsight.controlflow.impl.InstructionImpl
- com.intellij.codeInsight.controlflow.impl.InstructionBaseImpl
- <init>(com.intellij.codeInsight.controlflow.ControlFlowBuilder,com.intellij.psi.PsiElement):V
- f:num():I
c:com.intellij.codeInsight.controlflow.impl.TransparentInstructionImpl
- com.intellij.codeInsight.controlflow.impl.InstructionBaseImpl
- com.intellij.codeInsight.controlflow.TransparentInstruction
- <init>(com.intellij.codeInsight.controlflow.ControlFlowBuilder,com.intellij.psi.PsiElement,java.lang.String):V
- getElementPresentation():java.lang.String
- p:id():java.lang.String
- num():I
f:com.intellij.codeInsight.daemon.impl.CollectHighlightsUtil
- s:findCommonParent(com.intellij.psi.PsiElement,I,I):com.intellij.psi.PsiElement
- s:getElementsInRange(com.intellij.psi.PsiElement,I,I):java.util.List
- s:getElementsInRange(com.intellij.psi.PsiElement,I,I,Z):java.util.List
f:com.intellij.codeInsight.documentation.PlatformDocumentationUtil
- <init>():V
- s:fixupText(java.lang.CharSequence):java.lang.String
- s:getDocUrl(com.intellij.openapi.vfs.VirtualFile,java.lang.String):java.lang.String
- s:getHttpRoots(java.lang.String[],java.lang.String):java.util.List
f:com.intellij.codeInsight.highlighting.HighlightUsagesDescriptionLocation
- com.intellij.psi.ElementDescriptionLocation
- sf:INSTANCE:com.intellij.codeInsight.highlighting.HighlightUsagesDescriptionLocation
- getDefaultProvider():com.intellij.psi.ElementDescriptionProvider
f:com.intellij.codeInsight.highlighting.ReadWriteUtil
- <init>():V
- s:getReadWriteAccess(com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement):com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access
f:com.intellij.concurrency.JobSchedulerImpl
- <init>():V
- s:getCPUCoresCount():I
- s:getJobPoolParallelism():I
c:com.intellij.concurrency.SensitiveProgressWrapper
- com.intellij.openapi.progress.util.ProgressWrapper
- <init>(com.intellij.openapi.progress.ProgressIndicator):V
c:com.intellij.core.CoreASTFactory
- com.intellij.lang.DefaultASTFactoryImpl
- <init>():V
c:com.intellij.core.CoreApplicationEnvironment
- pf:application:com.intellij.mock.MockApplication
- pf:myJarFileSystem:com.intellij.openapi.vfs.VirtualFileSystem
- <init>(com.intellij.openapi.Disposable):V
- <init>(com.intellij.openapi.Disposable,Z):V
- addExplicitExtension(com.intellij.lang.LanguageExtension,com.intellij.lang.Language,java.lang.Object):V
- addExplicitExtension(com.intellij.openapi.fileTypes.FileTypeExtension,com.intellij.openapi.fileTypes.FileType,java.lang.Object):V
- addExplicitExtension(com.intellij.openapi.util.ClassExtension,java.lang.Class,java.lang.Object):V
- addExtension(com.intellij.openapi.extensions.ExtensionPointName,java.lang.Object):V
- p:createApplication(com.intellij.openapi.Disposable):com.intellij.mock.MockApplication
- p:createJarFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- p:createJobLauncher():com.intellij.concurrency.JobLauncher
- p:createJrtFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- p:createLocalFileSystem():com.intellij.openapi.vfs.local.CoreLocalFileSystem
- p:createProgressIndicatorProvider():com.intellij.openapi.progress.ProgressManager
- p:createVirtualFilePointerManager():com.intellij.openapi.vfs.pointers.VirtualFilePointerManager
- getApplication():com.intellij.mock.MockApplication
- getJarFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getJrtFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getLocalFileSystem():com.intellij.openapi.vfs.local.CoreLocalFileSystem
- getParentDisposable():com.intellij.openapi.Disposable
- registerApplicationComponent(java.lang.Class,java.lang.Object):V
- s:registerApplicationDynamicExtensionPoint(java.lang.String,java.lang.Class):V
- s:registerApplicationExtensionPoint(com.intellij.openapi.extensions.ExtensionPointName,java.lang.Class):V
- registerApplicationService(java.lang.Class,java.lang.Object):V
- s:registerComponentInstance(com.intellij.util.pico.DefaultPicoContainer,java.lang.Class,java.lang.Object):V
- s:registerExtensionPoint(com.intellij.openapi.extensions.ExtensionsArea,com.intellij.openapi.extensions.ExtensionPointName,java.lang.Class):V
- s:registerExtensionPoint(com.intellij.openapi.extensions.ExtensionsArea,java.lang.String,java.lang.Class):V
- s:registerExtensionPointAndExtensions(java.nio.file.Path,java.lang.String,com.intellij.openapi.extensions.ExtensionsArea):V
- registerFileType(com.intellij.openapi.fileTypes.FileType,java.lang.String):V
- registerParserDefinition(com.intellij.lang.Language,com.intellij.lang.ParserDefinition):V
- registerParserDefinition(com.intellij.lang.ParserDefinition):V
f:com.intellij.core.CoreFileTypeRegistry
- com.intellij.openapi.fileTypes.FileTypeRegistry
- <init>():V
- findFileTypeByName(java.lang.String):com.intellij.openapi.fileTypes.FileType
- getFileTypeByExtension(java.lang.String):com.intellij.openapi.fileTypes.FileType
- getFileTypeByFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.FileType
- getFileTypeByFileName(java.lang.String):com.intellij.openapi.fileTypes.FileType
- getRegisteredFileTypes():com.intellij.openapi.fileTypes.FileType[]
- isFileIgnored(com.intellij.openapi.vfs.VirtualFile):Z
- registerFileType(com.intellij.openapi.fileTypes.FileType,java.lang.String):V
c:com.intellij.core.CoreProjectEnvironment
- pf:myFileIndexFacade:com.intellij.openapi.roots.FileIndexFacade
- pf:myPsiManager:com.intellij.psi.impl.PsiManagerImpl
- pf:project:com.intellij.mock.MockProject
- <init>(com.intellij.openapi.Disposable,com.intellij.core.CoreApplicationEnvironment):V
- addProjectExtension(com.intellij.openapi.extensions.ExtensionPointName,java.lang.Object):V
- p:createFileIndexFacade():com.intellij.openapi.roots.FileIndexFacade
- p:createProjectScopeBuilder():com.intellij.psi.search.ProjectScopeBuilder
- p:createResolveScopeManager(com.intellij.psi.PsiManager):com.intellij.psi.impl.ResolveScopeManager
- getEnvironment():com.intellij.core.CoreApplicationEnvironment
- getParentDisposable():com.intellij.openapi.Disposable
- getProject():com.intellij.mock.MockProject
- p:preregisterServices():V
- registerProjectComponent(java.lang.Class,java.lang.Object):V
c:com.intellij.core.CoreProjectScopeBuilder
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.FileIndexFacade):V
- buildAllScope():com.intellij.psi.search.GlobalSearchScope
- buildContentScope():com.intellij.psi.search.GlobalSearchScope
- buildEverythingScope():com.intellij.psi.search.GlobalSearchScope
- buildLibrariesScope():com.intellij.psi.search.GlobalSearchScope
- buildProjectScope():com.intellij.psi.search.GlobalSearchScope
c:com.intellij.core.CoreProjectScopeBuilder$ContentSearchScope
- com.intellij.psi.search.GlobalSearchScope
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.FileIndexFacade):V
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getUnloadedModulesBelongingToScope():java.util.Collection
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
f:com.intellij.diagnostic.AttachmentFactory
- <init>():V
- s:createAttachment(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.diagnostic.Attachment
f:com.intellij.diagnostic.CoreAttachmentFactory
- <init>():V
- s:createAttachment(com.intellij.openapi.editor.Document):com.intellij.openapi.diagnostic.Attachment
- s:createAttachment(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.diagnostic.Attachment
- s:createAttachment(java.lang.String,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.diagnostic.Attachment
a:com.intellij.extapi.psi.ASTDelegatePsiElement
- com.intellij.psi.impl.PsiElementBase
- <init>():V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addInternal(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,java.lang.Boolean):com.intellij.lang.ASTNode
- addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- copy():com.intellij.psi.PsiElement
- delete():V
- deleteChildInternal(com.intellij.lang.ASTNode):V
- deleteChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- s:deleteElementFromParent(com.intellij.psi.PsiElement):V
- p:findChildByFilter(com.intellij.psi.tree.TokenSet):com.intellij.psi.PsiElement
- p:findChildByType(com.intellij.psi.tree.IElementType):com.intellij.psi.PsiElement
- p:findChildByType(com.intellij.psi.tree.TokenSet):com.intellij.psi.PsiElement
- p:findChildrenByType(com.intellij.psi.tree.IElementType):java.util.List
- p:findChildrenByType(com.intellij.psi.tree.IElementType,java.lang.Class):com.intellij.psi.PsiElement[]
- p:findChildrenByType(com.intellij.psi.tree.TokenSet):java.util.List
- p:findChildrenByType(com.intellij.psi.tree.TokenSet,java.lang.Class):com.intellij.psi.PsiElement[]
- findElementAt(I):com.intellij.psi.PsiElement
- p:findLastChildByType(com.intellij.psi.tree.IElementType):com.intellij.psi.PsiElement
- p:findNotNullChildByType(com.intellij.psi.tree.IElementType):com.intellij.psi.PsiElement
- p:findNotNullChildByType(com.intellij.psi.tree.TokenSet):com.intellij.psi.PsiElement
- getChildren():com.intellij.psi.PsiElement[]
- getContainingFile():com.intellij.psi.PsiFile
- getCopyableUserData(com.intellij.openapi.util.Key):java.lang.Object
- getFirstChild():com.intellij.psi.PsiElement
- getLanguage():com.intellij.lang.Language
- getLastChild():com.intellij.psi.PsiElement
- getManager():com.intellij.psi.impl.PsiManagerEx
- getNextSibling():com.intellij.psi.PsiElement
- a:getNode():com.intellij.lang.ASTNode
- getPrevSibling():com.intellij.psi.PsiElement
- getStartOffsetInParent():I
- getText():java.lang.String
- getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- putCopyableUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- replaceChildInternal(com.intellij.psi.PsiElement,com.intellij.psi.impl.source.tree.TreeElement):V
- subtreeChanged():V
- textContains(C):Z
- textMatches(java.lang.CharSequence):Z
- textToCharArray():C[]
c:com.intellij.extapi.psi.ASTWrapperPsiElement
- com.intellij.extapi.psi.ASTDelegatePsiElement
- <init>(com.intellij.lang.ASTNode):V
- getNode():com.intellij.lang.ASTNode
- getParent():com.intellij.psi.PsiElement
a:com.intellij.extapi.psi.PsiFileBase
- com.intellij.psi.impl.source.PsiFileImpl
- p:<init>(com.intellij.psi.FileViewProvider,com.intellij.lang.Language):V
- accept(com.intellij.psi.PsiElementVisitor):V
- f:getLanguage():com.intellij.lang.Language
- getParserDefinition():com.intellij.lang.ParserDefinition
c:com.intellij.extapi.psi.StubBasedPsiElementBase
- com.intellij.extapi.psi.ASTDelegatePsiElement
- sf:CREATION_TRACE:com.intellij.openapi.util.Key
- sf:ourTraceStubAstBinding:Z
- <init>(com.intellij.lang.ASTNode):V
- <init>(com.intellij.psi.stubs.StubElement,com.intellij.psi.stubs.IStubElementType):V
- <init>(com.intellij.psi.stubs.StubElement,com.intellij.psi.tree.IElementType,com.intellij.lang.ASTNode):V
- p:clone():java.lang.Object
- getContainingFile():com.intellij.psi.PsiFile
- getContext():com.intellij.psi.PsiElement
- getElementType():com.intellij.psi.stubs.IStubElementType
- f:getGreenStub():com.intellij.psi.stubs.StubElement
- getLanguage():com.intellij.lang.Language
- getManager():com.intellij.psi.impl.PsiManagerEx
- getNode():com.intellij.lang.ASTNode
- getParent():com.intellij.psi.PsiElement
- pf:getParentByStub():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getRequiredStubOrPsiChild(com.intellij.psi.stubs.IStubElementType):com.intellij.psi.PsiElement
- getStub():com.intellij.psi.stubs.StubElement
- getStubOrPsiChild(com.intellij.psi.stubs.IStubElementType):com.intellij.psi.PsiElement
- getStubOrPsiChildren(com.intellij.psi.stubs.IStubElementType,com.intellij.util.ArrayFactory):com.intellij.psi.PsiElement[]
- getStubOrPsiChildren(com.intellij.psi.stubs.IStubElementType,com.intellij.psi.PsiElement[]):com.intellij.psi.PsiElement[]
- getStubOrPsiChildren(com.intellij.psi.tree.TokenSet,com.intellij.util.ArrayFactory):com.intellij.psi.PsiElement[]
- getStubOrPsiChildren(com.intellij.psi.tree.TokenSet,com.intellij.psi.PsiElement[]):com.intellij.psi.PsiElement[]
- p:getStubOrPsiParentOfType(java.lang.Class):com.intellij.psi.PsiElement
- isPhysical():Z
- isValid():Z
- isWritable():Z
a:com.intellij.ide.SelectInEditorManager
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.SelectInEditorManager
- a:selectInEditor(com.intellij.openapi.vfs.VirtualFile,I,I,Z,Z):V
c:com.intellij.ide.highlighter.custom.AbstractCustomLexer
- com.intellij.lexer.LexerBase
- p:myBuffer:java.lang.CharSequence
- p:myCurrentToken:com.intellij.ide.highlighter.custom.tokens.TokenInfo
- p:myEndOffset:I
- p:myPosition:I
- p:myStartOffset:I
- <init>(java.util.List):V
- advance():V
- getBufferEnd():I
- getBufferSequence():java.lang.CharSequence
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.psi.tree.IElementType
- p:handleTokenNotFound():V
- start(java.lang.CharSequence,I,I,I):V
f:com.intellij.ide.highlighter.custom.CustomFileTypeLexer
- com.intellij.ide.highlighter.custom.AbstractCustomLexer
- <init>(com.intellij.ide.highlighter.custom.SyntaxTable):V
- <init>(com.intellij.ide.highlighter.custom.SyntaxTable,Z):V
f:com.intellij.ide.highlighter.custom.SyntaxTable
- java.lang.Cloneable
- lineCommentOnlyAtStart:Z
- <init>():V
- addKeyword1(java.lang.String):V
- addKeyword2(java.lang.String):V
- addKeyword3(java.lang.String):V
- addKeyword4(java.lang.String):V
- equals(java.lang.Object):Z
- getEndComment():java.lang.String
- getHexPrefix():java.lang.String
- getKeywordParser():com.intellij.ide.highlighter.custom.tokens.KeywordParser
- getKeywords1():java.util.Set
- getKeywords2():java.util.Set
- getKeywords3():java.util.Set
- getKeywords4():java.util.Set
- getLineComment():java.lang.String
- getNumPostfixChars():java.lang.String
- getStartComment():java.lang.String
- hashCode():I
- isHasBraces():Z
- isHasBrackets():Z
- isHasParens():Z
- isHasStringEscapes():Z
- isIgnoreCase():Z
- setEndComment(java.lang.String):V
- setHasBraces(Z):V
- setHasBrackets(Z):V
- setHasParens(Z):V
- setHasStringEscapes(Z):V
- setHexPrefix(java.lang.String):V
- setIgnoreCase(Z):V
- setLineComment(java.lang.String):V
- setNumPostfixChars(java.lang.String):V
- setStartComment(java.lang.String):V
c:com.intellij.ide.highlighter.custom.tokens.BraceTokenParser
- com.intellij.ide.highlighter.custom.tokens.PrefixedTokenParser
- <init>(java.lang.String,com.intellij.psi.tree.IElementType):V
- s:getAngleBrackets():java.util.List
- s:getBraces():java.util.List
- s:getBrackets():java.util.List
- s:getParens():java.util.List
- p:getTokenEnd(I):I
f:com.intellij.ide.highlighter.custom.tokens.HexNumberParser
- com.intellij.ide.highlighter.custom.tokens.PrefixedTokenParser
- s:create(java.lang.String):com.intellij.ide.highlighter.custom.tokens.HexNumberParser
c:com.intellij.ide.highlighter.custom.tokens.IdentifierParser
- com.intellij.ide.highlighter.custom.tokens.TokenParser
- <init>(com.intellij.ide.highlighter.custom.tokens.KeywordParser):V
- hasToken(I):Z
f:com.intellij.ide.highlighter.custom.tokens.KeywordParser
- <init>(java.util.List,Z):V
- getAllKeywords():java.util.List
- hasToken(I,java.lang.CharSequence,com.intellij.ide.highlighter.custom.tokens.TokenInfo):Z
c:com.intellij.ide.highlighter.custom.tokens.LineCommentParser
- com.intellij.ide.highlighter.custom.tokens.PrefixedTokenParser
- <init>(java.lang.String,Z):V
- p:getTokenEnd(I):I
- hasToken(I):Z
f:com.intellij.ide.highlighter.custom.tokens.MultilineCommentParser
- com.intellij.ide.highlighter.custom.tokens.PrefixedTokenParser
- s:create(java.lang.String,java.lang.String):com.intellij.ide.highlighter.custom.tokens.MultilineCommentParser
f:com.intellij.ide.highlighter.custom.tokens.NumberParser
- com.intellij.ide.highlighter.custom.tokens.TokenParser
- <init>(java.lang.String,Z):V
- hasToken(I):Z
a:com.intellij.ide.highlighter.custom.tokens.PrefixedTokenParser
- com.intellij.ide.highlighter.custom.tokens.TokenParser
- <init>(java.lang.String,com.intellij.psi.tree.IElementType):V
- pa:getTokenEnd(I):I
- hasToken(I):Z
c:com.intellij.ide.highlighter.custom.tokens.PunctuationParser
- com.intellij.ide.highlighter.custom.tokens.TokenParser
- <init>():V
- hasToken(I):Z
c:com.intellij.ide.highlighter.custom.tokens.QuotedStringParser
- com.intellij.ide.highlighter.custom.tokens.PrefixedTokenParser
- <init>(java.lang.String,com.intellij.psi.tree.IElementType,Z):V
- p:getTokenEnd(I):I
c:com.intellij.ide.highlighter.custom.tokens.TokenInfo
- <init>():V
- getEnd():I
- getStart():I
- getType():com.intellij.psi.tree.IElementType
- updateData(I,I,com.intellij.psi.tree.IElementType):V
- updateData(com.intellij.ide.highlighter.custom.tokens.TokenInfo):V
a:com.intellij.ide.highlighter.custom.tokens.TokenParser
- p:myBuffer:java.lang.CharSequence
- p:myEndOffset:I
- p:myStartOffset:I
- pf:myTokenInfo:com.intellij.ide.highlighter.custom.tokens.TokenInfo
- <init>():V
- getTokenInfo(com.intellij.ide.highlighter.custom.tokens.TokenInfo):V
- a:hasToken(I):Z
- setBuffer(java.lang.CharSequence,I,I):V
c:com.intellij.ide.highlighter.custom.tokens.WhitespaceParser
- com.intellij.ide.highlighter.custom.tokens.TokenParser
- <init>():V
- hasToken(I):Z
f:com.intellij.ide.plugins.IdeaPluginDescriptorImplKt
- sf:toPluginIdSet(java.lang.Iterable):java.util.Set
f:com.intellij.ide.plugins.PluginLoadingError
- sf:Companion:com.intellij.ide.plugins.PluginLoadingError$Companion
- f:disabledDependency:com.intellij.openapi.extensions.PluginId
- f:getDetailedMessage():java.lang.String
- f:getDetailedMessageSupplier():java.util.function.Supplier
- f:getInternalMessage():java.lang.String
- f:getPlugin():com.intellij.ide.plugins.IdeaPluginDescriptor
- f:getShortMessage():java.lang.String
- f:isNotifyUser():Z
f:com.intellij.ide.plugins.PluginLoadingError$Companion
f:com.intellij.ide.plugins.PluginManager
- sf:EXPLICIT_BIG_NUMBER_PATTERN:java.util.regex.Pattern
- sf:INSTALLED_TXT:java.lang.String
- s:disablePlugin(java.lang.String):Z
- enablePlugin(com.intellij.openapi.extensions.PluginId):Z
- s:enablePlugin(java.lang.String):Z
- findEnabledPlugin(com.intellij.openapi.extensions.PluginId):com.intellij.ide.plugins.IdeaPluginDescriptor
- s:getDisabledPlugins():java.util.List
- s:getInstance():com.intellij.ide.plugins.PluginManager
- s:getLoadedPlugins():java.util.List
- s:getOnceInstalledIfExists():java.nio.file.Path
- s:getPlugin(com.intellij.openapi.extensions.PluginId):com.intellij.ide.plugins.IdeaPluginDescriptor
- s:getPluginByClass(java.lang.Class):com.intellij.openapi.extensions.PluginDescriptor
- s:getPluginByClassName(java.lang.String):com.intellij.openapi.extensions.PluginId
- s:getPlugins():com.intellij.ide.plugins.IdeaPluginDescriptor[]
- s:isPluginInstalled(com.intellij.openapi.extensions.PluginId):Z
f:com.intellij.ide.plugins.PluginManagerCore
- sf:ALL_MODULES_MARKER:com.intellij.openapi.extensions.PluginId
- sf:CORE_ID:com.intellij.openapi.extensions.PluginId
- sf:CORE_PLUGIN_ID:java.lang.String
- sf:DISABLE:java.lang.String
- sf:EDIT:java.lang.String
- sf:ENABLE:java.lang.String
- sf:INSTANCE:com.intellij.ide.plugins.PluginManagerCore
- sf:JAVA_MODULE_ID:com.intellij.openapi.extensions.PluginId
- sf:JAVA_PLUGIN_ID:com.intellij.openapi.extensions.PluginId
- sf:META_INF:java.lang.String
- sf:PLUGIN_XML:java.lang.String
- sf:PLUGIN_XML_PATH:java.lang.String
- sf:SPECIAL_IDEA_PLUGIN_ID:com.intellij.openapi.extensions.PluginId
- sf:VENDOR_JETBRAINS:java.lang.String
- sf:VENDOR_JETBRAINS_SRO:java.lang.String
- s:isIgnoreCompatibility:Z
- s:isUnitTestMode:Z
- sf:addDisablePluginListener(java.lang.Runnable):V
- sf:checkBuildNumberCompatibility(com.intellij.ide.plugins.IdeaPluginDescriptor,com.intellij.openapi.util.BuildNumber):com.intellij.ide.plugins.PluginLoadingError
- sf:disablePlugin(java.lang.String):Z
- sf:enablePlugin(java.lang.String):Z
- sf:getBuildNumber():com.intellij.openapi.util.BuildNumber
- f:getIncompatibleOs(com.intellij.ide.plugins.IdeaPluginDescriptor):com.intellij.ide.plugins.IdeaPluginOsRequirement
- sf:getLoadedPlugins():java.util.List
- f:getLoadingError(com.intellij.openapi.extensions.PluginId):com.intellij.ide.plugins.PluginLoadingError
- sf:getPlugin(com.intellij.openapi.extensions.PluginId):com.intellij.ide.plugins.IdeaPluginDescriptor
- sf:getPluginByClassName(java.lang.String):com.intellij.openapi.extensions.PluginId
- sf:getPluginNameAndVendor(com.intellij.ide.plugins.IdeaPluginDescriptor):java.lang.String
- sf:getPlugins():com.intellij.ide.plugins.IdeaPluginDescriptor[]
- f:initializePlugins(com.intellij.ide.plugins.DescriptorListLoadingContext,com.intellij.ide.plugins.PluginLoadingResult,java.lang.ClassLoader,Z,com.intellij.diagnostic.Activity):com.intellij.ide.plugins.PluginManagerState
- sf:invalidatePlugins():V
- sf:isCompatible(com.intellij.ide.plugins.IdeaPluginDescriptor):Z
- f:isCompatible(com.intellij.ide.plugins.IdeaPluginDescriptor,com.intellij.openapi.util.BuildNumber):Z
- sf:isDevelopedByJetBrains(com.intellij.openapi.extensions.PluginDescriptor):Z
- sf:isDevelopedByJetBrains(java.lang.String):Z
- sf:isDisabled(com.intellij.openapi.extensions.PluginId):Z
- sf:isIncompatible(com.intellij.ide.plugins.IdeaPluginDescriptor):Z
- sf:isIncompatible(com.intellij.ide.plugins.IdeaPluginDescriptor,com.intellij.openapi.util.BuildNumber):Z
- sf:isPluginInstalled(com.intellij.openapi.extensions.PluginId):Z
- sf:isRunningFromSources():Z
- sf:isVendorJetBrains(java.lang.String):Z
- sf:isVendorTrusted(com.intellij.openapi.extensions.PluginDescriptor):Z
- sf:isVendorTrusted(java.lang.String):Z
- sf:toPluginIds(java.util.Collection):java.util.Set
- f:writePluginIdsToFile(java.nio.file.Path,java.util.Collection,java.nio.file.OpenOption[]):V
- bs:writePluginIdsToFile$default(com.intellij.ide.plugins.PluginManagerCore,java.nio.file.Path,java.util.Collection,java.nio.file.OpenOption[],I,java.lang.Object):V
f:com.intellij.ide.plugins.XmlReader
- sf:isKotlinPlugin(com.intellij.openapi.extensions.PluginId):Z
a:com.intellij.indentation.AbstractIndentParser
- com.intellij.lang.PsiParser
- p:myBuilder:com.intellij.indentation.IndentPsiBuilder
- <init>():V
- advance():V
- p:advanceUntil(com.intellij.psi.tree.TokenSet):V
- p:advanceUntilEol():V
- s:collapse(com.intellij.lang.PsiBuilder$Marker,com.intellij.psi.tree.IElementType):V
- p:createPsiBuilder(com.intellij.lang.PsiBuilder):com.intellij.indentation.IndentPsiBuilder
- p:currentTokenIn(com.intellij.psi.tree.TokenSet):Z
- p:currentTokenIn(com.intellij.psi.tree.IElementType[]):Z
- done(com.intellij.lang.PsiBuilder$Marker,com.intellij.psi.tree.IElementType):V
- ps:drop(com.intellij.lang.PsiBuilder$Marker):V
- p:eof():Z
- p:error(java.lang.String):V
- p:errorUntil(com.intellij.psi.tree.TokenSet,java.lang.String):V
- p:errorUntilEof():V
- p:errorUntilEol(java.lang.String):V
- p:expect(com.intellij.psi.tree.IElementType):Z
- p:expect(com.intellij.psi.tree.IElementType,java.lang.String):Z
- p:expectEolOrEof():V
- getCurrentIndent():I
- p:getCurrentOffset():I
- pa:getEolElementType():com.intellij.psi.tree.IElementType
- pa:getIndentElementType():com.intellij.psi.tree.IElementType
- p:getTokenText():java.lang.String
- getTokenType():com.intellij.psi.tree.IElementType
- isNewLine():Z
- lookAhead(I):com.intellij.psi.tree.IElementType
- mark():com.intellij.lang.PsiBuilder$Marker
- mark(Z):com.intellij.lang.PsiBuilder$Marker
- parse(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder):com.intellij.lang.ASTNode
- pa:parseRoot(com.intellij.psi.tree.IElementType):V
- rawLookup(I):com.intellij.psi.tree.IElementType
- recalculateCurrentIndent():V
- p:rollbackTo(com.intellij.lang.PsiBuilder$Marker):V
- ps:tokenIn(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType[]):Z
c:com.intellij.indentation.IndentPsiBuilder
- com.intellij.lang.impl.PsiBuilderAdapter
- p:myCurrentIndent:I
- p:myIndents:java.util.HashMap
- p:myNewLine:Z
- p:myNewLines:java.util.HashMap
- <init>(com.intellij.lang.PsiBuilder):V
- advanceLexer():V
- p:createDelegateMarker(com.intellij.lang.PsiBuilder$Marker):com.intellij.lang.PsiBuilder$Marker
- getCurrentIndent():I
- isNewLine():Z
- mark():com.intellij.lang.PsiBuilder$Marker
- markWithRollbackPossibility():com.intellij.lang.PsiBuilder$Marker
- recalculateCurrentIndent(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):V
pc:com.intellij.indentation.IndentPsiBuilder$MyMarker
- com.intellij.lang.impl.DelegateMarker
- <init>(com.intellij.indentation.IndentPsiBuilder,com.intellij.lang.PsiBuilder$Marker):V
- collapse(com.intellij.psi.tree.IElementType):V
- done(com.intellij.psi.tree.IElementType):V
- doneBefore(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder$Marker):V
- doneBefore(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder$Marker,java.lang.String):V
- drop():V
- precede():com.intellij.lang.PsiBuilder$Marker
- rollbackTo():V
a:com.intellij.indentation.IndentationFoldingBuilder
- com.intellij.lang.folding.FoldingBuilder
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.psi.tree.TokenSet):V
- buildFoldRegions(com.intellij.lang.ASTNode,com.intellij.openapi.editor.Document):com.intellij.lang.folding.FoldingDescriptor[]
- getPlaceholderText(com.intellij.lang.ASTNode):java.lang.String
- isCollapsedByDefault(com.intellij.lang.ASTNode):Z
a:com.intellij.indentation.IndentationParser
- com.intellij.lang.PsiParser
- <init>(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):V
- <init>(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,java.util.List):V
- p:advanceLexer(com.intellij.lang.PsiBuilder):V
- p:closeBlock(com.intellij.lang.PsiBuilder,com.intellij.lang.PsiBuilder$Marker,com.intellij.psi.tree.IElementType):V
- p:isCustomTagDelimiter(com.intellij.psi.tree.IElementType):Z
- f:parse(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder):com.intellij.lang.ASTNode
f:com.intellij.indentation.OperationParserHelper
- <init>():V
- s:callParsingBinaryOperation(com.intellij.indentation.OperationParserHelper$BinaryOperationParser,I):Z
com.intellij.indentation.OperationParserHelper$BinaryOperationParser
- a:advance():V
- a:done(com.intellij.lang.PsiBuilder$Marker,com.intellij.psi.tree.IElementType):V
- a:getOperationElementTypes():com.intellij.psi.tree.IElementType[]
- a:getOperatorsByPriority():com.intellij.psi.tree.TokenSet[]
- a:getPostfixExpressionElementType():com.intellij.psi.tree.IElementType
- a:getPostfixOperators():com.intellij.psi.tree.TokenSet
- a:getPrefixExpressionElementType():com.intellij.psi.tree.IElementType
- a:getPrefixOperators():com.intellij.psi.tree.TokenSet
- a:getTokenType():com.intellij.psi.tree.IElementType
- a:getWhitespaceTokenSet():com.intellij.psi.tree.TokenSet
- a:isNewLine():Z
- a:lookAhead(I):com.intellij.psi.tree.IElementType
- a:mark():com.intellij.lang.PsiBuilder$Marker
- a:parseSimpleExpression():Z
- a:rawLookup(I):com.intellij.psi.tree.IElementType
com.intellij.indentation.OperationParserHelper$CustomBinaryOperationParser
- a:isBinaryOperator(I):Z
- a:parseBinaryOperator():V
a:com.intellij.lang.ASTFactory
- <init>():V
- s:composite(com.intellij.psi.tree.IElementType):com.intellij.psi.impl.source.tree.CompositeElement
- createComposite(com.intellij.psi.tree.IElementType):com.intellij.psi.impl.source.tree.CompositeElement
- createLazy(com.intellij.psi.tree.ILazyParseableElementType,java.lang.CharSequence):com.intellij.psi.impl.source.tree.LazyParseableElement
- createLeaf(com.intellij.psi.tree.IElementType,java.lang.CharSequence):com.intellij.psi.impl.source.tree.LeafElement
- s:lazy(com.intellij.psi.tree.ILazyParseableElementType,java.lang.CharSequence):com.intellij.psi.impl.source.tree.LazyParseableElement
- s:leaf(com.intellij.psi.tree.IElementType,java.lang.CharSequence):com.intellij.psi.impl.source.tree.LeafElement
- s:whitespace(java.lang.CharSequence):com.intellij.psi.impl.source.tree.LeafElement
f:com.intellij.lang.ASTFactory$DefaultFactoryHolder
- sf:DEFAULT:com.intellij.lang.DefaultASTFactoryImpl
com.intellij.lang.DefaultASTFactory
- a:createComment(com.intellij.psi.tree.IElementType,java.lang.CharSequence):com.intellij.psi.impl.source.tree.LeafElement
c:com.intellij.lang.DefaultASTFactoryImpl
- com.intellij.lang.ASTFactory
- com.intellij.lang.DefaultASTFactory
- <init>():V
- createComment(com.intellij.psi.tree.IElementType,java.lang.CharSequence):com.intellij.psi.impl.source.tree.LeafElement
- createComposite(com.intellij.psi.tree.IElementType):com.intellij.psi.impl.source.tree.CompositeElement
- createLazy(com.intellij.psi.tree.ILazyParseableElementType,java.lang.CharSequence):com.intellij.psi.impl.source.tree.LazyParseableElement
- createLeaf(com.intellij.psi.tree.IElementType,java.lang.CharSequence):com.intellij.psi.impl.source.tree.LeafElement
c:com.intellij.lang.ForeignLeafType
- com.intellij.lang.TokenWrapper
- com.intellij.psi.tree.ILeafElementType
- <init>(com.intellij.psi.tree.IElementType,java.lang.CharSequence):V
- createLeafNode(java.lang.CharSequence):com.intellij.lang.ASTNode
f:com.intellij.lang.LanguageASTFactory
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageASTFactory
f:com.intellij.lang.LanguageTokenSeparatorGenerators
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageTokenSeparatorGenerators
f:com.intellij.lang.PsiBuilderUtil
- s:advance(com.intellij.lang.PsiBuilder,I):V
- s:drop(com.intellij.lang.PsiBuilder$Marker[]):V
- s:expect(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType):Z
- s:expect(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.TokenSet):Z
- s:hasProperBraceBalance(java.lang.CharSequence,com.intellij.lexer.Lexer,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
- s:parseBlockLazy(com.intellij.lang.PsiBuilder,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):com.intellij.lang.PsiBuilder$Marker
- s:rawTokenText(com.intellij.lang.PsiBuilder,I):java.lang.CharSequence
- s:rollbackTo(com.intellij.lang.PsiBuilder$Marker):V
c:com.intellij.lang.TokenWrapper
- com.intellij.psi.tree.IElementType
- <init>(com.intellij.psi.tree.IElementType,java.lang.CharSequence):V
- getDelegate():com.intellij.psi.tree.IElementType
- getText():java.lang.String
- getValue():java.lang.String
f:com.intellij.lang.WhitespacesBinders
- sf:DEFAULT_LEFT_BINDER:com.intellij.lang.WhitespacesAndCommentsBinder
- sf:DEFAULT_RIGHT_BINDER:com.intellij.lang.WhitespacesAndCommentsBinder
- sf:GREEDY_LEFT_BINDER:com.intellij.lang.WhitespacesAndCommentsBinder
- sf:GREEDY_RIGHT_BINDER:com.intellij.lang.WhitespacesAndCommentsBinder
- s:leadingCommentsBinder(com.intellij.psi.tree.TokenSet):com.intellij.lang.WhitespacesAndCommentsBinder
- s:trailingCommentsBinder(com.intellij.psi.tree.TokenSet):com.intellij.lang.WhitespacesAndCommentsBinder
f:com.intellij.lang.folding.NamedFoldingDescriptor
- com.intellij.lang.folding.FoldingDescriptor
- <init>(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.FoldingGroup,java.lang.String):V
c:com.intellij.lang.impl.DelegateMarker
- com.intellij.lang.PsiBuilder$Marker
- <init>(com.intellij.lang.PsiBuilder$Marker):V
- collapse(com.intellij.psi.tree.IElementType):V
- done(com.intellij.psi.tree.IElementType):V
- doneBefore(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder$Marker):V
- doneBefore(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder$Marker,java.lang.String):V
- drop():V
- error(java.lang.String):V
- errorBefore(java.lang.String,com.intellij.lang.PsiBuilder$Marker):V
- getDelegate():com.intellij.lang.PsiBuilder$Marker
- getEndIndex():I
- getEndOffset():I
- getErrorMessage():java.lang.String
- getStartIndex():I
- getStartOffset():I
- getTokenType():com.intellij.psi.tree.IElementType
- isCollapsed():Z
- precede():com.intellij.lang.PsiBuilder$Marker
- rollbackTo():V
- setCustomEdgeTokenBinders(com.intellij.lang.WhitespacesAndCommentsBinder,com.intellij.lang.WhitespacesAndCommentsBinder):V
c:com.intellij.lang.impl.PsiBuilderAdapter
- com.intellij.lang.PsiBuilder
- pf:myDelegate:com.intellij.lang.PsiBuilder
- <init>(com.intellij.lang.PsiBuilder):V
- advanceLexer():V
- enforceCommentTokens(com.intellij.psi.tree.TokenSet):V
- eof():Z
- error(java.lang.String):V
- getCurrentOffset():I
- getDelegate():com.intellij.lang.PsiBuilder
- getLatestDoneMarker():com.intellij.lang.LighterASTNode
- getLightTree():com.intellij.util.diff.FlyweightCapableTreeStructure
- getOriginalText():java.lang.CharSequence
- getProductions():java.util.List
- getProject():com.intellij.openapi.project.Project
- getTokenText():java.lang.String
- getTokenType():com.intellij.psi.tree.IElementType
- getTreeBuilt():com.intellij.lang.ASTNode
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- getUserDataUnprotected(com.intellij.openapi.util.Key):java.lang.Object
- isWhitespaceOrComment(com.intellij.psi.tree.IElementType):Z
- lookAhead(I):com.intellij.psi.tree.IElementType
- mark():com.intellij.lang.PsiBuilder$Marker
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- putUserDataUnprotected(com.intellij.openapi.util.Key,java.lang.Object):V
- rawAdvanceLexer(I):V
- rawLookup(I):com.intellij.psi.tree.IElementType
- rawTokenIndex():I
- rawTokenTypeStart(I):I
- remapCurrentToken(com.intellij.psi.tree.IElementType):V
- setDebugMode(Z):V
- setTokenTypeRemapper(com.intellij.lang.ITokenTypeRemapper):V
- setWhitespaceSkippedCallback(com.intellij.lang.WhitespaceSkippedCallback):V
c:com.intellij.lang.impl.PsiBuilderFactoryImpl
- com.intellij.lang.PsiBuilderFactory
- <init>():V
- createBuilder(com.intellij.lang.ParserDefinition,com.intellij.lexer.Lexer,java.lang.CharSequence):com.intellij.lang.PsiBuilder
- createBuilder(com.intellij.openapi.project.Project,com.intellij.lang.ASTNode):com.intellij.lang.PsiBuilder
- createBuilder(com.intellij.openapi.project.Project,com.intellij.lang.ASTNode,com.intellij.lexer.Lexer,com.intellij.lang.Language,java.lang.CharSequence):com.intellij.lang.PsiBuilder
- createBuilder(com.intellij.openapi.project.Project,com.intellij.lang.LighterLazyParseableNode):com.intellij.lang.PsiBuilder
- createBuilder(com.intellij.openapi.project.Project,com.intellij.lang.LighterLazyParseableNode,com.intellij.lexer.Lexer,com.intellij.lang.Language,java.lang.CharSequence):com.intellij.lang.PsiBuilder
c:com.intellij.lang.impl.PsiBuilderImpl
- com.intellij.openapi.util.UnprotectedUserDataHolder
- com.intellij.lang.PsiBuilder
- sf:CUSTOM_COMPARATOR:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project,com.intellij.lang.ParserDefinition,com.intellij.lexer.Lexer,com.intellij.lang.ASTNode,java.lang.CharSequence):V
- <init>(com.intellij.openapi.project.Project,com.intellij.lang.ParserDefinition,com.intellij.lexer.Lexer,com.intellij.lang.LighterLazyParseableNode,java.lang.CharSequence):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.lang.ParserDefinition,com.intellij.lexer.Lexer,com.intellij.util.CharTable,java.lang.CharSequence,com.intellij.lang.ASTNode,com.intellij.lang.impl.PsiBuilderImpl$MyTreeStructure):V
- advanceLexer():V
- p:createLeaf(com.intellij.psi.tree.IElementType,I,I):com.intellij.psi.impl.source.tree.TreeElement
- enforceCommentTokens(com.intellij.psi.tree.TokenSet):V
- f:eof():Z
- error(java.lang.String):V
- getCurrentOffset():I
- s:getErrorMessage(com.intellij.lang.LighterASTNode):java.lang.String
- p:getInternedText(I,I):java.lang.CharSequence
- getLatestDoneMarker():com.intellij.lang.impl.PsiBuilderImpl$StartMarker
- getLexemeCount():I
- getLexer():com.intellij.lexer.Lexer
- getLexingTimeNs():J
- getLightTree():com.intellij.util.diff.FlyweightCapableTreeStructure
- getOriginalText():java.lang.CharSequence
- getProductions():java.util.List
- getProject():com.intellij.openapi.project.Project
- getTokenText():java.lang.String
- getTokenType():com.intellij.psi.tree.IElementType
- getTreeBuilt():com.intellij.lang.ASTNode
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- hasErrorsAfter(com.intellij.lang.PsiBuilder$Marker):Z
- isWhitespaceOrComment(com.intellij.psi.tree.IElementType):Z
- lookAhead(I):com.intellij.psi.tree.IElementType
- mark():com.intellij.lang.PsiBuilder$Marker
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- rawAdvanceLexer(I):V
- rawLookup(I):com.intellij.psi.tree.IElementType
- rawTokenIndex():I
- rawTokenTypeStart(I):I
- s:registerWhitespaceToken(com.intellij.psi.tree.IElementType):V
- remapCurrentToken(com.intellij.psi.tree.IElementType):V
- setDebugMode(Z):V
- setTokenTypeRemapper(com.intellij.lang.ITokenTypeRemapper):V
- setWhitespaceSkippedCallback(com.intellij.lang.WhitespaceSkippedCallback):V
- whitespaceOrComment(com.intellij.psi.tree.IElementType):Z
c:com.intellij.lexer.DelegateLexer
- com.intellij.lexer.LexerBase
- pf:myDelegate:com.intellij.lexer.Lexer
- <init>(com.intellij.lexer.Lexer):V
- advance():V
- getBufferEnd():I
- f:getBufferSequence():java.lang.CharSequence
- f:getDelegate():com.intellij.lexer.Lexer
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.psi.tree.IElementType
- start(java.lang.CharSequence,I,I,I):V
c:com.intellij.lexer.FilterLexer
- com.intellij.lexer.DelegateLexer
- <init>(com.intellij.lexer.Lexer,com.intellij.lexer.FilterLexer$Filter):V
- <init>(com.intellij.lexer.Lexer,com.intellij.lexer.FilterLexer$Filter,Z[]):V
- advance():V
- getCurrentPosition():com.intellij.lexer.LexerPosition
- getOriginal():com.intellij.lexer.Lexer
- getPrevTokenEnd():I
- f:locateToken():V
- restore(com.intellij.lexer.LexerPosition):V
- start(java.lang.CharSequence,I,I,I):V
com.intellij.lexer.FilterLexer$Filter
- a:reject(com.intellij.psi.tree.IElementType):Z
f:com.intellij.lexer.FilterLexer$SetFilter
- com.intellij.lexer.FilterLexer$Filter
- <init>(com.intellij.psi.tree.TokenSet):V
- reject(com.intellij.psi.tree.IElementType):Z
c:com.intellij.lexer.FlexAdapter
- com.intellij.lexer.LexerBase
- <init>(com.intellij.lexer.FlexLexer):V
- advance():V
- getBufferEnd():I
- getBufferSequence():java.lang.CharSequence
- getFlex():com.intellij.lexer.FlexLexer
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.psi.tree.IElementType
- p:locateToken():V
- start(java.lang.CharSequence,I,I,I):V
com.intellij.lexer.FlexLexer
- a:advance():com.intellij.psi.tree.IElementType
- a:getTokenEnd():I
- a:getTokenStart():I
- a:reset(java.lang.CharSequence,I,I,I):V
- a:yybegin(I):V
- a:yystate():I
c:com.intellij.lexer.LayeredLexer
- com.intellij.lexer.DelegateLexer
- sf:ourDisableLayersFlag:java.lang.ThreadLocal
- <init>(com.intellij.lexer.Lexer):V
- advance():V
- p:findLayerLexer(com.intellij.psi.tree.IElementType):com.intellij.lexer.Lexer
- getCurrentPosition():com.intellij.lexer.LexerPosition
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.psi.tree.IElementType
- p:isLayerActive():Z
- registerLayer(com.intellij.lexer.Lexer,com.intellij.psi.tree.IElementType[]):V
- registerSelfStoppingLayer(com.intellij.lexer.Lexer,com.intellij.psi.tree.IElementType[],com.intellij.psi.tree.IElementType[]):V
- restore(com.intellij.lexer.LexerPosition):V
- start(java.lang.CharSequence,I,I,I):V
a:com.intellij.lexer.LookAheadLexer
- com.intellij.lexer.LexerBase
- <init>(com.intellij.lexer.Lexer):V
- <init>(com.intellij.lexer.Lexer,I):V
- p:addToken(I,com.intellij.psi.tree.IElementType):V
- p:addToken(com.intellij.psi.tree.IElementType):V
- advance():V
- pf:advanceAs(com.intellij.lexer.Lexer,com.intellij.psi.tree.IElementType):V
- pf:advanceLexer(com.intellij.lexer.Lexer):V
- getBufferEnd():I
- getBufferSequence():java.lang.CharSequence
- p:getCacheSize():I
- pf:getCachedOffset(I):I
- pf:getCachedType(I):com.intellij.psi.tree.IElementType
- getCurrentPosition():com.intellij.lexer.LookAheadLexer$LookAheadLexerPosition
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.psi.tree.IElementType
- p:lookAhead(com.intellij.lexer.Lexer):V
- replaceCachedType(I,com.intellij.psi.tree.IElementType):com.intellij.psi.tree.IElementType
- p:resetCacheSize(I):V
- f:restore(com.intellij.lexer.LexerPosition):V
- p:restore(com.intellij.lexer.LookAheadLexer$LookAheadLexerPosition):V
- start(java.lang.CharSequence,I,I,I):V
pc:com.intellij.lexer.LookAheadLexer$LookAheadLexerPosition
- com.intellij.lexer.LexerPosition
- <init>(com.intellij.lexer.LookAheadLexer,com.intellij.util.containers.ImmutableUserMap):V
- getCustomMap():com.intellij.util.containers.ImmutableUserMap
- getOffset():I
- getState():I
c:com.intellij.lexer.MergingLexerAdapter
- com.intellij.lexer.MergingLexerAdapterBase
- <init>(com.intellij.lexer.Lexer,com.intellij.psi.tree.TokenSet):V
- getMergeFunction():com.intellij.lexer.MergeFunction
a:com.intellij.lexer.MergingLexerAdapterBase
- com.intellij.lexer.DelegateLexer
- <init>(com.intellij.lexer.Lexer):V
- advance():V
- getCurrentPosition():com.intellij.lexer.LexerPosition
- a:getMergeFunction():com.intellij.lexer.MergeFunction
- getOriginal():com.intellij.lexer.Lexer
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.psi.tree.IElementType
- restore(com.intellij.lexer.LexerPosition):V
- start(java.lang.CharSequence,I,I,I):V
c:com.intellij.lexer.StringLiteralLexer
- com.intellij.lexer.LexerBase
- sf:NO_QUOTE_CHAR:C
- p:myBuffer:java.lang.CharSequence
- p:myBufferEnd:I
- p:myEnd:I
- pf:myOriginalLiteralToken:com.intellij.psi.tree.IElementType
- pf:myQuoteChar:C
- p:myStart:I
- <init>(C,com.intellij.psi.tree.IElementType):V
- <init>(C,com.intellij.psi.tree.IElementType,Z,java.lang.String):V
- <init>(C,com.intellij.psi.tree.IElementType,Z,java.lang.String,Z,Z):V
- advance():V
- getBufferEnd():I
- getBufferSequence():java.lang.CharSequence
- p:getHexCodedEscapeSeq():com.intellij.psi.tree.IElementType
- p:getStandardLimitedHexCodedEscapeSeq(I):com.intellij.psi.tree.IElementType
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.psi.tree.IElementType
- p:getUnicodeEscapeSequenceType():com.intellij.psi.tree.IElementType
- p:handleSingleSlashEscapeSequence():com.intellij.psi.tree.IElementType
- p:locateAdditionalEscapeSequence(I,I):I
- p:locateHexEscapeSequence(I,I):I
- p:locateUnicodeEscapeSequence(I,I):I
- p:shouldAllowSlashZero():Z
- start(java.lang.CharSequence,I,I,I):V
c:com.intellij.mock.MockApplication
- com.intellij.mock.MockComponentManager
- com.intellij.openapi.application.ex.ApplicationEx
- s:INSTANCES_CREATED:I
- <init>(com.intellij.openapi.Disposable):V
- acquireReadActionLock():com.intellij.openapi.application.AccessToken
- acquireWriteActionLock(java.lang.Class):com.intellij.openapi.application.AccessToken
- addApplicationListener(com.intellij.openapi.application.ApplicationListener):V
- addApplicationListener(com.intellij.openapi.application.ApplicationListener,com.intellij.openapi.Disposable):V
- assertIsDispatchThread():V
- assertIsDispatchThread(javax.swing.JComponent):V
- assertIsNonDispatchThread():V
- assertReadAccessAllowed():V
- assertReadAccessNotAllowed():V
- assertWriteAccessAllowed():V
- assertWriteIntentLockAcquired():V
- dispose():V
- executeOnPooledThread(java.lang.Runnable):java.util.concurrent.Future
- executeOnPooledThread(java.util.concurrent.Callable):java.util.concurrent.Future
- getAnyModalityState():com.intellij.openapi.application.ModalityState
- getCoroutineScope():kotlinx.coroutines.CoroutineScope
- getCurrentModalityState():com.intellij.openapi.application.ModalityState
- getDefaultModalityState():com.intellij.openapi.application.ModalityState
- getIdleTime():J
- getModalityStateForComponent(java.awt.Component):com.intellij.openapi.application.ModalityState
- getNoneModalityState():com.intellij.openapi.application.ModalityState
- f:getService(java.lang.Class):java.lang.Object
- f:getServiceIfCreated(java.lang.Class):java.lang.Object
- getStartTime():J
- hasWriteAction(java.lang.Class):Z
- holdsReadLock():Z
- invokeAndWait(java.lang.Runnable):V
- invokeAndWait(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- invokeLater(java.lang.Runnable):V
- invokeLater(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- invokeLater(java.lang.Runnable,com.intellij.openapi.application.ModalityState,com.intellij.openapi.util.Condition):V
- invokeLater(java.lang.Runnable,com.intellij.openapi.util.Condition):V
- invokeLaterOnWriteThread(java.lang.Runnable):V
- invokeLaterOnWriteThread(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- invokeLaterOnWriteThread(java.lang.Runnable,com.intellij.openapi.application.ModalityState,com.intellij.openapi.util.Condition):V
- isActive():Z
- isCommandLine():Z
- isDispatchThread():Z
- isEAP():Z
- isHeadlessEnvironment():Z
- isInternal():Z
- isReadAccessAllowed():Z
- isRestartCapable():Z
- isSaveAllowed():Z
- isUnitTestMode():Z
- isWriteAccessAllowed():Z
- isWriteActionInProgress():Z
- isWriteActionPending():Z
- isWriteIntentLockAcquired():Z
- removeApplicationListener(com.intellij.openapi.application.ApplicationListener):V
- restart(Z):V
- restart(Z,Z):V
- runProcessWithProgressSynchronously(java.lang.Runnable,java.lang.String,Z,Z,com.intellij.openapi.project.Project,javax.swing.JComponent,java.lang.String):Z
- runReadAction(com.intellij.openapi.util.Computable):java.lang.Object
- runReadAction(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- runReadAction(java.lang.Runnable):V
- runWriteAction(com.intellij.openapi.util.Computable):java.lang.Object
- runWriteAction(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- runWriteAction(java.lang.Runnable):V
- saveAll():V
- saveSettings():V
- setSaveAllowed(Z):V
- s:setUp(com.intellij.openapi.Disposable):com.intellij.mock.MockApplication
- tryRunReadAction(java.lang.Runnable):Z
c:com.intellij.mock.MockComponentManager
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.components.ComponentManager
- com.intellij.util.messages.MessageBusOwner
- addComponent(java.lang.Class,java.lang.Object):V
- createError(java.lang.String,com.intellij.openapi.extensions.PluginId):java.lang.RuntimeException
- createError(java.lang.String,java.lang.Throwable,com.intellij.openapi.extensions.PluginId,java.util.Map):java.lang.RuntimeException
- createError(java.lang.Throwable,com.intellij.openapi.extensions.PluginId):java.lang.RuntimeException
- createListener(com.intellij.util.messages.ListenerDescriptor):java.lang.Object
- dispose():V
- getActivityCategory(Z):com.intellij.diagnostic.ActivityCategory
- getComponent(java.lang.Class):java.lang.Object
- f:getComponentAdapter(java.lang.Object):org.picocontainer.ComponentAdapter
- getDisposed():com.intellij.openapi.util.Condition
- getExtensionArea():com.intellij.openapi.extensions.impl.ExtensionsAreaImpl
- getMessageBus():com.intellij.util.messages.MessageBus
- getPicoContainer():com.intellij.util.pico.DefaultPicoContainer
- getService(java.lang.Class):java.lang.Object
- f:hasComponent(java.lang.Class):Z
- instantiateClass(java.lang.Class,com.intellij.openapi.extensions.PluginId):java.lang.Object
- f:instantiateClass(java.lang.String,com.intellij.openapi.extensions.PluginDescriptor):java.lang.Object
- instantiateClassWithConstructorInjection(java.lang.Class,java.lang.Object,com.intellij.openapi.extensions.PluginId):java.lang.Object
- isDisposed():Z
- isInjectionForExtensionSupported():Z
- loadClass(java.lang.String,com.intellij.openapi.extensions.PluginDescriptor):java.lang.Class
- p:registerComponentInDisposer(java.lang.Object):V
- registerService(java.lang.Class):V
- registerService(java.lang.Class,java.lang.Class):V
- registerService(java.lang.Class,java.lang.Object):V
- registerService(java.lang.Class,java.lang.Object,com.intellij.openapi.Disposable):V
c:com.intellij.mock.MockFileDocumentManagerImpl
- com.intellij.openapi.fileEditor.FileDocumentManager
- <init>(com.intellij.openapi.util.Key,com.intellij.util.Function):V
- getCachedDocument(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.Document
- getDocument(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.Document
- getFile(com.intellij.openapi.editor.Document):com.intellij.openapi.vfs.VirtualFile
- getLineSeparator(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.lang.String
- getUnsavedDocuments():com.intellij.openapi.editor.Document[]
- isDocumentUnsaved(com.intellij.openapi.editor.Document):Z
- isFileModified(com.intellij.openapi.vfs.VirtualFile):Z
- isPartialPreviewOfALargeFile(com.intellij.openapi.editor.Document):Z
- reloadFiles(com.intellij.openapi.vfs.VirtualFile[]):V
- reloadFromDisk(com.intellij.openapi.editor.Document):V
- reloadFromDisk(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):V
- requestWriting(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):Z
- saveAllDocuments():V
- saveDocument(com.intellij.openapi.editor.Document):V
- saveDocumentAsIs(com.intellij.openapi.editor.Document):V
- saveDocuments(java.util.function.Predicate):V
c:com.intellij.mock.MockFileIndexFacade
- com.intellij.openapi.roots.FileIndexFacade
- <init>(com.intellij.openapi.project.Project):V
- addLibraryRoot(com.intellij.openapi.vfs.VirtualFile):V
- getModuleForFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.module.Module
- getRootModificationTracker():com.intellij.openapi.util.ModificationTracker
- getUnloadedModuleDescriptions():java.util.Collection
- isExcludedFile(com.intellij.openapi.vfs.VirtualFile):Z
- isInContent(com.intellij.openapi.vfs.VirtualFile):Z
- isInLibrary(com.intellij.openapi.vfs.VirtualFile):Z
- isInLibraryClasses(com.intellij.openapi.vfs.VirtualFile):Z
- isInLibrarySource(com.intellij.openapi.vfs.VirtualFile):Z
- isInSource(com.intellij.openapi.vfs.VirtualFile):Z
- isInSourceContent(com.intellij.openapi.vfs.VirtualFile):Z
- isUnderIgnored(com.intellij.openapi.vfs.VirtualFile):Z
- isValidAncestor(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):Z
c:com.intellij.mock.MockProject
- com.intellij.mock.MockComponentManager
- com.intellij.openapi.project.Project
- dispose():V
- f:getActivityCategory(Z):com.intellij.diagnostic.ActivityCategory
- getActualComponentManager():com.intellij.openapi.components.ComponentManager
- getBaseDir():com.intellij.openapi.vfs.VirtualFile
- getBasePath():java.lang.String
- getComponentInstancesOfType(java.lang.Class):java.util.List
- getCoroutineScope():kotlinx.coroutines.CoroutineScope
- getDisposed():com.intellij.openapi.util.Condition
- getLocationHash():java.lang.String
- getName():java.lang.String
- getProjectFile():com.intellij.openapi.vfs.VirtualFile
- getProjectFilePath():java.lang.String
- getWorkspaceFile():com.intellij.openapi.vfs.VirtualFile
- isInitialized():Z
- isOpen():Z
- projectOpened():V
- save():V
- setBaseDir(com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.openapi.application.TransactionGuardImpl
- com.intellij.openapi.application.TransactionGuard
- <init>():V
- assertWriteActionAllowed():V
- assertWriteSafeContext(com.intellij.openapi.application.ModalityState):V
- enteredModality(com.intellij.openapi.application.ModalityState):V
- getContextTransaction():com.intellij.openapi.application.TransactionId
- isWriteSafeModality(com.intellij.openapi.application.ModalityState):Z
- isWritingAllowed():Z
- submitTransaction(com.intellij.openapi.Disposable,com.intellij.openapi.application.TransactionId,java.lang.Runnable):V
- submitTransactionAndWait(java.lang.Runnable):V
- submitTransactionLater(com.intellij.openapi.Disposable,java.lang.Runnable):V
- wrapLaterInvocation(java.lang.Runnable,com.intellij.openapi.application.ModalityState):java.lang.Runnable
com.intellij.openapi.application.ex.ApplicationEx
- com.intellij.openapi.application.Application
- sf:ELEVATE:I
- sf:EXIT_CONFIRMED:I
- sf:FORCE_EXIT:I
- sf:LOCATOR_FILE_NAME:java.lang.String
- sf:PRODUCT_INFO_FILE_NAME:java.lang.String
- sf:PRODUCT_INFO_FILE_NAME_MAC:java.lang.String
- sf:SAVE:I
- a:assertIsDispatchThread(javax.swing.JComponent):V
- exit():V
- exit(I):V
- exit(I,I):V
- exit(Z,Z):V
- exit(Z,Z,I):V
- isComponentCreated():Z
- isLightEditMode():Z
- a:isWriteActionInProgress():Z
- a:isWriteActionPending():Z
- restart():V
- a:restart(Z):V
- a:restart(Z,Z):V
- a:setSaveAllowed(Z):V
- a:tryRunReadAction(java.lang.Runnable):Z
a:com.intellij.openapi.application.ex.ApplicationInfoEx
- com.intellij.openapi.application.ApplicationInfo
- <init>():V
- a:areSubscriptionTipsAvailable():Z
- a:getApiVersionAsNumber():com.intellij.openapi.util.BuildNumber
- a:getApplicationSvgIconUrl():java.lang.String
- a:getBuiltinPluginsUrl():java.lang.String
- a:getCopyrightStart():java.lang.String
- a:getDefaultClassicDarkLaf():java.lang.String
- a:getDefaultClassicLightLaf():java.lang.String
- a:getDefaultDarkLaf():java.lang.String
- a:getDefaultLightLaf():java.lang.String
- a:getDocumentationUrl():java.lang.String
- f:getDownloadUrl():java.lang.String
- a:getEssentialPluginIds():java.util.List
- a:getFeedbackUrl():java.lang.String
- s:getInstanceEx():com.intellij.openapi.application.ex.ApplicationInfoEx
- a:getMacKeymapUrl():java.lang.String
- a:getMajorReleaseBuildDate():java.util.Calendar
- a:getPluginDownloadUrl():java.lang.String
- a:getPluginManagerUrl():java.lang.String
- a:getPluginsListUrl():java.lang.String
- a:getSmallApplicationSvgIconUrl():java.lang.String
- a:getSubscriptionFormId():java.lang.String
- a:getSupportUrl():java.lang.String
- a:getUpdateUrls():com.intellij.openapi.application.ex.ApplicationInfoEx$UpdateUrls
- a:getWebHelpUrl():java.lang.String
- a:getWhatsNewUrl():java.lang.String
- a:getWinKeymapUrl():java.lang.String
- a:getYoutrackUrl():java.lang.String
- a:isMajorEAP():Z
- a:isShowWhatsNewOnUpdate():Z
- f:isVendorJetBrains():Z
- a:usesJetBrainsPluginRepository():Z
com.intellij.openapi.application.ex.ApplicationInfoEx$UpdateUrls
- a:getCheckingUrl():java.lang.String
- a:getPatchesUrl():java.lang.String
f:com.intellij.openapi.application.ex.ApplicationManagerEx
- com.intellij.openapi.application.ApplicationManager
- sf:IS_INTERNAL_PROPERTY:java.lang.String
- <init>():V
- s:getApplicationEx():com.intellij.openapi.application.ex.ApplicationEx
- s:isInIntegrationTest():Z
- s:isInStressTest():Z
- s:setInStressTest(Z):V
f:com.intellij.openapi.application.ex.ApplicationUtil
- sf:INSTANCE:com.intellij.openapi.application.ex.ApplicationUtil
- sf:invokeAndWaitSomewhere(com.intellij.openapi.application.EdtReplacementThread,com.intellij.openapi.application.ModalityState,java.lang.Runnable):V
- sf:invokeLaterSomewhere(com.intellij.openapi.application.EdtReplacementThread,com.intellij.openapi.application.ModalityState,java.lang.Runnable):V
- sf:runWithCheckCanceled(java.util.concurrent.Callable,com.intellij.openapi.progress.ProgressIndicator):java.lang.Object
- sf:runWithCheckCanceled(java.util.concurrent.Future,com.intellij.openapi.progress.ProgressIndicator):java.lang.Object
- sf:showDialogAfterWriteAction(java.lang.Runnable):V
- sf:tryRunReadAction(com.intellij.openapi.util.Computable):java.lang.Object
f:com.intellij.openapi.application.ex.ApplicationUtil$CannotRunReadActionException
- com.intellij.openapi.progress.ProcessCanceledException
- sf:Companion:com.intellij.openapi.application.ex.ApplicationUtil$CannotRunReadActionException$Companion
- <init>():V
- sf:create():com.intellij.openapi.application.ex.ApplicationUtil$CannotRunReadActionException
f:com.intellij.openapi.application.ex.ApplicationUtil$CannotRunReadActionException$Companion
- f:create():com.intellij.openapi.application.ex.ApplicationUtil$CannotRunReadActionException
f:com.intellij.openapi.application.impl.AnyModalityState
- com.intellij.openapi.application.ModalityState
- sf:ANY:com.intellij.openapi.application.impl.AnyModalityState
- accepts(com.intellij.openapi.application.ModalityState):Z
com.intellij.openapi.application.impl.ModalContextProjectLocator
- a:isPartOf(javax.swing.JFrame,com.intellij.openapi.project.Project):Z
f:com.intellij.openapi.application.impl.ModalityStateEx
- com.intellij.openapi.application.ModalityState
- <init>():V
- accepts(com.intellij.openapi.application.ModalityState):Z
- appendJob(kotlinx.coroutines.Job):com.intellij.openapi.application.ModalityState
- appendProgress(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.application.ModalityState
a:com.intellij.openapi.command.CommandProcessorEx
- com.intellij.openapi.command.CommandProcessor
- <init>():V
- a:enterModal():V
- a:finishCommand(com.intellij.openapi.command.CommandToken,java.lang.Throwable):V
- a:leaveModal():V
- a:startCommand(com.intellij.openapi.project.Project,java.lang.String,java.lang.Object,com.intellij.openapi.command.UndoConfirmationPolicy):com.intellij.openapi.command.CommandToken
com.intellij.openapi.command.CommandToken
- a:getProject():com.intellij.openapi.project.Project
f:com.intellij.openapi.command.impl.CommandLog
- sf:LOG:com.intellij.openapi.diagnostic.Logger
- <init>():V
c:com.intellij.openapi.command.impl.CoreCommandProcessor
- com.intellij.openapi.command.CommandProcessorEx
- p:myCurrentCommand:com.intellij.openapi.command.impl.CoreCommandProcessor$CommandDescriptor
- <init>():V
- addAffectedDocuments(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document[]):V
- addAffectedFiles(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile[]):V
- addCommandListener(com.intellij.openapi.command.CommandListener):V
- allowMergeGlobalCommands(java.lang.Runnable):V
- enterModal():V
- executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object):V
- executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object,com.intellij.openapi.command.UndoConfirmationPolicy):V
- executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object,com.intellij.openapi.command.UndoConfirmationPolicy,com.intellij.openapi.editor.Document):V
- executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object,com.intellij.openapi.command.UndoConfirmationPolicy,Z):V
- executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object,com.intellij.openapi.command.UndoConfirmationPolicy,Z,com.intellij.openapi.editor.Document):V
- executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object,com.intellij.openapi.editor.Document):V
- finishCommand(com.intellij.openapi.command.CommandToken,java.lang.Throwable):V
- getCurrentCommand():java.lang.Runnable
- getCurrentCommandGroupId():java.lang.Object
- getCurrentCommandName():java.lang.String
- getCurrentCommandProject():com.intellij.openapi.project.Project
- isUndoTransparentActionInProgress():Z
- leaveModal():V
- markCurrentCommandAsGlobal(com.intellij.openapi.project.Project):V
- runUndoTransparentAction(java.lang.Runnable):V
- setCurrentCommandGroupId(java.lang.Object):V
- setCurrentCommandName(java.lang.String):V
- startCommand(com.intellij.openapi.project.Project,java.lang.String,java.lang.Object,com.intellij.openapi.command.UndoConfirmationPolicy):com.intellij.openapi.command.CommandToken
- f:withUndoTransparentAction():java.lang.AutoCloseable
com.intellij.openapi.editor.ex.DocumentBulkUpdateListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:updateFinished(com.intellij.openapi.editor.Document):V
- a:updateStarted(com.intellij.openapi.editor.Document):V
com.intellij.openapi.editor.ex.DocumentEx
- com.intellij.openapi.editor.Document
- addEditReadOnlyListener(com.intellij.openapi.editor.ex.EditReadOnlyListener):V
- clearLineModificationFlags():V
- a:createLineIterator():com.intellij.openapi.editor.ex.LineIterator
- getGuardedBlocks():java.util.List
- getModificationSequence():I
- isInEventsHandling():Z
- moveText(I,I,I):V
- a:processRangeMarkers(com.intellij.util.Processor):Z
- a:processRangeMarkersOverlappingWith(I,I,com.intellij.util.Processor):Z
- a:registerRangeMarker(com.intellij.openapi.editor.ex.RangeMarkerEx,I,I,Z,Z,I):V
- removeEditReadOnlyListener(com.intellij.openapi.editor.ex.EditReadOnlyListener):V
- a:removeRangeMarker(com.intellij.openapi.editor.ex.RangeMarkerEx):Z
- a:replaceText(java.lang.CharSequence,J):V
- a:setModificationStamp(J):V
- setStripTrailingSpacesEnabled(Z):V
- suppressGuardedExceptions():V
- unSuppressGuardedExceptions():V
com.intellij.openapi.editor.ex.EditReadOnlyListener
- java.util.EventListener
- a:readOnlyModificationAttempt(com.intellij.openapi.editor.Document):V
com.intellij.openapi.editor.ex.LineIterator
- a:advance():V
- a:atEnd():Z
- a:getEnd():I
- a:getLineNumber():I
- a:getSeparatorLength():I
- a:getStart():I
- a:start(I):V
com.intellij.openapi.editor.ex.MarkupIterator
- com.intellij.util.containers.PeekableIterator
- sf:EMPTY:com.intellij.openapi.editor.ex.MarkupIterator
- a:dispose():V
- s:mergeIterators(com.intellij.openapi.editor.ex.MarkupIterator,com.intellij.openapi.editor.ex.MarkupIterator,java.util.Comparator):com.intellij.openapi.editor.ex.MarkupIterator
com.intellij.openapi.editor.ex.RangeMarkerEx
- com.intellij.openapi.editor.RangeMarker
- a:getId():J
com.intellij.openapi.editor.ex.util.DataStorage
- a:copy():com.intellij.openapi.editor.ex.util.DataStorage
- a:createStorage():com.intellij.openapi.editor.ex.util.DataStorage
- a:getData(I):I
- a:insert(com.intellij.openapi.editor.ex.util.DataStorage,I,I,I):V
- a:packData(com.intellij.psi.tree.IElementType,I,Z):I
- a:remove(I,I,I):V
- a:replace(com.intellij.openapi.editor.ex.util.DataStorage,I,I):V
- a:setData(I,I):V
- a:unpackStateFromData(I):I
- a:unpackTokenFromData(I):com.intellij.psi.tree.IElementType
c:com.intellij.openapi.editor.ex.util.SegmentArray
- psf:INITIAL_SIZE:I
- p:myEnds:I[]
- p:mySegmentCount:I
- p:myStarts:I[]
- p:<init>():V
- f:findSegmentIndex(I):I
- getLastValidOffset():I
- getSegmentCount():I
- getSegmentEnd(I):I
- getSegmentStart(I):I
- p:insert(com.intellij.openapi.editor.ex.util.SegmentArray,I):V
- ps:insert(I[],I[],I,I,I):I[]
- p:noSegmentsAvailable(I):I
- p:offsetOutOfRange(I,I):I
- remove(I,I):V
- p:remove(I[],I,I):I[]
- removeAll():V
- p:replace(I,com.intellij.openapi.editor.ex.util.SegmentArray,I):V
- p:segmentNotFound(I,I):I
- p:setElementAt(I,I,I):V
- f:shiftSegments(I,I):V
c:com.intellij.openapi.editor.ex.util.SegmentArrayWithData
- com.intellij.openapi.editor.ex.util.SegmentArray
- <init>(com.intellij.openapi.editor.ex.util.DataStorage):V
- copy():com.intellij.openapi.editor.ex.util.SegmentArrayWithData
- createStorage():com.intellij.openapi.editor.ex.util.DataStorage
- getSegmentData(I):I
- insert(com.intellij.openapi.editor.ex.util.SegmentArrayWithData,I):V
- packData(com.intellij.psi.tree.IElementType,I,Z):I
- remove(I,I):V
- replace(I,I,com.intellij.openapi.editor.ex.util.SegmentArrayWithData):V
- p:replace(I,com.intellij.openapi.editor.ex.util.SegmentArrayWithData,I):V
- setElementAt(I,I,I,I):V
- unpackStateFromData(I):I
- unpackTokenFromData(I):com.intellij.psi.tree.IElementType
c:com.intellij.openapi.editor.ex.util.ShortBasedStorage
- com.intellij.openapi.editor.ex.util.DataStorage
- p:myData:S[]
- <init>():V
- p:<init>(S[]):V
- copy():com.intellij.openapi.editor.ex.util.DataStorage
- createStorage():com.intellij.openapi.editor.ex.util.DataStorage
- getData(I):I
- insert(com.intellij.openapi.editor.ex.util.DataStorage,I,I,I):V
- ps:insert(S[],S[],I,I,I):S[]
- packData(com.intellij.psi.tree.IElementType,I,Z):I
- ps:reallocateArray(S[],I):S[]
- remove(I,I,I):V
- replace(com.intellij.openapi.editor.ex.util.DataStorage,I,I):V
- setData(I,I):V
- unpackStateFromData(I):I
- unpackTokenFromData(I):com.intellij.psi.tree.IElementType
f:com.intellij.openapi.editor.impl.DocumentImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.editor.ex.DocumentEx
- <init>(java.lang.CharSequence):V
- <init>(java.lang.CharSequence,Z):V
- <init>(java.lang.CharSequence,Z,Z):V
- <init>(java.lang.String):V
- acceptsSlashR():Z
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener,com.intellij.openapi.Disposable):V
- addEditReadOnlyListener(com.intellij.openapi.editor.ex.EditReadOnlyListener):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- s:areRangeMarkersRetainedFor(com.intellij.openapi.vfs.VirtualFile):Z
- assertNotInBulkUpdate():V
- clearLineModificationFlags():V
- clearLineModificationFlags(I,I):V
- createGuardedBlock(I,I):com.intellij.openapi.editor.RangeMarker
- createLineIterator():com.intellij.openapi.editor.ex.LineIterator
- createRangeMarker(I,I,Z):com.intellij.openapi.editor.RangeMarker
- deleteString(I,I):V
- dumpState():java.lang.String
- fireReadOnlyModificationAttempt():V
- getCharsSequence():java.lang.CharSequence
- getGuardedBlocks():java.util.List
- getImmutableCharSequence():java.lang.CharSequence
- getLineCount():I
- getLineEndOffset(I):I
- getLineNumber(I):I
- getLineSeparatorLength(I):I
- getLineStartOffset(I):I
- getModificationSequence():I
- getModificationStamp():J
- getOffsetGuard(I):com.intellij.openapi.editor.RangeMarker
- getRangeGuard(I,I):com.intellij.openapi.editor.RangeMarker
- getText():java.lang.String
- getText(com.intellij.openapi.util.TextRange):java.lang.String
- getTextLength():I
- insertString(I,java.lang.CharSequence):V
- isInBulkUpdate():Z
- isInEventsHandling():Z
- isLineModified(I):Z
- isWritable():Z
- moveText(I,I,I):V
- processRangeMarkers(com.intellij.util.Processor):Z
- processRangeMarkersOverlappingWith(I,I,com.intellij.util.Processor):Z
- registerRangeMarker(com.intellij.openapi.editor.ex.RangeMarkerEx,I,I,Z,Z,I):V
- removeDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- removeEditReadOnlyListener(com.intellij.openapi.editor.ex.EditReadOnlyListener):V
- removeGuardedBlock(com.intellij.openapi.editor.RangeMarker):V
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- removeRangeMarker(com.intellij.openapi.editor.ex.RangeMarkerEx):Z
- replaceString(I,I,java.lang.CharSequence):V
- replaceText(java.lang.CharSequence,J):V
- setAcceptSlashR(Z):Z
- setCyclicBufferSize(I):V
- setInBulkUpdate(Z):V
- setModificationStamp(J):V
- setReadOnly(Z):V
- setStripTrailingSpacesEnabled(Z):V
- setText(java.lang.CharSequence):V
- startGuardedBlockChecking():V
- stopGuardedBlockChecking():V
- stripTrailingSpaces(com.intellij.openapi.project.Project):Z
- stripTrailingSpaces(com.intellij.openapi.project.Project,Z):Z
- suppressGuardedExceptions():V
- unSuppressGuardedExceptions():V
c:com.intellij.openapi.editor.impl.EditorTextFieldRendererDocument
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.editor.ex.DocumentEx
- <init>():V
- createGuardedBlock(I,I):com.intellij.openapi.editor.RangeMarker
- createLineIterator():com.intellij.openapi.editor.ex.LineIterator
- createRangeMarker(I,I,Z):com.intellij.openapi.editor.RangeMarker
- deleteString(I,I):V
- getChars():C[]
- getImmutableCharSequence():java.lang.CharSequence
- getLineCount():I
- getLineEndOffset(I):I
- getLineNumber(I):I
- getLineSeparatorLength(I):I
- getLineStartOffset(I):I
- getModificationStamp():J
- insertString(I,java.lang.CharSequence):V
- isWritable():Z
- processRangeMarkers(com.intellij.util.Processor):Z
- processRangeMarkersOverlappingWith(I,I,com.intellij.util.Processor):Z
- registerRangeMarker(com.intellij.openapi.editor.ex.RangeMarkerEx,I,I,Z,Z,I):V
- removeRangeMarker(com.intellij.openapi.editor.ex.RangeMarkerEx):Z
- replaceString(I,I,java.lang.CharSequence):V
- replaceText(java.lang.CharSequence,J):V
- setModificationStamp(J):V
- setText(java.lang.CharSequence):V
com.intellij.openapi.editor.impl.Interval
- a:intervalEnd():I
- a:intervalStart():I
f:com.intellij.openapi.editor.impl.LineSet
- createIterator():com.intellij.openapi.editor.ex.LineIterator
- s:createLineSet(java.lang.CharSequence):com.intellij.openapi.editor.impl.LineSet
- findLineIndex(I):I
- getLength():I
- getLineCount():I
- getLineEnd(I):I
- getLineStart(I):I
a:com.intellij.openapi.editor.impl.PsiBasedStripTrailingSpacesFilter
- com.intellij.openapi.editor.StripTrailingSpacesFilter
- p:<init>(com.intellij.openapi.editor.Document):V
- pf:disableRange(com.intellij.openapi.util.TextRange,Z):V
- s:getDocumentLanguage(com.intellij.openapi.editor.Document):com.intellij.lang.Language
- isStripSpacesAllowedForLine(I):Z
- pa:process(com.intellij.psi.PsiFile):V
a:com.intellij.openapi.editor.impl.PsiBasedStripTrailingSpacesFilter$Factory
- com.intellij.openapi.editor.StripTrailingSpacesFilterFactory
- <init>():V
- pa:createFilter(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.impl.PsiBasedStripTrailingSpacesFilter
- f:createFilter(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):com.intellij.openapi.editor.StripTrailingSpacesFilter
- pa:isApplicableTo(com.intellij.lang.Language):Z
c:com.intellij.openapi.editor.impl.RangeMarkerImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.editor.ex.RangeMarkerEx
- p:changedUpdateImpl(com.intellij.openapi.editor.event.DocumentEvent):V
- dispose():V
- f:documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- findRangeMarkerAfter():com.intellij.openapi.editor.RangeMarker
- findRangeMarkerBefore():com.intellij.openapi.editor.RangeMarker
- f:getDocument():com.intellij.openapi.editor.ex.DocumentEx
- getEndOffset():I
- getId():J
- getLayer():I
- getStartOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- intervalEnd():I
- intervalStart():I
- isGreedyToLeft():Z
- isGreedyToRight():Z
- isStickingToRight():Z
- isValid():Z
- p:onReTarget(com.intellij.openapi.editor.event.DocumentEvent):V
- p:persistentHighlighterUpdate(com.intellij.openapi.editor.event.DocumentEvent,Z):V
- p:registerInTree(I,I,Z,Z,I):V
- s:runAssertingInternalInvariants(com.intellij.util.ThrowableRunnable):V
- setGreedyToLeft(Z):V
- setGreedyToRight(Z):V
- setStickingToRight(Z):V
- p:setValid(Z):Z
- p:unregisterInTree():V
c:com.intellij.openapi.editor.impl.TextRangeInterval
- com.intellij.openapi.util.ProperTextRange
- com.intellij.openapi.editor.impl.Interval
- <init>(I,I):V
- intervalEnd():I
- intervalStart():I
c:com.intellij.openapi.editor.impl.event.DocumentEventImpl
- com.intellij.openapi.editor.event.DocumentEvent
- getInitialOldLength():I
- getInitialStartOffset():I
- getLineNumberBeforeUpdate(I):I
- getMoveOffset():I
- getNewFragment():java.lang.CharSequence
- getNewLength():I
- getOffset():I
- getOldFragment():java.lang.CharSequence
- getOldLength():I
- getOldTimeStamp():J
- isWholeTextReplaced():Z
- translateLineViaDiff(I):I
- translateLineViaDiffStrict(I):I
a:com.intellij.openapi.fileEditor.impl.FileDocumentManagerBase
- com.intellij.openapi.fileEditor.FileDocumentManager
- sf:HARD_REF_TO_DOCUMENT_KEY:com.intellij.openapi.util.Key
- sf:TRACK_NON_PHYSICAL:com.intellij.openapi.util.Key
- <init>():V
- pa:createDocument(java.lang.CharSequence,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.ex.DocumentEx
- pa:fileContentLoaded(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document):V
- getCachedDocument(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.Document
- f:getDocument(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.Document
- pa:getDocumentListener():com.intellij.openapi.editor.event.DocumentListener
- getFile(com.intellij.openapi.editor.Document):com.intellij.openapi.vfs.VirtualFile
- isPartialPreviewOfALargeFile(com.intellij.openapi.editor.Document):Z
- reloadBinaryFiles():V
f:com.intellij.openapi.fileEditor.impl.LoadTextUtil
- s:changeLineSeparators(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.Object):V
- s:charsetForWriting(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.nio.charset.Charset):com.intellij.openapi.util.Pair$NonNull
- s:charsetFromContentOrNull(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.CharSequence):java.nio.charset.Charset
- s:chooseMostlyHarmlessCharset(java.nio.charset.Charset,java.nio.charset.Charset,java.lang.String):com.intellij.openapi.util.Pair$NonNull
- s:clearCharsetAutoDetectionReason(com.intellij.openapi.vfs.VirtualFile):V
- s:detectCharsetAndSetBOM(com.intellij.openapi.vfs.VirtualFile,B[],com.intellij.openapi.fileTypes.FileType):java.nio.charset.Charset
- s:detectLineSeparator(com.intellij.openapi.vfs.VirtualFile,Z):java.lang.String
- s:extractCharsetFromFileContent(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.CharSequence):java.nio.charset.Charset
- s:getCharsetAutoDetectionReason(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.impl.LoadTextUtil$AutoDetectionReason
- s:getTextByBinaryPresentation(B[],com.intellij.openapi.vfs.VirtualFile):java.lang.CharSequence
- s:getTextByBinaryPresentation(B[],com.intellij.openapi.vfs.VirtualFile,Z,Z):java.lang.CharSequence
- s:getTextByBinaryPresentation(B[],java.nio.charset.Charset):java.lang.CharSequence
- s:loadText(com.intellij.openapi.vfs.VirtualFile):java.lang.CharSequence
- s:loadText(com.intellij.openapi.vfs.VirtualFile,I):java.lang.CharSequence
- s:processTextFromBinaryPresentationOrNull(com.intellij.openapi.util.io.ByteSequence,com.intellij.openapi.vfs.VirtualFile,Z,Z,com.intellij.openapi.fileTypes.FileType,com.intellij.util.NotNullFunction):com.intellij.openapi.fileTypes.FileType
- s:write(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.Object,java.lang.String,J):V
e:com.intellij.openapi.fileEditor.impl.LoadTextUtil$AutoDetectionReason
- java.lang.Enum
- sf:FROM_BOM:com.intellij.openapi.fileEditor.impl.LoadTextUtil$AutoDetectionReason
- sf:FROM_BYTES:com.intellij.openapi.fileEditor.impl.LoadTextUtil$AutoDetectionReason
- s:valueOf(java.lang.String):com.intellij.openapi.fileEditor.impl.LoadTextUtil$AutoDetectionReason
- s:values():com.intellij.openapi.fileEditor.impl.LoadTextUtil$AutoDetectionReason[]
f:com.intellij.openapi.fileTypes.PlainTextFileType
- com.intellij.openapi.fileTypes.LanguageFileType
- com.intellij.openapi.fileTypes.OSFileIdeAssociation
- com.intellij.openapi.fileTypes.PlainTextLikeFileType
- sf:INSTANCE:com.intellij.openapi.fileTypes.PlainTextFileType
- getDefaultExtension():java.lang.String
- getDescription():java.lang.String
- getExtensionMode():com.intellij.openapi.fileTypes.OSFileIdeAssociation$ExtensionMode
- getIcon():javax.swing.Icon
- getName():java.lang.String
f:com.intellij.openapi.fileTypes.PlainTextLanguage
- com.intellij.lang.Language
- sf:INSTANCE:com.intellij.openapi.fileTypes.PlainTextLanguage
- getDisplayName():java.lang.String
c:com.intellij.openapi.fileTypes.PlainTextParserDefinition
- com.intellij.lang.ParserDefinition
- <init>():V
- createElement(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
- createFile(com.intellij.psi.FileViewProvider):com.intellij.psi.PsiFile
- createLexer(com.intellij.openapi.project.Project):com.intellij.lexer.Lexer
- createParser(com.intellij.openapi.project.Project):com.intellij.lang.PsiParser
- getCommentTokens():com.intellij.psi.tree.TokenSet
- getFileNodeType():com.intellij.psi.tree.IFileElementType
- getStringLiteralElements():com.intellij.psi.tree.TokenSet
- getWhitespaceTokens():com.intellij.psi.tree.TokenSet
- spaceExistenceTypeBetweenTokens(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):com.intellij.lang.ParserDefinition$SpaceRequirements
com.intellij.openapi.fileTypes.impl.CustomSyntaxTableFileType
- com.intellij.openapi.fileTypes.FileType
- a:getSyntaxTable():com.intellij.ide.highlighter.custom.SyntaxTable
f:com.intellij.openapi.progress.ProgressIndicatorForCollections
- bsf:forEachWithProgress(java.util.Collection,com.intellij.openapi.progress.ProgressIndicator,kotlin.jvm.functions.Function2):V
- bsf:mapWithProgress(java.util.Collection,com.intellij.openapi.progress.ProgressIndicator,kotlin.jvm.functions.Function2):java.util.List
- sf:runUnderNestedProgressAndRelayMessages(com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.progress.ProgressIndicator,kotlin.jvm.functions.Function1):java.lang.Object
- sf:runWithStateDelegate(com.intellij.openapi.progress.util.AbstractProgressIndicatorExBase,com.intellij.openapi.progress.util.AbstractProgressIndicatorExBase,kotlin.jvm.functions.Function0):java.lang.Object
- bsf:withPushPop(com.intellij.openapi.progress.ProgressIndicator,kotlin.jvm.functions.Function0):java.lang.Object
c:com.intellij.openapi.progress.impl.CoreProgressManager
- com.intellij.openapi.progress.ProgressManager
- com.intellij.openapi.Disposable
- <init>():V
- s:assertUnderProgress(com.intellij.openapi.progress.ProgressIndicator):V
- computeInNonCancelableSection(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- computePrioritized(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- p:createDefaultAsynchronousProgressIndicator(com.intellij.openapi.progress.Task$Backgroundable):com.intellij.openapi.progress.ProgressIndicator
- dispose():V
- p:doCheckCanceled():V
- executeNonCancelableSection(java.lang.Runnable):V
- executeProcessUnderProgress(java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):V
- p:finishTask(com.intellij.openapi.progress.Task,Z,java.lang.Throwable):V
- getCurrentProgressModality():com.intellij.openapi.application.ModalityState
- s:getCurrentThreadProgressModality():com.intellij.openapi.application.ModalityState
- getProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
- hasModalProgressIndicator():Z
- hasProgressIndicator():Z
- hasUnsafeProgressIndicator():Z
- p:indicatorCanceled(com.intellij.openapi.progress.ProgressIndicator):V
- s:isCanceledThread(java.lang.Thread):Z
- isInNonCancelableSection():Z
- p:prioritizingFinished():V
- p:prioritizingStarted():V
- run(com.intellij.openapi.progress.Task):V
- runInReadActionWithWriteActionPriority(java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):Z
- runProcess(java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):V
- runProcessWithProgressAsynchronously(com.intellij.openapi.progress.Task$Backgroundable):java.util.concurrent.Future
- runProcessWithProgressAsynchronously(com.intellij.openapi.progress.Task$Backgroundable,com.intellij.openapi.progress.ProgressIndicator):V
- runProcessWithProgressAsynchronously(com.intellij.openapi.progress.Task$Backgroundable,com.intellij.openapi.progress.ProgressIndicator,java.lang.Runnable):java.util.concurrent.Future
- runProcessWithProgressAsynchronously(com.intellij.openapi.progress.Task$Backgroundable,com.intellij.openapi.progress.ProgressIndicator,java.lang.Runnable,com.intellij.openapi.application.ModalityState):java.util.concurrent.Future
- runProcessWithProgressAsynchronously(com.intellij.openapi.project.Project,java.lang.String,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable,com.intellij.openapi.progress.PerformInBackgroundOption):V
- runProcessWithProgressInCurrentThread(com.intellij.openapi.progress.Task,com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.application.ModalityState):V
- p:runProcessWithProgressSynchronously(com.intellij.openapi.progress.Task):Z
- runProcessWithProgressSynchronously(com.intellij.openapi.util.ThrowableComputable,java.lang.String,Z,com.intellij.openapi.project.Project):java.lang.Object
- runProcessWithProgressSynchronously(java.lang.Runnable,java.lang.String,Z,com.intellij.openapi.project.Project):Z
- runProcessWithProgressSynchronously(java.lang.Runnable,java.lang.String,Z,com.intellij.openapi.project.Project,javax.swing.JComponent):Z
- silenceGlobalIndicator(java.util.function.Supplier):java.lang.Object
- p:sleepIfNeededToGivePriorityToAnotherThread():Z
- p:startTask(com.intellij.openapi.progress.Task,com.intellij.openapi.progress.ProgressIndicator,java.lang.Runnable):V
f:com.intellij.openapi.progress.impl.ProgressResult
- <init>(java.lang.Object,Z,java.lang.Throwable):V
- equals(java.lang.Object):Z
- getResult():java.lang.Object
- getThrowable():java.lang.Throwable
- hashCode():I
- isCanceled():Z
f:com.intellij.openapi.progress.impl.ProgressRunner
- <init>(com.intellij.openapi.progress.Task):V
- <init>(java.lang.Runnable):V
- <init>(java.util.function.Function):V
- s:isCanceled(java.util.concurrent.Future):Z
- modal():com.intellij.openapi.progress.impl.ProgressRunner
- onThread(com.intellij.openapi.progress.impl.ProgressRunner$ThreadToUse):com.intellij.openapi.progress.impl.ProgressRunner
- submit():java.util.concurrent.CompletableFuture
- submitAndGet():com.intellij.openapi.progress.impl.ProgressResult
- sync():com.intellij.openapi.progress.impl.ProgressRunner
- s:unwrap(java.lang.Throwable):java.lang.Throwable
- withProgress(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.progress.impl.ProgressRunner
- withProgress(java.util.concurrent.CompletableFuture):com.intellij.openapi.progress.impl.ProgressRunner
e:com.intellij.openapi.progress.impl.ProgressRunner$ThreadToUse
- java.lang.Enum
- sf:POOLED:com.intellij.openapi.progress.impl.ProgressRunner$ThreadToUse
- sf:WRITE:com.intellij.openapi.progress.impl.ProgressRunner$ThreadToUse
- s:valueOf(java.lang.String):com.intellij.openapi.progress.impl.ProgressRunner$ThreadToUse
- s:values():com.intellij.openapi.progress.impl.ProgressRunner$ThreadToUse[]
c:com.intellij.openapi.progress.util.AbstractProgressIndicatorBase
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.progress.ProgressIndicator
- <init>():V
- cancel():V
- checkCanceled():V
- p:dontStartActivity():V
- finishNonCancelableSection():V
- p:getCancellationTrace():java.lang.Throwable
- getFraction():D
- getModalityState():com.intellij.openapi.application.ModalityState
- getText():java.lang.String
- getText2():java.lang.String
- initStateFrom(com.intellij.openapi.progress.ProgressIndicator):V
- p:isCancelable():Z
- isCanceled():Z
- isIndeterminate():Z
- f:isModal():Z
- isPopupWasShown():Z
- p:isReuseable():Z
- isRunning():Z
- isShowing():Z
- popState():V
- pushState():V
- setFraction(D):V
- setIndeterminate(Z):V
- setModalityProgress(com.intellij.openapi.progress.ProgressIndicator):V
- setText(java.lang.String):V
- setText2(java.lang.String):V
- start():V
- startNonCancelableSection():V
- stop():V
c:com.intellij.openapi.progress.util.AbstractProgressIndicatorExBase
- com.intellij.openapi.progress.util.AbstractProgressIndicatorBase
- com.intellij.openapi.wm.ex.ProgressIndicatorEx
- <init>():V
- <init>(Z):V
- f:addStateDelegate(com.intellij.openapi.wm.ex.ProgressIndicatorEx):V
- cancel():V
- f:checkCanceled():V
- p:delegateRunningChange(com.intellij.openapi.progress.util.AbstractProgressIndicatorExBase$IndicatorAction):V
- finish(com.intellij.openapi.progress.TaskInfo):V
- initStateFrom(com.intellij.openapi.progress.ProgressIndicator):V
- isFinished(com.intellij.openapi.progress.TaskInfo):Z
- p:isReuseable():Z
- p:onProgressChange():V
- p:onRunningChange():V
- popState():V
- processFinish():V
- pushState():V
- pf:removeAllStateDelegates():V
- f:removeStateDelegate(com.intellij.openapi.wm.ex.ProgressIndicatorEx):V
- setFraction(D):V
- setIndeterminate(Z):V
- p:setOwnerTask(com.intellij.openapi.progress.TaskInfo):V
- setText(java.lang.String):V
- setText2(java.lang.String):V
- start():V
- stop():V
- wasStarted():Z
p:com.intellij.openapi.progress.util.AbstractProgressIndicatorExBase$IndicatorAction
- a:execute(com.intellij.openapi.wm.ex.ProgressIndicatorEx):V
c:com.intellij.openapi.progress.util.ProgressWrapper
- com.intellij.openapi.progress.util.AbstractProgressIndicatorBase
- com.intellij.openapi.progress.StandardProgressIndicator
- com.intellij.openapi.progress.WrappedProgressIndicator
- p:<init>(com.intellij.openapi.progress.ProgressIndicator):V
- p:<init>(com.intellij.openapi.progress.ProgressIndicator,Z):V
- f:cancel():V
- f:checkCanceled():V
- p:getCancellationTrace():java.lang.Throwable
- getModalityState():com.intellij.openapi.application.ModalityState
- getOriginalProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
- f:isCanceled():Z
- isIndeterminate():Z
- setFraction(D):V
- setIndeterminate(Z):V
- setText(java.lang.String):V
- setText2(java.lang.String):V
- s:unwrap(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.progress.ProgressIndicator
- s:unwrapAll(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.progress.ProgressIndicator
- s:wrap(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.progress.util.ProgressWrapper
c:com.intellij.openapi.progress.util.RelayUiToDelegateIndicator
- com.intellij.openapi.progress.util.AbstractProgressIndicatorExBase
- <init>(com.intellij.openapi.progress.ProgressIndicator):V
- pf:onProgressChange():V
- f:popState():V
- f:pushState():V
- f:setFraction(D):V
- f:setIndeterminate(Z):V
- f:setText(java.lang.String):V
- f:setText2(java.lang.String):V
c:com.intellij.openapi.progress.util.TooManyUsagesStatus
- s:createFor(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.progress.util.TooManyUsagesStatus
- s:getFrom(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.progress.util.TooManyUsagesStatus
- pauseProcessingIfTooManyUsages():V
- switchTooManyUsagesStatus():Z
- userResponded():V
e:com.intellij.openapi.progress.util.TooManyUsagesStatus$Status
- java.lang.Enum
- sf:FEW_USAGES:com.intellij.openapi.progress.util.TooManyUsagesStatus$Status
- sf:USER_RESPONDED:com.intellij.openapi.progress.util.TooManyUsagesStatus$Status
- sf:WARNING_DIALOG_SHOWN:com.intellij.openapi.progress.util.TooManyUsagesStatus$Status
- s:valueOf(java.lang.String):com.intellij.openapi.progress.util.TooManyUsagesStatus$Status
- s:values():com.intellij.openapi.progress.util.TooManyUsagesStatus$Status[]
com.intellij.openapi.roots.PackageDirectoryCache
- s:createCache(java.util.List):com.intellij.openapi.roots.PackageDirectoryCache
- a:getDirectoriesByPackageName(java.lang.String):java.util.List
- a:getSubpackageNames(java.lang.String,com.intellij.psi.search.GlobalSearchScope):java.util.Set
c:com.intellij.openapi.vfs.impl.LightFilePointer
- com.intellij.openapi.vfs.pointers.VirtualFilePointer
- <init>(com.intellij.openapi.vfs.VirtualFile):V
- <init>(java.lang.String):V
- equals(java.lang.Object):Z
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFileName():java.lang.String
- getPresentableUrl():java.lang.String
- getUrl():java.lang.String
- hashCode():I
- isValid():Z
c:com.intellij.openapi.vfs.impl.VirtualFileManagerImpl
- com.intellij.openapi.vfs.VirtualFileManager
- com.intellij.openapi.Disposable
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- <init>(java.util.List):V
- <init>(java.util.List,com.intellij.util.messages.MessageBus):V
- addAsyncFileListener(com.intellij.openapi.vfs.AsyncFileListener,com.intellij.openapi.Disposable):V
- addVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- addVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener,com.intellij.openapi.Disposable):V
- addVirtualFileManagerListener(com.intellij.openapi.vfs.VirtualFileManagerListener,com.intellij.openapi.Disposable):V
- asyncRefresh(java.lang.Runnable):J
- dispose():V
- p:doRefresh(Z,java.lang.Runnable):J
- findFileByNioPath(java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- findFileByUrl(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- getFileSystem(java.lang.String):com.intellij.openapi.vfs.VirtualFileSystem
- p:getFileSystemsForProtocol(java.lang.String):java.util.List
- getModificationCount():J
- getPhysicalFileSystems():java.util.List
- getStructureModificationCount():J
- getVFileName(I):java.lang.CharSequence
- notifyPropertyChanged(com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.Object,java.lang.Object):V
- refreshAndFindFileByNioPath(java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- refreshAndFindFileByUrl(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- refreshWithoutFileWatcher(Z):V
- removeVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- removeVirtualFileManagerListener(com.intellij.openapi.vfs.VirtualFileManagerListener):V
- storeName(java.lang.String):I
- syncRefresh():J
c:com.intellij.openapi.vfs.impl.ZipHandler
- com.intellij.openapi.vfs.impl.ZipHandlerBase
- <init>(java.lang.String):V
- p:acquireZipHandle():com.intellij.util.io.ResourceHandle
- clearCaches():V
- p:getEntryFileStamp():J
a:com.intellij.openapi.vfs.impl.ZipHandlerBase
- com.intellij.openapi.vfs.impl.ArchiveHandler
- <init>(java.lang.String):V
- pa:acquireZipHandle():com.intellij.util.io.ResourceHandle
- contentsToByteArray(java.lang.String):B[]
- p:createEntriesMap():java.util.Map
- pa:getEntryFileStamp():J
- getInputStream(java.lang.String):java.io.InputStream
com.intellij.openapi.vfs.impl.http.FileDownloadingListener
- a:downloadingCancelled():V
- a:downloadingStarted():V
- a:errorOccurred(java.lang.String):V
- a:fileDownloaded(com.intellij.openapi.vfs.VirtualFile):V
- a:progressFractionChanged(D):V
- a:progressMessageChanged(Z,java.lang.String):V
a:com.intellij.openapi.vfs.impl.http.HttpVirtualFile
- com.intellij.openapi.vfs.VirtualFile
- <init>():V
- a:getFileInfo():com.intellij.openapi.vfs.impl.http.RemoteFileInfo
com.intellij.openapi.vfs.impl.http.RemoteFileInfo
- a:addDownloadingListener(com.intellij.openapi.vfs.impl.http.FileDownloadingListener):V
- a:cancelDownloading():V
- a:getErrorMessage():java.lang.String
- a:getLocalFile():com.intellij.openapi.vfs.VirtualFile
- a:getState():com.intellij.openapi.vfs.impl.http.RemoteFileState
- a:removeDownloadingListener(com.intellij.openapi.vfs.impl.http.FileDownloadingListener):V
- a:restartDownloading():V
- a:startDownloading():V
e:com.intellij.openapi.vfs.impl.http.RemoteFileState
- java.lang.Enum
- sf:DOWNLOADED:com.intellij.openapi.vfs.impl.http.RemoteFileState
- sf:DOWNLOADING_IN_PROGRESS:com.intellij.openapi.vfs.impl.http.RemoteFileState
- sf:DOWNLOADING_NOT_STARTED:com.intellij.openapi.vfs.impl.http.RemoteFileState
- sf:ERROR_OCCURRED:com.intellij.openapi.vfs.impl.http.RemoteFileState
- s:valueOf(java.lang.String):com.intellij.openapi.vfs.impl.http.RemoteFileState
- s:values():com.intellij.openapi.vfs.impl.http.RemoteFileState[]
f:com.intellij.openapi.vfs.impl.jar.CoreJarFileSystem
- com.intellij.openapi.vfs.DeprecatedVirtualFileSystem
- <init>():V
- clearHandlersCache():V
- findFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- getProtocol():java.lang.String
- refresh(Z):V
- refreshAndFindFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
c:com.intellij.openapi.vfs.local.CoreLocalFileSystem
- com.intellij.openapi.vfs.DeprecatedVirtualFileSystem
- <init>():V
- findFileByIoFile(java.io.File):com.intellij.openapi.vfs.VirtualFile
- findFileByNioFile(java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- findFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- getNioPath(com.intellij.openapi.vfs.VirtualFile):java.nio.file.Path
- getProtocol():java.lang.String
- refresh(Z):V
- refreshAndFindFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
c:com.intellij.openapi.vfs.local.CoreLocalVirtualFile
- com.intellij.openapi.vfs.VirtualFile
- <init>(com.intellij.openapi.vfs.local.CoreLocalFileSystem,java.io.File):V
- <init>(com.intellij.openapi.vfs.local.CoreLocalFileSystem,java.nio.file.Path):V
- <init>(com.intellij.openapi.vfs.local.CoreLocalFileSystem,java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes):V
- <init>(com.intellij.openapi.vfs.local.CoreLocalFileSystem,java.nio.file.Path,Z):V
- contentsToByteArray():B[]
- equals(java.lang.Object):Z
- p:getAttributes(Z):java.nio.file.attribute.BasicFileAttributes
- getChildren():com.intellij.openapi.vfs.VirtualFile[]
- p:getFile():java.nio.file.Path
- getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getInputStream():java.io.InputStream
- getLength():J
- getModificationStamp():J
- getName():java.lang.String
- getOutputStream(java.lang.Object,J,J):java.io.OutputStream
- getParent():com.intellij.openapi.vfs.VirtualFile
- getPath():java.lang.String
- getTimeStamp():J
- hashCode():I
- is(com.intellij.openapi.vfs.VFileProperty):Z
- isDirectory():Z
- isInLocalFileSystem():Z
- isValid():Z
- isWritable():Z
- refresh(Z,Z,java.lang.Runnable):V
com.intellij.openapi.wm.ex.ProgressIndicatorEx
- com.intellij.openapi.progress.ProgressIndicator
- a:addStateDelegate(com.intellij.openapi.wm.ex.ProgressIndicatorEx):V
- a:finish(com.intellij.openapi.progress.TaskInfo):V
- a:initStateFrom(com.intellij.openapi.progress.ProgressIndicator):V
- a:isFinished(com.intellij.openapi.progress.TaskInfo):Z
- a:processFinish():V
- a:wasStarted():Z
f:com.intellij.patterns.StringPatternUtil
- <init>():V
- s:matchesBrics(com.intellij.patterns.StringPattern,java.lang.String):com.intellij.patterns.StringPattern
c:com.intellij.pom.core.impl.PomModelImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.pom.PomModel
- <init>(com.intellij.openapi.project.Project):V
- addModelListener(com.intellij.pom.event.PomModelListener):V
- addModelListener(com.intellij.pom.event.PomModelListener,com.intellij.openapi.Disposable):V
- getModelAspect(java.lang.Class):com.intellij.pom.PomModelAspect
- s:guardPsiModificationsIn(com.intellij.util.ThrowableRunnable):V
- s:isAllowPsiModification():Z
- removeModelListener(com.intellij.pom.event.PomModelListener):V
- runTransaction(com.intellij.pom.PomTransaction):V
- p:updateDependentAspects(com.intellij.pom.event.PomModelEvent):V
f:com.intellij.pom.tree.TreeAspect
- com.intellij.pom.PomModelAspect
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.pom.tree.TreeAspect
- update(com.intellij.pom.event.PomModelEvent):V
com.intellij.pom.tree.events.ChangeInfo
- sf:ADD:S
- sf:CONTENTS_CHANGED:S
- sf:REMOVED:S
- sf:REPLACE:S
- a:getChangeType():I
com.intellij.pom.tree.events.TreeChange
- a:getAffectedChildren():com.intellij.lang.ASTNode[]
- a:getChangeByChild(com.intellij.lang.ASTNode):com.intellij.pom.tree.events.ChangeInfo
com.intellij.pom.tree.events.TreeChangeEvent
- com.intellij.pom.event.PomChangeSet
- a:getChangedElements():com.intellij.lang.ASTNode[]
- a:getChangesByElement(com.intellij.lang.ASTNode):com.intellij.pom.tree.events.TreeChange
- a:getRootElement():com.intellij.lang.ASTNode
c:com.intellij.pom.tree.events.impl.ChangeInfoImpl
- com.intellij.pom.tree.events.ChangeInfo
- getChangeType():I
- getNewChild():com.intellij.lang.ASTNode
- getNewLength():I
- getOffsetInParent():I
- getOldChildNode():com.intellij.lang.ASTNode
- getOldLength():I
a:com.intellij.psi.AbstractFileViewProvider
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.psi.FileViewProvider
- sf:FREE_THREADED:com.intellij.openapi.util.Key
- p:<init>(com.intellij.psi.PsiManager,com.intellij.openapi.vfs.VirtualFile,Z):V
- beforeContentsSynchronized():V
- clone():com.intellij.psi.FileViewProvider
- contentsSynchronized():V
- p:createFile(com.intellij.lang.Language):com.intellij.psi.PsiFile
- p:createFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileTypes.FileType):com.intellij.psi.PsiFile
- p:createFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileTypes.FileType,com.intellij.lang.Language):com.intellij.psi.PsiFile
- findElementAt(I,com.intellij.lang.Language):com.intellij.psi.PsiElement
- s:findElementAt(com.intellij.psi.PsiElement,I):com.intellij.psi.PsiElement
- findReferenceAt(I,com.intellij.lang.Language):com.intellij.psi.PsiReference
- ps:findReferenceAt(com.intellij.psi.PsiFile,I):com.intellij.psi.PsiReference
- a:getCachedPsi(com.intellij.lang.Language):com.intellij.psi.PsiFile
- a:getCachedPsiFiles():java.util.List
- getContents():java.lang.CharSequence
- getDocument():com.intellij.openapi.editor.Document
- getFilePsiLock():com.intellij.psi.PsiLock
- f:getFileType():com.intellij.openapi.fileTypes.FileType
- a:getKnownTreeRoots():java.util.List
- f:getManager():com.intellij.psi.impl.PsiManagerEx
- getModificationStamp():J
- f:getPsi(com.intellij.lang.Language):com.intellij.psi.PsiFile
- pa:getPsiInner(com.intellij.lang.Language):com.intellij.psi.PsiFile
- getStubBindingRoot():com.intellij.psi.PsiFile
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- isEventSystemEnabled():Z
- s:isFreeThreaded(com.intellij.psi.FileViewProvider):Z
- pf:isIgnored():Z
- isPhysical():Z
- f:markInvalidated():V
- f:markPossiblyInvalidated():V
- f:onContentReload():V
- f:registerAsCopy(com.intellij.psi.AbstractFileViewProvider):V
- rootChanged(com.intellij.psi.PsiFile):V
- p:shouldCreatePsi():Z
- supportsIncrementalReparse(com.intellij.lang.Language):Z
com.intellij.psi.CustomHighlighterTokenType
- sf:CHARACTER:com.intellij.psi.tree.IElementType
- sf:CUSTOM_CONTENT:com.intellij.psi.tree.IElementType
- sf:IDENTIFIER:com.intellij.psi.tree.IElementType
- sf:KEYWORD_1:com.intellij.psi.tree.IElementType
- sf:KEYWORD_2:com.intellij.psi.tree.IElementType
- sf:KEYWORD_3:com.intellij.psi.tree.IElementType
- sf:KEYWORD_4:com.intellij.psi.tree.IElementType
- sf:KEYWORD_TYPE_COUNT:I
- sf:LINE_COMMENT:com.intellij.psi.tree.IElementType
- sf:L_ANGLE:com.intellij.psi.tree.IElementType
- sf:L_BRACE:com.intellij.psi.tree.IElementType
- sf:L_BRACKET:com.intellij.psi.tree.IElementType
- sf:L_PARENTH:com.intellij.psi.tree.IElementType
- sf:MULTI_LINE_COMMENT:com.intellij.psi.tree.IElementType
- sf:NUMBER:com.intellij.psi.tree.IElementType
- sf:PUNCTUATION:com.intellij.psi.tree.IElementType
- sf:R_ANGLE:com.intellij.psi.tree.IElementType
- sf:R_BRACE:com.intellij.psi.tree.IElementType
- sf:R_BRACKET:com.intellij.psi.tree.IElementType
- sf:R_PARENTH:com.intellij.psi.tree.IElementType
- sf:SINGLE_QUOTED_STRING:com.intellij.psi.tree.IElementType
- sf:STRING:com.intellij.psi.tree.IElementType
- sf:WHITESPACE:com.intellij.psi.tree.IElementType
c:com.intellij.psi.CustomHighlighterTokenType$CustomElementType
- com.intellij.psi.tree.IElementType
- <init>(java.lang.String):V
c:com.intellij.psi.DummyHolderViewProvider
- com.intellij.psi.AbstractFileViewProvider
- <init>(com.intellij.psi.PsiManager):V
- createCopy(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.FileViewProvider
- findElementAt(I):com.intellij.psi.PsiElement
- findElementAt(I,java.lang.Class):com.intellij.psi.PsiElement
- findReferenceAt(I):com.intellij.psi.PsiReference
- getAllFiles():java.util.List
- getBaseLanguage():com.intellij.lang.Language
- getCachedPsi(com.intellij.lang.Language):com.intellij.psi.PsiFile
- getCachedPsiFiles():java.util.List
- getContents():java.lang.CharSequence
- getKnownTreeRoots():java.util.List
- getLanguages():java.util.Set
- getModificationStamp():J
- p:getPsiInner(com.intellij.lang.Language):com.intellij.psi.PsiFile
- setDummyHolder(com.intellij.psi.impl.source.DummyHolder):V
com.intellij.psi.ExternalChangeAction
- java.lang.Runnable
a:com.intellij.psi.ExternalChangeAction$ExternalDocumentChange
- com.intellij.openapi.editor.DocumentRunnable
- com.intellij.psi.ExternalChangeAction
- p:<init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):V
f:com.intellij.psi.FileTypeFileViewProviders
- com.intellij.openapi.fileTypes.FileTypeExtension
- sf:INSTANCE:com.intellij.psi.FileTypeFileViewProviders
a:com.intellij.psi.MultiplePsiFilesPerDocumentFileViewProvider
- com.intellij.psi.AbstractFileViewProvider
- pf:myRoots:java.util.concurrent.ConcurrentMap
- <init>(com.intellij.psi.PsiManager,com.intellij.openapi.vfs.VirtualFile,Z):V
- checkAllTreesEqual():V
- pa:cloneInner(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.MultiplePsiFilesPerDocumentFileViewProvider
- contentsSynchronized():V
- f:createCopy(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.MultiplePsiFilesPerDocumentFileViewProvider
- p:createPsiFileImpl(com.intellij.lang.Language):com.intellij.psi.impl.source.PsiFileImpl
- findElementAt(I):com.intellij.psi.PsiElement
- findElementAt(I,java.lang.Class):com.intellij.psi.PsiElement
- findReferenceAt(I):com.intellij.psi.PsiReference
- getAllFiles():java.util.List
- a:getBaseLanguage():com.intellij.lang.Language
- f:getCachedPsi(com.intellij.lang.Language):com.intellij.psi.PsiFile
- f:getCachedPsiFiles():java.util.List
- f:getKnownTreeRoots():java.util.List
- p:getPsiInner(com.intellij.lang.Language):com.intellij.psi.PsiFile
- pf:removeFile(com.intellij.lang.Language):V
f:com.intellij.psi.PlainTextTokenTypes
- sf:PLAIN_TEXT:com.intellij.psi.tree.IElementType
- sf:PLAIN_TEXT_FILE:com.intellij.psi.tree.IElementType
a:com.intellij.psi.PsiAnchor
- com.intellij.model.Pointer
- <init>():V
- s:calcStubIndex(com.intellij.psi.StubBasedPsiElement):I
- s:create(com.intellij.psi.PsiElement):com.intellij.psi.PsiAnchor
- s:createStubReference(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):com.intellij.psi.PsiAnchor$StubIndexReference
- dereference():com.intellij.psi.PsiElement
- a:getEndOffset():I
- a:getFile():com.intellij.psi.PsiFile
- a:getStartOffset():I
- s:restoreFromStubIndex(com.intellij.psi.impl.source.PsiFileWithStubSupport,I,com.intellij.psi.tree.IElementType,Z):com.intellij.psi.PsiElement
- a:retrieve():com.intellij.psi.PsiElement
- retrieveOrThrow():com.intellij.psi.PsiElement
c:com.intellij.psi.PsiAnchor$HardReference
- com.intellij.psi.PsiAnchor
- <init>(com.intellij.psi.PsiElement):V
- equals(java.lang.Object):Z
- getEndOffset():I
- getFile():com.intellij.psi.PsiFile
- getStartOffset():I
- hashCode():I
- retrieve():com.intellij.psi.PsiElement
- retrieveOrThrow():com.intellij.psi.PsiElement
f:com.intellij.psi.PsiAnchor$StubIndexReference
- com.intellij.psi.PsiAnchor
- diagnoseNull():java.lang.String
- equals(java.lang.Object):Z
- getEndOffset():I
- getFile():com.intellij.psi.PsiFile
- getProject():com.intellij.openapi.project.Project
- getStartOffset():I
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- hashCode():I
- retrieve():com.intellij.psi.PsiElement
f:com.intellij.psi.ReferenceProviderType
- sf:EP_NAME:java.lang.String
- <init>(java.lang.String):V
- getProvider():com.intellij.psi.PsiReferenceProvider
c:com.intellij.psi.SingleRootFileViewProvider
- com.intellij.psi.AbstractFileViewProvider
- com.intellij.psi.FileViewProvider
- <init>(com.intellij.psi.PsiManager,com.intellij.openapi.vfs.VirtualFile):V
- <init>(com.intellij.psi.PsiManager,com.intellij.openapi.vfs.VirtualFile,Z):V
- p:<init>(com.intellij.psi.PsiManager,com.intellij.openapi.vfs.VirtualFile,Z,com.intellij.lang.Language):V
- <init>(com.intellij.psi.PsiManager,com.intellij.openapi.vfs.VirtualFile,Z,com.intellij.openapi.fileTypes.FileType):V
- createCopy(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.SingleRootFileViewProvider
- s:doNotCheckFileSizeLimit(com.intellij.openapi.vfs.VirtualFile):V
- s:fileSizeIsGreaterThan(com.intellij.openapi.vfs.VirtualFile,J):Z
- findElementAt(I):com.intellij.psi.PsiElement
- findElementAt(I,java.lang.Class):com.intellij.psi.PsiElement
- findReferenceAt(I):com.intellij.psi.PsiReference
- f:forceCachedPsi(com.intellij.psi.PsiFile):V
- getAllFiles():java.util.List
- getBaseLanguage():com.intellij.lang.Language
- f:getCachedPsi(com.intellij.lang.Language):com.intellij.psi.PsiFile
- f:getCachedPsiFiles():java.util.List
- f:getKnownTreeRoots():java.util.List
- getLanguages():java.util.Set
- p:getPsiInner(com.intellij.lang.Language):com.intellij.psi.PsiFile
- s:isTooLargeForContentLoading(com.intellij.openapi.vfs.VirtualFile):Z
- s:isTooLargeForContentLoading(com.intellij.openapi.vfs.VirtualFile,java.lang.Long):Z
- s:isTooLargeForIntelligence(com.intellij.openapi.vfs.VirtualFile):Z
- s:isTooLargeForIntelligence(com.intellij.openapi.vfs.VirtualFile,java.lang.Long):Z
f:com.intellij.psi.css.MinifiedFilesUtil
- s:isMinified(java.lang.CharSequence,com.intellij.lang.ParserDefinition):Z
- s:isMinified(java.lang.CharSequence,com.intellij.lang.ParserDefinition,com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet):Z
- s:isMinified(java.lang.CharSequence,com.intellij.lang.ParserDefinition,com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet):Z
c:com.intellij.psi.filters.AndFilter
- com.intellij.psi.filters.ElementFilter
- <init>(com.intellij.psi.filters.ElementFilter,com.intellij.psi.filters.ElementFilter):V
- <init>(com.intellij.psi.filters.ElementFilter[]):V
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
- isClassAcceptable(java.lang.Class):Z
c:com.intellij.psi.filters.ClassFilter
- com.intellij.psi.filters.ElementFilter
- <init>(java.lang.Class):V
- <init>(java.lang.Class,Z):V
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
- isClassAcceptable(java.lang.Class):Z
c:com.intellij.psi.filters.ContentFilter
- com.intellij.psi.filters.position.PositionElementFilter
- <init>(com.intellij.psi.filters.ElementFilter):V
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
c:com.intellij.psi.filters.NotFilter
- com.intellij.psi.filters.ElementFilter
- <init>(com.intellij.psi.filters.ElementFilter):V
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
- isClassAcceptable(java.lang.Class):Z
c:com.intellij.psi.filters.OrFilter
- com.intellij.psi.filters.ElementFilter
- <init>(com.intellij.psi.filters.ElementFilter[]):V
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
- isClassAcceptable(java.lang.Class):Z
a:com.intellij.psi.filters.position.PositionElementFilter
- com.intellij.psi.filters.ElementFilter
- <init>():V
- getFilter():com.intellij.psi.filters.ElementFilter
- isClassAcceptable(java.lang.Class):Z
- setFilter(com.intellij.psi.filters.ElementFilter):V
a:com.intellij.psi.impl.AbstractModificationTracker
- com.intellij.psi.impl.PsiTreeChangePreprocessor
- <init>(com.intellij.psi.impl.PsiManagerImpl):V
- getPsiManager():com.intellij.psi.impl.PsiManagerImpl
- p:initTracker():V
- pa:isInsideCodeBlock(com.intellij.psi.PsiElement):Z
- p:processOutOfCodeBlockModification(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- treeChanged(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
a:com.intellij.psi.impl.AbstractPsiCachedValue
- com.intellij.psi.util.CachedValue
- com.intellij.util.CachedValueBase
- pf:doCompute(java.lang.Object):com.intellij.psi.util.CachedValueProvider$Result
- getValue():java.lang.Object
- f:getValueProvider():com.intellij.psi.util.CachedValueProvider
com.intellij.psi.impl.AnyPsiChangeListener
- afterPsiChanged(Z):V
- beforePsiChanged(Z):V
f:com.intellij.psi.impl.CheckUtil
- s:checkDelete(com.intellij.openapi.vfs.VirtualFile):V
- s:checkWritable(com.intellij.psi.PsiElement):V
f:com.intellij.psi.impl.DebugUtil
- sf:CHECK_INSIDE_ATOMIC_ACTION_ENABLED:Z
- sf:DO_EXPENSIVE_CHECKS:Z
- <init>():V
- s:checkParentChildConsistent(com.intellij.lang.ASTNode):V
- s:checkSameCharTabs(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- s:checkTreeStructure(com.intellij.lang.ASTNode):V
- s:currentStackTrace():java.lang.String
- s:diagnosePsiDocumentInconsistency(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document):java.lang.String
- s:graphToString(com.intellij.util.graph.InboundSemiGraph):java.lang.String
- s:graphToString(com.intellij.util.graph.OutboundSemiGraph):java.lang.String
- s:lightTreeToString(com.intellij.util.diff.FlyweightCapableTreeStructure,Z):java.lang.String
- s:nodeTreeAsElementTypeToString(com.intellij.lang.ASTNode,Z):java.lang.String
- s:nodeTreeToString(com.intellij.lang.ASTNode,Z):java.lang.String
- s:onInvalidated(com.intellij.lang.ASTNode):V
- s:onInvalidated(com.intellij.psi.FileViewProvider):V
- s:onInvalidated(com.intellij.psi.PsiElement):V
- s:performPsiModification(java.lang.String,com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- s:performPsiModification(java.lang.String,com.intellij.util.ThrowableRunnable):V
- s:psiToBuffer(java.lang.Appendable,com.intellij.psi.PsiElement,I,Z,Z,Z,Z):V
- s:psiToString(com.intellij.psi.PsiElement,Z):java.lang.String
- s:psiToString(com.intellij.psi.PsiElement,Z,Z):java.lang.String
- s:psiToString(com.intellij.psi.PsiElement,Z,Z,com.intellij.util.PairConsumer):java.lang.String
- s:psiToString(com.intellij.psi.PsiElement,Z,Z,Z,com.intellij.util.PairConsumer):java.lang.String
- s:psiToStringIgnoringNonCode(com.intellij.psi.PsiElement):java.lang.String
- s:psiTreeToString(com.intellij.psi.PsiElement,Z):java.lang.String
- s:revalidateNode(com.intellij.lang.ASTNode):V
- s:runWithCheckInternalInvariantsDisabled(com.intellij.util.ThrowableRunnable):V
- s:runWithCheckInternalInvariantsEnabled(com.intellij.util.ThrowableRunnable):V
- s:sleep(J):V
- s:stubTreeToBuffer(com.intellij.psi.stubs.Stub,java.lang.Appendable,I):V
- s:stubTreeToString(com.intellij.psi.stubs.Stub):java.lang.String
- s:treeToBuffer(java.lang.Appendable,com.intellij.lang.ASTNode,I,Z,Z,Z,Z,Z):V
- s:treeToString(com.intellij.lang.ASTNode,Z):java.lang.String
- s:treeToString(com.intellij.lang.ASTNode,Z,Z):java.lang.String
c:com.intellij.psi.impl.DebugUtil$IncorrectTreeStructureException
- java.lang.RuntimeException
- getElement():com.intellij.lang.ASTNode
a:com.intellij.psi.impl.ElementBase
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.util.Iconable
- sf:FLAGS_LOCKED:I
- <init>():V
- s:buildRowIcon(javax.swing.Icon,javax.swing.Icon):com.intellij.ui.icons.RowIcon
- p:computeBaseIcon(I):javax.swing.Icon
- p:getAdjustedBaseIcon(javax.swing.Icon,I):javax.swing.Icon
- p:getBaseIcon():javax.swing.Icon
- p:getElementIcon(I):javax.swing.Icon
- getIcon(I):javax.swing.Icon
- s:iconWithVisibilityIfNeeded(I,javax.swing.Icon,javax.swing.Icon):javax.swing.Icon
- s:isNativeFileType(com.intellij.openapi.fileTypes.FileType):Z
- p:isVisibilitySupported():Z
- s:transformFlags(com.intellij.psi.PsiElement,I):I
a:com.intellij.psi.impl.FakePsiElement
- com.intellij.psi.impl.PsiElementBase
- com.intellij.navigation.ItemPresentation
- com.intellij.psi.PsiNamedElement
- <init>():V
- findElementAt(I):com.intellij.psi.PsiElement
- getChildren():com.intellij.psi.PsiElement[]
- pf:getElementIcon(I):javax.swing.Icon
- getFirstChild():com.intellij.psi.PsiElement
- f:getIcon(I):javax.swing.Icon
- getIcon(Z):javax.swing.Icon
- getLanguage():com.intellij.lang.Language
- getLastChild():com.intellij.psi.PsiElement
- getManager():com.intellij.psi.PsiManager
- getNextSibling():com.intellij.psi.PsiElement
- getNode():com.intellij.lang.ASTNode
- getPresentableText():java.lang.String
- getPresentation():com.intellij.navigation.ItemPresentation
- getPrevSibling():com.intellij.psi.PsiElement
- getStartOffsetInParent():I
- getText():java.lang.String
- getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- isPhysical():Z
- setName(java.lang.String):com.intellij.psi.PsiElement
- textContains(C):Z
- textToCharArray():C[]
com.intellij.psi.impl.FreeThreadedFileViewProvider
c:com.intellij.psi.impl.GeneratedMarkerVisitor
- com.intellij.psi.impl.source.tree.RecursiveTreeElementWalkingVisitor
- <init>():V
- s:markGenerated(com.intellij.psi.PsiElement):V
- p:visitNode(com.intellij.psi.impl.source.tree.TreeElement):V
c:com.intellij.psi.impl.PomTargetPsiElementImpl
- com.intellij.psi.impl.RenameableFakePsiElement
- com.intellij.pom.PomTargetPsiElement
- <init>(com.intellij.openapi.project.Project,com.intellij.pom.PomTarget):V
- <init>(com.intellij.psi.PsiTarget):V
- canNavigate():Z
- canNavigateToSource():Z
- equals(java.lang.Object):Z
- getContainingFile():com.intellij.psi.PsiFile
- getContext():com.intellij.psi.PsiElement
- getIcon():javax.swing.Icon
- getLanguage():com.intellij.lang.Language
- getLocationString():java.lang.String
- getName():java.lang.String
- getNavigationElement():com.intellij.psi.PsiElement
- getParent():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getTarget():com.intellij.pom.PomTarget
- getTypeName():java.lang.String
- hashCode():I
- isEquivalentTo(com.intellij.psi.PsiElement):Z
- isValid():Z
- isWritable():Z
- navigate(Z):V
- setName(java.lang.String):com.intellij.psi.PsiElement
c:com.intellij.psi.impl.PsiCachedValueImpl
- com.intellij.psi.util.CachedValue
- com.intellij.util.CachedValueBase
- <init>(com.intellij.psi.PsiManager,com.intellij.psi.util.CachedValueProvider):V
- pf:doCompute(java.lang.Object):com.intellij.psi.util.CachedValueProvider$Result
- p:getRawData():com.intellij.util.CachedValueBase$Data
- getValue():java.lang.Object
- f:getValueProvider():com.intellij.psi.util.CachedValueProvider
- p:isTrackValue():Z
- p:setData(com.intellij.util.CachedValueBase$Data):V
f:com.intellij.psi.impl.PsiCachedValueImpl$Direct
- com.intellij.psi.impl.AbstractPsiCachedValue
- com.intellij.psi.util.CachedValue
- <init>(com.intellij.psi.PsiManager,com.intellij.psi.util.CachedValueProvider):V
- getValue():java.lang.Object
f:com.intellij.psi.impl.PsiCachedValueImpl$DirectTracked
- com.intellij.psi.impl.AbstractPsiCachedValue
- com.intellij.psi.util.CachedValue
- <init>(com.intellij.psi.PsiManager,com.intellij.psi.util.CachedValueProvider):V
- getValue():java.lang.Object
f:com.intellij.psi.impl.PsiCachedValueImpl$Soft
- com.intellij.psi.impl.AbstractPsiCachedValue
- com.intellij.psi.util.CachedValue
- <init>(com.intellij.psi.PsiManager,com.intellij.psi.util.CachedValueProvider):V
f:com.intellij.psi.impl.PsiCachedValueImpl$SoftTracked
- com.intellij.psi.impl.AbstractPsiCachedValue
- com.intellij.psi.util.CachedValue
- <init>(com.intellij.psi.PsiManager,com.intellij.psi.util.CachedValueProvider):V
a:com.intellij.psi.impl.PsiDocumentManagerBase
- com.intellij.psi.PsiDocumentManager
- com.intellij.openapi.Disposable
- com.intellij.openapi.editor.event.DocumentListener
- p:<init>(com.intellij.openapi.project.Project):V
- associatePsi(com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile):V
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- p:beforeDocumentChangeOnUnlockedDocument(com.intellij.psi.FileViewProvider):V
- bulkUpdateFinished(com.intellij.openapi.editor.Document):V
- bulkUpdateStarting(com.intellij.openapi.editor.Document):V
- cancelAndRunWhenAllCommitted(java.lang.Object,java.lang.Runnable):Z
- s:checkConsistency(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document):Z
- clearUncommittedDocuments():V
- commitAllDocuments():V
- commitAllDocumentsUnderProgress():Z
- commitAndRunReadAction(com.intellij.openapi.util.Computable):java.lang.Object
- commitAndRunReadAction(java.lang.Runnable):V
- commitDocument(com.intellij.openapi.editor.Document):V
- disableBackgroundCommit(com.intellij.openapi.Disposable):V
- dispose():V
- doPostponedOperationsAndUnblockDocument(com.intellij.openapi.editor.Document):V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- p:finishCommitInWriteAction(com.intellij.openapi.editor.Document,java.util.List,java.util.List,Z):Z
- p:freezeWindow(com.intellij.injected.editor.DocumentWindow):com.intellij.injected.editor.DocumentWindow
- getCachedDocument(com.intellij.psi.PsiFile):com.intellij.openapi.editor.Document
- f:getCachedPsiFile(com.intellij.openapi.editor.Document):com.intellij.psi.PsiFile
- getDocument(com.intellij.psi.PsiFile):com.intellij.openapi.editor.Document
- getEventsSinceCommit(com.intellij.openapi.editor.Document):java.util.List
- getLastCommittedDocument(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.ex.DocumentEx
- getLastCommittedDocument(com.intellij.psi.PsiFile):com.intellij.openapi.editor.Document
- getLastCommittedStamp(com.intellij.openapi.editor.Document):J
- getLastCommittedText(com.intellij.openapi.editor.Document):java.lang.CharSequence
- getPsiFile(com.intellij.openapi.editor.Document):com.intellij.psi.PsiFile
- getSynchronizer():com.intellij.psi.impl.PsiToDocumentSynchronizer
- getUncommittedDocuments():com.intellij.openapi.editor.Document[]
- hasEventSystemEnabledUncommittedDocuments():Z
- hasUncommitedDocuments():Z
- isCommitInProgress():Z
- isCommitted(com.intellij.openapi.editor.Document):Z
- isDefaultProject():Z
- isDocumentBlockedByPsi(com.intellij.openapi.editor.Document):Z
- isUncommited(com.intellij.openapi.editor.Document):Z
- performForCommittedDocument(com.intellij.openapi.editor.Document,java.lang.Runnable):V
- performLaterWhenAllCommitted(com.intellij.openapi.application.ModalityState,java.lang.Runnable):V
- performLaterWhenAllCommitted(java.lang.Runnable):V
- performWhenAllCommitted(java.lang.Runnable):Z
- reparseFileFromText(com.intellij.psi.impl.source.PsiFileImpl):V
- reparseFiles(java.util.Collection,Z):V
- someDocumentDebugInfo(com.intellij.openapi.editor.Document):java.lang.String
com.intellij.psi.impl.PsiDocumentTransactionListener
- sf:TOPIC:com.intellij.util.messages.Topic
- transactionCompleted(com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile):V
- a:transactionStarted(com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile):V
a:com.intellij.psi.impl.PsiElementBase
- com.intellij.psi.impl.ElementBase
- com.intellij.psi.NavigatablePsiElement
- java.lang.Cloneable
- <init>():V
- accept(com.intellij.psi.PsiElementVisitor):V
- acceptChildren(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- canNavigate():Z
- canNavigateToSource():Z
- checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- copy():com.intellij.psi.PsiElement
- delete():V
- deleteChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- p:findChildByClass(java.lang.Class):java.lang.Object
- p:findChildrenByClass(java.lang.Class):java.lang.Object[]
- p:findNotNullChildByClass(java.lang.Class):java.lang.Object
- findReferenceAt(I):com.intellij.psi.PsiReference
- getContainingFile():com.intellij.psi.PsiFile
- getContext():com.intellij.psi.PsiElement
- getFirstChild():com.intellij.psi.PsiElement
- getLastChild():com.intellij.psi.PsiElement
- getManager():com.intellij.psi.PsiManager
- getName():java.lang.String
- getNavigationElement():com.intellij.psi.PsiElement
- getNextSibling():com.intellij.psi.PsiElement
- getOriginalElement():com.intellij.psi.PsiElement
- getPresentation():com.intellij.navigation.ItemPresentation
- getPrevSibling():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getReference():com.intellij.psi.PsiReference
- getReferences():com.intellij.psi.PsiReference[]
- getResolveScope():com.intellij.psi.search.GlobalSearchScope
- getUseScope():com.intellij.psi.search.SearchScope
- isEquivalentTo(com.intellij.psi.PsiElement):Z
- isPhysical():Z
- isValid():Z
- isWritable():Z
- navigate(Z):V
- navigationRequest():com.intellij.platform.backend.navigation.NavigationRequest
- p:notNullChild(java.lang.Object):java.lang.Object
- processDeclarations(com.intellij.psi.scope.PsiScopeProcessor,com.intellij.psi.ResolveState,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- textContains(C):Z
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
com.intellij.psi.impl.PsiFileEx
- com.intellij.psi.PsiFile
- sf:BATCH_REFERENCE_PROCESSING:com.intellij.openapi.util.Key
- a:isContentsLoaded():Z
- a:markInvalidated():V
- a:onContentReload():V
c:com.intellij.psi.impl.PsiFileFactoryImpl
- com.intellij.psi.PsiFileFactory
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.psi.PsiManager):V
- createElementFromText(java.lang.String,com.intellij.lang.Language,com.intellij.psi.tree.IElementType,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- createFileFromText(com.intellij.openapi.fileTypes.FileType,java.lang.String,java.lang.CharSequence,I,I):com.intellij.psi.PsiFile
- createFileFromText(java.lang.CharSequence,com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- createFileFromText(java.lang.String,com.intellij.lang.Language,java.lang.CharSequence):com.intellij.psi.PsiFile
- createFileFromText(java.lang.String,com.intellij.lang.Language,java.lang.CharSequence,Z,Z):com.intellij.psi.PsiFile
- createFileFromText(java.lang.String,com.intellij.lang.Language,java.lang.CharSequence,Z,Z,Z):com.intellij.psi.PsiFile
- createFileFromText(java.lang.String,com.intellij.lang.Language,java.lang.CharSequence,Z,Z,Z,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFile
- createFileFromText(java.lang.String,com.intellij.openapi.fileTypes.FileType,com.intellij.lang.Language,com.intellij.lang.Language,java.lang.CharSequence,J,Z,Z):com.intellij.psi.PsiFile
- createFileFromText(java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence):com.intellij.psi.PsiFile
- createFileFromText(java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence,J,Z):com.intellij.psi.PsiFile
- createFileFromText(java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence,J,Z,Z):com.intellij.psi.PsiFile
- createFileFromText(java.lang.String,java.lang.String):com.intellij.psi.PsiFile
- s:markGenerated(com.intellij.psi.PsiElement):V
- trySetupPsiForFile(com.intellij.testFramework.LightVirtualFile,com.intellij.lang.Language,Z,Z):com.intellij.psi.PsiFile
a:com.intellij.psi.impl.PsiManagerEx
- com.intellij.psi.PsiManager
- <init>():V
- a:afterChange(Z):V
- a:beforeChange(Z):V
- a:beforeChildAddition(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- a:beforeChildRemoval(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- a:beforeChildReplacement(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- a:getFileManager():com.intellij.psi.impl.file.impl.FileManager
- s:getInstanceEx(com.intellij.openapi.project.Project):com.intellij.psi.impl.PsiManagerEx
- a:isAssertOnFileLoading(com.intellij.openapi.vfs.VirtualFile):Z
- a:isBatchFilesProcessingMode():Z
- a:setAssertOnFileLoadingFilter(com.intellij.openapi.vfs.VirtualFileFilter,com.intellij.openapi.Disposable):V
f:com.intellij.psi.impl.PsiManagerImpl
- com.intellij.psi.impl.PsiManagerEx
- com.intellij.openapi.Disposable
- sf:ANY_PSI_CHANGE_TOPIC:com.intellij.util.messages.Topic
- <init>(com.intellij.openapi.project.Project):V
- addPsiTreeChangeListener(com.intellij.psi.PsiTreeChangeListener):V
- addPsiTreeChangeListener(com.intellij.psi.PsiTreeChangeListener,com.intellij.openapi.Disposable):V
- addTreeChangePreprocessor(com.intellij.psi.impl.PsiTreeChangePreprocessor):V
- afterChange(Z):V
- areElementsEquivalent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- beforeChange(Z):V
- beforeChildAddition(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- beforeChildMovement(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- beforeChildRemoval(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- beforeChildReplacement(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- beforeChildrenChange(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- beforePropertyChange(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- childAdded(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- childMoved(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- childRemoved(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- childReplaced(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- childrenChanged(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- cleanupForNextTest():V
- dispose():V
- dropPsiCaches():V
- dropResolveCacheRegularly(com.intellij.openapi.progress.ProgressIndicator):V
- dropResolveCaches():V
- findCachedViewProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.FileViewProvider
- findDirectory(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiDirectory
- findFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFile
- findViewProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.FileViewProvider
- finishBatchFilesProcessingMode():V
- getFileManager():com.intellij.psi.impl.file.impl.FileManager
- getModificationTracker():com.intellij.psi.util.PsiModificationTracker
- getProject():com.intellij.openapi.project.Project
- isAssertOnFileLoading(com.intellij.openapi.vfs.VirtualFile):Z
- isBatchFilesProcessingMode():Z
- isDisposed():Z
- isInProject(com.intellij.psi.PsiElement):Z
- propertyChanged(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- reloadFromDisk(com.intellij.psi.PsiFile):V
- removePsiTreeChangeListener(com.intellij.psi.PsiTreeChangeListener):V
- removeTreeChangePreprocessor(com.intellij.psi.impl.PsiTreeChangePreprocessor):V
- runInBatchFilesMode(com.intellij.openapi.util.Computable):java.lang.Object
- setAssertOnFileLoadingFilter(com.intellij.openapi.vfs.VirtualFileFilter,com.intellij.openapi.Disposable):V
- startBatchFilesProcessingMode():V
f:com.intellij.psi.impl.PsiModificationTrackerImpl
- com.intellij.psi.impl.PsiTreeChangePreprocessor
- com.intellij.psi.util.PsiModificationTracker
- <init>(com.intellij.openapi.project.Project):V
- s:canAffectPsi(com.intellij.psi.impl.PsiTreeChangeEventImpl):Z
- forLanguage(com.intellij.lang.Language):com.intellij.openapi.util.ModificationTracker
- forLanguages(java.util.function.Predicate):com.intellij.openapi.util.ModificationTracker
- getJavaStructureModificationTracker():com.intellij.openapi.util.ModificationTracker
- getModificationCount():J
- incCounter():V
- incOutOfCodeBlockModificationCounter():V
- treeChanged(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
f:com.intellij.psi.impl.PsiParserFacadeImpl
- com.intellij.psi.PsiParserFacade
- <init>(com.intellij.openapi.project.Project):V
- createBlockCommentFromText(com.intellij.lang.Language,java.lang.String):com.intellij.psi.PsiComment
- createLineCommentFromText(com.intellij.lang.Language,java.lang.String):com.intellij.psi.PsiComment
- createLineCommentFromText(com.intellij.openapi.fileTypes.LanguageFileType,java.lang.String):com.intellij.psi.PsiComment
- createLineOrBlockCommentFromText(com.intellij.lang.Language,java.lang.String):com.intellij.psi.PsiComment
- createWhiteSpaceFromText(java.lang.String):com.intellij.psi.PsiElement
c:com.intellij.psi.impl.PsiToDocumentSynchronizer
- commitTransaction(com.intellij.openapi.editor.Document):Z
- getTransaction(com.intellij.openapi.editor.Document):com.intellij.psi.impl.PsiToDocumentSynchronizer$DocumentChangeTransaction
- insertString(com.intellij.openapi.editor.Document,I,java.lang.String):V
- isDocumentAffectedByTransactions(com.intellij.openapi.editor.Document):Z
- isIgnorePsiEvents():Z
- isInSynchronization(com.intellij.openapi.editor.Document):Z
- s:performAtomically(com.intellij.psi.PsiFile,java.lang.Runnable):V
- replaceString(com.intellij.openapi.editor.Document,I,I,java.lang.String):V
- setIgnorePsiEvents(Z):V
- startTransaction(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile):V
- toProcessPsiEvent():Z
c:com.intellij.psi.impl.PsiToDocumentSynchronizer$DocumentChangeTransaction
- getAffectedFragments():java.util.Map
f:com.intellij.psi.impl.PsiTreeChangeEventImpl
- com.intellij.psi.PsiTreeChangeEvent
- <init>(com.intellij.psi.PsiManager):V
- getCode():com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- getOffset():I
- getOldLength():I
- isGenericChange():Z
- setChild(com.intellij.psi.PsiElement):V
- setCode(com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType):V
- setElement(com.intellij.psi.PsiElement):V
- setFile(com.intellij.psi.PsiFile):V
- setGenericChange(Z):V
- setNewChild(com.intellij.psi.PsiElement):V
- setNewParent(com.intellij.psi.PsiElement):V
- setNewValue(java.lang.Object):V
- setOffset(I):V
- setOldChild(com.intellij.psi.PsiElement):V
- setOldLength(I):V
- setOldParent(com.intellij.psi.PsiElement):V
- setOldValue(java.lang.Object):V
- setParent(com.intellij.psi.PsiElement):V
- setPropertyName(java.lang.String):V
e:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- java.lang.Enum
- sf:BEFORE_CHILDREN_CHANGE:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:BEFORE_CHILD_ADDITION:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:BEFORE_CHILD_MOVEMENT:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:BEFORE_CHILD_REMOVAL:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:BEFORE_CHILD_REPLACEMENT:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:BEFORE_PROPERTY_CHANGE:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:CHILDREN_CHANGED:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:CHILD_ADDED:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:CHILD_MOVED:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:CHILD_REMOVED:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:CHILD_REPLACED:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- sf:PROPERTY_CHANGED:com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- s:valueOf(java.lang.String):com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType
- s:values():com.intellij.psi.impl.PsiTreeChangeEventImpl$PsiEventType[]
com.intellij.psi.impl.PsiTreeChangePreprocessor
- sf:EP:com.intellij.openapi.extensions.ProjectExtensionPointName
- a:treeChanged(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
a:com.intellij.psi.impl.RenameableFakePsiElement
- com.intellij.psi.impl.FakePsiElement
- com.intellij.psi.meta.PsiMetaOwner
- com.intellij.psi.meta.PsiPresentableMetaData
- p:<init>(com.intellij.psi.PsiElement):V
- getContainingFile():com.intellij.psi.PsiFile
- getDeclaration():com.intellij.psi.PsiElement
- f:getIcon(Z):javax.swing.Icon
- getLanguage():com.intellij.lang.Language
- getManager():com.intellij.psi.PsiManager
- getMetaData():com.intellij.psi.meta.PsiMetaData
- a:getName():java.lang.String
- getName(com.intellij.psi.PsiElement):java.lang.String
- getParent():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getTextRange():com.intellij.openapi.util.TextRange
- init(com.intellij.psi.PsiElement):V
a:com.intellij.psi.impl.ResolveScopeManager
- <init>():V
- a:getDefaultResolveScope(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.search.GlobalSearchScope
- s:getElementResolveScope(com.intellij.psi.PsiElement):com.intellij.psi.search.GlobalSearchScope
- s:getElementUseScope(com.intellij.psi.PsiElement):com.intellij.psi.search.GlobalSearchScope
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.impl.ResolveScopeManager
- a:getResolveScope(com.intellij.psi.PsiElement):com.intellij.psi.search.GlobalSearchScope
- a:getUseScope(com.intellij.psi.PsiElement):com.intellij.psi.search.GlobalSearchScope
f:com.intellij.psi.impl.SharedPsiElementImplUtil
- s:findReferenceAt(com.intellij.psi.PsiElement,I):com.intellij.psi.PsiReference
- s:findReferenceAt(com.intellij.psi.PsiElement,I,com.intellij.lang.Language):com.intellij.psi.PsiReference
- s:getNextSibling(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getPrevSibling(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getReferences(com.intellij.psi.PsiElement):com.intellij.psi.PsiReference[]
a:com.intellij.psi.impl.SyntheticFileSystemItem
- com.intellij.psi.impl.PsiElementBase
- com.intellij.psi.PsiFileSystemItem
- pf:myManager:com.intellij.psi.PsiManager
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project):V
- accept(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- checkSetName(java.lang.String):V
- copy():com.intellij.psi.PsiElement
- delete():V
- findElementAt(I):com.intellij.psi.PsiElement
- getChildren():com.intellij.psi.PsiElement[]
- getContainingFile():com.intellij.psi.PsiFile
- getLanguage():com.intellij.lang.Language
- getManager():com.intellij.psi.PsiManager
- a:getName():java.lang.String
- getNode():com.intellij.lang.ASTNode
- getStartOffsetInParent():I
- getText():java.lang.String
- getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- isDirectory():Z
- isPhysical():Z
- isValid():Z
- isWritable():Z
- ps:processFileSystemItem(com.intellij.psi.search.PsiElementProcessor,com.intellij.psi.PsiFileSystemItem):Z
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- setName(java.lang.String):com.intellij.psi.PsiElement
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
- textToCharArray():C[]
f:com.intellij.psi.impl.cache.CacheUtil
- <init>():V
- s:isInComments(com.intellij.psi.tree.IElementType):Z
com.intellij.psi.impl.cache.CommentTokenSetProvider
- sf:EXTENSION:com.intellij.lang.LanguageExtension
- a:isInComments(com.intellij.psi.tree.IElementType):Z
c:com.intellij.psi.impl.file.PsiBinaryFileImpl
- com.intellij.psi.impl.PsiElementBase
- com.intellij.openapi.ui.Queryable
- com.intellij.psi.PsiBinaryFile
- com.intellij.psi.impl.PsiFileEx
- java.lang.Cloneable
- <init>(com.intellij.psi.impl.PsiManagerImpl,com.intellij.psi.FileViewProvider):V
- accept(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- checkSetName(java.lang.String):V
- copy():com.intellij.psi.PsiElement
- delete():V
- findElementAt(I):com.intellij.psi.PsiElement
- getChildren():com.intellij.psi.PsiElement[]
- getContainingDirectory():com.intellij.psi.PsiDirectory
- getContainingFile():com.intellij.psi.PsiFile
- getContext():com.intellij.psi.PsiElement
- getFileType():com.intellij.openapi.fileTypes.FileType
- getLanguage():com.intellij.lang.Language
- getManager():com.intellij.psi.PsiManager
- getModificationStamp():J
- getName():java.lang.String
- getNode():com.intellij.lang.FileASTNode
- getOriginalFile():com.intellij.psi.PsiFile
- getParent():com.intellij.psi.PsiDirectory
- getParentDirectory():com.intellij.psi.PsiDirectory
- getPsiRoots():com.intellij.psi.PsiFile[]
- getStartOffsetInParent():I
- getText():java.lang.String
- getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- getViewProvider():com.intellij.psi.FileViewProvider
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- isContentsLoaded():Z
- isDirectory():Z
- isPhysical():Z
- isValid():Z
- isWritable():Z
- markInvalidated():V
- onContentReload():V
- processChildren(com.intellij.psi.search.PsiElementProcessor):Z
- putInfo(java.util.Map):V
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- setName(java.lang.String):com.intellij.psi.PsiElement
- subtreeChanged():V
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
- textToCharArray():C[]
a:com.intellij.psi.impl.file.PsiDirectoryFactory
- <init>():V
- a:createDirectory(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiDirectory
- a:getDirectoryContainer(com.intellij.psi.PsiDirectory):com.intellij.psi.PsiDirectoryContainer
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.impl.file.PsiDirectoryFactory
- a:getQualifiedName(com.intellij.psi.PsiDirectory,Z):java.lang.String
- a:isPackage(com.intellij.psi.PsiDirectory):Z
- a:isValidPackageName(java.lang.String):Z
c:com.intellij.psi.impl.file.PsiDirectoryImpl
- com.intellij.psi.impl.PsiElementBase
- com.intellij.openapi.ui.Queryable
- com.intellij.psi.PsiDirectory
- <init>(com.intellij.psi.impl.PsiManagerImpl,com.intellij.openapi.vfs.VirtualFile):V
- accept(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- canNavigateToSource():Z
- checkAdd(com.intellij.psi.PsiElement):V
- checkCreateFile(java.lang.String):V
- checkCreateSubdirectory(java.lang.String):V
- checkDelete():V
- checkSetName(java.lang.String):V
- copy():com.intellij.psi.PsiElement
- copyFileFrom(java.lang.String,com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- createFile(java.lang.String):com.intellij.psi.PsiFile
- createSubdirectory(java.lang.String):com.intellij.psi.PsiDirectory
- delete():V
- equals(java.lang.Object):Z
- executeWithUpdatingAddedFilesDisabled(com.intellij.util.ThrowableRunnable):V
- findElementAt(I):com.intellij.psi.PsiElement
- findFile(java.lang.String):com.intellij.psi.PsiFile
- findSubdirectory(java.lang.String):com.intellij.psi.PsiDirectory
- getChildren():com.intellij.psi.PsiElement[]
- getContainingFile():com.intellij.psi.PsiFile
- getFiles():com.intellij.psi.PsiFile[]
- getFiles(com.intellij.psi.search.GlobalSearchScope):com.intellij.psi.PsiFile[]
- getLanguage():com.intellij.lang.Language
- getManager():com.intellij.psi.PsiManager
- getName():java.lang.String
- getNode():com.intellij.lang.ASTNode
- getParent():com.intellij.psi.PsiDirectory
- getParentDirectory():com.intellij.psi.PsiDirectory
- getPresentation():com.intellij.navigation.ItemPresentation
- getStartOffsetInParent():I
- getSubdirectories():com.intellij.psi.PsiDirectory[]
- getText():java.lang.String
- getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- hashCode():I
- isDirectory():Z
- isPhysical():Z
- isValid():Z
- f:isWritable():Z
- navigate(Z):V
- navigationRequest():com.intellij.platform.backend.navigation.NavigationRequest
- processChildren(com.intellij.psi.search.PsiElementProcessor):Z
- putInfo(java.util.Map):V
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- setName(java.lang.String):com.intellij.psi.PsiElement
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
- textToCharArray():C[]
f:com.intellij.psi.impl.file.PsiFileImplUtil
- s:canDeleteNonPhysicalFile(com.intellij.psi.PsiFile):Z
- s:checkSetName(com.intellij.psi.PsiFile,java.lang.String):V
- s:doDelete(com.intellij.psi.PsiFile):V
- s:setName(com.intellij.psi.PsiFile,java.lang.String):com.intellij.psi.PsiFile
a:com.intellij.psi.impl.file.PsiPackageBase
- com.intellij.psi.impl.PsiElementBase
- com.intellij.openapi.ui.Queryable
- com.intellij.psi.PsiDirectoryContainer
- <init>(com.intellij.psi.PsiManager,java.lang.String):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- canNavigate():Z
- canNavigateToSource():Z
- checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- checkSetName(java.lang.String):V
- copy():com.intellij.psi.PsiElement
- delete():V
- equals(java.lang.Object):Z
- findElementAt(I):com.intellij.psi.PsiElement
- pa:findPackage(java.lang.String):com.intellij.psi.impl.file.PsiPackageBase
- pa:getAllDirectories(com.intellij.psi.search.GlobalSearchScope):java.util.Collection
- getChildren():com.intellij.psi.PsiElement[]
- getContainingFile():com.intellij.psi.PsiFile
- getDirectories():com.intellij.psi.PsiDirectory[]
- getDirectories(com.intellij.psi.search.GlobalSearchScope):com.intellij.psi.PsiDirectory[]
- getElementIcon(I):com.intellij.ui.icons.RowIcon
- getManager():com.intellij.psi.PsiManager
- getName():java.lang.String
- getNode():com.intellij.lang.ASTNode
- getParent():com.intellij.psi.PsiElement
- getParentPackage():com.intellij.psi.impl.file.PsiPackageBase
- getQualifiedName():java.lang.String
- getStartOffsetInParent():I
- getText():java.lang.String
- getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- hashCode():I
- isPhysical():Z
- isWritable():Z
- putInfo(java.util.Map):V
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- setName(java.lang.String):com.intellij.psi.PsiElement
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
- textToCharArray():C[]
a:com.intellij.psi.impl.file.UpdateAddedFileProcessor
- <init>():V
- a:canProcessElement(com.intellij.psi.PsiFile):Z
- s:forElement(com.intellij.psi.PsiFile):com.intellij.psi.impl.file.UpdateAddedFileProcessor
- a:update(com.intellij.psi.PsiFile,com.intellij.psi.PsiFile):V
- s:updateAddedFiles(java.lang.Iterable,java.lang.Iterable):V
com.intellij.psi.impl.file.impl.FileManager
- a:cleanupForNextTest():V
- a:createFileViewProvider(com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.psi.FileViewProvider
- a:findCachedViewProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.FileViewProvider
- a:findDirectory(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiDirectory
- a:findFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFile
- a:findViewProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.FileViewProvider
- a:getAllCachedFiles():java.util.List
- a:getCachedPsiFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFile
- a:reloadFromDisk(com.intellij.psi.PsiFile):V
- a:setViewProvider(com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.FileViewProvider):V
a:com.intellij.psi.impl.light.LightElement
- com.intellij.psi.impl.PsiElementBase
- pf:myManager:com.intellij.psi.PsiManager
- p:<init>(com.intellij.psi.PsiManager,com.intellij.lang.Language):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- copy():com.intellij.psi.PsiElement
- delete():V
- findElementAt(I):com.intellij.psi.PsiElement
- getChildren():com.intellij.psi.PsiElement[]
- getContainingFile():com.intellij.psi.PsiFile
- getLanguage():com.intellij.lang.Language
- getManager():com.intellij.psi.PsiManager
- getNavigationElement():com.intellij.psi.PsiElement
- getNextSibling():com.intellij.psi.PsiElement
- getNode():com.intellij.lang.ASTNode
- getParent():com.intellij.psi.PsiElement
- getPrevSibling():com.intellij.psi.PsiElement
- getStartOffsetInParent():I
- getText():java.lang.String
- f:getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- isPhysical():Z
- isValid():Z
- isWritable():Z
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- setNavigationElement(com.intellij.psi.PsiElement):V
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
- textToCharArray():C[]
- a:toString():java.lang.String
f:com.intellij.psi.impl.meta.MetaRegistry
- com.intellij.psi.meta.MetaDataRegistrar
- <init>():V
- s:getMeta(com.intellij.psi.PsiElement):com.intellij.psi.meta.PsiMetaData
- s:getMetaBase(com.intellij.psi.PsiElement):com.intellij.psi.meta.PsiMetaData
- registerMetaData(com.intellij.psi.filters.ElementFilter,java.lang.Class):V
a:com.intellij.psi.impl.smartPointers.Identikit
- <init>():V
- a:findPsiElement(com.intellij.psi.PsiFile,I,I):com.intellij.psi.PsiElement
- s:fromPsi(com.intellij.psi.PsiElement,com.intellij.lang.Language):com.intellij.psi.impl.smartPointers.Identikit$ByType
- a:getFileLanguage():com.intellij.lang.Language
- a:isForPsiFile():Z
f:com.intellij.psi.impl.smartPointers.Identikit$ByType
- com.intellij.psi.impl.smartPointers.Identikit
- equals(java.lang.Object):Z
- findInside(com.intellij.psi.PsiElement,I,I):com.intellij.psi.PsiElement
- findPsiElement(com.intellij.psi.PsiFile,I,I):com.intellij.psi.PsiElement
- getFileLanguage():com.intellij.lang.Language
- hashCode():I
- isForPsiFile():Z
a:com.intellij.psi.impl.smartPointers.SmartPointerAnchorProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getAnchor(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:restoreElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
com.intellij.psi.impl.smartPointers.SmartPointerEx
- com.intellij.psi.SmartPsiElementPointer
- a:getCachedElement():com.intellij.psi.PsiElement
f:com.intellij.psi.impl.smartPointers.SmartPointerManagerImpl
- com.intellij.psi.SmartPointerManager
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.project.Project):V
- createSmartPsiElementPointer(com.intellij.psi.PsiElement):com.intellij.psi.SmartPsiElementPointer
- createSmartPsiElementPointer(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):com.intellij.psi.SmartPsiElementPointer
- createSmartPsiElementPointer(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile,Z):com.intellij.psi.SmartPsiElementPointer
- createSmartPsiFileRangePointer(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):com.intellij.psi.SmartPsiFileRange
- createSmartPsiFileRangePointer(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange,Z):com.intellij.psi.SmartPsiFileRange
- dispose():V
- fastenBelts(com.intellij.openapi.vfs.VirtualFile):V
- getPointersNumber(com.intellij.psi.PsiFile):I
- pointToTheSameElement(com.intellij.psi.SmartPsiElementPointer,com.intellij.psi.SmartPsiElementPointer):Z
- removePointer(com.intellij.psi.SmartPsiElementPointer):V
- updatePointerTargetsAfterReparse(com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.psi.impl.source.CharTableImpl
- com.intellij.util.CharTable
- <init>():V
- doIntern(java.lang.CharSequence):java.lang.CharSequence
- s:getStaticInterned(java.lang.CharSequence):java.lang.CharSequence
- intern(java.lang.CharSequence):java.lang.CharSequence
- intern(java.lang.CharSequence,I,I):java.lang.CharSequence
c:com.intellij.psi.impl.source.DummyHolder
- com.intellij.psi.impl.source.PsiFileImpl
- pf:myContext:com.intellij.psi.PsiElement
- <init>(com.intellij.psi.PsiManager,com.intellij.lang.Language,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiManager,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiManager,com.intellij.psi.PsiElement,com.intellij.util.CharTable):V
- <init>(com.intellij.psi.PsiManager,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiManager,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.PsiElement,com.intellij.util.CharTable):V
- <init>(com.intellij.psi.PsiManager,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.PsiElement,com.intellij.util.CharTable,java.lang.Boolean,com.intellij.lang.Language):V
- <init>(com.intellij.psi.PsiManager,com.intellij.util.CharTable,com.intellij.lang.Language):V
- <init>(com.intellij.psi.PsiManager,com.intellij.util.CharTable,Z):V
- accept(com.intellij.psi.PsiElementVisitor):V
- p:clone():com.intellij.psi.impl.source.PsiFileImpl
- getContext():com.intellij.psi.PsiElement
- getFileType():com.intellij.openapi.fileTypes.FileType
- getLanguage():com.intellij.lang.Language
- getTreeElement():com.intellij.psi.impl.source.tree.FileElement
- getViewProvider():com.intellij.psi.FileViewProvider
- isValid():Z
- ps:language(com.intellij.psi.PsiElement,com.intellij.lang.Language):com.intellij.lang.Language
c:com.intellij.psi.impl.source.DummyHolderElement
- com.intellij.psi.impl.source.tree.FileElement
- <init>(java.lang.CharSequence):V
f:com.intellij.psi.impl.source.DummyHolderFactory
- s:createHolder(com.intellij.psi.PsiManager,com.intellij.lang.Language,com.intellij.psi.PsiElement):com.intellij.psi.impl.source.DummyHolder
- s:createHolder(com.intellij.psi.PsiManager,com.intellij.psi.PsiElement):com.intellij.psi.impl.source.DummyHolder
- s:createHolder(com.intellij.psi.PsiManager,com.intellij.psi.PsiElement,com.intellij.util.CharTable):com.intellij.psi.impl.source.DummyHolder
- s:createHolder(com.intellij.psi.PsiManager,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.PsiElement):com.intellij.psi.impl.source.DummyHolder
- s:createHolder(com.intellij.psi.PsiManager,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.PsiElement,com.intellij.util.CharTable):com.intellij.psi.impl.source.DummyHolder
- s:createHolder(com.intellij.psi.PsiManager,com.intellij.util.CharTable,com.intellij.lang.Language):com.intellij.psi.impl.source.DummyHolder
- s:createHolder(com.intellij.psi.PsiManager,com.intellij.util.CharTable,Z):com.intellij.psi.impl.source.DummyHolder
- s:setFactory(com.intellij.psi.impl.source.HolderFactory):V
com.intellij.psi.impl.source.HolderFactory
- a:createHolder(com.intellij.psi.PsiManager,com.intellij.lang.Language,com.intellij.psi.PsiElement):com.intellij.psi.impl.source.DummyHolder
- a:createHolder(com.intellij.psi.PsiManager,com.intellij.psi.PsiElement):com.intellij.psi.impl.source.DummyHolder
- a:createHolder(com.intellij.psi.PsiManager,com.intellij.psi.PsiElement,com.intellij.util.CharTable):com.intellij.psi.impl.source.DummyHolder
- a:createHolder(com.intellij.psi.PsiManager,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.PsiElement):com.intellij.psi.impl.source.DummyHolder
- a:createHolder(com.intellij.psi.PsiManager,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.PsiElement,com.intellij.util.CharTable):com.intellij.psi.impl.source.DummyHolder
- a:createHolder(com.intellij.psi.PsiManager,com.intellij.util.CharTable,com.intellij.lang.Language):com.intellij.psi.impl.source.DummyHolder
- a:createHolder(com.intellij.psi.PsiManager,com.intellij.util.CharTable,Z):com.intellij.psi.impl.source.DummyHolder
a:com.intellij.psi.impl.source.PsiFileImpl
- com.intellij.psi.impl.ElementBase
- com.intellij.openapi.ui.Queryable
- com.intellij.psi.impl.PsiFileEx
- com.intellij.psi.impl.source.PsiFileWithStubSupport
- java.lang.Cloneable
- sf:BUILDING_STUB:com.intellij.openapi.util.Key
- p:myContentElementType:com.intellij.psi.tree.IElementType
- pf:myManager:com.intellij.psi.impl.PsiManagerEx
- p:myOriginalFile:com.intellij.psi.PsiFile
- p:<init>(com.intellij.psi.FileViewProvider):V
- p:<init>(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.psi.FileViewProvider):V
- acceptChildren(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- p:assertReadAccessAllowed():V
- f:beforeAstChange():V
- calcStubTree():com.intellij.psi.stubs.StubTree
- f:calcTreeElement():com.intellij.psi.impl.source.tree.FileElement
- canNavigate():Z
- canNavigateToSource():Z
- f:checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- checkSetName(java.lang.String):V
- clearCaches():V
- p:clone():com.intellij.psi.impl.source.PsiFileImpl
- p:cloneImpl(com.intellij.psi.impl.source.tree.FileElement):com.intellij.psi.impl.source.PsiFileImpl
- f:copy():com.intellij.psi.PsiElement
- createContentLeafElement(java.lang.CharSequence):com.intellij.psi.impl.source.tree.TreeElement
- p:createFileElement(java.lang.CharSequence):com.intellij.psi.impl.source.tree.FileElement
- delete():V
- deleteChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- findChildByClass(java.lang.Class):java.lang.Object
- findChildrenByClass(java.lang.Class):java.lang.Object[]
- findElementAt(I):com.intellij.psi.PsiElement
- findReferenceAt(I):com.intellij.psi.PsiReference
- getChildren():com.intellij.psi.PsiElement[]
- getContainingDirectory():com.intellij.psi.PsiDirectory
- getContainingFile():com.intellij.psi.PsiFile
- getContentElementType():com.intellij.psi.tree.IElementType
- getContext():com.intellij.psi.PsiElement
- getElementTypeForStubBuilder():com.intellij.psi.tree.IStubFileElementType
- f:getFileDocument():com.intellij.openapi.editor.Document
- getFileElementType():com.intellij.psi.tree.IFileElementType
- getFirstChild():com.intellij.psi.PsiElement
- f:getGreenStub():com.intellij.psi.stubs.StubElement
- f:getGreenStubTree():com.intellij.psi.stubs.StubTree
- getLanguage():com.intellij.lang.Language
- getLastChild():com.intellij.psi.PsiElement
- f:getManager():com.intellij.psi.PsiManager
- getModificationStamp():J
- getName():java.lang.String
- getNavigationElement():com.intellij.psi.PsiElement
- getNextSibling():com.intellij.psi.PsiElement
- getNode():com.intellij.lang.FileASTNode
- getNodeIfLoaded():com.intellij.lang.FileASTNode
- getOriginalElement():com.intellij.psi.PsiElement
- getOriginalFile():com.intellij.psi.PsiFile
- getParent():com.intellij.psi.PsiDirectory
- getPresentation():com.intellij.navigation.ItemPresentation
- getPrevSibling():com.intellij.psi.PsiElement
- f:getProject():com.intellij.openapi.project.Project
- getPsiRoots():com.intellij.psi.PsiFile[]
- getReference():com.intellij.psi.PsiReference
- getReferences():com.intellij.psi.PsiReference[]
- getResolveScope():com.intellij.psi.search.GlobalSearchScope
- getStartOffsetInParent():I
- getStub():com.intellij.psi.stubs.StubElement
- getStubTree():com.intellij.psi.stubs.StubTree
- getStubTreeOrFileElement():com.intellij.openapi.util.Pair
- getStubbedSpine():com.intellij.psi.impl.source.StubbedSpine
- getText():java.lang.String
- getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- getTreeElement():com.intellij.psi.impl.source.tree.FileElement
- getUseScope():com.intellij.psi.search.SearchScope
- getViewProvider():com.intellij.psi.FileViewProvider
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- p:init(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):V
- isContentsLoaded():Z
- isDirectory():Z
- isEquivalentTo(com.intellij.psi.PsiElement):Z
- isPhysical():Z
- isTemplateDataFile():Z
- isValid():Z
- isWritable():Z
- f:markInvalidated():V
- navigate(Z):V
- onContentReload():V
- processChildren(com.intellij.psi.search.PsiElementProcessor):Z
- processDeclarations(com.intellij.psi.scope.PsiScopeProcessor,com.intellij.psi.ResolveState,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- s:putInfo(com.intellij.psi.PsiFile,java.util.Map):V
- putInfo(java.util.Map):V
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- setContentElementType(com.intellij.psi.tree.IElementType):V
- setName(java.lang.String):com.intellij.psi.PsiElement
- setOriginalFile(com.intellij.psi.PsiFile):V
- setTreeElementPointer(com.intellij.psi.impl.source.tree.FileElement):V
- subtreeChanged():V
- textContains(C):Z
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
- textToCharArray():C[]
- f:withGreenStubOrAst(java.lang.Class,java.util.function.Function,java.util.function.Function):java.lang.Object
- f:withGreenStubOrAst(java.util.function.Function,java.util.function.Function):java.lang.Object
- f:withGreenStubTreeOrAst(java.util.function.Function,java.util.function.Function):java.lang.Object
com.intellij.psi.impl.source.PsiFileWithStubSupport
- com.intellij.psi.PsiFile
- a:getStubTree():com.intellij.psi.stubs.StubTree
- getStubbedSpine():com.intellij.psi.impl.source.StubbedSpine
c:com.intellij.psi.impl.source.PsiPlainTextFileImpl
- com.intellij.psi.impl.source.PsiFileImpl
- com.intellij.psi.HintedReferenceHost
- com.intellij.psi.PsiPlainTextFile
- <init>(com.intellij.psi.FileViewProvider):V
- accept(com.intellij.psi.PsiElementVisitor):V
- getFileType():com.intellij.openapi.fileTypes.FileType
- getReferences():com.intellij.psi.PsiReference[]
- getReferences(com.intellij.psi.PsiReferenceService$Hints):com.intellij.psi.PsiReference[]
- shouldAskParentForReferences(com.intellij.psi.PsiReferenceService$Hints):Z
f:com.intellij.psi.impl.source.SourceTreeToPsiMap
- s:hasTreeElement(com.intellij.psi.PsiElement):Z
- s:psiElementToTree(com.intellij.psi.PsiElement):com.intellij.lang.ASTNode
- s:psiToTreeNotNull(com.intellij.psi.PsiElement):com.intellij.psi.impl.source.tree.TreeElement
- s:treeElementToPsi(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
- s:treeToPsiNotNull(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
com.intellij.psi.impl.source.StubbedSpine
- a:getStubCount():I
- a:getStubPsi(I):com.intellij.psi.PsiElement
- a:getStubType(I):com.intellij.psi.tree.IElementType
f:com.intellij.psi.impl.source.codeStyle.CodeEditUtil
- s:addChild(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- s:addChildren(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- s:allowToMarkNodesForPostponedFormatting(Z):V
- s:createLineFeed(com.intellij.psi.PsiManager):com.intellij.psi.PsiElement
- s:getOldIndentation(com.intellij.lang.ASTNode):I
- s:isMarkedToReformat(com.intellij.lang.ASTNode):Z
- s:isMarkedToReformatBefore(com.intellij.psi.impl.source.tree.TreeElement):Z
- s:isNodeGenerated(com.intellij.lang.ASTNode):Z
- s:isSuspendedNodesReformattingAllowed():Z
- s:markToReformat(com.intellij.lang.ASTNode,Z):V
- s:markToReformatBefore(com.intellij.lang.ASTNode,Z):V
- s:removeChild(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- s:removeChildren(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- s:replaceChild(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- s:saveWhitespacesInfo(com.intellij.lang.ASTNode):V
- s:setAllowSuspendNodesReformatting(Z):V
- s:setNodeGenerated(com.intellij.lang.ASTNode,Z):V
- s:setNodeGeneratedRecursively(com.intellij.lang.ASTNode,Z):V
- s:setNodeReformatStrategy(com.intellij.util.NotNullFunction):V
- s:setOldIndentation(com.intellij.psi.impl.source.tree.TreeElement,I):V
f:com.intellij.psi.impl.source.resolve.FileContextUtil
- sf:CONTAINING_FILE_KEY:com.intellij.openapi.util.Key
- sf:INJECTED_IN_ELEMENT:com.intellij.openapi.util.Key
- s:getContextFile(com.intellij.psi.PsiElement):com.intellij.psi.PsiFile
- s:getFileContext(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
c:com.intellij.psi.impl.source.resolve.ResolveCache
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.project.Project):V
- clearCache(Z):V
- dispose():V
- getCachedResults(com.intellij.psi.PsiPolyVariantReference,Z,Z,Z):com.intellij.psi.ResolveResult[]
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.impl.source.resolve.ResolveCache
- resolveWithCaching(com.intellij.psi.PsiPolyVariantReference,com.intellij.psi.impl.source.resolve.ResolveCache$PolyVariantContextResolver,Z,Z,com.intellij.psi.PsiFile):com.intellij.psi.ResolveResult[]
- resolveWithCaching(com.intellij.psi.PsiPolyVariantReference,com.intellij.psi.impl.source.resolve.ResolveCache$PolyVariantResolver,Z,Z):com.intellij.psi.ResolveResult[]
- resolveWithCaching(com.intellij.psi.PsiPolyVariantReference,com.intellij.psi.impl.source.resolve.ResolveCache$PolyVariantResolver,Z,Z,com.intellij.psi.PsiFile):com.intellij.psi.ResolveResult[]
- resolveWithCaching(com.intellij.psi.PsiReference,com.intellij.psi.impl.source.resolve.ResolveCache$AbstractResolver,Z,Z):java.lang.Object
com.intellij.psi.impl.source.resolve.ResolveCache$AbstractResolver
- a:resolve(com.intellij.psi.PsiReference,Z):java.lang.Object
com.intellij.psi.impl.source.resolve.ResolveCache$PolyVariantContextResolver
- a:resolve(com.intellij.psi.PsiPolyVariantReference,com.intellij.psi.PsiFile,Z):com.intellij.psi.ResolveResult[]
com.intellij.psi.impl.source.resolve.ResolveCache$PolyVariantResolver
- com.intellij.psi.impl.source.resolve.ResolveCache$AbstractResolver
- a:resolve(com.intellij.psi.PsiPolyVariantReference,Z):com.intellij.psi.ResolveResult[]
com.intellij.psi.impl.source.resolve.ResolveCache$Resolver
- com.intellij.psi.impl.source.resolve.ResolveCache$AbstractResolver
f:com.intellij.psi.impl.source.resolve.reference.PsiReferenceContributorEP
- com.intellij.openapi.extensions.CustomLoadingExtensionPointBean
- com.intellij.util.KeyedLazyInstance
- implementationClass:java.lang.String
- language:java.lang.String
- <init>():V
- getKey():java.lang.String
f:com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl
- com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry
- <init>():V
- s:disableUnderlyingElementChecks(com.intellij.openapi.Disposable):V
- unloadProvidersFor(com.intellij.lang.Language):V
a:com.intellij.psi.impl.source.resolve.reference.impl.CachingReference
- com.intellij.psi.PsiReference
- <init>():V
- s:getManipulator(com.intellij.psi.PsiElement):com.intellij.psi.ElementManipulator
- isReferenceTo(com.intellij.psi.PsiElement):Z
- isSoft():Z
- resolve():com.intellij.psi.PsiElement
- a:resolveInner():com.intellij.psi.PsiElement
c:com.intellij.psi.impl.source.resolve.reference.impl.PsiDelegateReference
- com.intellij.psi.PsiReference
- <init>(com.intellij.psi.PsiReference):V
- bindToElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:createSoft(com.intellij.psi.PsiReference,Z):com.intellij.psi.PsiReference
- getCanonicalText():java.lang.String
- getElement():com.intellij.psi.PsiElement
- getRangeInElement():com.intellij.openapi.util.TextRange
- getVariants():java.lang.Object[]
- handleElementRename(java.lang.String):com.intellij.psi.PsiElement
- isReferenceTo(com.intellij.psi.PsiElement):Z
- isSoft():Z
- resolve():com.intellij.psi.PsiElement
c:com.intellij.psi.impl.source.resolve.reference.impl.PsiMultiReference
- com.intellij.psi.PsiPolyVariantReference
- sf:COMPARATOR:java.util.Comparator
- <init>(com.intellij.psi.PsiReference[],com.intellij.psi.PsiElement):V
- bindToElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getCanonicalText():java.lang.String
- getElement():com.intellij.psi.PsiElement
- getRangeInElement():com.intellij.openapi.util.TextRange
- s:getReferenceRange(com.intellij.psi.PsiReference,com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- getReferences():com.intellij.psi.PsiReference[]
- getVariants():java.lang.Object[]
- handleElementRename(java.lang.String):com.intellij.psi.PsiElement
- isReferenceTo(com.intellij.psi.PsiElement):Z
- isSoft():Z
- multiResolve(Z):com.intellij.psi.ResolveResult[]
- resolve():com.intellij.psi.PsiElement
a:com.intellij.psi.impl.source.resolve.reference.impl.PsiPolyVariantCachingReference
- com.intellij.psi.PsiPolyVariantReference
- <init>():V
- isReferenceTo(com.intellij.psi.PsiElement):Z
- isSoft():Z
- f:multiResolve(Z):com.intellij.psi.ResolveResult[]
- resolve():com.intellij.psi.PsiElement
- pa:resolveInner(Z,com.intellij.psi.PsiFile):com.intellij.psi.ResolveResult[]
com.intellij.psi.impl.source.resolve.reference.impl.providers.CustomizableReferenceProvider
- a:getOptions():java.util.Map
- a:getReferencesByElement(com.intellij.psi.PsiElement,com.intellij.util.ProcessingContext):com.intellij.psi.PsiReference[]
f:com.intellij.psi.impl.source.resolve.reference.impl.providers.CustomizableReferenceProvider$CustomizationKey
- <init>(java.lang.String):V
- getBooleanValue(java.util.Map):Z
- getValue(java.util.Map):java.lang.Object
- putValue(java.util.Map,java.lang.Object):V
com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceOwner
- a:getLastFileReference():com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReference
f:com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceUtil
- s:findFile(com.intellij.psi.PsiElement):com.intellij.psi.PsiFile
- s:findFile(com.intellij.psi.PsiReference[]):com.intellij.psi.PsiFile
- s:findFileReference(com.intellij.psi.PsiElement):com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReference
com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReference
- com.intellij.psi.PsiPolyVariantReference
f:com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileSystemItemUtil
- <init>():V
- s:findRelativePath(com.intellij.psi.PsiFileSystemItem,com.intellij.psi.PsiFileSystemItem):java.lang.String
- s:getRelativePathFromAncestor(com.intellij.psi.PsiFileSystemItem,com.intellij.psi.PsiFileSystemItem):java.lang.String
c:com.intellij.psi.impl.source.tree.ASTStructure
- com.intellij.util.diff.FlyweightCapableTreeStructure
- <init>(com.intellij.lang.ASTNode):V
- disposeChildren(com.intellij.lang.ASTNode[],I):V
- getChildren(com.intellij.lang.ASTNode,com.intellij.openapi.util.Ref):I
- getEndOffset(com.intellij.lang.ASTNode):I
- getParent(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- getRoot():com.intellij.lang.ASTNode
- getStartOffset(com.intellij.lang.ASTNode):I
- toString(com.intellij.lang.ASTNode):java.lang.CharSequence
f:com.intellij.psi.impl.source.tree.AstBufferUtil
- s:getTextSkippingWhitespaceComments(com.intellij.lang.ASTNode):java.lang.String
- s:toBuffer(com.intellij.lang.ASTNode,C[],I):I
- s:toBuffer(com.intellij.lang.ASTNode,C[],I,Z):I
c:com.intellij.psi.impl.source.tree.AstBufferUtil$BufferVisitor
- com.intellij.psi.impl.source.tree.RecursiveTreeElementWalkingVisitor
- pf:buffer:C[]
- p:end:I
- pf:offset:I
- <init>(com.intellij.psi.PsiElement,Z,Z):V
- <init>(Z,Z,I,C[]):V
- createCharSequence():java.lang.CharSequence
- getBuffer():C[]
- getEnd():I
- p:isIgnored(com.intellij.psi.impl.source.tree.LeafElement):Z
- visitComposite(com.intellij.psi.impl.source.tree.CompositeElement):V
- visitLeaf(com.intellij.psi.impl.source.tree.LeafElement):V
f:com.intellij.psi.impl.source.tree.ChangeUtil
- <init>():V
- s:copyElement(com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.PsiElement,com.intellij.util.CharTable):com.intellij.psi.impl.source.tree.TreeElement
- s:copyElement(com.intellij.psi.impl.source.tree.TreeElement,com.intellij.util.CharTable):com.intellij.psi.impl.source.tree.TreeElement
- s:copyLeafWithText(com.intellij.psi.impl.source.tree.LeafElement,java.lang.String):com.intellij.psi.impl.source.tree.LeafElement
- s:copyToElement(com.intellij.psi.PsiElement):com.intellij.psi.impl.source.tree.TreeElement
- s:decodeInformation(com.intellij.psi.impl.source.tree.TreeElement):com.intellij.psi.impl.source.tree.TreeElement
- s:encodeInformation(com.intellij.psi.impl.source.tree.TreeElement):V
- s:generateTreeElement(com.intellij.psi.PsiElement,com.intellij.util.CharTable,com.intellij.psi.PsiManager):com.intellij.psi.impl.source.tree.TreeElement
- s:prepareAndRunChangeAction(com.intellij.psi.impl.source.tree.ChangeUtil$ChangeAction,com.intellij.psi.impl.source.tree.TreeElement):V
com.intellij.psi.impl.source.tree.ChangeUtil$ChangeAction
- a:makeChange(com.intellij.pom.tree.events.TreeChangeEvent):V
c:com.intellij.psi.impl.source.tree.CompositeElement
- com.intellij.psi.impl.source.tree.TreeElement
- sf:EMPTY_ARRAY:com.intellij.psi.impl.source.tree.CompositeElement[]
- <init>(com.intellij.psi.tree.IElementType):V
- acceptTree(com.intellij.psi.impl.source.tree.TreeElementVisitor):V
- addChild(com.intellij.lang.ASTNode):V
- addChild(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- addChildren(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- addInternal(com.intellij.psi.impl.source.tree.TreeElement,com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,java.lang.Boolean):com.intellij.psi.impl.source.tree.TreeElement
- addLeaf(com.intellij.psi.tree.IElementType,java.lang.CharSequence,com.intellij.lang.ASTNode):V
- f:applyDeleteOnReparse(com.intellij.lang.ASTNode):V
- f:applyInsertOnReparse(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- f:applyReplaceFileOnReparse(com.intellij.psi.PsiFile,com.intellij.lang.FileASTNode):V
- clearCaches():V
- clone():com.intellij.psi.impl.source.tree.CompositeElement
- countChildren(com.intellij.psi.tree.TokenSet):I
- p:createPsiNoLock():com.intellij.psi.PsiElement
- deleteChildInternal(com.intellij.lang.ASTNode):V
- findChildByRole(I):com.intellij.lang.ASTNode
- f:findChildByRoleAsPsiElement(I):com.intellij.psi.PsiElement
- findChildByType(com.intellij.psi.tree.IElementType):com.intellij.lang.ASTNode
- findChildByType(com.intellij.psi.tree.IElementType,com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- findChildByType(com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode
- findChildByType(com.intellij.psi.tree.TokenSet,com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- findLeafElementAt(I):com.intellij.psi.impl.source.tree.LeafElement
- findPsiChildByType(com.intellij.psi.tree.IElementType):com.intellij.psi.PsiElement
- findPsiChildByType(com.intellij.psi.tree.TokenSet):com.intellij.psi.PsiElement
- getCachedLength():I
- getChars():java.lang.CharSequence
- getChildRole(com.intellij.lang.ASTNode):I
- pf:getChildRole(com.intellij.lang.ASTNode,I):I
- getChildren(com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode[]
- getChildrenAsPsiElements(com.intellij.psi.tree.IElementType,com.intellij.util.ArrayFactory):com.intellij.psi.PsiElement[]
- getChildrenAsPsiElements(com.intellij.psi.tree.TokenSet,com.intellij.util.ArrayFactory):com.intellij.psi.PsiElement[]
- getFirstChildNode():com.intellij.psi.impl.source.tree.TreeElement
- getLastChildNode():com.intellij.psi.impl.source.tree.TreeElement
- f:getPsi():com.intellij.psi.PsiElement
- getPsi(java.lang.Class):com.intellij.psi.PsiElement
- getText():java.lang.String
- getTextLength():I
- hc():I
- f:rawAddChildren(com.intellij.psi.impl.source.tree.TreeElement):V
- rawAddChildrenWithoutNotifications(com.intellij.psi.impl.source.tree.TreeElement):V
- rawFirstChild():com.intellij.psi.impl.source.tree.TreeElement
- rawLastChild():com.intellij.psi.impl.source.tree.TreeElement
- rawRemoveAllChildren():V
- removeAllChildren():V
- removeChild(com.intellij.lang.ASTNode):V
- removeRange(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- replaceAllChildrenToChildrenOf(com.intellij.lang.ASTNode):V
- replaceChild(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- replaceChildInternal(com.intellij.lang.ASTNode,com.intellij.psi.impl.source.tree.TreeElement):V
- setPsi(com.intellij.psi.PsiElement):V
- subtreeChanged():V
- textContains(C):Z
- p:textMatches(java.lang.CharSequence,I):I
- textToCharArray():C[]
a:com.intellij.psi.impl.source.tree.CompositePsiElement
- com.intellij.psi.impl.source.tree.CompositeElement
- com.intellij.psi.NavigatablePsiElement
- ps:ourHC:I
- p:<init>(com.intellij.psi.tree.IElementType):V
- accept(com.intellij.psi.PsiElementVisitor):V
- acceptChildren(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- f:addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- f:addRangeAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- f:addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- canNavigate():Z
- canNavigateToSource():Z
- f:checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- clone():com.intellij.psi.impl.source.tree.CompositePsiElement
- copy():com.intellij.psi.PsiElement
- delete():V
- deleteChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- findElementAt(I):com.intellij.psi.PsiElement
- findReferenceAt(I):com.intellij.psi.PsiReference
- getChildren():com.intellij.psi.PsiElement[]
- getContainingFile():com.intellij.psi.PsiFile
- getContext():com.intellij.psi.PsiElement
- getFirstChild():com.intellij.psi.PsiElement
- getLanguage():com.intellij.lang.Language
- getLastChild():com.intellij.psi.PsiElement
- getName():java.lang.String
- getNavigationElement():com.intellij.psi.PsiElement
- getNextSibling():com.intellij.psi.PsiElement
- getNode():com.intellij.lang.ASTNode
- getOriginalElement():com.intellij.psi.PsiElement
- getParent():com.intellij.psi.PsiElement
- getPresentation():com.intellij.navigation.ItemPresentation
- getPrevSibling():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getReference():com.intellij.psi.PsiReference
- getReferences():com.intellij.psi.PsiReference[]
- getResolveScope():com.intellij.psi.search.GlobalSearchScope
- getUseScope():com.intellij.psi.search.SearchScope
- isEquivalentTo(com.intellij.psi.PsiElement):Z
- isPhysical():Z
- isValid():Z
- isWritable():Z
- navigate(Z):V
- processDeclarations(com.intellij.psi.scope.PsiScopeProcessor,com.intellij.psi.ResolveState,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
f:com.intellij.psi.impl.source.tree.Factory
- s:createCompositeElement(com.intellij.psi.tree.IElementType,com.intellij.util.CharTable,com.intellij.psi.PsiManager):com.intellij.psi.impl.source.tree.CompositeElement
- s:createErrorElement(java.lang.String):com.intellij.psi.impl.source.tree.CompositeElement
- s:createSingleLeafElement(com.intellij.psi.tree.IElementType,java.lang.CharSequence,I,I,com.intellij.util.CharTable,com.intellij.psi.PsiManager):com.intellij.psi.impl.source.tree.LeafElement
- s:createSingleLeafElement(com.intellij.psi.tree.IElementType,java.lang.CharSequence,I,I,com.intellij.util.CharTable,com.intellij.psi.PsiManager,com.intellij.psi.PsiFile):com.intellij.psi.impl.source.tree.LeafElement
- s:createSingleLeafElement(com.intellij.psi.tree.IElementType,java.lang.CharSequence,I,I,com.intellij.util.CharTable,com.intellij.psi.PsiManager,Z):com.intellij.psi.impl.source.tree.LeafElement
- s:createSingleLeafElement(com.intellij.psi.tree.IElementType,java.lang.CharSequence,com.intellij.util.CharTable,com.intellij.psi.PsiManager):com.intellij.psi.impl.source.tree.LeafElement
c:com.intellij.psi.impl.source.tree.FileElement
- com.intellij.psi.impl.source.tree.LazyParseableElement
- com.intellij.lang.FileASTNode
- sf:EMPTY_ARRAY:com.intellij.psi.impl.source.tree.FileElement[]
- <init>(com.intellij.psi.tree.IElementType,java.lang.CharSequence):V
- clearCaches():V
- copyElement():com.intellij.lang.ASTNode
- p:createPsiNoLock():com.intellij.psi.PsiElement
- detachFromFile():V
- getCharTable():com.intellij.util.CharTable
- getLighterAST():com.intellij.lang.LighterAST
- getManager():com.intellij.psi.impl.PsiManagerEx
- setCharTable(com.intellij.util.CharTable):V
c:com.intellij.psi.impl.source.tree.ForeignLeafPsiElement
- com.intellij.psi.impl.source.tree.LeafPsiElement
- <init>(com.intellij.lang.ForeignLeafType,java.lang.CharSequence):V
- findLeafElementAt(I):com.intellij.psi.impl.source.tree.LeafElement
- getForeignType():com.intellij.lang.ForeignLeafType
- getStartOffset():I
- getTextLength():I
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
- p:textMatches(java.lang.CharSequence,I):I
a:com.intellij.psi.impl.source.tree.ICodeFragmentElementType
- com.intellij.psi.tree.IFileElementType
- <init>(java.lang.String,com.intellij.lang.Language):V
- <init>(java.lang.String,com.intellij.lang.Language,Z):V
c:com.intellij.psi.impl.source.tree.LazyParseableElement
- com.intellij.psi.impl.source.tree.CompositeElement
- <init>(com.intellij.psi.tree.IElementType,java.lang.CharSequence):V
- clearCaches():V
- copyTo(C[],I):I
- getChars():java.lang.CharSequence
- getFirstChildNode():com.intellij.psi.impl.source.tree.TreeElement
- getLastChildNode():com.intellij.psi.impl.source.tree.TreeElement
- getText():java.lang.String
- getTextLength():I
- hc():I
- isParsed():Z
- rawAddChildrenWithoutNotifications(com.intellij.psi.impl.source.tree.TreeElement):V
- s:setParsingAllowed(Z):V
- textContains(C):Z
- p:textMatches(java.lang.CharSequence,I):I
c:com.intellij.psi.impl.source.tree.LazyParseablePsiElement
- com.intellij.psi.impl.source.tree.LazyParseableElement
- com.intellij.navigation.NavigationItem
- com.intellij.psi.PsiElement
- <init>(com.intellij.psi.tree.IElementType,java.lang.CharSequence):V
- accept(com.intellij.psi.PsiElementVisitor):V
- acceptChildren(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- f:addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- f:addRangeAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- f:addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- canNavigate():Z
- canNavigateToSource():Z
- f:checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- clone():com.intellij.psi.impl.source.tree.LazyParseablePsiElement
- copy():com.intellij.psi.PsiElement
- delete():V
- deleteChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- p:findChildByClass(java.lang.Class):java.lang.Object
- p:findChildrenByClass(java.lang.Class):java.lang.Object[]
- findElementAt(I):com.intellij.psi.PsiElement
- findReferenceAt(I):com.intellij.psi.PsiReference
- getChildren():com.intellij.psi.PsiElement[]
- getContainingFile():com.intellij.psi.PsiFile
- getContext():com.intellij.psi.PsiElement
- getFirstChild():com.intellij.psi.PsiElement
- getLanguage():com.intellij.lang.Language
- getLastChild():com.intellij.psi.PsiElement
- getName():java.lang.String
- getNavigationElement():com.intellij.psi.PsiElement
- getNextSibling():com.intellij.psi.PsiElement
- getNode():com.intellij.lang.ASTNode
- getOriginalElement():com.intellij.psi.PsiElement
- getParent():com.intellij.psi.PsiElement
- getPresentation():com.intellij.navigation.ItemPresentation
- getPrevSibling():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getReference():com.intellij.psi.PsiReference
- getReferences():com.intellij.psi.PsiReference[]
- getResolveScope():com.intellij.psi.search.GlobalSearchScope
- getUseScope():com.intellij.psi.search.SearchScope
- isEquivalentTo(com.intellij.psi.PsiElement):Z
- isPhysical():Z
- isValid():Z
- isWritable():Z
- navigate(Z):V
- processDeclarations(com.intellij.psi.scope.PsiScopeProcessor,com.intellij.psi.ResolveState,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
a:com.intellij.psi.impl.source.tree.LeafElement
- com.intellij.psi.impl.source.tree.TreeElement
- com.intellij.lang.LighterASTTokenNode
- p:<init>(com.intellij.psi.tree.IElementType,java.lang.CharSequence):V
- acceptTree(com.intellij.psi.impl.source.tree.TreeElementVisitor):V
- addChild(com.intellij.lang.ASTNode):V
- addChild(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- addChildren(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- addLeaf(com.intellij.psi.tree.IElementType,java.lang.CharSequence,com.intellij.lang.ASTNode):V
- charAt(I):C
- clone():com.intellij.psi.impl.source.tree.LeafElement
- copyTo(C[],I):I
- findChildByType(com.intellij.psi.tree.IElementType):com.intellij.lang.ASTNode
- findChildByType(com.intellij.psi.tree.IElementType,com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- findChildByType(com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode
- findChildByType(com.intellij.psi.tree.TokenSet,com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- findLeafElementAt(I):com.intellij.psi.impl.source.tree.LeafElement
- getCachedLength():I
- getChars():java.lang.CharSequence
- getChildren(com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode[]
- getFirstChildNode():com.intellij.psi.impl.source.tree.TreeElement
- getLastChildNode():com.intellij.psi.impl.source.tree.TreeElement
- getPsi():com.intellij.psi.PsiElement
- getPsi(java.lang.Class):com.intellij.psi.PsiElement
- getText():java.lang.String
- getTextLength():I
- hc():I
- rawReplaceWithText(java.lang.String):com.intellij.psi.impl.source.tree.LeafElement
- removeChild(com.intellij.lang.ASTNode):V
- removeRange(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- replaceAllChildrenToChildrenOf(com.intellij.lang.ASTNode):V
- replaceChild(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- replaceWithText(java.lang.String):com.intellij.psi.impl.source.tree.LeafElement
- textContains(C):Z
- p:textMatches(java.lang.CharSequence,I):I
- textMatches(java.lang.CharSequence,I,I):Z
- textToCharArray():C[]
c:com.intellij.psi.impl.source.tree.LeafPsiElement
- com.intellij.psi.impl.source.tree.LeafElement
- com.intellij.navigation.NavigationItem
- com.intellij.psi.PsiElement
- <init>(com.intellij.psi.tree.IElementType,java.lang.CharSequence):V
- accept(com.intellij.psi.PsiElementVisitor):V
- acceptChildren(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- canNavigate():Z
- canNavigateToSource():Z
- checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- copy():com.intellij.psi.PsiElement
- delete():V
- deleteChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- findElementAt(I):com.intellij.psi.PsiElement
- findReferenceAt(I):com.intellij.psi.PsiReference
- getChildren():com.intellij.psi.PsiElement[]
- getContainingFile():com.intellij.psi.PsiFile
- getContext():com.intellij.psi.PsiElement
- getFirstChild():com.intellij.psi.PsiElement
- getLanguage():com.intellij.lang.Language
- getLastChild():com.intellij.psi.PsiElement
- getName():java.lang.String
- getNavigationElement():com.intellij.psi.PsiElement
- getNextSibling():com.intellij.psi.PsiElement
- getNode():com.intellij.lang.ASTNode
- getOriginalElement():com.intellij.psi.PsiElement
- getParent():com.intellij.psi.PsiElement
- getPresentation():com.intellij.navigation.ItemPresentation
- getPrevSibling():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getPsi():com.intellij.psi.PsiElement
- getReference():com.intellij.psi.PsiReference
- getReferences():com.intellij.psi.PsiReference[]
- getResolveScope():com.intellij.psi.search.GlobalSearchScope
- getUseScope():com.intellij.psi.search.SearchScope
- isEquivalentTo(com.intellij.psi.PsiElement):Z
- isPhysical():Z
- isValid():Z
- isWritable():Z
- navigate(Z):V
- processDeclarations(com.intellij.psi.scope.PsiScopeProcessor,com.intellij.psi.ResolveState,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
f:com.intellij.psi.impl.source.tree.LightTreeUtil
- <init>():V
- s:firstChildOfType(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.tree.IElementType):com.intellij.lang.LighterASTNode
- s:firstChildOfType(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.tree.TokenSet):com.intellij.lang.LighterASTNode
- s:getChildrenOfType(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.tree.IElementType):java.util.List
- s:getChildrenOfType(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.tree.TokenSet):java.util.List
- s:getParentOfType(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet):com.intellij.lang.LighterASTNode
- s:processLeavesAtOffsets(I[],com.intellij.lang.LighterAST,java.util.function.BiConsumer):V
- s:requiredChildOfType(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.tree.IElementType):com.intellij.lang.LighterASTNode
- s:requiredChildOfType(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.tree.TokenSet):com.intellij.lang.LighterASTNode
- s:toFilteredString(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.tree.TokenSet):java.lang.String
c:com.intellij.psi.impl.source.tree.OwnBufferLeafPsiElement
- com.intellij.psi.impl.source.tree.LeafElement
- com.intellij.psi.PsiElement
- <init>(com.intellij.psi.tree.IElementType,java.lang.CharSequence):V
- accept(com.intellij.psi.PsiElementVisitor):V
- acceptChildren(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- copy():com.intellij.psi.PsiElement
- delete():V
- deleteChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- findElementAt(I):com.intellij.psi.PsiElement
- findReferenceAt(I):com.intellij.psi.PsiReference
- getChildren():com.intellij.psi.PsiElement[]
- getContainingFile():com.intellij.psi.PsiFile
- getContext():com.intellij.psi.PsiElement
- getFirstChild():com.intellij.psi.PsiElement
- getLanguage():com.intellij.lang.Language
- getLastChild():com.intellij.psi.PsiElement
- getNavigationElement():com.intellij.psi.PsiElement
- getNextSibling():com.intellij.psi.PsiElement
- getNode():com.intellij.lang.ASTNode
- getOriginalElement():com.intellij.psi.PsiElement
- getParent():com.intellij.psi.PsiElement
- getPrevSibling():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getPsi():com.intellij.psi.PsiElement
- getReference():com.intellij.psi.PsiReference
- getReferences():com.intellij.psi.PsiReference[]
- getResolveScope():com.intellij.psi.search.GlobalSearchScope
- getUseScope():com.intellij.psi.search.SearchScope
- isEquivalentTo(com.intellij.psi.PsiElement):Z
- isPhysical():Z
- isValid():Z
- isWritable():Z
- processDeclarations(com.intellij.psi.scope.PsiScopeProcessor,com.intellij.psi.ResolveState,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
c:com.intellij.psi.impl.source.tree.PlainTextASTFactory
- com.intellij.lang.ASTFactory
- <init>():V
- createLeaf(com.intellij.psi.tree.IElementType,java.lang.CharSequence):com.intellij.psi.impl.source.tree.LeafElement
c:com.intellij.psi.impl.source.tree.PsiCommentImpl
- com.intellij.psi.impl.source.tree.LeafPsiElement
- com.intellij.psi.PsiComment
- com.intellij.psi.PsiLanguageInjectionHost
- <init>(com.intellij.psi.tree.IElementType,java.lang.CharSequence):V
- accept(com.intellij.psi.PsiElementVisitor):V
- createLiteralTextEscaper():com.intellij.psi.LiteralTextEscaper
- getReferences():com.intellij.psi.PsiReference[]
- getTokenType():com.intellij.psi.tree.IElementType
- isValidHost():Z
- updateText(java.lang.String):com.intellij.psi.PsiLanguageInjectionHost
c:com.intellij.psi.impl.source.tree.PsiErrorElementImpl
- com.intellij.psi.impl.source.tree.CompositePsiElement
- com.intellij.psi.PsiErrorElement
- <init>(java.lang.String):V
- accept(com.intellij.psi.PsiElementVisitor):V
- getErrorDescription():java.lang.String
- getLanguage():com.intellij.lang.Language
c:com.intellij.psi.impl.source.tree.PsiPlainTextImpl
- com.intellij.psi.impl.source.tree.OwnBufferLeafPsiElement
- com.intellij.psi.PsiPlainText
- p:<init>(java.lang.CharSequence):V
- accept(com.intellij.psi.PsiElementVisitor):V
c:com.intellij.psi.impl.source.tree.PsiWhiteSpaceImpl
- com.intellij.psi.impl.source.tree.LeafPsiElement
- com.intellij.psi.PsiWhiteSpace
- <init>(java.lang.CharSequence):V
- accept(com.intellij.psi.PsiElementVisitor):V
- getLanguage():com.intellij.lang.Language
a:com.intellij.psi.impl.source.tree.RecursiveLighterASTNodeWalkingVisitor
- p:<init>(com.intellij.lang.LighterAST):V
- p:elementFinished(com.intellij.lang.LighterASTNode):V
- stopWalking():V
- visitNode(com.intellij.lang.LighterASTNode):V
a:com.intellij.psi.impl.source.tree.RecursiveTreeElementWalkingVisitor
- com.intellij.psi.impl.source.tree.TreeElementVisitor
- com.intellij.psi.PsiRecursiveVisitor
- p:<init>():V
- p:<init>(Z):V
- p:elementFinished(com.intellij.lang.ASTNode):V
- stopWalking():V
- visitComposite(com.intellij.psi.impl.source.tree.CompositeElement):V
- visitLeaf(com.intellij.psi.impl.source.tree.LeafElement):V
- p:visitNode(com.intellij.psi.impl.source.tree.TreeElement):V
f:com.intellij.psi.impl.source.tree.SharedImplUtil
- s:acceptChildren(com.intellij.psi.PsiElementVisitor,com.intellij.lang.ASTNode):V
- s:addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.lang.ASTNode,java.lang.Boolean):com.intellij.psi.PsiElement
- s:doReplace(com.intellij.psi.PsiElement,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:findCharTableByTree(com.intellij.lang.ASTNode):com.intellij.util.CharTable
- s:findFileElement(com.intellij.lang.ASTNode):com.intellij.lang.FileASTNode
- s:getChildrenOfType(com.intellij.lang.ASTNode,com.intellij.psi.tree.IElementType):com.intellij.lang.ASTNode[]
- s:getContainingFile(com.intellij.lang.ASTNode):com.intellij.psi.PsiFile
- s:getFirstChild(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
- s:getLastChild(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
- s:getManagerByTree(com.intellij.lang.ASTNode):com.intellij.psi.PsiManager
- s:getNextSibling(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
- s:getParent(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
- s:getPrevSibling(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
- s:isValid(com.intellij.lang.ASTNode):Z
- s:isWritable(com.intellij.lang.ASTNode):Z
com.intellij.psi.impl.source.tree.TreeCopyHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:decodeInformation(com.intellij.psi.impl.source.tree.TreeElement,java.util.Map):com.intellij.psi.impl.source.tree.TreeElement
- a:encodeInformation(com.intellij.psi.impl.source.tree.TreeElement,com.intellij.lang.ASTNode,java.util.Map):V
a:com.intellij.psi.impl.source.tree.TreeElement
- com.intellij.lang.ASTNode
- com.intellij.lang.LighterASTNode
- com.intellij.psi.impl.ElementBase
- java.lang.Cloneable
- sf:EMPTY_ARRAY:com.intellij.psi.impl.source.tree.TreeElement[]
- <init>(com.intellij.psi.tree.IElementType):V
- a:acceptTree(com.intellij.psi.impl.source.tree.TreeElementVisitor):V
- f:applyReplaceOnReparse(com.intellij.lang.ASTNode):V
- clearCaches():V
- clone():java.lang.Object
- copyElement():com.intellij.lang.ASTNode
- f:equals(java.lang.Object):Z
- a:findLeafElementAt(I):com.intellij.psi.impl.source.tree.LeafElement
- a:getCachedLength():I
- getElementType():com.intellij.psi.tree.IElementType
- getEndOffset():I
- a:getFirstChildNode():com.intellij.psi.impl.source.tree.TreeElement
- a:getLastChildNode():com.intellij.psi.impl.source.tree.TreeElement
- getManager():com.intellij.psi.impl.PsiManagerEx
- getStartOffset():I
- f:getStartOffsetInParent():I
- a:getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- getTokenType():com.intellij.psi.tree.IElementType
- f:getTreeNext():com.intellij.psi.impl.source.tree.TreeElement
- f:getTreeParent():com.intellij.psi.impl.source.tree.CompositeElement
- f:getTreePrev():com.intellij.psi.impl.source.tree.TreeElement
- a:hc():I
- p:invalidate():V
- p:onInvalidated():V
- rawInsertAfterMe(com.intellij.psi.impl.source.tree.TreeElement):V
- rawInsertBeforeMe(com.intellij.psi.impl.source.tree.TreeElement):V
- rawRemove():V
- rawRemoveUpTo(com.intellij.psi.impl.source.tree.TreeElement):V
- rawRemoveUpToLast():V
- rawReplaceWithList(com.intellij.psi.impl.source.tree.TreeElement):V
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
- pa:textMatches(java.lang.CharSequence,I):I
- textMatches(java.lang.CharSequence,I,I):Z
- a:textToCharArray():C[]
c:com.intellij.psi.impl.source.tree.TreeElementVisitor
- <init>():V
- visitComposite(com.intellij.psi.impl.source.tree.CompositeElement):V
- visitLeaf(com.intellij.psi.impl.source.tree.LeafElement):V
com.intellij.psi.impl.source.tree.TreeGenerator
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:generateTreeFor(com.intellij.psi.PsiElement,com.intellij.util.CharTable,com.intellij.psi.PsiManager):com.intellij.psi.impl.source.tree.TreeElement
f:com.intellij.psi.impl.source.tree.TreeUtil
- sf:CONTAINING_FILE_KEY_AFTER_REPARSE:com.intellij.openapi.util.Key
- <init>():V
- s:clearCaches(com.intellij.psi.impl.source.tree.TreeElement):V
- s:containsOuterLanguageElements(com.intellij.lang.ASTNode):Z
- s:ensureParsed(com.intellij.lang.ASTNode):V
- s:findChildBackward(com.intellij.lang.ASTNode,com.intellij.psi.tree.IElementType):com.intellij.lang.ASTNode
- s:findCommonParent(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- s:findFirstLeaf(com.intellij.lang.ASTNode):com.intellij.psi.impl.source.tree.LeafElement
- s:findFirstLeaf(com.intellij.lang.ASTNode,Z):com.intellij.lang.ASTNode
- s:findLastLeaf(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- s:findLastLeaf(com.intellij.lang.ASTNode,Z):com.intellij.lang.ASTNode
- s:findParent(com.intellij.lang.ASTNode,com.intellij.psi.tree.IElementType):com.intellij.lang.ASTNode
- s:findParent(com.intellij.lang.ASTNode,com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode
- s:findParent(com.intellij.lang.ASTNode,com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode
- s:findSibling(com.intellij.lang.ASTNode,com.intellij.psi.tree.IElementType):com.intellij.lang.ASTNode
- s:findSibling(com.intellij.lang.ASTNode,com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode
- s:findSiblingBackward(com.intellij.lang.ASTNode,com.intellij.psi.tree.IElementType):com.intellij.lang.ASTNode
- s:findSiblingBackward(com.intellij.lang.ASTNode,com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode
- s:findTopmostSiblingParents(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):com.intellij.openapi.util.Couple
- s:getFileElement(com.intellij.lang.ASTNode):com.intellij.lang.FileASTNode
- s:getFileElement(com.intellij.psi.impl.source.tree.TreeElement):com.intellij.psi.impl.source.tree.FileElement
- s:getLastChild(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- s:getTokenText(com.intellij.lexer.Lexer):java.lang.String
- s:isCollapsedChameleon(com.intellij.lang.ASTNode):Z
- s:isStrongWhitespaceHolder(com.intellij.psi.tree.IElementType):Z
- s:isWhitespaceOrComment(com.intellij.lang.ASTNode):Z
- s:nextLeaf(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- s:nextLeaf(com.intellij.lang.ASTNode,Z):com.intellij.lang.ASTNode
- s:nextLeaf(com.intellij.psi.impl.source.tree.LeafElement):com.intellij.psi.impl.source.tree.LeafElement
- s:nextLeaf(com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.impl.source.tree.TreeUtil$CommonParentState):com.intellij.psi.impl.source.tree.LeafElement
- s:nextLeaf(com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.impl.source.tree.TreeUtil$CommonParentState,com.intellij.psi.tree.IElementType,Z):com.intellij.psi.impl.source.tree.TreeElement
- s:prevLeaf(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- s:prevLeaf(com.intellij.lang.ASTNode,Z):com.intellij.lang.ASTNode
- s:prevLeaf(com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.impl.source.tree.TreeUtil$CommonParentState):com.intellij.lang.ASTNode
- s:skipElements(com.intellij.lang.ASTNode,com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode
- s:skipElementsBack(com.intellij.lang.ASTNode,com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode
- s:skipWhitespaceAndComments(com.intellij.lang.ASTNode,Z):com.intellij.lang.ASTNode
- s:skipWhitespaceCommentsAndTokens(com.intellij.lang.ASTNode,com.intellij.psi.tree.TokenSet,Z):com.intellij.lang.ASTNode
f:com.intellij.psi.impl.source.tree.TreeUtil$CommonParentState
- nextLeafBranchStart:com.intellij.lang.ASTNode
- <init>():V
c:com.intellij.psi.impl.source.tree.injected.CommentLiteralEscaper
- com.intellij.psi.LiteralTextEscaper
- <init>(com.intellij.psi.impl.source.tree.PsiCommentImpl):V
- decode(com.intellij.openapi.util.TextRange,java.lang.StringBuilder):Z
- getOffsetInHost(I,com.intellij.openapi.util.TextRange):I
- isOneLine():Z
a:com.intellij.psi.scope.BaseScopeProcessor
- com.intellij.psi.scope.PsiScopeProcessor
- <init>():V
- getHint(com.intellij.openapi.util.Key):java.lang.Object
a:com.intellij.psi.scope.DelegatingScopeProcessor
- com.intellij.psi.scope.PsiScopeProcessor
- <init>(com.intellij.psi.scope.PsiScopeProcessor):V
- execute(com.intellij.psi.PsiElement,com.intellij.psi.ResolveState):Z
- pf:getDelegate():com.intellij.psi.scope.PsiScopeProcessor
- getHint(com.intellij.openapi.util.Key):java.lang.Object
- handleEvent(com.intellij.psi.scope.PsiScopeProcessor$Event,java.lang.Object):V
a:com.intellij.psi.scope.ProcessorWithHints
- com.intellij.psi.scope.PsiScopeProcessor
- <init>():V
- getHint(com.intellij.openapi.util.Key):java.lang.Object
- pf:hint(com.intellij.openapi.util.Key,java.lang.Object):V
c:com.intellij.psi.scope.processor.FilterElementProcessor
- com.intellij.psi.search.PsiElementProcessor
- <init>(com.intellij.psi.filters.ElementFilter):V
- <init>(com.intellij.psi.filters.ElementFilter,com.intellij.psi.search.PsiElementProcessor):V
- <init>(com.intellij.psi.filters.ElementFilter,com.intellij.psi.search.PsiElementProcessor,java.util.List):V
- <init>(com.intellij.psi.filters.ElementFilter,java.util.List):V
- p:add(com.intellij.psi.PsiElement):V
- execute(com.intellij.psi.PsiElement):Z
- getResults():java.util.List
- shouldProcess(java.lang.Class):Z
com.intellij.psi.search.ProjectAwareVirtualFile
- a:isInProject(com.intellij.openapi.project.Project):Z
c:com.intellij.psi.search.ProjectScopeImpl
- com.intellij.psi.search.GlobalSearchScope
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.FileIndexFacade):V
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getDisplayName():java.lang.String
- getUnloadedModulesBelongingToScope():java.util.Collection
- intersectWith(com.intellij.psi.search.GlobalSearchScope):com.intellij.psi.search.GlobalSearchScope
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
- uniteWith(com.intellij.psi.search.GlobalSearchScope):com.intellij.psi.search.GlobalSearchScope
com.intellij.psi.search.PsiFileSystemItemProcessor
- com.intellij.psi.search.PsiElementProcessor
- a:acceptItem(java.lang.String,Z):Z
c:com.intellij.psi.stubs.CoreStubTreeLoader
- com.intellij.psi.stubs.StubTreeLoader
- <init>():V
- build(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.PsiFile):com.intellij.psi.stubs.ObjectStubTree
- canHaveStub(com.intellij.openapi.vfs.VirtualFile):Z
- readFromVFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.stubs.ObjectStubTree
- readOrBuild(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.PsiFile):com.intellij.psi.stubs.ObjectStubTree
- rebuildStubTree(com.intellij.openapi.vfs.VirtualFile):V
c:com.intellij.psi.stubs.DefaultStubBuilder
- com.intellij.psi.StubBuilder
- <init>():V
- buildStubTree(com.intellij.psi.PsiFile):com.intellij.psi.stubs.StubElement
- pf:buildStubTreeFor(com.intellij.lang.ASTNode,com.intellij.psi.stubs.StubElement):com.intellij.psi.stubs.StubElement
- p:createStubForFile(com.intellij.psi.PsiFile):com.intellij.psi.stubs.StubElement
- skipChildProcessingWhenBuildingStubs(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):Z
pc:com.intellij.psi.stubs.DefaultStubBuilder$StubBuildingWalkingVisitor
- p:<init>(com.intellij.psi.stubs.DefaultStubBuilder,com.intellij.lang.ASTNode,com.intellij.psi.stubs.StubElement):V
- f:buildStubTree():V
- p:createStub(com.intellij.psi.stubs.StubElement,com.intellij.lang.ASTNode):com.intellij.psi.stubs.StubElement
- pf:peekNextElement():com.intellij.lang.ASTNode
- p:visitNode(com.intellij.psi.stubs.StubElement,com.intellij.lang.ASTNode,Z):V
c:com.intellij.psi.stubs.LightStubBuilder
- com.intellij.psi.StubBuilder
- sf:FORCED_AST:java.lang.ThreadLocal
- <init>():V
- p:buildStubTree(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.stubs.StubElement):V
- buildStubTree(com.intellij.psi.PsiFile):com.intellij.psi.stubs.StubElement
- p:createStubForFile(com.intellij.psi.PsiFile,com.intellij.lang.LighterAST):com.intellij.psi.stubs.StubElement
- skipChildProcessingWhenBuildingStubs(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):Z
- p:skipChildProcessingWhenBuildingStubs(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.lang.LighterASTNode):Z
c:com.intellij.psi.stubs.ObjectStubTree
- pf:myRoot:com.intellij.psi.stubs.ObjectStubBase
- <init>(com.intellij.psi.stubs.ObjectStubBase,Z):V
- p:enumerateStubs(com.intellij.psi.stubs.Stub):java.util.List
- getDebugInfo():java.lang.String
- getPlainList():java.util.List
- getRoot():com.intellij.psi.stubs.Stub
- s:getStubTree(com.intellij.psi.stubs.ObjectStubBase):com.intellij.psi.stubs.ObjectStubTree
- setDebugInfo(java.lang.String):V
c:com.intellij.psi.stubs.PsiFileStubImpl
- com.intellij.psi.stubs.StubBase
- com.intellij.psi.stubs.PsiFileStub
- <init>(com.intellij.psi.PsiFile):V
- clearPsi(java.lang.String):V
- f:getDiagnostics():java.lang.String
- getInvalidationReason():java.lang.String
- getPsi():com.intellij.psi.PsiFile
- getStubType():com.intellij.psi.stubs.IStubElementType
- getType():com.intellij.psi.tree.IStubFileElementType
- rootsAreSet():Z
- setPsi(com.intellij.psi.PsiFile):V
- setStubRoots(com.intellij.psi.stubs.PsiFileStub[]):V
f:com.intellij.psi.stubs.StubTextInconsistencyException
- java.lang.RuntimeException
- com.intellij.openapi.diagnostic.ExceptionWithAttachments
- s:checkStubTextConsistency(com.intellij.psi.PsiFile):V
- s:checkStubTextConsistency(com.intellij.psi.PsiFile,com.intellij.psi.stubs.StubInconsistencyReporter$SourceOfCheck):V
- s:checkStubTextConsistency(com.intellij.psi.PsiFile,com.intellij.psi.stubs.StubInconsistencyReporter$SourceOfCheck,com.intellij.psi.stubs.StubInconsistencyReporter$EnforcedInconsistencyType):V
- getAttachments():com.intellij.openapi.diagnostic.Attachment[]
- getStubsFromPsi():java.lang.String
- getStubsFromText():java.lang.String
c:com.intellij.psi.stubs.StubTree
- com.intellij.psi.stubs.ObjectStubTree
- <init>(com.intellij.psi.stubs.PsiFileStub):V
- <init>(com.intellij.psi.stubs.PsiFileStub,Z):V
- p:enumerateStubs(com.intellij.psi.stubs.Stub):java.util.List
- getRoot():com.intellij.psi.stubs.PsiFileStub
- getSpine():com.intellij.psi.impl.source.StubbedSpine
f:com.intellij.psi.stubs.StubTreeBuilder
- s:buildStubTree(com.intellij.util.indexing.FileContent):com.intellij.psi.stubs.Stub
- s:buildStubTree(com.intellij.util.indexing.FileContent,com.intellij.psi.stubs.StubBuilderType):com.intellij.psi.stubs.Stub
- s:getStubBuilderType(com.intellij.util.indexing.IndexedFile,Z):com.intellij.psi.stubs.StubBuilderType
- s:getStubbedRoots(com.intellij.psi.FileViewProvider):java.util.List
a:com.intellij.psi.stubs.StubTreeLoader
- <init>():V
- a:build(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.PsiFile):com.intellij.psi.stubs.ObjectStubTree
- a:canHaveStub(com.intellij.openapi.vfs.VirtualFile):Z
- s:getFileViewProviderMismatchDiagnostics(com.intellij.psi.FileViewProvider):java.lang.String
- p:getIndexingStampInfo(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.stubs.IndexingStampInfo
- s:getInstance():com.intellij.psi.stubs.StubTreeLoader
- p:hasPsiInManyProjects(com.intellij.openapi.vfs.VirtualFile):Z
- p:isTooLarge(com.intellij.openapi.vfs.VirtualFile):Z
- a:readFromVFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.stubs.ObjectStubTree
- a:readOrBuild(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.PsiFile):com.intellij.psi.stubs.ObjectStubTree
- a:rebuildStubTree(com.intellij.openapi.vfs.VirtualFile):V
c:com.intellij.psi.stubs.StubTreeLoader$StubTreeAndIndexUnmatchCoarseException
- java.lang.Exception
- createCompleteException():java.lang.RuntimeException
c:com.intellij.psi.templateLanguages.OuterLanguageElementImpl
- com.intellij.psi.impl.source.tree.LeafPsiElement
- com.intellij.psi.templateLanguages.OuterLanguageElement
- <init>(com.intellij.psi.tree.IElementType,java.lang.CharSequence):V
- accept(com.intellij.psi.PsiElementVisitor):V
com.intellij.psi.templateLanguages.TreePatcher
- a:insert(com.intellij.psi.impl.source.tree.CompositeElement,com.intellij.psi.impl.source.tree.TreeElement,com.intellij.psi.templateLanguages.OuterLanguageElement):V
- split(com.intellij.psi.impl.source.tree.LeafElement,I,com.intellij.util.CharTable):com.intellij.psi.impl.source.tree.LeafElement
a:com.intellij.psi.text.BlockSupport
- sf:TREE_TO_BE_REPARSED:com.intellij.openapi.util.Key
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.text.BlockSupport
- s:isTooDeep(com.intellij.openapi.util.UserDataHolder):Z
- a:reparseRange(com.intellij.psi.PsiFile,I,I,java.lang.CharSequence):V
- a:reparseRange(com.intellij.psi.PsiFile,com.intellij.lang.FileASTNode,com.intellij.openapi.util.TextRange,java.lang.CharSequence,com.intellij.openapi.progress.ProgressIndicator,java.lang.CharSequence):com.intellij.psi.impl.DiffLog
f:com.intellij.psi.text.BlockSupport$ReparsedSuccessfullyException
- java.lang.RuntimeException
- com.intellij.openapi.diagnostic.ControlFlowException
- fillInStackTrace():java.lang.Throwable
com.intellij.psi.tree.ChildRoleBase
- sf:NONE:I
a:com.intellij.psi.tree.IErrorCounterReparseableElementType
- com.intellij.psi.tree.IReparseableElementType
- sf:FATAL_ERROR:I
- sf:NO_ERRORS:I
- <init>(java.lang.String,com.intellij.lang.Language):V
- a:getErrorsCount(java.lang.CharSequence,com.intellij.lang.Language,com.intellij.openapi.project.Project):I
- isParsable(java.lang.CharSequence,com.intellij.lang.Language,com.intellij.openapi.project.Project):Z
c:com.intellij.psi.tree.ILightStubFileElementType
- com.intellij.psi.tree.IStubFileElementType
- <init>(com.intellij.lang.Language):V
- <init>(java.lang.String,com.intellij.lang.Language):V
- getBuilder():com.intellij.psi.stubs.LightStubBuilder
- parseContentsLight(com.intellij.lang.ASTNode):com.intellij.util.diff.FlyweightCapableTreeStructure
c:com.intellij.psi.tree.IStubFileElementType
- com.intellij.psi.tree.StubFileElementType
- <init>(com.intellij.lang.Language):V
- <init>(java.lang.String,com.intellij.lang.Language):V
- deserialize(com.intellij.psi.stubs.StubInputStream,com.intellij.psi.stubs.StubElement):com.intellij.psi.stubs.PsiFileStub
- getBuilder():com.intellij.psi.StubBuilder
- getExternalId():java.lang.String
- getStubVersion():I
- s:getTemplateStubBaseVersion():I
- indexStub(com.intellij.psi.stubs.PsiFileStub,com.intellij.psi.stubs.IndexSink):V
- serialize(com.intellij.psi.stubs.PsiFileStub,com.intellij.psi.stubs.StubOutputStream):V
- shouldBuildStubFor(com.intellij.openapi.vfs.VirtualFile):Z
c:com.intellij.psi.tree.OuterLanguageElementType
- com.intellij.psi.tree.IElementType
- com.intellij.psi.tree.ILeafElementType
- <init>(java.lang.String,com.intellij.lang.Language):V
- p:<init>(java.lang.String,com.intellij.lang.Language,Z):V
- createLeafNode(java.lang.CharSequence):com.intellij.lang.ASTNode
com.intellij.psi.tree.RoleFinder
- a:findChild(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
com.intellij.psi.util.PsiAwareObject
- a:findElement(com.intellij.openapi.project.Project):com.intellij.psi.PsiElement
com.intellij.refactoring.rename.BindablePsiReference
- com.intellij.psi.PsiReference
com.intellij.refactoring.rename.FragmentaryPsiReference
- com.intellij.refactoring.rename.BindablePsiReference
- a:isFragmentOnlyRename():Z
- a:isReadOnlyFragment():Z
a:com.intellij.util.CachedValueBase
- <init>():V
- clear():V
- pa:doCompute(java.lang.Object):com.intellij.psi.util.CachedValueProvider$Result
- p:getIdempotenceFailureContext():java.lang.String
- pa:getRawData():com.intellij.util.CachedValueBase$Data
- p:getTimeStamp(java.lang.Object):J
- f:getUpToDateOrNull():com.intellij.util.CachedValueBase$Data
- a:getValueProvider():java.lang.Object
- p:getValueWithLock(java.lang.Object):java.lang.Object
- hasUpToDateValue():Z
- p:isDependencyOutOfDate(java.lang.Object,J):Z
- a:isFromMyProject(com.intellij.openapi.project.Project):Z
- pa:isTrackValue():Z
- p:isUpToDate(com.intellij.util.CachedValueBase$Data):Z
- p:normalizeDependencies(java.lang.Object,java.lang.Object[]):java.lang.Object[]
- pa:setData(com.intellij.util.CachedValueBase$Data):V
- setValue(com.intellij.psi.util.CachedValueProvider$Result):java.lang.Object
Fa:com.intellij.util.CachedValueBase$Data
- com.intellij.openapi.util.Getter
- get():java.lang.Object
- a:getDependencies():java.lang.Object[]
- a:getTimeStamps():J[]
- getValue():java.lang.Object
c:com.intellij.util.CachedValueImpl
- com.intellij.util.CachedValueBase
- com.intellij.psi.util.CachedValue
- <init>(com.intellij.psi.util.CachedValueProvider):V
- p:doCompute(java.lang.Object):com.intellij.psi.util.CachedValueProvider$Result
- p:getRawData():com.intellij.util.CachedValueBase$Data
- getValue():java.lang.Object
- getValueProvider():com.intellij.psi.util.CachedValueProvider
- isFromMyProject(com.intellij.openapi.project.Project):Z
- p:isTrackValue():Z
- p:setData(com.intellij.util.CachedValueBase$Data):V
f:com.intellij.util.CachedValuesManagerImpl
- com.intellij.psi.util.CachedValuesManager
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.util.CachedValuesFactory):V
- createCachedValue(com.intellij.openapi.util.UserDataHolder,com.intellij.psi.util.CachedValueProvider,Z):com.intellij.psi.util.CachedValue
- createCachedValue(com.intellij.psi.util.CachedValueProvider,Z):com.intellij.psi.util.CachedValue
- createParameterizedCachedValue(com.intellij.psi.util.ParameterizedCachedValueProvider,Z):com.intellij.psi.util.ParameterizedCachedValue
- getCachedValue(com.intellij.openapi.util.UserDataHolder,com.intellij.openapi.util.Key,com.intellij.psi.util.CachedValueProvider,Z):java.lang.Object
f:com.intellij.util.DocumentEventUtil
- s:getMoveOffsetAfterDeletion(com.intellij.openapi.editor.event.DocumentEvent):I
- s:getMoveOffsetBeforeInsertion(com.intellij.openapi.editor.event.DocumentEvent):I
- s:isMoveDeletion(com.intellij.openapi.editor.event.DocumentEvent):Z
- s:isMoveInsertion(com.intellij.openapi.editor.event.DocumentEvent):Z
f:com.intellij.util.DocumentUtil
- s:alignToCodePointBoundary(com.intellij.openapi.editor.Document,I):I
- s:calculateOffset(com.intellij.openapi.editor.Document,I,I,I):I
- s:executeInBulk(com.intellij.openapi.editor.Document,java.lang.Runnable):V
- s:executeInBulk(com.intellij.openapi.editor.Document,Z,java.lang.Runnable):V
- s:getFirstNonSpaceCharOffset(com.intellij.openapi.editor.Document,I):I
- s:getFirstNonSpaceCharOffset(com.intellij.openapi.editor.Document,I,I):I
- s:getIndent(com.intellij.openapi.editor.Document,I):java.lang.CharSequence
- s:getIndentLength(com.intellij.openapi.editor.Document,I):I
- s:getLineEndOffset(I,com.intellij.openapi.editor.Document):I
- s:getLineStartIndentedOffset(com.intellij.openapi.editor.Document,I):I
- s:getLineStartOffset(I,com.intellij.openapi.editor.Document):I
- s:getLineTextRange(com.intellij.openapi.editor.Document,I):com.intellij.openapi.util.TextRange
- s:getNextCodePointOffset(com.intellij.openapi.editor.Document,I):I
- s:getPreviousCodePointOffset(com.intellij.openapi.editor.Document,I):I
- s:isAtLineEnd(I,com.intellij.openapi.editor.Document):Z
- s:isAtLineStart(I,com.intellij.openapi.editor.Document):Z
- s:isInsideCharacterPair(com.intellij.openapi.editor.Document,I):Z
- s:isInsideSurrogatePair(com.intellij.openapi.editor.Document,I):Z
- s:isLineEmpty(com.intellij.openapi.editor.Document,I):Z
- s:isSurrogatePair(com.intellij.openapi.editor.Document,I):Z
- s:isValidLine(I,com.intellij.openapi.editor.Document):Z
- s:isValidOffset(I,com.intellij.openapi.editor.Document):Z
- s:writeInRunUndoTransparentAction(java.lang.Runnable):V
f:com.intellij.util.IdempotenceChecker
- <init>():V
- s:applyForRandomCheck(java.lang.Object,java.lang.Object,com.intellij.openapi.util.Computable):V
- s:areRandomChecksEnabled():Z
- s:checkEquivalence(java.lang.Object,java.lang.Object,java.lang.Class,com.intellij.openapi.util.Computable):V
- s:computeWithLogging(com.intellij.openapi.util.Computable):com.intellij.util.IdempotenceChecker$ResultWithLog
- s:disableRandomChecksUntil(com.intellij.openapi.Disposable):V
- s:isCurrentThreadInsideRandomCheck():Z
- s:isLoggingEnabled():Z
- s:logTrace(java.lang.String):V
f:com.intellij.util.IdempotenceChecker$ResultWithLog
- equals(java.lang.Object):Z
- getResult():java.lang.Object
- hashCode():I
f:com.intellij.util.PatchedWeakReference
- java.lang.ref.WeakReference
- java.util.function.Supplier
- <init>(java.lang.Object):V
c:com.intellij.util.SequentialModalProgressTask
- com.intellij.openapi.progress.Task$Modal
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z):V
- doRun(com.intellij.openapi.progress.ProgressIndicator):V
- getIndicator():com.intellij.openapi.progress.ProgressIndicator
- p:prepare(com.intellij.util.SequentialTask):V
- run(com.intellij.openapi.progress.ProgressIndicator):V
- setMinIterationTime(J):V
- setTask(com.intellij.util.SequentialTask):V
com.intellij.util.SequentialTask
- a:isDone():Z
- a:iteration():Z
- iteration(com.intellij.openapi.progress.ProgressIndicator):Z
- prepare():V
- stop():V
f:com.intellij.util.SofterReference
- <init>(java.lang.Object):V
- get():java.lang.Object
c:com.intellij.util.codeInsight.CommentUtilCore
- <init>():V
- s:isComment(com.intellij.lang.ASTNode):Z
- s:isComment(com.intellij.psi.PsiElement):Z
- s:isCommentTextElement(com.intellij.psi.PsiElement):Z
c:com.intellij.util.download.impl.DownloadableFileDescriptionImpl
- com.intellij.util.download.DownloadableFileDescription
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- generateFileName(com.intellij.openapi.util.Condition):java.lang.String
- getDefaultFileName():java.lang.String
- getDownloadUrl():java.lang.String
- getPresentableDownloadUrl():java.lang.String
- getPresentableFileName():java.lang.String
- hashCode():I
c:com.intellij.util.download.impl.DownloadableFileSetDescriptionImpl
- com.intellij.util.download.DownloadableFileSetDescription
- pf:myFiles:java.util.List
- pf:myVersionString:java.lang.String
- <init>(java.lang.String,java.lang.String,java.util.List):V
- getFiles():java.util.List
- getName():java.lang.String
- getVersionString():java.lang.String
c:com.intellij.util.graph.impl.CycleFinder
- <init>(com.intellij.util.graph.Graph):V
- getNodeCycles(java.lang.Object):java.util.Set
c:com.intellij.util.graph.impl.GraphFactoryImpl
- com.intellij.util.graph.GraphFactory
- <init>():V
- copyOf(com.intellij.util.graph.Network):com.intellij.util.graph.MutableNetwork
- directedNetwork():com.intellij.util.graph.NetworkBuilder
- emptyMutableNetwork():com.intellij.util.graph.MutableNetwork
- emptyNetwork():com.intellij.util.graph.Network
- newNetworkWithSameProperties(com.intellij.util.graph.Network):com.intellij.util.graph.NetworkBuilder
- toNetwork(com.intellij.util.graph.Graph):com.intellij.util.graph.MutableNetwork
- undirectedNetwork():com.intellij.util.graph.NetworkBuilder
f:com.intellij.util.graph.impl.HierarchyTreeImpl
- com.intellij.util.graph.HierarchyTree
- <init>():V
- connect(java.lang.Object,java.lang.Object):V
- connect(java.util.Collection,java.lang.Object):V
- getAllHierarchyNodes():java.util.Set
- getChildren(java.lang.Object,Z):java.util.Set
- getDepth(java.lang.Object):I
- getParent(java.lang.Object):java.lang.Object
- removeGroupWithItsNodes(java.lang.Object):V
- ungroupAllNodes():V
- ungroupNodes(java.lang.Object):V
- ungroupNodes(java.util.Collection):V
f:com.intellij.util.indexing.FileContentImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.util.indexing.IndexedFile
- com.intellij.util.indexing.PsiDependentFileContent
- s:createByContent(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.NotNullComputable):com.intellij.util.indexing.FileContentImpl
- s:createByContent(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.NotNullComputable,com.intellij.openapi.project.Project):com.intellij.util.indexing.FileContent
- s:createByContent(com.intellij.openapi.vfs.VirtualFile,B[]):com.intellij.util.indexing.FileContent
- s:createByFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.util.indexing.FileContent
- s:createByFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.util.indexing.FileContent
- s:createByText(com.intellij.openapi.vfs.VirtualFile,java.lang.CharSequence,com.intellij.openapi.project.Project):com.intellij.util.indexing.FileContent
- s:createFileFromText(com.intellij.openapi.project.Project,java.lang.CharSequence,com.intellij.openapi.fileTypes.LanguageFileType,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.psi.PsiFile
- getCharset():java.nio.charset.Charset
- getContent():B[]
- getContentAsText():java.lang.CharSequence
- getIndexedFileHash():B[]
- getLighterAST():com.intellij.lang.LighterAST
- getPsiFile():com.intellij.psi.PsiFile
- isTransientContent():Z
- setIndexedFileHash(B[]):V
f:com.intellij.util.indexing.SubstitutedFileType
- com.intellij.openapi.fileTypes.LanguageFileType
- equals(java.lang.Object):Z
- getCharset(com.intellij.openapi.vfs.VirtualFile,B[]):java.lang.String
- getDefaultExtension():java.lang.String
- getDescription():java.lang.String
- getFileType():com.intellij.openapi.fileTypes.FileType
- getIcon():javax.swing.Icon
- getName():java.lang.String
- getOriginalFileType():com.intellij.openapi.fileTypes.FileType
- hashCode():I
- isSameFileType():Z
- s:substituteFileType(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.project.Project):com.intellij.openapi.fileTypes.FileType
f:com.intellij.util.profiling.ResolveProfiler
- <init>():V
- s:finish():J
- s:getInfo(java.lang.String,com.intellij.psi.PsiElement,J):java.lang.String
- s:start():V
- s:write(java.lang.String):V
- s:write(java.lang.String,com.intellij.psi.PsiElement,J):V
f:com.intellij.util.ref.DebugReflectionUtil
- <init>():V
- s:walkObjects(I,java.util.Map,java.lang.Class,java.util.function.Predicate,com.intellij.util.PairProcessor):Z
c:com.intellij.util.ref.DebugReflectionUtil$BackLink
com.intellij.util.ref.IgnoredTraverseEntry
- java.util.function.Predicate
c:com.intellij.util.ref.IgnoredTraverseReference
- com.intellij.util.ref.IgnoredTraverseEntry
- <init>(java.lang.String,I):V
- test(com.intellij.util.ref.DebugReflectionUtil$BackLink):Z
f:org.jetbrains.ide.PooledThreadExecutor
- sf:INSTANCE:java.util.concurrent.ExecutorService
- <init>():V
org.picocontainer.MutablePicoContainer
- a:getComponentAdapter(java.lang.Object):org.picocontainer.ComponentAdapter
- registerComponentImplementation(java.lang.Class):org.picocontainer.ComponentAdapter
- a:registerComponentImplementation(java.lang.Object,java.lang.Class):org.picocontainer.ComponentAdapter
- a:unregisterComponent(java.lang.Object):org.picocontainer.ComponentAdapter
