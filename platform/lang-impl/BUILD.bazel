### auto-generated section `build intellij.platform.lang.impl` start
load("@rules_jvm//:jvm.bzl", "jvm_library", "kt_javac_options", "resourcegroup")

kt_javac_options(
  name = "custom-javac-options",
  x_ep_disable_all_checks = True,
  warn = "off",
  add_exports = [
    "java.desktop/sun.awt.image=ALL-UNNAMED",
    "java.desktop/sun.awt=ALL-UNNAMED",
  ],
  no_proc = True
)

resourcegroup(
  name = "lang-impl_resources",
  srcs = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "lang-impl",
  module_name = "intellij.platform.lang.impl",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java", "src/**/*.form", "gen/**/*.kt", "gen/**/*.java"], allow_empty = True),
  resources = [":lang-impl_resources"],
  javac_opts = ":custom-javac-options",
  deps = [
    "//platform/boot",
    "//platform/core-api:core",
    "//platform/diff-api:diff",
    "//platform/editor-ui-api:editor-ui",
    "//jps/model-api:model",
    "//jps/model-serialization",
    "//platform/lang-api:lang",
    "//libraries/oro-matcher",
    "//libraries/velocity",
    "//platform/platform-impl:ide-impl",
    "//platform/lang-core",
    "//platform/lvcs-api:lvcs",
    "//platform/macro",
    "//platform/projectModel-api:projectModel",
    "//platform/usageView",
    "//libraries/cli-parser",
    "//platform/indexing-api:indexing",
    "//platform/indexing-impl",
    "//platform/projectModel-impl",
    "//platform/refactoring",
    "//platform/usageView-impl",
    "//platform/util/diff",
    "//platform/workspace/jps",
    "@lib//:swingx",
    "//libraries/guava",
    "//libraries/gson",
    "//jps/model-impl",
    "//platform/analysis-impl",
    "//platform/structure-view-impl:structureView-impl",
    "//libraries/commons/lang3",
    "//libraries/commons/logging",
    "//platform/diff-impl",
    "//platform/built-in-server-api:builtInServer",
    "//libraries/xstream",
    "//libraries/miglayout-swing",
    "//platform/ide-core/plugins",
    "@lib//:jna",
    "//libraries/lz4",
    "//platform/util",
    "//platform/service-container",
    "//platform/execution-impl",
    "//libraries/jackson/jackson",
    "//libraries/jackson/databind",
    "//libraries/jackson/module-kotlin:libraries-jackson-module-kotlin",
    "//libraries/xz",
    "//platform/util/progress",
    "//platform/observable",
    "//libraries/stream",
    "//platform/statistics",
    "//platform/ide-core-impl",
    "//platform/core-impl",
    "@lib//:kotlinx-coroutines-core",
    "//libraries/fastutil",
    "//libraries/pty4j",
    "//platform/core-ui",
    "//platform/code-style-api:codeStyle",
    "//platform/code-style-impl:codeStyle-impl",
    "//libraries/caffeine",
    "//platform/platform-util-io-impl:ide-util-io-impl",
    "//platform/tracing:tracing-rt",
    "//platform/rd-platform-community:rd-community",
    "//platform/util/jdom",
    "//platform/util-class-loader:util-classLoader",
    "//platform/util/zip",
    "@lib//:opentelemetry",
    "//platform/platform-impl/codeinsight-inline:ide-codeinsight-inline",
    "@lib//:opentelemetry-semconv",
    "//platform/diagnostic/telemetry",
    "//platform/diagnostic/telemetry-impl",
    "//platform/feedback",
    "//libraries/kotlinx/html",
    "//platform/util/text-matching",
    "//platform/util/base",
    "@lib//:slf4j-api",
    "//libraries/jsoup",
    "//platform/backend/workspace",
    "//platform/diagnostic",
    "//libraries/hash4j",
    "//platform/editor-ui-ex:editor-ex",
    "//libraries/kotlinx/serialization/protobuf",
    "//libraries/kotlinx/serialization/core",
    "//libraries/kotlinx/serialization/json",
    "//platform/configuration-store-impl:configurationStore-impl",
    "//platform/util/coroutines",
    "//platform/analysis-api:analysis",
    "//platform/util/xmlDom",
    "//platform/backend/observation",
    "//libraries/kotlinx/collections-immutable:libraries-kotlinx-collections-immutable",
    "//platform/util/storages",
    "//platform/platform-impl/internal",
    "//platform/util/concurrency",
    "//platform/platform-impl/ui",
    "//platform/eel-provider",
    "//platform/foldings",
    "//platform/syntax/syntax-api:syntax",
    "//platform/syntax/syntax-util:util",
    "//platform/syntax/syntax-psi:psi",
    "//platform/workspace/storage",
    "//platform/experiment",
    "//platform/platform-impl/concurrency",
    "//platform/project/shared:project",
    "//platform/kernel/shared:kernel",
    "//platform/platform-impl/rpc",
  ],
  exports = [
    "//platform/lang-api:lang",
    "//platform/analysis-impl",
    "//platform/util",
  ]
)
### auto-generated section `build intellij.platform.lang.impl` end

### auto-generated section `build intellij.platform.lang.tests` start
jvm_library(
  name = "lang-tests",
  visibility = ["//visibility:public"],
  srcs = glob([], allow_empty = True)
)

jvm_library(
  name = "lang-tests_test_lib",
  module_name = "intellij.platform.lang.tests",
  visibility = ["//visibility:public"],
  srcs = glob(["testSources/**/*.kt", "testSources/**/*.java", "testSources/**/*.form"], allow_empty = True),
  deps = [
    "//platform/analysis-api:analysis",
    "//platform/boot",
    "//platform/code-style-api:codeStyle",
    "//platform/util/concurrency",
    "//platform/util/concurrency:concurrency_test_lib",
    "//platform/core-api:core",
    "//platform/editor-ui-api:editor-ui",
    "//platform/execution-impl",
    "//jps/model-api:model",
    "//jps/model-serialization",
    "//platform/lang-api:lang",
    "//platform/lang-core",
    "//platform/macro",
    "//platform/projectModel-api:projectModel",
    "//platform/usageView-impl",
    "//platform/vcs-api:vcs",
    "//libraries/oro-matcher",
    "@lib//:junit4",
    "//platform/platform-impl:ide-impl",
    "//platform/platform-impl:ide-impl_test_lib",
    "//platform/lang-impl",
    "//platform/usageView",
    "//libraries/cli-parser",
    "//platform/indexing-api:indexing",
    "//platform/indexing-impl",
    "//platform/refactoring",
    "@lib//:assert_j",
    "//platform/projectModel-impl",
    "//platform/ide-core-impl",
    "//libraries/guava",
    "//platform/editor-ui-ex:editor-ex",
    "//libraries/gson",
    "//jps/model-impl",
    "//platform/analysis-impl",
    "//platform/structure-view-impl:structureView-impl",
    "//libraries/commons/logging",
    "//platform/testFramework",
    "//platform/testFramework:testFramework_test_lib",
    "@lib//:jmock",
    "@lib//:jmock-legacy",
    "@lib//:jmock-junit4",
    "//platform/testFramework/extensions:testExtensions",
    "//libraries/jackson/jackson",
    "//libraries/jackson/databind",
    "//libraries/jackson/module-kotlin:libraries-jackson-module-kotlin",
    "//libraries/xz",
    "//libraries/stream",
    "@lib//:kotlinx-coroutines-core",
    "//platform/statistics",
    "//platform/statistics:statistics_test_lib",
    "//libraries/fastutil",
    "//platform/util-class-loader:util-classLoader",
    "//platform/core-ui",
    "//platform/workspace/jps",
    "//platform/platform-util-io:ide-util-io",
    "//platform/util/jdom",
    "//platform/lang-impl/testEntities",
    "//platform/lang-impl/testEntities:testEntities_test_lib",
    "//platform/testFramework/junit5",
    "//platform/testFramework/junit5:junit5_test_lib",
    "@lib//:hamcrest",
    "//platform/backend/workspace",
    "@lib//:objenesis",
    "//platform/workspace/storage",
    "//tools/intellij.tools.ide.metrics.benchmark:ide-metrics-benchmark",
    "//tools/intellij.tools.ide.metrics.benchmark:ide-metrics-benchmark_test_lib",
    "//libraries/kotlinx/collections-immutable:libraries-kotlinx-collections-immutable",
    "//libraries/kotlinx/serialization/core",
    "//libraries/kotlinx/serialization/json",
    "//platform/testFramework/junit5/eel",
    "//platform/testFramework/junit5/eel:eel_test_lib",
    "//platform/eel-provider",
    "//platform/statistics/testFramework",
    "//platform/testFramework/junit5/projectStructure",
    "//platform/testFramework/junit5/projectStructure:projectStructure_test_lib",
    "@lib//:kotlinx-coroutines-test",
    "//platform/util/coroutines",
    "@lib//:mockito-kotlin",
    "@lib//:mockito-junit-jupiter",
    "@lib//:mockito",
    "//platform/diagnostic/telemetry",
    "//platform/diagnostic/telemetry:telemetry_test_lib",
    "//platform/core-impl",
  ],
  exports = [
    "//platform/lang-api:lang",
    "//platform/platform-impl:ide-impl",
    "//platform/platform-impl:ide-impl_test_lib",
    "//platform/indexing-impl",
    "//platform/projectModel-impl",
    "//platform/ide-core-impl",
    "//platform/analysis-impl",
    "//platform/structure-view-impl:structureView-impl",
  ]
)
### auto-generated section `build intellij.platform.lang.tests` end

### auto-generated section `test intellij.platform.lang.tests` start
load("@community//build:tests-options.bzl", "jps_test")

jps_test(
  name = "lang-tests_test",
  runtime_deps = [":lang-tests_test_lib"]
)
### auto-generated section `test intellij.platform.lang.tests` end