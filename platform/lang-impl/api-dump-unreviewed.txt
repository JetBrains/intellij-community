f:com.intellij.analysis.AnalysisActionUtils
- <init>():V
- s:getInspectionScope(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.project.Project,java.lang.Boolean):com.intellij.analysis.AnalysisScope
- s:getInspectionScope(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.project.Project,Z):com.intellij.analysis.AnalysisScope
f:com.intellij.analysis.AnalysisUIOptions
- com.intellij.openapi.components.PersistentStateComponent
- ANALYSIS_IN_BACKGROUND:Z
- ANALYZE_INJECTED_CODE:Z
- ANALYZE_TEST_SOURCES:Z
- AUTOSCROLL_TO_SOURCE:Z
- CUSTOM_SCOPE_NAME:java.lang.String
- FILE_MASK:java.lang.String
- FILTER_RESOLVED_ITEMS:Z
- GROUP_BY_SEVERITY:Z
- SCOPE_TYPE:I
- SHOW_STRUCTURE:Z
- SPLITTER_PROPORTION:F
- <init>():V
- createFilterResolvedItemsAction(com.intellij.codeInspection.ui.InspectionResultsView):com.intellij.openapi.actionSystem.AnAction
- createGroupByDirectoryAction(com.intellij.codeInspection.ui.InspectionResultsView):com.intellij.openapi.actionSystem.AnAction
- createGroupBySeverityAction(com.intellij.codeInspection.ui.InspectionResultsView):com.intellij.openapi.actionSystem.AnAction
- getAutoScrollToSourceHandler():com.intellij.ui.AutoScrollToSourceHandler
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.analysis.AnalysisUIOptions
- getState():com.intellij.analysis.AnalysisUIOptions
- loadState(com.intellij.analysis.AnalysisUIOptions):V
a:com.intellij.analysis.BaseAnalysisAction
- com.intellij.openapi.actionSystem.AnAction
- p:<init>(java.lang.String,java.lang.String):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier):V
- p:acceptNonProjectDirectories():Z
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:analyze(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope):V
- p:canceled():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getAdditionalActionSettings(com.intellij.openapi.project.Project,com.intellij.analysis.BaseAnalysisActionDialog):javax.swing.JComponent
- getAnalysisDialog(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,Z,com.intellij.analysis.AnalysisUIOptions,java.util.List):com.intellij.analysis.BaseAnalysisActionDialog
- p:getDialogTitle():java.lang.String
- p:getHelpTopic():java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.analysis.BaseAnalysisActionDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope,java.lang.String,Z,com.intellij.analysis.AnalysisUIOptions,com.intellij.psi.PsiElement):V
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,java.util.List,com.intellij.analysis.AnalysisUIOptions,Z):V
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,java.util.List,com.intellij.analysis.AnalysisUIOptions,Z,Z):V
- p:createCenterPanel():javax.swing.JComponent
- p:getAdditionalActionSettings(com.intellij.openapi.project.Project):javax.swing.JComponent
- getOKButtonText():java.lang.String
- p:getOptions():com.intellij.analysis.AnalysisUIOptions
- getPreferredFocusedComponent():javax.swing.JComponent
- getScope(com.intellij.analysis.AnalysisScope):com.intellij.analysis.AnalysisScope
- getScope(com.intellij.analysis.AnalysisUIOptions,com.intellij.analysis.AnalysisScope,com.intellij.openapi.project.Project,com.intellij.openapi.module.Module):com.intellij.analysis.AnalysisScope
- isAnalyzeInjectedCode():Z
- isInspectTestSources():Z
- isProjectScopeSelected():Z
- setAnalyzeInjectedCode(Z):V
- setShowInspectInjectedCode(Z):V
- s:standardItems(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope,com.intellij.openapi.module.Module,com.intellij.psi.PsiElement):java.util.List
f:com.intellij.analysis.PerformAnalysisInBackgroundOption
- com.intellij.openapi.progress.PerformInBackgroundOption
- <init>(com.intellij.openapi.project.Project):V
- processSentToBackground():V
- shouldStartInBackground():Z
f:com.intellij.analysis.dialog.CustomScopeItem
- com.intellij.analysis.dialog.ModelScopeItem
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):V
- getPreselectedCustomScope():java.lang.String
- getProject():com.intellij.openapi.project.Project
- getScope():com.intellij.analysis.AnalysisScope
- getSearchInLibFlag():Z
- setSearchScopeSupplier(java.util.function.Supplier):V
com.intellij.analysis.dialog.ModelScopeItem
- a:getScope():com.intellij.analysis.AnalysisScope
com.intellij.analysis.dialog.ModelScopeItemPresenter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- s:createOrderedViews(java.util.List,com.intellij.openapi.Disposable):java.util.List
- a:getAdditionalComponents(javax.swing.JRadioButton,com.intellij.analysis.dialog.ModelScopeItem,com.intellij.openapi.Disposable):java.util.List
- a:getButton(com.intellij.analysis.dialog.ModelScopeItem):javax.swing.JRadioButton
- a:getScopeId():I
- a:isApplicable(com.intellij.analysis.dialog.ModelScopeItem):Z
- tryCreate(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope,com.intellij.openapi.module.Module,com.intellij.psi.PsiElement):com.intellij.analysis.dialog.ModelScopeItem
f:com.intellij.analysis.dialog.ModuleScopeItem
- com.intellij.analysis.dialog.ModelScopeItem
- f:Module:com.intellij.openapi.module.Module
- <init>(com.intellij.openapi.module.Module):V
- getScope():com.intellij.analysis.AnalysisScope
- s:tryCreate(com.intellij.openapi.module.Module):com.intellij.analysis.dialog.ModelScopeItem
f:com.intellij.analysis.dialog.ProjectScopeItem
- com.intellij.analysis.dialog.ModelScopeItem
- f:project:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project):V
- getScope():com.intellij.analysis.AnalysisScope
com.intellij.analysis.problemsView.FileProblem
- com.intellij.analysis.problemsView.Problem
- getColumn():I
- a:getFile():com.intellij.openapi.vfs.VirtualFile
- getLine():I
com.intellij.analysis.problemsView.Problem
- getDescription():java.lang.String
- getGroup():java.lang.String
- getIcon():javax.swing.Icon
- a:getProvider():com.intellij.analysis.problemsView.ProblemsProvider
- a:getText():java.lang.String
com.intellij.analysis.problemsView.ProblemsCollector
- com.intellij.analysis.problemsView.ProblemsListener
- sf:Companion:com.intellij.analysis.problemsView.ProblemsCollector$Companion
- a:getFileProblemCount(com.intellij.openapi.vfs.VirtualFile):I
- a:getFileProblems(com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.analysis.problemsView.ProblemsCollector
- a:getOtherProblemCount():I
- a:getOtherProblems():java.util.Collection
- a:getProblemCount():I
- a:getProblemFiles():java.util.Collection
f:com.intellij.analysis.problemsView.ProblemsCollector$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.analysis.problemsView.ProblemsCollector
com.intellij.analysis.problemsView.ProblemsListener
- sf:Companion:com.intellij.analysis.problemsView.ProblemsListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- a:problemAppeared(com.intellij.analysis.problemsView.Problem):V
- a:problemDisappeared(com.intellij.analysis.problemsView.Problem):V
- a:problemUpdated(com.intellij.analysis.problemsView.Problem):V
f:com.intellij.analysis.problemsView.ProblemsListener$Companion
com.intellij.analysis.problemsView.ProblemsProvider
- com.intellij.openapi.Disposable
- dispose():V
- a:getProject():com.intellij.openapi.project.Project
f:com.intellij.analysis.problemsView.toolWindow.FileNode
- com.intellij.analysis.problemsView.toolWindow.Node
- <init>(com.intellij.analysis.problemsView.toolWindow.Node,com.intellij.openapi.vfs.VirtualFile):V
- equals(java.lang.Object):Z
- getChildren():java.util.Collection
- getDescriptor():com.intellij.openapi.fileEditor.OpenFileDescriptor
- f:getFile():com.intellij.openapi.vfs.VirtualFile
- getLeafState():com.intellij.ui.tree.LeafState
- getName():java.lang.String
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- hashCode():I
f:com.intellij.analysis.problemsView.toolWindow.HighlightingPanel
- com.intellij.analysis.problemsView.toolWindow.ProblemsViewPanel
- com.intellij.ide.PowerSaveMode$Listener
- com.intellij.openapi.fileEditor.FileEditorManagerListener
- sf:Companion:com.intellij.analysis.problemsView.toolWindow.HighlightingPanel$Companion
- sf:ID:java.lang.String
- <init>(com.intellij.openapi.project.Project,com.intellij.analysis.problemsView.toolWindow.ProblemsViewState):V
- fileClosed(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.vfs.VirtualFile):V
- fileOpened(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.vfs.VirtualFile):V
- f:getCurrentFile():com.intellij.openapi.vfs.VirtualFile
- powerSaveStateChanged():V
- f:selectHighlighter(com.intellij.openapi.editor.ex.RangeHighlighterEx):V
- selectionChanged(com.intellij.openapi.fileEditor.FileEditorManagerEvent):V
- selectionChangedTo(Z):V
- f:setCurrentFile(kotlin.Pair):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- f:updateSelectedFile():org.jetbrains.concurrency.CancellablePromise
f:com.intellij.analysis.problemsView.toolWindow.HighlightingPanel$Companion
a:com.intellij.analysis.problemsView.toolWindow.Node
- com.intellij.ide.util.treeView.PresentableNodeDescriptor
- com.intellij.ui.tree.LeafState$Supplier
- p:<init>(com.intellij.analysis.problemsView.toolWindow.Node):V
- p:<init>(com.intellij.openapi.project.Project):V
- f:findAncestor(java.lang.Class):java.lang.Object
- getChildren():java.util.Collection
- getDescriptor():com.intellij.openapi.fileEditor.OpenFileDescriptor
- getElement():com.intellij.analysis.problemsView.toolWindow.Node
- a:getName():java.lang.String
- getNavigatable():com.intellij.pom.Navigatable
- f:getParent(java.lang.Class):java.lang.Object
- f:getPath():javax.swing.tree.TreePath
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- p:update(com.intellij.ide.projectView.PresentationData):V
- pa:update(com.intellij.openapi.project.Project,com.intellij.ide.projectView.PresentationData):V
f:com.intellij.analysis.problemsView.toolWindow.ProblemNode
- com.intellij.analysis.problemsView.toolWindow.Node
- <init>(com.intellij.analysis.problemsView.toolWindow.Node,com.intellij.openapi.vfs.VirtualFile,com.intellij.analysis.problemsView.Problem):V
- equals(java.lang.Object):Z
- f:getColumn():I
- getDescriptor():com.intellij.openapi.fileEditor.OpenFileDescriptor
- f:getFile():com.intellij.openapi.vfs.VirtualFile
- getLeafState():com.intellij.ui.tree.LeafState
- f:getLine():I
- getName():java.lang.String
- getNavigatable():com.intellij.pom.Navigatable
- f:getProblem():com.intellij.analysis.problemsView.Problem
- f:getSeverity():I
- f:getText():java.lang.String
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- hashCode():I
f:com.intellij.analysis.problemsView.toolWindow.ProblemsTreeModel
- com.intellij.ui.tree.BaseTreeModel
- com.intellij.util.concurrency.InvokerSupplier
- <init>(com.intellij.openapi.Disposable):V
- dispose():V
- getChildren(java.lang.Object):java.util.List
- getInvoker():com.intellij.util.concurrency.Invoker
- getRoot():com.intellij.analysis.problemsView.toolWindow.Root
- nodeChanged(javax.swing.tree.TreePath):V
- setComparator(java.util.Comparator):V
- setRoot(com.intellij.analysis.problemsView.toolWindow.Root):V
- structureChanged(javax.swing.tree.TreePath):V
f:com.intellij.analysis.problemsView.toolWindow.ProblemsView
- com.intellij.openapi.project.DumbAware
- com.intellij.openapi.wm.ToolWindowFactory
- sf:ID:java.lang.String
- <init>():V
- s:addPanel(com.intellij.openapi.project.Project,com.intellij.analysis.problemsView.toolWindow.ProblemsViewPanelProvider):V
- createToolWindowContent(com.intellij.openapi.project.Project,com.intellij.openapi.wm.ToolWindow):V
- s:getDocument(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.Document
- s:getSelectedPanel(com.intellij.openapi.project.Project):com.intellij.analysis.problemsView.toolWindow.ProblemsViewPanel
- s:getSelectedTab(com.intellij.openapi.project.Project):com.intellij.analysis.problemsView.toolWindow.ProblemsViewTab
- s:getToolWindow(com.intellij.openapi.project.Project):com.intellij.openapi.wm.ToolWindow
- s:removePanel(com.intellij.openapi.project.Project,java.lang.String):V
- s:selectHighlighterIfVisible(com.intellij.openapi.project.Project,com.intellij.openapi.editor.ex.RangeHighlighterEx):V
- s:toggleCurrentFileProblems(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document):V
c:com.intellij.analysis.problemsView.toolWindow.ProblemsViewIconUpdater
- sf:Companion:com.intellij.analysis.problemsView.toolWindow.ProblemsViewIconUpdater$Companion
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- p:getIcon(I):javax.swing.Icon
- p:getProblemCount(com.intellij.openapi.project.Project):I
- sf:update(com.intellij.openapi.project.Project):kotlin.Unit
f:com.intellij.analysis.problemsView.toolWindow.ProblemsViewIconUpdater$Companion
- f:update(com.intellij.openapi.project.Project):kotlin.Unit
c:com.intellij.analysis.problemsView.toolWindow.ProblemsViewPanel
- com.intellij.ui.OnePixelSplitter
- com.intellij.analysis.problemsView.toolWindow.ProblemsViewTab
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- pf:myPreview:com.intellij.ui.preview.DescriptorPreview
- pf:mySortBySeverity:com.intellij.openapi.actionSystem.ToggleOptionAction$Option
- pf:myToolbar:com.intellij.openapi.actionSystem.ActionToolbar
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.analysis.problemsView.toolWindow.ProblemsViewState,java.util.function.Supplier):V
- p:createCenterComponent():javax.swing.JComponent
- p:createComparator():java.util.Comparator
- p:createToolbar():com.intellij.openapi.actionSystem.ActionToolbar
- dispose():V
- getName(I):java.lang.String
- p:getPopupHandlerGroupId():java.lang.String
- f:getProject():com.intellij.openapi.project.Project
- f:getSession():com.intellij.openapi.client.ClientProjectSession
- getShowPreview():com.intellij.openapi.actionSystem.ToggleOptionAction$Option
- p:getSortByName():com.intellij.openapi.actionSystem.ToggleOptionAction$Option
- p:getSortBySeverity():com.intellij.openapi.actionSystem.ToggleOptionAction$Option
- f:getState():com.intellij.analysis.problemsView.toolWindow.ProblemsViewState
- getTabId():java.lang.String
- p:getToolbarActionGroupId():java.lang.String
- f:getTree():com.intellij.ui.treeStructure.Tree
- f:getTreeModel():com.intellij.analysis.problemsView.toolWindow.ProblemsTreeModel
- ps:isNullableOrSelected(com.intellij.openapi.actionSystem.ToggleOptionAction$Option):Z
- p:loadProportion():V
- orientationChangedTo(Z):V
- p:saveProportion():V
- selectionChangedTo(Z):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- p:updatePreview():V
- p:updateToolWindowContent():V
- visibilityChangedTo(Z):V
com.intellij.analysis.problemsView.toolWindow.ProblemsViewPanelProvider
- sf:Companion:com.intellij.analysis.problemsView.toolWindow.ProblemsViewPanelProvider$Companion
- a:create():com.intellij.analysis.problemsView.toolWindow.ProblemsViewTab
- s:getEP():com.intellij.openapi.extensions.ExtensionPointName
f:com.intellij.analysis.problemsView.toolWindow.ProblemsViewPanelProvider$Companion
- f:getEP():com.intellij.openapi.extensions.ExtensionPointName
c:com.intellij.analysis.problemsView.toolWindow.ProblemsViewState
- com.intellij.openapi.components.BaseState
- sf:Companion:com.intellij.analysis.problemsView.toolWindow.ProblemsViewState$Companion
- <init>():V
- f:addAllSeverities(java.util.Collection):Z
- f:addSeverity(I):Z
- f:getAutoscrollToSource():Z
- f:getGroupByToolId():Z
- f:getHideBySeverity():java.util.Set
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.analysis.problemsView.toolWindow.ProblemsViewState
- f:getProportion():F
- f:getSelectedTabId():java.lang.String
- f:getShowPreview():Z
- f:getShowToolbar():Z
- f:getSortByName():Z
- f:getSortBySeverity():Z
- f:getSortFoldersFirst():Z
- f:removeAllSeverities(java.util.Collection):Z
- f:removeSeverity(I):Z
- f:setAutoscrollToSource(Z):V
- f:setGroupByToolId(Z):V
- f:setProportion(F):V
- f:setSelectedTabId(java.lang.String):V
- f:setShowPreview(Z):V
- f:setShowToolbar(Z):V
- f:setSortByName(Z):V
- f:setSortBySeverity(Z):V
- f:setSortFoldersFirst(Z):V
f:com.intellij.analysis.problemsView.toolWindow.ProblemsViewState$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.analysis.problemsView.toolWindow.ProblemsViewState
com.intellij.analysis.problemsView.toolWindow.ProblemsViewTab
- a:getName(I):java.lang.String
- a:getTabId():java.lang.String
- orientationChangedTo(Z):V
- selectionChangedTo(Z):V
- visibilityChangedTo(Z):V
f:com.intellij.analysis.problemsView.toolWindow.ProblemsViewToolWindowUtils
- sf:INSTANCE:com.intellij.analysis.problemsView.toolWindow.ProblemsViewToolWindowUtils
- f:addTab(com.intellij.openapi.project.Project,com.intellij.analysis.problemsView.toolWindow.ProblemsViewPanelProvider):V
- f:getContentById(com.intellij.openapi.project.Project,java.lang.String):com.intellij.ui.content.Content
- f:getSelectedTab(com.intellij.openapi.project.Project):com.intellij.analysis.problemsView.toolWindow.ProblemsViewTab
- f:getTabById(com.intellij.openapi.project.Project,java.lang.String):com.intellij.analysis.problemsView.toolWindow.ProblemsViewTab
- f:getToolWindow(com.intellij.openapi.project.Project):com.intellij.openapi.wm.ToolWindow
- f:removeTab(com.intellij.openapi.project.Project,java.lang.String):V
- f:selectContent(com.intellij.ui.content.ContentManager,java.lang.String):V
- sf:selectProjectErrorsTab(com.intellij.openapi.project.Project):V
- f:selectTab(com.intellij.openapi.project.Project,java.lang.String):V
- f:selectTabAsync(com.intellij.openapi.project.Project,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
a:com.intellij.analysis.problemsView.toolWindow.Root
- com.intellij.analysis.problemsView.toolWindow.Node
- com.intellij.analysis.problemsView.ProblemsCollector
- com.intellij.openapi.Disposable
- <init>(com.intellij.analysis.problemsView.toolWindow.ProblemsViewPanel):V
- dispose():V
- getChildren():java.util.Collection
- getChildren(com.intellij.analysis.problemsView.toolWindow.FileNode):java.util.Collection
- getChildren(com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- getLeafState():com.intellij.ui.tree.LeafState
- getName():java.lang.String
- pf:getNodesForProblems(com.intellij.analysis.problemsView.toolWindow.FileNode,java.util.Collection):java.util.List
- f:getPanel():com.intellij.analysis.problemsView.toolWindow.ProblemsViewPanel
- problemAppeared(com.intellij.analysis.problemsView.Problem):V
- problemDisappeared(com.intellij.analysis.problemsView.Problem):V
- problemUpdated(com.intellij.analysis.problemsView.Problem):V
- structureChanged(javax.swing.tree.TreePath):V
- bs:structureChanged$default(com.intellij.analysis.problemsView.toolWindow.Root,javax.swing.tree.TreePath,I,java.lang.Object):V
- p:update(com.intellij.openapi.project.Project,com.intellij.ide.projectView.PresentationData):V
f:com.intellij.application.options.CodeCompletionConfigurable
- com.intellij.openapi.options.BoundCompositeConfigurable
- com.intellij.application.options.editor.EditorOptionsProvider
- com.intellij.openapi.options.Configurable$WithEpDependencies
- sf:Companion:com.intellij.application.options.CodeCompletionConfigurable$Companion
- sf:ID:java.lang.String
- <init>():V
- apply():V
- createConfigurables():java.util.List
- createPanel():com.intellij.openapi.ui.DialogPanel
- f:getCaseSensitive():I
- getDependencies():java.util.Collection
- getId():java.lang.String
- isModified():Z
- reset():V
- f:setCaseSensitive(I):V
f:com.intellij.application.options.CodeCompletionConfigurable$Companion
f:com.intellij.application.options.CodeCompletionConfigurableEP
- com.intellij.openapi.options.ConfigurableEP
com.intellij.application.options.CodeCompletionOptionsCustomSection
- com.intellij.openapi.options.UnnamedConfigurable
a:com.intellij.application.options.CodeStyleAbstractConfigurable
- com.intellij.application.options.OptionsContainingConfigurable
- com.intellij.psi.codeStyle.CodeStyleConfigurable
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CodeStyleSettings,java.lang.String):V
- apply():V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- createComponent():javax.swing.JComponent
- pa:createPanel(com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.application.options.CodeStyleAbstractPanel
- disposeUIResources():V
- p:getCurrentSettings():com.intellij.psi.codeStyle.CodeStyleSettings
- getDisplayName():java.lang.String
- getPanel():com.intellij.application.options.CodeStyleAbstractPanel
- highlightOptions(java.lang.String):V
- isModified():Z
- onSomethingChanged():V
- processListOptions():java.util.Set
- processListOptionsWithPaths():java.util.Map
- reset():V
- reset(com.intellij.psi.codeStyle.CodeStyleSettings):V
- setModel(com.intellij.application.options.codeStyle.CodeStyleSchemesModel):V
a:com.intellij.application.options.CodeStyleAbstractPanel
- com.intellij.ide.ui.search.ComponentHighlightingListener
- com.intellij.openapi.Disposable
- p:<init>(com.intellij.lang.Language,com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:<init>(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:addPanelToWatch(java.awt.Component):V
- a:apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:applySettingsToModel():V
- p:createFileFromText(com.intellij.openapi.project.Project,java.lang.String):com.intellij.psi.PsiFile
- pa:createHighlighter(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.highlighter.EditorHighlighter
- dispose():V
- p:doReformat(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- ps:fillWrappingCombo(javax.swing.JComboBox):V
- p:getCurrentSettings():com.intellij.psi.codeStyle.CodeStyleSettings
- getDefaultLanguage():com.intellij.lang.Language
- p:getEditor():com.intellij.openapi.editor.Editor
- p:getFileExt():java.lang.String
- pa:getFileType():com.intellij.openapi.fileTypes.FileType
- p:getModelSettings():com.intellij.psi.codeStyle.CodeStyleSettings
- getOptionIndexer():com.intellij.application.options.OptionsContainingConfigurable
- a:getPanel():javax.swing.JComponent
- pa:getPreviewText():java.lang.String
- pa:getRightMargin():I
- p:getSettings():com.intellij.psi.codeStyle.CodeStyleSettings
- p:getTabTitle():java.lang.String
- f:highlight(javax.swing.JComponent,java.lang.String):V
- highlightOptions(java.lang.String):V
- p:installPreviewPanel(javax.swing.JPanel):V
- a:isModified(com.intellij.psi.codeStyle.CodeStyleSettings):Z
- onSomethingChanged():V
- processListOptions():java.util.Set
- s:readFromFile(java.lang.Class,java.lang.String):java.lang.String
- f:reset(com.intellij.psi.codeStyle.CodeStyleSettings):V
- pa:resetImpl(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:setEditorText(java.lang.String,Z):V
- setModel(com.intellij.application.options.codeStyle.CodeStyleSchemesModel):V
- p:setShouldUpdatePreview(Z):V
- setupCopyFromMenu(javax.swing.JPopupMenu):V
- p:somethingChanged():V
- p:updatePreview(Z):V
c:com.intellij.application.options.CodeStyleConfigurableWrapper
- com.intellij.application.options.OptionsContainingConfigurable
- com.intellij.openapi.options.Configurable$InnerWithModifiableParent
- com.intellij.openapi.options.Configurable$NoMargin
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- <init>(com.intellij.psi.codeStyle.CodeStyleSettingsProvider,com.intellij.application.options.codeStyle.CodeStyleSettingsPanelFactory,com.intellij.application.options.CodeStyleSchemesConfigurable):V
- apply():V
- applyPanel():V
- p:canBeShared():Z
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- enableSearch(java.lang.String):java.lang.Runnable
- focusOn(java.lang.String):V
- s:getConfigurableId(java.lang.String):java.lang.String
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- getModifiableParents():java.util.List
- getOriginalClass():java.lang.Class
- isModified():Z
- isPanelModified():Z
- processListOptions():java.util.Set
- processListOptionsWithPaths():java.util.Map
- reset():V
- resetPanel():V
- selectTab(java.lang.String):V
- setSchemesPanelVisible(Z):V
f:com.intellij.application.options.CodeStyleSchemesConfigurable
- com.intellij.openapi.options.SearchableConfigurable$Parent$Abstract
- com.intellij.openapi.options.Configurable$NoMargin
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.Configurable$VariableProjectAppLevel
- com.intellij.openapi.options.Configurable$WithEpDependencies
- sf:CONFIGURABLE_ID:java.lang.String
- <init>(com.intellij.openapi.project.Project):V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- findSubConfigurable(java.lang.String):com.intellij.openapi.options.SearchableConfigurable
- getDependencies():java.util.Collection
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- hasOwnContent():Z
- isModified():Z
- isProjectLevel():Z
- reset():V
- resetFromChild():V
- revert():V
com.intellij.application.options.GeneralCodeStyleOptionsProvider
- com.intellij.openapi.options.UnnamedConfigurable
- a:apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- a:isModified(com.intellij.psi.codeStyle.CodeStyleSettings):Z
- a:reset(com.intellij.psi.codeStyle.CodeStyleSettings):V
f:com.intellij.application.options.GeneralCodeStyleOptionsProviderEP
- com.intellij.openapi.options.ConfigurableEP
f:com.intellij.application.options.GlobalOptionsApplicabilityFilter
- com.intellij.application.options.OptionsApplicabilityFilter
- <init>():V
- isOptionApplicable(com.intellij.application.options.OptionId):Z
f:com.intellij.application.options.ImportSchemeChooserDialog
- com.intellij.openapi.ui.DialogWrapper
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.openapi.project.Project,java.lang.String[],java.lang.String):V
- getSelectedName():java.lang.String
- getTargetName():java.lang.String
- isUseCurrentScheme():Z
- s:selectOrCreateTargetScheme(com.intellij.openapi.project.Project,com.intellij.psi.codeStyle.CodeStyleScheme,com.intellij.openapi.options.SchemeFactory,java.lang.String[]):com.intellij.openapi.util.Pair
a:com.intellij.application.options.ModuleAwareProjectConfigurable
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- apply():V
- createComponent():javax.swing.JComponent
- p:createDefaultProjectConfigurable():com.intellij.openapi.options.UnnamedConfigurable
- pa:createModuleConfigurable(com.intellij.openapi.module.Module):com.intellij.openapi.options.UnnamedConfigurable
- p:createProjectConfigurable():com.intellij.openapi.options.UnnamedConfigurable
- disposeUIResources():V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- pf:getProject():com.intellij.openapi.project.Project
- p:getProjectConfigurableItemIcon():javax.swing.Icon
- p:getProjectConfigurableItemName():java.lang.String
- isModified():Z
- p:isSuitableForModule(com.intellij.openapi.module.Module):Z
- reset():V
f:com.intellij.application.options.ModuleDescriptionsComboBox
- com.intellij.openapi.ui.ComboBox
- com.intellij.application.options.ModulesCombo
- <init>():V
- allowEmptySelection(java.lang.String):V
- getSelectedModule():com.intellij.openapi.module.Module
- getSelectedModuleName():java.lang.String
- setAllModulesFromProject(com.intellij.openapi.project.Project):V
- setModules(java.util.Collection):V
- setSelectedModule(com.intellij.openapi.module.Module):V
- setSelectedModule(com.intellij.openapi.project.Project,java.lang.String):V
c:com.intellij.application.options.ModuleListCellRenderer
- com.intellij.ui.SimpleListCellRenderer
- <init>():V
- <init>(java.lang.String):V
- customize(javax.swing.JList,com.intellij.openapi.module.Module,I,Z,Z):V
com.intellij.application.options.ModulesCombo
- a:allowEmptySelection(java.lang.String):V
- a:getSelectedModule():com.intellij.openapi.module.Module
- a:getSelectedModuleName():java.lang.String
- a:setModules(java.util.Collection):V
- a:setSelectedModule(com.intellij.openapi.module.Module):V
- a:setSelectedModule(com.intellij.openapi.project.Project,java.lang.String):V
c:com.intellij.application.options.ModulesComboBox
- com.intellij.openapi.ui.ComboBox
- <init>():V
- allowEmptySelection(java.lang.String):V
- fillModules(com.intellij.openapi.project.Project):V
- fillModules(com.intellij.openapi.project.Project,com.intellij.openapi.module.ModuleType):V
- getSelectedModule():com.intellij.openapi.module.Module
- setModules(java.util.Collection):V
- setSelectedModule(com.intellij.openapi.module.Module):V
f:com.intellij.application.options.OptionId
- sf:AUTOCOMPLETE_ON_BASIC_CODE_COMPLETION:com.intellij.application.options.OptionId
- sf:COMPLETION_SMART_TYPE:com.intellij.application.options.OptionId
- sf:INSERT_PARENTHESES_AUTOMATICALLY:com.intellij.application.options.OptionId
- sf:PROJECT_VIEW_SHOW_VISIBILITY_ICONS:com.intellij.application.options.OptionId
- sf:RENAME_IN_PLACE:com.intellij.application.options.OptionId
- sf:SHOW_PARAMETER_NAME_HINTS_ON_COMPLETION:com.intellij.application.options.OptionId
a:com.intellij.application.options.OptionsApplicabilityFilter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- s:isApplicable(com.intellij.application.options.OptionId):Z
- a:isOptionApplicable(com.intellij.application.options.OptionId):Z
com.intellij.application.options.PredefinedCodeStyleListener
- java.util.EventListener
- a:styleApplied(com.intellij.psi.codeStyle.PredefinedCodeStyle):V
a:com.intellij.application.options.TabbedLanguageCodeStylePanel
- com.intellij.application.options.CodeStyleAbstractPanel
- p:<init>(com.intellij.lang.Language,com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:addBlankLinesTab(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:addIndentOptionsTab(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:addPredefinedCodeStyleListener(com.intellij.application.options.PredefinedCodeStyleListener):V
- p:addSpacesTab(com.intellij.psi.codeStyle.CodeStyleSettings):V
- pf:addTab(com.intellij.application.options.CodeStyleAbstractPanel):V
- p:addWrappingAndBracesTab(com.intellij.psi.codeStyle.CodeStyleSettings):V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:applyLanguageSettings(com.intellij.lang.Language,com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CodeStyleSettings):V
- changeTab(java.lang.String):V
- p:createHighlighter(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.highlighter.EditorHighlighter
- pf:createTab(com.intellij.psi.codeStyle.CodeStyleSettingsProvider):V
- dispose():V
- p:ensureTabs():V
- p:getFileType():com.intellij.openapi.fileTypes.FileType
- getOptionIndexer():com.intellij.application.options.OptionsContainingConfigurable
- getPanel():javax.swing.JComponent
- p:getPreviewText():java.lang.String
- p:getRightMargin():I
- highlightOptions(java.lang.String):V
- p:initTabs(com.intellij.psi.codeStyle.CodeStyleSettings):V
- isModified(com.intellij.psi.codeStyle.CodeStyleSettings):Z
- onSomethingChanged():V
- p:resetImpl(com.intellij.psi.codeStyle.CodeStyleSettings):V
- setListener(com.intellij.application.options.TabbedLanguageCodeStylePanel$TabChangeListener):V
- f:setModel(com.intellij.application.options.codeStyle.CodeStyleSchemesModel):V
- setupCopyFromMenu(javax.swing.JPopupMenu):V
- showSetFrom(java.awt.Component):V
- p:updatePreview(Z):V
pc:com.intellij.application.options.TabbedLanguageCodeStylePanel$MyIndentOptionsWrapper
- com.intellij.application.options.CodeStyleAbstractPanel
- p:<init>(com.intellij.application.options.TabbedLanguageCodeStylePanel,com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.application.options.IndentOptionsEditor):V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:createHighlighter(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.highlighter.EditorHighlighter
- getDefaultLanguage():com.intellij.lang.Language
- p:getFileExt():java.lang.String
- p:getFileType():com.intellij.openapi.fileTypes.FileType
- p:getIndentOptions(com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions
- getPanel():javax.swing.JComponent
- p:getPreviewText():java.lang.String
- p:getRightMargin():I
- p:getTabTitle():java.lang.String
- isModified(com.intellij.psi.codeStyle.CodeStyleSettings):Z
- onSomethingChanged():V
- p:resetImpl(com.intellij.psi.codeStyle.CodeStyleSettings):V
pc:com.intellij.application.options.TabbedLanguageCodeStylePanel$MySpacesPanel
- com.intellij.application.options.codeStyle.CodeStyleSpacesPanel
- <init>(com.intellij.application.options.TabbedLanguageCodeStylePanel,com.intellij.psi.codeStyle.CodeStyleSettings):V
- getDefaultLanguage():com.intellij.lang.Language
- p:shouldHideOptions():Z
pc:com.intellij.application.options.TabbedLanguageCodeStylePanel$MyWrappingAndBracesPanel
- com.intellij.application.options.codeStyle.WrappingAndBracesPanel
- <init>(com.intellij.application.options.TabbedLanguageCodeStylePanel,com.intellij.psi.codeStyle.CodeStyleSettings):V
- getDefaultLanguage():com.intellij.lang.Language
com.intellij.application.options.TabbedLanguageCodeStylePanel$TabChangeListener
- a:tabChanged(com.intellij.application.options.TabbedLanguageCodeStylePanel,java.lang.String):V
f:com.intellij.application.options.codeStyle.CodeStyleMainPanel
- javax.swing.JPanel
- com.intellij.application.options.TabbedLanguageCodeStylePanel$TabChangeListener
- <init>(com.intellij.application.options.codeStyle.CodeStyleSchemesModel,com.intellij.application.options.codeStyle.CodeStyleSettingsPanelFactory,Z):V
- apply():V
- disposeUIResources():V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getOptionIndexer():com.intellij.application.options.OptionsContainingConfigurable
- getPanels():com.intellij.application.options.codeStyle.NewCodeStyleSettingsPanel[]
- highlightOptions(java.lang.String):V
- isModified():Z
- isModified(com.intellij.psi.codeStyle.CodeStyleScheme):Z
- reset():V
- setSchemesPanelVisible(Z):V
- showTabOnCurrentPanel(java.lang.String):V
- tabChanged(com.intellij.application.options.TabbedLanguageCodeStylePanel,java.lang.String):V
f:com.intellij.application.options.codeStyle.CodeStyleSchemesModel
- com.intellij.application.options.schemes.SchemesModel
- <init>(com.intellij.openapi.project.Project):V
- addListener(com.intellij.application.options.codeStyle.CodeStyleSchemesModelListener):V
- addScheme(com.intellij.psi.codeStyle.CodeStyleScheme,Z):V
- apply():V
- canDeleteScheme(com.intellij.psi.codeStyle.CodeStyleScheme):Z
- canDuplicateScheme(com.intellij.psi.codeStyle.CodeStyleScheme):Z
- canRenameScheme(com.intellij.psi.codeStyle.CodeStyleScheme):Z
- canResetScheme(com.intellij.psi.codeStyle.CodeStyleScheme):Z
- containsModifiedCodeStyleSettings():Z
- containsScheme(java.lang.String,Z):Z
- copyToProject(com.intellij.psi.codeStyle.CodeStyleScheme):V
- createNewScheme(java.lang.String,com.intellij.psi.codeStyle.CodeStyleScheme):com.intellij.psi.codeStyle.CodeStyleScheme
- differsFromDefault(com.intellij.psi.codeStyle.CodeStyleScheme):Z
- exportProjectScheme(java.lang.String):com.intellij.psi.codeStyle.CodeStyleScheme
- fireAfterCurrentSettingsChanged():V
- fireBeforeCurrentSettingsChanged():V
- fireSchemeListChanged():V
- getAllSortedSchemes():java.util.List
- getCloneSettings(com.intellij.psi.codeStyle.CodeStyleScheme):com.intellij.psi.codeStyle.CodeStyleSettings
- getOverridingStatus():com.intellij.application.options.codeStyle.CodeStyleSchemesModel$OverridingStatus
- getProject():com.intellij.openapi.project.Project
- getProjectScheme():com.intellij.psi.codeStyle.CodeStyleScheme
- getSchemes():java.util.List
- getSelectedScheme():com.intellij.psi.codeStyle.CodeStyleScheme
- isProjectScheme(com.intellij.psi.codeStyle.CodeStyleScheme):Z
- isSchemeListModified():Z
- isUiEventsEnabled():Z
- isUsePerProjectSettings():Z
- removeScheme(com.intellij.psi.codeStyle.CodeStyleScheme):V
- reset():V
- restoreDefaults(com.intellij.psi.codeStyle.CodeStyleScheme):V
- selectScheme(com.intellij.psi.codeStyle.CodeStyleScheme,java.lang.Object):V
- setUiEventsEnabled(Z):V
- updateClonedSettings():V
- updateOverridingStatus():V
f:com.intellij.application.options.codeStyle.CodeStyleSchemesModel$ModelSettings
- com.intellij.psi.codeStyle.CodeStyleSettings
- <init>():V
- s:createFrom(com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.application.options.codeStyle.CodeStyleSchemesModel$ModelSettings
- doWithLockedSettings(java.lang.Runnable):V
- isLocked():Z
f:com.intellij.application.options.codeStyle.CodeStyleSchemesModel$OverridingStatus
- <init>():V
- getLock():java.util.concurrent.locks.Lock
- getModifiers():com.intellij.psi.codeStyle.modifier.CodeStyleSettingsModifier[]
com.intellij.application.options.codeStyle.CodeStyleSchemesModelListener
- java.util.EventListener
- afterCurrentSettingsChanged():V
- beforeCurrentSettingsChanged():V
- currentSchemeChanged(java.lang.Object):V
- overridingStatusChanged():V
- schemeChanged(com.intellij.psi.codeStyle.CodeStyleScheme):V
- schemeListChanged():V
- settingsChanged(com.intellij.psi.codeStyle.CodeStyleSettings):V
a:com.intellij.application.options.codeStyle.CodeStyleSettingsPanelFactory
- <init>():V
- a:createPanel(com.intellij.psi.codeStyle.CodeStyleScheme):com.intellij.application.options.codeStyle.NewCodeStyleSettingsPanel
c:com.intellij.application.options.codeStyle.CodeStyleSpacesPanel
- com.intellij.application.options.codeStyle.OptionTreeWithPreviewPanel
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings):V
- getSettingsType():com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- p:getTabTitle():java.lang.String
- p:initTables():V
f:com.intellij.application.options.codeStyle.CommenterForm
- com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.lang.Language):V
- <init>(com.intellij.lang.Language,java.lang.String):V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- getCommenterPanel():javax.swing.JPanel
- isModified(com.intellij.psi.codeStyle.CodeStyleSettings):Z
- reset(com.intellij.psi.codeStyle.CodeStyleSettings):V
- showAllStandardOptions():V
- showStandardOptions(java.lang.String[]):V
a:com.intellij.application.options.codeStyle.CustomizableLanguageCodeStylePanel
- com.intellij.application.options.CodeStyleAbstractPanel
- com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable
- p:<init>(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:createHighlighter(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.highlighter.EditorHighlighter
- ps:createPreviewPanel():javax.swing.JPanel
- p:customizeSettings():V
- p:doReformat(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- p:getFileExt():java.lang.String
- p:getFileType():com.intellij.openapi.fileTypes.FileType
- p:getPreviewText():java.lang.String
- p:getRightMargin():I
- a:getSettingsType():com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- p:init():V
- moveStandardOption(java.lang.String,java.lang.String):V
- p:resetDefaultNames():V
- p:sortOptions(java.util.Collection):java.util.List
pa:com.intellij.application.options.codeStyle.CustomizableLanguageCodeStylePanel$OrderedOption
- p:<init>(java.lang.String,com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor,java.lang.String):V
- getAnchor():com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor
- getAnchorOptionName():java.lang.String
- getOptionName():java.lang.String
f:com.intellij.application.options.codeStyle.NewCodeStyleSettingsPanel
- javax.swing.JPanel
- com.intellij.application.options.TabbedLanguageCodeStylePanel$TabChangeListener
- <init>(com.intellij.openapi.options.Configurable,com.intellij.application.options.codeStyle.CodeStyleSchemesModel):V
- apply():V
- dispose():V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getOptionIndexer():com.intellij.application.options.OptionsContainingConfigurable
- getSelectedPanel():com.intellij.application.options.CodeStyleAbstractPanel
- isModified():Z
- onSomethingChanged():V
- reset():V
- reset(com.intellij.psi.codeStyle.CodeStyleSettings):V
- setModel(com.intellij.application.options.codeStyle.CodeStyleSchemesModel):V
- tabChanged(com.intellij.application.options.TabbedLanguageCodeStylePanel,java.lang.String):V
- updatePreview():V
a:com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel
- com.intellij.application.options.codeStyle.CustomizableLanguageCodeStylePanel
- f:COLUMNS:com.intellij.util.ui.ColumnInfo[]
- f:TITLE:com.intellij.util.ui.ColumnInfo
- f:VALUE:com.intellij.util.ui.ColumnInfo
- p:isFirstUpdate:Z
- p:myTreeTable:com.intellij.ui.treeStructure.treetable.TreeTable
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:addCustomOption(com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel$Option):V
- p:addOption(java.lang.String,java.lang.String):V
- p:addOption(java.lang.String,java.lang.String,java.lang.String):V
- p:addOption(java.lang.String,java.lang.String,java.lang.String,I,I,I,java.util.function.Function):V
- p:addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],I[]):V
- p:addOption(java.lang.String,java.lang.String,java.lang.String[],I[]):V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:createOptionsTree(com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.ui.treeStructure.treetable.TreeTable
- p:getCustomNodeEditor(com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel$MyTreeNode):javax.swing.JComponent
- p:getCustomNodeEditorValue(javax.swing.JComponent):java.lang.Object
- p:getCustomValueRenderer(java.lang.String,java.lang.Object):javax.swing.JComponent
- getPanel():javax.swing.JComponent
- highlightOptions(java.lang.String):V
- p:init():V
- pa:initTables():V
- isModified(com.intellij.psi.codeStyle.CodeStyleSettings):Z
- processListOptions():java.util.Set
- renameStandardOption(java.lang.String,java.lang.String):V
- p:resetDefaultNames():V
- p:resetImpl(com.intellij.psi.codeStyle.CodeStyleSettings):V
- showAllStandardOptions():V
- showCustomOption(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor,java.lang.String,java.lang.Object[]):V
- showCustomOption(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[]):V
- showOption(java.lang.String):V
- showStandardOptions(java.lang.String[]):V
pf:com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel$ColoredLabel
- javax.swing.JLabel
- <init>(java.lang.String,java.awt.Color):V
pa:com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel$FieldOption
- com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel$Option
- p:getSettings(com.intellij.psi.codeStyle.CodeStyleSettings):java.lang.Object
pf:com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel$MyTreeNode
- javax.swing.tree.DefaultMutableTreeNode
- <init>(com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel$Option,java.lang.String,com.intellij.psi.codeStyle.CodeStyleSettings):V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- getKey():com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel$Option
- getText():java.lang.String
- getValue():java.lang.Object
- isEnabled():Z
- isModified(com.intellij.psi.codeStyle.CodeStyleSettings):Z
- reset(com.intellij.psi.codeStyle.CodeStyleSettings):V
- setValue(java.lang.Object):V
pa:com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel$Option
- com.intellij.application.options.codeStyle.CustomizableLanguageCodeStylePanel$OrderedOption
- p:<init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor,java.lang.String):V
- a:getValue(com.intellij.psi.codeStyle.CodeStyleSettings):java.lang.Object
- isEnabled():Z
- setEnabled(Z):V
- a:setValue(java.lang.Object,com.intellij.psi.codeStyle.CodeStyleSettings):V
a:com.intellij.application.options.codeStyle.OptionTreeWithPreviewPanel
- com.intellij.application.options.codeStyle.CustomizableLanguageCodeStylePanel
- p:isFirstUpdate:Z
- p:myCustomOptions:com.intellij.util.containers.MultiMap
- pf:myKeys:java.util.ArrayList
- p:myOptionsTree:javax.swing.JTree
- pf:myPanel:javax.swing.JPanel
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings):V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:createOptionsTree():javax.swing.JTree
- p:enableOption(java.lang.String):V
- p:getGroupOrder(java.util.List):java.util.List
- getPanel():javax.swing.JComponent
- highlightOptions(java.lang.String):V
- p:init():V
- p:initBooleanField(java.lang.String,java.lang.String,java.lang.String):V
- p:initCustomOptions(java.lang.String):V
- pa:initTables():V
- isModified(com.intellij.psi.codeStyle.CodeStyleSettings):Z
- moveStandardOption(java.lang.String,java.lang.String):V
- processListOptions():java.util.Set
- renameStandardOption(java.lang.String,java.lang.String):V
- p:resetImpl(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:shouldHideOptions():Z
- showAllStandardOptions():V
- showCustomOption(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor,java.lang.String,java.lang.Object[]):V
- showCustomOption(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[]):V
- showStandardOptions(java.lang.String[]):V
- p:updateOptions(Z,java.lang.String[]):V
pf:com.intellij.application.options.codeStyle.OptionTreeWithPreviewPanel$MyTreeCellRenderer
- javax.swing.tree.TreeCellRenderer
- <init>():V
- <init>(com.intellij.application.options.codeStyle.SpeedSearchHelper):V
- getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):java.awt.Component
f:com.intellij.application.options.codeStyle.OtherFileTypesCodeStyleConfigurable
- com.intellij.application.options.CodeStyleAbstractConfigurable
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CodeStyleSettings):V
- s:getDisplayNameText():java.lang.String
- getHelpTopic():java.lang.String
f:com.intellij.application.options.codeStyle.RightMarginForm
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.lang.Language,com.intellij.psi.codeStyle.CodeStyleSettings):V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- getTopPanel():javax.swing.JPanel
- isModified(com.intellij.psi.codeStyle.CodeStyleSettings):Z
- reset(com.intellij.psi.codeStyle.CodeStyleSettings):V
f:com.intellij.application.options.codeStyle.SpeedSearchHelper
- <init>(com.intellij.ui.speedSearch.SpeedSearchSupply):V
- find(java.lang.String):V
- setLabelText(com.intellij.ui.SimpleColoredComponent,java.lang.String,I,java.awt.Color,java.awt.Color):V
c:com.intellij.application.options.codeStyle.WrappingAndBracesPanel
- com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:addOption(java.lang.String,java.lang.String,java.lang.String):V
- p:addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],I[]):V
- p:getAssociatedSettingsGroup(java.lang.String):com.intellij.application.options.codeStyle.WrappingAndBracesPanel$SettingsGroup
- p:getCustomNodeEditor(com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel$MyTreeNode):javax.swing.JComponent
- p:getCustomNodeEditorValue(javax.swing.JComponent):java.lang.Object
- p:getCustomValueRenderer(java.lang.String,java.lang.Object):javax.swing.JComponent
- getSettingsType():com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- p:getTabTitle():java.lang.String
- p:initTables():V
pf:com.intellij.application.options.codeStyle.WrappingAndBracesPanel$SettingsGroup
- java.lang.Record
- commonCodeStyleSettingFieldNames():java.util.Collection
- f:equals(java.lang.Object):Z
- f:hashCode():I
- title():java.lang.String
c:com.intellij.application.options.codeStyle.arrangement.ArrangementSettingsPanel
- com.intellij.application.options.CodeStyleAbstractPanel
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.lang.Language):V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:createHighlighter(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.highlighter.EditorHighlighter
- p:getFileType():com.intellij.openapi.fileTypes.FileType
- getPanel():javax.swing.JComponent
- p:getPreviewText():java.lang.String
- p:getRightMargin():I
- p:getTabTitle():java.lang.String
- isModified(com.intellij.psi.codeStyle.CodeStyleSettings):Z
- p:resetImpl(com.intellij.psi.codeStyle.CodeStyleSettings):V
f:com.intellij.application.options.codeStyle.arrangement.util.CalloutBorder
- javax.swing.border.Border
- <init>():V
- getBorderInsets(java.awt.Component):java.awt.Insets
- isBorderOpaque():Z
- paintBorder(java.awt.Component,java.awt.Graphics,I,I,I,I):V
f:com.intellij.application.options.codeStyle.arrangement.util.IntObjectMap
- <init>():V
- <init>(I):V
- clear():V
- get(I):java.lang.Object
- remove(I):V
- set(I,java.lang.Object):V
- shiftKeys(I,I):V
- size():I
f:com.intellij.application.options.colors.fileStatus.FileStatusColorsTableModel
- javax.swing.table.AbstractTableModel
- <init>(com.intellij.openapi.vcs.FileStatus[],com.intellij.openapi.editor.colors.EditorColorsScheme):V
- apply():V
- containsCustomSettings():Z
- getColumnClass(I):java.lang.Class
- getColumnCount():I
- getColumnName(I):java.lang.String
- getRowCount():I
- getValueAt(I,I):java.lang.Object
- isModified():Z
- reset():V
- resetToDefault(I):V
- setValueAt(java.lang.Object,I,I):V
f:com.intellij.application.options.editor.AutoImportOptionsConfigurable
- com.intellij.openapi.options.BoundCompositeConfigurable
- com.intellij.application.options.editor.EditorOptionsProvider
- com.intellij.openapi.options.Configurable$VariableProjectAppLevel
- com.intellij.openapi.options.Configurable$WithEpDependencies
- <init>(com.intellij.openapi.project.Project):V
- createConfigurables():java.util.List
- createPanel():com.intellij.openapi.ui.DialogPanel
- getDependencies():java.util.Collection
- getId():java.lang.String
- isProjectLevel():Z
com.intellij.application.options.editor.AutoImportOptionsProvider
- com.intellij.openapi.options.UnnamedConfigurable
f:com.intellij.application.options.editor.AutoImportOptionsProviderEP
- com.intellij.openapi.options.ConfigurableEP
- sf:EP_NAME:com.intellij.openapi.extensions.ProjectExtensionPointName
- <init>(com.intellij.openapi.project.Project):V
com.intellij.application.options.editor.CodeFoldingOptionsProvider
- com.intellij.openapi.options.UnnamedConfigurable
f:com.intellij.application.options.editor.CodeFoldingOptionsProviderEP
- com.intellij.openapi.options.ConfigurableEP
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
f:com.intellij.application.options.editor.EditorOptionsProviderEP
- com.intellij.openapi.options.ConfigurableEP
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
f:com.intellij.application.options.editor.EditorSmartKeysConfigurable
- com.intellij.openapi.options.BoundCompositeConfigurable
- com.intellij.openapi.options.Configurable$WithEpDependencies
- com.intellij.openapi.options.SearchableConfigurable
- com.intellij.openapi.options.SearchableConfigurable$Parent
- <init>():V
- apply():V
- createConfigurables():java.util.List
- createPanel():com.intellij.openapi.ui.DialogPanel
- getConfigurables():com.intellij.openapi.options.Configurable[]
- getDependencies():java.util.List
- hasOwnContent():Z
f:com.intellij.application.options.editor.EditorSmartKeysConfigurableEP
- com.intellij.openapi.options.ConfigurableEP
- <init>():V
f:com.intellij.application.options.editor.EditorSmartKeysOptionsTopHitProvider
- com.intellij.ide.ui.OptionsSearchTopHitProvider$ApplicationLevelProvider
- <init>():V
- getId():java.lang.String
- getOptions():java.util.Collection
a:com.intellij.build.AbstractViewManager
- com.intellij.build.BuildProgressListener
- com.intellij.build.BuildProgressObservable
- com.intellij.build.ViewManager
- com.intellij.openapi.Disposable
- pf:myBuildContentManager:com.intellij.build.BuildContentManager
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project):V
- dispose():V
- p:getBuildsMap():java.util.Map
- p:getContentIcon():javax.swing.Icon
- pa:getViewName():java.lang.String
- isBuildContentView():Z
- isConsoleEnabledByDefault():Z
- p:onBuildFinish(com.intellij.build.BuildDescriptor):V
- p:onBuildStart(com.intellij.build.BuildDescriptor):V
- onEvent(java.lang.Object,com.intellij.build.events.BuildEvent):V
f:com.intellij.build.BuildBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
f:com.intellij.build.BuildConsoleUtils
- <init>():V
- s:print(com.intellij.build.BuildTextConsoleView,java.lang.String,com.intellij.build.issue.BuildIssue):V
- s:printDetails(com.intellij.execution.ui.ConsoleView,com.intellij.build.events.Failure,java.lang.String):V
f:com.intellij.build.BuildContentDescriptor
- com.intellij.execution.ui.RunContentDescriptor
- <init>(com.intellij.execution.ui.ExecutionConsole,com.intellij.execution.process.ProcessHandler,javax.swing.JComponent,java.lang.String):V
- isActivateToolWindowWhenFailed():Z
- isNavigateToError():com.intellij.util.ThreeState
- setActivateToolWindowWhenFailed(Z):V
- setNavigateToError(com.intellij.util.ThreeState):V
f:com.intellij.build.BuildTextConsoleView
- com.intellij.execution.impl.ConsoleViewImpl
- com.intellij.build.BuildConsoleView
- com.intellij.execution.process.AnsiEscapeDecoder$ColoredTextAcceptor
- <init>(com.intellij.openapi.project.Project,Z,java.util.List):V
- append(com.intellij.build.events.Failure):Z
- append(java.lang.String,Z):V
- appendEventResult(com.intellij.build.events.EventResult):Z
- coloredTextAvailable(java.lang.String,com.intellij.openapi.util.Key):V
- onEvent(com.intellij.build.events.OutputBuildEvent):V
- onEvent(java.lang.Object,com.intellij.build.events.BuildEvent):V
f:com.intellij.build.BuildTreeConsoleView
- com.intellij.build.BuildConsoleView
- com.intellij.build.Filterable
- com.intellij.execution.ui.ConsoleView
- com.intellij.ide.OccurenceNavigator
- com.intellij.openapi.actionSystem.DataProvider
- <init>(com.intellij.openapi.project.Project,com.intellij.build.BuildDescriptor,com.intellij.execution.ui.ExecutionConsole):V
- <init>(com.intellij.openapi.project.Project,com.intellij.build.BuildDescriptor,com.intellij.execution.ui.ExecutionConsole,com.intellij.build.BuildViewSettingsProvider):V
- addFilter(java.util.function.Predicate):V
- addMessageFilter(com.intellij.execution.filters.Filter):V
- allowHeavyFilters():V
- attachToProcess(com.intellij.execution.process.ProcessHandler):V
- canPause():Z
- clear():V
- contains(java.util.function.Predicate):Z
- createConsoleActions():com.intellij.openapi.actionSystem.AnAction[]
- dispose():V
- getComponent():javax.swing.JComponent
- getContentSize():I
- getData(java.lang.String):java.lang.Object
- getFilter():java.util.function.Predicate
- getNextOccurenceActionName():java.lang.String
- getPreferredFocusableComponent():javax.swing.JComponent
- getPreviousOccurenceActionName():java.lang.String
- goNextOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- goPreviousOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- hasDeferredOutput():Z
- hasNextOccurence():Z
- hasPreviousOccurence():Z
- hideRootNode():V
- isDisposed():Z
- isFilteringEnabled():Z
- isOutputPaused():Z
- onEvent(java.lang.Object,com.intellij.build.events.BuildEvent):V
- performWhenNoDeferredOutput(java.lang.Runnable):V
- print(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType):V
- printHyperlink(java.lang.String,com.intellij.execution.filters.HyperlinkInfo):V
- removeFilter(java.util.function.Predicate):V
- scrollTo(I):V
- setHelpId(java.lang.String):V
- setOutputPaused(Z):V
f:com.intellij.build.BuildTreeFilters
c:com.intellij.build.BuildView
- com.intellij.build.BuildProgressListener
- com.intellij.build.Filterable
- com.intellij.execution.runners.RunContentActionsContributor
- com.intellij.execution.ui.ConsoleView
- com.intellij.execution.ui.ObservableConsoleView
- com.intellij.ide.OccurenceNavigator
- com.intellij.openapi.actionSystem.UiDataProvider
- com.intellij.openapi.ui.ComponentContainer
- javax.swing.JPanel
- sf:CONSOLE_VIEW_NAME:java.lang.String
- <init>(com.intellij.openapi.project.Project,com.intellij.build.BuildDescriptor,java.lang.String,com.intellij.build.ViewManager):V
- <init>(com.intellij.openapi.project.Project,com.intellij.execution.ui.ExecutionConsole,com.intellij.build.BuildDescriptor,java.lang.String,com.intellij.build.ViewManager):V
- addChangeListener(com.intellij.execution.ui.ObservableConsoleView$ChangeListener,com.intellij.openapi.Disposable):V
- addFilter(java.util.function.Predicate):V
- addMessageFilter(com.intellij.execution.filters.Filter):V
- allowHeavyFilters():V
- attachToProcess(com.intellij.execution.process.ProcessHandler):V
- canPause():Z
- clear():V
- contains(java.util.function.Predicate):Z
- createConsoleActions():com.intellij.openapi.actionSystem.AnAction[]
- getActions():com.intellij.openapi.actionSystem.AnAction[]
- getAdditionalActions():com.intellij.openapi.actionSystem.AnAction[]
- getContentSize():I
- getFilter():java.util.function.Predicate
- getNextOccurenceActionName():java.lang.String
- getPreviousOccurenceActionName():java.lang.String
- goNextOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- goPreviousOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- hasDeferredOutput():Z
- hasNextOccurence():Z
- hasPreviousOccurence():Z
- hideOriginalActions():V
- isFilteringEnabled():Z
- isOutputPaused():Z
- onEvent(java.lang.Object,com.intellij.build.events.BuildEvent):V
- performWhenNoDeferredOutput(java.lang.Runnable):V
- print(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType):V
- printHyperlink(java.lang.String,com.intellij.execution.filters.HyperlinkInfo):V
- removeFilter(java.util.function.Predicate):V
- scrollTo(I):V
- setHelpId(java.lang.String):V
- setOutputPaused(Z):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
c:com.intellij.build.BuildViewManager
- com.intellij.build.AbstractViewManager
- <init>(com.intellij.openapi.project.Project):V
- getViewName():java.lang.String
c:com.intellij.build.DefaultBuildDescriptor
- com.intellij.build.BuildDescriptor
- <init>(com.intellij.build.BuildDescriptor):V
- <init>(java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,J):V
- <init>(java.lang.Object,java.lang.String,java.lang.String,J):V
- getAttachedConsoleConsumer():com.intellij.util.Consumer
- getContentDescriptorSupplier():java.util.function.Supplier
- getExecutionEnvironment():com.intellij.execution.runners.ExecutionEnvironment
- getGroupId():java.lang.Object
- getId():java.lang.Object
- getProcessHandler():com.intellij.build.process.BuildProcessHandler
- getStartTime():J
- getTitle():java.lang.String
- getWorkingDir():java.lang.String
- isActivateToolWindowWhenAdded():Z
- isActivateToolWindowWhenFailed():Z
- isAutoFocusContent():Z
- isNavigateToError():com.intellij.util.ThreeState
- setActivateToolWindowWhenAdded(Z):V
- setActivateToolWindowWhenFailed(Z):V
- setAutoFocusContent(Z):V
- setNavigateToError(com.intellij.util.ThreeState):V
- withContentDescriptor(java.util.function.Supplier):com.intellij.build.DefaultBuildDescriptor
- withExecutionEnvironment(com.intellij.execution.runners.ExecutionEnvironment):com.intellij.build.DefaultBuildDescriptor
- withProcessHandler(com.intellij.build.process.BuildProcessHandler,com.intellij.util.Consumer):com.intellij.build.DefaultBuildDescriptor
c:com.intellij.build.ExecutionNode
- com.intellij.ide.util.treeView.PresentableNodeDescriptor
- <init>(com.intellij.openapi.project.Project,com.intellij.build.ExecutionNode,Z,java.util.function.Supplier):V
- add(com.intellij.build.ExecutionNode):V
- getChildList():java.util.List
- getDuration():java.lang.String
- getElement():com.intellij.build.ExecutionNode
- getEndTime():J
- s:getEventResultIcon(com.intellij.build.events.EventResult):javax.swing.Icon
- getFilter():java.util.function.Predicate
- getName():java.lang.String
- getNavigatables():java.util.List
- getParent():com.intellij.build.ExecutionNode
- getResult():com.intellij.build.events.EventResult
- getStartTime():J
- getTitle():java.lang.String
- hasInfos():Z
- hasWarnings():Z
- isAutoExpandNode():Z
- isFailed():Z
- s:isFailed(com.intellij.build.events.EventResult):Z
- isRunning():Z
- s:isSkipped(com.intellij.build.events.EventResult):Z
- reportChildMessageKind(com.intellij.build.events.MessageEvent$Kind):com.intellij.build.ExecutionNode
- setEndTime(J):com.intellij.build.ExecutionNode
- setFilter(java.util.function.Predicate):V
- setHint(java.lang.String):V
- setIconProvider(java.util.function.Supplier):V
- setName(java.lang.String):V
- setNavigatable(com.intellij.pom.Navigatable):V
- setResult(com.intellij.build.events.EventResult):com.intellij.build.ExecutionNode
- setStartTime(J):V
- setTitle(java.lang.String):V
- p:update(com.intellij.ide.projectView.PresentationData):V
f:com.intellij.build.FileNavigatable
- com.intellij.pom.Navigatable
- <init>(com.intellij.openapi.project.Project,com.intellij.build.FilePosition):V
- canNavigate():Z
- canNavigateToSource():Z
- getFileDescriptor():com.intellij.openapi.fileEditor.OpenFileDescriptor
- getFilePosition():com.intellij.build.FilePosition
- navigate(Z):V
com.intellij.build.Filterable
- a:addFilter(java.util.function.Predicate):V
- a:contains(java.util.function.Predicate):Z
- a:getFilter():java.util.function.Predicate
- a:isFilteringEnabled():Z
- a:removeFilter(java.util.function.Predicate):V
c:com.intellij.build.SyncViewManager
- com.intellij.build.AbstractViewManager
- <init>(com.intellij.openapi.project.Project):V
- getViewName():java.lang.String
a:com.intellij.build.events.impl.AbstractBuildEvent
- com.intellij.build.events.BuildEvent
- <init>(java.lang.Object,java.lang.Object,J,java.lang.String):V
- getDescription():java.lang.String
- getEventTime():J
- getHint():java.lang.String
- getId():java.lang.Object
- getMessage():java.lang.String
- getParentId():java.lang.Object
- setDescription(java.lang.String):V
- setHint(java.lang.String):V
- setParentId(java.lang.Object):V
f:com.intellij.build.events.impl.DerivedResultImpl
- com.intellij.build.events.DerivedResult
- <init>():V
- <init>(java.util.function.Supplier,java.util.function.Supplier):V
- createDefaultResult():com.intellij.build.events.EventResult
- createFailureResult():com.intellij.build.events.FailureResult
c:com.intellij.build.events.impl.FailureImpl
- com.intellij.build.events.Failure
- <init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.util.List):V
- <init>(java.lang.String,java.lang.String,java.util.List,java.lang.Throwable,com.intellij.notification.Notification,com.intellij.pom.Navigatable):V
- <init>(java.lang.String,java.lang.Throwable):V
- <init>(java.lang.String,java.lang.Throwable,com.intellij.notification.Notification,com.intellij.pom.Navigatable):V
- getCauses():java.util.List
- getDescription():java.lang.String
- getError():java.lang.Throwable
- getMessage():java.lang.String
- getNavigatable():com.intellij.pom.Navigatable
- getNotification():com.intellij.notification.Notification
c:com.intellij.build.events.impl.FailureResultImpl
- com.intellij.build.events.FailureResult
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.Throwable):V
- <init>(java.lang.Throwable):V
- <init>(java.util.List):V
- getFailures():java.util.List
c:com.intellij.build.events.impl.FileDownloadEventImpl
- com.intellij.build.events.impl.AbstractBuildEvent
- com.intellij.build.events.ProgressBuildEvent
- <init>(java.lang.Object,java.lang.Object,J,java.lang.String,J,J,java.lang.String,Z,java.lang.String):V
- getDownloadPath():java.lang.String
- getProgress():J
- getTotal():J
- getUnit():java.lang.String
- isFirstInGroup():Z
c:com.intellij.build.events.impl.FileDownloadedEventImpl
- com.intellij.build.events.impl.AbstractBuildEvent
- <init>(java.lang.Object,java.lang.Object,J,java.lang.String,J,java.lang.String):V
- getDownloadPath():java.lang.String
- getDuration():J
c:com.intellij.build.events.impl.FileMessageEventImpl
- com.intellij.build.events.impl.MessageEventImpl
- com.intellij.build.events.FileMessageEvent
- <init>(java.lang.Object,com.intellij.build.events.MessageEvent$Kind,java.lang.String,java.lang.String,java.lang.String,com.intellij.build.FilePosition):V
- equals(java.lang.Object):Z
- getFilePosition():com.intellij.build.FilePosition
- getHint():java.lang.String
- getNavigatable(com.intellij.openapi.project.Project):com.intellij.pom.Navigatable
- getResult():com.intellij.build.events.FileMessageEventResult
- hashCode():I
f:com.intellij.build.events.impl.FinishBuildEventImpl
- com.intellij.build.events.impl.FinishEventImpl
- com.intellij.build.events.FinishBuildEvent
- <init>(java.lang.Object,java.lang.Object,J,java.lang.String,com.intellij.build.events.EventResult):V
c:com.intellij.build.events.impl.FinishEventImpl
- com.intellij.build.events.impl.AbstractBuildEvent
- com.intellij.build.events.FinishEvent
- <init>(java.lang.Object,java.lang.Object,J,java.lang.String,com.intellij.build.events.EventResult):V
- getResult():com.intellij.build.events.EventResult
c:com.intellij.build.events.impl.MessageEventImpl
- com.intellij.build.events.impl.AbstractBuildEvent
- com.intellij.build.events.MessageEvent
- <init>(java.lang.Object,com.intellij.build.events.MessageEvent$Kind,java.lang.String,java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getGroup():java.lang.String
- getKind():com.intellij.build.events.MessageEvent$Kind
- getNavigatable(com.intellij.openapi.project.Project):com.intellij.pom.Navigatable
- getResult():com.intellij.build.events.MessageEventResult
- hashCode():I
- f:setDescription(java.lang.String):V
f:com.intellij.build.events.impl.OutputBuildEventImpl
- com.intellij.build.events.impl.AbstractBuildEvent
- com.intellij.build.events.OutputBuildEvent
- <init>(java.lang.Object,java.lang.Object,java.lang.String,Z):V
- <init>(java.lang.Object,java.lang.String,Z):V
- isStdOut():Z
f:com.intellij.build.events.impl.ProgressBuildEventImpl
- com.intellij.build.events.impl.AbstractBuildEvent
- com.intellij.build.events.ProgressBuildEvent
- <init>(java.lang.Object,java.lang.Object,J,java.lang.String,J,J,java.lang.String):V
- getProgress():J
- getTotal():J
- getUnit():java.lang.String
f:com.intellij.build.events.impl.SkippedResultImpl
- com.intellij.build.events.SkippedResult
- <init>():V
f:com.intellij.build.events.impl.StartBuildEventImpl
- com.intellij.build.events.impl.StartEventImpl
- com.intellij.build.events.StartBuildEvent
- <init>(com.intellij.build.BuildDescriptor,java.lang.String):V
- withExecutionFilter(com.intellij.execution.filters.Filter):com.intellij.build.events.impl.StartBuildEventImpl
- withRestartActions(com.intellij.openapi.actionSystem.AnAction[]):com.intellij.build.events.impl.StartBuildEventImpl
c:com.intellij.build.events.impl.StartEventImpl
- com.intellij.build.events.impl.AbstractBuildEvent
- com.intellij.build.events.StartEvent
- <init>(java.lang.Object,java.lang.Object,J,java.lang.String):V
f:com.intellij.build.events.impl.SuccessResultImpl
- com.intellij.build.events.SuccessResult
- <init>():V
- <init>(Z):V
- getWarnings():java.util.List
- isUpToDate():Z
c:com.intellij.build.output.BuildOutputInstantReaderImpl
- com.intellij.build.output.BuildOutputInstantReader
- java.io.Closeable
- java.lang.Appendable
- sf:Companion:com.intellij.build.output.BuildOutputInstantReaderImpl$Companion
- <init>(java.lang.Object,java.lang.Object,com.intellij.build.BuildProgressListener,java.util.List):V
- <init>(java.lang.Object,java.lang.Object,com.intellij.build.BuildProgressListener,java.util.List,I):V
- <init>(java.lang.Object,java.lang.Object,com.intellij.build.BuildProgressListener,java.util.List,I,I):V
- b:<init>(java.lang.Object,java.lang.Object,com.intellij.build.BuildProgressListener,java.util.List,I,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- append(C):com.intellij.build.output.BuildOutputInstantReaderImpl
- append(java.lang.CharSequence):com.intellij.build.output.BuildOutputInstantReaderImpl
- append(java.lang.CharSequence,I,I):com.intellij.build.output.BuildOutputInstantReaderImpl
- close():V
- closeAndGetFuture():java.util.concurrent.CompletableFuture
- getParentEventId():java.lang.Object
- pushBack():V
- pushBack(I):V
- readLine():java.lang.String
f:com.intellij.build.output.BuildOutputInstantReaderImpl$Companion
f:com.intellij.build.output.JavacOutputParser
- com.intellij.build.output.BuildOutputParser
- <init>():V
- <init>(java.lang.String[]):V
- parse(java.lang.String,com.intellij.build.output.BuildOutputInstantReader,java.util.function.Consumer):Z
f:com.intellij.build.output.KotlincOutputParser
- com.intellij.build.output.BuildOutputParser
- sf:Companion:com.intellij.build.output.KotlincOutputParser$Companion
- <init>():V
- parse(java.lang.String,com.intellij.build.output.BuildOutputInstantReader,java.util.function.Consumer):Z
f:com.intellij.build.output.KotlincOutputParser$Companion
- f:extractPath(java.lang.String):java.lang.String
a:com.intellij.build.output.LineProcessor
- java.io.Closeable
- java.lang.Appendable
- <init>():V
- append(C):com.intellij.build.output.LineProcessor
- append(java.lang.CharSequence):com.intellij.build.output.LineProcessor
- append(java.lang.CharSequence,I,I):com.intellij.build.output.LineProcessor
- close():V
- a:process(java.lang.String):V
f:com.intellij.codeEditor.printing.ExportToHTMLSettings
- com.intellij.openapi.components.PersistentStateComponent
- OPEN_IN_BROWSER:Z
- OUTPUT_DIRECTORY:java.lang.String
- PRINT_LINE_NUMBERS:Z
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeEditor.printing.ExportToHTMLSettings
- getPrintScope():I
- getState():com.intellij.codeEditor.printing.ExportToHTMLSettings
- isIncludeSubdirectories():Z
- loadState(com.intellij.codeEditor.printing.ExportToHTMLSettings):V
- setIncludeSubpackages(Z):V
- setPrintScope(I):V
f:com.intellij.codeEditor.printing.HTMLTextPainter
- s:convertCodeFragmentToHTMLFragmentWithInlineStyles(com.intellij.psi.PsiElement,java.lang.String):java.lang.String
- getPsiFile():com.intellij.psi.PsiFile
- paint(it.unimi.dsi.fastutil.ints.Int2ObjectMap,java.io.Writer,Z):V
f:com.intellij.codeEditor.printing.PrintAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.codeEditor.printing.PrintOption
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:collectReferences(com.intellij.psi.PsiFile,java.util.Map):java.util.Map
- a:createConfigurable():com.intellij.openapi.options.UnnamedConfigurable
f:com.intellij.codeInsight.CodeInsightUtilBase
- com.intellij.codeInsight.CodeInsightUtilCore
- s:prepareEditorForWrite(com.intellij.openapi.editor.Editor):Z
- prepareFileForWrite(com.intellij.psi.PsiFile):Z
- preparePsiElementForWrite(com.intellij.psi.PsiElement):Z
- preparePsiElementsForWrite(java.util.Collection):Z
- prepareVirtualFilesForWrite(com.intellij.openapi.project.Project,java.util.Collection):Z
f:com.intellij.codeInsight.CodeInsightWorkspaceSettings
- com.intellij.openapi.util.SimpleModificationTracker
- com.intellij.codeInspection.options.OptionContainer
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.CodeInsightWorkspaceSettings
- getOptionController():com.intellij.codeInspection.options.OptionController
- getState():com.intellij.codeInsight.CodeInsightWorkspaceSettings
- isOptimizeImportsOnTheFly():Z
- loadState(com.intellij.codeInsight.CodeInsightWorkspaceSettings):V
- noStateLoaded():V
- setOptimizeImportsOnTheFly(Z):V
- setOptimizeImportsOnTheFly(Z,com.intellij.openapi.Disposable):V
f:com.intellij.codeInsight.CodeInsightWorkspaceSettings$Provider
- com.intellij.codeInspection.options.OptionControllerProvider
- <init>():V
- forContext(com.intellij.psi.PsiElement):com.intellij.codeInspection.options.OptionController
- name():java.lang.String
f:com.intellij.codeInsight.CommentUtil
- com.intellij.util.codeInsight.CommentUtilCore
- s:getMinLineIndent(com.intellij.openapi.editor.Document,I,I,com.intellij.psi.PsiFile):com.intellij.formatting.IndentData
f:com.intellij.codeInsight.TailTypeEx
- sf:SMART_LPARENTH:com.intellij.codeInsight.TailType
c:com.intellij.codeInsight.TargetElementUtil
- sf:ELEMENT_NAME_ACCEPTED:I
- sf:LOOKUP_ITEM_ACCEPTED:I
- sf:REFERENCED_ELEMENT_ACCEPTED:I
- <init>():V
- acceptImplementationForReference(com.intellij.psi.PsiReference,com.intellij.psi.PsiElement):Z
- adjustElement(com.intellij.openapi.editor.Editor,I,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:adjustOffset(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,I):I
- adjustReference(com.intellij.psi.PsiReference):com.intellij.psi.PsiElement
- s:findReference(com.intellij.openapi.editor.Editor):com.intellij.psi.PsiReference
- s:findReference(com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiReference
- s:findTargetElement(com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiElement
- findTargetElement(com.intellij.openapi.editor.Editor,I,I):com.intellij.psi.PsiElement
- getAllAccepted():I
- getDefinitionSearchFlags():I
- getGotoDeclarationTarget(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getInstance():com.intellij.codeInsight.TargetElementUtil
- getNamedElement(com.intellij.psi.PsiElement,I):com.intellij.psi.PsiElement
- getReferenceSearchFlags():I
- getSearchScope(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):com.intellij.psi.search.SearchScope
- getTargetCandidates(com.intellij.psi.PsiReference):java.util.Collection
- s:inVirtualSpace(com.intellij.openapi.editor.Editor,I):Z
- includeSelfInGotoImplementation(com.intellij.psi.PsiElement):Z
- isNavigatableSource(com.intellij.psi.PsiElement):Z
com.intellij.codeInsight.TargetElementUtilExtender
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getAdditionalDefinitionSearchFlags():I
- a:getAdditionalReferenceSearchFlags():I
- a:getAllAdditionalFlags():I
a:com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor
- p:myPreviousCodeProcessor:com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor,java.lang.String,java.lang.String):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.module.Module,java.lang.String,java.lang.String,Z):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,Z,java.lang.String,java.lang.String,Z):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,java.lang.String,java.lang.String,Z):V
- p:<init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,Z):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[],java.lang.String,java.lang.String,java.lang.Runnable,Z):V
- addFileFilter(com.intellij.openapi.vfs.VirtualFileFilter):V
- ps:emptyTask():java.util.concurrent.FutureTask
- getInfoCollector():com.intellij.codeInsight.actions.LayoutCodeInfoCollector
- s:getPresentablePath(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile):java.lang.String
- p:needsReadActionToPrepareTask():Z
- pa:prepareTask(com.intellij.psi.PsiFile,Z):java.util.concurrent.FutureTask
- processFilesUnderProgress(com.intellij.openapi.progress.ProgressIndicator):Z
- run():V
- runWithoutProgress():V
- setCollectInfo(Z):V
- setPostRunnable(java.lang.Runnable):V
- setProcessAllFilesAsSingleUndoStep(Z):V
f:com.intellij.codeInsight.actions.CodeCleanupCodeProcessor
- com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor
- <init>(com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor):V
- <init>(com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor,com.intellij.openapi.editor.SelectionModel):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[],java.lang.Runnable,Z):V
- s:getProgressText():java.lang.String
- setProfile(com.intellij.codeInspection.ex.InspectionProfileImpl):V
com.intellij.codeInsight.actions.DirectoryFormattingOptions
- com.intellij.codeInsight.actions.ReformatFilesOptions
- a:isIncludeSubdirectories():Z
f:com.intellij.codeInsight.actions.FileInEditorProcessor
- <init>(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.actions.LayoutCodeOptions):V
- processCode():V
- s:showHint(com.intellij.openapi.editor.Editor,java.lang.String,javax.swing.event.HyperlinkListener):V
f:com.intellij.codeInsight.actions.FileTreeIterator
- <init>(com.intellij.codeInsight.actions.FileTreeIterator):V
- <init>(com.intellij.openapi.module.Module):V
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.psi.PsiDirectory):V
- <init>(java.util.List):V
- s:collectModuleDirectories(com.intellij.openapi.module.Module):java.util.List
- s:collectProjectDirectories(com.intellij.openapi.project.Project):java.util.List
- hasNext():Z
- next():com.intellij.psi.PsiFile
c:com.intellij.codeInsight.actions.FormatChangedTextUtil
- <init>():V
- getChangedRangesInfo(com.intellij.psi.PsiFile):com.intellij.psi.codeStyle.ChangedRangesInfo
- s:getInstance():com.intellij.codeInsight.actions.FormatChangedTextUtil
- s:hasChanges(com.intellij.psi.PsiFile):Z
- isChangeNotTrackedForFile(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile):Z
f:com.intellij.codeInsight.actions.LastRunReformatCodeOptionsProvider
- <init>(com.intellij.ide.util.PropertiesComponent):V
- getLastCodeCleanup():Z
- getLastOptimizeImports():Z
- getLastRearrangeCode():Z
- getLastRunOptions(com.intellij.psi.PsiFile):com.intellij.codeInsight.actions.ReformatCodeRunOptions
- getLastTextRangeType():com.intellij.codeInsight.actions.TextRangeType
- isDoNotKeepLineBreaks():Z
- isRearrangeCode(com.intellij.lang.Language):Z
- saveCodeCleanupState(Z):V
- saveOptimizeImportsState(Z):V
- saveProcessVcsChangedTextState(Z):V
- saveRearrangeCodeState(Z):V
- saveRearrangeState(com.intellij.lang.Language,Z):V
- setDoNotKeepLineBreaks(Z):V
f:com.intellij.codeInsight.actions.LayoutCodeDialog
- com.intellij.openapi.ui.DialogWrapper
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,Z,java.lang.String):V
- getRunOptions():com.intellij.codeInsight.actions.LayoutCodeOptions
f:com.intellij.codeInsight.actions.LayoutCodeInfoCollector
- <init>():V
- getOptimizeImportsNotification():java.lang.String
- getRearrangeCodeNotification():java.lang.String
- getReformatCodeNotification():java.lang.String
- getSecondFormatNotification():java.lang.String
- hasReformatOrRearrangeNotification():Z
- isEmpty():Z
- setOptimizeImportsNotification(java.lang.String):V
- setRearrangeCodeNotification(java.lang.String):V
- setReformatCodeNotification(java.lang.String):V
- setSecondFormatNotification(java.lang.String):V
com.intellij.codeInsight.actions.LayoutCodeOptions
- com.intellij.codeInsight.actions.OptionalReformatActions
- a:getTextRangeType():com.intellij.codeInsight.actions.TextRangeType
a:com.intellij.codeInsight.actions.MultiCaretCodeInsightAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.PerformWithDocumentsCommitted
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- actionPerformedImpl(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getCommandName():java.lang.String
- pa:getHandler():com.intellij.codeInsight.actions.MultiCaretCodeInsightActionHandler
- p:isValidFor(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.psi.PsiFile):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.codeInsight.actions.MultiCaretCodeInsightActionHandler
- <init>():V
- a:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.psi.PsiFile):V
- postInvoke():V
f:com.intellij.codeInsight.actions.OptimizeImportsAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:actionPerformedImpl(com.intellij.openapi.actionSystem.DataContext):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.codeInsight.actions.OptimizeImportsProcessor
- com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor
- <init>(com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor):V
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.module.Module):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[],java.lang.Runnable):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[],java.lang.String,java.lang.Runnable):V
- s:getCommandName():java.lang.String
- p:prepareTask(com.intellij.psi.PsiFile,Z):java.util.concurrent.FutureTask
com.intellij.codeInsight.actions.OptionalReformatActions
- doNotKeepLineBreaks():Z
- isCodeCleanup():Z
- a:isOptimizeImports():Z
- a:isRearrangeCode():Z
com.intellij.codeInsight.actions.ReaderModeListener
- java.util.EventListener
- a:modeChanged(com.intellij.openapi.project.Project):V
f:com.intellij.codeInsight.actions.ReaderModeSettingsListener
- com.intellij.codeInsight.actions.ReaderModeListener
- sf:Companion:com.intellij.codeInsight.actions.ReaderModeSettingsListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- <init>():V
- modeChanged(com.intellij.openapi.project.Project):V
f:com.intellij.codeInsight.actions.ReaderModeSettingsListener$Companion
- f:applyToAllEditors(com.intellij.openapi.project.Project):V
- f:goToEditorReaderMode():V
c:com.intellij.codeInsight.actions.RearrangeCodeProcessor
- com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor
- <init>(com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor):V
- <init>(com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor,com.intellij.openapi.editor.SelectionModel):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[],java.lang.String,java.lang.Runnable):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[],java.lang.String,java.lang.Runnable,Z):V
- <init>(com.intellij.psi.PsiFile):V
- <init>(com.intellij.psi.PsiFile,com.intellij.openapi.editor.SelectionModel):V
- <init>(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange[]):V
- s:getProgressText():java.lang.String
- getRangesToFormat(com.intellij.psi.PsiFile,Z):java.util.Collection
- p:prepareTask(com.intellij.psi.PsiFile,Z):java.util.concurrent.FutureTask
c:com.intellij.codeInsight.actions.ReformatCodeAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:convertToPsiFiles(com.intellij.openapi.vfs.VirtualFile[],com.intellij.openapi.project.Project):com.intellij.psi.PsiFile[]
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:reformatDirectory(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,com.intellij.codeInsight.actions.DirectoryFormattingOptions):V
- s:registerFileMaskFilter(com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor,java.lang.String):V
- s:registerScopeFilter(com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor,com.intellij.psi.search.SearchScope):V
- s:setTestOptions(com.intellij.codeInsight.actions.ReformatFilesOptions):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.codeInsight.actions.ReformatCodeProcessor
- com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor
- <init>(com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor,com.intellij.openapi.editor.SelectionModel):V
- <init>(com.intellij.codeInsight.actions.AbstractLayoutCodeProcessor,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.module.Module,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange,Z):V
- <init>(com.intellij.openapi.project.Project,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[],java.lang.Runnable,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[],java.lang.String,java.lang.Runnable,Z):V
- <init>(com.intellij.psi.PsiFile,com.intellij.openapi.editor.SelectionModel):V
- <init>(com.intellij.psi.PsiFile,Z):V
- <init>(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange[]):V
- s:getCommandName():java.lang.String
- p:needsReadActionToPrepareTask():Z
- p:prepareTask(com.intellij.psi.PsiFile,Z):java.util.concurrent.FutureTask
- setDoNotKeepLineBreaks(com.intellij.psi.PsiFile):V
f:com.intellij.codeInsight.actions.ReformatCodeRunOptions
- com.intellij.codeInsight.actions.LayoutCodeOptions
- <init>(com.intellij.codeInsight.actions.TextRangeType):V
- getTextRangeType():com.intellij.codeInsight.actions.TextRangeType
- isOptimizeImports():Z
- isRearrangeCode():Z
- setOptimizeImports(Z):com.intellij.codeInsight.actions.ReformatCodeRunOptions
- setProcessingScope(com.intellij.codeInsight.actions.TextRangeType):V
- setRearrangeCode(Z):com.intellij.codeInsight.actions.ReformatCodeRunOptions
com.intellij.codeInsight.actions.ReformatFilesOptions
- com.intellij.codeInsight.actions.LayoutCodeOptions
- a:getFileTypeMask():java.lang.String
- a:getSearchScope():com.intellij.psi.search.SearchScope
c:com.intellij.codeInsight.actions.ShowReformatFileDialog
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
e:com.intellij.codeInsight.actions.TextRangeType
- java.lang.Enum
- sf:SELECTED_TEXT:com.intellij.codeInsight.actions.TextRangeType
- sf:VCS_CHANGED_TEXT:com.intellij.codeInsight.actions.TextRangeType
- sf:WHOLE_FILE:com.intellij.codeInsight.actions.TextRangeType
- s:valueOf(java.lang.String):com.intellij.codeInsight.actions.TextRangeType
- s:values():com.intellij.codeInsight.actions.TextRangeType[]
c:com.intellij.codeInsight.actions.VcsFacade
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- sf:TEST_REVISION_CONTENT:com.intellij.openapi.util.Key
- p:<init>():V
- calculateChangedLinesNumber(com.intellij.openapi.editor.Document,java.lang.CharSequence):I
- getChangedFilesFromDirs(com.intellij.openapi.project.Project,java.util.List):java.util.List
- getChangedRangesInfo(com.intellij.psi.PsiFile):com.intellij.psi.codeStyle.ChangedRangesInfo
- getChangedTextRanges(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile):java.util.List
- s:getInstance():com.intellij.codeInsight.actions.VcsFacade
- getVcsIgnoreFileNames(com.intellij.openapi.project.Project):java.util.Set
- hasActiveVcss(com.intellij.openapi.project.Project):Z
- hasChanges(com.intellij.openapi.module.Module):Z
- hasChanges(com.intellij.openapi.project.Project):Z
- hasChanges(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
- hasChanges(com.intellij.psi.PsiDirectory):Z
- hasChanges(com.intellij.psi.PsiFile):Z
- hasChanges(com.intellij.openapi.vfs.VirtualFile[],com.intellij.openapi.project.Project):Z
- isChangeNotTrackedForFile(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile):Z
- isFileUnderVcs(com.intellij.psi.PsiFile):java.lang.Boolean
- markFilesDirty(com.intellij.openapi.project.Project,java.util.List):V
- runHeavyModificationTask(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,java.lang.Runnable):V
f:com.intellij.codeInsight.actions.VisualFormattingSchemesCombo
- com.intellij.application.options.schemes.SchemesCombo
- <init>(com.intellij.openapi.project.Project):V
- f:onApply(com.intellij.codeInsight.actions.ReaderModeSettings):V
- f:onIsModified(com.intellij.codeInsight.actions.ReaderModeSettings):Z
- f:onReset(com.intellij.codeInsight.actions.ReaderModeSettings):V
a:com.intellij.codeInsight.actions.onSave.ActionOnSaveInfoBase
- com.intellij.ide.actionsOnSave.ActionOnSaveInfo
- <init>(com.intellij.ide.actionsOnSave.ActionOnSaveContext,java.lang.String,java.lang.String,Z):V
- p:apply():V
- getActionOnSaveName():java.lang.String
- isActionOnSaveEnabled():Z
- p:isModified():Z
- setActionOnSaveEnabled(Z):V
f:com.intellij.codeInsight.actions.onSave.FormatOnSaveOptions
- com.intellij.codeInsight.actions.onSave.FormatOnSaveOptionsBase
- com.intellij.openapi.components.PersistentStateComponent
- java.lang.Cloneable
- <init>(com.intellij.openapi.project.Project):V
- clone():com.intellij.codeInsight.actions.onSave.FormatOnSaveOptions
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.actions.onSave.FormatOnSaveOptions
- isFormatOnlyChangedLines():Z
c:com.intellij.codeInsight.actions.onSave.FormatOnSaveOptionsBase
- com.intellij.openapi.components.PersistentStateComponent
- java.lang.Cloneable
- psf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>(com.intellij.codeInsight.actions.onSave.FormatOnSaveOptionsBase$StateBase):V
- clone():com.intellij.codeInsight.actions.onSave.FormatOnSaveOptionsBase
- p:convertOldProperties():V
- equals(java.lang.Object):Z
- f:getState():com.intellij.codeInsight.actions.onSave.FormatOnSaveOptionsBase$StateBase
- hashCode():I
- isAllFileTypesSelected():Z
- isFileTypeSelected(com.intellij.openapi.fileTypes.FileType):Z
- isRunOnSaveEnabled():Z
- f:loadState(com.intellij.codeInsight.actions.onSave.FormatOnSaveOptionsBase$StateBase):V
- f:noStateLoaded():V
- setRunOnSaveEnabled(Z):V
com.intellij.codeInsight.actions.onSave.FormatOnSaveOptionsBase$DefaultsProvider
- getFileTypesFormattedOnSaveByDefault():java.util.Collection
- getFileTypesWithOptimizeImportsOnSaveByDefault():java.util.Collection
f:com.intellij.codeInsight.actions.onSave.OptimizeImportsOnSaveOptions
- com.intellij.codeInsight.actions.onSave.FormatOnSaveOptionsBase
- com.intellij.openapi.components.PersistentStateComponent
- java.lang.Cloneable
- <init>(com.intellij.openapi.project.Project):V
- clone():com.intellij.codeInsight.actions.onSave.OptimizeImportsOnSaveOptions
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.actions.onSave.OptimizeImportsOnSaveOptions
f:com.intellij.codeInsight.codeVision.CodeVisionBundle
- com.intellij.DynamicBundle
- sf:Companion:com.intellij.codeInsight.codeVision.CodeVisionBundle$Companion
- <init>():V
f:com.intellij.codeInsight.codeVision.CodeVisionBundle$Companion
- f:message(java.lang.String,java.lang.Object[]):java.lang.String
- f:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
c:com.intellij.codeInsight.codeVision.CodeVisionContextProvider
- <init>(com.intellij.openapi.project.Project):V
- createCodeVisionContext(com.intellij.openapi.editor.Editor):com.intellij.codeInsight.codeVision.EditorCodeVisionContext
- f:getProject():com.intellij.openapi.project.Project
c:com.intellij.codeInsight.codeVision.CodeVisionHost
- sf:Companion:com.intellij.codeInsight.codeVision.CodeVisionHost$Companion
- sf:defaultVisibleLenses:I
- sf:settingsLensProviderId:java.lang.String
- <init>(com.intellij.openapi.project.Project):V
- f:calculateCodeVisionSync(com.intellij.openapi.editor.Editor,com.intellij.openapi.Disposable):V
- collectAllProviders():java.util.List
- f:collectPlaceholders(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,kotlin.coroutines.Continuation):java.lang.Object
- getAnchorForEntry(com.intellij.codeInsight.codeVision.CodeVisionEntry):com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- f:getCodeVisionLifetime():com.jetbrains.rd.util.lifetime.Lifetime
- f:getInvalidateProviderSignal():com.jetbrains.rd.util.reactive.Signal
- f:getLifeSettingModel():com.intellij.codeInsight.codeVision.settings.CodeVisionSettingsLiveModel
- f:getNumber(java.lang.String):I
- f:getPriorityForEntry(com.intellij.codeInsight.codeVision.CodeVisionEntry):I
- f:getProject():com.intellij.openapi.project.Project
- getProviderById(java.lang.String):com.intellij.codeInsight.codeVision.CodeVisionProvider
- f:getProviders():java.util.List
- handleLensClick(com.intellij.openapi.editor.Editor,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.codeVision.CodeVisionEntry):V
- handleLensExtraAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.codeVision.CodeVisionEntry,java.lang.String):V
- initialize():V
- f:invalidateProvider(com.intellij.codeInsight.codeVision.CodeVisionHost$LensInvalidateSignal):V
- sf:isCodeLensTest():Z
- f:nullIfDefault(com.intellij.codeInsight.codeVision.CodeVisionAnchorKind):com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- p:openCodeVisionSettings(com.intellij.codeInsight.codeVision.CodeVisionProvider):V
- bs:openCodeVisionSettings$default(com.intellij.codeInsight.codeVision.CodeVisionHost,com.intellij.codeInsight.codeVision.CodeVisionProvider,I,java.lang.Object):V
- pf:rearrangeProviders():V
- f:setProviders(java.util.List):V
- p:subscribeForDocumentChanges(com.intellij.openapi.editor.Editor,com.jetbrains.rd.util.lifetime.Lifetime,kotlin.jvm.functions.Function0):V
f:com.intellij.codeInsight.codeVision.CodeVisionHost$Companion
- f:isCodeLensTest():Z
- f:isCodeVisionTestKey():com.intellij.openapi.util.Key
f:com.intellij.codeInsight.codeVision.CodeVisionHost$LensInvalidateSignal
- <init>(com.intellij.openapi.editor.Editor,java.util.Collection):V
- b:<init>(com.intellij.openapi.editor.Editor,java.util.Collection,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():com.intellij.openapi.editor.Editor
- f:component2():java.util.Collection
- f:copy(com.intellij.openapi.editor.Editor,java.util.Collection):com.intellij.codeInsight.codeVision.CodeVisionHost$LensInvalidateSignal
- bs:copy$default(com.intellij.codeInsight.codeVision.CodeVisionHost$LensInvalidateSignal,com.intellij.openapi.editor.Editor,java.util.Collection,I,java.lang.Object):com.intellij.codeInsight.codeVision.CodeVisionHost$LensInvalidateSignal
- equals(java.lang.Object):Z
- f:getEditor():com.intellij.openapi.editor.Editor
- f:getProviderIds():java.util.Collection
- hashCode():I
c:com.intellij.codeInsight.codeVision.CodeVisionInitializer
- sf:Companion:com.intellij.codeInsight.codeVision.CodeVisionInitializer$Companion
- <init>(com.intellij.openapi.project.Project):V
- getCodeVisionHost():com.intellij.codeInsight.codeVision.CodeVisionHost
- p:getHost():com.intellij.codeInsight.codeVision.CodeVisionHost
f:com.intellij.codeInsight.codeVision.CodeVisionInitializer$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.codeVision.CodeVisionInitializer
f:com.intellij.codeInsight.codeVision.CodeVisionModel
- <init>():V
- f:addCodeVisionListener(com.jetbrains.rd.util.lifetime.Lifetime,com.intellij.codeInsight.codeVision.CodeVisionModel$Listener):V
- f:addOrUpdateLenses(java.lang.Iterable):V
- f:removeLenses(java.lang.Iterable):V
com.intellij.codeInsight.codeVision.CodeVisionModel$Listener
- a:onLensesAddedOrUpdated(java.lang.Iterable):V
- a:onLensesRemoved(java.lang.Iterable):V
com.intellij.codeInsight.codeVision.CodeVisionProviderFactory
- sf:Companion:com.intellij.codeInsight.codeVision.CodeVisionProviderFactory$Companion
- sf:EP_NAME:java.lang.String
- a:createProviders(com.intellij.openapi.project.Project):kotlin.sequences.Sequence
f:com.intellij.codeInsight.codeVision.CodeVisionProviderFactory$Companion
- sf:EP_NAME:java.lang.String
- f:createAllProviders(com.intellij.openapi.project.Project):java.util.List
- f:getExtensionPoint():com.intellij.openapi.extensions.ExtensionPointName
a:com.intellij.codeInsight.codeVision.CodeVisionState
- sf:Companion:com.intellij.codeInsight.codeVision.CodeVisionState$Companion
- f:getResult():java.util.List
- f:isReady():Z
f:com.intellij.codeInsight.codeVision.CodeVisionState$Companion
- f:getREADY_EMPTY():com.intellij.codeInsight.codeVision.CodeVisionState$Ready
f:com.intellij.codeInsight.codeVision.CodeVisionState$NotReady
- com.intellij.codeInsight.codeVision.CodeVisionState
- sf:INSTANCE:com.intellij.codeInsight.codeVision.CodeVisionState$NotReady
f:com.intellij.codeInsight.codeVision.CodeVisionState$Ready
- com.intellij.codeInsight.codeVision.CodeVisionState
- <init>(java.util.List):V
c:com.intellij.codeInsight.codeVision.EditorCodeVisionContext
- <init>(com.intellij.codeInsight.codeVision.CodeVisionHost,com.intellij.openapi.editor.Editor):V
- clearLenses():V
- f:discardPending():V
- f:getCodeVisionModel():com.intellij.codeInsight.codeVision.CodeVisionModel
- f:getEditor():com.intellij.openapi.editor.Editor
- getHasAnyPendingLenses():Z
- f:getValidPairResult():kotlin.sequences.Sequence
- getValidResult():kotlin.sequences.Sequence
- f:getZombies():java.util.List
- f:hasProviderCodeVision(java.lang.String):Z
- f:invokeMoreMenu(I):V
- pf:isValidFor(com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.Document):Z
- f:notifyPendingLenses():V
- f:resubmitThings():V
- f:setResults(java.util.List):V
- f:setZombieResults(java.util.List):V
- f:setZombies(java.util.List):V
f:com.intellij.codeInsight.codeVision.EditorCodeVisionContextKt
- sf:getCodeVisionEntryMouseEventKey():com.intellij.openapi.util.Key
- sf:getCodeVisionEntryOnHighlighterKey():com.intellij.openapi.util.Key
- sf:getCodeVisionEntryOrThrow(com.intellij.openapi.editor.RangeMarker):com.intellij.codeInsight.codeVision.CodeVisionEntry
- sf:getEditorCodeVisionEntryKey():com.intellij.openapi.util.Key
- sf:getEditorLensContextKey():com.intellij.openapi.util.Key
- sf:getHighlighterOnCodeVisionEntryKey():com.intellij.openapi.util.Key
- sf:getLensContext(com.intellij.openapi.editor.Editor):com.intellij.codeInsight.codeVision.EditorCodeVisionContext
com.intellij.codeInsight.codeVision.GenericPlaceholderCollector
- a:collectPlaceholders(com.intellij.openapi.editor.Editor):java.util.List
c:com.intellij.codeInsight.codeVision.settings.CodeVisionGroupDefaultSettingModel
- com.intellij.codeInsight.codeVision.settings.CodeVisionGroupSettingModel
- sf:Companion:com.intellij.codeInsight.codeVision.settings.CodeVisionGroupDefaultSettingModel$Companion
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.lang.Language,Z,java.util.List):V
- <init>(java.lang.String,java.lang.String,java.lang.String,Z,java.util.List):V
- apply():V
- collectData(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.lang.Runnable
- getComponent():javax.swing.JComponent
- getDescription():java.lang.String
- getName():java.lang.String
- p:getPreviewLanguage():com.intellij.lang.Language
- getPreviewText():java.lang.String
- f:getProviders():java.util.List
- isModified():Z
- reset():V
f:com.intellij.codeInsight.codeVision.settings.CodeVisionGroupDefaultSettingModel$Companion
a:com.intellij.codeInsight.codeVision.settings.CodeVisionGroupSettingModel
- com.intellij.codeInsight.hints.settings.InlayProviderSettingsModel
- <init>(Z,java.lang.String):V
- f:getCaseDescription(com.intellij.codeInsight.hints.ImmediateConfigurable$Case):java.lang.String
- f:getCasePreview(com.intellij.codeInsight.hints.ImmediateConfigurable$Case):java.lang.String
- f:getCasePreviewLanguage(com.intellij.codeInsight.hints.ImmediateConfigurable$Case):com.intellij.lang.Language
- f:getCases():java.util.List
- f:getGroup():com.intellij.codeInsight.hints.InlayGroup
- f:getMainCheckBoxLabel():java.lang.String
- p:getPreviewLanguage():com.intellij.lang.Language
- getPreviewText():java.lang.String
com.intellij.codeInsight.codeVision.settings.CodeVisionGroupSettingProvider
- createModel(com.intellij.openapi.project.Project):com.intellij.codeInsight.codeVision.settings.CodeVisionGroupSettingModel
- createSettingsModel(Z,java.util.List):com.intellij.codeInsight.codeVision.settings.CodeVisionGroupSettingModel
- getDescription():java.lang.String
- a:getGroupId():java.lang.String
- getGroupName():java.lang.String
f:com.intellij.codeInsight.codeVision.settings.CodeVisionGroupSettingProvider$EP
- sf:INSTANCE:com.intellij.codeInsight.codeVision.settings.CodeVisionGroupSettingProvider$EP
- f:findGroupModels():java.util.List
- f:findSingleModels(com.intellij.openapi.project.Project):java.util.List
- f:getEXTENSION_POINT_NAME():com.intellij.openapi.extensions.ExtensionPointName
f:com.intellij.codeInsight.codeVision.settings.CodeVisionSettingsLiveModel
- <init>(com.jetbrains.rd.util.lifetime.Lifetime):V
- f:getAnchorLimit(com.intellij.codeInsight.codeVision.CodeVisionAnchorKind):java.lang.Integer
- f:getCodeVisionGroupToPosition():com.jetbrains.rd.util.reactive.ViewableMap
- f:getDefaultPosition():com.jetbrains.rd.util.reactive.Property
- f:getDisabledCodeVisionProviderIds():com.jetbrains.rd.util.reactive.ViewableSet
- f:getVisibleMetricsAboveDeclarationCount():com.jetbrains.rd.util.reactive.Property
- f:getVisibleMetricsNextToDeclarationCount():com.jetbrains.rd.util.reactive.Property
- f:isEnabled():com.jetbrains.rd.util.reactive.Property
- f:isEnabledWithRegistry():com.jetbrains.rd.util.reactive.Property
- f:isRegistryEnabled():com.jetbrains.rd.util.reactive.Property
f:com.intellij.codeInsight.codeVision.settings.CodeVisionSettingsPreviewLanguage
- com.intellij.openapi.extensions.PluginAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- language:java.lang.String
- modelId:java.lang.String
- <init>():V
- findBundle():java.util.ResourceBundle
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
e:com.intellij.codeInsight.codeVision.settings.PlatformCodeVisionIds
- java.lang.Enum
- sf:CHANGE_SIGNATURE:com.intellij.codeInsight.codeVision.settings.PlatformCodeVisionIds
- sf:INHERITORS:com.intellij.codeInsight.codeVision.settings.PlatformCodeVisionIds
- sf:PROBLEMS:com.intellij.codeInsight.codeVision.settings.PlatformCodeVisionIds
- sf:RENAME:com.intellij.codeInsight.codeVision.settings.PlatformCodeVisionIds
- sf:USAGES:com.intellij.codeInsight.codeVision.settings.PlatformCodeVisionIds
- s:getEntries():kotlin.enums.EnumEntries
- f:getKey():java.lang.String
- s:valueOf(java.lang.String):com.intellij.codeInsight.codeVision.settings.PlatformCodeVisionIds
- s:values():com.intellij.codeInsight.codeVision.settings.PlatformCodeVisionIds[]
f:com.intellij.codeInsight.codeVision.ui.model.AdditionalCodeVisionEntry
- com.intellij.codeInsight.codeVision.CodeVisionEntry
- <init>(java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):V
- b:<init>(java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getSwingIcon():javax.swing.Icon
- f:getText():java.lang.String
f:com.intellij.codeInsight.codeVision.ui.model.ClickableRichTextCodeVisionEntry
- com.intellij.codeInsight.codeVision.ui.model.RichTextCodeVisionEntry
- com.intellij.codeInsight.codeVision.ui.model.CodeVisionPredefinedActionEntry
- <init>(java.lang.String,com.intellij.codeInsight.codeVision.ui.model.richText.RichText,kotlin.jvm.functions.Function2,javax.swing.Icon,java.lang.String,java.lang.String,java.util.List):V
- b:<init>(java.lang.String,com.intellij.codeInsight.codeVision.ui.model.richText.RichText,kotlin.jvm.functions.Function2,javax.swing.Icon,java.lang.String,java.lang.String,java.util.List,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getOnClick():kotlin.jvm.functions.Function2
- onClick(com.intellij.openapi.editor.Editor):V
f:com.intellij.codeInsight.codeVision.ui.model.ClickableTextCodeVisionEntry
- com.intellij.codeInsight.codeVision.ui.model.TextCodeVisionEntry
- com.intellij.codeInsight.codeVision.ui.model.CodeVisionPredefinedActionEntry
- <init>(java.lang.String,java.lang.String,kotlin.jvm.functions.Function2,javax.swing.Icon,java.lang.String,java.lang.String,java.util.List):V
- b:<init>(java.lang.String,java.lang.String,kotlin.jvm.functions.Function2,javax.swing.Icon,java.lang.String,java.lang.String,java.util.List,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getOnClick():kotlin.jvm.functions.Function2
- onClick(com.intellij.openapi.editor.Editor):V
f:com.intellij.codeInsight.codeVision.ui.model.CodeVisionListData
- sf:Companion:com.intellij.codeInsight.codeVision.ui.model.CodeVisionListData$Companion
- sf:KEY:com.intellij.openapi.util.Key
- f:getAnchor():com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- f:getAnchoredLens():java.util.List
- f:getInlay():com.intellij.openapi.editor.Inlay
- f:getLifetime():com.jetbrains.rd.util.lifetime.Lifetime
- f:getRangeCodeVisionModel():com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel
- f:getVisibleLens():java.util.ArrayList
- f:isMoreLensActive():Z
- f:isPainted():Z
- f:setPainted(Z):V
- f:state():com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState
f:com.intellij.codeInsight.codeVision.ui.model.CodeVisionListData$Companion
com.intellij.codeInsight.codeVision.ui.model.CodeVisionPredefinedActionEntry
- a:onClick(com.intellij.openapi.editor.Editor):V
f:com.intellij.codeInsight.codeVision.ui.model.CounterCodeVisionEntry
- com.intellij.codeInsight.codeVision.CodeVisionEntry
- <init>(I,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,java.lang.String,java.util.List):V
- f:getCount():I
- f:getText():java.lang.String
f:com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.util.Map,com.intellij.openapi.util.TextRange,java.lang.String):V
- b:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.util.Map,com.intellij.openapi.util.TextRange,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getAnchoringRange():com.intellij.openapi.util.TextRange
- f:getEditor():com.intellij.openapi.editor.Editor
- f:getInlays():java.util.ArrayList
- f:getName():java.lang.String
- f:getProject():com.intellij.openapi.project.Project
- f:handleLensClick(com.intellij.codeInsight.codeVision.CodeVisionEntry,com.intellij.openapi.editor.Inlay):V
- f:handleLensExtraAction(com.intellij.codeInsight.codeVision.CodeVisionEntry,java.lang.String):V
- f:handleLensRightClick(com.intellij.codeInsight.codeVision.CodeVisionEntry,com.intellij.openapi.editor.Inlay):V
- f:sortedLensesMorePopup():java.util.List
- f:state():com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState
e:com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState
- java.lang.Enum
- sf:ACTIVE:com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState
- sf:NORMAL:com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState
- s:values():com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState[]
c:com.intellij.codeInsight.codeVision.ui.model.RichTextCodeVisionEntry
- com.intellij.codeInsight.codeVision.CodeVisionEntry
- <init>(java.lang.String,com.intellij.codeInsight.codeVision.ui.model.richText.RichText,javax.swing.Icon,java.lang.String,java.lang.String,java.util.List):V
- b:<init>(java.lang.String,com.intellij.codeInsight.codeVision.ui.model.richText.RichText,javax.swing.Icon,java.lang.String,java.lang.String,java.util.List,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getText():com.intellij.codeInsight.codeVision.ui.model.richText.RichText
c:com.intellij.codeInsight.codeVision.ui.model.TextCodeVisionEntry
- com.intellij.codeInsight.codeVision.CodeVisionEntry
- <init>(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,java.lang.String,java.util.List):V
- b:<init>(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,java.lang.String,java.util.List,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getText():java.lang.String
f:com.intellij.codeInsight.codeVision.ui.model.ZombieCodeVisionEntry
- com.intellij.codeInsight.codeVision.CodeVisionEntry
- <init>(java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.Integer,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.Integer,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getCount():java.lang.Integer
- f:getText():java.lang.String
f:com.intellij.codeInsight.codeVision.ui.model.richText.RichString
- <init>(com.intellij.openapi.util.TextRange,com.intellij.ui.SimpleTextAttributes,com.intellij.codeInsight.codeVision.ui.model.richText.RichText):V
- f:component1():com.intellij.openapi.util.TextRange
- f:component2():com.intellij.ui.SimpleTextAttributes
- f:component3():com.intellij.codeInsight.codeVision.ui.model.richText.RichText
- f:copy(com.intellij.openapi.util.TextRange,com.intellij.ui.SimpleTextAttributes,com.intellij.codeInsight.codeVision.ui.model.richText.RichText):com.intellij.codeInsight.codeVision.ui.model.richText.RichString
- bs:copy$default(com.intellij.codeInsight.codeVision.ui.model.richText.RichString,com.intellij.openapi.util.TextRange,com.intellij.ui.SimpleTextAttributes,com.intellij.codeInsight.codeVision.ui.model.richText.RichText,I,java.lang.Object):com.intellij.codeInsight.codeVision.ui.model.richText.RichString
- equals(java.lang.Object):Z
- f:getAttributes():com.intellij.ui.SimpleTextAttributes
- f:getRichText():com.intellij.codeInsight.codeVision.ui.model.richText.RichText
- f:getText():java.lang.String
- f:getTextRange():com.intellij.openapi.util.TextRange
- hashCode():I
- f:setAttributes(com.intellij.ui.SimpleTextAttributes):V
c:com.intellij.codeInsight.codeVision.ui.model.richText.RichText
- java.lang.Cloneable
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.util.Collection):V
- f:addStyle(I,com.intellij.openapi.util.TextRange):V
- f:append(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- clone():com.intellij.codeInsight.codeVision.ui.model.richText.RichText
- f:getLength():I
- f:getParts():java.util.List
- f:getText():java.lang.String
- f:setForeColor(java.awt.Color):V
f:com.intellij.codeInsight.codeVision.ui.popup.layouter.RectangleUtilsKt
- sf:getBottom(java.awt.Rectangle):I
- sf:getCenter(java.awt.Rectangle):java.awt.Point
- sf:getLeft(java.awt.Rectangle):I
- sf:getRight(java.awt.Rectangle):I
- sf:getTop(java.awt.Rectangle):I
- sf:horizontalSmartClip(java.awt.Rectangle,java.awt.Rectangle):java.awt.Rectangle
- sf:inflate(java.awt.Rectangle,I,I):java.awt.Rectangle
- sf:inflate(java.awt.Rectangle,java.awt.Dimension):java.awt.Rectangle
- sf:map(java.awt.Rectangle,kotlin.jvm.functions.Function1):java.awt.Rectangle
- sf:rectangleFromLTRB(I,I,I,I):java.awt.Rectangle
- sf:rectangleFromLTRBNonNegative(I,I,I,I):java.awt.Rectangle
- sf:setBottom(java.awt.Rectangle,I):V
- sf:setLeft(java.awt.Rectangle,I):V
- sf:setRight(java.awt.Rectangle,I):V
- sf:setTop(java.awt.Rectangle,I):V
- sf:smartClip(java.awt.Rectangle,java.awt.Rectangle):java.awt.Rectangle
- sf:verticalSmartClip(java.awt.Rectangle,java.awt.Rectangle):java.awt.Rectangle
f:com.intellij.codeInsight.codeVision.ui.renderers.InlineCodeVisionInlayRenderer
- com.intellij.codeInsight.hints.presentation.InputHandler
- com.intellij.openapi.editor.EditorCustomElementRenderer
- <init>():V
- calcWidthInPixels(com.intellij.openapi.editor.Inlay):I
- calculateCodeVisionEntryBounds(com.intellij.codeInsight.codeVision.CodeVisionEntry):java.awt.Rectangle
f:com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionScaledIconPainter
- <init>():V
- <init>(D,D):V
- b:<init>(D,D,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:height(javax.swing.Icon,F):I
- f:paint(com.intellij.openapi.editor.Editor,java.awt.Graphics,javax.swing.Icon,java.awt.Point,F):V
- f:scaleFactor(I,I):F
- f:width(javax.swing.Icon,F):I
c:com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionStringPainter
- <init>(java.lang.String,com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionTheme):V
- b:<init>(java.lang.String,com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionTheme,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getText():java.lang.String
- f:getTheme():com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionTheme
- paint(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.markup.TextAttributes,java.awt.Graphics,java.awt.Point,com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState,Z):V
- size(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState):java.awt.Dimension
f:com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionTheme
- sf:Companion:com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionTheme$Companion
- <init>():V
- <init>(I,I,I,I,I):V
- b:<init>(I,I,I,I,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getBottom():I
- f:getIconGap():I
- f:getLeft():I
- f:getRight():I
- f:getTop():I
- f:setBottom(I):V
- f:setIconGap(I):V
- f:setLeft(I):V
- f:setRight(I):V
- f:setTop(I):V
f:com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionTheme$Companion
- f:editorFont(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.colors.EditorFontType):java.awt.Font
- bs:editorFont$default(com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionTheme$Companion,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.colors.EditorFontType,I,java.lang.Object):java.awt.Font
- f:yInInlayBounds(I,java.awt.Rectangle):Z
c:com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionThemeInfoProvider
- <init>():V
- font(com.intellij.openapi.editor.Editor,I):java.awt.Font
- bs:font$default(com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionThemeInfoProvider,com.intellij.openapi.editor.Editor,I,I,java.lang.Object):java.awt.Font
- foregroundColor(com.intellij.openapi.editor.Editor,Z):java.awt.Color
- lensFontSize(com.intellij.openapi.editor.Editor):F
com.intellij.codeInsight.codeVision.ui.renderers.painters.ICodeVisionEntryBasePainter
- a:paint(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.markup.TextAttributes,java.awt.Graphics,java.lang.Object,java.awt.Point,com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState,Z,com.intellij.codeInsight.codeVision.CodeVisionEntry):V
- a:size(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.codeVision.ui.model.RangeCodeVisionModel$InlayState,java.lang.Object):java.awt.Dimension
c:com.intellij.codeInsight.completion.CodeCompletionHandlerBase
- sf:DIRECT_INSERTION:com.intellij.openapi.util.Key
- <init>(com.intellij.codeInsight.completion.CompletionType):V
- <init>(com.intellij.codeInsight.completion.CompletionType,Z,Z,Z):V
- s:addCompletionChar(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement):V
- afterItemInsertion(com.intellij.codeInsight.completion.CompletionProgressIndicator,java.lang.Runnable):V
- p:completionFinished(com.intellij.codeInsight.completion.CompletionProgressIndicator,Z):V
- s:createHandler(com.intellij.codeInsight.completion.CompletionType):com.intellij.codeInsight.completion.CodeCompletionHandlerBase
- s:createHandler(com.intellij.codeInsight.completion.CompletionType,Z,Z,Z):com.intellij.codeInsight.completion.CodeCompletionHandlerBase
- handleCompletionElementSelected(com.intellij.codeInsight.lookup.LookupElement,C,com.intellij.codeInsight.completion.OffsetMap,com.intellij.codeInsight.completion.OffsetsInFile,com.intellij.openapi.editor.Editor,java.lang.Integer):V
- f:invokeCompletion(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- f:invokeCompletion(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I):V
- f:invokeCompletion(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,Z):V
- p:isTestingCompletionQualityMode():Z
- p:isTestingMode():Z
- p:lookupItemSelected(com.intellij.codeInsight.completion.CompletionProgressIndicator,com.intellij.codeInsight.lookup.LookupElement,C,java.util.List):V
- s:setAutoInsertTimeout(I):V
a:com.intellij.codeInsight.completion.CompletionPhase
- com.intellij.openapi.Disposable
- sf:AUTO_POPUP_TYPED_EVENT:com.intellij.openapi.util.Key
- sf:NoCompletion:com.intellij.codeInsight.completion.CompletionPhase
- f:indicator:com.intellij.codeInsight.completion.CompletionProgressIndicator
- p:<init>(com.intellij.codeInsight.completion.CompletionProgressIndicator):V
- dispose():V
- a:newCompletionStarted(I,Z):I
f:com.intellij.codeInsight.completion.CompletionPhase$BgCalculation
- com.intellij.codeInsight.completion.CompletionPhase
- <init>(com.intellij.codeInsight.completion.CompletionProgressIndicator):V
- newCompletionStarted(I,Z):I
f:com.intellij.codeInsight.completion.CompletionPhase$CommittingDocuments
- com.intellij.codeInsight.completion.CompletionPhase
- dispose():V
- ignoreCurrentDocumentChange():V
- newCompletionStarted(I,Z):I
f:com.intellij.codeInsight.completion.CompletionPhase$EmptyAutoPopup
- com.intellij.codeInsight.completion.CompletionPhase$ZombiePhase
- allowsSkippingNewAutoPopup(com.intellij.openapi.editor.Editor,C):Z
- newCompletionStarted(I,Z):I
f:com.intellij.codeInsight.completion.CompletionPhase$InsertedSingleItem
- com.intellij.codeInsight.completion.CompletionPhase$ZombiePhase
- f:restorePrefix:java.lang.Runnable
- newCompletionStarted(I,Z):I
f:com.intellij.codeInsight.completion.CompletionPhase$ItemsCalculated
- com.intellij.codeInsight.completion.CompletionPhase
- <init>(com.intellij.codeInsight.completion.CompletionProgressIndicator):V
- newCompletionStarted(I,Z):I
f:com.intellij.codeInsight.completion.CompletionPhase$NoSuggestionsHint
- com.intellij.codeInsight.completion.CompletionPhase$ZombiePhase
- newCompletionStarted(I,Z):I
f:com.intellij.codeInsight.completion.CompletionPhase$Synchronous
- com.intellij.codeInsight.completion.CompletionPhase
- <init>(com.intellij.codeInsight.completion.CompletionProgressIndicator):V
- newCompletionStarted(I,Z):I
a:com.intellij.codeInsight.completion.CompletionPhase$ZombiePhase
- com.intellij.codeInsight.completion.CompletionPhase
com.intellij.codeInsight.completion.CompletionPhaseListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:completionPhaseChanged(Z):V
a:com.intellij.codeInsight.completion.CompletionPreselectionBehaviourProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- shouldPreselectFirstSuggestion(com.intellij.codeInsight.completion.CompletionParameters):Z
c:com.intellij.codeInsight.completion.DefaultCompletionContributor
- com.intellij.codeInsight.completion.CompletionContributor
- com.intellij.openapi.project.DumbAware
- <init>():V
- handleAutoCompletionPossibility(com.intellij.codeInsight.completion.AutoCompletionContext):com.intellij.codeInsight.completion.AutoCompletionDecision
f:com.intellij.codeInsight.completion.ExplicitProximityWeigher
- com.intellij.codeInsight.completion.CompletionWeigher
- <init>():V
- weigh(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.CompletionLocation):java.lang.Integer
f:com.intellij.codeInsight.completion.FilePathCompletionContributor
- com.intellij.codeInsight.completion.CompletionContributor
- <init>():V
f:com.intellij.codeInsight.completion.FilePathCompletionContributor$FilePathLookupItem
- com.intellij.codeInsight.lookup.LookupElement
- <init>(com.intellij.psi.PsiFile,java.util.List):V
- equals(java.lang.Object):Z
- getLookupString():java.lang.String
- getObject():java.lang.Object
- handleInsert(com.intellij.codeInsight.completion.InsertionContext):V
- hashCode():I
- renderElement(com.intellij.codeInsight.lookup.LookupElementPresentation):V
com.intellij.codeInsight.completion.FileReferenceWithExtendedCompletion
- a:bindToExtendedElement(com.intellij.psi.PsiElement):V
c:com.intellij.codeInsight.completion.WordCompletionContributor
- com.intellij.codeInsight.completion.CompletionContributor
- com.intellij.openapi.project.DumbAware
- <init>():V
- s:addWordCompletionVariants(com.intellij.codeInsight.completion.CompletionResultSet,com.intellij.codeInsight.completion.CompletionParameters,java.util.Set):V
- s:addWordCompletionVariants(com.intellij.codeInsight.completion.CompletionResultSet,com.intellij.codeInsight.completion.CompletionParameters,java.util.Set,Z):V
- fillCompletionVariants(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionResultSet):V
a:com.intellij.codeInsight.completion.actions.BaseCodeCompletionAction
- com.intellij.openapi.project.DumbAwareAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- p:<init>():V
- createHandler(com.intellij.codeInsight.completion.CompletionType,Z,Z,Z):com.intellij.codeInsight.completion.CodeCompletionHandlerBase
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:invokeCompletion(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.codeInsight.completion.CompletionType,I):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.codeInsight.completion.actions.CodeCompletionAction
- com.intellij.codeInsight.completion.actions.BaseCodeCompletionAction
- com.intellij.ide.lightEdit.LightEditCompatible
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.codeInsight.completion.addingPolicy.PassDirectlyPolicy
- <init>():V
- addAllElements(com.intellij.codeInsight.completion.CompletionResultSet,java.lang.Iterable):V
- addElement(com.intellij.codeInsight.completion.CompletionResultSet,com.intellij.codeInsight.lookup.LookupElement):V
c:com.intellij.codeInsight.completion.impl.BetterPrefixMatcher
- com.intellij.codeInsight.completion.PrefixMatcher
- <init>(com.intellij.codeInsight.completion.PrefixMatcher,I):V
- cloneWithPrefix(java.lang.String):com.intellij.codeInsight.completion.PrefixMatcher
- p:createCopy(com.intellij.codeInsight.completion.PrefixMatcher,I):com.intellij.codeInsight.completion.impl.BetterPrefixMatcher
- improve(com.intellij.codeInsight.completion.CompletionResult):com.intellij.codeInsight.completion.impl.BetterPrefixMatcher
- isStartMatch(java.lang.String):Z
- matchingDegree(java.lang.String):I
- prefixMatches(java.lang.String):Z
- p:prefixMatchesEx(java.lang.String):com.intellij.codeInsight.completion.impl.BetterPrefixMatcher$MatchingOutcome
f:com.intellij.codeInsight.completion.impl.BetterPrefixMatcher$AutoRestarting
- com.intellij.codeInsight.completion.impl.BetterPrefixMatcher
- <init>(com.intellij.codeInsight.completion.CompletionResultSet):V
pe:com.intellij.codeInsight.completion.impl.BetterPrefixMatcher$MatchingOutcome
- java.lang.Enum
- sf:BETTER_MATCH:com.intellij.codeInsight.completion.impl.BetterPrefixMatcher$MatchingOutcome
- sf:NON_MATCH:com.intellij.codeInsight.completion.impl.BetterPrefixMatcher$MatchingOutcome
- sf:WORSE_MATCH:com.intellij.codeInsight.completion.impl.BetterPrefixMatcher$MatchingOutcome
- s:valueOf(java.lang.String):com.intellij.codeInsight.completion.impl.BetterPrefixMatcher$MatchingOutcome
- s:values():com.intellij.codeInsight.completion.impl.BetterPrefixMatcher$MatchingOutcome[]
c:com.intellij.codeInsight.completion.impl.CompletionServiceImpl
- com.intellij.codeInsight.completion.BaseCompletionService
- sf:Companion:com.intellij.codeInsight.completion.impl.CompletionServiceImpl$Companion
- <init>():V
- p:addWeighersBefore(com.intellij.codeInsight.completion.impl.CompletionSorterImpl):com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- sf:assertPhase(java.lang.Class[]):V
- createResultSet(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.util.Consumer,com.intellij.codeInsight.completion.CompletionContributor,com.intellij.codeInsight.completion.PrefixMatcher):com.intellij.codeInsight.completion.CompletionResultSet
- sf:getCompletionPhase():com.intellij.codeInsight.completion.CompletionPhase
- sf:getCompletionService():com.intellij.codeInsight.completion.impl.CompletionServiceImpl
- getCurrentCompletion():com.intellij.codeInsight.completion.CompletionProcess
- sf:getCurrentCompletionProgressIndicator():com.intellij.codeInsight.completion.CompletionProgressIndicator
- getVariantsFromContributor(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionContributor,com.intellij.codeInsight.completion.CompletionResultSet):V
- sf:isPhase(java.lang.Class[]):Z
- performCompletion(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.util.Consumer):V
- p:processStatsWeigher(com.intellij.codeInsight.completion.impl.CompletionSorterImpl,com.intellij.psi.Weigher,com.intellij.codeInsight.completion.CompletionLocation):com.intellij.codeInsight.completion.impl.CompletionSorterImpl
- setAdvertisementText(java.lang.String):V
- sf:setCompletionPhase(com.intellij.codeInsight.completion.CompletionPhase):V
f:com.intellij.codeInsight.completion.impl.CompletionServiceImpl$Companion
- f:assertPhase(java.lang.Class[]):V
- f:getCompletionPhase():com.intellij.codeInsight.completion.CompletionPhase
- f:getCompletionService():com.intellij.codeInsight.completion.impl.CompletionServiceImpl
- f:getCurrentCompletionProgressIndicator():com.intellij.codeInsight.completion.CompletionProgressIndicator
- f:isPhase(java.lang.Class[]):Z
- f:setCompletionPhase(com.intellij.codeInsight.completion.CompletionPhase):V
f:com.intellij.codeInsight.completion.impl.LiveTemplateWeigher
- com.intellij.codeInsight.lookup.LookupElementWeigher
- <init>():V
- weigh(com.intellij.codeInsight.lookup.LookupElement):java.lang.Comparable
c:com.intellij.codeInsight.completion.impl.NegatingComparable
- com.intellij.psi.ForceableComparable
- java.lang.Comparable
- <init>(java.lang.Comparable):V
- compareTo(com.intellij.codeInsight.completion.impl.NegatingComparable):I
- force():V
c:com.intellij.codeInsight.daemon.DefaultGutterIconNavigationHandler
- com.intellij.codeInsight.daemon.GutterIconNavigationHandler
- <init>(java.util.Collection,java.lang.String):V
- p:createListCellRenderer():javax.swing.ListCellRenderer
- getReferences():java.util.Collection
- navigate(java.awt.event.MouseEvent,com.intellij.psi.PsiElement):V
com.intellij.codeInsight.daemon.EssentialHighlightingRestarterDisablement
- a:shouldBeDisabledForProject(com.intellij.openapi.project.Project):Z
com.intellij.codeInsight.daemon.ProjectSdkSetupValidator
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- doFix(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
- a:getErrorMessage(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getFixHandler(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.ui.EditorNotificationPanel$ActionHandler
- a:isApplicableFor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
c:com.intellij.codeInsight.daemon.impl.CleanupIntentionMenuContributor
- <init>():V
- collectActions(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo,I,I):V
f:com.intellij.codeInsight.daemon.impl.ConfigureHighlightingLevelKt
- sf:getConfigureHighlightingLevelPopup(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.ui.popup.JBPopup
f:com.intellij.codeInsight.daemon.impl.DaemonListeners
- com.intellij.openapi.Disposable
- s:canChangeFileSilently(com.intellij.psi.PsiFileSystemItem):Z
- s:canChangeFileSilently(com.intellij.psi.PsiFileSystemItem,Z):Z
- s:canChangeFileSilently(com.intellij.psi.PsiFileSystemItem,Z,com.intellij.util.ThreeState):Z
- dispose():V
f:com.intellij.codeInsight.daemon.impl.DaemonTooltipActionProvider
- com.intellij.codeInsight.daemon.impl.tooltips.TooltipActionProvider
- <init>():V
- getTooltipAction(com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.openapi.editor.ex.TooltipAction
f:com.intellij.codeInsight.daemon.impl.DaemonTooltipActionProviderKt
- sf:extractMostPriorityFixFromHighlightInfo(com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.IntentionAction
- sf:getFirstAvailableAction(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo):com.intellij.codeInsight.intention.IntentionAction
- sf:wrapIntentionToTooltipAction(com.intellij.codeInsight.intention.IntentionAction,com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.ex.TooltipAction
f:com.intellij.codeInsight.daemon.impl.DaemonTooltipWithActionRendererKt
- sf:getRunActionCustomShortcutSet():com.intellij.openapi.actionSystem.CustomShortcutSet
com.intellij.codeInsight.daemon.impl.EditorTrackerListener
- java.util.EventListener
- sf:Companion:com.intellij.codeInsight.daemon.impl.EditorTrackerListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- a:activeEditorsChanged(java.util.List):V
f:com.intellij.codeInsight.daemon.impl.EditorTrackerListener$Companion
f:com.intellij.codeInsight.daemon.impl.ErrorStripeUpdateManager
- sf:Companion:com.intellij.codeInsight.daemon.impl.ErrorStripeUpdateManager$Companion
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.impl.ErrorStripeUpdateManager
- f:repaintErrorStripePanel(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
f:com.intellij.codeInsight.daemon.impl.ErrorStripeUpdateManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.impl.ErrorStripeUpdateManager
c:com.intellij.codeInsight.daemon.impl.GotoNextErrorHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- <init>(Z):V
- <init>(Z,com.intellij.lang.annotation.HighlightSeverity):V
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- startInWriteAction():Z
f:com.intellij.codeInsight.daemon.impl.GutterIntentionMenuContributor
- <init>():V
- collectActions(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo,I,I):V
a:com.intellij.codeInsight.daemon.impl.GutterTooltipBuilder
- <init>():V
- p:appendElement(java.lang.StringBuilder,com.intellij.psi.PsiElement,Z):V
- ps:appendPackageName(java.lang.StringBuilder,java.lang.String):V
- p:buildTooltipText(java.lang.String,java.util.Collection,java.util.function.Function,java.util.function.Predicate,java.lang.String,java.lang.String):java.lang.String
- buildTooltipText(java.util.Collection,java.lang.String,Z,java.lang.String):java.lang.String
- p:buildTooltipText(java.util.Collection,java.lang.String,Z,java.lang.String,java.lang.String):java.lang.String
- buildTooltipText(java.util.Collection,java.util.function.Function,java.util.function.Predicate,java.lang.String):java.lang.String
- pa:getContainingElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getElementDivider(Z,Z,I):java.lang.String
- pa:getLinkProtocol():java.lang.String
- pa:getLinkReferenceText(com.intellij.psi.PsiElement):java.lang.String
- p:getLocationString(com.intellij.psi.PsiElement):java.lang.String
- pa:getPresentableName(com.intellij.psi.PsiElement):java.lang.String
- p:isDeprecated(com.intellij.psi.PsiElement):Z
- pa:shouldSkipAsFirstElement(com.intellij.psi.PsiElement):Z
com.intellij.codeInsight.daemon.impl.HectorComponent
- a:showComponent(com.intellij.ui.awt.RelativePoint):V
- a:showComponent(java.awt.Component,kotlin.jvm.functions.Function1):V
com.intellij.codeInsight.daemon.impl.HectorComponentFactory
- a:create(com.intellij.psi.PsiFile):com.intellij.codeInsight.daemon.impl.HectorComponent
f:com.intellij.codeInsight.daemon.impl.HighlightVisitorBasedInspection
- com.intellij.codeInspection.GlobalSimpleInspectionTool
- sf:SHORT_NAME:java.lang.String
- highlightErrorElements:Z
- runAnnotators:Z
- runVisitors:Z
- <init>():V
- checkFile(com.intellij.psi.PsiFile,com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.ProblemsHolder,com.intellij.codeInspection.GlobalInspectionContext,com.intellij.codeInspection.ProblemDescriptionsProcessor):V
- getDefaultLevel():com.intellij.codeHighlighting.HighlightDisplayLevel
- getGroupDisplayName():java.lang.String
- getOptionsPane():com.intellij.codeInspection.options.OptPane
- getShortName():java.lang.String
- s:runAnnotatorsInGeneralHighlighting(com.intellij.psi.PsiFile,Z,Z,Z):java.util.List
- setHighlightErrorElements(Z):com.intellij.codeInsight.daemon.impl.HighlightVisitorBasedInspection
- setRunAnnotators(Z):com.intellij.codeInsight.daemon.impl.HighlightVisitorBasedInspection
- setRunVisitors(Z):com.intellij.codeInsight.daemon.impl.HighlightVisitorBasedInspection
f:com.intellij.codeInsight.daemon.impl.IdentifierHighlighterPass
- s:clearMyHighlights(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):V
- doAdditionalCodeBlockHighlighting():V
- doCollectInformation(com.intellij.codeInsight.daemon.impl.HighlightingSession):V
- s:getHighlightUsages(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z,java.util.Collection,java.util.Collection):V
- s:getUsages(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):java.util.Collection
f:com.intellij.codeInsight.daemon.impl.IdentifierHighlighterPassFactory
- <init>():V
- createHighlightingPass(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.TextRange):com.intellij.codeInsight.daemon.impl.IdentifierHighlighterPass
- s:doWithHighlightingEnabled(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.lang.Runnable):V
- s:isEnabled():Z
- s:waitForIdentifierHighlighting():V
c:com.intellij.codeInsight.daemon.impl.IndentGuideRenderer
- com.intellij.openapi.editor.markup.CustomHighlighterRenderer
- <init>():V
- ps:isCaretOnGuide(com.intellij.openapi.editor.Editor,I,I,I):Z
- p:isSelected(com.intellij.openapi.editor.Editor,I,I,I):Z
- p:paint(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.VisualPosition,com.intellij.openapi.editor.VisualPosition,I,I,com.intellij.openapi.editor.Document,java.awt.Graphics):V
- paint(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.markup.RangeHighlighter,java.awt.Graphics):V
com.intellij.codeInsight.daemon.impl.IndentsPassFilter
- sf:EXTENSION_POINT:com.intellij.openapi.extensions.ExtensionPointName
- a:shouldRunIndentsPass(com.intellij.openapi.editor.Editor):Z
- a:shouldShowIndentGuide(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.IndentGuideDescriptor):Z
a:com.intellij.codeInsight.daemon.impl.InheritorsLineMarkerNavigator
- com.intellij.codeInsight.daemon.impl.LineMarkerNavigator
- com.intellij.codeInsight.daemon.GutterIconNavigationHandler
- <init>():V
- f:browse(java.awt.event.MouseEvent,com.intellij.psi.PsiElement):V
- pa:getMessageForDumbMode():java.lang.String
- navigate(java.awt.event.MouseEvent,com.intellij.psi.PsiElement):V
f:com.intellij.codeInsight.daemon.impl.InlayHintsPassFactoryInternal
- com.intellij.codeHighlighting.TextEditorHighlightingPassFactory
- com.intellij.codeHighlighting.TextEditorHighlightingPassFactoryRegistrar
- com.intellij.openapi.project.DumbAware
- sf:Companion:com.intellij.codeInsight.daemon.impl.InlayHintsPassFactoryInternal$Companion
- <init>():V
- createHighlightingPass(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.codeHighlighting.TextEditorHighlightingPass
- registerHighlightingPassFactory(com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar,com.intellij.openapi.project.Project):V
f:com.intellij.codeInsight.daemon.impl.InlayHintsPassFactoryInternal$Companion
- f:clearModificationStamp(com.intellij.openapi.editor.Editor):V
- f:forceHintsUpdateOnNextPass():V
- f:putCurrentModificationStamp(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- f:restartDaemonUpdatingHints(com.intellij.openapi.project.Project):V
a:com.intellij.codeInsight.daemon.impl.IntentionsUI
- getCachedIntentions(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.impl.CachedIntentions
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.impl.IntentionsUI
- a:hide():V
- hideForEditor(com.intellij.openapi.editor.Editor):V
- invalidate():V
- a:update(com.intellij.codeInsight.intention.impl.CachedIntentions,Z):V
c:com.intellij.codeInsight.daemon.impl.IntentionsUIImpl
- com.intellij.codeInsight.daemon.impl.IntentionsUI
- <init>(com.intellij.openapi.project.Project):V
- hide():V
- hideForEditor(com.intellij.openapi.editor.Editor):V
- update(com.intellij.codeInsight.intention.impl.CachedIntentions,Z):V
a:com.intellij.codeInsight.daemon.impl.LineMarkerNavigator
- <init>():V
- a:browse(java.awt.event.MouseEvent,com.intellij.psi.PsiElement):V
f:com.intellij.codeInsight.daemon.impl.LineMarkersPass
- com.intellij.codeHighlighting.TextEditorHighlightingPass
- com.intellij.openapi.project.DumbAware
- s:createMethodSeparatorLineMarker(com.intellij.psi.PsiElement,com.intellij.openapi.editor.colors.EditorColorsManager):com.intellij.codeInsight.daemon.LineMarkerInfo
- doApplyInformationToEditor():V
- doCollectInformation(com.intellij.openapi.progress.ProgressIndicator):V
- s:getMarkerProviders(com.intellij.lang.Language,com.intellij.openapi.project.Project):java.util.List
- s:queryLineMarkers(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document):java.util.Collection
f:com.intellij.codeInsight.daemon.impl.MainPassesRunner
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.codeInspection.InspectionProfile):V
- runMainPasses(java.util.List):java.util.Map
- runMainPasses(java.util.List,com.intellij.lang.annotation.HighlightSeverity):java.util.Map
f:com.intellij.codeInsight.daemon.impl.ParameterHintsPresentationManager
- com.intellij.openapi.Disposable
- addHint(com.intellij.openapi.editor.Editor,I,Z,java.lang.String,com.intellij.codeInsight.hints.HintWidthAdjustment,Z):com.intellij.openapi.editor.Inlay
- deleteHint(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Inlay,Z):V
- dispose():V
- getHintText(com.intellij.openapi.editor.Inlay):java.lang.String
- s:getInstance():com.intellij.codeInsight.daemon.impl.ParameterHintsPresentationManager
- getParameterHintsInRange(com.intellij.openapi.editor.Editor,I,I):java.util.List
- isAnimationInProgress(com.intellij.openapi.editor.Editor):Z
- isCurrent(com.intellij.openapi.editor.Inlay):Z
- isHighlighted(com.intellij.openapi.editor.Inlay):Z
- isParameterHint(com.intellij.openapi.editor.Inlay):Z
- replaceHint(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Inlay,java.lang.String,com.intellij.codeInsight.hints.HintWidthAdjustment,Z):V
- setCurrent(com.intellij.openapi.editor.Inlay,Z):V
- setHighlighted(com.intellij.openapi.editor.Inlay,Z):V
- setPreviewMode(com.intellij.openapi.editor.Editor,Z):V
f:com.intellij.codeInsight.daemon.impl.ProblemDescriptorWithReporterName
- com.intellij.codeInspection.ProblemDescriptorBase
- <init>(com.intellij.codeInspection.ProblemDescriptorBase,java.lang.String):V
- getReportingToolShortName():java.lang.String
f:com.intellij.codeInsight.daemon.impl.ProblemDescriptorWithUserDataKt
- sf:getPROBLEM_DESCRIPTOR_TAG():com.intellij.openapi.util.Key
- sf:getRELATED_LOCATIONS():com.intellij.openapi.util.Key
- sf:getRELATED_PROBLEMS_CHILD_HASH():com.intellij.openapi.util.Key
- sf:getRELATED_PROBLEMS_ROOT_HASH():com.intellij.openapi.util.Key
- sf:withRelatedLocations(com.intellij.codeInspection.ProblemDescriptor,java.util.List):com.intellij.codeInspection.ProblemDescriptor
- sf:withUserData(com.intellij.codeInspection.ProblemDescriptor,kotlin.jvm.functions.Function1):com.intellij.codeInspection.ProblemDescriptor
- sf:withUserDataCommon(com.intellij.codeInspection.CommonProblemDescriptor,kotlin.jvm.functions.Function1):com.intellij.codeInspection.CommonProblemDescriptor
f:com.intellij.codeInsight.daemon.impl.ProblemRelatedLocation
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String):V
- f:getLineNumber():I
- f:getOffset():java.lang.Integer
- f:getPsiElement():com.intellij.psi.PsiElement
- f:getRange():com.intellij.openapi.util.TextRange
f:com.intellij.codeInsight.daemon.impl.PsiElementListNavigator
- s:navigateOrCreatePopup(com.intellij.psi.NavigatablePsiElement[],java.lang.String,java.lang.String,javax.swing.ListCellRenderer,com.intellij.codeInsight.navigation.BackgroundUpdaterTask):com.intellij.openapi.ui.popup.JBPopup
- s:navigateOrCreatePopup(com.intellij.psi.NavigatablePsiElement[],java.lang.String,java.lang.String,javax.swing.ListCellRenderer,com.intellij.codeInsight.navigation.BackgroundUpdaterTask,com.intellij.util.Consumer):com.intellij.openapi.ui.popup.JBPopup
- s:openTargets(com.intellij.openapi.editor.Editor,com.intellij.psi.NavigatablePsiElement[],java.lang.String,java.lang.String,javax.swing.ListCellRenderer):V
- s:openTargets(com.intellij.openapi.editor.Editor,com.intellij.psi.NavigatablePsiElement[],java.lang.String,java.lang.String,javax.swing.ListCellRenderer,com.intellij.codeInsight.navigation.BackgroundUpdaterTask):V
- s:openTargets(java.awt.event.MouseEvent,com.intellij.psi.NavigatablePsiElement[],java.lang.String,java.lang.String,javax.swing.ListCellRenderer):V
- s:openTargets(java.awt.event.MouseEvent,com.intellij.psi.NavigatablePsiElement[],java.lang.String,java.lang.String,javax.swing.ListCellRenderer,com.intellij.codeInsight.navigation.BackgroundUpdaterTask):V
c:com.intellij.codeInsight.daemon.impl.PsiElementListNavigator$NavigateOrPopupHelper
- <init>(com.intellij.psi.NavigatablePsiElement[],java.lang.String):V
- p:afterPopupBuilderCreated(com.intellij.openapi.ui.popup.IPopupChooserBuilder):V
- p:allowEmptyTargets():Z
- f:navigateOrCreatePopup():com.intellij.openapi.ui.popup.JBPopup
- setFindUsagesTitle(java.lang.String):com.intellij.codeInsight.daemon.impl.PsiElementListNavigator$NavigateOrPopupHelper
- setListRenderer(javax.swing.ListCellRenderer):com.intellij.codeInsight.daemon.impl.PsiElementListNavigator$NavigateOrPopupHelper
- setListUpdaterTask(com.intellij.codeInsight.navigation.BackgroundUpdaterTask):com.intellij.codeInsight.daemon.impl.PsiElementListNavigator$NavigateOrPopupHelper
- setProject(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.impl.PsiElementListNavigator$NavigateOrPopupHelper
- setTargetsConsumer(com.intellij.util.Consumer):com.intellij.codeInsight.daemon.impl.PsiElementListNavigator$NavigateOrPopupHelper
f:com.intellij.codeInsight.daemon.impl.ShowAutoImportPass
- com.intellij.codeHighlighting.TextEditorHighlightingPass
- doApplyInformationToEditor():V
- doCollectInformation(com.intellij.openapi.progress.ProgressIndicator):V
- s:getMessage(java.lang.String,java.lang.String):java.lang.String
- s:getMessage(Z,java.lang.String):java.lang.String
- s:getMessage(Z,java.lang.String,java.lang.String):java.lang.String
- s:isAddUnambiguousImportsOnTheFlyEnabled(com.intellij.psi.PsiFile):Z
- s:mayAutoImportNow(com.intellij.psi.PsiFile,Z,com.intellij.util.ThreeState):Z
f:com.intellij.codeInsight.daemon.impl.ShowIntentionsPass
- com.intellij.codeHighlighting.TextEditorHighlightingPass
- com.intellij.openapi.project.DumbAware
- doApplyInformationToEditor():V
- doCollectInformation(com.intellij.openapi.progress.ProgressIndicator):V
- s:fillIntentionsInfoForHighlightInfo(com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo,java.util.List):V
- s:getActionsToShow(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo
- s:getActionsToShow(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo,I):V
- s:getAvailableFixes(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I,I):java.util.List
- s:markActionInvoked(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.intention.IntentionAction):V
f:com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo
- f:errorFixesToShow:java.util.List
- f:guttersToShow:java.util.List
- f:inspectionFixesToShow:java.util.List
- f:intentionsToShow:java.util.List
- f:notificationActionsToShow:java.util.List
- <init>():V
- filterActions(com.intellij.psi.PsiFile):V
- getHighlightInfoType():com.intellij.codeInsight.daemon.impl.HighlightInfoType
- getOffset():I
- getTitle():java.lang.String
- isEmpty():Z
- setHighlightInfoType(com.intellij.codeInsight.daemon.impl.HighlightInfoType):V
- setOffset(I):V
- setTitle(java.lang.String):V
a:com.intellij.codeInsight.daemon.impl.StatusItemMerger
- <init>():V
- a:mergeItems(com.intellij.openapi.editor.markup.SeverityStatusItem,com.intellij.openapi.editor.markup.SeverityStatusItem):com.intellij.openapi.editor.markup.SeverityStatusItem
c:com.intellij.codeInsight.daemon.impl.TrafficLightRenderer
- com.intellij.openapi.Disposable
- com.intellij.openapi.editor.markup.ErrorStripeRenderer
- sf:Companion:com.intellij.codeInsight.daemon.impl.TrafficLightRenderer$Companion
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):V
- p:createUIController():com.intellij.openapi.editor.markup.UIController
- pf:createUIController(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.markup.UIController
- dispose():V
- p:fillDaemonCodeAnalyzerErrorsStatus(com.intellij.codeInsight.daemon.impl.TrafficLightRenderer$DaemonCodeAnalyzerStatus,com.intellij.codeInsight.daemon.impl.SeverityRegistrar):V
- p:getDaemonCodeAnalyzerStatus(com.intellij.codeInsight.daemon.impl.SeverityRegistrar):com.intellij.codeInsight.daemon.impl.TrafficLightRenderer$DaemonCodeAnalyzerStatus
- getErrorCounts():I[]
- pf:getProject():com.intellij.openapi.project.Project
- getStatus():com.intellij.openapi.editor.markup.AnalyzerStatus
- f:invalidate():V
- isValid():Z
- refresh(com.intellij.openapi.editor.ex.EditorMarkupModel):V
pc:com.intellij.codeInsight.daemon.impl.TrafficLightRenderer$AbstractUIController
- canClosePopup():Z
- fillHectorPanels(java.awt.Container,com.intellij.util.ui.GridBag):V
- getAvailableLevels():java.util.List
- getHighlightLevels():java.util.List
- onClosePopup():V
- setHighLightLevel(com.intellij.openapi.editor.markup.LanguageHighlightLevel):V
- toggleProblemsView():V
f:com.intellij.codeInsight.daemon.impl.TrafficLightRenderer$Companion
pc:com.intellij.codeInsight.daemon.impl.TrafficLightRenderer$DefaultUIController
- com.intellij.codeInsight.daemon.impl.TrafficLightRenderer$AbstractUIController
- <init>(com.intellij.codeInsight.daemon.impl.TrafficLightRenderer):V
- getActions():java.util.List
- isToolbarEnabled():Z
com.intellij.codeInsight.daemon.impl.TrafficLightRendererContributor
- a:createRenderer(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.daemon.impl.TrafficLightRenderer
c:com.intellij.codeInsight.daemon.impl.actions.GotoNextErrorAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:getHandler():com.intellij.codeInsight.CodeInsightActionHandler
- p:getHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.codeInsight.CodeInsightActionHandler
- p:isValidForFile(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- p:isValidForLookup():Z
c:com.intellij.codeInsight.daemon.impl.actions.GotoPreviousErrorAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:getHandler():com.intellij.codeInsight.CodeInsightActionHandler
- p:getHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.codeInsight.CodeInsightActionHandler
- p:isValidForFile(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- p:isValidForLookup():Z
f:com.intellij.codeInsight.daemon.impl.analysis.HighlightLevelUtil
- s:forceRootHighlighting(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting):V
f:com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile
- com.intellij.codeInsight.daemon.impl.analysis.HighlightingLevelManager
- com.intellij.openapi.components.PersistentStateComponent
- com.intellij.openapi.util.ModificationTracker
- <init>(com.intellij.openapi.project.Project):V
- countRoots(com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting):I
- getHighlightingSettingForRoot(com.intellij.psi.PsiElement):com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile
- getModificationCount():J
- getState():org.jdom.Element
- incModificationCount():V
- loadState(org.jdom.Element):V
- runEssentialHighlightingOnly(com.intellij.psi.PsiElement):Z
- setHighlightingSettingForRoot(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting):V
- shouldHighlight(com.intellij.psi.PsiElement):Z
- shouldInspect(com.intellij.psi.PsiElement):Z
c:com.intellij.codeInsight.daemon.impl.analysis.encoding.EncodingReference
- com.intellij.codeInsight.daemon.EmptyResolveMessageProvider
- com.intellij.psi.PsiReference
- <init>(com.intellij.psi.PsiElement,java.lang.String,com.intellij.openapi.util.TextRange):V
- bindToElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getCanonicalText():java.lang.String
- getElement():com.intellij.psi.PsiElement
- getRangeInElement():com.intellij.openapi.util.TextRange
- getUnresolvedMessagePattern():java.lang.String
- getVariants():java.lang.Object[]
- handleElementRename(java.lang.String):com.intellij.psi.PsiElement
- isReferenceTo(com.intellij.psi.PsiElement):Z
- isSoft():Z
- resolve():com.intellij.psi.PsiElement
c:com.intellij.codeInsight.daemon.impl.quickfix.EmptyExpression
- com.intellij.codeInsight.template.Expression
- <init>():V
- calculateLookupItems(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateResult(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- requiresCommittedPSI():Z
c:com.intellij.codeInsight.daemon.impl.quickfix.RenameElementFix
- com.intellij.codeInspection.LocalQuickFixAndIntentionActionOnPsiElement
- <init>(com.intellij.psi.PsiNamedElement):V
- <init>(com.intellij.psi.PsiNamedElement,java.lang.String):V
- <init>(com.intellij.psi.PsiNamedElement,java.lang.String,java.lang.String):V
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getFamilyName():java.lang.String
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- startInWriteAction():Z
c:com.intellij.codeInsight.daemon.impl.quickfix.RenameFileFix
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.codeInspection.LocalQuickFix
- <init>(java.lang.String):V
- applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- generatePreview(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getFamilyName():java.lang.String
- getName():java.lang.String
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- f:isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
com.intellij.codeInsight.daemon.impl.tooltips.TooltipActionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:SHOW_FIXES_DEFAULT_VALUE:Z
- sf:SHOW_FIXES_KEY:java.lang.String
- s:calcTooltipAction(com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.ex.TooltipAction
- a:getTooltipAction(com.intellij.codeInsight.daemon.impl.HighlightInfo,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.openapi.editor.ex.TooltipAction
- s:isShowActions():Z
- s:setShowActions(Z):V
a:com.intellij.codeInsight.daemon.quickFix.AbstractCreateFileFix
- com.intellij.codeInspection.LocalQuickFixAndIntentionActionOnPsiElement
- psf:CURRENT_DIRECTORY_REF:java.lang.String
- psf:PARENT_DIRECTORY_REF:java.lang.String
- pf:myDirectories:java.util.List
- p:myIsAvailable:Z
- p:myIsAvailableTimeStamp:J
- pf:myKey:java.lang.String
- pf:myNewFileName:java.lang.String
- pf:mySubPath:java.lang.String[]
- p:<init>(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.quickFix.NewFileLocation,java.lang.String):V
- p:apply(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,com.intellij.openapi.editor.Editor):V
- p:apply(com.intellij.openapi.project.Project,java.util.function.Supplier,com.intellij.openapi.editor.Editor):V
- a:generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- p:getDescription(javax.swing.Icon):com.intellij.openapi.util.text.HtmlChunk
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- startInWriteAction():Z
pf:com.intellij.codeInsight.daemon.quickFix.AbstractCreateFileFix$TargetDirectoryListItem
- <init>(com.intellij.codeInsight.daemon.quickFix.TargetDirectory,javax.swing.Icon,java.lang.String):V
- getIcon():javax.swing.Icon
f:com.intellij.codeInsight.daemon.quickFix.CreateDirectoryPathFix
- com.intellij.codeInsight.daemon.quickFix.AbstractCreateFileFix
- <init>(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.quickFix.NewFileLocation):V
- <init>(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.quickFix.NewFileLocation,java.lang.String):V
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- getText():java.lang.String
c:com.intellij.codeInsight.daemon.quickFix.CreateFileFix
- com.intellij.codeInspection.LocalQuickFixAndIntentionActionOnPsiElement
- <init>(java.lang.String,com.intellij.psi.PsiDirectory,java.lang.String):V
- <init>(Z,java.lang.String,com.intellij.psi.PsiDirectory):V
- <init>(Z,java.lang.String,com.intellij.psi.PsiDirectory,java.lang.String,java.lang.String):V
- applyFix():V
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- p:getFileText():java.lang.String
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- p:openFile(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,com.intellij.psi.PsiFile,java.lang.String):V
c:com.intellij.codeInsight.daemon.quickFix.CreateFilePathFix
- com.intellij.codeInsight.daemon.quickFix.AbstractCreateFileFix
- <init>(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.quickFix.NewFileLocation):V
- <init>(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.quickFix.NewFileLocation,java.lang.String,java.lang.String):V
- <init>(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.quickFix.NewFileLocation,java.util.function.Supplier):V
- p:apply(com.intellij.openapi.project.Project,java.util.function.Supplier,com.intellij.openapi.editor.Editor):V
- s:createFileForFix(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,java.lang.String,java.lang.String):com.intellij.codeInsight.daemon.quickFix.CreateFilePathFix$CreatedFile
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- p:getFileText():java.lang.String
- getText():java.lang.String
- p:openFile(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,com.intellij.psi.PsiFile,java.lang.String):V
f:com.intellij.codeInsight.daemon.quickFix.CreateFilePathFix$CreatedFile
- java.lang.Record
- <init>(com.intellij.psi.PsiDirectory,com.intellij.psi.PsiFile,java.lang.String):V
- directory():com.intellij.psi.PsiDirectory
- f:equals(java.lang.Object):Z
- f:hashCode():I
- newFile():com.intellij.psi.PsiFile
- text():java.lang.String
f:com.intellij.codeInsight.daemon.quickFix.FileReferenceQuickFixProvider
- s:getNewFileLocation(com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference,java.lang.String,Z):com.intellij.codeInsight.daemon.quickFix.NewFileLocation
- s:registerQuickFix(com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference):java.util.List
f:com.intellij.codeInsight.daemon.quickFix.NewFileLocation
- <init>(java.util.List,java.lang.String):V
- <init>(java.util.List,java.lang.String[],java.lang.String):V
- getDirectories():java.util.List
- getNewFileName():java.lang.String
- getSubPath():java.lang.String[]
f:com.intellij.codeInsight.daemon.quickFix.TargetDirectory
- <init>(com.intellij.psi.PsiDirectory):V
- <init>(com.intellij.psi.PsiDirectory,java.lang.String[]):V
- getDirectory():com.intellij.psi.PsiDirectory
- getPathToCreate():java.lang.String[]
a:com.intellij.codeInsight.documentation.AbstractDocToolWindowManager
- com.intellij.codeInsight.documentation.DocToolWindowManager
- <init>():V
- disposeToolWindow(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):V
- getDocumentationComponent(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):com.intellij.codeInsight.documentation.DocumentationComponent
- getDocumentationContent(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):com.intellij.ui.content.Content
- installToolWindowActions(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):V
- isAutoUpdateAvailable():Z
- prepareForShowDocumentation(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):V
- setToolWindowDefaultState(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):V
- updateToolWindowDocumentationTabName(com.intellij.openapi.wm.ToolWindow,com.intellij.psi.PsiElement,com.intellij.codeInsight.documentation.DocumentationManager):V
a:com.intellij.codeInsight.documentation.AbstractExternalFilter
- psf:HTML:java.lang.String
- psf:HTML_CLOSE:java.lang.String
- psf:ourAnchorSuffix:java.util.regex.Pattern
- psf:ourHtmlFileSuffix:java.util.regex.Pattern
- <init>():V
- p:correctDocText(java.lang.String,java.lang.CharSequence):java.lang.String
- correctRefs(java.lang.String,java.lang.CharSequence):java.lang.CharSequence
- ps:doAnnihilate(java.lang.String):java.lang.String
- p:doBuildFromStream(java.lang.String,java.io.Reader,java.lang.StringBuilder):V
- p:doBuildFromStream(java.lang.String,java.io.Reader,java.lang.StringBuilder,Z,Z):V
- getExternalDocInfo(java.lang.String):java.lang.String
- getExternalDocInfoForElement(java.lang.String,com.intellij.psi.PsiElement):java.lang.String
- p:getParseSettings(java.lang.String):com.intellij.codeInsight.documentation.AbstractExternalFilter$ParseSettings
- pa:getRefConverters():com.intellij.codeInsight.documentation.AbstractExternalFilter$RefConvertor[]
pf:com.intellij.codeInsight.documentation.AbstractExternalFilter$MyReader
- java.io.InputStreamReader
- <init>(java.io.ByteArrayInputStream):V
- <init>(java.io.ByteArrayInputStream,java.lang.String):V
- getInputStream():java.io.ByteArrayInputStream
pf:com.intellij.codeInsight.documentation.AbstractExternalFilter$ParseSettings
- <init>(java.util.regex.Pattern,java.util.regex.Pattern,Z,Z):V
pa:com.intellij.codeInsight.documentation.AbstractExternalFilter$RefConvertor
- <init>(java.util.regex.Pattern):V
- pa:convertReference(java.lang.String,java.lang.String):java.lang.String
- refFilter(java.lang.String,java.lang.CharSequence):java.lang.CharSequence
com.intellij.codeInsight.documentation.DocCommentFixer
- sf:EXTENSION:com.intellij.lang.LanguageExtension
- a:fixComment(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiComment):V
com.intellij.codeInsight.documentation.DocToolWindowManager
- sf:LANGUAGE_MANAGER:com.intellij.codeInsight.documentation.DocToolWindowManager$DocToolWindowLanguageManager
- a:createToolWindow(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.codeInsight.documentation.DocumentationManager):com.intellij.openapi.wm.ToolWindow
- a:disposeToolWindow(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):V
- a:getDocumentationComponent(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):com.intellij.codeInsight.documentation.DocumentationComponent
- a:getDocumentationContent(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):com.intellij.ui.content.Content
- a:installToolWindowActions(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):V
- a:isAutoUpdateAvailable():Z
- a:prepareForShowDocumentation(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):V
- a:setToolWindowDefaultState(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationManager):V
- a:updateToolWindowDocumentationTabName(com.intellij.openapi.wm.ToolWindow,com.intellij.psi.PsiElement,com.intellij.codeInsight.documentation.DocumentationManager):V
f:com.intellij.codeInsight.documentation.DocToolWindowManager$DocToolWindowLanguageManager
- com.intellij.lang.LanguageExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
a:com.intellij.codeInsight.documentation.DockablePopupManager
- pf:myProject:com.intellij.openapi.project.Project
- p:myToolWindow:com.intellij.openapi.wm.ToolWindow
- <init>(com.intellij.openapi.project.Project):V
- p:createActions():com.intellij.openapi.actionSystem.AnAction[]
- pa:createComponent():javax.swing.JComponent
- p:createRestorePopupAction():com.intellij.openapi.actionSystem.AnAction
- createToolWindow(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- createToolWindow(java.util.concurrent.CompletableFuture,com.intellij.psi.PsiElement):V
- pa:doUpdateComponent(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- p:doUpdateComponent(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z):V
- p:doUpdateComponent(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z,Z):V
- pa:doUpdateComponent(com.intellij.psi.PsiElement):V
- pa:doUpdateComponent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,javax.swing.JComponent):V
- p:doUpdateComponent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,javax.swing.JComponent,Z):V
- p:doUpdateComponent(com.intellij.psi.PsiElement,Z):V
- p:doUpdateComponent(java.util.concurrent.CompletableFuture,com.intellij.psi.PsiElement,javax.swing.JComponent):V
- p:doUpdateComponent(java.util.concurrent.CompletableFuture,com.intellij.psi.PsiElement,javax.swing.JComponent,Z):V
- p:getAutoUpdateDefault():Z
- pa:getAutoUpdateDescription():java.lang.String
- pa:getAutoUpdateEnabledProperty():java.lang.String
- pa:getAutoUpdateTitle():java.lang.String
- pa:getRestorePopupDescription():java.lang.String
- pa:getShowInToolWindowProperty():java.lang.String
- pa:getTitle(com.intellij.psi.PsiElement):java.lang.String
- pa:getToolwindowId():java.lang.String
- p:getToolwindowTitle():java.lang.String
- hasActiveDockedDocWindow():Z
- p:installComponentActions(com.intellij.openapi.wm.ToolWindow,javax.swing.JComponent):V
- muteAutoUpdateTill(com.intellij.openapi.Disposable):V
- recreateToolWindow(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.ui.content.Content
- resetAutoUpdateState():V
- restorePopupBehavior():V
- p:setToolwindowDefaultState(com.intellij.openapi.wm.ToolWindow):V
- updateComponent():V
- updateComponent(Z):V
- p:updateComponent(Z,Z):V
com.intellij.codeInsight.documentation.DocumentationActionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- additionalActions(com.intellij.codeInsight.documentation.DocumentationComponent):java.util.List
- additionalActions(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiDocCommentBase,java.lang.String):java.util.List
c:com.intellij.codeInsight.documentation.DocumentationComponent
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.ui.WidthBasedLayout
- sf:COLOR_KEY:com.intellij.openapi.editor.colors.ColorKey
- sf:SECTION_COLOR:java.awt.Color
- <init>(com.intellij.codeInsight.documentation.DocumentationManager):V
- <init>(com.intellij.codeInsight.documentation.DocumentationManager,Z):V
- clearHistory():V
- s:createAndFetch(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.Disposable):javax.swing.JComponent
- dispose():V
- getComponent():javax.swing.JComponent
- getDecoratedText():java.lang.String
- getElement():com.intellij.psi.PsiElement
- getFontSizeAction():com.intellij.openapi.actionSystem.AnAction
- getHint():com.intellij.openapi.ui.popup.JBPopup
- getNavigationActions():java.util.List
- getPreferredHeight(I):I
- getPreferredWidth():I
- s:getQuickDocFontSize():com.intellij.openapi.options.FontSize
- getText():java.lang.String
- isEmpty():Z
- isUpToDate():Z
- needsToolbar():Z
- removeCornerMenu():V
- replaceText(java.lang.String,com.intellij.psi.PsiElement):V
- requestFocus():V
- requestFocusInWindow():Z
- setBackground(java.awt.Color):V
- setData(com.intellij.psi.PsiElement,java.lang.String,java.lang.String,java.lang.String,com.intellij.lang.documentation.DocumentationProvider):V
- setHint(com.intellij.openapi.ui.popup.JBPopup):V
- s:setQuickDocFontSize(com.intellij.openapi.options.FontSize):V
- setText(java.lang.String,com.intellij.psi.PsiElement,com.intellij.lang.documentation.DocumentationProvider):V
- setToolwindowCallback(java.lang.Runnable):V
- showExternalDoc():V
- p:showHint():V
- p:showHint(java.awt.Rectangle,java.lang.String):V
- startWait():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
pf:com.intellij.codeInsight.documentation.DocumentationComponent$BackAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
pf:com.intellij.codeInsight.documentation.DocumentationComponent$EditDocumentationSourceAction
- com.intellij.ide.actions.BaseNavigateToSourceAction
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
pf:com.intellij.codeInsight.documentation.DocumentationComponent$ForwardAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
pf:com.intellij.codeInsight.documentation.DocumentationComponent$RestoreDefaultSizeAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
pf:com.intellij.codeInsight.documentation.DocumentationComponent$ShowAsToolwindowAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
pf:com.intellij.codeInsight.documentation.DocumentationComponent$ShowPopupAutomaticallyAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
pf:com.intellij.codeInsight.documentation.DocumentationComponent$ShowToolbarAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.codeInsight.documentation.DocumentationManager
- com.intellij.codeInsight.documentation.DockablePopupManager
- sf:IS_FROM_LOOKUP:com.intellij.openapi.util.Key
- sf:JAVADOC_LOCATION_AND_SIZE:java.lang.String
- sf:NEW_JAVADOC_LOCATION_AND_SIZE:java.lang.String
- sf:ORIGINAL_ELEMENT_KEY:com.intellij.openapi.util.Key
- sf:SELECTED_QUICK_DOC_TEXT:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.openapi.project.Project):V
- p:cancelAndFetchDocInfoByLink(com.intellij.codeInsight.documentation.DocumentationComponent,com.intellij.codeInsight.documentation.DocumentationManager$DocumentationCollector):com.intellij.openapi.util.ActionCallback
- p:createComponent():com.intellij.codeInsight.documentation.DocumentationComponent
- s:createHyperlink(java.lang.StringBuilder,java.lang.String,java.lang.String,Z):V
- p:createRestorePopupAction():com.intellij.openapi.actionSystem.AnAction
- createToolWindow(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- p:createToolWindow(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):V
- p:doShowJavaDocInfo(com.intellij.psi.PsiElement,Z,com.intellij.ui.popup.PopupUpdateProcessor,com.intellij.psi.PsiElement,java.lang.Runnable,com.intellij.openapi.util.ActionCallback,java.lang.String,Z,Z):V
- p:doShowJavaDocInfo(com.intellij.psi.PsiElement,Z,com.intellij.ui.popup.PopupUpdateProcessor,com.intellij.psi.PsiElement,java.lang.Runnable,java.lang.String,Z,Z):V
- p:doShowJavaDocInfo(java.util.concurrent.CompletableFuture,Z,com.intellij.ui.popup.PopupUpdateProcessor,com.intellij.psi.PsiElement,java.lang.Runnable,java.lang.String,Z,Z):V
- p:doUpdateComponent(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- p:doUpdateComponent(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z):V
- p:doUpdateComponent(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z,Z):V
- p:doUpdateComponent(com.intellij.psi.PsiElement):V
- p:doUpdateComponent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.codeInsight.documentation.DocumentationComponent):V
- p:doUpdateComponent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.codeInsight.documentation.DocumentationComponent,Z):V
- p:doUpdateComponent(com.intellij.psi.PsiElement,Z):V
- p:doUpdateComponent(java.util.concurrent.CompletableFuture,com.intellij.psi.PsiElement,com.intellij.codeInsight.documentation.DocumentationComponent):V
- p:doUpdateComponent(java.util.concurrent.CompletableFuture,com.intellij.psi.PsiElement,com.intellij.codeInsight.documentation.DocumentationComponent,Z):V
- fetchDocInfo(com.intellij.psi.PsiElement,com.intellij.codeInsight.documentation.DocumentationComponent):V
- findTargetElement(com.intellij.openapi.editor.Editor,I,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- findTargetElement(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- findTargetElement(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- generateDocumentation(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):java.lang.String
- p:getAutoUpdateDefault():Z
- getAutoUpdateDescription():java.lang.String
- getAutoUpdateEnabledProperty():java.lang.String
- getAutoUpdateTitle():java.lang.String
- getDocInfoHint():com.intellij.openapi.ui.popup.JBPopup
- p:getEditor():com.intellij.openapi.editor.Editor
- getElementFromLookup(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- s:getExternalLinks(java.lang.String,java.util.List):com.intellij.openapi.util.text.HtmlChunk
- s:getGenericExternalDocumentationLink(java.lang.String):com.intellij.openapi.util.text.HtmlChunk
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.documentation.DocumentationManager
- getLastAction():com.intellij.openapi.util.ActionCallback
- s:getOriginalElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getProject(com.intellij.psi.PsiElement):com.intellij.openapi.project.Project
- s:getProviderFromElement(com.intellij.psi.PsiElement):com.intellij.lang.documentation.DocumentationProvider
- s:getProviderFromElement(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.lang.documentation.DocumentationProvider
- getRestorePopupDescription():java.lang.String
- getShowInToolWindowProperty():java.lang.String
- getTargetElement(com.intellij.psi.PsiElement,java.lang.String):com.intellij.psi.PsiElement
- p:getTitle(com.intellij.psi.PsiElement):java.lang.String
- p:getToolwindowId():java.lang.String
- p:getToolwindowTitle():java.lang.String
- p:installComponentActions(com.intellij.openapi.wm.ToolWindow,com.intellij.codeInsight.documentation.DocumentationComponent):V
- navigateByLink(com.intellij.codeInsight.documentation.DocumentationComponent,com.intellij.psi.PsiElement,java.lang.String):V
- queueFetchDocInfo(com.intellij.psi.PsiElement,com.intellij.codeInsight.documentation.DocumentationComponent):com.intellij.openapi.util.ActionCallback
- recreateToolWindow(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.ui.content.Content
- registerQuickDocShortcutSet(javax.swing.JComponent,com.intellij.openapi.actionSystem.AnAction):V
- restorePopupBehavior():V
- setAllowContentUpdateFromContext(Z):V
- setDocumentationComponent(com.intellij.codeInsight.documentation.DocumentationComponent):V
- p:setToolwindowDefaultState(com.intellij.openapi.wm.ToolWindow):V
- showJavaDocInfo(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z):V
- showJavaDocInfo(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z,java.lang.Runnable):V
- p:showJavaDocInfo(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z,java.lang.Runnable,Z):V
- showJavaDocInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- showJavaDocInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.Runnable):V
- p:showJavaDocInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.Runnable,Z):V
- showJavaDocInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z,java.lang.Runnable):V
- showJavaDocInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z,java.lang.Runnable,java.lang.String,Z):V
- p:showJavaDocInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z,java.lang.Runnable,java.lang.String,Z,Z):V
- showJavaDocInfoAtToolWindow(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- s:storeOriginalElement(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- updateToolwindowContext():V
pa:com.intellij.codeInsight.documentation.DocumentationManager$DocumentationCollector
- getElement(Z):com.intellij.psi.PsiElement
f:com.intellij.codeInsight.documentation.DocumentationPreviewPanelProvider
- sf:ID:com.intellij.openapi.preview.PreviewProviderId
f:com.intellij.codeInsight.documentation.QuickDocUtil
- sf:CUT_AT_CMD:java.lang.Object
- <init>():V
- s:getActiveDocComponent(com.intellij.openapi.project.Project):com.intellij.codeInsight.documentation.DocumentationComponent
- s:inferLinkFromFullDocumentation(com.intellij.lang.documentation.DocumentationProvider,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String):java.lang.String
- s:updateQuickDoc(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.lang.String):V
- s:updateQuickDocAsync(com.intellij.psi.PsiElement,java.lang.CharSequence,com.intellij.util.Consumer):V
f:com.intellij.codeInsight.editorActions.AutoHardWrapHandler
- sf:AUTO_WRAP_LINE_IN_PROGRESS_KEY:com.intellij.openapi.util.Key
- <init>():V
- s:getInstance():com.intellij.codeInsight.editorActions.AutoHardWrapHandler
- wrapLineIfNecessary(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext,J):V
c:com.intellij.codeInsight.editorActions.BackspaceHandler
- com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler$ForEachCaret
- pf:myOriginalHandler:com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- s:deleteToTargetPosition(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.LogicalPosition):V
- executeWriteAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- s:getBackspaceUnindentPosition(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.LogicalPosition
- s:getRightChar(C):C
- s:isWhitespaceBeforeCaret(com.intellij.openapi.editor.Editor):Z
a:com.intellij.codeInsight.editorActions.BaseEnterHandler
- com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler
- p:<init>():V
- p:<init>(Z):V
- getCommandGroupId(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.actionSystem.DocCommandGroupId
a:com.intellij.codeInsight.editorActions.BraceMatcherBasedSelectioner
- com.intellij.codeInsight.editorActions.ExtendWordSelectionHandlerBase
- <init>():V
- select(com.intellij.psi.PsiElement,java.lang.CharSequence,I,com.intellij.openapi.editor.Editor):java.util.List
f:com.intellij.codeInsight.editorActions.BraceOrQuoteOutAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.codeInsight.editorActions.CodeBlockEndAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
com.intellij.codeInsight.editorActions.CodeBlockProvider
- a:getCodeBlockRange(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.openapi.util.TextRange
f:com.intellij.codeInsight.editorActions.CodeBlockStartAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.codeInsight.editorActions.CodeDocumentationUtil
- s:createDocCommentLine(java.lang.String,com.intellij.psi.PsiFile,com.intellij.lang.CodeDocumentationAwareCommenter):java.lang.String
- s:getIndentInsideJavadoc(com.intellij.openapi.editor.Document,I):java.lang.String
- s:tryParseCommentContext(com.intellij.psi.PsiFile,java.lang.CharSequence,I,I):com.intellij.codeInsight.editorActions.CodeDocumentationUtil$CommentContext
f:com.intellij.codeInsight.editorActions.CodeDocumentationUtil$CommentContext
- f:commenter:com.intellij.lang.CodeDocumentationAwareCommenter
- docAsterisk:Z
- docStart:Z
- f:lineStart:I
- <init>():V
- <init>(com.intellij.lang.CodeDocumentationAwareCommenter,Z,Z,I):V
com.intellij.codeInsight.editorActions.CommentCompleteHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:isApplicable(com.intellij.psi.PsiComment,com.intellij.lang.CodeDocumentationAwareCommenter):Z
- a:isCommentComplete(com.intellij.psi.PsiComment,com.intellij.lang.CodeDocumentationAwareCommenter,com.intellij.openapi.editor.Editor):Z
c:com.intellij.codeInsight.editorActions.CompletionAutoPopupHandler
- com.intellij.codeInsight.editorActions.TypedHandlerDelegate
- sf:ourTestingAutopopup:com.intellij.openapi.util.Key
- <init>():V
- checkAutoPopup(C,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- s:runLaterWithCommitted(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,java.lang.Runnable):V
com.intellij.codeInsight.editorActions.CopyPastePreProcessor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:preprocessOnCopy(com.intellij.psi.PsiFile,I[],I[],java.lang.String):java.lang.String
- a:preprocessOnPaste(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.String,com.intellij.openapi.editor.RawText):java.lang.String
- requiresAllDocumentsToBeCommitted(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):Z
c:com.intellij.codeInsight.editorActions.DefaultTypingActionsExtension
- com.intellij.codeInsight.editorActions.TypingActionsExtension
- <init>():V
- p:adjustLineIndent(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I):V
- p:adjustLineIndent(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,I):V
- format(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,I,I,I,Z,Z):V
- isSuitableContext(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):Z
- p:reformatRange(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,I):V
- startCopy(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
c:com.intellij.codeInsight.editorActions.EnterHandler
- com.intellij.codeInsight.editorActions.BaseEnterHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- s:adjustLineIndentNoCommit(com.intellij.lang.Language,com.intellij.openapi.editor.Document,com.intellij.openapi.editor.Editor,I):I
- executeWriteAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- s:getLanguage(com.intellij.openapi.actionSystem.DataContext):com.intellij.lang.Language
- s:isCommentComplete(com.intellij.psi.PsiComment,com.intellij.lang.CodeDocumentationAwareCommenter,com.intellij.openapi.editor.Editor):Z
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
a:com.intellij.codeInsight.editorActions.ExtendWordSelectionHandlerBase
- com.intellij.codeInsight.editorActions.ExtendWordSelectionHandler
- <init>():V
- a:canSelect(com.intellij.psi.PsiElement):Z
- s:expandToWholeLine(java.lang.CharSequence,com.intellij.openapi.util.TextRange):java.util.List
- s:expandToWholeLine(java.lang.CharSequence,com.intellij.openapi.util.TextRange,Z):java.util.List
- s:expandToWholeLinesWithBlanks(java.lang.CharSequence,com.intellij.openapi.util.TextRange):java.util.List
- getMinimalTextRangeLength(com.intellij.psi.PsiElement,java.lang.CharSequence,I):I
- select(com.intellij.psi.PsiElement,java.lang.CharSequence,I,com.intellij.openapi.editor.Editor):java.util.List
f:com.intellij.codeInsight.editorActions.FixDocCommentAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- sf:ACTION_ID:java.lang.String
- <init>():V
- s:generateOrFixComment(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
f:com.intellij.codeInsight.editorActions.IndentTransferableData
- com.intellij.codeInsight.editorActions.TextBlockTransferableData
- java.io.Serializable
- <init>(I):V
- s:getDataFlavorStatic():java.awt.datatransfer.DataFlavor
- getFlavor():java.awt.datatransfer.DataFlavor
- getOffset():I
com.intellij.codeInsight.editorActions.JavaLikeQuoteHandler
- com.intellij.codeInsight.editorActions.QuoteHandler
- canBeConcatenated(com.intellij.psi.PsiElement):Z
- a:getConcatenatableStringTokenTypes():com.intellij.psi.tree.TokenSet
- a:getStringConcatenationOperatorRepresentation():java.lang.String
- a:getStringTokenTypes():com.intellij.psi.tree.TokenSet
- a:isAppropriateElementTypeForLiteral(com.intellij.psi.tree.IElementType):Z
- a:needParenthesesAroundConcatenation(com.intellij.psi.PsiElement):Z
f:com.intellij.codeInsight.editorActions.JoinLinesHandler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler$ForEachCaret
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
com.intellij.codeInsight.editorActions.MultiCharQuoteHandler
- com.intellij.codeInsight.editorActions.QuoteHandler
- a:getClosingQuote(com.intellij.openapi.editor.highlighter.HighlighterIterator,I):java.lang.CharSequence
- insertClosingQuote(com.intellij.openapi.editor.Editor,I,com.intellij.psi.PsiFile,java.lang.CharSequence):V
- insertClosingQuote(com.intellij.openapi.editor.Editor,I,java.lang.CharSequence):V
c:com.intellij.codeInsight.editorActions.PasteHandler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- com.intellij.openapi.editor.actionSystem.EditorTextInsertHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- execute(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext,com.intellij.util.Producer):V
f:com.intellij.codeInsight.editorActions.PreserveIndentOnPasteBean
- fileType:java.lang.String
com.intellij.codeInsight.editorActions.QuoteHandler
- a:hasNonClosedLiteral(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.highlighter.HighlighterIterator,I):Z
- a:isClosingQuote(com.intellij.openapi.editor.highlighter.HighlighterIterator,I):Z
- a:isInsideLiteral(com.intellij.openapi.editor.highlighter.HighlighterIterator):Z
- a:isOpeningQuote(com.intellij.openapi.editor.highlighter.HighlighterIterator,I):Z
f:com.intellij.codeInsight.editorActions.QuoteHandlerEP
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- com.intellij.util.KeyedLazyInstance
- className:java.lang.String
- fileType:java.lang.String
f:com.intellij.codeInsight.editorActions.SelectWordHandler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler$ForEachCaret
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.codeInsight.editorActions.SelectWordUtil
- sf:JAVA_IDENTIFIER_PART_CONDITION:com.intellij.codeInsight.editorActions.SelectWordUtil$CharCondition
- s:addWordHonoringEscapeSequences(java.lang.CharSequence,com.intellij.openapi.util.TextRange,I,com.intellij.lexer.Lexer,java.util.List):V
- s:addWordOrLexemeSelection(Z,com.intellij.openapi.editor.Editor,I,java.util.List):V
- s:addWordOrLexemeSelection(Z,com.intellij.openapi.editor.Editor,I,java.util.List,com.intellij.codeInsight.editorActions.SelectWordUtil$CharCondition):V
- s:addWordSelection(Z,java.lang.CharSequence,I,java.util.List):V
- s:addWordSelection(Z,java.lang.CharSequence,I,java.util.List,com.intellij.codeInsight.editorActions.SelectWordUtil$CharCondition):V
- s:canWhiteSpaceBeExpanded(com.intellij.psi.PsiWhiteSpace,I,com.intellij.openapi.editor.Caret,com.intellij.openapi.editor.Editor):Z
- s:getCharAfterCursorInPsiElement(com.intellij.psi.PsiElement,I):java.lang.Character
- s:getCharBeforeCursorInPsiElement(com.intellij.psi.PsiElement,I):java.lang.Character
- s:getWordOrLexemeSelectionRange(com.intellij.openapi.editor.Editor,I,com.intellij.codeInsight.editorActions.SelectWordUtil$CharCondition):com.intellij.openapi.util.TextRange
- s:getWordSelectionRange(java.lang.CharSequence,I,com.intellij.codeInsight.editorActions.SelectWordUtil$CharCondition):com.intellij.openapi.util.TextRange
- s:isExpandableWhiteSpace(C):Z
- s:processRanges(com.intellij.psi.PsiElement,java.lang.CharSequence,I,com.intellij.openapi.editor.Editor,com.intellij.util.Processor):V
com.intellij.codeInsight.editorActions.SelectWordUtil$CharCondition
- a:value(C):Z
f:com.intellij.codeInsight.editorActions.SelectionQuotingTypedHandler
- com.intellij.codeInsight.editorActions.TypedHandlerDelegate
- <init>():V
- beforeSelectionRemoved(C,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- s:shouldSkipReplacementOfQuotesOrBraces(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.String,C):Z
a:com.intellij.codeInsight.editorActions.SelectionQuotingTypedHandler$UnquotingFilter
- <init>():V
- a:skipReplacementQuotesOrBraces(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.String,C):Z
c:com.intellij.codeInsight.editorActions.SimpleTokenSetQuoteHandler
- com.intellij.codeInsight.editorActions.QuoteHandler
- pf:myLiteralTokenSet:com.intellij.psi.tree.TokenSet
- <init>(com.intellij.psi.tree.TokenSet):V
- <init>(com.intellij.psi.tree.IElementType[]):V
- hasNonClosedLiteral(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.highlighter.HighlighterIterator,I):Z
- isClosingQuote(com.intellij.openapi.editor.highlighter.HighlighterIterator,I):Z
- isInsideLiteral(com.intellij.openapi.editor.highlighter.HighlighterIterator):Z
- p:isNonClosedLiteral(com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence):Z
- isOpeningQuote(com.intellij.openapi.editor.highlighter.HighlighterIterator,I):Z
f:com.intellij.codeInsight.editorActions.TypedHandler
- com.intellij.codeInsight.template.impl.editorActions.TypedActionHandlerBase
- <init>(com.intellij.openapi.editor.actionSystem.TypedActionHandler):V
- s:autoPopupCompletion(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.project.Project,com.intellij.psi.PsiFile):V
- beforeExecute(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.ActionPlan):V
- s:commitDocumentIfCurrentCaretIsNotTheFirstOne(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):V
- execute(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext):V
- s:getQuoteHandler(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.codeInsight.editorActions.QuoteHandler
- s:handleRParen(com.intellij.openapi.editor.Editor,com.intellij.openapi.fileTypes.FileType,C):Z
- s:indentBrace(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,C):V
- s:indentOpenedBrace(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- s:injectedEditorIfCharTypedIsSignificant(C,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.openapi.editor.Editor
- s:registerQuoteHandler(com.intellij.openapi.fileTypes.FileType,com.intellij.codeInsight.editorActions.QuoteHandler):V
f:com.intellij.codeInsight.editorActions.TypedHandlerUtil
- <init>():V
- s:handleAfterGenericLT(com.intellij.openapi.editor.Editor,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.TokenSet):V
- s:handleGenericGT(com.intellij.openapi.editor.Editor,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.TokenSet):Z
- s:handleGenericLTDeletion(com.intellij.openapi.editor.Editor,I,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.TokenSet):V
- s:isAfterClassLikeIdentifierOrDot(I,com.intellij.openapi.editor.Editor,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,Z):Z
- s:isClassLikeIdentifier(I,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.highlighter.HighlighterIterator,com.intellij.psi.tree.IElementType):Z
com.intellij.codeInsight.editorActions.emacs.EmacsProcessingHandler
- a:changeIndent(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.editorActions.emacs.EmacsProcessingHandler$Result
e:com.intellij.codeInsight.editorActions.emacs.EmacsProcessingHandler$Result
- java.lang.Enum
- sf:CONTINUE:com.intellij.codeInsight.editorActions.emacs.EmacsProcessingHandler$Result
- sf:STOP:com.intellij.codeInsight.editorActions.emacs.EmacsProcessingHandler$Result
- s:valueOf(java.lang.String):com.intellij.codeInsight.editorActions.emacs.EmacsProcessingHandler$Result
- s:values():com.intellij.codeInsight.editorActions.emacs.EmacsProcessingHandler$Result[]
c:com.intellij.codeInsight.editorActions.enter.BaseIndentEnterHandler
- com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegateAdapter
- <init>(com.intellij.lang.Language,com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.IElementType,java.lang.String,com.intellij.psi.tree.TokenSet):V
- <init>(com.intellij.lang.Language,com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.IElementType,java.lang.String,com.intellij.psi.tree.TokenSet,Z):V
- p:getNewIndent(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,java.lang.CharSequence):java.lang.String
- p:getNonWhitespaceElementType(com.intellij.openapi.editor.highlighter.HighlighterIterator,I,I):com.intellij.psi.tree.IElementType
- preprocessEnter(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.Ref,com.intellij.openapi.util.Ref,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.EditorActionHandler):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- p:shouldSkipWithResult(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
c:com.intellij.codeInsight.editorActions.enter.EnterAfterUnmatchedBraceHandler
- com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegateAdapter
- <init>():V
- p:calculateOffsetToInsertClosingBrace(com.intellij.psi.PsiFile,java.lang.CharSequence,I):com.intellij.openapi.util.Pair
- p:calculateOffsetToInsertClosingBraceInsideElement(com.intellij.psi.PsiElement):I
- p:formatCodeFragmentBetweenBraces(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,com.intellij.openapi.editor.Editor,I,I,java.lang.String):V
- p:generateStringToInsert(com.intellij.openapi.editor.Editor,I,I):java.lang.String
- p:getMaxRBraceCount(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I):I
- p:getRBraceOffset(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I):I
- ps:getUnmatchedLBracesNumberBefore(com.intellij.openapi.editor.Editor,I,com.intellij.openapi.fileTypes.FileType):I
- p:insertRBraces(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,I,java.lang.String):V
- p:insertRBracesAtPosition(com.intellij.openapi.editor.Document,I,I,java.lang.String):V
- s:isAfterUnmatchedLBrace(com.intellij.openapi.editor.Editor,I,com.intellij.openapi.fileTypes.FileType):Z
- isApplicable(com.intellij.psi.PsiFile,I):Z
- p:isStopChar(C):Z
- preprocessEnter(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.Ref,com.intellij.openapi.util.Ref,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.EditorActionHandler):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
c:com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesAndBracketsDelegate
- com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesDelegate
- <init>():V
- p:isBracePair(C,C):Z
c:com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesDelegate
- <init>():V
- bracesAreInTheSameElement(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,I):Z
- p:formatAtOffset(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,com.intellij.lang.Language):V
- p:isBracePair(C,C):Z
- isInComment(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I):Z
c:com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesFinalHandler
- com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegateAdapter
- ps:ourDefaultBetweenDelegate:com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesDelegate
- <init>():V
- ps:getLanguageImplementation(com.intellij.lang.Language):com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesDelegate
- p:isApplicable(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.CharSequence,I,com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesDelegate):Z
- ps:isValidOffset(I,java.lang.CharSequence):Z
- preprocessEnter(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.Ref,com.intellij.openapi.util.Ref,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.EditorActionHandler):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
c:com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesHandler
- com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesFinalHandler
- <init>():V
- p:isApplicable(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.CharSequence,I,com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesDelegate):Z
- p:isBracePair(C,C):Z
a:com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesNoCommitDelegate
- com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesDelegate
- <init>():V
- bracesAreInTheSameElement(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,I):Z
- s:createBeforeIterator(com.intellij.openapi.editor.Editor,I):com.intellij.openapi.editor.highlighter.HighlighterIterator
- p:formatAtOffset(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,com.intellij.lang.Language):V
- a:isCommentType(com.intellij.psi.tree.IElementType):Z
- isInComment(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I):Z
com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- invokeInsideIndent(I,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):Z
- a:postProcessEnter(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- a:preprocessEnter(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.Ref,com.intellij.openapi.util.Ref,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.EditorActionHandler):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
e:com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- java.lang.Enum
- sf:Continue:com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- sf:Default:com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- sf:DefaultForceIndent:com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- sf:DefaultSkipIndent:com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- sf:Stop:com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- s:valueOf(java.lang.String):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- s:values():com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result[]
c:com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegateAdapter
- com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate
- <init>():V
- postProcessEnter(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- preprocessEnter(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.Ref,com.intellij.openapi.util.Ref,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.EditorActionHandler):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
f:com.intellij.codeInsight.editorActions.enter.EnterInCommentUtil
- <init>():V
- s:getDocumentationAwareCommenter(com.intellij.openapi.actionSystem.DataContext):com.intellij.lang.CodeDocumentationAwareCommenter
- s:getTodoTextOffset(java.lang.CharSequence,I,I):I
- s:isTodoText(java.lang.CharSequence,I,I):Z
c:com.intellij.codeInsight.editorActions.enter.EnterInStringLiteralHandler
- com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegateAdapter
- <init>():V
- p:getJavaLikeQuoteHandler(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):com.intellij.codeInsight.editorActions.JavaLikeQuoteHandler
- p:isInStringLiteral(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.editorActions.JavaLikeQuoteHandler,I):Z
- p:isInsideLiteral(com.intellij.codeInsight.editorActions.JavaLikeQuoteHandler,com.intellij.openapi.editor.highlighter.HighlighterIterator):Z
- preprocessEnter(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.Ref,com.intellij.openapi.util.Ref,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.EditorActionHandler):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- ps:skipStringLiteralEscapes(I,com.intellij.lexer.StringLiteralLexer):I
- p:splitString(com.intellij.psi.PsiFile,com.intellij.openapi.util.Ref,com.intellij.openapi.util.Ref,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I,com.intellij.codeInsight.editorActions.JavaLikeQuoteHandler):com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate$Result
- ps:wrapWithParensIfNeeded(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I,com.intellij.codeInsight.editorActions.JavaLikeQuoteHandler):I
f:com.intellij.codeInsight.editorActions.fillParagraph.FillParagraphAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- com.intellij.openapi.project.DumbAware
- <init>():V
c:com.intellij.codeInsight.editorActions.fillParagraph.ParagraphFillHandler
- <init>():V
- p:appendPostfix(com.intellij.psi.PsiElement,java.lang.String,java.lang.StringBuilder):V
- p:appendPrefix(com.intellij.psi.PsiElement,java.lang.String,java.lang.StringBuilder):V
- p:atWhitespaceToken(com.intellij.psi.PsiElement):Z
- p:getPostfix(com.intellij.psi.PsiElement):java.lang.String
- p:getPrefix(com.intellij.psi.PsiElement):java.lang.String
- p:isAvailableForElement(com.intellij.psi.PsiElement):Z
- p:isAvailableForFile(com.intellij.psi.PsiFile):Z
- p:isBunchOfElement(com.intellij.psi.PsiElement):Z
- p:performOnElement(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
f:com.intellij.codeInsight.editorActions.moveUpDown.MoveLineDownAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.codeInsight.editorActions.moveUpDown.MoveLineUpAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.codeInsight.editorActions.moveUpDown.MoveStatementDownAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.codeInsight.editorActions.moveUpDown.MoveStatementUpAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.codeInsight.editorActions.smartEnter.SmartEnterAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
- s:plainEnter(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
a:com.intellij.codeInsight.editorActions.wordSelection.AbstractWordSelectioner
- com.intellij.codeInsight.editorActions.ExtendWordSelectionHandlerBase
- <init>():V
- canSelect(com.intellij.psi.PsiElement):Z
- select(com.intellij.psi.PsiElement,java.lang.CharSequence,I,com.intellij.openapi.editor.Editor):java.util.List
c:com.intellij.codeInsight.editorActions.wordSelection.BlockCommentSelectioner
- com.intellij.codeInsight.editorActions.ExtendWordSelectionHandler
- <init>():V
- canSelect(com.intellij.psi.PsiElement):Z
- select(com.intellij.psi.PsiElement,java.lang.CharSequence,I,com.intellij.openapi.editor.Editor):java.util.List
c:com.intellij.codeInsight.editorActions.wordSelection.LineCommentSelectioner
- com.intellij.codeInsight.editorActions.wordSelection.WordSelectioner
- <init>():V
- canSelect(com.intellij.psi.PsiElement):Z
- select(com.intellij.psi.PsiElement,java.lang.CharSequence,I,com.intellij.openapi.editor.Editor):java.util.List
f:com.intellij.codeInsight.editorActions.wordSelection.PlainTextLineSelectioner
- com.intellij.codeInsight.editorActions.ExtendWordSelectionHandlerBase
- <init>():V
- canSelect(com.intellij.psi.PsiElement):Z
- select(com.intellij.psi.PsiElement,java.lang.CharSequence,I,com.intellij.openapi.editor.Editor):java.util.List
- s:selectPlainTextLine(com.intellij.psi.PsiElement,java.lang.CharSequence,I):java.util.List
c:com.intellij.codeInsight.editorActions.wordSelection.WordSelectioner
- com.intellij.codeInsight.editorActions.wordSelection.AbstractWordSelectioner
- <init>():V
- canSelect(com.intellij.psi.PsiElement):Z
com.intellij.codeInsight.generation.ClassMemberWithElement
- com.intellij.codeInsight.generation.ClassMember
- a:getElement():com.intellij.psi.PsiElement
f:com.intellij.codeInsight.generation.CommentByBlockCommentHandler
- com.intellij.codeInsight.actions.MultiCaretCodeInsightActionHandler
- <init>():V
- commentRange(I,I,java.lang.String,java.lang.String,com.intellij.lang.Commenter):V
- s:getCommenter(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.lang.Language,com.intellij.lang.Language):com.intellij.lang.Commenter
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.psi.PsiFile):V
- uncommentRange(com.intellij.openapi.util.TextRange,java.lang.String,java.lang.String,com.intellij.lang.Commenter):V
f:com.intellij.codeInsight.generation.CommentByLineCommentHandler
- com.intellij.codeInsight.actions.MultiCaretCodeInsightActionHandler
- <init>():V
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.psi.PsiFile):V
- s:markInjectedFileUnsuitableForLineComment(com.intellij.psi.PsiFile):V
- postInvoke():V
f:com.intellij.codeInsight.generation.ImplementMethodsHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- <init>():V
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- startInWriteAction():Z
f:com.intellij.codeInsight.generation.OverrideMethodsHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- <init>():V
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- startInWriteAction():Z
c:com.intellij.codeInsight.generation.actions.CommentByLineCommentAction
- com.intellij.codeInsight.actions.MultiCaretCodeInsightAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>():V
- p:getHandler():com.intellij.codeInsight.actions.MultiCaretCodeInsightActionHandler
- p:isValidFor(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.psi.PsiFile):Z
a:com.intellij.codeInsight.generation.actions.PresentableActionHandlerBasedAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- <init>():V
- p:getCommandName():java.lang.String
- pa:getLanguageExtension():com.intellij.lang.LanguageExtension
- p:isValidForFile(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:update(com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext,java.lang.String):V
com.intellij.codeInsight.generation.actions.PresentableCodeInsightActionHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- a:update(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.Presentation):V
- update(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.Presentation,java.lang.String):V
com.intellij.codeInsight.generation.actions.PresentableLanguageCodeInsightActionHandler
- com.intellij.codeInsight.generation.actions.PresentableCodeInsightActionHandler
- com.intellij.lang.LanguageCodeInsightActionHandler
f:com.intellij.codeInsight.generation.surroundWith.SurroundWithHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- sf:CARET_IS_OK:com.intellij.openapi.util.TextRange
- <init>():V
- s:buildSurroundActions(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- s:doSurround(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.lang.surroundWith.Surrounder,com.intellij.psi.PsiElement[]):V
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- s:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.lang.surroundWith.Surrounder):V
- s:selectLogicalLineContentsAtCaret(com.intellij.openapi.editor.Editor):V
- startInWriteAction():Z
a:com.intellij.codeInsight.highlighting.AbstractCodeBlockSupportHandler
- com.intellij.codeInsight.highlighting.CodeBlockSupportHandler
- <init>():V
- pa:getBlockElementTypes():com.intellij.psi.tree.TokenSet
- getCodeBlockMarkerRanges(com.intellij.psi.PsiElement):java.util.List
- getCodeBlockRange(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- pa:getDirectChildrenElementTypes(com.intellij.psi.tree.IElementType):com.intellij.psi.tree.TokenSet
- pa:getKeywordElementTypes():com.intellij.psi.tree.TokenSet
- pa:getTopLevelElementTypes():com.intellij.psi.tree.TokenSet
f:com.intellij.codeInsight.highlighting.BraceHighlightingHandler
- sf:Companion:com.intellij.codeInsight.highlighting.BraceHighlightingHandler$Companion
- sf:LAYER:I
- f:clearBraceHighlighters():V
- sf:getLazyParsableHighlighterIfAny(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.openapi.editor.highlighter.EditorHighlighter
- f:highlightBraces(com.intellij.openapi.util.TextRange,com.intellij.openapi.util.TextRange,Z,Z,com.intellij.openapi.fileTypes.FileType):V
- sf:lineMarkFragment(com.intellij.openapi.editor.ex.EditorEx,com.intellij.openapi.editor.Document,I,I,Z):V
- sf:showScopeHint(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I,I):V
- f:updateBraces():V
f:com.intellij.codeInsight.highlighting.BraceHighlightingHandler$Companion
- f:createLineMarkerRenderer(Z):com.intellij.openapi.editor.markup.LineMarkerRenderer
- f:getLazyParsableHighlighterIfAny(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.openapi.editor.highlighter.EditorHighlighter
- f:lineMarkFragment(com.intellij.openapi.editor.ex.EditorEx,com.intellij.openapi.editor.Document,I,I,Z):V
- f:showScopeHint(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I,I):V
com.intellij.codeInsight.highlighting.BraceMatcher
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getBraceTokenGroupId(com.intellij.psi.tree.IElementType):I
- a:getCodeConstructStart(com.intellij.psi.PsiFile,I):I
- a:getOppositeBraceTokenType(com.intellij.psi.tree.IElementType):com.intellij.psi.tree.IElementType
- a:isLBraceToken(com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):Z
- a:isPairBraces(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
- a:isPairedBracesAllowedBeforeType(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
- a:isRBraceToken(com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):Z
- a:isStructuralBrace(com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):Z
com.intellij.codeInsight.highlighting.BraceMatcherTerminationAspect
- a:shouldStopMatch(Z,com.intellij.psi.tree.IElementType,com.intellij.openapi.editor.highlighter.HighlighterIterator):Z
f:com.intellij.codeInsight.highlighting.BraceMatchingUtil
- sf:UNDEFINED_TOKEN_GROUP:I
- s:computeHighlightingAndNavigationContext(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.highlighting.BraceMatchingUtil$BraceHighlightingAndNavigationContext
- s:findLeftLParen(com.intellij.openapi.editor.highlighter.HighlighterIterator,com.intellij.psi.tree.IElementType,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):I
- s:findLeftmostLParen(com.intellij.openapi.editor.highlighter.HighlighterIterator,com.intellij.psi.tree.IElementType,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):I
- s:findRightmostRParen(com.intellij.openapi.editor.highlighter.HighlighterIterator,com.intellij.psi.tree.IElementType,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):I
- s:findStructuralLeftBrace(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence):Z
- s:getBraceMatcher(com.intellij.openapi.fileTypes.FileType,com.intellij.lang.Language):com.intellij.codeInsight.highlighting.BraceMatcher
- s:getBraceMatcher(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.highlighter.HighlighterIterator):com.intellij.codeInsight.highlighting.BraceMatcher
- s:getBraceMatcher(com.intellij.openapi.fileTypes.FileType,com.intellij.psi.tree.IElementType):com.intellij.codeInsight.highlighting.BraceMatcher
- s:getFileType(com.intellij.psi.PsiFile,I):com.intellij.openapi.fileTypes.FileType
- s:getMatchedBraceOffset(com.intellij.openapi.editor.Editor,Z,com.intellij.psi.PsiFile):I
- s:isLBraceToken(com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):Z
- s:isPairBraces(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.openapi.fileTypes.FileType):Z
- s:isPairedBracesAllowedBeforeTypeInFileType(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,com.intellij.openapi.fileTypes.FileType):Z
- s:isRBraceToken(com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):Z
- s:isStructuralBraceToken(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence):Z
- s:matchBrace(java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.highlighter.HighlighterIterator,Z):Z
- s:matchBrace(java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.highlighter.HighlighterIterator,Z,Z):Z
f:com.intellij.codeInsight.highlighting.BraceMatchingUtil$BraceHighlightingAndNavigationContext
- java.lang.Record
- <init>(I,I,Z):V
- currentBraceOffset():I
- f:equals(java.lang.Object):Z
- f:hashCode():I
- isCaretAfterBrace():Z
- navigationOffset():I
a:com.intellij.codeInsight.highlighting.ChooseOneOrAllRunnable
- java.lang.Runnable
- <init>(java.util.List,com.intellij.openapi.editor.Editor,java.lang.String,java.lang.Class):V
- pa:createRenderer():com.intellij.ide.util.PsiElementListCellRenderer
- run():V
- pa:selected(com.intellij.psi.PsiElement[]):V
com.intellij.codeInsight.highlighting.CodeBlockSupportHandler
- sf:EP:com.intellij.lang.LanguageExtension
- s:findCodeBlockRange(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.openapi.util.TextRange
- s:findMarkersRanges(com.intellij.psi.PsiElement):java.util.List
- s:findMarkersRanges(com.intellij.psi.PsiFile,com.intellij.lang.Language,I):java.util.List
- a:getCodeBlockMarkerRanges(com.intellij.psi.PsiElement):java.util.List
- a:getCodeBlockRange(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
a:com.intellij.codeInsight.highlighting.HeavyBraceHighlighter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- p:isAvailable(com.intellij.psi.PsiFile,I):Z
- s:match(com.intellij.psi.PsiFile,I):com.intellij.openapi.util.Pair
- pa:matchBrace(com.intellij.psi.PsiFile,I):com.intellij.openapi.util.Pair
f:com.intellij.codeInsight.highlighting.HighlightManagerImpl
- com.intellij.codeInsight.highlighting.HighlightManager
- sf:OCCURRENCE_LAYER:I
- <init>(com.intellij.openapi.project.Project):V
- addOccurrenceHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.colors.TextAttributesKey,I,java.util.Collection):V
- addOccurrenceHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.markup.TextAttributes,I,java.util.Collection,java.awt.Color):V
- addOccurrenceHighlights(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement[],com.intellij.openapi.editor.colors.TextAttributesKey,Z,java.util.Collection):V
- addOccurrenceHighlights(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiReference[],com.intellij.openapi.editor.colors.TextAttributesKey,Z,java.util.Collection):V
- addRangeHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.colors.TextAttributesKey,Z,java.util.Collection):V
- addRangeHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.colors.TextAttributesKey,Z,Z,java.util.Collection):V
- addRangeHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.markup.TextAttributes,Z,java.util.Collection):V
- addRangeHighlight(com.intellij.openapi.editor.Editor,I,I,com.intellij.openapi.editor.markup.TextAttributes,Z,Z,java.util.Collection):V
- s:getHideFlags(com.intellij.openapi.editor.markup.RangeHighlighter):java.lang.Integer
- getHighlighters(com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.markup.RangeHighlighter[]
- hideHighlights(com.intellij.openapi.editor.Editor,I):Z
- removeSegmentHighlighter(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.markup.RangeHighlighter):Z
f:com.intellij.codeInsight.highlighting.HighlightUsagesHandler
- <init>():V
- s:collectHighlightRanges(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.util.Collection):V
- s:collectHighlightRanges(com.intellij.psi.PsiReference,java.util.Collection):V
- s:collectRangesToHighlight(com.intellij.psi.PsiReference,java.util.List):java.util.List
- s:createCustomHandler(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.highlighting.HighlightUsagesHandlerBase
- s:createCustomHandler(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.util.ProperTextRange):com.intellij.codeInsight.highlighting.HighlightUsagesHandlerBase
- s:getNameIdentifierRange(com.intellij.psi.PsiFile,com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- s:getNameIdentifierRangeInCurrentRoot(com.intellij.psi.PsiFile,com.intellij.psi.PsiElement):com.intellij.openapi.util.Pair
- s:getShortcutText():java.lang.String
- s:highlightRanges(com.intellij.codeInsight.highlighting.HighlightManager,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.colors.TextAttributesKey,Z,java.util.List):V
- s:highlightReferences(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.util.List,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z):V
- s:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- s:isClearHighlights(com.intellij.openapi.editor.Editor):Z
f:com.intellij.codeInsight.highlighting.HighlightUsagesHandler$DoHighlightRunnable
- java.lang.Runnable
- <init>(java.util.List,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z):V
- run():V
a:com.intellij.codeInsight.highlighting.HighlightUsagesHandlerBase
- com.intellij.openapi.project.PossiblyDumbAware
- pf:myEditor:com.intellij.openapi.editor.Editor
- pf:myFile:com.intellij.psi.PsiFile
- p:myHintText:java.lang.String
- pf:myReadUsages:java.util.List
- p:myStatusText:java.lang.String
- pf:myWriteUsages:java.util.List
- p:<init>(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- p:addOccurrence(com.intellij.psi.PsiElement):V
- p:buildStatusText(java.lang.String,I):V
- a:computeUsages(java.util.List):V
- getFeatureId():java.lang.String
- getReadUsages():java.util.List
- a:getTargets():java.util.List
- getWriteUsages():java.util.List
- highlightReferences():Z
- highlightUsages():V
- pa:selectTargets(java.util.List,com.intellij.util.Consumer):V
com.intellij.codeInsight.highlighting.HighlightUsagesHandlerFactory
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createHighlightUsagesHandler(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.highlighting.HighlightUsagesHandlerBase
- createHighlightUsagesHandler(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.util.ProperTextRange):com.intellij.codeInsight.highlighting.HighlightUsagesHandlerBase
a:com.intellij.codeInsight.highlighting.HighlightUsagesHandlerFactoryBase
- com.intellij.codeInsight.highlighting.HighlightUsagesHandlerFactory
- <init>():V
- f:createHighlightUsagesHandler(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.highlighting.HighlightUsagesHandlerBase
- f:createHighlightUsagesHandler(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.util.ProperTextRange):com.intellij.codeInsight.highlighting.HighlightUsagesHandlerBase
- a:createHighlightUsagesHandler(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement):com.intellij.codeInsight.highlighting.HighlightUsagesHandlerBase
- createHighlightUsagesHandler(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,com.intellij.openapi.util.ProperTextRange):com.intellij.codeInsight.highlighting.HighlightUsagesHandlerBase
c:com.intellij.codeInsight.highlighting.PairedBraceMatcherAdapter
- com.intellij.codeInsight.highlighting.BraceMatcher
- com.intellij.lang.PairedBraceMatcher
- <init>(com.intellij.lang.PairedBraceMatcher,com.intellij.lang.Language):V
- findPair(Z,com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):com.intellij.lang.BracePair
- getBraceTokenGroupId(com.intellij.psi.tree.IElementType):I
- getCodeConstructStart(com.intellij.psi.PsiFile,I):I
- getOppositeBraceTokenType(com.intellij.psi.tree.IElementType):com.intellij.psi.tree.IElementType
- getOppositeBraceTokenTypes(com.intellij.psi.tree.IElementType):java.util.List
- getPairs():com.intellij.lang.BracePair[]
- isLBraceToken(com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):Z
- isPairBraces(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
- isPairedBracesAllowedBeforeType(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
- isRBraceToken(com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):Z
- isStructuralBrace(com.intellij.openapi.editor.highlighter.HighlighterIterator,java.lang.CharSequence,com.intellij.openapi.fileTypes.FileType):Z
- shouldStopMatch(Z,com.intellij.psi.tree.IElementType,com.intellij.openapi.editor.highlighter.HighlighterIterator):Z
a:com.intellij.codeInsight.highlighting.TemplateLanguageErrorFilter
- com.intellij.codeInsight.highlighting.HighlightErrorFilter
- p:<init>(com.intellij.openapi.util.NotNullLazyValue,java.lang.Class):V
- p:<init>(com.intellij.openapi.util.NotNullLazyValue,java.lang.Class,java.lang.String[]):V
- p:<init>(com.intellij.psi.tree.TokenSet,java.lang.Class):V
- p:<init>(com.intellij.psi.tree.TokenSet,java.lang.Class,java.lang.String[]):V
- p:isKnownSubLanguage(com.intellij.lang.Language):Z
- pf:isNearTemplateExpressions(com.intellij.psi.PsiFile,I,I):Z
- p:isTemplateViewProvider(com.intellij.psi.FileViewProvider):Z
- shouldHighlightErrorElement(com.intellij.psi.PsiErrorElement):Z
com.intellij.codeInsight.highlighting.XmlAwareBraceMatcher
- com.intellij.codeInsight.highlighting.BraceMatcher
- a:areTagsCaseSensitive(com.intellij.openapi.fileTypes.FileType,I):Z
- a:getTagName(java.lang.CharSequence,com.intellij.openapi.editor.highlighter.HighlighterIterator):java.lang.String
- a:isStrictTagMatching(com.intellij.openapi.fileTypes.FileType,I):Z
f:com.intellij.codeInsight.hint.DeclarationRangeUtil
- <init>():V
- s:getDeclarationRange(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- s:getPossibleDeclarationAtRange(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
f:com.intellij.codeInsight.hint.ElementLocationUtil
- s:customizeElementLabel(com.intellij.psi.PsiElement,javax.swing.JLabel):V
- s:renderElementLocation(com.intellij.psi.PsiElement,com.intellij.openapi.util.Ref):java.lang.String
com.intellij.codeInsight.hint.ExternalParameterInfoChangesProvider
- sf:TOPIC:com.intellij.util.messages.Topic
- a:fireChangeAtOffset(com.intellij.openapi.editor.Editor,I):V
f:com.intellij.codeInsight.hint.ImplementationViewComponent
- javax.swing.JPanel
- <init>(java.util.Collection,I):V
- cleanup():V
- getElements():com.intellij.codeInsight.hint.ImplementationViewElement[]
- getIndex():I
- s:getNewText(com.intellij.psi.PsiElement):java.lang.String
- getPreferredFocusableComponent():javax.swing.JComponent
- getVisibleFiles():java.lang.String[]
- hasElementsToShow():Z
- removeNotify():V
- setHint(com.intellij.openapi.ui.popup.JBPopup,java.lang.String):V
- setShowInFindWindowProcessor(java.util.function.Consumer):V
- showInUsageView():com.intellij.usages.UsageView
- update(java.util.Collection,I):V
com.intellij.codeInsight.hint.ImplementationViewDocumentFactory
- sf:Companion:com.intellij.codeInsight.hint.ImplementationViewDocumentFactory$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createDocument(com.intellij.codeInsight.hint.ImplementationViewElement):com.intellij.openapi.editor.Document
- tuneEditorAfterShow(com.intellij.openapi.editor.ex.EditorEx):V
- tuneEditorBeforeShow(com.intellij.openapi.editor.ex.EditorEx):V
f:com.intellij.codeInsight.hint.ImplementationViewDocumentFactory$Companion
a:com.intellij.codeInsight.hint.ImplementationViewElement
- <init>():V
- getContainerPresentation():java.lang.String
- a:getContainingFile():com.intellij.openapi.vfs.VirtualFile
- a:getContainingMemberOrSelf():com.intellij.codeInsight.hint.ImplementationViewElement
- a:getElementForShowUsages():com.intellij.psi.PsiElement
- a:getLocationIcon():javax.swing.Icon
- a:getLocationText():java.lang.String
- a:getName():java.lang.String
- a:getPresentableText():java.lang.String
- a:getProject():com.intellij.openapi.project.Project
- a:getText():java.lang.String
- getUsage():com.intellij.usages.Usage
- a:isNamed():Z
- a:navigate(Z):V
com.intellij.codeInsight.hint.ImplementationViewSession
- com.intellij.openapi.Disposable
- a:elementRequiresIncludeSelf():Z
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getFactory():com.intellij.codeInsight.hint.ImplementationViewSessionFactory
- a:getFile():com.intellij.openapi.vfs.VirtualFile
- a:getImplementationElements():java.util.List
- a:getProject():com.intellij.openapi.project.Project
- a:getText():java.lang.String
- a:needUpdateInBackground():Z
- a:searchImplementationsInBackground(com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):java.util.List
com.intellij.codeInsight.hint.ImplementationViewSessionFactory
- sf:Companion:com.intellij.codeInsight.hint.ImplementationViewSessionFactory$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createSession(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.project.Project,Z,Z):com.intellij.codeInsight.hint.ImplementationViewSession
- a:createSessionForLookupElement(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.vfs.VirtualFile,java.lang.Object,Z,Z):com.intellij.codeInsight.hint.ImplementationViewSession
f:com.intellij.codeInsight.hint.ImplementationViewSessionFactory$Companion
f:com.intellij.codeInsight.hint.InspectionDescriptionLinkHandler
- com.intellij.codeInsight.highlighting.TooltipLinkHandler
- <init>():V
- getDescription(java.lang.String,com.intellij.openapi.editor.Editor):java.lang.String
f:com.intellij.codeInsight.hint.ParameterInfoComponent
- javax.swing.JPanel
- s:createContext(java.lang.Object[],com.intellij.openapi.editor.Editor,com.intellij.lang.parameterInfo.ParameterInfoHandler,I):com.intellij.lang.parameterInfo.ParameterInfoUIContextEx
- s:createContext(java.lang.Object[],com.intellij.openapi.editor.Editor,com.intellij.lang.parameterInfo.ParameterInfoHandler,I,com.intellij.psi.PsiElement):com.intellij.lang.parameterInfo.ParameterInfoUIContextEx
- getPreferredSize():java.awt.Dimension
- isSetup():Z
f:com.intellij.codeInsight.hint.ParameterInfoController
- com.intellij.codeInsight.hint.ParameterInfoControllerBase
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,java.lang.Object[],java.lang.Object,com.intellij.psi.PsiElement,com.intellij.lang.parameterInfo.ParameterInfoHandler,Z,Z):V
- isHintShown(Z):Z
- isPreservedOnHintHidden():Z
- setDescriptors(java.lang.Object[]):V
- setPreservedOnHintHidden(Z):V
- showHint(Z,Z):V
- updateComponent():V
a:com.intellij.codeInsight.hint.ParameterInfoControllerBase
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.Disposable
- psf:DELAY:I
- psf:WHITESPACE:java.lang.String
- pf:myAlarm:com.intellij.util.Alarm
- p:myDisposed:Z
- pf:myEditor:com.intellij.openapi.editor.Editor
- pf:myLbraceMarker:com.intellij.openapi.editor.RangeMarker
- pf:myProject:com.intellij.openapi.project.Project
- p:mySingleParameterInfo:Z
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,java.lang.Object[],java.lang.Object,com.intellij.psi.PsiElement,com.intellij.lang.parameterInfo.ParameterInfoHandler,Z):V
- s:areParameterTemplatesEnabledOnCompletion():Z
- pa:canBeDisposed():Z
- s:createParameterInfoController(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,java.lang.Object[],java.lang.Object,com.intellij.psi.PsiElement,com.intellij.lang.parameterInfo.ParameterInfoHandler,Z,Z):com.intellij.codeInsight.hint.ParameterInfoControllerBase
- dispose():V
- p:executeFindElementForUpdatingParameterInfo(com.intellij.lang.parameterInfo.UpdateParameterInfoContext,java.util.function.Consumer):V
- s:existsForEditor(com.intellij.openapi.editor.Editor):Z
- s:existsWithVisibleHintForEditor(com.intellij.openapi.editor.Editor,Z):Z
- s:findArgumentList(com.intellij.psi.PsiFile,I,I):com.intellij.psi.PsiElement
- s:findControllerAtOffset(com.intellij.openapi.editor.Editor,I):com.intellij.codeInsight.hint.ParameterInfoControllerBase
- p:getCurrentOffset():I
- getHighlighted():java.lang.Object
- getObjects():java.lang.Object[]
- ps:getParameterNavigationOffset(com.intellij.psi.PsiElement,java.lang.CharSequence):I
- p:getPrevOrNextParameterOffset(Z):I
- pa:hideHint():V
- a:isHintShown(Z):Z
- a:isPreservedOnHintHidden():Z
- pa:moveToParameterAtOffset(I):V
- pf:registerSelf():V
- p:rescheduleUpdate():V
- setDescriptors(java.lang.Object[]):V
- a:setPreservedOnHintHidden(Z):V
- p:setupListeners():V
- a:showHint(Z,Z):V
- p:syncUpdateOnCaretMove():V
- a:updateComponent():V
- p:updateWhenAllCommitted():V
- s:waitForDelayedActions(com.intellij.openapi.editor.Editor,J,java.util.concurrent.TimeUnit):V
f:com.intellij.codeInsight.hint.ParameterInfoControllerBase$Model
- current:I
- editor:com.intellij.openapi.editor.Editor
- highlightedSignature:I
- project:com.intellij.openapi.project.Project
- range:com.intellij.openapi.util.TextRange
- f:signatures:java.util.List
- <init>():V
f:com.intellij.codeInsight.hint.ParameterInfoControllerBase$RawSignatureItem
- com.intellij.codeInsight.hint.ParameterInfoControllerBase$SignatureItemModel
- f:htmlText:java.lang.String
- <init>(java.lang.String):V
f:com.intellij.codeInsight.hint.ParameterInfoControllerBase$SignatureItem
- com.intellij.codeInsight.hint.ParameterInfoControllerBase$SignatureItemModel
- f:deprecated:Z
- f:disabled:Z
- f:endOffsets:java.util.List
- f:startOffsets:java.util.List
- f:text:java.lang.String
- <init>(java.lang.String,Z,Z,java.util.List,java.util.List):V
com.intellij.codeInsight.hint.ParameterInfoControllerBase$SignatureItemModel
pc:com.intellij.codeInsight.hint.ParameterInfoControllerBase$UpdateParameterInfoContextBase
- com.intellij.lang.parameterInfo.UpdateParameterInfoContext
- pf:myFile:com.intellij.psi.PsiFile
- pf:myOffset:I
- <init>(com.intellij.codeInsight.hint.ParameterInfoControllerBase,I,com.intellij.psi.PsiFile):V
- applyUIChanges():V
- getCustomContext():com.intellij.openapi.util.UserDataHolderEx
- getEditor():com.intellij.openapi.editor.Editor
- getFile():com.intellij.psi.PsiFile
- getHighlightedParameter():java.lang.Object
- getObjectsToView():java.lang.Object[]
- getOffset():I
- getParameterListStart():I
- getParameterOwner():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- isInnermostContext():Z
- isPreservedOnHintHidden():Z
- isSingleParameterInfo():Z
- isUIComponentEnabled(I):Z
- removeHint():V
- setCurrentParameter(I):V
- setHighlightedParameter(java.lang.Object):V
- setParameterOwner(com.intellij.psi.PsiElement):V
- setPreservedOnHintHidden(Z):V
- setUIComponentEnabled(I,Z):V
a:com.intellij.codeInsight.hint.ParameterInfoControllerProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- f:create(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,java.lang.Object[],java.lang.Object,com.intellij.psi.PsiElement,com.intellij.lang.parameterInfo.ParameterInfoHandler,Z,Z):com.intellij.codeInsight.hint.ParameterInfoControllerBase
- pa:doCreate(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,java.lang.Object[],java.lang.Object,com.intellij.psi.PsiElement,com.intellij.lang.parameterInfo.ParameterInfoHandler,Z,Z):com.intellij.codeInsight.hint.ParameterInfoControllerBase
- s:rememberEditor(com.intellij.openapi.editor.Editor):V
- s:removeControllersFromAllEditors():V
com.intellij.codeInsight.hint.ParameterInfoListener
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:hintHidden(com.intellij.openapi.project.Project):V
- a:hintUpdated(com.intellij.codeInsight.hint.ParameterInfoControllerBase$Model):V
f:com.intellij.codeInsight.hint.ParameterInfoTaskRunnerUtil
- sf:DEFAULT_PROGRESS_POPUP_DELAY_MS:I
- <init>():V
- s:runTask(com.intellij.openapi.project.Project,com.intellij.openapi.application.NonBlockingReadAction,java.util.function.Consumer,java.lang.String,com.intellij.openapi.editor.Editor):V
- s:runTask(com.intellij.openapi.project.Project,com.intellij.openapi.application.NonBlockingReadAction,java.util.function.Consumer,java.lang.String,com.intellij.openapi.editor.Editor,Z):V
f:com.intellij.codeInsight.hint.PsiImplementationViewElement
- com.intellij.codeInsight.hint.ImplementationViewElement
- <init>(com.intellij.psi.PsiElement):V
- getContainerPresentation():java.lang.String
- getContainingFile():com.intellij.openapi.vfs.VirtualFile
- getContainingMemberOrSelf():com.intellij.codeInsight.hint.ImplementationViewElement
- getElementForShowUsages():com.intellij.psi.PsiElement
- getLocationIcon():javax.swing.Icon
- getLocationText():java.lang.String
- getName():java.lang.String
- getPresentableText():java.lang.String
- getProject():com.intellij.openapi.project.Project
- f:getPsiElement():com.intellij.psi.PsiElement
- getText():java.lang.String
- isNamed():Z
- navigate(Z):V
f:com.intellij.codeInsight.hint.PsiImplementationViewSession
- com.intellij.codeInsight.hint.ImplementationViewSession
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement[],java.lang.String,com.intellij.openapi.editor.Editor,com.intellij.openapi.vfs.VirtualFile,Z,Z):V
- s:create(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.project.Project,Z,Z):com.intellij.codeInsight.hint.PsiImplementationViewSession
- s:createImplementationsSearcher(Z):com.intellij.codeInsight.navigation.ImplementationSearcher
- dispose():V
- elementRequiresIncludeSelf():Z
- getEditor():com.intellij.openapi.editor.Editor
- s:getEditor(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.editor.Editor
- getElement():com.intellij.psi.PsiElement
- s:getElement(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getElementAndReference(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.openapi.util.Pair
- getFactory():com.intellij.codeInsight.hint.ImplementationViewSessionFactory
- getFile():com.intellij.openapi.vfs.VirtualFile
- getImplementationElements():java.util.List
- getProject():com.intellij.openapi.project.Project
- s:getSelfAndImplementations(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,com.intellij.codeInsight.navigation.ImplementationSearcher,Z):com.intellij.psi.PsiElement[]
- getText():java.lang.String
- needUpdateInBackground():Z
- searchImplementationsInBackground(com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):java.util.List
f:com.intellij.codeInsight.hint.ShowContainerInfoHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- <init>():V
- s:getProcessedHint(com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- startInWriteAction():Z
f:com.intellij.codeInsight.hint.ShowExpressionTypeHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- <init>(Z):V
- getExpressions(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):java.util.Map
- s:getExpressions(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.Document,java.util.Set):java.util.Map
- s:getHandlers(com.intellij.openapi.project.Project,com.intellij.lang.Language[]):java.util.Set
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- startInWriteAction():Z
c:com.intellij.codeInsight.hint.ShowParameterInfoContext
- com.intellij.lang.parameterInfo.CreateParameterInfoContext
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,I,I):V
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,I,I,Z):V
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,I,I,Z,Z):V
- getEditor():com.intellij.openapi.editor.Editor
- getFile():com.intellij.psi.PsiFile
- getHighlightedElement():com.intellij.psi.PsiElement
- getItemsToShow():java.lang.Object[]
- getOffset():I
- getParameterListStart():I
- getProject():com.intellij.openapi.project.Project
- isRequestFocus():Z
- setHighlightedElement(com.intellij.psi.PsiElement):V
- setItemsToShow(java.lang.Object[]):V
- setRequestFocus(Z):V
- showHint(com.intellij.psi.PsiElement,I,com.intellij.lang.parameterInfo.ParameterInfoHandler):V
f:com.intellij.codeInsight.hint.ShowParameterInfoHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- <init>():V
- <init>(Z):V
- s:getHandlers(com.intellij.openapi.project.Project,com.intellij.lang.Language[]):com.intellij.lang.parameterInfo.ParameterInfoHandler[]
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- s:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I,com.intellij.psi.PsiElement,Z):V
- startInWriteAction():Z
f:com.intellij.codeInsight.hint.actions.NextParameterAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- com.intellij.openapi.actionSystem.PerformWithDocumentsCommitted
- <init>():V
f:com.intellij.codeInsight.hint.actions.QuickPreviewAction
- com.intellij.codeInsight.hint.actions.ShowImplementationsAction
- <init>():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.codeInsight.hint.actions.ShowExpressionTypeAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.codeInsight.hint.actions.ShowImplementationsAction
- com.intellij.openapi.actionSystem.PopupAction
- com.intellij.openapi.project.DumbAwareAction
- sf:CODEASSISTS_QUICKDEFINITION_FEATURE:java.lang.String
- sf:CODEASSISTS_QUICKDEFINITION_LOOKUP_FEATURE:java.lang.String
- <init>():V
- p:couldPinPopup():Z
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getIndexNotReadyMessage():java.lang.String
- p:getPopupTitle(com.intellij.codeInsight.hint.ImplementationViewSession):java.lang.String
- p:getSessionFactories():java.util.List
- p:triggerFeatureUsed(com.intellij.openapi.project.Project):V
a:com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider
- com.intellij.codeInsight.hints.InlayHintsProvider
- <init>():V
- p:addInlayElementsAdapter(java.lang.Object,java.util.List,com.intellij.codeInsight.hints.InlayHintsSink,com.intellij.codeInsight.hints.presentation.PresentationFactory,I):V
- bs:addInlayElementsAdapter$default(com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider,java.lang.Object,java.util.List,com.intellij.codeInsight.hints.InlayHintsSink,com.intellij.codeInsight.hints.presentation.PresentationFactory,I,I,java.lang.Object):V
- pf:addInlayElementsToSink(java.lang.Object,java.util.List,com.intellij.codeInsight.hints.InlayHintsSink,com.intellij.codeInsight.hints.presentation.PresentationFactory,I):V
- bs:addInlayElementsToSink$default(com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider,java.lang.Object,java.util.List,com.intellij.codeInsight.hints.InlayHintsSink,com.intellij.codeInsight.hints.presentation.PresentationFactory,I,I,java.lang.Object):V
- f:createConfigurable(com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$Settings):com.intellij.codeInsight.hints.ImmediateConfigurable
- f:createSettings():com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$Settings
- getCollectorFor(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$Settings,com.intellij.codeInsight.hints.InlayHintsSink):com.intellij.codeInsight.hints.InlayHintsCollector
- pa:getDotQualifiedClass():java.lang.Class
- pa:getInlayPresentation(java.lang.Object,com.intellij.psi.PsiElement,com.intellij.codeInsight.hints.presentation.PresentationFactory,com.intellij.openapi.project.Project,java.lang.Object):com.intellij.codeInsight.hints.presentation.InlayPresentation
- getName():java.lang.String
- pa:getParentDotQualifiedExpression(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- pa:getReceiver(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- pa:getType(com.intellij.psi.PsiElement,java.lang.Object):java.lang.Object
- pa:getTypeComputationContext(com.intellij.psi.PsiElement):java.lang.Object
- pf:processInlayElements(com.intellij.psi.PsiElement,com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$Settings,com.intellij.codeInsight.hints.InlayHintsSink,com.intellij.codeInsight.hints.presentation.PresentationFactory,I):V
- bs:processInlayElements$default(com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider,com.intellij.psi.PsiElement,com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$Settings,com.intellij.codeInsight.hints.InlayHintsSink,com.intellij.codeInsight.hints.presentation.PresentationFactory,I,I,java.lang.Object):V
- pa:skipParenthesesAndPostfixOperatorsDown(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
pf:com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$ExpressionWithType
- <init>(com.intellij.psi.PsiElement,java.lang.Object):V
- f:component1():com.intellij.psi.PsiElement
- f:component2():java.lang.Object
- f:copy(com.intellij.psi.PsiElement,java.lang.Object):com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$ExpressionWithType
- bs:copy$default(com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$ExpressionWithType,com.intellij.psi.PsiElement,java.lang.Object,I,java.lang.Object):com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$ExpressionWithType
- equals(java.lang.Object):Z
- f:getExpression():com.intellij.psi.PsiElement
- f:getType():java.lang.Object
- hashCode():I
f:com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$Settings
- <init>():V
- <init>(I):V
- f:component1():I
- f:copy(I):com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$Settings
- bs:copy$default(com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$Settings,I,I,java.lang.Object):com.intellij.codeInsight.hints.chain.AbstractCallChainHintsProvider$Settings
- equals(java.lang.Object):Z
- f:getUniqueTypeCount():I
- hashCode():I
- f:setUniqueTypeCount(I):V
a:com.intellij.codeInsight.hints.chain.AbstractDeclarativeCallChainProvider
- com.intellij.codeInsight.hints.declarative.InlayHintsProvider
- sf:Companion:com.intellij.codeInsight.hints.chain.AbstractDeclarativeCallChainProvider$Companion
- <init>():V
- pa:buildTree(java.lang.Object,com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,java.lang.Object,com.intellij.codeInsight.hints.declarative.PresentationTreeBuilder):V
- createCollector(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.codeInsight.hints.declarative.InlayHintsCollector
- pa:getDotQualifiedClass():java.lang.Class
- p:getHintFormat():com.intellij.codeInsight.hints.declarative.HintFormat
- pa:getParentDotQualifiedExpression(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- pa:getReceiver(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- pa:getType(com.intellij.psi.PsiElement,java.lang.Object):java.lang.Object
- pa:getTypeComputationContext(com.intellij.psi.PsiElement):java.lang.Object
- pf:getUniqueTypeCount():I
- p:isAvailable(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):Z
- p:isChainUnacceptable(java.util.List):Z
- p:presentableType(java.lang.Object):java.lang.String
- pa:skipParenthesesAndPostfixOperatorsDown(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
f:com.intellij.codeInsight.hints.chain.AbstractDeclarativeCallChainProvider$Collector
- com.intellij.codeInsight.hints.declarative.SharedBypassCollector
- <init>(com.intellij.codeInsight.hints.chain.AbstractDeclarativeCallChainProvider,com.intellij.psi.PsiFile):V
- collectFromElement(com.intellij.psi.PsiElement,com.intellij.codeInsight.hints.declarative.InlayTreeSink):V
f:com.intellij.codeInsight.hints.chain.AbstractDeclarativeCallChainProvider$Companion
pf:com.intellij.codeInsight.hints.chain.AbstractDeclarativeCallChainProvider$ExpressionWithType
- <init>(com.intellij.psi.PsiElement,java.lang.Object):V
- f:component1():com.intellij.psi.PsiElement
- f:component2():java.lang.Object
- f:copy(com.intellij.psi.PsiElement,java.lang.Object):com.intellij.codeInsight.hints.chain.AbstractDeclarativeCallChainProvider$ExpressionWithType
- bs:copy$default(com.intellij.codeInsight.hints.chain.AbstractDeclarativeCallChainProvider$ExpressionWithType,com.intellij.psi.PsiElement,java.lang.Object,I,java.lang.Object):com.intellij.codeInsight.hints.chain.AbstractDeclarativeCallChainProvider$ExpressionWithType
- equals(java.lang.Object):Z
- f:getExpression():com.intellij.psi.PsiElement
- f:getType():java.lang.Object
- hashCode():I
a:com.intellij.codeInsight.hints.codeVision.CodeVisionProviderBase
- com.intellij.codeInsight.hints.codeVision.DaemonBoundCodeVisionProvider
- <init>():V
- a:acceptsElement(com.intellij.psi.PsiElement):Z
- a:acceptsFile(com.intellij.psi.PsiFile):Z
- computeForEditor(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- getDefaultAnchor():com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- a:getHint(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):java.lang.String
- getPlaceholderCollector(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.codeVision.CodeVisionPlaceholderCollector
- getVisionInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):com.intellij.codeInsight.hints.codeVision.CodeVisionProviderBase$CodeVisionInfo
- a:handleClick(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,java.awt.event.MouseEvent):V
- logClickToFUS(com.intellij.psi.PsiElement,java.lang.String):V
f:com.intellij.codeInsight.hints.codeVision.CodeVisionProviderBase$CodeVisionInfo
- <init>(java.lang.String,java.lang.Integer,Z):V
- b:<init>(java.lang.String,java.lang.Integer,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getCount():java.lang.Integer
- f:getCountIsExact():Z
- f:getText():java.lang.String
com.intellij.codeInsight.hints.codeVision.DaemonBoundCodeVisionProvider
- sf:Companion:com.intellij.codeInsight.hints.codeVision.DaemonBoundCodeVisionProvider$Companion
- sf:EP_NAME:java.lang.String
- computeForEditor(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- a:getDefaultAnchor():com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- getGroupId():java.lang.String
- a:getId():java.lang.String
- a:getName():java.lang.String
- getPlaceholderCollector(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.codeVision.CodeVisionPlaceholderCollector
- a:getRelativeOrderings():java.util.List
- handleClick(com.intellij.openapi.editor.Editor,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.codeVision.CodeVisionEntry):V
- preparePreview(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
f:com.intellij.codeInsight.hints.codeVision.DaemonBoundCodeVisionProvider$Companion
- sf:EP_NAME:java.lang.String
- f:getExtensionPoint():com.intellij.openapi.extensions.ExtensionPointName
a:com.intellij.codeInsight.hints.codeVision.InheritorsCodeVisionProvider
- com.intellij.codeInsight.hints.codeVision.CodeVisionProviderBase
- <init>():V
- getGroupId():java.lang.String
- getName():java.lang.String
f:com.intellij.codeInsight.hints.codeVision.ModificationStampUtil
- sf:INSTANCE:com.intellij.codeInsight.hints.codeVision.ModificationStampUtil
- f:clearModificationStamp(com.intellij.openapi.editor.Editor):V
- f:getModificationStamp(com.intellij.openapi.editor.Editor):java.lang.Long
- f:putCurrentModificationStamp(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
a:com.intellij.codeInsight.hints.codeVision.ReferencesCodeVisionProvider
- com.intellij.codeInsight.hints.codeVision.CodeVisionProviderBase
- <init>():V
- getGroupId():java.lang.String
- getName():java.lang.String
- handleClick(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,java.awt.event.MouseEvent):V
a:com.intellij.codeInsight.hints.codeVision.RenameAwareReferencesCodeVisionProvider
- com.intellij.codeInsight.codeVision.CodeVisionProvider
- <init>():V
- a:acceptsElement(com.intellij.psi.PsiElement):Z
- a:acceptsFile(com.intellij.psi.PsiFile):Z
- computeCodeVision(com.intellij.openapi.editor.Editor,java.lang.Void):com.intellij.codeInsight.codeVision.CodeVisionState
- getDefaultAnchor():com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- getGroupId():java.lang.String
- a:getHint(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):java.lang.String
- getName():java.lang.String
- handleClick(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,java.awt.event.MouseEvent):V
- logClickToFUS(com.intellij.psi.PsiElement,java.lang.String):V
- precomputeOnUiThread(com.intellij.openapi.editor.Editor):java.lang.Void
f:com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayHintsPass
- com.intellij.codeHighlighting.EditorBoundHighlightingPass
- com.intellij.openapi.project.DumbAware
- sf:Companion:com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayHintsPass$Companion
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,java.util.List,Z,Z):V
- b:<init>(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,java.util.List,Z,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- doApplyInformationToEditor():V
- doCollectInformation(com.intellij.openapi.progress.ProgressIndicator):V
f:com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayHintsPass$Companion
- f:getPassSourceId():java.lang.String
f:com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayHintsPassFactory
- com.intellij.codeHighlighting.TextEditorHighlightingPassFactory
- com.intellij.codeHighlighting.TextEditorHighlightingPassFactoryRegistrar
- com.intellij.openapi.project.DumbAware
- sf:Companion:com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayHintsPassFactory$Companion
- <init>():V
- createHighlightingPass(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayHintsPass
- registerHighlightingPassFactory(com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar,com.intellij.openapi.project.Project):V
f:com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayHintsPassFactory$Companion
- f:createPassForPreview(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.declarative.InlayHintsProvider,java.lang.String,java.util.Map,Z):com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayHintsPass
- f:getSuitableToFileProviders(com.intellij.psi.PsiFile):java.util.List
- f:scheduleRecompute(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):V
- f:updateModificationStamp(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
f:com.intellij.codeInsight.hints.declarative.impl.util.TinyTree
- sf:Companion:com.intellij.codeInsight.hints.declarative.impl.util.TinyTree$Companion
- <init>(B,java.lang.Object):V
- f:add(B,B,java.lang.Object):B
- f:getBytePayload(B):B
- f:getDataPayload(B):java.lang.Object
- f:getSize():I
- f:isSameAs(com.intellij.codeInsight.hints.declarative.impl.util.TinyTree,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2):Z
- bs:isSameAs$default(com.intellij.codeInsight.hints.declarative.impl.util.TinyTree,com.intellij.codeInsight.hints.declarative.impl.util.TinyTree,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,I,java.lang.Object):Z
- f:processChildren(B,kotlin.jvm.functions.Function1):V
- f:reverseChildren():V
- f:setBytePayload(B,B):V
- f:setDataPayload(java.lang.Object,B):V
- f:syncProcessChildren(B,B,com.intellij.codeInsight.hints.declarative.impl.util.TinyTree,kotlin.jvm.functions.Function2):V
f:com.intellij.codeInsight.hints.declarative.impl.util.TinyTree$Companion
a:com.intellij.codeInsight.hints.declarative.impl.util.TinyTree$Externalizer
- com.intellij.util.io.DataExternalizer
- sf:Companion:com.intellij.codeInsight.hints.declarative.impl.util.TinyTree$Externalizer$Companion
- <init>():V
- read(java.io.DataInput):com.intellij.codeInsight.hints.declarative.impl.util.TinyTree
- a:readDataPayload(java.io.DataInput):java.lang.Object
- save(java.io.DataOutput,com.intellij.codeInsight.hints.declarative.impl.util.TinyTree):V
- serdeVersion():I
- a:writeDataPayload(java.io.DataOutput,java.lang.Object):V
f:com.intellij.codeInsight.hints.declarative.impl.util.TinyTree$Externalizer$Companion
f:com.intellij.codeInsight.hints.declarative.impl.util.TinyTree$TooManyElementsException
- java.lang.Exception
- <init>():V
f:com.intellij.codeInsight.hints.presentation.AttributesTransformerPresentation
- com.intellij.codeInsight.hints.presentation.StaticDelegatePresentation
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function1):V
- f:getTransformer():kotlin.jvm.functions.Function1
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
c:com.intellij.codeInsight.hints.presentation.BiStatePresentation
- com.intellij.codeInsight.hints.presentation.StatefulPresentation
- sf:Companion:com.intellij.codeInsight.hints.presentation.BiStatePresentation$Companion
- <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,Z):V
- f:flipState():V
- getPresentation():com.intellij.codeInsight.hints.presentation.InlayPresentation
- sf:getSTATE_MARK():com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark
- f:setFirst():V
- f:setSecond():V
f:com.intellij.codeInsight.hints.presentation.BiStatePresentation$Companion
- f:getSTATE_MARK():com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark
f:com.intellij.codeInsight.hints.presentation.BiStatePresentation$State
- <init>(Z):V
- f:component1():Z
- f:copy(Z):com.intellij.codeInsight.hints.presentation.BiStatePresentation$State
- bs:copy$default(com.intellij.codeInsight.hints.presentation.BiStatePresentation$State,Z,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.BiStatePresentation$State
- equals(java.lang.Object):Z
- f:getCurrentFirst():Z
- hashCode():I
c:com.intellij.codeInsight.hints.presentation.ChangeOnHoverPresentation
- com.intellij.codeInsight.hints.presentation.StatefulPresentation
- sf:Companion:com.intellij.codeInsight.hints.presentation.ChangeOnHoverPresentation$Companion
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):V
- b:<init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- getPresentation():com.intellij.codeInsight.hints.presentation.InlayPresentation
- sf:getSTATE_MARK():com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
f:com.intellij.codeInsight.hints.presentation.ChangeOnHoverPresentation$Companion
- f:getSTATE_MARK():com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark
f:com.intellij.codeInsight.hints.presentation.ChangeOnHoverPresentation$State
- <init>(Z):V
- f:component1():Z
- f:copy(Z):com.intellij.codeInsight.hints.presentation.ChangeOnHoverPresentation$State
- bs:copy$default(com.intellij.codeInsight.hints.presentation.ChangeOnHoverPresentation$State,Z,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.ChangeOnHoverPresentation$State
- equals(java.lang.Object):Z
- hashCode():I
- f:isInside():Z
c:com.intellij.codeInsight.hints.presentation.DynamicDelegatePresentation
- com.intellij.codeInsight.hints.presentation.BasePresentation
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation):V
- f:getDelegate():com.intellij.codeInsight.hints.presentation.InlayPresentation
- getHeight():I
- getWidth():I
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
- f:setDelegate(com.intellij.codeInsight.hints.presentation.InlayPresentation):V
- updateState(com.intellij.codeInsight.hints.presentation.InlayPresentation):Z
f:com.intellij.codeInsight.hints.presentation.IconPresentation
- com.intellij.codeInsight.hints.presentation.BasePresentation
- <init>(javax.swing.Icon,java.awt.Component):V
- getHeight():I
- f:getIcon():javax.swing.Icon
- getWidth():I
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
- f:setIcon(javax.swing.Icon):V
f:com.intellij.codeInsight.hints.presentation.InlayTextMetrics
- sf:Companion:com.intellij.codeInsight.hints.presentation.InlayTextMetrics$Companion
- <init>(com.intellij.openapi.editor.Editor,I,I,java.awt.FontMetrics,I,F):V
- f:getAscent():I
- f:getDescent():I
- f:getFont():java.awt.Font
- f:getFontBaseline():I
- f:getFontHeight():I
- f:getFontType():I
- f:getLineHeight():I
- f:getStringWidth(java.lang.String):I
- f:isActual(F,java.lang.String):Z
- f:offsetFromTop():I
f:com.intellij.codeInsight.hints.presentation.InlayTextMetrics$Companion
f:com.intellij.codeInsight.hints.presentation.InsetPresentation
- com.intellij.codeInsight.hints.presentation.StaticDelegatePresentation
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,I,I,I,I):V
- b:<init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,I,I,I,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getDown():I
- getHeight():I
- f:getLeft():I
- f:getRight():I
- f:getTop():I
- getWidth():I
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
f:com.intellij.codeInsight.hints.presentation.MenuOnClickPresentation
- com.intellij.codeInsight.hints.presentation.StaticDelegatePresentation
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function0):V
- f:getActionsSupplier():kotlin.jvm.functions.Function0
- f:getProject():com.intellij.openapi.project.Project
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
e:com.intellij.codeInsight.hints.presentation.MouseButton
- java.lang.Enum
- sf:Companion:com.intellij.codeInsight.hints.presentation.MouseButton$Companion
- sf:Left:com.intellij.codeInsight.hints.presentation.MouseButton
- sf:Middle:com.intellij.codeInsight.hints.presentation.MouseButton
- sf:Right:com.intellij.codeInsight.hints.presentation.MouseButton
- sf:fromEvent(java.awt.event.MouseEvent):com.intellij.codeInsight.hints.presentation.MouseButton
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeInsight.hints.presentation.MouseButton
- s:values():com.intellij.codeInsight.hints.presentation.MouseButton[]
f:com.intellij.codeInsight.hints.presentation.MouseButton$Companion
- f:fromEvent(java.awt.event.MouseEvent):com.intellij.codeInsight.hints.presentation.MouseButton
f:com.intellij.codeInsight.hints.presentation.MouseButtonKt
- sf:getMouseButton(java.awt.event.MouseEvent):com.intellij.codeInsight.hints.presentation.MouseButton
f:com.intellij.codeInsight.hints.presentation.OnClickPresentation
- com.intellij.codeInsight.hints.presentation.StaticDelegatePresentation
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$ClickListener):V
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function2):V
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
f:com.intellij.codeInsight.hints.presentation.OnHoverPresentation
- com.intellij.codeInsight.hints.presentation.StaticDelegatePresentation
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$HoverListener):V
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
f:com.intellij.codeInsight.hints.presentation.PresentationFactory
- com.intellij.codeInsight.hints.InlayPresentationFactory
- sf:Companion:com.intellij.codeInsight.hints.presentation.PresentationFactory$Companion
- <init>(com.intellij.openapi.editor.Editor):V
- f:button(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$ClickListener,com.intellij.codeInsight.hints.InlayPresentationFactory$HoverListener,Z):kotlin.Pair
- bs:button$default(com.intellij.codeInsight.hints.presentation.PresentationFactory,com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$ClickListener,com.intellij.codeInsight.hints.InlayPresentationFactory$HoverListener,Z,I,java.lang.Object):kotlin.Pair
- f:changeOnHover(com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):com.intellij.codeInsight.hints.presentation.InlayPresentation
- bs:changeOnHover$default(com.intellij.codeInsight.hints.presentation.PresentationFactory,com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:collapsible(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function0,com.intellij.codeInsight.hints.presentation.InlayPresentation,Z):com.intellij.codeInsight.hints.presentation.InlayPresentation
- bs:collapsible$default(com.intellij.codeInsight.hints.presentation.PresentationFactory,com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function0,com.intellij.codeInsight.hints.presentation.InlayPresentation,Z,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.InlayPresentation
- container(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$Padding,com.intellij.codeInsight.hints.InlayPresentationFactory$RoundedCorners,java.awt.Color,F):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:folding(com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function0):com.intellij.codeInsight.hints.presentation.InlayPresentation
- icon(javax.swing.Icon):com.intellij.codeInsight.hints.presentation.IconPresentation
- f:inset(com.intellij.codeInsight.hints.presentation.InlayPresentation,I,I,I,I):com.intellij.codeInsight.hints.presentation.InsetPresentation
- bs:inset$default(com.intellij.codeInsight.hints.presentation.PresentationFactory,com.intellij.codeInsight.hints.presentation.InlayPresentation,I,I,I,I,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.InsetPresentation
- f:join(java.util.List,kotlin.jvm.functions.Function0):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:matching(java.util.List):java.util.List
- f:matchingBraces(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.presentation.InlayPresentation):kotlin.Pair
- mouseHandling(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$ClickListener,com.intellij.codeInsight.hints.InlayPresentationFactory$HoverListener):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:onClick(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.presentation.MouseButton,kotlin.jvm.functions.Function2):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:onClick(com.intellij.codeInsight.hints.presentation.InlayPresentation,java.util.EnumSet,kotlin.jvm.functions.Function2):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:onHover(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$HoverListener):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:psiSingleReference(com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function0):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:psiSingleReference(com.intellij.codeInsight.hints.presentation.InlayPresentation,Z,kotlin.jvm.functions.Function0):com.intellij.codeInsight.hints.presentation.InlayPresentation
- bs:psiSingleReference$default(com.intellij.codeInsight.hints.presentation.PresentationFactory,com.intellij.codeInsight.hints.presentation.InlayPresentation,Z,kotlin.jvm.functions.Function0,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:reference(com.intellij.codeInsight.hints.presentation.InlayPresentation,kotlin.jvm.functions.Function0):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:referenceOnHover(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$ClickListener):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:roundWithBackground(com.intellij.codeInsight.hints.presentation.InlayPresentation):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:roundWithBackgroundAndSmallInset(com.intellij.codeInsight.hints.presentation.InlayPresentation):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:seq(com.intellij.codeInsight.hints.presentation.InlayPresentation[]):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:showTooltip(java.awt.event.MouseEvent,java.lang.String):com.intellij.ui.LightweightHint
- smallScaledIcon(javax.swing.Icon):com.intellij.codeInsight.hints.presentation.InlayPresentation
- smallText(java.lang.String):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:smallTextWithoutBackground(java.lang.String):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:synchronousOnHover(java.util.List,kotlin.jvm.functions.Function1):java.util.List
- text(java.lang.String):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:textSpacePlaceholder(I,Z):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:withCursorOnHover(com.intellij.codeInsight.hints.presentation.InlayPresentation,java.awt.Cursor):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:withCursorOnHoverWhenControlDown(com.intellij.codeInsight.hints.presentation.InlayPresentation,java.awt.Cursor):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:withReferenceAttributes(com.intellij.codeInsight.hints.presentation.InlayPresentation):com.intellij.codeInsight.hints.presentation.WithAttributesPresentation
- f:withTooltip(java.lang.String,com.intellij.codeInsight.hints.presentation.InlayPresentation):com.intellij.codeInsight.hints.presentation.InlayPresentation
f:com.intellij.codeInsight.hints.presentation.PresentationFactory$Companion
- f:getCustomToStringProvider():kotlin.jvm.functions.Function1
- f:setCustomToStringProvider(kotlin.jvm.functions.Function1):V
f:com.intellij.codeInsight.hints.presentation.PresentationRenderer
- com.intellij.codeInsight.hints.presentation.InputHandler
- com.intellij.openapi.editor.EditorCustomElementRenderer
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation):V
- calcWidthInPixels(com.intellij.openapi.editor.Inlay):I
- getContextMenuGroupId(com.intellij.openapi.editor.Inlay):java.lang.String
- f:getPresentation():com.intellij.codeInsight.hints.presentation.InlayPresentation
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
- mousePressed(java.awt.event.MouseEvent,java.awt.Point):V
- mouseReleased(java.awt.event.MouseEvent,java.awt.Point):V
- paint(com.intellij.openapi.editor.Inlay,java.awt.Graphics,java.awt.Rectangle,com.intellij.openapi.editor.markup.TextAttributes):V
- translatePoint(java.awt.Point):java.awt.Point
f:com.intellij.codeInsight.hints.presentation.RoundWithBackgroundPresentation
- com.intellij.codeInsight.hints.presentation.StaticDelegatePresentation
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,I,I,java.awt.Color,F):V
- b:<init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,I,I,java.awt.Color,F,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getArcHeight():I
- f:getArcWidth():I
- f:getBackgroundAlpha():F
- f:getColor():java.awt.Color
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
f:com.intellij.codeInsight.hints.presentation.ScaleAwarePresentationFactory
- com.intellij.codeInsight.hints.InlayPresentationFactory
- <init>(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.presentation.PresentationFactory):V
- container(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$Padding,com.intellij.codeInsight.hints.InlayPresentationFactory$RoundedCorners,java.awt.Color,F):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:getEditor():com.intellij.openapi.editor.Editor
- icon(javax.swing.Icon):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:icon(javax.swing.Icon,java.lang.String,I):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:inset(com.intellij.codeInsight.hints.presentation.InlayPresentation,I,I,I,I):com.intellij.codeInsight.hints.presentation.InlayPresentation
- bs:inset$default(com.intellij.codeInsight.hints.presentation.ScaleAwarePresentationFactory,com.intellij.codeInsight.hints.presentation.InlayPresentation,I,I,I,I,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:lineCentered(com.intellij.codeInsight.hints.presentation.InlayPresentation):com.intellij.codeInsight.hints.presentation.InlayPresentation
- mouseHandling(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$ClickListener,com.intellij.codeInsight.hints.InlayPresentationFactory$HoverListener):com.intellij.codeInsight.hints.presentation.InlayPresentation
- f:seq(com.intellij.codeInsight.hints.presentation.InlayPresentation[]):com.intellij.codeInsight.hints.presentation.InlayPresentation
- smallScaledIcon(javax.swing.Icon):com.intellij.codeInsight.hints.presentation.InlayPresentation
- smallText(java.lang.String):com.intellij.codeInsight.hints.presentation.InlayPresentation
- text(java.lang.String):com.intellij.codeInsight.hints.presentation.InlayPresentation
f:com.intellij.codeInsight.hints.presentation.ScaleAwarePresentationFactoryKt
- sf:scaleByFont(I,F):I
f:com.intellij.codeInsight.hints.presentation.SequencePresentation
- com.intellij.codeInsight.hints.presentation.BasePresentation
- <init>(java.util.List):V
- getHeight():I
- f:getPresentations():java.util.List
- getWidth():I
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
- updateState(com.intellij.codeInsight.hints.presentation.InlayPresentation):Z
f:com.intellij.codeInsight.hints.presentation.SpacePresentation
- com.intellij.codeInsight.hints.presentation.BasePresentation
- <init>(I,I):V
- f:component1():I
- f:component2():I
- f:copy(I,I):com.intellij.codeInsight.hints.presentation.SpacePresentation
- bs:copy$default(com.intellij.codeInsight.hints.presentation.SpacePresentation,I,I,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.SpacePresentation
- equals(java.lang.Object):Z
- getHeight():I
- getWidth():I
- hashCode():I
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
- setHeight(I):V
- setWidth(I):V
- updateState(com.intellij.codeInsight.hints.presentation.InlayPresentation):Z
a:com.intellij.codeInsight.hints.presentation.StatefulPresentation
- com.intellij.codeInsight.hints.presentation.BasePresentation
- <init>(java.lang.Object,com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark):V
- f:getCurrentPresentation():com.intellij.codeInsight.hints.presentation.InlayPresentation
- getHeight():I
- a:getPresentation():com.intellij.codeInsight.hints.presentation.InlayPresentation
- getState():java.lang.Object
- f:getStateMark():com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark
- getWidth():I
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
- mousePressed(java.awt.event.MouseEvent,java.awt.Point):V
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
- setState(java.lang.Object):V
- updateState(com.intellij.codeInsight.hints.presentation.InlayPresentation):Z
f:com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark
- <init>(java.lang.String):V
- f:cast(java.lang.Object,com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark):java.lang.Object
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark
- bs:copy$default(com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark,java.lang.String,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.StatefulPresentation$StateMark
- equals(java.lang.Object):Z
- f:getId():java.lang.String
- hashCode():I
a:com.intellij.codeInsight.hints.presentation.StaticDelegatePresentation
- com.intellij.codeInsight.hints.presentation.InlayPresentation
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation):V
- addListener(com.intellij.codeInsight.hints.presentation.PresentationListener):V
- fireContentChanged(java.awt.Rectangle):V
- fireSizeChanged(java.awt.Dimension,java.awt.Dimension):V
- getHeight():I
- f:getPresentation():com.intellij.codeInsight.hints.presentation.InlayPresentation
- getWidth():I
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
- mousePressed(java.awt.event.MouseEvent,java.awt.Point):V
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
- removeListener(com.intellij.codeInsight.hints.presentation.PresentationListener):V
- updateState(com.intellij.codeInsight.hints.presentation.InlayPresentation):Z
f:com.intellij.codeInsight.hints.presentation.VerticalListInlayPresentation
- com.intellij.codeInsight.hints.presentation.BasePresentation
- <init>(java.util.List):V
- f:calcDimensions():V
- getHeight():I
- f:getPresentations():java.util.List
- getWidth():I
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
f:com.intellij.codeInsight.hints.presentation.WithAttributesPresentation
- com.intellij.codeInsight.hints.presentation.StaticDelegatePresentation
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.presentation.WithAttributesPresentation$AttributesFlags):V
- b:<init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.presentation.WithAttributesPresentation$AttributesFlags,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getFlags():com.intellij.codeInsight.hints.presentation.WithAttributesPresentation$AttributesFlags
- f:getTextAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
f:com.intellij.codeInsight.hints.presentation.WithAttributesPresentation$AttributesFlags
- <init>():V
- f:getSkipBackground():Z
- f:getSkipEffects():Z
- f:isDefault():Z
- f:setDefault(Z):V
- f:setSkipBackground(Z):V
- f:setSkipEffects(Z):V
- f:withIsDefault(Z):com.intellij.codeInsight.hints.presentation.WithAttributesPresentation$AttributesFlags
- f:withSkipBackground(Z):com.intellij.codeInsight.hints.presentation.WithAttributesPresentation$AttributesFlags
- f:withSkipEffects(Z):com.intellij.codeInsight.hints.presentation.WithAttributesPresentation$AttributesFlags
f:com.intellij.codeInsight.hints.presentation.WithCursorOnHoverPresentation
- com.intellij.codeInsight.hints.presentation.StaticDelegatePresentation
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,java.awt.Cursor,com.intellij.openapi.editor.Editor):V
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation,java.awt.Cursor,com.intellij.openapi.editor.Editor,kotlin.jvm.functions.Function1):V
- f:getCursor():java.awt.Cursor
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
f:com.intellij.codeInsight.hints.settings.InlayHintsConfigurable
- com.intellij.openapi.options.Configurable
- com.intellij.openapi.options.Configurable$Composite
- com.intellij.openapi.options.Configurable$WithEpDependencies
- sf:Companion:com.intellij.codeInsight.hints.settings.InlayHintsConfigurable$Companion
- <init>(com.intellij.openapi.project.Project):V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- getConfigurables():com.intellij.openapi.options.Configurable[]
- getDependencies():java.util.Collection
- getDisplayName():java.lang.String
- isModified():Z
- reset():V
- sf:showSettingsDialogForLanguage(com.intellij.openapi.project.Project,com.intellij.lang.Language):V
- sf:showSettingsDialogForLanguage(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.util.function.Predicate):V
f:com.intellij.codeInsight.hints.settings.InlayHintsConfigurable$Companion
- f:showSettingsDialogForLanguage(com.intellij.openapi.project.Project,com.intellij.lang.Language):V
- f:showSettingsDialogForLanguage(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.util.function.Predicate):V
f:com.intellij.codeInsight.hints.settings.InlaySettingsConfigurable
- com.intellij.openapi.options.Configurable
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.Configurable$VariableProjectAppLevel
- com.intellij.openapi.options.SearchableConfigurable
- <init>(com.intellij.openapi.project.Project):V
- apply():V
- createComponent():javax.swing.JComponent
- enableSearch(java.lang.String):java.lang.Runnable
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- f:getProject():com.intellij.openapi.project.Project
- isModified():Z
- isProjectLevel():Z
- reset():V
- f:selectModel(com.intellij.lang.Language,java.util.function.Predicate):V
f:com.intellij.codeInsight.hints.settings.InlaySettingsConfigurableKt
- sf:INLAY_ID:java.lang.String
- sf:showInlaySettings(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.util.function.Predicate):Z
f:com.intellij.codeInsight.hints.settings.InlaySettingsConfigurableProvider
- com.intellij.openapi.options.ConfigurableProvider
- <init>(com.intellij.openapi.project.Project):V
- createConfigurable():com.intellij.openapi.options.Configurable
- f:getProject():com.intellij.openapi.project.Project
f:com.intellij.codeInsight.hints.settings.InlaySettingsPanel
- javax.swing.JPanel
- sf:Companion:com.intellij.codeInsight.hints.settings.InlaySettingsPanel$Companion
- sf:PREVIEW_KEY:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project):V
- f:apply():V
- f:enableSearch(java.lang.String):java.lang.Runnable
- f:getProject():com.intellij.openapi.project.Project
- f:getTree():com.intellij.ui.CheckboxTree
- f:isModified():Z
- f:reset():V
- f:selectModel(com.intellij.lang.Language,java.util.function.Predicate):V
f:com.intellij.codeInsight.hints.settings.InlaySettingsPanel$Companion
- f:getFileTypeForPreview(com.intellij.codeInsight.hints.settings.InlayProviderSettingsModel):com.intellij.openapi.fileTypes.LanguageFileType
f:com.intellij.codeInsight.hints.settings.language.SingleLanguageInlayHintsSettingsPanelKt
- sf:createEditor(com.intellij.lang.Language,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):com.intellij.ui.EditorTextField
- sf:isInlaySettingsEditor(com.intellij.openapi.editor.Editor):Z
com.intellij.codeInsight.intention.impl.AbstractIntentionPopup
- com.intellij.openapi.Disposable
- a:close():V
- a:isVisible():Z
- a:show(com.intellij.codeInsight.intention.impl.IntentionHintComponent,com.intellij.ui.awt.RelativePoint,java.util.function.Consumer,com.intellij.codeInsight.intention.IntentionSource):V
- bs:show$default(com.intellij.codeInsight.intention.impl.AbstractIntentionPopup,com.intellij.codeInsight.intention.impl.IntentionHintComponent,com.intellij.ui.awt.RelativePoint,java.util.function.Consumer,com.intellij.codeInsight.intention.IntentionSource,I,java.lang.Object):V
f:com.intellij.codeInsight.intention.impl.CachedIntentions
- com.intellij.codeInsight.intention.impl.IntentionContainer
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):V
- addActions(com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo):Z
- s:create(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo):com.intellij.codeInsight.intention.impl.CachedIntentions
- s:createAndUpdateActions(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo):com.intellij.codeInsight.intention.impl.CachedIntentions
- getAllActions():java.util.List
- getEditor():com.intellij.openapi.editor.Editor
- getErrorFixes():java.util.Set
- getFile():com.intellij.psi.PsiFile
- getGroup(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):com.intellij.codeInsight.intention.impl.IntentionGroup
- getGutters():java.util.Set
- getHighlightInfoType():com.intellij.codeInsight.daemon.impl.HighlightInfoType
- getIcon(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):javax.swing.Icon
- getInspectionFixes():java.util.Set
- getIntentions():java.util.Set
- getNotifications():java.util.Set
- getOffset():I
- getProject():com.intellij.openapi.project.Project
- getTitle():java.lang.String
- showBulb():Z
- wrapAndUpdateActions(com.intellij.codeInsight.daemon.impl.ShowIntentionsPass$IntentionsInfo,Z):Z
- wrapAndUpdateGutters():V
f:com.intellij.codeInsight.intention.impl.DefaultIntentionsOrderProvider
- com.intellij.codeInsight.intention.impl.IntentionsOrderProvider
- <init>():V
- s:getPriorityWeight(com.intellij.codeInsight.intention.PriorityAction$Priority):I
- s:getPriorityWeight(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):I
- getSortedIntentions(com.intellij.codeInsight.intention.impl.CachedIntentions,java.util.List):java.util.List
- s:getWeight(com.intellij.codeInsight.intention.impl.CachedIntentions,com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):I
f:com.intellij.codeInsight.intention.impl.FileLevelIntentionComponent
- com.intellij.ui.EditorNotificationPanel
- <init>(java.lang.String,com.intellij.lang.annotation.HighlightSeverity,com.intellij.codeInsight.daemon.GutterMark,java.util.List,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.String):V
f:com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching
- com.intellij.codeInsight.intention.IntentionActionDelegate
- com.intellij.openapi.actionSystem.ShortcutProvider
- java.lang.Comparable
- <init>(com.intellij.codeInsight.intention.IntentionAction):V
- compareTo(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):I
- equals(java.lang.Object):Z
- getAction():com.intellij.codeInsight.intention.IntentionAction
- getDelegate():com.intellij.codeInsight.intention.IntentionAction
- getFixOffset():I
- getFixRange():com.intellij.openapi.util.TextRange
- getIcon():javax.swing.Icon
- getOptionActions():java.util.List
- getShortcut():com.intellij.openapi.actionSystem.ShortcutSet
- s:getShortcutSet(com.intellij.codeInsight.intention.IntentionAction):com.intellij.openapi.actionSystem.ShortcutSet
- getText():java.lang.String
- getToolId():java.lang.String
- hasSeparatorAbove():Z
- hashCode():I
- isSelectable():Z
- isShowIcon():Z
com.intellij.codeInsight.intention.impl.IntentionContainer
- a:getAllActions():java.util.List
- getErrorFixes():java.util.Set
- a:getGroup(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):com.intellij.codeInsight.intention.impl.IntentionGroup
- a:getIcon(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):javax.swing.Icon
- getInspectionFixes():java.util.Set
- a:getTitle():java.lang.String
e:com.intellij.codeInsight.intention.impl.IntentionGroup
- java.lang.Enum
- sf:ADVERTISEMENT:com.intellij.codeInsight.intention.impl.IntentionGroup
- sf:EMPTY_ACTION:com.intellij.codeInsight.intention.impl.IntentionGroup
- sf:ERROR:com.intellij.codeInsight.intention.impl.IntentionGroup
- sf:GUTTER:com.intellij.codeInsight.intention.impl.IntentionGroup
- sf:INSPECTION:com.intellij.codeInsight.intention.impl.IntentionGroup
- sf:NOTIFICATION:com.intellij.codeInsight.intention.impl.IntentionGroup
- sf:OTHER:com.intellij.codeInsight.intention.impl.IntentionGroup
- sf:REMOTE_ERROR:com.intellij.codeInsight.intention.impl.IntentionGroup
- getPriority():I
- s:valueOf(java.lang.String):com.intellij.codeInsight.intention.impl.IntentionGroup
- s:values():com.intellij.codeInsight.intention.impl.IntentionGroup[]
f:com.intellij.codeInsight.intention.impl.IntentionHintComponent
- com.intellij.codeInsight.hint.ScrollAwareHint
- com.intellij.openapi.Disposable
- dispose():V
- editorScrolled():V
- getCachedIntentions():com.intellij.codeInsight.intention.impl.IntentionContainer
- getComponentHint():com.intellij.ui.LightweightHint
- hasVisibleLightBulbOrPopup():Z
- hide():V
- hideIfDisplayedForEditor(com.intellij.openapi.editor.Editor):Z
- isDisposed():Z
- isVisible():Z
- s:showIntentionHint(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,Z,com.intellij.codeInsight.intention.impl.CachedIntentions):com.intellij.codeInsight.intention.impl.IntentionHintComponent
- s:showIntentionHint(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,Z,com.intellij.codeInsight.intention.impl.IntentionContainer):com.intellij.codeInsight.intention.impl.IntentionHintComponent
- s:showIntentionHint(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,Z,javax.swing.Icon,com.intellij.codeInsight.intention.impl.AbstractIntentionPopup):com.intellij.codeInsight.intention.impl.IntentionHintComponent
c:com.intellij.codeInsight.intention.impl.IntentionListStep
- com.intellij.openapi.ui.popup.ListPopupStep
- com.intellij.openapi.ui.popup.SpeedSearchFilter
- <init>(com.intellij.codeInsight.intention.impl.IntentionHintComponent$IntentionPopup,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.impl.CachedIntentions):V
- <init>(com.intellij.codeInsight.intention.impl.IntentionHintComponent$IntentionPopup,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.impl.IntentionContainer):V
- p:<init>(com.intellij.codeInsight.intention.impl.IntentionHintComponent$IntentionPopup,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.impl.IntentionContainer,com.intellij.codeInsight.intention.IntentionSource):V
- canceled():V
- p:chooseActionAndInvoke(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching,com.intellij.psi.PsiFile,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- getActionsWithSubActions():java.util.Map
- getDefaultOptionIndex():I
- getFinalRunnable():java.lang.Runnable
- getIconFor(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):javax.swing.Icon
- getIndexedString(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):java.lang.String
- getMnemonicNavigationFilter():com.intellij.openapi.ui.popup.MnemonicNavigationFilter
- getOriginalIconFor(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):javax.swing.Icon
- getSeparatorAbove(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):com.intellij.openapi.ui.popup.ListSeparator
- getSpeedSearchFilter():com.intellij.openapi.ui.popup.SpeedSearchFilter
- getTextFor(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):java.lang.String
- getTitle():java.lang.String
- getValues():java.util.List
- hasSubstep(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):Z
- isAutoSelectionEnabled():Z
- isFinal(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):Z
- isMnemonicsNavigationEnabled():Z
- isSelectable(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching):Z
- isSpeedSearchEnabled():Z
- onChosen(com.intellij.codeInsight.intention.impl.IntentionActionWithTextCaching,Z):com.intellij.openapi.ui.popup.PopupStep
com.intellij.codeInsight.intention.impl.IntentionPopupProvider
- sf:Companion:com.intellij.codeInsight.intention.impl.IntentionPopupProvider$Companion
- a:createPopup(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.project.Project):com.intellij.codeInsight.intention.impl.AbstractIntentionPopup
f:com.intellij.codeInsight.intention.impl.IntentionPopupProvider$Companion
- f:createPopup(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.project.Project):com.intellij.codeInsight.intention.impl.AbstractIntentionPopup
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
f:com.intellij.codeInsight.intention.impl.IntentionShortcutUtils
- sf:invokeAsAction(com.intellij.codeInsight.intention.IntentionAction,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- sf:invokeAsAction(com.intellij.codeInsight.intention.IntentionAction,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.intention.IntentionSource):V
- bs:invokeAsAction$default(com.intellij.codeInsight.intention.IntentionAction,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.intention.IntentionSource,I,java.lang.Object):V
com.intellij.codeInsight.intention.impl.IntentionsOrderProvider
- sf:EXTENSION:com.intellij.lang.LanguageExtension
- a:getSortedIntentions(com.intellij.codeInsight.intention.impl.CachedIntentions,java.util.List):java.util.List
c:com.intellij.codeInsight.intention.impl.QuickEditAction
- com.intellij.codeInsight.intention.impl.QuickEditActionKeys
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.codeInsight.intention.LowPriorityAction
- sf:QUICK_EDIT_HANDLER:com.intellij.openapi.util.Key
- <init>():V
- p:createBalloonComponent(com.intellij.psi.PsiFile):javax.swing.JComponent
- s:getBalloonPosition(com.intellij.openapi.editor.Editor):com.intellij.openapi.ui.popup.Balloon$Position
- s:getExistingHandler(com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.impl.QuickEditHandler
- getFamilyName():java.lang.String
- p:getRangePair(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.openapi.util.Pair
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- invokeImpl(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.impl.QuickEditHandler
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- p:isShowInBalloon():Z
- startInWriteAction():Z
f:com.intellij.codeInsight.intention.impl.QuickEditHandler
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.Disposable
- com.intellij.openapi.editor.event.DocumentListener
- sf:REPLACEMENT_KEY:com.intellij.openapi.util.Key
- closeEditorForTest():V
- dispose():V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- s:getFragmentEditors(com.intellij.psi.PsiLanguageInjectionHost):java.util.Set
- getNewFile():com.intellij.psi.PsiFile
- isValid():Z
- navigate(I):V
- s:showBalloon(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,javax.swing.JComponent):V
- tryReuse(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):Z
f:com.intellij.codeInsight.intention.impl.QuickEditHandlerUtils
- sf:reuseFragmentEditorIndent(com.intellij.psi.PsiLanguageInjectionHost,kotlin.jvm.functions.Function0):java.lang.Integer
c:com.intellij.codeInsight.intention.impl.ShowIntentionActionsHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- <init>():V
- s:availableFor(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,com.intellij.codeInsight.intention.IntentionAction):Z
- s:availableFor(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.intention.IntentionAction):Z
- s:chooseActionAndInvoke(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.intention.IntentionAction,java.lang.String):Z
- s:chooseActionAndInvoke(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.intention.IntentionAction,java.lang.String,I):Z
- s:chooseActionAndInvoke(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.intention.IntentionAction,java.lang.String,I,com.intellij.codeInsight.intention.IntentionSource):Z
- s:chooseActionAndInvoke(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.intention.IntentionAction,java.lang.String,com.intellij.codeInsight.intention.IntentionSource):Z
- s:chooseBetweenHostAndInjected(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,com.intellij.psi.PsiFile,com.intellij.util.TripleFunction):com.intellij.openapi.util.Pair
- s:chooseBetweenHostAndInjected(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,com.intellij.util.TripleFunction):com.intellij.openapi.util.Pair
- s:chooseFileForAction(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.intention.IntentionAction):com.intellij.openapi.util.Pair
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z):V
- p:showIntentionHint(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z):V
- startInWriteAction():Z
f:com.intellij.codeInsight.intention.impl.config.IntentionActionMetaData
- f:myCategory:java.lang.String[]
- <init>(com.intellij.codeInsight.intention.IntentionAction,java.lang.ClassLoader,java.lang.String[],java.lang.String,Z):V
- getAction():com.intellij.codeInsight.intention.IntentionAction
- getDescriptionDirectoryName():java.lang.String
- getFamily():java.lang.String
- getPluginId():com.intellij.openapi.extensions.PluginId
f:com.intellij.codeInsight.intention.impl.config.IntentionManagerImpl
- com.intellij.codeInsight.intention.IntentionManager
- com.intellij.openapi.Disposable
- sf:EP_INTENTION_ACTIONS:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- addAction(com.intellij.codeInsight.intention.IntentionAction):V
- checkForDuplicates():V
- convertToFix(com.intellij.codeInsight.intention.IntentionAction):com.intellij.codeInspection.LocalQuickFix
- createCleanupAllIntention():com.intellij.codeInsight.intention.IntentionAction
- createFixAllIntention(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInsight.intention.IntentionAction):com.intellij.codeInsight.intention.IntentionAction
- dispose():V
- getAvailableIntentions():java.util.List
- getAvailableIntentions(java.util.Collection):java.util.List
- getCleanupIntentionOptions():java.util.List
- getIntentionActions():com.intellij.codeInsight.intention.IntentionAction[]
- getStandardIntentionOptions(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.PsiElement):java.util.List
- hasActiveRequests():Z
- registerIntentionAndMetaData(com.intellij.codeInsight.intention.IntentionAction,java.lang.String[]):V
- unregisterIntention(com.intellij.codeInsight.intention.IntentionAction):V
- withDisabledIntentions(com.intellij.util.ThrowableRunnable):V
f:com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings$Companion
- <init>():V
- sf:getInstance():com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings
- f:getMetaData():java.util.List
- getState():org.jdom.Element
- f:isEnabled(com.intellij.codeInsight.intention.IntentionAction):Z
- f:isEnabled(com.intellij.codeInsight.intention.impl.config.IntentionActionMetaData):Z
- f:isShowLightBulb(com.intellij.codeInsight.intention.IntentionAction):Z
- loadState(org.jdom.Element):V
- f:setEnabled(com.intellij.codeInsight.intention.IntentionAction,Z):V
- f:setEnabled(com.intellij.codeInsight.intention.impl.config.IntentionActionMetaData,Z):V
- f:unregisterMetaData(com.intellij.codeInsight.intention.IntentionAction):V
f:com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings$Companion
- f:getInstance():com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings
com.intellij.codeInsight.intention.impl.config.IntentionsConfigurable
- com.intellij.openapi.options.Configurable
- a:selectIntention(java.lang.String):V
a:com.intellij.codeInsight.intention.impl.config.IntentionsConfigurableProvider
- com.intellij.openapi.options.ConfigurableProvider
- <init>():V
- a:createConfigurable():com.intellij.codeInsight.intention.impl.config.IntentionsConfigurable
f:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewComputableKt
- sf:findCopyIntention(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.intention.IntentionAction):com.intellij.codeInsight.intention.IntentionAction
f:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult
- com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- sf:Companion:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$Companion
- <init>(java.util.List,java.lang.String):V
- f:component1():java.util.List
- f:component2():java.lang.String
- f:copy(java.util.List,java.lang.String):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult
- bs:copy$default(com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult,java.util.List,java.lang.String,I,java.lang.Object):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult
- sf:create(com.intellij.openapi.fileTypes.FileType,java.lang.String,java.lang.String,com.intellij.diff.comparison.ComparisonPolicy,Z,java.lang.String):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult
- equals(java.lang.Object):Z
- sf:fromCustomDiff(com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$CustomDiff):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult
- sf:fromMultiDiff(com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$MultiFileDiff):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult
- f:getDiffs():java.util.List
- f:getNewText():java.lang.String
- hashCode():I
f:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$Companion
- f:create(com.intellij.openapi.fileTypes.FileType,java.lang.String,java.lang.String,com.intellij.diff.comparison.ComparisonPolicy,Z,java.lang.String):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult
- bs:create$default(com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$Companion,com.intellij.openapi.fileTypes.FileType,java.lang.String,java.lang.String,com.intellij.diff.comparison.ComparisonPolicy,Z,java.lang.String,I,java.lang.Object):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult
- f:fromCustomDiff(com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$CustomDiff):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult
- f:fromMultiDiff(com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$MultiFileDiff):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult
f:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$DiffInfo
- <init>(com.intellij.openapi.fileTypes.FileType,java.lang.String,I,I,java.util.List):V
- f:component1():com.intellij.openapi.fileTypes.FileType
- f:component2():java.lang.String
- f:component3():I
- f:component4():I
- f:component5():java.util.List
- f:copy(com.intellij.openapi.fileTypes.FileType,java.lang.String,I,I,java.util.List):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$DiffInfo
- bs:copy$default(com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$DiffInfo,com.intellij.openapi.fileTypes.FileType,java.lang.String,I,I,java.util.List,I,java.lang.Object):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$DiffInfo
- equals(java.lang.Object):Z
- f:getFileText():java.lang.String
- f:getFileType():com.intellij.openapi.fileTypes.FileType
- f:getFragments():java.util.List
- f:getLength():I
- f:getStartLine():I
- hashCode():I
f:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$Fragment
- <init>(com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType,I,I):V
- f:component1():com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType
- f:component2():I
- f:component3():I
- f:copy(com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType,I,I):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$Fragment
- bs:copy$default(com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$Fragment,com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType,I,I,I,java.lang.Object):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$Fragment
- equals(java.lang.Object):Z
- f:getEnd():I
- f:getStart():I
- f:getType():com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType
- hashCode():I
e:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType
- java.lang.Enum
- sf:ADDED:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType
- sf:DELETED:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType
- sf:UPDATED:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType
- s:values():com.intellij.codeInsight.intention.impl.preview.IntentionPreviewDiffResult$HighlightingType[]
f:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewPopupUpdateProcessor
- com.intellij.ui.popup.PopupUpdateProcessor
- sf:Companion:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewPopupUpdateProcessor$Companion
- f:activate():V
- sf:getPreviewContent(com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):java.lang.String
- sf:getPreviewInfo(com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- sf:getPreviewInfo(com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- sf:getPreviewText(com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):java.lang.String
- f:hide():V
- f:isShown():Z
- f:setup(com.intellij.openapi.ui.popup.JBPopup,I):V
- f:show():V
- updatePopup(java.lang.Object):V
f:com.intellij.codeInsight.intention.impl.preview.IntentionPreviewPopupUpdateProcessor$Companion
- f:getPreviewContent(com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):java.lang.String
- f:getPreviewInfo(com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- f:getPreviewInfo(com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- bs:getPreviewInfo$default(com.intellij.codeInsight.intention.impl.preview.IntentionPreviewPopupUpdateProcessor$Companion,com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,I,java.lang.Object):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- f:getPreviewText(com.intellij.openapi.project.Project,com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):java.lang.String
- f:getShortcutSet():com.intellij.openapi.actionSystem.ShortcutSet
- f:getShortcutText():java.lang.String
com.intellij.codeInsight.lookup.LookupActionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:fillActions(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.lookup.Lookup,com.intellij.util.Consumer):V
a:com.intellij.codeInsight.lookup.LookupElementAction
- p:<init>(javax.swing.Icon,java.lang.String):V
- getIcon():javax.swing.Icon
- getText():java.lang.String
- a:performLookupAction():com.intellij.codeInsight.lookup.LookupElementAction$Result
c:com.intellij.codeInsight.lookup.LookupElementAction$Result
- sf:HIDE_LOOKUP:com.intellij.codeInsight.lookup.LookupElementAction$Result
- sf:REFRESH_ITEM:com.intellij.codeInsight.lookup.LookupElementAction$Result
- <init>():V
f:com.intellij.codeInsight.lookup.LookupElementAction$Result$ChooseItem
- com.intellij.codeInsight.lookup.LookupElementAction$Result
- f:item:com.intellij.codeInsight.lookup.LookupElement
- <init>(com.intellij.codeInsight.lookup.LookupElement):V
com.intellij.codeInsight.lookup.LookupElementInteractivity
- sf:ALWAYS:com.intellij.codeInsight.lookup.LookupElementInteractivity
- sf:KEY:com.intellij.openapi.util.Key
- sf:NEVER:com.intellij.codeInsight.lookup.LookupElementInteractivity
- a:isInsertHandlerInteractive(com.intellij.codeInsight.lookup.LookupElement):Z
f:com.intellij.codeInsight.lookup.LookupElementInteractivity$Simple
- com.intellij.codeInsight.lookup.LookupElementInteractivity
- isInsertHandlerInteractive(com.intellij.codeInsight.lookup.LookupElement):Z
com.intellij.codeInsight.lookup.LookupManagerListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:activeLookupChanged(com.intellij.codeInsight.lookup.Lookup,com.intellij.codeInsight.lookup.Lookup):V
f:com.intellij.codeInsight.lookup.LookupValueFactory
- s:createLookupValue(java.lang.String,javax.swing.Icon):java.lang.Object
- s:createLookupValueWithHint(java.lang.String,javax.swing.Icon,java.lang.String):java.lang.Object
c:com.intellij.codeInsight.lookup.LookupValueFactory$LookupValueWithIcon
- com.intellij.codeInsight.lookup.PresentableLookupValue
- com.intellij.openapi.util.Iconable
- p:<init>(java.lang.String,javax.swing.Icon):V
- equals(java.lang.Object):Z
- getIcon(I):javax.swing.Icon
- getPresentation():java.lang.String
- hashCode():I
f:com.intellij.codeInsight.lookup.LookupValueFactory$LookupValueWithIconAndHint
- com.intellij.codeInsight.lookup.LookupValueFactory$LookupValueWithIcon
- com.intellij.codeInsight.lookup.LookupValueWithUIHint
- getTypeHint():java.lang.String
a:com.intellij.codeInsight.lookup.impl.LookupActionHandler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- pf:myOriginalHandler:com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- executeInCommand(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):Z
- pa:executeInLookup(com.intellij.codeInsight.lookup.impl.LookupImpl,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.Caret):V
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.codeInsight.lookup.impl.LookupActionHandler$DownAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.codeInsight.lookup.impl.LookupActionHandler$DownHandler
- com.intellij.codeInsight.lookup.impl.LookupActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
f:com.intellij.codeInsight.lookup.impl.LookupActionHandler$DownInLookupAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
c:com.intellij.codeInsight.lookup.impl.LookupActionHandler$LeftHandler
- com.intellij.codeInsight.lookup.impl.LookupActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- p:executeInLookup(com.intellij.codeInsight.lookup.impl.LookupImpl,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.Caret):V
f:com.intellij.codeInsight.lookup.impl.LookupActionHandler$PageDownHandler
- com.intellij.codeInsight.lookup.impl.LookupActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
f:com.intellij.codeInsight.lookup.impl.LookupActionHandler$PageUpHandler
- com.intellij.codeInsight.lookup.impl.LookupActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
c:com.intellij.codeInsight.lookup.impl.LookupActionHandler$RightHandler
- com.intellij.codeInsight.lookup.impl.LookupActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- p:executeInLookup(com.intellij.codeInsight.lookup.impl.LookupImpl,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.Caret):V
f:com.intellij.codeInsight.lookup.impl.LookupActionHandler$UpAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.codeInsight.lookup.impl.LookupActionHandler$UpHandler
- com.intellij.codeInsight.lookup.impl.LookupActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
f:com.intellij.codeInsight.lookup.impl.LookupActionHandler$UpInLookupAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
f:com.intellij.codeInsight.lookup.impl.LookupCellRenderer
- javax.swing.ListCellRenderer
- sf:BACKGROUND_COLOR:java.awt.Color
- sf:Companion:com.intellij.codeInsight.lookup.impl.LookupCellRenderer$Companion
- sf:MATCHED_FOREGROUND_COLOR:java.awt.Color
- sf:REGULAR_MATCHED_ATTRIBUTES:com.intellij.ui.SimpleTextAttributes
- sf:SELECTED_BACKGROUND_COLOR:java.awt.Color
- sf:SELECTED_NON_FOCUSED_BACKGROUND_COLOR:java.awt.Color
- <init>(com.intellij.codeInsight.lookup.impl.LookupImpl,javax.swing.JComponent):V
- sf:augmentIcon(com.intellij.openapi.editor.Editor,javax.swing.Icon,javax.swing.Icon):javax.swing.Icon
- sf:bodyInsets():java.awt.Insets
- sf:bodyInsetsWithAdvertiser():java.awt.Insets
- sf:getGrayedForeground(Z):java.awt.Color
- getListCellRendererComponent(javax.swing.JList,com.intellij.codeInsight.lookup.LookupElement,I,Z,Z):java.awt.Component
- f:getLookupTextWidth():I
- sf:getMatchingFragments(java.lang.String,java.lang.String):com.intellij.util.containers.FList
- f:getTextIndent():I
- f:itemAdded(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.lookup.LookupElementPresentation):V
- f:refreshUi():V
- f:scheduleUpdateLookupWidthFromVisibleItems():V
- f:updateItemPresentation(com.intellij.codeInsight.lookup.LookupElement):V
f:com.intellij.codeInsight.lookup.impl.LookupCellRenderer$Companion
- f:augmentIcon(com.intellij.openapi.editor.Editor,javax.swing.Icon,javax.swing.Icon):javax.swing.Icon
- f:bodyInsets():java.awt.Insets
- f:bodyInsetsWithAdvertiser():java.awt.Insets
- f:getGrayedForeground(Z):java.awt.Color
- f:getMatchingFragments(java.lang.String,java.lang.String):com.intellij.util.containers.FList
com.intellij.codeInsight.lookup.impl.LookupCellRenderer$IconDecorator
- javax.swing.Icon
- a:getDelegate():javax.swing.Icon
- a:withDelegate(javax.swing.Icon):com.intellij.codeInsight.lookup.impl.LookupCellRenderer$IconDecorator
c:com.intellij.codeInsight.lookup.impl.LookupImpl
- com.intellij.ui.LightweightHint
- com.intellij.codeInsight.completion.LookupElementListPresenter
- com.intellij.codeInsight.lookup.LookupEx
- com.intellij.openapi.Disposable
- p:myShown:Z
- addAdvertisement(java.lang.String,javax.swing.Icon):V
- addItem(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.PrefixMatcher):Z
- addLookupListener(com.intellij.codeInsight.lookup.LookupListener):V
- addPrefixChangeListener(com.intellij.codeInsight.lookup.impl.PrefixChangeListener,com.intellij.openapi.Disposable):V
- appendPrefix(C):V
- appendPrefix(C,Z):V
- checkValid():V
- dispose():V
- p:doShowLookup():Z
- ensureSelectionVisible(Z):V
- finishLookup(C):V
- finishLookup(C,com.intellij.codeInsight.lookup.LookupElement):V
- fireBeforeAppendPrefix(C):V
- fireItemSelected(com.intellij.codeInsight.lookup.LookupElement,C):V
- getActionsFor(com.intellij.codeInsight.lookup.LookupElement):java.util.Collection
- getAdditionalPrefix():java.lang.String
- getAdvertisements():java.util.List
- getAdvertiser():com.intellij.util.ui.Advertiser
- getArranger():com.intellij.codeInsight.lookup.LookupArranger
- getCreatedTimestampMillis():J
- getCurrentItem():com.intellij.codeInsight.lookup.LookupElement
- getCurrentItemBounds():java.awt.Rectangle
- getCurrentItemOrEmpty():com.intellij.codeInsight.lookup.LookupElement
- getDummyItem():com.intellij.codeInsight.lookup.LookupElement
- getDummyItemCount():I
- getEditor():com.intellij.openapi.editor.Editor
- getItems():java.util.List
- getLastVisibleIndex():I
- getList():javax.swing.JList
- getLookupFocusDegree():com.intellij.codeInsight.lookup.LookupFocusDegree
- getLookupOriginalStart():I
- getLookupStart():I
- getPrefixLength(com.intellij.codeInsight.lookup.LookupElement):I
- getPresentation():com.intellij.codeInsight.lookup.LookupPresentation
- getProject():com.intellij.openapi.project.Project
- getPsiElement():com.intellij.psi.PsiElement
- getPsiFile():com.intellij.psi.PsiFile
- getRelevanceObjects(java.lang.Iterable,Z):java.util.Map
- getSelectedIndex():I
- getShownTimestampMillis():J
- getTopLevelEditor():com.intellij.openapi.editor.Editor
- getVisibleItems():java.util.List
- hide():V
- hideLookup(Z):V
- p:insertLookupString(com.intellij.codeInsight.lookup.LookupElement,I):V
- s:insertLookupString(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.PrefixMatcher,java.lang.String,I):V
- isAvailableToUser():Z
- isCalculating():Z
- isCompletion():Z
- isFocused():Z
- isLookupDisposed():Z
- isPositionedAboveCaret():Z
- isSelectionTouched():Z
- isSelectionVisible():Z
- isShown():Z
- isStartCompletionWhenNothingMatches():Z
- itemMatcher(com.intellij.codeInsight.lookup.LookupElement):com.intellij.codeInsight.completion.PrefixMatcher
- itemPattern(com.intellij.codeInsight.lookup.LookupElement):java.lang.String
- markReused():V
- markSelectionTouched():V
- mayBeNoticed():Z
- p:onPopupCancel():V
- performGuardedChange(java.lang.Runnable):Z
- refreshUi(Z,Z):V
- removeLookupListener(com.intellij.codeInsight.lookup.LookupListener):V
- replacePrefix(java.lang.String,java.lang.String):V
- requestResize():V
- resort(Z):V
- scheduleItemUpdate(com.intellij.codeInsight.lookup.LookupElement):V
- setArranger(com.intellij.codeInsight.lookup.LookupArranger):V
- setCalculating(Z):V
- setCurrentItem(com.intellij.codeInsight.lookup.LookupElement):V
- setDummyItemCount(I):V
- setLookupFocusDegree(com.intellij.codeInsight.lookup.LookupFocusDegree):V
- setPrefixChangeListener(com.intellij.codeInsight.lookup.impl.PrefixChangeListener):V
- setPresentation(com.intellij.codeInsight.lookup.LookupPresentation):V
- setSelectedIndex(I):V
- setSelectionTouched(Z):V
- setStartCompletionWhenNothingMatches(Z):V
- showElementActions(java.awt.event.InputEvent):V
- showLookup():Z
- truncatePrefix(Z,I):V
- truncatePrefix(Z,I,Z):V
- updateLookupWidth():V
- vetoesHiding():Z
f:com.intellij.codeInsight.lookup.impl.LookupOffsets
- com.intellij.openapi.editor.event.DocumentListener
- <init>(com.intellij.openapi.editor.Editor):V
- appendPrefix(C):V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- getAdditionalPrefix():java.lang.String
- getPrefixLength(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.lookup.impl.LookupImpl):I
- truncatePrefix():Z
f:com.intellij.codeInsight.lookup.impl.LookupTypedHandler
- com.intellij.codeInsight.template.impl.editorActions.TypedActionHandlerBase
- sf:CANCELLATION_CHAR:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.editor.actionSystem.TypedActionHandler):V
- execute(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext):V
- s:getLookupAction(C,com.intellij.codeInsight.lookup.impl.LookupImpl):com.intellij.codeInsight.lookup.CharFilter$Result
com.intellij.codeInsight.lookup.impl.PrefixChangeListener
- afterAppend(C):V
- afterTruncate():V
- beforeAppend(C):V
- beforeTruncate():V
a:com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- com.intellij.openapi.editor.actionSystem.LatencyAwareEditorAction
- <init>(com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$Handler):V
- s:hasTemplatePrefix(com.intellij.codeInsight.lookup.impl.LookupImpl,C):Z
f:com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$ChooseWithDot
- com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction
- <init>():V
f:com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$CompletingStatement
- com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction
- <init>():V
f:com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$FocusedOnly
- com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction
- <init>():V
c:com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$Handler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>(Z,C):V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$Replacing
- com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction
- <init>():V
a:com.intellij.codeInsight.navigation.BackgroundUpdaterTask
- com.intellij.openapi.progress.Task$Backgroundable
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.util.Comparator):V
- ps:createComparatorWrapper(java.util.Comparator):java.util.Comparator
- p:createUsage(com.intellij.psi.PsiElement):com.intellij.usages.Usage
- p:getTheOnlyOneElement():com.intellij.psi.PsiElement
- updateComponent(com.intellij.psi.PsiElement):Z
- updateComponent(com.intellij.psi.PsiElement,java.util.Comparator):Z
f:com.intellij.codeInsight.navigation.CtrlMouseHandler2
- java.awt.event.KeyAdapter
- com.intellij.openapi.Disposable
- com.intellij.openapi.editor.event.EditorMouseListener
- com.intellij.openapi.editor.event.EditorMouseMotionListener
- com.intellij.openapi.editor.event.VisibleAreaListener
- com.intellij.openapi.fileEditor.FileEditorManagerListener
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- dispose():V
- f:handlerJob():kotlinx.coroutines.Job
- keyPressed(java.awt.event.KeyEvent):V
- keyReleased(java.awt.event.KeyEvent):V
- mouseMoved(com.intellij.openapi.editor.event.EditorMouseEvent):V
- mouseReleased(com.intellij.openapi.editor.event.EditorMouseEvent):V
- selectionChanged(com.intellij.openapi.fileEditor.FileEditorManagerEvent):V
- visibleAreaChanged(com.intellij.openapi.editor.event.VisibleAreaEvent):V
c:com.intellij.codeInsight.navigation.GotoImplementationHandler
- com.intellij.codeInsight.navigation.GotoTargetHandler
- <init>():V
- p:chooseFromAmbiguousSources(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,java.util.function.Consumer):V
- p:createDataForSource(com.intellij.openapi.editor.Editor,I,com.intellij.psi.PsiElement):com.intellij.codeInsight.navigation.GotoTargetHandler$GotoData
- createDataForSourceForTests(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):com.intellij.codeInsight.navigation.GotoTargetHandler$GotoData
- p:findTargets(com.intellij.openapi.editor.Editor,I,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement[]
- p:getChooserTitle(com.intellij.psi.PsiElement,java.lang.String,I,Z):java.lang.String
- p:getFeatureUsedKey():java.lang.String
- p:getFindUsagesTitle(com.intellij.psi.PsiElement,java.lang.String,I):java.lang.String
- p:getNotFoundMessage(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.lang.String
- getSourceAndTargetElements(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.navigation.GotoTargetHandler$GotoData
- navigateToImplementations(com.intellij.psi.PsiElement,java.awt.event.MouseEvent,java.lang.String):V
- s:projectElementsFirst(com.intellij.openapi.project.Project):java.util.Comparator
- s:tryGetNavigationSourceOffsetFromGutterIcon(com.intellij.openapi.editor.Editor,java.lang.String):I
- s:wrapIntoReadAction(java.util.Comparator):java.util.Comparator
a:com.intellij.codeInsight.navigation.GotoTargetHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- <init>():V
- p:chooseFromAmbiguousSources(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,java.util.function.Consumer):V
- s:computePresentation(com.intellij.psi.PsiElement,Z):com.intellij.platform.backend.presentation.TargetPresentation
- s:computePresentationInBackground(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],Z):java.util.List
- p:createComparator(com.intellij.codeInsight.navigation.GotoTargetHandler$GotoData):java.util.Comparator
- s:createRenderer(com.intellij.codeInsight.navigation.GotoTargetHandler$GotoData,com.intellij.psi.PsiElement):com.intellij.ide.util.PsiElementListCellRenderer
- p:getAdText(com.intellij.psi.PsiElement,I):java.lang.String
- p:getChooserTitle(com.intellij.psi.PsiElement,java.lang.String,I):java.lang.String
- p:getChooserTitle(com.intellij.psi.PsiElement,java.lang.String,I,Z):java.lang.String
- pa:getFeatureUsedKey():java.lang.String
- p:getFindUsagesTitle(com.intellij.psi.PsiElement,java.lang.String,I):java.lang.String
- pa:getNotFoundMessage(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.lang.String
- pa:getSourceAndTargetElements(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.navigation.GotoTargetHandler$GotoData
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- s:navigate(com.intellij.openapi.project.Project,com.intellij.codeInsight.navigation.ItemWithPresentation,java.util.function.Consumer):V
- p:navigateToElement(com.intellij.pom.Navigatable):V
- p:navigateToElement(com.intellij.psi.PsiElement):Z
- p:shouldSortTargets():Z
- p:show(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.navigation.GotoTargetHandler$GotoData,java.util.function.Consumer):V
- startInWriteAction():Z
- p:useEditorFont():Z
com.intellij.codeInsight.navigation.GotoTargetHandler$AdditionalAction
- a:execute():V
- a:getIcon():javax.swing.Icon
- a:getText():java.lang.String
f:com.intellij.codeInsight.navigation.GotoTargetHandler$GotoData
- f:additionalActions:java.util.List
- isCanceled:Z
- f:source:com.intellij.psi.PsiElement
- targets:com.intellij.psi.PsiElement[]
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement[],java.util.List):V
- addTarget(com.intellij.psi.PsiElement):com.intellij.codeInsight.navigation.ItemWithPresentation
- getComparingObject(com.intellij.codeInsight.navigation.ItemWithPresentation):java.lang.String
- getItems():java.util.List
- hasDifferentNames():Z
- initPresentations():V
com.intellij.codeInsight.navigation.GotoTargetPresentationProvider
- a:getTargetPresentation(com.intellij.psi.PsiElement,Z):com.intellij.platform.backend.presentation.TargetPresentation
- s:getTargetPresentationFromProviders(com.intellij.psi.PsiElement,Z):com.intellij.platform.backend.presentation.TargetPresentation
com.intellij.codeInsight.navigation.GotoTargetRendererProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getRenderer(com.intellij.psi.PsiElement,com.intellij.codeInsight.navigation.GotoTargetHandler$GotoData):com.intellij.ide.util.PsiElementListCellRenderer
c:com.intellij.codeInsight.navigation.ImplementationSearcher
- <init>():V
- p:filterElements(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement[]):com.intellij.psi.PsiElement[]
- s:getFlags():I
- ps:getSearchScope(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.psi.search.SearchScope
- s:getSearchingForImplementations():java.lang.String
- p:isSearchDeep():Z
- p:search(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.util.Query
- p:searchDefinitions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement[]
- searchImplementations(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,I):com.intellij.psi.PsiElement[]
- searchImplementations(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,Z,Z):com.intellij.psi.PsiElement[]
a:com.intellij.codeInsight.navigation.ImplementationSearcher$BackgroundableImplementationSearcher
- com.intellij.codeInsight.navigation.ImplementationSearcher
- <init>():V
- pa:processElement(com.intellij.psi.PsiElement):V
- p:searchDefinitions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement[]
c:com.intellij.codeInsight.navigation.ImplementationSearcher$FirstImplementationsSearcher
- com.intellij.codeInsight.navigation.ImplementationSearcher
- <init>():V
- p:accept(com.intellij.psi.PsiElement):Z
- p:canShowPopupWithOneItem(com.intellij.psi.PsiElement):Z
- p:searchDefinitions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement[]
f:com.intellij.codeInsight.navigation.IncrementalSearchHandler
- <init>():V
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- s:isHintVisible(com.intellij.openapi.editor.Editor):Z
f:com.intellij.codeInsight.navigation.IncrementalSearchHandler$BackSpaceHandler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.codeInsight.navigation.IncrementalSearchHandler$DownHandler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.codeInsight.navigation.IncrementalSearchHandler$MyTypedHandler
- com.intellij.codeInsight.template.impl.editorActions.TypedActionHandlerBase
- <init>(com.intellij.openapi.editor.actionSystem.TypedActionHandler):V
- execute(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.codeInsight.navigation.IncrementalSearchHandler$UpHandler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler):V
- doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
Fc:com.intellij.codeInsight.navigation.ItemWithPresentation
- com.intellij.model.Pointer
- <init>(java.lang.Object,com.intellij.platform.backend.presentation.TargetPresentation):V
- dereference():com.intellij.psi.PsiElement
- f:getItem():java.lang.Object
- f:getPresentation():com.intellij.platform.backend.presentation.TargetPresentation
- f:setPresentation(com.intellij.platform.backend.presentation.TargetPresentation):V
f:com.intellij.codeInsight.navigation.MethodUpDownUtil
- s:getNavigationOffsets(com.intellij.psi.PsiFile,I):I[]
- s:offsetsFromElements(java.util.Collection):I[]
c:com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- psf:DEFAULT_PSI_CONVERTOR:com.intellij.util.NotNullFunction
- psf:PSI_GOTO_RELATED_ITEM_PROVIDER:com.intellij.util.NotNullFunction
- p:myAlignment:com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment
- p:myEmptyText:java.lang.String
- pf:myIcon:javax.swing.Icon
- p:myPopupTitle:java.lang.String
- p:myTargets:com.intellij.openapi.util.NotNullLazyValue
- p:myTooltipText:java.lang.String
- p:<init>(javax.swing.Icon,com.intellij.util.NotNullFunction):V
- p:<init>(javax.swing.Icon,com.intellij.util.NotNullFunction,com.intellij.util.NotNullFunction):V
- p:computeGotoTargets():java.util.Collection
- s:create(javax.swing.Icon):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- s:create(javax.swing.Icon,com.intellij.util.NotNullFunction):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- s:create(javax.swing.Icon,com.intellij.util.NotNullFunction,com.intellij.util.NotNullFunction):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- s:create(javax.swing.Icon,java.lang.String):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- createGutterIcon(com.intellij.lang.annotation.AnnotationHolder,com.intellij.psi.PsiElement):V
- createGutterIconRenderer(com.intellij.openapi.project.Project,com.intellij.codeInsight.daemon.GutterIconNavigationHandler):com.intellij.codeInsight.navigation.NavigationGutterIconRenderer
- p:createGutterIconRenderer(com.intellij.openapi.util.NotNullLazyValue,com.intellij.openapi.util.Computable,Z,com.intellij.codeInsight.daemon.GutterIconNavigationHandler):com.intellij.codeInsight.navigation.NavigationGutterIconRenderer
- createLineMarkerInfo(com.intellij.psi.PsiElement):com.intellij.codeInsight.daemon.RelatedItemLineMarkerInfo
- createLineMarkerInfo(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.GutterIconNavigationHandler):com.intellij.codeInsight.daemon.RelatedItemLineMarkerInfo
- install(com.intellij.lang.annotation.AnnotationHolder,com.intellij.psi.PsiElement):com.intellij.lang.annotation.Annotation
- setAlignment(com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setCellRenderer(com.intellij.ide.util.PsiElementListCellRenderer):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setCellRenderer(com.intellij.openapi.util.Computable):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setEmptyPopupText(java.lang.String):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setNamer(com.intellij.util.NullableFunction):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setPopupTitle(java.lang.String):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setTarget(java.lang.Object):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setTargetRenderer(java.util.function.Supplier):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setTargets(com.intellij.openapi.util.NotNullLazyValue):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setTargets(java.util.Collection):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- f:setTargets(java.lang.Object[]):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setTooltipText(java.lang.String):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
- setTooltipTitle(java.lang.String):com.intellij.codeInsight.navigation.NavigationGutterIconBuilder
a:com.intellij.codeInsight.navigation.NavigationGutterIconRenderer
- com.intellij.openapi.editor.markup.GutterIconRenderer
- com.intellij.codeInsight.daemon.GutterIconNavigationHandler
- com.intellij.openapi.project.DumbAware
- pf:myCellRenderer:com.intellij.openapi.util.Computable
- pf:myPopupTitle:java.lang.String
- p:<init>(java.lang.String,java.lang.String,com.intellij.openapi.util.Computable,com.intellij.openapi.util.NotNullLazyValue):V
- p:<init>(java.lang.String,java.lang.String,com.intellij.openapi.util.Computable,com.intellij.openapi.util.NotNullLazyValue,Z):V
- p:<init>(java.lang.String,java.lang.String,com.intellij.openapi.util.Computable,com.intellij.openapi.util.NotNullLazyValue,Z,com.intellij.codeInsight.daemon.GutterIconNavigationHandler):V
- equals(java.lang.Object):Z
- getClickAction():com.intellij.openapi.actionSystem.AnAction
- getTargetElements():java.util.List
- hashCode():I
- isNavigateAction():Z
- navigate(java.awt.event.MouseEvent,com.intellij.psi.PsiElement):V
- p:navigateToItems(java.awt.event.MouseEvent):V
- setProject(com.intellij.openapi.project.Project):V
- setTargetRenderer(java.util.function.Supplier):V
f:com.intellij.codeInsight.navigation.NavigationUtil
- sf:activateFileWithPsiElement(com.intellij.psi.PsiElement):Z
- sf:activateFileWithPsiElement(com.intellij.psi.PsiElement,Z):Z
- bs:activateFileWithPsiElement$default(com.intellij.psi.PsiElement,Z,I,java.lang.Object):Z
- sf:collectRelatedItems(com.intellij.psi.PsiElement,com.intellij.openapi.actionSystem.DataContext):java.util.List
- sf:getPsiElementPopup(java.util.function.Supplier,com.intellij.codeInsight.navigation.impl.PsiTargetPresentationRenderer,java.lang.String,com.intellij.openapi.project.Project):com.intellij.openapi.ui.popup.JBPopup
- sf:getPsiElementPopup(com.intellij.psi.PsiElement[],com.intellij.ide.util.PsiElementListCellRenderer,java.lang.String):com.intellij.openapi.ui.popup.JBPopup
- sf:getPsiElementPopup(com.intellij.psi.PsiElement[],com.intellij.ide.util.PsiElementListCellRenderer,java.lang.String,com.intellij.psi.search.PsiElementProcessor):com.intellij.openapi.ui.popup.JBPopup
- sf:getPsiElementPopup(com.intellij.psi.PsiElement[],com.intellij.ide.util.PsiElementListCellRenderer,java.lang.String,com.intellij.psi.search.PsiElementProcessor,com.intellij.psi.PsiElement):com.intellij.openapi.ui.popup.JBPopup
- sf:getPsiElementPopup(com.intellij.psi.PsiElement[],java.lang.String):com.intellij.openapi.ui.popup.JBPopup
- sf:getRelatedItemsPopup(java.util.List,java.lang.String):com.intellij.openapi.ui.popup.JBPopup
- sf:getRelatedItemsPopup(java.util.List,java.lang.String,Z):com.intellij.openapi.ui.popup.JBPopup
- sf:hidePopupIfDumbModeStarts(com.intellij.openapi.ui.popup.JBPopup,com.intellij.openapi.project.Project):V
- sf:openFileWithPsiElement(com.intellij.psi.PsiElement,Z,Z):Z
- sf:patchAttributesColor(com.intellij.openapi.editor.markup.TextAttributes,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.markup.TextAttributes
f:com.intellij.codeInsight.navigation.PsiTargetNavigator
- <init>(java.util.List):V
- <init>(java.util.function.Supplier):V
- <init>(com.intellij.psi.PsiElement[]):V
- f:builderConsumer(java.util.function.Consumer):com.intellij.codeInsight.navigation.PsiTargetNavigator
- f:createPopup(com.intellij.openapi.project.Project,java.lang.String):com.intellij.openapi.ui.popup.JBPopup
- f:createPopup(com.intellij.openapi.project.Project,java.lang.String,com.intellij.psi.search.PsiElementProcessor):com.intellij.openapi.ui.popup.JBPopup
- f:elementsConsumer(java.util.function.BiConsumer):com.intellij.codeInsight.navigation.PsiTargetNavigator
- f:getSupplier():java.util.function.Supplier
- f:navigate(com.intellij.openapi.editor.Editor,java.lang.String):Z
- f:navigate(com.intellij.openapi.editor.Editor,java.lang.String,com.intellij.psi.search.PsiElementProcessor):Z
- f:navigate(com.intellij.ui.awt.RelativePoint,java.lang.String,com.intellij.openapi.project.Project,kotlin.jvm.functions.Function1):Z
- f:navigate(java.awt.event.MouseEvent,java.lang.String,com.intellij.openapi.project.Project):Z
- f:presentationProvider(com.intellij.codeInsight.navigation.TargetPresentationProvider):com.intellij.codeInsight.navigation.PsiTargetNavigator
- f:selection(com.intellij.psi.PsiElement):com.intellij.codeInsight.navigation.PsiTargetNavigator
- f:tabTitle(java.lang.String):com.intellij.codeInsight.navigation.PsiTargetNavigator
- f:title(java.lang.String):com.intellij.codeInsight.navigation.PsiTargetNavigator
- f:updater(com.intellij.codeInsight.navigation.TargetUpdaterTask):com.intellij.codeInsight.navigation.PsiTargetNavigator
com.intellij.codeInsight.navigation.TargetPresentationProvider
- a:getPresentation(com.intellij.psi.PsiElement):com.intellij.platform.backend.presentation.TargetPresentation
a:com.intellij.codeInsight.navigation.TargetUpdaterTask
- com.intellij.openapi.progress.Task$Backgroundable
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- p:createUsage(com.intellij.codeInsight.navigation.ItemWithPresentation):com.intellij.usages.Usage
- f:updateComponent(com.intellij.psi.PsiElement):Z
f:com.intellij.codeInsight.navigation.UtilKt
- sf:getLOG():com.intellij.openapi.diagnostic.Logger
c:com.intellij.codeInsight.navigation.actions.GotoDeclarationAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:chooseAmbiguousTarget(com.intellij.openapi.editor.Editor,I,com.intellij.psi.search.PsiElementProcessor,java.lang.String,com.intellij.psi.PsiElement[]):Z
- s:findAllTargetElements(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiElement[]
- s:findElementToShowUsagesOf(com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiElement
- s:findTargetElement(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiElement
- s:findTargetElementsNoVS(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,Z):com.intellij.psi.PsiElement[]
- getCtrlMouseData(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.codeInsight.navigation.CtrlMouseData
- p:getHandler():com.intellij.codeInsight.CodeInsightActionHandler
- p:getHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.codeInsight.CodeInsightActionHandler
- p:isValidForLookup():Z
- s:startFindUsages(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):V
- s:startFindUsages(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.ui.awt.RelativePoint):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.codeInsight.navigation.actions.GotoDeclarationOnlyAction
- com.intellij.codeInsight.navigation.actions.GotoDeclarationAction
- <init>():V
- getCtrlMouseData(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.codeInsight.navigation.CtrlMouseData
f:com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2
- com.intellij.codeInsight.CodeInsightActionHandler
- sf:Companion:com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$Companion
- sf:getCtrlMouseData(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.codeInsight.navigation.CtrlMouseData
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- startInWriteAction():Z
- sf:testGTDUOutcome(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$GTDUOutcome
- sf:testGTDUOutcomeInNonBlockingReadAction(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$GTDUOutcome
f:com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$Companion
- f:getCtrlMouseData(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.codeInsight.navigation.CtrlMouseData
- f:testGTDUOutcome(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$GTDUOutcome
- f:testGTDUOutcomeInNonBlockingReadAction(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$GTDUOutcome
e:com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$GTDUOutcome
- java.lang.Enum
- sf:GTD:com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$GTDUOutcome
- sf:SU:com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$GTDUOutcome
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$GTDUOutcome
- s:values():com.intellij.codeInsight.navigation.actions.GotoDeclarationOrUsageHandler2$GTDUOutcome[]
c:com.intellij.codeInsight.navigation.actions.GotoImplementationAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- <init>():V
- getCtrlMouseData(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.codeInsight.navigation.CtrlMouseData
- p:getHandler():com.intellij.codeInsight.CodeInsightActionHandler
- p:isValidForLookup():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.codeInsight.navigation.actions.GotoTypeDeclarationAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- s:findSymbolType(com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiElement
- s:findSymbolTypes(com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiElement[]
- getCtrlMouseData(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.codeInsight.navigation.CtrlMouseData
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.codeInsight.navigation.actions.MethodDownAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- com.intellij.openapi.project.DumbAware
- <init>():V
f:com.intellij.codeInsight.navigation.actions.MethodUpAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- com.intellij.openapi.project.DumbAware
- <init>():V
com.intellij.codeInsight.navigation.actions.TypeDeclarationPlaceAwareProvider
- com.intellij.codeInsight.navigation.actions.TypeDeclarationProvider
- a:getSymbolTypeDeclarations(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiElement[]
com.intellij.codeInsight.navigation.actions.TypeDeclarationProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- getActionText(com.intellij.openapi.actionSystem.DataContext):java.lang.String
- a:getSymbolTypeDeclarations(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement[]
c:com.intellij.codeInsight.navigation.impl.PsiTargetPresentationRenderer
- com.intellij.codeInsight.navigation.TargetPresentationProvider
- <init>():V
- getContainerText(com.intellij.psi.PsiElement):java.lang.String
- getElementText(com.intellij.psi.PsiElement):java.lang.String
- p:getIcon(com.intellij.psi.PsiElement):javax.swing.Icon
- getPresentation(com.intellij.psi.PsiElement):com.intellij.platform.backend.presentation.TargetPresentation
com.intellij.codeInsight.template.CustomLiveTemplate
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:computeTemplateKey(com.intellij.codeInsight.template.CustomTemplateCallback):java.lang.String
- a:expand(java.lang.String,com.intellij.codeInsight.template.CustomTemplateCallback):V
- a:getShortcut():C
- a:getTitle():java.lang.String
- a:isApplicable(com.intellij.codeInsight.template.CustomTemplateCallback,I,Z):Z
- a:supportsWrapping():Z
- a:wrap(java.lang.String,com.intellij.codeInsight.template.CustomTemplateCallback):V
a:com.intellij.codeInsight.template.CustomLiveTemplateBase
- com.intellij.codeInsight.template.CustomLiveTemplate
- <init>():V
- addCompletions(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionResultSet):V
- computeTemplateKeyWithoutContextChecking(com.intellij.codeInsight.template.CustomTemplateCallback):java.lang.String
- getLookupElements(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I):java.util.Collection
- hasCompletionItem(com.intellij.codeInsight.template.CustomTemplateCallback,I):Z
- supportsMultiCaret():Z
c:com.intellij.codeInsight.template.CustomTemplateCallback
- p:myApplicableContextTypes:java.util.Set
- <init>(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- deleteTemplateKey(java.lang.String):V
- deleteTemplateKey(java.lang.String,I):V
- findApplicableTemplate(java.lang.String):com.intellij.codeInsight.template.impl.TemplateImpl
- findApplicableTemplates(java.lang.String):java.util.List
- getContext():com.intellij.psi.PsiElement
- s:getContext(com.intellij.psi.PsiFile,I):com.intellij.psi.PsiElement
- s:getContext(com.intellij.psi.PsiFile,I,Z):com.intellij.psi.PsiElement
- getEditor():com.intellij.openapi.editor.Editor
- getFile():com.intellij.psi.PsiFile
- getFileType():com.intellij.openapi.fileTypes.FileType
- getOffset():I
- s:getOffset(com.intellij.openapi.editor.Editor):I
- getProject():com.intellij.openapi.project.Project
- getTemplateManager():com.intellij.codeInsight.template.TemplateManager
- isInInjectedFragment():Z
- startTemplate(com.intellij.codeInsight.template.Template,java.util.Map,com.intellij.codeInsight.template.TemplateEditingListener):V
a:com.intellij.codeInsight.template.FileTypeBasedContextType
- com.intellij.codeInsight.template.TemplateContextType
- p:<init>(java.lang.String,com.intellij.openapi.fileTypes.LanguageFileType):V
- p:<init>(java.lang.String,java.lang.String,com.intellij.openapi.fileTypes.LanguageFileType):V
- createHighlighter():com.intellij.openapi.fileTypes.SyntaxHighlighter
- isInContext(com.intellij.psi.PsiFile,I):Z
f:com.intellij.codeInsight.template.InvokeActionResult
- com.intellij.codeInsight.template.Result
- <init>(java.lang.Runnable):V
- equalsToText(java.lang.String,com.intellij.psi.PsiElement):Z
- getAction():java.lang.Runnable
- handleFocused(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,I,I):V
c:com.intellij.codeInsight.template.ListResult
- com.intellij.codeInsight.template.Result
- <init>(java.util.List):V
- equalsToText(java.lang.String,com.intellij.psi.PsiElement):Z
- getComponents():java.util.List
- handleFocused(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,I,I):V
f:com.intellij.codeInsight.template.LiveTemplateBuilder
- <init>():V
- <init>(Z,I):V
- buildTemplate():com.intellij.codeInsight.template.impl.TemplateImpl
- createMarker(I):com.intellij.codeInsight.template.LiveTemplateBuilder$Marker
- findVarOccurence(java.lang.String):Z
- getText():java.lang.CharSequence
- insertTemplate(I,com.intellij.codeInsight.template.impl.TemplateImpl,java.util.Map):I
- insertText(I,java.lang.String,Z):V
- s:isEndVariable(java.lang.String):Z
- length():I
- setIsToReformat(Z):V
f:com.intellij.codeInsight.template.LiveTemplateBuilder$Marker
- getEndOffset():I
- getStartOffset():I
c:com.intellij.codeInsight.template.PsiElementResult
- com.intellij.codeInsight.template.Result
- <init>(com.intellij.psi.PsiElement):V
- equalsToText(java.lang.String,com.intellij.psi.PsiElement):Z
- getElement():com.intellij.psi.PsiElement
- handleFocused(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,I,I):V
a:com.intellij.codeInsight.template.TemplateEditingAdapter
- com.intellij.codeInsight.template.TemplateEditingListener
- <init>():V
- beforeTemplateFinished(com.intellij.codeInsight.template.impl.TemplateState,com.intellij.codeInsight.template.Template):V
- currentVariableChanged(com.intellij.codeInsight.template.impl.TemplateState,com.intellij.codeInsight.template.Template,I,I):V
- templateCancelled(com.intellij.codeInsight.template.Template):V
- templateFinished(com.intellij.codeInsight.template.Template,Z):V
- waitingForInput(com.intellij.codeInsight.template.Template):V
f:com.intellij.codeInsight.template.TemplateResultListener
- com.intellij.codeInsight.template.TemplateEditingAdapter
- <init>(kotlin.jvm.functions.Function1):V
- templateCancelled(com.intellij.codeInsight.template.Template):V
- templateFinished(com.intellij.codeInsight.template.Template,Z):V
e:com.intellij.codeInsight.template.TemplateResultListener$TemplateResult
- java.lang.Enum
- sf:BrokenOff:com.intellij.codeInsight.template.TemplateResultListener$TemplateResult
- sf:Canceled:com.intellij.codeInsight.template.TemplateResultListener$TemplateResult
- sf:Finished:com.intellij.codeInsight.template.TemplateResultListener$TemplateResult
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeInsight.template.TemplateResultListener$TemplateResult
- s:values():com.intellij.codeInsight.template.TemplateResultListener$TemplateResult[]
com.intellij.codeInsight.template.TemplateSubstitutor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:substituteTemplate(com.intellij.codeInsight.template.impl.TemplateSubstitutionContext,com.intellij.codeInsight.template.impl.TemplateImpl):com.intellij.codeInsight.template.impl.TemplateImpl
c:com.intellij.codeInsight.template.impl.CustomLiveTemplateLookupElement
- com.intellij.codeInsight.template.impl.LiveTemplateLookupElement
- <init>(com.intellij.codeInsight.template.CustomLiveTemplateBase,java.lang.String,java.lang.String,java.lang.String,Z,Z):V
- expandTemplate(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- getCustomLiveTemplate():com.intellij.codeInsight.template.CustomLiveTemplateBase
- p:getItemText():java.lang.String
- getTemplateShortcut():C
- handleInsert(com.intellij.codeInsight.completion.InsertionContext):V
com.intellij.codeInsight.template.impl.DefaultLiveTemplatesProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getDefaultLiveTemplateFiles():java.lang.String[]
- a:getHiddenLiveTemplateFiles():java.lang.String[]
f:com.intellij.codeInsight.template.impl.InvokeTemplateAction
- com.intellij.openapi.actionSystem.DefaultActionGroup
- <init>(com.intellij.codeInsight.template.impl.TemplateImpl,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,java.util.Set):V
- <init>(com.intellij.codeInsight.template.impl.TemplateImpl,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,java.util.Set,java.lang.Runnable):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:extractMnemonic(java.lang.String,java.util.Set):java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getTemplate():com.intellij.codeInsight.template.impl.TemplateImpl
- perform():V
- performInCommand():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.codeInsight.template.impl.ListTemplatesHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- <init>():V
- s:filterTemplatesByPrefix(java.util.Collection,com.intellij.openapi.editor.Editor,I,Z,Z):java.util.Map
- s:getCustomTemplatesLookupItems(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):com.intellij.util.containers.MultiMap
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- s:showTemplatesLookup(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,java.util.Map):V
f:com.intellij.codeInsight.template.impl.LiveTemplateCompletionContributor
- com.intellij.codeInsight.completion.CompletionContributor
- com.intellij.openapi.project.DumbAware
- <init>():V
- s:customTemplateAvailableAndHasCompletionItem(java.lang.Character,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I):Z
- s:findFullMatchedApplicableTemplate(com.intellij.openapi.editor.Editor,I,java.util.Collection):com.intellij.codeInsight.template.impl.TemplateImpl
- s:setShowTemplatesInTests(Z,com.intellij.openapi.Disposable):V
- s:shouldShowAllTemplates():Z
a:com.intellij.codeInsight.template.impl.LiveTemplateLookupElement
- com.intellij.codeInsight.lookup.LookupElement
- f:sudden:Z
- getAutoCompletionPolicy():com.intellij.codeInsight.lookup.AutoCompletionPolicy
- p:getItemText():java.lang.String
- getLookupString():java.lang.String
- a:getTemplateShortcut():C
- isWorthShowingInAutoPopup():Z
- renderElement(com.intellij.codeInsight.lookup.LookupElementPresentation):V
c:com.intellij.codeInsight.template.impl.LiveTemplateLookupElementImpl
- com.intellij.codeInsight.template.impl.LiveTemplateLookupElement
- <init>(com.intellij.codeInsight.template.impl.TemplateImpl,Z):V
- equals(java.lang.Object):Z
- getLookupString():java.lang.String
- getTemplate():com.intellij.codeInsight.template.impl.TemplateImpl
- getTemplateShortcut():C
- handleInsert(com.intellij.codeInsight.completion.InsertionContext):V
- hashCode():I
- s:startTemplate(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.template.Template):V
f:com.intellij.codeInsight.template.impl.LiveTemplatesConfigurable
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- <init>():V
- apply():V
- createComponent():javax.swing.JComponent
- s:displayName():java.lang.String
- disposeUIResources():V
- enableSearch(java.lang.String):java.lang.Runnable
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- getTemplateListPanel():com.intellij.codeInsight.template.impl.TemplateListPanel
- isModified():Z
- reset():V
f:com.intellij.codeInsight.template.impl.TemplateEditorUtil
- s:createEditor(Z,com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):com.intellij.openapi.editor.Editor
- s:createEditor(Z,java.lang.CharSequence):com.intellij.openapi.editor.Editor
- s:createEditor(Z,java.lang.CharSequence,com.intellij.codeInsight.template.impl.TemplateContext):com.intellij.openapi.editor.Editor
- s:disposeTemplateEditor(com.intellij.openapi.editor.Editor):V
- s:setHighlighter(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.TemplateContextType):V
- s:setHighlighter(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.impl.TemplateContext):V
f:com.intellij.codeInsight.template.impl.TemplateExpandShortcutPanel
- javax.swing.JPanel
- <init>(java.lang.String):V
- getSelectedChar():C
- getSelectedString():java.lang.String
- setSelectedChar(C):V
f:com.intellij.codeInsight.template.impl.TemplateGroup
- com.intellij.openapi.options.ExternalizableScheme
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String):V
- containsTemplate(java.lang.String,java.lang.String):Z
- getReplace():java.lang.String
- isModified():Z
- setModified(Z):V
f:com.intellij.codeInsight.template.impl.TemplateImplUtil
- <init>():V
- s:findVariableAtOffset(java.lang.CharSequence,I):com.intellij.openapi.util.TextRange
- s:isValidVariable(java.lang.String):Z
- s:isValidVariableName(java.lang.String):Z
- s:parseVariableNames(java.lang.CharSequence):java.util.LinkedHashSet
- s:parseVariables(java.lang.CharSequence):java.util.Map
c:com.intellij.codeInsight.template.impl.TemplateListPanel
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- sf:ABBREVIATION:java.lang.String
- sf:TEMPLATE_COMPARATOR:java.util.Comparator
- <init>():V
- addTemplate(com.intellij.codeInsight.template.impl.TemplateImpl):V
- apply():V
- dispose():V
- editTemplate(com.intellij.codeInsight.template.impl.TemplateImpl):V
- getPreferredFocusedComponent():javax.swing.JComponent
- isModified():Z
- reset():V
f:com.intellij.codeInsight.template.impl.TemplateManagerImpl
- com.intellij.codeInsight.template.TemplateManager
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.project.Project):V
- s:copyWithDummyIdentifier(com.intellij.codeInsight.completion.OffsetsInFile,I,I,java.lang.String):com.intellij.codeInsight.completion.OffsetsInFile
- createTemplate(java.lang.String,java.lang.String):com.intellij.codeInsight.template.Template
- createTemplate(java.lang.String,java.lang.String,java.lang.String):com.intellij.codeInsight.template.Template
- dispose():V
- findMatchingTemplates(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.Character,com.intellij.codeInsight.template.impl.TemplateSettings):java.util.Map
- finishTemplate(com.intellij.openapi.editor.Editor):Z
- getActiveTemplate(com.intellij.openapi.editor.Editor):com.intellij.codeInsight.template.Template
- s:getAllContextTypes():java.util.List
- s:getApplicableContextTypes(com.intellij.codeInsight.template.TemplateActionContext):java.util.Set
- s:getTemplateState(com.intellij.openapi.editor.Editor):com.intellij.codeInsight.template.impl.TemplateState
- s:isApplicable(com.intellij.codeInsight.template.CustomLiveTemplate,com.intellij.codeInsight.template.TemplateActionContext):Z
- s:isApplicable(com.intellij.codeInsight.template.impl.TemplateImpl,com.intellij.codeInsight.template.TemplateActionContext):Z
- s:isApplicable(com.intellij.codeInsight.template.impl.TemplateImpl,java.util.Set):Z
- s:isApplicable(com.intellij.psi.PsiFile,I,com.intellij.codeInsight.template.impl.TemplateImpl):Z
- s:listApplicableCustomTemplates(com.intellij.codeInsight.template.TemplateActionContext):java.util.List
- s:listApplicableTemplateWithInsertingDummyIdentifier(com.intellij.codeInsight.template.TemplateActionContext):java.util.List
- s:listApplicableTemplates(com.intellij.codeInsight.template.TemplateActionContext):java.util.List
- prepareTemplate(com.intellij.openapi.editor.Editor,C,com.intellij.util.PairProcessor):java.lang.Runnable
- runTemplate(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.Template):com.intellij.codeInsight.template.impl.TemplateState
- s:setTemplateTesting(com.intellij.openapi.Disposable):V
- shouldSkipInTests():Z
- startNonCustomTemplates(java.util.Map,com.intellij.openapi.editor.Editor,com.intellij.util.PairProcessor):java.lang.Runnable
- startTemplate(com.intellij.openapi.editor.Editor,C):Z
- startTemplate(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.Template):V
- startTemplate(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.Template,com.intellij.codeInsight.template.TemplateEditingListener):V
- startTemplate(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.Template,com.intellij.codeInsight.template.TemplateEditingListener,com.intellij.util.PairProcessor):V
- startTemplate(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.Template,Z,java.util.Map,com.intellij.codeInsight.template.TemplateEditingListener):V
- startTemplate(com.intellij.openapi.editor.Editor,java.lang.String,com.intellij.codeInsight.template.Template):V
- startTemplateWithPrefix(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.impl.TemplateImpl,I,com.intellij.util.PairProcessor,java.lang.String):V
- startTemplateWithPrefix(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.impl.TemplateImpl,com.intellij.util.PairProcessor,java.lang.String):V
f:com.intellij.codeInsight.template.impl.TemplateSettings
- com.intellij.openapi.components.PersistentStateComponent
- sf:CUSTOM_CHAR:C
- sf:DEFAULT_CHAR:C
- sf:ENTER_CHAR:C
- sf:NONE_CHAR:C
- sf:SPACE_CHAR:C
- sf:TAB_CHAR:C
- sf:TEMPLATE:java.lang.String
- sf:USER_GROUP_NAME:java.lang.String
- <init>():V
- <init>(com.intellij.openapi.options.SchemeManagerFactory):V
- addTemplate(com.intellij.codeInsight.template.Template):V
- collectMatchingCandidates(java.lang.String,java.lang.Character,Z):java.util.List
- findPluginForPredefinedTemplate(com.intellij.codeInsight.template.impl.TemplateImpl):com.intellij.internal.statistic.utils.PluginInfo
- getDefaultShortcutChar():C
- getDefaultTemplate(com.intellij.codeInsight.template.impl.TemplateImpl):com.intellij.codeInsight.template.impl.TemplateImpl
- getDeletedTemplates():java.util.List
- s:getInstance():com.intellij.codeInsight.template.impl.TemplateSettings
- getLastSelectedTemplateGroup():java.lang.String
- getLastSelectedTemplateKey():java.lang.String
- getMaxKeyLength():I
- getShortcutChar(com.intellij.codeInsight.template.impl.TemplateImpl):C
- getState():com.intellij.codeInsight.template.impl.TemplateSettings$State
- getTemplate(java.lang.String,java.lang.String):com.intellij.codeInsight.template.impl.TemplateImpl
- getTemplateById(java.lang.String):com.intellij.codeInsight.template.Template
- getTemplateGroups():java.util.List
- getTemplates():com.intellij.codeInsight.template.impl.TemplateImpl[]
- getTemplates(java.lang.String):java.util.Collection
- getTemplatesAsList():java.util.Collection
- loadState(com.intellij.codeInsight.template.impl.TemplateSettings$State):V
- s:readTemplateFromElement(java.lang.String,org.jdom.Element,java.lang.ClassLoader):com.intellij.codeInsight.template.impl.TemplateImpl
- s:readTemplateFromElement(java.lang.String,org.jdom.Element,java.lang.ClassLoader,com.intellij.codeInsight.template.LiveTemplateContextService):com.intellij.codeInsight.template.impl.TemplateImpl
- removeTemplate(com.intellij.codeInsight.template.Template):V
- reset():V
- s:serializeTemplate(com.intellij.codeInsight.template.impl.TemplateImpl,com.intellij.codeInsight.template.impl.TemplateImpl,kotlin.Lazy):org.jdom.Element
- setDefaultShortcutChar(C):V
- setLastSelectedTemplate(java.lang.String,java.lang.String):V
- setTemplates(java.util.List):V
f:com.intellij.codeInsight.template.impl.TemplateSettings$TemplateKey
- <init>():V
- equals(java.lang.Object):Z
- getGroupName():java.lang.String
- getKey():java.lang.String
- hashCode():I
- s:keyOf(com.intellij.codeInsight.template.impl.TemplateImpl):com.intellij.codeInsight.template.impl.TemplateSettings$TemplateKey
- setGroupName(java.lang.String):V
- setKey(java.lang.String):V
f:com.intellij.codeInsight.template.impl.WrapWithCustomTemplateAction
- com.intellij.openapi.actionSystem.AnAction
- <init>(com.intellij.codeInsight.template.CustomLiveTemplate,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,java.util.Set):V
- <init>(com.intellij.codeInsight.template.CustomLiveTemplate,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,java.util.Set,java.lang.Runnable):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- perform():V
f:com.intellij.codeInsight.template.impl.actions.ListTemplatesAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- com.intellij.openapi.project.DumbAware
- <init>():V
c:com.intellij.codeInsight.template.impl.actions.SurroundWithTemplateAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- <init>():V
- p:getHandler():com.intellij.codeInsight.CodeInsightActionHandler
a:com.intellij.codeInsight.template.impl.editorActions.TypedActionHandlerBase
- com.intellij.openapi.editor.actionSystem.TypedActionHandlerEx
- pf:myOriginalHandler:com.intellij.openapi.editor.actionSystem.TypedActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.TypedActionHandler):V
- beforeExecute(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.actionSystem.ActionPlan):V
a:com.intellij.codeInsight.template.macro.BaseCompleteMacro
- com.intellij.codeInsight.template.Macro
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,Z):V
- f:calculateResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- getDefaultValue():java.lang.String
- getName():java.lang.String
- pa:invokeCompletionHandler(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- s:waitForNextTab():V
c:com.intellij.codeInsight.template.macro.CapitalizeMacro
- com.intellij.codeInsight.template.macro.MacroBase
- <init>():V
- p:calculateResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext,Z):com.intellij.codeInsight.template.Result
c:com.intellij.codeInsight.template.macro.CompleteMacro
- com.intellij.codeInsight.template.macro.BaseCompleteMacro
- <init>():V
- <init>(Z):V
- p:invokeCompletionHandler(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
f:com.intellij.codeInsight.template.macro.CompleteSmartMacro
- com.intellij.codeInsight.template.macro.BaseCompleteMacro
- <init>():V
c:com.intellij.codeInsight.template.macro.EnumMacro
- com.intellij.codeInsight.template.Macro
- <init>():V
- calculateLookupItems(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateQuickResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- calculateResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- getName():java.lang.String
- getPresentableName():java.lang.String
a:com.intellij.codeInsight.template.macro.MacroBase
- com.intellij.codeInsight.template.Macro
- <init>(java.lang.String,java.lang.String):V
- calculateQuickResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- calculateResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- pa:calculateResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext,Z):com.intellij.codeInsight.template.Result
- getDefaultValue():java.lang.String
- getName():java.lang.String
- getPresentableName():java.lang.String
- s:getTextResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):java.lang.String
- s:getTextResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext,Z):java.lang.String
a:com.intellij.codeInsight.template.macro.SimpleMacro
- com.intellij.codeInsight.template.Macro
- p:<init>(java.lang.String):V
- calculateQuickResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- calculateResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- pa:evaluateSimpleMacro(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):java.lang.String
- getDefaultValue():java.lang.String
- getName():java.lang.String
c:com.intellij.codeInsight.template.postfix.completion.PostfixTemplateLookupElement
- com.intellij.codeInsight.template.impl.CustomLiveTemplateLookupElement
- <init>(com.intellij.codeInsight.template.postfix.templates.PostfixLiveTemplate,com.intellij.codeInsight.template.postfix.templates.PostfixTemplate,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider,Z):V
- expandTemplate(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- getPostfixTemplate():com.intellij.codeInsight.template.postfix.templates.PostfixTemplate
- getProvider():com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider
- renderElement(com.intellij.codeInsight.lookup.LookupElementPresentation):V
a:com.intellij.codeInsight.template.postfix.settings.PostfixTemplateEditorBase
- com.intellij.codeInsight.template.postfix.templates.editable.PostfixTemplateEditor
- pf:myApplyToTheTopmostJBCheckBox:com.intellij.ui.components.JBCheckBox
- pf:myEditTemplateAndConditionsPanel:javax.swing.JPanel
- pf:myExpressionTypesList:com.intellij.ui.components.JBList
- pf:myExpressionTypesListModel:javax.swing.DefaultListModel
- pf:myProvider:com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider
- pf:myTemplateEditor:com.intellij.openapi.editor.Editor
- <init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider,com.intellij.openapi.editor.Editor,Z):V
- <init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider,Z):V
- ps:createEditor(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):com.intellij.openapi.editor.Editor
- dispose():V
- pa:fillConditions(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- getHelpId():java.lang.String
- setTemplate(com.intellij.codeInsight.template.postfix.templates.PostfixTemplate):V
- pf:showAddExpressionTypePopup(com.intellij.ui.AnActionButton):V
pf:com.intellij.codeInsight.template.postfix.settings.PostfixTemplateEditorBase$AddConditionAction
- com.intellij.openapi.project.DumbAwareAction
- <init>(com.intellij.codeInsight.template.postfix.settings.PostfixTemplateEditorBase,com.intellij.codeInsight.template.postfix.templates.editable.PostfixTemplateExpressionCondition):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.codeInsight.template.postfix.settings.PostfixTemplateStorage
- com.intellij.openapi.util.SimpleModificationTracker
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- s:getInstance():com.intellij.codeInsight.template.postfix.settings.PostfixTemplateStorage
- getState():org.jdom.Element
- getTemplates(com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):java.util.Set
- loadState(org.jdom.Element):V
- setTemplates(com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider,java.util.Collection):V
a:com.intellij.codeInsight.template.postfix.templates.ElseExpressionPostfixTemplateBase
- com.intellij.codeInsight.template.postfix.templates.SurroundPostfixTemplateBase
- p:<init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector):V
- p:getWrappedExpression(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
f:com.intellij.codeInsight.template.postfix.templates.EmptyPostfixTemplateProvider
- com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider
- <init>():V
- afterExpand(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):V
- getId():java.lang.String
- getTemplates():java.util.Set
- isTerminalSymbol(C):Z
- preCheck(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiFile
- preExpand(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):V
a:com.intellij.codeInsight.template.postfix.templates.IfPostfixTemplateBase
- com.intellij.codeInsight.template.postfix.templates.SurroundPostfixTemplateBase
- p:<init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector):V
f:com.intellij.codeInsight.template.postfix.templates.LanguagePostfixTemplate
- com.intellij.lang.LanguageExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:LANG_EP:com.intellij.codeInsight.template.postfix.templates.LanguagePostfixTemplate
c:com.intellij.codeInsight.template.postfix.templates.NotPostfixTemplate
- com.intellij.codeInsight.template.postfix.templates.PostfixTemplateWithExpressionSelector
- <init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector):V
- <init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector):V
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- p:expandForChooseExpression(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
c:com.intellij.codeInsight.template.postfix.templates.ParenthesizedPostfixTemplate
- com.intellij.codeInsight.template.postfix.templates.PostfixTemplateWithExpressionSelector
- <init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector):V
- <init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- p:expandForChooseExpression(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
c:com.intellij.codeInsight.template.postfix.templates.PostfixLiveTemplate
- com.intellij.codeInsight.template.CustomLiveTemplateBase
- sf:POSTFIX_TEMPLATE_ID:java.lang.String
- <init>():V
- computeTemplateKey(com.intellij.codeInsight.template.CustomTemplateCallback):java.lang.String
- computeTemplateKeyWithoutContextChecking(com.intellij.codeInsight.template.CustomTemplateCallback):java.lang.String
- s:copyFile(com.intellij.psi.PsiFile,java.lang.StringBuilder):com.intellij.psi.PsiFile
- expand(java.lang.String,com.intellij.codeInsight.template.CustomTemplateCallback):V
- s:expandTemplate(java.lang.String,com.intellij.codeInsight.template.CustomTemplateCallback,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider,com.intellij.codeInsight.template.postfix.templates.PostfixTemplate):V
- getAllTemplateKeys(com.intellij.psi.PsiFile,I):java.util.Set
- getLookupElements(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I):java.util.Collection
- getShortcut():C
- getTitle():java.lang.String
- hasCompletionItem(com.intellij.codeInsight.template.CustomTemplateCallback,I):Z
- isApplicable(com.intellij.codeInsight.template.CustomTemplateCallback,I,Z):Z
- s:isApplicableTemplate(com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider,java.lang.String,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):Z
- supportsMultiCaret():Z
- supportsWrapping():Z
- wrap(java.lang.String,com.intellij.codeInsight.template.CustomTemplateCallback):V
a:com.intellij.codeInsight.template.postfix.templates.PostfixTemplate
- com.intellij.openapi.project.PossiblyDumbAware
- p:<init>(java.lang.String,java.lang.String):V
- p:<init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- p:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- p:calcDescription():java.lang.String
- equals(java.lang.Object):Z
- a:expand(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- getDescription():java.lang.String
- getExample():java.lang.String
- getId():java.lang.String
- f:getKey():java.lang.String
- getPresentableName():java.lang.String
- getProvider():com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider
- hashCode():I
- a:isApplicable(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I):Z
- isBuiltin():Z
- isEditable():Z
- isEnabled(com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):Z
- startInWriteAction():Z
com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector
- a:getExpressions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I):java.util.List
- a:getRenderer():com.intellij.util.Function
- a:hasExpression(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I):Z
a:com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelectorBase
- com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector
- pf:myAdditionalCondition:com.intellij.openapi.util.Condition
- <init>(com.intellij.openapi.util.Condition):V
- p:getBorderOffsetFilter(I):com.intellij.openapi.util.Condition
- getExpressions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I):java.util.List
- p:getFilters(I):com.intellij.openapi.util.Condition
- pa:getNonFilteredExpressions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I):java.util.List
- p:getPsiErrorFilter():com.intellij.openapi.util.Condition
- getRenderer():com.intellij.util.Function
- hasExpression(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I):Z
com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider
- a:afterExpand(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):V
- createEditor(com.intellij.codeInsight.template.postfix.templates.PostfixTemplate):com.intellij.codeInsight.template.postfix.templates.editable.PostfixTemplateEditor
- getId():java.lang.String
- getPresentableName():java.lang.String
- a:getTemplates():java.util.Set
- a:isTerminalSymbol(C):Z
- a:preCheck(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I):com.intellij.psi.PsiFile
- a:preExpand(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):V
- readExternalTemplate(java.lang.String,java.lang.String,org.jdom.Element):com.intellij.codeInsight.template.postfix.templates.PostfixTemplate
- writeExternalTemplate(com.intellij.codeInsight.template.postfix.templates.PostfixTemplate,org.jdom.Element):V
a:com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo
- <init>():V
- a:createExpression(com.intellij.psi.PsiElement,java.lang.String,java.lang.String):com.intellij.psi.PsiElement
- a:getNegatedExpression(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
a:com.intellij.codeInsight.template.postfix.templates.PostfixTemplateWithExpressionSelector
- com.intellij.codeInsight.template.postfix.templates.PostfixTemplate
- p:<init>(java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector):V
- p:<init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector):V
- p:<init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- p:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- f:expand(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- pa:expandForChooseExpression(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- isApplicable(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I):Z
- p:prepareAndExpandForChooseExpression(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- startInWriteAction():Z
f:com.intellij.codeInsight.template.postfix.templates.PostfixTemplatesUtils
- sf:CONDITIONS_TAG:java.lang.String
- sf:CONDITION_TAG:java.lang.String
- sf:TOPMOST_ATTR:java.lang.String
- s:generateTemplateId(java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):java.lang.String
- s:getAvailableTemplates(com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):java.util.Set
- s:readExternalConditions(org.jdom.Element,com.intellij.util.Function):java.util.Set
- s:readExternalLiveTemplate(org.jdom.Element,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):com.intellij.codeInsight.template.impl.TemplateImpl
- s:readExternalTopmostAttribute(org.jdom.Element):Z
- s:showErrorHint(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- s:surround(com.intellij.lang.surroundWith.Surrounder,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- s:writeExternalTemplate(com.intellij.codeInsight.template.postfix.templates.PostfixTemplate,org.jdom.Element):V
a:com.intellij.codeInsight.template.postfix.templates.StringBasedPostfixTemplate
- com.intellij.codeInsight.template.postfix.templates.PostfixTemplateWithExpressionSelector
- sf:EXPR:java.lang.String
- <init>(java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector):V
- <init>(java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- createTemplate(com.intellij.codeInsight.template.TemplateManager,java.lang.String):com.intellij.codeInsight.template.Template
- expandForChooseExpression(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- p:getElementToRemove(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:getTemplateString(com.intellij.psi.PsiElement):java.lang.String
- setVariables(com.intellij.codeInsight.template.Template,com.intellij.psi.PsiElement):V
- p:shouldReformat():Z
a:com.intellij.codeInsight.template.postfix.templates.SurroundPostfixTemplateBase
- com.intellij.codeInsight.template.postfix.templates.PostfixTemplateWithExpressionSelector
- pf:myPsiInfo:com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo
- p:<init>(java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector):V
- p:<init>(java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplatePsiInfo,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateExpressionSelector,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- p:createNew(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- f:expandForChooseExpression(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- p:getHead():java.lang.String
- p:getReplacedExpression(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- pa:getSurrounder():com.intellij.lang.surroundWith.Surrounder
- p:getTail():java.lang.String
- p:getWrappedExpression(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
f:com.intellij.codeInsight.template.postfix.templates.editable.DefaultPostfixTemplateEditor
- com.intellij.codeInsight.template.postfix.templates.editable.PostfixTemplateEditor
- <init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider,com.intellij.codeInsight.template.postfix.templates.PostfixTemplate):V
- createTemplate(java.lang.String,java.lang.String):com.intellij.codeInsight.template.postfix.templates.PostfixTemplate
- dispose():V
- getComponent():javax.swing.JComponent
a:com.intellij.codeInsight.template.postfix.templates.editable.EditablePostfixTemplate
- com.intellij.codeInsight.template.postfix.templates.PostfixTemplate
- <init>(java.lang.String,java.lang.String,com.intellij.codeInsight.template.impl.TemplateImpl,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.impl.TemplateImpl,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- p:addTemplateVariables(com.intellij.psi.PsiElement,com.intellij.codeInsight.template.Template):V
- equals(java.lang.Object):Z
- f:expand(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- p:getElementRenderer():com.intellij.util.Function
- p:getElementToRemove(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- pa:getExpressions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I):java.util.List
- getLiveTemplate():com.intellij.codeInsight.template.impl.TemplateImpl
- getProvider():com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider
- p:getRangeToRemove(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- hashCode():I
- isApplicable(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I):Z
a:com.intellij.codeInsight.template.postfix.templates.editable.EditablePostfixTemplateWithMultipleExpressions
- com.intellij.codeInsight.template.postfix.templates.editable.EditablePostfixTemplate
- pf:myExpressionConditions:java.util.Set
- pf:myUseTopmostExpression:Z
- p:<init>(java.lang.String,java.lang.String,com.intellij.codeInsight.template.impl.TemplateImpl,java.lang.String,java.util.Set,Z,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- p:<init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.impl.TemplateImpl,java.lang.String,java.util.Set,Z,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- ps:createTemplate(java.lang.String):com.intellij.codeInsight.template.impl.TemplateImpl
- equals(java.lang.Object):Z
- p:getElementToRemove(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- p:getExpressionCompositeCondition():com.intellij.openapi.util.Condition
- getExpressionConditions():java.util.Set
- pa:getTopmostExpression(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- hashCode():I
- isUseTopmostExpression():Z
f:com.intellij.codeInsight.template.postfix.templates.editable.PostfixChangedBuiltinTemplate
- com.intellij.codeInsight.template.postfix.templates.editable.PostfixTemplateWrapper
- <init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplate,com.intellij.codeInsight.template.postfix.templates.PostfixTemplate):V
- equals(java.lang.Object):Z
- getBuiltinTemplate():com.intellij.codeInsight.template.postfix.templates.PostfixTemplate
- hashCode():I
- isBuiltin():Z
com.intellij.codeInsight.template.postfix.templates.editable.PostfixTemplateEditor
- com.intellij.openapi.Disposable
- a:createTemplate(java.lang.String,java.lang.String):com.intellij.codeInsight.template.postfix.templates.PostfixTemplate
- a:getComponent():javax.swing.JComponent
- getHelpId():java.lang.String
com.intellij.codeInsight.template.postfix.templates.editable.PostfixTemplateExpressionCondition
- com.intellij.openapi.util.Condition
- sf:ID_ATTR:java.lang.String
- a:equals(java.lang.Object):Z
- a:getId():java.lang.String
- a:getPresentableName():java.lang.String
- a:hashCode():I
- serializeTo(org.jdom.Element):V
- a:value(com.intellij.psi.PsiElement):Z
c:com.intellij.codeInsight.template.postfix.templates.editable.PostfixTemplateWrapper
- com.intellij.codeInsight.template.postfix.templates.PostfixTemplate
- <init>(com.intellij.codeInsight.template.postfix.templates.PostfixTemplate):V
- <init>(java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInsight.template.postfix.templates.PostfixTemplate,com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):V
- equals(java.lang.Object):Z
- expand(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- getDelegate():com.intellij.codeInsight.template.postfix.templates.PostfixTemplate
- getDescription():java.lang.String
- hashCode():I
- isApplicable(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,I):Z
- isBuiltin():Z
- isEditable():Z
- isEnabled(com.intellij.codeInsight.template.postfix.templates.PostfixTemplateProvider):Z
- startInWriteAction():Z
a:com.intellij.codeInsight.unwrap.AbstractUnwrapper
- com.intellij.codeInsight.unwrap.Unwrapper
- <init>(java.lang.String):V
- collectAffectedElements(com.intellij.psi.PsiElement,java.util.List):com.intellij.psi.PsiElement
- collectElementsToIgnore(com.intellij.psi.PsiElement,java.util.Set):V
- pa:createContext():com.intellij.codeInsight.unwrap.AbstractUnwrapper$AbstractContext
- pa:doUnwrap(com.intellij.psi.PsiElement,com.intellij.codeInsight.unwrap.AbstractUnwrapper$AbstractContext):V
- getDescription(com.intellij.psi.PsiElement):java.lang.String
- a:isApplicableTo(com.intellij.psi.PsiElement):Z
- unwrap(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):java.util.List
a:com.intellij.codeInsight.unwrap.AbstractUnwrapper$AbstractContext
- pf:myElementsToExtract:java.util.List
- p:myIsEffective:Z
- <init>():V
- addElementToExtract(com.intellij.psi.PsiElement):V
- p:addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- delete(com.intellij.psi.PsiElement):V
- deleteExactly(com.intellij.psi.PsiElement):V
- p:extract(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- extractElement(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- f:isEffective():Z
- pa:isWhiteSpace(com.intellij.psi.PsiElement):Z
f:com.intellij.codeInsight.unwrap.LanguageUnwrappers
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.codeInsight.unwrap.LanguageUnwrappers
- <init>():V
f:com.intellij.codeInsight.unwrap.RangeSplitter
- <init>():V
- s:split(com.intellij.openapi.util.TextRange,java.util.List):java.util.List
f:com.intellij.codeInsight.unwrap.ScopeHighlighter
- sf:NATURAL_RANGER:com.intellij.util.NotNullFunction
- <init>(com.intellij.openapi.editor.Editor):V
- <init>(com.intellij.openapi.editor.Editor,com.intellij.util.NotNullFunction):V
- addHighlights(java.util.List,com.intellij.openapi.editor.colors.TextAttributesKey):V
- dropHighlight():V
- highlight(com.intellij.openapi.util.Pair):V
- highlight(com.intellij.psi.PsiElement,java.util.List):V
com.intellij.codeInsight.unwrap.UnwrapDescriptor
- a:collectUnwrappers(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- a:shouldTryToRestoreCaretPosition():Z
- a:showOptionsDialog():Z
a:com.intellij.codeInsight.unwrap.UnwrapDescriptorBase
- com.intellij.codeInsight.unwrap.UnwrapDescriptor
- <init>():V
- collectUnwrappers(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- pa:createUnwrappers():com.intellij.codeInsight.unwrap.Unwrapper[]
- p:findTargetElement(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- f:getUnwrappers():com.intellij.codeInsight.unwrap.Unwrapper[]
- shouldTryToRestoreCaretPosition():Z
- showOptionsDialog():Z
com.intellij.codeInsight.unwrap.Unwrapper
- a:collectAffectedElements(com.intellij.psi.PsiElement,java.util.List):com.intellij.psi.PsiElement
- a:collectElementsToIgnore(com.intellij.psi.PsiElement,java.util.Set):V
- a:getDescription(com.intellij.psi.PsiElement):java.lang.String
- a:isApplicableTo(com.intellij.psi.PsiElement):Z
- a:unwrap(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):java.util.List
f:com.intellij.codeInspection.ProblematicWhitespaceInspection
- com.intellij.codeInspection.LocalInspectionTool
- <init>():V
- buildVisitor(com.intellij.codeInspection.ProblemsHolder,Z):com.intellij.psi.PsiElementVisitor
a:com.intellij.codeInspection.actions.AbstractPerformFixesTask
- com.intellij.util.SequentialTask
- pf:myQuickfixClass:java.lang.Class
- <init>(com.intellij.openapi.project.Project,com.intellij.codeInspection.CommonProblemDescriptor[],java.lang.Class):V
- pf:applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.CommonProblemDescriptor):V
- pa:collectFix(com.intellij.codeInspection.QuickFix,com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.openapi.project.Project):com.intellij.modcommand.ModCommandExecutor$BatchExecutionResult
- f:isApplicableFixFound():Z
com.intellij.codeInspection.actions.CleanupInspectionUtil
- applyFixes(com.intellij.openapi.project.Project,java.lang.String,java.util.List,java.lang.Class,Z):com.intellij.codeInspection.actions.AbstractPerformFixesTask
- a:applyFixesNoSort(com.intellij.openapi.project.Project,java.lang.String,java.util.List,java.lang.Class,Z):com.intellij.codeInspection.actions.AbstractPerformFixesTask
- applyFixesNoSort(com.intellij.openapi.project.Project,java.lang.String,java.util.List,java.lang.Class,Z,Z):com.intellij.codeInspection.actions.AbstractPerformFixesTask
- s:getInstance():com.intellij.codeInspection.actions.CleanupInspectionUtil
- sortDescriptions(java.util.List):java.util.List
c:com.intellij.codeInspection.actions.CodeInspectionAction
- com.intellij.analysis.BaseAnalysisAction
- p:myExternalProfile:com.intellij.codeInspection.ex.InspectionProfileImpl
- <init>():V
- <init>(java.lang.String,java.lang.String):V
- p:analyze(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope):V
- p:canceled():V
- p:createConfigurable(com.intellij.profile.codeInspection.ProjectInspectionProfileManager,com.intellij.application.options.schemes.SchemesCombo):com.intellij.codeInspection.actions.CodeInspectionAction$ExternalProfilesComboboxAwareInspectionToolsConfigurable
- p:getAdditionalActionSettings(com.intellij.openapi.project.Project,com.intellij.analysis.BaseAnalysisActionDialog):javax.swing.JComponent
- p:getHelpTopic():java.lang.String
- p:runInspections(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope):V
pc:com.intellij.codeInspection.actions.CodeInspectionAction$ExternalProfilesComboboxAwareInspectionToolsConfigurable
- com.intellij.profile.codeInspection.ui.header.InspectionToolsConfigurable
- <init>(com.intellij.profile.codeInspection.ProjectInspectionProfileManager,com.intellij.application.options.schemes.SchemesCombo):V
- p:applyRootProfile(java.lang.String,Z):V
- p:getCurrentProfile():com.intellij.codeInspection.ex.InspectionProfileImpl
f:com.intellij.codeInspection.actions.GotoInspectionModel
- com.intellij.ide.util.gotoByName.SimpleChooseByNameModel
- <init>(com.intellij.openapi.project.Project):V
- getElementName(java.lang.Object):java.lang.String
- getElementsByName(java.lang.String,java.lang.String):java.lang.Object[]
- getListCellRenderer():javax.swing.ListCellRenderer
- getNames():java.lang.String[]
f:com.intellij.codeInspection.actions.InspectionElement
- com.intellij.psi.impl.FakePsiElement
- sf:EMPTY_ARRAY:com.intellij.codeInspection.actions.InspectionElement[]
- <init>(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.psi.PsiManager):V
- getManager():com.intellij.psi.PsiManager
- getParent():com.intellij.psi.PsiElement
- getPresentation():com.intellij.navigation.ItemPresentation
- getToolWrapper():com.intellij.codeInspection.ex.InspectionToolWrapper
f:com.intellij.codeInspection.actions.RunInspectionAction
- com.intellij.ide.actions.GotoActionBase
- com.intellij.openapi.actionSystem.DataProvider
- <init>():V
- <init>(java.lang.String):V
- getData(java.lang.String):java.lang.Object
- s:runInspection(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):V
- s:runInspection(com.intellij.openapi.project.Project,java.lang.String,com.intellij.openapi.vfs.VirtualFile[],com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):V
f:com.intellij.codeInspection.actions.RunInspectionIntention
- com.intellij.codeInsight.intention.HighPriorityAction
- com.intellij.codeInsight.intention.IntentionAction
- <init>(com.intellij.codeInsight.daemon.HighlightDisplayKey):V
- s:createContext(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ex.InspectionManagerEx,com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.GlobalInspectionContextImpl
- s:createProfile(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ex.InspectionManagerEx,com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.InspectionProfileImpl
- getFamilyName():java.lang.String
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- s:rerunInspection(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ex.InspectionManagerEx,com.intellij.analysis.AnalysisScope,com.intellij.psi.PsiElement):V
- s:selectScopeAndRunInspection(java.lang.String,com.intellij.analysis.AnalysisScope,com.intellij.openapi.module.Module,com.intellij.psi.PsiElement,com.intellij.openapi.project.Project):V
- startInWriteAction():Z
c:com.intellij.codeInspection.actions.SilentCodeCleanupAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getInspectionScope(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.project.Project):com.intellij.analysis.AnalysisScope
- p:getPostRunnable():java.lang.Runnable
- p:getProfileForSilentCleanup(com.intellij.openapi.project.Project):com.intellij.codeInspection.InspectionProfile
- p:runInspections(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.codeInspection.actions.ViewOfflineResultsAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:showOfflineView(com.intellij.openapi.project.Project,java.lang.String,java.util.Map,java.lang.String):com.intellij.codeInspection.ui.InspectionResultsView
- s:showOfflineView(com.intellij.openapi.project.Project,java.util.Map,com.intellij.codeInspection.ex.InspectionProfileImpl,java.lang.String):com.intellij.codeInspection.ui.InspectionResultsView
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.codeInspection.ex.ApplicationInspectionProfileManager
- com.intellij.codeInspection.ex.ApplicationInspectionProfileManagerBase
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.codeInspection.ex.ApplicationInspectionProfileManager$Companion
- <init>():V
- <init>(com.intellij.openapi.options.SchemeManagerFactory):V
- fireProfileChanged(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- f:forceInitProfilesInTestUntil(com.intellij.openapi.Disposable):V
- sf:getInstanceImpl():com.intellij.codeInspection.ex.ApplicationInspectionProfileManager
- f:getRootProfileName():java.lang.String
- getState():org.jdom.Element
- loadProfile(java.lang.String):com.intellij.codeInspection.ex.InspectionProfileImpl
- loadState(org.jdom.Element):V
f:com.intellij.codeInspection.ex.ApplicationInspectionProfileManager$Companion
- f:getInstanceImpl():com.intellij.codeInspection.ex.ApplicationInspectionProfileManager
c:com.intellij.codeInspection.ex.CustomEditInspectionToolsSettingsAction
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.openapi.util.Iconable
- <init>(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.openapi.util.Computable):V
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getFamilyName():java.lang.String
- getIcon(I):javax.swing.Icon
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
f:com.intellij.codeInspection.ex.Descriptor
- <init>(com.intellij.codeInspection.ex.ScopeToolState,com.intellij.codeInspection.ex.InspectionProfileModifiableModel,com.intellij.openapi.project.Project):V
- s:createConfigElement(com.intellij.codeInspection.ex.InspectionToolWrapper):org.jdom.Element
- equals(java.lang.Object):Z
- getConfig():org.jdom.Element
- getEditorAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- getGroup():java.lang.String[]
- getInspectionProfile():com.intellij.codeInspection.ex.InspectionProfileModifiableModel
- getKey():com.intellij.codeInsight.daemon.HighlightDisplayKey
- getLevel():com.intellij.codeHighlighting.HighlightDisplayLevel
- getScope():com.intellij.psi.search.scope.packageSet.NamedScope
- getScopeName():java.lang.String
- getShortName():java.lang.String
- getState():com.intellij.codeInspection.ex.ScopeToolState
- getText():java.lang.String
- getToolWrapper():com.intellij.codeInspection.ex.InspectionToolWrapper
- hashCode():I
- isEnabled():Z
- loadConfig():V
- loadDescription():java.lang.String
- setEnabled(Z):V
f:com.intellij.codeInspection.ex.DescriptorComposer
- com.intellij.codeInspection.ex.HTMLComposerImpl
- <init>(com.intellij.codeInspection.ui.InspectionToolPresentation):V
- compose(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefEntity):V
- compose(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.CommonProblemDescriptor):V
- s:quickFixTexts(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.ui.InspectionToolPresentation):java.lang.String[]
c:com.intellij.codeInspection.ex.DisableInspectionToolAction
- com.intellij.codeInspection.IntentionAndQuickFixAction
- com.intellij.openapi.project.DumbAware
- com.intellij.openapi.util.Iconable
- <init>(com.intellij.codeInsight.daemon.HighlightDisplayKey):V
- <init>(com.intellij.codeInspection.LocalInspectionTool):V
- applyFix(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):V
- getFamilyName():java.lang.String
- getIcon(I):javax.swing.Icon
- getName():java.lang.String
- s:getNameText():java.lang.String
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
f:com.intellij.codeInspection.ex.EditInspectionToolsSettingsAction
- com.intellij.codeInsight.intention.HighPriorityAction
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.openapi.project.DumbAware
- com.intellij.openapi.util.Iconable
- <init>(com.intellij.codeInsight.daemon.HighlightDisplayKey):V
- s:editSettings(com.intellij.openapi.project.Project,com.intellij.codeInspection.ex.InspectionProfileImpl,java.util.function.Consumer):Z
- editToolSettings(com.intellij.openapi.project.Project,com.intellij.codeInspection.ex.InspectionProfileImpl):Z
- s:editToolSettings(com.intellij.openapi.project.Project,com.intellij.codeInspection.ex.InspectionProfileImpl,java.lang.String):Z
- getFamilyName():java.lang.String
- getIcon(I):javax.swing.Icon
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
c:com.intellij.codeInspection.ex.InspectionManagerEx
- com.intellij.codeInspection.InspectionManagerBase
- <init>(com.intellij.openapi.project.Project):V
- createNewGlobalContext():com.intellij.codeInspection.ex.GlobalInspectionContextImpl
- createNewGlobalContext(Z):com.intellij.codeInspection.ex.GlobalInspectionContextImpl
- createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.ProblemHighlightType,com.intellij.codeInspection.HintAction,Z,com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.ProblemDescriptor
- getContentManager():com.intellij.openapi.util.NotNullLazyValue
- p:getProblemsViewContentManager(com.intellij.openapi.project.Project):com.intellij.ui.content.ContentManager
- getRunningContexts():java.util.Set
a:com.intellij.codeInspection.ex.InspectionRVContentProvider
- <init>():V
- pa:appendDescriptor(com.intellij.codeInspection.ex.GlobalInspectionContextImpl,com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ex.InspectionRVContentProvider$RefEntityContainer,com.intellij.codeInspection.ui.InspectionTreeNode):V
- appendToolNodeContent(com.intellij.codeInspection.ex.GlobalInspectionContextImpl,com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ui.InspectionTreeNode,Z,Z):V
- a:appendToolNodeContent(com.intellij.codeInspection.ex.GlobalInspectionContextImpl,com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ui.InspectionTreeNode,Z,Z,java.util.Map,java.util.function.Function):V
- p:buildTree(com.intellij.codeInspection.ex.GlobalInspectionContextImpl,java.util.Map,com.intellij.codeInspection.ex.InspectionToolWrapper,java.util.function.Function,Z,com.intellij.codeInspection.ui.InspectionTreeNode,com.intellij.codeInspection.ui.InspectionTreeModel):V
- a:checkReportedProblems(com.intellij.codeInspection.ex.GlobalInspectionContextImpl,com.intellij.codeInspection.ex.InspectionToolWrapper):Z
- ps:getCommonFixes(com.intellij.codeInspection.ui.InspectionToolPresentation,com.intellij.codeInspection.CommonProblemDescriptor[]):com.intellij.codeInspection.ex.QuickFixAction[]
- a:getCommonQuickFixes(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ui.InspectionTree,com.intellij.codeInspection.CommonProblemDescriptor[],com.intellij.codeInspection.reference.RefEntity[]):com.intellij.codeInspection.ex.QuickFixAction[]
- getPartialQuickFixes(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ui.InspectionTree,com.intellij.codeInspection.CommonProblemDescriptor[]):com.intellij.codeInspection.ex.QuickFixAction[]
- getTools(com.intellij.codeInspection.ex.Tools):java.lang.Iterable
- hasQuickFixes(com.intellij.openapi.actionSystem.AnActionEvent):Z
- isContentLoaded():Z
pc:com.intellij.codeInspection.ex.InspectionRVContentProvider$RefEntityContainer
- <init>(com.intellij.codeInspection.reference.RefEntity,java.lang.Object[]):V
- createNode(com.intellij.codeInspection.ui.InspectionToolPresentation,com.intellij.codeInspection.ui.InspectionTreeModel,com.intellij.codeInspection.ui.InspectionTreeNode,Z):com.intellij.codeInspection.ui.RefElementNode
- getDescriptors():java.lang.Object[]
- getModule(com.intellij.openapi.project.Project):com.intellij.openapi.module.Module
- p:getModuleName():java.lang.String
- getRefEntity():com.intellij.codeInspection.reference.RefEntity
f:com.intellij.codeInspection.ex.InspectionRVContentProviderImpl
- com.intellij.codeInspection.ex.InspectionRVContentProvider
- <init>():V
- appendToolNodeContent(com.intellij.codeInspection.ex.GlobalInspectionContextImpl,com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ui.InspectionTreeNode,Z,Z,java.util.Map,java.util.function.Function):V
- checkReportedProblems(com.intellij.codeInspection.ex.GlobalInspectionContextImpl,com.intellij.codeInspection.ex.InspectionToolWrapper):Z
- getCommonQuickFixes(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ui.InspectionTree,com.intellij.codeInspection.CommonProblemDescriptor[],com.intellij.codeInspection.reference.RefEntity[]):com.intellij.codeInspection.ex.QuickFixAction[]
a:com.intellij.codeInspection.ex.QuickFixAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- sf:EMPTY:com.intellij.codeInspection.ex.QuickFixAction[]
- pf:myToolWrapper:com.intellij.codeInspection.ex.InspectionToolWrapper
- p:<init>(java.lang.String,com.intellij.codeInspection.ex.InspectionToolWrapper):V
- p:<init>(java.lang.String,javax.swing.Icon,javax.swing.KeyStroke,com.intellij.codeInspection.ex.InspectionToolWrapper):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ex.GlobalInspectionContextImpl,com.intellij.codeInspection.CommonProblemDescriptor[],java.util.Set):com.intellij.modcommand.ModCommandExecutor$BatchExecutionResult
- p:applyFix(com.intellij.codeInspection.reference.RefEntity[]):Z
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- ps:getInvoker(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.codeInspection.ui.InspectionResultsView
- getText():java.lang.String
- p:isProblemDescriptorsAcceptable():Z
- p:performFixesInBatch(com.intellij.openapi.project.Project,java.util.List,com.intellij.codeInspection.ex.GlobalInspectionContextImpl,java.util.Set):V
- ps:refreshViews(com.intellij.openapi.project.Project,com.intellij.codeInspection.reference.RefEntity[],com.intellij.codeInspection.ex.InspectionToolWrapper):V
- s:removeElements(com.intellij.codeInspection.reference.RefEntity[],com.intellij.openapi.project.Project,com.intellij.codeInspection.ex.InspectionToolWrapper):V
- p:startInWriteAction():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.codeInspection.export.ExportToHTMLDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,Z):V
- f:apply():V
- f:reset():V
f:com.intellij.codeInspection.incorrectFormatting.IncorrectFormattingInspection
- com.intellij.codeInspection.LocalInspectionTool
- kotlinOnly:Z
- reportPerFile:Z
- <init>():V
- <init>(Z,Z):V
- b:<init>(Z,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- checkFile(com.intellij.psi.PsiFile,com.intellij.codeInspection.InspectionManager,Z):com.intellij.codeInspection.ProblemDescriptor[]
- getDefaultLevel():com.intellij.codeHighlighting.HighlightDisplayLevel
- getOptionsPane():com.intellij.codeInspection.options.OptPane
- isEnabledByDefault():Z
- runForWholeFile():Z
com.intellij.codeInspection.longLine.LongLineInspectionPolicy
- a:ignoreLongLineFor(com.intellij.psi.PsiElement):Z
a:com.intellij.codeInspection.naming.AbstractNamingConventionInspection
- com.intellij.codeInspection.LocalInspectionTool
- p:<init>(java.lang.Iterable,java.lang.String):V
- p:checkName(com.intellij.psi.PsiNameIdentifierOwner,java.lang.String,com.intellij.codeInspection.ProblemsHolder):V
- p:checkName(com.intellij.psi.PsiNameIdentifierOwner,java.util.function.Consumer):V
- p:createErrorMessage(java.lang.String,java.lang.String):java.lang.String
- pa:createRenameFix():com.intellij.codeInspection.LocalQuickFix
- getNamingConventionBean(java.lang.String):com.intellij.codeInspection.naming.NamingConventionBean
- getOldToolNames():java.util.Set
- getOptionController():com.intellij.codeInspection.options.OptionController
- getOptionsPane():com.intellij.codeInspection.options.OptPane
- isConventionEnabled(java.lang.String):Z
- readSettings(org.jdom.Element):V
- p:registerConvention(com.intellij.codeInspection.naming.NamingConvention):V
- p:registerConventionsListener(com.intellij.openapi.extensions.ExtensionPointName):V
- setEnabled(Z,java.lang.String):V
- p:unregisterConvention(com.intellij.codeInspection.naming.NamingConvention):V
- writeSettings(org.jdom.Element):V
a:com.intellij.codeInspection.naming.AbstractNamingConventionMerger
- com.intellij.codeInspection.ex.InspectionElementsMergerBase
- <init>(com.intellij.codeInspection.naming.AbstractNamingConventionInspection):V
- p:areSettingsMerged(java.util.Map,org.jdom.Element):Z
- getMergedToolName():java.lang.String
- getSourceToolNames():java.lang.String[]
- p:transformElement(java.lang.String,org.jdom.Element,org.jdom.Element):org.jdom.Element
a:com.intellij.codeInspection.naming.NamingConvention
- <init>():V
- a:createDefaultBean():com.intellij.codeInspection.naming.NamingConventionBean
- createErrorMessage(java.lang.String,com.intellij.codeInspection.naming.NamingConventionBean):java.lang.String
- a:getElementDescription():java.lang.String
- a:getShortName():java.lang.String
- a:isApplicable(com.intellij.psi.PsiNameIdentifierOwner):Z
- isEnabledByDefault():Z
- isValid(com.intellij.psi.PsiNameIdentifierOwner,com.intellij.codeInspection.naming.NamingConventionBean):Z
c:com.intellij.codeInspection.naming.NamingConventionBean
- m_maxLength:I
- m_minLength:I
- m_regex:java.lang.String
- p:m_regexPattern:java.util.regex.Pattern
- <init>(java.lang.String,I,I,java.lang.String[]):V
- equals(java.lang.Object):Z
- getOptionController():com.intellij.codeInspection.options.OptionController
- getOptionsPane():com.intellij.codeInspection.options.OptPane
- hashCode():I
- initPattern():V
- isValid(java.lang.String):Z
f:com.intellij.codeInspection.naming.NamingConventionWithFallbackBean
- com.intellij.codeInspection.naming.NamingConventionBean
- inheritDefaultSettings:Z
- <init>(java.lang.String,I,I,java.lang.String[]):V
- equals(java.lang.Object):Z
- getOptionController():com.intellij.codeInspection.options.OptionController
- getOptionsPane():com.intellij.codeInspection.options.OptPane
- hashCode():I
- isInheritDefaultSettings():Z
f:com.intellij.codeInspection.offlineViewer.OfflineViewParseUtil
- s:parse(java.io.Reader):java.util.Map
- s:parse(java.lang.String):java.util.Map
- s:parse(java.nio.file.Path):java.util.Map
- s:parseProfileName(java.io.Reader):java.lang.String
- s:parseProfileName(java.lang.String):java.lang.String
- s:parseProfileName(java.nio.file.Path):java.lang.String
c:com.intellij.codeInspection.ui.DefaultInspectionToolPresentation
- com.intellij.codeInspection.DefaultInspectionToolResultExporter
- com.intellij.codeInspection.ui.InspectionToolPresentation
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- p:myContext:com.intellij.codeInspection.ex.GlobalInspectionContextImpl
- <init>(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ex.GlobalInspectionContextImpl):V
- addProblemElement(com.intellij.codeInspection.reference.RefEntity,Z,com.intellij.codeInspection.CommonProblemDescriptor[]):V
- cleanup():V
- p:filterResolvedItems():Z
- findQuickFixes(com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.codeInspection.reference.RefEntity,java.lang.String):com.intellij.codeInspection.QuickFix
- getComposer():com.intellij.codeInspection.ex.HTMLComposerImpl
- getContext():com.intellij.codeInspection.ex.GlobalInspectionContextImpl
- getDescriptions(com.intellij.codeInspection.reference.RefEntity):com.intellij.codeInspection.CommonProblemDescriptor[]
- getQuickFixes(com.intellij.codeInspection.reference.RefEntity[]):com.intellij.codeInspection.ex.QuickFixAction[]
- getSuppressedProblems(com.intellij.codeInspection.reference.RefEntity):com.intellij.codeInspection.CommonProblemDescriptor[]
- ignoreElement(com.intellij.codeInspection.reference.RefEntity):V
- p:isDisposed():Z
- isSuppressed(com.intellij.codeInspection.CommonProblemDescriptor):Z
- isSuppressed(com.intellij.codeInspection.reference.RefEntity):Z
f:com.intellij.codeInspection.ui.InspectionGroupNode
- com.intellij.codeInspection.ui.InspectionTreeNode
- appearsBold():Z
- getPresentableText():java.lang.String
c:com.intellij.codeInspection.ui.InspectionNode
- com.intellij.codeInspection.ui.InspectionTreeNode
- <init>(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ex.InspectionProfileImpl,com.intellij.codeInspection.ui.InspectionTreeNode):V
- getPresentableText():java.lang.String
- getTailText():java.lang.String
- getToolWrapper():com.intellij.codeInspection.ex.InspectionToolWrapper
f:com.intellij.codeInspection.ui.InspectionNodeInfo
- javax.swing.JPanel
- <init>(com.intellij.codeInspection.ui.InspectionTree,com.intellij.openapi.project.Project):V
- s:stripUIRefsFromInspectionDescription(java.lang.String):java.lang.String
f:com.intellij.codeInspection.ui.InspectionResultsView
- javax.swing.JPanel
- com.intellij.ide.OccurenceNavigator
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- sf:DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:HELP_ID:java.lang.String
- <init>(com.intellij.codeInspection.ex.GlobalInspectionContextImpl,com.intellij.codeInspection.ex.InspectionRVContentProvider):V
- addTools(java.util.Collection):V
- areFixesAvailable():Z
- areSettingsEnabled():Z
- dispatchTreeUpdate():V
- dispose():V
- getCurrentProfile():com.intellij.codeInspection.ex.InspectionProfileImpl
- getGlobalInspectionContext():com.intellij.codeInspection.ex.GlobalInspectionContextImpl
- getNextOccurenceActionName():java.lang.String
- getPreviousOccurenceActionName():java.lang.String
- getProject():com.intellij.openapi.project.Project
- getProvider():com.intellij.codeInspection.ex.InspectionRVContentProvider
- getScope():com.intellij.analysis.AnalysisScope
- getTree():com.intellij.codeInspection.ui.InspectionTree
- getViewTitle():java.lang.String
- goNextOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- goPreviousOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- hasNextOccurence():Z
- hasPreviousOccurence():Z
- hasProblems():Z
- s:hasProblems(java.util.Collection,com.intellij.codeInspection.ex.GlobalInspectionContextImpl,com.intellij.codeInspection.ex.InspectionRVContentProvider):Z
- initAdditionalGearActions(com.intellij.openapi.wm.ToolWindow):V
- isDisposed():Z
- isRerun():Z
- isRerunAvailable():Z
- isSingleInspectionRun():Z
- isUpdating():Z
- rerun():V
- setApplyingFix(Z):V
- setUpdating(Z):V
- s:showPopup(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.ui.popup.JBPopup):V
- syncRightPanel():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- update():V
- updateResults(java.util.Collection):V
f:com.intellij.codeInspection.ui.InspectionRootNode
- com.intellij.codeInspection.ui.InspectionTreeNode
- appearsBold():Z
- getPresentableText():java.lang.String
com.intellij.codeInspection.ui.InspectionToolPresentation
- com.intellij.codeInspection.InspectionToolResultExporter
- a:cleanup():V
- createRefNode(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.ui.InspectionTreeModel,com.intellij.codeInspection.ui.InspectionTreeNode):com.intellij.codeInspection.ui.RefElementNode
- a:findQuickFixes(com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.codeInspection.reference.RefEntity,java.lang.String):com.intellij.codeInspection.QuickFix
- a:getComposer():com.intellij.codeInspection.ex.HTMLComposerImpl
- a:getContext():com.intellij.codeInspection.ex.GlobalInspectionContextImpl
- getCustomActionsPanel(com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.openapi.Disposable):javax.swing.JComponent
- getCustomPreviewPanel(com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.openapi.Disposable):javax.swing.JComponent
- getCustomPreviewPanel(com.intellij.codeInspection.reference.RefEntity):javax.swing.JComponent
- a:getQuickFixes(com.intellij.codeInspection.reference.RefEntity[]):com.intellij.codeInspection.ex.QuickFixAction[]
- a:getSuppressedProblems(com.intellij.codeInspection.reference.RefEntity):com.intellij.codeInspection.CommonProblemDescriptor[]
- a:getToolWrapper():com.intellij.codeInspection.ex.InspectionToolWrapper
- isDummy():Z
- a:isSuppressed(com.intellij.codeInspection.CommonProblemDescriptor):Z
- a:isSuppressed(com.intellij.codeInspection.reference.RefEntity):Z
- patchToolNode(com.intellij.codeInspection.ui.InspectionTreeNode,com.intellij.codeInspection.ex.InspectionRVContentProvider,Z,Z):V
- shouldAlignCustomActionPanelToLeft():Z
- showProblemCount():Z
f:com.intellij.codeInspection.ui.InspectionTree
- com.intellij.ui.treeStructure.Tree
- <init>(com.intellij.codeInspection.ui.InspectionResultsView):V
- s:findWrapper(java.lang.Object[]):com.intellij.codeInspection.ex.InspectionToolWrapper
- getContext():com.intellij.codeInspection.ex.GlobalInspectionContextImpl
- getInspectionTreeModel():com.intellij.codeInspection.ui.InspectionTreeModel
- getRoot():com.intellij.codeInspection.ui.InspectionTreeNode
- getSelectedDescriptorPacks(Z,java.util.Set,Z,javax.swing.tree.TreePath[]):java.util.List
- getSelectedDescriptors(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.codeInspection.CommonProblemDescriptor[]
- s:getSelectedElement(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.psi.PsiElement
- getSelectedElements():com.intellij.codeInspection.reference.RefEntity[]
- getSelectedGroupPath():java.lang.String[]
- s:getSelectedRefElements(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.codeInspection.reference.RefEntity[]
- getSelectedToolWrapper(Z):com.intellij.codeInspection.ex.InspectionToolWrapper
- getSelectionPaths():javax.swing.tree.TreePath[]
- getToolTipText(java.awt.event.MouseEvent):java.lang.String
- removeSelectedProblems():V
- selectNode(com.intellij.codeInspection.ui.InspectionTreeNode):V
f:com.intellij.codeInspection.ui.InspectionTreeModel
- com.intellij.ui.tree.BaseTreeModel
- com.intellij.util.concurrency.InvokerSupplier
- <init>():V
- createCustomNode(java.lang.Object,java.util.function.Supplier,com.intellij.codeInspection.ui.InspectionTreeNode):com.intellij.codeInspection.ui.InspectionTreeNode
- createProblemDescriptorNode(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.codeInspection.ui.InspectionToolPresentation,com.intellij.codeInspection.ui.InspectionTreeNode):V
- createRefElementNode(com.intellij.codeInspection.reference.RefEntity,java.util.function.Supplier,com.intellij.codeInspection.ui.InspectionTreeNode):com.intellij.codeInspection.ui.RefElementNode
- getChildCount(java.lang.Object):I
- getChildren(java.lang.Object):java.util.List
- getIndexOfChild(java.lang.Object,java.lang.Object):I
- getInvoker():com.intellij.util.concurrency.Invoker
- getParent(com.intellij.codeInspection.ui.InspectionTreeNode):com.intellij.codeInspection.ui.InspectionTreeNode
- getRoot():com.intellij.codeInspection.ui.InspectionRootNode
- isLeaf(java.lang.Object):Z
- reload():V
- remove(com.intellij.codeInspection.ui.InspectionTreeNode):V
- traverse(com.intellij.codeInspection.ui.InspectionTreeNode):com.intellij.util.containers.JBIterable
a:com.intellij.codeInspection.ui.InspectionTreeNode
- javax.swing.tree.TreeNode
- p:<init>(com.intellij.codeInspection.ui.InspectionTreeNode):V
- amnestyElement():V
- appearsBold():Z
- children():java.util.Enumeration
- p:doesNeedInternProblemLevels():Z
- excludeElement():V
- getAllowsChildren():Z
- getChildAt(I):com.intellij.codeInspection.ui.InspectionTreeNode
- getChildCount():I
- getChildren():java.util.List
- getContainingFileLocalEntity():com.intellij.codeInspection.reference.RefEntity
- getIcon(Z):javax.swing.Icon
- getIndex(javax.swing.tree.TreeNode):I
- getParent():com.intellij.codeInspection.ui.InspectionTreeNode
- a:getPresentableText():java.lang.String
- getTailText():java.lang.String
- isExcluded():Z
- isLeaf():Z
- isValid():Z
- p:visitProblemSeverities(it.unimi.dsi.fastutil.objects.Object2IntMap):V
a:com.intellij.codeInspection.ui.InspectionTreeTailRenderer
- <init>(com.intellij.codeInspection.ex.GlobalInspectionContextImpl):V
- appendTailText(com.intellij.codeInspection.ui.InspectionTreeNode):V
- pa:appendText(java.lang.String):V
- pa:appendText(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
f:com.intellij.codeInspection.ui.PreviewEditorFoldingRegion
- java.lang.Comparable
- <init>(I,I):V
- compareTo(com.intellij.codeInspection.ui.PreviewEditorFoldingRegion):I
- contain(I):Z
- getEndLine():I
- getStartLine():I
c:com.intellij.codeInspection.ui.ProblemDescriptionNode
- com.intellij.codeInspection.ui.InspectionTreeNode
- pf:myElement:com.intellij.codeInspection.reference.RefEntity
- pf:myLineNumber:I
- <init>(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.codeInspection.ui.InspectionToolPresentation,com.intellij.codeInspection.ui.InspectionTreeNode):V
- p:<init>(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.CommonProblemDescriptor,com.intellij.codeInspection.ui.InspectionToolPresentation,java.util.function.IntSupplier,com.intellij.codeInspection.ui.InspectionTreeNode):V
- amnestyElement():V
- p:calculateIsValid():Z
- p:calculatePresentableName():java.lang.String
- canSuppress():Z
- excludeElement():V
- getDescriptor():com.intellij.codeInspection.CommonProblemDescriptor
- getElement():com.intellij.codeInspection.reference.RefEntity
- getLineNumber():I
- getSuppressContent():com.intellij.openapi.util.Pair
- getTailText():java.lang.String
- getToolTipText():java.lang.String
- getToolWrapper():com.intellij.codeInspection.ex.InspectionToolWrapper
- f:isAlreadySuppressedFromView():Z
- isExcluded():Z
- isQuickFixAppliedFromView():Z
- needCalculateTooltip():Z
- p:visitProblemSeverities(it.unimi.dsi.fastutil.objects.Object2IntMap):V
f:com.intellij.codeInspection.ui.ProblemPreviewEditorPresentation
- <init>():V
- s:setupFoldings(com.intellij.openapi.editor.ex.EditorEx,java.util.SortedSet):V
- s:setupFoldingsAndHighlightProblems(com.intellij.openapi.editor.ex.EditorEx,java.awt.Container,java.util.List,com.intellij.openapi.project.Project):V
c:com.intellij.codeInspection.ui.RefElementNode
- com.intellij.codeInspection.ui.InspectionTreeNode
- <init>(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.ui.InspectionToolPresentation,com.intellij.codeInspection.ui.InspectionTreeNode):V
- amnestyElement():V
- p:calculateIsValid():Z
- p:calculatePresentableName():java.lang.String
- excludeElement():V
- getContainingFileLocalEntity():com.intellij.codeInspection.reference.RefEntity
- getElement():com.intellij.codeInspection.reference.RefEntity
- getIcon(Z):javax.swing.Icon
- getSuppressContent():com.intellij.openapi.util.Pair
- getTailText():java.lang.String
- f:isAlreadySuppressedFromView():Z
- isExcluded():Z
- isQuickFixAppliedFromView():Z
a:com.intellij.codeInspection.ui.actions.InspectionResultsExportActionProvider
- com.intellij.codeInspection.ui.actions.InspectionViewActionBase
- sf:Companion:com.intellij.codeInspection.ui.actions.InspectionResultsExportActionProvider$Companion
- sf:LOCATION_KEY:java.lang.String
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- additionalSettings():javax.swing.JPanel
- a:getProgressTitle():java.lang.String
- f:getPropertyGraph():com.intellij.openapi.observable.properties.PropertyGraph
- onExportSuccessful():V
- a:writeResults(com.intellij.codeInspection.ui.InspectionTree,com.intellij.codeInspection.ex.InspectionProfileImpl,com.intellij.codeInspection.ex.GlobalInspectionContextImpl,com.intellij.openapi.project.Project,java.nio.file.Path):V
f:com.intellij.codeInspection.ui.actions.InspectionResultsExportActionProvider$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
f:com.intellij.codeInspection.ui.actions.InspectionResultsExportActionProvider$ExportDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.codeInspection.ui.actions.InspectionResultsExportActionProvider,com.intellij.codeInspection.ui.InspectionResultsView):V
- f:getLocation():java.lang.String
- f:getPath():java.nio.file.Path
- f:getView():com.intellij.codeInspection.ui.InspectionResultsView
- f:setLocation(java.lang.String):V
a:com.intellij.codeInspection.ui.actions.InspectionViewActionBase
- com.intellij.openapi.actionSystem.AnAction
- <init>(java.util.function.Supplier):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- ps:getToolWrapper(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.codeInspection.ex.InspectionToolWrapper
- s:getView(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.codeInspection.ui.InspectionResultsView
- p:isEnabled(com.intellij.codeInspection.ui.InspectionResultsView,com.intellij.openapi.actionSystem.AnActionEvent):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.conversion.ArtifactsSettings
- a:getArtifacts():java.util.Collection
com.intellij.conversion.ComponentManagerSettings
- a:getComponentElement(java.lang.String):org.jdom.Element
- a:getPath():java.nio.file.Path
- a:getRootElement():org.jdom.Element
com.intellij.conversion.ConversionContext
- a:collapsePath(java.lang.String):java.lang.String
- a:createProjectSettings(java.lang.String):com.intellij.conversion.ComponentManagerSettings
- a:expandPath(java.lang.String):java.lang.String
- a:getCompilerSettings():com.intellij.conversion.ComponentManagerSettings
- a:getModulePaths():java.util.List
- a:getModuleSettings(java.lang.String):com.intellij.conversion.ModuleSettings
- a:getModuleSettings(java.nio.file.Path):com.intellij.conversion.ModuleSettings
- a:getProjectBaseDir():java.nio.file.Path
- a:getProjectFile():java.nio.file.Path
- a:getProjectLibrarySettings():com.intellij.conversion.ProjectLibrariesSettings
- a:getProjectRootManagerSettings():com.intellij.conversion.ComponentManagerSettings
- a:getProjectSettings():com.intellij.conversion.ComponentManagerSettings
- a:getSettingsBaseDir():java.nio.file.Path
- a:getStorageScheme():com.intellij.openapi.components.StorageScheme
- a:getWorkspaceSettings():com.intellij.conversion.WorkspaceSettings
a:com.intellij.conversion.ConversionProcessor
- <init>():V
- a:isConversionNeeded(java.lang.Object):Z
- postProcess(java.lang.Object):V
- preProcess(java.lang.Object):V
- a:process(java.lang.Object):V
a:com.intellij.conversion.ConverterProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>():V
- a:createConverter(com.intellij.conversion.ConversionContext):com.intellij.conversion.ProjectConverter
- a:getConversionDescription():java.lang.String
f:com.intellij.conversion.DetachFacetConversionProcessor
- com.intellij.conversion.ConversionProcessor
- <init>(java.lang.String[]):V
- isConversionNeeded(com.intellij.conversion.ModuleSettings):Z
- process(com.intellij.conversion.ModuleSettings):V
com.intellij.conversion.ModuleSettings
- com.intellij.conversion.ComponentManagerSettings
- sf:MODULE_ROOT_MANAGER_COMPONENT:java.lang.String
- a:addExcludedFolder(java.io.File):V
- a:addFacetElement(java.lang.String,java.lang.String,org.jdom.Element):V
- a:collapsePath(java.lang.String):java.lang.String
- a:expandPath(java.lang.String):java.lang.String
- a:getAllModuleDependencies():java.util.Collection
- a:getContentRoots():java.util.Collection
- a:getFacetElement(java.lang.String):org.jdom.Element
- a:getFacetElements(java.lang.String):java.util.Collection
- a:getModuleLibraryRoots(java.lang.String):java.util.List
- a:getModuleName():java.lang.String
- a:getModuleType():java.lang.String
- a:getOrderEntries():java.util.List
- a:getProjectOutputUrl():java.lang.String
- a:getSourceRoots(Z):java.util.Collection
- a:hasModuleLibrary(java.lang.String):Z
- a:setModuleType(java.lang.String):V
a:com.intellij.conversion.ProjectConverter
- <init>():V
- createArtifactsConverter():com.intellij.conversion.ConversionProcessor
- createModuleFileConverter():com.intellij.conversion.ConversionProcessor
- createProjectFileConverter():com.intellij.conversion.ConversionProcessor
- createProjectLibrariesConverter():com.intellij.conversion.ConversionProcessor
- createRunConfigurationsConverter():com.intellij.conversion.ConversionProcessor
- createWorkspaceFileConverter():com.intellij.conversion.ConversionProcessor
- getAdditionalAffectedFiles():java.util.Collection
- getCreatedFiles():java.util.Collection
- isConversionNeeded():Z
- postProcessingFinished():V
- preProcessingFinished():V
- processingFinished():V
com.intellij.conversion.ProjectLibrariesSettings
- a:getProjectLibraries():java.util.Collection
com.intellij.conversion.RunManagerSettings
- a:getRunConfigurations():java.util.Collection
com.intellij.conversion.WorkspaceSettings
- com.intellij.conversion.ComponentManagerSettings
f:com.intellij.conversion.impl.ConversionContextImpl
- com.intellij.conversion.ConversionContext
- sf:Companion:com.intellij.conversion.impl.ConversionContextImpl$Companion
- <init>(java.nio.file.Path):V
- collapsePath(java.lang.String):java.lang.String
- sf:collapsePath(java.lang.String,com.intellij.conversion.ComponentManagerSettings):java.lang.String
- createProjectSettings(java.lang.String):com.intellij.conversion.ComponentManagerSettings
- expandPath(java.lang.String):java.lang.String
- f:expandPath(java.lang.String,com.intellij.conversion.ComponentManagerSettings):java.lang.String
- f:getAllProjectFiles(kotlin.coroutines.Continuation):java.lang.Object
- f:getClassRootPaths(org.jdom.Element,com.intellij.conversion.ModuleSettings):java.util.List
- f:getClassRootUrls(org.jdom.Element,com.intellij.conversion.ModuleSettings):kotlin.sequences.Sequence
- f:getClassRoots(org.jdom.Element,com.intellij.conversion.ModuleSettings):java.util.List
- getCompilerSettings():com.intellij.conversion.ComponentManagerSettings
- getModulePaths():java.util.List
- getModuleSettings(java.lang.String):com.intellij.conversion.ModuleSettings
- getModuleSettings(java.nio.file.Path):com.intellij.conversion.ModuleSettings
- f:getNonExistingModuleFiles():java.util.List
- getProjectBaseDir():java.nio.file.Path
- getProjectFile():java.nio.file.Path
- getProjectLibrarySettings():com.intellij.conversion.ProjectLibrariesSettings
- getProjectRootManagerSettings():com.intellij.conversion.ComponentManagerSettings
- getProjectSettings():com.intellij.conversion.ComponentManagerSettings
- getSettingsBaseDir():java.nio.file.Path
- getStorageScheme():com.intellij.openapi.components.StorageScheme
- getWorkspaceSettings():com.intellij.conversion.WorkspaceSettings
- f:loadConversionResult():com.intellij.conversion.impl.CachedConversionResult
- f:saveConversionResult(kotlin.coroutines.Continuation):java.lang.Object
- f:saveFiles(java.util.Collection):V
f:com.intellij.conversion.impl.ConversionContextImpl$Companion
- f:collapsePath(java.lang.String,com.intellij.conversion.ComponentManagerSettings):java.lang.String
a:com.intellij.execution.console.BaseConsoleExecuteActionHandler
- com.intellij.execution.console.ConsoleExecuteAction$ConsoleExecuteActionHandler
- <init>(Z):V
- p:execute(java.lang.String,com.intellij.execution.console.LanguageConsoleView):V
- getEmptyExecuteAction():java.lang.String
c:com.intellij.execution.console.BasicGutterContentProvider
- com.intellij.execution.console.GutterContentProvider
- sf:EVAL_IN_MARKER:java.lang.String
- sf:EVAL_OUT_MARKER:java.lang.String
- pf:isLineRelationshipComputable:Z
- <init>():V
- <init>(Z):V
- beforeEvaluate(com.intellij.openapi.editor.Editor):V
- doAction(I,com.intellij.openapi.editor.Editor):V
- p:doIsShowSeparatorLine(I,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Document):Z
- drawIcon(I,java.awt.Graphics,I,com.intellij.openapi.editor.Editor):Z
- getText(I,com.intellij.openapi.editor.Editor):java.lang.String
- getToolTip(I,com.intellij.openapi.editor.Editor):java.lang.String
- hasText():Z
- f:isShowSeparatorLine(I,com.intellij.openapi.editor.Editor):Z
c:com.intellij.execution.console.ConsoleConfigurable
- com.intellij.openapi.options.CompositeConfigurable
- com.intellij.openapi.options.SearchableConfigurable
- <init>():V
- addRule(java.lang.String):V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- p:editFoldingsOnly():Z
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- isModified():Z
- reset():V
f:com.intellij.execution.console.ConsoleConfigurableEP
- com.intellij.openapi.options.ConfigurableEP
- <init>():V
c:com.intellij.execution.console.ConsoleExecuteAction
- com.intellij.openapi.project.DumbAwareAction
- <init>(com.intellij.execution.console.LanguageConsoleView,com.intellij.execution.console.BaseConsoleExecuteActionHandler):V
- <init>(com.intellij.execution.console.LanguageConsoleView,com.intellij.execution.console.BaseConsoleExecuteActionHandler,com.intellij.openapi.util.Condition):V
- <init>(com.intellij.execution.console.LanguageConsoleView,com.intellij.execution.console.ConsoleExecuteAction$ConsoleExecuteActionHandler,java.lang.String,com.intellij.openapi.util.Condition):V
- <init>(com.intellij.execution.console.LanguageConsoleView,com.intellij.execution.console.ConsoleExecuteAction$ConsoleExecuteActionHandler,java.lang.String,com.intellij.openapi.util.Condition,javax.swing.Icon):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- execute(com.intellij.openapi.util.TextRange,java.lang.String,com.intellij.openapi.editor.ex.EditorEx):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isEnabled():Z
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.execution.console.ConsoleExecuteAction$ConsoleExecuteActionHandler
- p:beforeExecution(com.intellij.execution.console.LanguageConsoleView):V
- isEmptyCommandExecutionAllowed():Z
- runExecuteAction(com.intellij.execution.console.LanguageConsoleView):V
- f:setAddCurrentToHistory(Z):V
f:com.intellij.execution.console.ConsoleExecutionEditor
- com.intellij.openapi.Disposable
- <init>(com.intellij.execution.console.LanguageConsoleImpl$Helper):V
- dispose():V
- getComponent():javax.swing.JComponent
- getConsolePromptDecorator():com.intellij.execution.console.ConsolePromptDecorator
- getCurrentEditor():com.intellij.openapi.editor.ex.EditorEx
- getDocument():com.intellij.openapi.editor.Document
- getEditor():com.intellij.openapi.editor.ex.EditorEx
- getPrompt():java.lang.String
- getPromptAttributes():com.intellij.execution.ui.ConsoleViewContentType
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- initComponent():V
- isConsoleEditorEnabled():Z
- isEditable():Z
- setConsoleEditorEnabled(Z):V
- setEditable(Z):V
- setInputText(java.lang.String):V
- setPrompt(java.lang.String):V
- setPromptAttributes(com.intellij.execution.ui.ConsoleViewContentType):V
c:com.intellij.execution.console.ConsoleHistoryController
- com.intellij.openapi.Disposable
- <init>(com.intellij.execution.console.ConsoleRootType,java.lang.String,com.intellij.execution.console.LanguageConsoleView):V
- <init>(com.intellij.execution.console.ConsoleRootType,java.lang.String,com.intellij.execution.console.LanguageConsoleView,Z):V
- <init>(com.intellij.execution.console.ConsoleRootType,java.lang.String,java.lang.String,com.intellij.execution.console.LanguageConsoleView):V
- <init>(java.lang.String,java.lang.String,com.intellij.execution.console.LanguageConsoleView):V
- s:addToHistory(com.intellij.execution.console.LanguageConsoleView,java.lang.String):V
- addToHistory(java.lang.String):V
- p:createBrowseAction():com.intellij.execution.console.ConsoleHistoryController$BrowseAction
- dispose():V
- getBrowseHistory():com.intellij.openapi.actionSystem.AnAction
- s:getContentFile(com.intellij.execution.console.ConsoleRootType,java.lang.String,com.intellij.ide.scratch.ScratchFileService$Option):com.intellij.openapi.vfs.VirtualFile
- ps:getContentFile(com.intellij.execution.console.ConsoleRootType,java.lang.String,java.lang.String,com.intellij.ide.scratch.ScratchFileService$Option):com.intellij.openapi.vfs.VirtualFile
- s:getController(com.intellij.execution.console.LanguageConsoleView):com.intellij.execution.console.ConsoleHistoryController
- getHistoryNext():com.intellij.openapi.actionSystem.AnAction
- getHistoryPrev():com.intellij.openapi.actionSystem.AnAction
- hasHistory():Z
- p:insertTextMultiline(java.lang.CharSequence,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Document):I
- install():V
- isMultiline():Z
- loadHistory(java.lang.String):Z
- p:setConsoleText(com.intellij.execution.console.ConsoleHistoryModel$Entry,Z,Z):V
- setModel(com.intellij.execution.console.ConsoleHistoryModel):V
- setMultiline(Z):com.intellij.execution.console.ConsoleHistoryController
pc:com.intellij.execution.console.ConsoleHistoryController$BrowseAction
- com.intellij.openapi.project.DumbAwareAction
- p:<init>(com.intellij.execution.console.ConsoleHistoryController):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getTitle():java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.execution.console.ConsoleHistoryController$ModelHelper
- com.intellij.openapi.vfs.SafeWriteRequestor
- <init>(com.intellij.execution.console.ConsoleRootType,java.lang.String,com.intellij.execution.console.ConsoleHistoryModel):V
- <init>(com.intellij.execution.console.ConsoleRootType,java.lang.String,java.lang.String,com.intellij.execution.console.ConsoleHistoryModel):V
- getContent():java.lang.CharSequence
- getId():java.lang.String
- getModel():com.intellij.execution.console.ConsoleHistoryModel
- loadHistory(java.lang.String):Z
- setContent(java.lang.String):V
com.intellij.execution.console.ConsoleHistoryModel
- com.intellij.openapi.util.ModificationTracker
- a:getCurrentIndex():I
- a:getHistoryNext():com.intellij.execution.console.ConsoleHistoryModel$Entry
- a:getHistoryPrev():com.intellij.execution.console.ConsoleHistoryModel$Entry
- a:hasHistory():Z
- prevOnLastLine():Z
- a:setContent(java.lang.String):V
f:com.intellij.execution.console.ConsoleHistoryModel$Entry
- java.lang.Record
- <init>(java.lang.CharSequence,I):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- offset():I
- text():java.lang.CharSequence
com.intellij.execution.console.ConsoleHistoryModelProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createModel(java.lang.String,com.intellij.execution.console.LanguageConsoleView):com.intellij.execution.console.ConsoleHistoryModel
- s:findModelForConsole(java.lang.String,com.intellij.execution.console.LanguageConsoleView):com.intellij.execution.console.ConsoleHistoryModel
f:com.intellij.execution.console.ConsolePromptDecorator
- com.intellij.openapi.editor.EditorLinePainter
- com.intellij.openapi.editor.TextAnnotationGutterProvider
- sf:Companion:com.intellij.execution.console.ConsolePromptDecorator$Companion
- <init>(com.intellij.openapi.editor.ex.EditorEx):V
- getBgColor(I,com.intellij.openapi.editor.Editor):java.awt.Color
- getColor(I,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.colors.ColorKey
- f:getIndentPrompt():java.lang.String
- getLineExtensions(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I):java.util.Collection
- getLineText(I,com.intellij.openapi.editor.Editor):java.lang.String
- f:getMainPrompt():java.lang.String
- getPopupActions(I,com.intellij.openapi.editor.Editor):java.util.List
- f:getPromptAttributes():com.intellij.execution.ui.ConsoleViewContentType
- getStyle(I,com.intellij.openapi.editor.Editor):com.intellij.openapi.editor.colors.EditorFontType
- getToolTip(I,com.intellij.openapi.editor.Editor):java.lang.String
- gutterClosed():V
- f:setIndentPrompt(java.lang.String):V
- f:setMainPrompt(java.lang.String):V
- f:setPromptAttributes(com.intellij.execution.ui.ConsoleViewContentType):V
- f:update():V
- useMargin():Z
f:com.intellij.execution.console.ConsolePromptDecorator$Companion
a:com.intellij.execution.console.ConsoleRootType
- com.intellij.ide.scratch.RootType
- sf:SEPARATOR:java.lang.String
- p:<init>(java.lang.String,java.lang.String):V
- f:getConsoleTypeId():java.lang.String
- getContentPathName(java.lang.String):java.lang.String
- getDefaultFileExtension():java.lang.String
- getEntrySeparator():java.lang.String
- getHistoryPathName(java.lang.String):java.lang.String
c:com.intellij.execution.console.ConsoleViewWrapperBase
- com.intellij.execution.ui.ConsoleView
- com.intellij.execution.ui.ExecutionConsoleEx
- sf:CONSOLE_VIEW_WRAPPER_VIEW_ID_PREFIX:java.lang.String
- <init>(com.intellij.execution.ui.ConsoleView):V
- addMessageFilter(com.intellij.execution.filters.Filter):V
- allowHeavyFilters():V
- attachToProcess(com.intellij.execution.process.ProcessHandler):V
- buildUi(com.intellij.execution.ui.RunnerLayoutUi):V
- canPause():Z
- clear():V
- createConsoleActions():com.intellij.openapi.actionSystem.AnAction[]
- dispose():V
- getComponent():javax.swing.JComponent
- getContentSize():I
- getDelegate():com.intellij.execution.ui.ConsoleView
- getExecutionConsoleId():java.lang.String
- getPreferredFocusableComponent():javax.swing.JComponent
- hasDeferredOutput():Z
- isOutputPaused():Z
- performWhenNoDeferredOutput(java.lang.Runnable):V
- print(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType):V
- printHyperlink(java.lang.String,com.intellij.execution.filters.HyperlinkInfo):V
- requestScrollingToEnd():V
- scrollTo(I):V
- setHelpId(java.lang.String):V
- setOutputPaused(Z):V
f:com.intellij.execution.console.CustomizableConsoleFoldingBean
- negate:Z
- substring:java.lang.String
com.intellij.execution.console.DuplexConsoleListener
- a:consoleEnabled(Z):V
c:com.intellij.execution.console.DuplexConsoleView
- javax.swing.JPanel
- com.intellij.execution.ui.ConsoleView
- com.intellij.execution.ui.ObservableConsoleView
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- <init>(com.intellij.execution.ui.ConsoleView,com.intellij.execution.ui.ConsoleView):V
- <init>(com.intellij.execution.ui.ConsoleView,com.intellij.execution.ui.ConsoleView,java.lang.String):V
- addChangeListener(com.intellij.execution.ui.ObservableConsoleView$ChangeListener,com.intellij.openapi.Disposable):V
- addMessageFilter(com.intellij.execution.filters.Filter):V
- addSwitchListener(com.intellij.execution.console.DuplexConsoleListener,com.intellij.openapi.Disposable):V
- allowHeavyFilters():V
- attachToProcess(com.intellij.execution.process.ProcessHandler):V
- canPause():Z
- clear():V
- s:create(com.intellij.execution.ui.ConsoleView,com.intellij.execution.ui.ConsoleView,java.lang.String):com.intellij.execution.console.DuplexConsoleView
- createConsoleActions():com.intellij.openapi.actionSystem.AnAction[]
- dispose():V
- enableConsole(Z):V
- getComponent():javax.swing.JComponent
- getContentSize():I
- getPreferredFocusableComponent():javax.swing.JComponent
- getPrimaryConsoleView():com.intellij.execution.ui.ConsoleView
- getSecondaryConsoleView():com.intellij.execution.ui.ConsoleView
- getSubConsoleView(Z):com.intellij.execution.ui.ConsoleView
- getSwitchConsoleActionPresentation():com.intellij.openapi.actionSystem.Presentation
- hasDeferredOutput():Z
- isOutputPaused():Z
- isPrimaryConsoleEnabled():Z
- performWhenNoDeferredOutput(java.lang.Runnable):V
- print(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType):V
- printHyperlink(java.lang.String,com.intellij.execution.filters.HyperlinkInfo):V
- scrollTo(I):V
- setDisableSwitchConsoleActionOnProcessEnd(Z):V
- setHelpId(java.lang.String):V
- setOutputPaused(Z):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
c:com.intellij.execution.console.EditorMergedHorizontalScrollBarLayout
- com.intellij.util.ui.AbstractLayoutManager
- <init>(javax.swing.JScrollBar,com.intellij.openapi.editor.ex.EditorEx,com.intellij.openapi.editor.ex.EditorEx,Z,I):V
- layoutContainer(java.awt.Container):V
- p:normalizeHeights(I,I):com.intellij.execution.console.EditorMergedHorizontalScrollBarLayout$HeightOfComponents
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
pf:com.intellij.execution.console.EditorMergedHorizontalScrollBarLayout$HeightOfComponents
- historyConsoleHeight:I
- inputConsoleHeight:I
- <init>(I,I):V
a:com.intellij.execution.console.GutterContentProvider
- psf:MAX_LINE_END_GUTTER_WIDTH_IN_CHAR:I
- <init>():V
- beforeEvaluate(com.intellij.openapi.editor.Editor):V
- beforeUiComponentUpdate(com.intellij.openapi.editor.Editor):V
- a:doAction(I,com.intellij.openapi.editor.Editor):V
- documentCleared(com.intellij.openapi.editor.Editor):V
- a:drawIcon(I,java.awt.Graphics,I,com.intellij.openapi.editor.Editor):Z
- getLineStartGutterOverlap(com.intellij.openapi.editor.Editor):I
- a:getText(I,com.intellij.openapi.editor.Editor):java.lang.String
- a:getToolTip(I,com.intellij.openapi.editor.Editor):java.lang.String
- a:hasText():Z
- isShowSeparatorLine(I,com.intellij.openapi.editor.Editor):Z
c:com.intellij.execution.console.IdeConsoleRootType
- com.intellij.execution.console.ConsoleRootType
- p:<init>(java.lang.String,java.lang.String):V
c:com.intellij.execution.console.LanguageConsoleImpl
- com.intellij.execution.impl.ConsoleViewImpl
- com.intellij.execution.console.LanguageConsoleView
- sf:Companion:com.intellij.execution.console.LanguageConsoleImpl$Companion
- <init>(com.intellij.execution.console.LanguageConsoleImpl$Helper):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.lang.Language):V
- f:addTextRangeToHistory(com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.ex.EditorEx,Z):java.lang.String
- f:addToHistory(com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.ex.EditorEx,Z):java.lang.String
- pf:addToHistoryInner(com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.ex.EditorEx,Z,Z):java.lang.String
- p:closeFile():V
- p:createCenterComponent():javax.swing.JComponent
- dispose():V
- p:disposeEditor():V
- doAddPromptToHistory():V
- p:doCreateConsoleEditor():com.intellij.openapi.editor.ex.EditorEx
- p:doCreateHistoryEditor():com.intellij.openapi.editor.ex.EditorEx
- getConsoleEditor():com.intellij.openapi.editor.ex.EditorEx
- f:getConsolePromptDecorator():com.intellij.execution.console.ConsolePromptDecorator
- getCurrentEditor():com.intellij.openapi.editor.ex.EditorEx
- getEditorDocument():com.intellij.openapi.editor.Document
- getFile():com.intellij.psi.PsiFile
- f:getHistoryViewer():com.intellij.openapi.editor.ex.EditorEx
- getLanguage():com.intellij.lang.Language
- p:getMinHistoryLineCount():I
- getPreferredFocusableComponent():javax.swing.JComponent
- getPrompt():java.lang.String
- getPromptAttributes():com.intellij.execution.ui.ConsoleViewContentType
- getTitle():java.lang.String
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- isConsoleEditorEnabled():Z
- isEditable():Z
- isHistoryViewerForceAdditionalColumnsUsage():Z
- f:prepareExecuteAction(Z,Z,Z):java.lang.String
- sf:printWithHighlighting(com.intellij.execution.console.LanguageConsoleView,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.TextRange):java.lang.String
- setConsoleEditorEnabled(Z):V
- setEditable(Z):V
- setInputText(java.lang.String):V
- setLanguage(com.intellij.lang.Language):V
- setPrompt(java.lang.String):V
- setPromptAttributes(com.intellij.execution.ui.ConsoleViewContentType):V
- setTitle(java.lang.String):V
f:com.intellij.execution.console.LanguageConsoleImpl$Companion
- f:duplicateHighlighters(com.intellij.openapi.editor.markup.MarkupModel,com.intellij.openapi.editor.markup.MarkupModel,I,com.intellij.openapi.util.TextRange,java.lang.String[]):V
- f:printWithHighlighting(com.intellij.execution.console.LanguageConsoleView,com.intellij.openapi.editor.Editor,com.intellij.openapi.util.TextRange):java.lang.String
f:com.intellij.execution.console.LanguageConsoleImpl$ConsoleEditorsPanel
- javax.swing.JPanel
- com.intellij.openapi.actionSystem.UiDataProvider
- <init>(com.intellij.execution.console.LanguageConsoleImpl):V
- f:getConsole():com.intellij.execution.console.LanguageConsoleImpl
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
c:com.intellij.execution.console.LanguageConsoleImpl$Helper
- file:com.intellij.psi.PsiFile
- f:project:com.intellij.openapi.project.Project
- title:java.lang.String
- f:virtualFile:com.intellij.openapi.vfs.VirtualFile
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
- f:getDocument():com.intellij.openapi.editor.Document
- getFile():com.intellij.psi.PsiFile
- f:getFileSafe():com.intellij.psi.PsiFile
- f:setLanguage(com.intellij.lang.Language):V
- f:setTitle(java.lang.String):com.intellij.execution.console.LanguageConsoleImpl$Helper
- setupEditor(com.intellij.openapi.editor.ex.EditorEx):V
com.intellij.execution.console.LanguageConsoleView
- com.intellij.execution.ui.ConsoleView
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.execution.console.LanguageConsoleView$Companion
- sf:EXECUTION_EDITOR_KEY:com.intellij.openapi.util.Key
- a:getConsoleEditor():com.intellij.openapi.editor.ex.EditorEx
- a:getCurrentEditor():com.intellij.openapi.editor.ex.EditorEx
- a:getEditorDocument():com.intellij.openapi.editor.Document
- a:getFile():com.intellij.psi.PsiFile
- a:getHistoryViewer():com.intellij.openapi.editor.ex.EditorEx
- a:getLanguage():com.intellij.lang.Language
- a:getProject():com.intellij.openapi.project.Project
- a:getPrompt():java.lang.String
- a:getPromptAttributes():com.intellij.execution.ui.ConsoleViewContentType
- a:getTitle():java.lang.String
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- a:isConsoleEditorEnabled():Z
- a:isEditable():Z
- a:setConsoleEditorEnabled(Z):V
- a:setEditable(Z):V
- a:setInputText(java.lang.String):V
- a:setLanguage(com.intellij.lang.Language):V
- a:setPrompt(java.lang.String):V
- a:setPromptAttributes(com.intellij.execution.ui.ConsoleViewContentType):V
- a:setTitle(java.lang.String):V
f:com.intellij.execution.console.LanguageConsoleView$Companion
f:com.intellij.execution.console.MergedHorizontalScrollBarModel
- javax.swing.DefaultBoundedRangeModel
- <init>(javax.swing.JScrollBar,com.intellij.openapi.editor.ex.EditorEx,com.intellij.openapi.editor.ex.EditorEx):V
- s:create(javax.swing.JScrollBar,com.intellij.openapi.editor.ex.EditorEx,com.intellij.openapi.editor.ex.EditorEx):com.intellij.execution.console.MergedHorizontalScrollBarModel
- setEnabled(Z):V
f:com.intellij.execution.console.PrefixHistoryModelKt
- sf:createModel(java.lang.String,com.intellij.execution.console.LanguageConsoleView):com.intellij.execution.console.ConsoleHistoryModel
c:com.intellij.execution.console.ProcessBackedConsoleExecuteActionHandler
- com.intellij.execution.console.BaseConsoleExecuteActionHandler
- com.intellij.openapi.util.Condition
- <init>(com.intellij.execution.process.ProcessHandler,Z):V
- p:execute(java.lang.String,com.intellij.execution.console.LanguageConsoleView):V
- f:isProcessTerminated():Z
- processLine(java.lang.String):V
- sendText(java.lang.String):V
- setProcessHandler(com.intellij.execution.process.ProcessHandler):V
- value(com.intellij.execution.console.LanguageConsoleView):Z
a:com.intellij.execution.dashboard.actions.ExecutorAction
- com.intellij.openapi.project.DumbAwareAction
- p:<init>():V
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:getExecutor():com.intellij.execution.Executor
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:update(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.execution.filters.TextConsoleBuilderImpl
- com.intellij.execution.filters.TextConsoleBuilder
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope):V
- addFilter(com.intellij.execution.filters.Filter):V
- p:createConsole():com.intellij.execution.ui.ConsoleView
- filters(java.util.List):com.intellij.execution.filters.TextConsoleBuilder
- getConsole():com.intellij.execution.ui.ConsoleView
- p:getFilters():java.util.List
- p:getProject():com.intellij.openapi.project.Project
- p:getScope():com.intellij.psi.search.GlobalSearchScope
- isUsePredefinedMessageFilter():Z
- p:isViewer():Z
- setUsePredefinedMessageFilter(Z):V
- setViewer(Z):V
f:com.intellij.execution.filters.impl.HyperlinkInfoFactoryImpl
- com.intellij.execution.filters.HyperlinkInfoFactory
- <init>():V
- createMultipleFilesHyperlinkInfo(java.util.List,I,com.intellij.openapi.project.Project):com.intellij.execution.filters.HyperlinkInfo
- createMultipleFilesHyperlinkInfo(java.util.List,I,com.intellij.openapi.project.Project,com.intellij.execution.filters.HyperlinkInfoFactory$HyperlinkHandler):com.intellij.execution.filters.HyperlinkInfo
- createMultiplePsiElementHyperlinkInfo(java.util.Collection):com.intellij.execution.filters.HyperlinkInfo
f:com.intellij.execution.filters.impl.MultiPsiElementHyperlinkInfo
- com.intellij.execution.filters.HyperlinkInfoBase
- getElementVariants():java.util.Collection
- navigate(com.intellij.openapi.project.Project,com.intellij.ui.awt.RelativePoint):V
a:com.intellij.execution.impl.ConsoleState
- <init>():V
- a:attachTo(com.intellij.execution.impl.ConsoleViewImpl,com.intellij.execution.process.ProcessHandler):com.intellij.execution.impl.ConsoleState
- a:dispose():com.intellij.execution.impl.ConsoleState
- isCommandLine(java.lang.String):Z
- isFinished():Z
- isRunning():Z
- sendUserInput(java.lang.String):V
a:com.intellij.execution.impl.ConsoleState$NotStartedStated
- com.intellij.execution.impl.ConsoleState
- <init>():V
- dispose():com.intellij.execution.impl.ConsoleState
c:com.intellij.execution.impl.ConsoleViewImpl
- javax.swing.JPanel
- com.intellij.execution.ui.ConsoleView
- com.intellij.execution.ui.ObservableConsoleView
- com.intellij.ide.OccurenceNavigator
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- sf:CONSOLE_VIEW_IN_EDITOR_VIEW:com.intellij.openapi.util.Key
- sf:Companion:com.intellij.execution.impl.ConsoleViewImpl$Companion
- sf:IS_CONSOLE_DOCUMENT:com.intellij.openapi.util.Key
- p:predefinedFilters:java.util.List
- p:<init>(com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope,Z,com.intellij.execution.impl.ConsoleState,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope,Z,Z):V
- <init>(com.intellij.openapi.project.Project,Z):V
- addChangeListener(com.intellij.execution.ui.ObservableConsoleView$ChangeListener,com.intellij.openapi.Disposable):V
- f:addCustomConsoleAction(com.intellij.openapi.actionSystem.AnAction):V
- f:addLayerToPane(javax.swing.JComponent):V
- addMessageFilter(com.intellij.execution.filters.Filter):V
- f:addNotificationComponent(javax.swing.JComponent):V
- addNotify():V
- allowHeavyFilters():V
- attachToProcess(com.intellij.execution.process.ProcessHandler):V
- p:calcNextOccurrence(I):com.intellij.ide.OccurenceNavigator$OccurenceInfo
- canPause():Z
- clear():V
- f:clearMessageFilters():V
- pf:clearThisConsoleAction():com.intellij.openapi.actionSystem.AnAction
- p:createCenterComponent():javax.swing.JComponent
- p:createCompositeFilter():com.intellij.execution.filters.CompositeFilter
- createConsoleActions():com.intellij.openapi.actionSystem.AnAction[]
- dispose():V
- p:disposeEditor():V
- p:doClear():V
- p:doCreateConsoleEditor():com.intellij.openapi.editor.ex.EditorEx
- flushDeferredText():V
- f:foldImmediately():V
- getComponent():javax.swing.JComponent
- getContentSize():I
- getEditor():com.intellij.openapi.editor.Editor
- f:getHyperlinks():com.intellij.execution.impl.EditorHyperlinkSupport
- pf:getMyCancelStickToEnd():Z
- getNextOccurenceActionName():java.lang.String
- getPreferredFocusableComponent():javax.swing.JComponent
- getPreviousOccurenceActionName():java.lang.String
- f:getProject():com.intellij.openapi.project.Project
- f:getState():com.intellij.execution.impl.ConsoleState
- p:getStateForUpdate():com.intellij.openapi.application.ModalityState
- f:getText():java.lang.String
- goNextOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- goPreviousOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- hasDeferredOutput():Z
- hasNextOccurence():Z
- hasPreviousOccurence():Z
- f:invalidateFiltersExpirableTokens():V
- isOutputPaused():Z
- isRunning():Z
- performWhenNoDeferredOutput(java.lang.Runnable):V
- print(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType):V
- print(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType,com.intellij.execution.filters.HyperlinkInfo):V
- printHyperlink(java.lang.String,com.intellij.execution.filters.HyperlinkInfo):V
- rehighlightHyperlinksAndFoldings():V
- removeNotify():V
- requestScrollingToEnd():V
- scrollTo(I):V
- scrollToEnd():V
- f:setEmulateCarriageReturn(Z):V
- setHelpId(java.lang.String):V
- pf:setMyCancelStickToEnd(Z):V
- setOutputPaused(Z):V
- f:setUpdateFoldingsEnabled(Z):V
- type(com.intellij.openapi.editor.Editor,java.lang.String):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- p:updateFoldings(I,I):V
- f:waitAllRequests():V
f:com.intellij.execution.impl.ConsoleViewImpl$ClearAllAction
- com.intellij.execution.actions.ClearConsoleAction
- <init>():V
f:com.intellij.execution.impl.ConsoleViewImpl$Companion
- f:isStickingToEnd(com.intellij.openapi.editor.ex.EditorEx):Z
f:com.intellij.execution.impl.ConsoleViewRunningState
- com.intellij.execution.impl.ConsoleState
- <init>(com.intellij.execution.impl.ConsoleViewImpl,com.intellij.execution.process.ProcessHandler,com.intellij.execution.impl.ConsoleState,Z,Z):V
- attachTo(com.intellij.execution.impl.ConsoleViewImpl,com.intellij.execution.process.ProcessHandler):com.intellij.execution.impl.ConsoleState
- dispose():com.intellij.execution.impl.ConsoleState
- isCommandLine(java.lang.String):Z
- isFinished():Z
- isRunning():Z
- sendUserInput(java.lang.String):V
a:com.intellij.execution.runners.AbstractConsoleRunnerWithHistory
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- p:constructConsoleTitle(java.lang.String):java.lang.String
- p:createCloseAction(com.intellij.execution.Executor,com.intellij.execution.ui.RunContentDescriptor):com.intellij.openapi.actionSystem.AnAction
- p:createConsoleExecAction(com.intellij.execution.console.ProcessBackedConsoleExecuteActionHandler):com.intellij.openapi.actionSystem.AnAction
- pa:createConsoleView():com.intellij.execution.console.LanguageConsoleView
- p:createContentDescriptorAndActions():V
- pa:createExecuteActionHandler():com.intellij.execution.console.ProcessBackedConsoleExecuteActionHandler
- pa:createProcess():java.lang.Process
- pa:createProcessHandler(java.lang.Process):com.intellij.execution.process.OSProcessHandler
- p:createStopAction():com.intellij.openapi.actionSystem.AnAction
- p:fillToolBarActions(com.intellij.openapi.actionSystem.DefaultActionGroup,com.intellij.execution.Executor,com.intellij.execution.ui.RunContentDescriptor):java.util.List
- p:finishConsole():V
- getConsoleExecuteActionHandler():com.intellij.execution.console.ProcessBackedConsoleExecuteActionHandler
- p:getConsoleIcon():javax.swing.Icon
- getConsoleTitle():java.lang.String
- getConsoleView():com.intellij.execution.console.LanguageConsoleView
- p:getExecutor():com.intellij.execution.Executor
- getProcessHandler():com.intellij.execution.process.ProcessHandler
- getProject():com.intellij.openapi.project.Project
- getWorkingDir():java.lang.String
- initAndRun():V
- isAutoFocusContent():Z
- s:registerActionShortcuts(java.util.List,javax.swing.JComponent):V
- p:shouldAddNumberToTitle():Z
- p:showConsole(com.intellij.execution.Executor,com.intellij.execution.ui.RunContentDescriptor):V
f:com.intellij.execution.runners.RerunTestsNotification
- <init>():V
- s:showRerunNotification(com.intellij.execution.ui.RunContentDescriptor,com.intellij.execution.ui.ExecutionConsole):V
c:com.intellij.execution.services.ServiceViewToolWindowFactory
- com.intellij.openapi.project.DumbAware
- com.intellij.openapi.wm.ToolWindowFactory
- <init>():V
- createToolWindowContent(com.intellij.openapi.project.Project,com.intellij.openapi.wm.ToolWindow):V
- shouldBeAvailable(com.intellij.openapi.project.Project):Z
a:com.intellij.extapi.psi.LightPsiFileBase
- com.intellij.psi.impl.source.LightPsiFileImpl
- <init>(com.intellij.psi.FileViewProvider,com.intellij.lang.Language):V
- accept(com.intellij.psi.PsiElementVisitor):V
- isDirectory():Z
com.intellij.facet.FacetAsVirtualFile
- a:findFacet():com.intellij.facet.Facet
f:com.intellij.facet.impl.DefaultFacetsProvider
- com.intellij.openapi.roots.ui.configuration.FacetsProvider
- sf:INSTANCE:com.intellij.openapi.roots.ui.configuration.FacetsProvider
- <init>():V
- findFacet(com.intellij.openapi.module.Module,com.intellij.facet.FacetTypeId,java.lang.String):com.intellij.facet.Facet
- getAllFacets(com.intellij.openapi.module.Module):com.intellij.facet.Facet[]
- getFacetsByType(com.intellij.openapi.module.Module,com.intellij.facet.FacetTypeId):java.util.Collection
f:com.intellij.facet.impl.FacetFinderImpl
- com.intellij.facet.FacetFinder
- <init>(com.intellij.openapi.project.Project):V
- findFacet(com.intellij.openapi.vfs.VirtualFile,com.intellij.facet.FacetTypeId):com.intellij.facet.Facet
- findFacets(com.intellij.openapi.vfs.VirtualFile,com.intellij.facet.FacetTypeId):java.util.List
- getAllFacetsOfTypeModificationTracker(com.intellij.facet.FacetTypeId):com.intellij.openapi.util.ModificationTracker
c:com.intellij.facet.impl.FacetUtil
- <init>():V
- s:addFacet(com.intellij.openapi.module.Module,com.intellij.facet.FacetType):com.intellij.facet.Facet
- s:addFacet(com.intellij.openapi.module.Module,com.intellij.facet.FacetType,java.lang.String):com.intellij.facet.Facet
- s:deleteFacet(com.intellij.facet.Facet):V
- s:isRegistered(com.intellij.facet.Facet):Z
- s:loadFacetConfiguration(com.intellij.facet.FacetConfiguration,org.jdom.Element):V
- s:saveFacetConfiguration(com.intellij.facet.FacetConfiguration):org.jdom.Element
f:com.intellij.facet.impl.ProjectFacetListenerEP
- com.intellij.serviceContainer.LazyExtensionInstance
- com.intellij.openapi.extensions.PluginAware
- myFacetTypeId:java.lang.String
- myImplementationClass:java.lang.String
f:com.intellij.facet.impl.invalid.InvalidFacet
- com.intellij.facet.Facet
- <init>(com.intellij.facet.impl.invalid.InvalidFacetType,com.intellij.openapi.module.Module,java.lang.String,com.intellij.facet.impl.invalid.InvalidFacetConfiguration,com.intellij.facet.Facet):V
- getErrorMessage():java.lang.String
f:com.intellij.facet.impl.invalid.InvalidFacetConfiguration
- com.intellij.facet.FacetConfiguration
- <init>(org.jetbrains.jps.model.serialization.facet.FacetState,java.lang.String):V
- createEditorTabs(com.intellij.facet.ui.FacetEditorContext,com.intellij.facet.ui.FacetValidatorsManager):com.intellij.facet.ui.FacetEditorTab[]
- getErrorMessage():java.lang.String
- getFacetState():org.jetbrains.jps.model.serialization.facet.FacetState
a:com.intellij.facet.impl.invalid.InvalidFacetManager
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.facet.impl.invalid.InvalidFacetManager
- a:getInvalidFacets():java.util.List
- a:isIgnored(com.intellij.facet.impl.invalid.InvalidFacet):Z
- a:setIgnored(com.intellij.facet.impl.invalid.InvalidFacet,Z):V
f:com.intellij.facet.impl.invalid.InvalidFacetManagerImpl
- com.intellij.facet.impl.invalid.InvalidFacetManager
- com.intellij.openapi.components.PersistentStateComponent
- sf:COMPONENT_NAME:java.lang.String
- <init>(com.intellij.openapi.project.Project):V
- getInvalidFacets():java.util.List
- getState():com.intellij.facet.impl.invalid.InvalidFacetManagerImpl$InvalidFacetManagerState
- isIgnored(com.intellij.facet.impl.invalid.InvalidFacet):Z
- loadState(com.intellij.facet.impl.invalid.InvalidFacetManagerImpl$InvalidFacetManagerState):V
- setIgnored(com.intellij.facet.impl.invalid.InvalidFacet,Z):V
f:com.intellij.facet.impl.invalid.InvalidFacetManagerImpl$InvalidFacetManagerState
- <init>():V
- getIgnoredFacets():java.util.Set
- setIgnoredFacets(java.util.Set):V
f:com.intellij.facet.impl.invalid.InvalidFacetType
- com.intellij.facet.FacetType
- sf:TYPE_ID:com.intellij.facet.FacetTypeId
- <init>():V
- createDefaultConfiguration():com.intellij.facet.impl.invalid.InvalidFacetConfiguration
- createFacet(com.intellij.openapi.module.Module,java.lang.String,com.intellij.facet.impl.invalid.InvalidFacetConfiguration,com.intellij.facet.Facet):com.intellij.facet.impl.invalid.InvalidFacet
- createMultipleConfigurationsEditor(com.intellij.openapi.project.Project,com.intellij.facet.ui.FacetEditor[]):com.intellij.facet.ui.MultipleFacetSettingsEditor
- getIcon():javax.swing.Icon
- s:getInstance():com.intellij.facet.impl.invalid.InvalidFacetType
- isOnlyOneFacetAllowed():Z
- isSuitableModuleType(com.intellij.openapi.module.ModuleType):Z
f:com.intellij.facet.impl.invalid.MultipleInvalidFacetEditor
- com.intellij.facet.ui.MultipleFacetSettingsEditor
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.facet.ui.FacetEditor[]):V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
f:com.intellij.facet.impl.ui.FacetErrorPanel
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>():V
- <init>(com.intellij.openapi.Disposable):V
- addListener(java.lang.Runnable):V
- disposeUIResources():V
- getComponent():javax.swing.JComponent
- getValidatorsManager():com.intellij.facet.ui.FacetValidatorsManager
- isOk():Z
f:com.intellij.facet.impl.ui.MultipleFacetEditorHelperImpl
- com.intellij.facet.ui.MultipleFacetEditorHelper
- <init>():V
- bind(com.intellij.util.ui.ThreeStateCheckBox,com.intellij.facet.ui.FacetEditor[],com.intellij.util.NotNullFunction):V
- bind(javax.swing.JComboBox,com.intellij.facet.ui.FacetEditor[],com.intellij.util.NotNullFunction):V
- bind(javax.swing.JTextField,com.intellij.facet.ui.FacetEditor[],com.intellij.util.NotNullFunction):V
- unbind():V
c:com.intellij.find.EditorSearchSession
- com.intellij.find.SearchReplaceComponent$Listener
- com.intellij.find.SearchSession
- com.intellij.find.impl.livePreview.SearchResults$SearchResultsListener
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.openapi.editor.event.SelectionListener
- sf:SESSION_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,com.intellij.find.FindModel):V
- addNextOccurrence():V
- afterSelectionUpdate():V
- beforeSelectionUpdate():V
- close():V
- s:createDefaultFindModel(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):com.intellij.find.FindModel
- s:createPrimarySearchActions():com.intellij.openapi.actionSystem.AnAction[]
- cursorMoved():V
- disableLivePreview():V
- p:disposeLivePreview():V
- s:get(com.intellij.openapi.editor.Editor):com.intellij.find.EditorSearchSession
- getComponent():com.intellij.find.SearchReplaceComponent
- getEditor():com.intellij.openapi.editor.Editor
- s:getEmptyText(com.intellij.find.FindModel,com.intellij.openapi.editor.Editor):java.lang.String
- getFindModel():com.intellij.find.FindModel
- getProject():com.intellij.openapi.project.Project
- getSearchResults():com.intellij.find.impl.livePreview.SearchResults
- getTextInField():java.lang.String
- hasMatches():Z
- initLivePreview():V
- isLast(Z):Z
- isSearchInProgress():Z
- s:logSelectionUpdate():V
- multilineStateChanged():V
- removeOccurrence():V
- replaceFieldDocumentChanged():V
- searchBackward():V
- searchFieldDocumentChanged():V
- searchForward():V
- searchResultsUpdated(com.intellij.find.impl.livePreview.SearchResults):V
- selectAllOccurrences():V
- selectionChanged(com.intellij.openapi.editor.event.SelectionEvent):V
- setTextInField(java.lang.String):V
- s:start(com.intellij.openapi.editor.Editor,com.intellij.find.FindModel,com.intellij.openapi.project.Project):com.intellij.find.EditorSearchSession
- s:start(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):com.intellij.find.EditorSearchSession
- toggleSearchReplaceMode():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- s:updateEmptyText(com.intellij.find.SearchReplaceComponent,com.intellij.find.FindModel,com.intellij.openapi.editor.Editor):V
- s:updateUIWithFindModel(com.intellij.find.SearchReplaceComponent,com.intellij.find.FindModel,com.intellij.openapi.editor.Editor):V
f:com.intellij.find.FindUtil
- s:configureFindModel(Z,com.intellij.find.FindModel,Z,java.lang.String):V
- s:configureFindModel(Z,com.intellij.openapi.editor.Editor,com.intellij.find.FindModel,Z):V
- s:doReplace(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.find.FindModel,com.intellij.find.FindResult,java.lang.String,Z,java.util.List):com.intellij.openapi.util.TextRange
- s:find(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- s:findWordAtCaret(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.find.impl.livePreview.SearchResults$Direction):V
- s:initStringToFindWithSelection(com.intellij.find.FindModel,com.intellij.openapi.editor.Editor):V
- s:processNotFound(com.intellij.openapi.editor.Editor,I,java.lang.String,com.intellij.find.FindModel,com.intellij.openapi.project.Project):V
- s:replace(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- s:replace(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,com.intellij.find.FindModel):Z
- s:replace(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,I,com.intellij.find.FindModel,com.intellij.find.FindUtil$ReplaceDelegate):Z
- s:searchAgain(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):Z
- s:searchBack(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):V
- s:selectSearchResultInEditor(com.intellij.openapi.editor.Editor,com.intellij.find.FindResult,I):Z
- s:selectSearchResultsInEditor(com.intellij.openapi.editor.Editor,java.util.Iterator,I):V
- s:selectSearchResultsInEditor(com.intellij.openapi.editor.Editor,java.util.Iterator,I,Z):V
- s:showInUsageView(com.intellij.psi.PsiElement,java.lang.String,com.intellij.openapi.project.Project,com.intellij.psi.SmartPsiElementPointer[]):com.intellij.usages.UsageView
- s:showInUsageView(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement[],java.lang.String,com.intellij.openapi.project.Project):com.intellij.usages.UsageView
- s:showInUsageView(com.intellij.psi.PsiElement,java.lang.Object[],com.intellij.util.Function,java.lang.String,com.intellij.util.Consumer,com.intellij.openapi.project.Project):com.intellij.usages.UsageView
- s:updateFindInFileModel(com.intellij.openapi.project.Project,com.intellij.find.FindModel,Z):V
- s:useFindStringFromFindInFileModel(com.intellij.find.FindModel,com.intellij.openapi.editor.Editor):V
com.intellij.find.FindUtil$ReplaceDelegate
- a:shouldReplace(com.intellij.openapi.util.TextRange,java.lang.String):Z
f:com.intellij.find.SearchReplaceComponent
- com.intellij.openapi.editor.impl.EditorHeaderComponent
- com.intellij.openapi.actionSystem.UiDataProvider
- sf:RIGHT_PANEL_WEST_OFFSET:I
- addListener(com.intellij.find.SearchReplaceComponent$Listener):V
- addNotify():V
- addTextToRecent(javax.swing.text.JTextComponent):V
- s:buildFor(com.intellij.openapi.project.Project,javax.swing.JComponent):com.intellij.find.SearchReplaceComponent$Builder
- s:buildFor(com.intellij.openapi.project.Project,javax.swing.JComponent,com.intellij.find.SearchSession):com.intellij.find.SearchReplaceComponent$Builder
- close():V
- getProject():com.intellij.openapi.project.Project
- getReplaceTextComponent():javax.swing.text.JTextComponent
- getSearchSession():com.intellij.find.SearchSession
- getSearchTextComponent():javax.swing.text.JTextComponent
- getStatusColor():java.awt.Color
- getStatusText():java.lang.String
- isMultiline():Z
- removeNotify():V
- replace():V
- requestFocusInTheSearchFieldAndSelectContent(com.intellij.openapi.project.Project):V
- setNotFoundBackground():V
- setRegularBackground():V
- setStatusText(java.lang.String):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- update(java.lang.String,java.lang.String,Z,Z):V
- updateActions():V
- updateUI():V
f:com.intellij.find.SearchReplaceComponent$Builder
- addExtraReplaceAction(com.intellij.openapi.actionSystem.AnAction[]):com.intellij.find.SearchReplaceComponent$Builder
- addExtraSearchActions(com.intellij.openapi.actionSystem.AnAction[]):com.intellij.find.SearchReplaceComponent$Builder
- addPrimaryReplaceActions(com.intellij.openapi.actionSystem.AnAction[]):com.intellij.find.SearchReplaceComponent$Builder
- addPrimarySearchActions(com.intellij.openapi.actionSystem.AnAction[]):com.intellij.find.SearchReplaceComponent$Builder
- addReplaceFieldActions(com.intellij.openapi.actionSystem.AnAction[]):com.intellij.find.SearchReplaceComponent$Builder
- addSearchFieldActions(com.intellij.openapi.actionSystem.AnAction[]):com.intellij.find.SearchReplaceComponent$Builder
- addSecondarySearchActions(com.intellij.openapi.actionSystem.AnAction[]):com.intellij.find.SearchReplaceComponent$Builder
- build():com.intellij.find.SearchReplaceComponent
- withAddSearchResultsToGlobalSearch(Z):com.intellij.find.SearchReplaceComponent$Builder
- withCloseAction(java.lang.Runnable):com.intellij.find.SearchReplaceComponent$Builder
- withDataProvider(com.intellij.openapi.actionSystem.DataProvider):com.intellij.find.SearchReplaceComponent$Builder
- withMaximizeLeftPanelOnResize():com.intellij.find.SearchReplaceComponent$Builder
- withMultilineEnabled(Z):com.intellij.find.SearchReplaceComponent$Builder
- withNewLineButton(Z):com.intellij.find.SearchReplaceComponent$Builder
- withReplaceAction(java.lang.Runnable):com.intellij.find.SearchReplaceComponent$Builder
- withShowOnlySearchPanel():com.intellij.find.SearchReplaceComponent$Builder
- withUseSearchField(Z):com.intellij.find.SearchReplaceComponent$Builder
- withUseSearchField(Z,Z):com.intellij.find.SearchReplaceComponent$Builder
- withoutSeparator():com.intellij.find.SearchReplaceComponent$Builder
com.intellij.find.SearchReplaceComponent$Listener
- java.util.EventListener
- multilineStateChanged():V
- replaceFieldDocumentChanged():V
- searchFieldDocumentChanged():V
- toggleSearchReplaceMode():V
com.intellij.find.SearchSession
- sf:INCORRECT_REGEXP_MESSAGE_KEY:java.lang.String
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- a:close():V
- a:getComponent():com.intellij.find.SearchReplaceComponent
- a:getFindModel():com.intellij.find.FindModel
- a:hasMatches():Z
- isSearchInProgress():Z
- a:searchBackward():V
- a:searchForward():V
c:com.intellij.find.SearchTextArea
- com.intellij.ui.components.JBPanel
- java.beans.PropertyChangeListener
- sf:JUST_CLEARED_KEY:java.lang.String
- sf:NEW_LINE_KEYSTROKE:javax.swing.KeyStroke
- <init>(javax.swing.JTextArea,Z):V
- <init>(javax.swing.JTextArea,Z,Z):V
- getMinimumSize():java.awt.Dimension
- s:getNewLineKeystroke():javax.swing.KeyStroke
- getTextArea():javax.swing.JTextArea
- propertyChange(java.beans.PropertyChangeEvent):V
- setExtraActions(com.intellij.openapi.actionSystem.AnAction[]):java.util.List
- setInfoText(java.lang.String):V
- setMultilineEnabled(Z):V
- setShowNewLineButton(Z):V
- updateExtraActions():V
- p:updateLayout():V
- updateUI():V
f:com.intellij.find.actions.CompositeActiveComponent
- com.intellij.ui.ActiveComponent
- <init>(com.intellij.ui.ActiveComponent[]):V
- getComponent():javax.swing.JComponent
- setActive(Z):V
c:com.intellij.find.actions.FindInPathAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- sf:NOTIFICATION_GROUP:com.intellij.notification.NotificationGroup
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.find.actions.FindUsagesAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:startFindUsages(com.intellij.psi.PsiElement):V
- p:toShowDialog():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.find.actions.FindUsagesAction$ShowSettingsAndFindUsages
- com.intellij.find.actions.FindUsagesAction
- <init>():V
f:com.intellij.find.actions.FindUsagesInFileAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.PossiblyDumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isDumbAware():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:updateFindUsagesAction(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.find.actions.ReplaceInPathAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.find.actions.ShowUsagesAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.codeInsight.hint.HintManagerImpl$ActionToIgnore
- com.intellij.openapi.actionSystem.PopupAction
- sf:ID:java.lang.String
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getUsagesPageSize():I
- s:hint(Z,java.lang.String,com.intellij.find.actions.ShowUsagesParameters,com.intellij.find.actions.ShowUsagesActionHandler):V
- s:setPopupDelayTimeout(I):V
- s:showElementUsagesWithResult(com.intellij.find.actions.ShowUsagesParameters,com.intellij.find.actions.ShowUsagesActionHandler,com.intellij.usages.impl.UsageViewImpl):java.util.concurrent.Future
- s:startFindUsages(com.intellij.psi.PsiElement,com.intellij.ui.awt.RelativePoint,com.intellij.openapi.editor.Editor):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.find.actions.ShowUsagesActionHandler
- afterOpen(com.intellij.ui.popup.AbstractPopup):V
- beforeClose(java.lang.String):V
- a:buildFinishEventData(com.intellij.usageView.UsageInfo):java.util.List
- a:createUsageSearcher():com.intellij.usages.UsageSearcher
- createUsageView(com.intellij.openapi.project.Project):com.intellij.usages.impl.UsageViewImpl
- a:findUsages():V
- a:getEventData():java.util.List
- a:getMaximalScope():com.intellij.psi.search.SearchScope
- a:getPresentation():com.intellij.usages.UsageSearchPresentation
- s:getSecondInvocationHint(com.intellij.find.actions.ShowUsagesActionHandler):java.lang.String
- a:getSelectedScope():com.intellij.psi.search.SearchScope
- a:getTargetClass():java.lang.Class
- a:getTargetLanguage():com.intellij.lang.Language
- isSaveScope():Z
- a:isValid():Z
- a:moreUsages(com.intellij.find.actions.ShowUsagesParameters):com.intellij.find.actions.ShowUsagesParameters
- a:navigateToSingleUsageImmediately():Z
- a:showDialog():com.intellij.find.actions.ShowUsagesActionHandler
- withMaximalScope():com.intellij.find.actions.ShowUsagesActionHandler
- a:withScope(com.intellij.psi.search.SearchScope):com.intellij.find.actions.ShowUsagesActionHandler
c:com.intellij.find.actions.ShowUsagesManager
- sf:Companion:com.intellij.find.actions.ShowUsagesManager$Companion
- <init>():V
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.find.actions.ShowUsagesManager
- showElementUsagesWithResult(com.intellij.find.actions.ShowUsagesParameters,com.intellij.find.actions.ShowUsagesActionHandler,com.intellij.usages.impl.UsageViewImpl):java.util.concurrent.Future
f:com.intellij.find.actions.ShowUsagesManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.find.actions.ShowUsagesManager
f:com.intellij.find.actions.ShowUsagesParameters
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.ui.awt.RelativePoint,com.intellij.openapi.util.IntRef,I):V
- getEditor():com.intellij.openapi.editor.Editor
- getMaxUsages():I
- getPopupPosition():com.intellij.ui.awt.RelativePoint
- s:initial(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.ui.awt.RelativePoint):com.intellij.find.actions.ShowUsagesParameters
- moreUsages():com.intellij.find.actions.ShowUsagesParameters
- withEditor(com.intellij.openapi.editor.Editor):com.intellij.find.actions.ShowUsagesParameters
- withUsages(I):com.intellij.find.actions.ShowUsagesParameters
f:com.intellij.find.actions.UsageListCellRenderer
- com.intellij.ui.ColoredListCellRenderer
- <init>(com.intellij.openapi.project.Project):V
- s:getVirtualFile(com.intellij.usages.Usage):com.intellij.openapi.vfs.VirtualFile
com.intellij.find.editorHeaderActions.ContextAwareShortcutProvider
- a:getShortcut(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.ShortcutSet
c:com.intellij.find.editorHeaderActions.EditorHeaderSetSearchContextAction
- com.intellij.find.editorHeaderActions.EditorHeaderToggleAction
- p:<init>(java.lang.String,com.intellij.find.FindModel$SearchContext):V
- p:isSelected(com.intellij.find.SearchSession):Z
- p:setSelected(com.intellij.find.SearchSession,Z):V
a:com.intellij.find.editorHeaderActions.EditorHeaderToggleAction
- com.intellij.openapi.actionSystem.ex.CheckboxAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- displayTextInToolbar():Z
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:isSelected(com.intellij.find.SearchSession):Z
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- pa:setSelected(com.intellij.find.SearchSession,Z):V
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
com.intellij.find.editorHeaderActions.Embeddable
f:com.intellij.find.editorHeaderActions.NextOccurrenceAction
- com.intellij.find.editorHeaderActions.PrevNextOccurrenceAction
- <init>():V
- <init>(Z):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.find.editorHeaderActions.PrevNextOccurrenceAction
- com.intellij.openapi.project.DumbAwareAction
- com.intellij.find.editorHeaderActions.ContextAwareShortcutProvider
- com.intellij.ide.lightEdit.LightEditCompatible
- pf:mySearch:Z
- <init>(java.lang.String,Z):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:getDefaultShortcuts():java.util.List
- f:getShortcut(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.ShortcutSet
- pa:getSingleLineShortcuts():java.util.List
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.find.editorHeaderActions.PrevOccurrenceAction
- com.intellij.find.editorHeaderActions.PrevNextOccurrenceAction
- <init>():V
- <init>(Z):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.find.editorHeaderActions.ShowFilterPopupGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.actionSystem.ShortcutProvider
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getShortcut():com.intellij.openapi.actionSystem.ShortcutSet
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.find.editorHeaderActions.StatusTextAction
- com.intellij.openapi.project.DumbAwareAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getTextToCountPreferredSize():java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.find.editorHeaderActions.ToggleAnywhereAction
- com.intellij.find.editorHeaderActions.EditorHeaderSetSearchContextAction
- <init>():V
f:com.intellij.find.editorHeaderActions.ToggleMatchCase
- com.intellij.find.editorHeaderActions.EditorHeaderToggleAction
- com.intellij.find.editorHeaderActions.Embeddable
- com.intellij.openapi.actionSystem.ex.TooltipDescriptionProvider
- <init>():V
f:com.intellij.find.editorHeaderActions.ToggleRegex
- com.intellij.find.editorHeaderActions.EditorHeaderToggleAction
- com.intellij.find.editorHeaderActions.Embeddable
- com.intellij.openapi.actionSystem.ex.TooltipDescriptionProvider
- com.intellij.openapi.actionSystem.ex.TooltipLinkProvider
- <init>():V
- getTooltipLink(javax.swing.JComponent):com.intellij.openapi.actionSystem.ex.TooltipLinkProvider$TooltipLink
f:com.intellij.find.editorHeaderActions.ToggleWholeWordsOnlyAction
- com.intellij.find.editorHeaderActions.EditorHeaderToggleAction
- com.intellij.find.editorHeaderActions.Embeddable
- com.intellij.openapi.actionSystem.ex.TooltipDescriptionProvider
- <init>():V
f:com.intellij.find.editorHeaderActions.Utils
- s:setSmallerFont(javax.swing.JComponent):V
- s:setSmallerFontForChildren(javax.swing.JComponent):V
- s:shortcutSetOf(java.util.List):com.intellij.openapi.actionSystem.CustomShortcutSet
- s:shortcutsOf(java.lang.String):java.util.List
- s:showCompletionPopup(javax.swing.JComponent,javax.swing.JList,java.lang.String,javax.swing.text.JTextComponent,java.lang.String):V
f:com.intellij.find.editorHeaderActions.VariantsCompletionAction
- com.intellij.openapi.project.DumbAwareAction
- com.intellij.ide.lightEdit.LightEditCompatible
- <init>(javax.swing.text.JTextComponent):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.find.findInProject.FindInProjectManager
- <init>(com.intellij.openapi.project.Project):V
- findInPath(com.intellij.find.FindModel):V
- findInProject(com.intellij.openapi.actionSystem.DataContext,com.intellij.find.FindModel):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.find.findInProject.FindInProjectManager
- p:initModel(com.intellij.find.FindModel,com.intellij.openapi.actionSystem.DataContext):V
- isEnabled():Z
- isWorkInProgress():Z
- startFindInProject(com.intellij.find.FindModel):V
a:com.intellij.find.findUsages.AbstractFindUsagesDialog
- com.intellij.openapi.ui.DialogWrapper
- p:myCbToSearchForTextOccurrences:com.intellij.ui.StateRestoringCheckBox
- p:myCbToSkipResultsWhenOneUsage:javax.swing.JCheckBox
- pf:myFindUsagesOptions:com.intellij.find.findUsages.FindUsagesOptions
- p:<init>(com.intellij.openapi.project.Project,com.intellij.find.findUsages.FindUsagesOptions,Z,Z,Z,Z,Z):V
- p:addCheckboxToPanel(java.lang.String,Z,javax.swing.JPanel,Z):com.intellij.ui.StateRestoringCheckBox
- p:addUsagesOptions(javax.swing.JPanel):V
- f:calcFindUsagesOptions():com.intellij.find.findUsages.FindUsagesOptions
- calcFindUsagesOptions(com.intellij.find.findUsages.FindUsagesOptions):V
- a:configureLabelComponent(com.intellij.ui.SimpleColoredComponent):V
- p:createActions():javax.swing.Action[]
- p:createAllOptionsPanel():javax.swing.JPanel
- p:createCenterPanel():javax.swing.JComponent
- p:createCheckbox(java.lang.String,Z,Z):com.intellij.ui.StateRestoringCheckBox
- p:createFindWhatPanel():javax.swing.JPanel
- p:createNorthPanel():javax.swing.JComponent
- p:doOKAction():V
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getPreferredFocusedControl():javax.swing.JComponent
- p:init():V
- p:isInFileOnly():Z
- ps:isSelected(javax.swing.JCheckBox):Z
- ps:isToChange(javax.swing.JCheckBox):Z
- p:shouldDoOkAction():Z
- p:update():V
c:com.intellij.find.findUsages.CommonFindUsagesDialog
- com.intellij.find.findUsages.AbstractFindUsagesDialog
- pf:myPsiElement:com.intellij.psi.PsiElement
- pf:myUsagesHandler:com.intellij.find.findUsages.FindUsagesHandlerBase
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.find.findUsages.FindUsagesOptions,Z,Z,Z,com.intellij.find.findUsages.FindUsagesHandlerBase):V
- configureLabelComponent(com.intellij.ui.SimpleColoredComponent):V
- p:getHelpId():java.lang.String
- p:isInFileOnly():Z
a:com.intellij.find.findUsages.CustomUsageSearcher
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:processElementUsages(com.intellij.psi.PsiElement,com.intellij.util.Processor,com.intellij.find.findUsages.FindUsagesOptions):V
f:com.intellij.find.findUsages.DefaultFindUsagesHandlerFactory
- com.intellij.find.findUsages.FindUsagesHandlerFactory
- <init>():V
- canFindUsages(com.intellij.psi.PsiElement):Z
- createFindUsagesHandler(com.intellij.psi.PsiElement,Z):com.intellij.find.findUsages.FindUsagesHandler
c:com.intellij.find.findUsages.DefaultUsageTargetProvider
- com.intellij.usages.UsageTargetProvider
- <init>():V
- getTargets(com.intellij.psi.PsiElement):com.intellij.usages.UsageTarget[]
a:com.intellij.find.findUsages.FindUsagesHandler
- com.intellij.find.findUsages.FindUsagesHandlerBase
- com.intellij.find.findUsages.FindUsagesHandlerUi
- sf:NULL_HANDLER:com.intellij.find.findUsages.FindUsagesHandler
- p:<init>(com.intellij.psi.PsiElement):V
- p:<init>(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project):V
- s:createDefaultFindUsagesDialog(Z,Z,Z,com.intellij.find.findUsages.FindUsagesHandlerBase):com.intellij.find.findUsages.AbstractFindUsagesDialog
- getFindUsagesDialog(Z,Z,Z):com.intellij.find.findUsages.AbstractFindUsagesDialog
- getHelpId():java.lang.String
a:com.intellij.find.findUsages.FindUsagesHandlerFactory
- com.intellij.openapi.extensions.PluginAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:canFindUsages(com.intellij.psi.PsiElement):Z
- createFindUsagesHandler(com.intellij.psi.PsiElement,com.intellij.find.findUsages.FindUsagesHandlerFactory$OperationMode):com.intellij.find.findUsages.FindUsagesHandler
- a:createFindUsagesHandler(com.intellij.psi.PsiElement,Z):com.intellij.find.findUsages.FindUsagesHandler
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
e:com.intellij.find.findUsages.FindUsagesHandlerFactory$OperationMode
- java.lang.Enum
- sf:DEFAULT:com.intellij.find.findUsages.FindUsagesHandlerFactory$OperationMode
- sf:HIGHLIGHT_USAGES:com.intellij.find.findUsages.FindUsagesHandlerFactory$OperationMode
- sf:USAGES_WITH_DEFAULT_OPTIONS:com.intellij.find.findUsages.FindUsagesHandlerFactory$OperationMode
- s:valueOf(java.lang.String):com.intellij.find.findUsages.FindUsagesHandlerFactory$OperationMode
- s:values():com.intellij.find.findUsages.FindUsagesHandlerFactory$OperationMode[]
com.intellij.find.findUsages.FindUsagesHandlerUi
- a:getFindUsagesDialog(Z,Z,Z):com.intellij.find.findUsages.AbstractFindUsagesDialog
- getHelpId():java.lang.String
f:com.intellij.find.findUsages.FindUsagesManager
- <init>(com.intellij.openapi.project.Project):V
- addToHistory(com.intellij.usages.ConfigurableUsageTarget):V
- canFindUsages(com.intellij.psi.PsiElement):Z
- clearFindingNextUsageInFile():V
- createPresentation(com.intellij.find.findUsages.FindUsagesHandlerBase,com.intellij.find.findUsages.FindUsagesOptions):com.intellij.usages.UsageViewPresentation
- s:createUsageSearcher(com.intellij.find.findUsages.FindUsagesHandlerBase,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement[],com.intellij.find.findUsages.FindUsagesOptions):com.intellij.usages.UsageSearcher
- doFindUsages(com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement[],com.intellij.find.findUsages.FindUsagesHandlerBase,com.intellij.find.findUsages.FindUsagesOptions,Z):com.intellij.usages.UsageView
- doFindUsages(com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement[],com.intellij.find.findUsages.FindUsagesHandlerBase,com.intellij.find.findUsages.FindUsagesOptions,Z,com.intellij.usages.UsageViewPresentation):com.intellij.usages.UsageView
- findNextUsageInFile(com.intellij.openapi.editor.Editor):Z
- findPreviousUsageInFile(com.intellij.openapi.editor.Editor):Z
- findUsages(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile,com.intellij.openapi.fileEditor.FileEditor,Z,com.intellij.psi.search.SearchScope):V
- findUsages(com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement[],com.intellij.find.findUsages.FindUsagesHandlerBase,com.intellij.find.findUsages.FindUsagesOptions,Z):V
- getFindUsagesHandler(com.intellij.psi.PsiElement,com.intellij.find.findUsages.FindUsagesHandlerFactory$OperationMode):com.intellij.find.findUsages.FindUsagesHandler
- getFindUsagesHandler(com.intellij.psi.PsiElement,Z):com.intellij.find.findUsages.FindUsagesHandler
- s:getHelpID(com.intellij.psi.PsiElement):java.lang.String
- s:getMaximalScope(com.intellij.find.findUsages.FindUsagesHandlerBase):com.intellij.psi.search.GlobalSearchScope
- getNewFindUsagesHandler(com.intellij.psi.PsiElement,Z):com.intellij.find.findUsages.FindUsagesHandler
- rerunAndRecallFromHistory(com.intellij.usages.ConfigurableUsageTarget):V
- s:showSettingsAndFindUsages(com.intellij.navigation.NavigationItem[]):V
- startFindUsages(com.intellij.psi.PsiElement,com.intellij.find.findUsages.FindUsagesOptions):V
- s:startProcessUsages(com.intellij.find.findUsages.FindUsagesHandlerBase,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement[],com.intellij.util.Processor,com.intellij.find.findUsages.FindUsagesOptions,java.lang.Runnable):com.intellij.openapi.progress.ProgressIndicator
- s:startProcessUsages(com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.project.Project,com.intellij.usages.UsageSearcher,com.intellij.util.Processor,java.lang.Runnable):V
- s:waitForAsyncTaskCompletion(com.intellij.openapi.project.Project):V
f:com.intellij.find.findUsages.FindUsagesUtil
- s:isSearchForTextOccurrencesAvailable(com.intellij.psi.PsiElement,Z,com.intellij.find.findUsages.FindUsagesHandlerBase):Z
com.intellij.find.findUsages.FusAwareFindUsagesOptions
- a:getAdditionalUsageData():java.util.List
f:com.intellij.find.impl.FindInProjectUtil
- s:buildStringToFindForIndicesFromRegExp(java.lang.String,com.intellij.openapi.project.Project):java.lang.String
- s:createFileMaskCondition(java.lang.String):com.intellij.openapi.util.Condition
- s:extractStringToFind(java.lang.String,com.intellij.openapi.project.Project):java.lang.String
- s:findUsages(com.intellij.find.FindModel,com.intellij.openapi.project.Project,com.intellij.openapi.progress.ProgressIndicator,com.intellij.usages.FindUsagesProcessPresentation,java.util.Set,com.intellij.util.Processor):V
- s:findUsages(com.intellij.find.FindModel,com.intellij.openapi.project.Project,com.intellij.usages.FindUsagesProcessPresentation,java.util.Set,com.intellij.util.Processor):V
- s:findUsages(com.intellij.find.FindModel,com.intellij.openapi.project.Project,com.intellij.util.Processor,com.intellij.usages.FindUsagesProcessPresentation):V
- s:getDirectory(com.intellij.find.FindModel):com.intellij.openapi.vfs.VirtualFile
- s:getPresentableName(com.intellij.find.FindModel$SearchContext):java.lang.String
- s:getTitleForScope(com.intellij.find.FindModel):java.lang.String
- s:initFileFilter(javax.swing.JComboBox,javax.swing.JCheckBox):V
- s:initStringToFindFromDataContext(com.intellij.find.FindModel,com.intellij.openapi.actionSystem.DataContext):V
- s:setDirectoryName(com.intellij.find.FindModel,com.intellij.openapi.actionSystem.DataContext):V
- s:setScope(com.intellij.openapi.project.Project,com.intellij.find.FindModel,com.intellij.openapi.actionSystem.DataContext):V
- s:setupProcessPresentation(com.intellij.openapi.project.Project,com.intellij.usages.UsageViewPresentation):com.intellij.usages.FindUsagesProcessPresentation
- s:setupProcessPresentation(com.intellij.openapi.project.Project,Z,com.intellij.usages.UsageViewPresentation):com.intellij.usages.FindUsagesProcessPresentation
- s:setupProcessPresentation(com.intellij.usages.UsageViewPresentation):com.intellij.usages.FindUsagesProcessPresentation
- s:setupProcessPresentation(Z,com.intellij.usages.UsageViewPresentation):com.intellij.usages.FindUsagesProcessPresentation
- s:setupViewPresentation(com.intellij.find.FindModel):com.intellij.usages.UsageViewPresentation
- s:setupViewPresentation(com.intellij.usages.UsageViewPresentation,com.intellij.find.FindModel):V
- s:setupViewPresentation(com.intellij.usages.UsageViewPresentation,Z,com.intellij.find.FindModel):V
- s:setupViewPresentation(Z,com.intellij.find.FindModel):com.intellij.usages.UsageViewPresentation
c:com.intellij.find.impl.FindInProjectUtil$StringUsageTarget
- com.intellij.navigation.ItemPresentation
- com.intellij.openapi.actionSystem.DataProvider
- com.intellij.usages.ConfigurableUsageTarget
- pf:myFindModel:com.intellij.find.FindModel
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,com.intellij.find.FindModel):V
- findUsages():V
- getData(java.lang.String):java.lang.Object
- getIcon(Z):javax.swing.Icon
- getLongDescriptiveName():java.lang.String
- getName():java.lang.String
- getPresentableText():java.lang.String
- getPresentation():com.intellij.navigation.ItemPresentation
- getShortcut():com.intellij.openapi.actionSystem.KeyboardShortcut
- isValid():Z
- showSettings():V
f:com.intellij.find.impl.FindManagerImpl
- com.intellij.find.FindManager
- <init>(com.intellij.openapi.project.Project):V
- canFindUsages(com.intellij.psi.PsiElement):Z
- clearFindingNextUsageInFile():V
- closeFindDialog():V
- createReplaceInFileModel():com.intellij.find.FindModel
- findNextUsageInEditor(com.intellij.openapi.editor.Editor):Z
- findPreviousUsageInEditor(com.intellij.openapi.editor.Editor):Z
- findString(java.lang.CharSequence,I,com.intellij.find.FindModel):com.intellij.find.FindResult
- findString(java.lang.CharSequence,I,com.intellij.find.FindModel,com.intellij.openapi.vfs.VirtualFile):com.intellij.find.FindResult
- findUsages(com.intellij.psi.PsiElement):V
- findUsages(com.intellij.psi.PsiElement,Z):V
- findUsagesInEditor(com.intellij.psi.PsiElement,com.intellij.openapi.fileEditor.FileEditor):V
- findUsagesInScope(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope):V
- findWasPerformed():Z
- getFindInFileModel():com.intellij.find.FindModel
- getFindInProjectModel():com.intellij.find.FindModel
- getFindNextModel():com.intellij.find.FindModel
- getFindNextModel(com.intellij.openapi.editor.Editor):com.intellij.find.FindModel
- getFindUsagesManager():com.intellij.find.findUsages.FindUsagesManager
- getPreviousFindModel():com.intellij.find.FindModel
- getStringToReplace(java.lang.String,com.intellij.find.FindModel,I,java.lang.CharSequence):java.lang.String
- selectNextOccurrenceWasPerformed():Z
- setFindNextModel(com.intellij.find.FindModel):V
- setFindWasPerformed():V
- setPreviousFindModel(com.intellij.find.FindModel):V
- setSelectNextOccurrenceWasPerformed():V
- showFindDialog(com.intellij.find.FindModel,java.lang.Runnable):V
- showMalformedReplacementPrompt(com.intellij.find.FindModel,java.lang.String,com.intellij.find.FindManager$MalformedReplacementStringException):I
- showPromptDialog(com.intellij.find.FindModel,java.lang.String):I
- showSettingsAndFindUsages(com.intellij.navigation.NavigationItem[]):V
com.intellij.find.impl.FindPopupScopeUI
- a:applyTo(com.intellij.find.FindModel,com.intellij.find.impl.FindPopupScopeUI$ScopeType):V
- a:applyTo(com.intellij.find.FindSettings,com.intellij.find.impl.FindPopupScopeUI$ScopeType):V
- a:getComponents():com.intellij.openapi.util.Pair[]
- a:hideAllPopups():Z
- a:initByModel(com.intellij.find.FindModel):com.intellij.find.impl.FindPopupScopeUI$ScopeType
- validate(com.intellij.find.FindModel,com.intellij.find.impl.FindPopupScopeUI$ScopeType):com.intellij.openapi.ui.ValidationInfo
f:com.intellij.find.impl.FindPopupScopeUI$ScopeType
- f:icon:javax.swing.Icon
- f:name:java.lang.String
- textComputable:java.util.function.Supplier
- <init>(java.lang.String,java.util.function.Supplier,javax.swing.Icon):V
f:com.intellij.find.impl.FindResultImpl
- com.intellij.find.FindResult
- <init>():V
- <init>(I,I):V
- isStringFound():Z
com.intellij.find.impl.FindUI
- a:closeIfPossible():V
- a:getDisposable():com.intellij.openapi.Disposable
- a:getFileTypeMask():java.lang.String
- a:getStringToFind():java.lang.String
- a:initByModel():V
- a:saveSettings():V
- a:showUI():V
f:com.intellij.find.impl.FindUIHelper
- com.intellij.openapi.Disposable
- closeUI():V
- dispose():V
- doOKAction():V
- getModel():com.intellij.find.FindModel
- getOkHandler():java.lang.Runnable
- getProject():com.intellij.openapi.project.Project
- isReplaceState():Z
- setModel(com.intellij.find.FindModel):V
- setOkHandler(java.lang.Runnable):V
- showUI():V
f:com.intellij.find.impl.RegExHelpPopup
- javax.swing.JPanel
- <init>():V
- s:createRegExLink(java.lang.String,java.awt.Component):com.intellij.ui.components.labels.LinkLabel
- s:createRegExLink(java.lang.String,java.awt.Component,java.lang.String):com.intellij.ui.components.labels.LinkLabel
- s:createRegExLinkRunnable(java.awt.Component):java.lang.Runnable
- getPreferredSize():java.awt.Dimension
f:com.intellij.find.impl.livePreview.LivePreview
- com.intellij.find.impl.livePreview.SearchResults$SearchResultsListener
- com.intellij.openapi.editor.colors.EditorColorsListener
- com.intellij.openapi.editor.event.DocumentListener
- com.intellij.openapi.editor.event.SelectionListener
- s:ourTestOutput:java.io.PrintStream
- <init>(com.intellij.find.impl.livePreview.SearchResults,com.intellij.find.impl.livePreview.LivePreviewPresentation):V
- cursorMoved():V
- dispose():V
- getDelegate():com.intellij.find.impl.livePreview.LivePreview$Delegate
- globalSchemeChange(com.intellij.openapi.editor.colors.EditorColorsScheme):V
- s:processNotFound():V
- searchResultsUpdated(com.intellij.find.impl.livePreview.SearchResults):V
- selectionChanged(com.intellij.openapi.editor.event.SelectionEvent):V
- setDelegate(com.intellij.find.impl.livePreview.LivePreview$Delegate):V
- updateFinished():V
com.intellij.find.impl.livePreview.LivePreview$Delegate
- a:getStringToReplace(com.intellij.openapi.editor.Editor,com.intellij.find.FindResult):java.lang.String
f:com.intellij.find.impl.livePreview.LivePreviewController
- com.intellij.find.FindUtil$ReplaceDelegate
- com.intellij.find.impl.livePreview.LivePreview$Delegate
- sf:MATCHES_LIMIT:I
- sf:USER_ACTIVITY_TRIGGERING_DELAY:I
- <init>(com.intellij.find.impl.livePreview.SearchResults,com.intellij.find.SearchSession,com.intellij.openapi.Disposable):V
- dispose():V
- exclude():V
- getStringToReplace(com.intellij.openapi.editor.Editor,com.intellij.find.FindResult):java.lang.String
- isLast(com.intellij.find.impl.livePreview.SearchResults$Direction):Z
- moveCursor(com.intellij.find.impl.livePreview.SearchResults$Direction):V
- off():V
- on():V
- performReplace():V
- performReplace(com.intellij.find.FindResult,java.lang.String,com.intellij.openapi.editor.Editor):com.intellij.openapi.util.TextRange
- performReplaceAll():V
- setLivePreview(com.intellij.find.impl.livePreview.LivePreview):V
- setTrackingSelection(Z):V
- setUserActivityDelay(I):V
- shouldReplace(com.intellij.openapi.util.TextRange,java.lang.String):Z
- updateInBackground(com.intellij.find.FindModel,Z):V
c:com.intellij.find.impl.livePreview.SearchResults
- com.intellij.openapi.editor.event.CaretListener
- com.intellij.openapi.editor.event.DocumentListener
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):V
- addListener(com.intellij.find.impl.livePreview.SearchResults$SearchResultsListener):V
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- caretPositionChanged(com.intellij.openapi.editor.event.CaretEvent):V
- clear():V
- dispose():V
- exclude(com.intellij.find.FindResult):V
- firstOccurrenceAfterCaret():com.intellij.find.FindResult
- p:firstOccurrenceAtOrAfterCaret():com.intellij.find.FindResult
- firstOccurrenceBeforeCaret():com.intellij.find.FindResult
- getCursor():com.intellij.find.FindResult
- getCursorVisualIndex():I
- getEditor():com.intellij.openapi.editor.Editor
- getExcluded():java.util.Set
- getFindModel():com.intellij.find.FindModel
- p:getLocalSearchArea(com.intellij.openapi.editor.Editor,com.intellij.find.FindModel):com.intellij.find.impl.livePreview.SearchResults$SearchArea
- getMatchesCount():I
- getMatchesLimit():I
- getOccurrenceAtCaret():com.intellij.find.FindResult
- getOccurrences():java.util.List
- getProject():com.intellij.openapi.project.Project
- getStamp():I
- hasMatches():Z
- isExcluded(com.intellij.find.FindResult):Z
- isUpToDate():Z
- isUpdating():Z
- nextOccurrence(Z):V
- prevOccurrence(Z):V
- removeListener(com.intellij.find.impl.livePreview.SearchResults$SearchResultsListener):V
- setMatchesLimit(I):V
e:com.intellij.find.impl.livePreview.SearchResults$Direction
- java.lang.Enum
- sf:DOWN:com.intellij.find.impl.livePreview.SearchResults$Direction
- sf:UP:com.intellij.find.impl.livePreview.SearchResults$Direction
- s:valueOf(java.lang.String):com.intellij.find.impl.livePreview.SearchResults$Direction
- s:values():com.intellij.find.impl.livePreview.SearchResults$Direction[]
f:com.intellij.find.impl.livePreview.SearchResults$SearchArea
- java.lang.Record
- <init>(I[],I[]):V
- s:create(I[],I[]):com.intellij.find.impl.livePreview.SearchResults$SearchArea
- endOffsets():I[]
- f:equals(java.lang.Object):Z
- f:hashCode():I
- startOffsets():I[]
- union(com.intellij.find.impl.livePreview.SearchResults$SearchArea):com.intellij.find.impl.livePreview.SearchResults$SearchArea
com.intellij.find.impl.livePreview.SearchResults$SearchResultsListener
- afterSelectionUpdate():V
- beforeSelectionUpdate():V
- a:cursorMoved():V
- a:searchResultsUpdated(com.intellij.find.impl.livePreview.SearchResults):V
- updateFinished():V
c:com.intellij.find.replaceInProject.ReplaceInProjectManager
- <init>(com.intellij.openapi.project.Project):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.find.replaceInProject.ReplaceInProjectManager
- p:initModel(com.intellij.find.FindModel,com.intellij.openapi.actionSystem.DataContext):V
- isEnabled():Z
- isWorkInProgress():Z
- replaceInPath(com.intellij.find.FindModel):V
- replaceInProject(com.intellij.openapi.actionSystem.DataContext,com.intellij.find.FindModel):V
- replaceSingleUsage(com.intellij.usages.Usage,com.intellij.find.FindModel,java.util.Set):Z
- replaceUsage(com.intellij.usages.Usage,com.intellij.find.FindModel,java.util.Set,Z):Z
- s:reportNumberReplacedOccurrences(com.intellij.openapi.project.Project,I):V
- searchAndShowUsages(com.intellij.usages.UsageViewManager,com.intellij.openapi.util.Factory,com.intellij.find.FindModel,com.intellij.usages.UsageViewPresentation,com.intellij.usages.FindUsagesProcessPresentation):V
- showReplaceAllConfirmDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String):Z
f:com.intellij.formatting.DelegatingFormattingModel
- com.intellij.formatting.FormattingModelEx
- <init>(com.intellij.formatting.FormattingModel,com.intellij.formatting.Block):V
- commitChanges():V
- getDocumentModel():com.intellij.formatting.FormattingDocumentModel
- getRootBlock():com.intellij.formatting.Block
- replaceWhiteSpace(com.intellij.openapi.util.TextRange,com.intellij.lang.ASTNode,java.lang.String):com.intellij.openapi.util.TextRange
- replaceWhiteSpace(com.intellij.openapi.util.TextRange,java.lang.String):com.intellij.openapi.util.TextRange
- shiftIndentInsideRange(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange,I):com.intellij.openapi.util.TextRange
com.intellij.formatting.FormattingModelBuilderEx
- com.intellij.formatting.FormattingModelBuilder
- getIndentOptionsToUse(com.intellij.psi.PsiFile,com.intellij.formatting.FormatTextRanges,com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions
f:com.intellij.formatting.alignment.AlignmentInColumnsConfig
- <init>(com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet):V
- getCommentTokenTypes():com.intellij.psi.tree.TokenSet
- getDistinguishableTypes():com.intellij.psi.tree.TokenSet
- getStopMultilineCheckElementTypes():com.intellij.psi.tree.TokenSet
- getTargetDeclarationTypes():com.intellij.psi.tree.TokenSet
- getWhiteSpaceTokenTypes():com.intellij.psi.tree.TokenSet
f:com.intellij.formatting.alignment.AlignmentInColumnsHelper
- sf:INSTANCE:com.intellij.formatting.alignment.AlignmentInColumnsHelper
- <init>():V
- useDifferentVarDeclarationAlignment(com.intellij.lang.ASTNode,com.intellij.formatting.alignment.AlignmentInColumnsConfig,I):Z
a:com.intellij.formatting.alignment.AlignmentStrategy
- <init>():V
- s:createAlignmentPerTypeStrategy(java.util.Collection,com.intellij.psi.tree.IElementType,Z):com.intellij.formatting.alignment.AlignmentStrategy$AlignmentPerTypeStrategy
- s:createAlignmentPerTypeStrategy(java.util.Collection,com.intellij.psi.tree.IElementType,Z,com.intellij.formatting.Alignment$Anchor):com.intellij.formatting.alignment.AlignmentStrategy$AlignmentPerTypeStrategy
- s:createAlignmentPerTypeStrategy(java.util.Collection,Z):com.intellij.formatting.alignment.AlignmentStrategy$AlignmentPerTypeStrategy
- getAlignment(com.intellij.psi.tree.IElementType):com.intellij.formatting.Alignment
- a:getAlignment(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):com.intellij.formatting.Alignment
- s:getNullStrategy():com.intellij.formatting.alignment.AlignmentStrategy
- s:wrap(com.intellij.formatting.Alignment,Z,com.intellij.psi.tree.IElementType[]):com.intellij.formatting.alignment.AlignmentStrategy
- s:wrap(com.intellij.formatting.Alignment,com.intellij.psi.tree.IElementType[]):com.intellij.formatting.alignment.AlignmentStrategy
f:com.intellij.formatting.alignment.AlignmentStrategy$AlignmentPerTypeStrategy
- com.intellij.formatting.alignment.AlignmentStrategy
- getAlignment(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):com.intellij.formatting.Alignment
- renewAlignment(com.intellij.psi.tree.IElementType):V
a:com.intellij.framework.detection.impl.FacetBasedDetectedFrameworkDescription
- com.intellij.framework.detection.DetectedFrameworkDescription
- <init>(com.intellij.framework.detection.FacetBasedFrameworkDetector,com.intellij.facet.FacetConfiguration,java.util.Set):V
- canSetupFramework(java.util.Collection):Z
- p:doSetup(com.intellij.openapi.roots.ModifiableModelsProvider,com.intellij.openapi.module.Module):V
- equals(java.lang.Object):Z
- getConfiguration():com.intellij.facet.FacetConfiguration
- getDetector():com.intellij.framework.detection.FrameworkDetector
- pa:getExistentFacets(com.intellij.facet.FacetTypeId):java.util.Collection
- pa:getModuleName():java.lang.String
- getRelatedFiles():java.util.Collection
- getSetupText():java.lang.String
- hashCode():I
f:com.intellij.framework.detection.impl.FacetBasedDetectedFrameworkDescriptionImpl
- com.intellij.framework.detection.impl.FacetBasedDetectedFrameworkDescription
- <init>(com.intellij.openapi.module.Module,com.intellij.framework.detection.FacetBasedFrameworkDetector,com.intellij.facet.FacetConfiguration,java.util.Set):V
- setupFramework(com.intellij.openapi.roots.ModifiableModelsProvider,com.intellij.openapi.roots.ui.configuration.ModulesProvider):V
a:com.intellij.framework.detection.impl.FrameworkDetectionContextBase
- com.intellij.framework.detection.FrameworkDetectionContext
- <init>():V
- getProject():com.intellij.openapi.project.Project
f:com.intellij.framework.detection.impl.FrameworkDetectionProcessor
- sf:SKIPPED_DIRECTORIES:java.util.Set
- <init>(com.intellij.openapi.progress.ProgressIndicator,com.intellij.framework.detection.FrameworkDetectionContext):V
- processRoots(java.util.List):java.util.List
f:com.intellij.framework.detection.impl.FrameworkDetectionUtil
- s:findFrameworkTypeForFacetDetector(com.intellij.facet.FacetType):com.intellij.framework.FrameworkType
- s:getDisabledDescriptions(java.util.List,java.util.List):java.util.List
- s:removeDisabled(java.util.List):java.util.List
- s:removeDisabled(java.util.List,java.util.List):java.util.List
- s:setupFrameworks(java.util.List,com.intellij.openapi.roots.ModifiableModelsProvider,com.intellij.openapi.roots.ui.configuration.ModulesProvider):V
a:com.intellij.framework.detection.impl.FrameworkDetectorRegistry
- <init>():V
- a:findFrameworkType(java.lang.String):com.intellij.framework.FrameworkType
- a:getAcceptedFileTypes():com.intellij.openapi.fileTypes.FileType[]
- a:getAllDetectorIds():java.util.Collection
- a:getDetectorById(java.lang.String):com.intellij.framework.detection.FrameworkDetector
- a:getDetectorIds(com.intellij.openapi.fileTypes.FileType):java.util.Collection
- a:getDetectorsMap():com.intellij.util.containers.MultiMap
- a:getFrameworkTypes():java.util.List
- s:getInstance():com.intellij.framework.detection.impl.FrameworkDetectorRegistry
f:com.intellij.framework.detection.impl.ui.DetectedFrameworksComponent
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.framework.detection.FrameworkDetectionContext):V
- getMainPanel():javax.swing.JComponent
- getSelectedFrameworks():java.util.List
- getTree():com.intellij.framework.detection.impl.ui.DetectedFrameworksTree
- processUncheckedNodes(com.intellij.framework.detection.DetectionExcludesConfiguration):V
e:com.intellij.framework.detection.impl.ui.DetectedFrameworksComponent$GroupByOption
- java.lang.Enum
- sf:DIRECTORY:com.intellij.framework.detection.impl.ui.DetectedFrameworksComponent$GroupByOption
- sf:TYPE:com.intellij.framework.detection.impl.ui.DetectedFrameworksComponent$GroupByOption
- s:valueOf(java.lang.String):com.intellij.framework.detection.impl.ui.DetectedFrameworksComponent$GroupByOption
- s:values():com.intellij.framework.detection.impl.ui.DetectedFrameworksComponent$GroupByOption[]
c:com.intellij.framework.detection.impl.ui.DetectedFrameworksTree
- com.intellij.ui.CheckboxTree
- <init>(com.intellij.framework.detection.FrameworkDetectionContext,com.intellij.framework.detection.impl.ui.DetectedFrameworksComponent$GroupByOption):V
- changeGroupBy(com.intellij.framework.detection.impl.ui.DetectedFrameworksComponent$GroupByOption):V
- p:onNodeStateChanged(com.intellij.ui.CheckedTreeNode):V
- processUncheckedNodes(com.intellij.util.Consumer):V
- rebuildTree(java.util.List):V
com.intellij.framework.library.DownloadableLibraryDescription
- com.intellij.util.download.DownloadableFileSetVersions
f:com.intellij.framework.library.impl.DownloadableLibraryDescriptionImpl
- com.intellij.framework.library.DownloadableLibraryDescription
- <init>(java.util.List):V
- fetchVersions():java.util.List
- fetchVersions(com.intellij.util.download.DownloadableFileSetVersions$FileSetVersionsCallback):V
- getVersions():java.util.List
f:com.intellij.framework.library.impl.DownloadableLibraryFileDescriptionImpl
- com.intellij.util.download.impl.DownloadableFileDescriptionImpl
- com.intellij.framework.library.DownloadableLibraryFileDescription
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,Z):V
- getDocumentationDescription():com.intellij.util.download.impl.DownloadableFileDescriptionImpl
- getSourcesDescription():com.intellij.util.download.impl.DownloadableFileDescriptionImpl
- isOptional():Z
f:com.intellij.framework.library.impl.FrameworkLibraryVersionImpl
- com.intellij.util.download.impl.DownloadableFileSetDescriptionImpl
- com.intellij.framework.library.FrameworkLibraryVersion
- <init>(java.lang.String,java.lang.String,com.intellij.framework.FrameworkAvailabilityCondition,java.util.List,java.lang.String):V
- getAvailabilityCondition():com.intellij.framework.FrameworkAvailabilityCondition
- getDefaultLibraryName():java.lang.String
- getPresentableName():java.lang.String
- getVersionNumber():java.lang.String
c:com.intellij.framework.library.impl.LibraryVersionsFetcher
- com.intellij.framework.library.DownloadableLibraryDescription
- com.intellij.util.download.DownloadableFileSetVersions
- <init>(java.lang.String,java.net.URL[]):V
- p:createAvailabilityCondition(com.intellij.facet.frameworks.beans.Artifact):com.intellij.framework.FrameworkAvailabilityCondition
- p:createFileDescription(com.intellij.facet.frameworks.beans.ArtifactItem,java.lang.String,java.lang.String):com.intellij.framework.library.DownloadableLibraryFileDescription
- p:createVersion(com.intellij.facet.frameworks.beans.Artifact,java.util.List):com.intellij.framework.library.FrameworkLibraryVersion
c:com.intellij.ide.CopyPasteDelegator
- com.intellij.ide.CopyPasteSupport
- sf:SHOW_CHOOSER_KEY:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project,javax.swing.JComponent):V
- getCopyProvider():com.intellij.ide.CopyProvider
- getCutProvider():com.intellij.ide.CutProvider
- getPasteProvider():com.intellij.ide.PasteProvider
- p:getSelectedElements(com.intellij.openapi.actionSystem.DataContext):com.intellij.psi.PsiElement[]
f:com.intellij.ide.CopyPasteUtil
- s:addDefaultListener(com.intellij.openapi.Disposable,java.util.function.Consumer):V
- s:getElementsInTransferable(java.awt.datatransfer.Transferable):com.intellij.psi.PsiElement[]
f:com.intellij.ide.CopyPasteUtil$DefaultCopyPasteListener
- com.intellij.openapi.ide.CopyPasteManager$ContentChangedListener
- contentChanged(java.awt.datatransfer.Transferable,java.awt.datatransfer.Transferable):V
a:com.intellij.ide.GeneratedSourceFileChangeTracker
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.GeneratedSourceFileChangeTracker
- a:isEditedGeneratedFile(com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.ide.NativeIconProvider
- com.intellij.ide.IconProvider
- com.intellij.openapi.project.DumbAware
- <init>():V
- getIcon(com.intellij.psi.PsiElement,I):javax.swing.Icon
- s:getNativeIcon(java.nio.file.Path):javax.swing.Icon
f:com.intellij.ide.PsiCopyPasteManager
- <init>():V
- s:asFileList(com.intellij.psi.PsiElement[]):java.util.List
- s:asVirtualFile(com.intellij.psi.PsiElement):com.intellij.openapi.vfs.VirtualFile
- clear():V
- s:getElements(java.awt.datatransfer.Transferable):com.intellij.psi.PsiElement[]
- getElements(Z[]):com.intellij.psi.PsiElement[]
- s:getInstance():com.intellij.ide.PsiCopyPasteManager
- isCutElement(java.lang.Object):Z
- s:newTransferable(com.intellij.psi.PsiElement[]):java.awt.datatransfer.Transferable
- setElements(com.intellij.psi.PsiElement[],Z):V
f:com.intellij.ide.PsiCopyPasteManager$EscapeHandler
- java.awt.event.KeyAdapter
- <init>():V
- keyPressed(java.awt.event.KeyEvent):V
com.intellij.ide.TwoPaneIdeView
- a:selectElement(com.intellij.psi.PsiElement,Z):V
f:com.intellij.ide.actions.ApplyIntentionAction
- com.intellij.openapi.actionSystem.AnAction
- <init>(com.intellij.codeInsight.daemon.impl.HighlightInfo$IntentionActionDescriptor,java.lang.String,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- <init>(com.intellij.codeInsight.intention.IntentionAction,java.lang.String,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:getAvailableIntentions(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.ide.actions.ApplyIntentionAction[]
- getName():java.lang.String
f:com.intellij.ide.actions.AttachDirectoryUtils
- <init>():V
- s:addDirectoriesWithUndo(com.intellij.openapi.project.Project,java.util.List):V
- s:addRemoveEntriesWithUndo(com.intellij.openapi.project.Project,com.intellij.openapi.module.Module,java.util.List,Z):V
- s:chooseAndAddDirectoriesWithUndo(com.intellij.openapi.project.Project,com.intellij.util.Consumer):V
- s:excludeEntriesWithUndo(com.intellij.openapi.module.Module,java.util.List,Z):V
- s:excludeEntriesWithUndo(com.intellij.openapi.project.Project,java.util.List,Z):V
- s:getAttachedDirectories(com.intellij.openapi.project.Project):java.util.List
- s:getDisplayName(java.util.List):java.lang.String
a:com.intellij.ide.actions.BigPopupUI
- com.intellij.util.ui.components.BorderLayoutPanel
- com.intellij.openapi.Disposable
- p:myHint:com.intellij.openapi.ui.popup.JBPopup
- p:myHintLabel:com.intellij.util.ui.Advertiser
- pf:myProject:com.intellij.openapi.project.Project
- p:myResultsList:com.intellij.ui.components.JBList
- p:mySearchField:com.intellij.ui.components.fields.ExtendableTextField
- p:myViewType:com.intellij.ide.actions.BigPopupUI$ViewType
- pf:myViewTypeListeners:java.util.List
- p:searchFinishedHandler:java.lang.Runnable
- p:suggestionsPanel:javax.swing.JPanel
- <init>(com.intellij.openapi.project.Project):V
- p:addListDataListener(javax.swing.AbstractListModel):V
- addViewTypeListener(com.intellij.ide.actions.BigPopupUI$ViewTypeListener):V
- pa:createCellRenderer():javax.swing.ListCellRenderer
- p:createFooterPanel(javax.swing.JPanel):javax.swing.JPanel
- p:createHeader():javax.swing.JComponent
- a:createList():com.intellij.ui.components.JBList
- p:createListPane():javax.swing.JScrollPane
- p:createSearchField():com.intellij.ui.components.fields.ExtendableTextField
- p:createSettingsPanel():javax.swing.JPanel
- p:createSuggestionsPanel():javax.swing.JPanel
- p:createTopLeftPanel():javax.swing.JPanel
- pa:getAccessibleName():java.lang.String
- getExpandedSize():java.awt.Dimension
- p:getInitialHint():java.lang.String
- p:getInitialHints():java.lang.String[]
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- getSearchField():javax.swing.JTextField
- p:getSearchPattern():java.lang.String
- getViewType():com.intellij.ide.actions.BigPopupUI$ViewType
- init():V
- p:installScrollingActions():V
- removeViewTypeListener(com.intellij.ide.actions.BigPopupUI$ViewTypeListener):V
- setSearchFinishedHandler(java.lang.Runnable):V
- p:updateViewType(com.intellij.ide.actions.BigPopupUI$ViewType):V
pc:com.intellij.ide.actions.BigPopupUI$SearchField
- com.intellij.ui.components.fields.ExtendableTextField
- <init>():V
e:com.intellij.ide.actions.BigPopupUI$ViewType
- java.lang.Enum
- sf:FULL:com.intellij.ide.actions.BigPopupUI$ViewType
- sf:SHORT:com.intellij.ide.actions.BigPopupUI$ViewType
- s:valueOf(java.lang.String):com.intellij.ide.actions.BigPopupUI$ViewType
- s:values():com.intellij.ide.actions.BigPopupUI$ViewType[]
com.intellij.ide.actions.BigPopupUI$ViewTypeListener
- a:suggestionsShown(com.intellij.ide.actions.BigPopupUI$ViewType):V
f:com.intellij.ide.actions.CopyContentRootPathProvider
- com.intellij.ide.actions.DumbAwareCopyPathProvider
- <init>():V
- getPathToElement(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Editor):java.lang.String
f:com.intellij.ide.actions.CopyElementAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.CopyPathProvider
- com.intellij.openapi.actionSystem.AnAction
- sf:Companion:com.intellij.ide.actions.CopyPathProvider$Companion
- sf:QUALIFIED_NAME:com.intellij.openapi.util.Key
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getPathToElement(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Editor):java.lang.String
- p:getQualifiedName(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.CopyPathProvider$Companion
c:com.intellij.ide.actions.CopyReferenceAction
- com.intellij.openapi.project.DumbAwareAction
- sf:ourFlavor:java.awt.datatransfer.DataFlavor
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:doCopy(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project):Z
- s:elementToFqn(com.intellij.psi.PsiElement):java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getPsiElements(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.editor.Editor):java.util.List
- p:getQualifiedName(com.intellij.openapi.editor.Editor,java.util.List):java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.CopyReferencePopup
- com.intellij.ide.actions.NonTrivialActionGroup
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- beforeActionPerformedUpdate(com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.CopyReferenceUtil
- <init>():V
- s:getVirtualFileFqn(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.lang.String
f:com.intellij.ide.actions.CopySourceRootPathProvider
- com.intellij.ide.actions.DumbAwareCopyPathProvider
- <init>():V
- getPathToElement(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Editor):java.lang.String
com.intellij.ide.actions.CreateDirectoryCompletionContributor
- a:getDescription():java.lang.String
- a:getVariants(com.intellij.psi.PsiDirectory):java.util.Collection
f:com.intellij.ide.actions.CreateDirectoryCompletionContributor$Variant
- <init>(java.lang.String,org.jetbrains.jps.model.module.JpsModuleSourceRootType):V
- getPath():java.lang.String
- getRootType():org.jetbrains.jps.model.module.JpsModuleSourceRootType
c:com.intellij.ide.actions.CreateDirectoryOrPackageAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- sf:EP:com.intellij.openapi.extensions.ExtensionPointName
- sf:TEST_DIRECTORY_NAME_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:collectSuggestedDirectories(com.intellij.psi.PsiDirectory):java.util.List
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isPackage(com.intellij.openapi.project.Project,java.util.List):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
pf:com.intellij.ide.actions.CreateDirectoryOrPackageAction$CompletionItem
- equals(java.lang.Object):Z
- hashCode():I
c:com.intellij.ide.actions.CreateDirectoryOrPackageHandler
- com.intellij.openapi.ui.InputValidatorEx
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,Z,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,Z,java.lang.String,java.awt.Component):V
- canClose(java.lang.String):Z
- checkInput(java.lang.String):Z
- p:createDirectories(java.lang.String):V
- s:findFileTypeBoundToName(java.lang.String):com.intellij.openapi.fileTypes.FileType
- getCreatedElement():com.intellij.psi.PsiFileSystemItem
- getErrorText(java.lang.String):java.lang.String
- getWarningText(java.lang.String):java.lang.String
c:com.intellij.ide.actions.CreateFileAction
- com.intellij.ide.actions.CreateElementActionBase
- com.intellij.openapi.project.DumbAware
- <init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,java.util.function.Supplier):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- p:create(java.lang.String,com.intellij.psi.PsiDirectory):com.intellij.psi.PsiElement[]
- s:findOrCreateSubdirectory(com.intellij.psi.PsiDirectory,java.lang.String):com.intellij.psi.PsiDirectory
- p:getActionName(com.intellij.psi.PsiDirectory,java.lang.String):java.lang.String
- p:getDefaultExtension():java.lang.String
- p:getErrorTitle():java.lang.String
- p:getFileName(java.lang.String):java.lang.String
- p:invokeDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory):com.intellij.psi.PsiElement[]
- p:invokeDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,java.util.function.Consumer):V
- isDumbAware():Z
f:com.intellij.ide.actions.CreateFileAction$MkDirs
- f:directory:com.intellij.psi.PsiDirectory
- f:newName:java.lang.String
- <init>(java.lang.String,com.intellij.psi.PsiDirectory):V
pc:com.intellij.ide.actions.CreateFileAction$MyValidator
- com.intellij.ide.actions.CreateElementActionBase$MyInputValidator
- com.intellij.openapi.ui.InputValidatorEx
- <init>(com.intellij.ide.actions.CreateFileAction,com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory):V
- canClose(java.lang.String):Z
- checkInput(java.lang.String):Z
- getErrorText(java.lang.String):java.lang.String
a:com.intellij.ide.actions.CreateFileFromTemplateAction
- com.intellij.ide.actions.CreateFromTemplateAction
- p:<init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- p:createFile(java.lang.String,java.lang.String,com.intellij.psi.PsiDirectory):com.intellij.psi.PsiFile
- p:createFileFromTemplate(java.lang.String,com.intellij.ide.fileTemplates.FileTemplate,com.intellij.psi.PsiDirectory):com.intellij.psi.PsiFile
- s:createFileFromTemplate(java.lang.String,com.intellij.ide.fileTemplates.FileTemplate,com.intellij.psi.PsiDirectory,java.lang.String,Z):com.intellij.psi.PsiFile
- s:createFileFromTemplate(java.lang.String,com.intellij.ide.fileTemplates.FileTemplate,com.intellij.psi.PsiDirectory,java.lang.String,Z,java.util.Map):com.intellij.psi.PsiFile
- s:createFileFromTemplate(java.lang.String,com.intellij.ide.fileTemplates.FileTemplate,com.intellij.psi.PsiDirectory,java.lang.String,Z,java.util.Map,java.util.Map):com.intellij.psi.PsiFile
c:com.intellij.ide.actions.CreateFileFromTemplateDialog
- com.intellij.openapi.ui.DialogWrapper
- b:$$$getRootComponent$$$():javax.swing.JComponent
- p:<init>(com.intellij.openapi.project.Project):V
- p:createCenterPanel():javax.swing.JComponent
- s:createDialog(com.intellij.openapi.project.Project):com.intellij.ide.actions.CreateFileFromTemplateDialog$Builder
- p:getKindCombo():com.intellij.ide.actions.TemplateKindCombo
- p:getKindLabel():javax.swing.JLabel
- p:getNameField():javax.swing.JTextField
- p:getNameLabel():javax.swing.JLabel
- getPreferredFocusedComponent():javax.swing.JComponent
- setTemplateKindComponentsVisible(Z):V
com.intellij.ide.actions.CreateFileFromTemplateDialog$Builder
- addKind(java.lang.String,javax.swing.Icon,java.lang.String):com.intellij.ide.actions.CreateFileFromTemplateDialog$Builder
- a:addKind(java.lang.String,javax.swing.Icon,java.lang.String,com.intellij.openapi.ui.InputValidator):com.intellij.ide.actions.CreateFileFromTemplateDialog$Builder
- a:getCustomProperties():java.util.Map
- a:setDefaultText(java.lang.String):com.intellij.ide.actions.CreateFileFromTemplateDialog$Builder
- a:setDialogOwner(java.awt.Component):com.intellij.ide.actions.CreateFileFromTemplateDialog$Builder
- setKindSelector(java.util.function.BiFunction):V
- a:setTitle(java.lang.String):com.intellij.ide.actions.CreateFileFromTemplateDialog$Builder
- a:setValidator(com.intellij.openapi.ui.InputValidator):com.intellij.ide.actions.CreateFileFromTemplateDialog$Builder
- a:show(java.lang.String,java.lang.String,com.intellij.ide.actions.CreateFileFromTemplateDialog$FileCreator):com.intellij.psi.PsiElement
- a:show(java.lang.String,java.lang.String,com.intellij.ide.actions.CreateFileFromTemplateDialog$FileCreator,com.intellij.util.Consumer):V
com.intellij.ide.actions.CreateFileFromTemplateDialog$FileCreator
- a:createFile(java.lang.String,java.lang.String):java.lang.Object
- a:getActionName(java.lang.String,java.lang.String):java.lang.String
- a:startInWriteAction():Z
a:com.intellij.ide.actions.CreateFromTemplateAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.application.WriteActionAware
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- p:<init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,java.util.function.Supplier):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:adjustDirectory(com.intellij.psi.PsiDirectory):com.intellij.psi.PsiDirectory
- pa:buildDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,com.intellij.ide.actions.CreateFileFromTemplateDialog$Builder):V
- pa:createFile(java.lang.String,java.lang.String,com.intellij.psi.PsiDirectory):com.intellij.psi.PsiElement
- pa:getActionName(com.intellij.psi.PsiDirectory,java.lang.String,java.lang.String):java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getDefaultTemplateName(com.intellij.psi.PsiDirectory):java.lang.String
- p:getDefaultTemplateProperty():java.lang.String
- p:getDirectory(com.intellij.ide.IdeView):com.intellij.psi.PsiDirectory
- p:getErrorTitle():java.lang.String
- p:isAvailable(com.intellij.openapi.actionSystem.DataContext):Z
- s:moveCaretAfterNameIdentifier(com.intellij.psi.PsiNameIdentifierOwner):V
- p:postProcess(com.intellij.psi.PsiElement,java.lang.String,java.util.Map):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.CreateTemplateInPackageAction
- com.intellij.ide.actions.CreateFromTemplateAction
- com.intellij.ide.actions.NewFileActionWithCategory
- sf:JAVA_NEW_FILE_CATEGORY:java.lang.String
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon,java.util.Set):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier,java.util.function.Supplier,java.util.Set):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon,java.util.Set):V
- p:adjustDirectory(com.intellij.psi.PsiDirectory):com.intellij.psi.PsiDirectory
- s:adjustDirectory(com.intellij.psi.PsiDirectory,java.util.Set):com.intellij.psi.PsiDirectory
- pa:checkPackageExists(com.intellij.psi.PsiDirectory):Z
- p:createFile(java.lang.String,java.lang.String,com.intellij.psi.PsiDirectory):com.intellij.psi.PsiElement
- pa:doCreate(com.intellij.psi.PsiDirectory,java.lang.String,java.lang.String):com.intellij.psi.PsiElement
- getCategory():java.lang.String
- pa:getNavigationElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- p:isAvailable(com.intellij.openapi.actionSystem.DataContext):Z
- s:isAvailable(com.intellij.openapi.actionSystem.DataContext,java.util.Set,java.util.function.Predicate):Z
- s:isInContentRoot(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.ProjectFileIndex):Z
- p:postProcess(com.intellij.psi.PsiElement,java.lang.String,java.util.Map):V
- p:removeExtension(java.lang.String,java.lang.String):java.lang.String
c:com.intellij.ide.actions.DefaultSearchEverywhereClassifier
- com.intellij.ide.actions.SearchEverywhereClassifier
- <init>():V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- getVirtualFile(java.lang.Object):com.intellij.openapi.vfs.VirtualFile
- isClass(java.lang.Object):Z
- isSymbol(java.lang.Object):Z
a:com.intellij.ide.actions.DumbAwareCopyPathProvider
- com.intellij.ide.actions.CopyPathProvider
- com.intellij.openapi.project.DumbAware
- <init>():V
f:com.intellij.ide.actions.EditFileTemplatesAction
- com.intellij.openapi.project.DumbAwareAction
- <init>(java.lang.String):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.ExcludingActionGroup
- com.intellij.openapi.actionSystem.ActionGroupWrapper
- <init>(com.intellij.openapi.actionSystem.ActionGroup,java.util.Set):V
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
f:com.intellij.ide.actions.ExternalJavaDocAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:showExternalJavadoc(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String,com.intellij.openapi.actionSystem.DataContext):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.GotoActionAction
- com.intellij.ide.actions.SearchEverywhereBaseAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:openOptionOrPerformAction(java.lang.Object,java.lang.String,com.intellij.openapi.project.Project,java.awt.Component,I,com.intellij.openapi.util.Computable):V
- s:performAction(java.lang.Object,java.awt.Component,com.intellij.openapi.actionSystem.AnActionEvent):V
- p:requiresProject():Z
a:com.intellij.ide.actions.GotoActionBase
- com.intellij.openapi.actionSystem.AnAction
- ps:myInAction:java.lang.Class
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- ps:getInitialText(Z,com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.util.Pair
- s:getInitialTextForNavigation(com.intellij.openapi.actionSystem.AnActionEvent):java.lang.String
- s:getPsiContext(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.psi.PsiElement
- s:getPsiContext(com.intellij.openapi.project.Project):com.intellij.psi.PsiElement
- pa:gotoActionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:hasContributors(com.intellij.openapi.actionSystem.DataContext):Z
- p:requiresProject():Z
- p:showNavigationPopup(com.intellij.ide.actions.GotoActionBase$GotoActionCallback,java.lang.String,com.intellij.ide.util.gotoByName.ChooseByNamePopup):V
- p:showNavigationPopup(com.intellij.ide.actions.GotoActionBase$GotoActionCallback,java.lang.String,com.intellij.ide.util.gotoByName.ChooseByNamePopup,Z):V
- p:showNavigationPopup(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.actions.GotoActionBase$GotoActionCallback):V
- p:showNavigationPopup(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.actions.GotoActionBase$GotoActionCallback,java.lang.String,Z):V
- p:showNavigationPopup(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.actions.GotoActionBase$GotoActionCallback,java.lang.String,Z,Z):V
- p:showNavigationPopup(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.actions.GotoActionBase$GotoActionCallback,java.lang.String,Z,Z,com.intellij.ide.util.gotoByName.ChooseByNameItemProvider):V
- p:showNavigationPopup(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.actions.GotoActionBase$GotoActionCallback,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
pa:com.intellij.ide.actions.GotoActionBase$GotoActionCallback
- p:<init>():V
- p:createFilter(com.intellij.ide.util.gotoByName.ChooseByNamePopup):com.intellij.ide.util.gotoByName.ChooseByNameFilter
- a:elementChosen(com.intellij.ide.util.gotoByName.ChooseByNamePopup,java.lang.Object):V
f:com.intellij.ide.actions.GotoClassAction
- com.intellij.ide.actions.SearchEverywhereBaseAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.GotoClassPresentationUpdater
- sf:INSTANCE:com.intellij.ide.actions.GotoClassPresentationUpdater
- sf:getActionTitle():java.lang.String
- sf:getActionTitlePluralized():java.util.List
- sf:getElementKinds():java.util.Set
- sf:getElementKindsPluralized():java.util.Set
- sf:getTabTitle():java.lang.String
- sf:getTabTitlePluralized():java.lang.String
c:com.intellij.ide.actions.GotoFileAction
- com.intellij.ide.actions.SearchEverywhereBaseAction
- com.intellij.openapi.project.DumbAware
- sf:ID:java.lang.String
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.GotoFileItemProvider
- com.intellij.ide.util.gotoByName.DefaultChooseByNameItemProvider
- sf:EXACT_MATCH_DEGREE:I
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.ide.util.gotoByName.GotoFileModel):V
- filterElementsWithWeights(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,com.intellij.util.indexing.FindSymbolParameters,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
- s:getQualifiedNameMatcher(java.lang.String):com.intellij.psi.codeStyle.MinusculeMatcher
- s:getSanitizedPattern(java.lang.String,com.intellij.ide.util.gotoByName.GotoFileModel):java.lang.String
- s:unitePaths(java.lang.String,java.lang.String):java.lang.String
f:com.intellij.ide.actions.GotoRelatedSymbolAction
- com.intellij.openapi.actionSystem.AnAction
- sf:Companion:com.intellij.ide.actions.GotoRelatedSymbolAction$Companion
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- sf:getItems(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):java.util.List
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.GotoRelatedSymbolAction$Companion
- f:getItems(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):java.util.List
- bs:getItems$default(com.intellij.ide.actions.GotoRelatedSymbolAction$Companion,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext,I,java.lang.Object):java.util.List
f:com.intellij.ide.actions.NewActionGroup
- com.intellij.openapi.actionSystem.ActionGroup
- <init>():V
- s:anyActionFromGroupMatches(com.intellij.openapi.actionSystem.ActionGroup,Z,java.util.function.Predicate):Z
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- s:isActionInNewPopupMenu(com.intellij.openapi.actionSystem.AnAction):Z
c:com.intellij.ide.actions.NewElementAction
- com.intellij.openapi.project.DumbAwareAction
- com.intellij.openapi.actionSystem.PopupAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:getActionSelectionAid():com.intellij.openapi.ui.popup.JBPopupFactory$ActionSelectionAid
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getDisposeCallback():java.lang.Runnable
- p:getGroup(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.ActionGroup
- p:getMaxRowCount():I
- p:getPlace():java.lang.String
- p:getPreselectActionCondition(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.util.Condition
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:isShowDisabledActions():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.NewElementSamePlaceAction
- com.intellij.ide.actions.NewElementAction
- <init>():V
- p:isEnabled(com.intellij.openapi.actionSystem.AnActionEvent):Z
com.intellij.ide.actions.SaveFileAsTemplateHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getTemplateText(com.intellij.psi.PsiFile,java.lang.String,java.lang.String):java.lang.String
c:com.intellij.ide.actions.SearchEverywhereAction
- com.intellij.ide.actions.SearchEverywhereBaseAction
- com.intellij.openapi.actionSystem.DataProvider
- com.intellij.openapi.actionSystem.RightAlignedToolbarAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- com.intellij.openapi.project.DumbAware
- sf:SEARCH_EVERYWHERE_POPUP:com.intellij.openapi.util.Key
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getData(java.lang.String):java.lang.Object
- ps:getShortcut():java.lang.String
a:com.intellij.ide.actions.SearchEverywhereBaseAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:hasContributors(com.intellij.openapi.actionSystem.DataContext):Z
- p:requiresProject():Z
- p:showInSearchEverywherePopup(java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent,Z,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.ide.actions.SearchEverywhereClassifier
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- a:getVirtualFile(java.lang.Object):com.intellij.openapi.vfs.VirtualFile
- a:isClass(java.lang.Object):Z
- a:isSymbol(java.lang.Object):Z
f:com.intellij.ide.actions.SearchEverywhereClassifier$EP_Manager
- s:getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- s:getProjectScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- s:getVirtualFile(java.lang.Object):com.intellij.openapi.vfs.VirtualFile
- s:isClass(java.lang.Object):Z
- s:isSymbol(java.lang.Object):Z
c:com.intellij.ide.actions.SearchEverywherePsiRenderer
- com.intellij.ide.util.PsiElementListCellRenderer
- <init>(com.intellij.openapi.Disposable):V
- p:createLeftRenderer(javax.swing.JList,java.lang.Object):com.intellij.ui.ColoredListCellRenderer
- p:customizeNonPsiElementLeftRenderer(com.intellij.ui.ColoredListCellRenderer,javax.swing.JList,java.lang.Object,I,Z,Z):Z
- p:getContainerText(com.intellij.psi.PsiElement,java.lang.String):java.lang.String
- p:getContainerTextForLeftComponent(com.intellij.psi.PsiElement,java.lang.String,I,java.awt.FontMetrics):java.lang.String
- getElementText(com.intellij.psi.PsiElement):java.lang.String
- p:getErrorAttributes():com.intellij.ui.SimpleTextAttributes
- p:getIconFlags():I
f:com.intellij.ide.actions.SearchEverywherePsiRenderer$SELayout
- java.awt.BorderLayout
- <init>():V
- layoutContainer(java.awt.Container):V
f:com.intellij.ide.actions.SelectInAction
- com.intellij.openapi.actionSystem.PerformWithDocumentsCommitted
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.SelectInContextImpl
- com.intellij.ide.FileSelectInContext
- s:createContext(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ide.SelectInContext
- s:createFileSystemItemContext(com.intellij.psi.PsiElement):com.intellij.ide.SelectInContext
- getSelectorInFile():java.lang.Object
f:com.intellij.ide.actions.SetShortcutAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- sf:SELECTED_ACTION:com.intellij.openapi.actionSystem.DataKey
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.SynchronizeCurrentFileAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.TemplateKindCombo
- com.intellij.ui.ComboboxWithBrowseButton
- <init>():V
- addItem(java.lang.String,javax.swing.Icon,java.lang.String):V
- clear():V
- getSelectedName():java.lang.String
- registerUpDownHint(javax.swing.JComponent):V
- setButtonListener(java.awt.event.ActionListener):V
- setSelectedName(java.lang.String):V
a:com.intellij.ide.actions.TemplateKindProvider
- <init>():V
- s:addAdditionalKinds(com.intellij.openapi.actionSystem.AnAction,com.intellij.psi.PsiDirectory,com.intellij.ide.actions.CreateFileFromTemplateDialog$Builder):V
- a:getAdditionalKinds(com.intellij.psi.PsiDirectory):com.intellij.ide.actions.TemplateKindProvider$Kind[]
- a:isAvailable(java.lang.Class):Z
f:com.intellij.ide.actions.TemplateKindProvider$Kind
- java.lang.Record
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- icon():javax.swing.Icon
- name():java.lang.String
- templateName():java.lang.String
f:com.intellij.ide.actions.ViewStructureAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:createPopup(com.intellij.openapi.project.Project,com.intellij.openapi.fileEditor.FileEditor):com.intellij.ide.util.FileStructurePopup
- s:createStructureViewModel(com.intellij.openapi.project.Project,com.intellij.openapi.fileEditor.FileEditor,com.intellij.ide.structureView.StructureView):com.intellij.ide.structureView.StructureViewModel
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.bigPopup.ShowFilterAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- pa:createChooser():com.intellij.ide.util.ElementsChooser
- getDimensionServiceKey():java.lang.String
- pa:isActive():Z
- pa:isEnabled():Z
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.newclass.CreateWithTemplatesDialogPanel
- com.intellij.ide.ui.newItemPopup.NewItemWithTemplatesPopupPanel
- <init>(java.lang.String,java.util.List):V
- getEnteredName():java.lang.String
- getNameField():javax.swing.JTextField
- getSelectedTemplate():java.lang.String
- setTemplateSelectorMatcher(java.util.function.BiFunction):V
f:com.intellij.ide.actions.newclass.CreateWithTemplatesDialogPanel$TemplatePresentation
- java.lang.Record
- <init>(java.lang.String,javax.swing.Icon,java.lang.String):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- icon():javax.swing.Icon
- kind():java.lang.String
- templateName():java.lang.String
c:com.intellij.ide.actions.runAnything.RunAnythingAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- com.intellij.openapi.project.DumbAware
- sf:ALT_IS_PRESSED:java.util.concurrent.atomic.AtomicBoolean
- sf:EXECUTOR_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:RUN_ANYTHING_ACTION_ID:java.lang.String
- sf:SHIFT_IS_PRESSED:java.util.concurrent.atomic.AtomicBoolean
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.runAnything.RunAnythingCache
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.actions.runAnything.RunAnythingCache
- getState():com.intellij.ide.actions.runAnything.RunAnythingCache$State
- isGroupVisible(com.intellij.ide.actions.runAnything.groups.RunAnythingGroup):Z
- loadState(com.intellij.ide.actions.runAnything.RunAnythingCache$State):V
- saveGroupVisibilityKey(java.lang.String,Z):V
f:com.intellij.ide.actions.runAnything.RunAnythingCache$State
- <init>():V
- getCommands():java.util.List
a:com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- com.intellij.openapi.project.DumbAware
- sf:Companion:com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$Companion
- <init>(javax.swing.JPanel):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- a:getAvailableContexts():java.util.List
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- a:getSelectedContext():com.intellij.ide.actions.runAnything.RunAnythingContext
- a:setAvailableContexts(java.util.List):V
- a:setSelectedContext(com.intellij.ide.actions.runAnything.RunAnythingContext):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$BrowseDirectoryItem
- com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$ContextItem
- <init>(com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction,com.intellij.ide.actions.runAnything.RunAnythingContext$BrowseRecentDirectoryContext):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$ChooseContextPopup
- com.intellij.ui.popup.PopupFactoryImpl$ActionGroupPopup
- <init>(com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction,com.intellij.ui.popup.ActionPopupStep,com.intellij.openapi.actionSystem.DataContext):V
- p:getListElementRenderer():com.intellij.ui.popup.list.PopupListElementRenderer
f:com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$ChooseContextPopupStep
- com.intellij.ui.popup.ActionPopupStep
- <init>(java.util.List,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.impl.PresentationFactory,kotlin.jvm.functions.Function0):V
- f:getActions():java.util.List
- getFinalRunnable():java.lang.Runnable
- getSeparatorAbove(com.intellij.ui.popup.PopupFactoryImpl$ActionItem):com.intellij.openapi.ui.popup.ListSeparator
- f:getUpdateToolbar():kotlin.jvm.functions.Function0
f:com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$Companion
- f:allContexts(com.intellij.openapi.project.Project):java.util.List
- f:projectAndModulesContexts(com.intellij.openapi.project.Project):java.util.List
a:com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$ContextItem
- com.intellij.openapi.actionSystem.AnAction
- <init>(com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction,com.intellij.ide.actions.runAnything.RunAnythingContext):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- f:getContext():com.intellij.ide.actions.runAnything.RunAnythingContext
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$ModuleItem
- com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$ContextItem
- <init>(com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction,com.intellij.ide.actions.runAnything.RunAnythingContext$ModuleContext):V
f:com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$ProjectItem
- com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$ContextItem
- <init>(com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction,com.intellij.ide.actions.runAnything.RunAnythingContext$ProjectContext):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$RecentDirectoryItem
- com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction$ContextItem
- <init>(com.intellij.ide.actions.runAnything.RunAnythingChooseContextAction,com.intellij.ide.actions.runAnything.RunAnythingContext$RecentDirectoryContext):V
a:com.intellij.ide.actions.runAnything.RunAnythingContext
- b:<init>(java.lang.String,java.lang.String,javax.swing.Icon,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getDescription():java.lang.String
- f:getIcon():javax.swing.Icon
- f:getLabel():java.lang.String
- f:setDescription(java.lang.String):V
f:com.intellij.ide.actions.runAnything.RunAnythingContext$BrowseRecentDirectoryContext
- com.intellij.ide.actions.runAnything.RunAnythingContext
- sf:INSTANCE:com.intellij.ide.actions.runAnything.RunAnythingContext$BrowseRecentDirectoryContext
f:com.intellij.ide.actions.runAnything.RunAnythingContext$ModuleContext
- com.intellij.ide.actions.runAnything.RunAnythingContext
- <init>(com.intellij.openapi.module.Module):V
- f:component1():com.intellij.openapi.module.Module
- f:copy(com.intellij.openapi.module.Module):com.intellij.ide.actions.runAnything.RunAnythingContext$ModuleContext
- bs:copy$default(com.intellij.ide.actions.runAnything.RunAnythingContext$ModuleContext,com.intellij.openapi.module.Module,I,java.lang.Object):com.intellij.ide.actions.runAnything.RunAnythingContext$ModuleContext
- equals(java.lang.Object):Z
- f:getModule():com.intellij.openapi.module.Module
- hashCode():I
f:com.intellij.ide.actions.runAnything.RunAnythingContext$ProjectContext
- com.intellij.ide.actions.runAnything.RunAnythingContext
- <init>(com.intellij.openapi.project.Project):V
- f:component1():com.intellij.openapi.project.Project
- f:copy(com.intellij.openapi.project.Project):com.intellij.ide.actions.runAnything.RunAnythingContext$ProjectContext
- bs:copy$default(com.intellij.ide.actions.runAnything.RunAnythingContext$ProjectContext,com.intellij.openapi.project.Project,I,java.lang.Object):com.intellij.ide.actions.runAnything.RunAnythingContext$ProjectContext
- equals(java.lang.Object):Z
- f:getProject():com.intellij.openapi.project.Project
- hashCode():I
f:com.intellij.ide.actions.runAnything.RunAnythingContext$RecentDirectoryContext
- com.intellij.ide.actions.runAnything.RunAnythingContext
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.ide.actions.runAnything.RunAnythingContext$RecentDirectoryContext
- bs:copy$default(com.intellij.ide.actions.runAnything.RunAnythingContext$RecentDirectoryContext,java.lang.String,I,java.lang.Object):com.intellij.ide.actions.runAnything.RunAnythingContext$RecentDirectoryContext
- equals(java.lang.Object):Z
- f:getPath():java.lang.String
- hashCode():I
f:com.intellij.ide.actions.runAnything.RunAnythingContextUtils
- sf:getPath(com.intellij.ide.actions.runAnything.RunAnythingContext):java.lang.String
f:com.intellij.ide.actions.runAnything.RunAnythingManager
- <init>(com.intellij.openapi.project.Project):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.actions.runAnything.RunAnythingManager
- isShown():Z
- show(java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
- show(java.lang.String,Z,com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.actions.runAnything.RunAnythingPopupUI
- com.intellij.ide.actions.BigPopupUI
- sf:DOWN_KEYSTROKE:javax.swing.KeyStroke
- sf:SEARCH_FIELD_COLUMNS:I
- sf:UNKNOWN_CONFIGURATION_ICON:javax.swing.Icon
- sf:UP_KEYSTROKE:javax.swing.KeyStroke
- <init>(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:adjustEmptyText(com.intellij.ui.components.JBTextField,java.util.function.Predicate,java.lang.String,java.lang.String):V
- createList():com.intellij.ui.components.JBList
- dispose():V
- s:getExecutor():com.intellij.execution.Executor
- getFirstContentRoot(com.intellij.openapi.module.Module):com.intellij.openapi.vfs.VirtualFile
- s:getSearchingModel(com.intellij.ui.components.JBList):com.intellij.ide.actions.runAnything.RunAnythingSearchListModel
- getUserInputText():java.lang.String
- initMySearchField():V
- initResultsList():V
- s:insert(com.intellij.ide.actions.runAnything.groups.RunAnythingGroup,com.intellij.ide.actions.runAnything.RunAnythingSearchListModel,com.intellij.openapi.actionSystem.DataContext,java.lang.String,I,I):com.intellij.openapi.util.ActionCallback
- installScrollingActions():V
- setAdText(java.lang.String):V
- s:trimHelpPattern(java.lang.String):java.lang.String
f:com.intellij.ide.actions.runAnything.RunAnythingRunConfigurationProvider
- com.intellij.ide.actions.runAnything.activity.RunAnythingProviderBase
- <init>():V
- getCompletionGroupTitle():java.lang.String
- getExecutionContexts(com.intellij.openapi.actionSystem.DataContext):java.util.List
- getHelpGroupTitle():java.lang.String
- getValues(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.util.Collection
a:com.intellij.ide.actions.runAnything.RunAnythingSearchListModel
- com.intellij.ui.CollectionListModel
- <init>():V
- pa:getGroups():java.util.List
- update():V
f:com.intellij.ide.actions.runAnything.RunAnythingUtil
- sf:LOG:com.intellij.openapi.diagnostic.Logger
- sf:SHIFT_SHORTCUT_TEXT:java.lang.String
- <init>():V
- s:executeMatched(com.intellij.openapi.actionSystem.DataContext,java.lang.String):V
- s:fetchProject(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.project.Project
- s:getAdContextText():java.lang.String
- s:getAdDebugText():java.lang.String
- s:getAdDeleteCommandText():java.lang.String
- s:getOrCreateWrappedCommands(com.intellij.openapi.project.Project):java.util.Collection
- s:getSearchingModel(com.intellij.ui.components.JBList):com.intellij.ide.actions.runAnything.RunAnythingSearchListModel
a:com.intellij.ide.actions.runAnything.activity.RunAnythingAnActionProvider
- com.intellij.ide.actions.runAnything.activity.RunAnythingProviderBase
- <init>():V
- execute(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.AnAction):V
- getAdText():java.lang.String
- getIcon(com.intellij.openapi.actionSystem.AnAction):javax.swing.Icon
- getMainListItem(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.AnAction):com.intellij.ide.actions.runAnything.items.RunAnythingItem
a:com.intellij.ide.actions.runAnything.activity.RunAnythingCommandLineProvider
- com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider
- <init>():V
- findMatchingValue(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.lang.String
- getCommand(java.lang.String):java.lang.String
- a:getHelpCommand():java.lang.String
- getHelpCommandAliases():java.util.List
- getValues(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.util.List
- pa:run(com.intellij.openapi.actionSystem.DataContext,com.intellij.ide.actions.runAnything.activity.RunAnythingCommandLineProvider$CommandLine):Z
- p:run(com.intellij.openapi.actionSystem.DataContext,java.lang.String):Z
- pa:suggestCompletionVariants(com.intellij.openapi.actionSystem.DataContext,com.intellij.ide.actions.runAnything.activity.RunAnythingCommandLineProvider$CommandLine):kotlin.sequences.Sequence
f:com.intellij.ide.actions.runAnything.activity.RunAnythingCommandLineProvider$CommandLine
- <init>(java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- f:contains(java.lang.String):Z
- f:getCommand():java.lang.String
- f:getCompletedParameters():java.util.List
- f:getHelpCommand():java.lang.String
- f:getParameters():java.util.List
- f:getPrefix():java.lang.String
- f:getToComplete():java.lang.String
a:com.intellij.ide.actions.runAnything.activity.RunAnythingCommandProvider
- com.intellij.ide.actions.runAnything.activity.RunAnythingProviderBase
- <init>():V
- execute(com.intellij.openapi.actionSystem.DataContext,java.lang.String):V
- getAdText():java.lang.String
- getCommand(java.lang.String):java.lang.String
- getIcon(java.lang.String):javax.swing.Icon
- s:runCommand(com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.execution.Executor,com.intellij.openapi.actionSystem.DataContext):V
a:com.intellij.ide.actions.runAnything.activity.RunAnythingMatchedRunConfigurationProvider
- com.intellij.ide.actions.runAnything.activity.RunAnythingProviderBase
- <init>():V
- a:createConfiguration(com.intellij.openapi.actionSystem.DataContext,java.lang.String):com.intellij.execution.RunnerAndConfigurationSettings
- a:getConfigurationFactory():com.intellij.execution.configurations.ConfigurationFactory
- getHelpIcon():javax.swing.Icon
a:com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider
- com.intellij.ide.actions.runAnything.activity.RunAnythingProviderBase
- <init>():V
- execute(com.intellij.openapi.actionSystem.DataContext,java.lang.Object):V
- pf:notification(com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider$ExecutionStatus,kotlin.jvm.functions.Function1):V
- bs:notification$default(com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider,com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider$ExecutionStatus,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- pa:run(com.intellij.openapi.actionSystem.DataContext,java.lang.Object):Z
pe:com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider$ExecutionStatus
- java.lang.Enum
- sf:ERROR:com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider$ExecutionStatus
- sf:SUCCESS:com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider$ExecutionStatus
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider$ExecutionStatus
- s:values():com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider$ExecutionStatus[]
pf:com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider$NotificationBuilder
- content:java.lang.String
- <init>(com.intellij.ide.actions.runAnything.activity.RunAnythingNotifiableProvider,com.intellij.openapi.actionSystem.DataContext,java.lang.Object):V
- f:action(java.lang.String,kotlin.jvm.functions.Function0):V
- f:build():com.intellij.notification.Notification
- f:getContent():java.lang.String
- f:getDataContext():com.intellij.openapi.actionSystem.DataContext
- f:getSubtitle():java.lang.String
- f:getTitle():java.lang.String
- f:getValue():java.lang.Object
- f:setContent(java.lang.String):V
- f:setSubtitle(java.lang.String):V
- f:setTitle(java.lang.String):V
com.intellij.ide.actions.runAnything.activity.RunAnythingProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:EXECUTING_CONTEXT:com.intellij.openapi.actionSystem.DataKey
- a:execute(com.intellij.openapi.actionSystem.DataContext,java.lang.Object):V
- s:findMatchedProvider(com.intellij.openapi.actionSystem.DataContext,java.lang.String):com.intellij.ide.actions.runAnything.activity.RunAnythingProvider
- a:findMatchingValue(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.lang.Object
- a:getAdText():java.lang.String
- a:getCommand(java.lang.Object):java.lang.String
- a:getCompletionGroupTitle():java.lang.String
- a:getExecutionContexts(com.intellij.openapi.actionSystem.DataContext):java.util.List
- getHelpGroupTitle():java.lang.String
- a:getHelpItem(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.actions.runAnything.items.RunAnythingItem
- a:getIcon(java.lang.Object):javax.swing.Icon
- a:getMainListItem(com.intellij.openapi.actionSystem.DataContext,java.lang.Object):com.intellij.ide.actions.runAnything.items.RunAnythingItem
- a:getMatcher(com.intellij.openapi.actionSystem.DataContext,java.lang.String):com.intellij.util.text.Matcher
- a:getValues(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.util.Collection
a:com.intellij.ide.actions.runAnything.activity.RunAnythingProviderBase
- com.intellij.ide.actions.runAnything.activity.RunAnythingProvider
- <init>():V
- findMatchingValue(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.lang.Object
- getAdText():java.lang.String
- getCompletionGroupTitle():java.lang.String
- getExecutionContexts(com.intellij.openapi.actionSystem.DataContext):java.util.List
- getHelpCommand():java.lang.String
- getHelpCommandPlaceholder():java.lang.String
- getHelpDescription():java.lang.String
- getHelpIcon():javax.swing.Icon
- getHelpItem(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.actions.runAnything.items.RunAnythingHelpItem
- getIcon(java.lang.Object):javax.swing.Icon
- getMainListItem(com.intellij.openapi.actionSystem.DataContext,java.lang.Object):com.intellij.ide.actions.runAnything.items.RunAnythingItem
- getMatcher(com.intellij.openapi.actionSystem.DataContext,java.lang.String):com.intellij.util.text.Matcher
- getValues(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.util.Collection
f:com.intellij.ide.actions.runAnything.activity.RunAnythingRecentProjectProvider
- com.intellij.ide.actions.runAnything.activity.RunAnythingAnActionProvider
- <init>():V
- getCommand(com.intellij.openapi.actionSystem.AnAction):java.lang.String
- getCompletionGroupTitle():java.lang.String
- getExecutionContexts(com.intellij.openapi.actionSystem.DataContext):java.util.List
- getHelpCommand():java.lang.String
- getHelpCommandPlaceholder():java.lang.String
- getHelpGroupTitle():java.lang.String
- getMainListItem(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.AnAction):com.intellij.ide.actions.runAnything.items.RunAnythingItem
- getValues(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.util.Collection
a:com.intellij.ide.actions.runAnything.commands.RunAnythingCommandCustomizer
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- s:customizeCommandLine(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.vfs.VirtualFile,com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.configurations.GeneralCommandLine
- p:customizeCommandLine(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.actionSystem.DataContext,com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.configurations.GeneralCommandLine
- s:customizeContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DataContext
- p:customizeDataContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DataContext
c:com.intellij.ide.actions.runAnything.execution.RunAnythingRunProfile
- com.intellij.execution.configurations.RunProfile
- <init>(com.intellij.execution.configurations.GeneralCommandLine,java.lang.String):V
- getCommandLine():com.intellij.execution.configurations.GeneralCommandLine
- getIcon():javax.swing.Icon
- getName():java.lang.String
- getOriginalCommand():java.lang.String
- getState(com.intellij.execution.Executor,com.intellij.execution.runners.ExecutionEnvironment):com.intellij.execution.configurations.RunProfileState
f:com.intellij.ide.actions.runAnything.groups.RunAnythingCompletionGroup
- com.intellij.ide.actions.runAnything.groups.RunAnythingGroup
- <init>(com.intellij.ide.actions.runAnything.activity.RunAnythingProvider):V
- s:createCompletionGroup(com.intellij.ide.actions.runAnything.activity.RunAnythingProvider):com.intellij.ide.actions.runAnything.groups.RunAnythingGroup
- s:createCompletionGroups():java.util.Collection
- getGroupItems(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.util.Collection
- getProvider():com.intellij.ide.actions.runAnything.activity.RunAnythingProvider
- getTitle():java.lang.String
f:com.intellij.ide.actions.runAnything.groups.RunAnythingGeneralGroup
- com.intellij.ide.actions.runAnything.groups.RunAnythingGroup
- <init>():V
- getGroupItems(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.util.Collection
- s:getGroupTitle():java.lang.String
- getTitle():java.lang.String
a:com.intellij.ide.actions.runAnything.groups.RunAnythingGroup
- sf:RUN_ANYTHING_MATCHER_BUILDER:com.intellij.util.Function
- <init>():V
- s:clearIndexes(java.util.Collection):V
- s:clearMoreIndex(java.util.Collection):V
- f:collectItems(com.intellij.openapi.actionSystem.DataContext,java.util.List,java.lang.String):V
- s:findGroup(java.util.Collection,I):com.intellij.ide.actions.runAnything.groups.RunAnythingGroup
- s:findGroupByMoreIndex(java.util.Collection,I):com.intellij.ide.actions.runAnything.groups.RunAnythingGroup
- s:findGroupByTitleIndex(java.util.Collection,I):com.intellij.ide.actions.runAnything.groups.RunAnythingGroup
- s:findItemGroup(java.util.List,I):com.intellij.ide.actions.runAnything.groups.RunAnythingGroup
- s:getAllIndexes(java.util.Collection):I[]
- a:getItems(com.intellij.openapi.actionSystem.DataContext,java.util.List,java.lang.String,I):com.intellij.ide.actions.runAnything.groups.RunAnythingGroup$SearchResult
- p:getMaxInitialItems():I
- getMaxItemsToInsert():I
- a:getTitle():java.lang.String
- s:getTitle(java.util.Collection,I):java.lang.String
- s:isMoreIndex(java.util.Collection,I):Z
- resetMoreIndex():V
- s:shiftIndexes(java.util.Collection,I,I):V
f:com.intellij.ide.actions.runAnything.groups.RunAnythingGroup$SearchResult
- java.util.ArrayList
- <init>():V
- isNeedMore():Z
- setNeedMore(Z):V
c:com.intellij.ide.actions.runAnything.groups.RunAnythingHelpGroup
- com.intellij.ide.actions.runAnything.groups.RunAnythingGroup
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- <init>(java.lang.String,java.util.List):V
- getGroupItems(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.util.Collection
- p:getMaxInitialItems():I
- getProviders():java.util.Collection
- getTitle():java.lang.String
c:com.intellij.ide.actions.runAnything.groups.RunAnythingRecentGroup
- com.intellij.ide.actions.runAnything.groups.RunAnythingGroup
- <init>():V
- getGroupItems(com.intellij.openapi.actionSystem.DataContext,java.lang.String):java.util.Collection
- p:getMaxInitialItems():I
- getTitle():java.lang.String
a:com.intellij.ide.actions.runAnything.handlers.RunAnythingCommandHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getConsoleBuilder(com.intellij.openapi.project.Project):com.intellij.execution.filters.TextConsoleBuilder
- s:getMatchedHandler(com.intellij.openapi.project.Project,java.lang.String):com.intellij.ide.actions.runAnything.handlers.RunAnythingCommandHandler
- getProcessTerminatedCustomOutput(J):java.lang.String
- a:isMatched(com.intellij.openapi.project.Project,java.lang.String):Z
- shouldKillProcessSoftly():Z
f:com.intellij.ide.actions.runAnything.items.RunAnythingActionItem
- com.intellij.ide.actions.runAnything.items.RunAnythingItemBase
- <init>(com.intellij.openapi.actionSystem.AnAction,java.lang.String,javax.swing.Icon):V
- s:getCommand(com.intellij.openapi.actionSystem.AnAction,java.lang.String):java.lang.String
- getDescription():java.lang.String
f:com.intellij.ide.actions.runAnything.items.RunAnythingHelpItem
- com.intellij.ide.actions.runAnything.items.RunAnythingItemBase
- <init>(java.lang.String,java.lang.String,java.lang.String,javax.swing.Icon):V
- createComponent(java.lang.String,Z,Z):java.awt.Component
a:com.intellij.ide.actions.runAnything.items.RunAnythingItem
- <init>():V
- a:createComponent(java.lang.String,Z,Z):java.awt.Component
- a:getCommand():java.lang.String
c:com.intellij.ide.actions.runAnything.items.RunAnythingItemBase
- com.intellij.ide.actions.runAnything.items.RunAnythingItem
- pf:myIcon:javax.swing.Icon
- <init>(java.lang.String,javax.swing.Icon):V
- ps:appendDescription(com.intellij.ui.SimpleColoredComponent,java.lang.String,java.awt.Color):V
- createComponent(java.lang.String,Z,Z):java.awt.Component
- equals(java.lang.Object):Z
- getCommand():java.lang.String
- getDescription():java.lang.String
- hashCode():I
- setupIcon(com.intellij.ui.SimpleColoredComponent,javax.swing.Icon):V
f:com.intellij.ide.actions.runAnything.ui.RunAnythingScrollingUtil
- <init>():V
- s:installActions(javax.swing.JList,javax.swing.JTextField,java.lang.Runnable,Z):V
a:com.intellij.ide.actions.searcheverywhere.AbstractEqualityProvider
- com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider
- <init>():V
- pa:areEqual(com.intellij.ide.actions.searcheverywhere.SearchEverywhereFoundElementInfo,com.intellij.ide.actions.searcheverywhere.SearchEverywhereFoundElementInfo):Z
- f:compareItems(com.intellij.ide.actions.searcheverywhere.SearchEverywhereFoundElementInfo,java.util.List):com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType
a:com.intellij.ide.actions.searcheverywhere.AbstractGotoSEContributor
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereExtendedInfoProvider
- com.intellij.ide.actions.searcheverywhere.WeightedSearchEverywhereContributor
- sf:Companion:com.intellij.ide.actions.searcheverywhere.AbstractGotoSEContributor$Companion
- p:isScopeDefaultAndAutoSet:Z
- pf:myProject:com.intellij.openapi.project.Project
- pf:myPsiContext:com.intellij.psi.SmartPsiElementPointer
- p:myScopeDescriptor:com.intellij.ide.util.scopeChooser.ScopeDescriptor
- p:<init>(com.intellij.openapi.actionSystem.AnActionEvent):V
- psf:applyPatternFilter(java.lang.String,java.util.regex.Pattern):java.lang.String
- sf:createContext(com.intellij.openapi.project.Project,com.intellij.psi.SmartPsiElementPointer):com.intellij.openapi.actionSystem.DataContext
- pa:createModel(com.intellij.openapi.project.Project):com.intellij.ide.util.gotoByName.FilteringGotoByModel
- p:createScopes():java.util.List
- pf:doGetActions(com.intellij.ide.actions.searcheverywhere.PersistentSearchEverywhereContributorFilter,com.intellij.ide.util.ElementsChooser$StatisticsCollector,java.lang.Runnable):java.util.List
- fetchWeightedElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):V
- filterControlSymbols(java.lang.String):java.lang.String
- getDataForItem(java.lang.Object,java.lang.String):java.lang.Object
- getElementPriority(java.lang.Object,java.lang.String):I
- getElementsRenderer():javax.swing.ListCellRenderer
- getItemDescription(java.lang.Object):java.lang.String
- psf:getLineAndColumn(java.lang.String):com.intellij.util.IntPair
- pf:getProject():com.intellij.openapi.project.Project
- getScope():com.intellij.ide.util.scopeChooser.ScopeDescriptor
- getSearchProviderId():java.lang.String
- getSupportedScopes():java.util.List
- isDumbAware():Z
- pf:isEverywhere():Z
- isMultiSelectionSupported():Z
- isShownInSeparateTab():Z
- p:processElement(com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor,com.intellij.ide.util.gotoByName.FilteringGotoByModel,java.lang.Object,I):Z
- processSelectedItem(java.lang.Object,I,java.lang.String):Z
- setScope(com.intellij.ide.util.scopeChooser.ScopeDescriptor):V
- showInFindResults():Z
- p:triggerLineOrColumnFeatureUsed(com.intellij.pom.Navigatable,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.ide.actions.searcheverywhere.AbstractGotoSEContributor$Companion
- f:createContext(com.intellij.openapi.project.Project,com.intellij.psi.SmartPsiElementPointer):com.intellij.openapi.actionSystem.DataContext
- f:getElement(com.intellij.psi.PsiElement,java.lang.String):com.intellij.psi.PsiElement
c:com.intellij.ide.actions.searcheverywhere.ActionSearchEverywhereContributor
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereExtendedInfoProvider
- com.intellij.ide.actions.searcheverywhere.WeightedSearchEverywhereContributor
- com.intellij.ide.lightEdit.LightEditCompatible
- sf:Companion:com.intellij.ide.actions.searcheverywhere.ActionSearchEverywhereContributor$Companion
- <init>(com.intellij.ide.actions.searcheverywhere.ActionSearchEverywhereContributor):V
- <init>(com.intellij.openapi.project.Project,java.awt.Component,com.intellij.openapi.editor.Editor):V
- createExtendedInfo():com.intellij.ide.actions.searcheverywhere.ExtendedInfo
- pf:doFetchItems(kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function2,java.lang.String,kotlin.jvm.functions.Function2):V
- fetchWeightedElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):V
- getActions(java.lang.Runnable):java.util.List
- getAdvertisement():java.lang.String
- getDataForItem(com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValue,java.lang.String):java.lang.Object
- getElementsRenderer():javax.swing.ListCellRenderer
- getGroupName():java.lang.String
- getItemDescription(com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValue):java.lang.String
- pf:getModel():com.intellij.ide.util.gotoByName.GotoActionModel
- pf:getMyDisabledActions():Z
- getSearchProviderId():java.lang.String
- getSortWeight():I
- f:includeNonProjectItemsText():java.lang.String
- isEmptyPatternSupported():Z
- pf:isScopeDefaultAndAutoSet():Z
- isShownInSeparateTab():Z
- pf:processRecentActions(kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function2,java.lang.String,kotlin.jvm.functions.Function2):V
- processSelectedItem(com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValue,I,java.lang.String):Z
- pf:setMyDisabledActions(Z):V
- pf:setScopeDefaultAndAutoSet(Z):V
- showInFindResults():Z
f:com.intellij.ide.actions.searcheverywhere.ActionSearchEverywhereContributor$Companion
- f:showAssignShortcutDialog(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValue):V
f:com.intellij.ide.actions.searcheverywhere.ActionSearchEverywhereContributor$Factory
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributorFactory
- <init>():V
- createContributor(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
a:com.intellij.ide.actions.searcheverywhere.CheckBoxSearchEverywhereToggleAction
- com.intellij.openapi.actionSystem.ex.CheckboxAction
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereToggleAction
- com.intellij.openapi.project.DumbAware
- <init>(java.lang.String):V
- canToggleEverywhere():Z
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
c:com.intellij.ide.actions.searcheverywhere.ClassSearchEverywhereContributor
- com.intellij.ide.actions.searcheverywhere.AbstractGotoSEContributor
- com.intellij.ide.actions.searcheverywhere.EssentialContributor
- com.intellij.ide.actions.searcheverywhere.SearchEverywherePreviewProvider
- sf:Companion:com.intellij.ide.actions.searcheverywhere.ClassSearchEverywhereContributor$Companion
- <init>(com.intellij.openapi.actionSystem.AnActionEvent):V
- createExtendedInfo():com.intellij.ide.actions.searcheverywhere.ExtendedInfo
- sf:createLanguageFilter(com.intellij.openapi.project.Project):com.intellij.ide.actions.searcheverywhere.PersistentSearchEverywhereContributorFilter
- p:createModel(com.intellij.openapi.project.Project):com.intellij.ide.util.gotoByName.FilteringGotoByModel
- p:createSourceNavigationRequest(com.intellij.psi.PsiElement,com.intellij.openapi.vfs.VirtualFile,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- filterControlSymbols(java.lang.String):java.lang.String
- getActions(java.lang.Runnable):java.util.List
- getElementPriority(java.lang.Object,java.lang.String):I
- getFullGroupName():java.lang.String
- getGroupName():java.lang.String
- getSortWeight():I
- isEmptyPatternSupported():Z
f:com.intellij.ide.actions.searcheverywhere.ClassSearchEverywhereContributor$Companion
- f:createLanguageFilter(com.intellij.openapi.project.Project):com.intellij.ide.actions.searcheverywhere.PersistentSearchEverywhereContributorFilter
f:com.intellij.ide.actions.searcheverywhere.ContributorDefinedTabsCustomizationStrategy
- <init>():V
- getSeparateTabContributors(java.util.List):java.util.List
f:com.intellij.ide.actions.searcheverywhere.EvaluationResult
- <init>(java.lang.String,java.lang.String):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:copy(java.lang.String,java.lang.String):com.intellij.ide.actions.searcheverywhere.EvaluationResult
- bs:copy$default(com.intellij.ide.actions.searcheverywhere.EvaluationResult,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.ide.actions.searcheverywhere.EvaluationResult
- equals(java.lang.Object):Z
- f:getExpression():java.lang.String
- f:getValue():java.lang.String
- hashCode():I
c:com.intellij.ide.actions.searcheverywhere.FileSearchEverywhereContributor
- com.intellij.ide.actions.searcheverywhere.AbstractGotoSEContributor
- com.intellij.ide.actions.searcheverywhere.EssentialContributor
- com.intellij.ide.actions.searcheverywhere.SearchEverywherePreviewProvider
- sf:Companion:com.intellij.ide.actions.searcheverywhere.FileSearchEverywhereContributor$Companion
- <init>(com.intellij.openapi.actionSystem.AnActionEvent):V
- createExtendedInfo():com.intellij.ide.actions.searcheverywhere.ExtendedInfo
- sf:createFileTypeFilter(com.intellij.openapi.project.Project):com.intellij.ide.actions.searcheverywhere.PersistentSearchEverywhereContributorFilter
- p:createModel(com.intellij.openapi.project.Project):com.intellij.ide.util.gotoByName.FilteringGotoByModel
- p:createSourceNavigationRequest(com.intellij.psi.PsiElement,com.intellij.openapi.vfs.VirtualFile,java.lang.String,kotlin.coroutines.Continuation):java.lang.Object
- getActions(java.lang.Runnable):java.util.List
- getDataForItem(java.lang.Object,java.lang.String):java.lang.Object
- getElementPriority(java.lang.Object,java.lang.String):I
- f:getElementsRenderer():javax.swing.ListCellRenderer
- getGroupName():java.lang.String
- getItemDescription(java.lang.Object):java.lang.String
- getSortWeight():I
- isEmptyPatternSupported():Z
- pf:processElement(com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor,com.intellij.ide.util.gotoByName.FilteringGotoByModel,java.lang.Object,I):Z
- pf:triggerLineOrColumnFeatureUsed(com.intellij.pom.Navigatable,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.ide.actions.searcheverywhere.FileSearchEverywhereContributor$Companion
- f:createFileTypeFilter(com.intellij.openapi.project.Project):com.intellij.ide.actions.searcheverywhere.PersistentSearchEverywhereContributorFilter
a:com.intellij.ide.actions.searcheverywhere.FixedTabsListCustomizationStrategy
- <init>(java.util.List):V
- getSeparateTabContributors(java.util.List):java.util.List
com.intellij.ide.actions.searcheverywhere.MergeableElement
- a:mergeWith(com.intellij.ide.actions.searcheverywhere.MergeableElement):com.intellij.ide.actions.searcheverywhere.MergeableElement
- a:shouldBeMergedIntoAnother():Z
f:com.intellij.ide.actions.searcheverywhere.PSIPresentationBgRendererWrapper
- com.intellij.ide.actions.searcheverywhere.AutoCompletionContributor
- com.intellij.ide.actions.searcheverywhere.EssentialContributor
- com.intellij.ide.actions.searcheverywhere.PossibleSlowContributor
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributorWrapper
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereExtendedInfoProvider
- com.intellij.ide.actions.searcheverywhere.SearchEverywherePreviewProvider
- com.intellij.ide.actions.searcheverywhere.WeightedSearchEverywhereContributor
- <init>(com.intellij.ide.actions.searcheverywhere.AbstractGotoSEContributor):V
- createExtendedInfo():com.intellij.ide.actions.searcheverywhere.ExtendedInfo
- dispose():V
- fetchWeightedElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):V
- filterControlSymbols(java.lang.String):java.lang.String
- getActions(java.lang.Runnable):java.util.List
- getAdvertisement():java.lang.String
- getAutocompleteItems(java.lang.String,I):java.util.List
- getDataForItem(java.lang.Object,java.lang.String):java.lang.Object
- getDelegate():com.intellij.ide.actions.searcheverywhere.AbstractGotoSEContributor
- getEffectiveContributor():com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
- getElementPriority(java.lang.Object,java.lang.String):I
- getElementsRenderer():javax.swing.ListCellRenderer
- getFullGroupName():java.lang.String
- getGroupName():java.lang.String
- getScope():com.intellij.ide.util.scopeChooser.ScopeDescriptor
- getSearchProviderId():java.lang.String
- getSortWeight():I
- getSupportedCommands():java.util.List
- getSupportedScopes():java.util.List
- isDumbAware():Z
- isEmptyPatternSupported():Z
- isEssential():Z
- isMultiSelectionSupported():Z
- isShownInSeparateTab():Z
- isSlow():Z
- processSelectedItem(java.lang.Object,I,java.lang.String):Z
- setScope(com.intellij.ide.util.scopeChooser.ScopeDescriptor):V
- showInFindResults():Z
- s:toPsi(java.lang.Object):com.intellij.psi.PsiElement
- s:wrapIfNecessary(com.intellij.ide.actions.searcheverywhere.AbstractGotoSEContributor):com.intellij.ide.actions.searcheverywhere.WeightedSearchEverywhereContributor
f:com.intellij.ide.actions.searcheverywhere.PSIPresentationBgRendererWrapper$PsiItemWithPresentation
- com.intellij.openapi.util.Pair
f:com.intellij.ide.actions.searcheverywhere.PersistentSearchEverywhereContributorFilter
- <init>(java.util.List,com.intellij.ide.util.TypeVisibilityStateHolder,java.util.function.Function,java.util.function.Function):V
- <init>(java.util.List,com.intellij.ide.util.gotoByName.ChooseByNameFilterConfiguration,java.util.function.Function,java.util.function.Function):V
- getAllElements():java.util.List
- getElementIcon(java.lang.Object):javax.swing.Icon
- getElementText(java.lang.Object):java.lang.String
- getSelectedElements():java.util.List
- isSelected(java.lang.Object):Z
- setSelected(java.lang.Object,Z):V
f:com.intellij.ide.actions.searcheverywhere.PsiElementsEqualityProvider
- com.intellij.ide.actions.searcheverywhere.AbstractEqualityProvider
- <init>():V
- areEqual(com.intellij.ide.actions.searcheverywhere.SearchEverywhereFoundElementInfo,com.intellij.ide.actions.searcheverywhere.SearchEverywhereFoundElementInfo):Z
- s:toPsi(java.lang.Object):com.intellij.psi.PsiElement
f:com.intellij.ide.actions.searcheverywhere.PsiItemWithSimilarity
- com.intellij.ide.actions.searcheverywhere.MergeableElement
- <init>(java.lang.Object,java.lang.Double):V
- b:<init>(java.lang.Object,java.lang.Double,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getSimilarityScore():java.lang.Double
- f:getValue():java.lang.Object
- f:isPureSemantic():Z
- mergeWith(com.intellij.ide.actions.searcheverywhere.MergeableElement):com.intellij.ide.actions.searcheverywhere.MergeableElement
- f:setSimilarityScore(java.lang.Double):V
- shouldBeMergedIntoAnother():Z
c:com.intellij.ide.actions.searcheverywhere.RecentFilesSEContributor
- com.intellij.ide.actions.searcheverywhere.FileSearchEverywhereContributor
- <init>(com.intellij.openapi.actionSystem.AnActionEvent):V
- fetchWeightedElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):V
- getElementPriority(java.lang.Object,java.lang.String):I
- getGroupName():java.lang.String
- getSearchProviderId():java.lang.String
- getSortWeight():I
- isShownInSeparateTab():Z
f:com.intellij.ide.actions.searcheverywhere.RecentFilesSEContributor$Factory
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributorFactory
- <init>():V
- createContributor(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
f:com.intellij.ide.actions.searcheverywhere.RunConfigurationsSEContributor
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
- <init>(com.intellij.openapi.project.Project,java.awt.Component,java.util.function.Supplier):V
- fetchElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):V
- getElementsRenderer():javax.swing.ListCellRenderer
- getGroupName():java.lang.String
- getSearchProviderId():java.lang.String
- getSortWeight():I
- getSupportedCommands():java.util.List
- processSelectedItem(com.intellij.execution.actions.ChooseRunConfigurationPopup$ItemWrapper,I,java.lang.String):Z
- showInFindResults():Z
f:com.intellij.ide.actions.searcheverywhere.RunConfigurationsSEContributor$Factory
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributorFactory
- <init>():V
- createContributor(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider
- sf:Companion:com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$Companion
- a:compareItems(com.intellij.ide.actions.searcheverywhere.SearchEverywhereFoundElementInfo,java.util.List):com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType
- s:composite(java.util.Collection):com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider
- s:getProviders():java.util.List
f:com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$Companion
- f:composite(java.util.Collection):com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
- f:getProviders():java.util.List
a:com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType
- a:combine(com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType):com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType
f:com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType$DoNothing
- com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType
- sf:INSTANCE:com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType$DoNothing
- combine(com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType):com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType
f:com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType$Replace
- com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType
- <init>(com.intellij.ide.actions.searcheverywhere.SearchEverywhereFoundElementInfo):V
- <init>(java.util.List):V
- combine(com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType):com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType
- f:component1():java.util.List
- f:copy(java.util.List):com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType$Replace
- bs:copy$default(com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType$Replace,java.util.List,I,java.lang.Object):com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType$Replace
- equals(java.lang.Object):Z
- f:getToBeReplaced():java.util.List
- hashCode():I
f:com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType$Skip
- com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType
- sf:INSTANCE:com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType$Skip
- combine(com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType):com.intellij.ide.actions.searcheverywhere.SEResultsEqualityProvider$SEEqualElementsActionType
c:com.intellij.ide.actions.searcheverywhere.SearchAdapter
- com.intellij.ide.actions.searcheverywhere.SearchListener
- <init>():V
- contributorFinished(com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor,Z):V
- contributorWaits(com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor):V
- elementsAdded(java.util.List):V
- elementsRemoved(java.util.List):V
- searchFinished(java.util.List):V
- searchFinished(java.util.Map):V
- searchStarted(java.lang.String,java.util.Collection):V
com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributorWrapper
- a:getEffectiveContributor():com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
c:com.intellij.ide.actions.searcheverywhere.SearchEverywhereFiltersAction
- com.intellij.ide.actions.bigPopup.ShowFilterAction
- <init>(com.intellij.ide.actions.searcheverywhere.PersistentSearchEverywhereContributorFilter,java.lang.Runnable):V
- p:createChooser():com.intellij.ide.util.ElementsChooser
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getFilter():com.intellij.ide.actions.searcheverywhere.PersistentSearchEverywhereContributorFilter
- p:isActive():Z
- isEnabled():Z
c:com.intellij.ide.actions.searcheverywhere.SearchEverywhereFoundElementInfo
- sf:COMPARATOR:java.util.Comparator
- f:contributor:com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
- f:element:java.lang.Object
- f:priority:I
- <init>(java.lang.Object,I,com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor):V
- getContributor():com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
- getDescription():java.lang.String
- getElement():java.lang.Object
- getPriority():I
com.intellij.ide.actions.searcheverywhere.SearchEverywhereManager
- a:getCurrentlyShownUI():com.intellij.ide.actions.searcheverywhere.SearchEverywhereUI
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.actions.searcheverywhere.SearchEverywhereManager
- a:getSelectedTabID():java.lang.String
- a:isEverywhere():Z
- a:isShown():Z
- a:setSelectedTabID(java.lang.String):V
- a:show(java.lang.String,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
- a:toggleEverywhereFilter():V
f:com.intellij.ide.actions.searcheverywhere.SearchEverywhereManagerImpl
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereManager
- sf:ALL_CONTRIBUTORS_GROUP_ID:java.lang.String
- sf:IS_SELECT_SEARCH_TEXT:com.intellij.openapi.actionSystem.DataKey
- sf:LOCATION_SETTINGS_KEY:java.lang.String
- <init>():V
- <init>(com.intellij.openapi.project.Project):V
- getCurrentlyShownUI():com.intellij.ide.actions.searcheverywhere.SearchEverywhereUI
- getPrevSelection(java.lang.String):java.lang.Object
- getSelectedTabID():java.lang.String
- isEverywhere():Z
- isShown():Z
- savePrevSelection(java.lang.String,java.lang.Object):V
- setEverywhere(Z):V
- setSelectedTabID(java.lang.String):V
- show(java.lang.String,java.lang.String,com.intellij.openapi.actionSystem.AnActionEvent):V
- toggleEverywhereFilter():V
f:com.intellij.ide.actions.searcheverywhere.SearchEverywhereMixedListInfo
- f:getContributorPriorities():java.util.Map
- f:isMixedList():Z
com.intellij.ide.actions.searcheverywhere.SearchEverywherePreviewProvider
f:com.intellij.ide.actions.searcheverywhere.SearchEverywhereUI
- com.intellij.ide.actions.BigPopupUI
- com.intellij.ide.util.gotoByName.QuickSearchComponent
- com.intellij.openapi.actionSystem.UiDataProvider
- sf:MULTIPLE_CONTRIBUTORS_ELEMENTS_LIMIT:I
- sf:SEARCH_EVENTS:com.intellij.util.messages.Topic
- sf:SEARCH_EVERYWHERE_SEARCH_FILED_KEY:java.lang.String
- sf:SINGLE_CONTRIBUTOR_ELEMENTS_LIMIT:I
- <init>(com.intellij.openapi.project.Project,java.util.List):V
- <init>(com.intellij.openapi.project.Project,java.util.List,java.util.function.Function):V
- <init>(com.intellij.openapi.project.Project,java.util.List,java.util.function.Function,com.intellij.ide.actions.searcheverywhere.SearchEverywhereSpellingCorrector):V
- addSearchListener(com.intellij.ide.actions.searcheverywhere.SearchListener):V
- clearResults():V
- closePopup():V
- createList():com.intellij.ui.components.JBList
- dispose():V
- findElementsForPattern(java.lang.String):java.util.concurrent.Future
- findPsiElementsForPattern(java.lang.String):java.util.concurrent.Future
- getFoundElementsInfo():java.util.List
- getSelectedTabID():java.lang.String
- getSelectionIdentity():java.lang.Object
- registerHint(com.intellij.openapi.ui.popup.JBPopup):V
- removeSearchListener(com.intellij.ide.actions.searcheverywhere.SearchListener):V
- sendStatisticsAndClose():V
- switchToTab(java.lang.String):V
- toggleEverywhereFilter():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- unregisterHint():V
com.intellij.ide.actions.searcheverywhere.SearchListener
- s:combine(java.util.Collection):com.intellij.ide.actions.searcheverywhere.SearchListener
- s:combine(com.intellij.ide.actions.searcheverywhere.SearchListener[]):com.intellij.ide.actions.searcheverywhere.SearchListener
- a:contributorFinished(com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor,Z):V
- a:contributorWaits(com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor):V
- a:elementsAdded(java.util.List):V
- a:elementsRemoved(java.util.List):V
- a:searchFinished(java.util.Map):V
- a:searchStarted(java.lang.String,java.util.Collection):V
e:com.intellij.ide.actions.searcheverywhere.SearchRestartReason
- java.lang.Enum
- sf:EXIT_DUMB_MODE:com.intellij.ide.actions.searcheverywhere.SearchRestartReason
- sf:SCOPE_CHANGED:com.intellij.ide.actions.searcheverywhere.SearchRestartReason
- sf:SEARCH_STARTED:com.intellij.ide.actions.searcheverywhere.SearchRestartReason
- sf:TAB_CHANGED:com.intellij.ide.actions.searcheverywhere.SearchRestartReason
- sf:TEXT_CHANGED:com.intellij.ide.actions.searcheverywhere.SearchRestartReason
- sf:TEXT_SEARCH_OPTION_CHANGED:com.intellij.ide.actions.searcheverywhere.SearchRestartReason
- s:valueOf(java.lang.String):com.intellij.ide.actions.searcheverywhere.SearchRestartReason
- s:values():com.intellij.ide.actions.searcheverywhere.SearchRestartReason[]
c:com.intellij.ide.actions.searcheverywhere.SymbolSearchEverywhereContributor
- com.intellij.ide.actions.searcheverywhere.AbstractGotoSEContributor
- com.intellij.ide.actions.searcheverywhere.PossibleSlowContributor
- com.intellij.ide.actions.searcheverywhere.SearchEverywherePreviewProvider
- <init>(com.intellij.openapi.actionSystem.AnActionEvent):V
- createExtendedInfo():com.intellij.ide.actions.searcheverywhere.ExtendedInfo
- p:createModel(com.intellij.openapi.project.Project):com.intellij.ide.util.gotoByName.FilteringGotoByModel
- getActions(java.lang.Runnable):java.util.List
- getGroupName():java.lang.String
- getSortWeight():I
f:com.intellij.ide.actions.searcheverywhere.SymbolSearchEverywhereContributor$Factory
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributorFactory
- <init>():V
- createContributor(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
f:com.intellij.ide.actions.searcheverywhere.TopHitSEContributor
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
- sf:TOP_HIT_ELEMENT_PRIORITY:I
- <init>(com.intellij.openapi.project.Project,java.awt.Component,java.util.function.Consumer):V
- fetchElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):V
- getElementPriority(java.lang.Object,java.lang.String):I
- getElementsRenderer():javax.swing.ListCellRenderer
- getGroupName():java.lang.String
- getSearchProviderId():java.lang.String
- getSortWeight():I
- getSupportedCommands():java.util.List
- processSelectedItem(java.lang.Object,I,java.lang.String):Z
- showInFindResults():Z
f:com.intellij.ide.actions.searcheverywhere.TopHitSEContributor$Factory
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributorFactory
- <init>():V
- createContributor(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
f:com.intellij.ide.actions.searcheverywhere.footer.ExtendedInfoImplKt
- sf:createPsiExtendedInfo(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):com.intellij.ide.actions.searcheverywhere.ExtendedInfo
- bs:createPsiExtendedInfo$default(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.ide.actions.searcheverywhere.ExtendedInfo
f:com.intellij.ide.extensionResources.ExtensionsRootType
- com.intellij.ide.scratch.RootType
- extractBundledResources(com.intellij.openapi.extensions.PluginId,java.lang.String):V
- findResource(com.intellij.openapi.extensions.PluginId,java.lang.String):java.nio.file.Path
- findResourceDirectory(com.intellij.openapi.extensions.PluginId,java.lang.String,Z):java.nio.file.Path
- s:getInstance():com.intellij.ide.extensionResources.ExtensionsRootType
- getOwner(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.extensions.PluginId
- s:regularFileFilter():java.util.function.Predicate
- substituteName(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- updateBundledResources(com.intellij.openapi.extensions.PluginId):V
- updatePluginResources(com.intellij.openapi.extensions.PluginId):V
f:com.intellij.ide.extensionResources.ExternalResourcesUnpackExtensionBean
- com.intellij.openapi.extensions.PluginAware
- unpackTo:java.lang.String
- <init>():V
- s:allPluginsWithExtension():java.util.List
- s:getPluginBeans(com.intellij.openapi.extensions.PluginId):java.util.List
- getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- s:getPluginsBeUnpackedTo(com.intellij.openapi.extensions.PluginId):java.util.List
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
com.intellij.ide.fileTemplates.CreateFromTemplateActionReplacer
- sf:CREATE_FROM_TEMPLATE_REPLACER:com.intellij.openapi.extensions.ExtensionPointName
- a:replaceCreateFromFileTemplateAction(com.intellij.ide.fileTemplates.FileTemplate):com.intellij.openapi.actionSystem.AnAction
com.intellij.ide.fileTemplates.CreateFromTemplateHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:canCreate(com.intellij.psi.PsiDirectory[]):Z
- commandName(com.intellij.ide.fileTemplates.FileTemplate):java.lang.String
- a:createFromTemplate(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,java.lang.String,com.intellij.ide.fileTemplates.FileTemplate,java.lang.String,java.util.Map):com.intellij.psi.PsiElement
- a:getErrorMessage():java.lang.String
- a:handlesTemplate(com.intellij.ide.fileTemplates.FileTemplate):Z
- a:isNameRequired():Z
- a:prepareProperties(java.util.Map):V
- prepareProperties(java.util.Map,java.lang.String,com.intellij.ide.fileTemplates.FileTemplate,com.intellij.openapi.project.Project):V
c:com.intellij.ide.fileTemplates.DefaultCreateFromTemplateHandler
- com.intellij.ide.fileTemplates.CreateFromTemplateHandler
- <init>():V
- canCreate(com.intellij.psi.PsiDirectory[]):Z
- p:checkAppendExtension(java.lang.String,com.intellij.ide.fileTemplates.FileTemplate):java.lang.String
- createFromTemplate(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,java.lang.String,com.intellij.ide.fileTemplates.FileTemplate,java.lang.String,java.util.Map):com.intellij.psi.PsiElement
- getErrorMessage():java.lang.String
- handlesTemplate(com.intellij.ide.fileTemplates.FileTemplate):Z
- isNameRequired():Z
- prepareProperties(java.util.Map):V
- prepareProperties(java.util.Map,java.lang.String,com.intellij.ide.fileTemplates.FileTemplate,com.intellij.openapi.project.Project):V
f:com.intellij.ide.fileTemplates.FileTemplateUtil
- <init>():V
- s:calculateAttributes(java.lang.String,java.util.Map,Z,com.intellij.openapi.project.Project):java.lang.String[]
- s:calculateAttributes(java.lang.String,java.util.Properties,Z,com.intellij.openapi.project.Project):java.lang.String[]
- s:canCreateFromTemplate(com.intellij.psi.PsiDirectory[],com.intellij.ide.fileTemplates.FileTemplate):Z
- s:createFromTemplate(com.intellij.ide.fileTemplates.FileTemplate,java.lang.String,java.util.Map,com.intellij.psi.PsiDirectory,java.lang.ClassLoader):com.intellij.psi.PsiElement
- s:createFromTemplate(com.intellij.ide.fileTemplates.FileTemplate,java.lang.String,java.util.Properties,com.intellij.psi.PsiDirectory):com.intellij.psi.PsiElement
- s:createFromTemplate(com.intellij.ide.fileTemplates.FileTemplate,java.lang.String,java.util.Properties,com.intellij.psi.PsiDirectory,java.lang.ClassLoader):com.intellij.psi.PsiElement
- s:createTemplate(java.lang.String,java.lang.String,java.lang.String,java.util.List):com.intellij.ide.fileTemplates.FileTemplate
- s:createTemplate(java.lang.String,java.lang.String,java.lang.String,com.intellij.ide.fileTemplates.FileTemplate[]):com.intellij.ide.fileTemplates.FileTemplate
- s:fillDefaultProperties(java.util.Properties,com.intellij.psi.PsiDirectory):V
- s:findHandler(com.intellij.ide.fileTemplates.FileTemplate):com.intellij.ide.fileTemplates.CreateFromTemplateHandler
- s:getDirPathRelativeToProjectBaseDir(com.intellij.psi.PsiDirectory):java.lang.String
- s:getIcon(com.intellij.ide.fileTemplates.FileTemplate):javax.swing.Icon
- s:getTemplatePattern(com.intellij.ide.fileTemplates.FileTemplate,com.intellij.openapi.project.Project,it.unimi.dsi.fastutil.ints.Int2ObjectMap):java.util.regex.Pattern
- s:indent(java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):java.lang.String
- s:mergeTemplate(java.util.Map,java.lang.String,Z):java.lang.String
- s:mergeTemplate(java.util.Properties,java.lang.String,Z):java.lang.String
- s:mergeTemplate(java.util.Properties,java.lang.String,Z,java.util.function.Consumer):java.lang.String
- s:putAll(java.util.Map,java.util.Properties):V
f:com.intellij.ide.fileTemplates.InternalTemplateBean
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- name:java.lang.String
- subject:java.lang.String
- <init>():V
f:com.intellij.ide.fileTemplates.actions.AttributesDefaults
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.openapi.util.TextRange):V
- add(java.lang.String,java.lang.String):V
- add(java.lang.String,java.lang.String,com.intellij.openapi.util.TextRange):V
- addPredefined(java.lang.String,java.lang.String):V
- getAttributeVisibleNames():java.util.Map
- getDefaultFileName():java.lang.String
- getDefaultFileNameSelection():com.intellij.openapi.util.TextRange
- getDefaultProperties():java.util.Properties
- getDefaultValueFor(java.lang.String):java.lang.String
- getRangeFor(java.lang.String):com.intellij.openapi.util.TextRange
- isFixedName():Z
- setAttributeVisibleNames(java.util.Map):V
- withFixedName(Z):com.intellij.ide.fileTemplates.actions.AttributesDefaults
c:com.intellij.ide.fileTemplates.actions.CreateFromTemplateAction
- com.intellij.ide.fileTemplates.actions.CreateFromTemplateActionBase
- <init>(com.intellij.ide.fileTemplates.FileTemplate):V
- <init>(java.lang.String,javax.swing.Icon,java.util.function.Supplier):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getTemplate():com.intellij.ide.fileTemplates.FileTemplate
- p:getTemplate(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory):com.intellij.ide.fileTemplates.FileTemplate
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.fileTemplates.actions.CreateFromTemplateActionBase
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:elementCreated(com.intellij.ide.fileTemplates.ui.CreateFromTemplateDialog,com.intellij.psi.PsiElement):V
- p:getAttributesDefaults(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.fileTemplates.actions.AttributesDefaults
- p:getLiveTemplateDefaults(com.intellij.openapi.actionSystem.DataContext,com.intellij.psi.PsiFile):java.util.Map
- p:getReplacedAction(com.intellij.ide.fileTemplates.FileTemplate):com.intellij.openapi.actionSystem.AnAction
- p:getTargetDirectory(com.intellij.openapi.actionSystem.DataContext,com.intellij.ide.IdeView):com.intellij.psi.PsiDirectory
- pa:getTemplate(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory):com.intellij.ide.fileTemplates.FileTemplate
- s:startLiveTemplate(com.intellij.psi.PsiFile):V
- s:startLiveTemplate(com.intellij.psi.PsiFile,java.util.Map):V
f:com.intellij.ide.fileTemplates.actions.FileTemplateSeparator
- com.intellij.openapi.actionSystem.ActionGroup
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
f:com.intellij.ide.fileTemplates.impl.AllFileTemplatesConfigurable
- com.intellij.openapi.options.Configurable$NoMargin
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.Configurable$VariableProjectAppLevel
- com.intellij.openapi.options.Configurable$WithEpDependencies
- com.intellij.openapi.options.SearchableConfigurable
- <init>(com.intellij.openapi.project.Project):V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- s:editCodeTemplate(java.lang.String,com.intellij.openapi.project.Project):V
- s:editOtherTemplate(java.lang.String,com.intellij.openapi.project.Project):V
- getDependencies():java.util.Collection
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- getManager():com.intellij.ide.fileTemplates.FileTemplateManager
- isModified():Z
- isProjectLevel():Z
- reset():V
f:com.intellij.ide.fileTemplates.impl.BundledFileTemplate
- com.intellij.ide.fileTemplates.impl.FileTemplateBase
- <init>(com.intellij.ide.fileTemplates.impl.DefaultTemplate,Z):V
- clone():com.intellij.ide.fileTemplates.impl.BundledFileTemplate
- getDescription():java.lang.String
- getExtension():java.lang.String
- getName():java.lang.String
- getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- isDefault():Z
- isLiveTemplateEnabled():Z
- isLiveTemplateEnabledByDefault():Z
- setExtension(java.lang.String):V
- setName(java.lang.String):V
f:com.intellij.ide.fileTemplates.impl.CustomFileTemplate
- com.intellij.ide.fileTemplates.impl.FileTemplateBase
- <init>(java.lang.String,java.lang.String):V
- clone():com.intellij.ide.fileTemplates.impl.CustomFileTemplate
- getDescription():java.lang.String
- getExtension():java.lang.String
- getName():java.lang.String
- isDefault():Z
- setExtension(java.lang.String):V
- setName(java.lang.String):V
f:com.intellij.ide.fileTemplates.impl.DefaultTemplate
- <init>(java.lang.String,java.lang.String,java.util.function.Function,java.util.function.Function,java.lang.String,java.nio.file.Path,com.intellij.openapi.extensions.PluginDescriptor):V
- f:getDescriptionText():java.lang.String
- f:getExtension():java.lang.String
- f:getName():java.lang.String
- f:getQualifiedName():java.lang.String
- f:getText():java.lang.String
a:com.intellij.ide.fileTemplates.impl.FileTemplateBase
- com.intellij.ide.fileTemplates.FileTemplate
- <init>():V
- addChild(com.intellij.ide.fileTemplates.FileTemplate):V
- clone():com.intellij.ide.fileTemplates.impl.FileTemplateBase
- getChildName(I):java.lang.String
- getChildren():com.intellij.ide.fileTemplates.FileTemplate[]
- p:getDefaultText():java.lang.String
- getFileName():java.lang.String
- f:getQualifiedName():java.lang.String
- s:getQualifiedName(java.lang.String,java.lang.String):java.lang.String
- f:getText():java.lang.String
- f:getText(java.util.Map):java.lang.String
- f:getText(java.util.Properties):java.lang.String
- f:getUnsetAttributes(java.util.Properties,com.intellij.openapi.project.Project):java.lang.String[]
- s:isChild(com.intellij.ide.fileTemplates.FileTemplate):Z
- isLiveTemplateEnabled():Z
- isLiveTemplateEnabledByDefault():Z
- isLiveTemplateEnabledChanged():Z
- f:isReformatCode():Z
- isTemplateOfType(com.intellij.openapi.fileTypes.FileType):Z
- setChildren(com.intellij.ide.fileTemplates.FileTemplate[]):V
- setFileName(java.lang.String):V
- setLiveTemplateEnabled(Z):V
- f:setReformatCode(Z):V
- f:setText(java.lang.String):V
- updateChildrenNames():V
f:com.intellij.ide.fileTemplates.impl.FileTemplateConfigurable
- com.intellij.openapi.options.Configurable
- com.intellij.openapi.options.Configurable$NoScroll
- <init>(com.intellij.openapi.project.Project):V
- apply():V
- createComponent():javax.swing.JComponent
- s:createDefaultLexer():com.intellij.lexer.Lexer
- disposeUIResources():V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getTemplate():com.intellij.ide.fileTemplates.FileTemplate
- isModified():Z
- removeChangeListener(javax.swing.event.ChangeListener):V
- reset():V
- setProportion(F):V
- setTemplate(com.intellij.ide.fileTemplates.FileTemplate,java.util.function.Supplier):V
- setTemplate(com.intellij.ide.fileTemplates.FileTemplate,java.util.function.Supplier,Z):V
f:com.intellij.ide.fileTemplates.impl.FileTemplateHighlighter
- com.intellij.openapi.fileTypes.SyntaxHighlighterBase
- <init>():V
- getHighlightingLexer():com.intellij.lexer.Lexer
- getTokenHighlights(com.intellij.psi.tree.IElementType):com.intellij.openapi.editor.colors.TextAttributesKey[]
f:com.intellij.ide.fileTemplates.impl.FileTemplateManagerImpl
- com.intellij.ide.fileTemplates.FileTemplateManager
- com.intellij.openapi.components.PersistentStateComponent
- addRecentName(java.lang.String):V
- addTemplate(java.lang.String,java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- findInternalTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- getAllCodeTemplates():com.intellij.ide.fileTemplates.FileTemplate[]
- getAllJ2eeTemplates():com.intellij.ide.fileTemplates.FileTemplate[]
- getAllPatterns():com.intellij.ide.fileTemplates.FileTemplate[]
- getAllTemplates():com.intellij.ide.fileTemplates.FileTemplate[]
- getCodeTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- getCurrentScheme():com.intellij.ide.fileTemplates.FileTemplatesScheme
- getDefaultProperties():java.util.Properties
- getDefaultTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- getDefaultTemplateDescription():java.util.function.Supplier
- s:getInstanceImpl(com.intellij.openapi.project.Project):com.intellij.ide.fileTemplates.impl.FileTemplateManagerImpl
- getInternalTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- getInternalTemplates():com.intellij.ide.fileTemplates.FileTemplate[]
- getJ2eeTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- getPattern(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- getProjectScheme():com.intellij.ide.fileTemplates.FileTemplatesScheme
- getRecentNames():java.util.Collection
- getState():com.intellij.ide.fileTemplates.impl.FileTemplateManagerImpl$State
- getTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- getTemplates(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate[]
- internalTemplateToSubject(java.lang.String):java.lang.String
- loadState(com.intellij.ide.fileTemplates.impl.FileTemplateManagerImpl$State):V
- removeTemplate(com.intellij.ide.fileTemplates.FileTemplate):V
- saveAllTemplates():V
- setCurrentScheme(com.intellij.ide.fileTemplates.FileTemplatesScheme):V
- setDefaultFileIncludeTemplateTextTemporarilyForTest(java.lang.String,java.lang.String,com.intellij.openapi.Disposable):V
- setTemplates(java.lang.String,java.util.Collection):V
- setTestDate(java.util.Date):V
f:com.intellij.ide.fileTemplates.impl.FileTemplateManagerImpl$State
- SCHEME:java.lang.String
- f:recentTemplates:java.util.List
- <init>():V
f:com.intellij.ide.fileTemplates.impl.UrlUtil
- <init>():V
- s:getChildrenRelativePaths(java.net.URL):java.util.List
- s:loadText(java.net.URL):java.lang.String
f:com.intellij.ide.fileTemplates.ui.ConfigureTemplatesDialog
- com.intellij.openapi.options.ex.SingleConfigurableEditor
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.fileTemplates.impl.AllFileTemplatesConfigurable):V
c:com.intellij.ide.fileTemplates.ui.CreateFromTemplateDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,com.intellij.ide.fileTemplates.FileTemplate,com.intellij.ide.fileTemplates.actions.AttributesDefaults,java.util.Properties):V
- create():com.intellij.psi.PsiElement
- p:createCenterPanel():javax.swing.JComponent
- p:doOKAction():V
- getEnteredProperties():java.util.Properties
- getPreferredFocusedComponent():javax.swing.JComponent
a:com.intellij.ide.hierarchy.CallHierarchyBrowserBase
- com.intellij.ide.hierarchy.HierarchyBrowserBaseEx
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):V
- p:createLegendPanel():javax.swing.JPanel
- p:getActionPlace():java.lang.String
- s:getCalleeType():java.lang.String
- s:getCallerType():java.lang.String
- p:getNextOccurenceActionNameImpl():java.lang.String
- p:getPresentableNameMap():java.util.Map
- p:getPrevOccurenceActionNameImpl():java.lang.String
- p:prependActions(com.intellij.openapi.actionSystem.DefaultActionGroup):V
pc:com.intellij.ide.hierarchy.CallHierarchyBrowserBase$BaseOnThisMethodAction
- com.intellij.ide.hierarchy.HierarchyBrowserBaseEx$BaseOnThisElementAction
- <init>():V
a:com.intellij.ide.hierarchy.ChangeHierarchyViewActionBase
- com.intellij.openapi.actionSystem.ToggleAction
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- <init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getHierarchyBrowser(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.hierarchy.HierarchyBrowserBaseEx
- pa:getTypeName():java.lang.String
- f:isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- f:setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.hierarchy.HierarchyBrowserBase
- com.intellij.openapi.ui.SimpleToolWindowPanel
- com.intellij.ide.hierarchy.HierarchyBrowser
- com.intellij.openapi.Disposable
- p:myContent:com.intellij.ui.content.Content
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project):V
- p:appendActions(com.intellij.openapi.actionSystem.DefaultActionGroup,java.lang.String):V
- p:buildUi(javax.swing.JComponent,javax.swing.JComponent):V
- p:configureTree(com.intellij.ui.treeStructure.Tree):V
- p:createToolbar(java.lang.String,java.lang.String):com.intellij.openapi.actionSystem.ActionToolbar
- dispose():V
- getAvailableElements():com.intellij.psi.PsiElement[]
- pa:getCurrentTree():javax.swing.JTree
- ps:getDescriptor(javax.swing.tree.DefaultMutableTreeNode):com.intellij.ide.hierarchy.HierarchyNodeDescriptor
- pa:getElementFromDescriptor(com.intellij.ide.hierarchy.HierarchyNodeDescriptor):com.intellij.psi.PsiElement
- f:getSelectedDescriptors():com.intellij.ide.hierarchy.HierarchyNodeDescriptor[]
- pf:getSelectedElement(com.intellij.openapi.actionSystem.DataContext):com.intellij.psi.PsiElement
- p:getSelectedElements():com.intellij.psi.PsiElement[]
- isDisposed():Z
- setContent(com.intellij.ui.content.Content):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
a:com.intellij.ide.hierarchy.HierarchyBrowserBaseEx
- com.intellij.ide.hierarchy.HierarchyBrowserBase
- com.intellij.ide.OccurenceNavigator
- sf:HELP_ID:java.lang.String
- sf:HIERARCHY_BROWSER:com.intellij.openapi.actionSystem.DataKey
- sf:SCOPE_ALL:java.lang.String
- sf:SCOPE_CLASS:java.lang.String
- sf:SCOPE_MODULE:java.lang.String
- sf:SCOPE_PROJECT:java.lang.String
- sf:SCOPE_TEST:java.lang.String
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):V
- p:appendActions(com.intellij.openapi.actionSystem.DefaultActionGroup,java.lang.String):V
- changeView(java.lang.String):V
- changeView(java.lang.String,Z):V
- pa:createHierarchyTreeStructure(java.lang.String,com.intellij.psi.PsiElement):com.intellij.ide.hierarchy.HierarchyTreeStructure
- pa:createLegendPanel():javax.swing.JPanel
- pf:createTree(Z):javax.swing.JTree
- pa:createTrees(java.util.Map):V
- dispose():V
- p:doRefresh(Z):V
- pa:getActionPlace():java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pa:getComparator():java.util.Comparator
- p:getContentDisplayName(java.lang.String,com.intellij.psi.PsiElement):java.lang.String
- p:getCurrentScopeType():java.lang.String
- p:getCurrentTree():javax.swing.JTree
- pf:getCurrentViewType():java.lang.String
- pa:getElementFromDescriptor(com.intellij.ide.hierarchy.HierarchyNodeDescriptor):com.intellij.psi.PsiElement
- p:getFileColorForNode(java.lang.Object):java.awt.Color
- p:getHierarchyBase():com.intellij.psi.PsiElement
- getNextOccurenceActionName():java.lang.String
- pa:getNextOccurenceActionNameImpl():java.lang.String
- p:getOpenFileElementFromDescriptor(com.intellij.ide.hierarchy.HierarchyNodeDescriptor):com.intellij.psi.PsiElement
- p:getPresentableNameMap():java.util.Map
- pa:getPrevOccurenceActionNameImpl():java.lang.String
- getPreviousOccurenceActionName():java.lang.String
- getTreeModel(java.lang.String):com.intellij.ui.tree.StructureTreeModel
- goNextOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- goPreviousOccurence():com.intellij.ide.OccurenceNavigator$OccurenceInfo
- hasNextOccurence():Z
- hasPreviousOccurence():Z
- pa:isApplicableElement(com.intellij.psi.PsiElement):Z
- p:isApplicableElementForBaseOn(com.intellij.psi.PsiElement):Z
- p:prependActions(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- setContent(com.intellij.ui.content.Content):V
- p:setHierarchyBase(com.intellij.psi.PsiElement):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
pf:com.intellij.ide.hierarchy.HierarchyBrowserBaseEx$AlphaSortAction
- com.intellij.openapi.actionSystem.ToggleAction
- <init>(com.intellij.ide.hierarchy.HierarchyBrowserBaseEx):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
pc:com.intellij.ide.hierarchy.HierarchyBrowserBaseEx$BaseOnThisElementAction
- com.intellij.openapi.actionSystem.AnAction
- p:<init>(com.intellij.lang.LanguageExtension):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:correctViewType(com.intellij.ide.hierarchy.HierarchyBrowserBaseEx,java.lang.String):java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled(com.intellij.ide.hierarchy.HierarchyBrowserBaseEx,com.intellij.psi.PsiElement):Z
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.hierarchy.HierarchyBrowserBaseEx$ChangeScopeAction
- com.intellij.openapi.actionSystem.ex.ComboBoxAction
- <init>(com.intellij.ide.hierarchy.HierarchyBrowserBaseEx):V
- f:createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- pf:createPopupActionGroup(javax.swing.JComponent,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DefaultActionGroup
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isEnabled():Z
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.hierarchy.HierarchyBrowserManager
- com.intellij.openapi.components.PersistentStateComponent
- <init>(com.intellij.openapi.project.Project):V
- getContentManager():com.intellij.ui.content.ContentManager
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.hierarchy.HierarchyBrowserManager
- s:getSettings(com.intellij.openapi.project.Project):com.intellij.ide.hierarchy.HierarchyBrowserManager$State
- getState():com.intellij.ide.hierarchy.HierarchyBrowserManager$State
- loadState(com.intellij.ide.hierarchy.HierarchyBrowserManager$State):V
f:com.intellij.ide.hierarchy.HierarchyBrowserManager$State
- EXPORT_FILE_PATH:java.lang.String
- HIDE_CLASSES_WHERE_METHOD_NOT_IMPLEMENTED:Z
- IS_AUTOSCROLL_TO_SOURCE:Z
- SCOPE:java.lang.String
- SORT_ALPHABETICALLY:Z
- <init>():V
a:com.intellij.ide.hierarchy.HierarchyNodeDescriptor
- com.intellij.ide.util.treeView.SmartElementDescriptor
- sf:EMPTY_ARRAY:com.intellij.ide.hierarchy.HierarchyNodeDescriptor[]
- p:myHighlightedText:com.intellij.openapi.roots.ui.util.CompositeAppearance
- pf:myIsBase:Z
- p:<init>(com.intellij.openapi.project.Project,com.intellij.ide.util.treeView.NodeDescriptor,com.intellij.psi.PsiElement,Z):V
- expandOnDoubleClick():Z
- f:getBackgroundColorCached():java.awt.Color
- p:getBaseMarkerIcon(javax.swing.Icon):javax.swing.Icon
- f:getCachedChildren():java.lang.Object[]
- getContainingFile():com.intellij.psi.PsiFile
- f:getElement():java.lang.Object
- f:getHighlightedText():com.intellij.openapi.roots.ui.util.CompositeAppearance
- ps:getInvalidPrefixAttributes():com.intellij.openapi.editor.markup.TextAttributes
- ps:getPackageNameAttributes():com.intellij.openapi.editor.markup.TextAttributes
- ps:getUsageCountPrefixAttributes():com.intellij.openapi.editor.markup.TextAttributes
- pf:installIcon(com.intellij.psi.PsiElement,Z):V
- pf:installIcon(javax.swing.Icon,Z):V
- pf:installIcon(Z):V
- pf:invalidElement():Z
- pf:isMarkModified():Z
- pf:isMarkReadOnly():Z
- isValid():Z
- f:setCachedChildren(java.lang.Object[]):V
- update():Z
f:com.intellij.ide.hierarchy.HierarchyNodeRenderer
- com.intellij.ide.util.treeView.NodeRenderer
- <init>():V
- customizeCellRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
a:com.intellij.ide.hierarchy.HierarchyTreeStructure
- com.intellij.ide.util.treeView.AbstractTreeStructure
- p:myBaseDescriptor:com.intellij.ide.hierarchy.HierarchyNodeDescriptor
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project,com.intellij.ide.hierarchy.HierarchyNodeDescriptor):V
- asyncCommit():com.intellij.openapi.util.ActionCallback
- pa:buildChildren(com.intellij.ide.hierarchy.HierarchyNodeDescriptor):java.lang.Object[]
- f:commit():V
- f:createDescriptor(java.lang.Object,com.intellij.ide.util.treeView.NodeDescriptor):com.intellij.ide.util.treeView.NodeDescriptor
- p:formatBaseElementText():java.lang.String
- f:getBaseDescriptor():com.intellij.ide.hierarchy.HierarchyNodeDescriptor
- f:getChildElements(java.lang.Object):java.lang.Object[]
- getLeafState(java.lang.Object):com.intellij.ui.tree.LeafState
- f:getParentElement(java.lang.Object):java.lang.Object
- f:getRootElement():java.lang.Object
- p:getSearchScope(java.lang.String,com.intellij.psi.PsiElement):com.intellij.psi.search.SearchScope
- f:hasSomethingToCommit():Z
- isAlwaysShowPlus():Z
- p:isInScope(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String):Z
- f:isToBuildChildrenInBackground(java.lang.Object):Z
- pf:setBaseElement(com.intellij.ide.hierarchy.HierarchyNodeDescriptor):V
a:com.intellij.ide.hierarchy.MethodHierarchyBrowserBase
- com.intellij.ide.hierarchy.HierarchyBrowserBaseEx
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):V
- ps:createStandardLegendPanel(java.lang.String,java.lang.String,java.lang.String):javax.swing.JPanel
- p:getActionPlace():java.lang.String
- s:getMethodType():java.lang.String
- p:getNextOccurenceActionNameImpl():java.lang.String
- p:getPresentableNameMap():java.util.Map
- p:getPrevOccurenceActionNameImpl():java.lang.String
- p:prependActions(com.intellij.openapi.actionSystem.DefaultActionGroup):V
c:com.intellij.ide.hierarchy.MethodHierarchyBrowserBase$BaseOnThisMethodAction
- com.intellij.ide.hierarchy.HierarchyBrowserBaseEx$BaseOnThisElementAction
- <init>():V
f:com.intellij.ide.hierarchy.NotImplementedHierarchyBrowser
- com.intellij.ide.hierarchy.HierarchyBrowser
- <init>(com.intellij.psi.PsiElement):V
- getComponent():javax.swing.JComponent
- setContent(com.intellij.ui.content.Content):V
a:com.intellij.ide.hierarchy.TypeHierarchyBrowserBase
- com.intellij.ide.hierarchy.HierarchyBrowserBaseEx
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):V
- pa:canBeDeleted(com.intellij.psi.PsiElement):Z
- p:createBaseOnThisAction():com.intellij.ide.hierarchy.TypeHierarchyBrowserBase$BaseOnThisTypeAction
- p:createTreeAndSetupCommonActions(java.util.Map,java.lang.String):V
- p:getActionPlace():java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getNextOccurenceActionNameImpl():java.lang.String
- p:getPresentableNameMap():java.util.Map
- p:getPrevOccurenceActionNameImpl():java.lang.String
- pa:getQualifiedName(com.intellij.psi.PsiElement):java.lang.String
- s:getSubtypesHierarchyType():java.lang.String
- s:getSupertypesHierarchyType():java.lang.String
- s:getTypeHierarchyType():java.lang.String
- isInterface():Z
- pa:isInterface(com.intellij.psi.PsiElement):Z
- p:prependActions(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- p:setHierarchyBase(com.intellij.psi.PsiElement):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
pc:com.intellij.ide.hierarchy.TypeHierarchyBrowserBase$BaseOnThisTypeAction
- com.intellij.ide.hierarchy.HierarchyBrowserBaseEx$BaseOnThisElementAction
- <init>():V
- p:correctViewType(com.intellij.ide.hierarchy.HierarchyBrowserBaseEx,java.lang.String):java.lang.String
f:com.intellij.ide.hierarchy.ViewClassHierarchyAction
- com.intellij.ide.hierarchy.ChangeHierarchyViewActionBase
- <init>():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.hierarchy.ViewSubtypesHierarchyAction
- com.intellij.ide.hierarchy.ChangeHierarchyViewActionBase
- <init>():V
f:com.intellij.ide.hierarchy.ViewSupertypesHierarchyAction
- com.intellij.ide.hierarchy.ChangeHierarchyViewActionBase
- <init>():V
a:com.intellij.ide.hierarchy.actions.BrowseHierarchyActionBase
- com.intellij.openapi.actionSystem.AnAction
- p:<init>(com.intellij.lang.LanguageExtension):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:createAndAddToPanel(com.intellij.openapi.project.Project,com.intellij.ide.hierarchy.HierarchyProvider,com.intellij.psi.PsiElement):com.intellij.ide.hierarchy.HierarchyBrowser
- s:findBestHierarchyProvider(com.intellij.lang.LanguageExtension,com.intellij.psi.PsiElement,com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.hierarchy.HierarchyProvider
- s:findProvider(com.intellij.lang.LanguageExtension,com.intellij.psi.PsiElement,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.hierarchy.HierarchyProvider
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.ide.highlighter.custom.CustomFileHighlighter
- com.intellij.openapi.fileTypes.SyntaxHighlighterBase
- <init>(com.intellij.ide.highlighter.custom.SyntaxTable):V
- getHighlightingLexer():com.intellij.lexer.Lexer
- s:getKeys():java.util.Map
- getTokenHighlights(com.intellij.psi.tree.IElementType):com.intellij.openapi.editor.colors.TextAttributesKey[]
com.intellij.ide.highlighter.custom.CustomHighlighterColors
- sf:CUSTOM_INVALID_STRING_ESCAPE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CUSTOM_KEYWORD1_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CUSTOM_KEYWORD2_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CUSTOM_KEYWORD3_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CUSTOM_KEYWORD4_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CUSTOM_LINE_COMMENT_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CUSTOM_MULTI_LINE_COMMENT_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CUSTOM_NUMBER_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CUSTOM_STRING_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CUSTOM_VALID_STRING_ESCAPE:com.intellij.openapi.editor.colors.TextAttributesKey
f:com.intellij.ide.highlighter.custom.impl.CustomFileTypeBraceMatcher
- com.intellij.lang.PairedBraceMatcher
- sf:INSTANCE:com.intellij.codeInsight.highlighting.PairedBraceMatcherAdapter
- <init>():V
- getCodeConstructStart(com.intellij.psi.PsiFile,I):I
- getPairs():com.intellij.lang.BracePair[]
- isPairedBracesAllowedBeforeType(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
f:com.intellij.ide.highlighter.custom.impl.CustomFileTypeFoldingBuilder
- com.intellij.lang.folding.CustomFoldingBuilder
- <init>():V
- s:buildBraceMatcherBasedFolding(java.util.List,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,com.intellij.openapi.fileTypes.SyntaxHighlighter):V
f:com.intellij.ide.highlighter.custom.impl.CustomFileTypeQuoteHandler
- com.intellij.codeInsight.editorActions.QuoteHandler
- <init>():V
- hasNonClosedLiteral(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.highlighter.HighlighterIterator,I):Z
- isClosingQuote(com.intellij.openapi.editor.highlighter.HighlighterIterator,I):Z
- isInsideLiteral(com.intellij.openapi.editor.highlighter.HighlighterIterator):Z
- isOpeningQuote(com.intellij.openapi.editor.highlighter.HighlighterIterator,I):Z
f:com.intellij.ide.impl.FlattenModulesToggleAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.project.Project,java.util.function.BooleanSupplier,java.util.function.BooleanSupplier,java.util.function.Consumer):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.impl.ProjectPaneSelectInTarget
- com.intellij.ide.impl.ProjectViewSelectInTarget
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.project.Project):V
- getMinorViewId():java.lang.String
- getWeight():F
- isSubIdSelectable(java.lang.String,com.intellij.ide.SelectInContext):Z
c:com.intellij.ide.impl.ProjectViewSelectInGroupTarget
- com.intellij.ide.CompositeSelectInTarget
- com.intellij.openapi.project.DumbAware
- <init>():V
- canSelect(com.intellij.ide.SelectInContext):Z
- getMinorViewId():java.lang.String
- getSubTargets(com.intellij.ide.SelectInContext):java.util.Collection
- getToolWindowId():java.lang.String
- selectIn(com.intellij.ide.SelectInContext,Z):V
f:com.intellij.ide.impl.ProjectViewSelectInPaneTarget
- com.intellij.ide.impl.ProjectViewSelectInTarget
- com.intellij.openapi.project.PossiblyDumbAware
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.projectView.impl.AbstractProjectViewPane,Z):V
- getMinorViewId():java.lang.String
- getWeight():F
- isDumbAware():Z
a:com.intellij.ide.impl.ProjectViewSelectInTarget
- com.intellij.ide.impl.SelectInTargetPsiWrapper
- com.intellij.ide.CompositeSelectInTarget
- p:<init>(com.intellij.openapi.project.Project):V
- p:canSelect(com.intellij.psi.PsiFileSystemItem):Z
- f:getSubId():java.lang.String
- getSubIdPresentableName(java.lang.String):java.lang.String
- getSubTargets(com.intellij.ide.SelectInContext):java.util.Collection
- f:getToolWindowId():java.lang.String
- isSubIdSelectable(java.lang.String,com.intellij.ide.SelectInContext):Z
- s:select(com.intellij.openapi.project.Project,java.lang.Object,java.lang.String,java.lang.String,com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.util.ActionCallback
- select(com.intellij.psi.PsiElement,Z):V
- pf:select(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):V
- f:setSubId(java.lang.String):V
a:com.intellij.ide.impl.SelectInTargetPsiWrapper
- com.intellij.ide.SelectInTarget
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project):V
- f:canSelect(com.intellij.ide.SelectInContext):Z
- pa:canSelect(com.intellij.psi.PsiFileSystemItem):Z
- p:canSelectInner(com.intellij.ide.SelectInContext):Z
- ps:findElementToSelect(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- p:getContextPsiFile(com.intellij.ide.SelectInContext):com.intellij.psi.PsiFileSystemItem
- pa:select(com.intellij.psi.PsiElement,Z):V
- pa:select(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):V
- f:selectIn(com.intellij.ide.SelectInContext,Z):V
- a:toString():java.lang.String
f:com.intellij.ide.impl.StructureViewSelectInTarget
- com.intellij.ide.SelectInTarget
- com.intellij.openapi.project.DumbAware
- sf:CUSTOM_STRUCTURE_VIEW_KEY:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project):V
- canSelect(com.intellij.ide.SelectInContext):Z
- getMinorViewId():java.lang.String
- getToolWindowId():java.lang.String
- getWeight():F
- selectIn(com.intellij.ide.SelectInContext,Z):V
f:com.intellij.ide.impl.StructureViewWrapperImpl
- com.intellij.ide.structureView.StructureViewWrapper
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.ide.impl.StructureViewWrapperImpl$Companion
- sf:STRUCTURE_CHANGED:com.intellij.util.messages.Topic
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.wm.ToolWindow,kotlinx.coroutines.CoroutineScope):V
- dispose():V
- f:rebuild():V
- f:rebuildNow(java.lang.String):V
- selectCurrentElement(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.vfs.VirtualFile,Z):Z
f:com.intellij.ide.impl.StructureViewWrapperImpl$Companion
f:com.intellij.ide.impl.convert.JDomConvertingUtil
- s:createAttributeValueFilter(java.lang.String,java.lang.String):java.util.function.Predicate
- s:createAttributeValueFilter(java.lang.String,java.util.Collection):java.util.function.Predicate
- s:createElementNameFilter(java.lang.String):java.util.function.Predicate
- s:createElementWithAttributeFilter(java.lang.String,java.lang.String,java.lang.String):java.util.function.Predicate
- s:findChild(org.jdom.Element,java.util.function.Predicate):org.jdom.Element
- s:getOptionValue(org.jdom.Element,java.lang.String):java.lang.String
- s:load(java.nio.file.Path):org.jdom.Element
- s:removeChildren(org.jdom.Element,java.util.function.Predicate):java.util.List
- s:removeDuplicatedOptions(org.jdom.Element):V
f:com.intellij.ide.impl.dataRules.VirtualFileRule
- com.intellij.ide.impl.dataRules.GetDataRule
- <init>():V
- getData(com.intellij.openapi.actionSystem.DataProvider):java.lang.Object
a:com.intellij.ide.navigationToolbar.AbstractNavBarModelExtension
- com.intellij.ide.navigationToolbar.NavBarModelExtension
- <init>():V
- additionalRoots(com.intellij.openapi.project.Project):java.util.Collection
- adjustElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getParent(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:getPresentableText(java.lang.Object):java.lang.String
c:com.intellij.ide.navigationToolbar.DefaultNavBarExtension
- com.intellij.ide.navigationToolbar.AbstractNavBarModelExtension
- <init>():V
- adjustElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getParent(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getPresentableText(java.lang.Object):java.lang.String
- processChildren(java.lang.Object,java.lang.Object,com.intellij.util.Processor):Z
com.intellij.ide.navigationToolbar.NavBarModelExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:additionalRoots(com.intellij.openapi.project.Project):java.util.Collection
- a:adjustElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getData(java.lang.String,com.intellij.openapi.actionSystem.DataProvider):java.lang.Object
- getIcon(java.lang.Object):javax.swing.Icon
- getLeafElement(com.intellij.openapi.actionSystem.DataContext):com.intellij.psi.PsiElement
- a:getParent(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getPopupMenuGroup(com.intellij.openapi.actionSystem.DataProvider):java.lang.String
- a:getPresentableText(java.lang.Object):java.lang.String
- getPresentableText(java.lang.Object,Z):java.lang.String
- normalizeChildren():Z
- processChildren(java.lang.Object,java.lang.Object,com.intellij.util.Processor):Z
f:com.intellij.ide.navigationToolbar.NavBarRootPaneExtension
- <init>():V
a:com.intellij.ide.navigationToolbar.NavBarRootPaneExtension$NavBarWrapperPanel
- javax.swing.JPanel
- com.intellij.ide.ui.UISettingsListener
- <init>(java.awt.LayoutManager):V
- p:getComponentGraphics(java.awt.Graphics):java.awt.Graphics
a:com.intellij.ide.navigationToolbar.StructureAwareNavBarModelExtension
- com.intellij.ide.navigationToolbar.AbstractNavBarModelExtension
- sf:Companion:com.intellij.ide.navigationToolbar.StructureAwareNavBarModelExtension$Companion
- <init>():V
- p:acceptParentFromModel(com.intellij.psi.PsiElement):Z
- p:childrenFromNodeAndProviders(com.intellij.ide.structureView.StructureViewTreeElement):java.util.List
- p:createModel(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.ide.structureView.StructureViewModel
- p:findParentInModel(com.intellij.ide.structureView.StructureViewTreeElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- p:getApplicableNodeProviders():java.util.List
- pa:getLanguage():com.intellij.lang.Language
- getLeafElement(com.intellij.openapi.actionSystem.DataContext):com.intellij.psi.PsiElement
- getParent(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- p:isAcceptableLanguage(com.intellij.psi.PsiElement):Z
- normalizeChildren():Z
- processChildren(java.lang.Object,java.lang.Object,com.intellij.util.Processor):Z
f:com.intellij.ide.navigationToolbar.StructureAwareNavBarModelExtension$Companion
- f:getMODEL():com.intellij.openapi.util.Key
c:com.intellij.ide.navigationToolbar.rider.RiderMainToolbarRootPaneManager
- com.intellij.openapi.util.SimpleModificationTracker
- sf:Companion:com.intellij.ide.navigationToolbar.rider.RiderMainToolbarRootPaneManager$Companion
- <init>(com.intellij.openapi.project.Project):V
- isLeftSideAction(com.intellij.openapi.actionSystem.AnAction):Z
- isRightSideAction(com.intellij.openapi.actionSystem.AnAction):Z
- mainGroupName():java.lang.String
- f:startUpdateActionGroups(javax.swing.JPanel):V
f:com.intellij.ide.navigationToolbar.rider.RiderMainToolbarRootPaneManager$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.navigationToolbar.rider.RiderMainToolbarRootPaneManager
com.intellij.ide.navigationToolbar.rider.RiderMainToolbarStateListener
- sf:Companion:com.intellij.ide.navigationToolbar.rider.RiderMainToolbarStateListener$Companion
- a:refreshVisibility():V
f:com.intellij.ide.navigationToolbar.rider.RiderMainToolbarStateListener$Companion
- f:getTOPIC():com.intellij.util.messages.Topic
a:com.intellij.ide.projectView.ProjectView
- sf:UNLOADED_MODULES_CONTEXT_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>():V
- a:addProjectPane(com.intellij.ide.projectView.impl.AbstractProjectViewPane):V
- a:changeView(java.lang.String):V
- a:changeView(java.lang.String,java.lang.String):V
- a:changeViewCB(java.lang.String,java.lang.String):com.intellij.openapi.util.ActionCallback
- a:getCurrentProjectViewPane():com.intellij.ide.projectView.impl.AbstractProjectViewPane
- a:getCurrentViewId():java.lang.String
- a:getDefaultViewId():java.lang.String
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.projectView.ProjectView
- a:getPaneIds():java.util.Collection
- a:getParentOfCurrentSelection():com.intellij.psi.PsiElement
- a:getProjectViewPaneById(java.lang.String):com.intellij.ide.projectView.impl.AbstractProjectViewPane
- a:getSelectInTargets():java.util.Collection
- a:getSortKey(java.lang.String):com.intellij.ide.projectView.NodeSortKey
- a:isAbbreviatePackageNames(java.lang.String):Z
- a:isAutoscrollFromSource(java.lang.String):Z
- a:isAutoscrollToSource(java.lang.String):Z
- isCompactDirectories(java.lang.String):Z
- a:isFlattenModules(java.lang.String):Z
- a:isFlattenPackages(java.lang.String):Z
- isFoldersAlwaysOnTop(java.lang.String):Z
- a:isHideEmptyMiddlePackages(java.lang.String):Z
- a:isManualOrder(java.lang.String):Z
- isShowExcludedFiles(java.lang.String):Z
- a:isShowLibraryContents(java.lang.String):Z
- a:isShowMembers(java.lang.String):Z
- a:isShowModules(java.lang.String):Z
- a:isShowScratchesAndConsoles(java.lang.String):Z
- a:isShowURL(java.lang.String):Z
- isShowVisibilityIcons(java.lang.String):Z
- a:isSortByType(java.lang.String):Z
- isUseFileNestingRules(java.lang.String):Z
- a:refresh():V
- a:removeProjectPane(com.intellij.ide.projectView.impl.AbstractProjectViewPane):V
- a:select(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):V
- a:selectCB(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.util.ActionCallback
- a:selectPsiElement(com.intellij.psi.PsiElement,Z):V
- a:setAbbreviatePackageNames(java.lang.String,Z):V
- setCompactDirectories(java.lang.String,Z):V
- a:setFlattenModules(java.lang.String,Z):V
- a:setHideEmptyPackages(java.lang.String,Z):V
- a:setManualOrder(java.lang.String,Z):V
- a:setShowLibraryContents(java.lang.String,Z):V
- a:setShowModules(java.lang.String,Z):V
- a:setSortByType(java.lang.String,Z):V
- a:setSortKey(java.lang.String,com.intellij.ide.projectView.NodeSortKey):V
- setUseFileNestingRules(Z):V
com.intellij.ide.projectView.ProjectViewNodeDecorator
- sf:EP:com.intellij.openapi.extensions.ProjectExtensionPointName
- a:decorate(com.intellij.ide.projectView.ProjectViewNode,com.intellij.ide.projectView.PresentationData):V
- decorate(com.intellij.packageDependencies.ui.PackageDependenciesNode,com.intellij.ui.ColoredTreeCellRenderer):V
a:com.intellij.ide.projectView.ProjectViewPsiTreeChangeListener
- com.intellij.psi.PsiTreeChangeAdapter
- p:<init>(com.intellij.openapi.project.Project):V
- p:addSubtreeToUpdateByElement(com.intellij.psi.PsiElement):Z
- p:addSubtreeToUpdateByRoot():V
- f:childAdded(com.intellij.psi.PsiTreeChangeEvent):V
- f:childMoved(com.intellij.psi.PsiTreeChangeEvent):V
- f:childRemoved(com.intellij.psi.PsiTreeChangeEvent):V
- f:childReplaced(com.intellij.psi.PsiTreeChangeEvent):V
- p:childrenChanged(com.intellij.psi.PsiElement,Z):V
- f:childrenChanged(com.intellij.psi.PsiTreeChangeEvent):V
- pa:getRootNode():javax.swing.tree.DefaultMutableTreeNode
- pa:isFlattenPackages():Z
- propertyChanged(com.intellij.psi.PsiTreeChangeEvent):V
com.intellij.ide.projectView.ProjectViewSettings
- com.intellij.ide.projectView.ViewSettings
- getSortKey():com.intellij.ide.projectView.NodeSortKey
- isShowExcludedFiles():Z
- isShowVisibilityIcons():Z
- isUseFileNestingRules():Z
f:com.intellij.ide.projectView.ProjectViewSettings$Delegate
- com.intellij.ide.projectView.ProjectViewSettings
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- getSortKey():com.intellij.ide.projectView.NodeSortKey
- isAbbreviatePackageNames():Z
- isCompactDirectories():Z
- isFlattenModules():Z
- isFlattenPackages():Z
- isFoldersAlwaysOnTop():Z
- isHideEmptyMiddlePackages():Z
- isShowExcludedFiles():Z
- isShowLibraryContents():Z
- isShowMembers():Z
- isShowModules():Z
- isShowScratchesAndConsoles():Z
- isShowURL():Z
- isShowVisibilityIcons():Z
- isUseFileNestingRules():Z
f:com.intellij.ide.projectView.ProjectViewSettings$Immutable
- com.intellij.ide.projectView.ViewSettings$Immutable
- com.intellij.ide.projectView.ProjectViewSettings
- sf:DEFAULT:com.intellij.ide.projectView.ProjectViewSettings
- <init>(com.intellij.ide.projectView.ProjectViewSettings):V
- equals(java.lang.Object):Z
- hashCode():I
- isShowExcludedFiles():Z
- isShowVisibilityIcons():Z
- isUseFileNestingRules():Z
c:com.intellij.ide.projectView.actions.MarkExcludeRootAction
- com.intellij.ide.projectView.actions.MarkRootActionBase
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:getPromptText(java.lang.String):java.lang.String
- p:isEnabled(com.intellij.ide.projectView.actions.MarkRootActionBase$RootsSelection,com.intellij.openapi.module.Module):Z
- p:modifyRoots(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.ContentEntry):V
c:com.intellij.ide.projectView.actions.MarkJavaSourceRootAction
- com.intellij.ide.projectView.actions.MarkSourceRootAction
- <init>():V
a:com.intellij.ide.projectView.actions.MarkRootActionBase
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:doUpdate(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.module.Module,com.intellij.ide.projectView.actions.MarkRootActionBase$RootsSelection):V
- s:findContentEntry(com.intellij.openapi.roots.ModuleRootModel,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.roots.ContentEntry
- f:getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- ps:getSelection(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ide.projectView.actions.MarkRootActionBase$RootsSelection
- pa:isEnabled(com.intellij.ide.projectView.actions.MarkRootActionBase$RootsSelection,com.intellij.openapi.module.Module):Z
- p:modifyRoots(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.module.Module,com.intellij.openapi.vfs.VirtualFile[]):V
- p:modifyRoots(com.intellij.openapi.module.Module,com.intellij.openapi.vfs.VirtualFile[]):V
- pa:modifyRoots(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.ContentEntry):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.projectView.actions.MarkRootActionBase$RootsSelection
- sf:EMPTY:com.intellij.ide.projectView.actions.MarkRootActionBase$RootsSelection
- myHaveSelectedFilesUnderSourceRoots:Z
- f:myModule:com.intellij.openapi.module.Module
- mySelectedDirectories:java.util.List
- mySelectedExcludeRoots:java.util.List
- mySelectedRoots:java.util.List
- <init>(com.intellij.openapi.module.Module):V
f:com.intellij.ide.projectView.actions.MarkRootGroup
- com.intellij.ide.actions.NonTrivialActionGroup
- <init>():V
c:com.intellij.ide.projectView.actions.MarkSourceRootAction
- com.intellij.ide.projectView.actions.MarkRootActionBase
- <init>(org.jetbrains.jps.model.module.JpsModuleSourceRootType):V
- p:isEnabled(com.intellij.ide.projectView.actions.MarkRootActionBase$RootsSelection,com.intellij.openapi.module.Module):Z
- p:modifyRoots(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.ContentEntry):V
c:com.intellij.ide.projectView.actions.MarkTestSourceRootAction
- com.intellij.ide.projectView.actions.MarkSourceRootAction
- <init>():V
c:com.intellij.ide.projectView.actions.UnmarkRootAction
- com.intellij.ide.projectView.actions.MarkRootActionBase
- <init>():V
- p:doUpdate(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.module.Module,com.intellij.ide.projectView.actions.MarkRootActionBase$RootsSelection):V
- p:getActionText(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.module.Module,com.intellij.ide.projectView.actions.MarkRootActionBase$RootsSelection):java.lang.String
- p:isEnabled(com.intellij.ide.projectView.actions.MarkRootActionBase$RootsSelection,com.intellij.openapi.module.Module):Z
- p:modifyRoots(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.ContentEntry):V
a:com.intellij.ide.projectView.impl.AbstractProjectTreeStructure
- com.intellij.ide.projectView.impl.ProjectAbstractTreeStructureBase
- com.intellij.ide.projectView.ViewSettings
- <init>(com.intellij.openapi.project.Project):V
- asyncCommit():com.intellij.openapi.util.ActionCallback
- f:commit():V
- p:createRoot(com.intellij.openapi.project.Project,com.intellij.ide.projectView.ViewSettings):com.intellij.ide.util.treeView.AbstractTreeNode
- f:getRootElement():java.lang.Object
- f:hasSomethingToCommit():Z
- isAlwaysLeaf(java.lang.Object):Z
a:com.intellij.ide.projectView.impl.AbstractProjectViewPane
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.openapi.util.BusyObject
- sf:EP:com.intellij.openapi.extensions.ProjectExtensionPointName
- pf:myProject:com.intellij.openapi.project.Project
- p:myTree:com.intellij.ide.dnd.aware.DnDAwareTree
- p:myTreeStructure:com.intellij.ide.util.treeView.AbstractTreeStructure
- p:<init>(com.intellij.openapi.project.Project):V
- addToolbarActions(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- p:beforeDnDLeave():V
- p:beforeDnDUpdate(com.intellij.ide.dnd.DnDEvent):V
- p:createComparator():java.util.Comparator
- a:createComponent():javax.swing.JComponent
- a:createSelectInTarget():com.intellij.ide.SelectInTarget
- p:createTreeExpander():com.intellij.ide.TreeExpander
- p:createTreeState(javax.swing.JTree):com.intellij.ide.util.treeView.TreeState
- s:createVisitor(com.intellij.openapi.vfs.VirtualFile):com.intellij.ui.tree.TreeVisitor
- s:createVisitor(com.intellij.psi.PsiElement):com.intellij.ui.tree.TreeVisitor
- s:createVisitor(com.intellij.psi.PsiElement,com.intellij.openapi.vfs.VirtualFile):com.intellij.ui.tree.TreeVisitor
- s:createVisitor(java.lang.Object):com.intellij.ui.tree.TreeVisitor
- dispose():V
- p:enableDnD():V
- s:extractValueFromNode(java.lang.Object):java.lang.Object
- getComponentToFocus():javax.swing.JComponent
- getElementsFromNode(java.lang.Object):java.util.List
- a:getIcon():javax.swing.Icon
- a:getId():java.lang.String
- p:getManualOrderOptionText():java.lang.String
- p:getNodeModule(java.lang.Object):com.intellij.openapi.module.Module
- getPresentableSubIdIcon(java.lang.String):javax.swing.Icon
- getPresentableSubIdName(java.lang.String):java.lang.String
- getReady(java.lang.Object):com.intellij.openapi.util.ActionCallback
- f:getSelectedDescriptor():com.intellij.ide.util.treeView.NodeDescriptor
- getSelectedDirectories():com.intellij.psi.PsiDirectory[]
- p:getSelectedDirectories(java.lang.Object[]):com.intellij.psi.PsiDirectory[]
- p:getSelectedDirectoriesInAmbiguousCase(java.lang.Object):com.intellij.psi.PsiDirectory[]
- f:getSelectedElement():java.lang.Object
- f:getSelectedElements():java.lang.Object[]
- f:getSelectedNode():javax.swing.tree.DefaultMutableTreeNode
- p:getSelectedNodes(java.lang.Class):java.util.List
- f:getSelectedPSIElements():com.intellij.psi.PsiElement[]
- f:getSelectedPath():javax.swing.tree.TreePath
- f:getSelectedUserObjects():java.lang.Object[]
- f:getSelectedValues(java.lang.Object[]):java.lang.Object[]
- getSelectionPaths():javax.swing.tree.TreePath[]
- f:getSingleSelectedPathUserObjects():java.lang.Object[]
- f:getSubId():java.lang.String
- getSubIds():java.lang.String[]
- a:getTitle():java.lang.String
- s:getTransferedPsiElements(java.awt.datatransfer.Transferable):com.intellij.psi.PsiElement[]
- s:getTransferedTreeNodes(java.awt.datatransfer.Transferable):javax.swing.tree.TreeNode[]
- getTree():javax.swing.JTree
- getTreeStructure():com.intellij.ide.util.treeView.AbstractTreeStructure
- getValueFromNode(java.lang.Object):java.lang.Object
- a:getWeight():I
- installComparator():V
- installComparator(java.util.Comparator):V
- isAutoScrollEnabledFor(com.intellij.openapi.vfs.VirtualFile):Z
- isAutoScrollEnabledWithoutFocus():Z
- isDefaultPane(com.intellij.openapi.project.Project):Z
- isFileNestingEnabled():Z
- isInitiallyVisible():Z
- p:onSubIdChange():V
- promisePathToElement(java.lang.Object):org.jetbrains.concurrency.Promise
- readExternal(org.jdom.Element):V
- f:restoreExpandedPaths():V
- p:saveExpandedPaths():V
- a:select(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):V
- selectModule(com.intellij.openapi.module.Module,Z):V
- selectModuleGroup(com.intellij.ide.projectView.impl.ModuleGroup,Z):V
- f:setSubId(java.lang.String):V
- supportsManualOrder():Z
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- p:uiDataSnapshotForSelection(com.intellij.openapi.actionSystem.DataSink,java.lang.Object[],java.lang.Object[]):V
- updateFrom(java.lang.Object,Z,Z):V
- a:updateFromRoot(Z):com.intellij.openapi.util.ActionCallback
- writeExternal(org.jdom.Element):V
com.intellij.ide.projectView.impl.AbstractProjectViewPane$ProjectViewPaneWithAsyncSelect
- a:selectCB(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.util.ActionCallback
a:com.intellij.ide.projectView.impl.AbstractProjectViewPaneWithAsyncSupport
- com.intellij.ide.projectView.impl.AbstractProjectViewPane
- com.intellij.ide.projectView.impl.AbstractProjectViewPane$ProjectViewPaneWithAsyncSelect
- p:<init>(com.intellij.openapi.project.Project):V
- createComponent():javax.swing.JComponent
- pa:createStructure():com.intellij.ide.util.treeView.AbstractTreeStructureBase
- pa:createTree(javax.swing.tree.DefaultTreeModel):com.intellij.ide.dnd.aware.DnDAwareTree
- dispose():V
- p:getStripe(java.lang.Object,Z):com.intellij.ui.stripe.ErrorStripe
- installComparator(java.util.Comparator):V
- p:onSelectionChanged():V
- select(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):V
- selectCB(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.util.ActionCallback
- updateFromRoot(Z):com.intellij.openapi.util.ActionCallback
a:com.intellij.ide.projectView.impl.AttachableProjectViewPane
- com.intellij.ide.projectView.impl.ProjectViewPane
- <init>(com.intellij.openapi.project.Project):V
- p:beforeDnDLeave():V
- p:beforeDnDUpdate(com.intellij.ide.dnd.DnDEvent):V
- createComponent():javax.swing.JComponent
- p:createStructure():com.intellij.ide.projectView.impl.ProjectAbstractTreeStructureBase
- p:createTree(javax.swing.tree.DefaultTreeModel):com.intellij.ide.projectView.impl.ProjectViewTree
- getTitle():java.lang.String
- p:processDroppedDirectories(java.util.List):V
f:com.intellij.ide.projectView.impl.CompoundIconProvider
- com.intellij.ide.IconProvider
- <init>():V
- s:findIcon(com.intellij.psi.PsiElement,I):javax.swing.Icon
- getIcon(com.intellij.psi.PsiElement,I):javax.swing.Icon
f:com.intellij.ide.projectView.impl.CompoundProjectViewNodeDecorator
- com.intellij.ide.projectView.ProjectViewNodeDecorator
- decorate(com.intellij.ide.projectView.ProjectViewNode,com.intellij.ide.projectView.PresentationData):V
- s:get(com.intellij.openapi.project.Project):com.intellij.ide.projectView.ProjectViewNodeDecorator
f:com.intellij.ide.projectView.impl.CompoundTreeStructureProvider
- com.intellij.ide.projectView.TreeStructureProvider
- s:get(com.intellij.openapi.project.Project):com.intellij.ide.projectView.TreeStructureProvider
- modify(com.intellij.ide.util.treeView.AbstractTreeNode,java.util.Collection,com.intellij.ide.projectView.ViewSettings):java.util.Collection
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink,java.util.Collection):V
f:com.intellij.ide.projectView.impl.FileNestingBuilder
- <init>():V
- s:checkMatchingAsParentOrChild(com.intellij.ide.projectView.impl.ProjectViewFileNestingService$NestingRule,java.lang.String):com.intellij.openapi.util.Couple
- s:getInstance():com.intellij.ide.projectView.impl.FileNestingBuilder
- getNestingRules():java.util.Collection
- isNestedFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- mapParentToChildren(java.util.Collection,java.util.function.Function):com.intellij.util.containers.MultiMap
f:com.intellij.ide.projectView.impl.FileNestingInProjectViewDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project):V
- apply(com.intellij.util.Consumer):V
- reset(Z):V
c:com.intellij.ide.projectView.impl.GroupByTypeComparator
- java.util.Comparator
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- <init>(Z):V
- compare(com.intellij.ide.util.treeView.NodeDescriptor,com.intellij.ide.util.treeView.NodeDescriptor):I
- p:getSortKey():com.intellij.ide.projectView.NodeSortKey
- p:isAbbreviateQualifiedNames():Z
- p:isFoldersAlwaysOnTop():Z
- p:isManualOrder():Z
f:com.intellij.ide.projectView.impl.IdeViewForProjectViewPane
- com.intellij.ide.IdeView
- <init>(java.util.function.Supplier):V
- getDirectories():com.intellij.psi.PsiDirectory[]
- getOrChooseDirectory():com.intellij.psi.PsiDirectory
- selectElement(com.intellij.psi.PsiElement):V
f:com.intellij.ide.projectView.impl.ModuleGroup
- sf:ARRAY_DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>(java.util.List):V
- childGroups(com.intellij.openapi.module.ModuleGrouper):java.util.Collection
- childGroups(com.intellij.openapi.project.Project):java.util.Collection
- equals(java.lang.Object):Z
- getGroupPath():java.lang.String[]
- getGroupPathList():java.util.List
- getQualifiedName():java.lang.String
- hashCode():I
- modulesInGroup(com.intellij.openapi.module.ModuleGrouper,Z):java.util.Collection
- modulesInGroup(com.intellij.openapi.project.Project):java.util.Collection
- modulesInGroup(com.intellij.openapi.project.Project,Z):java.util.Collection
- presentableText():java.lang.String
com.intellij.ide.projectView.impl.ModuleGroupingImplementation
- a:getCompactGroupNodes():Z
- a:getGroupPath(java.lang.Object):java.util.List
- a:getModuleAsGroupPath(java.lang.Object):java.util.List
f:com.intellij.ide.projectView.impl.ModuleGroupingTreeHelper
- sf:Companion:com.intellij.ide.projectView.impl.ModuleGroupingTreeHelper$Companion
- sf:createDefaultGrouping(com.intellij.openapi.module.ModuleGrouper):com.intellij.ide.projectView.impl.ModuleGroupingImplementation
- f:createModuleNode(java.lang.Object,javax.swing.tree.MutableTreeNode,javax.swing.tree.DefaultTreeModel):javax.swing.tree.MutableTreeNode
- f:createModuleNodes(java.util.Collection,javax.swing.tree.MutableTreeNode,javax.swing.tree.DefaultTreeModel):java.util.List
- sf:forEmptyTree(Z,com.intellij.ide.projectView.impl.ModuleGroupingImplementation,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,java.util.Comparator):com.intellij.ide.projectView.impl.ModuleGroupingTreeHelper
- sf:forTree(javax.swing.tree.MutableTreeNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,Z,com.intellij.ide.projectView.impl.ModuleGroupingImplementation,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,java.util.Comparator,kotlin.jvm.functions.Function1):com.intellij.ide.projectView.impl.ModuleGroupingTreeHelper
- f:getGroupByNodeMap():java.util.Map
- f:getModuleByNodeMap():java.util.Map
- f:getNodeForGroupMap():java.util.Map
- f:getVirtualGroupToChildNodeMap():java.util.Map
- f:isGroupingEnabled():Z
- f:moveAllModuleNodesToProperGroups(javax.swing.tree.MutableTreeNode,javax.swing.tree.DefaultTreeModel):V
- f:moveModuleNodeToProperGroup(javax.swing.tree.MutableTreeNode,java.lang.Object,javax.swing.tree.MutableTreeNode,javax.swing.tree.DefaultTreeModel,javax.swing.JTree):javax.swing.tree.MutableTreeNode
- f:moveModuleNodesToProperGroup(java.util.List,javax.swing.tree.MutableTreeNode,javax.swing.tree.DefaultTreeModel,javax.swing.JTree):V
- f:removeAllNodes(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultTreeModel):V
- f:removeNode(javax.swing.tree.MutableTreeNode,javax.swing.tree.MutableTreeNode,javax.swing.tree.DefaultTreeModel,Z):V
- bs:removeNode$default(com.intellij.ide.projectView.impl.ModuleGroupingTreeHelper,javax.swing.tree.MutableTreeNode,javax.swing.tree.MutableTreeNode,javax.swing.tree.DefaultTreeModel,Z,I,java.lang.Object):V
f:com.intellij.ide.projectView.impl.ModuleGroupingTreeHelper$Companion
- f:createDefaultGrouping(com.intellij.openapi.module.ModuleGrouper):com.intellij.ide.projectView.impl.ModuleGroupingImplementation
- f:forEmptyTree(Z,com.intellij.ide.projectView.impl.ModuleGroupingImplementation,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,java.util.Comparator):com.intellij.ide.projectView.impl.ModuleGroupingTreeHelper
- f:forTree(javax.swing.tree.MutableTreeNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,Z,com.intellij.ide.projectView.impl.ModuleGroupingImplementation,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,java.util.Comparator,kotlin.jvm.functions.Function1):com.intellij.ide.projectView.impl.ModuleGroupingTreeHelper
f:com.intellij.ide.projectView.impl.ModuleNameValidator
- com.intellij.openapi.ui.InputValidatorEx
- <init>(com.intellij.openapi.project.Project):V
- getErrorText(java.lang.String):java.lang.String
f:com.intellij.ide.projectView.impl.MoveModuleToGroupTopLevel
- com.intellij.openapi.actionSystem.ActionGroup
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.projectView.impl.NestingTreeStructureProvider
- com.intellij.ide.projectView.TreeStructureProvider
- com.intellij.openapi.project.DumbAware
- <init>():V
- s:getFilesShownAsChildrenInProjectView(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- modify(com.intellij.ide.util.treeView.AbstractTreeNode,java.util.Collection,com.intellij.ide.projectView.ViewSettings):java.util.Collection
f:com.intellij.ide.projectView.impl.NestingTreeStructureProvider$ChildFileInfo
- java.lang.Record
- <init>(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- f:equals(java.lang.Object):Z
- file():com.intellij.openapi.vfs.VirtualFile
- f:hashCode():I
- namePartCommonWithParentFile():java.lang.String
a:com.intellij.ide.projectView.impl.ProjectAbstractTreeStructureBase
- com.intellij.ide.util.treeView.AbstractTreeStructureBase
- p:<init>(com.intellij.openapi.project.Project):V
- getProviders():java.util.List
- setProviders(com.intellij.ide.projectView.TreeStructureProvider[]):V
a:com.intellij.ide.projectView.impl.ProjectTreeStructure
- com.intellij.ide.projectView.impl.AbstractProjectTreeStructure
- com.intellij.ide.projectView.ProjectViewSettings
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- getSortKey():com.intellij.ide.projectView.NodeSortKey
- isAbbreviatePackageNames():Z
- isCompactDirectories():Z
- isFlattenModules():Z
- isFlattenPackages():Z
- isHideEmptyMiddlePackages():Z
- isShowLibraryContents():Z
- isShowMembers():Z
- isShowModules():Z
- isShowScratchesAndConsoles():Z
- isShowURL():Z
- isShowVisibilityIcons():Z
f:com.intellij.ide.projectView.impl.ProjectViewFileNestingService
- com.intellij.openapi.components.PersistentStateComponent
- com.intellij.openapi.util.ModificationTracker
- <init>():V
- s:getInstance():com.intellij.ide.projectView.impl.ProjectViewFileNestingService
- getModificationCount():J
- getRules():java.util.List
- getState():com.intellij.ide.projectView.impl.ProjectViewFileNestingService$MyState
- loadState(com.intellij.ide.projectView.impl.ProjectViewFileNestingService$MyState):V
- setRules(java.util.List):V
f:com.intellij.ide.projectView.impl.ProjectViewFileNestingService$MyState
- myRules:java.util.List
- <init>():V
f:com.intellij.ide.projectView.impl.ProjectViewFileNestingService$NestingRule
- <init>():V
- <init>(java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getChildFileSuffix():java.lang.String
- getParentFileSuffix():java.lang.String
- hashCode():I
- setChildFileSuffix(java.lang.String):V
- setParentFileSuffix(java.lang.String):V
c:com.intellij.ide.projectView.impl.ProjectViewImpl
- com.intellij.ide.projectView.ProjectView
- com.intellij.openapi.components.PersistentStateComponent
- com.intellij.openapi.util.BusyObject
- com.intellij.ui.switcher.QuickActionProvider
- sf:ANDROID_VIEW_ID:java.lang.String
- <init>(com.intellij.openapi.project.Project):V
- addProjectPane(com.intellij.ide.projectView.impl.AbstractProjectViewPane):V
- changeView(java.lang.String):V
- changeView(java.lang.String,java.lang.String):V
- changeViewCB(java.lang.String,java.lang.String):com.intellij.openapi.util.ActionCallback
- p:createTabActions(java.util.List):V
- p:createTitleActions(java.util.List):V
- getActions(Z):java.util.List
- getComponent():javax.swing.JComponent
- getContentManager():com.intellij.ui.content.ContentManager
- getCurrentProjectViewPane():com.intellij.ide.projectView.impl.AbstractProjectViewPane
- getCurrentViewId():java.lang.String
- getDefaultViewId():java.lang.String
- getName():java.lang.String
- getPaneIds():java.util.Collection
- getParentOfCurrentSelection():com.intellij.psi.PsiElement
- getProjectViewPaneById(java.lang.String):com.intellij.ide.projectView.impl.AbstractProjectViewPane
- getReady(java.lang.Object):com.intellij.openapi.util.ActionCallback
- getSelectInTargets():java.util.Collection
- getSortKey(java.lang.String):com.intellij.ide.projectView.NodeSortKey
- getState():org.jdom.Element
- isAbbreviatePackageNames(java.lang.String):Z
- isAutoscrollFromSource(java.lang.String):Z
- isAutoscrollToSource(java.lang.String):Z
- isCompactDirectories(java.lang.String):Z
- isFlattenModules(java.lang.String):Z
- isFlattenPackages(java.lang.String):Z
- isFoldersAlwaysOnTop():Z
- isFoldersAlwaysOnTop(java.lang.String):Z
- isHideEmptyMiddlePackages(java.lang.String):Z
- isManualOrder(java.lang.String):Z
- isShowExcludedFiles(java.lang.String):Z
- isShowLibraryContents(java.lang.String):Z
- isShowMembers(java.lang.String):Z
- p:isShowMembersOptionSupported():Z
- isShowModules(java.lang.String):Z
- isShowScratchesAndConsoles(java.lang.String):Z
- isShowURL(java.lang.String):Z
- isShowVisibilityIcons(java.lang.String):Z
- isSortByType(java.lang.String):Z
- isUseFileNestingRules(java.lang.String):Z
- loadState(org.jdom.Element):V
- refresh():V
- removeProjectPane(com.intellij.ide.projectView.impl.AbstractProjectViewPane):V
- select(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):V
- selectCB(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.util.ActionCallback
- selectPsiElement(com.intellij.psi.PsiElement,Z):V
- setAbbreviatePackageNames(java.lang.String,Z):V
- setAutoscrollFromSource(Z,java.lang.String):V
- setAutoscrollToSource(Z,java.lang.String):V
- setCompactDirectories(java.lang.String,Z):V
- setFlattenModules(java.lang.String,Z):V
- setFlattenPackages(java.lang.String,Z):V
- setFoldersAlwaysOnTop(Z):V
- setHideEmptyPackages(java.lang.String,Z):V
- setManualOrder(java.lang.String,Z):V
- setShowLibraryContents(java.lang.String,Z):V
- setShowModules(java.lang.String,Z):V
- setSortByType(java.lang.String,Z):V
- setSortKey(java.lang.String,com.intellij.ide.projectView.NodeSortKey):V
- setUseFileNestingRules(Z):V
- setupImpl(com.intellij.openapi.wm.ToolWindow):V
- setupImpl(com.intellij.openapi.wm.ToolWindow,Z):V
f:com.intellij.ide.projectView.impl.ProjectViewInplaceCommentProducerImplKt
- sf:appendInplaceComments(com.intellij.ide.util.treeView.InplaceCommentAppender,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
com.intellij.ide.projectView.impl.ProjectViewListener
- sf:TOPIC:com.intellij.util.messages.Topic
- initCachedNodesLoaded():V
- initCompleted():V
- initStarted():V
- paneShown(com.intellij.ide.projectView.impl.AbstractProjectViewPane,com.intellij.ide.projectView.impl.AbstractProjectViewPane):V
c:com.intellij.ide.projectView.impl.ProjectViewPane
- com.intellij.ide.projectView.impl.AbstractProjectViewPaneWithAsyncSupport
- sf:ID:java.lang.String
- <init>(com.intellij.openapi.project.Project):V
- s:canBeSelectedInProjectView(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- createSelectInTarget():com.intellij.ide.SelectInTarget
- p:createStructure():com.intellij.ide.projectView.impl.ProjectAbstractTreeStructureBase
- p:createTree(javax.swing.tree.DefaultTreeModel):com.intellij.ide.projectView.impl.ProjectViewTree
- getComponentName():java.lang.String
- getIcon():javax.swing.Icon
- getId():java.lang.String
- getTitle():java.lang.String
- getWeight():I
- isFileNestingEnabled():Z
- supportsFlattenModules():Z
- supportsShowExcludedFiles():Z
- supportsShowScratchesAndConsoles():Z
pc:com.intellij.ide.projectView.impl.ProjectViewPane$ProjectViewPaneTreeStructure
- com.intellij.ide.projectView.impl.ProjectTreeStructure
- com.intellij.ide.projectView.ProjectViewSettings
- p:<init>(com.intellij.ide.projectView.impl.ProjectViewPane):V
- p:createRoot(com.intellij.openapi.project.Project,com.intellij.ide.projectView.ViewSettings):com.intellij.ide.util.treeView.AbstractTreeNode
- isShowExcludedFiles():Z
- isShowLibraryContents():Z
- isToBuildChildrenInBackground(java.lang.Object):Z
- isUseFileNestingRules():Z
a:com.intellij.ide.projectView.impl.ProjectViewPaneSelectionHelper
- <init>():V
- pa:computeAdjustedNodes(java.util.List):java.util.List
- pa:computeAdjustedPaths(com.intellij.ide.projectView.impl.ProjectViewPaneSelectionHelper$SelectionDescriptor):java.util.List
f:com.intellij.ide.projectView.impl.ProjectViewPaneSelectionHelper$SelectionDescriptor
- java.lang.Record
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.vfs.VirtualFile,java.util.List):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- originalTreePaths():java.util.List
- targetPsiElement():com.intellij.psi.PsiElement
- targetVirtualFile():com.intellij.openapi.vfs.VirtualFile
c:com.intellij.ide.projectView.impl.ProjectViewRenderer
- com.intellij.ide.util.treeView.NodeRenderer
- <init>():V
- p:getPresentation(java.lang.Object):com.intellij.navigation.ItemPresentation
f:com.intellij.ide.projectView.impl.ProjectViewSharedSettings
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.ide.projectView.impl.ProjectViewSharedSettings$Companion
- <init>():V
- f:getAbbreviatePackages():Z
- f:getAutoscrollFromSource():Z
- f:getAutoscrollToSource():Z
- f:getCompactDirectories():Z
- f:getFlattenModules():Z
- f:getFlattenPackages():Z
- f:getFoldersAlwaysOnTop():Z
- f:getHideEmptyPackages():Z
- f:getManualOrder():Z
- f:getOpenDirectoriesWithSingleClick():Z
- f:getShowExcludedFiles():Z
- f:getShowLibraryContents():Z
- f:getShowMembers():Z
- f:getShowModules():Z
- f:getShowScratchesAndConsoles():Z
- f:getShowVisibilityIcons():Z
- f:getSortKey():com.intellij.ide.projectView.NodeSortKey
- getState():com.intellij.ide.projectView.impl.ProjectViewSharedSettings
- loadState(com.intellij.ide.projectView.impl.ProjectViewSharedSettings):V
- f:setAbbreviatePackages(Z):V
- f:setAutoscrollFromSource(Z):V
- f:setAutoscrollToSource(Z):V
- f:setCompactDirectories(Z):V
- f:setFlattenModules(Z):V
- f:setFlattenPackages(Z):V
- f:setFoldersAlwaysOnTop(Z):V
- f:setHideEmptyPackages(Z):V
- f:setManualOrder(Z):V
- f:setOpenDirectoriesWithSingleClick(Z):V
- f:setShowExcludedFiles(Z):V
- f:setShowLibraryContents(Z):V
- f:setShowMembers(Z):V
- f:setShowModules(Z):V
- f:setShowScratchesAndConsoles(Z):V
- f:setShowVisibilityIcons(Z):V
- f:setSortKey(com.intellij.ide.projectView.NodeSortKey):V
f:com.intellij.ide.projectView.impl.ProjectViewSharedSettings$Companion
- f:getInstance():com.intellij.ide.projectView.impl.ProjectViewSharedSettings
f:com.intellij.ide.projectView.impl.ProjectViewState
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.ide.projectView.impl.ProjectViewState$Companion
- <init>():V
- f:getAbbreviatePackageNames():Z
- f:getAutoscrollFromSource():Z
- f:getAutoscrollToSource():Z
- f:getCompactDirectories():Z
- sf:getDefaultInstance():com.intellij.ide.projectView.impl.ProjectViewState
- f:getFlattenModules():Z
- f:getFlattenPackages():Z
- f:getFoldersAlwaysOnTop():Z
- f:getHideEmptyMiddlePackages():Z
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.projectView.impl.ProjectViewState
- f:getManualOrder():Z
- f:getOpenDirectoriesWithSingleClick():Z
- f:getShowExcludedFiles():Z
- f:getShowLibraryContents():Z
- f:getShowMembers():Z
- f:getShowModules():Z
- f:getShowScratchesAndConsoles():Z
- f:getShowURL():Z
- f:getShowVisibilityIcons():Z
- f:getSortByType():Z
- f:getSortKey():com.intellij.ide.projectView.NodeSortKey
- getState():com.intellij.ide.projectView.impl.ProjectViewState
- f:getUseFileNestingRules():Z
- loadState(com.intellij.ide.projectView.impl.ProjectViewState):V
- noStateLoaded():V
- f:setAbbreviatePackageNames(Z):V
- f:setAutoscrollFromSource(Z):V
- f:setAutoscrollToSource(Z):V
- f:setCompactDirectories(Z):V
- f:setFlattenModules(Z):V
- f:setFlattenPackages(Z):V
- f:setFoldersAlwaysOnTop(Z):V
- f:setHideEmptyMiddlePackages(Z):V
- f:setManualOrder(Z):V
- f:setOpenDirectoriesWithSingleClick(Z):V
- f:setShowExcludedFiles(Z):V
- f:setShowLibraryContents(Z):V
- f:setShowMembers(Z):V
- f:setShowModules(Z):V
- f:setShowScratchesAndConsoles(Z):V
- f:setShowURL(Z):V
- f:setShowVisibilityIcons(Z):V
- f:setSortByType(Z):V
- f:setSortKey(com.intellij.ide.projectView.NodeSortKey):V
- f:setUseFileNestingRules(Z):V
f:com.intellij.ide.projectView.impl.ProjectViewState$Companion
- f:getDefaultInstance():com.intellij.ide.projectView.impl.ProjectViewState
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.projectView.impl.ProjectViewState
c:com.intellij.ide.projectView.impl.ProjectViewTree
- com.intellij.ide.dnd.aware.DnDAwareTree
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- com.intellij.ui.speedSearch.SpeedSearchSupply$SpeedSearchLocator
- <init>(javax.swing.tree.TreeModel):V
- p:createCellRenderer():javax.swing.tree.TreeCellRenderer
- expandPath(javax.swing.tree.TreePath):V
- s:getColorForElement(com.intellij.psi.PsiElement):java.awt.Color
- getFileColorFor(java.lang.Object):java.awt.Color
- getSizeAndLocation(javax.swing.JComponent):com.intellij.ui.awt.RelativeRectangle
- isFileColorsEnabled():Z
- s:isFileColorsEnabledFor(javax.swing.JTree):Z
- setModel(javax.swing.tree.TreeModel):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.ide.projectView.impl.PsiFileUrl
- com.intellij.ide.projectView.impl.AbstractUrl
- <init>(java.lang.String):V
- createPath(com.intellij.openapi.project.Project):java.lang.Object[]
- createUrlByElement(java.lang.Object):com.intellij.ide.projectView.impl.AbstractUrl
- equals(java.lang.Object):Z
- hashCode():I
c:com.intellij.ide.projectView.impl.RenameModuleHandler
- com.intellij.ide.TitledHandler
- com.intellij.refactoring.rename.RenameHandler
- <init>():V
- getActionTitle():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- isAvailableOnDataContext(com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.ide.projectView.impl.SelectInProjectViewImplKt
- sf:isSelectInProjectViewServiceBusy(com.intellij.openapi.project.Project):Z
a:com.intellij.ide.projectView.impl.nodes.AbstractModuleNode
- com.intellij.ide.projectView.ProjectViewNode
- com.intellij.pom.NavigatableWithText
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.module.Module,com.intellij.ide.projectView.ViewSettings):V
- canNavigate():Z
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getNavigateActionText(Z):java.lang.String
- getRoots():java.util.Collection
- getTestPresentation():java.lang.String
- navigate(Z):V
- p:showModuleNameInBold():Z
- update(com.intellij.ide.projectView.PresentationData):V
a:com.intellij.ide.projectView.impl.nodes.AbstractProjectNode
- com.intellij.ide.projectView.ProjectViewNode
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.project.Project,com.intellij.ide.projectView.ViewSettings):V
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- pa:createModuleGroup(com.intellij.openapi.module.Module):com.intellij.ide.util.treeView.AbstractTreeNode
- pa:createModuleGroupNode(com.intellij.ide.projectView.impl.ModuleGroup):com.intellij.ide.util.treeView.AbstractTreeNode
- p:createUnloadedModuleNode(com.intellij.openapi.module.UnloadedModuleDescription):com.intellij.ide.util.treeView.AbstractTreeNode
- getSortOrder(com.intellij.ide.projectView.NodeSortSettings):com.intellij.ide.projectView.NodeSortOrder
- getTestPresentation():java.lang.String
- p:modulesAndGroups(java.util.Collection):java.util.Collection
- update(com.intellij.ide.projectView.PresentationData):V
a:com.intellij.ide.projectView.impl.nodes.AbstractPsiBasedNode
- com.intellij.ide.projectView.ProjectViewNode
- com.intellij.ide.util.treeView.ValidateableNode
- com.intellij.pom.StatePreservingNavigatable
- p:<init>(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.ide.projectView.ViewSettings):V
- p:appendInplaceComments(com.intellij.ide.util.treeView.InplaceCommentAppender):V
- p:calcTooltip():java.lang.String
- canNavigate():Z
- canNavigateToSource():Z
- ps:computeFileStatus(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.vcs.FileStatus
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- pa:extractPsiFromValue():com.intellij.psi.PsiElement
- f:getChildren():java.util.Collection
- pa:getChildrenImpl():java.util.Collection
- getFileStatus():com.intellij.openapi.vcs.FileStatus
- p:getIconableFlags():I
- getNavigationItem():com.intellij.navigation.NavigationItem
- getTimeSortKey():java.lang.Comparable
- p:isDeprecated():Z
- p:isMarkReadOnly():Z
- isValid():Z
- navigate(Z):V
- navigate(Z,Z):V
- navigationRequest():com.intellij.platform.backend.navigation.NavigationRequest
- s:patchIcon(com.intellij.openapi.project.Project,javax.swing.Icon,com.intellij.openapi.vfs.VirtualFile):javax.swing.Icon
- update(com.intellij.ide.projectView.PresentationData):V
- pa:updateImpl(com.intellij.ide.projectView.PresentationData):V
- validate():Z
a:com.intellij.ide.projectView.impl.nodes.BasePsiNode
- com.intellij.ide.projectView.impl.nodes.AbstractPsiBasedNode
- p:<init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.ide.projectView.ViewSettings):V
- p:extractPsiFromValue():com.intellij.psi.PsiElement
- getFileStatus():com.intellij.openapi.vcs.FileStatus
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
com.intellij.ide.projectView.impl.nodes.DropTargetNode
- a:canDrop(javax.swing.tree.TreeNode[]):Z
- canDrop(javax.swing.tree.TreePath[]):Z
- a:drop(javax.swing.tree.TreeNode[],com.intellij.openapi.actionSystem.DataContext):V
- drop(javax.swing.tree.TreePath[],com.intellij.openapi.actionSystem.DataContext):V
- a:dropExternalFiles(com.intellij.psi.PsiFileSystemItem[],com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.ide.projectView.impl.nodes.ExternalLibrariesNode
- com.intellij.ide.projectView.ProjectViewNode
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.projectView.ViewSettings):V
- s:addLibraryChildren(com.intellij.openapi.roots.LibraryOrderEntry,java.util.List,com.intellij.openapi.project.Project,com.intellij.ide.projectView.ProjectViewNode):V
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getChildren():java.util.Collection
- p:getChildren(com.intellij.openapi.project.Project,com.intellij.openapi.module.Module[]):java.util.List
- getSortOrder(com.intellij.ide.projectView.NodeSortSettings):com.intellij.ide.projectView.NodeSortOrder
- isAlwaysShowPlus():Z
- isIncludedInExpandAll():Z
- p:update(com.intellij.ide.projectView.PresentationData):V
c:com.intellij.ide.projectView.impl.nodes.ExternalLibrariesWorkspaceModelNode
- com.intellij.ide.projectView.ProjectViewNode
- <init>(com.intellij.openapi.project.Project,java.util.Collection,java.lang.String,com.intellij.ide.projectView.ViewSettings):V
- <init>(com.intellij.openapi.project.Project,java.util.Collection,java.util.Collection,com.intellij.navigation.ItemPresentation,com.intellij.ide.projectView.ViewSettings):V
- <init>(com.intellij.openapi.project.Project,java.util.Collection,java.util.Collection,java.lang.String,javax.swing.Icon,com.intellij.ide.projectView.ViewSettings):V
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- equals(java.lang.Object):Z
- getChildren():java.util.Collection
- getName():java.lang.String
- getRoots():java.util.Collection
- hashCode():I
- p:update(com.intellij.ide.projectView.PresentationData):V
com.intellij.ide.projectView.impl.nodes.FileNodeWithNestedFileNodes
- a:getNestedFileNodes():java.util.Collection
f:com.intellij.ide.projectView.impl.nodes.LibraryGroupElement
- sf:ARRAY_DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.openapi.module.Module):V
- equals(java.lang.Object):Z
- getModule():com.intellij.openapi.module.Module
- hashCode():I
c:com.intellij.ide.projectView.impl.nodes.LibraryGroupNode
- com.intellij.ide.projectView.ProjectViewNode
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.projectView.impl.nodes.LibraryGroupElement,com.intellij.ide.projectView.ViewSettings):V
- s:addLibraryChildren(com.intellij.openapi.roots.LibraryOrSdkOrderEntry,java.util.List,com.intellij.openapi.project.Project,com.intellij.ide.projectView.ProjectViewNode):V
- canNavigate():Z
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getChildren():java.util.Collection
- s:getLibraryRoots(com.intellij.openapi.roots.LibraryOrderEntry):com.intellij.openapi.vfs.VirtualFile[]
- getTestPresentation():java.lang.String
- navigate(Z):V
- update(com.intellij.ide.projectView.PresentationData):V
a:com.intellij.ide.projectView.impl.nodes.ModuleGroupNode
- com.intellij.ide.projectView.ProjectViewNode
- com.intellij.ide.projectView.impl.nodes.DropTargetNode
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.projectView.impl.ModuleGroup,com.intellij.ide.projectView.ViewSettings):V
- canDrop(javax.swing.tree.TreeNode[]):Z
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- pa:createModuleGroupNode(com.intellij.ide.projectView.impl.ModuleGroup):com.intellij.ide.projectView.impl.nodes.ModuleGroupNode
- pa:createModuleNode(com.intellij.openapi.module.Module):com.intellij.ide.util.treeView.AbstractTreeNode
- drop(javax.swing.tree.TreeNode[],com.intellij.openapi.actionSystem.DataContext):V
- dropExternalFiles(com.intellij.psi.PsiFileSystemItem[],com.intellij.openapi.actionSystem.DataContext):V
- getChildren():java.util.Collection
- pa:getModulesByFile(com.intellij.openapi.vfs.VirtualFile):java.util.List
- getRoots():java.util.Collection
- getSortOrder(com.intellij.ide.projectView.NodeSortSettings):com.intellij.ide.projectView.NodeSortOrder
- getTestPresentation():java.lang.String
- getToolTip():java.lang.String
- update(com.intellij.ide.projectView.PresentationData):V
- validate():Z
f:com.intellij.ide.projectView.impl.nodes.NamedLibraryElement
- sf:ARRAY_DATA_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.openapi.module.Module,com.intellij.openapi.roots.LibraryOrSdkOrderEntry):V
- equals(java.lang.Object):Z
- getModule():com.intellij.openapi.module.Module
- getName():java.lang.String
- getOrderEntry():com.intellij.openapi.roots.LibraryOrSdkOrderEntry
- hashCode():I
c:com.intellij.ide.projectView.impl.nodes.NamedLibraryElementNode
- com.intellij.ide.projectView.ProjectViewNode
- com.intellij.pom.NavigatableWithText
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.projectView.impl.nodes.NamedLibraryElement,com.intellij.ide.projectView.ViewSettings):V
- canNavigate():Z
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getChildren():java.util.Collection
- getName():java.lang.String
- getNavigateActionText(Z):java.lang.String
- getTestPresentation():java.lang.String
- isAlwaysShowPlus():Z
- navigate(Z):V
- update(com.intellij.ide.projectView.PresentationData):V
f:com.intellij.ide.projectView.impl.nodes.NestingTreeNode
- com.intellij.ide.projectView.impl.nodes.PsiFileNode
- com.intellij.ide.projectView.impl.nodes.FileNodeWithNestedFileNodes
- <init>(com.intellij.ide.projectView.impl.nodes.PsiFileNode,java.util.Collection):V
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- expandOnDoubleClick():Z
- getChildrenImpl():java.util.Collection
- getNestedFileNodes():java.util.Collection
- isAlwaysShowPlus():Z
c:com.intellij.ide.projectView.impl.nodes.ProjectViewDirectoryHelper
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- <init>(com.intellij.openapi.project.Project):V
- canRepresent(com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.PsiDirectory,com.intellij.psi.PsiDirectory,com.intellij.ide.projectView.ViewSettings):Z
- canRepresent(java.lang.Object,com.intellij.psi.PsiDirectory):Z
- createFileAndDirectoryNodes(java.util.List,com.intellij.ide.projectView.ViewSettings):java.util.Collection
- p:doCreateNode(com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.PsiManager,com.intellij.ide.projectView.ViewSettings):com.intellij.ide.util.treeView.AbstractTreeNode
- getDirectoryChildren(com.intellij.psi.PsiDirectory,com.intellij.ide.projectView.ViewSettings,Z):java.util.Collection
- getDirectoryChildren(com.intellij.psi.PsiDirectory,com.intellij.ide.projectView.ViewSettings,Z,com.intellij.ide.projectView.impl.nodes.PsiFileSystemItemFilter):java.util.Collection
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.projectView.impl.nodes.ProjectViewDirectoryHelper
- getLocationString(com.intellij.psi.PsiDirectory):java.lang.String
- getLocationString(com.intellij.psi.PsiDirectory,Z,Z):java.lang.String
- getNodeName(com.intellij.ide.projectView.ViewSettings,java.lang.Object,com.intellij.psi.PsiDirectory):java.lang.String
- getProject():com.intellij.openapi.project.Project
- getTopLevelRoots():java.util.List
- isEmptyMiddleDirectory(com.intellij.psi.PsiDirectory,Z):Z
- isEmptyMiddleDirectory(com.intellij.psi.PsiDirectory,Z,com.intellij.ide.projectView.impl.nodes.PsiFileSystemItemFilter):Z
- isShowFQName(com.intellij.ide.projectView.ViewSettings,java.lang.Object,com.intellij.psi.PsiDirectory):Z
- shouldHideProjectConfigurationFilesDirectory():Z
- skipDirectory(com.intellij.psi.PsiDirectory):Z
- supportsFlattenPackages():Z
- supportsHideEmptyMiddlePackages():Z
c:com.intellij.ide.projectView.impl.nodes.ProjectViewModuleGroupNode
- com.intellij.ide.projectView.impl.nodes.ModuleGroupNode
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.projectView.impl.ModuleGroup,com.intellij.ide.projectView.ViewSettings):V
- p:createModuleGroupNode(com.intellij.ide.projectView.impl.ModuleGroup):com.intellij.ide.projectView.impl.nodes.ModuleGroupNode
- p:createModuleNode(com.intellij.openapi.module.Module):com.intellij.ide.util.treeView.AbstractTreeNode
- p:getModulesByFile(com.intellij.openapi.vfs.VirtualFile):java.util.List
c:com.intellij.ide.projectView.impl.nodes.ProjectViewModuleNode
- com.intellij.ide.projectView.impl.nodes.AbstractModuleNode
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.module.Module,com.intellij.ide.projectView.ViewSettings):V
- getChildren():java.util.Collection
- getTypeSortWeight(Z):I
- getWeight():I
c:com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode
- com.intellij.ide.projectView.impl.nodes.AbstractProjectNode
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.projectView.ViewSettings):V
- canRepresent(java.lang.Object):Z
- p:createModuleGroup(com.intellij.openapi.module.Module):com.intellij.ide.util.treeView.AbstractTreeNode
- p:createModuleGroupNode(com.intellij.ide.projectView.impl.ModuleGroup):com.intellij.ide.util.treeView.AbstractTreeNode
- p:createUnloadedModuleNode(com.intellij.openapi.module.UnloadedModuleDescription):com.intellij.ide.util.treeView.AbstractTreeNode
- getChildren():java.util.Collection
- isAlwaysShowPlus():Z
c:com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode
- com.intellij.ide.projectView.impl.nodes.BasePsiNode
- com.intellij.ide.util.treeView.PathElementIdProvider
- com.intellij.pom.NavigatableWithText
- <init>(com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,com.intellij.ide.projectView.ViewSettings):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,com.intellij.ide.projectView.ViewSettings,com.intellij.ide.projectView.impl.nodes.PsiFileSystemItemFilter):V
- canNavigate():Z
- canNavigateToSource():Z
- ps:canRealModuleNameBeHidden():Z
- canRepresent(java.lang.Object):Z
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getChildrenImpl():java.util.Collection
- getFilter():com.intellij.ide.projectView.impl.nodes.PsiFileSystemItemFilter
- getNavigateActionText(Z):java.lang.String
- getPathElementId():java.lang.String
- getQualifiedNameSortKey():java.lang.String
- getSortKey():java.lang.Comparable
- getSortOrder(com.intellij.ide.projectView.NodeSortSettings):com.intellij.ide.projectView.NodeSortOrder
- getTestPresentation():java.lang.String
- getTitle():java.lang.String
- getTypeSortKey():java.lang.Comparable
- getTypeSortWeight(Z):I
- getWeight():I
- isAlwaysShowPlus():Z
- isFQNameShown():Z
- isValid():Z
- navigate(Z):V
- p:setupIcon(com.intellij.ide.projectView.PresentationData,com.intellij.psi.PsiDirectory):V
- shouldDrillDownOnEmptyElement():Z
- p:shouldShowModuleName():Z
- p:shouldShowSourcesRoot():Z
- p:updateImpl(com.intellij.ide.projectView.PresentationData):V
c:com.intellij.ide.projectView.impl.nodes.PsiFileNode
- com.intellij.ide.projectView.impl.nodes.BasePsiNode
- com.intellij.pom.NavigatableWithText
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.ide.projectView.ViewSettings):V
- canNavigate():Z
- canRepresent(java.lang.Object):Z
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getChildrenImpl():java.util.Collection
- getNavigateActionText(Z):java.lang.String
- getTitle():java.lang.String
- getTypeSortKey():java.lang.Comparable
- getWeight():I
- pf:isMarkReadOnly():Z
- f:navigate(Z):V
- shouldDrillDownOnEmptyElement():Z
- p:updateImpl(com.intellij.ide.projectView.PresentationData):V
f:com.intellij.ide.projectView.impl.nodes.PsiFileNode$ExtensionSortKey
- java.lang.Comparable
- <init>(java.lang.String):V
- compareTo(com.intellij.ide.projectView.impl.nodes.PsiFileNode$ExtensionSortKey):I
com.intellij.ide.projectView.impl.nodes.PsiFileSystemItemFilter
- a:shouldShow(com.intellij.psi.PsiFileSystemItem):Z
c:com.intellij.ide.projectView.impl.nodes.SyntheticLibraryElementNode
- com.intellij.ide.projectView.ProjectViewNode
- com.intellij.pom.NavigatableWithText
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.SyntheticLibrary,com.intellij.navigation.ItemPresentation,com.intellij.ide.projectView.ViewSettings):V
- canNavigate():Z
- canNavigateToSource():Z
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getChildren():java.util.Collection
- getName():java.lang.String
- getNavigateActionText(Z):java.lang.String
- navigate(Z):V
- p:update(com.intellij.ide.projectView.PresentationData):V
f:com.intellij.ide.scopeView.ScopeViewPane
- com.intellij.ide.projectView.impl.AbstractProjectViewPane
- sf:ID:java.lang.String
- <init>(com.intellij.openapi.project.Project):V
- createComponent():javax.swing.JComponent
- createSelectInTarget():com.intellij.ide.SelectInTarget
- dispose():V
- getIcon():javax.swing.Icon
- getId():java.lang.String
- getPresentableSubIdIcon(java.lang.String):javax.swing.Icon
- getPresentableSubIdName(java.lang.String):java.lang.String
- getReady(java.lang.Object):com.intellij.openapi.util.ActionCallback
- getSelectedScope():com.intellij.psi.search.scope.packageSet.NamedScope
- getSubIds():java.lang.String[]
- getTitle():java.lang.String
- getValueFromNode(java.lang.Object):java.lang.Object
- getWeight():I
- isFileNestingEnabled():Z
- select(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):V
- supportsAbbreviatePackageNames():Z
- supportsCompactDirectories():Z
- supportsFlattenModules():Z
- supportsHideEmptyMiddlePackages():Z
- supportsShowExcludedFiles():Z
- supportsShowModules():Z
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- updateFromRoot(Z):com.intellij.openapi.util.ActionCallback
- updateSelectedScope():V
c:com.intellij.ide.scopeView.nodes.BasePsiNode
- com.intellij.packageDependencies.ui.PackageDependenciesNode
- <init>(com.intellij.psi.PsiElement):V
- equals(java.lang.Object):Z
- getColor():java.awt.Color
- getContainingFile():com.intellij.psi.PsiFile
- getContainingFiles():I
- getIcon():javax.swing.Icon
- getPsiElement():com.intellij.psi.PsiElement
- getWeight():I
- hashCode():I
- isDeprecated():Z
- isValid():Z
a:com.intellij.ide.scratch.LRUPopupBuilder
- p:<init>(com.intellij.openapi.project.Project,java.lang.String):V
- buildPopup():com.intellij.openapi.ui.popup.ListPopup
- s:forFileLanguages(com.intellij.openapi.project.Project,java.lang.String,com.intellij.lang.Language,com.intellij.util.Consumer):com.intellij.openapi.ui.popup.ListPopup
- forValues(java.lang.Iterable):com.intellij.ide.scratch.LRUPopupBuilder
- a:getDisplayName(java.lang.Object):java.lang.String
- a:getIcon(java.lang.Object):javax.swing.Icon
- a:getStorageId(java.lang.Object):java.lang.String
- s:languagePopupBuilder(com.intellij.openapi.project.Project,java.lang.String,java.util.function.Function):com.intellij.ide.scratch.LRUPopupBuilder
- onChosen(com.intellij.util.Consumer):com.intellij.ide.scratch.LRUPopupBuilder
- withComparator(java.util.Comparator):com.intellij.ide.scratch.LRUPopupBuilder
- withExtraBottomValue(java.lang.Object,java.lang.String,javax.swing.Icon):com.intellij.ide.scratch.LRUPopupBuilder
- withExtraMiddleValue(java.lang.Object,java.lang.String,javax.swing.Icon):com.intellij.ide.scratch.LRUPopupBuilder
- withExtraSpeedSearchNamer(java.util.function.Function):com.intellij.ide.scratch.LRUPopupBuilder
- withExtraTopValue(java.lang.Object,java.lang.String,javax.swing.Icon):com.intellij.ide.scratch.LRUPopupBuilder
- withSelection(java.lang.Object):com.intellij.ide.scratch.LRUPopupBuilder
f:com.intellij.ide.scratch.ScratchFileActions
- <init>():V
- s:doCreateNewScratch(com.intellij.openapi.project.Project,com.intellij.ide.scratch.ScratchFileCreationHelper$Context):com.intellij.psi.PsiFile
- s:doCreateNewScratch(com.intellij.openapi.project.Project,com.intellij.ide.scratch.ScratchFileCreationHelper$Context,com.intellij.openapi.actionSystem.DataContext):com.intellij.psi.PsiFile
c:com.intellij.ide.scratch.ScratchFileActions$ChangeLanguageAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:actionPerformedImpl(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.project.Project,java.lang.String,com.intellij.util.containers.JBIterable):V
- p:fileFilter(com.intellij.openapi.project.Project):com.intellij.openapi.util.Condition
- p:fileLanguage(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.lang.Language
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getChangeLanguageActionName(java.lang.String):java.lang.String
- p:getChangeLanguageTitle():java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.scratch.ScratchFileCreationHelper
- sf:EXTENSION:com.intellij.lang.LanguageExtension
- <init>():V
- beforeCreate(com.intellij.openapi.project.Project,com.intellij.ide.scratch.ScratchFileCreationHelper$Context):V
- s:parseHeader(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String):com.intellij.psi.PsiFile
- prepareText(com.intellij.openapi.project.Project,com.intellij.ide.scratch.ScratchFileCreationHelper$Context,com.intellij.openapi.actionSystem.DataContext):Z
- s:reformat(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String):java.lang.String
f:com.intellij.ide.scratch.ScratchFileCreationHelper$Context
- caretOffset:I
- createOption:com.intellij.ide.scratch.ScratchFileService$Option
- fileCounter:com.intellij.openapi.util.Factory
- fileExtension:java.lang.String
- filePrefix:java.lang.String
- ideView:com.intellij.ide.IdeView
- language:com.intellij.lang.Language
- text:java.lang.String
- <init>():V
f:com.intellij.ide.scratch.ScratchFileServiceImpl
- com.intellij.ide.scratch.ScratchFileService
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- dispose():V
- extractFileEnumeration():com.intellij.psi.search.impl.VirtualFileEnumeration
- findFile(com.intellij.ide.scratch.RootType,java.lang.String,com.intellij.ide.scratch.ScratchFileService$Option):com.intellij.openapi.vfs.VirtualFile
- getRootPath(com.intellij.ide.scratch.RootType):java.lang.String
- getRootType(com.intellij.openapi.vfs.VirtualFile):com.intellij.ide.scratch.RootType
- getScratchesMapping():com.intellij.lang.PerFileMappings
- getState():org.jdom.Element
- loadState(org.jdom.Element):V
f:com.intellij.ide.scratch.ScratchFileServiceImpl$Detector
- com.intellij.openapi.fileTypes.FileTypeRegistry$FileTypeDetector
- <init>():V
- detect(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.io.ByteSequence,java.lang.CharSequence):com.intellij.openapi.fileTypes.FileType
f:com.intellij.ide.scratch.ScratchFileServiceImpl$Substitutor
- com.intellij.psi.LanguageSubstitutor
- <init>():V
- getLanguage(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.lang.Language
- s:substituteLanguage(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.lang.Language
c:com.intellij.ide.scratch.ScratchFileType
- com.intellij.openapi.fileTypes.LanguageFileType
- sf:INSTANCE:com.intellij.openapi.fileTypes.LanguageFileType
- getDefaultExtension():java.lang.String
- getDescription():java.lang.String
- getIcon():javax.swing.Icon
- getName():java.lang.String
- isReadOnly():Z
f:com.intellij.ide.scratch.ScratchFileTypeIcon
- com.intellij.ui.icons.IconWithOverlay
- <init>(javax.swing.Icon):V
- getOverlayShape(I,I):java.awt.Shape
- replaceBy(com.intellij.ui.icons.IconReplacer):com.intellij.ide.scratch.ScratchFileTypeIcon
f:com.intellij.ide.scratch.ScratchFromSelectionIntention
- com.intellij.codeInsight.intention.IntentionAction
- <init>():V
- getFamilyName():java.lang.String
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
f:com.intellij.ide.scratch.ScratchRootType
- com.intellij.ide.scratch.RootType
- createScratchFile(com.intellij.openapi.project.Project,java.lang.String,com.intellij.lang.Language,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createScratchFile(com.intellij.openapi.project.Project,java.lang.String,com.intellij.lang.Language,java.lang.String,com.intellij.ide.scratch.ScratchFileService$Option):com.intellij.openapi.vfs.VirtualFile
- s:getInstance():com.intellij.ide.scratch.ScratchRootType
- patchIcon(javax.swing.Icon,com.intellij.openapi.vfs.VirtualFile,I,com.intellij.openapi.project.Project):javax.swing.Icon
- substituteLanguage(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.lang.Language
f:com.intellij.ide.scratch.ScratchTreeStructureProvider
- com.intellij.ide.projectView.TreeStructureProvider
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.project.Project):V
- s:createRootNode(com.intellij.openapi.project.Project,com.intellij.ide.projectView.ViewSettings):com.intellij.ide.util.treeView.AbstractTreeNode
- s:getVirtualFile(com.intellij.ide.scratch.RootType):com.intellij.openapi.vfs.VirtualFile
- modify(com.intellij.ide.util.treeView.AbstractTreeNode,java.util.Collection,com.intellij.ide.projectView.ViewSettings):java.util.Collection
f:com.intellij.ide.scratch.ScratchesNamedScope
- com.intellij.psi.search.scope.packageSet.NamedScope
- sf:ID:java.lang.String
- <init>():V
- s:contains(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- s:scratchesAndConsoles():java.lang.String
f:com.intellij.ide.scratch.ScratchesSearchScope
- com.intellij.psi.search.GlobalSearchScope
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- extractFileEnumeration():com.intellij.psi.search.impl.VirtualFileEnumeration
- getDisplayName():java.lang.String
- s:getScratchesScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
f:com.intellij.ide.script.IdeConsoleRootType
- com.intellij.execution.console.IdeConsoleRootType
- fileOpened(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.FileEditorManager):V
- s:getInstance():com.intellij.ide.script.IdeConsoleRootType
- substituteIcon(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):javax.swing.Icon
a:com.intellij.ide.structureView.impl.TemplateLanguageStructureViewBuilder
- com.intellij.ide.structureView.TreeBasedStructureViewBuilder
- p:<init>(com.intellij.psi.PsiElement):V
- s:create(com.intellij.psi.PsiFile,com.intellij.util.PairFunction):com.intellij.ide.structureView.impl.TemplateLanguageStructureViewBuilder
- pa:createMainBuilder(com.intellij.psi.PsiFile):com.intellij.ide.structureView.TreeBasedStructureViewBuilder
- createStructureView(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.project.Project):com.intellij.ide.structureView.StructureView
- createStructureViewModel(com.intellij.openapi.editor.Editor):com.intellij.ide.structureView.StructureViewModel
- p:isAcceptableBaseLanguageFile(com.intellij.psi.PsiFile):Z
- isRootNodeShown():Z
c:com.intellij.ide.structureView.newStructureView.StructureViewComponent
- com.intellij.openapi.ui.SimpleToolWindowPanel
- com.intellij.ide.structureView.StructureView
- com.intellij.ide.structureView.newStructureView.TreeActionsOwner
- com.intellij.openapi.actionSystem.DataProvider
- <init>(com.intellij.openapi.fileEditor.FileEditor,com.intellij.ide.structureView.StructureViewModel,com.intellij.openapi.project.Project,Z):V
- p:addGroupByActions(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- centerSelectedRow():V
- s:clearStructureViewState(com.intellij.openapi.project.Project):V
- p:createActionGroup():com.intellij.openapi.actionSystem.ActionGroup
- s:createWrapper(com.intellij.openapi.project.Project,com.intellij.ide.util.treeView.smartTree.TreeElement,com.intellij.ide.util.treeView.smartTree.TreeModel):com.intellij.ide.util.treeView.smartTree.TreeElementWrapper
- disableStoreState():V
- dispose():V
- getFileEditor():com.intellij.openapi.fileEditor.FileEditor
- getHelpID():java.lang.String
- getProject():com.intellij.openapi.project.Project
- s:getSelectedValues(com.intellij.util.containers.JBIterable):com.intellij.util.containers.JBIterable
- getTree():javax.swing.JTree
- getTreeModel():com.intellij.ide.structureView.StructureViewModel
- p:installTreePopupHandlers():V
- isActionActive(java.lang.String):Z
- isDisposed():Z
- navigateToSelectedElement(Z):Z
- queueUpdate():V
- rebuild():V
- rebuildAndUpdate():org.jetbrains.concurrency.AsyncPromise
- s:registerAutoExpandListener(javax.swing.JTree,com.intellij.ide.structureView.StructureViewModel):V
- s:registerPsiListener(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.lang.Runnable):V
- restoreState():V
- select(java.lang.Object,Z):org.jetbrains.concurrency.Promise
- setActionActive(java.lang.String,Z):V
- p:showScrollToFromSourceActions():Z
- pf:showToolbar():V
- storeState():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- s:unwrapNavigatable(java.lang.Object):java.lang.Object
- s:unwrapValue(java.lang.Object):java.lang.Object
- s:unwrapWrapper(java.lang.Object):java.lang.Object
c:com.intellij.ide.structureView.newStructureView.TreeActionWrapper
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.actionSystem.ActionWithDelegate
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.ide.util.treeView.smartTree.TreeAction,com.intellij.ide.structureView.newStructureView.TreeActionsOwner):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getDelegate():com.intellij.ide.util.treeView.smartTree.TreeAction
- getPresentableName():java.lang.String
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.ide.structureView.newStructureView.TreeActionsOwner
- a:isActionActive(java.lang.String):Z
- a:setActionActive(java.lang.String,Z):V
f:com.intellij.ide.structureView.newStructureView.TreeModelWrapper
- com.intellij.ide.structureView.StructureViewModel
- com.intellij.ide.structureView.StructureViewModel$ExpandInfoProvider
- com.intellij.ide.util.treeView.smartTree.ProvidingTreeModel
- <init>(com.intellij.ide.structureView.StructureViewModel,com.intellij.ide.structureView.newStructureView.TreeActionsOwner):V
- addEditorPositionListener(com.intellij.ide.structureView.FileEditorPositionListener):V
- addModelListener(com.intellij.ide.structureView.ModelListener):V
- dispose():V
- getCurrentEditorElement():java.lang.Object
- getElementStatus(java.lang.Object):com.intellij.openapi.vcs.FileStatus
- getFilters():com.intellij.ide.util.treeView.smartTree.Filter[]
- getGroupers():com.intellij.ide.util.treeView.smartTree.Grouper[]
- getModel():com.intellij.ide.structureView.StructureViewModel
- getNodeProviders():java.util.Collection
- getRoot():com.intellij.ide.structureView.StructureViewTreeElement
- getSorters():com.intellij.ide.util.treeView.smartTree.Sorter[]
- s:isActive(com.intellij.ide.util.treeView.smartTree.TreeAction,com.intellij.ide.structureView.newStructureView.TreeActionsOwner):Z
- isAutoExpand(com.intellij.ide.structureView.StructureViewTreeElement):Z
- isEnabled(com.intellij.ide.util.treeView.smartTree.NodeProvider):Z
- isSmartExpand():Z
- removeEditorPositionListener(com.intellij.ide.structureView.FileEditorPositionListener):V
- removeModelListener(com.intellij.ide.structureView.ModelListener):V
- shouldEnterElement(java.lang.Object):Z
- s:shouldRevert(com.intellij.ide.util.treeView.smartTree.TreeAction):Z
c:com.intellij.ide.structureView.symbol.FileSymbolTreeElement
- com.intellij.ide.structureView.impl.common.PsiTreeElementBase
- <init>(com.intellij.psi.PsiFile):V
- getChildrenBase():java.util.Collection
- getPresentableText():java.lang.String
c:com.intellij.ide.structureView.symbol.PsiSymbolTreeElement
- com.intellij.ide.structureView.impl.common.PsiTreeElementBase
- <init>(com.intellij.model.psi.PsiSymbolDeclaration):V
- canNavigate():Z
- canNavigateToSource():Z
- getChildrenBase():java.util.Collection
- p:getNavigatable():com.intellij.pom.Navigatable
- s:getNavigatable(com.intellij.model.psi.PsiSymbolDeclaration):com.intellij.pom.Navigatable
- getPresentableText():java.lang.String
- getPresentation():com.intellij.navigation.ItemPresentation
- f:getSymbol():com.intellij.model.Symbol
- f:getSymbolDeclaration():com.intellij.model.psi.PsiSymbolDeclaration
- getValue():com.intellij.psi.PsiElement
- f:isValid():Z
- navigate(Z):V
a:com.intellij.ide.structureView.symbol.SymbolBasedStructureViewModel
- com.intellij.ide.structureView.TextEditorBasedStructureViewModel
- p:<init>(com.intellij.openapi.editor.Editor):V
- p:<init>(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- p:<init>(com.intellij.psi.PsiFile):V
- collectClosestChildrenSymbols(com.intellij.psi.PsiElement):java.util.ArrayList
- getCurrentEditorElement():java.lang.Object
- p:shouldCreateNode(com.intellij.model.psi.PsiSymbolDeclaration):Z
f:com.intellij.ide.ui.search.TraverseUIMode
- sf:Companion:com.intellij.ide.ui.search.TraverseUIMode$Companion
- <init>():V
- sf:getInstance():com.intellij.ide.ui.search.TraverseUIMode
- f:isActive():Z
f:com.intellij.ide.ui.search.TraverseUIMode$Companion
- f:getInstance():com.intellij.ide.ui.search.TraverseUIMode
f:com.intellij.ide.ui.search.TraverseUIStarter
- com.intellij.openapi.application.ApplicationStarter
- <init>():V
- start(java.util.List,kotlin.coroutines.Continuation):java.lang.Object
a:com.intellij.ide.util.AbstractTreeClassChooserDialog
- com.intellij.openapi.ui.DialogWrapper
- com.intellij.ide.util.TreeChooser
- <init>(java.lang.String,com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope,java.lang.Class,com.intellij.ide.util.TreeChooser$Filter,com.intellij.psi.PsiNamedElement):V
- <init>(java.lang.String,com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope,java.lang.Class,com.intellij.ide.util.TreeChooser$Filter,com.intellij.psi.PsiNamedElement,com.intellij.psi.PsiNamedElement,Z,Z):V
- <init>(java.lang.String,com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope,java.lang.Class,com.intellij.ide.util.TreeChooser$Filter,java.util.Comparator,com.intellij.psi.PsiNamedElement,com.intellij.psi.PsiNamedElement,Z,Z):V
- <init>(java.lang.String,com.intellij.openapi.project.Project,java.lang.Class):V
- <init>(java.lang.String,com.intellij.openapi.project.Project,java.lang.Class,com.intellij.psi.PsiNamedElement):V
- p:calcSelectedClass():com.intellij.psi.PsiNamedElement
- p:createCenterPanel():javax.swing.JComponent
- p:createChooseByNameModel():com.intellij.ide.util.gotoByName.ChooseByNameModel
- pa:getClassesByName(java.lang.String,Z,java.lang.String,com.intellij.psi.search.GlobalSearchScope):java.util.List
- p:getDimensionServiceKey():java.lang.String
- p:getFilter():com.intellij.ide.util.TreeChooser$Filter
- p:getGotoByNamePanel():com.intellij.ide.util.gotoByName.ChooseByNamePanel
- p:getInheritorsProvider(com.intellij.psi.PsiNamedElement):com.intellij.ide.util.AbstractTreeClassChooserDialog$BaseClassInheritorsProvider
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getProject():com.intellij.openapi.project.Project
- p:getScope():com.intellij.psi.search.GlobalSearchScope
- getSelected():com.intellij.psi.PsiNamedElement
- pa:getSelectedFromTreeUserObject(javax.swing.tree.DefaultMutableTreeNode):com.intellij.psi.PsiNamedElement
- p:getTabbedPane():com.intellij.ui.TabbedPaneWrapper
- p:getTree():com.intellij.ui.treeStructure.Tree
- select(com.intellij.psi.PsiNamedElement):V
- selectDirectory(com.intellij.psi.PsiDirectory):V
- setInitialSelection(com.intellij.util.Function):V
- showDialog():V
- showPopup():V
a:com.intellij.ide.util.AbstractTreeClassChooserDialog$BaseClassInheritorsProvider
- <init>(java.lang.Object,com.intellij.psi.search.GlobalSearchScope):V
- getBaseClass():java.lang.Object
- pa:getNames():java.lang.String[]
- getScope():com.intellij.psi.search.GlobalSearchScope
- pa:isInheritor(java.lang.Object,java.lang.Object,Z):Z
- pa:searchForInheritors(java.lang.Object,com.intellij.psi.search.GlobalSearchScope,Z):com.intellij.util.Query
pc:com.intellij.ide.util.AbstractTreeClassChooserDialog$MyGotoClassModel
- com.intellij.ide.util.gotoByName.GotoClassModel2
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.util.AbstractTreeClassChooserDialog):V
- getElementsByName(java.lang.String,com.intellij.util.indexing.FindSymbolParameters,com.intellij.openapi.progress.ProgressIndicator):java.lang.Object[]
- getPromptText():java.lang.String
- p:isAccepted(com.intellij.psi.PsiNamedElement):Z
- isDumbAware():Z
c:com.intellij.ide.util.DefaultModuleRendererFactory
- com.intellij.ide.util.ModuleRendererFactory
- <init>():V
- f:getModuleTextWithIcon(java.lang.Object):com.intellij.util.TextWithIcon
- p:getPresentableName(com.intellij.openapi.roots.OrderEntry,com.intellij.openapi.vfs.VirtualFile):java.lang.String
c:com.intellij.ide.util.DefaultPsiElementCellRenderer
- com.intellij.ide.util.PsiElementListCellRenderer
- <init>():V
- getContainerText(com.intellij.psi.PsiElement,java.lang.String):java.lang.String
- getElementText(com.intellij.psi.PsiElement):java.lang.String
- p:getIconFlags():I
c:com.intellij.ide.util.DelegatingPsiElementCellRenderer
- com.intellij.ide.util.PsiElementListCellRenderer
- <init>(com.intellij.ide.util.PsiElementRenderingInfo):V
- p:getContainerText(com.intellij.psi.PsiElement,java.lang.String):java.lang.String
- getElementText(com.intellij.psi.PsiElement):java.lang.String
- p:getIcon(com.intellij.psi.PsiElement):javax.swing.Icon
f:com.intellij.ide.util.DeleteHandler
- s:deletePsiElement(com.intellij.psi.PsiElement[],com.intellij.openapi.project.Project):V
- s:deletePsiElement(com.intellij.psi.PsiElement[],com.intellij.openapi.project.Project,Z):V
- s:overrideNeedsConfirmationInTests(Z,com.intellij.openapi.Disposable):V
- s:shouldEnableDeleteAction(com.intellij.psi.PsiElement[]):Z
f:com.intellij.ide.util.DeleteHandler$DefaultDeleteProvider
- com.intellij.ide.DeleteProvider
- <init>():V
- canDeleteElement(com.intellij.openapi.actionSystem.DataContext):Z
- deleteElement(com.intellij.openapi.actionSystem.DataContext):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
f:com.intellij.ide.util.DeleteNameDescriptionLocation
- com.intellij.psi.ElementDescriptionLocation
- sf:INSTANCE:com.intellij.ide.util.DeleteNameDescriptionLocation
- getDefaultProvider():com.intellij.psi.ElementDescriptionProvider
f:com.intellij.ide.util.DeleteTypeDescriptionLocation
- com.intellij.psi.ElementDescriptionLocation
- sf:PLURAL:com.intellij.ide.util.DeleteTypeDescriptionLocation
- sf:SINGULAR:com.intellij.ide.util.DeleteTypeDescriptionLocation
- getDefaultProvider():com.intellij.psi.ElementDescriptionProvider
- isPlural():Z
c:com.intellij.ide.util.DirectoryChooser
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project):V
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- p:doOKAction():V
- fillList(com.intellij.psi.PsiDirectory[],com.intellij.psi.PsiDirectory,com.intellij.openapi.project.Project,java.lang.String):V
- fillList(com.intellij.psi.PsiDirectory[],com.intellij.psi.PsiDirectory,com.intellij.openapi.project.Project,java.util.Map):V
- p:getDimensionServiceKey():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelectedDirectory():com.intellij.psi.PsiDirectory
- setDescription(java.lang.String):V
f:com.intellij.ide.util.DirectoryChooser$ItemWrapper
- sf:NULL:com.intellij.ide.util.DirectoryChooser$ItemWrapper
- <init>(com.intellij.psi.PsiDirectory,java.lang.String):V
- getDirectory():com.intellij.psi.PsiDirectory
- getFragments():com.intellij.ide.util.DirectoryChooser$PathFragment[]
- getIcon():javax.swing.Icon
- getIcon(com.intellij.openapi.roots.FileIndex):javax.swing.Icon
- getModule():com.intellij.openapi.module.Module
- getPostfix():java.lang.String
- getPresentableUrl():java.lang.String
- getRelativeToProjectPath():java.lang.String
- setFragments(com.intellij.ide.util.DirectoryChooser$PathFragment[]):V
f:com.intellij.ide.util.DirectoryChooser$PathFragment
- <init>(java.lang.String,Z):V
- getText():java.lang.String
- isCommon():Z
f:com.intellij.ide.util.DirectoryChooserUtil
- s:chooseDirectory(com.intellij.psi.PsiDirectory[],com.intellij.psi.PsiDirectory,com.intellij.openapi.project.Project,java.util.Map):com.intellij.psi.PsiDirectory
- s:getOrChooseDirectory(com.intellij.ide.IdeView):com.intellij.psi.PsiDirectory
- s:selectDirectory(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory[],com.intellij.psi.PsiDirectory,java.lang.String):com.intellij.psi.PsiDirectory
f:com.intellij.ide.util.DirectoryUtil
- s:createSubdirectories(java.lang.String,com.intellij.psi.PsiDirectory,java.lang.String):com.intellij.psi.PsiDirectory
- s:findLongestExistingDirectory(com.intellij.psi.PsiManager,java.lang.String):com.intellij.psi.PsiDirectory
- s:mkdirs(com.intellij.psi.PsiManager,java.lang.String):com.intellij.psi.PsiDirectory
f:com.intellij.ide.util.EditorHelper
- <init>():V
- s:openFilesInEditor(com.intellij.psi.PsiElement[]):V
- s:openInEditor(com.intellij.psi.PsiElement):com.intellij.openapi.editor.Editor
- s:openInEditor(com.intellij.psi.PsiElement,Z):com.intellij.openapi.fileEditor.FileEditor
- s:openInEditor(com.intellij.psi.PsiElement,Z,Z):com.intellij.openapi.fileEditor.FileEditor
f:com.intellij.ide.util.FileStructurePopup
- com.intellij.ide.structureView.newStructureView.TreeActionsOwner
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileEditor.FileEditor,com.intellij.ide.structureView.StructureViewModel):V
- createCenterPanel():javax.swing.JComponent
- dispose():V
- getCurrentElement(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getSpeedSearch():com.intellij.ui.TreeSpeedSearch
- s:getSpeedSearchText(java.lang.Object):java.lang.String
- getTree():com.intellij.ui.treeStructure.Tree
- isActionActive(java.lang.String):Z
- isDisposed():Z
- rebuildAndUpdate():org.jetbrains.concurrency.AsyncPromise
- select(java.lang.Object):org.jetbrains.concurrency.Promise
- setActionActive(java.lang.String,Z):V
- setSearchFilterForTests(java.lang.String):V
- setTitle(java.lang.String):V
- setTreeActionState(java.lang.Class,Z):V
- show():V
- showWithResult():org.jetbrains.concurrency.Promise
c:com.intellij.ide.util.MemberChooser
- com.intellij.openapi.ui.DialogWrapper
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- p:myAllowEmptySelection:Z
- p:myComparator:java.util.Comparator
- pf:myContainerNodes:java.util.ArrayList
- pf:myElementToNodeMap:java.util.HashMap
- p:myElements:com.intellij.codeInsight.generation.ClassMember[]
- pf:myNodeToParentMap:java.util.HashMap
- p:myOptionControls:javax.swing.JComponent[]
- p:mySelectedElements:java.util.LinkedHashSet
- p:myTree:com.intellij.ui.treeStructure.Tree
- p:<init>(Z,Z,com.intellij.openapi.project.Project,Z,javax.swing.JComponent,javax.swing.JComponent[]):V
- <init>(com.intellij.codeInsight.generation.ClassMember[],Z,Z,com.intellij.openapi.project.Project):V
- <init>(com.intellij.codeInsight.generation.ClassMember[],Z,Z,com.intellij.openapi.project.Project,javax.swing.JComponent,javax.swing.JComponent[]):V
- <init>(com.intellij.codeInsight.generation.ClassMember[],Z,Z,com.intellij.openapi.project.Project,Z):V
- <init>(com.intellij.codeInsight.generation.ClassMember[],Z,Z,com.intellij.openapi.project.Project,Z,javax.swing.JComponent):V
- pf:areElementsSelected():Z
- p:changeSortComparator(java.util.Comparator):V
- p:convertElementText(java.lang.String):java.lang.String
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createMemberNode(com.intellij.openapi.util.Ref,com.intellij.codeInsight.generation.ClassMember,com.intellij.ide.util.MemberChooser$ParentNode):com.intellij.ide.util.MemberChooser$MemberNode
- p:createNorthPanel():javax.swing.JComponent
- p:createSouthPanel():javax.swing.JComponent
- p:createTree():com.intellij.ui.treeStructure.Tree
- p:customizeOptionsPanel():V
- p:defaultExpandTree():V
- p:disableAlphabeticalSorting(com.intellij.openapi.actionSystem.AnActionEvent):V
- dispose():V
- p:doSort():V
- p:fillToolbarActions(com.intellij.openapi.actionSystem.DefaultActionGroup):V
- p:getAllContainersNodeName():java.lang.String
- p:getDimensionServiceKey():java.lang.String
- getOptionControls():javax.swing.JComponent[]
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getRootNode():javax.swing.tree.DefaultMutableTreeNode
- getSelectedElements():java.util.List
- getSelectedElements(com.intellij.codeInsight.generation.ClassMember[]):com.intellij.codeInsight.generation.ClassMember[]
- p:getShowContainersAction():com.intellij.ide.util.MemberChooser$ShowContainersAction
- p:getSpeedSearchComparator():com.intellij.ui.SpeedSearchComparator
- p:getTreeCellRenderer():javax.swing.tree.TreeCellRenderer
- p:installSpeedSearch():V
- p:isContainerNode(com.intellij.codeInsight.generation.MemberChooserObject):Z
- isCopyJavadoc():Z
- isInsertOverrideAnnotation():Z
- p:isInsertOverrideAnnotationSelected():Z
- p:onAlphabeticalSortingEnabled(com.intellij.openapi.actionSystem.AnActionEvent):V
- resetElements(com.intellij.codeInsight.generation.ClassMember[]):V
- resetElements(com.intellij.codeInsight.generation.ClassMember[],java.util.Comparator,Z):V
- p:resetElementsWithDefaultComparator(com.intellij.codeInsight.generation.ClassMember[]):V
- p:restoreTree():V
- selectElements(com.intellij.codeInsight.generation.ClassMember[]):V
- setCopyJavadocVisible(Z):V
- p:setShowClasses(Z):V
- p:supportsNestedContainers():Z
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
pf:com.intellij.ide.util.MemberChooser$ContainerNode
- com.intellij.ide.util.MemberChooser$ParentNode
- <init>(javax.swing.tree.DefaultMutableTreeNode,com.intellij.codeInsight.generation.MemberChooserObject,com.intellij.openapi.util.Ref):V
p:com.intellij.ide.util.MemberChooser$ElementNode
- javax.swing.tree.MutableTreeNode
- a:getDelegate():com.intellij.codeInsight.generation.MemberChooserObject
- a:getOrder():I
pa:com.intellij.ide.util.MemberChooser$ElementNodeImpl
- javax.swing.tree.DefaultMutableTreeNode
- com.intellij.ide.util.MemberChooser$ElementNode
- <init>(javax.swing.tree.DefaultMutableTreeNode,com.intellij.codeInsight.generation.MemberChooserObject,com.intellij.openapi.util.Ref):V
- getDelegate():com.intellij.codeInsight.generation.MemberChooserObject
- getOrder():I
p:com.intellij.ide.util.MemberChooser$MemberNode
- com.intellij.ide.util.MemberChooser$ElementNode
pf:com.intellij.ide.util.MemberChooser$MemberNodeImpl
- com.intellij.ide.util.MemberChooser$ElementNodeImpl
- com.intellij.ide.util.MemberChooser$MemberNode
- <init>(com.intellij.ide.util.MemberChooser$ParentNode,com.intellij.codeInsight.generation.ClassMember,com.intellij.openapi.util.Ref):V
pf:com.intellij.ide.util.MemberChooser$OrderComparator
- java.util.Comparator
- <init>():V
- compare(com.intellij.ide.util.MemberChooser$ElementNode,com.intellij.ide.util.MemberChooser$ElementNode):I
pc:com.intellij.ide.util.MemberChooser$ParentNode
- com.intellij.ide.util.MemberChooser$ElementNodeImpl
- <init>(javax.swing.tree.DefaultMutableTreeNode,com.intellij.codeInsight.generation.MemberChooserObject,com.intellij.openapi.util.Ref):V
pf:com.intellij.ide.util.MemberChooser$ShowContainersAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.ide.util.MemberChooser,java.util.function.Supplier,javax.swing.Icon):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- isSelected(com.intellij.openapi.actionSystem.AnActionEvent):Z
- setSelected(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.ide.util.MemberChooserBuilder
- <init>(com.intellij.openapi.project.Project):V
- allowEmptySelection(Z):V
- allowMultiSelection(Z):V
- copyJavadocVisible(Z):V
- createBuilder(com.intellij.codeInsight.generation.ClassMember[]):com.intellij.ide.util.MemberChooser
- overrideAnnotationVisible(Z):V
- setHeaderPanel(javax.swing.JComponent):V
- setTitle(java.lang.String):V
a:com.intellij.ide.util.ModuleRendererFactory
- <init>():V
- s:findInstance(java.lang.Object):com.intellij.ide.util.ModuleRendererFactory
- getModuleRenderer():javax.swing.DefaultListCellRenderer
- getModuleTextWithIcon(java.lang.Object):com.intellij.util.TextWithIcon
- p:handles(java.lang.Object):Z
- rendersLocationString():Z
c:com.intellij.ide.util.NavigationItemListCellRenderer
- javax.swing.JPanel
- javax.swing.ListCellRenderer
- <init>():V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
f:com.intellij.ide.util.PlatformModuleRendererFactory
- com.intellij.ide.util.ModuleRendererFactory
- <init>():V
- getModuleRenderer():javax.swing.DefaultListCellRenderer
- getModuleTextWithIcon(java.lang.Object):com.intellij.util.TextWithIcon
- rendersLocationString():Z
f:com.intellij.ide.util.PlatformModuleRendererFactory$PlatformModuleRenderer
- javax.swing.DefaultListCellRenderer
- <init>():V
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
f:com.intellij.ide.util.PlatformPackageUtil
- <init>():V
- s:adjustScope(com.intellij.psi.PsiDirectory,com.intellij.psi.search.GlobalSearchScope,Z,Z):com.intellij.psi.search.GlobalSearchScope
- s:findOrCreateDirectoryForPackage(com.intellij.openapi.project.Project,com.intellij.openapi.module.Module,com.intellij.psi.search.GlobalSearchScope,java.lang.String,com.intellij.psi.PsiDirectory,Z,com.intellij.util.ThreeState):com.intellij.psi.PsiDirectory
- s:getDirectory(com.intellij.psi.PsiElement):com.intellij.psi.PsiDirectory
a:com.intellij.ide.util.PsiElementListCellRenderer
- javax.swing.JPanel
- javax.swing.ListCellRenderer
- sf:TARGET_PRESENTATION_KEY:com.intellij.openapi.util.Key
- p:myRightComponentWidth:I
- p:<init>():V
- p:createLeftRenderer(javax.swing.JList,java.lang.Object):com.intellij.ui.ColoredListCellRenderer
- p:customizeNonPsiElementLeftRenderer(com.intellij.ui.ColoredListCellRenderer,javax.swing.JList,java.lang.Object,I,Z,Z):Z
- getAccessibleContext():javax.accessibility.AccessibleContext
- getComparator():java.util.Comparator
- getComparingObject(com.intellij.psi.PsiElement):java.lang.Comparable
- pa:getContainerText(com.intellij.psi.PsiElement,java.lang.String):java.lang.String
- p:getContainerTextForLeftComponent(com.intellij.psi.PsiElement,java.lang.String,I,java.awt.FontMetrics):java.lang.String
- a:getElementText(com.intellij.psi.PsiElement):java.lang.String
- p:getErrorAttributes():com.intellij.ui.SimpleTextAttributes
- p:getIcon(com.intellij.psi.PsiElement):javax.swing.Icon
- p:getIconFlags():I
- p:getItemLocation(java.lang.Object):com.intellij.util.TextWithIcon
- getItemMatchers(javax.swing.JList,java.lang.Object):com.intellij.ide.util.PsiElementListCellRenderer$ItemMatchers
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
- p:getNavigationItemAttributes(java.lang.Object):com.intellij.openapi.editor.markup.TextAttributes
- p:getRightCellRenderer(java.lang.Object):javax.swing.DefaultListCellRenderer
- installSpeedSearch(com.intellij.openapi.ui.popup.IPopupChooserBuilder):V
- installSpeedSearch(com.intellij.openapi.ui.popup.IPopupChooserBuilder,Z):V
- installSpeedSearch(com.intellij.openapi.ui.popup.PopupChooserBuilder):V
- setUsedInPopup(Z):V
f:com.intellij.ide.util.PsiElementListCellRenderer$ItemMatchers
- f:locationMatcher:com.intellij.util.text.Matcher
- f:nameMatcher:com.intellij.util.text.Matcher
- <init>(com.intellij.util.text.Matcher,com.intellij.util.text.Matcher):V
com.intellij.ide.util.PsiElementRenderingInfo
- s:getComparator(com.intellij.ide.util.PsiElementRenderingInfo):java.util.Comparator
- getContainerText(com.intellij.psi.PsiElement):java.lang.String
- getIcon(com.intellij.psi.PsiElement):javax.swing.Icon
- a:getPresentableText(com.intellij.psi.PsiElement):java.lang.String
- s:targetPresentation(com.intellij.psi.PsiElement,com.intellij.ide.util.PsiElementRenderingInfo):com.intellij.platform.backend.presentation.TargetPresentation
c:com.intellij.ide.util.PsiNavigationSupportImpl
- com.intellij.ide.util.PsiNavigationSupport
- <init>():V
- canNavigate(com.intellij.psi.PsiElement):Z
- createNavigatable(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I):com.intellij.pom.Navigatable
- getDescriptor(com.intellij.psi.PsiElement):com.intellij.pom.Navigatable
- navigateToDirectory(com.intellij.psi.PsiDirectory,Z):V
- openDirectoryInSystemFileManager(java.io.File):V
f:com.intellij.ide.util.TreeFileChooserDialog
- com.intellij.openapi.ui.DialogWrapper
- com.intellij.ide.util.TreeFileChooser
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.psi.PsiFile,com.intellij.openapi.fileTypes.FileType,com.intellij.ide.util.TreeFileChooser$PsiFileFilter,java.util.Comparator,Z,Z):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.psi.PsiFile,com.intellij.openapi.fileTypes.FileType,com.intellij.ide.util.TreeFileChooser$PsiFileFilter,Z,Z):V
- doCancelAction():V
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelectedFile():com.intellij.psi.PsiFile
- selectFile(com.intellij.psi.PsiFile):V
- selectSearchByNameTab():V
- showDialog():V
com.intellij.ide.util.TypeVisibilityStateHolder
- a:isVisible(java.lang.Object):Z
- a:setVisible(java.lang.Object,Z):V
f:com.intellij.ide.util.gotoByName.ActionSearchUtilKt
- sf:buildMatcher(java.lang.String):com.intellij.util.text.Matcher
- sf:calcElementWeight(java.lang.Object,java.lang.String,com.intellij.psi.codeStyle.MinusculeMatcher):java.lang.Integer
- sf:calculateDegree(com.intellij.psi.codeStyle.MinusculeMatcher,java.lang.String):java.lang.Integer
- sf:getActionText(java.lang.Object):java.lang.String
- sf:getAnActionText(com.intellij.openapi.actionSystem.AnAction):java.lang.String
a:com.intellij.ide.util.gotoByName.ChooseByNameBase
- com.intellij.ide.util.gotoByName.ChooseByNameViewModel
- sf:EXTRA_ELEM:java.lang.String
- sf:TEMPORARILY_FOCUSABLE_COMPONENT_KEY:java.lang.String
- p:myActionListener:com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent$Callback
- pf:myAlarm:com.intellij.util.Alarm
- pf:myCheckBox:javax.swing.JCheckBox
- p:myDropdownPopup:com.intellij.openapi.ui.popup.JBPopup
- pf:myList:javax.swing.JList
- pf:myModel:com.intellij.ide.util.gotoByName.ChooseByNameModel
- pf:myProject:com.intellij.openapi.project.Project
- p:myProvider:com.intellij.ide.util.gotoByName.ChooseByNameItemProvider
- pf:myTextField:com.intellij.ide.util.gotoByName.ChooseByNameBase$MyTextField
- p:<init>(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.util.gotoByName.ChooseByNameItemProvider,java.lang.String):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.util.gotoByName.ChooseByNameItemProvider,java.lang.String,I):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,java.lang.String,com.intellij.psi.PsiElement):V
- calcSelectedIndex(java.lang.Object[],java.lang.String):I
- canShowListForEmptyPattern():Z
- checkDisposed():Z
- p:chosenElementMightChange():V
- pa:close(Z):V
- p:closeForbidden(Z):Z
- p:doClose(Z):V
- p:filter(java.util.Set):java.util.Set
- getChosenElement():java.lang.Object
- p:getChosenElements():java.util.List
- getMaximumListSizeLimit():I
- getModel():com.intellij.ide.util.gotoByName.ChooseByNameModel
- getNames(Z):java.lang.String[]
- getProject():com.intellij.openapi.project.Project
- getProvider():com.intellij.ide.util.gotoByName.ChooseByNameItemProvider
- getTextField():javax.swing.JTextField
- getTrimmedText():java.lang.String
- pa:hideList():V
- p:initUI(com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent$Callback,com.intellij.openapi.application.ModalityState,Z):V
- invoke(com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent$Callback,com.intellij.openapi.application.ModalityState,Z):V
- pa:isCheckboxVisible():Z
- pa:isCloseByFocusLost():Z
- isClosedByShiftEnter():Z
- isOpenInCurrentWindowRequested():Z
- isSearchInAnyPlace():Z
- pa:isShowListForEmptyPattern():Z
- rebuildList(Z):V
- scheduleCalcElements(java.lang.String,Z,com.intellij.openapi.application.ModalityState,com.intellij.ide.util.gotoByName.SelectionPolicy,com.intellij.util.Consumer):V
- setAlwaysHasMore(Z):V
- setCheckBoxShortcut(com.intellij.openapi.actionSystem.ShortcutSet):V
- setDisposed(Z):V
- setFindUsagesTitle(java.lang.String):V
- setInitialSelection(com.intellij.util.Function):V
- setListSizeIncreasing(I):V
- setMaximumListSizeLimit(I):V
- setSearchInAnyPlace(Z):V
- setToolArea(javax.swing.JComponent):V
- pa:showList():V
- p:showTextFieldPanel():V
- transformPattern(java.lang.String):java.lang.String
f:com.intellij.ide.util.gotoByName.ChooseByNameBase$JPanelProvider
- javax.swing.JPanel
- com.intellij.ide.util.gotoByName.QuickSearchComponent
- com.intellij.openapi.actionSystem.UiDataProvider
- getHint():com.intellij.openapi.ui.popup.JBPopup
- hideHint():V
- registerHint(com.intellij.openapi.ui.popup.JBPopup):V
- requestFocus():V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
- unregisterHint():V
pf:com.intellij.ide.util.gotoByName.ChooseByNameBase$MyTextField
- javax.swing.JTextField
- com.intellij.openapi.actionSystem.UiDataProvider
- com.intellij.ui.popup.PopupOwner
- getBestPopupPosition():java.awt.Point
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
a:com.intellij.ide.util.gotoByName.ChooseByNameFilter
- <init>(com.intellij.ide.util.gotoByName.ChooseByNamePopup,com.intellij.ide.util.gotoByName.FilteringGotoByModel,com.intellij.ide.util.gotoByName.ChooseByNameFilterConfiguration,com.intellij.openapi.project.Project):V
- close():V
- p:createChooser(com.intellij.ide.util.gotoByName.FilteringGotoByModel,com.intellij.ide.util.gotoByName.ChooseByNameFilterConfiguration):com.intellij.ide.util.ElementsChooser
- pa:getAllFilterValues():java.util.Collection
- pa:iconForFilterValue(java.lang.Object):javax.swing.Icon
- pa:textForFilterValue(java.lang.Object):java.lang.String
- p:updateModel(com.intellij.ide.util.gotoByName.FilteringGotoByModel,com.intellij.ide.util.ElementsChooser,Z):V
a:com.intellij.ide.util.gotoByName.ChooseByNameFilterConfiguration
- com.intellij.ide.util.TypeVisibilityStateHolder
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- getState():com.intellij.ide.util.gotoByName.ChooseByNameFilterConfiguration$Items
- isFileTypeVisible(java.lang.Object):Z
- isVisible(java.lang.Object):Z
- loadState(com.intellij.ide.util.gotoByName.ChooseByNameFilterConfiguration$Items):V
- pa:nameForElement(java.lang.Object):java.lang.String
- setVisible(java.lang.Object,Z):V
f:com.intellij.ide.util.gotoByName.ChooseByNameFilterConfiguration$Items
- <init>():V
- getFilteredOutFileTypeNames():java.util.Set
- setFilteredOutFileTypeNames(java.util.Set):V
com.intellij.ide.util.gotoByName.ChooseByNameInScopeItemProvider
- com.intellij.ide.util.gotoByName.ChooseByNameWeightedItemProvider
- a:filterElements(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,com.intellij.util.indexing.FindSymbolParameters,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
- a:filterElementsWithWeights(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,com.intellij.util.indexing.FindSymbolParameters,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
com.intellij.ide.util.gotoByName.ChooseByNameItem
- a:getDescription():java.lang.String
- a:getName():java.lang.String
com.intellij.ide.util.gotoByName.ChooseByNameItemProvider
- a:filterElements(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String,Z,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
- a:filterNames(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String[],java.lang.String):java.util.List
f:com.intellij.ide.util.gotoByName.ChooseByNameLanguageFilter
- com.intellij.ide.util.gotoByName.ChooseByNameFilter
- <init>(com.intellij.ide.util.gotoByName.ChooseByNamePopup,com.intellij.ide.util.gotoByName.FilteringGotoByModel,com.intellij.ide.util.gotoByName.ChooseByNameFilterConfiguration,com.intellij.openapi.project.Project):V
com.intellij.ide.util.gotoByName.ChooseByNameModelEx
- com.intellij.ide.util.gotoByName.ChooseByNameModel
- s:getItemProvider(com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.psi.PsiElement):com.intellij.ide.util.gotoByName.ChooseByNameItemProvider
- getItemProvider(com.intellij.psi.PsiElement):com.intellij.ide.util.gotoByName.ChooseByNameItemProvider
- processNames(com.intellij.util.Processor,com.intellij.util.indexing.FindSymbolParameters):V
c:com.intellij.ide.util.gotoByName.ChooseByNamePanel
- com.intellij.ide.util.gotoByName.ChooseByNameBase
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,java.lang.String,Z,com.intellij.psi.PsiElement):V
- p:close(Z):V
- dispose():V
- getPanel():javax.swing.JPanel
- getPreferredFocusedComponent():javax.swing.JComponent
- p:hideList():V
- p:initUI(com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent$Callback,com.intellij.openapi.application.ModalityState,Z):V
- p:isCheckboxVisible():Z
- p:isCloseByFocusLost():Z
- p:isShowListForEmptyPattern():Z
- p:showList():V
c:com.intellij.ide.util.gotoByName.ChooseByNamePopup
- com.intellij.ide.util.gotoByName.ChooseByNameBase
- com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent
- com.intellij.openapi.Disposable
- sf:CHOOSE_BY_NAME_POPUP_IN_PROJECT_KEY:com.intellij.openapi.util.Key
- sf:CURRENT_SEARCH_PATTERN:com.intellij.openapi.util.Key
- sf:patternToDetectAnonymousClasses:java.util.regex.Pattern
- p:<init>(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.util.gotoByName.ChooseByNameItemProvider,com.intellij.ide.util.gotoByName.ChooseByNamePopup,java.lang.String,Z,I):V
- addMouseClickListener(java.awt.event.MouseListener):V
- calcPopupElements(java.lang.String,Z):java.util.List
- close(Z):V
- s:createPopup(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.util.gotoByName.ChooseByNameItemProvider):com.intellij.ide.util.gotoByName.ChooseByNamePopup
- s:createPopup(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.util.gotoByName.ChooseByNameItemProvider,java.lang.String):com.intellij.ide.util.gotoByName.ChooseByNamePopup
- s:createPopup(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.ide.util.gotoByName.ChooseByNameItemProvider,java.lang.String,Z,I):com.intellij.ide.util.gotoByName.ChooseByNamePopup
- s:createPopup(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.psi.PsiElement):com.intellij.ide.util.gotoByName.ChooseByNamePopup
- s:createPopup(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.psi.PsiElement,java.lang.String):com.intellij.ide.util.gotoByName.ChooseByNamePopup
- s:createPopup(com.intellij.openapi.project.Project,com.intellij.ide.util.gotoByName.ChooseByNameModel,com.intellij.psi.PsiElement,java.lang.String,Z,I):com.intellij.ide.util.gotoByName.ChooseByNamePopup
- dispose():V
- getAdText():java.lang.String
- getColumnPosition():I
- getEnteredText():java.lang.String
- getLinePosition():I
- getMemberPattern():java.lang.String
- getPathToAnonymous():java.lang.String
- getSelectedIndex():I
- getSelectionByPoint(java.awt.Point):java.lang.Object
- s:getTransformedPattern(java.lang.String,com.intellij.ide.util.gotoByName.ChooseByNameModel):java.lang.String
- p:hideList():V
- p:initUI(com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent$Callback,com.intellij.openapi.application.ModalityState,Z):V
- p:isCheckboxVisible():Z
- p:isCloseByFocusLost():Z
- isOpenInCurrentWindowRequested():Z
- p:isShowListForEmptyPattern():Z
- registerAction(java.lang.String,javax.swing.KeyStroke,javax.swing.Action):V
- repaintList():V
- repaintListImmediate():V
- setAdText(java.lang.String):V
- setShowListForEmptyPattern(Z):V
- p:showList():V
- transformPattern(java.lang.String):java.lang.String
com.intellij.ide.util.gotoByName.ChooseByNameViewModel
- a:canShowListForEmptyPattern():Z
- a:getMaximumListSizeLimit():I
- a:getModel():com.intellij.ide.util.gotoByName.ChooseByNameModel
- a:getProject():com.intellij.openapi.project.Project
- a:isSearchInAnyPlace():Z
- a:transformPattern(java.lang.String):java.lang.String
com.intellij.ide.util.gotoByName.ChooseByNameWeightedItemProvider
- com.intellij.ide.util.gotoByName.ChooseByNameItemProvider
- a:filterElementsWithWeights(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String,Z,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
a:com.intellij.ide.util.gotoByName.ContributorsBasedGotoByModel
- com.intellij.ide.util.gotoByName.ChooseByNameModelEx
- com.intellij.openapi.project.PossiblyDumbAware
- sf:LOG:com.intellij.openapi.diagnostic.Logger
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project,java.util.List):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.navigation.ChooseByNameContributor[]):V
- p:acceptItem(com.intellij.navigation.NavigationItem):Z
- p:getContributorList():java.util.List
- p:getContributors():com.intellij.navigation.ChooseByNameContributor[]
- getElementName(java.lang.Object):java.lang.String
- getElementsByName(java.lang.String,com.intellij.util.indexing.FindSymbolParameters,com.intellij.openapi.progress.ProgressIndicator):java.lang.Object[]
- getElementsByName(java.lang.String,Z,java.lang.String):java.lang.Object[]
- getHelpId():java.lang.String
- getListCellRenderer():javax.swing.ListCellRenderer
- getNames(Z):java.lang.String[]
- getProject():com.intellij.openapi.project.Project
- isDumbAware():Z
- processContributorNames(com.intellij.navigation.ChooseByNameContributor,com.intellij.util.indexing.FindSymbolParameters,com.intellij.util.Processor):V
- processNames(com.intellij.util.Processor,com.intellij.util.indexing.FindSymbolParameters):V
- removeModelSpecificMarkup(java.lang.String):java.lang.String
- sameNamesForProjectAndLibraries():Z
- useMiddleMatching():Z
com.intellij.ide.util.gotoByName.CustomMatcherModel
- a:matches(java.lang.String,java.lang.String):Z
c:com.intellij.ide.util.gotoByName.DefaultChooseByNameItemProvider
- com.intellij.ide.util.gotoByName.ChooseByNameInScopeItemProvider
- <init>(com.intellij.psi.PsiElement):V
- ps:buildPatternMatcher(java.lang.String,Z):com.intellij.psi.codeStyle.MinusculeMatcher
- filterElements(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,com.intellij.util.indexing.FindSymbolParameters,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
- s:filterElements(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String,Z,com.intellij.openapi.progress.ProgressIndicator,com.intellij.psi.PsiElement,com.intellij.util.Processor):Z
- filterElements(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String,Z,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
- filterElementsWithWeights(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,com.intellij.util.indexing.FindSymbolParameters,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
- filterElementsWithWeights(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String,Z,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
- filterNames(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String[],java.lang.String):java.util.List
- p:getPathProximityComparator():com.intellij.ide.util.gotoByName.DefaultChooseByNameItemProvider$PathProximityComparator
- ps:matches(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String,com.intellij.psi.codeStyle.MinusculeMatcher,java.lang.String):com.intellij.ide.util.gotoByName.MatchResult
- ps:processByNames(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,Z,com.intellij.openapi.progress.ProgressIndicator,com.intellij.psi.PsiElement,com.intellij.util.Processor,java.util.List,com.intellij.util.indexing.FindSymbolParameters):Z
pf:com.intellij.ide.util.gotoByName.DefaultChooseByNameItemProvider$PathProximityComparator
- java.util.Comparator
- compare(java.lang.Object,java.lang.Object):I
f:com.intellij.ide.util.gotoByName.DefaultFileNavigationContributor
- com.intellij.navigation.ChooseByNameContributorEx
- com.intellij.openapi.project.DumbAware
- <init>():V
- processElementsWithName(java.lang.String,com.intellij.util.Processor,com.intellij.util.indexing.FindSymbolParameters):V
- processNames(com.intellij.util.Processor,com.intellij.psi.search.GlobalSearchScope,com.intellij.util.indexing.IdFilter):V
f:com.intellij.ide.util.gotoByName.FileTypeRef
- sf:Companion:com.intellij.ide.util.gotoByName.FileTypeRef$Companion
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:component3():javax.swing.Icon
- f:copy(java.lang.String,java.lang.String,javax.swing.Icon):com.intellij.ide.util.gotoByName.FileTypeRef
- bs:copy$default(com.intellij.ide.util.gotoByName.FileTypeRef,java.lang.String,java.lang.String,javax.swing.Icon,I,java.lang.Object):com.intellij.ide.util.gotoByName.FileTypeRef
- equals(java.lang.Object):Z
- sf:forAllFileTypes():java.util.List
- sf:forFileType(com.intellij.openapi.fileTypes.FileType):com.intellij.ide.util.gotoByName.FileTypeRef
- f:getDisplayName():java.lang.String
- f:getIcon():javax.swing.Icon
- f:getName():java.lang.String
- hashCode():I
f:com.intellij.ide.util.gotoByName.FileTypeRef$Companion
- f:forAllFileTypes():java.util.List
- f:forFileType(com.intellij.openapi.fileTypes.FileType):com.intellij.ide.util.gotoByName.FileTypeRef
a:com.intellij.ide.util.gotoByName.FilteringGotoByModel
- com.intellij.ide.util.gotoByName.ContributorsBasedGotoByModel
- p:<init>(com.intellij.openapi.project.Project,java.util.List):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.navigation.ChooseByNameContributor[]):V
- p:acceptItem(com.intellij.navigation.NavigationItem):Z
- pa:filterValueFor(com.intellij.navigation.NavigationItem):java.lang.Object
- p:getFilterItems():java.util.Collection
- setFilterItems(java.util.Collection):V
com.intellij.ide.util.gotoByName.GotoActionAliasMatcher
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- matchAction(com.intellij.openapi.actionSystem.AnAction,java.lang.String):com.intellij.ide.util.gotoByName.MatchMode
f:com.intellij.ide.util.gotoByName.GotoActionItemProvider
- com.intellij.ide.util.gotoByName.ChooseByNameWeightedItemProvider
- <init>(com.intellij.ide.util.gotoByName.GotoActionModel):V
- clearIntentions():V
- s:createActionWrapper(com.intellij.openapi.actionSystem.AnAction,com.intellij.ide.util.gotoByName.GroupMapping,com.intellij.ide.util.gotoByName.MatchMode,com.intellij.ide.util.gotoByName.GotoActionModel):com.intellij.ide.util.gotoByName.GotoActionModel$ActionWrapper
- filterElements(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String,Z,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
- filterElements(java.lang.String,java.util.function.Predicate):Z
- filterElementsWithWeights(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String,Z,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):Z
- filterNames(com.intellij.ide.util.gotoByName.ChooseByNameViewModel,java.lang.String[],java.lang.String):java.util.List
- processActions(java.lang.String,java.util.function.Predicate,java.util.Set):Z
f:com.intellij.ide.util.gotoByName.GotoActionModel
- com.intellij.ide.util.gotoByName.ChooseByNameModel
- com.intellij.openapi.project.DumbAware
- java.util.Comparator
- <init>(com.intellij.openapi.project.Project,java.awt.Component,com.intellij.openapi.editor.Editor):V
- buildGroupMappings():V
- compare(java.lang.Object,java.lang.Object):I
- s:defaultActionForeground(Z,Z,com.intellij.openapi.actionSystem.Presentation):java.awt.Color
- getCheckBoxName():java.lang.String
- getElementName(java.lang.Object):java.lang.String
- getElementsByName(java.lang.String,Z,java.lang.String):java.lang.Object[]
- getFullName(java.lang.Object):java.lang.String
- getGroupMapping(com.intellij.openapi.actionSystem.AnAction):com.intellij.ide.util.gotoByName.GroupMapping
- getGroupName(com.intellij.ide.ui.search.OptionDescription):java.lang.String
- getHelpId():java.lang.String
- getListCellRenderer():javax.swing.ListCellRenderer
- getNames(Z):java.lang.String[]
- getNotFoundMessage():java.lang.String
- getNotInMessage():java.lang.String
- getPromptText():java.lang.String
- getSeparators():java.lang.String[]
- loadInitialCheckBoxState():Z
- saveInitialCheckBoxState(Z):V
- sortItems(java.util.Set):java.util.SortedSet
- useMiddleMatching():Z
- willOpenEditor():Z
c:com.intellij.ide.util.gotoByName.GotoActionModel$ActionWrapper
- <init>(com.intellij.openapi.actionSystem.AnAction,com.intellij.ide.util.gotoByName.GroupMapping,com.intellij.ide.util.gotoByName.MatchMode,com.intellij.openapi.actionSystem.Presentation):V
- compareWeights(com.intellij.ide.util.gotoByName.GotoActionModel$ActionWrapper):I
- equals(java.lang.Object):Z
- getAction():com.intellij.openapi.actionSystem.AnAction
- getActionText():java.lang.String
- getGroupMapping():com.intellij.ide.util.gotoByName.GroupMapping
- getGroupName():java.lang.String
- getMode():com.intellij.ide.util.gotoByName.MatchMode
- getPresentation():com.intellij.openapi.actionSystem.Presentation
- hashCode():I
- isAvailable():Z
- isGroupAction():Z
f:com.intellij.ide.util.gotoByName.GotoActionModel$GotoActionListCellRenderer
- javax.swing.DefaultListCellRenderer
- sf:TOGGLE_BUTTON_BORDER:javax.swing.border.Border
- <init>(com.intellij.util.Function):V
- <init>(com.intellij.util.Function,Z):V
- s:calcHit(com.intellij.ide.ui.search.OptionDescription):java.lang.String
- getListCellRendererComponent(javax.swing.JList,java.lang.Object,I,Z,Z):java.awt.Component
c:com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValue
- com.intellij.ide.actions.searcheverywhere.MergeableElement
- com.intellij.internal.inspector.UiInspectorContextProvider
- similarityScore:java.lang.Double
- f:value:java.lang.Object
- <init>(java.lang.Object,java.lang.String,com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType):V
- <init>(java.lang.Object,java.lang.String,com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType,D):V
- compareWeights(com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValue):I
- f:equals(java.lang.Object):Z
- getMatchingDegree():I
- getType():com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType
- getUiInspectorContext():java.util.List
- getValueText():java.lang.String
- getValueTypeWeight():I
- hashCode():I
- mergeWith(com.intellij.ide.actions.searcheverywhere.MergeableElement):com.intellij.ide.actions.searcheverywhere.MergeableElement
- shouldBeMergedIntoAnother():Z
e:com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType
- java.lang.Enum
- sf:ABBREVIATION:com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType
- sf:ACTION:com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType
- sf:INTENTION:com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType
- sf:OPTION:com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType
- sf:SEMANTIC:com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType
- sf:TOP_HIT:com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType
- s:valueOf(java.lang.String):com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType
- s:values():com.intellij.ide.util.gotoByName.GotoActionModel$MatchedValueType[]
c:com.intellij.ide.util.gotoByName.GotoClassModel2
- com.intellij.ide.util.gotoByName.FilteringGotoByModel
- <init>(com.intellij.openapi.project.Project):V
- p:filterValueFor(com.intellij.navigation.NavigationItem):com.intellij.ide.util.gotoByName.LanguageRef
- getCheckBoxName():java.lang.String
- p:getContributorList():java.util.List
- p:getFilterItems():java.util.Collection
- getFullName(java.lang.Object):java.lang.String
- getHelpId():java.lang.String
- getNotFoundMessage():java.lang.String
- getNotInMessage():java.lang.String
- getPromptText():java.lang.String
- getSeparators():java.lang.String[]
- s:getSeparatorsFromContributors(com.intellij.navigation.ChooseByNameContributor[]):java.lang.String[]
- loadInitialCheckBoxState():Z
- removeModelSpecificMarkup(java.lang.String):java.lang.String
- saveInitialCheckBoxState(Z):V
- willOpenEditor():Z
f:com.intellij.ide.util.gotoByName.GotoClassSymbolConfiguration
- com.intellij.ide.util.gotoByName.ChooseByNameFilterConfiguration
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.util.gotoByName.GotoClassSymbolConfiguration
c:com.intellij.ide.util.gotoByName.GotoFileCellRenderer
- com.intellij.ide.util.PsiElementListCellRenderer
- <init>(I):V
- p:customizeNonPsiElementLeftRenderer(com.intellij.ui.ColoredListCellRenderer,javax.swing.JList,java.lang.Object,I,Z,Z):Z
- s:doCustomizeNonPsiElementLeftRenderer(com.intellij.ui.ColoredListCellRenderer,javax.swing.JList,java.lang.Object,com.intellij.openapi.editor.markup.TextAttributes):Z
- s:getAnyRoot(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.vfs.VirtualFile
- p:getContainerText(com.intellij.psi.PsiFileSystemItem,java.lang.String):java.lang.String
- getElementText(com.intellij.psi.PsiFileSystemItem):java.lang.String
- p:getIconFlags():I
- s:getRelativePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.lang.String
f:com.intellij.ide.util.gotoByName.GotoFileConfiguration
- com.intellij.ide.util.gotoByName.ChooseByNameFilterConfiguration
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.util.gotoByName.GotoFileConfiguration
com.intellij.ide.util.gotoByName.GotoFileCustomizer
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createItemProvider(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.ide.util.gotoByName.GotoFileModel):com.intellij.ide.actions.GotoFileItemProvider
c:com.intellij.ide.util.gotoByName.GotoFileModel
- com.intellij.ide.util.gotoByName.FilteringGotoByModel
- com.intellij.openapi.project.DumbAware
- java.util.Comparator
- sf:DIRECTORY_FILE_TYPE_REF:com.intellij.ide.util.gotoByName.FileTypeRef
- <init>(com.intellij.openapi.project.Project):V
- p:acceptItem(com.intellij.navigation.NavigationItem):Z
- compare(java.lang.Object,java.lang.Object):I
- s:convertToFileItemMatchers(com.intellij.ide.util.PsiElementListCellRenderer$ItemMatchers,com.intellij.psi.PsiFileSystemItem,com.intellij.ide.util.gotoByName.GotoFileModel):com.intellij.ide.util.PsiElementListCellRenderer$ItemMatchers
- p:filterValueFor(com.intellij.navigation.NavigationItem):com.intellij.ide.util.gotoByName.FileTypeRef
- getCheckBoxName():java.lang.String
- getFullName(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getFullName(java.lang.Object):java.lang.String
- getHelpId():java.lang.String
- getItemProvider(com.intellij.psi.PsiElement):com.intellij.ide.util.gotoByName.ChooseByNameItemProvider
- getListCellRenderer():com.intellij.ide.util.PsiElementListCellRenderer
- getNotFoundMessage():java.lang.String
- getNotInMessage():java.lang.String
- getPromptText():java.lang.String
- getSeparators():java.lang.String[]
- getTopLevelRoot(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- isSlashlessMatchingEnabled():Z
- loadInitialCheckBoxState():Z
- removeModelSpecificMarkup(java.lang.String):java.lang.String
- saveInitialCheckBoxState(Z):V
- willOpenEditor():Z
c:com.intellij.ide.util.gotoByName.GotoSymbolModel2
- com.intellij.ide.util.gotoByName.FilteringGotoByModel
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):V
- <init>(com.intellij.openapi.project.Project,java.util.List,com.intellij.openapi.Disposable):V
- p:filterValueFor(com.intellij.navigation.NavigationItem):com.intellij.ide.util.gotoByName.LanguageRef
- getCheckBoxName():java.lang.String
- p:getContributorList():java.util.List
- p:getFilterItems():java.util.Collection
- getFullName(java.lang.Object):java.lang.String
- getHelpId():java.lang.String
- getNotFoundMessage():java.lang.String
- getNotInMessage():java.lang.String
- getPromptText():java.lang.String
- getSeparators():java.lang.String[]
- loadInitialCheckBoxState():Z
- saveInitialCheckBoxState(Z):V
- willOpenEditor():Z
f:com.intellij.ide.util.gotoByName.GroupMapping
- java.lang.Comparable
- sf:Companion:com.intellij.ide.util.gotoByName.GroupMapping$Companion
- <init>():V
- <init>(Z):V
- b:<init>(Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:addPath(java.util.List):V
- compareTo(com.intellij.ide.util.gotoByName.GroupMapping):I
- sf:createFromText(java.lang.String,Z):com.intellij.ide.util.gotoByName.GroupMapping
- f:getAllGroupNames():java.util.List
- f:getBestGroupName():java.lang.String
- f:getFirstGroup():java.util.List
- f:updateBeforeShow(com.intellij.openapi.actionSystem.UpdateSession):V
- f:updateBeforeShowSuspend(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.ide.util.gotoByName.GroupMapping$Companion
- f:createFromText(java.lang.String,Z):com.intellij.ide.util.gotoByName.GroupMapping
f:com.intellij.ide.util.gotoByName.LanguageRef
- sf:Companion:com.intellij.ide.util.gotoByName.LanguageRef$Companion
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:component3():javax.swing.Icon
- f:copy(java.lang.String,java.lang.String,javax.swing.Icon):com.intellij.ide.util.gotoByName.LanguageRef
- bs:copy$default(com.intellij.ide.util.gotoByName.LanguageRef,java.lang.String,java.lang.String,javax.swing.Icon,I,java.lang.Object):com.intellij.ide.util.gotoByName.LanguageRef
- equals(java.lang.Object):Z
- sf:forAllLanguages():java.util.List
- sf:forLanguage(com.intellij.lang.Language):com.intellij.ide.util.gotoByName.LanguageRef
- sf:forNavigationitem(com.intellij.navigation.NavigationItem):com.intellij.ide.util.gotoByName.LanguageRef
- f:getDisplayName():java.lang.String
- f:getIcon():javax.swing.Icon
- f:getId():java.lang.String
- hashCode():I
f:com.intellij.ide.util.gotoByName.LanguageRef$Companion
- f:forAllLanguages():java.util.List
- f:forLanguage(com.intellij.lang.Language):com.intellij.ide.util.gotoByName.LanguageRef
- f:forNavigationitem(com.intellij.navigation.NavigationItem):com.intellij.ide.util.gotoByName.LanguageRef
c:com.intellij.ide.util.gotoByName.ListChooseByNameModel
- com.intellij.ide.util.gotoByName.SimpleChooseByNameModel
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.util.List):V
- getElementName(java.lang.Object):java.lang.String
- p:getElementsByName(java.lang.String,java.lang.String):java.lang.Object[]
- getListCellRenderer():javax.swing.ListCellRenderer
- getNames():java.lang.String[]
- getNotFoundMessage():java.lang.String
- getNotInMessage():java.lang.String
- matches(java.lang.String,java.lang.String):Z
e:com.intellij.ide.util.gotoByName.MatchMode
- java.lang.Enum
- sf:DESCRIPTION:com.intellij.ide.util.gotoByName.MatchMode
- sf:GROUP:com.intellij.ide.util.gotoByName.MatchMode
- sf:INTENTION:com.intellij.ide.util.gotoByName.MatchMode
- sf:NAME:com.intellij.ide.util.gotoByName.MatchMode
- sf:NONE:com.intellij.ide.util.gotoByName.MatchMode
- sf:NON_MENU:com.intellij.ide.util.gotoByName.MatchMode
- sf:SYNONYM:com.intellij.ide.util.gotoByName.MatchMode
- s:valueOf(java.lang.String):com.intellij.ide.util.gotoByName.MatchMode
- s:values():com.intellij.ide.util.gotoByName.MatchMode[]
f:com.intellij.ide.util.gotoByName.MatchResult
- java.lang.Comparable
- f:elementName:java.lang.String
- f:matchingDegree:I
- <init>(java.lang.String,I,Z):V
- compareDegrees(com.intellij.ide.util.gotoByName.MatchResult):I
- compareTo(com.intellij.ide.util.gotoByName.MatchResult):I
f:com.intellij.ide.util.gotoByName.ModelDiff
- <init>():V
- s:createDiffCmds(com.intellij.ide.util.gotoByName.ModelDiff$Model,java.lang.Object[],java.lang.Object[]):java.util.List
com.intellij.ide.util.gotoByName.ModelDiff$Cmd
- a:apply():V
- a:translateSelection(I):I
com.intellij.ide.util.gotoByName.ModelDiff$Model
- addAllToModel(I,java.util.List):V
- a:addToModel(I,java.lang.Object):V
- a:removeRangeFromModel(I,I):V
a:com.intellij.ide.util.gotoByName.SimpleChooseByNameModel
- com.intellij.ide.util.gotoByName.ChooseByNameModel
- p:<init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- getCheckBoxName():java.lang.String
- pa:getElementsByName(java.lang.String,java.lang.String):java.lang.Object[]
- getElementsByName(java.lang.String,Z,java.lang.String):java.lang.Object[]
- getFullName(java.lang.Object):java.lang.String
- getHelpId():java.lang.String
- a:getNames():java.lang.String[]
- getNames(Z):java.lang.String[]
- getNotFoundMessage():java.lang.String
- getNotInMessage():java.lang.String
- getProject():com.intellij.openapi.project.Project
- getPromptText():java.lang.String
- getSeparators():java.lang.String[]
- loadInitialCheckBoxState():Z
- saveInitialCheckBoxState(Z):V
- useMiddleMatching():Z
- willOpenEditor():Z
a:com.intellij.ide.util.projectWizard.AbstractNewProjectDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>():V
- pf:createActions():javax.swing.Action[]
- pf:createCenterPanel():javax.swing.JComponent
- p:createNewProjectStep():com.intellij.ide.util.projectWizard.AbstractNewProjectStep
- p:createRootStep():com.intellij.openapi.actionSystem.DefaultActionGroup
- p:createSouthPanel():javax.swing.JComponent
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getStyle():com.intellij.openapi.ui.DialogWrapper$DialogStyle
- pf:init():V
a:com.intellij.ide.util.projectWizard.AbstractNewProjectStep
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.project.DumbAware
- com.intellij.openapi.wm.impl.welcomeScreen.ActionsWithPanelProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(com.intellij.ide.util.projectWizard.AbstractNewProjectStep$Customization):V
- p:addProjectSpecificAction(com.intellij.ide.util.projectWizard.actions.ProjectSpecificAction):V
- ps:createOpenProjectOptions(com.intellij.openapi.project.Project,java.util.function.Consumer):com.intellij.ide.impl.OpenProjectTask
- s:created(com.intellij.openapi.project.Project):Z
- s:doGenerateProject(com.intellij.openapi.project.Project,java.lang.String,com.intellij.platform.DirectoryProjectGenerator,java.lang.Object):com.intellij.openapi.project.Project
- s:doGenerateProject(java.lang.String,com.intellij.platform.DirectoryProjectGenerator,java.lang.Object,com.intellij.ide.impl.OpenProjectTask):com.intellij.openapi.project.Project
- f:getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
- pf:updateActions():V
c:com.intellij.ide.util.projectWizard.AbstractNewProjectStep$AbstractCallback
- com.intellij.util.PairConsumer
- <init>():V
- consume(com.intellij.ide.util.projectWizard.ProjectSettingsStepBase,com.intellij.platform.ProjectGeneratorPeer):V
pa:com.intellij.ide.util.projectWizard.AbstractNewProjectStep$Customization
- p:<init>():V
- p:createCallback():com.intellij.ide.util.projectWizard.AbstractNewProjectStep$AbstractCallback
- pa:createEmptyProjectGenerator():com.intellij.platform.DirectoryProjectGenerator
- p:createProjectSpecificAction(com.intellij.ide.util.projectWizard.AbstractNewProjectStep$AbstractCallback):com.intellij.ide.util.projectWizard.actions.ProjectSpecificAction
- pa:createProjectSpecificSettingsStep(com.intellij.platform.DirectoryProjectGenerator,com.intellij.ide.util.projectWizard.AbstractNewProjectStep$AbstractCallback):com.intellij.ide.util.projectWizard.ProjectSettingsStepBase
- getActions(com.intellij.platform.DirectoryProjectGenerator,com.intellij.ide.util.projectWizard.AbstractNewProjectStep$AbstractCallback):com.intellij.openapi.actionSystem.AnAction[]
- getActions(java.util.List,com.intellij.ide.util.projectWizard.AbstractNewProjectStep$AbstractCallback):com.intellij.openapi.actionSystem.AnAction[]
- ps:shouldIgnore(com.intellij.platform.DirectoryProjectGenerator):Z
- showUserDefinedProjects():Z
com.intellij.ide.util.projectWizard.CustomStepProjectGenerator
- a:createStep(com.intellij.platform.DirectoryProjectGenerator,com.intellij.ide.util.projectWizard.AbstractNewProjectStep$AbstractCallback):com.intellij.openapi.wm.impl.welcomeScreen.AbstractActionWithPanel
c:com.intellij.ide.util.projectWizard.EmptyWebProjectTemplate
- com.intellij.ide.util.projectWizard.WebProjectTemplate
- <init>():V
- createPeer():com.intellij.platform.ProjectGeneratorPeer
- generateProject(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.Object,com.intellij.openapi.module.Module):V
- getDescription():java.lang.String
- getId():java.lang.String
- getName():java.lang.String
f:com.intellij.ide.util.projectWizard.ExistingModuleLoader
- com.intellij.ide.util.projectWizard.ModuleBuilder
- <init>():V
- createModule(com.intellij.openapi.module.ModifiableModuleModel):com.intellij.openapi.module.Module
- getModuleType():com.intellij.openapi.module.ModuleType
- s:setUpLoader(java.lang.String):com.intellij.ide.util.projectWizard.ExistingModuleLoader
- validate(com.intellij.openapi.project.Project,com.intellij.openapi.project.Project):Z
a:com.intellij.ide.util.projectWizard.MultiWebTemplateNewProjectWizard
- com.intellij.ide.util.projectWizard.WebTemplateNewProjectWizardBase
- <init>(java.util.List):V
- createTemplateStep(com.intellij.ide.wizard.NewProjectWizardBaseStep):com.intellij.ide.wizard.NewProjectWizardStep
- pf:getTemplates():java.util.List
c:com.intellij.ide.util.projectWizard.ProjectSettingsStepBase
- com.intellij.openapi.wm.impl.welcomeScreen.AbstractActionWithPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.project.DumbAware
- p:myCallback:com.intellij.ide.util.projectWizard.AbstractNewProjectStep$AbstractCallback
- p:myCreateButton:javax.swing.JButton
- p:myErrorLabel:javax.swing.JLabel
- p:myLazyGeneratorPeer:com.intellij.openapi.util.NotNullLazyValue
- p:myLocationField:com.intellij.openapi.ui.TextFieldWithBrowseButton
- pf:myProjectDirectory:com.intellij.openapi.util.NotNullLazyValue
- pf:myProjectGenerator:com.intellij.platform.DirectoryProjectGenerator
- <init>(com.intellij.platform.DirectoryProjectGenerator,com.intellij.ide.util.projectWizard.AbstractNewProjectStep$AbstractCallback):V
- p:<init>(com.intellij.platform.DirectoryProjectGenerator,com.intellij.ide.util.projectWizard.AbstractNewProjectStep$AbstractCallback,java.lang.String):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- checkValid():Z
- pf:createActionButton():javax.swing.JButton
- p:createAdvancedSettings():javax.swing.JPanel
- p:createAndFillContentPanel():javax.swing.JPanel
- p:createBasePanel():javax.swing.JPanel
- pf:createCloseActionListener():java.awt.event.ActionListener
- pf:createContentPanelWithAdvancedSettingsPanel():javax.swing.JPanel
- pf:createErrorLabel():javax.swing.JLabel
- p:createLazyPeer():com.intellij.openapi.util.NotNullLazyValue
- p:createLocationComponent():com.intellij.openapi.ui.LabeledComponent
- createPanel():javax.swing.JPanel
- dispose():V
- p:findSequentNonExistingUntitled():java.nio.file.Path
- getActionButton():javax.swing.JButton
- pf:getIcon():javax.swing.Icon
- p:getPeer():com.intellij.platform.ProjectGeneratorPeer
- getProjectGenerator():com.intellij.platform.DirectoryProjectGenerator
- getProjectLocation():java.lang.String
- p:initGeneratorListeners():V
- onPanelSelected():V
- p:registerValidators():V
- setErrorText(java.lang.String):V
- f:setLocation(java.lang.String):V
- setWarningText(java.lang.String):V
a:com.intellij.ide.util.projectWizard.ProjectTemplateFileProcessor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- s:encodeFile(java.lang.String,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.lang.String
- pa:encodeFileText(java.lang.String,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.lang.String
- ps:wrap(java.lang.String):java.lang.String
f:com.intellij.ide.util.projectWizard.WebProjectSettingsStepWrapper
- com.intellij.ide.util.projectWizard.SettingsStep
- <init>():V
- <init>(com.intellij.ide.util.projectWizard.ProjectSettingsStepBase):V
- addExpertField(java.lang.String,javax.swing.JComponent):V
- addExpertPanel(javax.swing.JComponent):V
- addSettingsComponent(javax.swing.JComponent):V
- addSettingsField(java.lang.String,javax.swing.JComponent):V
- getComponents():java.util.List
- getContext():com.intellij.ide.util.projectWizard.WizardContext
- getFields():java.util.List
- getModuleNameLocationSettings():com.intellij.ide.util.projectWizard.ModuleNameLocationSettings
- isEmpty():Z
a:com.intellij.ide.util.projectWizard.WebProjectTemplate
- com.intellij.platform.WebProjectGenerator
- com.intellij.platform.ProjectTemplate
- <init>():V
- createModuleBuilder():com.intellij.ide.util.projectWizard.ModuleBuilder
- s:createTitlePanel():javax.swing.JPanel
- getIcon():javax.swing.Icon
- getLogo():javax.swing.Icon
- postponeValidation():Z
- validateSettings():com.intellij.openapi.ui.ValidationInfo
f:com.intellij.ide.util.projectWizard.WebTemplateNewProjectWizard
- com.intellij.ide.util.projectWizard.WebTemplateNewProjectWizardBase
- <init>(com.intellij.ide.util.projectWizard.WebProjectTemplate):V
- createTemplateStep(com.intellij.ide.wizard.NewProjectWizardBaseStep):com.intellij.ide.wizard.NewProjectWizardStep
- getIcon():javax.swing.Icon
- getId():java.lang.String
- getName():java.lang.String
- f:getTemplate():com.intellij.ide.util.projectWizard.WebProjectTemplate
a:com.intellij.ide.util.projectWizard.WebTemplateNewProjectWizardBase
- com.intellij.ide.wizard.GeneratorNewProjectWizard
- <init>():V
- createStep(com.intellij.ide.util.projectWizard.WizardContext):com.intellij.ide.wizard.NewProjectWizardStep
- a:createTemplateStep(com.intellij.ide.wizard.NewProjectWizardBaseStep):com.intellij.ide.wizard.NewProjectWizardStep
- getGroupName():java.lang.String
f:com.intellij.ide.util.projectWizard.WebTemplateNewProjectWizardKt
- sf:switchToRequested(com.intellij.ide.util.projectWizard.WizardContext,java.lang.String,java.util.function.Consumer):V
com.intellij.ide.util.projectWizard.WebTemplateProjectWizardData
- sf:Companion:com.intellij.ide.util.projectWizard.WebTemplateProjectWizardData$Companion
- a:getPeer():com.intellij.openapi.util.NotNullLazyValue
- s:getWebTemplateData(com.intellij.ide.wizard.NewProjectWizardStep):com.intellij.ide.util.projectWizard.WebTemplateProjectWizardData
f:com.intellij.ide.util.projectWizard.WebTemplateProjectWizardData$Companion
- f:getKEY():com.intellij.openapi.util.Key
- f:getWebTemplateData(com.intellij.ide.wizard.NewProjectWizardStep):com.intellij.ide.util.projectWizard.WebTemplateProjectWizardData
c:com.intellij.ide.util.projectWizard.WebTemplateProjectWizardStep
- com.intellij.ide.wizard.AbstractNewProjectWizardStep
- com.intellij.ide.util.projectWizard.WebTemplateProjectWizardData
- <init>(com.intellij.ide.wizard.NewProjectWizardBaseStep,com.intellij.ide.util.projectWizard.WebProjectTemplate):V
- f:getParent():com.intellij.ide.wizard.NewProjectWizardBaseStep
- getPeer():com.intellij.openapi.util.NotNullLazyValue
- f:getTemplate():com.intellij.ide.util.projectWizard.WebProjectTemplate
- setupProject(com.intellij.openapi.project.Project):V
- setupUI(com.intellij.ui.dsl.builder.Panel):V
f:com.intellij.ide.util.projectWizard.actions.ProjectSpecificAction
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.platform.DirectoryProjectGenerator,com.intellij.ide.util.projectWizard.ProjectSettingsStepBase):V
- <init>(com.intellij.platform.DirectoryProjectGenerator,java.lang.String,com.intellij.ide.util.projectWizard.ProjectSettingsStepBase):V
f:com.intellij.ide.util.scopeChooser.EditScopesDialog
- com.intellij.openapi.options.newEditor.SettingsDialog
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.util.scopeChooser.ScopeChooserConfigurable,Z):V
- doOKAction():V
- getSelectedScope():com.intellij.psi.search.scope.packageSet.NamedScope
- s:showDialog(com.intellij.openapi.project.Project,java.lang.String):com.intellij.ide.util.scopeChooser.EditScopesDialog
- s:showDialog(com.intellij.openapi.project.Project,java.lang.String,Z):com.intellij.ide.util.scopeChooser.EditScopesDialog
c:com.intellij.ide.util.scopeChooser.PackageSetChooserCombo
- com.intellij.openapi.ui.ComponentWithBrowseButton
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,Z):V
- p:createModel():com.intellij.psi.search.scope.packageSet.NamedScope[]
- getSelectedScope():com.intellij.psi.search.scope.packageSet.NamedScope
c:com.intellij.ide.util.scopeChooser.ScopeChooserCombo
- com.intellij.ui.ComboboxWithBrowseButton
- com.intellij.openapi.Disposable
- <init>():V
- <init>(com.intellij.openapi.project.Project,Z,Z,java.lang.String):V
- getComboBox():com.intellij.openapi.ui.ComboBox
- getMinimumSize():java.awt.Dimension
- getPreferredSize():java.awt.Dimension
- getSelectedScope():com.intellij.psi.search.SearchScope
- getSelectedScopeId():java.lang.String
- getSelectedScopeName():java.lang.String
- init(com.intellij.openapi.project.Project,java.lang.String):V
- init(com.intellij.openapi.project.Project,Z,Z,java.lang.Object,com.intellij.openapi.util.Condition):V
- initialize(com.intellij.openapi.project.Project,Z,Z,java.lang.Object,com.intellij.openapi.util.Condition):org.jetbrains.concurrency.Promise
- selectItem(java.lang.Object):V
- setBrowseListener(com.intellij.ide.util.scopeChooser.ScopeChooserCombo$BrowseListener):V
- setCurrentSelection(Z):V
- setShowEmptyScopes(Z):V
- setUsageView(Z):V
- p:updateModel(javax.swing.DefaultComboBoxModel,java.util.List):V
com.intellij.ide.util.scopeChooser.ScopeChooserCombo$BrowseListener
- a:onAfterBrowseFinished():V
- a:onBeforeBrowseStarted():V
f:com.intellij.ide.util.scopeChooser.ScopeChooserConfigurable
- com.intellij.openapi.ui.MasterDetailsComponent
- com.intellij.openapi.options.SearchableConfigurable
- sf:PROJECT_SCOPES:java.lang.String
- sf:SCOPE_CHOOSER_CONFIGURABLE_UI_KEY:java.lang.String
- <init>(com.intellij.openapi.project.Project):V
- apply():V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- getScopesState():com.intellij.ide.util.scopeChooser.ScopeChooserConfigurable$ScopeChooserConfigurableState
- isModified():Z
- reset():V
f:com.intellij.ide.util.scopeChooser.ScopeChooserConfigurable$ScopeChooserConfigurableState
- com.intellij.openapi.ui.MasterDetailsState
- myOrder:java.util.List
- <init>():V
f:com.intellij.ide.util.scopeChooser.ScopeChooserUtils
- s:findGlobalScopeByName(com.intellij.openapi.project.Project,java.lang.String):com.intellij.psi.search.GlobalSearchScope
- s:findScopeByName(com.intellij.openapi.project.Project,java.lang.String):com.intellij.psi.search.GlobalSearchScope
c:com.intellij.ide.util.scopeChooser.ScopeDescriptor
- com.intellij.openapi.util.ColoredItem
- <init>(com.intellij.psi.search.SearchScope):V
- getColor():java.awt.Color
- getDisplayName():java.lang.String
- getIcon():javax.swing.Icon
- getScope():com.intellij.psi.search.SearchScope
- scopeEquals(com.intellij.psi.search.SearchScope):Z
com.intellij.ide.util.scopeChooser.ScopeDescriptorProvider
- sf:Companion:com.intellij.ide.util.scopeChooser.ScopeDescriptorProvider$Companion
- sf:EMPTY:com.intellij.ide.util.scopeChooser.ScopeDescriptor[]
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getScopeDescriptors(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.util.scopeChooser.ScopeDescriptor[]
f:com.intellij.ide.util.scopeChooser.ScopeDescriptorProvider$Companion
f:com.intellij.ide.util.scopeChooser.ScopeEditorPanel
- com.intellij.openapi.Disposable
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):V
- apply():V
- cancelCurrentProgress():V
- clearCaches():V
- dispose():V
- getCurrentScope():com.intellij.psi.search.scope.packageSet.PackageSet
- getPanel():javax.swing.JPanel
- getPatternText():java.lang.String
- getTreePanel():javax.swing.JPanel
- getTreeToolbar():javax.swing.JPanel
- rebuild(Z):V
- reset(com.intellij.psi.search.scope.packageSet.PackageSet,java.lang.Runnable):V
- restoreCanceledProgress():V
- setHolder(com.intellij.psi.search.scope.packageSet.NamedScopesHolder):V
- waitForCompletion():V
c:com.intellij.ide.util.treeView.SmartElementDescriptor
- com.intellij.ide.util.treeView.NodeDescriptor
- <init>(com.intellij.openapi.project.Project,com.intellij.ide.util.treeView.NodeDescriptor,com.intellij.psi.PsiElement):V
- getElement():java.lang.Object
- p:getIcon(com.intellij.psi.PsiElement):javax.swing.Icon
- f:getPsiElement():com.intellij.psi.PsiElement
- p:isMarkModified():Z
- p:isMarkReadOnly():Z
- update():Z
f:com.intellij.internal.DumpLookupElementWeights
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- s:dumpLookupElementWeights(com.intellij.codeInsight.lookup.impl.LookupImpl):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getLookupElementWeights(com.intellij.codeInsight.lookup.impl.LookupImpl,Z):java.util.List
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.internal.ImageDuplicateResultsDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,java.util.List,java.util.Map):V
- getPreferredFocusedComponent():javax.swing.JComponent
a:com.intellij.internal.SelectionBasedPsiElementInternalAction
- com.intellij.openapi.actionSystem.AnAction
- pf:myClass:java.lang.Class
- pf:myFileClass:java.lang.Class
- p:<init>(java.lang.Class,java.lang.Class):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:getElement(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- p:getElementAtOffset(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- p:getElementFromSelection(com.intellij.psi.PsiFile,com.intellij.openapi.editor.SelectionModel):com.intellij.psi.PsiElement
- pa:getErrorHint():java.lang.String
- pa:getInformationHint(com.intellij.psi.PsiElement):java.lang.String
- p:showError(com.intellij.openapi.editor.Editor):V
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.internal.retype.RetypeFileAssistant
- sf:Companion:com.intellij.internal.retype.RetypeFileAssistant$Companion
- a:acceptLookupElement(com.intellij.codeInsight.lookup.LookupElement):Z
- retypeDone(com.intellij.openapi.editor.Editor):V
f:com.intellij.internal.retype.RetypeFileAssistant$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
f:com.intellij.internal.retype.RetypeOptions
- <init>(com.intellij.openapi.project.Project):V
- f:getEnableLargeIndexing():Z
- f:getFileCount():I
- f:getLargeIndexFilesCount():I
- f:getProject():com.intellij.openapi.project.Project
- f:getRecordScript():Z
- f:getRestoreOriginalText():Z
- f:getRetypeCurrentFile():Z
- f:getRetypeDelay():I
- f:getRetypeExtension():java.lang.String
- f:getThreadDumpDelay():I
- f:setEnableLargeIndexing(Z):V
- f:setFileCount(I):V
- f:setLargeIndexFilesCount(I):V
- f:setRecordScript(Z):V
- f:setRestoreOriginalText(Z):V
- f:setRetypeCurrentFile(Z):V
- f:setRetypeDelay(I):V
- f:setRetypeExtension(java.lang.String):V
- f:setThreadDumpDelay(I):V
f:com.intellij.internal.retype.RetypeSession
- com.intellij.openapi.Disposable
- sf:Companion:com.intellij.internal.retype.RetypeSession$Companion
- sf:INTERFERE_FILE_NAME:java.lang.String
- sf:LARGE_INDEX_DIR_NAME:java.lang.String
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.impl.EditorImpl,I,java.lang.StringBuilder,I,java.util.List,I,Z):V
- b:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.impl.EditorImpl,I,java.lang.StringBuilder,I,java.util.List,I,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- dispose():V
- f:getCode():java.lang.String
- f:getRetypePaused():Z
- f:getStartNextCallback():kotlin.jvm.functions.Function0
- f:setRetypePaused(Z):V
- f:setStartNextCallback(kotlin.jvm.functions.Function0):V
- f:start():V
- f:stop(Z):V
f:com.intellij.internal.retype.RetypeSession$Companion
- f:getLOG():com.intellij.openapi.diagnostic.Logger
a:com.intellij.lang.SmartEnterProcessorWithFixers
- com.intellij.codeInsight.editorActions.smartEnter.SmartEnterProcessor
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- psf:MAX_ATTEMPTS:I
- psf:SMART_ENTER_TIMESTAMP:com.intellij.openapi.util.Key
- p:myAttempt:I
- pf:myEnterProcessors:java.util.List
- p:myFirstErrorOffset:I
- <init>():V
- p:addAfterEnterProcessors(com.intellij.lang.SmartEnterProcessorWithFixers$FixEnterProcessor[]):V
- p:addEnterProcessors(com.intellij.lang.SmartEnterProcessorWithFixers$FixEnterProcessor[]):V
- pf:addFixers(com.intellij.lang.SmartEnterProcessorWithFixers$Fixer[]):V
- p:collectAdditionalElements(com.intellij.psi.PsiElement,java.util.List):V
- p:collectAllElements(com.intellij.psi.PsiElement,com.intellij.util.containers.OrderedSet,Z):V
- p:collectChildrenRecursively(com.intellij.psi.PsiElement):Z
- p:doEnter(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,Z):V
- doNotStepInto(com.intellij.psi.PsiElement):Z
- ps:getEnterHandler():com.intellij.openapi.editor.actionSystem.EditorActionHandler
- p:invokeProcessor(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z):Z
- ps:isModified(com.intellij.openapi.editor.Editor):Z
- p:moveCaretInsideBracesIfAny(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- ps:plainEnter(com.intellij.openapi.editor.Editor):V
- process(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- p:process(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,I,Z):V
- processAfterCompletion(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- p:processDefaultEnter(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- p:reformatBeforeEnter(com.intellij.psi.PsiElement):Z
- registerUnresolvedError(I):V
- p:restoreElementAtCaret(com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,com.intellij.openapi.editor.RangeMarker):com.intellij.psi.PsiElement
a:com.intellij.lang.SmartEnterProcessorWithFixers$FixEnterProcessor
- <init>():V
- a:doEnter(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,Z):Z
- p:plainEnter(com.intellij.openapi.editor.Editor):V
a:com.intellij.lang.SmartEnterProcessorWithFixers$Fixer
- <init>():V
- a:apply(com.intellij.openapi.editor.Editor,com.intellij.lang.SmartEnterProcessorWithFixers,com.intellij.psi.PsiElement):V
c:com.intellij.lang.SmartEnterProcessorWithFixers$TooManyAttemptsException
- java.lang.Exception
- <init>():V
f:com.intellij.lang.customFolding.VisualStudioCustomFoldingProvider
- com.intellij.lang.folding.CustomFoldingProvider
- <init>():V
- getDescription():java.lang.String
- getEndString():java.lang.String
- getPlaceholderText(java.lang.String):java.lang.String
- getStartString():java.lang.String
- isCustomRegionEnd(java.lang.String):Z
- isCustomRegionStart(java.lang.String):Z
f:com.intellij.lang.documentation.QuickDocHighlightingHelper
- sf:CODE_BLOCK_PREFIX:java.lang.String
- sf:CODE_BLOCK_SUFFIX:java.lang.String
- sf:INLINE_CODE_PREFIX:java.lang.String
- sf:INLINE_CODE_SUFFIX:java.lang.String
- sf:INSTANCE:com.intellij.lang.documentation.QuickDocHighlightingHelper
- sf:appendStyledCodeBlock(java.lang.StringBuilder,com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.CharSequence):java.lang.StringBuilder
- sf:appendStyledCodeFragment(java.lang.StringBuilder,com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String):java.lang.StringBuilder
- sf:appendStyledFragment(java.lang.StringBuilder,java.lang.String,com.intellij.openapi.editor.colors.TextAttributesKey):java.lang.StringBuilder
- sf:appendStyledFragment(java.lang.StringBuilder,java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):java.lang.StringBuilder
- sf:appendStyledInlineCode(java.lang.StringBuilder,com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String):java.lang.StringBuilder
- sf:appendStyledLinkFragment(java.lang.StringBuilder,java.lang.String,com.intellij.openapi.editor.colors.TextAttributesKey):java.lang.StringBuilder
- sf:appendStyledLinkFragment(java.lang.StringBuilder,java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):java.lang.StringBuilder
- sf:appendStyledSignatureFragment(java.lang.StringBuilder,com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String):java.lang.StringBuilder
- sf:appendStyledSignatureFragment(java.lang.StringBuilder,java.lang.String,com.intellij.openapi.editor.colors.TextAttributesKey):java.lang.StringBuilder
- sf:appendStyledSignatureFragment(java.lang.StringBuilder,java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):java.lang.StringBuilder
- sf:appendWrappedWithInlineCodeTag(java.lang.StringBuilder,java.lang.CharSequence):java.lang.StringBuilder
- sf:getStyledCodeBlock(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.CharSequence):java.lang.String
- sf:getStyledCodeFragment(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String):java.lang.String
- sf:getStyledFragment(java.lang.String,com.intellij.openapi.editor.colors.TextAttributesKey):java.lang.String
- sf:getStyledFragment(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):java.lang.String
- sf:getStyledInlineCode(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String):java.lang.String
- sf:getStyledSignatureFragment(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String):java.lang.String
- sf:guessLanguage(java.lang.String):com.intellij.lang.Language
- sf:wrapWithInlineCodeTag(java.lang.String):java.lang.String
- sf:wrapWithInlineCodeTag(java.lang.StringBuilder):java.lang.StringBuilder
a:com.intellij.lang.javascript.boilerplate.AbstractGithubTagDownloadedProjectGenerator
- com.intellij.ide.util.projectWizard.WebProjectTemplate
- <init>():V
- createGitHubLink():com.intellij.ui.components.ActionLink
- createPeer():com.intellij.lang.javascript.boilerplate.GithubProjectGeneratorPeer
- generateProject(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.platform.templates.github.GithubTagInfo,com.intellij.openapi.module.Module):V
- getDefaultBranchName():java.lang.String
- a:getDescription():java.lang.String
- pa:getDisplayName():java.lang.String
- a:getGithubRepositoryName():java.lang.String
- a:getGithubUserName():java.lang.String
- getHelpId():java.lang.String
- f:getName():java.lang.String
- p:getPathConvertor():com.intellij.util.NullableFunction
- a:getPrimaryZipArchiveUrlForDownload(com.intellij.platform.templates.github.GithubTagInfo):java.lang.String
f:com.intellij.lang.javascript.boilerplate.GithubDownloadUtil
- s:downloadAtomically(com.intellij.openapi.progress.ProgressIndicator,java.lang.String,java.io.File,java.lang.String,java.lang.String):V
- s:downloadContentToFileWithProgressSynchronously(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String,Z):V
- s:findCacheFile(java.lang.String,java.lang.String,java.lang.String):java.io.File
- s:getCacheDir(java.lang.String,java.lang.String):java.io.File
- s:getUserCacheDir(java.lang.String):java.io.File
f:com.intellij.lang.javascript.boilerplate.GithubProjectGeneratorPeer
- com.intellij.platform.WebProjectGenerator$GeneratorPeer
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.lang.javascript.boilerplate.AbstractGithubTagDownloadedProjectGenerator):V
- addSettingsStateListener(com.intellij.platform.WebProjectGenerator$SettingsStateListener):V
- buildUI(com.intellij.ide.util.projectWizard.SettingsStep):V
- getComponent(com.intellij.openapi.ui.TextFieldWithBrowseButton,java.lang.Runnable):javax.swing.JComponent
- s:getGithubZipballUrl(java.lang.String,java.lang.String,java.lang.String):java.lang.String
- getSettings():com.intellij.platform.templates.github.GithubTagInfo
- isBackgroundJobRunning():Z
- validate():com.intellij.openapi.ui.ValidationInfo
a:com.intellij.lang.pratt.AppendTokenParser
- com.intellij.lang.pratt.TokenParser
- sf:JUST_APPEND:com.intellij.lang.pratt.AppendTokenParser
- <init>():V
- pa:parseAppend(com.intellij.lang.pratt.PrattBuilder):com.intellij.psi.tree.IElementType
- parseToken(com.intellij.lang.pratt.PrattBuilder):Z
c:com.intellij.lang.pratt.MutableMarker
- <init>(java.util.LinkedList,com.intellij.lang.PsiBuilder$Marker,I):V
- drop():V
- error(java.lang.String):V
- finish():V
- finish(com.intellij.psi.tree.IElementType):V
- getResultType():com.intellij.psi.tree.IElementType
- isCommitted():Z
- isDropped():Z
- isError():Z
- isReady():Z
- precede():com.intellij.lang.pratt.MutableMarker
- rollback():V
- setResultType(com.intellij.psi.tree.IElementType):com.intellij.lang.pratt.MutableMarker
f:com.intellij.lang.pratt.PathPattern
- accepts(com.intellij.lang.pratt.PrattBuilder):Z
- left():com.intellij.lang.pratt.PathPattern
- left(com.intellij.patterns.ElementPattern):com.intellij.lang.pratt.PathPattern
- left(com.intellij.psi.tree.IElementType):com.intellij.lang.pratt.PathPattern
- s:path():com.intellij.lang.pratt.PathPattern
- up():com.intellij.lang.pratt.PathPattern
a:com.intellij.lang.pratt.PrattBuilder
- <init>():V
- a:advance():V
- assertToken(com.intellij.lang.pratt.PrattTokenType):Z
- assertToken(com.intellij.psi.tree.IElementType,java.lang.String):Z
- checkToken(com.intellij.psi.tree.IElementType):Z
- pa:createChildBuilder():com.intellij.lang.pratt.PrattBuilder
- createChildBuilder(I):com.intellij.lang.pratt.PrattBuilder
- createChildBuilder(I,java.lang.String):com.intellij.lang.pratt.PrattBuilder
- a:error(java.lang.String):V
- a:expecting(java.lang.String):com.intellij.lang.pratt.PrattBuilder
- getBackResultIterator():java.util.ListIterator
- a:getCurrentOffset():I
- a:getLexer():com.intellij.lexer.Lexer
- a:getParent():com.intellij.lang.pratt.PrattBuilder
- a:getPriority():I
- a:getResultTypes():java.util.List
- a:getTokenText():java.lang.String
- a:getTokenType():com.intellij.psi.tree.IElementType
- isEof():Z
- isToken(com.intellij.psi.tree.IElementType):Z
- a:mark():com.intellij.lang.pratt.MutableMarker
- a:parse():com.intellij.psi.tree.IElementType
- parseChildren(I,java.lang.String):com.intellij.psi.tree.IElementType
- a:reduce(com.intellij.psi.tree.IElementType):V
- a:setTokenTypeRemapper(com.intellij.lang.ITokenTypeRemapper):V
- a:withLowestPriority(I):com.intellij.lang.pratt.PrattBuilder
a:com.intellij.lang.pratt.PrattParser
- com.intellij.lang.PsiParser
- <init>():V
- pa:getRegistry():com.intellij.lang.pratt.PrattRegistry
- p:parse(com.intellij.lang.pratt.PrattBuilder):V
- f:parse(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder):com.intellij.lang.ASTNode
f:com.intellij.lang.pratt.PrattParsingUtil
- s:parseOption(com.intellij.lang.pratt.PrattBuilder,I):com.intellij.psi.tree.IElementType
- s:searchFor(com.intellij.lang.pratt.PrattBuilder,Z,com.intellij.lang.pratt.PrattTokenType[]):Z
- s:searchFor(com.intellij.lang.pratt.PrattBuilder,com.intellij.lang.pratt.PrattTokenType[]):V
f:com.intellij.lang.pratt.PrattRegistry
- <init>():V
- getParsers(com.intellij.psi.tree.IElementType):java.util.Collection
- registerParser(com.intellij.psi.tree.IElementType,I,com.intellij.lang.pratt.PathPattern,com.intellij.lang.pratt.TokenParser):V
- registerParser(com.intellij.psi.tree.IElementType,I,com.intellij.lang.pratt.TokenParser):V
- unregisterParser(com.intellij.psi.tree.IElementType):V
f:com.intellij.lang.pratt.PrattRegistry$ParserData
- java.lang.Record
- <init>(I,com.intellij.lang.pratt.PathPattern,com.intellij.lang.pratt.TokenParser):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- parser():com.intellij.lang.pratt.TokenParser
- pattern():com.intellij.lang.pratt.PathPattern
- priority():I
c:com.intellij.lang.pratt.PrattTokenType
- com.intellij.psi.tree.IElementType
- <init>(java.lang.String,com.intellij.lang.Language):V
- getExpectedText(com.intellij.lang.pratt.PrattBuilder):java.lang.String
a:com.intellij.lang.pratt.ReducingParser
- com.intellij.lang.pratt.TokenParser
- <init>():V
- a:parseFurther(com.intellij.lang.pratt.PrattBuilder):com.intellij.psi.tree.IElementType
- f:parseToken(com.intellij.lang.pratt.PrattBuilder):Z
a:com.intellij.lang.pratt.TokenParser
- <init>():V
- s:infix(I,com.intellij.psi.tree.IElementType):com.intellij.lang.pratt.TokenParser
- s:infix(I,com.intellij.psi.tree.IElementType,java.lang.String):com.intellij.lang.pratt.TokenParser
- a:parseToken(com.intellij.lang.pratt.PrattBuilder):Z
- s:postfix(com.intellij.psi.tree.IElementType):com.intellij.lang.pratt.TokenParser
f:com.intellij.largeFilesEditor.GuiUtils
- <init>():V
- s:setStandardLineBorderToPanel(javax.swing.JComponent,I,I,I,I):V
- s:setStandardSizeForPanel(javax.swing.JComponent,Z):V
f:com.intellij.largeFilesEditor.editor.EditorModel
- fireGlobalScrollBarValueChangedFromOutside(J):V
- fireLocalScrollBarValueChanged():V
- onEncodingChanged():V
- setCaretAndShow(J,I):V
- setCaretToFileEndAndShow():V
- setCaretToFileStartAndShow():V
- setHighlightingCloseSearchResultsEnabled(Z):V
- showSearchResult(com.intellij.largeFilesEditor.search.SearchResult):V
- trySetHighlighter(com.intellij.openapi.editor.highlighter.EditorHighlighter):V
com.intellij.largeFilesEditor.editor.LargeFileEditor
- com.intellij.openapi.fileEditor.FileEditor
- sf:LARGE_FILE_EDITOR_KEY:com.intellij.openapi.util.Key
- sf:LARGE_FILE_EDITOR_MARK_KEY:com.intellij.openapi.util.Key
- a:createAccessForEncodingWidget():com.intellij.largeFilesEditor.encoding.LargeFileEditorAccess
- a:getCaretPageNumber():J
- a:getCaretPageOffset():I
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getEditorModel():com.intellij.largeFilesEditor.editor.EditorModel
- a:getFile():com.intellij.openapi.vfs.VirtualFile
- a:getFileDataProviderForSearch():com.intellij.largeFilesEditor.search.searchTask.FileDataProviderForSearch
- a:getPageSize():I
- a:getProject():com.intellij.openapi.project.Project
- a:getSearchManager():com.intellij.largeFilesEditor.search.LfeSearchManager
- a:showSearchResult(com.intellij.largeFilesEditor.search.SearchResult):V
- a:trySetHighlighter(com.intellij.openapi.editor.highlighter.EditorHighlighter):V
f:com.intellij.largeFilesEditor.editor.LargeFileEditorProvider
- com.intellij.openapi.fileEditor.impl.DefaultPlatformFileEditorProvider
- com.intellij.openapi.project.DumbAware
- sf:PROVIDER_ID:java.lang.String
- <init>():V
- accept(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- acceptRequiresReadAction():Z
- createEditor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor
- getEditorTypeId():java.lang.String
- getPolicy():com.intellij.openapi.fileEditor.FileEditorPolicy
- readState(org.jdom.Element,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditorState
- writeState(com.intellij.openapi.fileEditor.FileEditorState,com.intellij.openapi.project.Project,org.jdom.Element):V
f:com.intellij.largeFilesEditor.editor.LargeFileNotificationProvider
- com.intellij.ui.EditorNotificationProvider
- <init>():V
- collectNotificationData(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.function.Function
f:com.intellij.largeFilesEditor.editor.LargeFileRegexSearchNotificationProvider
- com.intellij.ui.EditorNotificationProvider
- <init>():V
- collectNotificationData(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.function.Function
com.intellij.largeFilesEditor.encoding.LargeFileEditorAccess
- a:getCharsetName():java.lang.String
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- a:tryChangeEncoding(java.nio.charset.Charset):Z
com.intellij.largeFilesEditor.search.LfeSearchManager
- a:canShowRegexSearchWarning():Z
- a:dispose():V
- a:getLargeFileEditor():com.intellij.largeFilesEditor.editor.LargeFileEditor
- a:getSearchReplaceComponent():com.intellij.find.SearchReplaceComponent
- a:getStatusText():java.lang.String
- a:gotoNextOccurrence(Z):V
- a:isSearchWorkingNow():Z
- a:launchNewRangeSearch(J,J,Z):V
- a:onCaretPositionChanged(com.intellij.openapi.editor.event.CaretEvent):V
- a:onEscapePressed():V
- a:onSearchActionHandlerExecuted():V
- a:onSearchParametersChanged():V
- a:updateSearchReplaceComponentActions():V
- a:updateStatusText():V
f:com.intellij.largeFilesEditor.search.Position
- pageNumber:J
- symbolOffsetInPage:I
- <init>():V
- <init>(J,I):V
- equals(java.lang.Object):Z
- reset(J,I):V
f:com.intellij.largeFilesEditor.search.SearchResult
- sf:KEY:com.intellij.openapi.util.Key
- f:contextPostfix:java.lang.String
- f:contextPrefix:java.lang.String
- f:endPostion:com.intellij.largeFilesEditor.search.Position
- f:foundString:java.lang.String
- f:startPosition:com.intellij.largeFilesEditor.search.Position
- <init>(J,I,J,I,java.lang.String,java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
com.intellij.largeFilesEditor.search.searchTask.FileDataProviderForSearch
- a:getName():java.lang.String
- a:getPagesAmount():J
f:com.intellij.lexer.LexerUtil
- s:getRootLexer(com.intellij.lexer.Lexer):com.intellij.lexer.Lexer
- s:getTokenText(com.intellij.lexer.Lexer):java.lang.CharSequence
- s:internToken(com.intellij.lexer.Lexer,com.intellij.util.CharTable):java.lang.CharSequence
f:com.intellij.lexer.PrefixSuffixStripperLexer
- com.intellij.lexer.LexerBase
- <init>(java.lang.String,com.intellij.psi.tree.IElementType,java.lang.String,com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):V
- advance():V
- getBufferEnd():I
- getBufferSequence():java.lang.CharSequence
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.psi.tree.IElementType
- start(java.lang.CharSequence,I,I,I):V
f:com.intellij.microservices.url.inlay.UrlPathInlayHintsPresentationsKt
- sf:urlInlayPresentation(com.intellij.codeInsight.hints.presentation.ScaleAwarePresentationFactory):com.intellij.codeInsight.hints.presentation.InlayPresentation
f:com.intellij.microservices.url.inlay.UrlPathInlayHintsProviderFactoryKt
- sf:getUrlPathInlayHintsProviderFactory():com.intellij.codeInsight.hints.InlayHintsProviderFactory
f:com.intellij.microservices.url.parameters.PathVariableDeclarationUtils
- <init>():V
- s:createPathVariableReferencesForPks(com.intellij.psi.PsiElement,com.intellij.psi.util.PartiallyKnownString,com.intellij.microservices.url.references.UrlPksParser,com.intellij.microservices.url.parameters.PathVariableUsagesProvider):com.intellij.psi.PsiReference[]
c:com.intellij.microservices.url.parameters.PathVariablePsiElement
- com.intellij.psi.impl.PomTargetPsiElementImpl
- canNavigate():Z
- s:create(java.lang.String,com.intellij.psi.PsiElement,com.intellij.microservices.url.parameters.SemDefinitionProvider):com.intellij.microservices.url.parameters.PathVariablePsiElement
- s:create(java.lang.String,com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,com.intellij.microservices.url.parameters.SemDefinitionProvider):com.intellij.microservices.url.parameters.PathVariablePsiElement
- s:create(java.lang.String,com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.util.regex.Pattern,com.intellij.microservices.url.parameters.SemDefinitionProvider):com.intellij.microservices.url.parameters.PathVariablePsiElement
- equals(java.lang.Object):Z
- getIcon():javax.swing.Icon
- getName():java.lang.String
- getNameValidationPattern():java.util.regex.Pattern
- getParent():com.intellij.psi.PsiElement
- getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- getTypeName():java.lang.String
- getVariablePomTarget():com.intellij.microservices.url.parameters.PathVariablePomTarget
- hashCode():I
- s:merge(java.util.List):com.intellij.microservices.url.parameters.PathVariablePsiElement
- navigate(Z):V
- navigatingToDeclaration():com.intellij.microservices.url.parameters.PathVariablePsiElement
- setName(java.lang.String):com.intellij.psi.PsiElement
com.intellij.microservices.url.parameters.PathVariableSem
- com.intellij.microservices.url.parameters.RenameableSemElement
- a:getName():java.lang.String
- a:getPathVariablePsiElement():com.intellij.microservices.url.parameters.PathVariablePsiElement
- a:isActualNameHolder():Z
f:com.intellij.microservices.url.parameters.PathVariableSemElementSupportKt
- sf:PATH_VARIABLE_SEM_KEY:com.intellij.semantic.SemKey
f:com.intellij.microservices.url.references.EnableAutopopupInUrlPathReferencesKt
- sf:hasUsageUrlPathReferences(com.intellij.psi.PsiElement,I):Z
f:com.intellij.microservices.url.references.QueryParameterNamePomTarget
- com.intellij.microservices.utils.SimpleNamePomTarget
- com.intellij.microservices.url.parameters.QueryParameterNameTarget
- <init>(com.intellij.microservices.url.references.UrlPathReferenceUnifiedPomTarget,com.intellij.openapi.project.Project,java.lang.String):V
- canNavigate():Z
- equals(java.lang.Object):Z
- f:getNavigatablePsiElement():com.intellij.psi.PsiElement
- f:getParamNavigatable():com.intellij.psi.PsiElement
- f:getUrlPathReferenceUnifiedPomTarget():com.intellij.microservices.url.references.UrlPathReferenceUnifiedPomTarget
- hashCode():I
- navigate(Z):V
- toElement(Z):com.intellij.psi.PsiElement
f:com.intellij.microservices.url.references.QueryParameterSemElementSupport
- com.intellij.microservices.url.parameters.RenameableSemElementSupport
- sf:INSTANCE:com.intellij.microservices.url.references.QueryParameterSemElementSupport
- createPomTargetPsi(com.intellij.openapi.project.Project,com.intellij.microservices.url.parameters.QueryParameterSem):com.intellij.pom.PomTargetPsiElement
- findReferencingPsiElements(com.intellij.pom.PomTarget):java.lang.Iterable
- sf:getNavigatablePsiElement(com.intellij.microservices.url.parameters.QueryParameterNameReference):com.intellij.psi.PsiElement
- getSEM_KEY():com.intellij.semantic.SemKey
- supportsTarget(com.intellij.pom.PomTarget):Z
f:com.intellij.microservices.url.references.UrlPathReferenceUnifiedPomTarget
- com.intellij.microservices.url.references.UrlPathReferenceTarget
- sf:Companion:com.intellij.microservices.url.references.UrlPathReferenceUnifiedPomTarget$Companion
- canNavigate():Z
- canNavigateToSource():Z
- equals(java.lang.Object):Z
- getContext():com.intellij.microservices.url.references.UrlPathContext
- sf:getFromPomTargetPsiElement(com.intellij.psi.PsiElement):com.intellij.microservices.url.references.UrlPathReferenceUnifiedPomTarget
- getName():java.lang.String
- getNavigatablePsiElement():com.intellij.psi.NavigatablePsiElement
- f:getPathValues():java.util.List
- getResolvedTargets():java.util.Set
- hashCode():I
- isValid():Z
- isWritable():Z
- f:mapVariants(kotlin.jvm.functions.Function2):kotlin.sequences.Sequence
- navigate(Z):V
- setName(java.lang.String):java.lang.Object
- toElement(com.intellij.microservices.url.references.UrlPathReference):com.intellij.psi.PsiElement
f:com.intellij.microservices.url.references.UrlPathReferenceUnifiedPomTarget$Companion
- f:getFromPomTargetPsiElement(com.intellij.psi.PsiElement):com.intellij.microservices.url.references.UrlPathReferenceUnifiedPomTarget
f:com.intellij.microservices.utils.CommonFakeNavigatablePomTargetKt
- sf:mockFindUsages(com.intellij.openapi.Disposable,kotlin.jvm.functions.Function1):V
f:com.intellij.microservices.utils.ReferenceResolveUtilsKt
- sf:getFakePomTargetForLastUrlPathReference(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- sf:getLastUrlPathReference(com.intellij.psi.PsiElement):com.intellij.microservices.url.references.UrlPathReference
- sf:lazySynchronousResolve(java.lang.String,kotlin.jvm.functions.Function0):kotlin.Lazy
f:com.intellij.mock.MockPsiManager
- com.intellij.psi.impl.PsiManagerEx
- <init>(com.intellij.openapi.project.Project):V
- addPsiDirectory(com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.PsiDirectory):V
- addPsiTreeChangeListener(com.intellij.psi.PsiTreeChangeListener):V
- addPsiTreeChangeListener(com.intellij.psi.PsiTreeChangeListener,com.intellij.openapi.Disposable):V
- afterChange(Z):V
- areElementsEquivalent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- beforeChange(Z):V
- beforeChildAddition(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- beforeChildRemoval(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- beforeChildReplacement(com.intellij.psi.impl.PsiTreeChangeEventImpl):V
- dropPsiCaches():V
- dropResolveCaches():V
- findCachedViewProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.FileViewProvider
- findDirectory(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiDirectory
- findFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFile
- findViewProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.FileViewProvider
- finishBatchFilesProcessingMode():V
- getFileManager():com.intellij.psi.impl.file.impl.FileManager
- getModificationTracker():com.intellij.psi.util.PsiModificationTracker
- getProject():com.intellij.openapi.project.Project
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- isAssertOnFileLoading(com.intellij.openapi.vfs.VirtualFile):Z
- isBatchFilesProcessingMode():Z
- isDisposed():Z
- isInProject(com.intellij.psi.PsiElement):Z
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- reloadFromDisk(com.intellij.psi.PsiFile):V
- removePsiTreeChangeListener(com.intellij.psi.PsiTreeChangeListener):V
- runInBatchFilesMode(com.intellij.openapi.util.Computable):java.lang.Object
- setAssertOnFileLoadingFilter(com.intellij.openapi.vfs.VirtualFileFilter,com.intellij.openapi.Disposable):V
- startBatchFilesProcessingMode():V
com.intellij.navigation.ChooseByNameContributorEx
- com.intellij.navigation.ChooseByNameContributor
- getItemsByName(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,Z):com.intellij.navigation.NavigationItem[]
- getNames(com.intellij.openapi.project.Project,Z):java.lang.String[]
- a:processElementsWithName(java.lang.String,com.intellij.util.Processor,com.intellij.util.indexing.FindSymbolParameters):V
- a:processNames(com.intellij.util.Processor,com.intellij.psi.search.GlobalSearchScope,com.intellij.util.indexing.IdFilter):V
com.intellij.navigation.ChooseByNameContributorEx2
- com.intellij.navigation.ChooseByNameContributorEx
- a:processNames(com.intellij.util.Processor,com.intellij.util.indexing.FindSymbolParameters):V
com.intellij.navigation.JBProtocolRevisionResolver
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- s:processResolvers(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:resolve(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):com.intellij.openapi.vfs.VirtualFile
f:com.intellij.navigation.NavigatorWithinProject
- sf:Companion:com.intellij.navigation.NavigatorWithinProject$Companion
- <init>(com.intellij.openapi.project.Project,java.util.Map,kotlin.jvm.functions.Function2):V
- f:getParameters():java.util.Map
- f:getProject():com.intellij.openapi.project.Project
- f:navigate(java.util.List,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.navigation.NavigatorWithinProject$Companion
- f:parseNavigationPath(java.lang.String):kotlin.Triple
e:com.intellij.navigation.NavigatorWithinProject$NavigationKeyPrefix
- java.lang.Enum
- sf:FQN:com.intellij.navigation.NavigatorWithinProject$NavigationKeyPrefix
- sf:PATH:com.intellij.navigation.NavigatorWithinProject$NavigationKeyPrefix
- s:getEntries():kotlin.enums.EnumEntries
- f:getPrefix():java.lang.String
- s:valueOf(java.lang.String):com.intellij.navigation.NavigatorWithinProject$NavigationKeyPrefix
- s:values():com.intellij.navigation.NavigatorWithinProject$NavigationKeyPrefix[]
f:com.intellij.navigation.NavigatorWithinProjectKt
- sf:NAVIGATE_COMMAND:java.lang.String
- sf:ORIGIN_URL_KEY:java.lang.String
- sf:PROJECT_NAME_KEY:java.lang.String
- sf:REFERENCE_TARGET:java.lang.String
- sf:SELECTION:java.lang.String
- sf:openProject(java.util.Map,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.navigation.OriginSupportKt
- sf:areOriginsEqual(java.lang.String,java.lang.String):Z
- sf:extractVcsOriginCanonicalPath(java.lang.String):java.lang.String
com.intellij.navigation.ProtocolOpenProjectResult
f:com.intellij.navigation.ProtocolOpenProjectResult$Error
- com.intellij.navigation.ProtocolOpenProjectResult
- <init>(java.lang.String):V
- f:getMessage():java.lang.String
f:com.intellij.navigation.ProtocolOpenProjectResult$Success
- com.intellij.navigation.ProtocolOpenProjectResult
- <init>(com.intellij.openapi.project.Project):V
- f:getProject():com.intellij.openapi.project.Project
c:com.intellij.openapi.editor.EditorMouseHoverPopupManager
- com.intellij.openapi.Disposable
- sf:MAX_QUICK_DOC_CHARACTERS:I
- pf:myAlarm:com.intellij.util.Alarm
- <init>():V
- p:cancelProcessingAndCloseHint():V
- ps:createHint(javax.swing.JComponent,com.intellij.openapi.editor.PopupBridge,Z):com.intellij.ui.popup.AbstractPopup
- dispose():V
- getDocumentationComponent():com.intellij.codeInsight.documentation.DocumentationComponent
- s:getInstance():com.intellij.openapi.editor.EditorMouseHoverPopupManager
- p:handleMouseMoved(com.intellij.openapi.editor.event.EditorMouseEvent):V
- showInfoTooltip(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.daemon.impl.HighlightInfo,I,Z,Z):V
- showInfoTooltip(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.daemon.impl.HighlightInfo,I,Z,Z,Z,Z):V
- showInfoTooltip(com.intellij.openapi.editor.event.EditorMouseEvent):V
f:com.intellij.openapi.editor.actions.FlipCommaIntention
- com.intellij.modcommand.PsiUpdateModCommandAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- getFamilyName():java.lang.String
com.intellij.openapi.editor.actions.FlipCommaIntention$Flipper
- sf:EXTENSION:com.intellij.lang.LanguageExtension
- canFlip(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- a:flip(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- s:isCanFlip(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- s:tryFlip(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
c:com.intellij.openapi.editor.actions.IncrementalFindAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- sf:SEARCH_DISABLED:com.intellij.openapi.util.Key
- <init>():V
c:com.intellij.openapi.editor.actions.IncrementalFindAction$Handler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>(Z):V
- p:doExecute(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- p:isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
f:com.intellij.openapi.editor.actions.IndentLineOrSelectionAction
- com.intellij.openapi.editor.actions.LangIndentSelectionAction
- <init>():V
- update(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.actionSystem.DataContext):V
c:com.intellij.openapi.editor.actions.LangIndentSelectionAction
- com.intellij.openapi.editor.actions.IndentSelectionAction
- <init>():V
- p:isEnabled(com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):Z
- p:wantSelection():Z
f:com.intellij.openapi.editor.actions.ReplaceAction
- com.intellij.openapi.editor.actionSystem.EditorAction
- <init>():V
a:com.intellij.openapi.editor.actions.SelectOccurrencesActionHandler
- com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>():V
- ps:getAndResetNotFoundStatus(com.intellij.openapi.editor.Editor):Z
- ps:getFindModel(java.lang.String,Z):com.intellij.find.FindModel
- ps:getSelectionRange(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret):com.intellij.openapi.util.TextRange
- ps:isRepeatedActionInvocation():Z
- ps:isWholeWordSearch(com.intellij.openapi.editor.Editor):Z
- ps:setNotFoundStatus(com.intellij.openapi.editor.Editor):V
- ps:setSelection(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.util.TextRange):V
- ps:setWholeWordSearch(com.intellij.openapi.editor.Editor,Z):V
- ps:showHint(com.intellij.openapi.editor.Editor):V
a:com.intellij.openapi.editor.actions.lists.CommaListSplitJoinContext
- com.intellij.openapi.editor.actions.lists.DefaultListSplitJoinContext
- <init>():V
- p:addTailReplacementsForJoining(com.intellij.openapi.editor.actions.lists.ListWithElements,java.util.List,com.intellij.psi.PsiElement):V
- p:addTailReplacementsForSplitting(com.intellij.openapi.editor.actions.lists.ListWithElements,java.util.List,com.intellij.psi.PsiElement):V
- getJoinText(com.intellij.openapi.editor.actions.lists.ListWithElements):java.lang.String
- getSplitText(com.intellij.openapi.editor.actions.lists.ListWithElements):java.lang.String
- p:getTrailingComma(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.openapi.editor.actions.lists.JoinOrSplit,com.intellij.psi.PsiElement):com.intellij.openapi.editor.actions.lists.TrailingComma
- isSeparator(com.intellij.psi.PsiElement):Z
a:com.intellij.openapi.editor.actions.lists.DefaultListSplitJoinContext
- com.intellij.openapi.editor.actions.lists.ListSplitJoinContext
- <init>():V
- p:addHeadReplacementsForJoining(com.intellij.openapi.editor.actions.lists.ListWithElements,java.util.List,com.intellij.psi.PsiElement):V
- p:addHeadReplacementsForSplitting(com.intellij.openapi.editor.actions.lists.ListWithElements,java.util.List,com.intellij.psi.PsiElement):V
- p:addTailReplacementsForJoining(com.intellij.openapi.editor.actions.lists.ListWithElements,java.util.List,com.intellij.psi.PsiElement):V
- p:addTailReplacementsForSplitting(com.intellij.openapi.editor.actions.lists.ListWithElements,java.util.List,com.intellij.psi.PsiElement):V
- a:extractData(com.intellij.psi.PsiElement):com.intellij.openapi.editor.actions.lists.ListWithElements
- pf:findOffsetForBreakAfter(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.psi.PsiElement):I
- p:getHeadBreakJoinReplacement(com.intellij.psi.PsiElement):java.lang.String
- getJoinText(com.intellij.openapi.editor.actions.lists.ListWithElements):java.lang.String
- getReplacementsForJoining(com.intellij.openapi.editor.actions.lists.ListWithElements):java.util.List
- getReplacementsForSplitting(com.intellij.openapi.editor.actions.lists.ListWithElements):java.util.List
- getSplitText(com.intellij.openapi.editor.actions.lists.ListWithElements):java.lang.String
- p:getTailBreakJoinReplacement(com.intellij.psi.PsiElement):java.lang.String
- pf:hasSeparatorAfter(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.psi.PsiElement):Z
- isJoinAvailable(com.intellij.openapi.editor.actions.lists.ListWithElements):Z
- a:isSeparator(com.intellij.psi.PsiElement):Z
- isSplitAvailable(com.intellij.openapi.editor.actions.lists.ListWithElements):Z
- isValidIntermediateElement(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.psi.PsiElement):Z
- needHeadBreak(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.psi.PsiElement,com.intellij.openapi.editor.actions.lists.JoinOrSplit):Z
- needTailBreak(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.psi.PsiElement,com.intellij.openapi.editor.actions.lists.JoinOrSplit):Z
- nextBreak(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- prevBreak(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- reformatRange(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.actions.lists.JoinOrSplit):V
- pf:skipAcceptableElements(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- p:validateHeadElement(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.psi.PsiElement):Z
- p:validateTailElement(com.intellij.openapi.editor.actions.lists.ListWithElements,com.intellij.psi.PsiElement):Z
e:com.intellij.openapi.editor.actions.lists.JoinOrSplit
- java.lang.Enum
- sf:JOIN:com.intellij.openapi.editor.actions.lists.JoinOrSplit
- sf:SPLIT:com.intellij.openapi.editor.actions.lists.JoinOrSplit
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.editor.actions.lists.JoinOrSplit
- s:values():com.intellij.openapi.editor.actions.lists.JoinOrSplit[]
f:com.intellij.openapi.editor.actions.lists.ListWithElements
- <init>(com.intellij.psi.PsiElement,java.util.List):V
- f:getElements():java.util.List
- f:getList():com.intellij.psi.PsiElement
e:com.intellij.openapi.editor.actions.lists.TrailingComma
- java.lang.Enum
- sf:ADD_IF_NOT_EXISTS:com.intellij.openapi.editor.actions.lists.TrailingComma
- sf:IGNORE:com.intellij.openapi.editor.actions.lists.TrailingComma
- sf:REMOVE_IF_EXISTS:com.intellij.openapi.editor.actions.lists.TrailingComma
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.editor.actions.lists.TrailingComma
- s:values():com.intellij.openapi.editor.actions.lists.TrailingComma[]
a:com.intellij.openapi.editor.bidi.TokenSetBidiRegionsSeparator
- com.intellij.openapi.editor.bidi.BidiRegionsSeparator
- p:<init>(com.intellij.psi.tree.TokenSet[]):V
- createBorderBetweenTokens(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
f:com.intellij.openapi.editor.richcopy.HtmlSyntaxInfoUtil
- s:appendHighlightedByLexerAndEncodedAsHtmlCodeSnippet(java.lang.StringBuilder,com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String,F):java.lang.StringBuilder
- s:appendHighlightedByLexerAndEncodedAsHtmlCodeSnippet(java.lang.StringBuilder,com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String,Z,F):java.lang.StringBuilder
- s:appendStyledSpan(java.lang.StringBuilder,com.intellij.openapi.editor.colors.TextAttributesKey,java.lang.String,F):java.lang.StringBuilder
- s:appendStyledSpan(java.lang.StringBuilder,com.intellij.openapi.editor.markup.TextAttributes,java.lang.String,F):java.lang.StringBuilder
- s:appendStyledSpan(java.lang.StringBuilder,java.lang.String,java.lang.String[]):java.lang.StringBuilder
- s:getHtmlContent(com.intellij.psi.PsiFile,java.lang.CharSequence,com.intellij.openapi.editor.richcopy.SyntaxInfoBuilder$RangeIterator,com.intellij.openapi.editor.colors.EditorColorsScheme,I,I):java.lang.CharSequence
- s:getHtmlContent(java.lang.CharSequence,com.intellij.openapi.editor.richcopy.SyntaxInfoBuilder$RangeIterator,com.intellij.openapi.editor.colors.EditorColorsScheme,I):java.lang.CharSequence
- s:getStyledSpan(com.intellij.openapi.editor.colors.TextAttributesKey,java.lang.String,F):java.lang.String
- s:getStyledSpan(com.intellij.openapi.editor.markup.TextAttributes,java.lang.String,F):java.lang.String
f:com.intellij.openapi.editor.richcopy.SyntaxInfoBuilder
com.intellij.openapi.editor.richcopy.SyntaxInfoBuilder$RangeIterator
- a:advance():V
- a:atEnd():Z
- a:dispose():V
- a:getRangeEnd():I
- a:getRangeStart():I
- a:getTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
f:com.intellij.openapi.editor.richcopy.model.SyntaxInfo
- getDefaultBackground():I
- getDefaultForeground():I
- getFontSize():F
f:com.intellij.openapi.editor.richcopy.model.SyntaxInfo$Builder
- <init>(java.awt.Color,java.awt.Color,F):V
- addBackground(java.awt.Color):V
- addFontFamilyName(java.lang.String):V
- addFontStyle(I):V
- addForeground(java.awt.Color):V
- addText(I,I):V
- build():com.intellij.openapi.editor.richcopy.model.SyntaxInfo
f:com.intellij.openapi.editor.richcopy.settings.RichCopySettings
- com.intellij.openapi.components.PersistentStateComponent
- sf:ACTIVE_GLOBAL_SCHEME_MARKER:java.lang.String
- <init>():V
- getColorsScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.colors.EditorColorsScheme
- s:getInstance():com.intellij.openapi.editor.richcopy.settings.RichCopySettings
- getSchemeName():java.lang.String
- getState():com.intellij.openapi.editor.richcopy.settings.RichCopySettings
- isEnabled():Z
- loadState(com.intellij.openapi.editor.richcopy.settings.RichCopySettings):V
- setEnabled(Z):V
- setSchemeName(java.lang.String):V
f:com.intellij.openapi.editor.richcopy.view.HtmlTransferableData
- com.intellij.openapi.editor.richcopy.view.RawTextWithMarkup
- java.io.Reader
- sf:FLAVOR:java.awt.datatransfer.DataFlavor
- sf:PRIORITY:I
- <init>(com.intellij.openapi.editor.richcopy.model.SyntaxInfo,I):V
- getFlavor():java.awt.datatransfer.DataFlavor
- getPriority():I
com.intellij.openapi.editor.richcopy.view.RawTextWithMarkup
- com.intellij.codeInsight.editorActions.TextBlockTransferableData
- a:setRawText(java.lang.String):V
f:com.intellij.openapi.editor.richcopy.view.RtfTransferableData
- com.intellij.openapi.editor.richcopy.view.RawTextWithMarkup
- java.io.InputStream
- sf:FLAVOR:java.awt.datatransfer.DataFlavor
- sf:PRIORITY:I
- <init>(com.intellij.openapi.editor.richcopy.model.SyntaxInfo):V
- close():V
- getFlavor():java.awt.datatransfer.DataFlavor
- getPriority():I
- mark(I):V
- markSupported():Z
- read():I
- read(B[],I,I):I
- reset():V
- setRawText(java.lang.String):V
f:com.intellij.openapi.file.exclude.OverrideFileTypeManager
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- s:getInstance():com.intellij.openapi.file.exclude.OverrideFileTypeManager
- isMarkedPlainText(com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.openapi.file.exclude.ProjectPlainTextFileTypeManager
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- getFiles():java.util.Collection
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.file.exclude.ProjectPlainTextFileTypeManager
- loadState(org.jdom.Element):V
c:com.intellij.openapi.fileEditor.impl.PsiAwareFileEditorManagerImpl
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- com.intellij.openapi.fileEditor.ex.FileEditorManagerEx
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- getFileTooltipText(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.impl.EditorComposite):java.lang.String
- isProblem(com.intellij.openapi.vfs.VirtualFile):Z
c:com.intellij.openapi.fileEditor.impl.text.PsiAwareTextEditorImpl
- com.intellij.openapi.fileEditor.impl.text.TextEditorImpl
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.impl.text.TextEditorProvider):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.impl.text.TextEditorProvider,com.intellij.openapi.editor.impl.EditorImpl):V
- getBackgroundHighlighter():com.intellij.codeHighlighting.BackgroundEditorHighlighter
c:com.intellij.openapi.fileEditor.impl.text.PsiAwareTextEditorProvider
- com.intellij.openapi.fileEditor.impl.text.TextEditorProvider
- com.intellij.openapi.fileEditor.AsyncFileEditorProvider
- <init>():V
- createEditor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor
- createFileEditor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Document,kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):java.lang.Object
- p:createWrapperForEditor(com.intellij.openapi.editor.Editor):com.intellij.openapi.fileEditor.impl.text.TextEditorProvider$EditorWrapper
- getStateImpl(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.fileEditor.FileEditorStateLevel):com.intellij.openapi.fileEditor.impl.text.TextEditorState
- readState(org.jdom.Element,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditorState
- setStateImpl(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.fileEditor.impl.text.TextEditorState,Z):V
- writeState(com.intellij.openapi.fileEditor.FileEditorState,com.intellij.openapi.project.Project,org.jdom.Element):V
c:com.intellij.openapi.fileEditor.impl.text.TextEditorPsiDataProvider
- com.intellij.openapi.fileEditor.EditorDataProvider
- <init>():V
- getData(java.lang.String,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret):java.lang.Object
f:com.intellij.openapi.fileTypes.PlainTextSyntaxHighlighterFactory
- com.intellij.openapi.fileTypes.SyntaxHighlighterFactory
- <init>():V
- s:createPlainTextLexer():com.intellij.lexer.Lexer
- getSyntaxHighlighter(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.SyntaxHighlighter
f:com.intellij.openapi.fileTypes.impl.FileTypeConfigurable
- com.intellij.openapi.fileTypes.impl.FileTypeSelectable
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- <init>():V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- isModified():Z
- reset():V
- selectFileType(com.intellij.openapi.fileTypes.FileType):V
f:com.intellij.openapi.module.EmptyModuleType
- com.intellij.openapi.module.ModuleType
- sf:EMPTY_MODULE:java.lang.String
- <init>():V
- createModuleBuilder():com.intellij.ide.util.projectWizard.EmptyModuleBuilder
- getDescription():java.lang.String
- s:getInstance():com.intellij.openapi.module.EmptyModuleType
- getName():java.lang.String
- getNodeIcon(Z):javax.swing.Icon
f:com.intellij.openapi.module.ModuleNavigatable
- com.intellij.pom.Navigatable
- <init>(com.intellij.openapi.module.Module):V
- canNavigate():Z
- navigate(Z):V
com.intellij.openapi.module.ModuleTypeWithWebFeatures
- a:hasWebFeatures(com.intellij.openapi.module.Module):Z
- s:isAvailable(com.intellij.openapi.module.Module):Z
f:com.intellij.openapi.module.OrderEntryNavigatable
- com.intellij.pom.Navigatable
- <init>(com.intellij.openapi.module.Module,com.intellij.openapi.roots.OrderEntry):V
- canNavigate():Z
- navigate(Z):V
f:com.intellij.openapi.module.UnknownModuleType
- com.intellij.openapi.module.ModuleType
- <init>(java.lang.String,com.intellij.openapi.module.ModuleType):V
- createModuleBuilder():com.intellij.ide.util.projectWizard.ModuleBuilder
- createWizardSteps(com.intellij.ide.util.projectWizard.WizardContext,com.intellij.ide.util.projectWizard.ModuleBuilder,com.intellij.openapi.roots.ui.configuration.ModulesProvider):com.intellij.ide.util.projectWizard.ModuleWizardStep[]
- getDescription():java.lang.String
- getName():java.lang.String
- getNodeIcon(Z):javax.swing.Icon
c:com.intellij.openapi.module.WebModuleBuilder
- com.intellij.ide.util.projectWizard.ModuleBuilder
- sf:GROUP_NAME:java.lang.String
- sf:ICON:javax.swing.Icon
- pf:myGeneratorPeerLazyValue:com.intellij.openapi.util.NotNullLazyValue
- pf:myTemplate:com.intellij.ide.util.projectWizard.WebProjectTemplate
- <init>():V
- <init>(com.intellij.ide.util.projectWizard.WebProjectTemplate):V
- <init>(com.intellij.ide.util.projectWizard.WebProjectTemplate,com.intellij.openapi.util.NotNullLazyValue):V
- commitModule(com.intellij.openapi.project.Project,com.intellij.openapi.module.ModifiableModuleModel):com.intellij.openapi.module.Module
- getGroupName():java.lang.String
- getModuleType():com.intellij.openapi.module.ModuleType
- getNodeIcon():javax.swing.Icon
- isAvailable():Z
- isTemplateBased():Z
- modifySettingsStep(com.intellij.ide.util.projectWizard.SettingsStep):com.intellij.ide.util.projectWizard.ModuleWizardStep
- setupRootModel(com.intellij.openapi.roots.ModifiableRootModel):V
c:com.intellij.openapi.module.WebModuleType
- com.intellij.openapi.module.WebModuleTypeBase
- <init>():V
- createModuleBuilder():com.intellij.ide.util.projectWizard.ModuleBuilder
- createModuleBuilder(com.intellij.ide.util.projectWizard.WebProjectTemplate):com.intellij.ide.util.projectWizard.ModuleBuilder
a:com.intellij.openapi.module.WebModuleTypeBase
- com.intellij.openapi.module.ModuleType
- com.intellij.openapi.module.ModuleTypeWithWebFeatures
- sf:WEB_MODULE:java.lang.String
- <init>():V
- getDescription():java.lang.String
- s:getInstance():com.intellij.openapi.module.WebModuleTypeBase
- getName():java.lang.String
- getNodeIcon(Z):javax.swing.Icon
- hasWebFeatures(com.intellij.openapi.module.Module):Z
c:com.intellij.openapi.module.impl.ModuleConfigurationStateImpl
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.roots.ui.configuration.ModuleConfigurationState
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.ModulesProvider):V
- getCurrentRootModel():com.intellij.openapi.roots.ModuleRootModel
- getFacetsProvider():com.intellij.openapi.roots.ui.configuration.FacetsProvider
- getModifiableRootModel():com.intellij.openapi.roots.ModifiableRootModel
- getModulesProvider():com.intellij.openapi.roots.ui.configuration.ModulesProvider
- getProject():com.intellij.openapi.project.Project
c:com.intellij.openapi.module.impl.ModuleImpl
- com.intellij.openapi.Disposable$Parent
- com.intellij.openapi.components.ComponentManager
- com.intellij.openapi.module.Module
- com.intellij.openapi.ui.Queryable
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.util.messages.MessageBusOwner
- canStoreSettings():Z
- clearScopesCache():V
- p:debugString(Z):java.lang.String
- dispose():V
- pf:findConstructorAndInstantiateClass(java.lang.invoke.MethodHandles$Lookup,java.lang.Class):java.lang.Object
- p:getContainerDescriptor(com.intellij.ide.plugins.IdeaPluginDescriptorImpl):com.intellij.ide.plugins.ContainerDescriptor
- pf:getImlFilePointer():com.intellij.openapi.vfs.pointers.VirtualFilePointer
- getModuleContentScope():com.intellij.psi.search.GlobalSearchScope
- getModuleContentWithDependenciesScope():com.intellij.psi.search.GlobalSearchScope
- getModuleFile():com.intellij.openapi.vfs.VirtualFile
- getModuleNioFile():java.nio.file.Path
- getModuleProductionSourceScope():com.intellij.psi.search.GlobalSearchScope
- getModuleRuntimeScope(Z):com.intellij.psi.search.GlobalSearchScope
- getModuleScope():com.intellij.psi.search.GlobalSearchScope
- getModuleScope(Z):com.intellij.psi.search.GlobalSearchScope
- getModuleTestSourceScope():com.intellij.psi.search.GlobalSearchScope
- getModuleTestsWithDependentsScope():com.intellij.psi.search.GlobalSearchScope
- getModuleWithDependenciesAndLibrariesScope(Z):com.intellij.psi.search.GlobalSearchScope
- getModuleWithDependenciesScope():com.intellij.psi.search.GlobalSearchScope
- getModuleWithDependentsScope():com.intellij.psi.search.GlobalSearchScope
- getModuleWithLibrariesScope():com.intellij.psi.search.GlobalSearchScope
- getName():java.lang.String
- getOptionValue(java.lang.String):java.lang.String
- getProject():com.intellij.openapi.project.Project
- pf:getStore():com.intellij.openapi.components.impl.stores.IComponentStore
- getSupportedSignaturesOfLightServiceConstructors():java.util.List
- init():V
- isDisposed():Z
- isLoaded():Z
- markAsLoaded():V
- putInfo(java.util.Map):V
- rename(java.lang.String,Z):V
- pf:setImlFilePointer(com.intellij.openapi.vfs.pointers.VirtualFilePointer):V
- setOption(java.lang.String,java.lang.String):V
c:com.intellij.openapi.module.impl.ModuleTypeManagerImpl
- com.intellij.openapi.module.ModuleTypeManager
- <init>():V
- findByID(java.lang.String):com.intellij.openapi.module.ModuleType
- getDefaultModuleType():com.intellij.openapi.module.ModuleType
- getRegisteredTypes():java.util.List
- isClasspathProvider(com.intellij.openapi.module.ModuleType):Z
- registerModuleType(com.intellij.openapi.module.ModuleType):V
- registerModuleType(com.intellij.openapi.module.ModuleType,Z):V
- unregisterModuleType(com.intellij.openapi.module.ModuleType):V
f:com.intellij.openapi.options.colors.pages.ANSIColoredConsoleColorsPage
- com.intellij.openapi.options.colors.ColorSettingsPage
- com.intellij.psi.codeStyle.DisplayPrioritySortable
- com.intellij.ui.EditorCustomization
- <init>():V
- customize(com.intellij.openapi.editor.ex.EditorEx):V
- customizeColorScheme(com.intellij.openapi.editor.colors.EditorColorsScheme):com.intellij.openapi.editor.colors.EditorColorsScheme
- getAdditionalHighlightingTagToDescriptorMap():java.util.Map
- getAttributeDescriptors():com.intellij.openapi.options.colors.AttributesDescriptor[]
- getColorDescriptors():com.intellij.openapi.options.colors.ColorDescriptor[]
- getDemoText():java.lang.String
- getDisplayName():java.lang.String
- getHighlighter():com.intellij.openapi.fileTypes.SyntaxHighlighter
- getIcon():javax.swing.Icon
- getPriority():com.intellij.psi.codeStyle.DisplayPriority
f:com.intellij.openapi.options.colors.pages.CustomColorsPage
- com.intellij.openapi.options.colors.ColorSettingsPage
- com.intellij.psi.codeStyle.DisplayPrioritySortable
- <init>():V
- getAdditionalHighlightingTagToDescriptorMap():java.util.Map
- getAttributeDescriptors():com.intellij.openapi.options.colors.AttributesDescriptor[]
- getColorDescriptors():com.intellij.openapi.options.colors.ColorDescriptor[]
- getDemoText():java.lang.String
- getDisplayName():java.lang.String
- getHighlighter():com.intellij.openapi.fileTypes.SyntaxHighlighter
- getIcon():javax.swing.Icon
- getPriority():com.intellij.psi.codeStyle.DisplayPriority
f:com.intellij.openapi.options.colors.pages.DefaultLanguageColorsPage
- com.intellij.openapi.options.colors.ColorSettingsPage$PreviewCustomizer
- com.intellij.openapi.options.colors.RainbowColorSettingsPage
- com.intellij.psi.codeStyle.DisplayPrioritySortable
- <init>():V
- addCustomizations(com.intellij.openapi.editor.Editor,java.lang.String):com.intellij.openapi.util.TextRange
- getAdditionalHighlightingTagToDescriptorMap():java.util.Map
- getAdditionalInlineElementToDescriptorMap():java.util.Map
- getAttributeDescriptors():com.intellij.openapi.options.colors.AttributesDescriptor[]
- getColorDescriptors():com.intellij.openapi.options.colors.ColorDescriptor[]
- getCustomizationAt(com.intellij.openapi.editor.Editor,java.awt.Point):java.lang.String
- getDemoText():java.lang.String
- getDisplayName():java.lang.String
- getHighlighter():com.intellij.openapi.fileTypes.SyntaxHighlighter
- getIcon():javax.swing.Icon
- getLanguage():com.intellij.lang.Language
- getPreviewEditorCustomizer():com.intellij.openapi.options.colors.ColorSettingsPage$PreviewCustomizer
- getPriority():com.intellij.psi.codeStyle.DisplayPriority
- isRainbowType(com.intellij.openapi.editor.colors.TextAttributesKey):Z
- removeCustomizations(com.intellij.openapi.editor.Editor):V
com.intellij.openapi.paths.DynamicContextProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getOffset(com.intellij.psi.PsiElement,I,java.lang.String):I
c:com.intellij.openapi.paths.GenericDynamicContextProvider
- com.intellij.openapi.paths.DynamicContextProvider
- <init>():V
- getOffset(com.intellij.psi.PsiElement,I,java.lang.String):I
- p:isDynamic(com.intellij.psi.PsiElement):Z
f:com.intellij.openapi.paths.GlobalPathReferenceProvider
- com.intellij.openapi.paths.PathReferenceProvider
- <init>():V
- createReferences(com.intellij.psi.PsiElement,java.util.List,Z):Z
- createUrlReference(com.intellij.psi.PsiElement,java.lang.String,com.intellij.openapi.util.TextRange,java.util.List):Z
- getPathReference(java.lang.String,com.intellij.psi.PsiElement):com.intellij.openapi.paths.PathReference
- s:isWebReferenceUrl(java.lang.String):Z
- s:startsWithAllowedPrefix(java.lang.String):Z
a:com.intellij.openapi.paths.PathReferenceProviderBase
- com.intellij.openapi.paths.PathReferenceProvider
- <init>():V
- a:createReferences(com.intellij.psi.PsiElement,I,java.lang.String,java.util.List,Z):Z
- createReferences(com.intellij.psi.PsiElement,java.util.List,Z):Z
- s:getLastPosOfURL(I,java.lang.String):I
c:com.intellij.openapi.paths.StaticPathReferenceProvider
- com.intellij.openapi.paths.PathReferenceProviderBase
- <init>(com.intellij.openapi.fileTypes.FileType[]):V
- createReferences(com.intellij.psi.PsiElement,I,java.lang.String,java.util.List,Z):Z
- getPathReference(java.lang.String,com.intellij.psi.PsiElement):com.intellij.openapi.paths.PathReference
- setEndingSlashNotAllowed(Z):V
- setRelativePathsAllowed(Z):V
c:com.intellij.openapi.paths.WebReference
- com.intellij.psi.PsiReferenceBase
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.String):V
- <init>(com.intellij.psi.PsiElement,java.lang.String):V
- getUrl():java.lang.String
- isHttpRequestTarget():Z
- s:isWebReferenceWorthy(com.intellij.psi.PsiElement):Z
- resolve():com.intellij.psi.PsiElement
a:com.intellij.openapi.paths.WebReferencesAnnotatorBase
- com.intellij.lang.annotation.ExternalAnnotator
- psf:EMPTY_ARRAY:com.intellij.openapi.paths.WebReference[]
- <init>():V
- apply(com.intellij.psi.PsiFile,com.intellij.openapi.paths.WebReferencesAnnotatorBase$MyInfo[],com.intellij.lang.annotation.AnnotationHolder):V
- collectInformation(com.intellij.psi.PsiFile):com.intellij.openapi.paths.WebReferencesAnnotatorBase$MyInfo[]
- pa:collectWebReferences(com.intellij.psi.PsiFile):com.intellij.openapi.paths.WebReference[]
- doAnnotate(com.intellij.openapi.paths.WebReferencesAnnotatorBase$MyInfo[]):com.intellij.openapi.paths.WebReferencesAnnotatorBase$MyInfo[]
- pa:getErrorMessage(java.lang.String):java.lang.String
- pa:getHighlightDisplayLevel(com.intellij.psi.PsiElement):com.intellij.codeHighlighting.HighlightDisplayLevel
- p:getQuickFixes():com.intellij.codeInsight.intention.IntentionAction[]
- ps:lookForWebReference(com.intellij.psi.PsiElement):com.intellij.openapi.paths.WebReference
pf:com.intellij.openapi.paths.WebReferencesAnnotatorBase$MyInfo
a:com.intellij.openapi.projectRoots.impl.DependentSdkType
- com.intellij.openapi.projectRoots.SdkType
- <init>(java.lang.String):V
- p:checkDependency(com.intellij.openapi.projectRoots.SdkModel):Z
- ps:createSdkOfType(com.intellij.openapi.projectRoots.SdkModel,com.intellij.openapi.projectRoots.SdkType,com.intellij.util.Consumer):com.intellij.openapi.projectRoots.Sdk
- p:fixDependency(com.intellij.openapi.projectRoots.SdkModel,com.intellij.util.Consumer):com.intellij.openapi.projectRoots.Sdk
- a:getDependencyType():com.intellij.openapi.projectRoots.SdkType
- a:getUnsatisfiedDependencyMessage():java.lang.String
- pa:isValidDependency(com.intellij.openapi.projectRoots.Sdk):Z
- showCustomCreateUI(com.intellij.openapi.projectRoots.SdkModel,javax.swing.JComponent,com.intellij.openapi.projectRoots.Sdk,com.intellij.util.Consumer):V
- supportsCustomCreateUI():Z
com.intellij.openapi.projectRoots.impl.FixWithConsent
- a:giveConsent():V
- a:hasConsent():Z
c:com.intellij.openapi.projectRoots.impl.ProjectJdkTableImpl
- com.intellij.openapi.projectRoots.ProjectJdkTable
- sf:Companion:com.intellij.openapi.projectRoots.impl.ProjectJdkTableImpl$Companion
- <init>():V
- addJdk(com.intellij.openapi.projectRoots.Sdk):V
- createSdk(java.lang.String,com.intellij.openapi.projectRoots.SdkTypeId):com.intellij.openapi.projectRoots.Sdk
- findJdk(java.lang.String):com.intellij.openapi.projectRoots.Sdk
- findJdk(java.lang.String,java.lang.String):com.intellij.openapi.projectRoots.Sdk
- getAllJdks():com.intellij.openapi.projectRoots.Sdk[]
- getDefaultSdkType():com.intellij.openapi.projectRoots.SdkTypeId
- getSdkTypeByName(java.lang.String):com.intellij.openapi.projectRoots.SdkTypeId
- getSdksOfType(com.intellij.openapi.projectRoots.SdkTypeId):java.util.List
- removeJdk(com.intellij.openapi.projectRoots.Sdk):V
- saveOnDisk():V
- updateJdk(com.intellij.openapi.projectRoots.Sdk,com.intellij.openapi.projectRoots.Sdk):V
f:com.intellij.openapi.projectRoots.impl.ProjectJdkTableImpl$Companion
f:com.intellij.openapi.projectRoots.impl.SdkConfigurationUtil
- s:addSdk(com.intellij.openapi.projectRoots.Sdk):V
- s:configureDirectoryProjectSdk(com.intellij.openapi.project.Project,java.util.Comparator,com.intellij.openapi.projectRoots.SdkType[]):V
- s:createAndAddSDK(java.lang.String,com.intellij.openapi.projectRoots.SdkType):com.intellij.openapi.projectRoots.Sdk
- s:createIncompleteSDK(java.lang.String,com.intellij.openapi.projectRoots.SdkType):com.intellij.openapi.projectRoots.Sdk
- s:createSdk(com.intellij.openapi.project.Project,com.intellij.openapi.projectRoots.Sdk[],com.intellij.util.NullableConsumer,Z,com.intellij.openapi.projectRoots.SdkType[]):V
- s:createSdk(com.intellij.openapi.project.Project,com.intellij.openapi.projectRoots.Sdk[],com.intellij.util.NullableConsumer,com.intellij.openapi.projectRoots.SdkType[]):V
- s:createSdk(java.util.Collection,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.projectRoots.SdkType,com.intellij.openapi.projectRoots.SdkAdditionalData,java.lang.String):com.intellij.openapi.projectRoots.Sdk
- s:createSdk(java.util.Collection,java.lang.String,com.intellij.openapi.projectRoots.SdkType,com.intellij.openapi.projectRoots.SdkAdditionalData,java.lang.String):com.intellij.openapi.projectRoots.Sdk
- s:createUniqueSdkName(com.intellij.openapi.projectRoots.SdkType,java.lang.String,java.util.Collection):java.lang.String
- s:createUniqueSdkName(java.lang.String,java.util.Collection):java.lang.String
- s:filterExistingPaths(com.intellij.openapi.projectRoots.SdkType,java.util.Collection,com.intellij.openapi.projectRoots.Sdk[]):java.util.List
- s:findByPath(com.intellij.openapi.projectRoots.SdkType,com.intellij.openapi.projectRoots.Sdk[],java.lang.String):com.intellij.openapi.projectRoots.Sdk
- s:findOrCreateSdk(java.util.Comparator,com.intellij.openapi.projectRoots.SdkType[]):com.intellij.openapi.projectRoots.Sdk
- s:getSuggestedSdkRoot(com.intellij.openapi.projectRoots.SdkType):com.intellij.openapi.vfs.VirtualFile
- s:getSuggestedSdkRoot(com.intellij.openapi.projectRoots.SdkType,java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- s:removeSdk(com.intellij.openapi.projectRoots.Sdk):V
- s:selectSdkHome(com.intellij.openapi.projectRoots.SdkType,com.intellij.util.Consumer):V
- s:selectSdkHome(com.intellij.openapi.projectRoots.SdkType,java.awt.Component,java.nio.file.Path,com.intellij.util.Consumer):V
- s:selectSdkHomeForTests(com.intellij.openapi.projectRoots.SdkType,com.intellij.util.Consumer):Z
- s:setDirectoryProjectSdk(com.intellij.openapi.project.Project,com.intellij.openapi.projectRoots.Sdk):V
- s:setupSdk(com.intellij.openapi.projectRoots.Sdk[],com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.projectRoots.SdkType,Z,com.intellij.openapi.projectRoots.SdkAdditionalData,java.lang.String):com.intellij.openapi.projectRoots.Sdk
f:com.intellij.openapi.projectRoots.impl.SdkListCellRenderer
- com.intellij.ui.ColoredListCellRenderer
- <init>(java.lang.String):V
- <init>(java.lang.String,Z):V
com.intellij.openapi.projectRoots.impl.UnknownSdkBlockingCollector
- a:collectSdksBlocking():com.intellij.openapi.projectRoots.impl.UnknownSdkSnapshot
c:com.intellij.openapi.projectRoots.impl.UnknownSdkCollector
- com.intellij.openapi.projectRoots.impl.UnknownSdkBlockingCollector
- <init>(com.intellij.openapi.project.Project):V
- p:checkProjectSdk(com.intellij.openapi.project.Project):Z
- p:collectModulesToCheckSdk(com.intellij.openapi.project.Project):java.util.List
- collectSdksBlocking():com.intellij.openapi.projectRoots.impl.UnknownSdkSnapshot
- p:getContributors():java.util.List
com.intellij.openapi.projectRoots.impl.UnknownSdkContributor
- contributeKnownSdks(com.intellij.openapi.project.Project):java.util.List
- a:contributeUnknownSdks(com.intellij.openapi.project.Project):java.util.List
com.intellij.openapi.projectRoots.impl.UnknownSdkFix
- a:getConfigureActionHandler(com.intellij.openapi.project.Project):com.intellij.ui.EditorNotificationPanel$ActionHandler
- a:getConfigureActionText():java.lang.String
- a:getIntentionActionText():java.lang.String
- a:getNotificationText():java.lang.String
- a:getSdkTypeAndNameText():java.lang.String
- a:getSuggestedFixAction():com.intellij.openapi.projectRoots.impl.UnknownSdkFixAction
- a:isRelevantFor(com.intellij.openapi.project.Project):Z
- a:isRelevantFor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
com.intellij.openapi.projectRoots.impl.UnknownSdkFixAction
- a:addSuggestionListener(com.intellij.openapi.projectRoots.impl.UnknownSdkFixAction$Listener):V
- a:applySuggestionAsync(com.intellij.openapi.project.Project):V
- a:applySuggestionBlocking(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.projectRoots.Sdk
- chooseSdk():Z
- a:getActionDetailedText():java.lang.String
- a:getActionShortText():java.lang.String
- getActionTooltipText():java.lang.String
- getChoiceActionText():java.lang.String
- getRegisteredSdkPrototype():com.intellij.openapi.projectRoots.Sdk
- supportsSdkChoice():Z
com.intellij.openapi.projectRoots.impl.UnknownSdkFixAction$Listener
- java.util.EventListener
- a:onResolveCancelled():V
- a:onResolveFailed():V
- a:onSdkNameResolved(com.intellij.openapi.projectRoots.Sdk):V
- a:onSdkResolved(com.intellij.openapi.projectRoots.Sdk):V
f:com.intellij.openapi.projectRoots.impl.UnknownSdkSnapshot
- <init>(java.util.Set,java.util.List,java.util.List):V
- f:component1():java.util.Set
- f:component2():java.util.List
- f:component3():java.util.List
- f:copy(java.util.Set,java.util.List,java.util.List):com.intellij.openapi.projectRoots.impl.UnknownSdkSnapshot
- bs:copy$default(com.intellij.openapi.projectRoots.impl.UnknownSdkSnapshot,java.util.Set,java.util.List,java.util.List,I,java.lang.Object):com.intellij.openapi.projectRoots.impl.UnknownSdkSnapshot
- equals(java.lang.Object):Z
- f:getKnownSdks():java.util.List
- f:getResolvableSdks():java.util.List
- f:getTotallyUnknownSdks():java.util.Set
- hashCode():I
f:com.intellij.openapi.projectRoots.impl.UnknownSdkTracker
- <init>(com.intellij.openapi.project.Project):V
- applyAutoFixAndNotify(com.intellij.openapi.projectRoots.impl.UnknownSdkFixAction,com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.projectRoots.Sdk
- applyAutoFixesAndNotify(java.util.List,com.intellij.openapi.progress.ProgressIndicator):java.util.List
- collectUnknownSdks(com.intellij.openapi.projectRoots.impl.UnknownSdkBlockingCollector,com.intellij.openapi.progress.ProgressIndicator):java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.projectRoots.impl.UnknownSdkTracker
- isAutoFixAction(com.intellij.openapi.projectRoots.impl.UnknownSdkFixAction):Z
- updateUnknownSdks():V
com.intellij.openapi.projectRoots.impl.UnknownSdkTracker$ShowStatusCallback
- showEmptyStatus():V
- showInterruptedStatus():V
- a:showStatus(java.util.List,com.intellij.openapi.progress.ProgressIndicator):V
f:com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkAuto
- com.intellij.openapi.roots.ui.configuration.UnknownSdkResolver
- <init>():V
- createResolver(com.intellij.openapi.project.Project,com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.roots.ui.configuration.UnknownSdkResolver$UnknownSdkLookup
- f:createResolverImpl(com.intellij.openapi.project.Project,com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.roots.ui.configuration.UnknownSdkResolver$UnknownSdkLookup
- supportsResolution(com.intellij.openapi.projectRoots.SdkTypeId):Z
f:com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkListDownloader
- sf:Companion:com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkListDownloader$Companion
- <init>():V
- sf:getInstance():com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkListDownloader
f:com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkListDownloader$Companion
- f:getInstance():com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkListDownloader
e:com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkPackageType
- java.lang.Enum
- sf:Companion:com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkPackageType$Companion
- sf:TAR_GZ:com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkPackageType
- sf:ZIP:com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkPackageType
- s:getEntries():kotlin.enums.EnumEntries
- f:getType():java.lang.String
- a:openDecompressor(java.nio.file.Path):com.intellij.util.io.Decompressor
- s:valueOf(java.lang.String):com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkPackageType
- s:values():com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkPackageType[]
f:com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkPackageType$Companion
- f:findType(java.lang.String):com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkPackageType
com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkUpdateCheckContributor
- a:contributeJdks(com.intellij.openapi.project.Project):java.util.List
f:com.intellij.openapi.projectRoots.impl.jdkDownloader.RuntimeChooserMessages
- sf:INSTANCE:com.intellij.openapi.projectRoots.impl.jdkDownloader.RuntimeChooserMessages
- f:showErrorMessage(java.lang.String,javax.swing.JComponent):V
- bs:showErrorMessage$default(com.intellij.openapi.projectRoots.impl.jdkDownloader.RuntimeChooserMessages,java.lang.String,javax.swing.JComponent,I,java.lang.Object):V
- f:showRestartMessage(java.lang.String):V
f:com.intellij.openapi.projectRoots.impl.jdkDownloader.RuntimeChooserPaths
- <init>():V
- f:installCustomJdk(java.lang.String,kotlin.jvm.functions.Function1):V
- f:resetCustomJdk():V
f:com.intellij.openapi.projectRoots.impl.jdkDownloader.RuntimeChooserUtil
- sf:INSTANCE:com.intellij.openapi.projectRoots.impl.jdkDownloader.RuntimeChooserUtil
- f:showRuntimeChooserPopup():V
f:com.intellij.openapi.projectRoots.ui.Util
- <init>():V
- s:showSpecifyJavadocUrlDialog(javax.swing.JComponent):com.intellij.openapi.vfs.VirtualFile
- s:showSpecifyJavadocUrlDialog(javax.swing.JComponent,java.lang.String):com.intellij.openapi.vfs.VirtualFile
f:com.intellij.openapi.roots.impl.libraries.LibraryTypeServiceImpl
- com.intellij.openapi.roots.libraries.LibraryTypeService
- <init>():V
- createLibraryFromFiles(com.intellij.openapi.roots.libraries.ui.LibraryRootsComponentDescriptor,javax.swing.JComponent,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.libraries.LibraryType,com.intellij.openapi.project.Project):com.intellij.openapi.roots.libraries.NewLibraryConfiguration
- s:suggestLibraryName(java.util.List):java.lang.String
- s:suggestLibraryName(com.intellij.openapi.vfs.VirtualFile[]):java.lang.String
f:com.intellij.openapi.roots.impl.storage.ClasspathStorage
- <init>():V
- s:getProvider(java.lang.String):com.intellij.openapi.roots.impl.storage.ClasspathStorageProvider
- s:getStorageRootFromOptions(com.intellij.openapi.module.Module):java.lang.String
- s:modulePathChanged(com.intellij.openapi.module.Module):V
- s:setStorageType(com.intellij.openapi.roots.ModuleRootModel,java.lang.String):V
a:com.intellij.openapi.roots.libraries.LibraryDetectionManager
- <init>():V
- a:detectType(java.util.List):com.intellij.openapi.util.Pair
- s:getInstance():com.intellij.openapi.roots.libraries.LibraryDetectionManager
- a:processProperties(java.util.List,com.intellij.openapi.roots.libraries.LibraryDetectionManager$LibraryPropertiesProcessor):Z
com.intellij.openapi.roots.libraries.LibraryDetectionManager$LibraryPropertiesProcessor
- a:processProperties(com.intellij.openapi.roots.libraries.LibraryKind,com.intellij.openapi.roots.libraries.LibraryProperties):Z
a:com.intellij.openapi.roots.libraries.LibraryPresentationProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(com.intellij.openapi.roots.libraries.LibraryKind):V
- a:detect(java.util.List):com.intellij.openapi.roots.libraries.LibraryProperties
- getDescription(com.intellij.openapi.roots.libraries.LibraryProperties):java.lang.String
- getIcon():javax.swing.Icon
- getIcon(com.intellij.openapi.roots.libraries.LibraryProperties):javax.swing.Icon
- getKind():com.intellij.openapi.roots.libraries.LibraryKind
f:com.intellij.openapi.roots.libraries.LibraryRootType
- <init>(com.intellij.openapi.roots.OrderRootType,Z):V
- getType():com.intellij.openapi.roots.OrderRootType
- isJarDirectory():Z
a:com.intellij.openapi.roots.libraries.LibraryType
- com.intellij.openapi.roots.libraries.LibraryPresentationProvider
- sf:DEFAULT_EXTERNAL_ROOT_TYPES:com.intellij.openapi.roots.OrderRootType[]
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(com.intellij.openapi.roots.libraries.PersistentLibraryKind):V
- createLibraryRootsComponentDescriptor():com.intellij.openapi.roots.libraries.ui.LibraryRootsComponentDescriptor
- a:createNewLibrary(javax.swing.JComponent,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.roots.libraries.NewLibraryConfiguration
- a:createPropertiesEditor(com.intellij.openapi.roots.libraries.ui.LibraryEditorComponent):com.intellij.openapi.roots.libraries.ui.LibraryPropertiesEditor
- detect(java.util.List):com.intellij.openapi.roots.libraries.LibraryProperties
- s:findByKind(com.intellij.openapi.roots.libraries.LibraryKind):com.intellij.openapi.roots.libraries.LibraryType
- a:getCreateActionName():java.lang.String
- getExternalRootTypes():com.intellij.openapi.roots.OrderRootType[]
- getKind():com.intellij.openapi.roots.libraries.PersistentLibraryKind
- isSuitableModule(com.intellij.openapi.module.Module,com.intellij.openapi.roots.ui.configuration.FacetsProvider):Z
a:com.intellij.openapi.roots.libraries.LibraryTypeService
- <init>():V
- a:createLibraryFromFiles(com.intellij.openapi.roots.libraries.ui.LibraryRootsComponentDescriptor,javax.swing.JComponent,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.libraries.LibraryType,com.intellij.openapi.project.Project):com.intellij.openapi.roots.libraries.NewLibraryConfiguration
- s:getInstance():com.intellij.openapi.roots.libraries.LibraryTypeService
a:com.intellij.openapi.roots.libraries.NewLibraryConfiguration
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,com.intellij.openapi.roots.libraries.LibraryType,com.intellij.openapi.roots.libraries.LibraryProperties):V
- a:addRoots(com.intellij.openapi.roots.ui.configuration.libraryEditor.LibraryEditor):V
- getDefaultLibraryName():java.lang.String
- getLibraryType():com.intellij.openapi.roots.libraries.LibraryType
- getProperties():com.intellij.openapi.roots.libraries.LibraryProperties
a:com.intellij.openapi.roots.libraries.ui.AttachRootButtonDescriptor
- pf:myButtonText:java.lang.String
- p:<init>(com.intellij.openapi.roots.OrderRootType,java.lang.String):V
- p:<init>(com.intellij.openapi.roots.OrderRootType,javax.swing.Icon,java.lang.String):V
- addAsJarDirectories():Z
- getButtonText():java.lang.String
- getRootType():com.intellij.openapi.roots.OrderRootType
- getToolbarIcon():javax.swing.Icon
- scanForActualRoots(com.intellij.openapi.vfs.VirtualFile[],javax.swing.JComponent):com.intellij.openapi.vfs.VirtualFile[]
- a:selectFiles(javax.swing.JComponent,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.module.Module,com.intellij.openapi.roots.ui.configuration.libraryEditor.LibraryEditor):com.intellij.openapi.vfs.VirtualFile[]
c:com.intellij.openapi.roots.libraries.ui.DescendentBasedRootFilter
- com.intellij.openapi.roots.libraries.ui.RootFilter
- <init>(com.intellij.openapi.roots.OrderRootType,Z,java.lang.String,java.util.function.Predicate):V
- s:createFileTypeBasedFilter(com.intellij.openapi.roots.OrderRootType,Z,com.intellij.openapi.fileTypes.FileType,java.lang.String):com.intellij.openapi.roots.libraries.ui.DescendentBasedRootFilter
- isAccepted(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.progress.ProgressIndicator):Z
f:com.intellij.openapi.roots.libraries.ui.DetectedLibraryRoot
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.OrderRootType,Z):V
- <init>(com.intellij.openapi.vfs.VirtualFile,java.util.List):V
- getFile():com.intellij.openapi.vfs.VirtualFile
- getTypes():java.util.List
com.intellij.openapi.roots.libraries.ui.LibraryEditorComponent
- a:getBaseDirectory():com.intellij.openapi.vfs.VirtualFile
- a:getExistingRootDirectory():com.intellij.openapi.vfs.VirtualFile
- a:getLibraryEditor():com.intellij.openapi.roots.ui.configuration.libraryEditor.LibraryEditor
- a:getProject():com.intellij.openapi.project.Project
- a:getProperties():com.intellij.openapi.roots.libraries.LibraryProperties
- a:isNewLibrary():Z
- a:renameLibrary(java.lang.String):V
- a:updateRootsTree():V
a:com.intellij.openapi.roots.libraries.ui.LibraryPropertiesEditor
- com.intellij.openapi.options.UnnamedConfigurable
- <init>():V
- a:apply():V
- a:createComponent():javax.swing.JComponent
a:com.intellij.openapi.roots.libraries.ui.LibraryRootsComponentDescriptor
- <init>():V
- a:createAttachButtons():java.util.List
- createAttachFilesChooserDescriptor(java.lang.String):com.intellij.openapi.fileChooser.FileChooserDescriptor
- createRootRemovalHandler():com.intellij.openapi.roots.libraries.ui.LibraryRootsComponentDescriptor$RootRemovalHandler
- getAttachFilesActionName():java.lang.String
- a:getRootDetectors():java.util.List
- a:getRootTypePresentation(com.intellij.openapi.roots.OrderRootType):com.intellij.openapi.roots.libraries.ui.OrderRootTypePresentation
- getRootTypes():com.intellij.openapi.roots.OrderRootType[]
- getRootsDetector():com.intellij.openapi.roots.libraries.ui.LibraryRootsDetector
com.intellij.openapi.roots.libraries.ui.LibraryRootsComponentDescriptor$RootRemovalHandler
- a:onRootRemoved(java.lang.String,com.intellij.openapi.roots.OrderRootType,com.intellij.openapi.roots.ui.configuration.libraryEditor.LibraryEditor):V
a:com.intellij.openapi.roots.libraries.ui.LibraryRootsDetector
- <init>():V
- a:detectRoots(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.progress.ProgressIndicator):java.util.Collection
- a:getRootTypeName(com.intellij.openapi.roots.libraries.LibraryRootType):java.lang.String
f:com.intellij.openapi.roots.libraries.ui.OrderRoot
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.OrderRootType):V
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.OrderRootType,Z):V
- getFile():com.intellij.openapi.vfs.VirtualFile
- getType():com.intellij.openapi.roots.OrderRootType
- isJarDirectory():Z
f:com.intellij.openapi.roots.libraries.ui.OrderRootTypePresentation
- <init>(java.lang.String,javax.swing.Icon):V
- getIcon():javax.swing.Icon
- getNodeText():java.lang.String
a:com.intellij.openapi.roots.libraries.ui.RootDetector
- p:<init>(com.intellij.openapi.roots.OrderRootType,Z,java.lang.String):V
- a:detectRoots(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.progress.ProgressIndicator):java.util.Collection
- getPresentableRootTypeName():java.lang.String
- getRootType():com.intellij.openapi.roots.OrderRootType
- isJarDirectory():Z
a:com.intellij.openapi.roots.libraries.ui.RootFilter
- com.intellij.openapi.roots.libraries.ui.RootDetector
- <init>(com.intellij.openapi.roots.OrderRootType,Z,java.lang.String):V
- detectRoots(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.progress.ProgressIndicator):java.util.Collection
- a:isAccepted(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.progress.ProgressIndicator):Z
c:com.intellij.openapi.roots.libraries.ui.impl.LibraryRootsDetectorImpl
- com.intellij.openapi.roots.libraries.ui.LibraryRootsDetector
- <init>(java.util.List):V
- detectRoots(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.progress.ProgressIndicator):java.util.Collection
- getRootTypeName(com.intellij.openapi.roots.libraries.LibraryRootType):java.lang.String
f:com.intellij.openapi.roots.libraries.ui.impl.RootDetectionUtil
- s:detectRoots(java.util.Collection,java.awt.Component,com.intellij.openapi.project.Project,com.intellij.openapi.roots.libraries.ui.LibraryRootsComponentDescriptor):java.util.List
- s:detectRoots(java.util.Collection,java.awt.Component,com.intellij.openapi.project.Project,com.intellij.openapi.roots.libraries.ui.LibraryRootsDetector,com.intellij.openapi.roots.OrderRootType[]):java.util.List
c:com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel
- javax.swing.JPanel
- javax.swing.Scrollable
- <init>():V
- <init>(java.awt.LayoutManager):V
- addNotify():V
- getPreferredScrollableViewportSize():java.awt.Dimension
- getScrollableBlockIncrement(java.awt.Rectangle,I,I):I
- getScrollableTracksViewportHeight():Z
- getScrollableTracksViewportWidth():Z
- getScrollableUnitIncrement(java.awt.Rectangle,I,I):I
a:com.intellij.openapi.roots.ui.componentsList.layout.Orientation
- s:HORIZONTAL:com.intellij.openapi.roots.ui.componentsList.layout.Orientation
- s:VERTICAL:com.intellij.openapi.roots.ui.componentsList.layout.Orientation
- <init>():V
- a:advance(java.awt.Point,I,I):V
- a:expandInline(java.awt.Dimension,java.awt.Dimension):V
- a:extend(java.awt.Dimension,I):V
- a:getContrary():com.intellij.openapi.roots.ui.componentsList.layout.Orientation
- a:getExtent(java.awt.Container):I
- a:getExtent(java.awt.Insets):I
- getInnerExtent(java.awt.Container):I
- a:isVertical():Z
f:com.intellij.openapi.roots.ui.componentsList.layout.VerticalStackLayout
- java.awt.LayoutManager2
- <init>():V
- addLayoutComponent(java.awt.Component,java.lang.Object):V
- addLayoutComponent(java.lang.String,java.awt.Component):V
- getLayoutAlignmentX(java.awt.Container):F
- getLayoutAlignmentY(java.awt.Container):F
- invalidateLayout(java.awt.Container):V
- layoutContainer(java.awt.Container):V
- maximumLayoutSize(java.awt.Container):java.awt.Dimension
- minimumLayoutSize(java.awt.Container):java.awt.Dimension
- preferredLayoutSize(java.awt.Container):java.awt.Dimension
- removeLayoutComponent(java.awt.Component):V
c:com.intellij.openapi.roots.ui.configuration.ChooseModulesDialog
- com.intellij.ide.util.ChooseElementsDialog
- <init>(com.intellij.openapi.project.Project,java.util.List,java.lang.String,java.lang.String):V
- <init>(java.awt.Component,java.util.List,java.lang.String):V
- <init>(java.awt.Component,java.util.List,java.lang.String,java.lang.String):V
- p:getItemIcon(com.intellij.openapi.module.Module):javax.swing.Icon
- p:getItemText(com.intellij.openapi.module.Module):java.lang.String
- isOKActionEnabled():Z
- setSingleSelectionMode():V
c:com.intellij.openapi.roots.ui.configuration.CommonContentEntriesEditor
- com.intellij.openapi.roots.ui.configuration.ModuleElementsEditor
- sf:NAME:java.lang.String
- p:myEditorsPanel:javax.swing.JPanel
- pf:myEntryToEditorMap:java.util.Map
- p:myRootTreeEditor:com.intellij.openapi.roots.ui.configuration.ContentEntryTreeEditor
- <init>(java.lang.String,com.intellij.openapi.roots.ui.configuration.ModuleConfigurationState,Z,org.jetbrains.jps.model.module.JpsModuleSourceRootType[]):V
- <init>(java.lang.String,com.intellij.openapi.roots.ui.configuration.ModuleConfigurationState,org.jetbrains.jps.model.module.JpsModuleSourceRootType[]):V
- p:addAdditionalSettingsToPanel(javax.swing.JPanel):V
- p:addContentEntries(com.intellij.openapi.vfs.VirtualFile[]):java.util.List
- p:addContentEntryPanel(java.lang.String):V
- p:addContentEntryPanels(com.intellij.openapi.roots.ContentEntry[]):V
- p:createBottomControl(com.intellij.openapi.module.Module):javax.swing.JPanel
- createComponentImpl():javax.swing.JPanel
- p:createContentEntryEditor(java.lang.String):com.intellij.openapi.roots.ui.configuration.ContentEntryEditor
- p:createContentEntryTreeEditor(com.intellij.openapi.project.Project):com.intellij.openapi.roots.ui.configuration.ContentEntryTreeEditor
- disposeUIResources():V
- getDisplayName():java.lang.String
- pf:getEditHandlers():java.util.List
- getHelpTopic():java.lang.String
- p:getModel():com.intellij.openapi.roots.ModifiableRootModel
- p:getModule():com.intellij.openapi.module.Module
- s:getName():java.lang.String
- moduleStateChanged():V
a:com.intellij.openapi.roots.ui.configuration.ContentEntryEditor
- com.intellij.openapi.roots.ui.configuration.ContentRootPanel$ActionCallback
- p:myEventDispatcher:com.intellij.util.EventDispatcher
- <init>(java.lang.String,java.util.List):V
- addContentEntryEditorListener(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor$ContentEntryEditorListener):V
- addExcludeFolder(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.roots.ExcludeFolder
- addSourceFolder(com.intellij.openapi.vfs.VirtualFile,org.jetbrains.jps.model.module.JpsModuleSourceRootType,org.jetbrains.jps.model.JpsElement):com.intellij.openapi.roots.SourceFolder
- addSourceFolder(com.intellij.openapi.vfs.VirtualFile,Z,java.lang.String):com.intellij.openapi.roots.SourceFolder
- p:createContentRootPane():com.intellij.openapi.roots.ui.configuration.ContentRootPanel
- deleteContentEntry():V
- deleteContentFolder(com.intellij.openapi.roots.ContentEntry,com.intellij.openapi.roots.ui.configuration.ContentFolderRef):V
- p:doAddExcludeFolder(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.roots.ExcludeFolder
- p:doAddSourceFolder(com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.roots.SourceFolder
- p:doRemoveExcludeFolder(java.lang.String):V
- p:doRemoveSourceFolder(com.intellij.openapi.roots.SourceFolder):V
- getComponent():javax.swing.JComponent
- p:getContentEntry():com.intellij.openapi.roots.ContentEntry
- getContentEntryUrl():java.lang.String
- pf:getEditHandlers():java.util.List
- s:getEntryExcludedUrls(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ContentEntry):java.util.Set
- pa:getModel():com.intellij.openapi.roots.ModifiableRootModel
- getRootType(com.intellij.openapi.vfs.VirtualFile):org.jetbrains.jps.model.module.JpsModuleSourceRootType
- getSourceFolder(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.roots.SourceFolder
- initUI():V
- s:isExcludedOrUnderExcludedDirectory(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ContentEntry,com.intellij.openapi.vfs.VirtualFile):Z
- s:isExcludedOrUnderExcludedDirectory(com.intellij.openapi.roots.ContentEntry,java.util.Set,com.intellij.openapi.vfs.VirtualFile):Z
- isExcludedOrUnderExcludedDirectory(com.intellij.openapi.vfs.VirtualFile):Z
- navigateFolder(com.intellij.openapi.roots.ContentEntry,com.intellij.openapi.roots.ui.configuration.ContentFolderRef):V
- onSourceRootPropertiesChanged(com.intellij.openapi.roots.SourceFolder):V
- removeContentEntryEditorListener(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor$ContentEntryEditorListener):V
- removeExcludeFolder(java.lang.String):V
- removeSourceFolder(com.intellij.openapi.roots.SourceFolder):V
- setSelected(Z):V
- update():V
com.intellij.openapi.roots.ui.configuration.ContentEntryEditor$ContentEntryEditorListener
- java.util.EventListener
- a:beforeEntryDeleted(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor):V
- a:editingStarted(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor):V
- a:folderExcluded(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor,com.intellij.openapi.vfs.VirtualFile):V
- a:folderIncluded(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor,java.lang.String):V
- a:navigationRequested(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor,com.intellij.openapi.vfs.VirtualFile):V
- a:sourceFolderAdded(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor,com.intellij.openapi.roots.SourceFolder):V
- a:sourceFolderRemoved(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor,com.intellij.openapi.vfs.VirtualFile):V
- a:sourceRootPropertiesChanged(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor,com.intellij.openapi.roots.SourceFolder):V
c:com.intellij.openapi.roots.ui.configuration.ContentEntryTreeCellRenderer
- com.intellij.ide.util.treeView.NodeRenderer
- pf:myTreeEditor:com.intellij.openapi.roots.ui.configuration.ContentEntryTreeEditor
- <init>(com.intellij.openapi.roots.ui.configuration.ContentEntryTreeEditor,com.intellij.openapi.roots.ContentEntry,java.util.List):V
- customizeCellRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- p:updateIcon(com.intellij.openapi.roots.ContentEntry,com.intellij.openapi.vfs.VirtualFile,javax.swing.Icon):javax.swing.Icon
c:com.intellij.openapi.roots.ui.configuration.ContentEntryTreeEditor
- pf:myEditingActionsGroup:com.intellij.openapi.actionSystem.DefaultActionGroup
- pf:myTree:com.intellij.ui.treeStructure.Tree
- <init>(com.intellij.openapi.project.Project,java.util.List):V
- createComponent():javax.swing.JComponent
- p:createEditingActions():V
- p:getContentEntryCellRenderer(com.intellij.openapi.roots.ContentEntry):javax.swing.tree.TreeCellRenderer
- getContentEntryEditor():com.intellij.openapi.roots.ui.configuration.ContentEntryEditor
- p:getEditHandlers():java.util.List
- getEditingActionsGroup():com.intellij.openapi.actionSystem.DefaultActionGroup
- getProject():com.intellij.openapi.project.Project
- requestFocus():V
- select(com.intellij.openapi.vfs.VirtualFile):V
- setContentEntryEditor(com.intellij.openapi.roots.ui.configuration.ContentEntryEditor):V
- p:setupExcludedAction():V
- update():V
a:com.intellij.openapi.roots.ui.configuration.ContentRootPanel
- javax.swing.JPanel
- pf:myCallback:com.intellij.openapi.roots.ui.configuration.ContentRootPanel$ActionCallback
- <init>(com.intellij.openapi.roots.ui.configuration.ContentRootPanel$ActionCallback,java.util.List):V
- p:addFolderGroupComponents():V
- p:createFolderGroupComponent(java.lang.String,java.util.List,java.awt.Color,com.intellij.openapi.roots.ui.configuration.ModuleSourceRootEditHandler):javax.swing.JComponent
- p:createRootPropertiesEditor(com.intellij.openapi.roots.ui.configuration.ModuleSourceRootEditHandler,com.intellij.openapi.roots.SourceFolder):javax.swing.JComponent
- pa:getContentEntry():com.intellij.openapi.roots.ContentEntry
- initUI():V
- isExcludedOrUnderExcludedDirectory(com.intellij.openapi.vfs.VirtualFile):Z
- setSelected(Z):V
- ps:toRelativeDisplayPath(java.lang.String,java.lang.String):java.lang.String
com.intellij.openapi.roots.ui.configuration.ContentRootPanel$ActionCallback
- a:deleteContentEntry():V
- a:deleteContentFolder(com.intellij.openapi.roots.ContentEntry,com.intellij.openapi.roots.ui.configuration.ContentFolderRef):V
- a:navigateFolder(com.intellij.openapi.roots.ContentEntry,com.intellij.openapi.roots.ui.configuration.ContentFolderRef):V
- a:onSourceRootPropertiesChanged(com.intellij.openapi.roots.SourceFolder):V
f:com.intellij.openapi.roots.ui.configuration.ExternalContentFolderRef
- <init>(com.intellij.openapi.vfs.pointers.VirtualFilePointer):V
- getContentFolder():com.intellij.openapi.roots.ContentFolder
- getFile():com.intellij.openapi.vfs.VirtualFile
- getUrl():java.lang.String
f:com.intellij.openapi.roots.ui.configuration.JavaModuleSourceRootEditHandler
- com.intellij.openapi.roots.ui.configuration.ModuleSourceRootEditHandler
- <init>():V
- getFolderUnderRootIcon():javax.swing.Icon
- getMarkRootShortcutSet():com.intellij.openapi.actionSystem.CustomShortcutSet
- getRootIcon():javax.swing.Icon
- getRootTypeName():java.lang.String
- getRootsGroupColor():java.awt.Color
- getRootsGroupTitle():java.lang.String
- getUnmarkRootButtonText():java.lang.String
f:com.intellij.openapi.roots.ui.configuration.JavaTestSourceRootEditHandler
- com.intellij.openapi.roots.ui.configuration.ModuleSourceRootEditHandler
- <init>():V
- getFolderUnderRootIcon():javax.swing.Icon
- getMarkRootButtonText():java.lang.String
- getMarkRootShortcutSet():com.intellij.openapi.actionSystem.CustomShortcutSet
- getRootIcon():javax.swing.Icon
- getRootTypeName():java.lang.String
- getRootsGroupColor():java.awt.Color
- getRootsGroupTitle():java.lang.String
- getUnmarkRootButtonText():java.lang.String
a:com.intellij.openapi.roots.ui.configuration.ModuleElementsEditor
- com.intellij.openapi.module.ModuleConfigurationEditor
- p:myComponent:javax.swing.JComponent
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.roots.ui.configuration.ModuleConfigurationState):V
- addListener(com.intellij.openapi.roots.ui.configuration.ModuleElementsEditor$ModuleElementsEditorListener):V
- apply():V
- canApply():V
- f:createComponent():javax.swing.JComponent
- pa:createComponentImpl():javax.swing.JComponent
- disposeUIResources():V
- p:fireConfigurationChanged():V
- getComponent():javax.swing.JComponent
- p:getModel():com.intellij.openapi.roots.ModifiableRootModel
- p:getState():com.intellij.openapi.roots.ui.configuration.ModuleConfigurationState
- isModified():Z
- moduleCompileOutputChanged(java.lang.String,java.lang.String):V
- p:registerDisposable(com.intellij.openapi.Disposable):V
com.intellij.openapi.roots.ui.configuration.ModuleElementsEditor$ModuleElementsEditorListener
- java.util.EventListener
- a:configurationChanged():V
a:com.intellij.openapi.roots.ui.configuration.ModuleSourceRootEditHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(org.jetbrains.jps.model.module.JpsModuleSourceRootType):V
- createPropertiesEditor(com.intellij.openapi.roots.SourceFolder,javax.swing.JComponent,com.intellij.openapi.roots.ui.configuration.ContentRootPanel$ActionCallback):javax.swing.JComponent
- s:getEditHandler(org.jetbrains.jps.model.module.JpsModuleSourceRootType):com.intellij.openapi.roots.ui.configuration.ModuleSourceRootEditHandler
- a:getFolderUnderRootIcon():javax.swing.Icon
- getFullRootTypeName():java.lang.String
- getMarkRootButtonText():java.lang.String
- a:getMarkRootShortcutSet():com.intellij.openapi.actionSystem.CustomShortcutSet
- getPropertiesString(org.jetbrains.jps.model.JpsElement):java.lang.String
- getRootFileLayerIcon():javax.swing.Icon
- a:getRootIcon():javax.swing.Icon
- getRootIcon(org.jetbrains.jps.model.JpsElement):javax.swing.Icon
- f:getRootType():org.jetbrains.jps.model.module.JpsModuleSourceRootType
- a:getRootTypeName():java.lang.String
- a:getRootsGroupColor():java.awt.Color
- a:getRootsGroupTitle():java.lang.String
- a:getUnmarkRootButtonText():java.lang.String
f:com.intellij.openapi.roots.ui.configuration.ModulesAlphaComparator
- java.util.Comparator
- sf:INSTANCE:com.intellij.openapi.roots.ui.configuration.ModulesAlphaComparator
- <init>():V
- compare(com.intellij.openapi.module.Module,com.intellij.openapi.module.Module):I
c:com.intellij.openapi.roots.ui.configuration.ModulesCombobox
- com.intellij.application.options.ModulesComboBox
- <init>():V
f:com.intellij.openapi.roots.ui.configuration.PlatformContentEntriesConfigurable
- com.intellij.openapi.options.Configurable
- <init>(com.intellij.openapi.module.Module,org.jetbrains.jps.model.module.JpsModuleSourceRootType[]):V
- apply():V
- createComponent():javax.swing.JComponent
- disposeUIResources():V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- isModified():Z
- reset():V
f:com.intellij.openapi.roots.ui.configuration.SdkComboBox
- com.intellij.openapi.roots.ui.configuration.SdkComboBoxBase
- <init>(com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel):V
- f:getModel():com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- getSelectedItem():com.intellij.openapi.roots.ui.configuration.SdkListItem
- f:getSelectedSdk():com.intellij.openapi.projectRoots.Sdk
- setSelectedItem(java.lang.Object):V
- f:setSelectedSdk(com.intellij.openapi.projectRoots.Sdk):V
- f:setSelectedSdk(java.lang.String):V
a:com.intellij.openapi.roots.ui.configuration.SdkComboBoxBase
- com.intellij.openapi.ui.ComboBox
- pf:myModel:com.intellij.openapi.roots.ui.configuration.SdkListModelBuilder
- p:<init>(com.intellij.openapi.roots.ui.configuration.SdkListModelBuilder):V
- addItem(java.lang.Object):V
- addSdkReferenceItem(com.intellij.openapi.projectRoots.SdkType,java.lang.String,java.lang.String,Z):com.intellij.openapi.roots.ui.configuration.SdkListItem
- insertItemAt(java.lang.Object,I):V
- pa:onModelUpdated(com.intellij.openapi.roots.ui.configuration.SdkListModel):V
- reloadModel():V
- removeAllItems():V
- removeItem(java.lang.Object):V
- removeItemAt(I):V
- setInvalidJdk(java.lang.String):V
- showInvalidSdkItem(java.lang.String):com.intellij.openapi.roots.ui.configuration.SdkListItem
- showNoneSdkItem():com.intellij.openapi.roots.ui.configuration.SdkListItem
- showProjectSdkItem():com.intellij.openapi.roots.ui.configuration.SdkListItem
f:com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- com.intellij.openapi.ui.ComboBoxPopupState
- javax.swing.ComboBoxModel
- javax.swing.ListModel
- sf:Companion:com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel$Companion
- addListDataListener(javax.swing.event.ListDataListener):V
- f:copyAndSetListModel(com.intellij.openapi.roots.ui.configuration.SdkListModel):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createProjectJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createProjectJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createProjectJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createProjectJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createSdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createSdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createSdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- sf:createSdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- getElementAt(I):com.intellij.openapi.roots.ui.configuration.SdkListItem
- f:getListModel():com.intellij.openapi.roots.ui.configuration.SdkListModel
- f:getModelBuilder():com.intellij.openapi.roots.ui.configuration.SdkListModelBuilder
- f:getProject():com.intellij.openapi.project.Project
- f:getSdksModel():com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel
- getSelectedItem():com.intellij.openapi.roots.ui.configuration.SdkListItem
- getSize():I
- hasSubstep(com.intellij.openapi.roots.ui.configuration.SdkListItem):Z
- onChosen(com.intellij.openapi.roots.ui.configuration.SdkListItem):javax.swing.ListModel
- removeListDataListener(javax.swing.event.ListDataListener):V
- setSelectedItem(java.lang.Object):V
f:com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel$Companion
- f:createJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- bs:createJdkComboBoxModel$default(com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel$Companion,com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate,I,java.lang.Object):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createProjectJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createProjectJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createProjectJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createProjectJdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- bs:createProjectJdkComboBoxModel$default(com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel$Companion,com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate,I,java.lang.Object):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createSdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createSdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createSdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- f:createSdkComboBoxModel(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
- bs:createSdkComboBoxModel$default(com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel$Companion,com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate,I,java.lang.Object):com.intellij.openapi.roots.ui.configuration.SdkComboBoxModel
c:com.intellij.openapi.roots.ui.configuration.SdkDetector
- <init>():V
- detectSdks(com.intellij.openapi.project.Project,com.intellij.openapi.projectRoots.SdkType,com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.roots.ui.configuration.SdkDetector$DetectedSdkListener):V
- detectSdks(com.intellij.openapi.projectRoots.SdkType,com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.roots.ui.configuration.SdkDetector$DetectedSdkListener):V
- getDetectedSdksWithUpdate(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,com.intellij.openapi.application.ModalityState,com.intellij.openapi.roots.ui.configuration.SdkDetector$DetectedSdkListener):V
- s:getInstance():com.intellij.openapi.roots.ui.configuration.SdkDetector
com.intellij.openapi.roots.ui.configuration.SdkDetector$DetectedSdkListener
- onSdkDetected(com.intellij.openapi.projectRoots.SdkType,com.intellij.openapi.projectRoots.SdkType$SdkEntry):V
- a:onSdkDetected(com.intellij.openapi.projectRoots.SdkType,java.lang.String,java.lang.String):V
- onSearchCompleted():V
- onSearchStarted():V
a:com.intellij.openapi.roots.ui.configuration.SdkListItem
f:com.intellij.openapi.roots.ui.configuration.SdkListItem$ActionItem
- com.intellij.openapi.roots.ui.configuration.SdkListItem
- f:action:com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel$NewSdkAction
- f:group:com.intellij.openapi.roots.ui.configuration.SdkListItem$GroupItem
- f:role:com.intellij.openapi.roots.ui.configuration.SdkListItem$ActionRole
e:com.intellij.openapi.roots.ui.configuration.SdkListItem$ActionRole
- java.lang.Enum
- sf:ADD:com.intellij.openapi.roots.ui.configuration.SdkListItem$ActionRole
- sf:DOWNLOAD:com.intellij.openapi.roots.ui.configuration.SdkListItem$ActionRole
- s:valueOf(java.lang.String):com.intellij.openapi.roots.ui.configuration.SdkListItem$ActionRole
- s:values():com.intellij.openapi.roots.ui.configuration.SdkListItem$ActionRole[]
f:com.intellij.openapi.roots.ui.configuration.SdkListItem$GroupItem
- com.intellij.openapi.roots.ui.configuration.SdkListItem
- f:caption:java.lang.String
- f:icon:javax.swing.Icon
- f:subItems:java.util.List
f:com.intellij.openapi.roots.ui.configuration.SdkListItem$InvalidSdkItem
- com.intellij.openapi.roots.ui.configuration.SdkListItem
- f:sdkName:java.lang.String
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.openapi.roots.ui.configuration.SdkListItem$NoneSdkItem
- com.intellij.openapi.roots.ui.configuration.SdkListItem
- <init>():V
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.openapi.roots.ui.configuration.SdkListItem$ProjectSdkItem
- com.intellij.openapi.roots.ui.configuration.SdkListItem
- <init>():V
- equals(java.lang.Object):Z
- hashCode():I
a:com.intellij.openapi.roots.ui.configuration.SdkListItem$SdkItem
- com.intellij.openapi.roots.ui.configuration.SdkListItem
- f:sdk:com.intellij.openapi.projectRoots.Sdk
- f:equals(java.lang.Object):Z
- f:hashCode():I
f:com.intellij.openapi.roots.ui.configuration.SdkListItem$SdkReferenceItem
- com.intellij.openapi.roots.ui.configuration.SdkListItem
- f:hasValidPath:Z
- f:name:java.lang.String
- f:sdkType:com.intellij.openapi.projectRoots.SdkType
- f:versionString:java.lang.String
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.openapi.roots.ui.configuration.SdkListItem$SuggestedItem
- com.intellij.openapi.roots.ui.configuration.SdkListItem
- f:homePath:java.lang.String
- f:isSymlink:java.lang.Boolean
- f:sdkType:com.intellij.openapi.projectRoots.SdkType
- f:version:java.lang.String
f:com.intellij.openapi.roots.ui.configuration.SdkListModel
- javax.swing.AbstractListModel
- com.intellij.openapi.ui.ComboBoxPopupState
- s:emptyModel():com.intellij.openapi.roots.ui.configuration.SdkListModel
- findNoneSdkItem():com.intellij.openapi.roots.ui.configuration.SdkListItem
- findProjectSdkItem():com.intellij.openapi.roots.ui.configuration.SdkListItem
- findSdkItem(com.intellij.openapi.projectRoots.Sdk):com.intellij.openapi.roots.ui.configuration.SdkListItem$SdkItem
- findSdkItem(java.lang.String):com.intellij.openapi.roots.ui.configuration.SdkListItem$SdkItem
- getElementAt(I):com.intellij.openapi.roots.ui.configuration.SdkListItem
- getItems():java.util.List
- getSeparatorTextAbove(com.intellij.openapi.roots.ui.configuration.SdkListItem):java.lang.String
- getSize():I
- hasSubstep(com.intellij.openapi.roots.ui.configuration.SdkListItem):Z
- isSearching():Z
- onChosen(com.intellij.openapi.roots.ui.configuration.SdkListItem):com.intellij.openapi.roots.ui.configuration.SdkListModel
f:com.intellij.openapi.roots.ui.configuration.SdkListModelBuilder
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,com.intellij.openapi.util.Condition,com.intellij.openapi.util.Condition,com.intellij.openapi.util.Condition):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Predicate):V
- addModelListener(com.intellij.openapi.roots.ui.configuration.SdkListModelBuilder$ModelListener):V
- addSdkReferenceItem(com.intellij.openapi.projectRoots.SdkType,java.lang.String,java.lang.String,Z):com.intellij.openapi.roots.ui.configuration.SdkListItem$SdkReferenceItem
- buildModel():com.intellij.openapi.roots.ui.configuration.SdkListModel
- detectItems(javax.swing.JComponent,com.intellij.openapi.Disposable):V
- executeAction(javax.swing.JComponent,com.intellij.openapi.roots.ui.configuration.SdkListItem,com.intellij.util.Consumer):Z
- processSelectedElement(javax.swing.JComponent,com.intellij.openapi.roots.ui.configuration.SdkListItem,com.intellij.util.Consumer,com.intellij.util.Consumer):V
- reloadActions():V
- reloadSdks():V
- removeListener(com.intellij.openapi.roots.ui.configuration.SdkListModelBuilder$ModelListener):V
- removeSdkReferenceItem(com.intellij.openapi.roots.ui.configuration.SdkListItem$SdkReferenceItem):V
- showInvalidSdkItem(java.lang.String):com.intellij.openapi.roots.ui.configuration.SdkListItem
- showNoneSdkItem():com.intellij.openapi.roots.ui.configuration.SdkListItem
- showProjectSdkItem():com.intellij.openapi.roots.ui.configuration.SdkListItem
com.intellij.openapi.roots.ui.configuration.SdkListModelBuilder$ModelListener
- java.util.EventListener
- syncModel(com.intellij.openapi.roots.ui.configuration.SdkListModel):V
c:com.intellij.openapi.roots.ui.configuration.SdkListPresenter
- com.intellij.ui.ColoredListCellRenderer
- <init>(com.intellij.util.Producer):V
- s:create(com.intellij.openapi.ui.ComboBox,java.util.function.Supplier,java.util.function.Function):javax.swing.ListCellRenderer
- p:customizeCellRenderer(javax.swing.JList,com.intellij.openapi.roots.ui.configuration.SdkListItem,I,Z,Z):V
- forType(java.util.function.Function):javax.swing.ListCellRenderer
- getAccessibleContext():javax.accessibility.AccessibleContext
- getListCellRendererComponent(javax.swing.JList,com.intellij.openapi.roots.ui.configuration.SdkListItem,I,Z,Z):java.awt.Component
- s:presentDetectedSdkPath(java.lang.String):java.lang.String
- s:presentDetectedSdkPath(java.lang.String,I,I):java.lang.String
com.intellij.openapi.roots.ui.configuration.SdkLookup
- sf:Companion:com.intellij.openapi.roots.ui.configuration.SdkLookup$Companion
- a:createBuilder():com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- s:getInstance():com.intellij.openapi.roots.ui.configuration.SdkLookup
- a:lookup(com.intellij.openapi.roots.ui.configuration.SdkLookupParameters):V
- a:lookupBlocking(com.intellij.openapi.roots.ui.configuration.SdkLookupParameters):V
- s:newLookupBuilder():com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
f:com.intellij.openapi.roots.ui.configuration.SdkLookup$Companion
- f:getInstance():com.intellij.openapi.roots.ui.configuration.SdkLookup
- f:newLookupBuilder():com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:executeLookup():V
- a:onBeforeSdkSuggestionStarted(kotlin.jvm.functions.Function0):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:onDownloadableSdkSuggested(kotlin.jvm.functions.Function1):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:onDownloadingSdkDetected(kotlin.jvm.functions.Function1):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:onLocalSdkSuggested(kotlin.jvm.functions.Function1):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:onSdkFixResolved(kotlin.jvm.functions.Function1):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:onSdkNameResolved(kotlin.jvm.functions.Function1):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:onSdkResolved(kotlin.jvm.functions.Function1):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:testSuggestedSdkFirst(kotlin.jvm.functions.Function0):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:testSuggestedSdksFirst(kotlin.sequences.Sequence):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:withLookupReason(java.lang.String):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:withProgressIndicator(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:withProgressMessageTitle(java.lang.String):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:withProject(com.intellij.openapi.project.Project):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:withSdkHomeFilter(kotlin.jvm.functions.Function1):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:withSdkName(java.lang.String):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:withSdkType(com.intellij.openapi.projectRoots.SdkType):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
- a:withVersionFilter(kotlin.jvm.functions.Function1):com.intellij.openapi.roots.ui.configuration.SdkLookupBuilder
e:com.intellij.openapi.roots.ui.configuration.SdkLookupDecision
- java.lang.Enum
- sf:CONTINUE:com.intellij.openapi.roots.ui.configuration.SdkLookupDecision
- sf:STOP:com.intellij.openapi.roots.ui.configuration.SdkLookupDecision
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.roots.ui.configuration.SdkLookupDecision
- s:values():com.intellij.openapi.roots.ui.configuration.SdkLookupDecision[]
e:com.intellij.openapi.roots.ui.configuration.SdkLookupDownloadDecision
- java.lang.Enum
- sf:SKIP:com.intellij.openapi.roots.ui.configuration.SdkLookupDownloadDecision
- sf:STOP:com.intellij.openapi.roots.ui.configuration.SdkLookupDownloadDecision
- sf:WAIT:com.intellij.openapi.roots.ui.configuration.SdkLookupDownloadDecision
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.roots.ui.configuration.SdkLookupDownloadDecision
- s:values():com.intellij.openapi.roots.ui.configuration.SdkLookupDownloadDecision[]
com.intellij.openapi.roots.ui.configuration.SdkLookupParameters
- a:getLookupReason():java.lang.String
- a:getOnBeforeSdkSuggestionStarted():kotlin.jvm.functions.Function0
- a:getOnDownloadableSdkSuggested():kotlin.jvm.functions.Function1
- a:getOnDownloadingSdkDetected():kotlin.jvm.functions.Function1
- a:getOnLocalSdkSuggested():kotlin.jvm.functions.Function1
- a:getOnSdkFixResolved():kotlin.jvm.functions.Function1
- a:getOnSdkNameResolved():kotlin.jvm.functions.Function1
- a:getOnSdkResolved():kotlin.jvm.functions.Function1
- a:getProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
- a:getProgressMessageTitle():java.lang.String
- a:getProject():com.intellij.openapi.project.Project
- a:getSdkHomeFilter():kotlin.jvm.functions.Function1
- a:getSdkName():java.lang.String
- a:getSdkType():com.intellij.openapi.projectRoots.SdkType
- a:getTestSdkSequence():kotlin.sequences.Sequence
- a:getVersionFilter():kotlin.jvm.functions.Function1
f:com.intellij.openapi.roots.ui.configuration.SdkLookupUtil
- sf:findAndSetupSdk(com.intellij.openapi.project.Project,com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.projectRoots.SdkType,kotlin.jvm.functions.Function1):V
- sf:lookupAndSetupSdkBlocking(com.intellij.openapi.project.Project,com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.projectRoots.SdkType,java.util.function.Consumer):V
- sf:lookupSdk(kotlin.jvm.functions.Function1):com.intellij.openapi.projectRoots.Sdk
- sf:lookupSdkBlocking(kotlin.jvm.functions.Function1):com.intellij.openapi.projectRoots.Sdk
com.intellij.openapi.roots.ui.configuration.SdkPopup
- com.intellij.openapi.ui.popup.JBPopup
- a:showPopup(com.intellij.openapi.actionSystem.AnActionEvent):V
- a:showUnderneathToTheRightOf(java.awt.Component):V
com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:buildEditorNotificationPanelHandler():com.intellij.ui.EditorNotificationPanel$ActionHandler
- a:buildPopup():com.intellij.openapi.roots.ui.configuration.SdkPopup
- a:onItemSelected(java.util.function.Consumer):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:onPopupClosed(java.lang.Runnable):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:onSdkSelected(java.util.function.Consumer):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:registerNewSdk():com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:updateProjectSdkFromSelection():com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:updateSdkForFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:updateSdkForFile(com.intellij.psi.PsiFile):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withNoAddActions():com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withNoDownlaodActions():com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withOwnProjectSdksModel(com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withProject(com.intellij.openapi.project.Project):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withProjectSdksModel(com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withSdkFilter(com.intellij.openapi.util.Condition):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withSdkListModelBuilder(com.intellij.openapi.roots.ui.configuration.SdkListModelBuilder):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withSdkType(com.intellij.openapi.projectRoots.SdkTypeId):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withSdkTypeCreateFilter(com.intellij.openapi.util.Condition):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withSdkTypeFilter(com.intellij.openapi.util.Condition):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:withSuggestedSdkFilter(com.intellij.openapi.util.Condition):com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder$SuggestedSdk
- a:getHomePath():java.lang.String
- a:getType():com.intellij.openapi.projectRoots.SdkTypeId
- a:getVersionString():java.lang.String
com.intellij.openapi.roots.ui.configuration.SdkPopupFactory
- sf:Companion:com.intellij.openapi.roots.ui.configuration.SdkPopupFactory$Companion
- a:createBuilder():com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
- a:createEditorNotificationPanelHandler(com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder):com.intellij.ui.EditorNotificationPanel$ActionHandler
- a:createPopup(com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder):com.intellij.openapi.roots.ui.configuration.SdkPopup
- s:newBuilder():com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
f:com.intellij.openapi.roots.ui.configuration.SdkPopupFactory$Companion
- f:newBuilder():com.intellij.openapi.roots.ui.configuration.SdkPopupBuilder
f:com.intellij.openapi.roots.ui.configuration.SourceRootPresentation
- <init>():V
- s:getSourceRootFileLayerIcon(org.jetbrains.jps.model.module.JpsModuleSourceRootType):javax.swing.Icon
- s:getSourceRootIcon(com.intellij.openapi.roots.SourceFolder):javax.swing.Icon
com.intellij.openapi.roots.ui.configuration.UnknownSdk
- getExpectedVersionString():java.lang.String
- getSdkHomePredicate():java.util.function.Predicate
- getSdkName():java.lang.String
- a:getSdkType():com.intellij.openapi.projectRoots.SdkType
- getSdkVersionStringPredicate():java.util.function.Predicate
com.intellij.openapi.roots.ui.configuration.UnknownSdkDownloadableSdkFix
- a:createTask(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTask
- a:getDownloadDescription():java.lang.String
- getPresentableVersionString():java.lang.String
- getSdkLookupReason():java.lang.String
- a:getVersionString():java.lang.String
com.intellij.openapi.roots.ui.configuration.UnknownSdkLocalSdkFix
- a:getExistingSdkHome():java.lang.String
- getPresentableVersionString():java.lang.String
- getRegisteredSdkPrototype():com.intellij.openapi.projectRoots.Sdk
- a:getSuggestedSdkName():java.lang.String
- a:getVersionString():java.lang.String
com.intellij.openapi.roots.ui.configuration.UnknownSdkResolver
- a:createResolver(com.intellij.openapi.project.Project,com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.roots.ui.configuration.UnknownSdkResolver$UnknownSdkLookup
- a:supportsResolution(com.intellij.openapi.projectRoots.SdkTypeId):Z
com.intellij.openapi.roots.ui.configuration.UnknownSdkResolver$UnknownSdkLookup
- a:proposeDownload(com.intellij.openapi.roots.ui.configuration.UnknownSdk,com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.roots.ui.configuration.UnknownSdkDownloadableSdkFix
- proposeDownload(com.intellij.openapi.roots.ui.configuration.UnknownSdk,com.intellij.openapi.progress.ProgressIndicator,java.lang.String):com.intellij.openapi.roots.ui.configuration.UnknownSdkDownloadableSdkFix
- a:proposeLocalFix(com.intellij.openapi.roots.ui.configuration.UnknownSdk,com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.roots.ui.configuration.UnknownSdkLocalSdkFix
a:com.intellij.openapi.roots.ui.configuration.actions.ContentEntryEditingAction
- com.intellij.openapi.actionSystem.ToggleAction
- com.intellij.openapi.project.DumbAware
- pf:myTree:javax.swing.JTree
- p:<init>(javax.swing.JTree):V
- displayTextInToolbar():Z
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- pf:getSelectedFiles():com.intellij.openapi.vfs.VirtualFile[]
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.openapi.roots.ui.configuration.actions.ModuleDeleteProvider
- com.intellij.ide.DeleteProvider
- com.intellij.ide.TitledHandler
- <init>():V
- canDeleteElement(com.intellij.openapi.actionSystem.DataContext):Z
- deleteElement(com.intellij.openapi.actionSystem.DataContext):V
- s:detachModules(com.intellij.openapi.project.Project,com.intellij.openapi.module.Module[]):V
- p:doDetachModules(com.intellij.openapi.project.Project,com.intellij.openapi.module.Module[],java.util.List):V
- getActionTitle():java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getConfirmationText(java.lang.String,I):java.lang.String
- s:getInstance():com.intellij.openapi.roots.ui.configuration.actions.ModuleDeleteProvider
- s:removeModule(com.intellij.openapi.module.Module,java.util.Collection,com.intellij.openapi.module.ModifiableModuleModel):V
com.intellij.openapi.roots.ui.configuration.libraryEditor.LibraryEditor
- a:addExcludedRoot(java.lang.String):V
- a:addJarDirectory(com.intellij.openapi.vfs.VirtualFile,Z,com.intellij.openapi.roots.OrderRootType):V
- a:addJarDirectory(java.lang.String,Z,com.intellij.openapi.roots.OrderRootType):V
- a:addRoot(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.OrderRootType):V
- a:addRoot(java.lang.String,com.intellij.openapi.roots.OrderRootType):V
- a:addRoots(java.util.Collection):V
- a:getExcludedRootUrls():java.lang.String[]
- a:getExternalSource():com.intellij.openapi.roots.ProjectModelExternalSource
- a:getFiles(com.intellij.openapi.roots.OrderRootType):com.intellij.openapi.vfs.VirtualFile[]
- a:getName():java.lang.String
- a:getProperties():com.intellij.openapi.roots.libraries.LibraryProperties
- a:getType():com.intellij.openapi.roots.libraries.LibraryType
- a:getUrls(com.intellij.openapi.roots.OrderRootType):java.lang.String[]
- a:hasChanges():Z
- a:isJarDirectory(java.lang.String,com.intellij.openapi.roots.OrderRootType):Z
- a:isValid(java.lang.String,com.intellij.openapi.roots.OrderRootType):Z
- a:removeAllRoots():V
- a:removeExcludedRoot(java.lang.String):V
- a:removeRoot(java.lang.String,com.intellij.openapi.roots.OrderRootType):V
- a:setName(java.lang.String):V
c:com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel
- com.intellij.openapi.projectRoots.SdkModel
- <init>():V
- addListener(com.intellij.openapi.projectRoots.SdkModel$Listener):V
- addSdk(com.intellij.openapi.projectRoots.Sdk):V
- addSdk(com.intellij.openapi.projectRoots.SdkType,java.lang.String,com.intellij.util.Consumer):V
- apply():V
- apply(com.intellij.openapi.ui.MasterDetailsComponent):V
- apply(com.intellij.openapi.ui.MasterDetailsComponent,Z):V
- createAddActions(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DefaultActionGroup,javax.swing.JComponent,com.intellij.openapi.projectRoots.Sdk,java.util.function.Consumer,java.util.function.Predicate):V
- createAddActions(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DefaultActionGroup,javax.swing.JComponent,java.util.function.Consumer,java.util.function.Predicate):V
- createAddActions(com.intellij.openapi.project.Project,java.util.function.Predicate):java.util.Map
- createDownloadActions(java.util.function.Predicate):java.util.Map
- createIncompleteSdk(com.intellij.openapi.projectRoots.SdkType,com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTask,java.util.function.Consumer):com.intellij.openapi.projectRoots.Sdk
- createSdk(com.intellij.openapi.projectRoots.SdkType,java.lang.String):com.intellij.openapi.projectRoots.Sdk
- createSdk(com.intellij.openapi.projectRoots.SdkType,java.lang.String,java.lang.String):com.intellij.openapi.projectRoots.Sdk
- disposeUIResources():V
- doAdd(com.intellij.openapi.projectRoots.Sdk,java.util.function.Consumer):V
- doAdd(javax.swing.JComponent,com.intellij.openapi.projectRoots.Sdk,com.intellij.openapi.projectRoots.SdkType,com.intellij.util.Consumer):V
- doAdd(javax.swing.JComponent,com.intellij.openapi.projectRoots.SdkType,com.intellij.util.Consumer):V
- downloadSdk(com.intellij.openapi.projectRoots.Sdk):V
- findSdk(com.intellij.openapi.projectRoots.Sdk):com.intellij.openapi.projectRoots.Sdk
- findSdk(java.lang.String):com.intellij.openapi.projectRoots.Sdk
- p:forceAddActionToSelectFromDisk(com.intellij.openapi.projectRoots.SdkType):Z
- getMulticaster():com.intellij.openapi.projectRoots.SdkModel$Listener
- getProjectSdk():com.intellij.openapi.projectRoots.Sdk
- getProjectSdks():java.util.HashMap
- getSdks():com.intellij.openapi.projectRoots.Sdk[]
- isInitialized():Z
- isModified():Z
- removeListener(com.intellij.openapi.projectRoots.SdkModel$Listener):V
- removeSdk(com.intellij.openapi.projectRoots.Sdk):V
- reset(com.intellij.openapi.project.Project):V
- setProjectSdk(com.intellij.openapi.projectRoots.Sdk):V
- setupInstallableSdk(com.intellij.openapi.projectRoots.SdkType,com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTask,java.util.function.Consumer):V
- syncSdks():V
a:com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectSdksModel$NewSdkAction
- com.intellij.openapi.project.DumbAwareAction
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- a:actionPerformed(com.intellij.openapi.projectRoots.Sdk,javax.swing.JComponent,java.util.function.Consumer):V
- f:getListItemText():java.lang.String
- f:getListSubItemText():java.lang.String
- f:getSdkType():com.intellij.openapi.projectRoots.SdkType
com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownload
- getIconForDownloadAction(com.intellij.openapi.projectRoots.SdkTypeId):javax.swing.Icon
- pickSdk(com.intellij.openapi.projectRoots.SdkTypeId,com.intellij.openapi.projectRoots.SdkModel,javax.swing.JComponent,com.intellij.openapi.projectRoots.Sdk):com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTask
- showDownloadUI(com.intellij.openapi.projectRoots.SdkTypeId,com.intellij.openapi.projectRoots.SdkModel,javax.swing.JComponent,com.intellij.openapi.project.Project,com.intellij.openapi.projectRoots.Sdk,java.util.function.Predicate,java.util.function.Consumer):V
- a:showDownloadUI(com.intellij.openapi.projectRoots.SdkTypeId,com.intellij.openapi.projectRoots.SdkModel,javax.swing.JComponent,com.intellij.openapi.projectRoots.Sdk,java.util.function.Consumer):V
- a:supportsDownload(com.intellij.openapi.projectRoots.SdkTypeId):Z
com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTask
- a:doDownload(com.intellij.openapi.progress.ProgressIndicator):V
- a:getPlannedHomeDir():java.lang.String
- a:getPlannedVersion():java.lang.String
- getProductName():java.lang.String
- a:getSuggestedSdkName():java.lang.String
f:com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTracker
- <init>():V
- configureSdk(com.intellij.openapi.projectRoots.Sdk,com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTask):V
- downloadSdk(com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTask,java.util.List,com.intellij.openapi.progress.ProgressIndicator):V
- findDownloadingSdks(java.lang.String):java.util.List
- s:getInstance():com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTracker
- isDownloading(com.intellij.openapi.projectRoots.Sdk):Z
- onSdkRemoved(com.intellij.openapi.projectRoots.Sdk):V
- registerEditableSdk(com.intellij.openapi.projectRoots.Sdk,com.intellij.openapi.projectRoots.Sdk):V
- registerSdkDownload(com.intellij.openapi.projectRoots.Sdk,com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTask):V
- startSdkDownloadIfNeeded(com.intellij.openapi.projectRoots.Sdk):V
- tryRegisterDownloadingListener(com.intellij.openapi.projectRoots.Sdk,com.intellij.openapi.Disposable,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Consumer):Z
- tryRegisterSdkDownloadFailureHandler(com.intellij.openapi.projectRoots.Sdk,java.lang.Runnable):V
a:com.intellij.openapi.roots.ui.distribution.AbstractDistributionInfo
- com.intellij.openapi.roots.ui.distribution.DistributionInfo
- <init>():V
- equals(java.lang.Object):Z
- hashCode():I
f:com.intellij.openapi.roots.ui.distribution.DistributionComboBox
- com.intellij.openapi.ui.ComboBox
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ui.distribution.FileChooserInfo):V
- f:addDistributionIfNotExists(com.intellij.openapi.roots.ui.distribution.DistributionInfo):com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item
- f:addLoadingItem():V
- f:bindSelectedDistribution(com.intellij.openapi.observable.properties.ObservableMutableProperty):V
- f:getNoDistributionText():java.lang.String
- f:getSdkListLoadingText():java.lang.String
- f:getSelectedDistribution():com.intellij.openapi.roots.ui.distribution.DistributionInfo
- f:getSpecifyLocationActionName():java.lang.String
- f:hasLoadingItem():Z
- f:removeLoadingItem():V
- f:setNoDistributionText(java.lang.String):V
- f:setSdkListLoadingText(java.lang.String):V
- f:setSelectedDistribution(com.intellij.openapi.roots.ui.distribution.DistributionInfo):V
- setSelectedItem(java.lang.Object):V
- f:setSpecifyLocationActionName(java.lang.String):V
a:com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item
f:com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item$Distribution
- com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item
- <init>(com.intellij.openapi.roots.ui.distribution.DistributionInfo):V
- f:component1():com.intellij.openapi.roots.ui.distribution.DistributionInfo
- f:copy(com.intellij.openapi.roots.ui.distribution.DistributionInfo):com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item$Distribution
- bs:copy$default(com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item$Distribution,com.intellij.openapi.roots.ui.distribution.DistributionInfo,I,java.lang.Object):com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item$Distribution
- equals(java.lang.Object):Z
- f:getInfo():com.intellij.openapi.roots.ui.distribution.DistributionInfo
- hashCode():I
f:com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item$ListLoading
- com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item
- sf:INSTANCE:com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item$ListLoading
f:com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item$NoDistribution
- com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item
- sf:INSTANCE:com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item$NoDistribution
f:com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item$SpecifyDistributionAction
- com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item
- sf:INSTANCE:com.intellij.openapi.roots.ui.distribution.DistributionComboBox$Item$SpecifyDistributionAction
com.intellij.openapi.roots.ui.distribution.DistributionInfo
- a:getDescription():java.lang.String
- a:getName():java.lang.String
com.intellij.openapi.roots.ui.distribution.FileChooserInfo
- sf:Companion:com.intellij.openapi.roots.ui.distribution.FileChooserInfo$Companion
- getFileChooserDescription():java.lang.String
- a:getFileChooserDescriptor():com.intellij.openapi.fileChooser.FileChooserDescriptor
- a:getFileChooserMacroFilter():kotlin.jvm.functions.Function1
- getFileChooserTitle():java.lang.String
f:com.intellij.openapi.roots.ui.distribution.FileChooserInfo$Companion
- f:getALL():kotlin.jvm.functions.Function1
- f:getANY_PATH():kotlin.jvm.functions.Function1
- f:getDIRECTORY_PATH():kotlin.jvm.functions.Function1
- f:getFILE_PATH():kotlin.jvm.functions.Function1
- f:getNONE():kotlin.jvm.functions.Function1
f:com.intellij.openapi.roots.ui.distribution.LocalDistributionInfo
- com.intellij.openapi.roots.ui.distribution.AbstractDistributionInfo
- <init>(java.lang.String):V
- getDescription():java.lang.String
- getName():java.lang.String
- f:getPath():java.lang.String
- f:getUiPath():java.lang.String
- f:setPath(java.lang.String):V
- f:setUiPath(java.lang.String):V
c:com.intellij.openapi.util.registry.RegistryUi
- com.intellij.openapi.Disposable
- <init>():V
- dispose():V
- show():Z
f:com.intellij.openapi.util.registry.ShowRegistryAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.ide.lightEdit.LightEditCompatible
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.openapi.vcs.changes.PsiChangeTracker
- s:getElementsChanged(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.util.PsiFilter):java.util.Map
com.intellij.openapi.vcs.impl.LineStatusTrackerSettingListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:settingsUpdated():V
f:com.intellij.openapi.wm.impl.ProjectWindowActionGroup
- com.intellij.ide.IdeDependentActionGroup
- <init>():V
- activateNextWindow(com.intellij.openapi.actionSystem.AnActionEvent):V
- activatePreviousWindow(com.intellij.openapi.actionSystem.AnActionEvent):V
- addProject(com.intellij.openapi.project.Project):V
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- isDumbAware():Z
- isEnabled():Z
- removeProject(com.intellij.openapi.project.Project):V
f:com.intellij.openapi.wm.impl.WindowDressing
- com.intellij.ide.lightEdit.LightEditServiceListener
- com.intellij.openapi.project.ProjectCloseListener
- sf:Companion:com.intellij.openapi.wm.impl.WindowDressing$Companion
- <init>():V
- lightEditWindowClosed(com.intellij.openapi.project.Project):V
- lightEditWindowOpened(com.intellij.openapi.project.Project):V
- projectClosed(com.intellij.openapi.project.Project):V
f:com.intellij.openapi.wm.impl.WindowDressing$Companion
- f:getWindowActionGroup():com.intellij.openapi.wm.impl.ProjectWindowActionGroup
f:com.intellij.openapi.wm.impl.status.InspectionProfileWidgetFactory
- com.intellij.openapi.wm.impl.status.widget.StatusBarEditorBasedWidgetFactory
- <init>():V
- createWidget(com.intellij.openapi.project.Project):com.intellij.openapi.wm.StatusBarWidget
- getDisplayName():java.lang.String
- getId():java.lang.String
- isAvailable(com.intellij.openapi.project.Project):Z
f:com.intellij.packageDependencies.DefaultScopesProvider
- com.intellij.psi.search.scope.packageSet.CustomScopesProviderEx
- <init>(com.intellij.openapi.project.Project):V
- getCustomScopes():java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.packageDependencies.DefaultScopesProvider
f:com.intellij.packageDependencies.DependenciesToolWindow
- <init>(com.intellij.openapi.project.Project):V
- addContent(com.intellij.ui.content.Content):V
- closeContent(com.intellij.ui.content.Content):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.packageDependencies.DependenciesToolWindow
f:com.intellij.packageDependencies.DependencyUISettings
- com.intellij.openapi.components.PersistentStateComponent
- SCOPE_TYPE:java.lang.String
- UI_COMPACT_EMPTY_MIDDLE_PACKAGES:Z
- UI_FILTER_LEGALS:Z
- UI_FILTER_OUT_OF_CYCLE_PACKAGES:Z
- UI_FLATTEN_PACKAGES:Z
- UI_GROUP_BY_SCOPE_TYPE:Z
- UI_SHOW_FILES:Z
- UI_SHOW_MODULES:Z
- UI_SHOW_MODULE_GROUPS:Z
- <init>():V
- s:getInstance():com.intellij.packageDependencies.DependencyUISettings
- getState():com.intellij.packageDependencies.DependencyUISettings
- loadState(com.intellij.packageDependencies.DependencyUISettings):V
f:com.intellij.packageDependencies.FindDependencyUtil
- s:findBackwardDependencies(com.intellij.packageDependencies.DependenciesBuilder,java.util.Set,java.util.Set):com.intellij.usageView.UsageInfo[]
- s:findBackwardDependencies(java.util.List,java.util.Set,java.util.Set):com.intellij.usageView.UsageInfo[]
- s:findDependencies(com.intellij.packageDependencies.DependenciesBuilder,java.util.Set,java.util.Set):com.intellij.usageView.UsageInfo[]
- s:findDependencies(java.util.List,java.util.Set,java.util.Set):com.intellij.usageView.UsageInfo[]
f:com.intellij.packageDependencies.actions.AnalyzeDependenciesOnSpecifiedTargetAction
- com.intellij.openapi.actionSystem.AnAction
- sf:TARGET_SCOPE_KEY:com.intellij.openapi.actionSystem.DataKey
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.packageDependencies.actions.AnalyzeDependenciesOnSpecifiedTargetHandler
- <init>(com.intellij.openapi.project.Project,com.intellij.analysis.AnalysisScope,com.intellij.psi.search.GlobalSearchScope):V
- p:createDependenciesBuilder(com.intellij.analysis.AnalysisScope):com.intellij.packageDependencies.DependenciesBuilder
- p:getPanelDisplayName(com.intellij.analysis.AnalysisScope):java.lang.String
- p:getProgressTitle():java.lang.String
- p:shouldShowDependenciesPanel(com.intellij.packageDependencies.DependencyAnalysisResult):Z
f:com.intellij.packageDependencies.ui.DependenciesPanel
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiDataProvider
- <init>(com.intellij.openapi.project.Project,com.intellij.packageDependencies.DependenciesBuilder):V
- <init>(com.intellij.openapi.project.Project,java.util.List,java.util.Set):V
- dispose():V
- getLeftTree():javax.swing.JTree
- getRightTree():javax.swing.JTree
- setContent(com.intellij.ui.content.Content):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.packageDependencies.ui.DependenciesPanel$DependencyPanelSettings
- SCOPE_TYPE:java.lang.String
- UI_COMPACT_EMPTY_MIDDLE_PACKAGES:Z
- UI_FILTER_LEGALS:Z
- UI_FILTER_OUT_OF_CYCLE_PACKAGES:Z
- UI_FLATTEN_PACKAGES:Z
- UI_GROUP_BY_SCOPE_TYPE:Z
- UI_SHOW_FILES:Z
- UI_SHOW_MODULES:Z
- UI_SHOW_MODULE_GROUPS:Z
- <init>():V
- copyToApplicationDependencySettings():V
c:com.intellij.packageDependencies.ui.DependenciesUsagesPanel
- com.intellij.packageDependencies.ui.UsagesPanel
- <init>(com.intellij.openapi.project.Project,java.util.List):V
- addBuilder(com.intellij.packageDependencies.DependenciesBuilder):V
- findUsages(java.util.Set,java.util.Set):V
- getCodeUsagesString():java.lang.String
- getInitialPositionText():java.lang.String
f:com.intellij.packageDependencies.ui.DependencyConfigurable
- com.intellij.openapi.options.Configurable
- com.intellij.openapi.options.Configurable$NoScroll
- <init>(com.intellij.openapi.project.Project):V
- apply():V
- createComponent():javax.swing.JComponent
- s:getConfigureButton(com.intellij.openapi.project.Project):javax.swing.JButton
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- isModified():Z
- reset():V
a:com.intellij.packageDependencies.ui.DependencyConfigurable$MyColumnInfo
- com.intellij.util.ui.ColumnInfo
- p:<init>(com.intellij.packageDependencies.ui.DependencyConfigurable,java.lang.String):V
- getEditor(com.intellij.packageDependencies.DependencyRule):javax.swing.table.TableCellEditor
- getRenderer(com.intellij.packageDependencies.DependencyRule):javax.swing.table.TableCellRenderer
- isCellEditable(com.intellij.packageDependencies.DependencyRule):Z
- a:setValue(com.intellij.packageDependencies.DependencyRule,com.intellij.psi.search.scope.packageSet.NamedScope):V
f:com.intellij.packageDependencies.ui.DependencyNodeComparator
- java.util.Comparator
- <init>():V
- <init>(Z):V
- compare(com.intellij.packageDependencies.ui.PackageDependenciesNode,com.intellij.packageDependencies.ui.PackageDependenciesNode):I
f:com.intellij.packageDependencies.ui.DirectoryNode
- com.intellij.packageDependencies.ui.PackageDependenciesNode
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,Z,Z,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile[]):V
- canNavigate():Z
- canSelectInLeftTree(java.util.Map):Z
- equals(java.lang.Object):Z
- fillFiles(java.util.Set,Z):V
- getComment():java.lang.String
- getCompactedDirNode():com.intellij.packageDependencies.ui.DirectoryNode
- getDirName():java.lang.String
- getDirectory():com.intellij.openapi.vfs.VirtualFile
- getFQName():java.lang.String
- getIcon():javax.swing.Icon
- getPsiElement():com.intellij.psi.PsiElement
- getTargetDirectory():com.intellij.psi.PsiDirectory
- getWeight():I
- getWrapper():com.intellij.packageDependencies.ui.DirectoryNode
- hashCode():I
- isContentOrSourceRoot():Z
- isValid():Z
- removeUpReference():V
- setCompactedDirNode(com.intellij.packageDependencies.ui.DirectoryNode):V
- update():V
f:com.intellij.packageDependencies.ui.FileNode
- com.intellij.packageDependencies.ui.PackageDependenciesNode
- java.lang.Comparable
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,Z):V
- canSelectInLeftTree(java.util.Map):Z
- compareTo(com.intellij.packageDependencies.ui.FileNode):I
- equals(java.lang.Object):Z
- fillFiles(java.util.Set,Z):V
- getColor():java.awt.Color
- getContainingFiles():I
- getIcon():javax.swing.Icon
- getPsiElement():com.intellij.psi.PsiElement
- getWeight():I
- hasMarked():Z
- hasUnmarked():Z
- hashCode():I
- isValid():Z
- update():V
f:com.intellij.packageDependencies.ui.FileTreeModelBuilder
- sf:FILE_COUNT:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project,com.intellij.packageDependencies.ui.Marker,com.intellij.packageDependencies.ui.DependenciesPanel$DependencyPanelSettings):V
- addDirNode(com.intellij.psi.PsiDirectory):com.intellij.packageDependencies.ui.PackageDependenciesNode
- addFileNode(com.intellij.psi.PsiFile):com.intellij.packageDependencies.ui.PackageDependenciesNode
- build(com.intellij.openapi.project.Project,Z):com.intellij.packageDependencies.ui.TreeModel
- build(com.intellij.openapi.project.Project,Z,java.lang.Runnable):com.intellij.packageDependencies.ui.TreeModel
- s:clearCaches(com.intellij.openapi.project.Project):V
- s:createTreeModel(com.intellij.openapi.project.Project,com.intellij.packageDependencies.ui.Marker,com.intellij.packageDependencies.ui.DependenciesPanel$DependencyPanelSettings):com.intellij.packageDependencies.ui.TreeModel
- s:createTreeModel(com.intellij.openapi.project.Project,Z,com.intellij.packageDependencies.ui.Marker):com.intellij.packageDependencies.ui.TreeModel
- s:createTreeModel(com.intellij.openapi.project.Project,Z,java.util.Set,com.intellij.packageDependencies.ui.Marker,com.intellij.packageDependencies.ui.DependenciesPanel$DependencyPanelSettings):com.intellij.packageDependencies.ui.TreeModel
- findNode(com.intellij.psi.PsiFileSystemItem,com.intellij.psi.PsiElement):com.intellij.packageDependencies.ui.PackageDependenciesNode
- s:findNodeForPsiElement(com.intellij.packageDependencies.ui.PackageDependenciesNode,com.intellij.psi.PsiElement):com.intellij.packageDependencies.ui.PackageDependenciesNode[]
- getFileParentNode(com.intellij.openapi.vfs.VirtualFile):com.intellij.packageDependencies.ui.PackageDependenciesNode
- s:getScanningPackagesMessage():java.lang.String
- hasFileNode(com.intellij.openapi.vfs.VirtualFile):Z
- removeNode(com.intellij.psi.PsiElement,com.intellij.psi.PsiDirectory):javax.swing.tree.DefaultMutableTreeNode
- setTree(com.intellij.ide.dnd.aware.DnDAwareTree):V
f:com.intellij.packageDependencies.ui.GeneralGroupNode
- com.intellij.packageDependencies.ui.PackageDependenciesNode
- <init>(java.lang.String,javax.swing.Icon,com.intellij.openapi.project.Project):V
- equals(java.lang.Object):Z
- fillFiles(java.util.Set,Z):V
- getIcon():javax.swing.Icon
- getWeight():I
- hashCode():I
f:com.intellij.packageDependencies.ui.LibraryNode
- com.intellij.packageDependencies.ui.PackageDependenciesNode
- <init>(com.intellij.openapi.roots.OrderEntry,com.intellij.openapi.project.Project):V
- equals(java.lang.Object):Z
- fillFiles(java.util.Set,Z):V
- getIcon():javax.swing.Icon
- getWeight():I
- hashCode():I
com.intellij.packageDependencies.ui.Marker
- a:isMarked(com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.packageDependencies.ui.ModuleGroupNode
- com.intellij.packageDependencies.ui.PackageDependenciesNode
- <init>(com.intellij.ide.projectView.impl.ModuleGroup,com.intellij.openapi.project.Project):V
- equals(java.lang.Object):Z
- fillFiles(java.util.Set,Z):V
- getIcon():javax.swing.Icon
- getModuleGroup():com.intellij.ide.projectView.impl.ModuleGroup
- getModuleGroupName():java.lang.String
- getProject():com.intellij.openapi.project.Project
- hashCode():I
f:com.intellij.packageDependencies.ui.ModuleNode
- com.intellij.packageDependencies.ui.PackageDependenciesNode
- com.intellij.pom.NavigatableWithText
- <init>(com.intellij.openapi.module.Module,com.intellij.openapi.module.ModuleGrouper):V
- canNavigate():Z
- canNavigateToSource():Z
- equals(java.lang.Object):Z
- fillFiles(java.util.Set,Z):V
- getIcon():javax.swing.Icon
- getModule():com.intellij.openapi.module.Module
- getModuleName():java.lang.String
- getNavigateActionText(Z):java.lang.String
- getWeight():I
- hashCode():I
- isValid():Z
- navigate(Z):V
c:com.intellij.packageDependencies.ui.PackageDependenciesNode
- javax.swing.tree.DefaultMutableTreeNode
- com.intellij.pom.Navigatable
- psf:NOT_CHANGED:java.awt.Color
- p:myColor:java.awt.Color
- p:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project):V
- add(javax.swing.tree.MutableTreeNode):V
- addFile(com.intellij.openapi.vfs.VirtualFile,Z):V
- canNavigate():Z
- canNavigateToSource():Z
- canSelectInLeftTree(java.util.Map):Z
- fillFiles(java.util.Set,Z):V
- getColor():java.awt.Color
- getComment():java.lang.String
- getContainingFiles():I
- getIcon():javax.swing.Icon
- getPresentableFilesCount():java.lang.String
- getPsiElement():com.intellij.psi.PsiElement
- getRegisteredFiles():java.util.Set
- getUserObject():java.lang.Object
- getWeight():I
- hasMarked():Z
- hasUnmarked():Z
- isEquals():Z
- isSorted():Z
- isValid():Z
- navigate(Z):V
- setEquals(Z):V
- setSorted(Z):V
- sortChildren():V
- updateAndSortChildren():V
- updateColor():V
f:com.intellij.packageDependencies.ui.PackageTreeExpansionMonitor
- s:install(javax.swing.JTree):com.intellij.packageDependencies.ui.TreeExpansionMonitor
c:com.intellij.packageDependencies.ui.PanelProgressIndicator
- com.intellij.openapi.progress.util.ProgressIndicatorBase
- <init>(com.intellij.util.Consumer):V
- setBordersVisible(Z):V
- setFraction(D):V
- setIndeterminate(Z):V
- setText(java.lang.String):V
- start():V
- stop():V
- update(java.lang.String,Z,D):V
a:com.intellij.packageDependencies.ui.PatternDialectProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:createActions(com.intellij.openapi.project.Project,java.lang.Runnable):com.intellij.openapi.actionSystem.AnAction[]
- a:createPackageSet(com.intellij.packageDependencies.ui.PackageDependenciesNode,Z):com.intellij.psi.search.scope.packageSet.PackageSet
- a:createTreeModel(com.intellij.openapi.project.Project,com.intellij.packageDependencies.ui.Marker):com.intellij.packageDependencies.ui.TreeModel
- a:createTreeModel(com.intellij.openapi.project.Project,java.util.Set,com.intellij.packageDependencies.ui.Marker,com.intellij.packageDependencies.ui.DependenciesPanel$DependencyPanelSettings):com.intellij.packageDependencies.ui.TreeModel
- a:getDisplayName():java.lang.String
- ps:getGroupModulePattern(com.intellij.packageDependencies.ui.ModuleGroupNode):java.lang.String
- getHintMessage():java.lang.String
- a:getIcon():javax.swing.Icon
- s:getInstance(java.lang.String):com.intellij.packageDependencies.ui.PatternDialectProvider
- ps:getModuleParent(com.intellij.packageDependencies.ui.PackageDependenciesNode):com.intellij.packageDependencies.ui.ModuleNode
- ps:getModulePattern(com.intellij.packageDependencies.ui.PackageDependenciesNode):java.lang.String
- a:getShortName():java.lang.String
f:com.intellij.packageDependencies.ui.ProjectPatternProvider
- com.intellij.packageDependencies.ui.PatternDialectProvider
- sf:FILE:java.lang.String
- <init>():V
- createActions(com.intellij.openapi.project.Project,java.lang.Runnable):com.intellij.openapi.actionSystem.AnAction[]
- createPackageSet(com.intellij.packageDependencies.ui.PackageDependenciesNode,Z):com.intellij.psi.search.scope.packageSet.PackageSet
- createTreeModel(com.intellij.openapi.project.Project,com.intellij.packageDependencies.ui.Marker):com.intellij.packageDependencies.ui.TreeModel
- createTreeModel(com.intellij.openapi.project.Project,java.util.Set,com.intellij.packageDependencies.ui.Marker,com.intellij.packageDependencies.ui.DependenciesPanel$DependencyPanelSettings):com.intellij.packageDependencies.ui.TreeModel
- getDisplayName():java.lang.String
- getHintMessage():java.lang.String
- getIcon():javax.swing.Icon
- getShortName():java.lang.String
c:com.intellij.packageDependencies.ui.RootNode
- com.intellij.packageDependencies.ui.PackageDependenciesNode
- <init>(com.intellij.openapi.project.Project):V
- equals(java.lang.Object):Z
- fillFiles(java.util.Set,Z):V
- hashCode():I
f:com.intellij.packageDependencies.ui.TreeModel
- javax.swing.tree.DefaultTreeModel
- <init>(javax.swing.tree.TreeNode):V
- <init>(javax.swing.tree.TreeNode,I,I):V
- getMarkedFileCount():I
- getTotalFileCount():I
- setMarkedFileCount(I):V
- setTotalFileCount(I):V
a:com.intellij.packageDependencies.ui.UsagesPanel
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiDataProvider
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- pf:myAlarm:com.intellij.util.Alarm
- <init>(com.intellij.openapi.project.Project):V
- dispose():V
- a:getCodeUsagesString():java.lang.String
- a:getInitialPositionText():java.lang.String
- setToInitialPosition():V
- p:showUsages(com.intellij.psi.PsiElement[],com.intellij.usageView.UsageInfo[]):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.patterns.compiler.PatternClassBean
- alias:java.lang.String
- className:java.lang.String
- description:java.lang.String
- <init>():V
- getAlias():java.lang.String
- getDescription():java.lang.String
com.intellij.platform.ModuleAttachListener
- sf:Companion:com.intellij.platform.ModuleAttachListener$Companion
- afterAttach(com.intellij.openapi.module.Module,com.intellij.openapi.module.Module,java.nio.file.Path,java.util.List):V
- beforeDetach(com.intellij.openapi.module.Module):V
f:com.intellij.platform.ModuleAttachListener$Companion
- f:getTOPIC():com.intellij.util.messages.Topic
f:com.intellij.platform.ModuleAttachProcessor
- com.intellij.projectImport.ProjectAttachProcessor
- sf:Companion:com.intellij.platform.ModuleAttachProcessor$Companion
- <init>():V
- attachToProjectAsync(com.intellij.openapi.project.Project,java.nio.file.Path,com.intellij.projectImport.ProjectOpenedCallback,kotlin.coroutines.Continuation):java.lang.Object
- beforeDetach(com.intellij.openapi.module.Module):V
- sf:getMultiProjectDisplayName(com.intellij.openapi.project.Project):java.lang.String
- sf:getPrimaryModule(com.intellij.openapi.project.Project):com.intellij.openapi.module.Module
- sf:getSortedModules(com.intellij.openapi.project.Project):java.util.List
f:com.intellij.platform.ModuleAttachProcessor$Companion
- f:getMultiProjectDisplayName(com.intellij.openapi.project.Project):java.lang.String
- f:getPrimaryModule(com.intellij.openapi.project.Project):com.intellij.openapi.module.Module
- f:getSortedModules(com.intellij.openapi.project.Project):java.util.List
com.intellij.platform.backend.documentation.DocumentationContent
- s:content(java.lang.String):com.intellij.platform.backend.documentation.DocumentationContent
- s:content(java.lang.String,java.util.Map):com.intellij.platform.backend.documentation.DocumentationContent
com.intellij.platform.backend.documentation.DocumentationLinkHandler
- resolveLink(com.intellij.platform.backend.documentation.DocumentationTarget,java.lang.String):com.intellij.platform.backend.documentation.LinkResolveResult
com.intellij.platform.backend.documentation.DocumentationResult
- sf:Companion:com.intellij.platform.backend.documentation.DocumentationResult$Companion
- s:asyncDocumentation(java.util.function.Supplier):com.intellij.platform.backend.documentation.DocumentationResult
- s:documentation(com.intellij.platform.backend.documentation.DocumentationContent):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
- s:documentation(java.lang.String):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
f:com.intellij.platform.backend.documentation.DocumentationResult$Companion
- f:asyncDocumentation(java.util.function.Supplier):com.intellij.platform.backend.documentation.DocumentationResult
- f:asyncDocumentation(kotlin.jvm.functions.Function1):com.intellij.platform.backend.documentation.DocumentationResult
- f:documentation(com.intellij.platform.backend.documentation.DocumentationContent):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
- f:documentation(java.lang.String):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
com.intellij.platform.backend.documentation.DocumentationResult$Documentation
- com.intellij.platform.backend.documentation.DocumentationResult
- a:anchor(java.lang.String):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
- a:content(com.intellij.platform.backend.documentation.DocumentationContent):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
- a:definitionDetails(java.lang.String):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
- a:externalUrl(java.lang.String):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
- a:html(java.lang.String):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
- a:images(java.util.Map):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
- a:updates(kotlinx.coroutines.flow.Flow):com.intellij.platform.backend.documentation.DocumentationResult$Documentation
com.intellij.platform.backend.documentation.DocumentationTarget
- computeDocumentation():com.intellij.platform.backend.documentation.DocumentationResult
- computeDocumentationHint():java.lang.String
- a:computePresentation():com.intellij.platform.backend.presentation.TargetPresentation
- a:createPointer():com.intellij.model.Pointer
- getNavigatable():com.intellij.pom.Navigatable
com.intellij.platform.backend.documentation.DocumentationTargetProvider
- a:documentationTargets(com.intellij.psi.PsiFile,I):java.util.List
com.intellij.platform.backend.documentation.InlineDocumentationProvider
- a:findInlineDocumentation(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):com.intellij.platform.backend.documentation.InlineDocumentation
- a:inlineDocumentationItems(com.intellij.psi.PsiFile):java.util.Collection
com.intellij.platform.backend.documentation.LinkResolveResult
- sf:Companion:com.intellij.platform.backend.documentation.LinkResolveResult$Companion
- s:asyncResult(java.util.function.Supplier):com.intellij.platform.backend.documentation.LinkResolveResult
- s:resolvedTarget(com.intellij.platform.backend.documentation.DocumentationTarget):com.intellij.platform.backend.documentation.LinkResolveResult
com.intellij.platform.backend.documentation.LinkResolveResult$Async
- sf:Companion:com.intellij.platform.backend.documentation.LinkResolveResult$Async$Companion
- s:resolvedTarget(com.intellij.platform.backend.documentation.DocumentationTarget):com.intellij.platform.backend.documentation.LinkResolveResult$Async
f:com.intellij.platform.backend.documentation.LinkResolveResult$Async$Companion
- f:resolvedTarget(com.intellij.platform.backend.documentation.DocumentationTarget):com.intellij.platform.backend.documentation.LinkResolveResult$Async
f:com.intellij.platform.backend.documentation.LinkResolveResult$Companion
- f:asyncResult(java.util.function.Supplier):com.intellij.platform.backend.documentation.LinkResolveResult
- f:asyncResult(kotlin.jvm.functions.Function1):com.intellij.platform.backend.documentation.LinkResolveResult
- f:resolvedTarget(com.intellij.platform.backend.documentation.DocumentationTarget):com.intellij.platform.backend.documentation.LinkResolveResult
com.intellij.platform.backend.documentation.PsiDocumentationTargetProvider
- documentationTarget(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.platform.backend.documentation.DocumentationTarget
- documentationTargets(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.util.List
f:com.intellij.platform.ide.documentation.ActionsKt
- sf:DOCUMENTATION_TARGETS:com.intellij.openapi.actionSystem.DataKey
c:com.intellij.platform.ide.navigation.impl.IdeNavigationServiceExecutor
- sf:Companion:com.intellij.platform.ide.navigation.impl.IdeNavigationServiceExecutor$Companion
- <init>():V
- navigate(com.intellij.platform.backend.navigation.impl.RawNavigationRequest,Z,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.platform.ide.navigation.impl.IdeNavigationServiceExecutor$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.platform.ide.navigation.impl.IdeNavigationServiceExecutor
f:com.intellij.platform.renameProject.RenameProjectAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.platform.renameProject.RenameProjectHandler
- com.intellij.ide.TitledHandler
- com.intellij.refactoring.rename.RenameHandler
- <init>():V
- getActionTitle():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- isAvailableOnDataContext(com.intellij.openapi.actionSystem.DataContext):Z
- s:renameProject(com.intellij.openapi.project.ex.ProjectEx,com.intellij.openapi.module.Module,java.lang.String):Z
a:com.intellij.platform.templates.ArchivedProjectTemplate
- com.intellij.platform.ProjectTemplate
- sf:INPUT_DEFAULT:java.lang.String
- sf:INPUT_FIELD:java.lang.String
- sf:TEMPLATE:java.lang.String
- pf:myDisplayName:java.lang.String
- <init>(java.lang.String,java.lang.String):V
- createModuleBuilder():com.intellij.ide.util.projectWizard.ModuleBuilder
- getArtifacts():java.util.List
- getCategory():java.lang.String
- getFrameworks():java.util.List
- getIcon():javax.swing.Icon
- getInputFields():java.util.List
- pa:getModuleType():com.intellij.openapi.module.ModuleType
- getName():java.lang.String
- handleUnzippedDirectories(java.io.File,java.util.List):V
- populateFromElement(org.jdom.Element):V
- a:processStream(com.intellij.platform.templates.ArchivedProjectTemplate$StreamProcessor):java.lang.Object
- setArtifacts(java.util.List):V
- setFrameworks(java.util.List):V
- validateSettings():com.intellij.openapi.ui.ValidationInfo
a:com.intellij.platform.templates.ArchivedProjectTemplate$StreamProcessor
- <init>():V
- a:consume(java.util.zip.ZipInputStream):java.lang.Object
f:com.intellij.platform.templates.ArchivedTemplatesFactory
- com.intellij.platform.ProjectTemplatesFactory
- <init>():V
- createTemplates(java.lang.String):com.intellij.platform.ProjectTemplate[]
- createTemplates(java.lang.String,com.intellij.ide.util.projectWizard.WizardContext):com.intellij.platform.ProjectTemplate[]
- getGroupIcon(java.lang.String):javax.swing.Icon
- getGroupWeight(java.lang.String):I
- getGroups():java.lang.String[]
- s:getTemplateFile(java.lang.String):java.nio.file.Path
f:com.intellij.platform.templates.LocalArchivedTemplate
- com.intellij.platform.templates.ArchivedProjectTemplate
- sf:DESCRIPTION_PATH:java.lang.String
- sf:UNENCODED_ATTRIBUTE:java.lang.String
- <init>(java.net.URL,java.lang.ClassLoader):V
- getArchivePath():java.net.URL
- getDescription():java.lang.String
- getIcon():javax.swing.Icon
- getInputFields():java.util.List
- handleUnzippedDirectories(java.io.File,java.util.List):V
- processStream(com.intellij.platform.templates.ArchivedProjectTemplate$StreamProcessor):java.lang.Object
- validate(java.lang.String):com.intellij.facet.ui.ValidationResult
c:com.intellij.platform.templates.TemplateModuleBuilder
- com.intellij.ide.util.projectWizard.ModuleBuilder
- <init>(com.intellij.platform.templates.ArchivedProjectTemplate,com.intellij.openapi.module.ModuleType,java.util.List):V
- commitModule(com.intellij.openapi.project.Project,com.intellij.openapi.module.ModifiableModuleModel):com.intellij.openapi.module.Module
- createFinishingSteps(com.intellij.ide.util.projectWizard.WizardContext,com.intellij.openapi.roots.ui.configuration.ModulesProvider):com.intellij.ide.util.projectWizard.ModuleWizardStep[]
- createModule(com.intellij.openapi.module.ModifiableModuleModel):com.intellij.openapi.module.Module
- createProject(java.lang.String,java.lang.String):com.intellij.openapi.project.Project
- createWizardSteps(com.intellij.ide.util.projectWizard.WizardContext,com.intellij.openapi.roots.ui.configuration.ModulesProvider):com.intellij.ide.util.projectWizard.ModuleWizardStep[]
- p:getAdditionalFields():java.util.List
- getBuilderId():java.lang.String
- getModuleType():com.intellij.openapi.module.ModuleType
- getNodeIcon():javax.swing.Icon
- isSuitableSdkType(com.intellij.openapi.projectRoots.SdkTypeId):Z
- isTemplateBased():Z
f:com.intellij.platform.templates.TemplateProjectDirectoryGenerator
- com.intellij.platform.DirectoryProjectGeneratorBase
- <init>(com.intellij.platform.templates.LocalArchivedTemplate):V
- buildUI(com.intellij.ide.util.projectWizard.SettingsStep):V
- generateProject(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.Object,com.intellij.openapi.module.Module):V
- generateProject(java.lang.String,java.lang.String):V
- getLogo():javax.swing.Icon
- getName():java.lang.String
- validate(java.lang.String):com.intellij.facet.ui.ValidationResult
f:com.intellij.platform.templates.github.DownloadUtil
- sf:CONTENT_LENGTH_TEMPLATE:java.lang.String
- <init>():V
- s:downloadAtomically(com.intellij.openapi.progress.ProgressIndicator,java.lang.String,java.io.File):V
- s:downloadAtomically(com.intellij.openapi.progress.ProgressIndicator,java.lang.String,java.io.File,java.io.File):V
- s:downloadAtomically(com.intellij.openapi.progress.ProgressIndicator,java.lang.String,java.io.File,java.io.File,java.util.function.Predicate):Z
- s:downloadContentToFile(com.intellij.openapi.progress.ProgressIndicator,java.lang.String,java.io.File):V
f:com.intellij.platform.templates.github.GeneratorException
- java.lang.Exception
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.Throwable):V
f:com.intellij.platform.templates.github.GithubTagInfo
- <init>(java.lang.String,java.lang.String):V
- s:createInstance(java.lang.String,java.lang.String):com.intellij.platform.templates.github.GithubTagInfo
- equals(java.lang.Object):Z
- getName():java.lang.String
- getVersion():com.intellij.platform.templates.github.GithubTagInfo$Version
- getZipballUrl():java.lang.String
- hashCode():I
- isRecentTag():Z
- setRecentTag(Z):V
- s:tryCast(java.lang.Object):com.intellij.platform.templates.github.GithubTagInfo
f:com.intellij.platform.templates.github.GithubTagInfo$Version
- java.lang.Comparable
- <init>(it.unimi.dsi.fastutil.ints.IntList,java.lang.String,I):V
- compareTo(com.intellij.platform.templates.github.GithubTagInfo$Version):I
f:com.intellij.platform.templates.github.ZipUtil
- <init>():V
- s:unzip(com.intellij.openapi.progress.ProgressIndicator,java.io.File,java.io.File,com.intellij.util.NullableFunction,com.intellij.platform.templates.github.ZipUtil$ContentProcessor,Z):V
- s:unzip(com.intellij.openapi.progress.ProgressIndicator,java.nio.file.Path,java.util.zip.ZipInputStream,com.intellij.util.NullableFunction,com.intellij.platform.templates.github.ZipUtil$ContentProcessor,Z):V
- s:unzipWithProgressSynchronously(com.intellij.openapi.project.Project,java.lang.String,java.io.File,java.io.File,com.intellij.util.NullableFunction,Z):V
- s:unzipWithProgressSynchronously(com.intellij.openapi.project.Project,java.lang.String,java.nio.file.Path,java.nio.file.Path,Z):V
com.intellij.platform.templates.github.ZipUtil$ContentProcessor
- a:processContent(B[],java.io.File):B[]
f:com.intellij.profile.codeInspection.ui.CustomInspectionActions
- <init>():V
- s:fireProfileChanged(com.intellij.codeInspection.ex.InspectionProfileImpl):V
- s:getAddActionGroup(com.intellij.profile.codeInspection.ui.SingleInspectionProfilePanel):com.intellij.openapi.actionSystem.DefaultActionGroup
- s:getInspection(com.intellij.codeInspection.InspectionProfile,java.lang.String):com.intellij.codeInspection.InspectionProfileEntry
f:com.intellij.profile.codeInspection.ui.CustomInspectionActions$RemoveInspectionAction
- com.intellij.openapi.project.DumbAwareAction
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.profile.codeInspection.ui.DescriptionEditorPane
- com.intellij.ui.components.JBHtmlPane
- sf:Companion:com.intellij.profile.codeInspection.ui.DescriptionEditorPane$Companion
- sf:EMPTY_HTML:java.lang.String
- <init>():V
- getBackground():java.awt.Color
f:com.intellij.profile.codeInspection.ui.DescriptionEditorPane$Companion
f:com.intellij.profile.codeInspection.ui.DescriptionEditorPaneKt
- sf:readHTML(javax.swing.JEditorPane,java.lang.String):V
- sf:readHTMLWithCodeHighlighting(javax.swing.JEditorPane,java.lang.String,java.lang.String):V
com.intellij.profile.codeInspection.ui.ErrorOptionsProvider
- com.intellij.openapi.options.UnnamedConfigurable
f:com.intellij.profile.codeInspection.ui.ErrorOptionsProviderEP
- com.intellij.openapi.options.ConfigurableEP
com.intellij.profile.codeInspection.ui.ErrorsConfigurable
- com.intellij.openapi.options.Configurable
- a:getSelectedObject():java.lang.Object
- a:selectInspectionGroup(java.lang.String[]):V
- a:selectInspectionTool(java.lang.String):V
- a:selectProfile(com.intellij.codeInspection.ex.InspectionProfileImpl):V
a:com.intellij.profile.codeInspection.ui.ErrorsConfigurableProvider
- com.intellij.openapi.options.ConfigurableProvider
- <init>():V
- a:createConfigurable():com.intellij.profile.codeInspection.ui.ErrorsConfigurable
f:com.intellij.profile.codeInspection.ui.ErrorsConfigurableProviderImpl
- com.intellij.profile.codeInspection.ui.ErrorsConfigurableProvider
- <init>(com.intellij.openapi.project.Project):V
- createConfigurable():com.intellij.profile.codeInspection.ui.ErrorsConfigurable
f:com.intellij.profile.codeInspection.ui.InspectionMetaDataDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.util.function.Function):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.util.function.Function,java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- getDescription():java.lang.String
- getName():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getProblemDescriptor():java.lang.String
- getSuppressId():java.lang.String
- isCleanup():Z
- show():V
- showCleanupOption(Z):V
a:com.intellij.profile.codeInspection.ui.InspectionProfileActionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- canDeleteInspection(com.intellij.codeInspection.InspectionProfileEntry):Z
- deleteInspection(com.intellij.codeInspection.InspectionProfileEntry,java.lang.String):V
- getActions(com.intellij.profile.codeInspection.ui.SingleInspectionProfilePanel):java.util.List
- getAddActions(com.intellij.profile.codeInspection.ui.SingleInspectionProfilePanel):com.intellij.openapi.actionSystem.ActionGroup
- getProfilePanelActions(com.intellij.profile.codeInspection.ui.SingleInspectionProfilePanel):java.util.List
f:com.intellij.profile.codeInspection.ui.InspectionProfileActionProvider$ProfilePanelAction
- java.lang.Record
- <init>(com.intellij.openapi.actionSystem.AnAction,java.lang.String):V
- action():com.intellij.openapi.actionSystem.AnAction
- actionId():java.lang.String
- f:equals(java.lang.Object):Z
- f:hashCode():I
a:com.intellij.profile.codeInspection.ui.InspectionTreeAdvertiser
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- getCustomGroups():java.util.List
f:com.intellij.profile.codeInspection.ui.InspectionTreeAdvertiser$CustomGroup
- java.lang.Record
- <init>(java.lang.String[],java.lang.String):V
- description():java.lang.String
- f:equals(java.lang.Object):Z
- f:hashCode():I
- path():java.lang.String[]
f:com.intellij.profile.codeInspection.ui.InspectionUiUtilKt
- sf:addScrollPaneIfNecessary(javax.swing.JComponent):javax.swing.JComponent
a:com.intellij.profile.codeInspection.ui.LevelChooserAction
- com.intellij.openapi.actionSystem.ex.ComboBoxAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.codeInsight.daemon.impl.SeverityRegistrar):V
- <init>(com.intellij.codeInsight.daemon.impl.SeverityRegistrar,Z):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- createPopupActionGroup(javax.swing.JComponent,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DefaultActionGroup
- s:getSeverities(com.intellij.codeInsight.daemon.impl.SeverityRegistrar):java.util.List
- s:getSeverities(com.intellij.codeInsight.daemon.impl.SeverityRegistrar,Z):java.util.List
- pa:onChosen(com.intellij.lang.annotation.HighlightSeverity):V
- setChosen(com.intellij.lang.annotation.HighlightSeverity):V
c:com.intellij.profile.codeInspection.ui.ProjectInspectionToolsConfigurable
- com.intellij.profile.codeInspection.ui.header.InspectionToolsConfigurable
- <init>(com.intellij.profile.codeInspection.ProjectInspectionProfileManager):V
- p:applyRootProfile(java.lang.String,Z):V
- p:getCurrentProfile():com.intellij.codeInspection.ex.InspectionProfileImpl
c:com.intellij.profile.codeInspection.ui.SingleInspectionProfilePanel
- javax.swing.JPanel
- <init>(com.intellij.profile.codeInspection.ProjectInspectionProfileManager,com.intellij.codeInspection.ex.InspectionProfileModifiableModel):V
- p:accept(com.intellij.codeInspection.ex.InspectionToolWrapper):Z
- apply():V
- s:areToolDescriptorsChanged(com.intellij.openapi.project.Project,com.intellij.codeInspection.ex.InspectionProfileModifiableModel,com.intellij.profile.codeInspection.ui.ToolDescriptors):Z
- s:createSettingsHyperlinkListener(com.intellij.openapi.project.Project):com.intellij.ui.HyperlinkAdapter
- s:createSettingsHyperlinkListener(com.intellij.openapi.project.Project,com.intellij.profile.codeInspection.ui.SingleInspectionProfilePanel):com.intellij.ui.HyperlinkAdapter
- differsFromDefault():Z
- disposeUI():V
- getPreferredFocusedComponent():javax.swing.JComponent
- getPreferredSize():java.awt.Dimension
- getProfile():com.intellij.codeInspection.ex.InspectionProfileModifiableModel
- getProject():com.intellij.openapi.project.Project
- getSelectedTool():com.intellij.codeInspection.ex.InspectionToolWrapper
- isModified():Z
- performProfileReset():V
- removeSelectedRow():V
- s:renderSeverity(com.intellij.lang.annotation.HighlightSeverity):java.lang.String
- reset():V
- selectInspectionGroup(java.lang.String[]):V
- selectInspectionTool(java.lang.String):V
- setFilter(java.lang.String):V
- setVisible(Z):V
- updateSelection():V
f:com.intellij.profile.codeInspection.ui.ToolDescriptors
- s:fromScopeToolState(com.intellij.codeInspection.ex.ScopeToolState,com.intellij.codeInspection.ex.InspectionProfileModifiableModel,com.intellij.openapi.project.Project):com.intellij.profile.codeInspection.ui.ToolDescriptors
- getDefaultDescriptor():com.intellij.codeInspection.ex.Descriptor
- getDefaultScopeToolState():com.intellij.codeInspection.ex.ScopeToolState
- getDescriptors():java.util.stream.Stream
- getNonDefaultDescriptors():java.util.List
f:com.intellij.profile.codeInspection.ui.header.InspectionProfileSchemesPanel
- com.intellij.application.options.schemes.AbstractSchemesPanel
- com.intellij.openapi.Disposable
- s:importInspectionProfile(org.jdom.Element,com.intellij.profile.codeInspection.BaseInspectionProfileManager,com.intellij.openapi.project.Project):com.intellij.codeInspection.ex.InspectionProfileImpl
- selectAnyProfile():V
- useBoldForNonRemovableSchemes():Z
a:com.intellij.profile.codeInspection.ui.header.InspectionToolsConfigurable
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- com.intellij.profile.codeInspection.ui.ErrorsConfigurable
- sf:ID:java.lang.String
- pf:myApplicationProfileManager:com.intellij.profile.codeInspection.BaseInspectionProfileManager
- pf:myProjectProfileManager:com.intellij.profile.codeInspection.ProjectInspectionProfileManager
- <init>(com.intellij.profile.codeInspection.ProjectInspectionProfileManager):V
- p:acceptTool(com.intellij.codeInspection.ex.InspectionToolWrapper):Z
- apply():V
- pa:applyRootProfile(java.lang.String,Z):V
- createComponent():javax.swing.JComponent
- createPanel(com.intellij.codeInspection.ex.InspectionProfileModifiableModel):com.intellij.profile.codeInspection.ui.SingleInspectionProfilePanel
- disposeUIResources():V
- enableSearch(java.lang.String):java.lang.Runnable
- pa:getCurrentProfile():com.intellij.codeInspection.ex.InspectionProfileImpl
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- s:getInspectionsDisplayName():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelectedObject():com.intellij.codeInspection.ex.InspectionProfileModifiableModel
- isModified():Z
- reset():V
- selectInspectionGroup(java.lang.String[]):V
- selectInspectionTool(java.lang.String):V
- selectProfile(com.intellij.codeInspection.ex.InspectionProfileImpl):V
f:com.intellij.profile.codeInspection.ui.inspectionsTree.InspectionsConfigTreeTable
- com.intellij.ui.treeStructure.treetable.TreeTable
- s:getAdditionalPadding():I
- getSelectedToolNodes():java.util.Collection
- paint(java.awt.Graphics):V
f:com.intellij.profile.codeInspection.ui.table.SeverityRenderer
- com.intellij.openapi.ui.ComboBoxTableRenderer
- s:getIcon(com.intellij.codeHighlighting.HighlightDisplayLevel):javax.swing.Icon
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
- isCellEditable(java.util.EventObject):Z
- onClosed(com.intellij.openapi.ui.popup.LightweightWindowEvent):V
c:com.intellij.profile.codeInspection.ui.table.ThreeStateCheckBoxRenderer
- com.intellij.util.ui.ThreeStateCheckBox
- javax.swing.table.TableCellEditor
- javax.swing.table.TableCellRenderer
- <init>():V
- addCellEditorListener(javax.swing.event.CellEditorListener):V
- cancelCellEditing():V
- getCellEditorValue():java.lang.Object
- getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,Z,I,I):java.awt.Component
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
- isCellEditable(java.util.EventObject):Z
- removeCellEditorListener(javax.swing.event.CellEditorListener):V
- shouldSelectCell(java.util.EventObject):Z
- stopCellEditing():Z
a:com.intellij.psi.codeStyle.IndentStatusBarUIContributor
- com.intellij.psi.codeStyle.modifier.CodeStyleStatusBarUIContributor
- <init>(com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):V
- s:createTooltip(java.lang.String,java.lang.String):java.lang.String
- a:getHint():java.lang.String
- s:getIndentInfo(com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):java.lang.String
- getIndentOptions():com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions
- getStatusText(com.intellij.psi.PsiFile):java.lang.String
- getTooltip():java.lang.String
- isShowFileIndentOptionsEnabled():Z
f:com.intellij.psi.codeStyle.arrangement.MemberOrderService
- <init>():V
- getAnchor(com.intellij.psi.PsiElement,com.intellij.psi.codeStyle.CommonCodeStyleSettings,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
com.intellij.psi.codeStyle.arrangement.engine.ArrangementCallback
- a:afterArrangement(java.util.List):V
f:com.intellij.psi.codeStyle.arrangement.engine.ArrangementEngine
- <init>():V
- arrange(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,java.util.Collection):V
- arrange(com.intellij.psi.PsiFile,java.util.Collection):V
- arrange(com.intellij.psi.PsiFile,java.util.Collection,com.intellij.psi.codeStyle.arrangement.engine.ArrangementCallback):V
- s:arrange(java.util.Collection,java.util.List,java.util.List,java.util.Map):java.util.List
- s:getInstance():com.intellij.psi.codeStyle.arrangement.engine.ArrangementEngine
- getUserNotificationInfo():java.lang.String
f:com.intellij.psi.codeStyle.statusbar.CodeStyleStatusBarWidgetFactory
- com.intellij.openapi.wm.impl.status.widget.StatusBarEditorBasedWidgetFactory
- <init>():V
- s:createDefaultIndentConfigureAction(com.intellij.psi.PsiFile):com.intellij.openapi.project.DumbAwareAction
- createWidget(com.intellij.openapi.project.Project):com.intellij.openapi.wm.StatusBarWidget
- getDisplayName():java.lang.String
- getId():java.lang.String
f:com.intellij.psi.filters.FilterPositionUtil
- <init>():V
- s:searchNonSpaceNonCommentBack(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
c:com.intellij.psi.filters.PlainTextFilter
- com.intellij.psi.filters.ElementFilter
- pf:myValue:java.lang.String[]
- <init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String[]):V
- p:getTextByElement(java.lang.Object):java.lang.String
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
- isClassAcceptable(java.lang.Class):Z
f:com.intellij.psi.filters.ScopeFilter
- com.intellij.psi.filters.position.PositionElementFilter
- <init>():V
- <init>(com.intellij.psi.filters.ElementFilter):V
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
c:com.intellij.psi.filters.position.LeftNeighbour
- com.intellij.psi.filters.position.PositionElementFilter
- <init>(com.intellij.psi.filters.ElementFilter):V
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
f:com.intellij.psi.filters.position.ParentElementFilter
- com.intellij.psi.filters.position.PositionElementFilter
- <init>():V
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.filters.ElementFilter):V
- <init>(com.intellij.psi.filters.ElementFilter,I):V
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
f:com.intellij.psi.impl.PsiDocumentManagerImpl
- com.intellij.psi.impl.PsiDocumentManagerBase
- <init>(com.intellij.openapi.project.Project):V
- assertFileIsFromCorrectProject(com.intellij.openapi.vfs.VirtualFile):V
- commitAllDocumentsUnderProgress():Z
- doPostponedOperationsAndUnblockDocument(com.intellij.openapi.editor.Document):V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- getPsiFile(com.intellij.openapi.editor.Document):com.intellij.psi.PsiFile
- isDocumentBlockedByPsi(com.intellij.openapi.editor.Document):Z
- reparseFiles(java.util.Collection,Z):V
f:com.intellij.psi.impl.cache.impl.id.PlatformIdTableBuilding
- sf:EDITOR_HIGHLIGHTER:com.intellij.openapi.util.Key
- s:getTodoIndexer(com.intellij.openapi.fileTypes.FileType):com.intellij.util.indexing.DataIndexer
f:com.intellij.psi.impl.file.SourceRootIconProvider
- <init>():V
- s:getDirectoryIcon(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):javax.swing.Icon
- s:getIconIfExcluded(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):javax.swing.Icon
f:com.intellij.psi.impl.file.SourceRootIconProvider$DirectoryProvider
- com.intellij.ide.IconProvider
- com.intellij.openapi.project.DumbAware
- <init>():V
- getIcon(com.intellij.psi.PsiElement,I):javax.swing.Icon
a:com.intellij.psi.impl.source.LightPsiFileImpl
- com.intellij.psi.impl.PsiElementBase
- com.intellij.psi.impl.PsiFileEx
- <init>(com.intellij.psi.FileViewProvider,com.intellij.lang.Language):V
- acceptChildren(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- f:addRangeAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- f:addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- f:checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- checkSetName(java.lang.String):V
- a:clearCaches():V
- p:clone():com.intellij.psi.impl.source.LightPsiFileImpl
- f:copy():com.intellij.psi.PsiElement
- a:copyLight(com.intellij.psi.FileViewProvider):com.intellij.psi.impl.source.LightPsiFileImpl
- delete():V
- deleteChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- findElementAt(I):com.intellij.psi.PsiElement
- findReferenceAt(I):com.intellij.psi.PsiReference
- a:getChildren():com.intellij.psi.PsiElement[]
- getContainingDirectory():com.intellij.psi.PsiDirectory
- getContainingFile():com.intellij.psi.PsiFile
- getContext():com.intellij.psi.PsiElement
- f:getFileDocument():com.intellij.openapi.editor.Document
- getFirstChild():com.intellij.psi.PsiElement
- getLanguage():com.intellij.lang.Language
- getLastChild():com.intellij.psi.PsiElement
- getManager():com.intellij.psi.PsiManager
- getModificationStamp():J
- getName():java.lang.String
- getNode():com.intellij.lang.FileASTNode
- getOriginalFile():com.intellij.psi.PsiFile
- getParent():com.intellij.psi.PsiDirectory
- getParentDirectory():com.intellij.psi.PsiDirectory
- getProject():com.intellij.openapi.project.Project
- getPsiRoots():com.intellij.psi.PsiFile[]
- getReferences():com.intellij.psi.PsiReference[]
- getStartOffsetInParent():I
- getText():java.lang.String
- getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- getViewProvider():com.intellij.psi.FileViewProvider
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- isContentsLoaded():Z
- isPhysical():Z
- isValid():Z
- isWritable():Z
- markInvalidated():V
- navigate(Z):V
- onContentReload():V
- processChildren(com.intellij.psi.search.PsiElementProcessor):Z
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- setIsValidExplicitly(Z):V
- setName(java.lang.String):com.intellij.psi.PsiElement
- setOriginalFile(com.intellij.psi.PsiFile):V
- subtreeChanged():V
- textContains(C):Z
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
- textToCharArray():C[]
c:com.intellij.psi.impl.source.codeStyle.CodeStyleSchemeImpl
- com.intellij.openapi.options.ExternalizableSchemeAdapter
- com.intellij.configurationStore.SerializableScheme
- com.intellij.psi.codeStyle.CodeStyleScheme
- <init>(java.lang.String,Z,com.intellij.psi.codeStyle.CodeStyleScheme):V
- getCodeStyleSettings():com.intellij.psi.codeStyle.CodeStyleSettings
- getDisplayName():java.lang.String
- getSchemeState():com.intellij.openapi.options.SchemeState
- isDefault():Z
- setCodeStyleSettings(com.intellij.psi.codeStyle.CodeStyleSettings):V
- writeScheme():org.jdom.Element
c:com.intellij.psi.impl.source.codeStyle.CodeStyleSchemeXmlImporter
- com.intellij.psi.impl.source.codeStyle.CodeStyleSettingsLoader
- com.intellij.openapi.options.SchemeImporter
- <init>():V
- getSourceExtensions():java.lang.String[]
- importScheme(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.codeStyle.CodeStyleScheme,com.intellij.openapi.options.SchemeFactory):com.intellij.psi.codeStyle.CodeStyleScheme
a:com.intellij.psi.impl.source.codeStyle.CodeStyleSchemesImpl
- com.intellij.psi.codeStyle.CodeStyleSchemes
- sf:CODE_STYLES_DIR_PATH:java.lang.String
- pf:mySchemeManager:com.intellij.openapi.options.SchemeManager
- <init>(com.intellij.openapi.options.SchemeManagerFactory):V
- addScheme(com.intellij.psi.codeStyle.CodeStyleScheme):V
- createNewScheme(java.lang.String,com.intellij.psi.codeStyle.CodeStyleScheme):com.intellij.psi.codeStyle.CodeStyleScheme
- deleteScheme(com.intellij.psi.codeStyle.CodeStyleScheme):V
- findSchemeByName(java.lang.String):com.intellij.psi.codeStyle.CodeStyleScheme
- getAllSchemes():java.util.List
- getCurrentScheme():com.intellij.psi.codeStyle.CodeStyleScheme
- getDefaultScheme():com.intellij.psi.codeStyle.CodeStyleScheme
- s:getSchemeManager():com.intellij.openapi.options.SchemeManager
- setCurrentScheme(com.intellij.psi.codeStyle.CodeStyleScheme):V
c:com.intellij.psi.impl.source.codeStyle.CodeStyleSettingsLoader
- <init>():V
- ps:findSchemeRoot(org.jdom.Element):org.jdom.Element
- loadSettings(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.codeStyle.CodeStyleSettings
- ps:loadSettings(org.jdom.Element,com.intellij.psi.codeStyle.CodeStyleSettings):V
f:com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- after():com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- afterOptional(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- afterOptionalMix(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement[]):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- before():com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- beforeOptional(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- beforeOptionalMix(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement[]):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- beforeParentheses(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement,com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- copy():com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- copyAnd(java.util.function.Consumer):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- s:createEditorPosition(com.intellij.openapi.editor.Editor,I,java.util.function.BiFunction,java.util.function.Function):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- elementAfterOnSameLine(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement[]):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement
- findLeftParenthesisBackwardsSkippingNested(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement,com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- findLeftParenthesisBackwardsSkippingNestedWithPredicate(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement,com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement,java.util.function.Predicate):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- findStartOf(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):I
- getChars():java.lang.CharSequence
- getCurrElement():com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement
- getEditor():com.intellij.openapi.editor.Editor
- getLanguage():com.intellij.lang.Language
- getStartOffset():I
- hasEmptyLineAfter(I):Z
- hasLineBreaksAfter(I):Z
- isAfterOnSameLine(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement[]):Z
- isAt(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):Z
- isAt(com.intellij.psi.tree.IElementType):Z
- isAtAnyOf(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement[]):Z
- isAtEnd():Z
- isAtLanguage(com.intellij.lang.Language):Z
- isAtMultiline():Z
- isAtMultiline(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement[]):Z
- map(com.intellij.psi.tree.IElementType):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement
- matchesRule(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$Rule):Z
- moveAfter():V
- moveAfterOptional(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):V
- moveAfterOptionalMix(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement[]):V
- moveAfterParentheses(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement,com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):V
- moveBefore():V
- moveBeforeOptional(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):V
- moveBeforeOptionalMix(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement[]):V
- moveBeforeParentheses(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement,com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):V
- moveToLeftParenthesisBackwardsSkippingNested(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement,com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement):V
- moveToLeftParenthesisBackwardsSkippingNestedWithPredicate(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement,com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement,java.util.function.Predicate):V
com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$Rule
- a:check(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition):Z
com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement
c:com.intellij.psi.impl.source.codeStyle.lineIndent.FormatterBasedLineIndentProvider
- com.intellij.psi.codeStyle.lineIndent.LineIndentProvider
- <init>():V
- getLineIndent(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.lang.Language,I):java.lang.String
- isSuitableFor(com.intellij.lang.Language):Z
c:com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator
- sf:LINE_AFTER:com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator$BaseLineOffsetCalculator
- sf:LINE_BEFORE:com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator$BaseLineOffsetCalculator
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator$BaseLineOffsetCalculator,com.intellij.formatting.Indent):V
- p:getBaseIndent(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition):java.lang.String
com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator$BaseLineOffsetCalculator
- a:getOffsetInBaseIndentLine(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition):I
a:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider
- com.intellij.psi.codeStyle.lineIndent.LineIndentProvider
- <init>():V
- p:dropIndentAfterReturnLike(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition):Z
- p:getBlockStatementStartOffset(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition):I
- p:getDeepBlockStatementStartOffset(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition):I
- ps:getDefaultIndentFromType(com.intellij.formatting.Indent$Type):com.intellij.formatting.Indent
- p:getIndent(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.lang.Language,I):com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator
- p:getIndentInBlock(com.intellij.openapi.project.Project,com.intellij.lang.Language,com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition):com.intellij.formatting.Indent
- p:getIndentInBrackets():com.intellij.formatting.Indent
- p:getIndentTypeInBrackets():com.intellij.formatting.Indent$Type
- p:getIteratorAtPosition(com.intellij.openapi.editor.Editor,I):com.intellij.openapi.editor.highlighter.HighlighterIterator
- getLineIndent(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.lang.Language,I):java.lang.String
- getPosition(com.intellij.openapi.editor.Editor,I):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition
- p:isColonAfterLabelOrCase(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition):Z
- p:isInArray(com.intellij.openapi.editor.Editor,I):Z
- p:isIndentProvider(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition,Z):Z
- p:isInsideForLikeConstruction(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition):Z
- p:isStartOfStatementWithOptionalBlock(com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition):Z
- f:isSuitableFor(com.intellij.lang.Language):Z
- a:isSuitableForLanguage(com.intellij.lang.Language):Z
- pa:mapType(com.intellij.psi.tree.IElementType):com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement
f:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$IndentCalculatorFactory
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- createIndentCalculator(com.intellij.formatting.Indent$Type,com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator$BaseLineOffsetCalculator):com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator
- createIndentCalculator(com.intellij.formatting.Indent,com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator$BaseLineOffsetCalculator):com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator
- createIndentCalculatorWithCustomBaseIndent(com.intellij.formatting.Indent,java.lang.String):com.intellij.psi.impl.source.codeStyle.lineIndent.IndentCalculator
e:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- java.lang.Enum
- com.intellij.psi.impl.source.codeStyle.SemanticEditorPosition$SyntaxElement
- sf:ArrayClosingBracket:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:ArrayOpeningBracket:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:BlockClosingBrace:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:BlockComment:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:BlockOpeningBrace:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:Colon:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:Comma:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:DoKeyword:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:DocBlockEnd:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:DocBlockStart:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:ElseKeyword:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:ForKeyword:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:IfKeyword:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:LanguageStartDelimiter:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:LeftParenthesis:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:LineComment:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:RightParenthesis:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:Semicolon:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:SwitchCase:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:SwitchDefault:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:TryKeyword:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- sf:Whitespace:com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- s:valueOf(java.lang.String):com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement
- s:values():com.intellij.psi.impl.source.codeStyle.lineIndent.JavaLikeLangLineIndentProvider$JavaLikeElement[]
f:com.intellij.psi.impl.source.parsing.ParseUtilBase
- <init>():V
- s:createTokenElement(com.intellij.lexer.Lexer,com.intellij.util.CharTable):com.intellij.psi.impl.source.tree.TreeElement
f:com.intellij.psi.impl.source.resolve.reference.CommentsReferenceContributor
- com.intellij.psi.PsiReferenceContributor
- sf:COMMENTS_REFERENCE_PROVIDER_TYPE:com.intellij.psi.ReferenceProviderType
- <init>():V
- registerReferenceProviders(com.intellij.psi.PsiReferenceRegistrar):V
c:com.intellij.psi.impl.source.resolve.reference.impl.manipulators.PsiCommentManipulator
- com.intellij.psi.AbstractElementManipulator
- <init>():V
- getRangeInElement(com.intellij.psi.PsiComment):com.intellij.openapi.util.TextRange
- handleContentChange(com.intellij.psi.PsiComment,com.intellij.openapi.util.TextRange,java.lang.String):com.intellij.psi.PsiComment
f:com.intellij.psi.impl.source.resolve.reference.impl.providers.JpsFileTargetContextUtils
- s:prepareTargetContexts(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.util.Collection):java.util.Collection
c:com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReferenceHelper
- com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceHelper
- <init>():V
- findRoot(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFileSystemItem
- getContexts(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- s:getInstance():com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReferenceHelper
- getRoots(com.intellij.openapi.module.Module):java.util.Collection
- getTargetContexts(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z):java.util.Collection
- isMine(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- registerFixes(com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference):java.util.List
- trimUrl(java.lang.String):java.lang.String
f:com.intellij.psi.impl.source.tree.injected.ConcatenationInjectorManager
- com.intellij.openapi.util.SimpleModificationTracker
- com.intellij.openapi.Disposable
- sf:EP_NAME:com.intellij.openapi.extensions.ProjectExtensionPointName
- <init>(com.intellij.openapi.project.Project):V
- dispose():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.impl.source.tree.injected.ConcatenationInjectorManager
a:com.intellij.psi.impl.source.tree.injected.ConcatenationInjectorManager$BaseConcatenation2InjectorAdapter
- com.intellij.lang.injection.MultiHostInjector
- <init>(com.intellij.openapi.project.Project):V
- pa:computeAnchorAndOperands(com.intellij.psi.PsiElement):com.intellij.openapi.util.Pair
- getLanguagesToInject(com.intellij.lang.injection.MultiHostRegistrar,com.intellij.psi.PsiElement):V
a:com.intellij.psi.impl.source.tree.injected.changesHandler.BaseInjectedFileChangesHandler
- com.intellij.injected.editor.InjectedFileChangesHandler
- pf:myFragmentDocument:com.intellij.openapi.editor.Document
- pf:myHostDocument:com.intellij.openapi.editor.Document
- pf:myHostEditor:com.intellij.openapi.editor.Editor
- p:myInjectedFile:com.intellij.psi.PsiFile
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile):V
- dispose():V
- tryReuse(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):Z
c:com.intellij.psi.impl.source.tree.injected.changesHandler.CommonInjectedFileChangesHandler
- com.intellij.psi.impl.source.tree.injected.changesHandler.BaseInjectedFileChangesHandler
- <init>(java.util.List,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile):V
- commitToOriginal(com.intellij.openapi.editor.event.DocumentEvent):V
- dispose():V
- f:distributeTextToMarkers(java.util.List,com.intellij.openapi.util.TextRange,I):java.util.List
- pf:esclbr(java.lang.String):java.lang.String
- pf:failAndReport(java.lang.String,com.intellij.openapi.editor.event.DocumentEvent,java.lang.Exception):java.lang.Void
- bs:failAndReport$default(com.intellij.psi.impl.source.tree.injected.changesHandler.CommonInjectedFileChangesHandler,java.lang.String,com.intellij.openapi.editor.event.DocumentEvent,java.lang.Exception,I,java.lang.Object):java.lang.Void
- pf:fragmentMarkerFromShred(com.intellij.psi.PsiLanguageInjectionHost$Shred):com.intellij.openapi.editor.RangeMarker
- pf:getMarkers():java.util.List
- pf:getMarkersFromShreds(java.util.List):java.util.List
- handlesRange(com.intellij.openapi.util.TextRange):Z
- isValid():Z
- pf:logMarkers(com.intellij.openapi.diagnostic.Logger,java.lang.String):V
- pf:markerString(com.intellij.psi.impl.source.tree.injected.changesHandler.MarkersMapping):java.lang.String
- p:rebuildMarkers(com.intellij.openapi.util.TextRange):V
- p:updateHostElement(com.intellij.psi.PsiLanguageInjectionHost,com.intellij.openapi.util.TextRange,java.lang.String):com.intellij.psi.PsiLanguageInjectionHost
- pf:updateInjectionHostElement(com.intellij.psi.PsiLanguageInjectionHost,com.intellij.openapi.util.ProperTextRange,java.lang.String):com.intellij.psi.PsiLanguageInjectionHost
f:com.intellij.psi.impl.source.tree.injected.changesHandler.CommonInjectedFileChangesHandlerKt
- sf:getContentRange(com.intellij.psi.PsiLanguageInjectionHost):com.intellij.openapi.util.TextRange
- sf:getInnerRange(com.intellij.psi.PsiLanguageInjectionHost$Shred):com.intellij.openapi.util.TextRange
- sf:union(com.intellij.openapi.util.TextRange,com.intellij.openapi.util.TextRange):com.intellij.openapi.util.TextRange
f:com.intellij.psi.impl.source.tree.injected.changesHandler.MarkersMapping
- <init>(com.intellij.openapi.editor.RangeMarker,com.intellij.openapi.editor.RangeMarker,com.intellij.psi.SmartPsiElementPointer):V
- f:component1():com.intellij.openapi.editor.RangeMarker
- f:component2():com.intellij.openapi.editor.RangeMarker
- f:component3():com.intellij.psi.SmartPsiElementPointer
- f:copy(com.intellij.openapi.editor.RangeMarker,com.intellij.openapi.editor.RangeMarker,com.intellij.psi.SmartPsiElementPointer):com.intellij.psi.impl.source.tree.injected.changesHandler.MarkersMapping
- bs:copy$default(com.intellij.psi.impl.source.tree.injected.changesHandler.MarkersMapping,com.intellij.openapi.editor.RangeMarker,com.intellij.openapi.editor.RangeMarker,com.intellij.psi.SmartPsiElementPointer,I,java.lang.Object):com.intellij.psi.impl.source.tree.injected.changesHandler.MarkersMapping
- f:dispose():V
- equals(java.lang.Object):Z
- f:getFragmentMarker():com.intellij.openapi.editor.RangeMarker
- f:getFragmentRange():com.intellij.openapi.util.TextRange
- f:getHost():com.intellij.psi.PsiLanguageInjectionHost
- f:getHostElementRange():com.intellij.openapi.util.TextRange
- f:getHostMarker():com.intellij.openapi.editor.RangeMarker
- f:getHostPointer():com.intellij.psi.SmartPsiElementPointer
- hashCode():I
- f:isValid():Z
c:com.intellij.psi.search.PredefinedSearchScopeProviderImpl
- com.intellij.psi.search.PredefinedSearchScopeProvider
- sf:Companion:com.intellij.psi.search.PredefinedSearchScopeProviderImpl$Companion
- <init>():V
- sf:getCurrentFileScopeName():java.lang.String
- getPredefinedScopes(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,Z):java.util.List
- getPredefinedScopesAsync(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,Z):org.jetbrains.concurrency.Promise
- getPredefinedScopesSuspend(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext,Z,Z,Z,Z,Z,kotlin.coroutines.Continuation):java.lang.Object
- sf:getRecentlyChangedFilesScopeName():java.lang.String
- sf:getRecentlyViewedFilesScopeName():java.lang.String
- sf:getSelectedFilesScope(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext,com.intellij.psi.PsiFile):com.intellij.psi.search.SearchScope
f:com.intellij.psi.search.PredefinedSearchScopeProviderImpl$Companion
- f:getCurrentFileScopeName():java.lang.String
- f:getRecentlyChangedFilesScopeName():java.lang.String
- f:getRecentlyViewedFilesScopeName():java.lang.String
- f:getSelectedFilesScope(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext,com.intellij.psi.PsiFile):com.intellij.psi.search.SearchScope
- f:recentFilesScope(com.intellij.openapi.project.Project,Z):com.intellij.psi.search.SearchScope
c:com.intellij.psi.search.ProjectScopeBuilderImpl
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project):V
- buildAllScope():com.intellij.psi.search.GlobalSearchScope
- buildContentScope():com.intellij.psi.search.GlobalSearchScope
- buildEverythingScope():com.intellij.psi.search.GlobalSearchScope
- buildLibrariesScope():com.intellij.psi.search.GlobalSearchScope
- buildProjectScope():com.intellij.psi.search.GlobalSearchScope
f:com.intellij.psi.search.scope.EditorSelectionLocalSearchScope
- com.intellij.psi.search.scope.RangeBasedLocalSearchScope
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,java.lang.String):V
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,java.lang.String,Z):V
- containsRange(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):Z
- equals(java.lang.Object):Z
- getRanges(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.util.TextRange[]
- getVirtualFiles():com.intellij.openapi.vfs.VirtualFile[]
a:com.intellij.psi.search.scope.RangeBasedLocalSearchScope
- com.intellij.psi.search.LocalSearchScope
- pf:myDisplayName:java.lang.String
- pf:myIgnoreInjectedPsi:Z
- <init>(java.lang.String,Z):V
- ps:collectPsiElementsAtRange(com.intellij.psi.PsiFile,java.util.List,I,I):V
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getDisplayName():java.lang.String
- pa:getPsiElements():com.intellij.psi.PsiElement[]
- a:getRanges(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.util.TextRange[]
- getScope():com.intellij.psi.PsiElement[]
- intersectWith(com.intellij.psi.search.LocalSearchScope):com.intellij.psi.search.LocalSearchScope
- intersectWith(com.intellij.psi.search.SearchScope):com.intellij.psi.search.SearchScope
- isIgnoreInjectedPsi():Z
- isInScope(com.intellij.openapi.vfs.VirtualFile):Z
- union(com.intellij.psi.search.SearchScope):com.intellij.psi.search.SearchScope
c:com.intellij.psi.search.scope.packageSet.FilePackageSetParserExtension
- com.intellij.psi.search.scope.packageSet.PackageSetParserExtension
- <init>():V
- ps:parseFilePattern(com.intellij.lexer.Lexer):java.lang.String
- parsePackageSet(com.intellij.lexer.Lexer,java.lang.String,java.lang.String):com.intellij.psi.search.scope.packageSet.PackageSet
- parseScope(com.intellij.lexer.Lexer):java.lang.String
com.intellij.psi.search.scope.packageSet.PackageSetParserExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:parsePackageSet(com.intellij.lexer.Lexer,java.lang.String,java.lang.String):com.intellij.psi.search.scope.packageSet.PackageSet
- a:parseScope(com.intellij.lexer.Lexer):java.lang.String
com.intellij.psi.search.scope.packageSet.lexer.ScopeTokenTypes
- com.intellij.psi.TokenType
- sf:ANDAND:com.intellij.psi.tree.IElementType
- sf:ASTERISK:com.intellij.psi.tree.IElementType
- sf:COLON:com.intellij.psi.tree.IElementType
- sf:DIV:com.intellij.psi.tree.IElementType
- sf:DOT:com.intellij.psi.tree.IElementType
- sf:EXCL:com.intellij.psi.tree.IElementType
- sf:IDENTIFIER:com.intellij.psi.tree.IElementType
- sf:INTEGER_LITERAL:com.intellij.psi.tree.IElementType
- sf:LBRACKET:com.intellij.psi.tree.IElementType
- sf:LPARENTH:com.intellij.psi.tree.IElementType
- sf:MINUS:com.intellij.psi.tree.IElementType
- sf:OROR:com.intellij.psi.tree.IElementType
- sf:RBRACKET:com.intellij.psi.tree.IElementType
- sf:RPARENTH:com.intellij.psi.tree.IElementType
- sf:SHARP:com.intellij.psi.tree.IElementType
- sf:TILDE:com.intellij.psi.tree.IElementType
com.intellij.psi.templateLanguages.MultipleLangCommentProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:canProcess(com.intellij.psi.PsiFile,com.intellij.psi.FileViewProvider):Z
- a:getLineCommenter(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.lang.Language,com.intellij.lang.Language):com.intellij.lang.Commenter
c:com.intellij.psi.templateLanguages.SimpleTemplateLanguageFormattingModelBuilder
- com.intellij.formatting.FormattingModelBuilder
- <init>():V
- createModel(com.intellij.formatting.FormattingContext):com.intellij.formatting.FormattingModel
f:com.intellij.psi.templateLanguages.TemplateDataLanguageConfigurable
- com.intellij.util.ui.tree.PerFileConfigurableBase
- <init>(com.intellij.openapi.project.Project):V
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
f:com.intellij.psi.templateLanguages.TemplateDataLanguageMappings
- com.intellij.lang.LanguagePerFileMappings
- <init>(com.intellij.openapi.project.Project):V
- getAvailableValues():java.util.List
- getDefaultMapping(com.intellij.openapi.vfs.VirtualFile):com.intellij.lang.Language
- s:getDefaultMappingForFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.lang.Language
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.templateLanguages.TemplateDataLanguageMappings
- getMapping(com.intellij.openapi.vfs.VirtualFile):com.intellij.lang.Language
- s:getTemplateableLanguages():java.util.List
a:com.intellij.psi.util.proximity.ProximityStatistician
- com.intellij.psi.statistics.Statistician
- <init>():V
a:com.intellij.psi.util.proximity.ProximityWeigher
- com.intellij.psi.Weigher
- <init>():V
- a:weigh(com.intellij.psi.PsiElement,com.intellij.psi.util.ProximityLocation):java.lang.Comparable
f:com.intellij.psi.util.proximity.PsiProximityComparator
- java.util.Comparator
- sf:STATISTICS_KEY:com.intellij.openapi.util.Key
- sf:WEIGHER_KEY:com.intellij.openapi.util.Key
- <init>(com.intellij.psi.PsiElement):V
- compare(java.lang.Object,java.lang.Object):I
- s:getProximity(com.intellij.openapi.util.Computable,com.intellij.psi.PsiElement,com.intellij.util.ProcessingContext):com.intellij.psi.WeighingComparable
- s:getProximity(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.WeighingComparable
a:com.intellij.refactoring.BaseRefactoringIntentionAction
- com.intellij.codeInsight.intention.PsiElementBaseIntentionAction
- com.intellij.codeInsight.intention.HighPriorityAction
- com.intellij.openapi.util.Iconable
- <init>():V
- getIcon(I):javax.swing.Icon
a:com.intellij.refactoring.ClassRefactoringHandlerBase
- com.intellij.refactoring.RefactoringActionHandler
- com.intellij.refactoring.lang.ElementsHandler
- <init>():V
- pa:acceptsElement(com.intellij.psi.PsiElement):Z
- pa:getHelpId():java.lang.String
- pa:getInvalidPositionMessage():java.lang.String
- pa:getTitle():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- isEnabledOnElements(com.intellij.psi.PsiElement[]):Z
- ps:navigate(com.intellij.psi.PsiElement):V
- pa:showDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.refactoring.IntroduceTargetChooser
- s:showChooser(com.intellij.openapi.editor.Editor,java.util.List,com.intellij.openapi.util.Pass,com.intellij.util.Function):V
- s:showChooser(com.intellij.openapi.editor.Editor,java.util.List,com.intellij.openapi.util.Pass,com.intellij.util.Function,java.lang.String):V
- s:showChooser(com.intellij.openapi.editor.Editor,java.util.List,com.intellij.openapi.util.Pass,com.intellij.util.Function,java.lang.String,I,com.intellij.util.NotNullFunction):V
- s:showChooser(com.intellij.openapi.editor.Editor,java.util.List,com.intellij.openapi.util.Pass,com.intellij.util.Function,java.lang.String,com.intellij.util.NotNullFunction):V
- s:showIntroduceTargetChooser(com.intellij.openapi.editor.Editor,java.util.List,java.util.function.Consumer,java.lang.String,I):V
- s:showIntroduceTargetChooser(com.intellij.openapi.editor.Editor,java.util.List,java.util.function.Consumer,java.lang.String,javax.swing.JComponent,I):V
a:com.intellij.refactoring.RefactoringCodeVisionSupport
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- s:isChangeSignatureCodeVisionEnabled(com.intellij.openapi.fileTypes.FileType):Z
- s:isRenameCodeVisionEnabled(com.intellij.openapi.fileTypes.FileType):Z
- a:supportsChangeSignature(com.intellij.openapi.fileTypes.FileType):Z
- a:supportsRename(com.intellij.openapi.fileTypes.FileType):Z
a:com.intellij.refactoring.RefactoringImpl
- com.intellij.refactoring.Refactoring
- pf:myProcessor:com.intellij.refactoring.BaseRefactoringProcessor
- <init>(com.intellij.refactoring.BaseRefactoringProcessor):V
- doRefactoring(com.intellij.usageView.UsageInfo[]):V
- findUsages():com.intellij.usageView.UsageInfo[]
- isInteractive():Z
- isPreviewUsages():Z
- preprocessUsages(com.intellij.openapi.util.Ref):Z
- run():V
- setInteractive(java.lang.Runnable):V
- setPreviewUsages(Z):V
- shouldPreviewUsages(com.intellij.usageView.UsageInfo[]):Z
e:com.intellij.refactoring.SkipOverwriteChoice
- java.lang.Enum
- sf:OVERWRITE:com.intellij.refactoring.SkipOverwriteChoice
- sf:OVERWRITE_ALL:com.intellij.refactoring.SkipOverwriteChoice
- sf:SKIP:com.intellij.refactoring.SkipOverwriteChoice
- sf:SKIP_ALL:com.intellij.refactoring.SkipOverwriteChoice
- s:askUser(com.intellij.psi.PsiDirectory,java.lang.String,java.lang.String,Z):com.intellij.refactoring.SkipOverwriteChoice
- s:valueOf(java.lang.String):com.intellij.refactoring.SkipOverwriteChoice
- s:values():com.intellij.refactoring.SkipOverwriteChoice[]
a:com.intellij.refactoring.actions.BasePlatformRefactoringAction
- com.intellij.refactoring.actions.BaseRefactoringAction
- <init>():V
- p:getHandler(com.intellij.lang.Language,com.intellij.psi.PsiElement):com.intellij.refactoring.RefactoringActionHandler
- pf:getHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.refactoring.RefactoringActionHandler
- pa:getRefactoringHandler(com.intellij.lang.refactoring.RefactoringSupportProvider):com.intellij.refactoring.RefactoringActionHandler
- p:getRefactoringHandler(com.intellij.lang.refactoring.RefactoringSupportProvider,com.intellij.psi.PsiElement):com.intellij.refactoring.RefactoringActionHandler
- p:isAvailableForLanguage(com.intellij.lang.Language):Z
- p:isAvailableOnElementInEditorAndFile(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):Z
- p:isEnabledOnElements(com.intellij.psi.PsiElement[]):Z
- p:isHidden():Z
a:com.intellij.refactoring.actions.BaseRefactoringAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:disableOnCompiledElement():Z
- p:getActionName(com.intellij.openapi.actionSystem.DataContext):java.lang.String
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getElementAtCaret(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- pa:getHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.refactoring.RefactoringActionHandler
- s:getPsiElementArray(com.intellij.openapi.actionSystem.DataContext):com.intellij.psi.PsiElement[]
- p:hasAvailableHandler(com.intellij.openapi.actionSystem.DataContext):Z
- p:isAvailableForFile(com.intellij.psi.PsiFile):Z
- p:isAvailableForLanguage(com.intellij.lang.Language):Z
- pa:isAvailableInEditorOnly():Z
- p:isAvailableOnElementInEditorAndFile(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):Z
- p:isAvailableOnElementInEditorAndFile(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext,java.lang.String):Z
- p:isEnabledOnDataContext(com.intellij.openapi.actionSystem.DataContext):Z
- pa:isEnabledOnElements(com.intellij.psi.PsiElement[]):Z
- p:isHidden():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.refactoring.actions.ChangeSignatureAction
- com.intellij.refactoring.actions.BasePlatformRefactoringAction
- <init>():V
- s:getChangeSignatureHandler(com.intellij.psi.PsiElement):com.intellij.refactoring.changeSignature.ChangeSignatureHandler
- isAvailableInEditorOnly():Z
- isEnabledOnElements(com.intellij.psi.PsiElement[]):Z
f:com.intellij.refactoring.actions.ExtractClassAction
- com.intellij.refactoring.actions.BasePlatformRefactoringAction
- <init>():V
- isAvailableInEditorOnly():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.refactoring.actions.ExtractIncludeAction
- com.intellij.refactoring.actions.BasePlatformRefactoringAction
- <init>():V
- isAvailableInEditorOnly():Z
- isEnabledOnElements(com.intellij.psi.PsiElement[]):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.refactoring.actions.ExtractInterfaceAction
- com.intellij.refactoring.actions.ExtractSuperActionBase
- <init>():V
f:com.intellij.refactoring.actions.ExtractMethodAction
- com.intellij.refactoring.actions.IntroduceActionBase
- <init>():V
f:com.intellij.refactoring.actions.ExtractModuleAction
- com.intellij.refactoring.actions.ExtractSuperActionBase
- <init>():V
a:com.intellij.refactoring.actions.ExtractSuperActionBase
- com.intellij.refactoring.actions.BasePlatformRefactoringAction
- <init>():V
- isAvailableInEditorOnly():Z
- s:removeFirstWordInMainMenu(com.intellij.openapi.actionSystem.AnAction,com.intellij.openapi.actionSystem.AnActionEvent):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.refactoring.actions.ExtractSuperclassAction
- com.intellij.refactoring.actions.ExtractSuperActionBase
- <init>():V
a:com.intellij.refactoring.actions.IntroduceActionBase
- com.intellij.refactoring.actions.BasePlatformRefactoringAction
- <init>():V
- p:isAvailableInEditorOnly():Z
- p:isEnabledOnElements(com.intellij.psi.PsiElement[]):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.refactoring.actions.IntroduceConstantAction
- com.intellij.refactoring.actions.IntroduceActionBase
- <init>():V
f:com.intellij.refactoring.actions.IntroduceFieldAction
- com.intellij.refactoring.actions.IntroduceActionBase
- <init>():V
f:com.intellij.refactoring.actions.IntroduceFunctionalParameterAction
- com.intellij.refactoring.actions.IntroduceActionBase
- <init>():V
- s:getRefactoringName():java.lang.String
f:com.intellij.refactoring.actions.IntroduceFunctionalVariableAction
- com.intellij.refactoring.actions.IntroduceActionBase
- <init>():V
- s:getRefactoringName():java.lang.String
f:com.intellij.refactoring.actions.IntroduceParameterAction
- com.intellij.refactoring.actions.IntroduceActionBase
- <init>():V
f:com.intellij.refactoring.actions.IntroduceVariableAction
- com.intellij.refactoring.actions.IntroduceActionBase
- <init>():V
c:com.intellij.refactoring.actions.RenameElementAction
- com.intellij.openapi.actionSystem.AnAction
- <init>():V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:isRenameEnabledOnElements(com.intellij.psi.PsiElement[]):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.refactoring.actions.RenameFileActionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- enabledInProjectView(com.intellij.psi.PsiFile):Z
f:com.intellij.refactoring.actions.SafeDeleteAction
- com.intellij.refactoring.actions.BaseRefactoringAction
- <init>():V
- getHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.refactoring.RefactoringActionHandler
- isAvailableInEditorOnly():Z
- isEnabledOnElements(com.intellij.psi.PsiElement[]):Z
a:com.intellij.refactoring.changeSignature.CallerChooserBase
- com.intellij.openapi.ui.DialogWrapper
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,java.lang.String,com.intellij.ui.treeStructure.Tree,java.lang.String,com.intellij.util.Consumer):V
- p:createCenterPanel():javax.swing.JComponent
- p:createEditor():com.intellij.openapi.editor.Editor
- p:createTreeNodeFor(com.intellij.psi.PsiElement,java.util.HashSet,java.lang.Runnable):com.intellij.refactoring.changeSignature.MemberNodeBase
- dispose():V
- p:doOKAction():V
- pa:findDeepestSuperMethods(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement[]
- p:findElementsToHighlight(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.util.Collection
- p:getCalleeEditorTitle():java.lang.String
- p:getCalleeNode(com.intellij.refactoring.changeSignature.MemberNodeBase):com.intellij.refactoring.changeSignature.MemberNodeBase
- p:getCallerNode(com.intellij.refactoring.changeSignature.MemberNodeBase):com.intellij.refactoring.changeSignature.MemberNodeBase
- p:getDimensionServiceKey():java.lang.String
- p:getEmptyCalleeText():java.lang.String
- p:getEmptyCallerText():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getSelectedNodes():java.util.Set
- p:getTopMember():com.intellij.psi.PsiElement
- getTree():com.intellij.ui.treeStructure.Tree
a:com.intellij.refactoring.changeSignature.ChangeSignatureDialogBase
- com.intellij.refactoring.ui.RefactoringDialog
- psf:EXIT_SILENTLY:java.lang.String
- pf:myDefaultValueContext:com.intellij.psi.PsiElement
- pf:myMethod:com.intellij.refactoring.changeSignature.MethodDescriptor
- p:myMethodsToPropagateParameters:java.util.Set
- p:myNameField:com.intellij.ui.EditorTextField
- p:myNamePanel:javax.swing.JPanel
- p:myParametersList:com.intellij.util.ui.table.JBListTable
- p:myParametersTable:com.intellij.ui.table.TableView
- pf:myParametersTableModel:com.intellij.refactoring.changeSignature.ParameterTableModelBase
- p:myPropagateParamChangesButton:com.intellij.ui.AnActionButton
- p:myReturnTypeCodeFragment:com.intellij.psi.PsiCodeFragment
- p:myReturnTypeField:com.intellij.ui.EditorTextField
- pf:mySignatureUpdater:com.intellij.refactoring.changeSignature.ChangeSignatureDialogBase$UpdateSignatureListener
- p:myVisibilityPanel:com.intellij.refactoring.ui.VisibilityPanelBase
- <init>(com.intellij.openapi.project.Project,com.intellij.refactoring.changeSignature.MethodDescriptor,Z,com.intellij.psi.PsiElement):V
- pa:calculateSignature():java.lang.String
- p:createAdditionalPanels():java.util.List
- pa:createCallerChooser(java.lang.String,com.intellij.ui.treeStructure.Tree,com.intellij.util.Consumer):com.intellij.refactoring.changeSignature.CallerChooserBase
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- p:createOptionsPanel():javax.swing.JComponent
- pa:createParametersInfoModel(com.intellij.refactoring.changeSignature.MethodDescriptor):com.intellij.refactoring.changeSignature.ParameterTableModelBase
- p:createParametersListTable():com.intellij.refactoring.changeSignature.ChangeSignatureDialogBase$ParametersListTable
- p:createParametersPanel(Z):javax.swing.JPanel
- pa:createRefactoringProcessor():com.intellij.refactoring.BaseRefactoringProcessor
- pa:createReturnTypeCodeFragment():com.intellij.psi.PsiCodeFragment
- p:createReturnTypeTextField(com.intellij.openapi.editor.Document):com.intellij.ui.EditorTextField
- p:createSignaturePreviewComponent():com.intellij.refactoring.ui.MethodSignatureComponent
- pa:createVisibilityControl():com.intellij.refactoring.ui.VisibilityPanelBase
- p:createVisibilityPanel():javax.swing.JPanel
- p:customizeParametersTable(com.intellij.ui.table.TableView):V
- p:doAction():V
- p:getDimensionServiceKey():java.lang.String
- pa:getFileType():com.intellij.openapi.fileTypes.LanguageFileType
- p:getHelpId():java.lang.String
- p:getMethodName():java.lang.String
- getParameters():java.util.List
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getRowPresentation(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase,Z,Z):javax.swing.JComponent
- p:getSelectedIdx():I
- p:getTableComponent():com.intellij.ui.table.JBTable
- p:getTableEditor(javax.swing.JTable,com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):com.intellij.util.ui.table.JBTableRowEditor
- p:getVisibility():java.lang.Object
- isGenerateDelegate():Z
- p:isListTableViewSupported():Z
- p:mayPropagateParameters():Z
- placeReturnTypeBeforeName():Z
- setParameterInfos(java.util.List):V
- p:updatePropagateButtons():V
- p:updateSignature():V
- p:updateSignatureAlarmFired():V
- pa:validateAndCommitData():java.lang.String
pa:com.intellij.refactoring.changeSignature.ChangeSignatureDialogBase$ParametersListTable
- com.intellij.util.ui.table.JBListTable
- <init>(com.intellij.refactoring.changeSignature.ChangeSignatureDialogBase):V
- pf:getRowEditor(I):com.intellij.util.ui.table.JBTableRowEditor
- pa:getRowEditor(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):com.intellij.util.ui.table.JBTableRowEditor
- p:getRowItem(I):com.intellij.refactoring.changeSignature.ParameterTableModelItemBase
- pa:isRowEmpty(I):Z
pf:com.intellij.refactoring.changeSignature.ChangeSignatureDialogBase$UpdateSignatureListener
- com.intellij.openapi.editor.event.DocumentListener
- javax.swing.event.ChangeListener
- javax.swing.event.TableModelListener
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- stateChanged(javax.swing.event.ChangeEvent):V
- tableChanged(javax.swing.event.TableModelEvent):V
a:com.intellij.refactoring.changeSignature.ChangeSignatureProcessorBase
- com.intellij.refactoring.BaseRefactoringProcessor
- psf:REFACTORING_ID:java.lang.String
- pf:myChangeInfo:com.intellij.refactoring.changeSignature.ChangeInfo
- pf:myManager:com.intellij.psi.PsiManager
- p:<init>(com.intellij.openapi.project.Project,com.intellij.refactoring.changeSignature.ChangeInfo):V
- s:collectConflictsFromExtensions(com.intellij.openapi.util.Ref,com.intellij.util.containers.MultiMap,com.intellij.refactoring.changeSignature.ChangeInfo):V
- s:doChangeSignature(com.intellij.refactoring.changeSignature.ChangeInfo,com.intellij.usageView.UsageInfo[]):V
- ps:filterUsages(java.util.List):java.util.List
- p:findUsages():com.intellij.usageView.UsageInfo[]
- s:findUsages(com.intellij.refactoring.changeSignature.ChangeInfo):com.intellij.usageView.UsageInfo[]
- p:getAfterData(com.intellij.usageView.UsageInfo[]):com.intellij.refactoring.listeners.RefactoringEventData
- p:getBeforeData():com.intellij.refactoring.listeners.RefactoringEventData
- getChangeInfo():com.intellij.refactoring.changeSignature.ChangeInfo
- p:getCommandName():java.lang.String
- p:getRefactoringId():java.lang.String
- p:isPreviewUsages(com.intellij.usageView.UsageInfo[]):Z
- p:performRefactoring(com.intellij.usageView.UsageInfo[]):V
f:com.intellij.refactoring.changeSignature.DefaultValueChooser
- com.intellij.openapi.ui.DialogWrapper
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- feelLucky():Z
- getDefaultValue():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
a:com.intellij.refactoring.changeSignature.MemberNodeBase
- com.intellij.ui.CheckedTreeNode
- pf:myCalled:java.util.Set
- pf:myCancelCallback:java.lang.Runnable
- pf:myMethod:com.intellij.psi.PsiElement
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.psi.PsiElement,java.util.Set,com.intellij.openapi.project.Project,java.lang.Runnable):V
- pa:computeCallers():java.util.List
- pa:createNode(com.intellij.psi.PsiElement,java.util.HashSet):com.intellij.refactoring.changeSignature.MemberNodeBase
- customizeRenderer(com.intellij.ui.ColoredTreeCellRenderer):V
- pa:customizeRendererText(com.intellij.ui.ColoredTreeCellRenderer):V
- getChildAt(I):javax.swing.tree.TreeNode
- getChildCount():I
- getElementToSearch():com.intellij.psi.PsiElement
- p:getFilter():com.intellij.openapi.util.Condition
- getIndex(javax.swing.tree.TreeNode):I
- getMember():com.intellij.psi.PsiElement
- isLeaf():Z
- setEnabled(Z):V
com.intellij.refactoring.changeSignature.MethodDescriptor
- a:canChangeName():Z
- a:canChangeParameters():Z
- a:canChangeReturnType():com.intellij.refactoring.changeSignature.MethodDescriptor$ReadWriteOption
- a:canChangeVisibility():Z
- a:getMethod():com.intellij.psi.PsiElement
- a:getName():java.lang.String
- a:getParameters():java.util.List
- a:getParametersCount():I
- a:getVisibility():java.lang.Object
e:com.intellij.refactoring.changeSignature.MethodDescriptor$ReadWriteOption
- java.lang.Enum
- sf:None:com.intellij.refactoring.changeSignature.MethodDescriptor$ReadWriteOption
- sf:Read:com.intellij.refactoring.changeSignature.MethodDescriptor$ReadWriteOption
- sf:ReadWrite:com.intellij.refactoring.changeSignature.MethodDescriptor$ReadWriteOption
- s:valueOf(java.lang.String):com.intellij.refactoring.changeSignature.MethodDescriptor$ReadWriteOption
- s:values():com.intellij.refactoring.changeSignature.MethodDescriptor$ReadWriteOption[]
a:com.intellij.refactoring.changeSignature.ParameterTableModelBase
- com.intellij.util.ui.ListTableModel
- com.intellij.ui.RowEditableTableModel
- pf:myDefaultValueContext:com.intellij.psi.PsiElement
- pf:myTypeContext:com.intellij.psi.PsiElement
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.util.ui.ColumnInfo[]):V
- addRow():V
- pa:createRowItem(com.intellij.refactoring.changeSignature.ParameterInfo):com.intellij.refactoring.changeSignature.ParameterTableModelItemBase
- setParameterInfos(java.util.List):V
- setValueAtWithoutUpdate(java.lang.Object,I,I):V
pc:com.intellij.refactoring.changeSignature.ParameterTableModelBase$AnyVarColumn
- com.intellij.refactoring.changeSignature.ParameterTableModelBase$ColumnInfoBase
- <init>():V
- doCreateEditor(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellEditor
- doCreateRenderer(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellRenderer
- getWidth(javax.swing.JTable):I
- isCellEditable(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):Z
- setValue(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase,java.lang.Boolean):V
- valueOf(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):java.lang.Boolean
pa:com.intellij.refactoring.changeSignature.ParameterTableModelBase$ColumnInfoBase
- com.intellij.util.ui.ColumnInfo
- <init>(java.lang.String):V
- pa:doCreateEditor(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellEditor
- pa:doCreateRenderer(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellRenderer
- f:getEditor(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellEditor
- f:getRenderer(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellRenderer
pc:com.intellij.refactoring.changeSignature.ParameterTableModelBase$DefaultValueColumn
- com.intellij.refactoring.changeSignature.ParameterTableModelBase$ColumnInfoBase
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,java.lang.String):V
- doCreateEditor(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellEditor
- doCreateRenderer(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellRenderer
- isCellEditable(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):Z
- valueOf(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):com.intellij.psi.PsiCodeFragment
pc:com.intellij.refactoring.changeSignature.ParameterTableModelBase$NameColumn
- com.intellij.refactoring.changeSignature.ParameterTableModelBase$ColumnInfoBase
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- doCreateEditor(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellEditor
- doCreateRenderer(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellRenderer
- isCellEditable(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):Z
- setValue(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase,java.lang.String):V
- valueOf(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):java.lang.String
pc:com.intellij.refactoring.changeSignature.ParameterTableModelBase$TypeColumn
- com.intellij.refactoring.changeSignature.ParameterTableModelBase$ColumnInfoBase
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,java.lang.String):V
- doCreateEditor(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellEditor
- doCreateRenderer(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):javax.swing.table.TableCellRenderer
- isCellEditable(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):Z
- valueOf(com.intellij.refactoring.changeSignature.ParameterTableModelItemBase):com.intellij.psi.PsiCodeFragment
a:com.intellij.refactoring.changeSignature.ParameterTableModelItemBase
- f:defaultValueCodeFragment:com.intellij.psi.PsiCodeFragment
- f:parameter:java.lang.Object
- f:typeCodeFragment:com.intellij.psi.PsiCodeFragment
- <init>(java.lang.Object,com.intellij.psi.PsiCodeFragment,com.intellij.psi.PsiCodeFragment):V
- a:isEllipsisType():Z
f:com.intellij.refactoring.changeSignature.inplace.InplaceChangeSignature
- com.intellij.openapi.editor.event.DocumentListener
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):V
- cancel():V
- detach():V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- getCurrentInfo():com.intellij.refactoring.changeSignature.ChangeInfo
- s:getCurrentRefactoring(com.intellij.openapi.editor.Editor):com.intellij.refactoring.changeSignature.inplace.InplaceChangeSignature
- getInitialName():java.lang.String
- getInitialSignature():java.lang.String
- getStableChange():com.intellij.refactoring.changeSignature.ChangeInfo
- s:temporallyRevertChanges(com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.Document,java.lang.String,com.intellij.openapi.project.Project):V
com.intellij.refactoring.changeSignature.inplace.LanguageChangeSignatureDetector
- a:createInitialChangeInfo(com.intellij.psi.PsiElement):com.intellij.refactoring.changeSignature.ChangeInfo
- a:createNextChangeInfo(java.lang.String,com.intellij.refactoring.changeSignature.ChangeInfo,Z):com.intellij.refactoring.changeSignature.ChangeInfo
- extractSignature(com.intellij.refactoring.changeSignature.ChangeInfo):java.lang.String
- a:getFileType():com.intellij.openapi.fileTypes.FileType
- a:getHighlightingRange(com.intellij.refactoring.changeSignature.ChangeInfo):com.intellij.openapi.util.TextRange
- getMethodSignaturePreview(com.intellij.refactoring.changeSignature.ChangeInfo,java.util.List,java.util.List):java.lang.String
- a:ignoreChanges(com.intellij.psi.PsiElement):Z
- a:isChangeSignatureAvailableOnElement(com.intellij.psi.PsiElement,com.intellij.refactoring.changeSignature.ChangeInfo):Z
- a:performChange(com.intellij.refactoring.changeSignature.ChangeInfo,com.intellij.openapi.editor.Editor,java.lang.String):V
f:com.intellij.refactoring.classMembers.ANDCombinedMemberInfoModel
- com.intellij.refactoring.classMembers.MemberInfoModel
- <init>(com.intellij.refactoring.classMembers.MemberInfoModel,com.intellij.refactoring.classMembers.MemberInfoModel):V
- checkForProblems(com.intellij.refactoring.classMembers.MemberInfoBase):I
- getModel1():com.intellij.refactoring.classMembers.MemberInfoModel
- getModel2():com.intellij.refactoring.classMembers.MemberInfoModel
- getTooltipText(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.String
- isAbstractEnabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isAbstractWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isCheckedWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isFixedAbstract(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.Boolean
- isMemberEnabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- memberInfoChanged(com.intellij.refactoring.classMembers.MemberInfoChange):V
a:com.intellij.refactoring.classMembers.AbstractMemberInfoStorage
- pf:myClass:com.intellij.psi.PsiElement
- pf:myClassToSubclassesMap:java.util.Map
- pf:myFilter:com.intellij.refactoring.classMembers.MemberInfoBase$Filter
- <init>(com.intellij.psi.PsiElement,com.intellij.refactoring.classMembers.MemberInfoBase$Filter):V
- pa:buildSubClassesMap(com.intellij.psi.PsiElement):V
- pa:extractClassMembers(com.intellij.psi.PsiElement,java.util.ArrayList):V
- getClassMemberInfos(com.intellij.psi.PsiElement):java.util.List
- getDuplicatedMemberInfos(com.intellij.psi.PsiElement):java.util.Set
- getExtending(com.intellij.psi.PsiElement):java.util.Set
- getIntermediateMemberInfosList(com.intellij.psi.PsiElement):java.util.List
- p:getSubclasses(com.intellij.psi.PsiElement):java.util.Set
- pa:isInheritor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- pa:memberConflict(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
a:com.intellij.refactoring.classMembers.AbstractUsesDependencyMemberInfoModel
- com.intellij.refactoring.classMembers.DependencyMemberInfoModel
- pf:myClass:com.intellij.psi.PsiElement
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):V
- checkForProblems(com.intellij.refactoring.classMembers.MemberInfoBase):I
- pa:doCheck(com.intellij.refactoring.classMembers.MemberInfoBase,I):I
- isCheckedWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isFixedAbstract(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.Boolean
- setSuperClass(com.intellij.psi.PsiElement):V
c:com.intellij.refactoring.classMembers.DelegatingMemberInfoModel
- com.intellij.refactoring.classMembers.MemberInfoModel
- p:<init>():V
- <init>(com.intellij.refactoring.classMembers.MemberInfoModel):V
- checkForProblems(com.intellij.refactoring.classMembers.MemberInfoBase):I
- getDelegatingTarget():com.intellij.refactoring.classMembers.MemberInfoModel
- getTooltipText(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.String
- isAbstractEnabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isAbstractWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isCheckedWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isFixedAbstract(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.Boolean
- isMemberEnabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- memberInfoChanged(com.intellij.refactoring.classMembers.MemberInfoChange):V
a:com.intellij.refactoring.classMembers.DependencyMemberInfoModel
- com.intellij.refactoring.classMembers.MemberInfoModel
- p:myMemberDependencyGraph:com.intellij.refactoring.classMembers.MemberDependencyGraph
- <init>(com.intellij.refactoring.classMembers.MemberDependencyGraph,I):V
- checkForProblems(com.intellij.refactoring.classMembers.MemberInfoBase):I
- getTooltipText(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.String
- isAbstractEnabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isAbstractWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isMemberEnabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- memberInfoChanged(com.intellij.refactoring.classMembers.MemberInfoChange):V
- memberInfoChanged(java.util.Collection):V
- setMemberDependencyGraph(com.intellij.refactoring.classMembers.MemberDependencyGraph):V
- setTooltipProvider(com.intellij.refactoring.classMembers.MemberInfoTooltipManager$TooltipProvider):V
f:com.intellij.refactoring.classMembers.MemberInfoTooltipManager
- <init>(com.intellij.refactoring.classMembers.MemberInfoTooltipManager$TooltipProvider):V
- getTooltip(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.String
- invalidate():V
com.intellij.refactoring.classMembers.MemberInfoTooltipManager$TooltipProvider
- a:getTooltip(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.String
c:com.intellij.refactoring.classMembers.UsedByDependencyMemberInfoModel
- com.intellij.refactoring.classMembers.DependencyMemberInfoModel
- <init>(com.intellij.psi.PsiElement):V
- isCheckedWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isFixedAbstract(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.Boolean
f:com.intellij.refactoring.classMembers.UsedByMemberDependencyGraph
- com.intellij.refactoring.classMembers.MemberDependencyGraph
- <init>(com.intellij.psi.PsiElement):V
- getDependenciesOf(com.intellij.psi.NavigatablePsiElement):java.util.Set
- getDependent():java.util.Set
- getElementTooltip(com.intellij.psi.NavigatablePsiElement):java.lang.String
- memberChanged(com.intellij.refactoring.classMembers.MemberInfoBase):V
c:com.intellij.refactoring.copy.CopyFilesOrDirectoriesDialog
- com.intellij.refactoring.ui.RefactoringDialog
- com.intellij.openapi.project.DumbAware
- sf:MAX_PATH_LENGTH:I
- <init>(com.intellij.psi.PsiElement[],com.intellij.psi.PsiDirectory,com.intellij.openapi.project.Project,Z):V
- p:areButtonsValid():Z
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- s:createOpenInEditorCB():javax.swing.JCheckBox
- p:doAction():V
- p:getHelpId():java.lang.String
- getNewName():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getRefactoringId():java.lang.String
- getTargetDirectory():com.intellij.psi.PsiDirectory
- p:getTargetDirectoryComponent():com.intellij.ui.TextFieldWithHistory
- p:hasPreviewButton():Z
- isOpenInEditor():Z
- p:isOpenInEditorEnabledByDefault():Z
- openInEditor():Z
- s:saveOpenInEditorState(Z):V
- s:shortenPath(com.intellij.openapi.vfs.VirtualFile):java.lang.String
c:com.intellij.refactoring.copy.CopyFilesOrDirectoriesHandler
- com.intellij.refactoring.copy.CopyHandlerDelegateBase
- com.intellij.openapi.project.DumbAware
- <init>():V
- canCopy(com.intellij.psi.PsiElement[],Z):Z
- s:checkFileExist(com.intellij.psi.PsiDirectory,I[],com.intellij.psi.PsiFile,java.lang.String,java.lang.String):Z
- s:copyAsFiles(com.intellij.psi.PsiElement[],com.intellij.psi.PsiDirectory,com.intellij.openapi.project.Project):V
- s:copyToDirectory(com.intellij.psi.PsiFileSystemItem,java.lang.String,com.intellij.psi.PsiDirectory):com.intellij.psi.PsiFile
- s:copyToDirectory(com.intellij.psi.PsiFileSystemItem,java.lang.String,com.intellij.psi.PsiDirectory,I[],java.lang.String):com.intellij.psi.PsiFile
- doClone(com.intellij.psi.PsiElement):V
- s:doCloneFile(com.intellij.psi.PsiElement):V
- doCopy(com.intellij.psi.PsiElement[],com.intellij.psi.PsiDirectory):V
- getActionName(com.intellij.psi.PsiElement[]):java.lang.String
- s:resolveDirectory(com.intellij.psi.PsiDirectory):com.intellij.psi.PsiDirectory
- s:updateAddedFiles(java.util.List):V
- s:updateAddedFiles(java.util.List,java.util.List):V
f:com.intellij.refactoring.copy.CopyHandler
- s:canClone(com.intellij.psi.PsiElement[]):Z
- s:canCopy(com.intellij.psi.PsiElement[]):Z
- s:canCopy(com.intellij.psi.PsiElement[],com.intellij.openapi.util.Ref):Z
- s:doClone(com.intellij.psi.PsiElement):V
- s:doCopy(com.intellij.psi.PsiElement[],com.intellij.psi.PsiDirectory):V
- s:updateSelectionInActiveProjectView(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,Z):V
com.intellij.refactoring.copy.CopyHandlerDelegate
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:canCopy(com.intellij.psi.PsiElement[]):Z
- a:doClone(com.intellij.psi.PsiElement):V
- a:doCopy(com.intellij.psi.PsiElement[],com.intellij.psi.PsiDirectory):V
- getActionName(com.intellij.psi.PsiElement[]):java.lang.String
a:com.intellij.refactoring.copy.CopyHandlerDelegateBase
- com.intellij.refactoring.copy.CopyHandlerDelegate
- <init>():V
- canCopy(com.intellij.psi.PsiElement[]):Z
- a:canCopy(com.intellij.psi.PsiElement[],Z):Z
- forbidToClone(com.intellij.psi.PsiElement[],Z):Z
c:com.intellij.refactoring.extractMethod.AbstractExtractMethodDialog
- com.intellij.openapi.ui.DialogWrapper
- com.intellij.refactoring.extractMethod.ExtractMethodSettings
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.codeInsight.codeFragment.CodeFragment,java.lang.Object[],com.intellij.refactoring.extractMethod.ExtractMethodValidator,com.intellij.refactoring.extractMethod.ExtractMethodDecorator,com.intellij.openapi.fileTypes.FileType):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- s:createVariableDataByNames(java.util.List):com.intellij.refactoring.util.AbstractVariableData[]
- s:createVariableMap(com.intellij.refactoring.util.AbstractVariableData[]):java.util.Map
- p:doOKAction():V
- getAbstractVariableData():com.intellij.refactoring.util.AbstractVariableData[]
- p:getHelpId():java.lang.String
- getMethodName():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getVisibility():java.lang.Object
- p:init():V
f:com.intellij.refactoring.extractMethod.ExtractMethodSettingsImpl
- com.intellij.refactoring.extractMethod.ExtractMethodSettings
- <init>(java.lang.String,com.intellij.refactoring.util.AbstractVariableData[],java.lang.Object):V
- getAbstractVariableData():com.intellij.refactoring.util.AbstractVariableData[]
- getMethodName():java.lang.String
- getVisibility():java.lang.Object
a:com.intellij.refactoring.extractSuperclass.ExtractSuperBaseDialog
- com.intellij.refactoring.ui.RefactoringDialog
- p:myDocCommentPanel:com.intellij.refactoring.ui.DocCommentPanel
- pf:myMemberInfos:java.util.List
- p:myPackageNameField:com.intellij.openapi.ui.ComponentWithBrowseButton
- p:myPackageNameLabel:javax.swing.JLabel
- pf:mySourceClass:com.intellij.psi.PsiElement
- p:myTargetDirectory:com.intellij.psi.PsiDirectory
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.util.List,java.lang.String):V
- p:checkConflicts():Z
- p:createActionComponent():javax.swing.JComponent
- p:createDestinationRootPanel():javax.swing.JPanel
- p:createExtractedSuperNameField():javax.swing.JTextField
- p:createNorthPanel():javax.swing.JComponent
- pa:createPackageNameField():com.intellij.openapi.ui.ComponentWithBrowseButton
- pa:createProcessor():com.intellij.refactoring.BaseRefactoringProcessor
- pa:createSourceClassField():javax.swing.JTextField
- p:customizeRadiobuttons(javax.swing.Box,javax.swing.ButtonGroup):V
- p:doAction():V
- p:executeRefactoring():V
- pa:getClassNameLabelText():java.lang.String
- pa:getDestinationPackageRecentKey():java.lang.String
- pa:getDocCommentPanelName():java.lang.String
- getDocCommentPolicy():I
- pa:getDocCommentPolicySetting():I
- pa:getEntityName():java.lang.String
- getExtractedSuperName():java.lang.String
- pa:getExtractedSuperNameNotSpecifiedMessage():java.lang.String
- pa:getPackageNameLabelText():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getSelectedMemberInfos():java.util.Collection
- getTargetDirectory():com.intellij.psi.PsiDirectory
- pa:getTargetPackageName():java.lang.String
- pa:getTopLabelText():java.lang.String
- p:init():V
- isExtractSuperclass():Z
- p:isPossibleToRenameOriginal():Z
- pa:preparePackage():V
- pa:setDocCommentPolicySetting(I):V
- p:updateDialog():V
- pa:validateName(java.lang.String):java.lang.String
- p:validateQualifiedName(java.lang.String,java.lang.String):java.lang.String
pf:com.intellij.refactoring.extractSuperclass.ExtractSuperBaseDialog$OperationFailedException
- java.lang.Exception
- <init>(java.lang.String):V
a:com.intellij.refactoring.inline.AbstractInlineLocalDialog
- com.intellij.refactoring.inline.InlineOptionsDialog
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiReference,I):V
f:com.intellij.refactoring.inline.GenericInlineHandler
- <init>():V
- s:collectConflicts(com.intellij.psi.PsiReference,com.intellij.psi.PsiElement,java.util.Map,com.intellij.util.containers.MultiMap):V
- s:initInliners(com.intellij.psi.PsiElement,com.intellij.usageView.UsageInfo[],com.intellij.lang.refactoring.InlineHandler$Settings,com.intellij.util.containers.MultiMap,com.intellij.lang.Language[]):java.util.Map
- s:initializeInliners(com.intellij.psi.PsiElement,com.intellij.lang.refactoring.InlineHandler$Settings,java.util.Collection):java.util.Map
- s:inlineReference(com.intellij.usageView.UsageInfo,com.intellij.psi.PsiElement,java.util.Map):V
- s:invoke(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.lang.refactoring.InlineHandler):Z
- s:sortDepthFirstRightLeftOrder(java.util.Collection):com.intellij.psi.PsiReference[]
com.intellij.refactoring.inline.InlineOptions
- a:close(I):V
- a:isInlineThisOnly():Z
- isKeepTheDeclaration():Z
- a:isPreviewUsages():Z
a:com.intellij.refactoring.inline.InlineOptionsDialog
- com.intellij.refactoring.ui.RefactoringDialog
- com.intellij.refactoring.inline.InlineOptions
- pf:myElement:com.intellij.psi.PsiElement
- p:myInvokedOnReference:Z
- p:myKeepTheDeclaration:javax.swing.JRadioButton
- p:myRbInlineAll:javax.swing.JRadioButton
- p:myRbInlineThisOnly:javax.swing.JRadioButton
- p:<init>(com.intellij.openapi.project.Project,Z,com.intellij.psi.PsiElement):V
- p:allowInlineAll():Z
- p:canInlineThisOnly():Z
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- p:getBorderTitle():java.lang.String
- pa:getInlineAllText():java.lang.String
- pa:getInlineThisText():java.lang.String
- p:getKeepTheDeclarationText():java.lang.String
- pa:getNameLabelText():java.lang.String
- p:getNumberOfOccurrences(com.intellij.psi.PsiNameIdentifierOwner):I
- ps:getNumberOfOccurrences(com.intellij.psi.PsiNameIdentifierOwner,java.util.function.Predicate):I
- ps:getNumberOfOccurrences(com.intellij.psi.PsiNameIdentifierOwner,java.util.function.Predicate,java.util.function.Function):I
- getPreferredFocusedComponent():javax.swing.JComponent
- p:ignoreOccurrence(com.intellij.psi.PsiReference):Z
- ps:initOccurrencesNumber(com.intellij.psi.PsiNameIdentifierOwner):I
- pa:isInlineThis():Z
- isInlineThisOnly():Z
- isKeepTheDeclaration():Z
- p:isKeepTheDeclarationByDefault():Z
a:com.intellij.refactoring.inline.InlineOptionsWithSearchSettingsDialog
- com.intellij.refactoring.inline.InlineOptionsDialog
- p:myCbSearchInComments:javax.swing.JCheckBox
- p:myCbSearchTextOccurences:javax.swing.JCheckBox
- p:<init>(com.intellij.openapi.project.Project,Z,com.intellij.psi.PsiElement):V
- p:createCenterPanel():javax.swing.JComponent
- p:doAction():V
- pa:isSearchForTextOccurrences():Z
- pa:isSearchInCommentsAndStrings():Z
- pa:saveSearchInCommentsAndStrings(Z):V
- pa:saveSearchInTextOccurrences(Z):V
- setEnabledSearchSettngs(Z):V
c:com.intellij.refactoring.inline.InlineRefactoringActionHandler
- com.intellij.refactoring.RefactoringActionHandler
- <init>():V
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- s:invokeInliner(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):Z
a:com.intellij.refactoring.introduce.IntroduceHandler
- com.intellij.refactoring.RefactoringActionHandler
- <init>():V
- pa:checkSelectedTarget(com.intellij.refactoring.introduce.IntroduceTarget,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):java.lang.String
- pa:checkUsages(java.util.List):java.lang.String
- pa:collectTargetScopes(com.intellij.refactoring.introduce.IntroduceTarget,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.project.Project):java.util.List
- pa:collectTargets(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):com.intellij.openapi.util.Pair
- pa:collectUsages(com.intellij.refactoring.introduce.IntroduceTarget,com.intellij.psi.PsiElement):java.util.List
- pa:findSelectionTarget(I,I,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):com.intellij.refactoring.introduce.IntroduceTarget
- pa:getChooseScopeTitle():java.lang.String
- p:getEmptyScopeErrorMessage():java.lang.String
- pa:getHelpID():java.lang.String
- pa:getIntroducer(com.intellij.refactoring.introduce.IntroduceTarget,com.intellij.psi.PsiElement,java.util.List,com.intellij.refactoring.introduce.inplace.OccurrencesChooser$ReplaceChoice,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):com.intellij.refactoring.introduce.inplace.AbstractInplaceIntroducer
- pa:getRefactoringName():java.lang.String
- pa:getScopeRenderer():com.intellij.ide.util.PsiElementListCellRenderer
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- p:showErrorHint(java.lang.String,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):V
- startInplaceIntroduce(com.intellij.refactoring.introduce.IntroduceTarget,com.intellij.psi.PsiElement,java.util.List,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,com.intellij.refactoring.introduce.inplace.OccurrencesChooser$ReplaceChoice):V
com.intellij.refactoring.introduce.IntroduceTarget
- a:getPlace():com.intellij.psi.PsiElement
- a:getTextRange():com.intellij.openapi.util.TextRange
- a:isValid():Z
- a:render():java.lang.String
c:com.intellij.refactoring.introduce.PsiIntroduceTarget
- com.intellij.refactoring.introduce.IntroduceTarget
- pf:myPointer:com.intellij.psi.SmartPsiElementPointer
- <init>(com.intellij.psi.PsiElement):V
- getPlace():com.intellij.psi.PsiElement
- getTextRange():com.intellij.openapi.util.TextRange
- isValid():Z
- render():java.lang.String
a:com.intellij.refactoring.introduce.inplace.AbstractInplaceIntroducer
- com.intellij.refactoring.introduce.inplace.InplaceVariableIntroducer
- sf:ACTIVE_INTRODUCE:com.intellij.openapi.util.Key
- pf:myExprText:java.lang.String
- p:myFinished:Z
- p:myLocalMarker:com.intellij.openapi.editor.RangeMarker
- p:myLocalVariable:com.intellij.psi.PsiNameIdentifierOwner
- pf:myWholePanel:javax.swing.JPanel
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,com.intellij.psi.PsiNameIdentifierOwner,com.intellij.psi.PsiElement[],java.lang.String,com.intellij.openapi.fileTypes.FileType):V
- p:addHighlights(java.util.Map,com.intellij.openapi.editor.Editor,java.util.Collection,com.intellij.codeInsight.highlighting.HighlightManager):V
- p:addReferenceAtCaret(java.util.Collection):V
- p:adjustHighlightsStartOffset(I):I
- p:collectAdditionalElementsToRename(java.util.List):V
- p:correctExpression():V
- pa:createFieldToStartTemplateOn(Z,java.lang.String[]):com.intellij.psi.PsiNameIdentifierOwner
- p:deleteTemplateField(com.intellij.psi.PsiNameIdentifierOwner):V
- p:ensureValid():Z
- finish(Z):V
- pa:getActionName():java.lang.String
- s:getActiveIntroducer(com.intellij.openapi.editor.Editor):com.intellij.refactoring.introduce.inplace.AbstractInplaceIntroducer
- p:getBeforeExpr():com.intellij.psi.PsiElement
- p:getCaretOffset():I
- pa:getComponent():javax.swing.JComponent
- p:getExpressionText(com.intellij.psi.PsiElement):java.lang.String
- getInputName():java.lang.String
- getLocalVariable():com.intellij.psi.PsiNameIdentifierOwner
- pf:getPreviewComponent():javax.swing.JComponent
- pf:getPreviewEditor():com.intellij.openapi.editor.Editor
- p:getRefactoringId():java.lang.String
- pa:getVariable():com.intellij.psi.PsiNameIdentifierOwner
- a:isReplaceAllOccurrences():Z
- p:moveOffsetAfter(Z):V
- pa:performIntroduce():V
- p:performPostIntroduceTasks():V
- p:performRefactoring():Z
- p:releaseResources():V
- restartInplaceIntroduceTemplate():V
- a:restoreExpression(com.intellij.psi.PsiFile,com.intellij.psi.PsiNameIdentifierOwner,com.intellij.openapi.editor.RangeMarker,java.lang.String):com.intellij.psi.PsiElement
- p:restoreSelection():V
- p:restoreState(com.intellij.psi.PsiNameIdentifierOwner):V
- p:revalidate():V
- pa:saveSettings(com.intellij.psi.PsiNameIdentifierOwner):V
- pf:setPreviewText(java.lang.String):V
- a:setReplaceAllOccurrences(Z):V
- p:shouldSelectAll():Z
- p:showBalloon():V
- startInplaceIntroduceTemplate():Z
- p:startRename():com.intellij.openapi.command.impl.StartMarkAction
- startsOnTheSameElement(com.intellij.psi.PsiElement,com.intellij.psi.PsiNameIdentifierOwner):Z
- p:startsOnTheSameElement(com.intellij.refactoring.RefactoringActionHandler,com.intellij.psi.PsiElement):Z
- pa:suggestNames(Z,com.intellij.psi.PsiNameIdentifierOwner):java.lang.String[]
- p:updateTitle(com.intellij.psi.PsiNameIdentifierOwner):V
- p:updateTitle(com.intellij.psi.PsiNameIdentifierOwner,java.lang.String):V
a:com.intellij.refactoring.introduce.inplace.InplaceVariableIntroducer
- com.intellij.refactoring.rename.inplace.InplaceRefactoring
- p:myExpr:com.intellij.psi.PsiElement
- p:myExprMarker:com.intellij.openapi.editor.RangeMarker
- p:myOccurrenceMarkers:java.util.List
- p:myOccurrences:com.intellij.psi.PsiElement[]
- <init>(com.intellij.psi.PsiNamedElement,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,java.lang.String,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement):V
- p:checkLocalScope():com.intellij.psi.PsiElement
- p:createLookupExpression(com.intellij.psi.PsiElement):com.intellij.refactoring.rename.inplace.MyLookupExpression
- p:createMarker(com.intellij.psi.PsiElement):com.intellij.openapi.editor.RangeMarker
- p:getCommandName():java.lang.String
- getExpr():com.intellij.psi.PsiElement
- getExprMarker():com.intellij.openapi.editor.RangeMarker
- getOccurrenceMarkers():java.util.List
- getOccurrences():com.intellij.psi.PsiElement[]
- p:initOccurrencesMarkers():V
- p:moveOffsetAfter(Z):V
- p:performRefactoring():Z
- setExprMarker(com.intellij.openapi.editor.RangeMarker):V
- setOccurrenceMarkers(java.util.List):V
- p:shouldSelectAll():Z
- p:startRename():com.intellij.openapi.command.impl.StartMarkAction
f:com.intellij.refactoring.introduce.inplace.KeyboardComboSwitcher
- <init>():V
- s:setupActions(javax.swing.JComboBox,com.intellij.openapi.project.Project):V
a:com.intellij.refactoring.introduce.inplace.OccurrencesChooser
- <init>(com.intellij.openapi.editor.Editor):V
- pa:getOccurrenceRange(java.lang.Object):com.intellij.openapi.util.TextRange
- showChooser(com.intellij.openapi.util.Pass,java.util.Map):V
- showChooser(java.lang.Object,java.util.List,com.intellij.openapi.util.Pass):V
- showChooser(java.util.Map,java.lang.String,java.util.function.Consumer):V
- showChooser(java.util.Map,java.util.function.Consumer):V
- s:simpleChooser(com.intellij.openapi.editor.Editor):com.intellij.refactoring.introduce.inplace.OccurrencesChooser
com.intellij.refactoring.introduce.inplace.OccurrencesChooser$BaseReplaceChoice
- a:formatDescription(I):java.lang.String
- a:isAll():Z
e:com.intellij.refactoring.introduce.inplace.OccurrencesChooser$ReplaceChoice
- java.lang.Enum
- com.intellij.refactoring.introduce.inplace.OccurrencesChooser$BaseReplaceChoice
- sf:ALL:com.intellij.refactoring.introduce.inplace.OccurrencesChooser$ReplaceChoice
- sf:NO:com.intellij.refactoring.introduce.inplace.OccurrencesChooser$ReplaceChoice
- sf:NO_WRITE:com.intellij.refactoring.introduce.inplace.OccurrencesChooser$ReplaceChoice
- formatDescription(I):java.lang.String
- isAll():Z
- s:valueOf(java.lang.String):com.intellij.refactoring.introduce.inplace.OccurrencesChooser$ReplaceChoice
- s:values():com.intellij.refactoring.introduce.inplace.OccurrencesChooser$ReplaceChoice[]
a:com.intellij.refactoring.introduceParameterObject.AbstractIntroduceParameterObjectDialog
- com.intellij.refactoring.ui.RefactoringDialog
- p:myDelegateCheckBox:javax.swing.JCheckBox
- p:myParameterTablePanel:com.intellij.refactoring.util.AbstractParameterTablePanel
- p:mySourceMethod:com.intellij.psi.PsiNamedElement
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.psi.PsiNamedElement):V
- p:canRun():V
- p:createCenterPanel():javax.swing.JComponent
- pa:createClassDescriptor():com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectClassDescriptor
- pa:createParameterClassPanel():javax.swing.JPanel
- pa:createParametersPanel():com.intellij.refactoring.util.AbstractParameterTablePanel
- p:doAction():V
- pa:getSourceMethodPresentation():java.lang.String
- hasParametersToExtract():Z
- p:isDelegateCheckboxVisible():Z
- p:keepMethodAsDelegate():Z
a:com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectClassDescriptor
- <init>(java.lang.String,java.lang.String,Z,Z,java.lang.String,Z,com.intellij.refactoring.changeSignature.ParameterInfo[]):V
- a:createClass(com.intellij.psi.PsiNamedElement,com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access[]):com.intellij.psi.PsiElement
- a:findCompatibleConstructorInExistingClass(com.intellij.psi.PsiNamedElement):com.intellij.psi.PsiNamedElement
- getClassName():java.lang.String
- getExistingClass():com.intellij.psi.PsiElement
- getExistingClassCompatibleConstructor():com.intellij.psi.PsiNamedElement
- a:getGetterName(com.intellij.refactoring.changeSignature.ParameterInfo,com.intellij.psi.PsiElement,com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access):java.lang.String
- getNewVisibility():java.lang.String
- getPackageName():java.lang.String
- getParameterInfo(I):com.intellij.refactoring.changeSignature.ParameterInfo
- getParamsToMerge():com.intellij.refactoring.changeSignature.ParameterInfo[]
- a:getSetterName(com.intellij.refactoring.changeSignature.ParameterInfo,com.intellij.psi.PsiElement):java.lang.String
- isCreateInnerClass():Z
- isGenerateAccessors():Z
- isUseExistingClass():Z
- setExistingClass(com.intellij.psi.PsiElement):V
- setExistingClassCompatibleConstructor(com.intellij.psi.PsiNamedElement):V
a:com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectDelegate
- sf:EP_NAME:com.intellij.lang.LanguageExtension
- <init>():V
- a:collectAdditionalFixes(java.util.Collection,com.intellij.psi.PsiNamedElement,com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectClassDescriptor):V
- a:collectConflicts(com.intellij.util.containers.MultiMap,com.intellij.usageView.UsageInfo[],com.intellij.psi.PsiNamedElement,com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectClassDescriptor):V
- a:collectInternalUsages(java.util.Collection,com.intellij.psi.PsiNamedElement,com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectClassDescriptor,com.intellij.refactoring.changeSignature.ParameterInfo,java.lang.String):com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access
- a:collectUsagesToGenerateMissedFieldAccessors(java.util.Collection,com.intellij.psi.PsiNamedElement,com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectClassDescriptor,com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access[]):V
- a:createChangeSignatureInfo(com.intellij.psi.PsiNamedElement,java.util.List,Z):com.intellij.refactoring.changeSignature.ChangeInfo
- a:createMergedParameterInfo(com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectClassDescriptor,com.intellij.psi.PsiNamedElement,java.util.List):com.intellij.refactoring.changeSignature.ParameterInfo
- a:createNewParameterInitializerAtCallSite(com.intellij.psi.PsiElement,com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectClassDescriptor,java.util.List,java.lang.Object):com.intellij.psi.PsiElement
- s:findDelegate(com.intellij.psi.PsiElement):com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectDelegate
- a:getAllMethodParameters(com.intellij.psi.PsiNamedElement):java.util.List
- a:getHandler(com.intellij.psi.PsiElement):com.intellij.refactoring.RefactoringActionHandler
- a:isEnabledOn(com.intellij.psi.PsiElement):Z
f:com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectProcessor
- com.intellij.refactoring.util.FixableUsagesRefactoringProcessor
- <init>(com.intellij.psi.PsiNamedElement,com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectClassDescriptor,java.util.List,Z):V
f:com.intellij.refactoring.introduceParameterObject.IntroduceParameterObjectProcessor$ChangeSignatureUsageWrapper
- com.intellij.refactoring.util.FixableUsageInfo
- <init>(com.intellij.usageView.UsageInfo):V
- fixUsage():V
- getInfo():com.intellij.usageView.UsageInfo
a:com.intellij.refactoring.invertBoolean.InvertBooleanDelegate
- sf:EP_NAME:com.intellij.lang.LanguageExtension
- <init>():V
- a:adjustElement(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement
- collectElementsToInvert(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.util.Collection):Z
- ps:collectForeignElementsToInvert(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.lang.Language,java.util.Collection):V
- a:collectRefElements(com.intellij.psi.PsiElement,com.intellij.refactoring.rename.RenameProcessor,java.lang.String,java.util.Collection):V
- findConflicts(com.intellij.usageView.UsageInfo[],com.intellij.util.containers.MultiMap):V
- s:findInvertBooleanDelegate(com.intellij.psi.PsiElement):com.intellij.refactoring.invertBoolean.InvertBooleanDelegate
- a:getElementToInvert(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:invertElementInitializer(com.intellij.psi.PsiElement):V
- a:isAvailableOnElement(com.intellij.psi.PsiElement):Z
- a:isVisibleOnElement(com.intellij.psi.PsiElement):Z
- a:replaceWithNegatedExpression(com.intellij.psi.PsiElement):V
f:com.intellij.refactoring.invertBoolean.InvertBooleanHandler
- com.intellij.refactoring.RefactoringActionHandler
- sf:INVERT_BOOLEAN_HELP_ID:java.lang.String
- <init>():V
- s:getRefactoringName():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
f:com.intellij.refactoring.invertBoolean.InvertBooleanProcessor
- com.intellij.refactoring.BaseRefactoringProcessor
- <init>(com.intellij.psi.PsiElement,java.lang.String):V
c:com.intellij.refactoring.lang.ExtractIncludeDialog
- com.intellij.openapi.ui.DialogWrapper
- pf:myExtension:java.lang.String
- p:myTargetDirLabel:javax.swing.JLabel
- p:myTargetDirectoryField:com.intellij.openapi.ui.TextFieldWithBrowseButton
- <init>(com.intellij.psi.PsiDirectory,java.lang.String):V
- p:createCenterPanel():javax.swing.JComponent
- p:doOKAction():V
- p:getHelpId():java.lang.String
- p:getNameLabel():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getTargetDirectory():com.intellij.psi.PsiDirectory
- getTargetFileName():java.lang.String
- p:hideTargetDirectory():V
a:com.intellij.refactoring.lang.ExtractIncludeFileBase
- com.intellij.ide.TitledHandler
- com.intellij.refactoring.RefactoringActionHandler
- sf:HELP_ID:java.lang.String
- p:myIncludingFile:com.intellij.psi.PsiFile
- <init>():V
- p:createDialog(com.intellij.psi.PsiDirectory,java.lang.String):com.intellij.refactoring.lang.ExtractIncludeDialog
- p:doExtract(com.intellij.psi.PsiDirectory,java.lang.String,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.lang.Language):java.lang.String
- p:doInvoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- pa:doReplaceRange(java.lang.String,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- pa:findPairToExtract(I,I):com.intellij.openapi.util.Pair
- getActionTitle():java.lang.String
- p:getExtractExtension(com.intellij.openapi.fileTypes.FileType,com.intellij.psi.PsiElement):java.lang.String
- p:getLanguageForExtract(com.intellij.psi.PsiElement):com.intellij.lang.Language
- p:getRefactoringName():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- isAvailableForFile(com.intellij.psi.PsiFile):Z
- isValidRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- processPrimaryFragment(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiDirectory,java.lang.String,com.intellij.psi.PsiFile):java.lang.String
- s:setTestingTargetFile(com.intellij.psi.PsiDirectory,java.lang.String,com.intellij.openapi.Disposable):V
- pa:verifyChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
a:com.intellij.refactoring.memberPullUp.PullUpDialogBase
- com.intellij.refactoring.ui.RefactoringDialog
- pf:myClass:com.intellij.psi.PsiElement
- p:myMemberInfoModel:com.intellij.refactoring.classMembers.MemberInfoModel
- pf:myMemberInfoStorage:com.intellij.refactoring.classMembers.AbstractMemberInfoStorage
- p:myMemberInfos:java.util.List
- p:myMemberSelectionPanel:com.intellij.refactoring.ui.MemberSelectionPanelBase
- pf:mySuperClasses:java.util.List
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.util.List,com.intellij.refactoring.classMembers.AbstractMemberInfoStorage,java.lang.String):V
- p:addCustomElementsToCentralPanel(javax.swing.JPanel):V
- p:createCenterPanel():javax.swing.JComponent
- pa:createMemberInfoModel():com.intellij.refactoring.classMembers.MemberInfoModel
- pa:createMemberSelectionTable(java.util.List):com.intellij.refactoring.ui.AbstractMemberSelectionTable
- p:createNorthPanel():javax.swing.JComponent
- pa:getPreselection():com.intellij.psi.PsiElement
- getSelectedMemberInfos():java.util.List
- getSuperClass():com.intellij.psi.PsiElement
- pa:initClassCombo(javax.swing.JComboBox):V
- p:updateMemberInfo():V
a:com.intellij.refactoring.memberPushDown.AbstractPushDownDialog
- com.intellij.refactoring.ui.RefactoringDialog
- <init>(com.intellij.openapi.project.Project,com.intellij.refactoring.classMembers.MemberInfoBase[],com.intellij.psi.PsiElement):V
- p:createCenterPanel():javax.swing.JComponent
- pa:createMemberInfoModel():com.intellij.refactoring.classMembers.MemberInfoModel
- pa:createMemberInfoPanel():com.intellij.refactoring.ui.AbstractMemberSelectionPanel
- p:createNorthPanel():javax.swing.JComponent
- p:doAction():V
- p:getDimensionServiceKey():java.lang.String
- pa:getDocCommentPolicy():I
- getMemberInfos():java.util.List
- getSelectedMemberInfos():java.util.ArrayList
- getSourceClass():com.intellij.psi.PsiElement
f:com.intellij.refactoring.memberPushDown.NewSubClassData
- sf:ABORT_REFACTORING:com.intellij.refactoring.memberPushDown.NewSubClassData
- <init>(java.lang.Object,java.lang.String):V
- getContext():java.lang.Object
- getNewClassName():java.lang.String
f:com.intellij.refactoring.memberPushDown.PushDownData
- getCommentPolicy():com.intellij.refactoring.util.DocCommentPolicy
- getMembersToMove():java.util.List
- getSourceClass():com.intellij.psi.PsiElement
- preserveExternalLinks():Z
- setSourceClass(com.intellij.psi.PsiElement):V
a:com.intellij.refactoring.memberPushDown.PushDownDelegate
- sf:EP_NAME:com.intellij.lang.LanguageExtension
- <init>():V
- pa:checkSourceClassConflicts(com.intellij.refactoring.memberPushDown.PushDownData,com.intellij.util.containers.MultiMap):V
- pa:checkTargetClassConflicts(com.intellij.psi.PsiElement,com.intellij.refactoring.memberPushDown.PushDownData,com.intellij.util.containers.MultiMap,com.intellij.refactoring.memberPushDown.NewSubClassData):V
- p:createSubClass(com.intellij.psi.PsiElement,com.intellij.refactoring.memberPushDown.NewSubClassData):com.intellij.psi.PsiElement
- p:createUsageInfo(com.intellij.psi.PsiElement):com.intellij.usageView.UsageInfo
- ps:findDelegate(com.intellij.psi.PsiElement):com.intellij.refactoring.memberPushDown.PushDownDelegate
- ps:findDelegateForTarget(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.refactoring.memberPushDown.PushDownDelegate
- pa:findInheritors(com.intellij.refactoring.memberPushDown.PushDownData):java.util.List
- pa:isApplicableForSource(com.intellij.psi.PsiElement):Z
- p:prepareToPush(com.intellij.refactoring.memberPushDown.PushDownData):V
- p:preprocessNoInheritorsFound(com.intellij.psi.PsiElement,java.lang.String):com.intellij.refactoring.memberPushDown.NewSubClassData
- pa:pushDownToClass(com.intellij.psi.PsiElement,com.intellij.refactoring.memberPushDown.PushDownData):V
- pa:removeFromSourceClass(com.intellij.refactoring.memberPushDown.PushDownData):V
c:com.intellij.refactoring.memberPushDown.PushDownProcessor
- com.intellij.refactoring.BaseRefactoringProcessor
- <init>(com.intellij.psi.PsiElement,java.util.List,com.intellij.refactoring.util.DocCommentPolicy):V
- p:createUsageViewDescriptor(com.intellij.usageView.UsageInfo[]):com.intellij.usageView.UsageViewDescriptor
- p:findUsages():com.intellij.usageView.UsageInfo[]
- p:getAfterData(com.intellij.usageView.UsageInfo[]):com.intellij.refactoring.listeners.RefactoringEventData
- p:getBeforeData():com.intellij.refactoring.listeners.RefactoringEventData
- p:getCommandName():java.lang.String
- p:getElementsToWrite(com.intellij.usageView.UsageViewDescriptor):java.util.Collection
- p:getRefactoringId():java.lang.String
- p:performRefactoring(com.intellij.usageView.UsageInfo[]):V
- p:preprocessUsages(com.intellij.openapi.util.Ref):Z
- pushDownToClasses(com.intellij.usageView.UsageInfo[]):V
- p:refreshElements(com.intellij.psi.PsiElement[]):V
f:com.intellij.refactoring.memberPushDown.PushDownUsageViewDescriptor
- com.intellij.usageView.UsageViewDescriptor
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,java.util.List):V
- getCodeReferencesText(I,I):java.lang.String
- getElements():com.intellij.psi.PsiElement[]
- getProcessedElementsHeader():java.lang.String
f:com.intellij.refactoring.move.FileReferenceContextUtil
- s:decodeFileReferences(com.intellij.psi.PsiElement):V
- s:decodeFileReferences(com.intellij.psi.PsiElement,java.util.Map,com.intellij.openapi.util.TextRange):V
- s:encodeFileReferences(com.intellij.psi.PsiElement):java.util.Map
com.intellij.refactoring.move.MoveCallback
- a:refactoringCompleted():V
f:com.intellij.refactoring.move.MoveHandler
- com.intellij.refactoring.RefactoringActionHandler
- <init>():V
- s:adjustForMove(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement):com.intellij.psi.PsiElement[]
- s:canMove(com.intellij.openapi.actionSystem.DataContext):Z
- s:canMove(com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement):Z
- s:doMove(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement,com.intellij.openapi.actionSystem.DataContext,com.intellij.refactoring.move.MoveCallback):V
- s:getActionName(com.intellij.openapi.actionSystem.DataContext):java.lang.String
- s:getRefactoringName():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- s:isMoveRedundant(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- s:isValidTarget(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement[]):Z
a:com.intellij.refactoring.move.MoveHandlerDelegate
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- adjustForMove(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement):com.intellij.psi.PsiElement[]
- adjustTargetForMove(com.intellij.openapi.actionSystem.DataContext,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- canMove(com.intellij.openapi.actionSystem.DataContext):Z
- canMove(com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement):Z
- canMove(com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement,com.intellij.psi.PsiReference):Z
- collectFilesOrDirsFromContext(com.intellij.openapi.actionSystem.DataContext,java.util.Set):V
- doMove(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement,com.intellij.refactoring.move.MoveCallback):V
- getActionName(com.intellij.psi.PsiElement[]):java.lang.String
- isMoveRedundant(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- isValidTarget(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement[]):Z
- supportsLanguage(com.intellij.lang.Language):Z
- tryToMove(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext,com.intellij.psi.PsiReference,com.intellij.openapi.editor.Editor):Z
f:com.intellij.refactoring.move.MoveMemberViewDescriptor
- com.intellij.usageView.UsageViewDescriptor
- <init>(com.intellij.psi.PsiElement[]):V
- getCodeReferencesText(I,I):java.lang.String
- getElements():com.intellij.psi.PsiElement[]
- getProcessedElementsHeader():java.lang.String
f:com.intellij.refactoring.move.MoveMultipleElementsViewDescriptor
- com.intellij.usageView.UsageViewDescriptor
- <init>(com.intellij.psi.PsiElement[],java.lang.String):V
- getCodeReferencesText(I,I):java.lang.String
- getCommentReferencesText(I,I):java.lang.String
- getElements():com.intellij.psi.PsiElement[]
- getProcessedElementsHeader():java.lang.String
f:com.intellij.refactoring.move.moveClassesOrPackages.CommonMoveUtil
- <init>():V
- s:retargetUsages(com.intellij.usageView.UsageInfo[],java.util.Map):com.intellij.refactoring.util.NonCodeUsageInfo[]
c:com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryUsageInfo
- com.intellij.usageView.UsageInfo
- <init>(com.intellij.psi.PsiDirectory,com.intellij.psi.PsiDirectory):V
- <init>(com.intellij.psi.PsiReference,com.intellij.psi.PsiFileSystemItem):V
- getReference():com.intellij.psi.PsiReference
- getSourceDirectory():com.intellij.psi.PsiDirectory
- getTargetFileItem():com.intellij.psi.PsiFileSystemItem
a:com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper
- <init>():V
- a:afterMove(com.intellij.psi.PsiElement):V
- a:beforeMove(com.intellij.psi.PsiFile):V
- s:findAll():java.util.List
- a:findUsages(java.util.Collection,com.intellij.psi.PsiDirectory[],java.util.Collection,Z,Z,com.intellij.openapi.project.Project):V
- findUsages(java.util.Map,com.intellij.psi.PsiDirectory[],java.util.Collection,Z,Z,com.intellij.openapi.project.Project):V
- a:move(com.intellij.psi.PsiFile,com.intellij.psi.PsiDirectory,java.util.Map,java.util.List,com.intellij.refactoring.listeners.RefactoringElementListener):Z
- a:postProcessUsages(com.intellij.usageView.UsageInfo[],com.intellij.util.Function):V
- preprocessUsages(com.intellij.openapi.project.Project,java.util.Set,com.intellij.openapi.util.Ref,com.intellij.psi.PsiDirectory,com.intellij.util.containers.MultiMap):V
- preprocessUsages(com.intellij.openapi.project.Project,java.util.Set,com.intellij.usageView.UsageInfo[],com.intellij.psi.PsiDirectory,com.intellij.util.containers.MultiMap):V
- retargetUsages(java.util.List,java.util.Map):java.util.List
c:com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper$Default
- com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper
- <init>():V
- afterMove(com.intellij.psi.PsiElement):V
- beforeMove(com.intellij.psi.PsiFile):V
- findUsages(java.util.Collection,com.intellij.psi.PsiDirectory[],java.util.Collection,Z,Z,com.intellij.openapi.project.Project):V
- move(com.intellij.psi.PsiFile,com.intellij.psi.PsiDirectory,java.util.Map,java.util.List,com.intellij.refactoring.listeners.RefactoringElementListener):Z
- postProcessUsages(com.intellij.usageView.UsageInfo[],com.intellij.util.Function):V
- retargetUsages(java.util.List,java.util.Map):java.util.List
c:com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesProcessor
- com.intellij.refactoring.BaseRefactoringProcessor
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory[],com.intellij.psi.PsiDirectory,Z,Z,Z,com.intellij.refactoring.move.MoveCallback):V
- p:createUsageViewDescriptor(com.intellij.usageView.UsageInfo[]):com.intellij.usageView.UsageViewDescriptor
- p:findUsages():com.intellij.usageView.UsageInfo[]
- p:getAfterData(com.intellij.usageView.UsageInfo[]):com.intellij.refactoring.listeners.RefactoringEventData
- p:getBeforeData():com.intellij.refactoring.listeners.RefactoringEventData
- p:getCommandName():java.lang.String
- p:getRefactoringId():java.lang.String
- getTargetDirectory(com.intellij.psi.PsiDirectory):com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesProcessor$TargetDirectoryWrapper
- p:getTargetName():java.lang.String
- p:performPsiSpoilingRefactoring():V
- performRefactoring(com.intellij.usageView.UsageInfo[]):V
- p:preprocessUsages(com.intellij.openapi.util.Ref):Z
f:com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesProcessor$TargetDirectoryWrapper
- <init>(com.intellij.psi.PsiDirectory):V
- <init>(com.intellij.psi.PsiDirectory,java.lang.String):V
- <init>(com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesProcessor$TargetDirectoryWrapper,java.lang.String):V
- checkMove(com.intellij.psi.PsiFile):V
- findOrCreateChild(java.lang.String):com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesProcessor$TargetDirectoryWrapper
- findOrCreateTargetDirectory():com.intellij.psi.PsiDirectory
- getRelativePathFromRoot():java.lang.String
- getRootDirectory():com.intellij.psi.PsiDirectory
- getTargetDirectory():com.intellij.psi.PsiDirectory
a:com.intellij.refactoring.move.moveFilesOrDirectories.MoveFileHandler
- <init>():V
- a:canProcessElement(com.intellij.psi.PsiFile):Z
- detectConflicts(com.intellij.util.containers.MultiMap,com.intellij.psi.PsiElement[],com.intellij.usageView.UsageInfo[],com.intellij.psi.PsiDirectory):V
- s:detectConflicts(com.intellij.psi.PsiElement[],com.intellij.usageView.UsageInfo[],com.intellij.psi.PsiDirectory,com.intellij.util.containers.MultiMap):V
- a:findUsages(com.intellij.psi.PsiFile,com.intellij.psi.PsiDirectory,Z,Z):java.util.List
- s:forElement(com.intellij.psi.PsiFile):com.intellij.refactoring.move.moveFilesOrDirectories.MoveFileHandler
- a:prepareMovedFile(com.intellij.psi.PsiFile,com.intellij.psi.PsiDirectory,java.util.Map):V
- a:retargetUsages(java.util.List,java.util.Map):V
- a:updateMovedFile(com.intellij.psi.PsiFile):V
a:com.intellij.refactoring.move.moveFilesOrDirectories.MoveFilesOrDirectoriesDialog
- com.intellij.refactoring.ui.RefactoringDialog
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiDirectory):V
- p:areButtonsValid():Z
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- p:doAction():V
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- p:getRefactoringId():java.lang.String
- p:hasPreviewButton():Z
- p:isOpenInEditorEnabledByDefault():Z
- s:isOpenInEditorProperty():Z
- pa:performMove(com.intellij.psi.PsiDirectory):V
c:com.intellij.refactoring.move.moveFilesOrDirectories.MoveFilesOrDirectoriesHandler
- com.intellij.refactoring.move.MoveHandlerDelegate
- <init>():V
- adjustForMove(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement):com.intellij.psi.PsiElement[]
- canMove(com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement,com.intellij.psi.PsiReference):Z
- doMove(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement,com.intellij.refactoring.move.MoveCallback):V
- doMove(com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement):V
- getActionName(com.intellij.psi.PsiElement[]):java.lang.String
- s:isValidTarget(com.intellij.psi.PsiElement):Z
- isValidTarget(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement[]):Z
- tryToMove(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext,com.intellij.psi.PsiReference,com.intellij.openapi.editor.Editor):Z
c:com.intellij.refactoring.move.moveFilesOrDirectories.MoveFilesOrDirectoriesProcessor
- com.intellij.refactoring.BaseRefactoringProcessor
- pf:myElementsToMove:com.intellij.psi.PsiElement[]
- pf:myFoundUsages:java.util.Map
- pf:mySearchInComments:Z
- pf:mySearchInNonJavaFiles:Z
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiDirectory,Z,Z,com.intellij.refactoring.move.MoveCallback,java.lang.Runnable):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiDirectory,Z,Z,Z,com.intellij.refactoring.move.MoveCallback,java.lang.Runnable):V
- p:createUsageViewDescriptor(com.intellij.usageView.UsageInfo[]):com.intellij.usageView.UsageViewDescriptor
- p:doMoveDirectory(com.intellij.psi.PsiDirectory,com.intellij.psi.PsiDirectory):V
- p:doMoveFile(com.intellij.psi.PsiFile,com.intellij.psi.PsiDirectory):V
- p:findUsages():com.intellij.usageView.UsageInfo[]
- p:getAfterData(com.intellij.usageView.UsageInfo[]):com.intellij.refactoring.listeners.RefactoringEventData
- p:getBeforeData():com.intellij.refactoring.listeners.RefactoringEventData
- p:getCommandName():java.lang.String
- p:getRefactoringId():java.lang.String
- p:performPsiSpoilingRefactoring():V
- p:performRefactoring(com.intellij.usageView.UsageInfo[]):V
- p:preprocessUsages(com.intellij.openapi.util.Ref):Z
- p:refreshElements(com.intellij.psi.PsiElement[]):V
- p:retargetUsages(com.intellij.usageView.UsageInfo[],java.util.Map):V
- p:shouldDisableAccessChecks():Z
pf:com.intellij.refactoring.move.moveFilesOrDirectories.MoveFilesOrDirectoriesProcessor$MovedFileOrDirectoryUsageInfo
- com.intellij.usageView.UsageInfo
- getTarget():com.intellij.psi.PsiElement
- getUpdatedReference():com.intellij.psi.PsiReference
f:com.intellij.refactoring.move.moveFilesOrDirectories.MoveFilesOrDirectoriesUtil
- s:checkIfMoveIntoSelf(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- s:checkMove(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- s:doMove(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement[],com.intellij.refactoring.move.MoveCallback):V
- s:doMove(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.psi.PsiElement[],com.intellij.refactoring.move.MoveCallback,com.intellij.util.Function):V
- s:doMoveDirectory(com.intellij.psi.PsiDirectory,com.intellij.psi.PsiDirectory):V
- s:doMoveFile(com.intellij.psi.PsiFile,com.intellij.psi.PsiDirectory):V
- s:getInitialTargetDirectory(com.intellij.psi.PsiDirectory,com.intellij.psi.PsiElement[]):com.intellij.psi.PsiDirectory
- s:resolveToDirectory(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):com.intellij.psi.PsiDirectory
c:com.intellij.refactoring.openapi.impl.RenameRefactoringImpl
- com.intellij.refactoring.RefactoringImpl
- com.intellij.refactoring.RenameRefactoring
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.lang.String,com.intellij.psi.search.SearchScope,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.lang.String,Z,Z):V
- addElement(com.intellij.psi.PsiElement,java.lang.String):V
- getElements():java.util.Set
- getNewNames():java.util.Collection
- hasNonCodeUsages():Z
- isSearchInComments():Z
- isSearchInNonJavaFiles():Z
- respectAllAutomaticRenames():V
- respectEnabledAutomaticRenames():V
- setSearchInComments(Z):V
- setSearchInNonJavaFiles(Z):V
f:com.intellij.refactoring.openapi.impl.SafeDeleteRefactoringImpl
- com.intellij.refactoring.RefactoringImpl
- com.intellij.refactoring.SafeDeleteRefactoring
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[]):V
- getElements():java.util.List
- isSearchInComments():Z
- isSearchInNonJavaFiles():Z
- setSearchInComments(Z):V
- setSearchInNonJavaFiles(Z):V
c:com.intellij.refactoring.rename.AutomaticRenamingDialog
- com.intellij.openapi.ui.DialogWrapper
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.openapi.project.Project,com.intellij.refactoring.rename.naming.AutomaticRenamer):V
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- p:dispose():V
- p:doOKAction():V
- p:getDimensionServiceKey():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- isSearchInComments():Z
- isSearchTextOccurrences():Z
- show():V
- showOptionsPanel():V
a:com.intellij.refactoring.rename.AutomaticRenamingDialog$RenameSelectedAction
- com.intellij.openapi.actionSystem.AnAction
- <init>(javax.swing.JTable,javax.swing.table.AbstractTableModel):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:isValidName(java.lang.String,I):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.refactoring.rename.DirectoryAsPackageRenameHandlerBase
- com.intellij.refactoring.rename.DirectoryRenameHandlerBase
- <init>():V
- s:buildMultipleDirectoriesInPackageMessage(java.lang.StringBuffer,java.lang.String,com.intellij.psi.PsiDirectory[],com.intellij.psi.PsiDirectory):V
- pa:createProcessor(java.lang.String,com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory[],Z,Z):com.intellij.refactoring.BaseRefactoringProcessor
- p:doRename(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- pa:getPackage(com.intellij.psi.PsiDirectory):com.intellij.psi.PsiDirectoryContainer
- pa:getQualifiedName(com.intellij.psi.PsiDirectoryContainer):java.lang.String
- pa:isIdentifier(java.lang.String,com.intellij.openapi.project.Project):Z
- p:isSuitableDirectory(com.intellij.psi.PsiDirectory):Z
- pa:occursInPackagePrefixes(com.intellij.psi.PsiDirectoryContainer):com.intellij.openapi.vfs.VirtualFile[]
a:com.intellij.refactoring.rename.DirectoryRenameHandlerBase
- com.intellij.ide.TitledHandler
- com.intellij.refactoring.rename.RenameHandler
- <init>():V
- p:adjustForRename(com.intellij.openapi.actionSystem.DataContext,com.intellij.psi.PsiElement):com.intellij.psi.PsiDirectory
- pa:doRename(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- getActionTitle():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- isAvailableOnDataContext(com.intellij.openapi.actionSystem.DataContext):Z
- pa:isSuitableDirectory(com.intellij.psi.PsiDirectory):Z
c:com.intellij.refactoring.rename.PlainDirectoryRenameHandler
- com.intellij.refactoring.rename.DirectoryRenameHandlerBase
- <init>():V
- p:doRename(com.intellij.psi.PsiElement,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- s:isPlainDirectory(com.intellij.psi.PsiDirectory):Z
- p:isSuitableDirectory(com.intellij.psi.PsiDirectory):Z
c:com.intellij.refactoring.rename.RenameDialog
- com.intellij.refactoring.ui.RefactoringDialog
- com.intellij.refactoring.rename.RenameRefactoringDialog
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- addSuggestedNames(java.util.Collection):V
- p:areButtonsValid():Z
- p:canRun():V
- close():V
- p:createCenterPanel():javax.swing.JComponent
- p:createCheckboxes(javax.swing.JPanel,java.awt.GridBagConstraints):V
- p:createNewNameComponent():V
- p:createNorthPanel():javax.swing.JComponent
- p:createRenameProcessor(java.lang.String):com.intellij.refactoring.rename.RenameProcessor
- createRenameProcessorEx(java.lang.String):com.intellij.refactoring.rename.RenameProcessor
- p:createSearchScopePanel():javax.swing.JComponent
- p:dispose():V
- p:doAction():V
- getCbSearchInComments():javax.swing.JCheckBox
- p:getFullName():java.lang.String
- p:getHelpId():java.lang.String
- p:getLabelText():java.lang.String
- p:getNameSuggestionsField():com.intellij.refactoring.ui.NameSuggestionsField
- getNewName():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getPsiElement():com.intellij.psi.PsiElement
- getRefactoringScope():com.intellij.psi.search.SearchScope
- getSuggestedNames():java.lang.String[]
- p:hasPreviewButton():Z
- p:isSearchForTextOccurrencesEnabled():Z
- isSearchInComments():Z
- isSearchInNonJavaFiles():Z
- p:isToSearchForTextOccurrencesForRename():Z
- p:isToSearchInCommentsForRename():Z
- performRename(java.lang.String):V
- p:preselectExtension(I,I):V
- p:processNewNameChanged():V
- s:showRenameDialog(com.intellij.openapi.actionSystem.DataContext,com.intellij.refactoring.rename.RenameDialog):V
c:com.intellij.refactoring.rename.RenameHandlerRegistry
- sf:SELECT_ALL:com.intellij.openapi.util.Key
- p:<init>():V
- s:getHandlerTitle(com.intellij.refactoring.rename.RenameHandler):java.lang.String
- s:getInstance():com.intellij.refactoring.rename.RenameHandlerRegistry
- getRenameHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.refactoring.rename.RenameHandler
- getRenameHandlers(com.intellij.openapi.actionSystem.DataContext):java.util.List
- hasAvailableHandler(com.intellij.openapi.actionSystem.DataContext):Z
- setRenameHandlerSelectorInTests(java.util.function.Function,com.intellij.openapi.Disposable):V
com.intellij.refactoring.rename.RenameMatchingDeclarationInFileProcessor
- a:findMatchingDeclaration(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
c:com.intellij.refactoring.rename.RenameProcessor
- com.intellij.refactoring.BaseRefactoringProcessor
- pf:myAllRenames:java.util.LinkedHashMap
- p:myForceShowPreview:Z
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.lang.String,com.intellij.psi.search.SearchScope,Z,Z):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.lang.String,Z,Z):V
- addElement(com.intellij.psi.PsiElement,java.lang.String):V
- addRenamerFactory(com.intellij.refactoring.rename.naming.AutomaticRenamerFactory):V
- s:classifyUsages(java.util.Collection,java.util.Collection):com.intellij.util.containers.MultiMap
- p:createUsageViewDescriptor(com.intellij.usageView.UsageInfo[]):com.intellij.usageView.UsageViewDescriptor
- doRun():V
- findUsages():com.intellij.usageView.UsageInfo[]
- p:getAfterData(com.intellij.usageView.UsageInfo[]):com.intellij.refactoring.listeners.RefactoringEventData
- p:getBeforeData():com.intellij.refactoring.listeners.RefactoringEventData
- p:getCommandName():java.lang.String
- getElements():java.util.Set
- getNewName(com.intellij.psi.PsiElement):java.lang.String
- getNewNames():java.util.Collection
- p:getRefactoringId():java.lang.String
- hasNonCodeUsages():Z
- p:isPreviewUsages(com.intellij.usageView.UsageInfo[]):Z
- isSearchInComments():Z
- isSearchTextOccurrences():Z
- p:performPsiSpoilingRefactoring():V
- performRefactoring(com.intellij.usageView.UsageInfo[]):V
- prepareRenaming(com.intellij.psi.PsiElement,java.lang.String,java.util.LinkedHashMap):V
- preprocessUsages(com.intellij.openapi.util.Ref):Z
- p:refreshElements(com.intellij.psi.PsiElement[]):V
- removeRenamerFactory(com.intellij.refactoring.rename.naming.AutomaticRenamerFactory):V
- setCommandName(java.lang.String):V
- setSearchInComments(Z):V
- setSearchTextOccurrences(Z):V
- p:showAutomaticRenamingDialog(com.intellij.refactoring.rename.naming.AutomaticRenamer):Z
a:com.intellij.refactoring.rename.RenamePsiElementProcessor
- com.intellij.refactoring.rename.RenamePsiElementProcessorBase
- sf:DEFAULT:com.intellij.refactoring.rename.RenamePsiElementProcessor
- <init>():V
- s:allForElement(com.intellij.psi.PsiElement):java.util.List
- createDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.refactoring.rename.RenameRefactoringDialog
- createRenameDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.refactoring.rename.RenameDialog
- s:forElement(com.intellij.psi.PsiElement):com.intellij.refactoring.rename.RenamePsiElementProcessor
c:com.intellij.refactoring.rename.RenamePsiFileProcessor
- com.intellij.refactoring.rename.RenamePsiElementProcessor
- <init>():V
- canProcessElement(com.intellij.psi.PsiElement):Z
- createRenameDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.refactoring.rename.RenameDialog
- findReferences(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,Z):java.util.Collection
c:com.intellij.refactoring.rename.RenamePsiFileProcessor$PsiFileRenameDialog
- com.intellij.refactoring.rename.RenameWithOptionalReferencesDialog
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- p:getSearchForReferences():Z
- p:setSearchForReferences(Z):V
c:com.intellij.refactoring.rename.RenameViewDescriptor
- com.intellij.usageView.UsageViewDescriptor
- <init>(java.util.LinkedHashMap):V
- getCodeReferencesText(I,I):java.lang.String
- getCommentReferencesText(I,I):java.lang.String
- getElements():com.intellij.psi.PsiElement[]
- getProcessedElementsHeader():java.lang.String
a:com.intellij.refactoring.rename.RenameWithOptionalReferencesDialog
- com.intellij.refactoring.rename.RenameDialog
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- p:createCheckboxes(javax.swing.JPanel,java.awt.GridBagConstraints):V
- p:createSearchForReferencesCheckbox(javax.swing.JPanel,java.awt.GridBagConstraints):V
- p:doAction():V
- p:getCbSearchForReferences():javax.swing.JCheckBox
- pa:getSearchForReferences():Z
- pa:setSearchForReferences(Z):V
a:com.intellij.refactoring.rename.inplace.InplaceRefactoring
- sf:INPLACE_RENAMER:com.intellij.openapi.util.Key
- sf:INPLACE_RENAME_ALLOWED:com.intellij.openapi.util.Key
- sf:INTRODUCE_RESTART:com.intellij.openapi.util.Key
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- psf:OTHER_VARIABLE_NAME:java.lang.String
- psf:PRIMARY_VARIABLE_NAME:java.lang.String
- p:myAdvertisementText:java.lang.String
- p:myBalloon:com.intellij.openapi.ui.popup.Balloon
- p:myBeforeRevert:com.intellij.openapi.editor.RangeMarker
- p:myCaretRangeMarker:com.intellij.openapi.editor.RangeMarker
- pf:myEditor:com.intellij.openapi.editor.Editor
- p:myElementToRename:com.intellij.psi.PsiNamedElement
- p:myInitialName:java.lang.String
- p:myInsertedName:java.lang.String
- p:myMarkAction:com.intellij.openapi.command.impl.StartMarkAction
- p:myNameSuggestions:java.util.LinkedHashSet
- p:myOldName:java.lang.String
- pf:myProject:com.intellij.openapi.project.Project
- p:myRenameOffset:com.intellij.openapi.editor.RangeMarker
- p:myScope:com.intellij.psi.PsiElement
- p:myTarget:com.intellij.ui.awt.RelativePoint
- p:myTitle:java.lang.String
- <init>(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiNamedElement,com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiNamedElement,com.intellij.openapi.project.Project,java.lang.String):V
- <init>(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiNamedElement,com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- p:acceptReference(com.intellij.psi.PsiReference):Z
- p:addAdditionalVariables(com.intellij.codeInsight.template.TemplateBuilderImpl):V
- p:addHighlights(java.util.Map,com.intellij.openapi.editor.Editor,java.util.Collection,com.intellij.codeInsight.highlighting.HighlightManager):V
- p:addReferenceAtCaret(java.util.Collection):V
- p:adjustBalloon(com.intellij.openapi.ui.popup.BalloonBuilder):V
- p:afterTemplateStart():V
- p:beforeTemplateStart():V
- p:buildTemplateAndStart(java.util.Collection,java.util.Collection,com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):Z
- s:canStartAnotherRefactoring(com.intellij.openapi.editor.Editor,com.intellij.refactoring.RefactoringActionHandler,com.intellij.psi.PsiElement[]):Z
- p:checkLocalScope():com.intellij.psi.PsiElement
- p:checkRangeContainsOffset(I,com.intellij.openapi.util.TextRange,com.intellij.psi.PsiElement,I):Z
- p:collectAdditionalElementsToRename(java.util.List):V
- p:collectRefs(com.intellij.psi.search.SearchScope):java.util.Collection
- p:createLookupExpression(com.intellij.psi.PsiElement):com.intellij.refactoring.rename.inplace.MyLookupExpression
- s:createPreviewComponent(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):com.intellij.openapi.editor.ex.EditorEx
- p:createTemplateExpression(com.intellij.psi.PsiElement):com.intellij.codeInsight.template.Expression
- finish(Z):V
- s:getActiveInplaceRenamer(com.intellij.openapi.editor.Editor):com.intellij.refactoring.rename.inplace.InplaceRefactoring
- pa:getCommandName():java.lang.String
- p:getComponent():javax.swing.JComponent
- getInitialName():java.lang.String
- p:getNameIdentifier():com.intellij.psi.PsiElement
- s:getPopupOptionsAdvertisement():java.lang.String
- p:getRangeToRename(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- p:getRangeToRename(com.intellij.psi.PsiReference):com.intellij.openapi.util.TextRange
- p:getReferencesSearchScope(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.search.SearchScope
- p:getSelectedInEditorElement(com.intellij.psi.PsiElement,java.util.Collection,java.util.Collection,I):com.intellij.psi.PsiElement
- ps:getTopLevelVirtualFile(com.intellij.psi.FileViewProvider):com.intellij.openapi.vfs.VirtualFile
- p:getVariable():com.intellij.psi.PsiNamedElement
- pf:initPopupOptionsAdvertisement():V
- p:isIdentifier(java.lang.String,com.intellij.lang.Language):Z
- p:isReferenceAtCaret(com.intellij.psi.PsiElement,com.intellij.psi.PsiReference):Z
- p:isReferenceAtCaret(com.intellij.psi.PsiElement,com.intellij.psi.PsiReference,I):Z
- p:isRestart():Z
- s:isShowBalloonInHeadlessMode():Z
- p:moveOffsetAfter(Z):V
- p:navigateToAlreadyStarted(com.intellij.openapi.editor.Document,I):V
- p:notSameFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.PsiFile):Z
- p:performCleanup():V
- performInplaceRefactoring(java.util.LinkedHashSet):Z
- pa:performRefactoring():Z
- p:releaseIfNotRestart():V
- p:releaseResources():V
- p:restoreCaretOffset(I):I
- p:restoreSelection():V
- p:revertState():V
- setAdvertisementText(java.lang.String):V
- setElementToRename(com.intellij.psi.PsiNamedElement):V
- s:setShowBalloonInHeadlessMode(Z):V
- pa:shouldSelectAll():Z
- p:shouldStopAtLookupExpression(com.intellij.codeInsight.template.Expression):Z
- p:showBalloon():V
- p:showBalloonInEditor():V
- p:showDialogAdvertisement(java.lang.String):V
- p:startRename():com.intellij.openapi.command.impl.StartMarkAction
- p:startsOnTheSameElement(com.intellij.refactoring.RefactoringActionHandler,com.intellij.psi.PsiElement):Z
- p:startsOnTheSameElements(com.intellij.openapi.editor.Editor,com.intellij.refactoring.RefactoringActionHandler,com.intellij.psi.PsiElement[]):Z
- stopIntroduce(com.intellij.openapi.editor.Editor):V
- s:stopIntroduce(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,java.lang.String):V
- s:unableToStartWarning(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
c:com.intellij.refactoring.rename.inplace.MemberInplaceRenameHandler
- com.intellij.refactoring.rename.inplace.VariableInplaceRenameHandler
- <init>():V
- p:createMemberRenamer(com.intellij.psi.PsiElement,com.intellij.psi.PsiNameIdentifierOwner,com.intellij.openapi.editor.Editor):com.intellij.refactoring.rename.inplace.MemberInplaceRenamer
- doRename(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):com.intellij.refactoring.rename.inplace.InplaceRefactoring
- p:isAvailable(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
c:com.intellij.refactoring.rename.inplace.MemberInplaceRenamer
- com.intellij.refactoring.rename.inplace.VariableInplaceRenamer
- <init>(com.intellij.psi.PsiNamedElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- <init>(com.intellij.psi.PsiNamedElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,java.lang.String,java.lang.String):V
- p:acceptReference(com.intellij.psi.PsiReference):Z
- afterTemplateStart():V
- p:appendAdditionalElement(java.util.Collection,java.util.Collection):Z
- p:checkLocalScope():com.intellij.psi.PsiElement
- p:collectAdditionalElementsToRename(java.util.List):V
- p:collectRefs(com.intellij.psi.search.SearchScope):java.util.Collection
- p:createInplaceRenamerToRestart(com.intellij.psi.PsiNamedElement,com.intellij.openapi.editor.Editor,java.lang.String):com.intellij.refactoring.rename.inplace.VariableInplaceRenamer
- p:createRenameProcessor(com.intellij.psi.PsiElement,java.lang.String):com.intellij.refactoring.rename.RenameProcessor
- p:findCollision():com.intellij.refactoring.rename.UnresolvableCollisionUsageInfo
- p:getNameIdentifier():com.intellij.psi.PsiElement
- p:getRefactoringId():java.lang.String
- p:getReferencesSearchScope(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.search.SearchScope
- getSubstituted():com.intellij.psi.PsiElement
- p:isIdentifier(java.lang.String,com.intellij.lang.Language):Z
- p:navigateToAlreadyStarted(com.intellij.openapi.editor.Document,I):V
- p:notSameFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.PsiFile):Z
- p:performRefactoringRename(java.lang.String,com.intellij.openapi.command.impl.StartMarkAction):V
- p:performRenameInner(com.intellij.psi.PsiElement,java.lang.String):V
- p:restoreCaretOffsetAfterRename():V
- p:shouldCreateSnapshot():Z
- p:showDialogAdvertisement(java.lang.String):V
pc:com.intellij.refactoring.rename.inplace.MemberInplaceRenamer$MyRenameProcessor
- com.intellij.refactoring.rename.RenameProcessor
- <init>(com.intellij.refactoring.rename.inplace.MemberInplaceRenamer,com.intellij.psi.PsiElement,java.lang.String):V
- <init>(com.intellij.refactoring.rename.inplace.MemberInplaceRenamer,com.intellij.psi.PsiElement,java.lang.String,com.intellij.refactoring.rename.RenamePsiElementProcessor):V
- doRun():V
- p:getRefactoringId():java.lang.String
c:com.intellij.refactoring.rename.inplace.MyLookupExpression
- com.intellij.codeInsight.template.Expression
- pf:myLookupItems:com.intellij.codeInsight.lookup.LookupElement[]
- pf:myName:java.lang.String
- <init>(java.lang.String,java.util.LinkedHashSet,com.intellij.psi.PsiNamedElement,com.intellij.psi.PsiElement,Z,java.lang.String):V
- calculateLookupItems(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateResult(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- getAdvertisingText():java.lang.String
- getLookupFocusDegree():com.intellij.codeInsight.lookup.LookupFocusDegree
- getSuggestedNameInfo():com.intellij.psi.codeStyle.SuggestedNameInfo
- requiresCommittedPSI():Z
- setLookupFocusDegree(com.intellij.codeInsight.lookup.LookupFocusDegree):V
a:com.intellij.refactoring.rename.inplace.RenameChooser
- sf:CHOOSE_ALL_OCCURRENCES_IN_TEST:com.intellij.openapi.util.Key
- pa:runRenameTemplate(java.util.Collection):V
- showChooser(java.util.Collection,java.util.Collection):V
com.intellij.refactoring.rename.inplace.SelectableInlayPresentation
- com.intellij.codeInsight.hints.presentation.InlayPresentation
- a:addSelectionListener(com.intellij.refactoring.rename.inplace.SelectableInlayPresentation$SelectionListener):V
- a:isSelected():Z
- a:setSelected(Z):V
com.intellij.refactoring.rename.inplace.SelectableInlayPresentation$SelectionListener
- a:selectionChanged(Z):V
c:com.intellij.refactoring.rename.inplace.VariableInplaceRenameHandler
- com.intellij.refactoring.rename.RenameHandler
- <init>():V
- p:checkAvailable(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):Z
- p:createRenamer(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.refactoring.rename.inplace.VariableInplaceRenamer
- doRename(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):com.intellij.refactoring.rename.inplace.InplaceRefactoring
- s:getInitialName():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- p:isAvailable(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- f:isAvailableOnDataContext(com.intellij.openapi.actionSystem.DataContext):Z
- ps:performDialogRename(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext,java.lang.String):V
c:com.intellij.refactoring.rename.inplace.VariableInplaceRenamer
- com.intellij.refactoring.rename.inplace.InplaceRefactoring
- sf:INSTANCE:com.intellij.lang.LanguageExtension
- p:myLanguage:com.intellij.lang.Language
- p:mySuggestedNameInfo:com.intellij.psi.codeStyle.SuggestedNameInfo
- <init>(com.intellij.psi.PsiNamedElement,com.intellij.openapi.editor.Editor):V
- <init>(com.intellij.psi.PsiNamedElement,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):V
- <init>(com.intellij.psi.PsiNamedElement,com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project,java.lang.String,java.lang.String):V
- p:appendAdditionalElement(java.util.Collection,java.util.Collection):Z
- p:beforeTemplateStart():V
- p:buildTemplateAndStart(java.util.Collection,java.util.Collection,com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):Z
- p:collectAdditionalElementsToRename(java.util.List):V
- p:createInplaceRenamerToRestart(com.intellij.psi.PsiNamedElement,com.intellij.openapi.editor.Editor,java.lang.String):com.intellij.refactoring.rename.inplace.VariableInplaceRenamer
- p:createLookupExpression(com.intellij.psi.PsiElement):com.intellij.refactoring.rename.inplace.MyLookupExpression
- p:findCollision():com.intellij.refactoring.rename.UnresolvableCollisionUsageInfo
- finish(Z):V
- p:getCommandName():java.lang.String
- p:getRefactoringId():java.lang.String
- p:isRenamerFactoryApplicable(com.intellij.refactoring.rename.naming.AutomaticRenamerFactory,com.intellij.psi.PsiNamedElement):Z
- p:performCleanup():V
- performInplaceRename():Z
- performInplaceRename(java.util.Collection):Z
- p:performOnInvalidIdentifier(java.lang.String,java.util.LinkedHashSet):V
- p:performRefactoring():Z
- p:performRefactoringRename(java.lang.String,com.intellij.openapi.command.impl.StartMarkAction):V
- pf:processDefaultAdditionalElementsToRename(com.intellij.util.Processor):Z
- p:renameSynthetic(java.lang.String):V
- p:restoreCaretOffset(I):I
- p:restoreSelection():V
- s:restoreSelection(com.intellij.openapi.editor.Editor,com.intellij.openapi.util.TextRange):V
- p:revertStateOnFinish():V
- p:shouldCreateSnapshot():Z
- p:shouldSelectAll():Z
- p:startsOnTheSameElement(com.intellij.refactoring.RefactoringActionHandler,com.intellij.psi.PsiElement):Z
- p:stopDumbLaterIfPossible():V
- pf:tryRollback():V
f:com.intellij.refactoring.safeDelete.NonCodeUsageSearchInfo
- <init>(com.intellij.openapi.util.Condition,com.intellij.psi.PsiElement):V
- <init>(com.intellij.openapi.util.Condition,java.util.Collection):V
- getElementsToSearch():java.util.Collection
- getInsideDeletedCondition():com.intellij.openapi.util.Condition
c:com.intellij.refactoring.safeDelete.SafeDeleteDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.refactoring.safeDelete.SafeDeleteDialog$Callback):V
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- p:doOKAction():V
- p:getHelpId():java.lang.String
- p:isDelete():Z
- isSearchForTextOccurences():Z
- isSearchInComments():Z
com.intellij.refactoring.safeDelete.SafeDeleteDialog$Callback
- a:run(com.intellij.refactoring.safeDelete.SafeDeleteDialog):V
f:com.intellij.refactoring.safeDelete.SafeDeleteHandler
- com.intellij.refactoring.RefactoringActionHandler
- <init>():V
- s:getRefactoringName():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.actionSystem.DataContext):V
- s:invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.module.Module,Z,java.lang.Runnable):V
- s:invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.module.Module,Z,java.lang.Runnable,java.lang.Runnable):V
- s:invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],com.intellij.openapi.module.Module,Z,java.lang.Runnable,java.lang.Runnable,Z):V
- s:invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],Z):V
- s:invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement[],Z,java.lang.Runnable):V
f:com.intellij.refactoring.safeDelete.SafeDeleteProcessor
- com.intellij.refactoring.BaseRefactoringProcessor
- s:addNonCodeUsages(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,java.util.List,com.intellij.openapi.util.Condition,Z,Z):V
- s:createInstance(com.intellij.openapi.project.Project,java.lang.Runnable,com.intellij.psi.PsiElement[],Z,Z):com.intellij.refactoring.safeDelete.SafeDeleteProcessor
- s:createInstance(com.intellij.openapi.project.Project,java.lang.Runnable,com.intellij.psi.PsiElement[],Z,Z,Z):com.intellij.refactoring.safeDelete.SafeDeleteProcessor
- s:findGenericElementUsages(com.intellij.psi.PsiElement,java.util.List,com.intellij.psi.PsiElement[]):V
- s:findGenericElementUsages(com.intellij.psi.PsiElement,java.util.List,com.intellij.psi.PsiElement[],com.intellij.psi.search.SearchScope):V
- s:getDefaultInsideDeletedCondition(com.intellij.psi.PsiElement[]):com.intellij.openapi.util.Condition
- getElements():com.intellij.psi.PsiElement[]
- s:isInside(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- isSearchInCommentsAndStrings():Z
- isSearchNonJava():Z
- setAfterRefactoringCallback(java.lang.Runnable):V
- setSearchInCommentsAndStrings(Z):V
- setSearchNonJava(Z):V
- s:validElement(com.intellij.psi.PsiElement):Z
com.intellij.refactoring.safeDelete.SafeDeleteProcessorDelegate
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:findConflicts(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement[]):java.util.Collection
- a:findUsages(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement[],java.util.List):com.intellij.refactoring.safeDelete.NonCodeUsageSearchInfo
- a:getAdditionalElementsToDelete(com.intellij.psi.PsiElement,java.util.Collection,Z):java.util.Collection
- a:getElementsToSearch(com.intellij.psi.PsiElement,java.util.Collection):java.util.Collection
- a:handlesElement(com.intellij.psi.PsiElement):Z
- a:isToSearchForTextOccurrences(com.intellij.psi.PsiElement):Z
- a:isToSearchInComments(com.intellij.psi.PsiElement):Z
- a:prepareForDeletion(com.intellij.psi.PsiElement):V
- a:preprocessUsages(com.intellij.openapi.project.Project,com.intellij.usageView.UsageInfo[]):com.intellij.usageView.UsageInfo[]
- a:setToSearchForTextOccurrences(com.intellij.psi.PsiElement,Z):V
- a:setToSearchInComments(com.intellij.psi.PsiElement,Z):V
a:com.intellij.refactoring.safeDelete.SafeDeleteProcessorDelegateBase
- com.intellij.refactoring.safeDelete.SafeDeleteProcessorDelegate
- <init>():V
- findConflicts(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement[],com.intellij.usageView.UsageInfo[]):java.util.Collection
- a:getElementsToSearch(com.intellij.psi.PsiElement,com.intellij.openapi.module.Module,java.util.Collection):java.util.Collection
- getElementsToSearch(com.intellij.psi.PsiElement,java.util.Collection):java.util.Collection
- showUsages(com.intellij.usageView.UsageInfo[],com.intellij.usages.UsageViewPresentation,com.intellij.usages.UsageViewManager,com.intellij.psi.PsiElement[]):com.intellij.usages.UsageView
f:com.intellij.refactoring.safeDelete.impl.DefaultPsiSafeDeleteDeclarationUsage
- com.intellij.refactoring.safeDelete.impl.DefaultPsiSafeDeleteUsage
- com.intellij.refactoring.safeDelete.api.PsiSafeDeleteDeclarationUsage
- <init>(com.intellij.find.usages.api.PsiUsage):V
c:com.intellij.refactoring.safeDelete.impl.DefaultPsiSafeDeleteUsage
- com.intellij.refactoring.safeDelete.api.PsiSafeDeleteUsage
- <init>(com.intellij.find.usages.api.PsiUsage,Z,java.lang.String):V
- createPointer():com.intellij.model.Pointer
- getConflictMessage():java.lang.String
- getFile():com.intellij.psi.PsiFile
- getFileUpdater():com.intellij.refactoring.safeDelete.api.FileUpdater
- getRange():com.intellij.openapi.util.TextRange
- isSafeToDelete():Z
- setConflictMessage(java.lang.String):V
- setSafeToDelete(Z):V
com.intellij.refactoring.safeDelete.usageInfo.SafeDeleteCustomUsageInfo
- a:performRefactoring():V
c:com.intellij.refactoring.safeDelete.usageInfo.SafeDeleteReferenceSimpleDeleteUsageInfo
- com.intellij.refactoring.safeDelete.usageInfo.SafeDeleteReferenceUsageInfo
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,I,I,Z,Z):V
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):V
- deleteElement():V
a:com.intellij.refactoring.safeDelete.usageInfo.SafeDeleteReferenceUsageInfo
- com.intellij.refactoring.safeDelete.usageInfo.SafeDeleteUsageInfo
- com.intellij.refactoring.safeDelete.usageInfo.SafeDeleteCustomUsageInfo
- pf:mySafeDelete:Z
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,I,I,Z,Z):V
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):V
- a:deleteElement():V
- isSafeDelete():Z
- performRefactoring():V
c:com.intellij.refactoring.safeDelete.usageInfo.SafeDeleteUsageInfo
- com.intellij.usageView.UsageInfo
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,I,I,Z):V
- getReferencedElement():com.intellij.psi.PsiElement
a:com.intellij.refactoring.ui.AbstractMemberSelectionPanel
- javax.swing.JPanel
- <init>():V
- a:getTable():com.intellij.refactoring.ui.AbstractMemberSelectionTable
a:com.intellij.refactoring.ui.AbstractMemberSelectionTable
- com.intellij.ui.table.JBTable
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- psf:ABSTRACT_COLUMN:I
- psf:CHECKED_COLUMN:I
- psf:DISPLAY_NAME_COLUMN:I
- psf:EMPTY_OVERRIDE_ICON:javax.swing.Icon
- psf:MEMBER_ICON_POSITION:I
- psf:OVERRIDE_ICON_POSITION:I
- psf:VISIBILITY_ICON_POSITION:I
- pf:myAbstractColumnHeader:java.lang.String
- pf:myAbstractEnabled:Z
- p:myMemberInfoModel:com.intellij.refactoring.classMembers.MemberInfoModel
- p:myMemberInfos:java.util.List
- p:myTableModel:com.intellij.refactoring.ui.AbstractMemberSelectionTable$MyTableModel
- <init>(java.util.Collection,com.intellij.refactoring.classMembers.MemberInfoModel,java.lang.String):V
- addMemberInfoChangeListener(com.intellij.refactoring.classMembers.MemberInfoChangeListener):V
- addNotify():V
- fireExternalDataChange():V
- p:fireMemberInfoChange(java.util.Collection):V
- pa:getAbstractColumnValue(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.Object
- ps:getDisplayNameColumnHeader():java.lang.String
- p:getMemberIcon(com.intellij.refactoring.classMembers.MemberInfoBase,I):javax.swing.Icon
- getMemberInfoModel():com.intellij.refactoring.classMembers.MemberInfoModel
- pa:getOverrideIcon(com.intellij.refactoring.classMembers.MemberInfoBase):javax.swing.Icon
- getSelectedMemberInfos():java.util.Collection
- pa:isAbstractColumnEditable(I):Z
- redraw():V
- removeNotify():V
- scrollSelectionInView():V
- setMemberInfoModel(com.intellij.refactoring.classMembers.MemberInfoModel):V
- setMemberInfos(java.util.Collection):V
- p:setVisibilityIcon(com.intellij.refactoring.classMembers.MemberInfoBase,com.intellij.ui.RowIcon):V
- p:setVisibilityIcon(com.intellij.refactoring.classMembers.MemberInfoBase,com.intellij.ui.icons.RowIcon):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
pf:com.intellij.refactoring.ui.AbstractMemberSelectionTable$MyTableModel
- javax.swing.table.AbstractTableModel
- <init>(com.intellij.refactoring.ui.AbstractMemberSelectionTable):V
- getColumnClass(I):java.lang.Class
- getColumnCount():I
- getColumnName(I):java.lang.String
- getRowCount():I
- getValueAt(I,I):java.lang.Object
- isCellEditable(I,I):Z
- redraw(java.util.Collection):V
- setValueAt(java.lang.Object,I,I):V
c:com.intellij.refactoring.ui.CodeFragmentTableCellEditorBase
- javax.swing.AbstractCellEditor
- javax.swing.table.TableCellEditor
- p:myCodeFragment:com.intellij.psi.PsiCodeFragment
- p:myEditorTextField:com.intellij.ui.EditorTextField
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- clearListeners():V
- p:createEditorField(com.intellij.openapi.editor.Document):com.intellij.ui.EditorTextField
- getCellEditorValue():com.intellij.psi.PsiCodeFragment
- getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,Z,I,I):java.awt.Component
- stopCellEditing():Z
c:com.intellij.refactoring.ui.CodeFragmentTableCellRenderer
- javax.swing.table.TableCellRenderer
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,Z,Z,I,I):java.awt.Component
c:com.intellij.refactoring.ui.ComboBoxVisibilityPanel
- com.intellij.refactoring.ui.VisibilityPanelBase
- pf:myComboBox:javax.swing.JComboBox
- <init>(java.lang.String,java.lang.Object[]):V
- <init>(java.lang.String,java.lang.Object[],java.lang.String[]):V
- <init>(java.lang.Object[]):V
- <init>(java.lang.Object[],java.lang.String[]):V
- p:addOption(I,java.lang.Object,java.lang.String,Z):V
- p:addOption(java.lang.Object):V
- p:getRenderer():javax.swing.ListCellRenderer
- getVisibility():java.lang.Object
- f:registerUpDownActionsFor(javax.swing.JComponent):V
- setDisplayedMnemonicIndex(I):V
- setVisibility(java.lang.Object):V
c:com.intellij.refactoring.ui.ConflictsDialog
- com.intellij.openapi.ui.DialogWrapper
- com.intellij.refactoring.ConflictsDialogBase
- pf:myConflictDescriptions:java.lang.String[]
- pf:myElementConflictDescription:com.intellij.util.containers.MultiMap
- <init>(com.intellij.openapi.project.Project,com.intellij.util.containers.MultiMap):V
- <init>(com.intellij.openapi.project.Project,com.intellij.util.containers.MultiMap,java.lang.Runnable):V
- <init>(com.intellij.openapi.project.Project,com.intellij.util.containers.MultiMap,java.lang.Runnable,Z,Z):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createLeftSideActions():javax.swing.Action[]
- getConflictDescriptions():java.util.List
- p:getDimensionServiceKey():java.lang.String
- p:getDoRefactoringRunnable(com.intellij.usages.UsageView):java.lang.Runnable
- getInitialSize():java.awt.Dimension
- getPreferredFocusedComponent():javax.swing.JComponent
- getPreferredSize():java.awt.Dimension
- p:getStyle():com.intellij.openapi.ui.DialogWrapper$DialogStyle
- isShowConflicts():Z
- setCommandName(java.lang.String):V
- showAndGet():Z
f:com.intellij.refactoring.ui.DocCommentPanel
- javax.swing.JPanel
- <init>(java.lang.String):V
- getPolicy():I
- getPreferredSize():java.awt.Dimension
- setPolicy(I):V
a:com.intellij.refactoring.ui.EnableDisableAction
- javax.swing.AbstractAction
- <init>():V
- actionPerformed(java.awt.event.ActionEvent):V
- pa:applyValue(I[],Z):V
- pa:getTable():javax.swing.JTable
- pa:isRowChecked(I):Z
- register():V
c:com.intellij.refactoring.ui.MemberSelectionPanelBase
- com.intellij.refactoring.ui.AbstractMemberSelectionPanel
- <init>(java.lang.String,com.intellij.refactoring.ui.AbstractMemberSelectionTable):V
- getTable():com.intellij.refactoring.ui.AbstractMemberSelectionTable
c:com.intellij.refactoring.ui.MethodSignatureComponent
- com.intellij.ui.EditorTextField
- <init>(java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- p:createEditor():com.intellij.openapi.editor.ex.EditorEx
- p:getFileName():java.lang.String
- setSignature(java.lang.String):V
c:com.intellij.refactoring.ui.NameSuggestionsField
- javax.swing.JPanel
- <init>(com.intellij.openapi.project.Project):V
- <init>(java.lang.String[],com.intellij.openapi.project.Project):V
- <init>(java.lang.String[],com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType):V
- <init>(java.lang.String[],com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.Editor):V
- addDataChangedListener(com.intellij.refactoring.ui.NameSuggestionsField$DataChanged):V
- p:forceCombobox():Z
- getComponent():javax.swing.JComponent
- getEditor():com.intellij.openapi.editor.Editor
- getEnteredName():java.lang.String
- getFocusableComponent():javax.swing.JComponent
- getProject():com.intellij.openapi.project.Project
- hasSuggestions():Z
- removeDataChangedListener(com.intellij.refactoring.ui.NameSuggestionsField$DataChanged):V
- requestFocus():V
- requestFocusInWindow():Z
- select(I,I):V
- selectNameWithoutExtension():V
- setEnabled(Z):V
- setSuggestions(java.lang.String[]):V
- p:shouldSelectAll():Z
com.intellij.refactoring.ui.NameSuggestionsField$DataChanged
- java.util.EventListener
- a:dataChanged():V
a:com.intellij.refactoring.ui.RefactoringDialog
- com.intellij.openapi.ui.DialogWrapper
- com.intellij.openapi.project.PossiblyDumbAware
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project,Z):V
- p:<init>(com.intellij.openapi.project.Project,Z,Z):V
- p:addOpenInEditorCheckbox():V
- p:areButtonsValid():Z
- p:canRun():V
- pf:closeOKAction():V
- p:createActions():javax.swing.Action[]
- p:createDefaultActions():V
- pa:doAction():V
- pf:doOKAction():V
- p:doRefactorAction():V
- pf:getPreviewAction():javax.swing.Action
- p:getProject():com.intellij.openapi.project.Project
- pf:getRefactorAction():javax.swing.Action
- p:getRefactoringId():java.lang.String
- p:hasHelpAction():Z
- p:hasPreviewButton():Z
- p:invokeRefactoring(com.intellij.refactoring.BaseRefactoringProcessor):V
- p:invokeRefactoring(com.intellij.refactoring.Refactoring):V
- isOpenInEditor():Z
- p:isOpenInEditorEnabledByDefault():Z
- f:isPreviewUsages():Z
- p:setHelpTooltip(javax.swing.JButton):V
- setPreviewResults(Z):V
- pf:setRefactorButtonText(java.lang.String):V
- show():V
- p:validateButtons():V
- p:validateButtonsAsync():V
- p:validateButtonsAsync(com.intellij.openapi.application.ModalityState):V
c:com.intellij.refactoring.ui.StringTableCellEditor
- javax.swing.AbstractCellEditor
- javax.swing.table.TableCellEditor
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,Z):V
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- clearListeners():V
- getCellEditorValue():java.lang.Object
- getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,Z,I,I):java.awt.Component
- setUseEditorFont(Z):V
a:com.intellij.refactoring.ui.UsageViewDescriptorAdapter
- com.intellij.usageView.UsageViewDescriptor
- <init>():V
- getCodeReferencesText(I,I):java.lang.String
a:com.intellij.refactoring.ui.VisibilityPanelBase
- javax.swing.JPanel
- <init>():V
- addListener(javax.swing.event.ChangeListener):V
- a:getVisibility():java.lang.Object
- a:setVisibility(java.lang.Object):V
- p:stateChanged(javax.swing.event.ChangeEvent):V
a:com.intellij.refactoring.util.AbstractParameterTablePanel
- javax.swing.JPanel
- pf:myTable:com.intellij.ui.table.JBTable
- <init>(com.intellij.refactoring.util.AbstractVariableData[],com.intellij.util.ui.ColumnInfo[]):V
- <init>(com.intellij.util.ui.ColumnInfo[]):V
- p:areTypesDirected():Z
- pa:doCancelAction():V
- pa:doEnterAction():V
- p:exchangeRows(I,I,com.intellij.refactoring.util.AbstractVariableData):V
- getVariableData():com.intellij.refactoring.util.AbstractVariableData[]
- init(com.intellij.refactoring.util.AbstractVariableData[]):V
- setEnabled(Z):V
- pa:updateSignature():V
c:com.intellij.refactoring.util.AbstractParameterTablePanel$NameColumnInfo
- com.intellij.util.ui.ColumnInfo
- <init>(com.intellij.lang.Language,com.intellij.openapi.project.Project):V
- <init>(java.util.function.Predicate):V
- isCellEditable(com.intellij.refactoring.util.AbstractVariableData):Z
- setValue(com.intellij.refactoring.util.AbstractVariableData,java.lang.String):V
- valueOf(com.intellij.refactoring.util.AbstractVariableData):java.lang.String
c:com.intellij.refactoring.util.AbstractParameterTablePanel$PassParameterColumnInfo
- com.intellij.util.ui.ColumnInfo
- <init>():V
- getColumnClass():java.lang.Class
- getRenderer(com.intellij.refactoring.util.AbstractVariableData):javax.swing.table.TableCellRenderer
- isCellEditable(com.intellij.refactoring.util.AbstractVariableData):Z
- setValue(com.intellij.refactoring.util.AbstractVariableData,java.lang.Boolean):V
- valueOf(com.intellij.refactoring.util.AbstractVariableData):java.lang.Boolean
a:com.intellij.refactoring.util.FixableUsageInfo
- com.intellij.usageView.UsageInfo
- <init>(com.intellij.psi.PsiElement):V
- a:fixUsage():V
- getConflictMessage():java.lang.String
a:com.intellij.refactoring.util.FixableUsagesRefactoringProcessor
- com.intellij.refactoring.BaseRefactoringProcessor
- p:<init>(com.intellij.openapi.project.Project):V
- ps:checkConflicts(com.intellij.openapi.util.Ref,com.intellij.util.containers.MultiMap):V
- pf:findUsages():com.intellij.usageView.UsageInfo[]
- pa:findUsages(java.util.List):V
- p:performRefactoring(com.intellij.usageView.UsageInfo[]):V
f:com.intellij.refactoring.util.RadioUpDownListener
- java.awt.event.KeyAdapter
- s:installOn(javax.swing.JRadioButton[]):com.intellij.refactoring.util.RadioUpDownListener
- keyPressed(java.awt.event.KeyEvent):V
c:com.intellij.refactoring.util.RefactoringDescriptionLocation
- com.intellij.psi.ElementDescriptionLocation
- sf:WITHOUT_PARENT:com.intellij.refactoring.util.RefactoringDescriptionLocation
- sf:WITH_PARENT:com.intellij.refactoring.util.RefactoringDescriptionLocation
- p:<init>(Z):V
- getDefaultProvider():com.intellij.psi.ElementDescriptionProvider
- includeParent():Z
f:com.intellij.refactoring.util.RefactoringUIUtil
- sf:SELECT_ALL_ON_FOCUS:com.intellij.ui.EditorSettingsProvider
- s:calculatePsiElementDescriptionList(com.intellij.psi.PsiElement[]):java.lang.String
- s:getDescription(com.intellij.psi.PsiElement,Z):java.lang.String
- s:processIncorrectOperation(com.intellij.openapi.project.Project,com.intellij.util.IncorrectOperationException):V
f:com.intellij.refactoring.util.TextOccurrencesUtil
- s:addTextOccurrences(com.intellij.psi.PsiElement,java.lang.String,com.intellij.psi.search.GlobalSearchScope,java.util.Collection,com.intellij.usageView.UsageInfoFactory):V
- s:addUsagesInStringsAndComments(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,java.lang.String,java.util.Collection,com.intellij.usageView.UsageInfoFactory):V
- s:findNonCodeUsages(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,java.lang.String,Z,Z,java.lang.String,java.util.Collection):V
- s:isSearchTextOccurrencesEnabled(com.intellij.psi.PsiElement):Z
- s:processUsagesInStringsAndComments(com.intellij.psi.PsiElement,com.intellij.psi.search.SearchScope,java.lang.String,Z,com.intellij.util.PairProcessor):Z
f:com.intellij.slicer.DuplicateMap
- <init>():V
- clear():V
f:com.intellij.slicer.GroupByLeavesAction
- com.intellij.openapi.actionSystem.AnAction
- <init>(com.intellij.slicer.SliceTreeBuilder):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.slicer.LanguageSlicing
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.slicer.LanguageSlicing
- s:getProvider(com.intellij.psi.PsiElement):com.intellij.slicer.SliceLanguageSupportProvider
f:com.intellij.slicer.SliceAnalysisParams
- dataFlowToThis:Z
- scope:com.intellij.analysis.AnalysisScope
- showInstanceDereferences:Z
- valueFilter:com.intellij.slicer.SliceValueFilter
- <init>():V
- <init>(com.intellij.slicer.SliceAnalysisParams):V
f:com.intellij.slicer.SliceFilterParseException
- java.lang.Exception
- <init>(java.lang.String):V
a:com.intellij.slicer.SliceHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- a:askForParams(com.intellij.psi.PsiElement,com.intellij.slicer.SliceManager$StoredSettingsBean,java.lang.String):com.intellij.slicer.SliceAnalysisParams
- s:create(Z):com.intellij.slicer.SliceHandler
- getExpressionAtCaret(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- startInWriteAction():Z
com.intellij.slicer.SliceLanguageSupportProvider
- a:createRootUsage(com.intellij.psi.PsiElement,com.intellij.slicer.SliceAnalysisParams):com.intellij.slicer.SliceUsage
- a:getElementForDescription(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:getExpressionAtCaret(com.intellij.psi.PsiElement,Z):com.intellij.psi.PsiElement
- a:getRenderer():com.intellij.slicer.SliceUsageCellRendererBase
- parseFilter(com.intellij.psi.PsiElement,java.lang.String):com.intellij.slicer.SliceValueFilter
- a:registerExtraPanelActions(com.intellij.openapi.actionSystem.DefaultActionGroup,com.intellij.slicer.SliceTreeBuilder):V
- a:startAnalyzeLeafValues(com.intellij.ide.util.treeView.AbstractTreeStructure,java.lang.Runnable):V
- a:startAnalyzeNullness(com.intellij.ide.util.treeView.AbstractTreeStructure,java.lang.Runnable):V
- supportValueFilters(com.intellij.psi.PsiElement):Z
f:com.intellij.slicer.SliceLeafAnalyzer
- <init>(com.intellij.slicer.SliceLeafEquality,com.intellij.slicer.SliceLanguageSupportProvider):V
- calcLeafExpressions(com.intellij.slicer.SliceNode,com.intellij.ide.util.treeView.AbstractTreeStructure,java.util.Map):java.util.Collection
- createMap():java.util.Map
- createTreeGroupedByValues(java.util.Collection,com.intellij.slicer.SliceRootNode,java.util.Map):com.intellij.slicer.SliceRootNode
- s:filterTree(com.intellij.slicer.SliceNode,com.intellij.util.NullableFunction,com.intellij.util.PairProcessor):com.intellij.slicer.SliceNode
- startAnalyzeValues(com.intellij.ide.util.treeView.AbstractTreeStructure,java.lang.Runnable):V
f:com.intellij.slicer.SliceLeafAnalyzer$SliceNodeGuide
- com.intellij.util.WalkingState$TreeGuide
- <init>(com.intellij.ide.util.treeView.AbstractTreeStructure):V
- getFirstChild(com.intellij.slicer.SliceNode):com.intellij.slicer.SliceNode
- getNextSibling(com.intellij.slicer.SliceNode):com.intellij.slicer.SliceNode
- getParent(com.intellij.slicer.SliceNode):com.intellij.slicer.SliceNode
- getPrevSibling(com.intellij.slicer.SliceNode):com.intellij.slicer.SliceNode
c:com.intellij.slicer.SliceLeafEquality
- com.intellij.util.containers.HashingStrategy
- <init>():V
- equals(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- hashCode(com.intellij.psi.PsiElement):I
- p:substituteElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
c:com.intellij.slicer.SliceLeafValueRootNode
- com.intellij.slicer.SliceNode
- f:myCachedChildren:java.util.List
- <init>(com.intellij.openapi.project.Project,com.intellij.slicer.SliceNode,com.intellij.slicer.SliceUsage,java.util.List):V
- customizeCellRenderer(com.intellij.slicer.SliceUsageCellRendererBase,javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- getCachedChildren():java.util.List
- getChildren():java.util.Collection
- getNodeText():java.lang.String
- p:update(com.intellij.ide.projectView.PresentationData):V
f:com.intellij.slicer.SliceManager
- com.intellij.openapi.components.PersistentStateComponent
- <init>(com.intellij.openapi.project.Project):V
- createToolWindow(com.intellij.psi.PsiElement,com.intellij.slicer.SliceAnalysisParams):V
- createToolWindow(Z,com.intellij.slicer.SliceRootNode,Z,java.lang.String):V
- s:getElementDescription(java.lang.String,com.intellij.psi.PsiElement,java.lang.String):java.lang.String
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.slicer.SliceManager
- getState():com.intellij.slicer.SliceManager$StoredSettingsBean
- loadState(com.intellij.slicer.SliceManager$StoredSettingsBean):V
- slice(com.intellij.psi.PsiElement,Z,com.intellij.slicer.SliceHandler):V
c:com.intellij.slicer.SliceNode
- com.intellij.ide.util.treeView.AbstractTreeNode
- com.intellij.ui.DuplicateNodeRenderer$DuplicatableNode
- p:changed:Z
- p:duplicate:com.intellij.slicer.SliceNode
- p:myCachedChildren:java.util.List
- f:targetEqualUsages:com.intellij.slicer.DuplicateMap
- p:<init>(com.intellij.openapi.project.Project,com.intellij.slicer.SliceUsage,com.intellij.slicer.DuplicateMap):V
- calculateDupNode():V
- canNavigate():Z
- canNavigateToSource():Z
- copy():com.intellij.slicer.SliceNode
- p:createPresentation():com.intellij.ide.projectView.PresentationData
- customizeCellRenderer(com.intellij.slicer.SliceUsageCellRendererBase,javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- expandOnDoubleClick():Z
- getCachedChildren():java.util.List
- getChildren():java.util.Collection
- getDuplicate():com.intellij.slicer.SliceNode
- getNodeText():java.lang.String
- getProvider():com.intellij.slicer.SliceLanguageSupportProvider
- isValid():Z
- navigate(Z):V
- setChanged():V
- p:update(com.intellij.ide.projectView.PresentationData):V
a:com.intellij.slicer.SlicePanel
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiDataProvider
- p:<init>(com.intellij.openapi.project.Project,Z,com.intellij.slicer.SliceNode,Z,com.intellij.openapi.wm.ToolWindow):V
- p:close():V
- dispose():V
- a:isAutoScroll():Z
- a:isPreview():Z
- isToShowAutoScrollButton():Z
- isToShowPreviewButton():Z
- a:setAutoScroll(Z):V
- a:setPreview(Z):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.slicer.SliceRootNode
- com.intellij.slicer.SliceNode
- <init>(com.intellij.openapi.project.Project,com.intellij.slicer.DuplicateMap,com.intellij.slicer.SliceUsage):V
- copy():com.intellij.slicer.SliceRootNode
- customizeCellRenderer(com.intellij.slicer.SliceUsageCellRendererBase,javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- getChildren():java.util.Collection
- getRootUsage():com.intellij.slicer.SliceUsage
- setChildren(java.util.List):V
f:com.intellij.slicer.SliceTooComplexDFAUsage
- com.intellij.slicer.SliceUsage
- <init>(com.intellij.psi.PsiElement,com.intellij.slicer.SliceUsage):V
- getPresentation():com.intellij.usages.UsagePresentation
- processChildren(com.intellij.util.Processor):V
f:com.intellij.slicer.SliceTreeBuilder
- sf:SLICE_NODE_COMPARATOR:java.util.Comparator
- analysisInProgress:Z
- f:dataFlowToThis:Z
- f:splitByLeafExpressions:Z
- getRootSliceNode():com.intellij.slicer.SliceRootNode
- getTreeStructure():com.intellij.slicer.SliceTreeStructure
- switchToLeafNulls():V
f:com.intellij.slicer.SliceTreeStructure
- com.intellij.ide.util.treeView.AbstractTreeStructureBase
- commit():V
- getProviders():java.util.List
- getRootElement():com.intellij.slicer.SliceRootNode
- hasSomethingToCommit():Z
- isToBuildChildrenInBackground(java.lang.Object):Z
a:com.intellij.slicer.SliceUsage
- com.intellij.usages.UsageInfo2UsageAdapter
- f:params:com.intellij.slicer.SliceAnalysisParams
- p:<init>(com.intellij.psi.PsiElement,com.intellij.slicer.SliceAnalysisParams):V
- <init>(com.intellij.psi.PsiElement,com.intellij.slicer.SliceUsage):V
- p:<init>(com.intellij.psi.PsiElement,com.intellij.slicer.SliceUsage,com.intellij.slicer.SliceAnalysisParams):V
- canBeLeaf():Z
- pa:copy():com.intellij.slicer.SliceUsage
- getParent():com.intellij.slicer.SliceUsage
- getScope():com.intellij.analysis.AnalysisScope
- processChildren(com.intellij.util.Processor):V
- pa:processUsagesFlownDownTo(com.intellij.psi.PsiElement,com.intellij.util.Processor):V
- pa:processUsagesFlownFromThe(com.intellij.psi.PsiElement,com.intellij.util.Processor):V
a:com.intellij.slicer.SliceUsageCellRendererBase
- com.intellij.ui.ColoredTreeCellRenderer
- <init>():V
- customizeCellRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
- a:customizeCellRendererFor(com.intellij.slicer.SliceUsage):V
com.intellij.slicer.SliceUsageTransformer
- a:transform(com.intellij.slicer.SliceUsage):java.util.Collection
com.intellij.slicer.SliceValueFilter
- a:allowed(com.intellij.psi.PsiElement):Z
- a:getPresentationText(com.intellij.psi.PsiElement):java.lang.String
a:com.intellij.task.impl.AbstractProjectTask
- com.intellij.task.ProjectTask
- <init>():V
- <init>(java.util.Collection):V
- getDependsOn():java.util.Collection
- setDependsOn(java.util.Collection):V
f:com.intellij.task.impl.EmptyCompileScopeBuildTaskImpl
- com.intellij.task.BuildTask
- com.intellij.task.EmptyCompileScopeBuildTask
- com.intellij.task.impl.AbstractProjectTask
- <init>(Z):V
- getPresentableName():java.lang.String
f:com.intellij.task.impl.ExecuteRunConfigurationTaskImpl
- com.intellij.task.impl.AbstractProjectTask
- com.intellij.task.ExecuteRunConfigurationTask
- <init>(com.intellij.execution.configurations.RunProfile):V
- <init>(com.intellij.execution.configurations.RunProfile,com.intellij.execution.ExecutionTarget,com.intellij.execution.configurations.RunnerSettings,com.intellij.execution.configurations.ConfigurationPerRunnerSettings,com.intellij.execution.RunnerAndConfigurationSettings):V
- getConfigurationSettings():com.intellij.execution.configurations.ConfigurationPerRunnerSettings
- getExecutionTarget():com.intellij.execution.ExecutionTarget
- getPresentableName():java.lang.String
- getRunProfile():com.intellij.execution.configurations.RunProfile
- getRunnerSettings():com.intellij.execution.configurations.RunnerSettings
- getSettings():com.intellij.execution.RunnerAndConfigurationSettings
c:com.intellij.task.impl.ModuleBuildTaskImpl
- com.intellij.task.BuildTask
- com.intellij.task.ModuleBuildTask
- com.intellij.task.impl.AbstractProjectTask
- <init>(com.intellij.openapi.module.Module):V
- <init>(com.intellij.openapi.module.Module,Z):V
- <init>(com.intellij.openapi.module.Module,Z,Z,Z):V
- <init>(com.intellij.openapi.module.Module,Z,Z,Z,Z):V
- getModule():com.intellij.openapi.module.Module
- getPresentableName():java.lang.String
- isIncludeDependentModules():Z
- isIncludeRuntimeDependencies():Z
- isIncludeTests():Z
f:com.intellij.task.impl.ModuleFilesBuildTaskImpl
- com.intellij.task.impl.ModuleBuildTaskImpl
- com.intellij.task.ModuleFilesBuildTask
- <init>(com.intellij.openapi.module.Module,Z,java.util.Collection):V
- <init>(com.intellij.openapi.module.Module,Z,com.intellij.openapi.vfs.VirtualFile[]):V
- getFiles():com.intellij.openapi.vfs.VirtualFile[]
- getPresentableName():java.lang.String
f:com.intellij.task.impl.ModuleResourcesBuildTaskImpl
- com.intellij.task.impl.ModuleBuildTaskImpl
- com.intellij.task.ModuleResourcesBuildTask
- <init>(com.intellij.openapi.module.Module):V
- <init>(com.intellij.openapi.module.Module,Z):V
c:com.intellij.task.impl.ProjectModelBuildTaskImpl
- com.intellij.task.BuildTask
- com.intellij.task.ProjectModelBuildTask
- com.intellij.task.impl.AbstractProjectTask
- <init>(com.intellij.openapi.roots.ProjectModelBuildableElement,Z):V
- getBuildableElement():com.intellij.openapi.roots.ProjectModelBuildableElement
- getPresentableName():java.lang.String
f:com.intellij.task.impl.ProjectTaskList
- com.intellij.util.SmartList
- com.intellij.task.ProjectTask
- <init>():V
- <init>(java.util.Collection):V
- s:asList(com.intellij.task.ProjectTask[]):com.intellij.task.impl.ProjectTaskList
- getPresentableName():java.lang.String
f:com.intellij.task.impl.ProjectTaskManagerImpl
- com.intellij.task.ProjectTaskManager
- <init>(com.intellij.openapi.project.Project):V
- addListener(com.intellij.task.impl.ProjectTaskManagerListener):V
- build(com.intellij.openapi.module.Module[]):org.jetbrains.concurrency.Promise
- build(com.intellij.openapi.roots.ProjectModelBuildableElement[]):org.jetbrains.concurrency.Promise
- buildAllModules():org.jetbrains.concurrency.Promise
- compile(com.intellij.openapi.vfs.VirtualFile[]):org.jetbrains.concurrency.Promise
- createAllModulesBuildTask(Z,com.intellij.openapi.project.Project):com.intellij.task.ProjectTask
- createBuildTask(Z,com.intellij.openapi.roots.ProjectModelBuildableElement[]):com.intellij.task.ProjectTask
- createModulesBuildTask(com.intellij.openapi.module.Module[],Z,Z,Z,Z):com.intellij.task.ProjectTask
- s:putBuildOriginator(com.intellij.openapi.project.Project,java.lang.Class):V
- rebuild(com.intellij.openapi.module.Module[]):org.jetbrains.concurrency.Promise
- rebuild(com.intellij.openapi.roots.ProjectModelBuildableElement[]):org.jetbrains.concurrency.Promise
- rebuildAllModules():org.jetbrains.concurrency.Promise
- run(com.intellij.task.ProjectTask):org.jetbrains.concurrency.Promise
- run(com.intellij.task.ProjectTaskContext,com.intellij.task.ProjectTask):org.jetbrains.concurrency.Promise
c:com.intellij.testIntegration.GotoTestOrCodeAction
- com.intellij.codeInsight.actions.BaseCodeInsightAction
- <init>():V
- p:getHandler():com.intellij.codeInsight.CodeInsightActionHandler
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.testIntegration.GotoTestOrCodeHandler
- com.intellij.codeInsight.navigation.GotoTargetHandler
- <init>():V
- p:getAdText(com.intellij.psi.PsiElement,I):java.lang.String
- p:getChooserTitle(com.intellij.psi.PsiElement,java.lang.String,I,Z):java.lang.String
- p:getFeatureUsedKey():java.lang.String
- p:getFindUsagesTitle(com.intellij.psi.PsiElement,java.lang.String,I):java.lang.String
- p:getNotFoundMessage(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.lang.String
- s:getSelectedElement(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- p:getSourceAndTargetElements(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.navigation.GotoTargetHandler$GotoData
- p:navigateToElement(com.intellij.pom.Navigatable):V
- p:shouldSortTargets():Z
- p:useEditorFont():Z
f:com.intellij.testIntegration.LanguageTestCreators
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.testIntegration.LanguageTestCreators
- <init>():V
f:com.intellij.testIntegration.TestFinderHelper
- <init>():V
- s:calcTestNameProximity(java.lang.String,java.lang.String):java.lang.Integer
- s:collectPossibleClassNamesWithWeights(java.lang.String):java.util.List
- s:findClassesForTest(com.intellij.psi.PsiElement):java.util.Collection
- s:findSourceElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:findTestsForClass(com.intellij.psi.PsiElement):java.util.Collection
- s:getFinders():java.util.List
- s:getSearchingForClassesForTestProgressTitle(com.intellij.psi.PsiElement):java.lang.String
- s:getSearchingForTestsForClassProgressTitle(com.intellij.psi.PsiElement):java.lang.String
- s:getSortedElements(java.util.List,Z):java.util.List
- s:getSortedElements(java.util.List,Z,java.util.Comparator):java.util.List
- s:isTest(com.intellij.psi.PsiElement):Z
a:com.intellij.tools.AbstractToolBeforeRunTask
- com.intellij.execution.BeforeRunTask
- <init>(com.intellij.openapi.util.Key):V
- clone():com.intellij.tools.AbstractToolBeforeRunTask
- execute(com.intellij.openapi.actionSystem.DataContext,J):Z
- findCorrespondingTool():com.intellij.tools.Tool
- getToolActionId():java.lang.String
- pa:getTools():java.util.List
- isExecutable():Z
- readExternal(org.jdom.Element):V
- setToolActionId(java.lang.String):V
- writeExternal(org.jdom.Element):V
a:com.intellij.tools.AbstractToolBeforeRunTaskProvider
- com.intellij.execution.BeforeRunTaskProvider
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- <init>():V
- canExecuteTask(com.intellij.execution.configurations.RunConfiguration,com.intellij.tools.AbstractToolBeforeRunTask):Z
- configureTask(com.intellij.execution.configurations.RunConfiguration,com.intellij.tools.AbstractToolBeforeRunTask):Z
- pa:createToolsPanel():com.intellij.tools.BaseToolsPanel
- executeTask(com.intellij.openapi.actionSystem.DataContext,com.intellij.execution.configurations.RunConfiguration,com.intellij.execution.runners.ExecutionEnvironment,com.intellij.tools.AbstractToolBeforeRunTask):Z
- getDescription(com.intellij.tools.AbstractToolBeforeRunTask):java.lang.String
- getIcon():javax.swing.Icon
- isConfigurable():Z
a:com.intellij.tools.BaseExternalToolsGroup
- com.intellij.openapi.actionSystem.ActionGroup
- com.intellij.openapi.project.DumbAware
- p:<init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- a:getDelegateGroupId():java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.tools.BaseToolKeymapExtension
- com.intellij.openapi.keymap.KeymapExtension
- <init>():V
- createGroup(com.intellij.openapi.util.Condition,com.intellij.openapi.project.Project):com.intellij.openapi.keymap.KeymapGroup
- pa:getActionIdPrefix():java.lang.String
- pa:getGroupIdPrefix():java.lang.String
- pa:getRootGroupId():java.lang.String
- pa:getRootGroupName():java.lang.String
- pa:getToolsIdsByGroupName(java.lang.String):java.util.List
a:com.intellij.tools.BaseToolManager
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.options.SchemeManagerFactory,java.lang.String,java.lang.String):V
- s:convertString(java.lang.String):java.lang.String
- pa:createProcessor():com.intellij.openapi.options.SchemeProcessor
- p:createToolAction(com.intellij.tools.Tool):com.intellij.tools.ToolAction
- dispose():V
- pa:getActionIdPrefix():java.lang.String
- p:getActionManager():com.intellij.openapi.actionSystem.ex.ActionManagerEx
- p:getGroupIdPrefix():java.lang.String
- getGroups():java.util.List
- getTools():java.util.List
- getTools(java.lang.String):java.util.List
- pf:registerActions(com.intellij.openapi.actionSystem.ActionManager):V
- pf:registerActions(com.intellij.openapi.actionSystem.ex.ActionRuntimeRegistrar):V
- setTools(java.util.List):V
- p:unregisterActions(com.intellij.openapi.actionSystem.ex.ActionRuntimeRegistrar):V
a:com.intellij.tools.BaseToolSelectComboBox
- com.intellij.ui.ComboboxWithBrowseButton
- sf:NONE_TOOL:java.lang.Object
- <init>():V
- p:getComboBoxElements():java.util.List
- getSelectedTool():com.intellij.tools.Tool
- pa:getToolManager():com.intellij.tools.BaseToolManager
- pa:getToolSelectDialog(java.lang.String):com.intellij.tools.ToolSelectDialog
- getValuableItemCount():I
- selectTool(java.lang.String):com.intellij.tools.Tool
a:com.intellij.tools.BaseToolsPanel
- javax.swing.JPanel
- p:<init>():V
- apply():V
- p:createToolEditorDialog(java.lang.String):com.intellij.tools.ToolEditorDialog
- getSelectedTool():com.intellij.tools.Tool
- pa:getToolManager():com.intellij.tools.BaseToolManager
- p:getTreeCellRenderer():com.intellij.ui.CheckboxTree$CheckboxTreeCellRenderer
- isModified():Z
- reset():V
- selectTool(java.lang.String):V
pc:com.intellij.tools.BaseToolsPanel$MyCheckboxTreeCellRenderer
- com.intellij.ui.CheckboxTree$CheckboxTreeCellRenderer
- p:<init>():V
- customizeRenderer(javax.swing.JTree,java.lang.Object,Z,Z,Z,I,Z):V
f:com.intellij.tools.FilterInfo
- com.intellij.openapi.util.JDOMExternalizable
- <init>():V
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- s:convertString(java.lang.String):java.lang.String
- createCopy():com.intellij.tools.FilterInfo
- equals(java.lang.Object):Z
- getDescription():java.lang.String
- getName():java.lang.String
- getRegExp():java.lang.String
- hashCode():I
- readExternal(org.jdom.Element):V
- setDescription(java.lang.String):V
- setName(java.lang.String):V
- setRegExp(java.lang.String):V
- writeExternal(org.jdom.Element):V
c:com.intellij.tools.SimpleActionGroup
- com.intellij.openapi.actionSystem.ActionGroup
- <init>():V
- add(com.intellij.openapi.actionSystem.AnAction):V
- getChildren(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.actionSystem.AnAction[]
- getChildrenCount():I
- removeAll():V
c:com.intellij.tools.Tool
- com.intellij.openapi.options.SchemeElement
- sf:ACTION_ID_PREFIX:java.lang.String
- sf:DEFAULT_GROUP_NAME:java.lang.String
- psf:NOT_STARTED_EVENT:com.intellij.execution.process.ProcessEvent
- <init>():V
- addOutputFilter(com.intellij.tools.FilterInfo):V
- copy():com.intellij.openapi.options.SchemeElement
- copyFrom(com.intellij.tools.Tool):V
- createCommandLine(com.intellij.openapi.actionSystem.DataContext):com.intellij.execution.configurations.GeneralCommandLine
- s:createWslCommandLine(com.intellij.openapi.project.Project,com.intellij.execution.wsl.WSLDistribution,com.intellij.execution.configurations.GeneralCommandLine,java.lang.String,java.lang.String):com.intellij.execution.configurations.GeneralCommandLine
- equals(java.lang.Object):Z
- execute(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.actionSystem.DataContext,J,com.intellij.execution.process.ProcessListener):V
- executeIfPossible(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.actionSystem.DataContext,J,com.intellij.execution.process.ProcessListener):Z
- getActionId():java.lang.String
- getActionIdPrefix():java.lang.String
- getDescription():java.lang.String
- getGroup():java.lang.String
- getKey():java.lang.String
- getName():java.lang.String
- getOutputFilters():com.intellij.tools.FilterInfo[]
- getParameters():java.lang.String
- getProgram():java.lang.String
- getWorkingDirectory():java.lang.String
- isEnabled():Z
- isShowConsoleOnStdErr():Z
- isShowConsoleOnStdOut():Z
- isShownInEditor():Z
- isShownInMainMenu():Z
- isShownInProjectViews():Z
- isShownInSearchResultsPopup():Z
- isUseConsole():Z
- ps:notifyCouldNotStart(com.intellij.execution.process.ProcessListener):V
- setDescription(java.lang.String):V
- setEnabled(Z):V
- setFilesSynchronizedAfterRun(Z):V
- setGroup(java.lang.String):V
- setGroupName(java.lang.String):V
- setName(java.lang.String):V
- setOutputFilters(com.intellij.tools.FilterInfo[]):V
- setParameters(java.lang.String):V
- setProgram(java.lang.String):V
- setShowConsoleOnStdErr(Z):V
- setShowConsoleOnStdOut(Z):V
- setShownInEditor(Z):V
- setShownInMainMenu(Z):V
- setShownInProjectViews(Z):V
- setShownInSearchResultsPopup(Z):V
- setUseConsole(Z):V
- setWorkingDirectory(java.lang.String):V
- synchronizeAfterExecution():Z
c:com.intellij.tools.ToolAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.tools.Tool):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getToolDataContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DataContext
- s:runTool(java.lang.String,com.intellij.openapi.actionSystem.DataContext):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.tools.ToolEditorDialog
- com.intellij.openapi.ui.DialogWrapper
- p:<init>(javax.swing.JComponent,java.lang.String):V
- p:addProgramBrowseAction(com.intellij.openapi.ui.TextFieldWithBrowseButton):V
- p:addWorkingDirectoryBrowseAction(com.intellij.openapi.ui.TextFieldWithBrowseButton):V
- p:createCenterPanel():javax.swing.JPanel
- p:createTool():com.intellij.tools.Tool
- p:doValidate():com.intellij.openapi.ui.ValidationInfo
- p:fillAdditionalOptionsPanel(javax.swing.JPanel):V
- getData():com.intellij.tools.Tool
- p:getDimensionServiceKey():java.lang.String
- p:getHelpId():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getProject():com.intellij.openapi.project.Project
- p:setData(com.intellij.tools.Tool,java.lang.String[]):V
f:com.intellij.tools.ToolManager
- com.intellij.tools.BaseToolManager
- <init>():V
- s:getInstance():com.intellij.tools.ToolManager
f:com.intellij.tools.ToolProcessAdapter
- com.intellij.execution.process.ProcessAdapter
- <init>(com.intellij.openapi.project.Project,Z,java.lang.String):V
- processTerminated(com.intellij.execution.process.ProcessEvent):V
c:com.intellij.tools.ToolRunProfile
- com.intellij.execution.configurations.ModuleRunProfile
- <init>(com.intellij.tools.Tool,com.intellij.openapi.actionSystem.DataContext):V
- s:expandMacrosInName(com.intellij.tools.Tool,com.intellij.openapi.actionSystem.DataContext):java.lang.String
- getIcon():javax.swing.Icon
- getName():java.lang.String
- getState(com.intellij.execution.Executor,com.intellij.execution.runners.ExecutionEnvironment):com.intellij.execution.configurations.RunProfileState
c:com.intellij.tools.ToolSelectDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.tools.BaseToolsPanel):V
- p:createCenterPanel():javax.swing.JComponent
- p:doOKAction():V
- p:getDimensionServiceKey():java.lang.String
- getSelectedTool():com.intellij.tools.Tool
- isModified():Z
f:com.intellij.tools.ToolsBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
a:com.intellij.tools.ToolsCustomizer
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- s:customizeCommandLine(com.intellij.execution.configurations.GeneralCommandLine,com.intellij.openapi.actionSystem.DataContext):com.intellij.execution.configurations.GeneralCommandLine
- a:customizeCommandLine(com.intellij.openapi.actionSystem.DataContext,com.intellij.execution.configurations.GeneralCommandLine):com.intellij.execution.configurations.GeneralCommandLine
f:com.intellij.tools.ToolsGroup
- com.intellij.openapi.options.ExternalizableScheme
- <init>(java.lang.String):V
f:com.intellij.tools.ToolsPanel
- com.intellij.tools.BaseToolsPanel
- <init>():V
a:com.intellij.tools.ToolsProcessor
- com.intellij.openapi.options.NonLazySchemeProcessor
- <init>():V
- pa:createTool():com.intellij.tools.Tool
- pa:createToolsGroup(java.lang.String):com.intellij.tools.ToolsGroup
- p:getDefaultGroupName():java.lang.String
- readScheme(org.jdom.Element,Z):com.intellij.tools.ToolsGroup
- p:readToolAttributes(org.jdom.Element,com.intellij.tools.Tool):V
- p:saveToolAttributes(com.intellij.tools.Tool,org.jdom.Element):V
- writeScheme(com.intellij.tools.ToolsGroup):org.jdom.Element
a:com.intellij.tools.ToolsProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- s:getAllTools():java.util.List
- a:getTools():java.util.List
f:com.intellij.ui.ColorLineMarkerProvider
- com.intellij.codeInsight.daemon.LineMarkerProviderDescriptor
- sf:INSTANCE:com.intellij.ui.ColorLineMarkerProvider
- <init>():V
- collectSlowLineMarkers(java.util.List,java.util.Collection):V
- getIcon():javax.swing.Icon
- getLineMarkerInfo(com.intellij.psi.PsiElement):com.intellij.codeInsight.daemon.LineMarkerInfo
- getName():java.lang.String
f:com.intellij.ui.DuplicateNodeRenderer
- <init>():V
- s:paintDuplicateNodesBackground(java.awt.Graphics,javax.swing.JTree):V
com.intellij.ui.DuplicateNodeRenderer$DuplicatableNode
- a:getDuplicate():java.lang.Object
c:com.intellij.ui.EditorComboWithBrowseButton
- com.intellij.openapi.ui.ComponentWithBrowseButton
- com.intellij.ui.TextAccessor
- <init>(java.awt.event.ActionListener,java.lang.String,com.intellij.openapi.project.Project,java.lang.String):V
- getText():java.lang.String
- isEditable():Z
- prependItem(java.lang.String):V
- setHistory(java.lang.String[]):V
- setText(java.lang.String):V
com.intellij.ui.FontSizeModel
- a:getUpdates():kotlinx.coroutines.flow.Flow
- a:getValue():java.lang.Object
- a:getValues():java.util.List
- a:setValue(java.lang.Object):V
f:com.intellij.ui.FontSizePopupData
- <init>(com.intellij.ui.components.JBSlider):V
- f:component1():com.intellij.ui.components.JBSlider
- f:copy(com.intellij.ui.components.JBSlider):com.intellij.ui.FontSizePopupData
- bs:copy$default(com.intellij.ui.FontSizePopupData,com.intellij.ui.components.JBSlider,I,java.lang.Object):com.intellij.ui.FontSizePopupData
- equals(java.lang.Object):Z
- f:getSlider():com.intellij.ui.components.JBSlider
- hashCode():I
c:com.intellij.ui.MacroAwareTextBrowseFolderListener
- com.intellij.openapi.ui.TextBrowseFolderListener
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor,com.intellij.openapi.project.Project):V
- p:expandPath(java.lang.String):java.lang.String
c:com.intellij.ui.ReplacePromptDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(Z,java.lang.String,com.intellij.openapi.project.Project):V
- <init>(Z,java.lang.String,com.intellij.openapi.project.Project,com.intellij.find.FindManager$MalformedReplacementStringException):V
- p:createActions():javax.swing.Action[]
- createCenterPanel():javax.swing.JComponent
- createNorthPanel():javax.swing.JComponent
- p:getDimensionServiceKey():java.lang.String
- p:getMessage():java.lang.String
c:com.intellij.ui.StringComboboxEditor
- com.intellij.ui.EditorComboBoxEditor
- sf:COMBO_BOX_KEY:com.intellij.openapi.util.Key
- sf:USE_PLAIN_PREFIX_MATCHER:com.intellij.openapi.util.Key
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.ui.ComboBox):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.ui.ComboBox,Z):V
- getItem():java.lang.Object
- p:onEditorCreate(com.intellij.openapi.editor.ex.EditorEx):V
- setItem(java.lang.Object):V
f:com.intellij.ui.popup.NotLookupOrSearchCondition
- com.intellij.openapi.util.Condition
- s:INSTANCE:com.intellij.ui.popup.NotLookupOrSearchCondition
- value(com.intellij.openapi.project.Project):Z
f:com.intellij.ui.popup.PopupPositionManager
- s:positionPopupInBestPosition(com.intellij.openapi.ui.popup.JBPopup,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):V
- s:positionPopupInBestPosition(com.intellij.openapi.ui.popup.JBPopup,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext,com.intellij.ui.popup.PopupPositionManager$Position[]):V
e:com.intellij.ui.popup.PopupPositionManager$Position
- java.lang.Enum
- sf:BOTTOM:com.intellij.ui.popup.PopupPositionManager$Position
- sf:LEFT:com.intellij.ui.popup.PopupPositionManager$Position
- sf:RIGHT:com.intellij.ui.popup.PopupPositionManager$Position
- sf:TOP:com.intellij.ui.popup.PopupPositionManager$Position
- s:valueOf(java.lang.String):com.intellij.ui.popup.PopupPositionManager$Position
- s:values():com.intellij.ui.popup.PopupPositionManager$Position[]
c:com.intellij.ui.popup.PopupPositionManager$PositionAdjuster
- sf:DEFAULT_GAP:I
- pf:myGap:I
- pf:myRelativeOnScreen:java.awt.Point
- pf:myRelativeTo:java.awt.Component
- pf:myScreenRect:java.awt.Rectangle
- <init>(java.awt.Component):V
- <init>(java.awt.Component,I):V
- adjust(com.intellij.openapi.ui.popup.JBPopup):V
- adjust(com.intellij.openapi.ui.popup.JBPopup,java.awt.Dimension,java.awt.Rectangle):V
- adjust(com.intellij.openapi.ui.popup.JBPopup,java.awt.Dimension,com.intellij.ui.popup.PopupPositionManager$Position[]):V
- adjust(com.intellij.openapi.ui.popup.JBPopup,com.intellij.ui.popup.PopupPositionManager$Position[]):V
- adjustBounds(java.awt.Dimension,com.intellij.ui.popup.PopupPositionManager$Position[]):java.awt.Rectangle
- ps:crop(java.awt.Rectangle,java.awt.Rectangle):java.awt.Rectangle
- s:getPopupSize(com.intellij.openapi.ui.popup.JBPopup):java.awt.Dimension
- p:getYForTopPositioning():I
- p:positionAbove(java.awt.Dimension):java.awt.Rectangle
- p:positionLeft(java.awt.Dimension):java.awt.Rectangle
- p:positionRight(java.awt.Dimension):java.awt.Rectangle
- p:positionUnder(java.awt.Dimension):java.awt.Rectangle
a:com.intellij.ui.popup.PopupUpdateProcessor
- com.intellij.ui.popup.PopupUpdateProcessorBase
- p:<init>(com.intellij.openapi.project.Project):V
- beforeShown(com.intellij.openapi.ui.popup.LightweightWindowEvent):V
c:com.intellij.ui.popup.util.DetailViewImpl
- javax.swing.JPanel
- com.intellij.openapi.util.UserDataHolder
- com.intellij.ui.popup.util.DetailView
- <init>(com.intellij.openapi.project.Project):V
- clearEditor():V
- p:createEditor(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.Editor
- getCurrentItem():com.intellij.ui.popup.util.ItemWrapper
- getEditor():com.intellij.openapi.editor.Editor
- getEditorState():com.intellij.ui.popup.util.DetailView$PreviewEditorState
- getPropertiesPanel():javax.swing.JPanel
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- hasEditorOnly():Z
- navigateInPreviewEditor(com.intellij.ui.popup.util.DetailView$PreviewEditorState):V
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- removeNotify():V
- setCurrentItem(com.intellij.ui.popup.util.ItemWrapper):V
- setEditor(com.intellij.openapi.editor.Editor):V
- setEmptyLabel(java.lang.String):V
- setPropertiesPanel(javax.swing.JPanel):V
f:com.intellij.ui.popup.util.MasterDetailPopupBuilder
- <init>(com.intellij.openapi.project.Project):V
- createMasterDetailPopup():com.intellij.openapi.ui.popup.JBPopup
- getPathLabel():javax.swing.JLabel
- getSelectedItems():com.intellij.ui.popup.util.ItemWrapper[]
- setActionsGroup(com.intellij.openapi.actionSystem.ActionGroup):com.intellij.ui.popup.util.MasterDetailPopupBuilder
- setAddDetailViewToEast(Z):com.intellij.ui.popup.util.MasterDetailPopupBuilder
- setDelegate(com.intellij.ui.popup.util.MasterDetailPopupBuilder$Delegate):com.intellij.ui.popup.util.MasterDetailPopupBuilder
- setDetailView(com.intellij.ui.popup.util.DetailView):com.intellij.ui.popup.util.MasterDetailPopupBuilder
- setDimensionServiceKey(java.lang.String):com.intellij.ui.popup.util.MasterDetailPopupBuilder
- setDoneRunnable(java.lang.Runnable):com.intellij.ui.popup.util.MasterDetailPopupBuilder
- setList(com.intellij.ui.components.JBList):com.intellij.ui.popup.util.MasterDetailPopupBuilder
- setPopupTuner(com.intellij.util.Consumer):com.intellij.ui.popup.util.MasterDetailPopupBuilder
com.intellij.ui.popup.util.MasterDetailPopupBuilder$Delegate
- a:createAccessoryView(com.intellij.openapi.project.Project):javax.swing.JComponent
- a:getSelectedItemsInTree():java.lang.Object[]
- a:getTitle():java.lang.String
- a:handleMnemonic(java.awt.event.KeyEvent,com.intellij.openapi.project.Project,com.intellij.openapi.ui.popup.JBPopup):V
- a:itemChosen(com.intellij.ui.popup.util.ItemWrapper,com.intellij.openapi.project.Project,com.intellij.openapi.ui.popup.JBPopup,Z):V
- a:removeSelectedItemsInTree():V
f:com.intellij.ui.preview.DescriptorPreview
- <init>(com.intellij.openapi.ui.Splitter,Z,com.intellij.openapi.client.ClientProjectSession):V
- f:close():V
- f:editor():com.intellij.openapi.editor.Editor
- f:getEditable():Z
- f:getSession():com.intellij.openapi.client.ClientProjectSession
- f:getSplitter():com.intellij.openapi.ui.Splitter
- f:open(com.intellij.openapi.fileEditor.OpenFileDescriptor):V
a:com.intellij.ui.tabs.ColorButtonBase
- com.intellij.notification.impl.ui.StickyButton
- p:myColor:java.awt.Color
- p:<init>(java.lang.String,java.awt.Color):V
- p:createUI():javax.swing.plaf.ButtonUI
- pa:doPerformAction(java.awt.event.ActionEvent):V
- getForeground():java.awt.Color
- setColor(java.awt.Color):V
- setUI(javax.swing.plaf.ButtonUI):V
pc:com.intellij.ui.tabs.ColorButtonBase$ColorButtonUI
- com.intellij.notification.impl.ui.StickyButtonUI
- p:<init>():V
- p:getArcSize():I
- p:getBackgroundColor(com.intellij.ui.tabs.ColorButtonBase):java.awt.Color
- p:getFocusColor(com.intellij.ui.tabs.ColorButtonBase):java.awt.Color
- p:getRolloverColor(com.intellij.ui.tabs.ColorButtonBase):java.awt.Color
- p:getSelectionColor(com.intellij.ui.tabs.ColorButtonBase):java.awt.Color
f:com.intellij.ui.tabs.ColorSelectionComponent
- javax.swing.JPanel
- <init>():V
- getSelectedColorName():java.lang.String
- initDefault(com.intellij.ui.FileColorManager,java.lang.String):V
- setCustomButtonColor(java.awt.Color):V
- setSelectedColor(java.lang.String):V
f:com.intellij.ui.tabs.EditorTabColorProviderImpl
- com.intellij.openapi.fileEditor.impl.EditorTabColorProvider
- com.intellij.openapi.project.DumbAware
- <init>():V
- getEditorTabColor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- getEditorTabForegroundColor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.colors.ColorKey
- getProjectViewColor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.awt.Color
f:com.intellij.ui.tabs.FileColorManagerImpl
- com.intellij.ui.FileColorManager
- <init>(com.intellij.openapi.project.Project):V
- s:_isEnabled():Z
- s:_isEnabledForProjectView():Z
- addScopeColor(java.lang.String,java.lang.String,Z):V
- getApplicationLevelConfigurations():java.util.List
- getColor(java.lang.String):java.awt.Color
- s:getColorID(java.awt.Color):java.lang.String
- getColorIDs():java.util.Collection
- getColorName(java.lang.String):java.lang.String
- getColorNames():java.util.Collection
- getFileColor(com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- getProject():com.intellij.openapi.project.Project
- getProjectLevelConfigurations():java.util.List
- getRendererBackground(com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- getRendererBackground(com.intellij.psi.PsiFile):java.awt.Color
- getScopeColor(java.lang.String):java.awt.Color
- isEnabled():Z
- isEnabledForProjectView():Z
- isEnabledForTabs():Z
- isShared(java.lang.String):Z
- setEnabled(Z):V
- s:setEnabledForProjectView(Z):V
f:com.intellij.uiDesigner.SerializedComponentData
- <init>(java.lang.String):V
- getSerializedComponents():java.lang.String
c:com.intellij.unscramble.AnalyzeStacktraceAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
f:com.intellij.unscramble.AnalyzeStacktraceUtil
- sf:EP_NAME:com.intellij.openapi.extensions.ProjectExtensionPointName
- sf:addConsole(com.intellij.openapi.project.Project,com.intellij.unscramble.AnalyzeStacktraceUtil$ConsoleFactory,java.lang.String,java.lang.String):V
- sf:addConsole(com.intellij.openapi.project.Project,com.intellij.unscramble.AnalyzeStacktraceUtil$ConsoleFactory,java.lang.String,java.lang.String,javax.swing.Icon):com.intellij.execution.ui.RunContentDescriptor
- sf:addConsole(com.intellij.openapi.project.Project,com.intellij.unscramble.AnalyzeStacktraceUtil$ConsoleFactory,java.lang.String,java.lang.String,javax.swing.Icon,Z):com.intellij.execution.ui.RunContentDescriptor
- sf:createEditorPanel(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable):com.intellij.unscramble.AnalyzeStacktraceUtil$StacktraceEditorPanel
- sf:printStacktrace(com.intellij.execution.ui.ConsoleView,java.lang.String):V
com.intellij.unscramble.AnalyzeStacktraceUtil$ConsoleFactory
- a:createConsoleComponent(com.intellij.execution.ui.ConsoleView,com.intellij.openapi.actionSystem.DefaultActionGroup):javax.swing.JComponent
f:com.intellij.unscramble.AnalyzeStacktraceUtil$StacktraceEditorPanel
- javax.swing.JPanel
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiDataProvider
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- dispose():V
- f:getEditor():com.intellij.openapi.editor.Editor
- f:getEditorComponent():javax.swing.JComponent
- f:getText():java.lang.String
- f:pasteTextFromClipboard():V
- f:setText(java.lang.String):V
- uiDataSnapshot(com.intellij.openapi.actionSystem.DataSink):V
f:com.intellij.usageView.impl.UsageViewContentManagerImpl
- com.intellij.usageView.UsageViewContentManager
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.wm.ToolWindowManager):V
- addContent(java.lang.String,java.lang.String,java.lang.String,Z,javax.swing.JComponent,Z,Z):com.intellij.ui.content.Content
- addContent(java.lang.String,Z,javax.swing.JComponent,Z,Z):com.intellij.ui.content.Content
- closeContent(com.intellij.ui.content.Content):V
- getReusableContentsCount():I
- getSelectedContent():com.intellij.ui.content.Content
- getSelectedContent(Z):com.intellij.ui.content.Content
f:com.intellij.util.PatternValuesIndex
- <init>():V
- s:buildStringIndex(java.util.Collection):java.util.Set
- s:processStringValues(java.util.Collection,com.intellij.util.PairProcessor):Z
a:com.intellij.util.TextFieldCompletionProvider
- com.intellij.openapi.project.PossiblyDumbAware
- com.intellij.util.textCompletion.TextCompletionProvider
- p:myCaseInsensitivity:Z
- p:<init>():V
- p:<init>(Z):V
- acceptChar(C):com.intellij.codeInsight.lookup.CharFilter$Result
- pa:addCompletionVariants(java.lang.String,I,java.lang.String,com.intellij.codeInsight.completion.CompletionResultSet):V
- apply(com.intellij.ui.EditorTextField):V
- apply(com.intellij.ui.EditorTextField,java.lang.String):V
- applyPrefixMatcher(com.intellij.codeInsight.completion.CompletionResultSet,java.lang.String):com.intellij.codeInsight.completion.CompletionResultSet
- createEditor(com.intellij.openapi.project.Project):com.intellij.ui.EditorTextField
- createEditor(com.intellij.openapi.project.Project,Z,com.intellij.util.Consumer):com.intellij.ui.EditorTextField
- fillCompletionVariants(com.intellij.codeInsight.completion.CompletionParameters,java.lang.String,com.intellij.codeInsight.completion.CompletionResultSet):V
- getAdvertisement():java.lang.String
- p:getPrefix(java.lang.String):java.lang.String
- getPrefix(java.lang.String,I):java.lang.String
- isCaseInsensitivity():Z
a:com.intellij.util.TextFieldCompletionProviderDumbAware
- com.intellij.util.TextFieldCompletionProvider
- com.intellij.openapi.project.DumbAware
- p:<init>():V
- p:<init>(Z):V
f:com.intellij.util.gist.GistAstMarker
- <init>(com.intellij.openapi.fileTypes.FileType,java.lang.String,kotlin.jvm.functions.Function1):V
- f:accepts(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.util.indexing.FileBasedIndexProjectHandler
- <init>():V
- s:scheduleReindexingInDumbMode(com.intellij.openapi.project.Project):V
f:com.intellij.util.indexing.FileBasedIndexTumbler
- sf:Companion:com.intellij.util.indexing.FileBasedIndexTumbler$Companion
- <init>(java.lang.String):V
- f:turnOff():V
- f:turnOn():V
- f:turnOn(java.lang.Runnable):V
- bs:turnOn$default(com.intellij.util.indexing.FileBasedIndexTumbler,java.lang.Runnable,I,java.lang.Object):V
f:com.intellij.util.indexing.FileBasedIndexTumbler$Companion
f:com.intellij.util.indexing.FileBasedIndexVersionInfo
- <init>(java.lang.String,Z):V
- f:component1():java.lang.String
- f:component2():Z
- f:copy(java.lang.String,Z):com.intellij.util.indexing.FileBasedIndexVersionInfo
- bs:copy$default(com.intellij.util.indexing.FileBasedIndexVersionInfo,java.lang.String,Z,I,java.lang.Object):com.intellij.util.indexing.FileBasedIndexVersionInfo
- equals(java.lang.Object):Z
- f:getNeedsForwardIndex():Z
- f:getVersion():java.lang.String
- hashCode():I
f:com.intellij.util.indexing.FindSymbolParameters
- <init>(java.lang.String,java.lang.String,com.intellij.psi.search.GlobalSearchScope):V
- <init>(java.lang.String,java.lang.String,com.intellij.psi.search.GlobalSearchScope,com.intellij.util.indexing.IdFilter):V
- getCompletePattern():java.lang.String
- getIdFilter():com.intellij.util.indexing.IdFilter
- getLocalPatternName():java.lang.String
- getProject():com.intellij.openapi.project.Project
- getSearchScope():com.intellij.psi.search.GlobalSearchScope
- isSearchInLibraries():Z
- s:searchScopeFor(com.intellij.openapi.project.Project,Z):com.intellij.psi.search.GlobalSearchScope
- s:simple(com.intellij.openapi.project.Project,Z):com.intellij.util.indexing.FindSymbolParameters
- withCompletePattern(java.lang.String):com.intellij.util.indexing.FindSymbolParameters
- withLocalPattern(java.lang.String):com.intellij.util.indexing.FindSymbolParameters
- withScope(com.intellij.psi.search.GlobalSearchScope):com.intellij.util.indexing.FindSymbolParameters
- s:wrap(java.lang.String,com.intellij.openapi.project.Project,Z):com.intellij.util.indexing.FindSymbolParameters
- s:wrap(java.lang.String,com.intellij.psi.search.GlobalSearchScope):com.intellij.util.indexing.FindSymbolParameters
c:com.intellij.util.indexing.IndexInfrastructureVersionBase
- pf:myBaseIndexes:java.util.SortedMap
- pf:myCompositeBinaryStubFileBuilderVersions:java.util.SortedMap
- pf:myFileBasedIndexVersions:java.util.SortedMap
- pf:myStubFileElementTypeVersions:java.util.SortedMap
- pf:myStubIndexVersions:java.util.SortedMap
- <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map):V
- equals(java.lang.Object):Z
- s:fileBasedIndexVersions(java.util.List,com.intellij.util.Function):java.util.Map
- s:getAllCompositeBinaryFileStubBuilderVersions():java.util.Map
- s:getAllStubFileElementTypes():java.util.List
- s:getBinaryFileStubBuilderVersion(com.intellij.psi.stubs.BinaryFileStubBuilder$CompositeBinaryFileStubBuilder):java.lang.String
- s:getStubFileElementBaseVersion(com.intellij.psi.tree.IStubFileElementType):I
- s:getStubFileElementTypeKey(com.intellij.psi.tree.IStubFileElementType):java.lang.String
- hashCode():I
- s:stubFileElementTypeVersions():java.util.Map
- s:stubIndexVersions(java.util.List):java.util.Map
f:com.intellij.util.indexing.RegisteredIndexes
- getRequiredIndexesForFileType(com.intellij.openapi.fileTypes.FileType):kotlin.Pair
- isContentDependentIndex(com.intellij.util.indexing.ID):Z
- isInitialized():Z
f:com.intellij.util.indexing.UnindexedFilesUpdater
- s:getAvailablePhysicalCoresNumber():I
- s:getMaxNumberOfIndexingThreads():I
- s:getNumberOfIndexingThreads():I
- s:getNumberOfScanningThreads():I
- s:isScanningInProgress(com.intellij.openapi.project.Project):Z
com.intellij.util.indexing.UnindexedFilesUpdaterListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:updateFinished(com.intellij.openapi.project.Project):V
- a:updateStarted(com.intellij.openapi.project.Project):V
f:com.intellij.util.indexing.diagnostic.dump.paths.IndexedFilePath
- <init>(I,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath,java.util.Map,java.lang.String,java.lang.String):V
- f:component1():I
- f:component2():java.lang.String
- f:component3():java.lang.String
- f:component4():java.lang.Long
- f:component5():java.lang.String
- f:component6():com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- f:component7():java.util.Map
- f:component8():java.lang.String
- f:component9():java.lang.String
- f:copy(I,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath,java.util.Map,java.lang.String,java.lang.String):com.intellij.util.indexing.diagnostic.dump.paths.IndexedFilePath
- bs:copy$default(com.intellij.util.indexing.diagnostic.dump.paths.IndexedFilePath,I,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath,java.util.Map,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.util.indexing.diagnostic.dump.paths.IndexedFilePath
- equals(java.lang.Object):Z
- f:getContentHash():java.lang.String
- f:getFilePropertyPusherValues():java.util.Map
- f:getFileSize():java.lang.Long
- f:getFileType():java.lang.String
- f:getIndexedFileHash():java.lang.String
- f:getOriginalFileSystemId():I
- f:getOriginalFileUrl():java.lang.String
- f:getPortableFilePath():com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- f:getSubstitutedFileType():java.lang.String
- hashCode():I
f:com.intellij.util.indexing.diagnostic.dump.paths.IndexedFilePaths
- sf:INSTANCE:com.intellij.util.indexing.diagnostic.dump.paths.IndexedFilePaths
- f:createIndexedFilePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.util.indexing.diagnostic.dump.paths.IndexedFilePath
a:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- a:getPresentablePath():java.lang.String
f:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$AbsolutePath
- com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$AbsolutePath
- bs:copy$default(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$AbsolutePath,java.lang.String,I,java.lang.Object):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$AbsolutePath
- equals(java.lang.Object):Z
- f:getAbsoluteUrl():java.lang.String
- getPresentablePath():java.lang.String
- hashCode():I
f:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$ArchiveRoot
- com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- <init>(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath):V
- f:component1():com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- f:copy(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$ArchiveRoot
- bs:copy$default(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$ArchiveRoot,com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath,I,java.lang.Object):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$ArchiveRoot
- equals(java.lang.Object):Z
- f:getArchiveLocalPath():com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- getPresentablePath():java.lang.String
- hashCode():I
f:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$IdeRoot
- com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$IdeRoot
- bs:copy$default(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$IdeRoot,java.lang.String,I,java.lang.Object):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$IdeRoot
- equals(java.lang.Object):Z
- f:getIdeDirectoryType():java.lang.String
- getPresentablePath():java.lang.String
- hashCode():I
f:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$JdkRoot
- com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- <init>(java.lang.String,I,Z):V
- f:component1():java.lang.String
- f:component2():I
- f:component3():Z
- f:copy(java.lang.String,I,Z):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$JdkRoot
- bs:copy$default(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$JdkRoot,java.lang.String,I,Z,I,java.lang.Object):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$JdkRoot
- equals(java.lang.Object):Z
- f:getInClassFiles():Z
- f:getJdkName():java.lang.String
- f:getJdkRootIndex():I
- getPresentablePath():java.lang.String
- hashCode():I
f:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot
- com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- <init>(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType,java.lang.String,java.lang.String,I,Z):V
- f:component1():com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType
- f:component2():java.lang.String
- f:component3():java.lang.String
- f:component4():I
- f:component5():Z
- f:copy(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType,java.lang.String,java.lang.String,I,Z):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot
- bs:copy$default(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot,com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType,java.lang.String,java.lang.String,I,Z,I,java.lang.Object):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot
- equals(java.lang.Object):Z
- f:getInClassFiles():Z
- f:getLibraryName():java.lang.String
- f:getLibraryRootIndex():I
- f:getLibraryType():com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType
- f:getModuleName():java.lang.String
- getPresentablePath():java.lang.String
- hashCode():I
e:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType
- java.lang.Enum
- sf:APPLICATION:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType
- sf:MODULE:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType
- sf:PROJECT:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType
- s:values():com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$LibraryRoot$LibraryType[]
f:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$ProjectRoot
- com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- sf:INSTANCE:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$ProjectRoot
- equals(java.lang.Object):Z
- getPresentablePath():java.lang.String
- hashCode():I
f:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$RelativePath
- com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- <init>(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath,java.lang.String):V
- f:component1():com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- f:component2():java.lang.String
- f:copy(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath,java.lang.String):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$RelativePath
- bs:copy$default(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$RelativePath,com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath,java.lang.String,I,java.lang.Object):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath$RelativePath
- equals(java.lang.Object):Z
- getPresentablePath():java.lang.String
- f:getRelativePath():java.lang.String
- f:getRoot():com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- hashCode():I
f:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePaths
- sf:INSTANCE:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePaths
- f:findFileByPath(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath,com.intellij.openapi.project.Project):com.intellij.openapi.vfs.VirtualFile
- f:getPortableFilePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath
- f:isSupportedFileSystem(com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePathsKt
- sf:hasPresentablePathMatching(com.intellij.util.indexing.diagnostic.dump.paths.PortableFilePath,java.lang.String):Z
com.intellij.util.text.MatcherHolder
- s:associateMatcher(javax.swing.JComponent,com.intellij.util.text.Matcher):V
- s:getAssociatedMatcher(javax.swing.JComponent):com.intellij.util.text.Matcher
f:com.intellij.util.textCompletion.TextCompletionCharFilter
- com.intellij.codeInsight.lookup.CharFilter
- <init>():V
- acceptChar(C,I,com.intellij.codeInsight.lookup.Lookup):com.intellij.codeInsight.lookup.CharFilter$Result
c:com.intellij.util.textCompletion.TextCompletionContributor
- com.intellij.codeInsight.completion.CompletionContributor
- com.intellij.openapi.project.DumbAware
- <init>():V
- fillCompletionVariants(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionResultSet):V
- invokeAutoPopup(com.intellij.psi.PsiElement,C):Z
a:com.intellij.util.textCompletion.TextCompletionProviderBase
- com.intellij.util.textCompletion.TextCompletionProvider
- pf:myDescriptor:com.intellij.util.textCompletion.TextCompletionValueDescriptor
- <init>(com.intellij.util.textCompletion.TextCompletionValueDescriptor,java.util.List,Z):V
- acceptChar(C):com.intellij.codeInsight.lookup.CharFilter$Result
- applyPrefixMatcher(com.intellij.codeInsight.completion.CompletionResultSet,java.lang.String):com.intellij.codeInsight.completion.CompletionResultSet
- fillCompletionVariants(com.intellij.codeInsight.completion.CompletionParameters,java.lang.String,com.intellij.codeInsight.completion.CompletionResultSet):V
- getAdvertisement():java.lang.String
- getPrefix(java.lang.String,I):java.lang.String
- ps:getPrefix(java.lang.String,I,java.util.Collection):java.lang.String
- pa:getValues(com.intellij.codeInsight.completion.CompletionParameters,java.lang.String,com.intellij.codeInsight.completion.CompletionResultSet):java.util.Collection
- p:installInsertHandler(com.intellij.codeInsight.lookup.LookupElementBuilder):com.intellij.codeInsight.lookup.LookupElement
f:com.intellij.util.textCompletion.TextCompletionProviderBase$CompletionCharInsertHandler
- com.intellij.codeInsight.completion.InsertHandler
- <init>(com.intellij.util.textCompletion.TextCompletionProviderBase):V
- handleInsert(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement):V
c:com.intellij.util.textCompletion.ValuesCompletionProvider
- com.intellij.util.textCompletion.TextCompletionProviderBase
- pf:myValues:java.util.Collection
- <init>(com.intellij.util.textCompletion.TextCompletionValueDescriptor,java.util.Collection):V
- <init>(com.intellij.util.textCompletion.TextCompletionValueDescriptor,java.util.List,java.util.Collection,Z):V
- p:getValues(com.intellij.codeInsight.completion.CompletionParameters,java.lang.String,com.intellij.codeInsight.completion.CompletionResultSet):java.util.Collection
c:com.intellij.util.textCompletion.ValuesCompletionProvider$ValuesCompletionProviderDumbAware
- com.intellij.util.textCompletion.ValuesCompletionProvider
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.util.textCompletion.TextCompletionValueDescriptor,java.util.Collection):V
- <init>(com.intellij.util.textCompletion.TextCompletionValueDescriptor,java.util.List,java.util.Collection,Z):V
c:com.intellij.util.ui.Advertiser
- <init>():V
- p:adFont():java.awt.Font
- addAdvertisement(java.lang.String,javax.swing.Icon):V
- clearAdvertisements():V
- getAdComponent():javax.swing.JComponent
- getAdvertisements():java.util.List
- setBackground(java.awt.Color):V
- setBorder(javax.swing.border.Border):V
- setForeground(java.awt.Color):V
- showRandomText():V
f:com.intellij.util.ui.UpDownHandler
- s:register(javax.swing.JComponent,javax.swing.JComponent):V
- s:register(javax.swing.JComponent,javax.swing.JComponent,Z):V
c:com.intellij.util.ui.tree.AbstractFileTreeTable
- com.intellij.ui.treeStructure.treetable.TreeTable
- <init>(com.intellij.openapi.project.Project,java.lang.Class,java.lang.String,com.intellij.openapi.vfs.VirtualFileFilter,Z):V
- <init>(com.intellij.openapi.project.Project,java.lang.Class,java.lang.String,com.intellij.openapi.vfs.VirtualFileFilter,Z,Z):V
- createTableRenderer(com.intellij.ui.treeStructure.treetable.TreeTableModel):com.intellij.ui.treeStructure.treetable.TreeTableCellRenderer
- getProject():com.intellij.openapi.project.Project
- getValueColumn():javax.swing.table.TableColumn
- getValues():java.util.Map
- p:isValueEditableForFile(com.intellij.openapi.vfs.VirtualFile):Z
- s:press(java.awt.Container):V
- reset(java.util.Map):V
- select(com.intellij.openapi.vfs.VirtualFile):V
a:com.intellij.util.ui.tree.AbstractFileTreeTable$ConvenientNode
- javax.swing.tree.DefaultMutableTreeNode
- pa:appendChildrenTo(java.util.Collection):V
- children():java.util.Enumeration
- clearCachedChildren():V
- getChildAt(I):javax.swing.tree.TreeNode
- getChildCount():I
- getObject():java.lang.Object
f:com.intellij.util.ui.tree.AbstractFileTreeTable$FileNode
- com.intellij.util.ui.tree.AbstractFileTreeTable$ConvenientNode
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFileFilter):V
f:com.intellij.util.ui.tree.AbstractFileTreeTable$ProjectRootNode
- com.intellij.util.ui.tree.AbstractFileTreeTable$ConvenientNode
a:com.intellij.util.ui.tree.PerFileConfigurableBase
- com.intellij.openapi.options.Configurable$NoScroll
- com.intellij.openapi.options.SearchableConfigurable
- psf:ADD_PROJECT_MAPPING:com.intellij.openapi.util.Key
- psf:DESCRIPTION:com.intellij.openapi.util.Key
- psf:EMPTY_TEXT:com.intellij.openapi.util.Key
- psf:MAPPING_TITLE:com.intellij.openapi.util.Key
- psf:NULL_TEXT:com.intellij.openapi.util.Key
- psf:ONLY_DIRECTORIES:com.intellij.openapi.util.Key
- psf:OVERRIDE_QUESTION:com.intellij.openapi.util.Key
- psf:OVERRIDE_TITLE:com.intellij.openapi.util.Key
- psf:SORT_VALUES:com.intellij.openapi.util.Key
- psf:TARGET_TITLE:com.intellij.openapi.util.Key
- pf:myMappings:com.intellij.lang.PerFileMappingsEx
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project,com.intellij.lang.PerFileMappingsEx):V
- p:adjustChosenValue(java.lang.Object,java.lang.Object):java.lang.Object
- apply():V
- p:canEditTarget(java.lang.Object,java.lang.Object):Z
- p:canRemoveTarget(java.lang.Object):Z
- p:createActionListGroup(java.lang.Object,com.intellij.util.Consumer):com.intellij.openapi.actionSystem.ActionGroup
- p:createActionPanel(com.intellij.openapi.actionSystem.AnAction):javax.swing.JPanel
- p:createActionPanel(java.lang.Object,com.intellij.util.ui.tree.PerFileConfigurableBase$Value):javax.swing.JPanel
- createComponent():javax.swing.JComponent
- pf:createValueAction(java.lang.Object,com.intellij.util.ui.tree.PerFileConfigurableBase$Value):com.intellij.openapi.actionSystem.AnAction
- pf:createValueEditorActionListPopup(java.lang.Object,java.lang.Runnable,com.intellij.openapi.actionSystem.DataContext,com.intellij.util.Consumer):com.intellij.openapi.ui.popup.JBPopup
- p:createValueEditorPopup(java.lang.Object,java.lang.Object,java.lang.Runnable,com.intellij.openapi.actionSystem.DataContext,com.intellij.util.Consumer,java.lang.Runnable):com.intellij.openapi.ui.popup.JBPopup
- p:findRow(com.intellij.openapi.vfs.VirtualFile,Z,Z):I[]
- p:getActionListIcon(java.lang.Object,java.lang.Object):javax.swing.Icon
- p:getClearValueText(java.lang.Object):java.lang.String
- p:getDefaultMappings():java.util.List
- p:getDefaultNewMapping(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- getId():java.lang.String
- getNewMapping(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- p:getNewMappings():java.util.Map
- p:getNullValueText(java.lang.Object):java.lang.String
- pa:getParameter(com.intellij.openapi.util.Key):java.lang.Object
- p:getToolTipFor(java.lang.Object):java.lang.String
- p:getValueVariants(java.lang.Object):java.util.Collection
- p:isGlobalMapping(com.intellij.util.ui.tree.PerFileConfigurableBase$Mapping):Z
- isModified():Z
- p:isProjectMapping(com.intellij.util.ui.tree.PerFileConfigurableBase$Mapping):Z
- p:renderDefaultValue(java.lang.Object,com.intellij.ui.ColoredTextContainer):V
- p:renderTarget(java.lang.Object,com.intellij.ui.ColoredTextContainer):V
- pa:renderValue(java.lang.Object,java.lang.Object,com.intellij.ui.ColoredTextContainer):V
- reset():V
- selectFile(com.intellij.openapi.vfs.VirtualFile):V
- selectFile(com.intellij.openapi.vfs.VirtualFile,Z):V
- p:selectRows(I[],Z):V
f:com.intellij.util.ui.tree.PerFileConfigurableBase$Mapping
- java.lang.Record
- <init>(java.lang.String,java.util.function.Supplier,com.intellij.util.Consumer):V
- f:equals(java.lang.Object):Z
- getter():java.util.function.Supplier
- f:hashCode():I
- name():java.lang.String
- setter():com.intellij.util.Consumer
f:com.intellij.util.ui.tree.PerFileConfigurableBase$PerFileConfigurableComboBoxAction
- com.intellij.openapi.actionSystem.ex.ComboBoxAction
- <init>(com.intellij.util.ui.tree.PerFileConfigurableBase,com.intellij.util.ui.tree.PerFileConfigurableBase$Value,java.lang.Object,java.lang.String):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
p:com.intellij.util.ui.tree.PerFileConfigurableBase$Value
- com.intellij.openapi.util.Setter
- java.util.function.Supplier
- a:commit():V
c:com.intellij.webcore.packaging.InstalledPackagesPanel
- javax.swing.JPanel
- p:myInstallEnabled:Z
- pf:myNotificationArea:com.intellij.webcore.packaging.PackagesNotificationPanel
- p:myPackageManagementService:com.intellij.webcore.packaging.PackageManagementService
- pf:myPackagesTable:com.intellij.ui.table.JBTable
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project,com.intellij.webcore.packaging.PackagesNotificationPanel):V
- p:canInstallPackage(com.intellij.webcore.packaging.InstalledPackage):Z
- p:canUninstallPackage(com.intellij.webcore.packaging.InstalledPackage):Z
- p:canUpgradePackage(com.intellij.webcore.packaging.InstalledPackage):Z
- p:createManagePackagesDialog():com.intellij.webcore.packaging.ManagePackagesDialog
- p:createNotificationPanel():com.intellij.webcore.packaging.PackagesNotificationPanel
- doUpdatePackages(com.intellij.webcore.packaging.PackageManagementService):V
- p:getExtraActions():com.intellij.openapi.actionSystem.AnAction[]
- p:getPackagesToPostpone():java.util.Set
- p:installEnabled():Z
- updatePackages(com.intellij.webcore.packaging.PackageManagementService):V
- p:updateUninstallUpgrade():V
c:com.intellij.webcore.packaging.ManagePackagesDialog
- com.intellij.openapi.ui.DialogWrapper
- sf:Companion:com.intellij.webcore.packaging.ManagePackagesDialog$Companion
- <init>(com.intellij.openapi.project.Project,com.intellij.webcore.packaging.PackageManagementService,com.intellij.webcore.packaging.PackageManagementService$Listener):V
- <init>(com.intellij.openapi.project.Project,com.intellij.webcore.packaging.PackageManagementService,com.intellij.webcore.packaging.PackageManagementService$Listener,com.intellij.webcore.packaging.PackagesNotificationPanel):V
- b:<init>(com.intellij.openapi.project.Project,com.intellij.webcore.packaging.PackageManagementService,com.intellij.webcore.packaging.PackageManagementService$Listener,com.intellij.webcore.packaging.PackagesNotificationPanel,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JPanel
- p:getDimensionServiceKey():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- f:initModel():V
- f:selectPackage(com.intellij.webcore.packaging.InstalledPackage):V
- pf:setDownloadStatus(Z):V
- f:setOptionsText(java.lang.String):V
f:com.intellij.webcore.packaging.ManagePackagesDialog$Companion
f:com.intellij.webcore.packaging.ManagePackagesDialog$MyTableRenderer
- javax.swing.ListCellRenderer
- <init>(com.intellij.webcore.packaging.ManagePackagesDialog):V
- getListCellRendererComponent(javax.swing.JList,com.intellij.webcore.packaging.RepoPackage,I,Z,Z):java.awt.Component
a:com.intellij.webcore.packaging.PackageManagementServiceEx
- com.intellij.webcore.packaging.PackageManagementService
- <init>():V
- a:fetchLatestVersion(com.intellij.webcore.packaging.InstalledPackage,com.intellij.util.CatchingConsumer):V
- installPackage(com.intellij.webcore.packaging.RepoPackage,java.lang.String,java.lang.String,com.intellij.webcore.packaging.PackageManagementService$Listener,java.io.File):V
- shouldFetchLatestVersionsForOnlyInstalledPackages():Z
- a:updatePackage(com.intellij.webcore.packaging.InstalledPackage,java.lang.String,com.intellij.webcore.packaging.PackageManagementService$Listener):V
c:com.intellij.webcore.packaging.PackagesNotificationPanel
- <init>():V
- <init>(java.util.function.BiConsumer):V
- addLinkHandler(java.lang.String,java.lang.Runnable):V
- getComponent():javax.swing.JComponent
- hasLinkHandler(java.lang.String):Z
- hide():V
- removeAllLinkHandlers():V
- removeLinkHandler(java.lang.String):V
- s:showError(java.lang.String,com.intellij.webcore.packaging.PackageManagementService$ErrorDescription):V
- showError(java.lang.String,java.lang.String,com.intellij.webcore.packaging.PackageManagementService$ErrorDescription):V
- showResult(java.lang.String,com.intellij.webcore.packaging.PackageManagementService$ErrorDescription):V
- showSuccess(java.lang.String):V
- showWarning(java.lang.String):V
f:com.intellij.webcore.packaging.PackagingErrorDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(java.lang.String,com.intellij.webcore.packaging.PackageManagementService$ErrorDescription):V
f:com.intellij.workspaceModel.ide.impl.legacyBridge.project.ProjectRootManagerBridge
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.PersistentStateComponent
- com.intellij.openapi.roots.ex.ProjectRootManagerEx
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
f:com.intellij.workspaceModel.ide.impl.legacyBridge.project.ProjectRootManagerBridge$ModuleDependencyListenerImpl
- java.util.EventListener
- <init>(com.intellij.workspaceModel.ide.impl.legacyBridge.project.ProjectRootManagerBridge):V
- referencedLibraryAdded(com.intellij.openapi.roots.libraries.Library):V
- referencedLibraryChanged(com.intellij.openapi.roots.libraries.Library):V
- referencedLibraryRemoved(com.intellij.openapi.roots.libraries.Library):V
- referencedSdkAdded(com.intellij.openapi.projectRoots.Sdk):V
- referencedSdkChanged(com.intellij.openapi.projectRoots.Sdk):V
- referencedSdkRemoved(com.intellij.openapi.projectRoots.Sdk):V
