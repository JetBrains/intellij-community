a:com.intellij.dvcs.cherrypick.VcsCherryPicker
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:canHandleForRoots(java.util.Collection):Z
- a:cherryPick(java.util.List):Z
- a:getActionTitle():java.lang.String
- a:getSupportedVcs():com.intellij.openapi.vcs.VcsKey
com.intellij.dvcs.hosting.RepositoryHostingService
- getRepositoryListLoader(com.intellij.openapi.project.Project):com.intellij.dvcs.hosting.RepositoryListLoader
- a:getServiceDisplayName():java.lang.String
com.intellij.dvcs.hosting.RepositoryListLoader
- enable():Z
- enable(java.awt.Component):Z
- getAvailableRepositories(com.intellij.openapi.progress.ProgressIndicator):java.util.List
- getAvailableRepositoriesFromMultipleSources(com.intellij.openapi.progress.ProgressIndicator):com.intellij.dvcs.hosting.RepositoryListLoader$Result
- a:isEnabled():Z
c:com.intellij.dvcs.hosting.RepositoryListLoader$Result
- <init>(java.util.List,java.util.List):V
- getErrors():java.util.List
- getUrls():java.util.List
c:com.intellij.dvcs.hosting.RepositoryListLoadingException
- java.lang.RuntimeException
- <init>(java.lang.String,java.lang.Throwable):V
com.intellij.dvcs.ignore.VcsIgnoredHolderUpdateListener
- java.util.EventListener
- updateFinished(java.util.Collection,Z):V
- updateStarted():V
com.intellij.dvcs.ignore.VcsRepositoryIgnoredFilesHolder
- com.intellij.openapi.Disposable
- a:addUpdateStateListener(com.intellij.dvcs.ignore.VcsIgnoredHolderUpdateListener):V
- a:containsFile(com.intellij.openapi.vcs.FilePath):Z
- a:getIgnoredFilePaths():java.util.Set
- a:isInUpdateMode():Z
- a:removeIgnoredFiles(java.util.Collection):java.util.Collection
- a:startRescan():V
- a:startRescan(java.lang.Runnable):V
com.intellij.dvcs.push.CommitLoader
- a:reloadCommits():V
a:com.intellij.dvcs.push.OutgoingCommitsProvider
- <init>():V
- a:getOutgoingCommits(com.intellij.dvcs.repo.Repository,com.intellij.dvcs.push.PushSpec,Z):com.intellij.dvcs.push.OutgoingResult
c:com.intellij.dvcs.push.OutgoingResult
- <init>(java.util.List,java.util.List):V
- getCommits():java.util.List
- getErrors():java.util.List
f:com.intellij.dvcs.push.PushSettings
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- addForcePushTarget(java.lang.String,java.lang.String):V
- containsForcePushTarget(java.lang.String,java.lang.String):Z
- getShowDetailsInPushDialog():Z
- getState():com.intellij.dvcs.push.PushSettings$State
- loadState(com.intellij.dvcs.push.PushSettings$State):V
- setShowDetailsInPushDialog(Z):V
f:com.intellij.dvcs.push.PushSettings$State
- f:FORCE_PUSH_TARGETS:java.util.List
- SHOW_DETAILS_PANEL:Z
- <init>():V
com.intellij.dvcs.push.PushSource
- a:getPresentation():java.lang.String
c:com.intellij.dvcs.push.PushSpec
- <init>(com.intellij.dvcs.push.PushSource,com.intellij.dvcs.push.PushTarget):V
- getSource():com.intellij.dvcs.push.PushSource
- getTarget():com.intellij.dvcs.push.PushTarget
a:com.intellij.dvcs.push.PushSupport
- sf:PUSH_SUPPORT_EP:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- canBePushed(com.intellij.dvcs.repo.Repository,com.intellij.dvcs.push.PushSource,com.intellij.dvcs.push.PushTarget):Z
- createOptionsPanel():com.intellij.dvcs.push.VcsPushOptionsPanel
- a:createTargetPanel(com.intellij.dvcs.repo.Repository,com.intellij.dvcs.push.PushSource,com.intellij.dvcs.push.PushTarget):com.intellij.dvcs.push.PushTargetPanel
- a:getDefaultTarget(com.intellij.dvcs.repo.Repository):com.intellij.dvcs.push.PushTarget
- getDefaultTarget(com.intellij.dvcs.repo.Repository,com.intellij.dvcs.push.PushSource):com.intellij.dvcs.push.PushTarget
- getForcePushConfigurablePath():java.lang.String
- a:getOutgoingCommitsProvider():com.intellij.dvcs.push.OutgoingCommitsProvider
- a:getPusher():com.intellij.dvcs.push.Pusher
- a:getRepositoryManager():com.intellij.dvcs.repo.RepositoryManager
- a:getSource(com.intellij.dvcs.repo.Repository):com.intellij.dvcs.push.PushSource
- a:getVcs():com.intellij.openapi.vcs.AbstractVcs
- a:isForcePushAllowed(com.intellij.dvcs.repo.Repository,com.intellij.dvcs.push.PushTarget):Z
- a:isSilentForcePushAllowed(com.intellij.dvcs.push.PushTarget):Z
- mayChangeTargetsSync():Z
- a:saveSilentForcePushTarget(com.intellij.dvcs.push.PushTarget):V
- shouldRequestIncomingChangesForNotCheckedRepositories():Z
com.intellij.dvcs.push.PushTarget
- a:getPresentation():java.lang.String
- a:hasSomethingToPush():Z
a:com.intellij.dvcs.push.PushTargetPanel
- javax.swing.JPanel
- <init>():V
- a:addTargetEditorListener(com.intellij.dvcs.push.ui.PushTargetEditorListener):V
- editingStarted():V
- a:fireOnCancel():V
- a:fireOnChange():V
- forceUpdateEditableUiModel(java.lang.String):V
- a:getValue():com.intellij.dvcs.push.PushTarget
- a:render(com.intellij.ui.ColoredTreeCellRenderer,Z,Z,java.lang.String):V
- a:setFireOnChangeAction(java.lang.Runnable):V
- showSourceWhenEditing():Z
- a:verify():com.intellij.openapi.ui.ValidationInfo
a:com.intellij.dvcs.push.Pusher
- <init>():V
- a:push(java.util.Map,com.intellij.dvcs.push.VcsPushOptionValue,Z):V
c:com.intellij.dvcs.push.VcsError
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.dvcs.push.VcsErrorHandler):V
- s:createEmptyTargetError(java.lang.String):com.intellij.dvcs.push.VcsError
- getText():java.lang.String
- handleError(com.intellij.dvcs.push.CommitLoader):V
com.intellij.dvcs.push.VcsErrorHandler
- a:handleError(com.intellij.dvcs.push.CommitLoader):V
com.intellij.dvcs.push.VcsPushOptionValue
a:com.intellij.dvcs.push.VcsPushOptionsPanel
- javax.swing.JPanel
- <init>():V
- getPosition():com.intellij.dvcs.push.VcsPushOptionsPanel$OptionsPanelPosition
- a:getValue():com.intellij.dvcs.push.VcsPushOptionValue
e:com.intellij.dvcs.push.VcsPushOptionsPanel$OptionsPanelPosition
- java.lang.Enum
- sf:DEFAULT:com.intellij.dvcs.push.VcsPushOptionsPanel$OptionsPanelPosition
- sf:SOUTH:com.intellij.dvcs.push.VcsPushOptionsPanel$OptionsPanelPosition
- s:valueOf(java.lang.String):com.intellij.dvcs.push.VcsPushOptionsPanel$OptionsPanelPosition
- s:values():com.intellij.dvcs.push.VcsPushOptionsPanel$OptionsPanelPosition[]
com.intellij.dvcs.push.ui.PushTargetEditorListener
- a:onTargetInEditModeChanged(java.lang.String):V
com.intellij.dvcs.repo.Repository
- com.intellij.openapi.Disposable
- a:getCurrentBranchName():java.lang.String
- a:getCurrentRevision():java.lang.String
- a:getPresentableUrl():java.lang.String
- a:getProject():com.intellij.openapi.project.Project
- a:getRoot():com.intellij.openapi.vfs.VirtualFile
- a:getState():com.intellij.dvcs.repo.Repository$State
- a:getVcs():com.intellij.openapi.vcs.AbstractVcs
- isDisposed():Z
- a:isFresh():Z
- a:toLogString():java.lang.String
- a:update():V
e:com.intellij.dvcs.repo.Repository$State
- java.lang.Enum
- sf:DETACHED:com.intellij.dvcs.repo.Repository$State
- sf:GRAFTING:com.intellij.dvcs.repo.Repository$State
- sf:MERGING:com.intellij.dvcs.repo.Repository$State
- sf:NORMAL:com.intellij.dvcs.repo.Repository$State
- sf:REBASING:com.intellij.dvcs.repo.Repository$State
- sf:REVERTING:com.intellij.dvcs.repo.Repository$State
- s:valueOf(java.lang.String):com.intellij.dvcs.repo.Repository$State
- s:values():com.intellij.dvcs.repo.Repository$State[]
com.intellij.dvcs.repo.RepositoryManager
- a:addExternalRepository(com.intellij.openapi.vfs.VirtualFile,com.intellij.dvcs.repo.Repository):V
- a:getRepositories():java.util.List
- a:getRepositoryForFile(com.intellij.openapi.vcs.FilePath):com.intellij.dvcs.repo.Repository
- a:getRepositoryForFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.dvcs.repo.Repository
- a:getRepositoryForFileQuick(com.intellij.openapi.vcs.FilePath):com.intellij.dvcs.repo.Repository
- a:getRepositoryForRoot(com.intellij.openapi.vfs.VirtualFile):com.intellij.dvcs.repo.Repository
- a:getRepositoryForRootQuick(com.intellij.openapi.vcs.FilePath):com.intellij.dvcs.repo.Repository
- a:getRepositoryForRootQuick(com.intellij.openapi.vfs.VirtualFile):com.intellij.dvcs.repo.Repository
- a:getVcs():com.intellij.openapi.vcs.AbstractVcs
- a:isExternal(com.intellij.dvcs.repo.Repository):Z
- a:isSyncEnabled():Z
- a:moreThanOneRoot():Z
- a:removeExternalRepository(com.intellij.openapi.vfs.VirtualFile):V
- a:updateAllRepositories():V
- a:updateRepository(com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.dvcs.ui.DvcsBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
