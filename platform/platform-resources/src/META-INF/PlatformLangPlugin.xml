<idea-plugin version="2" xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>com.intellij</id>
  <name>IDEA CORE</name>

  <module value="com.intellij.modules.platform"/>
  <module value="com.intellij.modules.lang"/>
  <module value="com.intellij.modules.vcs"/>
  <module value="com.intellij.modules.xdebugger"/>

  <xi:include href="/componentSets/PlatformLangComponents.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/idea/PlatformLangActionManager.xml" xpointer="xpointer(/component/*)"/>

  <extensionPoints>
    <xi:include href="/META-INF/PlatformExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>
    <xi:include href="/META-INF/VcsExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>
    <xi:include href="/META-INF/LangExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/PlatformExtensions.xml" xpointer="xpointer(/extensions/*)"/>
    <xi:include href="/META-INF/VcsExtensions.xml" xpointer="xpointer(/extensions/*)"/>
    <xi:include href="/META-INF/LangExtensions.xml" xpointer="xpointer(/extensions/*)"/>

    <applicationService serviceInterface="com.intellij.packageDependencies.DependenciesVisitorFactory"
                        serviceImplementation="com.intellij.packageDependencies.DependenciesVisitorFactory"/>
    <applicationService serviceInterface="com.intellij.openapi.projectRoots.ProjectJdkTable"
                        serviceImplementation="com.intellij.openapi.projectRoots.impl.ProjectJdkTableImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.TargetElementUtilBase"
                        serviceImplementation="com.intellij.codeInsight.TargetElementUtilBase"/>
    <applicationService serviceInterface="com.intellij.profile.codeInspection.InspectionProfileManager"
                        serviceImplementation="com.intellij.profile.codeInspection.InspectionProfileManager"/>
    <exportable serviceInterface="com.intellij.profile.codeInspection.InspectionProfileManager"/>
    <schemeOwner serviceInterface="com.intellij.profile.codeInspection.InspectionProfileManager"/>

    <exportable serviceInterface="com.intellij.openapi.projectRoots.ProjectJdkTable"/>

    <projectService serviceInterface="com.intellij.openapi.roots.FileIndexFacade"
                    serviceImplementation="com.intellij.openapi.roots.impl.ProjectFileIndexFacade"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.impl.DefaultVcsRootPolicy"
                    serviceImplementation="com.intellij.openapi.vcs.impl.ModuleDefaultVcsRootPolicy"/>

    <projectOpenProcessor implementation="com.intellij.platform.PlatformProjectOpenProcessor"/>

    <projectService serviceInterface="com.intellij.psi.impl.file.PsiDirectoryFactory"
                    serviceImplementation="com.intellij.psi.impl.file.PsiDirectoryFactoryImpl"/>
    <projectService serviceInterface="com.intellij.ide.todo.nodes.TodoTreeHelper"
                    serviceImplementation="com.intellij.ide.todo.nodes.TodoTreeHelper"/>
    <projectService serviceInterface="com.intellij.ide.projectView.impl.nodes.ProjectViewDirectoryHelper"
                    serviceImplementation="com.intellij.ide.projectView.impl.nodes.ProjectViewDirectoryHelper"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ui.configuration.ProjectSettingsService"
                    serviceImplementation="com.intellij.openapi.roots.ui.configuration.ProjectSettingsService"/>
    <projectService serviceInterface="com.intellij.usages.impl.rules.DirectoryGroupingRule"
                    serviceImplementation="com.intellij.usages.impl.rules.DirectoryGroupingRule"/>
    <projectService serviceInterface="com.intellij.refactoring.RefactoringFactory"
                    serviceImplementation="com.intellij.refactoring.openapi.impl.RefactoringFactoryImpl"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.impl.VcsPathPresenter"
                    serviceImplementation="com.intellij.openapi.vcs.impl.PlatformVcsPathPresenter"/>
    <applicationService serviceInterface="com.intellij.openapi.wm.impl.FrameTitleBuilder"
                        serviceImplementation="com.intellij.openapi.wm.impl.PlatformFrameTitleBuilder"/>
    <projectService serviceInterface="com.intellij.platform.ProjectBaseDirectory"
                        serviceImplementation="com.intellij.platform.ProjectBaseDirectory"/>

    <moduleRendererFactory implementation="com.intellij.ide.util.PlatformModuleRendererFactory" order="last"/>
    <projectService serviceInterface="com.intellij.lang.injection.InjectedLanguageManager"
                    serviceImplementation="com.intellij.psi.impl.source.tree.injected.InjectedLanguageManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.changes.patch.PatchBaseDirectoryDetector"
                    serviceImplementation="com.intellij.openapi.vcs.changes.patch.PsiPatchBaseDirectoryDetector"/>
    <applicationService serviceInterface="com.intellij.openapi.roots.ModifiableModelsProvider"
                        serviceImplementation="com.intellij.openapi.roots.PlatformModifiableModelsProvider"/>


    <refactoring.copyHandler implementation="com.intellij.refactoring.copy.CopyFilesOrDirectoriesHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveFilesOrDirectories.MoveFilesOrDirectoriesHandler" id="moveFileOrDir"/>
    <applicationService serviceInterface="com.intellij.codeEditor.printing.FileSeparatorProvider"
                        serviceImplementation="com.intellij.codeEditor.printing.FileSeparatorProvider"/>

    <treeStructureProvider implementation="com.intellij.platform.PlatformProjectViewStructureProvider"/>

    <getDataRule key="context.ProjectFileDirectory" implementationClass="com.intellij.platform.PlatformFileProjectDirectoryRule"/>

    <programRunner implementation="com.intellij.execution.runners.BasicProgramRunner" order="last"/>

    <projectConfigurable provider="com.intellij.profile.codeInspection.ui.ProjectInspectionToolsConfigurableProvider" order="before intentions"/>
    <projectConfigurable instance="com.intellij.ide.util.scopeChooser.ScopeChooserConfigurable"/>

    <checkoutCompletedListener implementation="com.intellij.openapi.vcs.checkout.PlatformProjectCheckoutListener" id="PlatformProjectCheckoutListener"/>

    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SameDirectoryWeigher" id="sameDirectory"
             order="after openedInEditor"/>

  </extensions>

  <xi:include href="xdebugger.xml" xpointer="xpointer(/root/*)"/>
  <xi:include href="/META-INF/ultimate.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/GraphPlugin.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
</idea-plugin>
