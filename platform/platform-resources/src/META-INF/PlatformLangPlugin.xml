<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>com.intellij</id>
  <name>IDEA CORE</name>

  <module value="com.intellij.modules.platform"/>
  <module value="com.intellij.modules.lang"/>
  <module value="com.intellij.modules.xdebugger"/>
  <module value="com.intellij.modules.externalSystem"/>

  <xi:include href="/componentSets/PlatformLangComponents.xml"/>
  <xi:include href="/idea/PlatformLangActionManager.xml"/>
  <xi:include href="/META-INF/coverage-common-plugin.xml">
    <xi:fallback/>
  </xi:include>

  <xi:include href="/META-INF/Core.xml"/>
  <xi:include href="/META-INF/CoreImpl.xml"/>
  <xi:include href="/META-INF/Analysis.xml"/>
  <xi:include href="/META-INF/AnalysisImpl.xml"/>
  <xi:include href="/META-INF/ProjectModel.xml"/>
  <xi:include href="/META-INF/ProjectModelImpl.xml"/>
  <xi:include href="/META-INF/Indexing.xml"/>
  <xi:include href="/META-INF/Editor.xml"/>
  <xi:include href="/META-INF/EditorEx.xml"/>
  <xi:include href="/META-INF/Inspect.xml"/>

  <xi:include href="/META-INF/PlatformExtensionPoints.xml"/>
  <xi:include href="/META-INF/LangExtensionPoints.xml"/>
  <xi:include href="/META-INF/ExternalSystemExtensionPoints.xml"/>

  <xi:include href="/META-INF/PlatformExtensions.xml"/>
  <xi:include href="/META-INF/LangExtensions.xml"/>

  <xi:include href="/META-INF/ExternalSystemExtensions.xml"/>
  <xi:include href="/META-INF/WorkspaceModelExtensions.xml"/>

  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceInterface="com.intellij.ide.RecentProjectsManager"
                        serviceImplementation="com.intellij.ide.AttachedModuleAwareRecentProjectsManager" preload="notHeadless"/>

    <applicationService serviceImplementation="com.intellij.ide.RecentProjectListActionProvider"/>

    <applicationService serviceInterface="com.intellij.openapi.projectRoots.ProjectJdkTable"
                        serviceImplementation="com.intellij.openapi.projectRoots.impl.ProjectJdkTableImpl"/>

    <postStartupActivity implementation="com.intellij.openapi.projectRoots.impl.UnknownSdkStartupChecker"/>
    <commandLineInspectionProjectConfigurator implementation="com.intellij.openapi.projectRoots.impl.SdkConfigurator"/>
    <registryKey key="unknown.sdk" defaultValue="true" description="Check for unknown SDKs and provide automatic fixes or smart suggestions"/>
    <registryKey key="unknown.sdk.show.editor.actions" defaultValue="true" description="Show editor suggestions to fix missing SKDs"/>

    <projectService serviceImplementation="com.intellij.openapi.projectRoots.impl.UnknownSdkEditorNotification"/>
    <projectService serviceImplementation="com.intellij.openapi.projectRoots.impl.UnknownSdkBalloonNotification"/>
    <projectService serviceImplementation="com.intellij.openapi.projectRoots.impl.UnknownSdkTracker"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.TargetElementUtil"/>
    <applicationService serviceInterface="com.intellij.profile.codeInspection.InspectionProfileManager"
                        serviceImplementation="com.intellij.codeInspection.ex.ApplicationInspectionProfileManager"/>

    <exportable serviceInterface="com.intellij.openapi.projectRoots.ProjectJdkTable"/>

    <projectOpenProcessor implementation="com.intellij.platform.PlatformProjectOpenProcessor" order="last"/>

    <projectService serviceImplementation="com.intellij.ide.todo.nodes.TodoTreeHelper"/>
    <projectService serviceImplementation="com.intellij.ide.projectView.impl.nodes.ProjectViewDirectoryHelper"/>
    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.ProjectSettingsService"/>
    <projectService serviceImplementation="com.intellij.usages.impl.rules.DirectoryGroupingRule"/>
    <projectService serviceInterface="com.intellij.refactoring.RefactoringFactory"
                    serviceImplementation="com.intellij.refactoring.openapi.impl.RefactoringFactoryImpl"/>
    <projectService serviceImplementation="com.intellij.ide.bookmarks.BookmarkManager"/>

    <moduleRendererFactory implementation="com.intellij.ide.util.PlatformModuleRendererFactory" order="last" id="platform"/>
    <projectService serviceInterface="com.intellij.lang.injection.InjectedLanguageManager"
                    serviceImplementation="com.intellij.psi.impl.source.tree.injected.InjectedLanguageManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.roots.ModifiableModelsProvider"
                        serviceImplementation="com.intellij.openapi.roots.PlatformModifiableModelsProvider"/>

    <applicationInitializedListener implementation="com.intellij.ide.LanguageBundleListener"/>

    <refactoring.copyHandler implementation="com.intellij.refactoring.copy.CopyFilesOrDirectoriesHandler" id="copyFilesOrDirectories"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveFilesOrDirectories.MoveFilesOrDirectoriesHandler" id="moveFileOrDir"/>

    <treeStructureProvider implementation="com.intellij.platform.ProjectConfigurationDirectoryConcealer"/>

    <programRunner implementation="com.intellij.execution.runners.DefaultRunProgramRunner" order="last"/>

    <projectConfigurable groupId="editor" groupWeight="160" bundle="messages.CodeInsightBundle" key="configurable.InspectionToolsConfigurable.display.name"
                         id="Errors" provider="com.intellij.profile.codeInspection.ui.ErrorsConfigurableProviderImpl" order="before preferences.intentionPowerPack"/>
    <projectConfigurable groupId="appearance" groupWeight="111" instance="com.intellij.ide.util.scopeChooser.ScopeChooserConfigurable" id="project.scopes" key="scopes.display.name" bundle="messages.IdeBundle" />

    <projectService serviceInterface="com.intellij.refactoring.suggested.SuggestedRefactoringProvider"
                    serviceImplementation="com.intellij.refactoring.suggested.SuggestedRefactoringProviderImpl"/>
    <postStartupActivity implementation="com.intellij.refactoring.suggested.SuggestedRefactoringProviderImpl$Startup"/>
    <notificationWhitelist groupIds="Code style settings migration;Find Problems;Missing SDKs;Automatic indent detection;Indexing;
    Framework Detection;Power Save Mode;Show control flow group"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.impl.PushedFilePropertiesRetriever"
                        serviceImplementation="com.intellij.openapi.roots.impl.PushedFilePropertiesRetrieverImpl"/>
  </extensions>

  <xi:include href="/META-INF/VCS.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>

  <xi:include href="xdebugger.xml"/>
  <xi:include href="/META-INF/GraphPlugin.xml">
    <xi:fallback/>
  </xi:include>

  <xi:include href="built-in-server.xml"/>
  <xi:include href="/idea/ExternalSystemActions.xml"/>
  <xi:include href="/componentSets/ExternalSystemComponents.xml"/>
</idea-plugin>
