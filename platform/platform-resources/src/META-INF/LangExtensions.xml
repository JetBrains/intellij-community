<idea-plugin>
  <extensionPoints>
    <extensionPoint qualifiedName="com.intellij.dependenciesToolWindow.tabProvider"
                    interface="com.intellij.dependencytoolwindow.DependenciesToolWindowTabProvider"
                    dynamic="true"/>
  </extensionPoints>
  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceInterface="com.intellij.openapi.project.impl.ProjectStoreFactory"
                        serviceImplementation="com.intellij.configurationStore.PlatformLangProjectStoreFactory"
                        overrides="true"/>

    <projectServiceContainerInitializedListener
      implementation="com.intellij.workspaceModel.ide.impl.legacyBridge.module.ModuleBridgeLoaderService" order="first"/>
    <projectService serviceInterface="com.intellij.openapi.module.AutomaticModuleUnloader"
                    serviceImplementation="com.intellij.openapi.module.impl.AutomaticModuleUnloaderImpl" overrides="true"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ProjectRootManager"
                    serviceImplementation="com.intellij.workspaceModel.ide.impl.legacyBridge.project.ProjectRootManagerBridge"
                    preload="await"/>

    <appStarter id="traverseUI" implementation="com.intellij.ide.ui.search.TraverseUIStarter"/>
    <appStarter id="format" implementation="com.intellij.formatting.commandLine.FormatterStarter"/>
    <appStarter id="ideScript" implementation="com.intellij.ide.script.IdeScriptStarter"/>

    <applicationService serviceInterface="com.intellij.util.Queries"
                        serviceImplementation="com.intellij.util.QueriesImpl"/>
    <applicationService serviceInterface="com.intellij.model.search.SearchService"
                        serviceImplementation="com.intellij.model.search.impl.SearchServiceImpl"/>
    <applicationService serviceInterface="com.intellij.model.psi.PsiSymbolService"
                        serviceImplementation="com.intellij.model.psi.impl.PsiSymbolServiceImpl"/>
    <applicationService serviceInterface="com.intellij.navigation.SymbolNavigationService"
                        serviceImplementation="com.intellij.codeInsight.navigation.impl.SymbolNavigationServiceImpl"/>
    <applicationService
      serviceInterface="com.intellij.codeInspection.ui.InspectionOptionPaneRenderer"
      serviceImplementation="com.intellij.codeInspection.ui.UiDslOptPaneRenderer"/>

    <psi.declarationProvider implementation="com.intellij.model.psi.impl.DefaultPsiSymbolDeclarationProvider" order="last"/>

    <searcher forClass="com.intellij.model.search.PsiSymbolReferenceSearchParameters"
              implementationClass="com.intellij.model.search.impl.DefaultReferenceSearcher"/>
    <referencesSearch implementation="com.intellij.psi.impl.search.SearcherQueryExecutor"/>
    <referencesSearch implementation="com.intellij.psi.impl.search.CachesBasedRefSearcher"/>
    <referencesSearch implementation="com.intellij.psi.impl.search.NonPhysicalReferenceSearcher"/>

    <searcher forClass="com.intellij.model.search.PsiSymbolDeclarationSearchParameters"
              implementationClass="com.intellij.model.psi.impl.PsiElementDeclarationSearcher"/>

    <applicationService serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.SdkDownloadTracker"/>
    <applicationService serviceImplementation="com.intellij.openapi.roots.ui.configuration.SdkDetector"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.configuration.SdkPopupFactory"
                        serviceImplementation="com.intellij.openapi.roots.ui.configuration.PlatformSdkPopupFactory"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.configuration.SdkLookup"
                        serviceImplementation="com.intellij.openapi.roots.ui.configuration.SdkLookupImpl"/>
    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.SdkLookupProviders"/>

    <registryKey key="sdk.detector.enabled" defaultValue="true" description="Toggles SDK detection features"/>

    <!-- FileBasedIndex / SerializationManager is quite important and in any case will be used, better to preload it -->
    <applicationService serviceInterface="com.intellij.util.indexing.FileBasedIndex"
                        serviceImplementation="com.intellij.util.indexing.FileBasedIndexImpl" preload="notLightEdit"/>
    <vfs.asyncListener implementation="com.intellij.util.indexing.events.ChangedFilesCollector"/>
    <applicationInitializedListener implementation="com.intellij.util.indexing.FileBasedIndexLoader"/>
    <applicationService serviceImplementation="com.intellij.util.indexing.diagnostic.IndexDiagnosticDumper" preload="notLightEdit"/>
    <applicationService serviceImplementation="com.intellij.util.indexing.roots.ModuleIndexableFilesPolicy"/>

    <!-- required for any persistence state component (pathMacroSubstitutor.expandPaths), so, preload -->
    <applicationService serviceInterface="com.intellij.openapi.application.PathMacros"
                        serviceImplementation="com.intellij.ide.macro.IdePathMacros" preload="true"/>

    <applicationService serviceInterface="com.intellij.psi.stubs.StubIndex"
                        serviceImplementation="com.intellij.psi.stubs.StubIndexImpl" preload="notLightEdit"/>

    <applicationService serviceInterface="com.intellij.psi.stubs.StubUpdatableIndexFactory"
                        serviceImplementation="com.intellij.psi.stubs.StubUpdatableIndexFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.completion.CompletionService"
                        serviceImplementation="com.intellij.codeInsight.completion.impl.CompletionServiceImpl"
                        overrides="true"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.completion.impl.CompletionServiceImpl$ClientCompletionService"
                        client="all" />

    <applicationService serviceInterface="com.intellij.codeInspection.actions.CleanupInspectionUtil"
                        serviceImplementation="com.intellij.codeInspection.actions.CleanupInspectionUtilImpl"/>

    <applicationService serviceInterface="com.intellij.lang.cacheBuilder.CacheBuilderRegistry"
                        serviceImplementation="com.intellij.lang.cacheBuilder.CacheBuilderRegistryImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.intention.IntentionManager"
                        serviceImplementation="com.intellij.codeInsight.intention.impl.config.IntentionManagerImpl"/>
    <actionConfigurationCustomizer implementation="com.intellij.codeInsight.intention.impl.IntentionShortcutManager$InitListener"/>
    <applicationService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.CodeStyleFacadeImpl"/>
    <applicationService serviceInterface="com.intellij.psi.codeStyle.CodeStyleSettingsService"
                        serviceImplementation="com.intellij.psi.codeStyle.CodeStyleSettingsServiceImpl"/>
    <applicationService serviceInterface="com.intellij.formatting.FormattingProgressCallbackFactory"
                        serviceImplementation="com.intellij.formatting.FormattingProgressTaskFactory"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.ex.util.EditorFacade"
                        serviceImplementation="com.intellij.formatting.EditorFacadeImpl"/>

    <applicationService serviceInterface="com.intellij.concurrency.JobLauncher"
                        serviceImplementation="com.intellij.concurrency.JobLauncherImpl"/>

    <requiredForSmartModeStartupActivity implementation="com.intellij.util.indexing.ProjectFileBasedIndexStartupActivity" order="first"
                                         id="projectIndexStartup"/>
    <initProjectActivity id="dumbServiceStartup" implementation="com.intellij.openapi.project.DumbServiceStartupActivity" order="last"/>
    <initProjectActivity id="vfsStartup" implementation="com.intellij.psi.impl.file.impl.PsiVFSListener$MyStartUpActivity" order="first"/>

    <applicationService serviceInterface="com.intellij.util.indexing.EntityIndexingService"
                        serviceImplementation="com.intellij.util.indexing.EntityIndexingServiceImpl"/>
    <projectService serviceImplementation="com.intellij.util.indexing.dependenciesCache.DependenciesIndexedStatusService"/>
    <!--suppress PluginXmlCapitalization -->
    <registryKey defaultValue="true" key="use.dependencies.cache.service" restartRequired="true"
                 description="Rescan delta of AdditionalLibraryProvider, IndexableSetContributor, DirectoryIndexExcludePolicy values instead of full project."/>
    <registryKey defaultValue="true" key="scanning.in.smart.mode" restartRequired="false"
                 description="Scan project in smart mode under regular progress indicator."/>
    <registryKey defaultValue="20" key="scanning.dumb.mode.threshold" restartRequired="true"
                 description="Dumb mode during scanning will be triggered as soon as IDE discovers this count of unindexed files."/>
    <registryKey defaultValue="false" key="scanning.should.pause.dumb.queue" restartRequired="true"
                 description="Pause dumb queue (including indexing) while scanning is in progress."/>
    <registryKey defaultValue="true" key="vfs.refresh.should.pause.dumb.queue" restartRequired="true"
                 description="Pause dumb queue (including indexing) while bulk VFS update is in progress."/>
    <registryKey defaultValue="true" key="retrieve.pushed.properties.from.vfs" restartRequired="true"
                 description="Retrieve previously pushed properties from VFS (via PersistentKey) if the value is urgently needed before pushers complete their work."/>
    <registryKey defaultValue="true" key="cache.nulls.for.pushed.properties" restartRequired="true"
                 description="Cache null values for pushed properties to avoid reading nulls from disk every time."/>
    <projectService serviceInterface="com.intellij.util.indexing.IndexableFilesIndex"
                    serviceImplementation="com.intellij.util.indexing.roots.IndexableFilesIndexImpl"/>
    <registryKey defaultValue="false" key="indexing.use.indexable.files.index" restartRequired="true"
                 description="Create separate index to determine fileset to index; needs `indexing.enable.entity.provider.based.indexing` and `platform.projectModel.workspace.model.file.index` enabled to become enabled"/>

    <applicationService serviceImplementation="com.intellij.packageDependencies.DependencyUISettings"/>

    <applicationService serviceImplementation="com.intellij.refactoring.rename.RenameHandlerRegistry"/>

    <applicationService serviceInterface="com.intellij.model.BranchService"
                        serviceImplementation="com.intellij.model.BranchServiceImpl"/>

    <applicationService serviceInterface="com.intellij.ui.ExperimentalUI"
                        serviceImplementation="com.intellij.ui.ExperimentalUIImpl"/>

    <actionConfigurationCustomizer implementation="com.intellij.tools.ToolManager$MyActionTuner"/>

    <projectService serviceInterface="com.intellij.ide.fileTemplates.FileTemplateManager"
                    serviceImplementation="com.intellij.ide.fileTemplates.impl.FileTemplateManagerImpl"/>
    <projectService serviceImplementation="com.intellij.ide.fileTemplates.impl.FileTemplateSettings"/>
    <applicationService serviceImplementation="com.intellij.ide.fileTemplates.impl.ExportableFileTemplateSettings"/>

    <applicationService serviceImplementation="com.intellij.usages.UsageViewSettings"/>
    <applicationService serviceImplementation="com.intellij.usages.ShowUsagesSettings"/>
    <applicationService serviceImplementation="com.intellij.refactoring.RefactoringSettings"/>
    <applicationService serviceInterface="com.intellij.refactoring.RefactoringActionHandlerFactory"
                        serviceImplementation="com.intellij.refactoring.openapi.impl.RefactoringActionHandlerFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.execution.filters.TextConsoleBuilderFactory"
                        serviceImplementation="com.intellij.execution.filters.TextConsoleBuilderFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.execution.filters.HyperlinkInfoFactory"
                        serviceImplementation="com.intellij.execution.filters.impl.HyperlinkInfoFactoryImpl"/>
    <consoleFilterProvider implementation="com.intellij.execution.filters.UrlFilter$UrlFilterProvider"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.documentation.DocumentationManagerUtil"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.template.impl.TemplateSettings"/>
    <applicationService serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"/>

    <applicationService serviceImplementation="com.intellij.codeEditor.printing.PrintSettings"/>
    <applicationService serviceInterface="com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettings"
                        serviceImplementation="com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettingsImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.daemon.LineMarkerSettings"
                        serviceImplementation="com.intellij.codeInsight.daemon.impl.LineMarkerSettingsImpl"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.actions.VcsFacade"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.actions.FormatChangedTextUtil"/>

    <applicationService serviceInterface="com.intellij.facet.FacetTypeRegistry"
                        serviceImplementation="com.intellij.facet.impl.FacetTypeRegistryImpl"/>

    <projectService serviceInterface="com.intellij.psi.PsiDocumentManager"
                    serviceImplementation="com.intellij.psi.impl.PsiDocumentManagerImpl" preload="await"/>

    <projectService serviceInterface="com.intellij.pom.references.PomService"
                    serviceImplementation="com.intellij.pom.references.PomServiceImpl"/>

    <projectService serviceInterface="com.intellij.psi.search.PsiTodoSearchHelper"
                    serviceImplementation="com.intellij.psi.impl.search.PsiTodoSearchHelperImpl"/>

    <projectService serviceInterface="com.intellij.codeInsight.lookup.LookupManager"
                    serviceImplementation="com.intellij.codeInsight.lookup.impl.LookupManagerImpl"/>

    <applicationService serviceInterface="com.intellij.psi.meta.MetaDataRegistrar"
                        serviceImplementation="com.intellij.psi.impl.meta.MetaRegistry"/>

    <applicationService serviceInterface="com.intellij.openapi.paths.PathReferenceManager"
                        serviceImplementation="com.intellij.openapi.paths.PathReferenceManagerImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.folding.CodeFoldingSettings"
                        serviceImplementation="com.intellij.codeInsight.folding.CodeFoldingSettingsImpl"/>
    <postStartupActivity implementation="com.intellij.codeInsight.folding.impl.FoldingHintPostStartupActivity"/>
    <projectService serviceInterface="com.intellij.codeInsight.folding.CodeFoldingManager"
                    serviceImplementation="com.intellij.codeInsight.folding.impl.CodeFoldingManagerImpl"/>

    <applicationService serviceInterface="com.intellij.psi.statistics.StatisticsManager"
                        serviceImplementation="com.intellij.psi.statistics.impl.StatisticsManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings"/>
    <search.optionContributor
      implementation="com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings$IntentionSearchableOptionContributor"/>

    <applicationService serviceInterface="com.intellij.find.FindSettings"
                        serviceImplementation="com.intellij.find.impl.LangFindSettingsImpl"/>
    <projectService serviceInterface="com.intellij.find.FindInProjectSettings"
                    serviceImplementation="com.intellij.find.impl.FindInProjectRecents"/>
    <pathMacroFilter implementation="com.intellij.find.impl.FindInProjectSettingsBase$FindInProjectPathMacroFilter"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.impl.libraries.ApplicationLibraryTable"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.ExportableApplicationLibraryTable"
                        overrides="true"/>

    <applicationService serviceInterface="com.intellij.psi.codeStyle.CodeStyleSchemes"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.PersistableCodeStyleSchemes"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibraryDetectionManager"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryDetectionManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibraryTypeService"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryTypeServiceImpl"/>

    <applicationService serviceInterface="com.intellij.ui.IconDeferrer"
                        serviceImplementation="com.intellij.ui.IconDeferrerImpl"/>

    <applicationService serviceImplementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.FileInfoManager"/>
    <applicationService serviceInterface="com.intellij.psi.search.PredefinedSearchScopeProvider"
                        serviceImplementation="com.intellij.psi.search.PredefinedSearchScopeProviderImpl"/>

    <applicationService serviceInterface="com.intellij.model.psi.PsiSymbolReferenceService"
                        serviceImplementation="com.intellij.model.psi.impl.PsiSymbolReferenceServiceImpl"/>

    <applicationService serviceInterface="com.intellij.patterns.compiler.PatternCompilerFactory"
                        serviceImplementation="com.intellij.patterns.compiler.PatternCompilerFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.psi.stubs.StubTreeLoader"
                        serviceImplementation="com.intellij.psi.stubs.StubTreeLoaderImpl"/>

    <applicationService serviceInterface="com.intellij.navigation.NavigationService"
                        serviceImplementation="com.intellij.navigation.impl.NavigationServiceImpl"/>
    <applicationService serviceInterface="com.intellij.ide.util.PsiNavigationSupport"
                        serviceImplementation="com.intellij.ide.util.PsiNavigationSupportImpl"/>

    <applicationService serviceInterface="com.intellij.lang.DefaultASTFactory"
                        serviceImplementation="com.intellij.lang.DefaultASTFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.psi.search.searches.IndexPatternSearch"
                        serviceImplementation="com.intellij.psi.impl.search.IndexPatternSearchImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.fileEditor.UniqueVFilePathBuilder"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.UniqueVFilePathBuilderImpl"/>

    <applicationService serviceImplementation="com.intellij.psi.codeStyle.arrangement.MemberOrderService"/>

    <applicationService serviceInterface="com.intellij.psi.util.PsiEditorUtil"
                        serviceImplementation="com.intellij.psi.util.PsiEditorUtilBase"/>

    <applicationService serviceImplementation="com.intellij.lang.IdeLanguageCustomization"/>

    <rearranger.ui implementation="com.intellij.application.options.codeStyle.arrangement.component.DefaultArrangementUiComponentFactory"/>

    <applicationService serviceInterface="com.intellij.ui.EditorTextFieldProvider"
                        serviceImplementation="com.intellij.ui.EditorTextFieldProviderImpl"/>
    <applicationService serviceInterface="com.intellij.util.gist.GistManager"
                        serviceImplementation="com.intellij.util.gist.GistManagerImpl"/>

    <formattingService implementation="com.intellij.formatting.service.ExternalFormatProcessorAdapter" order="first"/>
    <postFormatProcessor implementation="com.intellij.formatting.LineCommentAddSpacePostFormatProcessor"/>
    <postFormatProcessor implementation="com.intellij.formatting.LineWrappingPostFormatProcessor" order="first"/>

    <applicationService serviceInterface="com.intellij.codeInsight.editorActions.TabOutScopesTracker"
                        serviceImplementation="com.intellij.codeInsight.editorActions.TabOutScopesTrackerImpl"/>

    <applicationService serviceInterface="com.intellij.execution.impl.NewRunConfigurationTreePopupFactory"
                        serviceImplementation="com.intellij.execution.impl.DefaultNewRunConfigurationTreePopupFactory"/>

    <applicationService serviceInterface="com.intellij.psi.search.IndexPatternOptimizer"
                        serviceImplementation="com.intellij.psi.search.IndexPatternOptimizerImpl"/>

    <applicationService serviceInterface="com.intellij.ide.util.scopeChooser.ScopeIdMapper"
                        serviceImplementation="com.intellij.ide.util.scopeChooser.ScopeIdMapperImpl"/>

    <projectConfigurable groupId="editor"
                         id="editor.reader.mode" key="title.reader.mode"
                         bundle="messages.LangBundle"
                         order="after editor.preferences.import"
                         provider="com.intellij.codeInsight.actions.ReaderModeConfigurableProvider"/>

    <experimentalFeature id="editor.reader.mode" percentOfUsers="100">
      <description>The Reader Mode is intended for comfortable code browsing rather than modification. It turns off warnings, show more
        inlay hints, enhance font presentation.
      </description>
    </experimentalFeature>

    <readerModeProvider implementation="com.intellij.codeInsight.actions.FontReaderModeProvider"/>
    <readerModeProvider implementation="com.intellij.codeInsight.actions.LigaturesReaderModeProvider"/>
    <readerModeProvider implementation="com.intellij.codeInsight.actions.HighlightingReaderModeProvider"/>
    <readerModeProvider implementation="com.intellij.codeInsight.actions.DocsRenderingReaderModeProvider"/>
    <readerModeProvider implementation="com.intellij.codeInsight.actions.VisualFormattingLayerReaderModeProvider"/>

    <projectService serviceInterface="com.intellij.formatting.service.FormattingNotificationService"
                    serviceImplementation="com.intellij.formatting.service.FormattingUiNotificationService"/>

    <projectService serviceInterface="com.intellij.codeInsight.daemon.impl.analysis.HighlightingLevelManager"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile"
                    preload="true"/>

    <projectService serviceImplementation="com.intellij.find.findInProject.FindInProjectManager"/>
    <projectService serviceImplementation="com.intellij.find.replaceInProject.ReplaceInProjectManager"/>
    <projectService serviceInterface="com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.TextEditorHighlightingPassRegistrarImpl"
                    preload="true"/>

    <projectService serviceInterface="com.intellij.psi.codeStyle.CodeStyleManager"
                    serviceImplementation="com.intellij.psi.impl.source.codeStyle.CodeStyleManagerImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.include.FileIncludeManager"
                    serviceImplementation="com.intellij.psi.impl.include.FileIncludeManagerImpl"/>

    <projectService serviceInterface="com.intellij.openapi.roots.impl.libraries.ProjectLibraryTable"
                    serviceImplementation="com.intellij.workspaceModel.ide.impl.legacyBridge.library.ProjectLibraryTableBridgeImpl"/>

    <projectService serviceInterface="com.intellij.psi.search.ProjectScopeBuilder"
                    serviceImplementation="com.intellij.psi.search.ProjectScopeBuilderImpl"/>

    <projectService serviceInterface="com.intellij.facet.ProjectWideFacetListenersRegistry"
                    serviceImplementation="com.intellij.facet.impl.ProjectWideFacetListenersRegistryImpl"/>

    <projectService serviceInterface="com.intellij.facet.FacetFinder" serviceImplementation="com.intellij.facet.impl.FacetFinderImpl"/>
    <projectService serviceImplementation="com.intellij.facet.impl.FacetEventsPublisher" preload="await"/>
    <projectService serviceImplementation="com.intellij.workspaceModel.ide.impl.legacyBridge.facet.FacetEntityChangeListener"/>
    <workspaceModel.facetContributor implementation="com.intellij.workspaceModel.ide.impl.legacyBridge.facet.FacetEntityContributor"/>

    <projectService serviceInterface="com.intellij.facet.ProjectFacetManager"
                    serviceImplementation="com.intellij.facet.impl.ProjectFacetManagerImpl"/>
    <projectService serviceInterface="com.intellij.facet.impl.invalid.InvalidFacetManager"
                    serviceImplementation="com.intellij.facet.impl.invalid.InvalidFacetManagerImpl"/>
    <backgroundPostStartupActivity implementation="com.intellij.facet.FacetTypeFeatureCollector"/>
    <projectService serviceInterface="com.intellij.openapi.module.ProjectLoadingErrorsNotifier"
                    serviceImplementation="com.intellij.openapi.module.impl.ProjectLoadingErrorsNotifierImpl"
                    testServiceImplementation="com.intellij.openapi.module.impl.ProjectLoadingErrorsHeadlessNotifier"/>

    <applicationService serviceInterface="com.intellij.openapi.module.ModuleTypeManager"
                        serviceImplementation="com.intellij.openapi.module.impl.ModuleTypeManagerImpl"/>

    <applicationService
      serviceImplementation="com.intellij.openapi.roots.ui.configuration.actions.ModuleDeleteProvider"/>

    <moduleService serviceInterface="com.intellij.facet.FacetModificationTrackingService"
                   serviceImplementation="com.intellij.facet.impl.FacetModificationTrackingServiceImpl"/>

    <applicationService serviceInterface="com.intellij.framework.detection.impl.FrameworkDetectorRegistry"
                        serviceImplementation="com.intellij.framework.detection.impl.FrameworkDetectorRegistryImpl"/>
    <fileBasedIndex implementation="com.intellij.framework.detection.impl.FrameworkDetectionIndex"/>
    <projectService serviceInterface="com.intellij.framework.detection.DetectionExcludesConfiguration"
                    serviceImplementation="com.intellij.framework.detection.impl.exclude.DetectionExcludesConfigurationImpl"/>
    <projectService serviceImplementation="com.intellij.framework.detection.impl.exclude.old.OldFacetDetectionExcludesConfiguration"/>

    <projectService serviceInterface="com.intellij.codeInsight.AutoPopupController"
                    serviceImplementation="com.intellij.codeInsight.AutoPopupControllerImpl"/>

    <projectService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                    serviceImplementation="com.intellij.psi.impl.source.codeStyle.CodeStyleFacadeImpl"/>

    <projectService serviceInterface="com.intellij.usages.UsageViewManager"
                    serviceImplementation="com.intellij.usages.impl.UsageViewManagerImpl"/>

    <projectService serviceImplementation="com.intellij.analysis.AnalysisUIOptions"/>

    <projectService serviceInterface="com.intellij.ide.util.gotoByName.ChooseByNameFactory"
                    serviceImplementation="com.intellij.ide.util.gotoByName.ChooseByNameFactoryImpl"/>

    <projectService serviceImplementation="com.intellij.codeEditor.printing.ExportToHTMLSettings"/>

    <projectService serviceImplementation="com.intellij.diagnostic.logging.LogConsolePreferences"/>

    <projectService serviceInterface="com.intellij.find.FindManager"
                    serviceImplementation="com.intellij.find.impl.FindManagerImpl"/>

    <projectService serviceImplementation="com.intellij.ide.util.gotoByName.GotoFileConfiguration"/>
    <projectService serviceImplementation="com.intellij.ide.util.gotoByName.GotoClassSymbolConfiguration"/>

    <projectService serviceImplementation="com.intellij.ide.hierarchy.HierarchyBrowserManager" client="all"/>
    <toolWindowExtractorMode id="Hierarchy" mode="per_client"/>

    <projectService serviceImplementation="com.intellij.packageDependencies.DependenciesToolWindow"/>

    <projectService serviceImplementation="com.intellij.codeInsight.documentation.DocumentationManager"/>

    <projectService serviceImplementation="com.intellij.moduleDependencies.DependenciesAnalyzeManager"/>

    <projectService serviceInterface="com.intellij.ide.util.TreeFileChooserFactory"
                    serviceImplementation="com.intellij.ide.util.TreeFileChooserFactoryImpl"/>

    <projectService serviceInterface="com.intellij.psi.impl.cache.TodoCacheManager"
                    serviceImplementation="com.intellij.psi.impl.cache.impl.IndexTodoCacheManagerImpl"/>
    <testSourcesFilter implementation="com.intellij.openapi.roots.ProjectRootTestSourcesFilter"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ProjectRootModificationTracker"
                    serviceImplementation="com.intellij.openapi.roots.ProjectRootModificationTrackerImpl"/>

    <projectService serviceInterface="com.intellij.ui.FileColorManager"
                    serviceImplementation="com.intellij.ui.tabs.FileColorManagerImpl"/>

    <projectService serviceImplementation="com.intellij.slicer.SliceToolwindowSettings"/>
    <projectService serviceImplementation="com.intellij.slicer.SliceManager"/>

    <projectService serviceInterface="com.intellij.codeInsight.highlighting.HighlightManager"
                    serviceImplementation="com.intellij.codeInsight.highlighting.HighlightManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.codeVision.settings.CodeVisionSettings"/>
    <projectService serviceImplementation="com.intellij.codeInsight.codeVision.CodeVisionInitializer"/>
    <postStartupActivity implementation="com.intellij.codeInsight.codeVision.CodeVisionInitializer$CodeVisionInitializerStartupActivity"/>
    <projectService serviceImplementation="com.intellij.codeInsight.codeVision.CodeVisionProvidersWatcher"/>
    <projectService serviceImplementation="com.intellij.codeInsight.codeVision.CodeVisionContextProvider"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.codeVision.ui.renderers.painters.CodeVisionThemeInfoProvider"/>

    <projectService serviceImplementation="com.intellij.codeInsight.actions.AsyncActionExecutionService"/>
    <config.inlaySettingsProvider implementation="com.intellij.codeInsight.codeVision.settings.CodeVisionInlaySettingProvider"/>
    <registryKey defaultValue="true" description="Enable declarative inlay hints" key="inlays.declarative.hints" restartRequired="true"/>

    <config.inlaySettingsProvider implementation="com.intellij.codeInsight.hints.declarative.impl.DeclarativeHintsSettingsProvider"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.hints.declarative.DeclarativeInlayHintsSettings"/>
    <projectService serviceImplementation="com.intellij.codeInsight.hints.chain.DeclarativeCallChainInlaySettings"/>
    <intentionMenuContributor
      implementation="com.intellij.codeInsight.hints.declarative.impl.toggle.DeclarativeHintsTogglingIntentionMenuContributor"/>

    <projectService serviceImplementation="com.intellij.codeInsight.hints.codeVision.DaemonBoundCodeVisionCacheService"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.hints.codeVision.CodeVisionPassFactory"/>

    <projectService serviceInterface="com.intellij.ide.GeneratedSourceFileChangeTracker"
                    serviceImplementation="com.intellij.ide.GeneratedSourceFileChangeTrackerImpl" preload="notHeadless"/>
    <editorFactoryDocumentListener implementation="com.intellij.ide.GeneratedSourceFileChangeTrackerImpl$MyDocumentListener"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ExternalProjectSystemRegistry"
                        serviceImplementation="com.intellij.openapi.roots.impl.ExternalProjectSystemRegistryImpl"/>
    <moduleService serviceInterface="com.intellij.openapi.components.impl.stores.IComponentStore"
                   serviceImplementation="com.intellij.configurationStore.ModuleStoreImpl"
                   testServiceImplementation="com.intellij.configurationStore.TestModuleStore"/>

    <registryKey defaultValue="true" key="workspace.model.test.properties.bridge" restartRequired="true"
                 description="Provides bridges for TestModuleProperties via WorkspaceModel"/>

    <moduleService serviceImplementation="com.intellij.openapi.module.impl.ModuleImpl$DeprecatedModuleOptionManager"/>
    <moduleService serviceInterface="com.intellij.openapi.components.PathMacroManager"
                   serviceImplementation="com.intellij.openapi.components.impl.ModulePathMacroManager"/>

    <applicationService serviceInterface="com.intellij.ide.scratch.ScratchFileService"
                        serviceImplementation="com.intellij.ide.scratch.ScratchFileServiceImpl"/>
    <treeStructureProvider implementation="com.intellij.ide.scratch.ScratchTreeStructureProvider" order="last"/>

    <projectService serviceImplementation="com.intellij.openapi.file.exclude.ProjectPlainTextFileTypeManager" preload="true"/>
    <fileTypeOverrider implementation="com.intellij.openapi.file.exclude.UserFileTypeOverrider"/>

    <fileTypeDetector implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$Detector"/>
    <navbar implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$NavBarExtension"/>
    <lang.substitutor language="" implementationClass="com.intellij.ide.scratch.ScratchFileServiceImpl$Substitutor" order="first"/>
    <nonProjectFileWritingAccessExtension implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$AccessExtension"/>
    <projectViewNodeDecorator implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$FilePresentation"/>
    <fileIconProvider implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$FilePresentation"/>
    <editorTabTitleProvider implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$FilePresentation"/>
    <syntaxHighlighter factoryClass="com.intellij.ide.scratch.ScratchFileServiceImpl$Highlighter" order="first"/>
    <indexedRootsProvider implementation="com.intellij.ide.scratch.ScratchesAndConsolesIndexSetContributor"/>
    <useScopeEnlarger implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$UseScopeExtension"/>
    <usageTypeProvider implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$UsageTypeExtension" order="last"/>
    <todoExtraPlaces implementation="com.intellij.ide.scratch.ScratchTodoExtraPlaces"/>

    <scratch.rootType implementation="com.intellij.ide.scratch.ScratchRootType"/>
    <scratch.rootType implementation="com.intellij.execution.console.HistoryRootType"/>
    <scratch.rootType implementation="com.intellij.ide.script.IdeConsoleRootType"/>

    <!--  Inlay hints  -->
    <applicationService serviceImplementation="com.intellij.codeInsight.daemon.impl.ParameterHintsPresentationManager"/>
    <editorFactoryMouseListener implementation="com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayEditorMouseListener"/>
    <editorFactoryMouseListener implementation="com.intellij.codeInsight.hints.presentation.listeners.InlayEditorMouseListener"/>
    <editorFactoryMouseMotionListener
      implementation="com.intellij.codeInsight.hints.presentation.listeners.InlayEditorMouseMotionListener"/>
    <editorFactoryMouseMotionListener
      implementation="com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayHintsMouseMotionListener"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.hints.InlayHintsPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.hints.declarative.impl.DeclarativeInlayHintsPassFactory"/>

    <projectConfigurable provider="com.intellij.codeInsight.hints.settings.InlaySettingsConfigurableProvider"
                         id="inlay.hints"
                         parentId="editor"
                         key="settings.hints"
                         bundle="messages.ApplicationBundle"
                         dynamic="true"
                         groupWeight="1"/>
    <search.optionContributor implementation="com.intellij.codeInsight.hints.settings.InlayHintsSettingsSearchableContributor"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.hints.InlayHintsSettings"/>
    <codeInsight.inlayProviderFactory implementation="com.intellij.codeInsight.hints.SingleLanguageInlayProviderFactory"/>
    <codeInsight.codeVisionProviderFactory implementation="com.intellij.codeInsight.codeVision.DefaultCodeVisionProviderFactory"/>
    <codeInsight.codeVisionProviderFactory implementation="com.intellij.codeInsight.hints.codeVision.DaemonBoundCodeVisionProviderFactory"/>
    <codeInsight.inlayHintsSwitch implementation="com.intellij.codeInsight.hints.InlayHintsProviderSwitch"/>
    <codeInsight.inlayHintsSwitch implementation="com.intellij.codeInsight.hints.codeVision.CodeVisionSwitch"/>
    <config.inlayGroupSettingProvider implementation="com.intellij.codeInsight.codeVision.settings.CodeVisionGlobalSettingsProvider"/>
    <config.codeVisionGroupSettingProvider
      implementation="com.intellij.codeInsight.codeVision.settings.impl.CodeVisionInheritorsSettingsProvider"/>
    <config.codeVisionGroupSettingProvider
      implementation="com.intellij.codeInsight.codeVision.settings.impl.CodeVisionProblemsSettingsProvider"/>
    <config.codeVisionGroupSettingProvider
      implementation="com.intellij.codeInsight.codeVision.settings.impl.CodeVisionUsagesSettingsProvider"/>
    <codeInsight.declarativeInlayProviderFactory
      implementation="com.intellij.codeInsight.hints.declarative.impl.DeclarativeHintsDefaultProviderFactory"/>
    <codeInsight.inlayActionHandler implementationClass="com.intellij.codeInsight.hints.declarative.PsiPointerInlayActionNavigationHandler"
                                    handlerId="psi.pointer.navigation.handler"/>
    <projectService serviceImplementation="com.intellij.codeInsight.daemon.impl.ErrorStripeUpdateManager"/>

    <applicationService serviceInterface="com.intellij.framework.detection.FileContentPattern$ParseXml"
                        serviceImplementation="com.intellij.util.xml.NanoXmlParserImpl"/>

    <!-- Extension resources -->
    <applicationService serviceImplementation="com.intellij.ide.extensionResources.ResourceVersions"/>
    <obsoleteStorage file="extensionsRootType.xml">
      <components>
        <component>ExtensionsRootType</component>
      </components>
    </obsoleteStorage>
    <scratch.rootType implementation="com.intellij.ide.extensionResources.ExtensionsRootType"/>

    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.GeneralColorsPage" id="general"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.DefaultLanguageColorsPage" id="defaultLanguage"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.ANSIColoredConsoleColorsPage" id="ansi"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.CustomColorsPage" id="custom"/>
    <colorAndFontPanelFactory implementation="com.intellij.application.options.colors.ScopeColorsPageFactory"/>

    <elementDescriptionProvider implementation="com.intellij.psi.impl.DefaultPomTargetDescriptionProvider" order="last" id="pomDefault"/>

    <applicationService serviceImplementation="com.intellij.codeInspection.ex.AppInspectionProfilesVisibleTreeState"/>
    <projectService serviceImplementation="com.intellij.codeInspection.ex.ProjectInspectionProfilesVisibleTreeState"/>

    <!-- Editor -->
    <search.topHitProvider implementation="com.intellij.application.options.editor.EditorOptionsTopHitProvider"/>
    <applicationConfigurable groupId="editor" groupWeight="190"
                             instance="com.intellij.application.options.editor.EditorOptionsPanel"
                             id="preferences.editor" key="title.editor"
                             bundle="messages.ApplicationBundle"
                             order="after preferences.lookFeel"
                             childrenEPName="com.intellij.editorOptionsProvider"/>
    <applicationConfigurable groupId="editor" groupWeight="189"
                             instance="com.intellij.application.options.editor.EditorCodeEditingConfigurable"
                             id="preferences.editor.code.editing" key="title.code.editing"
                             bundle="messages.ApplicationBundle"/>
    <applicationConfigurable parentId="preferences.editor" instance="com.intellij.execution.console.ConsoleConfigurable" id="Console"
                             bundle="messages.IdeBundle" key="configurable.Console.display.name"/>

    <projectService serviceInterface="com.intellij.semantic.SemService" serviceImplementation="com.intellij.semantic.SemServiceImpl"/>

    <!-- Global Code Style -->
    <projectConfigurable groupId="editor" groupWeight="170" dynamic="true" bundle="messages.IdeBundle"
                         key="configurable.CodeStyle.display.name" id="preferences.sourceCode"
                         instance="com.intellij.application.options.CodeStyleSchemesConfigurable" order="after colors"/>
    <applicationService serviceImplementation="com.intellij.application.options.codeStyle.CodeStyleSchemesUIConfiguration"/>

    <!-- File Types -->
    <applicationConfigurable groupId="editor" groupWeight="120" instance="com.intellij.openapi.fileTypes.impl.FileTypeConfigurable"
                             id="preferences.fileTypes"
                             key="filetype.settings.title" bundle="messages.FileTypesBundle"/>

    <applicationConfigurable groupId="editor" key="intention.settings" bundle="messages.CodeInsightBundle"
                             provider="com.intellij.codeInsight.intention.impl.config.IntentionsConfigurableProviderImpl"
                             id="preferences.intentionPowerPack"/>

    <!-- Live Templates -->
    <search.topHitProvider implementation="com.intellij.codeInsight.template.impl.LiveTemplatesOptionsTopHitProvider"/>
    <applicationConfigurable groupId="editor" groupWeight="130" instance="com.intellij.codeInsight.template.impl.LiveTemplatesConfigurable"
                             id="editing.templates"
                             key="templates.settings.page.title" bundle="messages.CodeInsightBundle"/>
    <search.optionContributor implementation="com.intellij.codeInsight.template.impl.TemplateSearchableOptionContributor"/>
    <lookup.actionProvider implementation="com.intellij.codeInsight.template.impl.LiveTemplateLookupActionProvider"/>
    <documentationProvider implementation="com.intellij.codeInsight.template.impl.LiveTemplateDocumentationProvider"/>
    <projectService serviceInterface="com.intellij.codeInsight.template.TemplateManager"
                    serviceImplementation="com.intellij.codeInsight.template.impl.TemplateManagerImpl"/>

    <!-- File Templates-->
    <projectConfigurable groupId="editor" groupWeight="150"
                         provider="com.intellij.ide.fileTemplates.impl.AllFileTemplatesConfigurable$Provider" id="fileTemplates"
                         key="title.file.templates" bundle="messages.IdeBundle"/>

    <!-- T.O.D.O -->
    <applicationConfigurable groupId="editor" instance="com.intellij.ide.todo.configurable.TodoConfigurable" id="preferences.toDoOptions"
                             key="title.todo"
                             bundle="messages.IdeBundle"/>

    <!-- External Tools -->
    <applicationConfigurable groupId="tools" groupWeight="140" instance="com.intellij.tools.ToolConfigurable" id="preferences.externalTools"
                             key="tools.settings.title"
                             bundle="messages.ToolsBundle"/>
    <stepsBeforeRunProvider implementation="com.intellij.tools.ToolBeforeRunTaskProvider"/>
    <projectService serviceImplementation="com.intellij.tools.ToolsProjectConfig"/>

    <bidiRegionsSeparator language="" implementationClass="com.intellij.openapi.editor.bidi.PlainTextBidiRegionsSeparator"/>

    <lang.parserDefinition language="TEXT" implementationClass="com.intellij.openapi.fileTypes.PlainTextParserDefinition"/>
    <lang.syntaxHighlighterFactory language="TEXT" implementationClass="com.intellij.openapi.fileTypes.PlainTextSyntaxHighlighterFactory"/>
    <lang.braceMatcher language="TEXT" implementationClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeBraceMatcher"/>
    <lang.quoteHandler language="TEXT" implementationClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeQuoteHandler"/>
    <lang.ast.factory language="TEXT" implementationClass="com.intellij.psi.impl.source.tree.PlainTextASTFactory"/>

    <getDataRule key="psi.File" implementationClass="com.intellij.ide.impl.dataRules.PsiFileRule"/>
    <getDataRule key="psi.Element" implementationClass="com.intellij.ide.impl.dataRules.PsiElementFromSelectionRule"/>
    <getDataRule key="psi.Element.array" implementationClass="com.intellij.ide.impl.dataRules.PsiElementFromSelectionsRule"/>
    <getDataRule key="psi.pasteTargetElement" implementationClass="com.intellij.ide.impl.dataRules.PasteTargetRule"/>
    <getDataRule key="virtualFile" implementationClass="com.intellij.ide.impl.dataRules.VirtualFileRule"/>
    <getDataRule key="virtualFileArray" implementationClass="com.intellij.ide.impl.dataRules.VirtualFileArrayRule"/>
    <getDataRule key="Navigatable" implementationClass="com.intellij.ide.impl.dataRules.NavigatableRule"/>
    <getDataRule key="usageTarget" implementationClass="com.intellij.ide.impl.dataRules.UsageTargetsRule" injectedContext="true"/>
    <getDataRule key="UsageInfo.List" implementationClass="com.intellij.ide.impl.dataRules.UsageInfo2ListRule" type="fast"/>
    <getDataRule key="module" implementationClass="com.intellij.ide.impl.dataRules.ModuleRule"/>
    <getDataRule key="symbols" implementationClass="com.intellij.model.psi.impl.TargetSymbolsDataRule" injectedContext="true"/>
    <getDataRule key="search.targets" implementationClass="com.intellij.find.actions.SearchTargetsDataRule"/>
    <getDataRule key="documentation.targets" implementationClass="com.intellij.lang.documentation.ide.actions.DocumentationTargetsDataRule"
                 type="context"/>

    <dataValidators implementation="com.intellij.ide.impl.LangDataValidators"/>

    <patternDialectProvider implementation="com.intellij.packageDependencies.ui.ProjectPatternProvider" id="file"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.DefaultScopesProvider" id="default" order="first"/>
    <customScopesProvider implementation="com.intellij.openapi.fileEditor.impl.OpenFilesScope$Provider" order="last"/>

    <searchScopesProvider implementation="com.intellij.psi.search.DefaultSearchScopeProviders$CustomNamed" order="last"/>

    <refactoring.elementListenerProvider implementation="com.intellij.packageDependencies.ui.RefactoringScopeElementListenerProvider"/>

    <highlightVisitor implementation="com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor"/>
    <daemon.changeLocalityDetector implementation="com.intellij.codeInsight.daemon.impl.DefaultChangeLocalityDetector"/>
    <daemon.changeLocalityDetector implementation="com.intellij.ide.todo.MultiLineTodoLocalityDetector"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentDateMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentTimeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentUserMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ClipboardMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CapitalizeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.DecapitalizeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FirstWordMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.EscapeStringMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ReplaceUnderscoresWithSpacesMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ReplaceSpacesWithUnderscoresMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.LineNumberMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FilePathMacroBase$FileNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FilePathMacroBase$FileNameWithoutExtensionMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FilePathMacroBase$FilePathMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FilePathMacroBase$FileRelativePathMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ConvertToCamelCaseMacro$ReplaceUnderscoresToCamelCaseMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ConvertToCamelCaseMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CapitalizeAndUnderscoreMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SplitWordsMacro$SnakeCaseMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SplitWordsMacro$LowercaseAndDash"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SplitWordsMacro$SpaceSeparated"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ConcatMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.GroovyScriptMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CompleteMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ShowParameterInfoMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CompleteSmartMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SubstringBeforeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.RegExMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CommentMacro$LineCommentStart"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CommentMacro$BlockCommentStart"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CommentMacro$BlockCommentEnd"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CommentMacro$AnyCommentStart"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CommentMacro$AnyCommentEnd"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.EnumMacro"/>
    <internalFileTemplate name="HTML File" id="html"/>
    <fileBasedIndex implementation="com.intellij.psi.impl.cache.impl.todo.TodoIndex"/>
    <fileBasedIndex implementation="com.intellij.psi.impl.cache.impl.id.IdIndexImpl"/>
    <fileBasedIndex implementation="com.intellij.psi.search.FileTypeIndexImpl"/>

    <fileBasedIndex implementation="com.intellij.find.ngrams.TrigramIndex"/>

    <fileBasedIndex implementation="com.intellij.psi.impl.include.FileIncludeIndex"/>

    <syntaxHighlighter factoryClass="com.intellij.openapi.fileTypes.LanguageFileTypeHighlighterProvider"/>
    <structureViewBuilder factoryClass="com.intellij.ide.highlighter.LanguageFileTypeStructureViewBuilderProvider"/>

    <idIndexer filetype="PLAIN_TEXT" implementationClass="com.intellij.psi.impl.cache.impl.id.PlainTextIdIndexer"/>
    <todoIndexer filetype="PLAIN_TEXT" implementationClass="com.intellij.psi.impl.cache.impl.todo.PlainTextTodoIndexer"/>
    <lang.elementManipulator forClass="com.intellij.psi.PsiPlainTextFile"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.PlainFileManipulator"/>
    <lang.elementManipulator forClass="com.intellij.psi.PsiComment"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.PsiCommentManipulator"/>

    <applicationService serviceImplementation="com.intellij.ide.macro.MacroManager"/>

    <ideRootPaneNorth implementation="com.intellij.ide.navigationToolbar.NavBarRootPaneExtension"/>
    <ideRootPaneNorth implementation="com.intellij.ide.navigationToolbar.experimental.NewToolbarRootPaneExtension" order="first"/>
    <navbar implementation="com.intellij.ide.navigationToolbar.DefaultNavBarExtension" id="defaultNavbar" order="last"/>
    <applicationService serviceInterface="com.intellij.ide.navigationToolbar.NavBarModelBuilder"
                        serviceImplementation="com.intellij.ide.navigationToolbar.NavBarModelBuilderImpl"/>

    <navbar.item.provider implementation="com.intellij.ide.navbar.impl.DefaultNavBarItemProvider" order="last"/>

    <getDataRule key="navigationBarItem"
                 implementationClass="com.intellij.ide.navbar.actions.DefaultNavBarItemDataRule"
                 type="context"
                 order="last"/>

    <statistician key="completion" implementationClass="com.intellij.codeInsight.completion.DefaultCompletionStatistician" order="last"/>

    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.OpenedInEditorWeigher" id="openedInEditor"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SameDirectoryWeigher" id="sameDirectory"
             order="after openedInEditor"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SameSourceRootWeigher" id="sameLogicalRoot"
             order="after sameDirectory"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SameModuleWeigher" id="sameModule"
             order="after sameLogicalRoot"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.InResolveScopeWeigher" id="inResolveScope"
             order="after sameModule"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.DirectoryTypeWeigher" id="directoryType"
             order="after inResolveScope"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SdkOrLibraryWeigher" id="sdkOrLibrary"
             order="after directoryType"/>

    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.StatisticsWeigher" id="stats"
             order="after prefix"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.ExplicitProximityWeigher" id="explicitProximity"
             order="after stats"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.LookupElementProximityWeigher" id="proximity"
             order="after explicitProximity"/>

    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.DefaultCompletionContributor"
                            id="default"
                            order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.ComboEditorCompletionContributor"
                            id="comboEditor" order="first"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.WordCompletionContributor"
                            id="wordCompletion" order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.FilePathCompletionContributor"
                            id="filePath" order="before javaClassName"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.template.impl.LiveTemplateCompletionContributor"
                            id="liveTemplates" order="first"/>
    <completion.contributor id="reference" language="any" order="last"
                            implementationClass="com.intellij.codeInsight.completion.ReferenceBasedCompletionContributor"/>

    <applicationService serviceImplementation="com.intellij.execution.console.ConsoleFoldingSettings"/>

    <console.folding implementation="com.intellij.execution.console.SubstringConsoleFolding"/>

    <lookup.charFilter implementation="com.intellij.codeInsight.template.impl.LiveTemplateCharFilter" order="first" id="liveTemplate"/>
    <lookup.charFilter implementation="com.intellij.codeInsight.completion.DefaultCharFilter" order="last" id="default"/>
    <lookup.charFilter implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceCharFilter" id="fileRef"
                       order="before completion"/>

    <searchEverywhereClassifier implementation="com.intellij.ide.actions.DefaultSearchEverywhereClassifier"/>
    <gotoFileContributor implementation="com.intellij.ide.util.gotoByName.DefaultFileNavigationContributor"/>
    <gotoRelatedProvider implementation="com.intellij.ide.actions.RelatedItemLineMarkerGotoAdapter"/>

    <selectInTarget implementation="com.intellij.ide.impl.ProjectViewSelectInGroupTarget"/>
    <selectInTarget implementation="com.intellij.ide.navigationToolbar.SelectInNavBarTarget"/>
    <selectInTarget implementation="com.intellij.ide.impl.StructureViewSelectInTarget"/>
    <selectInTarget implementation="com.intellij.ide.impl.ProjectViewSelectInExplorerTarget"/>

    <elementLookupRenderer implementation="com.intellij.codeInsight.template.impl.TemplateLookupRenderer"/>

    <modelScopeItemPresenter implementation="com.intellij.analysis.dialog.ProjectScopeItemPresenter" id="project_scope" order="first"/>
    <modelScopeItemPresenter implementation="com.intellij.analysis.dialog.ModuleScopeItemPresenter" id="module_scope"
                             order="after project_scope"/>
    <modelScopeItemPresenter implementation="com.intellij.analysis.dialog.OtherScopeItemPresenter" id="other_scope"
                             order="after vcs_scope"/>
    <modelScopeItemPresenter implementation="com.intellij.analysis.dialog.CustomScopeItemPresenter" id="custom_scope"
                             order="after other_scope"/>

    <customPasteProvider implementation="com.intellij.ide.actions.PasteReferenceProvider"/>

    <referenceInjector implementation="com.intellij.codeInsight.daemon.impl.analysis.encoding.EncodingReferenceInjector"/>

    <usageGroupingRuleProvider implementation="com.intellij.usages.impl.UsageGroupingRuleProviderImpl"/>

    <projectService serviceImplementation="com.intellij.psi.templateLanguages.TemplateDataLanguageMappings"/>
    <applicationService serviceImplementation="com.intellij.psi.templateLanguages.TemplateDataLanguagePatterns"/>
    <filePropertyPusher implementation="com.intellij.psi.templateLanguages.TemplateDataLanguagePusher"/>

    <!-- execution -->
    <projectService serviceImplementation="com.intellij.execution.target.TargetEnvironmentsManager"/>

    <executor implementation="com.intellij.execution.executors.DefaultRunExecutor" order="first" id="run"/>
    <runToolbarProcess implementation="com.intellij.execution.runToolbar.RunToolbarRunProcess"/>
    <executionTargetProvider implementation="com.intellij.execution.DefaultExecutionTargetProvider"/>
    <projectService serviceImplementation="com.intellij.execution.RunConfigurationProducerService"/>
    <configurationType implementation="com.intellij.execution.compound.CompoundRunConfigurationType"/>
    <projectConfigurable groupId="build" id="Runtime.Targets.Configurable" bundle="messages.IdeBundle"
                         key="configurable.Runtime.Targets.Configurable.display.name"
                         provider="com.intellij.execution.target.TargetEnvironmentsConfigurableProvider"/>

    <projectService serviceImplementation="com.intellij.execution.configurations.RunConfigurationVcsSupport"/>

    <findUsagesHandlerFactory implementation="com.intellij.find.findUsages.DefaultFindUsagesHandlerFactory" id="default" order="last"/>
    <usageTargetProvider implementation="com.intellij.find.findUsages.DefaultUsageTargetProvider" id="default" order="last"/>

    <cutElementMarker implementation="com.intellij.ide.PsiCutElementMarker"/>

    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.PlainTextLineSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.NaturalLanguageTextSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.WordSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.LineCommentSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.BlockCommentSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.InjectedFileReferenceSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.ide.highlighter.custom.impl.CustomFileTypeSelectWordHandler"/>

    <basicWordSelectionFilter implementation="com.intellij.lang.parser.DummyBlockWordSelectionFilter"/>

    <syntaxHighlighter factoryClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeHighlighterProvider"/>
    <fileTypeRegistrar implementation="com.intellij.ide.highlighter.custom.impl.StandardFileTypeRegistrar"/>

    <directoryProjectConfigurator implementation="com.intellij.platform.PlatformProjectConfigurator" order="first"
                                  id="PlatformProjectConfigurator"/>

    <fileIconProvider implementation="com.intellij.ide.FileIconPatcherImpl"/>
    <iconProvider implementation="com.intellij.ide.NativeIconProvider" id="native"/>
    <iconProvider implementation="com.intellij.psi.impl.file.SourceRootIconProvider$DirectoryProvider" id="directory" order="last"/>
    <iconLayerProvider implementation="com.intellij.psi.impl.file.SourceRootIconProvider$FileLayerProvider" id="sourceRoot" order="last"/>

    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.LineMover" id="line" order="last"/>

    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterInStringLiteralHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterInLineCommentHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterInBlockCommentHandler" id="blockComment"
                          order="last"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterAfterUnmatchedBraceHandler"
                          id="afterUnmatchedBrace"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesFinalHandler"
                          id="EnterBetweenBracesHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterAfterJavadocTagHandler"/>

    <backspaceHandlerDelegate implementation="com.intellij.codeInsight.editorActions.SimpleIndentingBackspaceHandler"/>
    <backspaceHandlerDelegate implementation="com.intellij.codeInsight.editorActions.SmartIndentingBackspaceHandler"
                              id="SmartIndentingBackspaceHandler"/>

    <codeInsight.linkHandler prefix="#inspection/" handlerClass="com.intellij.codeInsight.hint.InspectionDescriptionLinkHandler"/>
    <codeInsight.linkHandler prefix="#navigation/" handlerClass="com.intellij.codeInsight.hint.NavigationLinkHandler"/>
    <codeInsight.linkHandler prefix="#element/" handlerClass="com.intellij.codeInsight.hint.ElementLinkHandler"/>
    <codeInsight.lineMarkerProvider language="" implementationClass="com.intellij.ui.ColorLineMarkerProvider"/>

    <codeFoldingOptionsProvider instance="com.intellij.application.options.editor.BaseCodeFoldingOptionsProvider" order="first"/>
    <search.topHitProvider implementation="com.intellij.application.options.editor.EditorSmartKeysOptionsTopHitProvider"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.EditorSmartKeysConfigurable" id="editor.preferences.smartKeys"
                           dynamic="true"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.EditorAppearanceConfigurable"
                           id="editor.preferences.appearance"/>

    <editorOptionsProvider instance="com.intellij.application.options.editor.GutterIconsConfigurable" id="editor.preferences.gutterIcons"/>
    <search.optionContributor implementation="com.intellij.application.options.editor.GutterIconsSearchableOptionContributor"/>

    <!-- Code Lens -->
    <codeVisionPainterProvider forClass="com.intellij.codeInsight.codeVision.ui.model.CounterCodeVisionEntry"
                               implementationClass="com.intellij.codeInsight.codeVision.ui.renderers.providers.CounterCodeVisionEntryPainter"/>
    <codeVisionPainterProvider forClass="com.intellij.codeInsight.codeVision.ui.model.TextCodeVisionEntry"
                               implementationClass="com.intellij.codeInsight.codeVision.ui.renderers.providers.TextCodeVisionEntryPainter"/>
    <codeVisionPainterProvider forClass="com.intellij.codeInsight.codeVision.ui.model.ClickableTextCodeVisionEntry"
                               implementationClass="com.intellij.codeInsight.codeVision.ui.renderers.providers.TextCodeVisionEntryPainter"/>
    <codeVisionPainterProvider forClass="com.intellij.codeInsight.codeVision.ui.model.PlaceholderCodeVisionEntry"
                               implementationClass="com.intellij.codeInsight.codeVision.ui.renderers.providers.TextCodeVisionEntryPainter"/>
    <codeVisionPainterProvider forClass="com.intellij.codeInsight.codeVision.ui.model.AdditionalCodeVisionEntry"
                               implementationClass="com.intellij.codeInsight.codeVision.ui.renderers.providers.AdditionalCodeVisionEntryPainter"/>
    <codeVisionPainterProvider forClass="com.intellij.codeInsight.codeVision.ui.model.RichTextCodeVisionEntry"
                               implementationClass="com.intellij.codeInsight.codeVision.ui.renderers.providers.RichTextCodeVisionEntryPainter"/>

    <optionsApplicabilityFilter implementation="com.intellij.application.options.GlobalOptionsApplicabilityFilter" order="last"
                                id="global"/>

    <!-- Colors & Fonts-->
    <applicationConfigurable groupId="editor" groupWeight="180" dynamic="true"
                             instance="com.intellij.application.options.colors.ColorAndFontOptions"
                             id="reference.settingsdialog.IDE.editor.colors" key="title.colors.and.fonts"
                             bundle="messages.ApplicationBundle"/>
    <search.topHitProvider implementation="com.intellij.application.options.editor.EditorTabsOptionsTopHitProvider"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.EditorTabsConfigurable" id="editor.preferences.tabs"/>
    <search.topHitProvider implementation="com.intellij.application.options.editor.CodeFoldingOptionsTopHitProvider"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.CodeFoldingConfigurable" id="editor.preferences.folding"
                           key="group.code.folding" bundle="messages.ApplicationBundle"/>
    <editorOptionsProvider instance="com.intellij.application.options.CodeCompletionConfigurable" id="editor.preferences.completion"
                           key="title.code.completion" bundle="messages.ApplicationBundle"/>
    <projectConfigurable instance="com.intellij.application.options.editor.AutoImportOptionsConfigurable"
                         id="editor.preferences.import"
                         parentId="preferences.editor"
                         key="auto.import" bundle="messages.ApplicationBundle"
                         groupWeight="1"/>

    <editorTabColorProvider implementation="com.intellij.ui.tabs.EditorTabColorProviderImpl"/>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.EditFoldingOptionsAction</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.formatting.contextConfiguration.ConfigureCodeStyleOnSelectedFragment</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.hints.AddToExcludeListCurrentMethodIntention</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.hints.DisableCustomHintsOption</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.hints.EnableCustomHintsOption</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.QuickEditAction</className>
      <bundleName>messages.LangBundle</bundleName>
      <categoryKey>intention.category.language.injection</categoryKey>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertRelativePathToAbsoluteIntentionAction</className>
      <bundleName>messages.LangBundle</bundleName>
      <categoryKey>intention.category.other</categoryKey>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertAbsolutePathToRelativeIntentionAction</className>
      <bundleName>messages.LangBundle</bundleName>
      <categoryKey>intention.category.other</categoryKey>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.ide.scratch.ScratchFromSelectionIntention</className>
      <bundleName>messages.LangBundle</bundleName>
      <categoryKey>intention.category.other</categoryKey>
    </intentionAction>

    <intentionMenuContributor implementation="com.intellij.codeInsight.daemon.impl.DoNotShowInspectionIntentionMenuContributor"/>
    <intentionMenuContributor implementation="com.intellij.codeInsight.daemon.impl.GutterIntentionMenuContributor"/>
    <intentionMenuContributor implementation="com.intellij.codeInsight.daemon.impl.CleanupIntentionMenuContributor"/>

    <!-- LookupManagerActions -->
    <editorActionHandler action="EditorUp" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$UpHandler"/>
    <editorActionHandler action="EditorDown" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$DownHandler"/>
    <editorActionHandler action="EditorPageUp"
                         implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$PageUpHandler"/>
    <editorActionHandler action="EditorPageDown"
                         implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$PageDownHandler"/>
    <editorActionHandler action="EditorLeft" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$LeftHandler"
                         id="left.lookup"/>
    <editorActionHandler action="EditorRight" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$RightHandler"
                         id="right.lookup"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.codeInsight.lookup.impl.BackspaceHandler"
                         id="backspace.lookup"/>
    <editorActionHandler action="EditorStartNewLine" implementationClass="com.intellij.codeInsight.lookup.impl.StartNewLineHandler"
                         id="startNewLine.lookup"/>

    <!-- CodeInsightSettings -->
    <editorActionHandler action="EditorEnter" implementationClass="com.intellij.codeInsight.editorActions.EnterHandler" id="editorEnter"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="com.intellij.codeInsight.editorActions.EndHandler"/>
    <editorActionHandler action="EditorSelectWord" implementationClass="com.intellij.codeInsight.editorActions.SelectWordHandler"
                         id="psi.select.word"/>
    <editorActionHandler action="EditorSelectWord" implementationClass="com.intellij.openapi.editor.actions.SelectWordAtCaretAction$Handler"
                         id="indent.guide.select.word" order=" before psi.select.word"/>
    <editorActionHandler action="EditorUnSelectWord" implementationClass="com.intellij.codeInsight.editorActions.UnSelectWordHandler"
                         id="psi.unselect.word"/>
    <editorActionHandler action="EditorPaste" implementationClass="com.intellij.codeInsight.editorActions.PasteHandler"/>
    <editorActionHandler action="EditorPaste" implementationClass="com.intellij.codeInsight.editorActions.LanguageConsolePasteHandler"
                         order="first"/>
    <editorActionHandler action="EditorCopy" implementationClass="com.intellij.codeInsight.editorActions.CopyHandler"/>
    <editorActionHandler action="EditorCopy" implementationClass="com.intellij.codeInsight.documentation.render.DocRenderCopyHandler"
                         id="docRender" order="first"/>
    <editorActionHandler action="EditorCut" implementationClass="com.intellij.codeInsight.editorActions.CutHandler" id="editorCut"/>
    <editorActionHandler action="EditorJoinLines" implementationClass="com.intellij.codeInsight.editorActions.JoinLinesHandler"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.codeInsight.editorActions.BackspaceHandler"
                         id="backspace.lang"/>
    <editorActionHandler action="EditorDeleteToWordStart"
                         implementationClass="com.intellij.codeInsight.editorActions.BackspaceToWordStartHandler"
                         id="backspace.to.word.start"/>
    <editorActionHandler action="BraceOrQuoteOut" implementationClass="com.intellij.codeInsight.completion.NextParameterHandler"/>
    <editorActionHandler action="EditorTab" implementationClass="com.intellij.codeInsight.completion.NextParameterHandler"/>
    <editorActionHandler action="EditorIndentSelection" implementationClass="com.intellij.codeInsight.completion.NextParameterHandler"/>
    <editorActionHandler action="EditorUnindentSelection" implementationClass="com.intellij.codeInsight.completion.PrevParameterHandler"/>
    <editorTypedHandler implementationClass="com.intellij.codeInsight.editorActions.TypedHandler" order="first"/>

    <editorActionHandler action="EditorDuplicate" id="namedElementDuplicate"
                         implementationClass="com.intellij.openapi.editor.actions.NamedElementDuplicateHandler"/>

    <!-- TemplateManagerActions -->
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.template.impl.editorActions.EscapeHandler"
                         id="templateEscape" order="before hide-hints"/>
    <editorActionHandler action="EditorEnter" implementationClass="com.intellij.codeInsight.template.impl.editorActions.EnterHandler"
                         id="templateEnter" order="before editorEnter"/>
    <editorActionHandler action="EditorLineStart"
                         implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineStartHandler"/>
    <editorActionHandler action="EditorLineStartWithSelection"
                         implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineStartWithSelectionHandler"/>
    <editorActionHandler action="EditorLineEnd"
                         implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineEndHandler"/>
    <editorActionHandler action="EditorLineEndWithSelection"
                         implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineEndWithSelectionHandler"/>
    <editorActionHandler action="$SelectAll" implementationClass="com.intellij.codeInsight.template.impl.editorActions.SelectAllHandler"/>
    <typedHandler implementation="com.intellij.codeInsight.template.impl.editorActions.SpaceHandler"/>

    <!-- HighlightManagerActions -->
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.highlighting.EscapeHandler"
                         order="after hide-hints" id="hide-search"/>

    <editorTypedHandler implementationClass="com.intellij.codeInsight.lookup.impl.LookupTypedHandler" id="lookup"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.CompletionAutoPopupHandler" id="completionAutoPopup"
                  order="first"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.SelectionQuotingTypedHandler" id="selectionQuoting"/>

    <templateCompletionProcessor implementation="com.intellij.codeInsight.template.macro.DirectoryTemplateCompletionProcessor"/>

    <liveTemplateContext id="OTHER" contextId="OTHER" implementation="com.intellij.codeInsight.template.EverywhereContextType"
                         order="last"/>

    <dynamicContextProvider implementation="com.intellij.openapi.paths.GenericDynamicContextProvider"/>

    <codeStyleSettingsProvider implementation="com.intellij.application.options.GeneralCodeStyleSettingsProvider"/>
    <codeStyleSettingsProvider implementation="com.intellij.application.options.codeStyle.OtherFileTypesCodeStyleOptionsProvider"/>

    <projectService serviceImplementation="com.intellij.ide.todo.TodoView" client="all"/>
    <projectService serviceInterface="com.intellij.ide.structureView.StructureViewFactory"
                    serviceImplementation="com.intellij.ide.structureView.impl.StructureViewFactoryImpl"/>
    <projectService serviceInterface="com.intellij.codeInspection.InspectionManager"
                    serviceImplementation="com.intellij.codeInspection.ex.InspectionManagerEx"/>
    <documentationProvider implementation="com.intellij.codeInspection.actions.InspectionDescriptionDocumentationProvider"/>

    <projectService serviceInterface="com.intellij.usageView.UsageViewContentManager"
                    serviceImplementation="com.intellij.usageView.impl.UsageViewContentManagerImpl"/>
    <applicationService serviceImplementation="com.intellij.ide.projectView.impl.ProjectViewSharedSettings"/>
    <projectService serviceInterface="com.intellij.ide.projectView.ProjectView"
                    serviceImplementation="com.intellij.ide.projectView.impl.ProjectViewImpl"/>
    <projectService serviceImplementation="com.intellij.ide.projectView.impl.ProjectViewState"/>
    <projectService serviceInterface="com.intellij.execution.ui.RunnerLayoutUi$Factory"
                    serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutUiFactoryImpl"/>

    <projectService serviceImplementation="com.intellij.codeInsight.codeVision.ui.CodeVisionView"/>
    <projectService serviceImplementation="com.intellij.codeInsight.codeVision.ui.model.ProjectCodeVisionModel"/>

    <applicationService serviceInterface="com.intellij.codeInsight.documentation.render.DocRenderItemManager"
                    serviceImplementation="com.intellij.codeInsight.documentation.render.DocRenderItemManagerImpl" />

    <http.fileEditorActionProvider implementation="com.intellij.openapi.fileEditor.impl.http.LangRemoteFileEditorActionProvider"/>

    <toolWindow id="Project" anchor="left" icon="AllIcons.Toolwindows.ToolWindowProject"
                factoryClass="com.intellij.ide.projectView.impl.ProjectViewToolWindowFactory"/>

    <postStartupActivity implementation="com.intellij.dependencytoolwindow.DependencyToolWindowFactory"/>

    <toolWindowExtractor implementation="com.intellij.dependencytoolwindow.DependencyToolWindowViewModelExtractor"/>

    <toolWindow id="Structure" anchor="left" icon="AllIcons.Toolwindows.ToolWindowStructure" secondary="true"
                factoryClass="com.intellij.ide.structureView.impl.StructureViewToolWindowFactory"/>
    <toolWindow id="Bookmarks" anchor="left" icon="AllIcons.Toolwindows.ToolWindowBookmarks" secondary="true"
                factoryClass="com.intellij.ide.bookmark.ui.BookmarksViewFactory" order="after Structure"/>
    <toolWindowExtractorMode id="Bookmarks" mode="per_client"/>


    <postStartupActivity implementation="com.intellij.ide.bookmark.BookmarksStartupActivity"/>
    <projectService serviceImplementation="com.intellij.ide.bookmark.ui.BookmarksViewStateComponent"/>
    <editorFactoryListener implementation="com.intellij.ide.bookmark.GutterLineBookmarkUpdater"/>
    <selectInTarget implementation="com.intellij.ide.bookmark.ui.BookmarksSelectInTarget"/>
    <actionPromoter implementation="com.intellij.ide.bookmark.actions.NodeMoveActionPromoter"/>

    <toolWindow id="TODO" anchor="bottom" icon="AllIcons.Toolwindows.ToolWindowTodo"
                factoryClass="com.intellij.ide.todo.TodoToolWindowFactory" canCloseContents="true"/>
    <projectService serviceImplementation="com.intellij.ide.todo.TodoViewChangesSupport"/>

    <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.JarFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.HttpFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.NullFileReferenceHelper"
                             order="last"/>
    <psi.referenceContributor implementation="com.intellij.psi.impl.source.resolve.reference.CommentsReferenceContributor"/>

    <projectConfigurable groupId="editor"
                         groupWeight="140"
                         key="file.encodings.configurable"
                         bundle="messages.IdeBundle"
                         id="File.Encoding"
                         provider="com.intellij.openapi.vfs.encoding.FileEncodingConfigurableProvider"/>
    <projectConfigurable groupId="appearance" groupWeight="112" instance="com.intellij.ui.tabs.FileColorsConfigurable"
                         id="reference.settings.ide.settings.file-colors"/>

    <uiDebuggerExtension implementation="com.intellij.ui.debugger.extensions.PlaybackDebugger"/>
    <uiDebuggerExtension implementation="com.intellij.ui.debugger.extensions.ActionTracer"/>

    <applicationService serviceImplementation="com.intellij.ui.debugger.extensions.PlaybackDebugger$PlaybackDebuggerState"/>

    <globalInspection shortName="Annotator" groupKey="inspection.general.tools.group.name" groupBundle="messages.InspectionsBundle"
                      enabledByDefault="true" level="ERROR"
                      bundle="messages.InspectionsBundle" key="inspection.annotator.display.name"
                      implementationClass="com.intellij.codeInsight.daemon.impl.HighlightVisitorBasedInspection"/>
    <localInspection shortName="LossyEncoding" bundle="messages.LangBundle" key="lossy.encoding"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.internationalization.issues" enabledByDefault="true"
                     level="WARNING"
                     implementationClass="com.intellij.codeInspection.LossyEncodingInspection"/>
    <localInspection shortName="ReassignedToPlainText" bundle="messages.InspectionsBundle" key="reassigned.to.plain.text.inspection.name"
                     groupBundle="messages.InspectionsBundle" groupKey="inspection.general.tools.group.name" enabledByDefault="true"
                     level="WARNING"
                     implementationClass="com.intellij.codeInspection.ReassignedToPlainTextInspection"/>
    <localInspection shortName="NonAsciiCharacters" bundle="messages.LangBundle" key="non.ascii.characters"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.internationalization.issues" enabledByDefault="true"
                     level="WARNING"
                     implementationClass="com.intellij.codeInspection.NonAsciiCharactersInspection"/>
    <localInspection shortName="ProblematicWhitespace" bundle="messages.LangBundle" key="problematic.whitespace.display.name"
                     groupBundle="messages.InspectionsBundle" groupKey="inspection.general.tools.group.name"
                     enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ProblematicWhitespaceInspection"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.incorrectFormatting.IncorrectFormattingInspectionMerger"/>
    <localInspection shortName="IncorrectFormatting" bundle="messages.LangBundle" key="inspection.incorrect.formatting.display.name"
                     groupBundle="messages.InspectionsBundle" groupKey="inspection.general.tools.group.name" enabledByDefault="false"
                     level="WEAK WARNING"
                     implementationClass="com.intellij.codeInspection.incorrectFormatting.IncorrectFormattingInspection"
                     runForWholeFile="true"/>
    <localInspection shortName="TodoComment" bundle="messages.LangBundle" key="todo.comment.display.name"
                     groupBundle="messages.InspectionsBundle" groupKey="inspection.general.tools.group.name" enabledByDefault="false"
                     level="WARNING" implementationClass="com.intellij.codeInspection.TodoCommentInspection"/>
    <localInspection shortName="LongLine" bundle="messages.LangBundle" key="long.line.display.name"
                     groupBundle="messages.InspectionsBundle" groupKey="inspection.general.tools.group.name" enabledByDefault="false"
                     level="WARNING" implementationClass="com.intellij.codeInspection.longLine.LongLineInspection"/>
    <globalInspection shortName="RedundantSuppression" bundle="messages.InspectionsBundle" key="inspection.redundant.suppression.name"
                      groupKey="inspection.general.tools.group.name" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.RedundantSuppressInspection"/>
    <globalInspection shortName="EmptyDirectory" bundle="messages.LangBundle" key="empty.directory.display.name"
                      groupBundle="messages.InspectionsBundle" groupKey="inspection.general.tools.group.name" enabledByDefault="false"
                      level="WARNING" implementationClass="com.intellij.codeInspection.EmptyDirectoryInspection"/>

    <annotator language="TEXT" implementationClass="com.intellij.codeInsight.highlighting.LargeFilesAnnotator"/>
    <annotator language="" implementationClass="com.intellij.codeInsight.highlighting.HyperlinkAnnotator"/>

    <problemsViewPanelProvider implementation="com.intellij.analysis.problemsView.toolWindow.ProblemsViewHighlightingPanelProvider"/>
    <problemsViewPanelProvider implementation="com.intellij.analysis.problemsView.toolWindow.ProblemsViewProjectErrorsPanelProvider"/>

    <!--<projectService serviceImplementation="com.intellij.analysis.problemsView.toolWindow.HighlightingErrorsProvider"/>-->
    <projectService serviceInterface="com.intellij.analysis.problemsView.toolWindow.HighlightingErrorsProviderBase"
                    serviceImplementation="com.intellij.analysis.problemsView.toolWindow.HighlightingErrorsProvider"/>

    <projectService serviceInterface="com.intellij.analysis.problemsView.ProblemsCollector"
                    serviceImplementation="com.intellij.analysis.problemsView.toolWindow.ProjectErrorsCollector"/>
    <projectService serviceImplementation="com.intellij.analysis.problemsView.toolWindow.ProblemsViewIconUpdater"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.analysis.problemsView.toolWindow.ProblemsViewStatsCollector"/>

    <projectViewPane implementation="com.intellij.ide.scopeView.ScopeViewPane"/>

    <renamerFactory implementation="com.intellij.refactoring.rename.RenameHandlerRenamerFactory"/>
    <renamerFactory implementation="com.intellij.refactoring.rename.impl.SymbolRenameTargetRenamerFactory"/>
    <renameHandler implementation="com.intellij.refactoring.rename.PlainDirectoryRenameHandler"/>
    <renameHandler implementation="com.intellij.refactoring.rename.inplace.VariableInplaceRenameHandler"/>
    <renameHandler implementation="com.intellij.refactoring.rename.inplace.MemberInplaceRenameHandler"/>
    <completion.contributor language="any"
                            implementationClass="com.intellij.refactoring.rename.inplace.CompletionContributorForInplaceRename"
                            order="first"/>

    <filePasteProvider implementation="com.intellij.ide.FileListPasteProvider" id="fileList"/>

    <definitionsSearch implementation="com.intellij.pom.PomDefinitionSearch"/>

    <applicationService serviceImplementation="com.intellij.ConfigurableFactory"/>

    <applicationService serviceImplementation="com.intellij.ide.todo.TodoConfiguration"/>
    <indexPatternSearch implementation="com.intellij.psi.impl.search.IndexPatternSearcher"/>
    <indexPatternProvider implementation="com.intellij.ide.todo.TodoIndexPatternProvider"/>

    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.CopyPasteIndentProcessor"/>
    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.CopyPasteFoldingProcessor"/>

    <statistics.counterUsagesCollector implementationClass="com.intellij.internal.statistic.service.fus.collectors.TooltipActionsLogger"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.refactoring.rename.RenameInplacePopupUsagesCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.refactoring.move.MoveUsagesCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.refactoring.actions.RefactoringUsageCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.webcore.packaging.PackageManagementUsageCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.codeInsight.lookup.impl.LookupUsageTracker"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.find.findUsages.FindUsagesStatisticsCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.usages.impl.UsageViewStatisticsCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.fileTypes.impl.FileTypeConfigurableInteractions"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkDownloaderLogger"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.codeInsight.daemon.impl.DaemonFusCollector"/>

    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsagesCollector"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.internal.statistic.collectors.fus.actions.persistence.ToolWindowCollector$ToolWindowUtilValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsagesCollector$ValidationRule"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsageCounterCollector$FileTypeSchemaValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.codeInsight.template.impl.LiveTemplateRunLogger$LiveTemplateValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.internal.statistic.collectors.fus.actions.persistence.ActionRuleValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.internal.statistic.eventLog.validator.rules.impl.TestModeValidationRule"/>
    <statistics.validation.customValidationRule implementation="com.intellij.internal.statistic.collectors.fus.ClassNameRuleValidator"/>
    <statistics.validation.customValidationRule implementation="com.intellij.internal.statistic.collectors.fus.MethodNameRuleValidator"/>
    <statistics.validation.customValidationRule implementation="com.intellij.internal.statistic.collectors.fus.LangCustomRuleValidator"/>
    <statistics.validation.customValidationRule implementation="com.intellij.internal.statistic.collectors.fus.PluginIdRuleValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.execution.impl.statistics.RunConfigurationTypeUsagesCollector$RunConfigurationUtilValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.execution.impl.statistics.RunConfigurationUsageTriggerCollector$RunConfigurationExecutorUtilValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.execution.impl.statistics.RunConfigurationUsageTriggerCollector$RunTargetValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.codeInsight.template.postfix.templates.PostfixTemplateLogger$PostfixTemplateValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.internal.statistic.tools.InspectionsUsagesCollector$InspectionToolValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.notification.impl.NotificationCollector$NotificationGroupValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.notification.impl.NotificationCollector$NotificationIdValidator"/>
    <statistics.validation.customValidationRule implementation="com.intellij.internal.statistic.FavoriteTypeValidationRule"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.openapi.wm.impl.status.widget.StatusBarWidgetUsagesCollector$StatusBarWidgetFactoryValidationRule"/>
    <statistics.validation.customValidationRule implementation="com.intellij.usages.impl.ScopeRuleValidator"/>

    <statistics.projectUsagesCollector implementation="com.intellij.execution.impl.statistics.RunConfigurationTypeUsagesCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.editor.EditorSettingsStatisticsCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.openapi.wm.impl.status.widget.StatusBarWidgetUsagesCollector"/>
    <statistics.projectUsagesCollector
      implementation="com.intellij.internal.statistic.editor.EditorSettingsStatisticsCollector$ProjectUsages"/>
    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.projectView.ProjectViewCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.tools.InspectionsUsagesCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.KeymapUsageCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.KeymapChangesCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.execution.dashboard.RunDashboardUsagesCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.codeInsight.hints.InlayProviderUsageCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFileCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.ui.tabs.FileColorsUsagesCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.BookmarkUsagesCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.internal.statistic.BookmarkCounterCollector"/>

    <statistics.counterUsagesCollector
      implementationClass="com.intellij.ide.actions.searcheverywhere.statistics.SearchEverywhereUsageTriggerCollector"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.ide.actions.searcheverywhere.statistics.SearchingProcessStatisticsCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.actions.runAnything.RunAnythingUsageCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.codeInsight.template.impl.SurroundWithLogger"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.find.FindUsagesCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.actions.CreateDirectoryUsageCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.refactoring.ui.RefactoringDialogUsageCollector"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.ide.projectView.impl.ProjectViewImpl$ProjectViewPaneChangesCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.execution.impl.statistics.RunConfigurationUsageTriggerCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.internal.statistic.IntentionsCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.codeInsight.template.postfix.templates.PostfixTemplateLogger"/>

    <statistics.collectorExtension implementation="com.intellij.execution.impl.statistics.RunConfigurationUsageLanguageExtension"/>
    <statistics.collectorExtension implementation="com.intellij.execution.impl.statistics.RunConfigurationTypeLanguageExtension"/>

    <statistics.counterUsagesCollector
      implementationClass="com.intellij.openapi.fileTypes.impl.associate.OSFileAssociationFeatureUsagesUtil"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.execution.target.TargetCounterUsagesCollector"/>

    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiFileProcessor" order="last" id="renamePsiFile"/>
    <renameInputValidator implementation="com.intellij.refactoring.rename.RenameToIgnoredDirectoryFileInputValidator" order="last"/>

    <refactoring.elementListenerProvider implementation="com.intellij.execution.impl.RunConfigurationRefactoringElementListenerProvider"/>
    <refactoring.elementListenerProvider implementation="com.intellij.ui.EditorNotificationsImpl$RefactoringListenerProvider"/>

    <keymapExtension implementation="com.intellij.tools.ToolKeymapExtension"/>

    <documentationProvider implementation="com.intellij.openapi.paths.WebReferenceDocumentationProvider"/>

    <refactoring.moveDirectoryWithClassesHelper
      implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper$Default" order="last"/>

    <defaultHighlightingSettingProvider id="GeneratedSourcesHighlightingSettingProvider"
                                        implementation="com.intellij.codeInsight.daemon.impl.analysis.GeneratedSourcesHighlightingSettingProvider"/>
    <editorNotificationProvider implementation="com.intellij.ide.GeneratedFileEditingNotificationProvider"/>

    <itemPresentationProvider forClass="com.intellij.psi.PsiDirectory"
                              implementationClass="com.intellij.navigation.DirectoryPresentationProvider"/>

    <projectService serviceInterface="com.intellij.openapi.module.ModulePointerManager"
                    serviceImplementation="com.intellij.openapi.module.impl.ModulePointerManagerImpl"/>
    <projectService serviceImplementation="com.intellij.openapi.module.impl.UnloadedModulesListStorage" preload="true"/>

    <customFoldingProvider implementation="com.intellij.lang.customFolding.NetBeansCustomFoldingProvider"/>
    <customFoldingProvider implementation="com.intellij.lang.customFolding.VisualStudioCustomFoldingProvider"/>

    <completion.contributor language="TEXT" implementationClass="com.intellij.util.textCompletion.TextCompletionContributor"
                            order="first, before commitCompletion"/>
    <lookup.charFilter implementation="com.intellij.util.textCompletion.TextCompletionCharFilter"/>

    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.CustomFileTypeCompletionContributor"/>
    <completion.confidence language="any" implementationClass="com.intellij.codeInsight.completion.SkipAutopopupInLargeFiles"/>

    <pathMacroFilter implementation="com.intellij.execution.configuration.RunConfigurationPathMacroFilter"/>
    <pathMacroFilter implementation="com.intellij.openapi.application.StructuralSearchPathMacroFilter"/>
    <pathMacroFilter implementation="com.intellij.openapi.application.PathMappingsMacroFilter"/>

    <postStartupActivity implementation="com.intellij.codeInsight.highlighting.BackgroundHighlighter"/>
    <usageContextPanelProvider implementation="com.intellij.usages.impl.UsagePreviewPanel$Provider"/>
    <usageContextPanelProvider implementation="com.intellij.usageView.impl.UsageContextCallHierarchyPanel$Provider"/>
    <fileDocumentSynchronizationVetoer implementation="com.intellij.codeInsight.lookup.impl.LookupDocumentSavingVetoer"/>
    <toolsProvider implementation="com.intellij.tools.LocalToolsProvider"/>

    <projectService serviceInterface="com.intellij.ide.tags.TagManager" serviceImplementation="com.intellij.ide.tags.TagManagerImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.FileModificationService"
                        serviceImplementation="com.intellij.codeInsight.CodeInsightUtilBase"/>
    <applicationService serviceInterface="com.intellij.ide.util.treeView.TreeAnchorizer"
                        serviceImplementation="com.intellij.ide.projectView.impl.nodes.PsiTreeAnchorizer"/>

    <projectStructure.sourceRootEditHandler implementation="com.intellij.openapi.roots.ui.configuration.JavaModuleSourceRootEditHandler"/>
    <projectStructure.sourceRootEditHandler implementation="com.intellij.openapi.roots.ui.configuration.JavaTestSourceRootEditHandler"/>

    <actionPromoter implementation="com.intellij.ui.EditorTextFieldActionPromoter"/>
    <actionPromoter implementation="com.intellij.codeInsight.editorActions.TabActionsPromoter"/>

    <stepsBeforeRunProvider implementation="com.intellij.execution.impl.RunConfigurationBeforeRunProvider"/>

    <lang.foldingBuilder language="TEXT" implementationClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeFoldingBuilder"/>

    <applicationService serviceImplementation="com.intellij.openapi.editor.richcopy.settings.RichCopySettings"/>
    <copyPastePostProcessor implementation="com.intellij.openapi.editor.richcopy.TextWithMarkupProcessor"/>
    <!--the following binding uses 'first' order to make sure it captures raw text before any other processor modifies it -->
    <copyPastePreProcessor implementation="com.intellij.openapi.editor.richcopy.TextWithMarkupProcessor$RawTextSetter" order="first"
                           id="richcopy"/>
    <copyPastePreProcessor implementation="com.intellij.codeInsight.editorActions.LineCommentCopyPastePreProcessor"/>

    <!-- Postfix templates -->
    <applicationService serviceImplementation="com.intellij.codeInsight.template.postfix.settings.PostfixTemplatesSettings"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.template.postfix.settings.PostfixTemplateStorage"/>
    <customLiveTemplate implementation="com.intellij.codeInsight.template.postfix.templates.PostfixLiveTemplate"/>
    <lookup.actionProvider implementation="com.intellij.codeInsight.template.postfix.completion.PostfixTemplateLookupActionProvider"/>
    <editorOptionsProvider instance="com.intellij.codeInsight.template.postfix.settings.PostfixTemplatesConfigurable"
                           id="reference.settingsdialog.IDE.editor.postfix.templates"
                           bundle="messages.IdeBundle" key="configurable.Postfix.Completion.display.name"/>
    <completion.contributor language="any"
                            implementationClass="com.intellij.codeInsight.template.postfix.completion.PostfixTemplateCompletionContributor"
                            order="last"/>

    <projectService serviceInterface="com.intellij.execution.AdditionalRunningOptions"
                    serviceImplementation="com.intellij.execution.EmptyAdditionalRunningOptions"/>
    <projectService serviceInterface="com.intellij.execution.ExecutionManager"
                    serviceImplementation="com.intellij.execution.impl.ExecutionManagerImpl"/>
    <projectService serviceInterface="com.intellij.execution.ExecutionTargetManager"
                    serviceImplementation="com.intellij.execution.ExecutionTargetManagerImpl"/>

    <projectService serviceInterface="com.intellij.execution.dashboard.RunDashboardManager"
                    serviceImplementation="com.intellij.execution.dashboard.RunDashboardManagerImpl"/>

    <notificationGroup id="JDK Update Error" displayType="STICKY_BALLOON" bundle="messages.LangBundle"
                       key="notification.group.jdk.update.error"/>
    <notificationGroup id="ColorSchemeDrop" displayType="BALLOON" hideFromSettings="true"/>
    <notificationGroup id="Services Tool Window" displayType="STICKY_BALLOON" isLogByDefault="true" bundle="messages.ExecutionBundle"
                       key="notification.group.services"
                       notificationIds="run.dashboard.multiple.run.configurations"/>
    <projectService serviceInterface="com.intellij.execution.services.ServiceViewManager"
                    serviceImplementation="com.intellij.execution.services.ServiceViewManagerImpl"/>
    <postStartupActivity implementation="com.intellij.execution.services.ServiceViewStartupActivity"/>
    <runDashboardGroupingRule implementation="com.intellij.execution.dashboard.tree.ConfigurationTypeDashboardGroupingRule"
                              id="type" order="first"/>
    <runDashboardGroupingRule implementation="com.intellij.execution.dashboard.tree.StatusDashboardGroupingRule"
                              id="status" order="after type"/>
    <runDashboardGroupingRule implementation="com.intellij.execution.dashboard.tree.FolderDashboardGroupingRule"
                              id="folder" order="after status"/>
    <actionPromoter implementation="com.intellij.execution.dashboard.actions.RunDashboardActionPromoter"/>
    <actionPromoter implementation="com.intellij.execution.services.ServiceViewActionPromoter"/>
    <serviceViewContributor implementation="com.intellij.execution.dashboard.RunDashboardServiceViewContributor"/>
    <navbar implementation="com.intellij.execution.services.ServiceViewNavBarExtension"/>
    <projectService serviceInterface="com.intellij.execution.ui.RunContentManager"
                    serviceImplementation="com.intellij.execution.ui.RunContentManagerImpl"/>

    <applicationService serviceInterface="com.intellij.find.impl.FindPopupScopeUIProvider"
                        serviceImplementation="com.intellij.find.impl.FindPopupScopeUIProviderImpl"/>
    <applicationService serviceImplementation="com.intellij.find.impl.FindInProjectExecutor"/>

    <search.optionContributor implementation="com.intellij.codeInspection.ex.InspectionSearchableOptionContributor"/>

    <statusBarWidgetFactory id="vfsRefreshWidget" implementation="com.intellij.openapi.wm.impl.status.VfsRefreshIndicatorWidgetFactory"
                            order="first"/>
    <statusBarWidgetFactory id="Position" implementation="com.intellij.openapi.wm.impl.status.PositionPanelWidgetFactory"/>
    <statusBarWidgetFactory id="LineSeparator" implementation="com.intellij.openapi.wm.impl.status.LineSeparatorWidgetFactory"
                            order="after Position"/>
    <statusBarWidgetFactory id="Encoding" implementation="com.intellij.openapi.wm.impl.status.EncodingPanelWidgetFactory"
                            order="after LineSeparator"/>
    <statusBarWidgetFactory id="PowerSaveMode" implementation="com.intellij.openapi.wm.impl.status.PowerSaveStatusWidgetFactory"
                            order="after Encoding"/>
    <statusBarWidgetFactory id="largeFileEncodingWidget"
                            implementation="com.intellij.largeFilesEditor.encoding.LargeFileEncodingWidgetFactory"
                            order="after PowerSaveMode"/>
    <statusBarWidgetFactory id="InsertOverwrite" implementation="com.intellij.openapi.wm.impl.status.ColumnSelectionModeWidgetFactory"
                            order="after largeFileEncodingWidget"/>
    <statusBarWidgetFactory id="CodeStyleStatusBarWidget"
                            implementation="com.intellij.psi.codeStyle.statusbar.CodeStyleStatusBarWidgetFactory"
                            order="after InsertOverwrite"/>
    <statusBarWidgetFactory id="ReadOnlyAttribute" implementation="com.intellij.openapi.wm.impl.status.ReadOnlyAttributeWidgetFactory"
                            order="after CodeStyleStatusBarWidget"/>
    <statusBarWidgetFactory id="inspectionProfileWidget" implementation="com.intellij.openapi.wm.impl.status.InspectionProfileWidgetFactory"
                            order="after ReadOnlyAttribute"/>

    <statusBarWidgetFactory id="Notifications" implementation="com.intellij.notification.impl.widget.NotificationWidgetFactory"
                            order="after inspectionProfileWidget"/>
    <statusBarWidgetFactory id="FatalError" implementation="com.intellij.openapi.wm.impl.status.FatalErrorWidgetFactory"
                            order="after Notifications"/>
    <statusBarWidgetFactory id="WriteThread" implementation="com.intellij.openapi.wm.impl.status.WriteThreadIndicatorWidgetFactory"
                            order="last"/>
    <statusBarWidgetFactory id="Memory" implementation="com.intellij.openapi.wm.impl.status.MemoryIndicatorWidgetFactory" order="last"/>
    <statusBarWidgetFactory id="settingsEntryPointWidget"
                            implementation="com.intellij.ide.actions.SettingsEntryPointAction$StatusBarManager" order="last"/>
    <statusBarWidgetFactory id="SmartModeIndicator"
                            implementation="com.intellij.openapi.wm.impl.status.SmartModeIndicatorWidgetFactory"/>

    <fileIndentOptionsProvider implementation="com.intellij.psi.codeStyle.DetectableIndentOptionsProvider" order="last"/>
    <lang.formatter.restriction implementation="com.intellij.formatting.ExcludedFileFormattingRestriction"/>

    <codeInsight.lineMarkerProvider language="" implementationClass="com.intellij.execution.lineMarker.RunLineMarkerProvider"/>
    <projectService serviceImplementation="com.intellij.execution.TestStateStorage"/>
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.refactoring.changeSignature.inplace.EscapeHandler"
                         id="changeSignatureEscape" order="before hide-search"/>

    <daemon.tooltipActionProvider order="last" id="defaultProvider"
                                  implementation="com.intellij.codeInsight.daemon.impl.DaemonTooltipActionProvider"/>

    <schemeExporter
      nameBundle="messages.ApplicationBundle"
      nameKey="settings.export.target.intellij.xml"
      schemeClass="com.intellij.psi.codeStyle.CodeStyleScheme"
      implementationClass="com.intellij.application.options.schemes.SerializableSchemeExporter"/>
    <schemeExporter
      nameBundle="messages.ApplicationBundle"
      nameKey="settings.export.target.color.scheme"
      schemeClass="com.intellij.openapi.editor.colors.EditorColorsScheme"
      implementationClass="com.intellij.application.options.colors.ColorSchemeExporter"/>
    <schemeExporter
      nameBundle="messages.ApplicationBundle"
      nameKey="settings.export.target.color.scheme.plugin"
      schemeClass="com.intellij.openapi.editor.colors.EditorColorsScheme"
      implementationClass="com.intellij.application.options.colors.pluginExport.ColorSchemePluginExporter"/>
    <schemeImporter
      nameBundle="messages.ApplicationBundle"
      nameKey="settings.export.target.intellij.xml"
      schemeClass="com.intellij.psi.codeStyle.CodeStyleScheme"
      implementationClass="com.intellij.psi.impl.source.codeStyle.CodeStyleSchemeXmlImporter"/>
    <schemeImporter
      nameBundle="messages.ApplicationBundle"
      nameKey="settings.import.source.color.scheme"
      schemeClass="com.intellij.openapi.editor.colors.EditorColorsScheme"
      implementationClass="com.intellij.application.options.colors.ColorSchemeImporter"/>
    <schemeExporter
      nameBundle="messages.ApplicationBundle"
      nameKey="settings.export.inspection.profile.xml"
      schemeClass="com.intellij.codeInspection.ex.InspectionProfileModifiableModel"
      implementationClass="com.intellij.application.options.schemes.SerializableSchemeExporter"/>
    <schemeImporter
      nameBundle="messages.ApplicationBundle"
      nameKey="settings.import.inspection.profile.xml"
      schemeClass="com.intellij.codeInspection.ex.InspectionProfileModifiableModel"
      implementationClass="com.intellij.profile.codeInspection.ui.InspectionProfileImporter"/>

    <nonProjectFileWritingAccessExtension implementation="com.intellij.ide.actions.EditCustomPropertiesAction$AccessExtension"/>
    <nonProjectFileWritingAccessExtension implementation="com.intellij.ide.actions.EditCustomVmOptionsAction$AccessExtension"/>
    <lineIndentProvider
      implementation="com.intellij.psi.impl.source.codeStyle.lineIndent.FormatterBasedLineIndentProvider"
      order="last"/>
    <stripTrailingSpacesFilterFactory implementation="com.intellij.psi.codeStyle.KeepTrailingSpacesOnEmptyLinesFilterFactory"/>

    <applicationService serviceImplementation="com.intellij.ide.projectView.impl.ProjectViewFileNestingService"/>
    <treeStructureProvider implementation="com.intellij.ide.projectView.impl.NestingTreeStructureProvider" order="last"/>
    <applicationService serviceImplementation="com.intellij.ide.projectView.impl.FileNestingBuilder"/>
    <refactoring.safeDeleteProcessor implementation="com.intellij.refactoring.safeDelete.RelatedFilesSafeDeleteProcessorDelegate"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.RelatedFilesRenamerFactory"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveFilesOrDirectories.MoveRelatedFilesHandler"
                             order="before moveFileOrDir"/>

    <!-- Search everywhere services/objects -->
    <applicationService serviceInterface="com.intellij.ide.actions.searcheverywhere.SearchEverywhereManager"
                        serviceImplementation="com.intellij.ide.actions.searcheverywhere.SearchEverywhereManagerImpl"/>
    <projectService serviceInterface="com.intellij.ide.actions.searcheverywhere.SearchEverywhereManager"
                    serviceImplementation="com.intellij.ide.actions.searcheverywhere.SearchEverywhereManagerImpl"/>
    <projectService serviceImplementation="com.intellij.ide.actions.runAnything.RunAnythingManager"/>

    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.ClassSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.FileSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.SymbolSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.ActionSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.CalculatorSEContributorFactory"/>

    <searchEverywhereResultsEqualityProvider implementation="com.intellij.ide.actions.searcheverywhere.TrivialElementsEqualityProvider"/>
    <searchEverywhereResultsEqualityProvider implementation="com.intellij.ide.actions.searcheverywhere.PsiElementsEqualityProvider"/>
    <searchEverywhereResultsEqualityProvider implementation="com.intellij.ide.actions.searcheverywhere.ActionsEqualityProvider"/>
    <searchEverywhereResultsEqualityProvider implementation="com.intellij.ide.actions.searcheverywhere.OptionEqualityProvider"/>

    <projectService serviceImplementation="com.intellij.ide.actions.runAnything.RunAnythingCache"/>
    <projectService serviceImplementation="com.intellij.ide.actions.runAnything.RunAnythingContextRecentDirectoryCache"/>
    <actionConfigurationCustomizer implementation="com.intellij.ide.actions.runAnything.RunAnythingAction$ShortcutTracker"/>

    <runAnything.executionProvider id="RunAnythingRunConfigurationProvider"
                                   implementation="com.intellij.ide.actions.runAnything.RunAnythingRunConfigurationProvider"/>
    <runAnything.executionProvider implementation="com.intellij.ide.actions.runAnything.activity.RunAnythingRecentProjectProvider"/>
    <runAnything.executionProvider id="recentCommandProvider"
                                   implementation="com.intellij.ide.actions.runAnything.activity.RunAnythingRecentCommandProvider"
                                   order="last"/>
    <runAnything.executionProvider implementation="com.intellij.ide.actions.runAnything.activity.RunAnythingCommandExecutionProvider"
                                   order="last"/>

    <!-- Project tasks execution (delegation of the build/run actions) -->
    <projectService serviceInterface="com.intellij.task.ProjectTaskManager"
                    serviceImplementation="com.intellij.task.impl.ProjectTaskManagerImpl"/>
    <projectService serviceInterface="com.intellij.execution.runners.ExecutionEnvironmentProvider"
                    serviceImplementation="com.intellij.task.impl.ExecutionEnvironmentProviderImpl"/>

    <!-- Build view -->
    <projectService serviceInterface="com.intellij.build.BuildContentManager"
                    serviceImplementation="com.intellij.build.BuildContentManagerImpl"/>
    <projectService serviceInterface="com.intellij.build.BuildViewManager"
                    serviceImplementation="com.intellij.build.BuildViewManager"
                    testServiceImplementation="com.intellij.build.internal.DummyBuildViewManager"/>
    <projectService serviceInterface="com.intellij.build.SyncViewManager"
                    serviceImplementation="com.intellij.build.SyncViewManager"
                    testServiceImplementation="com.intellij.build.internal.DummySyncViewManager"/>
    <projectService serviceInterface="com.intellij.build.BuildWorkspaceConfiguration"
                    serviceImplementation="com.intellij.build.BuildWorkspaceConfigurationImpl"/>
    <projectService serviceImplementation="com.intellij.build.BuildViewProblemsService"/>

    <moveLeftRightHandler language=""
                          implementationClass="com.intellij.codeInsight.editorActions.moveLeftRight.DefaultMoveElementLeftRightHandler"
                          order="last"/>

    <printHandler implementation="com.intellij.codeEditor.printing.TextPrintHandler" id="TextPrintHandler"/>
    <customFileDropHandler implementation="com.intellij.application.options.colors.EditorColorSchemeDropHandler"/>

    <editorNotificationProvider implementation="com.intellij.internal.retype.RetypeEditorNotificationProvider"/>

    <implementationViewSessionFactory implementation="com.intellij.codeInsight.hint.PsiImplementationSessionViewFactory"/>

    <!-- must be first because TextEditorProvider.getInstance search by instance of -->
    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.text.PsiAwareTextEditorProvider" id="text-editor"
                        order="first"/>

    <fileEditorProvider implementation="com.intellij.largeFilesEditor.editor.LargeFileEditorProvider"/>
    <editorNotificationProvider implementation="com.intellij.largeFilesEditor.editor.LargeFileNotificationProvider"/>
    <editorNotificationProvider implementation="com.intellij.largeFilesEditor.editor.LargeFileRegexSearchNotificationProvider"/>
    <statusBarWidgetFactory id="light.edit.large.file.encoding.widget"
                            implementation="com.intellij.largeFilesEditor.encoding.LightEditLargeFileEncodingWidgetFactory"
                            order="after LineSeparator"/>
    <experimentalFeature id="new.large.text.file.viewer" percentOfUsers="100">
      <description>A special viewer for large files. Opens automatically for text files with size more than 20Mb (default).
      </description>
    </experimentalFeature>


    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.GeneralHighlightingPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ChameleonSyntaxHighlightingPass$Factory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.InjectedGeneralHighlightingPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.LineMarkersPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.SlowLineMarkersPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ShowIntentionsPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.refactoring.changeSignature.inplace.ChangeSignaturePassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.folding.impl.CodeFoldingPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.openapi.fileEditor.impl.text.FocusModePassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.hints.ParameterHintsPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.IndentsPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.folding.impl.InjectedCodeFoldingPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.LocalInspectionsPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ShowAutoImportPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.documentation.render.DocRenderPassFactory"/>

    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.WholeFileLocalInspectionsPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ExternalToolPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.WolfPassFactory"/>

    <highlightingPassFactory implementation="com.intellij.formatting.visualLayer.VisualFormattingLayerHighlightingPassFactory"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibraryKindRegistry"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryKindRegistryImpl"
                        overrides="true"/>

    <projectService serviceInterface="com.intellij.codeInsight.daemon.impl.IntentionsUI"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.IntentionsUIImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.quickfix.UnresolvedReferenceQuickFixUpdater"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.UnresolvedReferenceQuickFixUpdaterImpl"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.CommentJoinLinesHandler" order="last"/>

    <projectService serviceImplementation="com.intellij.codeInsight.daemon.impl.EditorTracker"/>
    <editorFactoryListener implementation="com.intellij.codeInsight.daemon.impl.EditorTracker$MyAppLevelEditorFactoryListener"/>

    <projectService serviceInterface="com.intellij.codeInsight.daemon.impl.HectorComponentFactory"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.HectorComponentFactoryImpl"/>
    <editorFactoryListener implementation="com.intellij.internal.statistic.fileTypes.UpdateComponentEditorListener"/>

    <applicationService serviceImplementation="com.intellij.util.indexing.IndexableSetContributorModificationTracker"/>

    <toolWindow id="Problems View" anchor="bottom" icon="AllIcons.Toolwindows.ToolWindowProblemsEmpty" canCloseContents="true"
                factoryClass="com.intellij.analysis.problemsView.toolWindow.ProblemsView"/>
    <toolWindowExtractorMode id="Problems View" mode="per_client"/>
    <projectService serviceImplementation="com.intellij.analysis.problemsView.toolWindow.ProblemsViewStateManager"/>
    <notificationGroup id="Automatic Module Unloading" displayType="BALLOON" bundle="messages.ProjectBundle"
                       key="notification.group.automatic.module.unloading"/>
    <notificationGroup id="Execution" displayType="BALLOON" bundle="messages.ExecutionBundle" key="notification.group.execution"/>
    <notificationGroup id="Silent Execution" displayType="NONE" bundle="messages.ExecutionBundle"
                       key="notification.group.execution.silent"/>
    <notificationGroup id="Inspection Results" displayType="TOOL_WINDOW" toolWindowId="Inspection Results"
                       bundle="messages.InspectionsBundle" key="notification.group.inspection.results"/>
    <notificationGroup id="Find in Path" displayType="TOOL_WINDOW" toolWindowId="Find" isLogByDefault="false" bundle="messages.FindBundle"
                       key="find.in.files.notification.group"/>
    <notificationGroup id="Dependencies" displayType="TOOL_WINDOW" toolWindowId="Dependency Viewer" bundle="messages.CodeInsightBundle"
                       key="notification.group.dependencies"/>
    <notificationGroup id="Parameter Name Hints" displayType="BALLOON" bundle="messages.CodeInsightBundle"
                       key="notification.group.parameter.name.hints"/>
    <notificationGroup id="Print" displayType="BALLOON" hideFromSettings="true"/>
    <notificationGroup id="Project Template" displayType="BALLOON" bundle="messages.LangBundle" key="notification.group.project.template"/>
    <notificationGroup id="Reformat changed text" displayType="BALLOON" hideFromSettings="true"/>
    <notificationGroup id="Project Loading Error" displayType="BALLOON" bundle="messages.ProjectBundle"
                       key="notification.group.project.loading.error"/>
    <notificationGroup id="Run Anything" displayType="BALLOON" bundle="messages.IdeBundle"
                       key="run.anything.custom.activity.notification.group.id"/>
    <notificationGroup id="Show control flow group" displayType="BALLOON" hideFromSettings="true"/>
    <notificationGroup id="Power Save Mode" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.power.save.mode"/>
    <notificationGroup id="IDE Caches" displayType="BALLOON" bundle="messages.IndexingBundle" key="notification.group.ide.caches"/>
    <notificationGroup id="Cache Recovery" displayType="STICKY_BALLOON" bundle="messages.IdeBundle"
                       key="notification.group.cache.recovery"/>
    <notificationGroup id="Framework Detection" displayType="BALLOON" bundle="messages.ProjectBundle"
                       key="notification.group.framework.detection"/>
    <notificationGroup id="Find Problems" displayType="STICKY_BALLOON" isLogByDefault="false" hideFromSettings="true"/>
    <notificationGroup id="Missing SDKs" displayType="BALLOON" bundle="messages.ProjectBundle" key="notification.group.missing.sdks"/>
    <notificationGroup id="Automatic indent detection" displayType="STICKY_BALLOON" bundle="messages.ApplicationBundle"
                       key="notification.group.automatic.indent.detection"/>
    <notificationGroup id="Incorrect Formatting" displayType="STICKY_BALLOON" bundle="messages.LangBundle"
                       key="inspection.incorrect.formatting.notification.group"/>

    <codeInsight.lineMarkerProvider implementationClass="com.intellij.codeInsight.documentation.render.DocRenderDummyLineMarkerProvider"/>

    <psi.treeChangeListener implementation="com.intellij.openapi.fileEditor.impl.FileEditorPsiTreeChangeListener"/>

    <iconDescriptionBundle resourceBundle="messages.IdeBundle"/>

    <findInProjectSearchEngine implementation="com.intellij.find.impl.IdeaIndexBasedFindInProjectSearchEngine"/>

    <registerToolWindowTaskProvider implementation="com.intellij.facet.impl.ui.FacetDependentToolWindowManager"/>
    <postStartupActivity implementation="com.intellij.ide.script.IdeStartupScripts" order="last"/>

    <indexableFilesContributor implementation="com.intellij.util.indexing.roots.DefaultProjectIndexableFilesContributor" order="first"/>
    <indexableFilesContributor implementation="com.intellij.util.indexing.roots.AdditionalFilesContributor" order="last"
                               id="additionalFiles"/>
    <indexableFilesContributor implementation="com.intellij.util.indexing.roots.AdditionalLibraryRootsContributor" id="indexableSets"
                               order="last, after additionalFiles"/>
    <indexableFilesContributor implementation="com.intellij.util.indexing.roots.WorkspaceFileIndexContributorBasedContributor"
                               order="last, after indexableSets"/>

    <psi.treeChangePreprocessor implementation="com.intellij.util.indexing.events.FileBasedIndexTreeChangePreprocessor"/>

    <registryKey defaultValue="true" description="Use IndexableEntityProviders to iterate project for indexing"
                 key="indexing.enable.entity.provider.based.indexing"/>
    <registryKey defaultValue="2000"
                 description="Amount in milliseconds to wait for completion contributors till decide whether to insert the single item"
                 key="ide.completion.auto.insert.item.timeout"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.LibraryIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.LibraryPropertyEntityIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.ContentRootIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.CustomSourceRootPropertyIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.SourceRootIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.ModuleDependencyEntitiesIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.ModuleCustomImlDataFilesIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.ModuleGroupPathIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.JavaSourceRootPropertiesIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.JavaResourceRootPropertiesIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.JavaModuleSettingsIndexableEntityProvider"/>
    <indexableEntityProvider implementation="com.intellij.util.indexing.roots.ExcludeUrlIndexableEntityProvider"/>
    <indexableIteratorBuilderHandler implementation="com.intellij.util.indexing.roots.builders.ModuleRootsIndexableIteratorHandler"/>
    <indexableIteratorBuilderHandler implementation="com.intellij.util.indexing.roots.builders.SdkIndexableIteratorHandler"/>
    <indexableIteratorBuilderHandler implementation="com.intellij.util.indexing.roots.builders.LibraryIndexableIteratorHandler"/>
    <indexableIteratorBuilderHandler implementation="com.intellij.util.indexing.roots.builders.SyntheticLibraryIndexableIteratorHandler"/>
    <indexableIteratorBuilderHandler implementation="com.intellij.util.indexing.roots.builders.ExternalEntityIndexableIteratorHandler"/>
    <indexableIteratorBuilderHandler
      implementation="com.intellij.util.indexing.roots.builders.ModuleUnawareContentEntityIndexableIteratorHandler"/>
    <indexableIteratorBuilderHandler
      implementation="com.intellij.util.indexing.roots.builders.IndexableSetContributorIndexableIteratorHandler"/>

    <fileSetDescriptorFactory implementation="com.intellij.application.options.codeStyle.excludedFiles.NamedScopeDescriptor$Factory"/>
    <fileSetDescriptorFactory implementation="com.intellij.application.options.codeStyle.excludedFiles.GlobPatternDescriptor$Factory"/>

    <projectIndexingHistoryListener implementation="com.intellij.util.indexing.diagnostic.ProjectIndexingHistoryFusReporterListener"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.util.indexing.diagnostic.ProjectIndexingHistoryFusReporter"/>

    <advancedSetting id="ide.suppress.double.click.handler" default="false" groupKey="group.advanced.settings.ui"/>
    <advancedSetting id="ide.similar.usages.clustering.enable" default="true" groupKey="group.advanced.settings.find"/>
    <advancedSetting id="ide.usages.page.size" default="100" groupKey="group.advanced.settings.find"/>
    <advancedSetting id="bigger.font.in.project.view" default="false" groupKey="group.advanced.settings.project.view"/>
    <advancedSetting id="editor.comment.line.caret.down" default="true" groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="editor.maximize.on.double.click" default="true" groupKey="group.advanced.settings.editor.tabs"/>
    <advancedSetting id="editor.maximize.in.splits.on.double.click" default="false" groupKey="group.advanced.settings.editor.tabs"/>
    <advancedSetting id="editor.normalize.splits" default="false" groupKey="group.advanced.settings.editor.tabs"/>
    <advancedSetting id="editor.keep.pinned.tabs.on.left" default="true" groupKey="group.advanced.settings.editor.tabs"/>

    <actionOnSaveInfoProvider id="FormatOnSaveInfoProvider"
                              implementation="com.intellij.codeInsight.actions.onSave.FormatOnSaveInfoProvider"
                              order="first"/>
    <actionOnSave id="FormatOnSaveAction" implementation="com.intellij.codeInsight.actions.onSave.FormatOnSaveAction" order="first"/>
    <statistics.projectUsagesCollector implementation="com.intellij.codeInsight.actions.onSave.FormatOnSaveUsagesCollector"/>

    <recoveryAction implementation="com.intellij.util.indexing.RescanIndexesAction"/>
    <recoveryAction implementation="com.intellij.util.indexing.ReindexAction"/>
    <recoveryAction implementation="com.intellij.util.indexing.RefreshIndexableFilesAction"/>

    <postStartupActivity implementation="com.intellij.lang.documentation.ide.impl.DocumentationAutoPopup"/>
    <postStartupActivity implementation="com.intellij.codeInsight.documentation.DocumentationSettingsListener"/>
    <projectService serviceInterface="com.intellij.lang.documentation.ide.IdeDocumentationTargetProvider"
                    serviceImplementation="com.intellij.lang.documentation.ide.impl.IdeDocumentationTargetProviderImpl"/>
    <projectService serviceImplementation="com.intellij.lang.documentation.ide.impl.DocumentationPopupFocusService"/>

    <lang.formatter.restriction implementation="com.intellij.lang.InvalidPsiAutoFormatRestriction"/>

    <!--  Inspection results -->
    <inspectionResultsExportActionProvider implementation="com.intellij.codeInspection.ui.actions.ExportToHTMLAction"/>
    <inspectionResultsExportActionProvider implementation="com.intellij.codeInspection.ui.actions.ExportToXMLAction"/>
  </extensions>
  <extensions defaultExtensionNs="com.intellij.platform.backend">
    <documentation.targetProvider
      implementation="com.intellij.lang.documentation.symbol.impl.DefaultTargetSymbolDocumentationTargetProvider"/>
    <documentation.linkHandler implementation="com.intellij.lang.documentation.psi.PsiDocumentationLinkHandler"/>
  </extensions>
  <applicationListeners>
    <listener class="com.intellij.util.indexing.FileBasedIndexPluginListener" topic="com.intellij.ide.plugins.DynamicPluginListener"/>
    <listener topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"
              class="com.intellij.codeInsight.daemon.impl.EditorTracker$MyAppLevelFileEditorManagerListener"/>
  </applicationListeners>
  <projectListeners>
    <listener class="com.intellij.openapi.fileEditor.impl.FileEditorVirtualFileAppearanceListener"
              topic="com.intellij.ide.ui.VirtualFileAppearanceListener"/>
    <listener class="com.intellij.codeInsight.daemon.impl.EssentialHighlightingRestarter"
              topic="com.intellij.ide.SaveAndSyncHandlerListener"/>
    <listener class="com.intellij.codeInsight.daemon.impl.DaemonFusReporter"
              topic="com.intellij.codeInsight.daemon.DaemonCodeAnalyzer$DaemonListener"/>
  </projectListeners>
</idea-plugin>
