<idea-plugin>
  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceInterface="com.intellij.openapi.project.impl.ProjectStoreFactory"
                        serviceImplementation="com.intellij.configurationStore.PlatformLangProjectStoreFactory"
                        overrides="true"/>

    <appStarter implementation="com.intellij.codeInspection.InspectionMain"/>
    <appStarter implementation="com.intellij.ide.ui.search.TraverseUIStarter"/>
    <appStarter implementation="com.intellij.formatting.commandLine.FormatterStarter"/>

    <applicationService serviceInterface="com.intellij.util.Queries"
                        serviceImplementation="com.intellij.util.QueriesImpl"/>
    <applicationService serviceInterface="com.intellij.model.search.SearchService"
                        serviceImplementation="com.intellij.model.search.impl.SearchServiceImpl"/>

    <referencesSearch implementation="com.intellij.psi.impl.search.SearcherQueryExecutor"/>
    <referencesSearch implementation="com.intellij.psi.impl.search.CachesBasedRefSearcher"/>
    <referencesSearch implementation="com.intellij.psi.impl.search.NonPhysicalReferenceSearcher"/>

    <!-- FileBasedIndex / SerializationManager is quite important and in any case will be used, better to preload it -->
    <applicationService serviceInterface="com.intellij.util.indexing.FileBasedIndex"
                        serviceImplementation="com.intellij.util.indexing.FileBasedIndexImpl" preload="true"/>
    <vfs.asyncListener implementation="com.intellij.util.indexing.FileBasedIndexImpl$ChangedFilesCollector"/>

    <applicationService serviceInterface="com.intellij.psi.stubs.SerializationManager"
                        serviceImplementation="com.intellij.psi.stubs.SerializationManagerImpl" preload="true"/>

    <!-- required for any persistence state component (pathMacroSubstitutor.expandPaths), so, preload -->
    <applicationService serviceInterface="com.intellij.openapi.application.PathMacros"
                        serviceImplementation="com.intellij.ide.macro.IdePathMacros" preload="true"/>

    <applicationService serviceInterface="com.intellij.psi.stubs.StubIndex"
                        serviceImplementation="com.intellij.psi.stubs.StubIndexImpl" preload="true"/>

    <applicationService serviceInterface="com.intellij.codeInsight.completion.CompletionService"
                        serviceImplementation="com.intellij.codeInsight.completion.impl.CompletionServiceImpl"/>

    <applicationService serviceInterface="com.intellij.codeInspection.actions.CleanupInspectionUtil"
                        serviceImplementation="com.intellij.codeInspection.actions.CleanupInspectionUtilImpl"/>

    <applicationService serviceInterface="com.intellij.lang.cacheBuilder.CacheBuilderRegistry"
                        serviceImplementation="com.intellij.lang.cacheBuilder.CacheBuilderRegistryImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.intention.IntentionManager"
                        serviceImplementation="com.intellij.codeInsight.intention.impl.config.IntentionManagerImpl"/>
    <applicationService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.CodeStyleFacadeImpl"/>

    <applicationService serviceInterface="com.intellij.concurrency.JobLauncher"
                        serviceImplementation="com.intellij.concurrency.JobLauncherImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.project.ProjectLocator"
                        serviceImplementation="com.intellij.openapi.project.ProjectLocatorImpl"/>

    <applicationService serviceImplementation="com.intellij.packageDependencies.DependencyUISettings"/>

    <applicationService serviceImplementation="com.intellij.refactoring.rename.RenameHandlerRegistry"/>

    <applicationService serviceImplementation="com.intellij.tools.ToolManager"/>

    <projectService serviceInterface="com.intellij.ide.fileTemplates.FileTemplateManager"
                    serviceImplementation="com.intellij.ide.fileTemplates.impl.FileTemplateManagerImpl"/>
    <projectService serviceImplementation="com.intellij.ide.fileTemplates.impl.FileTemplateSettings"/>
    <applicationService serviceImplementation="com.intellij.ide.fileTemplates.impl.ExportableFileTemplateSettings"/>

    <applicationService serviceImplementation="com.intellij.usages.UsageViewSettings"/>
    <applicationService serviceImplementation="com.intellij.usages.ShowUsagesSettings"/>
    <applicationService serviceImplementation="com.intellij.refactoring.RefactoringSettings"/>
    <applicationService serviceInterface="com.intellij.refactoring.RefactoringActionHandlerFactory"
                        serviceImplementation="com.intellij.refactoring.openapi.impl.RefactoringActionHandlerFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.execution.filters.TextConsoleBuilderFactory"
                        serviceImplementation="com.intellij.execution.filters.TextConsoleBuilderFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.execution.filters.HyperlinkInfoFactory"
                        serviceImplementation="com.intellij.execution.filters.impl.HyperlinkInfoFactoryImpl"/>
    <consoleFilterProvider implementation="com.intellij.execution.filters.UrlFilter$UrlFilterProvider"/>

    <applicationService serviceInterface="com.intellij.lang.PsiBuilderFactory"
                        serviceImplementation="com.intellij.lang.impl.PsiBuilderFactoryImpl"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.documentation.DocumentationManagerUtil"/>

    <applicationService serviceInterface="com.intellij.ide.PsiActionSupportFactory"
                        serviceImplementation="com.intellij.ide.PsiActionSupportFactoryImpl"/>
    <applicationService serviceImplementation="com.intellij.codeInspection.ex.InspectionToolRegistrar"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.template.impl.TemplateSettings"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.template.impl.ExportableTemplateSettings"/>
    <applicationService serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"/>

    <applicationService serviceImplementation="com.intellij.codeEditor.printing.PrintSettings"/>
    <applicationService serviceInterface="com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettings"
                        serviceImplementation="com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettingsImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.daemon.LineMarkerSettings"
                        serviceImplementation="com.intellij.codeInsight.daemon.impl.LineMarkerSettingsImpl"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.actions.FormatChangedTextUtil"/>

    <applicationService serviceInterface="com.intellij.facet.FacetTypeRegistry"
                        serviceImplementation="com.intellij.facet.impl.FacetTypeRegistryImpl"/>

    <projectService serviceInterface="com.intellij.openapi.roots.impl.DirectoryIndex"
                    serviceImplementation="com.intellij.openapi.roots.impl.DirectoryIndexImpl" preload="true"/>
    <projectService serviceInterface="com.intellij.psi.PsiManager"
                    serviceImplementation="com.intellij.psi.impl.PsiManagerImpl" preload="true"/>
    <projectService serviceInterface="com.intellij.psi.PsiDocumentManager"
                    serviceImplementation="com.intellij.psi.impl.PsiDocumentManagerImpl" preload="await"/>

    <projectService serviceInterface="com.intellij.util.indexing.FileBasedIndexScanRunnableCollector"
                    serviceImplementation="com.intellij.util.indexing.FileBasedIndexScanRunnableCollectorImpl"/>

    <projectService serviceInterface="com.intellij.pom.references.PomService"
                    serviceImplementation="com.intellij.pom.references.PomServiceImpl"/>

    <projectService serviceInterface="com.intellij.psi.search.PsiSearchHelper"
                    serviceImplementation="com.intellij.psi.impl.search.PsiSearchHelperImpl"/>

    <projectService serviceInterface="com.intellij.psi.search.PsiTodoSearchHelper"
                    serviceImplementation="com.intellij.psi.impl.search.PsiTodoSearchHelperImpl"/>

    <projectService serviceInterface="com.intellij.codeInsight.lookup.LookupManager"
                    serviceImplementation="com.intellij.codeInsight.lookup.impl.LookupManagerImpl"/>

    <applicationService serviceInterface="com.intellij.psi.meta.MetaDataRegistrar"
                        serviceImplementation="com.intellij.psi.impl.meta.MetaRegistry"/>

    <applicationService serviceInterface="com.intellij.openapi.paths.PathReferenceManager"
                        serviceImplementation="com.intellij.openapi.paths.PathReferenceManagerImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.folding.CodeFoldingSettings"
                        serviceImplementation="com.intellij.codeInsight.folding.CodeFoldingSettingsImpl"/>
    <postStartupActivity implementation="com.intellij.codeInsight.folding.impl.FoldingHintPostStartupActivity"/>
    <projectService serviceInterface="com.intellij.codeInsight.folding.CodeFoldingManager"
                    serviceImplementation="com.intellij.codeInsight.folding.impl.CodeFoldingManagerImpl"/>

    <applicationService serviceInterface="com.intellij.psi.statistics.StatisticsManager"
                        serviceImplementation="com.intellij.psi.statistics.impl.StatisticsManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings"/>

    <applicationService serviceInterface="com.intellij.find.FindSettings"
                        serviceImplementation="com.intellij.find.impl.FindSettingsImpl"/>
    <applicationService serviceImplementation="com.intellij.find.impl.FindSettingsImpl$FindRecents"/>
    <projectService serviceInterface="com.intellij.find.FindInProjectSettings" serviceImplementation="com.intellij.find.impl.FindInProjectRecents"/>
    <pathMacroFilter implementation="com.intellij.find.impl.FindInProjectSettingsBase$FindInProjectPathMacroFilter"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.CodeInsightSettings"/>
    <projectService serviceImplementation="com.intellij.codeInsight.CodeInsightWorkspaceSettings"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.impl.libraries.ApplicationLibraryTable"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.ExportableApplicationLibraryTable"/>

    <applicationService serviceInterface="com.intellij.psi.codeStyle.CodeStyleSchemes"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.PersistableCodeStyleSchemes"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibraryTablesRegistrar"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryTablesRegistrarImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibraryDetectionManager"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryDetectionManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibraryTypeService"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryTypeServiceImpl"/>

    <projectService serviceInterface="com.intellij.openapi.roots.impl.ModifiableModelCommitterService"
                    serviceImplementation="com.intellij.openapi.roots.impl.ModifiableModelCommitterServiceImpl"/>

    <applicationService serviceInterface="com.intellij.ui.IconDeferrer"
                        serviceImplementation="com.intellij.ui.IconDeferrerImpl"/>

    <applicationService serviceInterface="com.intellij.ui.mac.MacMessagesEmulation"
                        serviceImplementation="com.intellij.ui.messages.JBMacMessages"/>

    <applicationService serviceImplementation="com.intellij.psi.codeStyle.AppCodeStyleSettingsManager"/>

    <applicationService serviceImplementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.FileInfoManager"/>
    <applicationService serviceInterface="com.intellij.psi.search.PredefinedSearchScopeProvider"
                        serviceImplementation="com.intellij.psi.search.PredefinedSearchScopeProviderImpl"/>

    <applicationService serviceInterface="com.intellij.psi.PsiReferenceService"
                        serviceImplementation="com.intellij.psi.PsiReferenceServiceImpl"/>

    <applicationService serviceInterface="com.intellij.patterns.compiler.PatternCompilerFactory"
                        serviceImplementation="com.intellij.patterns.compiler.PatternCompilerFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.util.download.DownloadableFileService"
                        serviceImplementation="com.intellij.util.download.impl.DownloadableFileServiceImpl"/>

    <applicationService serviceInterface="com.intellij.psi.impl.DocumentCommitProcessor"
                        serviceImplementation="com.intellij.psi.impl.DocumentCommitThread"/>

    <applicationService serviceInterface="com.intellij.psi.stubs.StubTreeLoader"
                        serviceImplementation="com.intellij.psi.stubs.StubTreeLoaderImpl"/>

    <applicationService serviceInterface="com.intellij.ide.util.PsiNavigationSupport"
                        serviceImplementation="com.intellij.ide.util.PsiNavigationSupportImpl"/>

    <applicationService serviceInterface="com.intellij.psi.impl.source.codeStyle.IndentHelper"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.IndentHelperImpl"/>

    <applicationService serviceInterface="com.intellij.lang.DefaultASTFactory"
                        serviceImplementation="com.intellij.lang.DefaultASTFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.conversion.ConversionService"
                        serviceImplementation="com.intellij.impl.ConversionServiceImpl"/>

    <applicationService serviceInterface="com.intellij.psi.search.searches.IndexPatternSearch"
                        serviceImplementation="com.intellij.psi.impl.search.IndexPatternSearchImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.fileEditor.UniqueVFilePathBuilder"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.UniqueVFilePathBuilderImpl"/>

    <applicationService serviceImplementation="com.intellij.psi.codeStyle.arrangement.MemberOrderService"/>

    <applicationService serviceInterface="com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceCompletion"
                        serviceImplementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceCompletionImpl"/>

    <applicationService serviceInterface="com.intellij.psi.util.PsiEditorUtil"
                        serviceImplementation="com.intellij.psi.util.PsiUtilBase"/>

    <applicationService serviceImplementation="com.intellij.lang.IdeLanguageCustomization"/>

    <rearranger.ui implementation="com.intellij.application.options.codeStyle.arrangement.component.DefaultArrangementUiComponentFactory"/>

    <applicationService serviceInterface="com.intellij.ui.EditorTextFieldProvider"
                        serviceImplementation="com.intellij.ui.EditorTextFieldProviderImpl"/>
    <applicationService serviceInterface="com.intellij.util.gist.GistManager" serviceImplementation="com.intellij.util.gist.GistManagerImpl"/>

    <applicationService serviceInterface="com.intellij.formatting.Formatter" serviceImplementation="com.intellij.formatting.FormatterImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.editorActions.TabOutScopesTracker"
                        serviceImplementation="com.intellij.codeInsight.editorActions.TabOutScopesTrackerImpl"/>

    <projectService serviceImplementation="com.intellij.psi.codeStyle.ProjectCodeStyleSettingsManager" preload="true"/>

    <projectService serviceImplementation="com.intellij.psi.codeStyle.LegacyCodeStyleSettingsManager"/>

    <projectService serviceInterface="com.intellij.codeInsight.daemon.impl.analysis.HighlightingLevelManager"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile"/>

    <projectService serviceImplementation="com.intellij.find.findInProject.FindInProjectManager"/>
    <projectService serviceImplementation="com.intellij.find.replaceInProject.ReplaceInProjectManager"/>
    <projectService serviceInterface="com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.TextEditorHighlightingPassRegistrarImpl"/>
    <projectService serviceInterface="com.intellij.psi.PsiFileFactory"
                    serviceImplementation="com.intellij.psi.impl.PsiFileFactoryImpl"/>
    <projectService serviceInterface="com.intellij.psi.text.BlockSupport"
                    serviceImplementation="com.intellij.psi.impl.BlockSupportImpl"/>
    <projectService serviceInterface="com.intellij.psi.SmartPointerManager"
                    serviceImplementation="com.intellij.psi.impl.smartPointers.SmartPointerManagerImpl"/>
    <projectService serviceInterface="com.intellij.psi.codeStyle.CodeStyleManager"
                    serviceImplementation="com.intellij.psi.impl.source.codeStyle.CodeStyleManagerImpl"/>
    <projectService serviceInterface="com.intellij.pom.PomModel"
                    serviceImplementation="com.intellij.pom.core.impl.PomModelImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.include.FileIncludeManager"
                    serviceImplementation="com.intellij.psi.impl.include.FileIncludeManagerImpl"/>
    <projectService serviceInterface="com.intellij.util.CachedValuesFactory"
                    serviceImplementation="com.intellij.psi.impl.PsiCachedValuesFactory"/>

    <projectService serviceInterface="com.intellij.openapi.roots.impl.libraries.ProjectLibraryTable"
                    serviceImplementation="com.intellij.openapi.roots.impl.libraries.ProjectLibraryTableImpl"/>

    <projectService serviceInterface="com.intellij.psi.search.ProjectScopeBuilder"
                    serviceImplementation="com.intellij.psi.search.ProjectScopeBuilderImpl"/>

    <projectService serviceInterface="com.intellij.facet.ProjectWideFacetListenersRegistry"
                    serviceImplementation="com.intellij.facet.impl.ProjectWideFacetListenersRegistryImpl"/>

    <projectService serviceInterface="com.intellij.facet.FacetFinder" serviceImplementation="com.intellij.facet.impl.FacetFinderImpl"/>

    <projectService serviceInterface="com.intellij.facet.ProjectFacetManager"
                    serviceImplementation="com.intellij.facet.impl.ProjectFacetManagerImpl"/>
    <applicationService serviceImplementation="com.intellij.facet.impl.invalid.InvalidFacetType"/>
    <projectService serviceInterface="com.intellij.facet.impl.invalid.InvalidFacetManager"
                    serviceImplementation="com.intellij.facet.impl.invalid.InvalidFacetManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.module.ProjectLoadingErrorsNotifier"
                    serviceImplementation="com.intellij.openapi.module.impl.ProjectLoadingErrorsNotifierImpl"
                    testServiceImplementation="com.intellij.openapi.module.impl.ProjectLoadingErrorsHeadlessNotifier"/>
    <projectService serviceImplementation="com.intellij.openapi.module.impl.AutomaticModuleUnloader"/>

    <applicationService serviceInterface="com.intellij.openapi.module.ModuleTypeManager"
                        serviceImplementation="com.intellij.openapi.module.impl.ModuleTypeManagerImpl"/>

    <moduleService serviceInterface="com.intellij.facet.FacetModificationTrackingService"
                   serviceImplementation="com.intellij.facet.impl.FacetModificationTrackingServiceImpl"/>
    <moduleService serviceImplementation="com.intellij.facet.FacetFromExternalSourcesStorage"/>

    <applicationService serviceInterface="com.intellij.framework.detection.impl.FrameworkDetectorRegistry"
                        serviceImplementation="com.intellij.framework.detection.impl.FrameworkDetectorRegistryImpl"/>
    <fileBasedIndex implementation="com.intellij.framework.detection.impl.FrameworkDetectionIndex"/>
    <projectService serviceInterface="com.intellij.framework.detection.DetectionExcludesConfiguration"
                    serviceImplementation="com.intellij.framework.detection.impl.exclude.DetectionExcludesConfigurationImpl"/>
    <projectService serviceImplementation="com.intellij.framework.detection.impl.exclude.old.OldFacetDetectionExcludesConfiguration"/>

    <projectService serviceInterface="com.intellij.codeInsight.AutoPopupController"
                    serviceImplementation="com.intellij.codeInsight.AutoPopupControllerImpl"/>

    <projectService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                    serviceImplementation="com.intellij.psi.impl.source.codeStyle.CodeStyleFacadeImpl"/>

    <projectService serviceInterface="com.intellij.usages.UsageViewManager"
                    serviceImplementation="com.intellij.usages.impl.UsageViewManagerImpl"/>

    <projectService serviceImplementation="com.intellij.analysis.AnalysisUIOptions"/>

    <projectService serviceInterface="com.intellij.ide.util.gotoByName.ChooseByNameFactory"
                    serviceImplementation="com.intellij.ide.util.gotoByName.ChooseByNameFactoryImpl"/>

    <projectService serviceInterface="com.intellij.refactoring.listeners.RefactoringListenerManager"
                    serviceImplementation="com.intellij.refactoring.listeners.impl.RefactoringListenerManagerImpl"/>

    <projectService serviceInterface="com.intellij.util.LogicalRootsManager"
                    serviceImplementation="com.intellij.util.LogicalRootsManagerImpl"/>

    <projectService serviceImplementation="com.intellij.codeEditor.printing.ExportToHTMLSettings"/>

    <projectService serviceImplementation="com.intellij.diagnostic.logging.LogConsolePreferences"/>

    <applicationService serviceInterface="com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry"
                        serviceImplementation="com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl"/>

    <projectService serviceInterface="com.intellij.find.FindManager"
                    serviceImplementation="com.intellij.find.impl.FindManagerImpl"/>

    <projectService serviceInterface="com.intellij.psi.PsiParserFacade"
                    serviceImplementation="com.intellij.psi.impl.PsiParserFacadeImpl"/>

    <projectService serviceImplementation="com.intellij.ide.util.gotoByName.GotoFileConfiguration"/>
    <projectService serviceImplementation="com.intellij.ide.util.gotoByName.GotoClassSymbolConfiguration"/>
    <projectService serviceImplementation="com.intellij.ide.util.gotoByName.SearchEverywhereConfiguration"/>

    <projectService serviceImplementation="com.intellij.ide.hierarchy.HierarchyBrowserManager"/>

    <projectService serviceImplementation="com.intellij.psi.search.scope.packageSet.NamedScopeManager"/>
    <projectService serviceInterface="com.intellij.packageDependencies.DependencyValidationManager"
                    serviceImplementation="com.intellij.packageDependencies.DependencyValidationManagerImpl"/>
    <projectService serviceImplementation="com.intellij.packageDependencies.DependenciesToolWindow"/>

    <projectService serviceImplementation="com.intellij.codeInsight.documentation.DocumentationManager"/>

    <projectService serviceImplementation="com.intellij.moduleDependencies.DependenciesAnalyzeManager"/>

    <projectService serviceInterface="com.intellij.ide.util.TreeFileChooserFactory"
                    serviceImplementation="com.intellij.ide.util.TreeFileChooserFactoryImpl"/>

    <projectService serviceInterface="com.intellij.psi.impl.cache.CacheManager"
                    serviceImplementation="com.intellij.psi.impl.cache.impl.IndexCacheManagerImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.cache.TodoCacheManager"
                    serviceImplementation="com.intellij.psi.impl.cache.impl.IndexTodoCacheManagerImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.ResolveScopeManager"
                    serviceImplementation="com.intellij.psi.impl.file.impl.ResolveScopeManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ProjectFileIndex"
                    serviceImplementation="com.intellij.openapi.roots.impl.ProjectFileIndexImpl"/>
    <testSourcesFilter implementation="com.intellij.openapi.roots.ProjectRootTestSourcesFilter"/>
    <moduleService serviceInterface="com.intellij.openapi.roots.ModuleFileIndex"
                   serviceImplementation="com.intellij.openapi.roots.impl.ModuleFileIndexImpl"/>
    <projectService serviceImplementation="com.intellij.psi.impl.source.resolve.ResolveCache"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ProjectRootModificationTracker"
                    serviceImplementation="com.intellij.openapi.roots.ProjectRootModificationTrackerImpl"/>

    <projectService serviceInterface="com.intellij.ui.FileColorManager"
                    serviceImplementation="com.intellij.ui.tabs.FileColorManagerImpl"/>

    <projectService serviceImplementation="com.intellij.openapi.roots.impl.LibraryScopeCache"/>

    <projectService serviceImplementation="com.intellij.slicer.SliceToolwindowSettings"/>
    <projectService serviceImplementation="com.intellij.slicer.SliceManager"/>

    <projectService serviceInterface="com.intellij.codeInsight.highlighting.HighlightManager"
                    serviceImplementation="com.intellij.codeInsight.highlighting.HighlightManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ExternalProjectSystemRegistry"
                        serviceImplementation="com.intellij.openapi.roots.impl.ExternalProjectSystemRegistryImpl"/>
    <moduleService serviceInterface="com.intellij.openapi.components.impl.stores.IComponentStore"
                   serviceImplementation="com.intellij.configurationStore.ModuleStoreImpl"
                   testServiceImplementation="com.intellij.configurationStore.TestModuleStore"/>
    <moduleService serviceInterface="com.intellij.openapi.roots.TestModuleProperties"
                   serviceImplementation="com.intellij.openapi.roots.impl.TestModulePropertiesImpl"/>

    <moduleService serviceImplementation="com.intellij.openapi.module.impl.ModuleImpl$DeprecatedModuleOptionManager"/>
    <moduleService serviceInterface="com.intellij.openapi.components.PathMacroManager" serviceImplementation="com.intellij.openapi.components.impl.ModulePathMacroManager"/>

    <applicationService serviceInterface="com.intellij.ide.scratch.ScratchFileService"
                        serviceImplementation="com.intellij.ide.scratch.ScratchFileServiceImpl"/>
    <projectViewPane implementation="com.intellij.ide.scratch.ScratchProjectViewPane"/>
    <treeStructureProvider implementation="com.intellij.ide.scratch.ScratchProjectViewPane$MyStructureProvider" order="last"/>

    <fileType name="Scratch" implementationClass="com.intellij.ide.scratch.ScratchFileType" fieldName="INSTANCE"/>
    <navbar implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$NavBarExtension"/>
    <lang.substitutor language="TEXT" implementationClass="com.intellij.ide.scratch.ScratchFileServiceImpl$Substitutor" order="first"/>
    <nonProjectFileWritingAccessExtension implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$AccessExtension"/>
    <fileIconProvider implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$FilePresentation"/>
    <editorTabTitleProvider implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$FilePresentation"/>
    <syntaxHighlighter factoryClass="com.intellij.ide.scratch.ScratchFileServiceImpl$Highlighter" order="first"/>
    <indexedRootsProvider implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$IndexSetContributor"/>
    <useScopeEnlarger implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$UseScopeExtension"/>
    <usageTypeProvider implementation="com.intellij.ide.scratch.ScratchFileServiceImpl$UsageTypeExtension" order="last"/>

    <scratch.rootType implementation="com.intellij.ide.scratch.ScratchRootType"/>
    <scratch.rootType implementation="com.intellij.execution.console.HistoryRootType"/>
    <scratch.rootType implementation="com.intellij.execution.console.IdeConsoleRootType"/>

    <!--  Inlay hints  -->
    <applicationService serviceImplementation="com.intellij.codeInsight.daemon.impl.ParameterHintsPresentationManager"/>
    <postStartupActivity implementation="com.intellij.codeInsight.hints.presentation.PresentationMouseHandler"/>
    <postStartupActivity implementation="com.intellij.codeInsight.hints.ParameterHintsSettingsMigration"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.hints.InlayHintsPassFactory"/>

    <projectConfigurable instance="com.intellij.codeInsight.hints.settings.InlayHintsConfigurable"
                         id="inlay.hints"
                         parentId="editor"
                         key="settings.hints"
                         bundle="messages.ApplicationBundle"
                         dynamic="true"
                         groupWeight="1"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.hints.InlayHintsSettings"/>
    <codeInsight.inlayProviderFactory implementation="com.intellij.codeInsight.hints.SingleLanguageInlayProviderFactory"/>

    <projectService serviceImplementation="com.intellij.codeInsight.daemon.impl.ErrorStripeUpdateManager"/>

    <!-- Extension resources -->
    <applicationService serviceImplementation="com.intellij.ide.extensionResources.ResourceVersions"/>
    <scratch.rootType implementation="com.intellij.ide.extensionResources.ExtensionsRootType"/>

    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.GeneralColorsPage" id="general"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.DefaultLanguageColorsPage" id="defaultLanguage"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.ANSIColoredConsoleColorsPage" id="ansi"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.CustomColorsPage" id="custom"/>

    <elementDescriptionProvider implementation="com.intellij.psi.impl.DefaultPomTargetDescriptionProvider" order="last" id="pomDefault"/>

    <applicationService serviceImplementation="com.intellij.codeInspection.ex.AppInspectionProfilesVisibleTreeState"/>
    <projectService serviceImplementation="com.intellij.codeInspection.ex.ProjectInspectionProfilesVisibleTreeState"/>

    <!-- Editor -->
    <search.topHitProvider implementation="com.intellij.application.options.editor.EditorOptionsTopHitProvider"/>
    <applicationConfigurable groupId="editor" groupWeight="190" instance="com.intellij.application.options.editor.EditorOptionsPanel" id="preferences.editor" key="title.editor"
                             bundle="messages.ApplicationBundle" order="after preferences.lookFeel"
                             childrenEPName="com.intellij.editorOptionsProvider"/>
    <applicationConfigurable parentId="preferences.editor" instance="com.intellij.execution.console.ConsoleConfigurable" id="Console"
                             displayName="Console"/>

    <projectService serviceInterface="com.intellij.semantic.SemService" serviceImplementation="com.intellij.semantic.SemServiceImpl"/>

    <!-- Global Code Style -->
    <projectConfigurable groupId="editor" groupWeight="170" dynamic="true" displayName="Code Style" id="preferences.sourceCode" instance="com.intellij.application.options.CodeStyleSchemesConfigurable" order="after colors"/>
    <applicationService serviceImplementation="com.intellij.application.options.codeStyle.CodeStyleSchemesUIConfiguration"/>

    <!-- File Types -->
    <applicationConfigurable groupId="editor" groupWeight="120" instance="com.intellij.openapi.fileTypes.impl.FileTypeConfigurable" id="preferences.fileTypes"
                             key="filetype.settings.title" bundle="messages.FileTypesBundle"/>

    <search.topHitProvider implementation="com.intellij.codeInsight.intention.impl.config.IntentionsOptionsTopHitProvider"/>
    <applicationConfigurable groupId="editor" key="intention.settings" bundle="messages.CodeInsightBundle" provider="com.intellij.codeInsight.intention.impl.config.IntentionsConfigurableProviderImpl" id="preferences.intentionPowerPack"/>

    <!-- Live Templates -->
    <search.topHitProvider implementation="com.intellij.codeInsight.template.impl.LiveTemplatesOptionsTopHitProvider"/>
    <applicationConfigurable groupId="editor" groupWeight="130" instance="com.intellij.codeInsight.template.impl.LiveTemplatesConfigurable" id="editing.templates"
                             key="templates.settings.page.title" bundle="messages.CodeInsightBundle"/>
    <search.optionContributor implementation="com.intellij.codeInsight.template.impl.TemplateSearchableOptionContributor"/>
    <lookup.actionProvider implementation="com.intellij.codeInsight.template.impl.LiveTemplateLookupActionProvider"/>
    <documentationProvider implementation="com.intellij.codeInsight.template.impl.LiveTemplateDocumentationProvider"/>
    <projectService serviceInterface="com.intellij.codeInsight.template.TemplateManager"
                    serviceImplementation="com.intellij.codeInsight.template.impl.TemplateManagerImpl"/>

    <!-- File Templates-->
    <projectConfigurable groupId="editor" groupWeight="150" provider="com.intellij.ide.fileTemplates.impl.AllFileTemplatesConfigurable$Provider" id="fileTemplates"
                         key="title.file.templates" bundle="messages.IdeBundle"/>

    <!-- T.O.D.O -->
    <applicationConfigurable groupId="editor" instance="com.intellij.ide.todo.configurable.TodoConfigurable" id="preferences.toDoOptions" key="title.todo"
                             bundle="messages.IdeBundle"/>

    <!-- External Tools -->
    <applicationConfigurable groupId="tools" groupWeight="140" instance="com.intellij.tools.ToolConfigurable" id="preferences.externalTools" key="tools.settings.title"
                             bundle="messages.ToolsBundle"/>
    <stepsBeforeRunProvider implementation="com.intellij.tools.ToolBeforeRunTaskProvider"/>
    <checkinHandlerFactory implementation="com.intellij.tools.ExternalToolsCheckinHandlerFactory"/>
    <projectService serviceImplementation="com.intellij.tools.ToolsProjectConfig"/>

    <bidiRegionsSeparator language="" implementationClass="com.intellij.openapi.editor.bidi.PlainTextBidiRegionsSeparator"/>

    <lang.parserDefinition language="TEXT" implementationClass="com.intellij.openapi.fileTypes.PlainTextParserDefinition"/>
    <lang.syntaxHighlighterFactory language="TEXT" implementationClass="com.intellij.openapi.fileTypes.PlainTextSyntaxHighlighterFactory"/>
    <lang.braceMatcher language="TEXT" implementationClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeBraceMatcher"/>
    <lang.quoteHandler language="TEXT" implementationClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeQuoteHandler"/>
    <lang.ast.factory language="TEXT" implementationClass="com.intellij.psi.impl.source.tree.PlainTextASTFactory"/>

    <getDataRule key="psi.File" implementationClass="com.intellij.ide.impl.dataRules.PsiFileRule"/>
    <getDataRule key="psi.Element" implementationClass="com.intellij.ide.impl.dataRules.PsiElementFromSelectionRule"/>
    <getDataRule key="psi.Element.array" implementationClass="com.intellij.ide.impl.dataRules.PsiElementFromSelectionsRule"/>
    <getDataRule key="psi.pasteTargetElement" implementationClass="com.intellij.ide.impl.dataRules.PasteTargetRule"/>
    <getDataRule key="virtualFile" implementationClass="com.intellij.ide.impl.dataRules.VirtualFileRule"/>
    <getDataRule key="virtualFileArray" implementationClass="com.intellij.ide.impl.dataRules.VirtualFileArrayRule"/>
    <getDataRule key="Navigatable" implementationClass="com.intellij.ide.impl.dataRules.NavigatableRule"/>
    <getDataRule key="usageTarget" implementationClass="com.intellij.ide.impl.dataRules.UsageTargetsRule"/>
    <getDataRule key="UsageInfo.List" implementationClass="com.intellij.ide.impl.dataRules.UsageInfo2ListRule"/>
    <getDataRule key="module" implementationClass="com.intellij.ide.impl.dataRules.ModuleRule"/>

    <dataValidator key="psi.File" implementationClass="com.intellij.ide.impl.PsiElementDataValidator"/>
    <dataValidator key="psi.Element" implementationClass="com.intellij.ide.impl.PsiElementDataValidator"/>
    <dataValidator key="psi.Element.array" implementationClass="com.intellij.ide.impl.PsiElementArrayDataValidator"/>
    <dataValidator key="module" implementationClass="com.intellij.ide.impl.ModuleDataValidator"/>

    <patternDialectProvider implementation="com.intellij.packageDependencies.ui.ProjectPatternProvider" id="file"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.DefaultScopesProvider" id="default" order="first"/>
    <customScopesProvider implementation="com.intellij.psi.search.scope.ProblemsScope$Provider" order="last"/>
    <customScopesProvider implementation="com.intellij.openapi.fileEditor.impl.OpenFilesScope$Provider" order="last"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.ChangeListsScopesProvider" order="last"/>

    <searchScopesProvider implementation="com.intellij.psi.search.DefaultSearchScopeProviders$Favorites"/>
    <searchScopesProvider implementation="com.intellij.psi.search.DefaultSearchScopeProviders$ChangeLists"/>
    <searchScopesProvider implementation="com.intellij.psi.search.DefaultSearchScopeProviders$CustomNamed" order="last"/>

    <refactoring.elementListenerProvider implementation="com.intellij.packageDependencies.ui.RefactoringScopeElementListenerProvider"/>

    <highlightVisitor implementation="com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor"/>
    <daemon.changeLocalityDetector implementation="com.intellij.codeInsight.daemon.impl.DefaultChangeLocalityDetector"/>
    <daemon.changeLocalityDetector implementation="com.intellij.ide.todo.MultiLineTodoLocalityDetector"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentDateMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentTimeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentUserMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ClipboardMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CapitalizeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.DecapitalizeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FirstWordMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.EscapeStringMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ReplaceUnderscoresWithSpacesMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ReplaceSpacesWithUnderscoresMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.LineNumberMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FilePathMacroBase$FileNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FilePathMacroBase$FileNameWithoutExtensionMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FilePathMacroBase$FilePathMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FilePathMacroBase$FileRelativePathMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ConvertToCamelCaseMacro$ReplaceUnderscoresToCamelCaseMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ConvertToCamelCaseMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CapitalizeAndUnderscoreMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SplitWordsMacro$SnakeCaseMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SplitWordsMacro$LowercaseAndDash"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SplitWordsMacro$SpaceSeparated"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ConcatMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.GroovyScriptMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CompleteMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ShowParameterInfoMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CompleteSmartMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ClassNameCompleteMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SubstringBeforeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.RegExMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CommentMacro$LineCommentStart"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CommentMacro$BlockCommentStart"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CommentMacro$BlockCommentEnd"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CommentMacro$AnyCommentStart"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CommentMacro$AnyCommentEnd"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.EnumMacro"/>
    <internalFileTemplate name="HTML File"/>
    <internalFileTemplate name="HTML4 File"/>
    <internalFileTemplate name="XHTML File"/>
    <fileBasedIndex implementation="com.intellij.psi.impl.cache.impl.todo.TodoIndex"/>
    <fileBasedIndex implementation="com.intellij.psi.impl.cache.impl.id.IdIndexImpl"/>
    <fileBasedIndex implementation="com.intellij.psi.search.FilenameIndexImpl"/>
    <applicationService serviceInterface="com.intellij.psi.search.FileNameIndexService"
                        serviceImplementation="com.intellij.psi.search.FileNameIndexServiceImpl"/>
    <fileBasedIndex implementation="com.intellij.psi.search.FileTypeIndexImpl"/>
    <fileBasedIndex implementation="com.intellij.psi.stubs.StubUpdatingIndex"/>

    <fileBasedIndex implementation="com.intellij.find.ngrams.TrigramIndex"/>

    <fileBasedIndex implementation="com.intellij.psi.impl.include.FileIncludeIndex"/>

    <syntaxHighlighter factoryClass="com.intellij.openapi.fileTypes.LanguageFileTypeHighlighterProvider"/>
    <structureViewBuilder factoryClass="com.intellij.ide.highlighter.LanguageFileTypeStructureViewBuilderProvider"/>

    <idIndexer filetype="PLAIN_TEXT" implementationClass="com.intellij.psi.impl.cache.impl.id.PlainTextIndexer"/>
    <todoIndexer filetype="PLAIN_TEXT" implementationClass="com.intellij.psi.impl.cache.impl.todo.PlainTextTodoIndexer"/>
    <lang.elementManipulator forClass="com.intellij.psi.PsiPlainTextFile"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.PlainFileManipulator"/>
    <lang.elementManipulator forClass="com.intellij.psi.PsiComment"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.PsiCommentManipulator"/>

    <applicationService serviceImplementation="com.intellij.ide.macro.MacroManager"/>
    <hectorComponentProvider implementation="com.intellij.codeInsight.daemon.impl.FileIncludeContextHectorProvider"/>

    <ideRootPaneNorth implementation="com.intellij.ide.navigationToolbar.NavBarRootPaneExtension"/>
    <navbar implementation="com.intellij.ide.navigationToolbar.DefaultNavBarExtension" id="defaultNavbar" order="last"/>
    <applicationService serviceInterface="com.intellij.ide.navigationToolbar.NavBarModelBuilder"
                        serviceImplementation="com.intellij.ide.navigationToolbar.NavBarModelBuilderImpl"/>

    <statistician key="completion" implementationClass="com.intellij.codeInsight.completion.DefaultCompletionStatistician" order="last"/>

    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.OpenedInEditorWeigher" id="openedInEditor"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SameDirectoryWeigher" id="sameDirectory"
             order="after openedInEditor"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SameLogicalRootWeigher" id="sameLogicalRoot"
             order="after sameDirectory"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SameModuleWeigher" id="sameModule"
             order="after sameLogicalRoot"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.InResolveScopeWeigher" id="inResolveScope"
             order="after sameModule"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SdkOrLibraryWeigher" id="sdkOrLibrary"
             order="after inResolveScope"/>

    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.PriorityWeigher" id="priority" order="first"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.PrefixMatchingWeigher" id="prefix"
             order="after priority"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.StatisticsWeigher" id="stats"
             order="after prefix"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.ExplicitProximityWeigher" id="explicitProximity"
             order="after stats"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.LookupElementProximityWeigher" id="proximity"
             order="after explicitProximity"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.GroupingWeigher" id="grouping"
             order="last"/>

    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.DefaultCompletionContributor"
                            id="default"
                            order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.ComboEditorCompletionContributor"
                            id="comboEditor" order="first"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.WordCompletionContributor"
                            id="wordCompletion" order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.LegacyCompletionContributor" id="legacy"
                            order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.FilePathCompletionContributor"
                            id="filePath" order="before javaClassName"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.template.impl.LiveTemplateCompletionContributor"
                            id="liveTemplates" order="first"/>

    <applicationService serviceImplementation="com.intellij.execution.console.ConsoleFoldingSettings"/>

    <console.folding implementation="com.intellij.execution.console.SubstringConsoleFolding"/>

    <lookup.charFilter implementation="com.intellij.codeInsight.template.impl.LiveTemplateCharFilter" order="first" id="liveTemplate"/>
    <lookup.charFilter implementation="com.intellij.codeInsight.completion.DefaultCharFilter" order="last" id="default"/>
    <lookup.charFilter implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceCharFilter" id="fileRef"
                       order="before completion"/>

    <searchEverywhereClassifier implementation="com.intellij.ide.actions.DefaultSearchEverywhereClassifier"/>
    <gotoFileContributor implementation="com.intellij.ide.util.gotoByName.DefaultFileNavigationContributor"/>
    <gotoTargetRendererProvider implementation="com.intellij.xml.impl.schema.GotoXmlSchemaTypeRendererProvider"/>
    <gotoRelatedProvider implementation="com.intellij.ide.actions.RelatedItemLineMarkerGotoAdapter"/>

    <selectInTarget implementation="com.intellij.ide.impl.ProjectViewSelectInGroupTarget"/>
    <selectInTarget implementation="com.intellij.ide.navigationToolbar.SelectInNavBarTarget"/>
    <selectInTarget implementation="com.intellij.ide.impl.StructureViewSelectInTarget"/>
    <selectInTarget implementation="com.intellij.ide.impl.ProjectViewSelectInExplorerTarget"/>
    <selectInTarget implementation="com.intellij.ide.favoritesTreeView.FavoritesViewSelectInTarget"/>

    <elementLookupRenderer implementation="com.intellij.codeInsight.template.impl.TemplateLookupRenderer"/>

    <modelScopeItemPresenter implementation="com.intellij.analysis.dialog.ProjectScopeItemPresenter" id="project_scope" order="first"/>
    <modelScopeItemPresenter implementation="com.intellij.analysis.dialog.ModuleScopeItemPresenter" id="module_scope" order="after project_scope"/>
    <modelScopeItemPresenter implementation="com.intellij.analysis.dialog.VcsScopeItemPresenter" id="vcs_scope" order="after module_scope"/>
    <modelScopeItemPresenter implementation="com.intellij.analysis.dialog.OtherScopeItemPresenter" id="other_scope" order="after vcs_scope"/>
    <modelScopeItemPresenter implementation="com.intellij.analysis.dialog.CustomScopeItemPresenter" id="custom_scope" order="after other_scope"/>

    <customPasteProvider implementation="com.intellij.ide.actions.PasteReferenceProvider"/>

    <referenceInjector implementation="com.intellij.codeInsight.daemon.impl.analysis.encoding.EncodingReferenceInjector"/>

    <usageFilteringRuleProvider implementation="com.intellij.usages.impl.UsageFilteringRuleProviderImpl"/>
    <usageGroupingRuleProvider implementation="com.intellij.usages.impl.UsageGroupingRuleProviderImpl"/>

    <projectService serviceImplementation="com.intellij.psi.templateLanguages.TemplateDataLanguageMappings"/>
    <applicationService serviceImplementation="com.intellij.psi.templateLanguages.TemplateDataLanguagePatterns"/>
    <filePropertyPusher implementation="com.intellij.psi.templateLanguages.TemplateDataLanguagePusher"/>

    <!-- execution -->
    <executor implementation="com.intellij.execution.executors.DefaultRunExecutor" order="first" id="run"/>
    <executionTargetProvider implementation="com.intellij.execution.DefaultExecutionTargetProvider"/>
    <projectService serviceImplementation="com.intellij.execution.RunConfigurationProducerService"/>
    <configurationType implementation="com.intellij.execution.compound.CompoundRunConfigurationType"/>

    <findUsagesHandlerFactory implementation="com.intellij.find.findUsages.DefaultFindUsagesHandlerFactory" id="default" order="last"/>
    <usageTargetProvider implementation="com.intellij.find.findUsages.DefaultUsageTargetProvider" id="default" order="last"/>

    <cutElementMarker implementation="com.intellij.ide.PsiCutElementMarker"/>

    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.PlainTextLineSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.NaturalLanguageTextSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.WordSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.LineCommentSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.BlockCommentSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.InjectedFileReferenceSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.ide.highlighter.custom.impl.CustomFileTypeSelectWordHandler"/>

    <basicWordSelectionFilter implementation="com.intellij.lang.parser.DummyBlockWordSelectionFilter"/>

    <syntaxHighlighter factoryClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeHighlighterProvider"/>
    <fileTypeRegistrator implementation="com.intellij.ide.highlighter.custom.impl.StandardFileTypeRegistrator"/>

    <directoryProjectConfigurator implementation="com.intellij.platform.PlatformProjectConfigurator" order="first"
                                  id="PlatformProjectConfigurator"/>
    <directoryProjectConfigurator implementation="com.intellij.platform.PlatformProjectViewOpener"/>

    <fileIconProvider implementation="com.intellij.openapi.updateSettings.impl.WhatsNewFileIconProvider"/>
    <fileIconProvider implementation="com.intellij.ide.FileIconPatcherImpl"/>
    <iconProvider implementation="com.intellij.ide.NativeIconProvider" id="native"/>
    <iconProvider implementation="com.intellij.psi.impl.file.SourceRootIconProvider$DirectoryProvider" id="directory" order="last"/>
    <iconLayerProvider implementation="com.intellij.psi.impl.file.SourceRootIconProvider$FileLayerProvider" id="sourceRoot" order="last"/>

    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.LineMover" id="line" order="last"/>

    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterInStringLiteralHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterInLineCommentHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterInBlockCommentHandler" id="blockComment" order="last"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterAfterUnmatchedBraceHandler" id="afterUnmatchedBrace"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesFinalHandler"
                          id="EnterBetweenBracesHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterAfterJavadocTagHandler"/>

    <backspaceHandlerDelegate implementation="com.intellij.codeInsight.editorActions.SimpleIndentingBackspaceHandler"/>
    <backspaceHandlerDelegate implementation="com.intellij.codeInsight.editorActions.SmartIndentingBackspaceHandler"/>

    <codeInsight.linkHandler prefix="#inspection/" handlerClass="com.intellij.codeInsight.hint.InspectionDescriptionLinkHandler"/>
    <codeInsight.linkHandler prefix="#navigation/" handlerClass="com.intellij.codeInsight.hint.NavigationLinkHandler"/>
    <codeInsight.linkHandler prefix="#element/" handlerClass="com.intellij.codeInsight.hint.ElementLinkHandler"/>
    <codeInsight.lineMarkerProvider language="" implementationClass="com.intellij.ui.ColorLineMarkerProvider"/>

    <codeFoldingOptionsProvider instance="com.intellij.application.options.editor.BaseCodeFoldingOptionsProvider" order="first"/>
    <search.topHitProvider implementation="com.intellij.application.options.editor.EditorSmartKeysOptionsTopHitProvider"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.EditorSmartKeysConfigurable" id="editor.preferences.smartKeys"
                           displayName="Smart Keys" dynamic="true"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.EditorAppearanceConfigurable"
                           id="editor.preferences.appearance"
                           key="tab.editor.settings.appearance" bundle="messages.ApplicationBundle"/>

    <editorOptionsProvider instance="com.intellij.application.options.editor.GutterIconsConfigurable" id="editor.preferences.gutterIcons"
                           displayName="Gutter Icons"/>
    <search.optionContributor implementation="com.intellij.application.options.editor.GutterIconsSearchableOptionContributor"/>

    <!-- Colors & Fonts-->
    <applicationConfigurable groupId="editor" groupWeight="180" dynamic="true" instance="com.intellij.application.options.colors.ColorAndFontOptions"
                           id="reference.settingsdialog.IDE.editor.colors" key="title.colors.and.fonts" bundle="messages.ApplicationBundle"/>
    <search.topHitProvider implementation="com.intellij.application.options.editor.EditorTabsOptionsTopHitProvider"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.EditorTabsConfigurable" id="editor.preferences.tabs"
                           displayName="Editor Tabs"/>
    <search.topHitProvider implementation="com.intellij.application.options.editor.CodeFoldingOptionsTopHitProvider"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.CodeFoldingConfigurable" id="editor.preferences.folding"
                           key="group.code.folding" bundle="messages.ApplicationBundle"/>
    <editorOptionsProvider instance="com.intellij.application.options.CodeCompletionOptions" id="editor.preferences.completion"
                           key="title.code.completion" bundle="messages.ApplicationBundle"/>
    <projectConfigurable instance="com.intellij.application.options.editor.AutoImportOptionsConfigurable"
                         id="editor.preferences.import"
                         parentId="preferences.editor"
                         key="auto.import" bundle="messages.ApplicationBundle"
                         groupWeight="1"/>

    <editorTabColorProvider implementation="com.intellij.ui.tabs.EditorTabColorProviderImpl"/>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.EditFoldingOptionsAction</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.formatting.contextConfiguration.ConfigureCodeStyleOnSelectedFragment</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.hints.BlacklistCurrentMethodIntention</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.hints.DisableCustomHintsOption</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.hints.EnableCustomHintsOption</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.QuickEditAction</className>
      <category>Language Injection</category>
    </intentionAction>

    <intentionMenuContributor implementation="com.intellij.codeInsight.daemon.impl.DoNotShowInspectionIntentionMenuContributor"/>
    <intentionMenuContributor implementation="com.intellij.codeInsight.daemon.impl.GutterIntentionMenuContributor"/>
    <intentionMenuContributor implementation="com.intellij.codeInsight.daemon.impl.CleanupIntentionMenuContributor"/>

    <!-- LookupManagerActions -->
    <editorActionHandler action="EditorUp" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$UpHandler"/>
    <editorActionHandler action="EditorDown" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$DownHandler"/>
    <editorActionHandler action="EditorPageUp"
                         implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$PageUpHandler"/>
    <editorActionHandler action="EditorPageDown"
                         implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$PageDownHandler"/>
    <editorActionHandler action="EditorLeft" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$LeftHandler" id="left.lookup"/>
    <editorActionHandler action="EditorRight" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$RightHandler" id="right.lookup"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.codeInsight.lookup.impl.BackspaceHandler" id="backspace.lookup"/>
    <editorActionHandler action="EditorStartNewLine" implementationClass="com.intellij.codeInsight.lookup.impl.StartNewLineHandler" id="startNewLine.lookup"/>

    <!-- CodeInsightSettings -->
    <editorActionHandler action="EditorEnter" implementationClass="com.intellij.codeInsight.editorActions.EnterHandler" id="editorEnter"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="com.intellij.codeInsight.editorActions.EndHandler"/>
    <editorActionHandler action="EditorSelectWord" implementationClass="com.intellij.codeInsight.editorActions.SelectWordHandler" id="psi.select.word"/>
    <editorActionHandler action="EditorSelectWord" implementationClass="com.intellij.openapi.editor.actions.SelectWordAtCaretAction$Handler" id="indent.guide.select.word" order=" before psi.select.word"/>
    <editorActionHandler action="EditorUnSelectWord" implementationClass="com.intellij.codeInsight.editorActions.UnSelectWordHandler" id="psi.unselect.word"/>
    <editorActionHandler action="EditorPaste" implementationClass="com.intellij.codeInsight.editorActions.PasteHandler"/>
    <editorActionHandler action="EditorCopy" implementationClass="com.intellij.codeInsight.editorActions.CopyHandler"/>
    <editorActionHandler action="EditorCut" implementationClass="com.intellij.codeInsight.editorActions.CutHandler"/>
    <editorActionHandler action="EditorJoinLines" implementationClass="com.intellij.codeInsight.editorActions.JoinLinesHandler"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.codeInsight.editorActions.BackspaceHandler" id="backspace.lang"/>
    <editorActionHandler action="EditorDeleteToWordStart"
                         implementationClass="com.intellij.codeInsight.editorActions.BackspaceToWordStartHandler"/>
    <editorTypedHandler implementationClass="com.intellij.codeInsight.editorActions.TypedHandler" order="first"/>

    <editorActionHandler action="EditorDuplicate" implementationClass="com.intellij.openapi.editor.actions.NamedElementDuplicateHandler"/>

    <!-- TemplateManagerActions -->
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.template.impl.editorActions.EscapeHandler"
                         id="templateEscape" order="before hide-hints"/>
    <editorActionHandler action="EditorEnter" implementationClass="com.intellij.codeInsight.template.impl.editorActions.EnterHandler"
                         id="templateEnter" order="before editorEnter"/>
    <editorActionHandler action="EditorLineStart" implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineStartHandler"/>
    <editorActionHandler action="EditorLineStartWithSelection"
                         implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineStartWithSelectionHandler"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineEndHandler"/>
    <editorActionHandler action="EditorLineEndWithSelection"
                         implementationClass="com.intellij.codeInsight.template.impl.editorActions.TemplateLineEndWithSelectionHandler"/>
    <editorActionHandler action="$SelectAll" implementationClass="com.intellij.codeInsight.template.impl.editorActions.SelectAllHandler"/>
    <typedHandler implementation="com.intellij.codeInsight.template.impl.editorActions.SpaceHandler"/>

    <!-- HighlightManagerActions -->
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.highlighting.EscapeHandler"
                         order="after hide-hints" id="hide-search"/>

    <editorTypedHandler implementationClass="com.intellij.codeInsight.lookup.impl.LookupTypedHandler" id="lookup"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.CompletionAutoPopupHandler" id="completionAutoPopup"
                  order="first"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.SelectionQuotingTypedHandler" id="selectionQuoting"/>

    <templateCompletionProcessor implementation="com.intellij.codeInsight.template.macro.DirectoryTemplateCompletionProcessor"/>

    <liveTemplateContext id="OTHER" implementation="com.intellij.codeInsight.template.EverywhereContextType" order="last"/>

    <dynamicContextProvider implementation="com.intellij.openapi.paths.GenericDynamicContextProvider"/>

    <codeStyleSettingsProvider implementation="com.intellij.application.options.GeneralCodeStyleSettingsProvider"/>
    <codeStyleSettingsProvider implementation="com.intellij.application.options.codeStyle.OtherFileTypesCodeStyleOptionsProvider"/>

    <projectService serviceImplementation="com.intellij.ide.todo.TodoView"/>
    <projectService serviceInterface="com.intellij.ide.structureView.StructureViewFactory"
                    serviceImplementation="com.intellij.ide.structureView.impl.StructureViewFactoryImpl"/>
    <projectService serviceInterface="com.intellij.codeInspection.InspectionManager"
                    serviceImplementation="com.intellij.codeInspection.ex.InspectionManagerEx"/>
    <documentationProvider implementation="com.intellij.codeInspection.actions.InspectionDescriptionDocumentationProvider"/>

    <projectService serviceInterface="com.intellij.usageView.UsageViewContentManager"
                    serviceImplementation="com.intellij.usageView.impl.UsageViewContentManagerImpl"/>
    <projectService serviceImplementation="com.intellij.usageView.UsageViewManager"/>
    <applicationService serviceImplementation="com.intellij.ide.projectView.impl.ProjectViewSharedSettings"/>
    <projectService serviceInterface="com.intellij.ide.projectView.ProjectView"
                    serviceImplementation="com.intellij.ide.projectView.impl.ProjectViewImpl"/>
    <projectService serviceImplementation="com.intellij.ide.projectView.impl.ProjectViewState"/>
    <projectService serviceInterface="com.intellij.execution.ui.RunnerLayoutUi$Factory"
                    serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutUiFactoryImpl"/>

    <http.fileEditorActionProvider implementation="com.intellij.openapi.fileEditor.impl.http.LangRemoteFileEditorActionProvider"/>

    <toolWindow id="Project" anchor="left" icon="AllIcons.Toolwindows.ToolWindowProject"
                factoryClass="com.intellij.ide.projectView.impl.ProjectViewToolWindowFactory"/>
    <toolWindow id="TODO" anchor="bottom" icon="AllIcons.Toolwindows.ToolWindowTodo"
                factoryClass="com.intellij.ide.todo.TodoToolWindowFactory" canCloseContents="true"/>
    <toolWindow id="Structure" anchor="left" icon="AllIcons.Toolwindows.ToolWindowStructure" secondary="true"
                factoryClass="com.intellij.ide.structureView.impl.StructureViewToolWindowFactory"/>
    <toolWindow id="Favorites" anchor="left" icon="AllIcons.Toolwindows.ToolWindowFavorites" secondary="true"
                factoryClass="com.intellij.ide.projectView.impl.FavoritesViewToolWindowFactory"/>
    <toolWindow id="Services" anchor="bottom" icon="AllIcons.Toolwindows.ToolWindowServices" canCloseContents="true"
                factoryClass="com.intellij.execution.services.ServiceViewToolWindowFactory"
                conditionClass="com.intellij.execution.services.ServiceViewToolWindowFactory"/>

    <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.JarFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.HttpFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.NullFileReferenceHelper" order="last"/>
    <psi.referenceContributor implementation="com.intellij.psi.impl.source.resolve.reference.CommentsReferenceContributor"/>
    <referenceProviderType key="commentsReferenceProvider"
                           implementationClass="com.intellij.psi.impl.source.resolve.reference.ArbitraryPlaceUrlReferenceProvider"/>
    <psi.referenceContributor implementation="com.intellij.psi.impl.source.resolve.reference.UrlReferenceContributor"/>

    <projectConfigurable groupId="editor"
                         groupWeight="140"
                         key="file.encodings.configurable"
                         bundle="messages.IdeBundle"
                         id="File.Encoding"
                         provider="com.intellij.openapi.vfs.encoding.FileEncodingConfigurableProvider"/>
    <projectConfigurable groupId="appearance" groupWeight="112" instance="com.intellij.ui.tabs.FileColorsConfigurable" id="reference.settings.ide.settings.file-colors" displayName="File Colors"/>

    <uiDebuggerExtension implementation="com.intellij.ui.debugger.extensions.PlaybackDebugger"/>
    <uiDebuggerExtension implementation="com.intellij.ui.debugger.extensions.ActionTracer"/>

    <applicationService serviceImplementation="com.intellij.ui.debugger.extensions.PlaybackDebugger$PlaybackDebuggerState"/>

    <globalInspection shortName="Annotator" displayName="Annotator" groupKey="inspection.general.tools.group.name" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="ERROR"
                      implementationClass="com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitorBasedInspection$AnnotatorBasedInspection"/>
    <globalInspection shortName="SyntaxError" displayName="Syntax error" groupKey="inspection.general.tools.group.name" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="ERROR"
                      implementationClass="com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitorBasedInspection$SyntaxErrorInspection"/>
    <localInspection shortName="LossyEncoding" bundle="messages.InspectionsBundle" key="lossy.encoding"
                     groupKey="group.names.internationalization.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.LossyEncodingInspection"/>
    <localInspection shortName="NonAsciiCharacters" bundle="messages.InspectionsBundle" key="non.ascii.characters"
                     groupKey="group.names.internationalization.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.NonAsciiCharactersInspection"/>
    <localInspection shortName="ProblematicWhitespace" bundle="messages.InspectionsBundle" key="problematic.whitespace.display.name"
                     groupKey="inspection.general.tools.group.name" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ProblematicWhitespaceInspection"/>
    <localInspection shortName="TodoComment" bundle="messages.InspectionsBundle" key="todo.comment.display.name"
                     groupKey="inspection.general.tools.group.name" enabledByDefault="false"
                     level="WARNING" implementationClass="com.intellij.codeInspection.TodoCommentInspection"/>
    <localInspection shortName="LongLine" bundle="messages.InspectionsBundle" key="long.line.display.name"
                     groupKey="inspection.general.tools.group.name" enabledByDefault="false"
                     level="WARNING" implementationClass="com.intellij.codeInspection.longLine.LongLineInspection"/>
    <localInspection shortName="ProjectFingerprint" displayName="Project Fingerprint" bundle="messages.InspectionsBundle"
                     groupKey="inspection.general.tools.group.name" enabledByDefault="false"
                     level="WARNING" implementationClass="com.intellij.codeInspection.projectFingerprint.ProjectFingerprintInspection"
                     presentation="com.intellij.codeInspection.projectFingerprint.ProjectFingerprintInspectionPresentation"/>
    <globalInspection shortName="RedundantSuppression" bundle="messages.InspectionsBundle" key="inspection.redundant.suppression.name"
                      groupKey="inspection.general.tools.group.name" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.RedundantSuppressInspection"/>

    <annotator language="TEXT" implementationClass="com.intellij.codeInsight.highlighting.LargeFilesAnnotator"/>
    <annotator language="" implementationClass="com.intellij.codeInsight.highlighting.HyperlinkAnnotator"/>

    <applicationService serviceInterface="com.intellij.codeInsight.template.TemplateBuilderFactory"
                        serviceImplementation="com.intellij.codeInsight.template.TemplateBuilderFactoryImpl"/>

    <!--<projectViewPane implementation="com.intellij.ide.favoritesTreeView.FavoritesProjectViewPane"/>-->
    <projectViewPane implementation="com.intellij.ide.scopeView.ScopeViewPane"/>

    <renameHandler implementation="com.intellij.refactoring.rename.PlainDirectoryRenameHandler"/>
    <renameHandler implementation="com.intellij.refactoring.rename.inplace.VariableInplaceRenameHandler"/>
    <renameHandler implementation="com.intellij.refactoring.rename.inplace.MemberInplaceRenameHandler"/>
    <completion.contributor language="any"
                            implementationClass="com.intellij.refactoring.rename.inplace.CompletionContributorForInplaceRename"
                            order="first"/>

    <filePasteProvider implementation="com.intellij.ide.FileListPasteProvider" id="fileList"/>

    <definitionsSearch implementation="com.intellij.pom.PomDefinitionSearch"/>
    <definitionsSearch implementation="com.intellij.xml.impl.schema.SchemaDefinitionsSearch"/>

    <applicationService serviceImplementation="com.intellij.ConfigurableFactory"/>

    <applicationService serviceImplementation="com.intellij.ide.todo.TodoConfiguration"/>
    <indexPatternProvider implementation="com.intellij.ide.todo.TodoIndexPatternProvider"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.documentation.QuickDocOnMouseOverManager"/>
    <postStartupActivity implementation="com.intellij.codeInsight.documentation.QuickDocOnMouseOverStartupActivity"/>

    <hectorComponentProvider implementation="com.intellij.codeInsight.daemon.PowerSaveHectorProvider"/>

    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.CopyPasteIndentProcessor"/>
    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.CopyPasteFoldingProcessor"/>

    <statistics.counterUsagesCollector groupId="tooltip.action.events" version="1"/>
    <statistics.counterUsagesCollector groupId="rename.refactoring" version="1"/>

    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsagesCollector"/>
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.actions.persistence.ToolWindowCollector$ToolWindowUtilValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsagesCollector$ValidationRule" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsageCounterCollector$FileTypeSchemaValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.codeInsight.template.impl.LiveTemplateRunLogger$LiveTemplateValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.actions.persistence.ActionRuleValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.eventLog.validator.rules.impl.TestModeValidationRule" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.ClassNameRuleValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.MethodNameRuleValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.LangCustomRuleValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.PluginIdRuleValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.execution.impl.statistics.RunConfigurationTypeUsagesCollector$RunConfigurationUtilValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.execution.impl.statistics.RunConfigurationUsageTriggerCollector$RunConfigurationExecutorUtilValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.codeInsight.template.postfix.templates.PostfixTemplateLogger$PostfixTemplateValidator"/>
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.tools.InspectionsUsagesCollector$InspectionToolValidator"/>

    <postStartupActivity implementation="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeExtensionUsagesCollectorStartupActivity"/>

    <statistics.projectUsagesCollector implementation="com.intellij.execution.impl.statistics.RunConfigurationTypeUsagesCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.editor.EditorSettingsStatisticsCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.editor.EditorSettingsStatisticsCollector$ProjectUsages"/>
    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.tools.InspectionsUsagesCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.service.fus.collectors.KeymapUsageCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.execution.dashboard.RunDashboardUsagesCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.codeInsight.hints.InlayProviderUsageCollector"/>

    <statistics.counterUsagesCollector groupId="searchEverywhere" version="1"/>
    <statistics.counterUsagesCollector groupId="actions.runAnything" version="1"/>
    <statistics.counterUsagesCollector groupId="surround.with" version="2"/>
    <statistics.counterUsagesCollector groupId="find" version="2"/>
    <statistics.counterUsagesCollector groupId="create.directory.dialog" version="1"/>

    <applicationService serviceImplementation="com.intellij.internal.statistic.persistence.ApprovedGroupsCacheConfigurable" />
    <applicationService serviceImplementation="com.intellij.internal.statistic.eventLog.validator.persistence.EventLogWhitelistSettingsPersistence" />

    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiFileProcessor" order="last" id="renamePsiFile"/>
    <renameInputValidator implementation="com.intellij.refactoring.rename.RenameToIgnoredDirectoryFileInputValidator" order="last"/>

    <refactoring.elementListenerProvider implementation="com.intellij.execution.impl.RunConfigurationRefactoringElementListenerProvider"/>
    <refactoring.elementListenerProvider implementation="com.intellij.ui.EditorNotificationsImpl$RefactoringListenerProvider"/>

    <keymapExtension implementation="com.intellij.tools.ToolKeymapExtension"/>

    <inspectionsReportConverter implementation="com.intellij.codeInspection.ex.PlainTextFormatter"/>
    <inspectionsReportConverter implementation="com.intellij.codeInspection.ex.JsonInspectionsReportConverter"/>

    <documentationProvider implementation="com.intellij.openapi.paths.WebReferenceDocumentationProvider"/>

    <refactoring.moveDirectoryWithClassesHelper
        implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper$Default" order="last"/>

    <defaultHighlightingSettingProvider id="GeneratedSourcesHighlightingSettingProvider"
                                        implementation="com.intellij.codeInsight.daemon.impl.analysis.GeneratedSourcesHighlightingSettingProvider"/>
    <editorNotificationProvider implementation="com.intellij.ide.GeneratedFileEditingNotificationProvider"/>

    <editorTabTitleProvider implementation="com.intellij.openapi.vcs.vfs.VcsFileEditorTabTitleProvider"/>
    <editorTabTitleProvider implementation="com.intellij.openapi.fileEditor.impl.UniqueNameEditorTabTitleProvider" order="last"/>

    <projectService serviceInterface="com.intellij.psi.util.PsiModificationTracker"
                    serviceImplementation="com.intellij.psi.impl.PsiModificationTrackerImpl"/>

    <itemPresentationProvider forClass="com.intellij.psi.PsiDirectory"
                              implementationClass="com.intellij.navigation.DirectoryPresentationProvider"/>

    <projectService serviceInterface="com.intellij.openapi.module.ModulePointerManager"
                    serviceImplementation="com.intellij.openapi.module.impl.ModulePointerManagerImpl"/>
    <projectService serviceImplementation="com.intellij.openapi.module.impl.UnloadedModulesListStorage"/>

    <customFoldingProvider implementation="com.intellij.lang.customFolding.NetBeansCustomFoldingProvider"/>
    <customFoldingProvider implementation="com.intellij.lang.customFolding.VisualStudioCustomFoldingProvider"/>

    <completion.contributor language="TEXT" implementationClass="com.intellij.util.textCompletion.TextCompletionContributor"
                            order="first, before commitCompletion"/>
    <lookup.charFilter implementation="com.intellij.util.textCompletion.TextCompletionCharFilter"/>

    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.CustomFileTypeCompletionContributor"/>
    <completion.confidence language="any" implementationClass="com.intellij.codeInsight.completion.SkipAutopopupInLargeFiles"/>

    <pathMacroFilter implementation="com.intellij.execution.configuration.RunConfigurationPathMacroFilter"/>
    <pathMacroFilter implementation="com.intellij.openapi.application.StructuralSearchPathMacroFilter"/>
    <pathMacroFilter implementation="com.intellij.openapi.application.PathMappingsMacroFilter"/>

    <postStartupActivity implementation="com.intellij.codeInsight.highlighting.BraceHighlighter"/>
    <usageContextPanelProvider implementation="com.intellij.usages.impl.UsagePreviewPanel$Provider"/>
    <usageContextPanelProvider implementation="com.intellij.usageView.impl.UsageContextCallHierarchyPanel$Provider"/>
    <fileDocumentSynchronizationVetoer implementation="com.intellij.codeInsight.lookup.impl.LookupDocumentSavingVetoer"/>
    <toolsProvider implementation="com.intellij.tools.LocalToolsProvider"/>

    <favoritesListProvider implementation="com.intellij.ide.bookmarks.BookmarksFavoriteListProvider"/>
    <favoritesListProvider implementation="com.intellij.xdebugger.impl.breakpoints.BreakpointsFavoriteListProvider"/>
    <applicationService serviceInterface="com.intellij.codeInsight.FileModificationService"
                        serviceImplementation="com.intellij.codeInsight.CodeInsightUtilBase"/>
    <applicationService serviceInterface="com.intellij.ide.util.treeView.TreeAnchorizer"
                        serviceImplementation="com.intellij.ide.projectView.impl.nodes.PsiTreeAnchorizer"/>

    <projectStructure.sourceRootEditHandler implementation="com.intellij.openapi.roots.ui.configuration.JavaModuleSourceRootEditHandler"/>
    <projectStructure.sourceRootEditHandler implementation="com.intellij.openapi.roots.ui.configuration.JavaTestSourceRootEditHandler"/>

    <elementPreviewProvider implementation="com.intellij.codeInsight.preview.ElementPreviewHintProvider"/>

    <actionPromoter implementation="com.intellij.ui.EditorTextFieldActionPromoter"/>
    <actionPromoter implementation="com.intellij.codeInsight.editorActions.TabActionsPromoter"/>

    <stepsBeforeRunProvider implementation="com.intellij.execution.impl.RunConfigurationBeforeRunProvider"/>

    <lang.foldingBuilder language="TEXT" implementationClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeFoldingBuilder"/>

    <applicationService serviceImplementation="com.intellij.openapi.editor.richcopy.settings.RichCopySettings"/>
    <copyPastePostProcessor implementation="com.intellij.openapi.editor.richcopy.TextWithMarkupProcessor"/>
     <!--the following binding uses 'first' order to make sure it captures raw text before any other processor modifies it -->
    <copyPastePreProcessor implementation="com.intellij.openapi.editor.richcopy.TextWithMarkupProcessor$RawTextSetter" order="first" id="richcopy"/>
    <copyPastePreProcessor implementation="com.intellij.codeInsight.editorActions.LineCommentCopyPastePreProcessor"/>

    <!-- Postfix templates -->
    <applicationService serviceImplementation="com.intellij.codeInsight.template.postfix.settings.PostfixTemplatesSettings"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.template.postfix.settings.PostfixTemplateStorage"/>
    <customLiveTemplate implementation="com.intellij.codeInsight.template.postfix.templates.PostfixLiveTemplate"/>
    <lookup.actionProvider implementation="com.intellij.codeInsight.template.postfix.completion.PostfixTemplateLookupActionProvider"/>
    <editorOptionsProvider instance="com.intellij.codeInsight.template.postfix.settings.PostfixTemplatesConfigurable"
                           id="reference.settingsdialog.IDE.editor.postfix.templates"
                           displayName="Postfix Completion"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.template.postfix.completion.PostfixTemplateCompletionContributor" order="last"/>

    <projectService serviceInterface="com.intellij.execution.ExecutionManager" serviceImplementation="com.intellij.execution.impl.ExecutionManagerKtImpl"/>
    <projectService serviceInterface="com.intellij.execution.ExecutionTargetManager" serviceImplementation="com.intellij.execution.ExecutionTargetManagerImpl"/>

    <projectService serviceInterface="com.intellij.execution.dashboard.RunDashboardManager" serviceImplementation="com.intellij.execution.dashboard.RunDashboardManagerImpl"/>
    <projectService serviceInterface="com.intellij.execution.services.ServiceViewManager" serviceImplementation="com.intellij.execution.services.ServiceViewManagerImpl"/>
    <runDashboardGroupingRule implementation="com.intellij.execution.dashboard.tree.ConfigurationTypeDashboardGroupingRule"
                              id="type" order="first"/>
    <runDashboardGroupingRule implementation="com.intellij.execution.dashboard.tree.StatusDashboardGroupingRule"
                              id="status" order="after type"/>
    <runDashboardGroupingRule implementation="com.intellij.execution.dashboard.tree.FolderDashboardGroupingRule"
                              id="folder" order="after status"/>
    <actionPromoter implementation="com.intellij.execution.dashboard.actions.RunDashboardActionPromoter"/>
    <actionPromoter implementation="com.intellij.execution.services.ServiceViewActionPromoter"/>
    <serviceViewContributor implementation="com.intellij.execution.dashboard.RunDashboardServiceViewContributor"/>
    <navbar implementation="com.intellij.execution.services.ServiceViewNavBarExtension"/>
    <projectService serviceInterface="com.intellij.execution.ui.RunContentManager"
                    serviceImplementation="com.intellij.execution.ui.RunContentManagerImpl"/>

    <previewPanelProvider implementation="com.intellij.openapi.fileEditor.impl.FilePreviewPanelProvider"/>
    <previewPanelProvider implementation="com.intellij.codeInsight.documentation.DocumentationPreviewPanelProvider"/>
    <previewPanelProvider implementation="com.intellij.find.UsagesPreviewPanelProvider"/>
    <projectService serviceInterface="com.intellij.openapi.preview.PreviewManager"
                    serviceImplementation="com.intellij.openapi.preview.impl.PreviewManagerImpl"/>

    <applicationService serviceInterface="com.intellij.find.impl.FindPopupScopeUIProvider"
                        serviceImplementation="com.intellij.find.impl.FindPopupScopeUIProviderImpl"/>

    <search.optionContributor implementation="com.intellij.codeInspection.ex.InspectionSearchableOptionContributor"/>

    <fileIndentOptionsProvider implementation="com.intellij.psi.codeStyle.DetectableIndentOptionsProvider" order="last"/>
    <statusBarWidgetProvider implementation="com.intellij.psi.codeStyle.statusbar.CodeStyleStatusBarWidgetProvider"/>
    <statusBarWidgetProvider implementation="com.intellij.openapi.wm.impl.status.TogglePopupHintsPanelProvider" />
    <lang.formatter.restriction implementation="com.intellij.formatting.ExcludedFileFormattingRestriction"/>

    <codeInsight.lineMarkerProvider language="" implementationClass="com.intellij.execution.lineMarker.RunLineMarkerProvider"/>
    <projectService serviceImplementation="com.intellij.execution.TestStateStorage"/>
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.refactoring.changeSignature.inplace.EscapeHandler" id="changeSignatureEscape" order="before hide-search"/>

    <customizableActionGroupProvider implementation="com.intellij.openapi.vcs.ui.VcsCustomizableActionGroupProvider"/>

    <daemon.tooltipActionProvider order="last" id="defaultProvider" implementation="com.intellij.codeInsight.daemon.impl.DaemonTooltipActionProvider" />

    <schemeExporter
        name="IntelliJ IDEA code style XML"
        schemeClass="com.intellij.psi.codeStyle.CodeStyleScheme"
        implementationClass="com.intellij.application.options.schemes.SerializableSchemeExporter"/>
    <schemeExporter
        name="IntelliJ IDEA color scheme (.icls)"
        schemeClass="com.intellij.openapi.editor.colors.EditorColorsScheme"
        implementationClass="com.intellij.application.options.colors.ColorSchemeExporter"/>
    <schemeExporter
        name="Color scheme plugin .jar"
        schemeClass="com.intellij.openapi.editor.colors.EditorColorsScheme"
        implementationClass="com.intellij.application.options.colors.pluginExport.ColorSchemePluginExporter"/>
    <schemeImporter
        name="IntelliJ IDEA code style XML"
        schemeClass="com.intellij.psi.codeStyle.CodeStyleScheme"
        implementationClass="com.intellij.psi.impl.source.codeStyle.CodeStyleSchemeXmlImporter"/>
    <schemeImporter
        name="IntelliJ IDEA color scheme (.icls) or settings (.jar)"
        schemeClass="com.intellij.openapi.editor.colors.EditorColorsScheme"
        implementationClass="com.intellij.application.options.colors.ColorSchemeImporter"/>
    <schemeExporter
        name="IntelliJ IDEA inspection profile XML"
        schemeClass="com.intellij.codeInspection.ex.InspectionProfileModifiableModel"
        implementationClass="com.intellij.application.options.schemes.SerializableSchemeExporter"/>
    <schemeImporter
        name="IntelliJ IDEA inspection profile XML"
        schemeClass="com.intellij.codeInspection.ex.InspectionProfileModifiableModel"
        implementationClass="com.intellij.profile.codeInspection.ui.InspectionProfileImporter"/>

    <nonProjectFileWritingAccessExtension implementation="com.intellij.ide.actions.EditCustomPropertiesAction$AccessExtension"/>
    <nonProjectFileWritingAccessExtension implementation="com.intellij.ide.actions.EditCustomVmOptionsAction$AccessExtension"/>
    <lineIndentProvider
        implementation="com.intellij.psi.impl.source.codeStyle.lineIndent.FormatterBasedLineIndentProvider"
        order="last"/>
    <stripTrailingSpacesFilterFactory implementation="com.intellij.psi.codeStyle.KeepTrailingSpacesOnEmptyLinesFilterFactory"/>

    <applicationService serviceImplementation="com.intellij.ide.projectView.impl.ProjectViewFileNestingService"/>
    <treeStructureProvider implementation="com.intellij.ide.projectView.impl.NestingTreeStructureProvider" order="last"/>
    <applicationService serviceImplementation="com.intellij.ide.projectView.impl.FileNestingBuilder"/>
    <refactoring.safeDeleteProcessor implementation="com.intellij.refactoring.safeDelete.RelatedFilesSafeDeleteProcessorDelegate"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.RelatedFilesRenamerFactory"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveFilesOrDirectories.MoveRelatedFilesHandler"
                             order="before moveFileOrDir"/>

    <!-- Search everywhere services/objects -->
    <projectService serviceInterface="com.intellij.ide.actions.searcheverywhere.SearchEverywhereManager"
                    serviceImplementation="com.intellij.ide.actions.searcheverywhere.SearchEverywhereManagerImpl"/>
    <projectService serviceImplementation="com.intellij.ide.actions.runAnything.RunAnythingManager"/>

    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.ClassSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.FileSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.SymbolSearchEverywhereContributor$Factory"/>
    <searchEverywhereContributor implementation="com.intellij.ide.actions.searcheverywhere.ActionSearchEverywhereContributor$Factory"/>

    <searchEverywhereResultsEqualityProvider implementation="com.intellij.ide.actions.searcheverywhere.TrivialElementsEqualityProvider"/>
    <searchEverywhereResultsEqualityProvider implementation="com.intellij.ide.actions.searcheverywhere.PsiElementsEqualityProvider"/>

    <projectService serviceImplementation="com.intellij.ide.actions.runAnything.RunAnythingCache"/>
    <projectService serviceImplementation="com.intellij.ide.actions.runAnything.RunAnythingContextRecentDirectoryCache"/>

    <runAnything.executionProvider id="RunAnythingRunConfigurationProvider"
                                   implementation="com.intellij.ide.actions.runAnything.RunAnythingRunConfigurationProvider"/>
    <runAnything.executionProvider implementation="com.intellij.ide.actions.runAnything.activity.RunAnythingRecentProjectProvider"/>
    <runAnything.executionProvider id="recentCommandProvider" implementation="com.intellij.ide.actions.runAnything.activity.RunAnythingRecentCommandProvider"
                                   order="last"/>
    <runAnything.executionProvider implementation="com.intellij.ide.actions.runAnything.activity.RunAnythingCommandExecutionProvider"
                                   order="last"/>

    <!-- Project tasks execution (delegation of the build/run actions) -->
    <projectService serviceInterface="com.intellij.task.ProjectTaskManager"
                    serviceImplementation="com.intellij.task.impl.ProjectTaskManagerImpl"/>
    <projectService serviceInterface="com.intellij.execution.runners.ExecutionEnvironmentProvider"
                    serviceImplementation="com.intellij.task.impl.ExecutionEnvironmentProviderImpl"/>

    <!-- Build view -->
    <projectService serviceInterface="com.intellij.build.BuildContentManager"
                    serviceImplementation="com.intellij.build.BuildContentManagerImpl"
                    testServiceImplementation="com.intellij.build.internal.DummyBuildContentManager"/>
    <projectService serviceInterface="com.intellij.build.BuildViewManager"
                    serviceImplementation="com.intellij.build.BuildViewManager"
                    testServiceImplementation="com.intellij.build.internal.DummyBuildViewManager"/>
    <projectService serviceInterface="com.intellij.build.SyncViewManager"
                    serviceImplementation="com.intellij.build.SyncViewManager"
                    testServiceImplementation="com.intellij.build.internal.DummySyncViewManager"/>
    <projectService serviceInterface="com.intellij.build.RunTasksViewManager"
                    serviceImplementation="com.intellij.build.RunTasksViewManager"
                    testServiceImplementation="com.intellij.build.internal.DummyTasksViewManager"/>
    <projectService serviceInterface="com.intellij.build.DebugTasksViewManager"
                    serviceImplementation="com.intellij.build.DebugTasksViewManager"
                    testServiceImplementation="com.intellij.build.internal.DummyTasksViewManager"/>

    <moveLeftRightHandler language=""
                          implementationClass="com.intellij.codeInsight.editorActions.moveLeftRight.DefaultMoveElementLeftRightHandler"
                          order="last"/>

    <printHandler implementation="com.intellij.codeEditor.printing.TextPrintHandler"/>
    <customFileDropHandler implementation="com.intellij.application.options.colors.EditorColorSchemeDropHandler"/>

    <editorNotificationProvider implementation="com.intellij.internal.retype.RetypeEditorNotificationProvider"/>

    <fileBreadcrumbsCollector implementation="com.intellij.xml.breadcrumbs.PsiFileBreadcrumbsCollector" order="last"/>

    <implementationViewSessionFactory implementation="com.intellij.codeInsight.hint.PsiImplementationSessionViewFactory"/>

    <!-- must be first because TextEditorProvider.getInstance search by instance of -->
    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.text.PsiAwareTextEditorProvider" order="first"/>

    <fileEditorProvider implementation="com.intellij.largeFilesEditor.editor.LargeFileEditorProvider"/>
    <editorNotificationProvider implementation="com.intellij.largeFilesEditor.editor.LargeFileNotificationProvider"/>
    <experimentalFeature id="new.large.text.file.viewer" percentOfUsers="100">
      <description>A special viewer for large files. Opens automatically for text files with size more than 20Mb (default).
      </description>
    </experimentalFeature>


    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.GeneralHighlightingPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ChameleonSyntaxHighlightingPass$Factory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.InjectedGeneralHighlightingPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.LineMarkersPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ShowIntentionsPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.IdentifierHighlighterPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.refactoring.changeSignature.inplace.ChangeSignaturePassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.CodeFoldingPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.focusMode.FocusModePassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.hints.ParameterHintsPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.IndentsPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.InjectedCodeFoldingPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.LocalInspectionsPassFactory"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ShowAutoImportPassFactory"/>

    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.WholeFileLocalInspectionsPassFactory$MyRegistrar"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.ExternalToolPassFactory$MyRegistrar"/>
    <highlightingPassFactory implementation="com.intellij.codeInsight.daemon.impl.WolfPassFactory$MyRegistrar"/>

    <applicationInitializedListener implementation="com.intellij.openapi.roots.impl.libraries.LibraryKindLoader"/>
    <applicationInitializedListener implementation="com.intellij.ide.script.IdeStartupScripts"/>
    <projectService serviceInterface="com.intellij.codeInsight.daemon.impl.IntentionsUI"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.IntentionsUIImpl"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.CommentJoinLinesHandler" order="last"/>

    <editorFactoryListener implementation="com.intellij.codeInsight.daemon.impl.EditorTracker$MyAppLevelEditorFactoryListener"/>

    <projectService serviceInterface="com.intellij.codeInsight.daemon.impl.HectorComponentFactory"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.HectorComponentFactoryImpl"/>
  </extensions>
</idea-plugin>

