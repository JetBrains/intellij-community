<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <extensions defaultExtensionNs="com.intellij">
    <applicationService
      serviceInterface="com.intellij.diagnostic.StartUpPerformanceService"
      serviceImplementation="com.intellij.platform.ide.diagnostic.startUpPerformanceReporter.IdeStartUpPerformanceService"
      headlessImplementation="com.intellij.platform.diagnostic.startUpPerformanceReporter.HeadlessStartUpPerformanceService"
    />

    <applicationService
      serviceInterface="com.intellij.ide.plugins.PluginUtil"
      serviceImplementation="com.intellij.ide.plugins.PluginUtilModernImpl"
      overrides="true"
    />

    <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
    <appStarter id="save" implementation="com.intellij.openapi.application.SaveStarter"/>
    <appStarter id="exit" implementation="com.intellij.openapi.application.ExitStarter"/>
    <appStarter id="dumpLaunchParameters" implementation="com.intellij.openapi.application.DumpLaunchParametersStarter"/>
    <appStarter id="diff" implementation="com.intellij.diff.applications.DiffApplication"/>
    <appStarter id="merge" implementation="com.intellij.diff.applications.MergeApplication"/>
    <appStarter id="reopen" implementation="com.intellij.ui.win.RecentProjectApplication"/>
    <appStarter id="update" implementation="com.intellij.openapi.command.impl.UpdatePluginsApp"/>
    <appStarter id="keymap" implementation="com.intellij.help.impl.KeymapGenerator"/>
    <appStarter id="intentions" implementation="com.intellij.help.impl.IntentionDump"/>
    <appStarter id="inspections" implementation="com.intellij.help.impl.InspectionDump"/>
    <appStarter id="-version" implementation="com.intellij.help.impl.ShowProductVersion"/>
    <appStarter id="listBundledPlugins" implementation="com.intellij.ide.plugins.BundledPluginsLister"/>
    <appStarter id="installPlugins" implementation="com.intellij.ide.plugins.HeadlessPluginsInstaller"/>
    <appStarter id="generateEnvironmentKeysFile" implementation="com.intellij.ide.environment.impl.EnvironmentKeyStubGenerator"/>
    <appStarter id="buildEventsScheme"
                implementation="com.intellij.internal.statistic.eventLog.events.scheme.EventsSchemeBuilderAppStarter"/>
    <appStarter id="dumpActions" implementation="com.intellij.internal.statistic.utils.DumpActionsAppStarter"/>
    <protocolHandler implementation="com.intellij.openapi.application.JBProtocolHandler"/>

    <applicationService serviceInterface="com.intellij.openapi.application.ApplicationInfo"
                        serviceImplementation="com.intellij.openapi.application.impl.ApplicationInfoServiceDelegate"/>

    <groupConfigurable id="appearance" weight="70"
                       helpTopic="configurable.group.appearance.help.topic"
                       displayNameKey="configurable.group.appearance.settings.display.name"
                       descriptionKey="configurable.group.appearance.settings.description"/>
    <groupConfigurable id="editor" weight="60"
                       helpTopic="configurable.group.editor.help.topic"
                       displayNameKey="configurable.group.editor.settings.display.name"
                       descriptionKey="configurable.group.editor.settings.description"/>
    <groupConfigurable id="proofread" parentId="editor"
                       displayNameKey="configurable.group.proofread.settings.display.name"
                       descriptionKey="configurable.group.proofread.settings.description"/>
    <groupConfigurable id="project" weight="40"
                       displayNameKey="configurable.group.project.settings.display.name"
                       descriptionKey="configurable.group.project.settings.description"/>
    <groupConfigurable id="build" weight="30"
                       helpTopic="configurable.group.build.help.topic"
                       displayNameKey="configurable.group.build.settings.display.name"
                       descriptionKey="configurable.group.build.settings.description"/>
    <groupConfigurable id="profiler" parentId="build"
                       displayNameKey="configurable.group.profiler.settings.display.name"
                       descriptionKey="configurable.group.profiler.settings.description"/>
    <groupConfigurable id="language" weight="20"
                       helpTopic="configurable.group.language.help.topic"
                       displayNameKey="configurable.group.language.settings.display.name"
                       descriptionKey="configurable.group.language.settings.description"/>
    <groupConfigurable id="tools" weight="10"
                       helpTopic="configurable.group.tools.help.topic"
                       displayNameKey="configurable.group.tools.settings.display.name"
                       descriptionKey="configurable.group.tools.settings.description"/>
    <groupConfigurable id="other" weight="-10"
                       displayNameKey="configurable.group.other.settings.display.name"
                       descriptionKey="configurable.group.other.settings.description"/>

    <applicationService serviceImplementation="com.intellij.util.net.ssl.CertificateManager" preload="await"/>

    <applicationService serviceInterface="com.intellij.util.net.ssl.InitialUntrustedCertificateStrategyProvider"
                        serviceImplementation="com.intellij.util.net.ssl.DefaultInitialUntrustedCertificateStrategyProvider"/>

    <applicationService serviceInterface="com.intellij.util.net.ssl.OsCertificatesService"
                        serviceImplementation="com.intellij.util.net.ssl.OsCertificatesServiceImpl"/>

    <applicationService serviceInterface="com.intellij.ide.plugins.PluginConflictReporter"
                        serviceImplementation="com.intellij.diagnostic.GuiPluginConflictReporter"/>

    <applicationService serviceInterface="com.intellij.openapi.vfs.newvfs.ManagingFS"
                        serviceImplementation="com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.VirtualFileManager"
                        serviceImplementation="com.intellij.openapi.vfs.PlatformVirtualFileManager"/>

    <applicationService serviceInterface="com.intellij.openapi.vfs.pointers.VirtualFilePointerManager"
                        serviceImplementation="com.intellij.openapi.vfs.impl.VirtualFilePointerManagerImpl"/>
    <vfs.asyncListener implementation="com.intellij.openapi.vfs.impl.VirtualFilePointerManagerImpl$MyAsyncFileListener"/>
    <persistentFsConnectionListener
      implementation="com.intellij.openapi.vfs.impl.VirtualFilePointerManagerImpl$MyPersistentFsConnectionListener"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.colors.EditorColorsManager"
                        serviceImplementation="com.intellij.openapi.editor.colors.impl.EditorColorsManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.util.registry.RegistryManager"
                        serviceImplementation="com.intellij.openapi.util.registry.RegistryManagerImpl"/>

    <!-- requested by FileBasedIndexImpl, so, to make start-up more flat, also preload -->
    <applicationService serviceInterface="com.intellij.openapi.fileEditor.FileDocumentManager" preload="true"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.FileDocumentManagerImpl"/>
    <persistentFsConnectionListener
      implementation="com.intellij.openapi.fileEditor.impl.FileDocumentManagerImpl$MyPersistentFsConnectionListener"/>
    <projectCloseHandler implementation="com.intellij.openapi.fileEditor.impl.FileDocumentManagerImpl$MyProjectCloseHandler"/>
    <vfs.asyncListener implementation="com.intellij.openapi.fileEditor.impl.FileDocumentManagerImpl$MyAsyncFileListener"/>

    <!-- FileTypeManagerImpl wants PropertiesComponent -->
    <applicationService serviceInterface="com.intellij.ide.util.PropertiesComponent"
                        serviceImplementation="com.intellij.ide.util.AppPropertyService" preload="true"/>
    <projectService serviceInterface="com.intellij.ide.util.PropertiesComponent"
                    serviceImplementation="com.intellij.ide.util.ProjectPropertyService"/>

    <applicationService serviceInterface="com.intellij.openapi.fileTypes.FileTypeManager"
                        serviceImplementation="com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl"/>
    <vfs.asyncListener implementation="com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl$MyAsyncVfsListener"/>

    <persistentFsConnectionListener implementation="com.intellij.openapi.fileTypes.impl.IgnoredFileCacheCleaner"/>

    <applicationService serviceImplementation="com.intellij.util.net.HttpConfigurable" preload="true"/>
    <applicationService serviceImplementation="com.intellij.ide.ClipboardSynchronizer" preload="true"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.KeymapManager"
                        serviceImplementation="com.intellij.openapi.keymap.impl.KeymapManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.project.ProjectManager"
                        serviceImplementation="com.intellij.openapi.project.impl.ProjectManagerImpl"
                        testServiceImplementation="com.intellij.project.TestProjectManager"/>

    <!-- listen VFS_CHANGES - it is core service, so, don't want use lazy message bus listener without a reason -->
    <applicationService serviceInterface="com.intellij.openapi.command.undo.DocumentReferenceManager"
                        serviceImplementation="com.intellij.openapi.command.impl.DocumentReferenceManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.diagnostic.LowMemoryNotifier" preload="true"/>
    <applicationService serviceInterface="com.intellij.diagnostic.EditMemorySettingsService"
                        serviceImplementation="com.intellij.diagnostic.EditMemorySettingsServiceImpl" preload="true"/>

    <backgroundPostStartupActivity implementation="com.intellij.diagnostic.IdeHeartbeatEventReporter"/>

    <applicationService serviceInterface="com.intellij.ide.plugins.PluginManagerConfigurableService"
                        serviceImplementation="com.intellij.ide.plugins.PluginManagerConfigurableServiceImpl"/>

    <registryKey defaultValue="false" os="windows" description="Using the experimental remote agent inside WSL to launch processes." key="wsl.use.remote.agent.for.launch.processes" restartRequired="false"/>
    <applicationService serviceInterface="com.intellij.ide.plugins.PluginManagementPolicy"
                        serviceImplementation="com.intellij.ide.plugins.DefaultPluginManagementPolicy"/>

    <experimentalFeature id="wsl.p9.support" percentOfUsers="100">
      <description>Allow IDE to use the \\wsl$\ paths to access the WSL filesystem using 9P protocol (available since Windows 10 update 1903).</description>
    </experimentalFeature>
    <experimentalFeature id="wsl.prefer.p9.support" percentOfUsers="100">
      <description>Prefer 9P FS access protocol even if direct access to WSL FS is available.</description>
    </experimentalFeature>
    <experimentalFeature id="wsl.p9.show.roots.in.file.chooser" percentOfUsers="100">
      <description>Show UNC roots (\\wsl$\...) of available WSL distributions in the file chooser (available since Windows 10 update 1903).</description>
    </experimentalFeature>
    <experimentalFeature id="wsl.execute.with.wsl.exe" percentOfUsers="100">
      <description>Run WSL commands using wsl.exe, e.g. "wsl.exe --distribution Ubuntu-20.04" (available since Windows 10 update 1903).</description>
    </experimentalFeature>
    <registryKey key="wsl.list.prefer.verbose.output" os="windows" defaultValue="true" restartRequired="false"
                 description="Use 'wsl.exe -l -v' to get distribution list. If it's disabled 'wsl.exe -l -q' will be used."/>
    <registryKey key="wsl.use.utf8.encoding" os="windows" defaultValue="true" restartRequired="false"
                 description="Use UTF-8 as default encoding for all WSL distributions, otherwise default console encoding will be used (see Preferences | Editor | General | Console )"/>
    <registryKey key="wsl.fix.initial.tty.size.when.running.without.tty"
                 restartRequired="false"
                 description="Set initial Linux tty size to 100x100 for WSL processes not attached to Windows PTY (workaround for https://github.com/microsoft/WSL/issues/10701)"
                 defaultValue="true"/>
    <applicationService serviceInterface="com.intellij.execution.wsl.WslDistributionManager"
                        serviceImplementation="com.intellij.execution.wsl.WslDistributionManagerImpl"/>
    <executionTargetType implementation="com.intellij.execution.wsl.target.WslTargetType"/>
    <registryKey key="wsl.obtain.windows.host.ip.alternatively" os="windows" defaultValue="true" restartRequired="true"
                 description="Obtain Windows host machine IP alternatively (not using the recommended 'cat /etc/resolv.conf | grep nameserver')."/>

    <registryKey key="wsl.proxy.connect.localhost" os="windows" defaultValue="false" restartRequired="false"
                 description="Connect to 127.0.0.1 on WSLProxy instead of public WSL IP which might be inaccessible due to routing issues"/>

    <virtualFileSystem implementationClass="com.intellij.openapi.vfs.impl.local.LocalFileSystemImpl" key="file" physical="true"/>
    <virtualFileSystem implementationClass="com.intellij.openapi.vfs.impl.jar.JarFileSystemImpl" key="jar" physical="true"/>
    <virtualFileSystem implementationClass="com.intellij.openapi.vfs.ex.temp.TempFileSystem" key="temp" physical="true"/>

    <applicationService serviceImplementation="com.intellij.ui.jcef.JBCefStartup" preload="notHeadless" os="mac"/>
    <cachesInvalidator implementation="com.intellij.ui.jcef.JBCefAppCacheInvalidator" order="last"/>

    <applicationService serviceInterface="com.intellij.ide.ui.IdeUiService"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.IdeUiServiceImpl"/>

    <applicationService serviceInterface="com.intellij.execution.ExecutorRegistry"
                        serviceImplementation="com.intellij.execution.ExecutorRegistryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.project.impl.ProjectStoreFactory"
                        serviceImplementation="com.intellij.configurationStore.PlatformProjectStoreFactory"/>

    <applicationService serviceInterface="com.intellij.openapi.components.impl.stores.IComponentStore"
                        serviceImplementation="com.intellij.configurationStore.ApplicationStoreImpl"/>
    <vfs.asyncListener implementation="com.intellij.configurationStore.MyAsyncVfsListener"/>

    <applicationService serviceInterface="com.intellij.openapi.components.PathMacroManager"
                        serviceImplementation="com.intellij.configurationStore.ApplicationPathMacroManager"/>

    <applicationService serviceImplementation="com.intellij.configurationStore.DefaultProjectExportableAndSaveTrigger"/>

    <applicationService serviceInterface="com.intellij.openapi.wm.impl.FrameTitleBuilder"
                        serviceImplementation="com.intellij.openapi.wm.impl.PlatformFrameTitleBuilder"/>

    <applicationService serviceInterface="com.intellij.openapi.actionSystem.ActionUpdaterInterceptor"
                        serviceImplementation="com.intellij.openapi.actionSystem.impl.ActionUpdaterInterceptorImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.options.ShowSettingsUtil"
                        serviceImplementation="com.intellij.ide.actions.ShowSettingsUtilImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.help.HelpManager"
                        serviceImplementation="com.intellij.help.impl.HelpManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileChooser.FileChooserFactory"
                        serviceImplementation="com.intellij.openapi.fileChooser.impl.FileChooserFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileChooser.ClientFileChooserFactory"
                        serviceImplementation="com.intellij.openapi.fileChooser.impl.LocalFileChooserFactory" client="local"/>
    <applicationService serviceInterface="com.intellij.openapi.progress.ProgressManager"
                        serviceImplementation="com.intellij.openapi.progress.impl.ProgressManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.ide.ui.customization.CustomActionsSchema"/>
    <applicationService serviceInterface="com.intellij.ide.ui.ProductIcons"
                        serviceImplementation="com.intellij.ide.impl.ui.ProductIconsImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.project.DefaultProjectFactory"
                        serviceImplementation="com.intellij.openapi.project.DefaultProjectFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.command.CommandProcessor"
                        serviceImplementation="com.intellij.openapi.command.impl.CommandProcessorImpl"/>

    <applicationService serviceInterface="com.intellij.ide.CommonActionsManager"
                        serviceImplementation="com.intellij.ide.impl.CommonActionsManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.ide.CopyPasteManager"
                        serviceImplementation="com.intellij.ide.CopyPasteManagerEx"/>
    <applicationService serviceInterface="com.intellij.ide.ClientCopyPasteManager"
                        serviceImplementation="com.intellij.ide.LocalCopyPasteManager"
                        client="local"/>
    <applicationService serviceInterface="com.intellij.openapi.ui.popup.JBPopupFactory"
                        serviceImplementation="com.intellij.ui.popup.PopupFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileEditor.ex.FileEditorProviderManager"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.FileEditorProviderManagerImpl"/>

    <applicationService serviceInterface="com.intellij.ide.ui.search.SearchableOptionsRegistrar"
                        serviceImplementation="com.intellij.ide.ui.search.SearchableOptionsRegistrarImpl"/>
    <search.optionContributor implementation="com.intellij.ide.ui.search.PluginSearchableOptionContributor"/>

    <applicationService serviceInterface="com.intellij.ide.actions.searcheverywhere.TabsCustomizationStrategy"
                        serviceImplementation="com.intellij.ide.actions.searcheverywhere.SearchEverywhereMlTabsCustomizationStrategy"/>

    <applicationService serviceImplementation="com.intellij.openapi.fileEditor.impl.EditorEmptyTextPainter"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.EditorCopyPasteHelper"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorCopyPasteHelperImpl"/>

    <actionConfigurationCustomizer implementation="com.intellij.openapi.actionSystem.ex.QuickListsManager$QuickListActionCustomizer"/>

    <applicationService serviceInterface="com.intellij.openapi.vfs.impl.http.RemoteFileManager"
                        serviceImplementation="com.intellij.openapi.vfs.impl.http.RemoteFileManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.newvfs.RefreshQueue"
                        serviceImplementation="com.intellij.openapi.vfs.newvfs.RefreshQueueImpl"/>

    <cachesInvalidator implementation="com.intellij.openapi.vfs.newvfs.FSRecordsCacheInvalidator" order="after rootCachesInvalidator"/>
    <cachesInvalidator id="rootCachesInvalidator" implementation="com.intellij.ide.actions.RootCachesInvalidator" order="first"/>

    <applicationService serviceImplementation="com.intellij.ui.popup.LocalPopupComponentFactory"
                        serviceInterface="com.intellij.ui.popup.PopupComponentFactory"
                        client="all"/>
    <applicationService serviceInterface="com.intellij.openapi.ui.DialogWrapperPeerFactory"
                        serviceImplementation="com.intellij.openapi.ui.impl.DialogWrapperPeerFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ui.content.ContentFactory"
                        serviceImplementation="com.intellij.ui.content.ContentFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ui.TreeUIHelper"
                        serviceImplementation="com.intellij.ui.TreeUIHelperImpl"/>
    <applicationService serviceInterface="com.intellij.ui.ExpandableItemsHandlerFactory"
                        serviceImplementation="com.intellij.ui.ExpandableItemsHandlerFactoryImpl"/>
    <applicationService
      serviceInterface="com.intellij.openapi.ui.messages.MessagesService"
      serviceImplementation="com.intellij.ui.messages.MessagesServiceImpl"/>

    <applicationService serviceImplementation="com.intellij.ui.WinFocusStealer" os="windows" preload="notHeadless"/>

    <applicationService serviceInterface="com.intellij.diff.DiffManager"
                        serviceImplementation="com.intellij.diff.DiffManagerImpl"/>
    <applicationService serviceInterface="com.intellij.diff.DiffContentFactory"
                        serviceImplementation="com.intellij.diff.DiffContentFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.diff.DiffRequestFactory"
                        serviceImplementation="com.intellij.diff.DiffRequestFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.diff.comparison.ComparisonManager"
                        serviceImplementation="com.intellij.diff.comparison.ComparisonManagerImpl"/>
    <applicationService serviceImplementation="com.intellij.diff.impl.DiffSettingsHolder"/>
    <applicationService serviceImplementation="com.intellij.diff.tools.util.base.TextDiffSettingsHolder"/>
    <applicationService serviceImplementation="com.intellij.diff.tools.external.ExternalDiffSettings"/>
    <applicationService serviceImplementation="com.intellij.diff.DiffApplicationSettings"/>
    <applicationConfigurable groupId="tools" id="diff.base"
                             bundle="messages.DiffBundle"
                             key="configurable.DiffSettingsConfigurable.display.name"
                             instance="com.intellij.diff.settings.DiffSettingsConfigurable">
      <configurable id="diff.external"
                    bundle="messages.DiffBundle"
                    key="configurable.ExternalDiffSettingsConfigurable.display.name"
                    instance="com.intellij.diff.settings.ExternalDiffSettingsConfigurable"/>
    </applicationConfigurable>
    <applicationConfigurable groupId="appearance" groupWeight="-10"
                             id="preferences.pathVariables"
                             key="title.path.variables"
                             bundle="messages.ApplicationBundle"
                             instance="com.intellij.application.options.pathMacros.PathMacroConfigurable"/>
    <applicationConfigurable id="trusted.hosts"
                             bundle="messages.IdeBundle"
                             key="configurable.trusted.hosts.display.name"
                             instance="com.intellij.ide.impl.TrustedHostsConfigurable"
                             groupId="build"/>
    <trustedProjectsLocator implementation="com.intellij.ide.trustedProjects.impl.DefaultTrustedProjectsLocator"/>

    <activityTracker implementation="com.intellij.openapi.project.DumbServiceTracker"/>
    <activityTracker implementation="com.intellij.openapi.project.ScanningTracker"/>
    <activityTracker implementation="com.intellij.ide.startup.StartupActivityTracker"/>
    <activityTracker implementation="com.intellij.openapi.vfs.newvfs.VfsActivityTracker"/>
    <activityTracker implementation="com.intellij.configurationStore.SavingTracker"/>


    <colorAndFontPanelFactory implementation="com.intellij.openapi.diff.impl.settings.DiffColorsPageFactory"/>
    <colorAndFontDescriptorProvider implementation="com.intellij.openapi.diff.impl.settings.DiffColorsPageFactory"/>
    <statistics.notificationIdsHolder implementation="com.intellij.diff.DiffNotificationIdsHolder"/>

    <dataValidators implementation="com.intellij.ide.impl.PlatformDataValidators"/>

    <getDataRule key="diff_navigatable_array" implementationClass="com.intellij.diff.actions.impl.DiffNavigatableArrayRule" type="fast"/>
    <actionPromoter implementation="com.intellij.diff.DiffActionPromoter"/>

    <projectService serviceInterface="com.intellij.openapi.diff.DirDiffManager"
                    serviceImplementation="com.intellij.openapi.diff.impl.dir.DirDiffManagerImpl"/>
    <diff.DiffExtension implementation="com.intellij.diff.actions.ShowBlankDiffWindowDiffExtension"/>

    <projectService serviceInterface="com.intellij.diff.editor.DiffEditorTabFilesManager"
                    serviceImplementation="com.intellij.diff.editor.DefaultDiffTabFilesManager"/>

    <daemon.highlightInfoFilter implementation="com.intellij.codeInsight.daemon.OutsidersPsiFileSupport$HighlightFilter"/>
    <daemon.intentionActionFilter implementation="com.intellij.codeInsight.daemon.OutsidersPsiFileSupport$IntentionFilter"/>
    <defaultHighlightingSettingProvider id="GeneratedSourcesHighlightingSettingProvider"
                                        implementation="com.intellij.codeInsight.daemon.OutsidersPsiFileSupport$HighlightingSettingProvider"/>

    <fileEditorProvider implementation="com.intellij.diff.editor.DiffEditorProvider"/>
    <fileEditorProvider implementation="com.intellij.ide.browsers.actions.WebPreviewEditorProvider"/>
    <fileEditorProvider implementation="com.intellij.ide.plugins.UIComponentEditorProvider"/>
    <fileIconProvider implementation="com.intellij.ide.plugins.UIComponentVirtualFile$UIComponentVirtualFileIconProvider"/>

    <diff.editor.diffRequestProcessorEditorCustomizer implementation="com.intellij.diff.editor.DefaultDiffFileEditorCustomizer"/>

    <fileIconProvider implementation="com.intellij.diff.editor.DiffFileIconProvider"/>

    <editorTabTitleProvider implementation="com.intellij.diff.editor.DiffEditorTabTitleProvider"/>

    <!-- combined diff editor: UP, DOWN, LEFT, RIGHT -->
    <editorActionHandler action="EditorUp" id="combinedDiffUp" order="last"
                         implementationClass="com.intellij.diff.tools.combined.CombinedDiffEditorUpHandler"/>
    <editorActionHandler action="EditorDown" id="combinedDiffDown" order="last"
                         implementationClass="com.intellij.diff.tools.combined.CombinedDiffEditorDownHandler"/>
    <editorActionHandler action="EditorLeft" id="combinedDiffLeft" order="last"
                         implementationClass="com.intellij.diff.tools.combined.CombinedDiffEditorLeftHandler"/>
    <editorActionHandler action="EditorRight" id="combinedDiffRight" order="last"
                         implementationClass="com.intellij.diff.tools.combined.CombinedDiffEditorRightHandler"/>

    <!-- combined diff editor: UP, DOWN, LEFT, RIGHT with selection-->
    <editorActionHandler action="EditorUpWithSelection" id="combinedDiffUpWithSelection" order="last"
                         implementationClass="com.intellij.diff.tools.combined.CombinedDiffEditorUpWithSelectionHandler"/>
    <editorActionHandler action="EditorDownWithSelection" id="combinedDiffDownWithSelection" order="last"
                         implementationClass="com.intellij.diff.tools.combined.CombinedDiffEditorDownWithSelectionHandler"/>
    <editorActionHandler action="EditorLeftWithSelection" id="combinedDiffLeftWithSelection" order="last"
                         implementationClass="com.intellij.diff.tools.combined.CombinedDiffEditorLeftHandler"/>
    <editorActionHandler action="EditorRightWithSelection" id="combinedDiffRightWithSelection" order="last"
                         implementationClass="com.intellij.diff.tools.combined.CombinedDiffEditorRightHandler"/>

    <!-- combined diff editor: PageUp, Page Down -->
    <editorActionHandler action="EditorPageUp" id="combinedDiffPageUp" order="last"
                         implementationClass="com.intellij.diff.tools.combined.CombinedDiffEditorPageUpHandler"/>
    <editorActionHandler action="EditorPageDown" id="combinedDiffPageDown" order="last"
                         implementationClass="com.intellij.diff.tools.combined.CombinedDiffEditorPageDownHandler"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.ScrollPositionCalculator"
                        serviceImplementation="com.intellij.openapi.editor.impl.ScrollPositionCalculatorImpl"/>

    <applicationService serviceInterface="com.intellij.ui.SystemNotifications"
                        serviceImplementation="com.intellij.ui.SystemNotificationsImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.KeymapGroupFactory"
                        serviceImplementation="com.intellij.openapi.keymap.impl.KeymapGroupFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.impl.ActionShortcutRestrictions"
                        serviceImplementation="com.intellij.openapi.keymap.impl.ActionShortcutRestrictionsImpl"/>
    <applicationService serviceInterface="com.intellij.ide.dnd.DnDManager"
                        serviceImplementation="com.intellij.ide.dnd.DnDManagerImpl"
                        headlessImplementation="com.intellij.ide.dnd.HeadlessDnDManager"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.encoding.EncodingManager"
                        serviceImplementation="com.intellij.openapi.vfs.encoding.EncodingManagerImpl"/>
    <applicationService serviceImplementation="com.intellij.ide.plugins.PluginManagerUISettings"/>
    <postStartupActivity implementation="com.intellij.ide.actions.IdeScalePostStartupActivity"/>

    <applicationService serviceInterface="com.intellij.codeInsight.hint.HintManager"
                        serviceImplementation="com.intellij.codeInsight.hint.HintManagerImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.hint.ClientHintManager"
                        serviceImplementation="com.intellij.codeInsight.hint.LocalHintManager"
                        client="local"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.actionSystem.EditorActionManager"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorActionManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.actionSystem.TypedAction"
                        serviceImplementation="com.intellij.openapi.editor.impl.TypedActionImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.actionSystem.LatencyRecorder"
                        serviceImplementation="com.intellij.internal.performance.LatencyRecorderImpl"/>
    <applicationService serviceImplementation="com.intellij.util.text.DateTimeFormatManager"/>

    <applicationService serviceImplementation="com.intellij.openapi.updateSettings.impl.UpdateSettings"/>
    <applicationService serviceImplementation="com.intellij.openapi.updateSettings.UpdateStrategyCustomization"/>
    <applicationService serviceInterface="com.intellij.platform.ide.customization.ExternalProductResourceUrls"
                        serviceImplementation="com.intellij.platform.ide.impl.customization.LegacyExternalProductResourceUrls"/>

    <applicationService serviceImplementation="com.intellij.platform.ide.impl.feedback.PlatformFeedbackDialogs"/>

    <applicationService serviceImplementation="com.intellij.openapi.application.IdeUrlTrackingParametersProvider"/>

    <applicationService serviceInterface="com.intellij.featureStatistics.FeatureUsageTracker"
                        serviceImplementation="com.intellij.featureStatistics.FeatureUsageTrackerImpl"/>
    <applicationService serviceInterface="com.intellij.reporting.FreezeLogger"
                        serviceImplementation="com.intellij.reporting.FreezeLoggerImpl"/>
    <applicationService serviceInterface="com.intellij.featureStatistics.ProductivityFeaturesRegistry"
                        serviceImplementation="com.intellij.featureStatistics.ProductivityFeaturesRegistryImpl"/>

    <applicationService serviceInterface="com.intellij.util.graph.GraphFactory"
                        serviceImplementation="com.intellij.util.graph.impl.GraphFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.util.graph.GraphAlgorithms"
                        serviceImplementation="com.intellij.util.graph.impl.GraphAlgorithmsImpl"/>

    <applicationService serviceInterface="com.intellij.concurrency.AsyncFutureFactory"
                        serviceImplementation="com.intellij.concurrency.AsyncFutureFactoryImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.keymap.impl.DefaultKeymap"/>

    <applicationService serviceInterface="com.intellij.ide.passwordSafe.PasswordSafe"
                        serviceImplementation="com.intellij.ide.passwordSafe.impl.PasswordSafeImpl"
                        testServiceImplementation="com.intellij.ide.passwordSafe.impl.TestPasswordSafeImpl"/>

    <applicationConfigurable parentId="preferences.general" instance="com.intellij.credentialStore.PasswordSafeConfigurable"
                             bundle="messages.CredentialStoreBundle"
                             key="password.safe.configurable"
                             id="application.passwordSafe"/>

    <applicationService serviceInterface="com.intellij.credentialStore.CredentialStoreUiService"
                        serviceImplementation="com.intellij.credentialStore.CredentialStoreUiServiceImpl"/>

    <applicationService serviceInterface="com.intellij.execution.process.ElevationService"
                        serviceImplementation="com.intellij.execution.process.elevation.ElevationServiceImpl"/>
    <applicationService serviceInterface="com.intellij.execution.process.ElevationServiceAvailability"
                        serviceImplementation="com.intellij.execution.process.elevation.ElevationServiceAvailabilityImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.options.SchemeManagerFactory"
                        serviceImplementation="com.intellij.configurationStore.schemeManager.SchemeManagerFactoryBase$ApplicationSchemeManagerFactory"/>
    <projectService serviceInterface="com.intellij.openapi.options.SchemeManagerFactory"
                    serviceImplementation="com.intellij.configurationStore.schemeManager.SchemeManagerFactoryBase$ProjectSchemeManagerFactory"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.colors.TextAttributesKey$TextAttributeKeyDefaultsProvider"
                        serviceImplementation="com.intellij.openapi.editor.colors.impl.TextAttributeKeyDefaultsProviderImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.colors.EditorColorPaletteFactory"
                        serviceImplementation="com.intellij.openapi.options.colors.EditorColorPaletteFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.FileAppearanceService"
                        serviceImplementation="com.intellij.openapi.roots.ui.FileAppearanceServiceImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.SdkAppearanceService"
                        serviceImplementation="com.intellij.openapi.roots.ui.SdkAppearanceServiceImpl"/>

    <statistics.projectUsagesCollector implementation="com.intellij.openapi.roots.impl.BundledResourceUsageCollector"/>
    <statistics.validation.customValidationRule implementation="com.intellij.openapi.roots.impl.BundledResourcePathValidationRule"/>

    <applicationService serviceInterface="com.intellij.ide.actions.ActionsCollector"
                        serviceImplementation="com.intellij.internal.statistic.collectors.fus.actions.persistence.ActionsCollectorImpl"/>
    <applicationService serviceImplementation="com.intellij.internal.statistic.collectors.fus.ui.GotItUsageCollector"/>
    <applicationService serviceInterface="com.intellij.internal.statistic.eventLog.FeatureUsageUiEvents"
                        serviceImplementation="com.intellij.internal.statistic.collectors.fus.ui.FeatureUsageUiEventsImpl"/>
    <applicationService serviceInterface="com.intellij.ide.plugins.PluginInfoProvider"
                        serviceImplementation="com.intellij.ide.plugins.marketplace.MarketplaceRequests"
                        preload="true"/>
    <applicationService serviceInterface="com.intellij.ide.ConsentOptionsProvider"
                        serviceImplementation="com.intellij.ide.gdpr.ConsentOptionsProviderImpl"/>
    <applicationService serviceInterface="com.intellij.ide.StatisticsNotificationManager"
                        serviceImplementation="com.intellij.internal.statistic.notification.StatisticsNotificationManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.util.WindowStateService"
                        serviceImplementation="com.intellij.openapi.util.WindowStateApplicationService"/>
    <projectService serviceInterface="com.intellij.openapi.util.WindowStateService"
                    serviceImplementation="com.intellij.openapi.util.WindowStateProjectService"/>

    <applicationService serviceInterface="com.intellij.ide.script.IdeScriptEngineManager"
                        serviceImplementation="com.intellij.ide.script.IdeScriptEngineManagerImpl"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.fileEditor.impl.IdeScriptEngineUsageCollector"/>

    <applicationService serviceInterface="com.intellij.ide.UiActivityMonitor"
                        serviceImplementation="com.intellij.ide.UiActivityMonitorImpl"/>

    <applicationService serviceImplementation="com.intellij.diagnostic.WindowsDefenderChecker"/>
    <applicationService serviceImplementation="com.intellij.diagnostic.GcPauseWatcher"/>

    <applicationService serviceInterface="com.intellij.execution.process.ProcessHandlerFactory"
                        serviceImplementation="com.intellij.execution.process.ProcessHandlerFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.execution.process.ColoredOutputTypeRegistry"
                        serviceImplementation="com.intellij.execution.process.ColoredOutputTypeRegistryImpl"/>

    <applicationService serviceInterface="com.intellij.execution.process.ProcessService"
                        serviceImplementation="com.intellij.execution.process.ProcessServiceImpl"/>

    <applicationService serviceInterface="com.intellij.util.io.IoService"
                        serviceImplementation="com.intellij.util.io.IoServiceImpl"/>

    <applicationService serviceImplementation="com.intellij.diagnostic.HeapDumpAnalysisSupport"/>

    <applicationService serviceInterface="com.intellij.diagnostic.EventWatcher"
                        serviceImplementation="com.intellij.diagnostic.EventWatcherService" headlessImplementation=""/>
    <toolWindow id="Events Watcher" anchor="bottom" canCloseContents="false" doNotActivateOnStart="true"
                factoryClass="com.intellij.diagnostic.ui.EventWatcherToolWindowFactory"/>

    <applicationService serviceInterface="com.intellij.openapi.fileEditor.FileNavigator"
                        serviceImplementation="com.intellij.openapi.fileEditor.FileNavigatorImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.vcs.FileStatusFactory"
                        serviceImplementation="com.intellij.openapi.vcs.FileStatusFactoryImpl"/>
    <projectService serviceInterface="com.intellij.openapi.vfs.ReadonlyStatusHandler"
                    serviceImplementation="com.intellij.openapi.vcs.readOnlyHandler.ReadonlyStatusHandlerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.startup.StartupManager"
                    serviceImplementation="com.intellij.ide.startup.impl.StartupManagerImpl" preload="notHeadless"/>
    <projectService serviceImplementation="com.intellij.openapi.ui.MasterDetailsStateService"/>

    <projectService serviceInterface="com.intellij.ui.docking.DockManager"
                    serviceImplementation="com.intellij.ui.docking.impl.DockManagerImpl"/>
    <projectService serviceInterface="com.intellij.ide.SelectInEditorManager"
                    serviceImplementation="com.intellij.ide.impl.SelectInEditorManagerImpl"/>
    <projectService serviceImplementation="com.intellij.ui.RecentsManager"/>
    <projectService serviceInterface="com.intellij.ui.content.MessageView"
                    serviceImplementation="com.intellij.ui.content.impl.MessageViewImpl"/>

    <projectService serviceImplementation="com.intellij.ui.tabs.PerTeamFileColorModelStorageManager"/>
    <projectService serviceImplementation="com.intellij.ui.tabs.PerUserFileColorModelStorageManager"/>

    <projectService serviceInterface="com.intellij.openapi.project.DumbService"
                    serviceImplementation="com.intellij.openapi.project.DumbServiceImpl"/>
    <postStartupActivity implementation="com.intellij.openapi.project.SmartModeScheduler$SmartModeSchedulerStartupActivity" order="last"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.project.DumbModeBlockedFunctionalityCollector"/>

    <projectService serviceInterface="com.intellij.openapi.project.DumbUtil"
                    serviceImplementation="com.intellij.openapi.project.DumbUtilImpl"/>

    <projectService serviceInterface="com.intellij.openapi.project.BaseProjectDirectories"
                    serviceImplementation="com.intellij.ide.project.impl.BaseProjectDirectoriesImpl"/>

    <projectService serviceImplementation="com.intellij.execution.testframework.export.ExportTestResultsConfiguration"/>
    <registryKey key="scroll.to.first.trace" defaultValue="true"
                 description="In tests view: if 'scrollToStackTrace' is enabled and node with multiple children is selected, scroll to the trace of the first child"/>

    <projectService serviceInterface="com.intellij.openapi.project.ProjectReloadState"
                    serviceImplementation="com.intellij.openapi.project.impl.ProjectReloadStateImpl"/>

    <projectService serviceInterface="com.intellij.externalDependencies.ExternalDependenciesManager"
                    serviceImplementation="com.intellij.externalDependencies.impl.ExternalDependenciesManagerImpl"/>

    <projectService serviceInterface="com.intellij.codeInsight.actions.ReaderModeSettings"
                    serviceImplementation="com.intellij.codeInsight.actions.ReaderModeSettingsImpl"
                    client="local"/>

    <applicationService serviceInterface="com.intellij.ide.PlatformIdeService"
                        serviceImplementation="com.intellij.ide.PlatformIdeServiceImpl"/>

    <postStartupActivity implementation="com.intellij.ide.ProjectWindowCustomizerListener" order="last"/>

    <applicationService serviceInterface="com.intellij.openapi.options.advanced.AdvancedSettings"
                        serviceImplementation="com.intellij.openapi.options.advanced.AdvancedSettingsImpl"/>

    <projectService serviceImplementation="com.intellij.ide.actions.DirectoryPathMatcherService"/>

    <registryKey key="lists.use.open.in.right.splitter" defaultValue="true"
                 description="Add icon 'open In right splitter' to recent files menu"/>
    <welcomeFrameProvider implementation="com.intellij.openapi.wm.impl.welcomeScreen.FlatWelcomeFrameProvider"/>
    <welcomeTabFactory id="ProjectsWelcomeTab" implementation="com.intellij.openapi.wm.impl.welcomeScreen.ProjectsTabFactory"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.openapi.wm.impl.welcomeScreen.statistics.WelcomeScreenCounterUsageCollector"/>
    <welcomeTabFactory id="CustomizeWelcomeTab" implementation="com.intellij.openapi.wm.impl.welcomeScreen.CustomizeTabFactory"
                       order="after ProjectsWelcomeTab"/>
    <welcomeTabFactory id="PluginsWelcomeTab" implementation="com.intellij.openapi.wm.impl.welcomeScreen.PluginsTabFactory"
                       order="after CustomizeWelcomeTab"/>
    <welcomeTabFactory id="LearnIdeWelcomeTab" implementation="com.intellij.openapi.wm.impl.welcomeScreen.LearnIdeTabFactory"
                       order="after PluginsWelcomeTab"/>
    <welcomeScreenCustomization id="defaultCustomization"
                                implementation="com.intellij.openapi.wm.impl.welcomeScreen.WelcomeScreenDefaultCustomization"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.customize.transferSettings.fus.TransferSettingsCollector"/>
    <statistics.validation.customValidationRule implementation="com.intellij.ide.customize.transferSettings.fus.KnownPluginValidationRule"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.platform.ide.bootstrap.IdeStartupWizardCollector"/>
    <registryKey defaultValue="-1"
                 description="Defines the experiment group number. Negative value will be ignored."
                 key="ide.transfer.wizard.experiment.group"/>

    <themeProvider id="Darcula" path="/themes/darcula.theme.json" targetUi="classic"/>
    <themeProvider id="IntelliJ" path="/themes/intellijlaf.theme.json" parentTheme="Darcula" targetUi="classic"/>

    <themeProvider id="JetBrainsLightTheme" path="/themes/Light.theme.json" parentTheme="IntelliJ" targetUi="classic"/>
    <bundledColorScheme id="IntelliJ Light" path="themes/Light.xml"/>

    <themeProvider id="ExperimentalLight" path="/themes/expUI/expUI_light.theme.json" parentTheme="IntelliJ" targetUi="new"/>
    <themeProvider id="ExperimentalLightWithLightHeader" path="/themes/expUI/expUI_light_with_light_header.theme.json"
                   parentTheme="ExperimentalLight" targetUi="new"/>
    <bundledColorScheme id="Light" path="themes/expUI/expUI_lightScheme.xml"/>

    <themeProvider id="ExperimentalDark" path="/themes/expUI/expUI_dark.theme.json" parentTheme="Darcula" targetUi="new"/>
    <bundledColorScheme id="Dark" path="themes/expUI/expUI_darkScheme.xml"/>
    <bundledColorScheme id="Darcula Contrast" path="themes/expUI/expUI_darculaContrastScheme.xml"/>

    <themeProvider id="JetBrainsHighContrastTheme" path="/themes/HighContrast.theme.json"/>
    <bundledColorScheme id="High contrast" path="themes/highContrastScheme.xml"/>

    <iconMapper mappingFile="PlatformIconMappings.json"/>

    <themeMetadataProvider path="/themes/metadata/IntelliJPlatform.themeMetadata.json"/>
    <themeMetadataProvider path="/themes/metadata/JDK.themeMetadata.json"/>

    <startPagePromoter id="NewUiPromoter" implementation="com.intellij.openapi.wm.impl.welcomeScreen.NewUiPromoter"/>

    <applicationService serviceImplementation="com.intellij.ui.IdeUICustomization" preload="notHeadless"/>

    <!-- General -->
    <applicationConfigurable groupId="appearance" groupWeight="120" key="title.general" bundle="messages.IdeBundle" id="preferences.general"
                             instance="com.intellij.ide.GeneralSettingsConfigurable"/>

    <!-- Appearance -->
    <applicationConfigurable groupId="appearance" groupWeight="150" instance="com.intellij.ide.ui.AppearanceConfigurable"
                             id="preferences.lookFeel" key="title.appearance" bundle="messages.IdeBundle"/>

    <!-- Keymap -->
    <applicationConfigurable groupId="root" groupWeight="65" instance="com.intellij.openapi.keymap.impl.ui.KeymapPanel"
                             id="preferences.keymap" key="keymap.display.name"
                             bundle="messages.KeyMapBundle"/>
    <applicationConfigurable groupId="appearance" instance="com.intellij.openapi.keymap.impl.ui.QuickListsPanel"
                             id="reference.idesettings.quicklists"
                             bundle="messages.IdeBundle"
                             key="configurable.quick.lists.name"/>

    <!-- Customizations -->
    <applicationConfigurable groupId="appearance" groupWeight="130" instance="com.intellij.ide.ui.customization.CustomizationConfigurable"
                             id="preferences.customizations"
                             key="title.customizations" bundle="messages.IdeBundle"/>

    <!-- New UI -->
    <applicationConfigurable groupId="appearance"
                             groupWeight="149"
                             id="reference.settings.ide.settings.new.ui"
                             instance="com.intellij.ui.ExperimentalUIConfigurable"
                             bundle="messages.IdeBundle"
                             key="configurable.new.ui.name"/>

    <!-- Notifications -->
    <applicationConfigurable groupId="appearance"
                             groupWeight="110"
                             id="reference.settings.ide.settings.notifications"
                             provider="com.intellij.notification.impl.NotificationsConfigurableProvider"
                             bundle="messages.IdeBundle"
                             key="configurable.notifications.name"/>
    <search.optionContributor implementation="com.intellij.notification.impl.NotificationSearchableOptionContributor"/>
    <applicationService serviceImplementation="com.intellij.notification.impl.NotificationCollector"/>

    <!-- Plugins -->
    <applicationConfigurable groupId="root"
                             groupWeight="55"
                             instance="com.intellij.ide.plugins.PluginManagerConfigurable"
                             id="preferences.pluginManager"
                             treeRenderer="com.intellij.ide.plugins.PluginManagerConfigurableTreeRenderer"
                             bundle="messages.IdeBundle"
                             key="title.plugins"/>
    <applicationConfigurable parentId="preferences.general" instance="com.intellij.util.net.HttpProxyConfigurable" id="http.proxy"
                             bundle="messages.IdeBundle"
                             key="http.proxy.configurable"/>

    <applicationConfigurable parentId="preferences.general" instance="com.intellij.ide.gdpr.ConsentConfigurable" id="consents"
                             bundle="messages.IdeBundle"
                             key="consent.configurable"/>

    <applicationConfigurable parentId="preferences.general" instance="com.intellij.ide.ui.text.DateTimeFormatConfigurable"
                             id="ide.date.format"
                             bundle="messages.IdeBundle"
                             key="date.time.format.configurable"/>

    <applicationConfigurable groupId="tools"
                             bundle="messages.UIBundle"
                             key="configurable.CertificateConfigurable.display.name"
                             id="http.certificates" instance="com.intellij.util.net.ssl.CertificateConfigurable"/>

    <fileType name="ARCHIVE" implementationClass="com.intellij.ide.highlighter.ArchiveFileType" fieldName="INSTANCE"
              extensions="ane;apk;ear;egg;jar;swc;war;zip"/>
    <fileType name="PLAIN_TEXT" implementationClass="com.intellij.openapi.fileTypes.PlainTextFileType" fieldName="INSTANCE" language="TEXT"
              extensions="log;txt"/>
    <fileType name="Native" implementationClass="com.intellij.openapi.fileTypes.NativeFileType" fieldName="INSTANCE"
              extensions="doc;docx;hlp;mdb;odt;pdf;ppt;pptx;vsd;xls;xlsx"/>
    <fileType name="UNKNOWN" implementationClass="com.intellij.openapi.fileTypes.UnknownFileType" fieldName="INSTANCE"/>
    <fileType name="AUTO_DETECTED" implementationClass="com.intellij.openapi.fileTypes.impl.DetectedByContentFileType"
              fieldName="INSTANCE"/>

    <fileType name="IDEA_WORKSPACE" implementationClass="com.intellij.ide.highlighter.WorkspaceFileType" fieldName="INSTANCE"
              extensions="iws"/>
    <fileType name="IDEA_MODULE" implementationClass="com.intellij.ide.highlighter.ModuleFileType" fieldName="INSTANCE" extensions="iml"/>
    <fileType name="IDEA_PROJECT" implementationClass="com.intellij.ide.highlighter.ProjectFileType" fieldName="INSTANCE" extensions="ipr"/>
    <postStartupActivity implementation="com.intellij.openapi.fileTypes.impl.ApproveRemovedMappingsActivity"/>
    <applicationService serviceInterface="com.intellij.openapi.options.colors.ColorSettingsPages"
                        serviceImplementation="com.intellij.openapi.options.colors.pages.ColorSettingsPagesImpl"/>

    <applicationService serviceInterface="com.intellij.ide.plugins.PluginEnabler"
                        serviceImplementation="com.intellij.ide.plugins.DynamicPluginEnabler"
                        headlessImplementation="com.intellij.ide.plugins.DisabledPluginsState"
                        testServiceImplementation="com.intellij.ide.plugins.DynamicPluginEnabler"
                        preload="true"/>
    <applicationInitializedListener implementation="com.intellij.ide.plugins.BundledPluginsState"/>
    <applicationService serviceImplementation="com.intellij.ide.plugins.ExpiredPluginsState" preload="true"/>

    <requiredForSmartModeStartupActivity implementation="com.intellij.externalDependencies.impl.CheckRequiredPluginsActivity"/>
    <projectConfigurable groupId="build" provider="com.intellij.externalDependencies.impl.ExternalDependenciesConfigurableProvider"
                         id="preferences.externalDependencies"
                         bundle="messages.IdeBundle"
                         key="configurable.ExternalDependenciesConfigurable.display.name"/>

    <applicationConfigurable parentId="preferences.general" instance="com.intellij.openapi.updateSettings.impl.UpdateSettingsConfigurable"
                             id="preferences.updates"
                             key="updates.settings.title" bundle="messages.IdeBundle"/>

    <applicationService serviceInterface="com.intellij.psi.search.scope.packageSet.PackageSetFactory"
                        serviceImplementation="com.intellij.psi.search.scope.packageSet.PackageSetFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.ui.ClientColorChooserService"
                        serviceImplementation="com.intellij.ui.LocalColorChooserService"
                        client="local"/>

    <applicationService serviceInterface="com.intellij.openapi.actionSystem.AbbreviationManager"
                        serviceImplementation="com.intellij.openapi.actionSystem.impl.AbbreviationManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.editor.ex.EditorSettingsExternalizable$OsSpecificState"/>
    <applicationConfigurable
      groupId="editor"
      groupWeight="188"
      bundle="messages.IdeBundle"
      key="configurable.font.name"
      instance="com.intellij.application.options.editor.fonts.AppEditorFontConfigurable"
    />

    <applicationConfigurable
      groupId="editor"
      groupWeight="188"
      bundle="messages.IdeBundle"
      key="configurable.console.font.name"
      provider="com.intellij.application.options.editor.fonts.AppConsoleFontConfigurable$Provider"
      parentId="editor.preferences.fonts.default"
    />

    <applicationService serviceImplementation="com.intellij.codeInsight.hints.settings.ParameterNameHintsSettings"/>
    <applicationService serviceImplementation="com.intellij.openapi.keymap.NationalKeyboardSupport"/>
    <applicationService serviceImplementation="com.intellij.openapi.editor.SpellCheckingEditorCustomizationProvider"/>

    <scopeParserExtension implementation="com.intellij.psi.search.scope.packageSet.FilePackageSetParserExtension"/>
    <applicationService serviceInterface="com.intellij.openapi.ui.popup.StackingPopupDispatcher"
                        serviceImplementation="com.intellij.ui.popup.StackingPopupDispatcherImpl"/>

    <applicationService serviceInterface="com.intellij.ide.RemoteDesktopService"
                        serviceImplementation="com.intellij.ide.RemoteDesktopDetector"/>

    <applicationService serviceInterface="com.intellij.util.PerformanceAssertions"
                        serviceImplementation="com.intellij.util.PerformanceAssertionsImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.EditorFactory"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorFactoryImpl" preload="notHeadless"/>
    <applicationService serviceImplementation="com.intellij.openapi.editor.ClientEditorManager"
                        client="all"/>

    <applicationService serviceInterface="com.intellij.notification.NotificationsManager"
                        serviceImplementation="com.intellij.notification.impl.NotificationsManagerImpl"/>
    <applicationService serviceInterface="com.intellij.notification.NotificationsConfiguration"
                        serviceImplementation="com.intellij.notification.impl.NotificationsConfigurationImpl"/>

    <applicationService serviceInterface="com.intellij.ide.SaveAndSyncHandler" preload="notHeadless"
                        serviceImplementation="com.intellij.configurationStore.SaveAndSyncHandlerImpl"
                        testServiceImplementation="com.intellij.configurationStore.NoOpSaveAndSyncHandler"
                        headlessImplementation="com.intellij.configurationStore.HeadlessSaveAndSyncHandler"/>

    <projectService serviceInterface="com.intellij.openapi.vfs.encoding.EncodingProjectManager"
                    serviceImplementation="com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl"/>
    <postStartupActivity implementation="com.intellij.openapi.vfs.encoding.EncodingProjectManagerStartUpActivity"/>

    <projectService serviceInterface="com.intellij.execution.RunManager"
                    serviceImplementation="com.intellij.execution.impl.RunManagerImpl"/>
    <projectServiceContainerInitializedListener implementation="com.intellij.execution.impl.ProjectRunConfigurationInitializer"
                                                order="last"/>
    <projectFileScanner implementation="com.intellij.execution.impl.RunConfigurationInArbitraryFileScanner"/>
    <vfs.asyncListener implementation="com.intellij.execution.impl.RCInArbitraryFileListener"/>
    <editorNotificationProvider implementation="com.intellij.execution.impl.RunConfigEditorNotificationProvider"/>
    <postStartupActivity implementation="com.intellij.execution.impl.RunConfigurationFeatureCollector"/>
    <applicationService serviceInterface="com.intellij.execution.ui.FragmentStatisticsService"
                        serviceImplementation="com.intellij.execution.impl.statistics.FragmentedStatisticsServiceImpl"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.execution.impl.statistics.RunConfigurationOptionUsagesCollector"/>

    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.http.HttpFileEditorProvider"/>
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.hint.EscapeHandler" id="hide-hints"/>

    <editorActionHandler action="EditorDelete" implementationClass="com.intellij.openapi.editor.actions.DeleteSelectionHandler"
                         id="delete.for.selection"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.openapi.editor.actions.DeleteSelectionHandler"
                         id="backspace.for.selection" order="after backspace.lookup"/>
    <editorActionHandler action="EditorDelete" implementationClass="com.intellij.openapi.editor.actions.DeleteInColumnModeHandler"
                         id="delete.in.column.mode"/>
    <editorActionHandler
      action="EditorDeleteLine"
      implementationClass="com.intellij.openapi.editor.actions.DeleteLineAction$CheckHandler"
      order="first"
      id="EditorDeleteLine.checkHandler"
    />

    <typedHandler implementation="com.intellij.codeInsight.inline.completion.listeners.InlineCompletionTypedHandlerDelegate"/>

    <registryKey key="editor.action.caretMovement.UpDownIgnoreSelectionBoundaries" defaultValue="false"
                 description="Allows to restore the legacy behavior of Up/Down w.r.t. selection boundaries.\n\
                              When true, moves the caret up or down as if there were no selection.\n\
                              When false, places the caret at the line before or after the corresponding selection boundary."/>

    <registryKey key="editor.action.copy.entireLineFromEmptySelection.moveCaretToLineStart" defaultValue="false"
                 description="Controls the behavior of Copy with empty selection w.r.t. caret placement after copying.\n\
                              When true, the Copy action invoked with empty selection moves the caret to the beginning of\
                              the just copied line.\n\
                              When false, keeps the caret where it was."/>

    <editorFloatingToolbarProvider
      implementation="com.intellij.openapi.editor.toolbar.floating.DefaultFloatingToolbarProvider"
      id="DefaultFloatingToolbarProvider"/>

    <bundledKeymap file="$default.xml"/>
    <bundledKeymap file="Mac OS X 10.5+.xml"/>
    <bundledKeymap file="Mac OS X.xml"/>
    <bundledKeymap file="macOS System Shortcuts.xml"/>
    <bundledKeymap file="Default for XWin.xml"/>
    <bundledKeymap file="Default for GNOME.xml"/>
    <bundledKeymap file="Default for KDE.xml"/>
    <bundledKeymap file="Emacs.xml"/>
    <bundledKeymap file="Sublime Text.xml"/>
    <bundledKeymap file="Sublime Text (Mac OS X).xml"/>

    <keymapExtension implementation="com.intellij.ide.actions.ToolWindowKeymapExtension"/>

     <undoReportHandler implementation="com.intellij.openapi.command.impl.DefaultUndoReportHandler" order="last" id="default"/>

    <config.inlaySettingsProvider implementation="com.intellij.codeInsight.hints.settings.providers.ParameterInlaySettingsProvider"/>
    <config.inlaySettingsProvider implementation="com.intellij.codeInsight.hints.settings.providers.NewInlaySettingsProvider"/>

    <statistics.validation.customValidationRule
      implementation="com.intellij.configurationStore.statistic.eventLog.SettingsComponentNameValidator"/>
    <statistics.validation.customValidationRule implementation="com.intellij.configurationStore.statistic.eventLog.SettingsValueValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.internal.statistic.collectors.fus.FacetTypeUsageCollector$FacetTypeUtilValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.execution.dashboard.RunDashboardUsagesCollector$RunConfigurationTypeValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.featureStatistics.FeatureUsageTrackerImpl$ProductivityUtilValidator"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.internal.statistic.collectors.fus.RegistryApplicationUsagesCollector$RegistryUtilValidator"/>
    <statistics.validation.customValidationRule implementation="com.intellij.internal.statistic.collectors.fus.PluginInfoValidationRule"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.openapi.updateSettings.impl.UpdateInfoStatsCollector$UrlValidationRule"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributorValidationRule"/>
    <statistics.validation.customValidationRule implementation="com.intellij.internal.statistic.collectors.fus.ui.GotItIDValidator"/>

    <statistics.projectUsagesCollector
      implementation="com.intellij.internal.statistic.collectors.fus.fileTypes.ProjectStructureUsageCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.FacetTypeUsageCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.plugins.PluginsUsagesCollector"
                                           allowOnStartup="true"/>
    <statistics.applicationUsagesCollector
      implementation="com.intellij.internal.statistic.collectors.fus.ui.EditorColorSchemesUsagesCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.ui.FontSizeInfoUsageCollector"/>
    <statistics.applicationUsagesCollector
      implementation="com.intellij.internal.statistic.collectors.fus.os.LinuxWindowManagerUsageCollector" allowOnStartup="true"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.os.SystemRuntimeCollector"
                                           allowOnStartup="true"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.ui.UiInfoUsageCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.UpdateManagerUsagesCollector"
                                           allowOnStartup="true"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.settings.ProxyTypeCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.diff.statistics.DiffUsagesCollector"/>
    <applicationInitializedListener implementation="com.intellij.openapi.application.ImportOldConfigsUsagesCollector$Trigger"/>
    <statistics.applicationUsagesCollector
      implementation="com.intellij.internal.statistic.collectors.fus.RegistryApplicationUsagesCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.project.IndexableFilesCollector"/>
    <statistics.projectUsagesCollector
      implementation="com.intellij.internal.statistic.collectors.fus.project.IntelliJProjectUsageCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.wm.impl.welcomeScreen.WelcomeScreenEventCollector"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.WelcomeScreenCloneCollector"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.openapi.wm.impl.welcomeScreen.cloneableProjects.VcsCloneCollector"/>

    <statistics.counterUsagesCollector
      implementationClass="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsageCounterCollector"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsageCounterCollector$FileNamePatternCustomValidationRule"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.featureStatistics.fusCollectors.LifecycleUsageTriggerCollector"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.internal.statistic.collectors.fus.actions.persistence.ActionsEventLogGroup"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.internal.statistic.collectors.fus.actions.persistence.ToolWindowEventLogGroup"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.internal.statistic.collectors.fus.ui.persistence.ToolbarClicksCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.codeInsight.navigation.actions.GTDUCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.accessibility.AccessibilityUsageTrackerCollector"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.ide.actions.searcheverywhere.SearchEverywhereFiltersStatisticsCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.plugins.marketplace.statistics.collectors.PluginManagerMPCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.plugins.marketplace.statistics.collectors.PluginManagerFUSCollector"/>
    <statistics.validation.customValidationRule implementation="com.intellij.ide.plugins.marketplace.statistics.validators.MarketplaceTagsListValidator"/>
    <statistics.validation.customValidationRule implementation="com.intellij.ide.plugins.marketplace.statistics.validators.MarketplaceVendorsListValidator"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.codeInsight.template.impl.LiveTemplateRunLogger"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.diff.impl.DiffUsageTriggerCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.updateSettings.impl.IdeUpdateUsageTriggerCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.application.ImportOldConfigsUsagesCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.application.OldDirectoryCleaner$Stats"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.featureStatistics.fusCollectors.FileEditorCollector"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.openapi.editor.impl.EditorGutterComponentImpl$GutterIconClickCollectors"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile$InspectionWidgetUsageCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.actions.cache.CacheRecoveryUsageCollector"/>.
    <statistics.counterUsagesCollector groupId="new.project.wizard" version="3"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.diagnostic.WindowsDefenderStatisticsCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.vfs.newvfs.monitoring.VfsUsageCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.project.DumbModeStatisticsCollector"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.util.indexing.diagnostic.IndexLookupTimingsReporting$IndexOperationFusCollector"/>
    <statistics.applicationUsagesCollector
      implementation="com.intellij.util.indexing.diagnostic.IndexLookupTimingsReporting$IndexOperationAggregatesCollector"/>
    <statistics.validation.customValidationRule implementation="com.intellij.util.indexing.diagnostic.IndexIdRuleValidator"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.task.impl.ProjectTaskManagerStatisticsCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.externalSystem.statistics.ProjectImportCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.internal.statistic.service.fus.collectors.UIEventLogger"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserUsageCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.plugins.DynamicPluginsUsagesCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ui.EditorNotificationUsagesCollector"/>

    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.updateSettings.impl.UpdateInfoStatsCollector"/>

    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.lightEdit.LightEditFeatureUsagesUtil"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.internal.statistic.collectors.fus.TypingEventsLogger"/>

    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.MnemonicUsageCollector"/>

    <statistics.counterUsagesCollector groupId="event.log" version="57"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.diagnostic.UILatencyLogger"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.notification.impl.NotificationsEventLogGroup"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.featureStatistics.FeatureUsageTrackerImpl$ProductivityUsageCollector"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.internal.statistic.collectors.fus.ui.DialogsCounterUsagesCollector"/>
    <statistics.counterUsagesCollector
      implementationClass="com.intellij.internal.statistic.collectors.fus.ui.SettingsCounterUsagesCollector"/>
    <statistics.counterUsagesCollector groupId="settings.changes" version="57"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.internal.statistic.collectors.fus.ui.GotItUsageCollectorGroup"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.internal.statistic.collectors.fus.ui.BalloonUsageCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.application.options.colors.ReaderModeStatsCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.diagnostic.IdeErrorDialogUsageCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.projectWizard.NewProjectWizardCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.ui.experimental.ExperimentalUiCollector"/>
    <statistics.validation.customValidationRule
      implementation="com.intellij.ide.projectWizard.NewProjectWizardCollector$GeneratorValidationRule"/>

    <statistics.collectorExtension implementation="com.intellij.ide.actions.ToolwindowFusEventFields"/>
    <statistics.collectorExtension implementation="com.intellij.ide.actions.DragEditorTabsFusEventFields"/>

    <statistics.applicationUsagesCollector implementation="com.intellij.featureStatistics.fusCollectors.EAPUsageCollector"
                                           allowOnStartup="true"/>
    <statistic.eventLog.eventLoggerProvider implementation="com.intellij.internal.statistic.eventLog.fus.FeatureUsageEventLoggerProvider"/>
    <statistic.eventLog.eventLoggerProvider implementation="com.intellij.internal.statistic.eventLog.mp.MarketplaceEventLoggerProvider" />
    <statistics.applicationUsagesCollector implementation="com.intellij.featureStatistics.fusCollectors.OsDataCollector"
                                           allowOnStartup="true"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.featureStatistics.fusCollectors.IdeSessionDataCollector"
                                           allowOnStartup="true"/>
    <statistic.eventLog.fusStateEventTracker
      implementation="com.intellij.configurationStore.statistic.eventLog.FeatureUsageSettingsEventScheduler"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.featureStatistics.fusCollectors.WSLInstallationsCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.impl.TrustedProjectsStatistics"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.notification.impl.NotificationSettingsCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.openapi.project.ReadmeShownUsageCollector"/>

    <applicationService
      serviceImplementation="com.intellij.internal.statistic.eventLog.validator.storage.persistence.EventLogMetadataSettingsPersistence"
      preload="true"/>

    <registryKey key="usage.statistics.test.action.recorder.id" defaultValue="FUS"
                 description="The data from the recorder with selected id will be sent"/>

    <vfs.local.pluggableFileWatcher implementation="com.intellij.openapi.vfs.impl.local.NativeFileWatcherImpl"/>
    <vfs.local.pluggableFileWatcher implementation="com.intellij.openapi.vfs.impl.wsl.WslFileWatcher"/>

    <virtualFileSystem key="dummy" implementationClass="com.intellij.openapi.vfs.ex.dummy.DummyFileSystem"/>
    <virtualFileSystem key="http" implementationClass="com.intellij.openapi.vfs.impl.http.HttpFileSystemImpl"/>
    <virtualFileSystem key="https" implementationClass="com.intellij.openapi.vfs.impl.http.HttpsFileSystem"/>

    <toolWindow id="Notifications" anchor="right" secondary="true"
                icon="AllIcons.Toolwindows.Notifications"
                factoryClass="com.intellij.notification.impl.NotificationsToolWindowFactory"/>

    <toolWindow id="Meet New UI" anchor="right" secondary="false" icon="com.intellij.icons.ExpUiIcons.Toolwindow.MeetNewUi"
                factoryClass="com.intellij.ide.ui.experimental.meetNewUi.MeetNewUiToolWindowFactory"/>

    <applicationService serviceInterface="com.intellij.ide.TypePresentationService"
                        serviceImplementation="com.intellij.ide.TypePresentationServiceImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.application.AsyncExecutionService"
                        serviceImplementation="com.intellij.openapi.application.impl.AsyncExecutionServiceImpl"/>

    <postStartupActivity implementation="com.intellij.ide.ui.OptionsTopHitProviderActivity" order="last"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.OptionsTopHitProvider$ProjectLevelProvidersAdapter"/>
    <applicationService serviceImplementation="com.intellij.ide.ui.AppTopHitCache"/>

    <applicationService serviceInterface="com.intellij.ide.util.TipAndTrickManager"
                        serviceImplementation="com.intellij.ide.util.TipAndTrickManagerImpl"/>
    <postStartupActivity implementation="com.intellij.ide.actions.PowerSaveModeNotifier"/>
    <postStartupActivity implementation="com.intellij.ide.actions.EssentialHighlightingNotifier"/>
    <postStartupActivity implementation="com.intellij.xml.breadcrumbs.BreadcrumbsInitializingActivity"/>

    <applicationConfigurable parentId="preferences.editor" id="editor.breadcrumbs"
                             key="configurable.breadcrumbs" bundle="messages.ApplicationBundle"
                             instance="com.intellij.xml.breadcrumbs.BreadcrumbsConfigurable"/>

    <fileBreadcrumbsCollector implementation="com.intellij.xml.breadcrumbs.PsiFileBreadcrumbsCollector" order="last"/>

    <postStartupActivity implementation="com.intellij.openapi.fileEditor.impl.EditorHistoryManager$EditorHistoryManagerStartUpActivity"/>

    <backgroundPostStartupActivity implementation="com.intellij.diagnostic.WindowsDefenderCheckerActivity" os="windows"/>
    <registryKey key="ide.check.windows.defender.rules"
                 defaultValue="true"
                 description="Enables Windows Defender configuration check on project open"/>

    <applicationInitializedListener implementation="com.intellij.codeInsight.editorActions.TypedHandlerPreloader"/>
    <actionConfigurationCustomizer implementation="com.intellij.execution.ExecutorRegistryImpl$ExecutorRegistryActionConfigurationTuner"/>

    <writingAccessProvider implementation="com.intellij.openapi.fileEditor.impl.NonProjectFileWritingAccessProvider" order="first"/>

    <iconLayerProvider implementation="com.intellij.ide.LockedIconLayerProvider"/>

    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.text.LargeFileEditorProvider" id="LargeFileEditor"/>
    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.HTMLEditorProvider"/>
    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.JComponentEditorProvider"/>
    <editorNotificationProvider implementation="com.intellij.openapi.fileEditor.impl.text.LargeFileNotificationProvider"/>
    <fileDocumentSynchronizationVetoer implementation="com.intellij.openapi.fileEditor.impl.LargeFileSavingVetoer"/>

    <editorNotificationProvider implementation="com.intellij.openapi.editor.impl.BidiContentNotificationProvider"/>
    <editorNotificationProvider implementation="com.intellij.openapi.editor.impl.ForcedSoftWrapsNotificationProvider"/>
    <editorNotificationProvider implementation="com.intellij.ide.FileChangedNotificationProvider"/>
    <editorNotificationProvider
      implementation="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider"/>
    <editorNotificationProvider implementation="com.intellij.ide.CommandLineWaitingManager$MyNotification"/>
    <editorNotificationProvider implementation="com.intellij.ide.trustedProjects.impl.UntrustedProjectNotificationProvider"/>

    <getDataRule key="copyProvider" implementationClass="com.intellij.ide.impl.dataRules.CopyProviderRule" type="fast"/>
    <getDataRule key="cutProvider" implementationClass="com.intellij.ide.impl.dataRules.CutProviderRule" type="fast"/>
    <getDataRule key="pasteProvider" implementationClass="com.intellij.ide.impl.dataRules.PasteProviderRule" type="fast"/>
    <getDataRule key="fileEditor" implementationClass="com.intellij.ide.impl.dataRules.FileEditorRule" type="fast"/>
    <getDataRule key="NavigatableArray" implementationClass="com.intellij.ide.impl.dataRules.NavigatableArrayRule" type="fast"/>
    <getDataRule key="editor.even.if.inactive" implementationClass="com.intellij.ide.impl.dataRules.InactiveEditorRule" type="fast"/>
    <getDataRule key="context.ProjectFileDirectory" implementationClass="com.intellij.ide.impl.dataRules.ProjectFileDirectoryRule"/>

    <localInspection shortName="InconsistentLineSeparators" bundle="messages.LangBundle" key="inconsistent.line.separators"
                     groupBundle="messages.InspectionsBundle" groupKey="inspection.general.tools.group.name" enabledByDefault="false"
                     level="WARNING"
                     implementationClass="com.intellij.openapi.fileEditor.impl.InconsistentLineSeparatorsInspection"/>
    <search.topHitProvider implementation="com.intellij.platform.DefaultPlatformTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.UISimpleSettingsProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.AppearanceOptionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.SystemOptionsTopHitProvider"/>
    <search.projectOptionsTopHitProvider implementation="com.intellij.ui.tabs.FileColorsOptionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.EditorOptionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.EditorOptionsTopHitProvider$Ex"/>
    <search.projectOptionsTopHitProvider implementation="com.intellij.ide.ui.InspectionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.RegistryOptionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.PluginOptionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.openapi.wm.impl.status.widget.StatusBarWidgetsOptionProvider"/>
    <backgroundPostStartupActivity
      implementation="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginsAdvertiserStartupActivity"/>
    <projectService serviceInterface="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserService"
                    serviceImplementation="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserServiceImpl"
                    headlessImplementation="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.HeadlessPluginAdvertiserServiceImpl"
                    testServiceImplementation="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.HeadlessPluginAdvertiserServiceImpl"/>
    <applicationService
      serviceImplementation="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.GlobalIgnoredPluginSuggestionState"/>
    <dependencyCollector kind="executable"
                         implementation="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.EnvironmentDependencyCollector"/>

    <actionPromoter implementation="com.intellij.ui.ToolbarDecoratorActionPromoter"/>
    <actionPromoter implementation="com.intellij.ide.actions.WindowActionPromoter"/>

    <applicationService serviceInterface="com.intellij.platform.backend.workspace.GlobalWorkspaceModelCache"
                        serviceImplementation="com.intellij.workspaceModel.ide.impl.GlobalWorkspaceModelCacheImpl"/>
    <projectService serviceInterface="com.intellij.platform.backend.workspace.WorkspaceModelCache"
                    serviceImplementation="com.intellij.workspaceModel.ide.impl.WorkspaceModelCacheImpl"/>
    <cachesInvalidator implementation="com.intellij.workspaceModel.ide.impl.WorkspaceModelCachesInvalidator"/>
    <recoveryAction implementation="com.intellij.workspaceModel.ide.impl.WorkspaceModelRecoveryAction"/>
    <backgroundPostStartupActivity implementation="com.intellij.workspaceModel.ide.impl.WorkspaceModelCachesInvalidatorBackgroundActivity"/>
    <backgroundPostStartupActivity implementation="com.intellij.workspaceModel.ide.impl.jps.serialization.DelayedProjectSynchronizer"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.workspaceModel.ide.impl.WorkspaceModelFusLogger"/>

    <ui.suitableFontProvider implementation="com.intellij.ui.SuitableFontProviderImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.impl.FontFamilyService"
                        serviceImplementation="com.intellij.openapi.editor.impl.FontFamilyServiceImpl"
                        preload="notHeadless"/>

    <jbProtocolCommand implementation="com.intellij.navigation.JBProtocolNavigateCommand"/>

    <intentionAction>
      <className>com.intellij.openapi.editor.actions.FlipCommaIntention</className>
      <bundleName>messages.LangBundle</bundleName>
      <categoryKey>intention.category.other</categoryKey>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.openapi.editor.actions.lists.JoinLinesIntention</className>
      <bundleName>messages.LangBundle</bundleName>
      <categoryKey>intention.category.other</categoryKey>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.openapi.editor.actions.lists.SplitLineIntention</className>
      <bundleName>messages.LangBundle</bundleName>
      <categoryKey>intention.category.other</categoryKey>
    </intentionAction>

    <daemon.intentionActionFilter implementation="com.intellij.psi.IntentionFilterOwnerActionFilter"/>

    <projectConfigurable groupId="tools"
                         provider="com.intellij.execution.startup.ProjectStartupConfigurable$ProjectStartupConfigurableProvider"
                         bundle="messages.ExecutionBundle"
                         key="configurable.ProjectStartupConfigurable.display.name"
                         id="preferences.startup.tasks" nonDefaultProject="true"/>
    <postStartupActivity implementation="com.intellij.execution.startup.ProjectStartupRunner"/>

    <applicationService serviceInterface="com.intellij.remote.ext.CredentialsManager"
                        serviceImplementation="com.intellij.remote.ext.CredentialsManagerImpl"/>

    <projectService serviceImplementation="com.intellij.remote.RemoteMappingsManager"/>

    <applicationService serviceImplementation="com.intellij.openapi.options.newEditor.SettingsDialogFactory"/>

    <additionalTextAttributes scheme="Default" file="idea/FindViewColorsScheme.xml"/>
    <additionalTextAttributes scheme="Darcula" file="idea/FindViewColorsScheme.xml"/>

    <credentialStore implementation="com.intellij.credentialStore.MacOsCredentialStoreFactory" os="mac"/>
    <credentialStore implementation="com.intellij.credentialStore.LinuxCredentialStoreFactory" os="linux"/>
    <registryKey key="credentialStore.linux.prefer.kwallet" defaultValue="false" restartRequired="true"
                 description="Use KWallet if KWallet &amp; SecretService are both available."/>

    <applicationService
      serviceInterface="com.intellij.credentialStore.CredentialStoreManager"
      serviceImplementation="com.intellij.credentialStore.CredentialStoreManagerImpl"/>

    <applicationService
      serviceInterface="com.intellij.openapi.projectRoots.JdkFinder"
      serviceImplementation="com.intellij.openapi.projectRoots.impl.JdkFinderImpl"/>

    <sdkType implementation="com.intellij.openapi.projectRoots.SimpleJavaSdkType"/>

    <registryKey key="java.detector.enabled" defaultValue="true" description="Toggles JDK detection features"/>

    <sdkDownload implementation="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkDownloader"/>
    <unknownSdkResolver implementation="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkAuto"/>
    <projectService serviceImplementation="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkAutoHintService"
                    configurationSchemaKey="java"
    />

    <registryKey key="runtime.chooser.url" description="Custom URL to download the list of available JBRs for Runtime Chooser"
                 defaultValue=""/>
    <registryKey key="runtime.chooser.pretend.major" description="Makes Runtime Chooser show JBRs from previous releases" defaultValue=""/>

    <backgroundPostStartupActivity implementation="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkUpdaterStartup"/>
    <settingsEntryPointActionProvider
      implementation="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkSettingsActionRegistryActionProvider"/>

    <registryKey key="jdk.auto.setup" defaultValue="true" description="Attempt to use local or downloadable SDK to configure project"/>
    <registryKey key="jdk.updater" defaultValue="true" description="Check for JDK updates and suggest actions in notifications"/>
    <registryKey key="jdk.downloader" defaultValue="true" description="Suggest JDK downloads"/>
    <registryKey key="jdk.downloader.url" description="Custom URL to download the list of available JDKs" defaultValue=""/>
    <registryKey key="jdk.downloader.reuse.installed" defaultValue="true"
                 description="Allow to reuse locally installed with the JDK Downloader JDK instead of download it again"/>
    <registryKey key="jdk.downloader.reuse.downloading" defaultValue="true"
                 description="Allow to reuse currently downloading with the JDK Downloader JDK instead of downloading it again"/>
    <registryKey key="jdk.auto.run.configurations" defaultValue="true" description="Tries to find an SDK for a run configuration"/>

    <actionPromoter implementation="com.intellij.execution.testframework.TestTreeViewActionsPromoter"/>
    <smartSelectProvider implementation="com.intellij.ui.tree.TreeSmartSelectProvider"/>

    <editorFactoryListener implementation="com.intellij.openapi.fileEditor.impl.zoomIndicator.AttachZoomIndicator"/>

    <!--Got It Tooltips-->
    <statistics.gotItTooltipAllowlist prefix="extract.method.gotit.navigate"/>
    <statistics.gotItTooltipAllowlist prefix="extract.method.signature.change"/>
    <statistics.gotItTooltipAllowlist prefix="changes.view.toolwindow"/>
    <statistics.gotItTooltipAllowlist prefix="show.diff.in.editor"/>
    <statistics.gotItTooltipAllowlist prefix="reader.mode.got.it"/>
    <statistics.gotItTooltipAllowlist prefix="fragment.hidden"/>

    <!-- Browsers -->
    <applicationService serviceInterface="com.intellij.ide.browsers.BrowserLauncher"
                        serviceImplementation="com.intellij.ide.browsers.BrowserLauncherImpl"/>
    <applicationConfigurable groupId="tools" groupWeight="160" instance="com.intellij.ide.browsers.BrowserSettings"
                             id="reference.settings.ide.settings.web.browsers"
                             key="browsers.settings" bundle="messages.IdeBundle"/>
    <stepsBeforeRunProvider implementation="com.intellij.ide.browsers.LaunchBrowserBeforeRunTaskProvider"/>
    <selectInTarget implementation="com.intellij.ide.browsers.actions.SelectInDefaultBrowserTarget"/>
    <applicationService serviceImplementation="com.intellij.ide.browsers.WebBrowserXmlService"/>
    <applicationService serviceInterface="com.intellij.ide.browsers.WebBrowserService"
                        serviceImplementation="com.intellij.ide.browsers.impl.WebBrowserServiceImpl"/>

    <!-- Actions on Save -->
    <projectConfigurable groupId="tools"
                         groupWeight="170"
                         provider="com.intellij.ide.actionsOnSave.ActionsOnSaveConfigurable$ActionsOnSaveConfigurableProvider"
                         id="actions.on.save"
                         bundle="messages.IdeBundle"
                         key="actions.on.save.page.title"
                         nonDefaultProject="false"/>
    <search.optionContributor implementation="com.intellij.ide.actionsOnSave.ActionsOnSaveSearchableOptionsContributor"/>

    <!--troubleshooting-->
    <generalTroubleInfoCollector implementation="com.intellij.ide.troubleshooting.AboutTroubleInfoCollector"/>
    <generalTroubleInfoCollector implementation="com.intellij.ide.troubleshooting.SystemTroubleInfoCollector"/>
    <generalTroubleInfoCollector implementation="com.intellij.ide.troubleshooting.DisplayTroubleInfoCollector"/>
    <generalTroubleInfoCollector implementation="com.intellij.ide.troubleshooting.PluginTroubleInfoCollector"/>
    <generalTroubleInfoCollector implementation="com.intellij.ide.troubleshooting.ProjectTroubleInfoCollector"/>
    <generalTroubleInfoCollector implementation="com.intellij.ide.troubleshooting.GCTroubleInfoCollector"/>

    <!-- experiments -->
    <experimentalFeature id="wsl.legacy.distribution" percentOfUsers="0">
      <description>Makes legacy Ubuntu distribution (bash.exe) available</description>
    </experimentalFeature>

    <experimentalFeature id="linux.native.menu" percentOfUsers="100" requireRestart="true">
      <description>Integration with global menu in Linux</description>
    </experimentalFeature>

    <experimentalFeature id="recent.and.edited.files.together" percentOfUsers="100">
      <description>Second Cmd/Ctrl+E switches to Recently Edited Files</description>
    </experimentalFeature>

    <experimentalFeature id="show.create.new.element.in.popup" percentOfUsers="100">
      <description>Use popups (instead of dialogs) for creating new items (files, classes, etc.)</description>
    </experimentalFeature>

    <experimentalFeature id="search.everywhere.mixed.results" percentOfUsers="100">
      <description>Use mixed list of results on All tab in Search Everywhere (instead of Files/Classes/Actions groups)</description>
    </experimentalFeature>

    <experimentalFeature id="new.project.wizard" percentOfUsers="100">
      <description>New project wizard</description>
    </experimentalFeature>

    <applicationService serviceInterface="com.intellij.ide.ui.ToolbarSettings"
                        serviceImplementation="com.intellij.ide.ui.experimental.toolbar.ExperimentalToolbarSettings"/>

    <rawEditorTypedHandler implementationClass="com.intellij.openapi.editor.impl.EditorFactoryImpl$MyRawTypedHandler"/>

    <postStartupActivity implementation="com.intellij.diagnostic.AnalyzePendingSnapshotActivity"/>

    <obsoleteStorage file="pluginAdvertiser.xml">
      <components>
        <component>PluginAdvertiserExtensions</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="menu.item.text.update.xml">
      <components>
        <component>ActionMenuItemUpdateCollector</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="statistics.toolbar.clicks.xml">
      <components>
        <component>ToolbarClicksCollector</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="statistics.main_menu.xml">
      <components>
        <component>MainMenuCollector</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="statistics.shortcuts.xml">
      <components>
        <component>ShortcutsCollector</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="statistics.application.usages.xml">
      <components>
        <component>StatisticsApplicationUsages</component>
        <component>UsageTrigger</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="usage.statistics.xml">
      <components>
        <component>StatisticsApplicationUsages</component>
        <component>UsageTrigger</component>
        <component>ToolWindowCollector</component>
        <component>ToolWindowsCollector</component>
        <component>ShortcutsCollector</component>
        <component>ToolbarClicksCollector</component>
        <component>MainMenuCollector</component>
        <component>IntentionsCollector</component>
        <component>ActionsCollector</component>
        <component>FUSApplicationUsageTrigger</component>
        <component>EventLogWhitelist</component>
        <component>PhpLanguageFeatureUsagesStatistics</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="lastSelectedPropertiesFile.xml">
      <components>
        <component>LastSelectedPropertiesFileStore</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="vcs.log.big.repos.xml">
      <components>
        <component>Vcs.Log.Big.Repositories</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="errorReporting.xml">
      <components>
        <component>ErrorReportConfigurable</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="$CACHE_FILE$">
      <components>
        <component>KnownExtensionsService</component>
      </components>
    </obsoleteStorage>

    <obsoleteStorage file="usage.statistics.xml" isProjectLevel="true">
      <components>
        <component>FUSProjectUsageTrigger</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="$WORKSPACE_FILE$" isProjectLevel="true">
      <components>
        <component>FUSProjectUsageTrigger</component>
      </components>
    </obsoleteStorage>

    <backgroundPostStartupActivity implementation="com.intellij.diagnostic.MemorySizeConfigurator"/>
    <applicationService serviceImplementation="com.intellij.diagnostic.MemorySizeConfiguratorService"/>

    <registryKey key="show.last.visited.timestamps" defaultValue="true"
                 description="Shows recent files or code locations last visited timestamps"/>

    <editorFactoryDocumentListener implementation="com.intellij.openapi.command.impl.DocumentUndoProvider"/>

    <editorFactoryListener implementation="com.intellij.openapi.editor.impl.EditorLastActionTracker$MyEditorFactoryListener"/>
    <editorFactoryMouseListener implementation="com.intellij.openapi.editor.impl.EditorLastActionTracker$MyEditorMouseListener"/>

    <editorFactoryMouseListener implementation="com.intellij.openapi.editor.EditorMouseHoverPopupManager$MyEditorMouseEventListener"/>
    <editorFactoryMouseMotionListener
      implementation="com.intellij.openapi.editor.EditorMouseHoverPopupManager$MyEditorMouseMotionEventListener"/>
    <applicationService serviceImplementation="com.intellij.openapi.editor.EditorMouseHoverPopupManager"/>
    <applicationService
      serviceInterface="com.intellij.openapi.editor.HoverDocPopupLocationProvider"
      serviceImplementation="com.intellij.openapi.editor.HoverDocPopupLocationProviderImpl"/>

    <editorFactoryListener implementation="com.intellij.codeInsight.preview.ImageOrColorPreviewManager"/>

    <registryKey key="run.anything.context.recent.directory.number" defaultValue="5"
                 description="Defines storing Run Anything context combobox directories number."/>

    <projectService serviceInterface="com.intellij.configurationStore.StoreReloadManager"
                    serviceImplementation="com.intellij.configurationStore.StoreReloadManagerImpl"/>

    <applicationService serviceInterface="com.intellij.ide.lightEdit.LightEditService"
                        serviceImplementation="com.intellij.ide.lightEdit.LightEditServiceImpl"/>
    <fileDocumentSynchronizationVetoer implementation="com.intellij.ide.lightEdit.LightEditDocumentSaveVetoer"/>
    <fileTypeOverrider implementation="com.intellij.ide.lightEdit.LightEditFileTypeOverrider"/>
    <daemon.intentionActionFilter implementation="com.intellij.ide.lightEdit.intentions.LightEditIntentionActionFilter"/>
    <intentionAction>
      <className>com.intellij.ide.lightEdit.intentions.openInProject.LightEditOpenInProjectIntention</className>
      <bundleName>messages.ApplicationBundle</bundleName>
      <categoryKey>intention.category.light.edit.mode</categoryKey>
    </intentionAction>
    <editorNotificationProvider implementation="com.intellij.ide.lightEdit.LightEditNonExistentFileNotificationProvider"/>

    <statistics.counterUsagesCollector
      implementationClass="com.intellij.platform.ide.diagnostic.startUpPerformanceReporter.StartupPerformanceCollector"/>
    <postStartupActivity implementation="com.intellij.platform.ide.diagnostic.startUpPerformanceReporter.StartupMetricCollector"/>

    <postStartupActivity implementation="com.intellij.ide.startup.CheckProjectActivity"/>
    <postStartupActivity implementation="com.intellij.ide.startup.CheckKeysStartupActivity"/>

    <environmentKeyProvider implementation="com.intellij.ide.impl.ProjectOpenKeyProvider"/>
    <environmentKeyProvider implementation="com.intellij.ide.plugins.PluginEnvironmentKeyProvider"/>


    <actionConfigurationCustomizer implementation="com.intellij.platform.ide.menu.GlobalMenuLinux$MyActionTuner"/>

    <titleInfoProvider implementation="com.intellij.openapi.wm.impl.simpleTitleParts.ProductTitleInfoProvider"/>
    <titleInfoProvider implementation="com.intellij.openapi.wm.impl.simpleTitleParts.ProductVersionTitleInfoProvider"/>
    <titleInfoProvider implementation="com.intellij.openapi.wm.impl.simpleTitleParts.SuperUserSuffixTitleInfoProvider"/>
    <titleInfoProvider implementation="com.intellij.openapi.wm.impl.simpleTitleParts.ConfigFolderTitleInfoProvider"/>

    <applicationInitializedListener implementation="com.intellij.ide.plugins.DynamicPluginVfsListenerInitializer"/>
    <vfs.asyncListener implementation="com.intellij.ide.plugins.DynamicPluginVfsListener"/>

    <intentionMenuContributor implementation="com.intellij.refactoring.suggested.SuggestedRefactoringIntentionContributor"/>
    <gutterMarkPreprocessor implementation="com.intellij.refactoring.suggested.SuggestedRefactoringGutterMarkPreprocessor"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.refactoring.suggested.SuggestedRefactoringFeatureUsage"/>

    <applicationInitializedListener implementation="com.intellij.openapi.application.impl.JitSuppressor"/>

    <applicationService serviceImplementation="com.intellij.internal.DebugAttachDetector" headlessImplementation="" preload="true"/>

    <projectService serviceInterface="com.intellij.ui.EditorNotifications" serviceImplementation="com.intellij.ui.EditorNotificationsImpl"
                    preload="true"/>

    <applicationService serviceInterface="com.intellij.ui.ToolbarService"
                        serviceImplementation="com.intellij.ui.ToolbarServiceImpl"/>

    <applicationService serviceImplementation="com.intellij.ui.WindowDeactivationManager" client="all"/>

    <applicationService serviceInterface="com.intellij.ui.AutoScrollToSourceTaskManager"
                        serviceImplementation="com.intellij.ui.AutoScrollToSourceTaskManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.updateSettings.impl.UpdateCheckerService" headlessImplementation=""/>
    <postStartupActivity implementation="com.intellij.openapi.updateSettings.impl.UpdateCheckerProjectActivity" order="last"/>

    <applicationService serviceImplementation="com.intellij.usages.impl.UsageFilteringRuleStateService" client="all"/>

    <notificationGroup id="IDE-errors" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.ide.errors"
                       isLogByDefault="false"/>
    <notificationGroup id="System Clipboard" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.system.clipboard"/>
    <notificationGroup id="Project Startup Tasks Messages" displayType="NONE" bundle="messages.ExecutionBundle"
                       key="notification.group.startup.task"/>
    <notificationGroup id="scrolling-capabilities-debug" displayType="NONE" hideFromSettings="true"/>
    <notificationGroup id="URL does not respond notification" displayType="BALLOON" bundle="messages.IdeBundle"
                       key="browser.notification.timeout.group"/>
    <notificationGroup id="editor-rendering-benchmark" displayType="NONE" hideFromSettings="true"/>
    <notificationGroup id="Error Report" displayType="BALLOON" isLogByDefault="false" bundle="messages.DiagnosticBundle"
                       key="notification.group.error.report"/>
    <notificationGroup id="Test ToolWindow Notification" displayType="TOOL_WINDOW" toolWindowId="TODO" hideFromSettings="true"/>
    <notificationGroup id="Test Sticky Notification" displayType="STICKY_BALLOON" hideFromSettings="true"/>
    <notificationGroup id="Test Balloon Notification" displayType="BALLOON" hideFromSettings="true"/>
    <notificationGroup id="Test Hidden Notification" displayType="NONE" hideFromSettings="true"/>
    <notificationGroup id="Test Notification" displayType="BALLOON" hideFromSettings="true"/>
    <notificationGroup id="Test Runner" displayType="NONE" bundle="messages.TestRunnerBundle" key="notification.group.test.runner"/>
    <notificationGroup id="System Messages" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.system.messages"/>
    <notificationGroup id="Merge Internal Error" displayType="BALLOON" hideFromSettings="true"/>
    <notificationGroup id="Diff Changes Loading Error" displayType="BALLOON" hideFromSettings="true"/>
    <notificationGroup id="System shortcuts conflicts" displayType="STICKY_BALLOON" bundle="messages.KeyMapBundle"
                       key="notification.group.shortcut.conflicts"/>
    <notificationGroup id="Required Plugins" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.required.plugins"/>
    <notificationGroup id="System Health" displayType="STICKY_BALLOON" bundle="messages.IdeBundle" key="notification.group.system.health"
                       notificationIds="mixed.bag.installation;implicit.plugin.directory.path;implicit.log.directory.path;
                                        bundled.jre.m1.arch.message;bundled.jre.version.message;code.cache.warn.message;
                                        vm.options.env.vars;shell.env.loading.failed;low.disk"/>
    <notificationGroup id="Collect Zipped Logs" displayType="BALLOON" hideFromSettings="true"/>
    <notificationGroup id="Dump Threads Group" displayType="BALLOON" isLogByDefault="false" hideFromSettings="true"/>
    <notificationGroup id="Cached value profiling" displayType="BALLOON" hideFromSettings="true"/>
    <notificationGroup id="Plugins Suggestion" displayType="STICKY_BALLOON" bundle="messages.IdeBundle"
                       key="notification.group.plugins.suggestion"
                       notificationIds="advertiser.plugins;advertiser.no.plugins;kotlin.native.debug;kotlin.js;tasks.youtrack;resource.bundle.editor"/>
    <notificationGroup id="File Watcher Messages" displayType="STICKY_BALLOON" bundle="messages.IdeCoreBundle"
                       key="notification.group.file.watcher"/>
    <notificationGroup id="Low Memory" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.low.memory"/>
    <notificationGroup id="Plugin Error" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.plugin.error"/>
    <notificationGroup id="Failed to remove BOM" displayType="BALLOON" bundle="messages.IdeBundle"
                       key="notification.group.failed.to.remove.bom"/>
    <notificationGroup id="too.many.carets" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.too.many.carets"/>
    <notificationGroup id="File type conflict" displayType="BALLOON" bundle="messages.FileTypesBundle"
                       key="notification.group.file.type.conflict"/>
    <notificationGroup id="Pattern reassigned" displayType="BALLOON" bundle="messages.FileTypesBundle"
                       key="notification.group.pattern.reassigned"/>
    <notificationGroup id="Project Settings" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.project.settings"/>
    <notificationGroup id="Settings Error" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.settings.error"/>
    <notificationGroup id="Load Error" displayType="BALLOON" bundle="messages.IdeBundle" key="notification.group.load.error"/>
    <notificationGroup id="Heap Dump Analysis" displayType="STICKY_BALLOON" bundle="messages.DiagnosticBundle"
                       key="notification.group.heap.dump.analysis"/>
    <notificationGroup id="KeymapMissing" displayType="STICKY_BALLOON" bundle="messages.KeyMapBundle"
                       key="notification.group.keymap.missing"/>
    <notificationGroup id="ColorSchemeDeprecation" displayType="STICKY_BALLOON" bundle="messages.IdeBundle"
                       key="notification.title.solarized.color.scheme.deprecation"/>
    <notificationGroup id="KeymapInstalled" displayType="BALLOON" bundle="messages.KeyMapBundle" key="notification.group.keymap.installed"/>
    <notificationGroup id="IDE and Plugin Updates" displayType="STICKY_BALLOON"
                       bundle="messages.IdeBundle" key="notification.group.ide.and.plugin.updates"
                       notificationIds="ide.update.channel.switched;ide.update.available;
                       plugins.update.available;external.components.available;no.updates.available;dart.sdk.update.available"/>
    <notificationGroup id="IDE Update Results" displayType="STICKY_BALLOON" bundle="messages.IdeBundle"
                       key="notification.group.ide.update.results"
                       notificationIds="ide.update.installed;ide.updated.by.snap;ide.patch.download.failed;ide.update.suggest.restart;ide.whats.new"/>
    <notificationGroup id="Plugin Update Results" displayType="BALLOON"
                       bundle="messages.IdeBundle" key="notification.group.plugin.updates"
                       notificationIds="plugins.updated.without.restart;plugins.updated.after.restart;plugin.auto.switch;plugins.updated.restart.required;
                       plugins.updated.suggest.restart"/>
    <notificationGroup id="leftover.ide.directories" displayType="BALLOON" bundle="messages.IdeBundle"
                       key="notification.group.leftover.directories"/>
    <notificationGroup id="Built-in Server" displayType="STICKY_BALLOON" bundle="messages.IdeBundle"
                       key="notification.group.built.in.server"/>
    <notificationGroup id="Password Safe" displayType="STICKY_BALLOON" bundle="messages.IdeBundle" key="notification.group.password.safe"/>
    <notificationGroup id="Test Results" displayType="TOOL_WINDOW" toolWindowId="Run" isLogByDefault="false" hideFromSettings="true"/>
    <notificationGroup id="PerformanceWatcher" displayType="STICKY_BALLOON" bundle="messages.DiagnosticBundle"
                       key="notification.group.performance.watcher"/>
    <notificationGroup id="WindowsDefender" displayType="BALLOON" bundle="messages.DiagnosticBundle"
                       key="notification.group.defender.config"/>
    <notificationGroup id="BrowserCfgProblems" displayType="BALLOON" bundle="messages.IdeBundle"
                       key="notification.group.browser.config.problems"/>

    <defaultHighlightingSettingProvider implementation="com.intellij.codeInsight.actions.ReaderModeHighlightingSettingsProvider"/>
    <registryKey key="html.editor.timeout" defaultValue="15000" description="HTML editor content loading timeout, ms"/>
    <iw.actionProvider implementation="com.intellij.codeInsight.actions.ReaderModeActionProvider"/>
    <gotoActionAliasMatcher implementation="com.intellij.ide.util.gotoByName.LocalizedActionAliasMatcher"/>

    <backgroundPostStartupActivity implementation="com.intellij.accessibility.AccessibilityUsageTrackerCollector$CollectStatisticsTask"/>
    <postStartupActivity implementation="com.intellij.accessibility.EnableScreenReaderSupportTask"/>

    <editorFactoryListener implementation="com.intellij.codeInsight.editorActions.ReaderModeEditorFactoryListener"/>
    <readerModeMatcher implementation="com.intellij.diff.actions.DiffReaderModeMatcher"/>
    <backgroundPostStartupActivity implementation="com.intellij.ide.plugins.LanguagePluginDetectionStartupActivity"/>
    <notificationGroup id="Language Plugins Notifications" displayType="NONE" bundle="messages.IdeBundle"
                       key="notification.group.language.plugin"/>

    <settingsEntryPointActionProvider implementation="com.intellij.openapi.updateSettings.impl.UpdateSettingsEntryPointActionProvider"
                                      order="first"/>

    <backgroundPostStartupActivity implementation="com.intellij.notification.impl.RemindLaterActivity"/>

    <applicationConfigurable id="advanced.settings"
                             key="title.advanced.settings"
                             bundle="messages.ApplicationBundle"
                             instance="com.intellij.openapi.options.advanced.AdvancedSettingsConfigurable"
                             groupId="root"/>

    <postStartupActivity implementation="com.intellij.openapi.util.registry.RegistryToAdvancedSettingsMigration"/>

    <advancedSetting id="ide.always.show.tool.window.header.icons" default="false" groupKey="group.advanced.settings.tool.windows"/>
    <advancedSetting id="ide.tool.window.header.dnd" default="true" groupKey="group.advanced.settings.tool.windows"/>
    <advancedSetting id="ide.show.fileType.icon.in.titleBar" default="false" groupKey="group.advanced.settings.ui"/>
    <advancedSetting id="ide.macos.disable.native.shortcut.symbols" default="false" groupKey="group.advanced.settings.ui"/>
    <advancedSetting id="ide.max.recent.projects" default="50" groupKey="group.advanced.settings.ide"/>
    <advancedSetting id="ide.max.recent.files" default="50" groupKey="group.advanced.settings.ide" service="com.intellij.ide.ui.UISettings"
                     property="recentFilesLimit"/>
    <advancedSetting id="ide.max.recent.locations" default="25" groupKey="group.advanced.settings.ide"
                     service="com.intellij.ide.ui.UISettings" property="recentLocationsLimit"/>
    <advancedSetting id="temporary.configurations.limit" default="5" groupKey="group.advanced.settings.run"/>
    <advancedSetting id="confirm.rerun.with.termination" default="true" groupKey="group.advanced.settings.run"/>
    <advancedSetting id="start.run.configurations.pinned" default="false" groupKey="group.advanced.settings.run"/>
    <advancedSetting id="max.recent.run.configurations" default="5" groupKey="group.advanced.settings.run"/>
    <advancedSetting id="se.text.search" default="true" groupKey="group.advanced.settings.se"/>
    <advancedSetting id="edit.source.on.enter.key.request.focus.in.editor" default="true" groupKey="group.advanced.settings.project.view"/>
    <advancedSetting id="ide.tree.collapse.recursively" default="true" groupKey="group.advanced.settings.project.view"/>
    <advancedSetting id="project.view.do.not.autoscroll.to.libraries" default="false" groupKey="group.advanced.settings.project.view"/>
    <advancedSetting id="ide.open.readme.md.on.startup" default="true" groupKey="group.advanced.settings.startup"/>
    <advancedSetting id="editor.skip.copy.and.cut.for.empty.selection" default="false" groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="editor.skip.selecting.line.after.copy.empty.selection" default="false" groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="editor.paste.line.copied.from.empty.selection"
                     enumClass="com.intellij.openapi.editor.impl.CopiedFromEmptySelectionPasteMode" default="ENTIRE_LINE_ABOVE_CARET"
                     groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="editor.show.special.chars" default="true" groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="editor.show.zoom.indicator" default="true" groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="ide.cycle.scrolling" default="true" groupKey="group.advanced.settings.ui"/>
    <advancedSetting id="ide.settings.move.mouse.on.default.button" default="false" groupKey="group.advanced.settings.ui"/>
    <advancedSetting id="editor.tab.painting" enumClass="com.intellij.openapi.editor.impl.TabCharacterPaintMode" default="HORIZONTAL_LINE"
                     groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="editor.distraction.free.margin" default="-1" groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="editor.gutter.linenumber.font.size.delta" default="-1" groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="editor.soft.wrap.force.limit" default="100000" groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="editor.selection.expand-whitespaces" default="true" groupKey="group.advanced.settings.editor"/>
    <advancedSetting id="editor.open.inactive.splitter" default="true" groupKey="group.advanced.settings.editor.tabs"/>
    <advancedSetting id="editor.reuse.not.modified.tabs" default="false" groupKey="group.advanced.settings.editor.tabs"
                     service="com.intellij.ide.ui.UISettings" property="reuseNotModifiedTabs"/>
    <advancedSetting id="editor.open.tabs.in.main.window" default="false" groupKey="group.advanced.settings.editor.tabs"
                     service="com.intellij.ide.ui.UISettings" property="openTabsInMainWindow"/>
    <advancedSetting id="terminal.buffer.max.lines.count" default="5000" groupKey="group.advanced.settings.terminal"/>
    <advancedSetting id="terminal.escape.moves.focus.to.editor" default="true" groupKey="group.advanced.settings.terminal"/>
    <advancedSetting id="terminal.type.ahead" default="true" groupKey="group.advanced.settings.terminal"/>
    <advancedSetting id="terminal.type.ahead.latency.threshold" default="100" groupKey="group.advanced.settings.terminal"/>
    <advancedSetting id="terminal.use.1.0.line.spacing.for.alternative.screen.buffer" default="true"
                     groupKey="group.advanced.settings.terminal"/>
    <advancedSetting id="terminal.fill.character.background.including.line.spacing" default="false"
                     groupKey="group.advanced.settings.terminal"/>
    <advancedSetting id="documentation.components.enable.inline.code.highlighting" default="false"
                     groupKey="group.advanced.settings.documentation.components"/>
    <advancedSetting id="documentation.components.enable.code.blocks.highlighting" default="true"
                     groupKey="group.advanced.settings.documentation.components"/>
    <advancedSetting id="documentation.components.enable.highlighting.of.links" default="false"
                     groupKey="group.advanced.settings.documentation.components"/>
    <advancedSetting id="search.everywhere.wait.for.contributors" default="true" groupKey="group.advanced.settings.se"/>
    <advancedSetting id="search.everywhere.contributors.wait.timeout" default="2000" groupKey="group.advanced.settings.se"/>

    <backgroundPostStartupActivity implementation="com.intellij.ide.plugins.DependencyFeatureCollector"/>
    <projectService serviceInterface="com.intellij.presentation.FilePresentationService"
                    serviceImplementation="com.intellij.presentation.impl.FilePresentationServiceImpl"/>

    <advancedSetting id="show.diff.as.editor.tab" default="true" bundle="messages.DiffBundle" groupKey="advanced.settings.vcs"/>

    <recoveryAction implementation="com.intellij.ide.actions.cache.InvalidateCachesAndRestartAction"/>
    <recoveryAction implementation="com.intellij.ide.actions.cache.RecoverVfsFromLogRecoveryAction"/>
    <registryKey description="Suggest cache recovery on caches corruption" key="idea.vfs.log-vfs-operations.suggest-automatic-recovery"
                 defaultValue="true"/>

    <applicationService serviceInterface="com.intellij.openapi.application.CoroutineSupport"
                        serviceImplementation="com.intellij.openapi.application.impl.PlatformCoroutineSupport"/>
    <applicationService serviceInterface="com.intellij.openapi.application.ReadWriteActionSupport"
                        serviceImplementation="com.intellij.openapi.application.rw.PlatformReadWriteActionSupport"/>

    <persistentFsConnectionListener implementation="com.intellij.openapi.vfs.impl.jar.ArchiveCachesCleaner"/>
    <applicationService serviceInterface="com.intellij.platform.ide.progress.TaskSupport"
                        serviceImplementation="com.intellij.openapi.progress.impl.PlatformTaskSupport" preload="true"/>
    <registryKey key="new.project.wizard.modal.plugin.install" description="Enables modal lanungage plugins installing"
                 defaultValue="false"/>
    <searchEverywhereContributor implementation="com.intellij.find.impl.TextSearchContributor$Companion$Factory"/>

    <applicationService serviceInterface="com.intellij.openapi.vfs.newvfs.persistent.FsRootDataLoader"
                        serviceImplementation="com.intellij.openapi.vfs.newvfs.persistent.EmptyFsRootDataLoader"/>

    <applicationService serviceInterface="com.intellij.diagnostic.PerformanceWatcher"
                        serviceImplementation="com.intellij.diagnostic.PerformanceWatcherImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.wm.impl.headertoolbar.OpenProjectSelectionPredicateSupplier"
                        serviceImplementation="com.intellij.openapi.wm.impl.headertoolbar.DefaultOpenProjectSelectionPredicateSupplier"/>

    <projectService serviceInterface="com.intellij.internal.performanceTests.ProjectInitializationDiagnosticService"
                    serviceImplementation="com.intellij.internal.performanceTests.DummyProjectInitializationDiagnosticService"/>

    <!-- Presentation Assistant -->
    <applicationService serviceImplementation="com.intellij.platform.ide.impl.presentationAssistant.PresentationAssistant"/>
    <applicationConfigurable groupId="appearance"
                             key="presentation.assistant.settings"
                             bundle="messages.IdeBundle"
                             groupWeight="-15"
                             instance="com.intellij.platform.ide.impl.presentationAssistant.PresentationAssistantConfigurable"/>
    <notificationGroup id="Presentation Assistant"
                       displayType="BALLOON"
                       bundle="messages.IdeBundle"
                       key="presentation.assistant.notification"/>

    <!-- Minimap -->
    <registryKey key="editor.minimap.enabled" defaultValue="false" description="Enables Minimap"/>
    <editorFactoryListener implementation="com.intellij.ide.minimap.MinimapEditorFactoryListener"/>
    <applicationService serviceImplementation="com.intellij.ide.minimap.settings.MinimapSettings"/>
    <applicationConfigurable id="com.intellij.minimap" parentId="editor"
                             provider="com.intellij.ide.minimap.settings.MinimapConfigurableProvider"
                             key="settings.name" bundle="messages.MinimapBundle"/>
    <applicationService serviceImplementation="com.intellij.ide.minimap.MinimapService"/>
    <registryKey key="popup.advertiser.speed.search" defaultValue="false" description="Shows speed search advertiser in popups"/>
    <actionPromoter implementation="com.intellij.ide.actions.speedSearch.SpeedSearchActionPromoter"/>

    <interactiveCourseFactory implementation="com.intellij.openapi.wm.impl.welcomeScreen.learnIde.jbAcademy.JBAcademyInteractiveCourse"/>

    <cachesInvalidator implementation="com.intellij.ide.ui.IconCacheInvalidator"/>

    <cachesInvalidator implementation="com.intellij.openapi.fileEditor.impl.text.foldingGrave.MarkupCacheInvalidator$InvalidationRequest"/>

    <diagnostic.freezeProfiler implementation="com.intellij.diagnostic.opentelemetry.OTelMetricsFreezeProfiler"/>

    <backgroundPostStartupActivity implementation="com.intellij.diagnostic.opentelemetry.JVMStatsToOTelReporter"/>

    <applicationInitializedListener implementation="com.intellij.openapi.vfs.newvfs.persistent.VFSHealthCheckServiceStarter"/>

    <backgroundPostStartupActivity implementation="com.intellij.openapi.vfs.newvfs.monitoring.VFSInitializationConditionsToFusReporter"/>

    <registryKey key="llm.empty.intention.generation"
                 defaultValue="false"
                 description="Provides AI generated code for inspections without quick-fixes"/>

    <idePerformanceListener implementation="com.intellij.diagnostic.FusFreezeReporter"/>

    <registryKey key="search.everywhere.footer.extended.info"
                 defaultValue="true"
                 description="Enabled rendering of a selected element context information in the search everywhere list footer"/>

    <registryKey key="search.everywhere.preview"
                 defaultValue="false"
                 description="Enables preview of the selected element in the Search Everywhere"/>

    <registryKey key="search.everywhere.recents"
                 defaultValue="true"
                 description="Enables recent items on search everywhere tabs"/>

    <registryKey key="search.everywhere.recents.limit"
                 defaultValue="25"
                 description="Limit of recent items for search everywhere tabs"/>

    <registryKey key="highlighting.passes.cache"
                 defaultValue="false"
                 description="Enables highlighting passes cache"/>

    <registryKey key="highlighting.passes.cache.experiment"
                 defaultValue="false"
                 description="Turns on preloading highlighting passes experiment"/>

    <registryKey key="highlighting.passes.cache.file.size.limit"
                 defaultValue="500"
                 description="Only the files with line count not bigger that the value are aviable for highlighting passes preloading"/>

    <registryKey key="highlighting.passes.cache.size"
                 defaultValue="25"
                 description="Highlighting passes cache size"/>

    <registryKey key="highlighting.passes.cache.experiment.group"
                 defaultValue="false"
                 description="Turn on the highlighting passes preload experiment"/>

    <actionConfigurationCustomizer implementation="com.intellij.openapi.project.impl.SeparateProcessActionsCustomizer"/>

    <projectService serviceImplementation="com.intellij.openapi.updateSettings.impl.CustomPluginRepositoriesConfigurationComponent"
                    configurationSchemaKey="plugins"/>
    <updateSettingsProvider implementation="com.intellij.openapi.updateSettings.impl.ConfigurationScriptPluginRepositoriesProvider"/>

    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.OpenFileQuickAction"
                        listGroupID="MainToolbarQuickActions.General"/>
    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.SaveAllQuickAction"
                        listGroupID="MainToolbarQuickActions.General"/>
    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.SynchronizeQuickAction"
                        listGroupID="MainToolbarQuickActions.General"/>
    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.BackForwardQuickAction"
                        listGroupID="MainToolbarQuickActions.General"/>
    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.UndoRedoQuickAction"
                        listGroupID="MainToolbarQuickActions.General"/>
    <registryKey key="transferSettings.vscode.onlyCargoToml"
                 defaultValue="false"
                 description="Import only projects that contain cargo.toml file"
    />

    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.BuildQuickAction"
                        listGroupID="MainToolbarQuickActions.Run"/>
    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.CoverageQuickAction"
                        listGroupID="MainToolbarQuickActions.Run"/>
    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.ProfilerQuickAction"
                        listGroupID="MainToolbarQuickActions.Run"/>

    <notificationRouter implementation="com.intellij.notification.impl.LocalNotificationRouter" order="last"/>
    <applicationInitializedListener implementation="com.intellij.ide.ui.IconDbMaintainer"/>
    <ideEventQueueDispatcher implementation="com.intellij.ide.ui.laf.LaFMnemonicDispatcher"/>

    <registryKey key="code.toolbar.debugger.actions" defaultValue="true" description="Add debugger actions into floating toolbar."/>

    <!-- Settings Transfer -->
    <transferSettings.vscode.pluginMapping id="CommonPluginMapping"
                                           implementation="com.intellij.ide.customize.transferSettings.providers.vscode.mappings.CommonPluginMapping"/>
  </extensions>

  <applicationListeners>
    <listener class="com.intellij.ide.plugins.DynamicPluginsFrameStateListener"
              topic="com.intellij.openapi.application.ApplicationActivationListener"/>
    <listener class="com.intellij.openapi.updateSettings.impl.UpdateCheckerService$MyAppLifecycleListener"
              topic="com.intellij.ide.AppLifecycleListener"/>
    <listener class="com.intellij.ide.actions.CreateLauncherScriptAction$ObsoleteScriptLookupTask"
              topic="com.intellij.ide.AppLifecycleListener"/>
    <listener class="com.intellij.openapi.updateSettings.impl.UpdateSettingsEntryPointActionProvider$LifecycleListener"
              topic="com.intellij.ide.AppLifecycleListener"/>
    <listener class="com.intellij.ui.mac.MergeAllWindowsAction$RecentProjectsFullScreenTabSupport"
              topic="com.intellij.ide.AppLifecycleListener"/>
    <listener class="com.intellij.openapi.vcs.FileStatusFactoryImpl$PluginListener"
              topic="com.intellij.ide.plugins.DynamicPluginListener"/>
    <listener class="com.intellij.codeInsight.hints.InlayUnloadingListener" activeInHeadlessMode="false" activeInTestMode="false"
              topic="com.intellij.ide.plugins.DynamicPluginListener"/>
    <listener class="com.intellij.openapi.fileTypes.StdFileTypes$StdFileTypesUpdater" activeInHeadlessMode="true" activeInTestMode="false"
              topic="com.intellij.openapi.fileTypes.FileTypeListener"/>
    <listener class="com.intellij.internal.statistic.collectors.fus.TypingEventsLogger$TypingEventsListener" activeInHeadlessMode="true"
              topic="com.intellij.openapi.actionSystem.ex.AnActionListener" activeInTestMode="false"/>
    <listener class="com.intellij.internal.statistic.collectors.fus.TypingEventsLogger$TypingLatencyReporter"
              topic="com.intellij.openapi.fileEditor.FileEditorManagerListener" activeInTestMode="false"/>
    <listener class="com.intellij.featureStatistics.StatisticsStateCollectorsTrigger" activeInTestMode="false" activeInHeadlessMode="false"
              topic="com.intellij.ide.AppLifecycleListener"/>
    <listener class="com.intellij.ide.plugins.CreateAllServicesAndExtensionsActivity"
              topic="com.intellij.ide.AppLifecycleListener" activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="com.intellij.ide.actionsOnSave.impl.ActionsOnSaveFileDocumentManagerListener"
              topic="com.intellij.openapi.fileEditor.FileDocumentManagerListener"/>
    <listener class="com.intellij.ide.actionsOnSave.impl.CurrentActionListener"
              topic="com.intellij.openapi.actionSystem.ex.AnActionListener"/>
    <listener class="com.intellij.ide.trustedProjects.impl.UntrustedProjectNotificationProvider$TrustedListener"
              topic="com.intellij.ide.trustedProjects.TrustedProjectsListener" activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="com.intellij.ide.impl.TrustStateListener$Bridge"
              topic="com.intellij.ide.trustedProjects.TrustedProjectsListener" activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="com.intellij.openapi.util.registry.EarlyAccessRegistryManagerListener" activeInTestMode="false"
              topic="com.intellij.openapi.util.registry.RegistryValueListener"/>
    <listener class="com.intellij.ide.ui.experimental.toolbar.ExperimentalToolbarSettings$ToolbarRegistryListener"
              topic="com.intellij.openapi.util.registry.RegistryValueListener"/>
    <listener class="com.intellij.codeInsight.daemon.impl.ErrorStripeUpdateManager$EssentialHighlightingModeListener"
              topic="com.intellij.openapi.util.registry.RegistryValueListener"/>

    <listener class="com.intellij.ide.FrameStateManagerAppListener"
              topic="com.intellij.openapi.application.ApplicationActivationListener"/>
    <listener class="com.intellij.openapi.keymap.impl.KeymapFlagsStorageListener"
              topic="com.intellij.openapi.keymap.KeymapManagerListener"/>
    <listener class="com.intellij.ide.actions.IdeScaleSettingsListener" activeInHeadlessMode="false" activeInTestMode="false"
              topic="com.intellij.ide.ui.UISettingsListener"/>
    <listener class="com.intellij.ide.ProjectWindowCustomizerListener"
              topic="com.intellij.ide.ui.UISettingsListener"/>
    <listener class="com.intellij.ui.MacCustomAppIconStartupService" topic="com.intellij.ide.AppLifecycleListener"/>
    <listener class="com.intellij.platform.ide.impl.presentationAssistant.PresentationAssistantListenerRegistrar"
              topic="com.intellij.ide.AppLifecycleListener"/>
    <listener class="com.intellij.platform.ide.impl.presentationAssistant.PresentationAssistantListenerRegistrar"
              topic="com.intellij.ide.plugins.DynamicPluginListener"/>

    <listener class="com.intellij.openapi.editor.actions.ResetFontSizeAppInitListener" topic="com.intellij.ide.AppLifecycleListener"/>

    <listener class="com.intellij.ide.ui.laf.LafAndEditorColorSchemeDynamicPluginListener"
              topic="com.intellij.ide.plugins.DynamicPluginListener"/>

    <listener class="com.intellij.codeInsight.inline.completion.listeners.InlineCompletionTypingListener"
              topic="com.intellij.openapi.actionSystem.ex.AnActionListener"/>
    <listener class="com.intellij.codeInsight.inline.completion.listeners.InlineCompletionNewLineAnActionListener"
              topic="com.intellij.openapi.actionSystem.ex.AnActionListener"/>
  </applicationListeners>

  <projectListeners>
    <listener class="com.intellij.notification.impl.NotificationsListener"
              activeInHeadlessMode="false"
              activeInTestMode="false"
              topic="com.intellij.notification.Notifications"/>
    <listener class="com.intellij.formatting.EditorFormatterListener"
              topic="com.intellij.psi.codeStyle.CodeStyleManager$Listener"/>
    <listener class="com.intellij.openapi.project.ProjectRootManagerOnEndOfDumbModeIncrementer"
              topic="com.intellij.openapi.project.DumbService$DumbModeListener"/>
    <listener class="com.intellij.openapi.project.RefreshIconsOnEndOfDumbModeListener"
              topic="com.intellij.openapi.project.DumbService$DumbModeListener"/>
    <listener class="com.intellij.codeInsight.inline.completion.listeners.InlineCompletionTemplateListener"
              topic="com.intellij.codeInsight.template.TemplateManagerListener"/>
  </projectListeners>

  <xi:include href="/META-INF/RemoteDevUtil.xml">
    <xi:fallback/>
  </xi:include>
</idea-plugin>
