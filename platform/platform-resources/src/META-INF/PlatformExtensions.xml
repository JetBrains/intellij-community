<idea-plugin>
  <projectListeners>
    <listener class="com.intellij.tasks.context.BranchContextTracker" topic="com.intellij.openapi.vcs.BranchChangeListener"/>
  </projectListeners>
  <extensions defaultExtensionNs="com.intellij">
    <!-- must be first - adds activity listener (to track, when reporting should be stopped) -->
    <startupActivity id="performanceReporter" implementation="com.intellij.diagnostic.startUpPerformanceReporter.StartUpPerformanceReporter" order="first"/>

    <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
    <appStarter implementation="com.intellij.openapi.application.SaveStarter"/>
    <appStarter implementation="com.intellij.diff.applications.DiffApplication"/>
    <appStarter implementation="com.intellij.diff.applications.MergeApplication"/>
    <appStarter implementation="com.intellij.ui.win.RecentProjectApplication"/>
    <appStarter implementation="com.intellij.openapi.command.impl.UpdatePluginsApp"/>
    <appStarter implementation="com.intellij.help.impl.KeymapGenerator"/>
    <appStarter implementation="com.intellij.help.impl.IntentionDump"/>
    <appStarter implementation="com.intellij.help.impl.InspectionDump"/>
    <appStarter implementation="com.intellij.help.impl.ShowProductVersion"/>
    <appStarter implementation="com.intellij.ide.plugins.BundledPluginsLister"/>
    <appStarter implementation="com.intellij.ide.plugins.JarOrderStarter"/>
    <appStarter implementation="com.intellij.internal.statistic.eventLog.whitelist.WhitelistBuilderAppStarter"/>

    <groupConfigurable id="appearance" weight="70"
                       helpTopic="configurable.group.appearance.help.topic"
                       displayNameKey="configurable.group.appearance.settings.display.name"
                       descriptionKey="configurable.group.appearance.settings.description"/>
    <groupConfigurable id="editor" weight="60"
                       helpTopic="configurable.group.editor.help.topic"
                       displayNameKey="configurable.group.editor.settings.display.name"
                       descriptionKey="configurable.group.editor.settings.description"/>
    <groupConfigurable id="proofread" parentId="editor"
                       displayNameKey="configurable.group.proofread.settings.display.name"
                       descriptionKey="configurable.group.proofread.settings.description"/>
    <groupConfigurable id="project" weight="40"
                       displayNameKey="configurable.group.project.settings.display.name"
                       descriptionKey="configurable.group.project.settings.description"/>
    <groupConfigurable id="build" weight="30"
                       helpTopic="configurable.group.build.help.topic"
                       displayNameKey="configurable.group.build.settings.display.name"
                       descriptionKey="configurable.group.build.settings.description"/>
    <groupConfigurable id="build.tools" parentId="build" weight="1000"
                       displayNameKey="configurable.group.build.tools.settings.display.name"
                       descriptionKey="configurable.group.build.tools.settings.description"/>
    <groupConfigurable id="profiler" parentId="build"
                       displayNameKey="configurable.group.profiler.settings.display.name"
                       descriptionKey="configurable.group.profiler.settings.description"/>
    <groupConfigurable id="language" weight="20"
                       helpTopic="configurable.group.language.help.topic"
                       displayNameKey="configurable.group.language.settings.display.name"
                       descriptionKey="configurable.group.language.settings.description"/>
    <groupConfigurable id="tools" weight="10"
                       helpTopic="configurable.group.tools.help.topic"
                       displayNameKey="configurable.group.tools.settings.display.name"
                       descriptionKey="configurable.group.tools.settings.description"/>
    <groupConfigurable id="other" weight="-10"
                       displayNameKey="configurable.group.other.settings.display.name"
                       descriptionKey="configurable.group.other.settings.description"/>

    <applicationService serviceImplementation="com.intellij.util.net.ssl.CertificateManager" preload="await"/>

    <applicationService serviceInterface="com.intellij.ide.plugins.PluginConflictReporter" serviceImplementation="com.intellij.diagnostic.GuiPluginConflictReporter"/>
    <applicationService serviceImplementation="com.intellij.diagnostic.DebugLogManager" preload="true"/>

    <applicationService serviceInterface="com.intellij.openapi.vfs.newvfs.ManagingFS"
                        serviceImplementation="com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl" preload="true"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.VirtualFileManager"
                        serviceImplementation="com.intellij.openapi.vfs.PlatformVirtualFileManager" preload="true"/>
    <applicationService serviceInterface="com.intellij.history.LocalHistory"
                        serviceImplementation="com.intellij.history.integration.LocalHistoryImpl" preload="true"/>

    <applicationService serviceInterface="com.intellij.openapi.vfs.pointers.VirtualFilePointerManager"
                        serviceImplementation="com.intellij.openapi.vfs.impl.VirtualFilePointerManagerImpl"/>
    <vfs.asyncListener implementation="com.intellij.openapi.vfs.impl.VirtualFilePointerManagerImpl$MyAsyncFileListener"/>

    <applicationService serviceImplementation="com.intellij.util.net.HttpConfigurable" preload="await"/>
    <applicationService serviceImplementation="com.intellij.ide.ClipboardSynchronizer" preload="true"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.KeymapManager" preload="notHeadless"
                        serviceImplementation="com.intellij.openapi.keymap.impl.KeymapManagerImpl"/>

    <!-- requested by FileBasedIndexImpl, so, to make start-up more flat, also preload -->
    <applicationService serviceInterface="com.intellij.openapi.fileEditor.FileDocumentManager" preload="true"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.FileDocumentManagerImpl"/>
    <projectCloseHandler implementation="com.intellij.openapi.fileEditor.impl.FileDocumentManagerImpl$MyProjectCloseHandler"/>
    <vfs.asyncListener implementation="com.intellij.openapi.fileEditor.impl.FileDocumentManagerImpl$MyAsyncFileListener"/>

    <applicationService serviceInterface="com.intellij.openapi.project.ProjectManager"
                        serviceImplementation="com.intellij.openapi.project.impl.ProjectManagerImpl"/>

    <!-- FileTypeManagerImpl wants PropertiesComponent -->
    <applicationService serviceInterface="com.intellij.ide.util.PropertiesComponent"
                        serviceImplementation="com.intellij.ide.util.AppPropertiesComponentImpl" preload="true"/>

    <applicationService serviceInterface="com.intellij.openapi.fileTypes.FileTypeManager"
                        serviceImplementation="com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl" preload="await"/>

    <!-- listen VFS_CHANGES - it is core service, so, don't want use lazy message bus listener without a reason -->
    <applicationService serviceInterface="com.intellij.openapi.command.undo.DocumentReferenceManager"
                        serviceImplementation="com.intellij.openapi.command.impl.DocumentReferenceManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.diagnostic.LowMemoryNotifier" preload="true"/>

    <applicationService serviceInterface="com.intellij.codeWithMe.ClientIdValueStoreService" serviceImplementation="com.intellij.codeWithMe.ClientIdValueStoreServiceImpl" preload="true" />

    <projectService serviceImplementation="com.intellij.notification.EventLog$ProjectTracker" preload="notHeadless"/>
    <projectService serviceImplementation="com.intellij.notification.impl.NotificationsManagerImpl$ProjectNotificationsComponent" preload="notHeadless"/>

    <applicationService serviceImplementation="com.intellij.execution.wsl.WSLDistributionService"/>
    <experimentalFeature id="wsl.close.process.input" percentOfUsers="0">
      <description>Forces closing of WSL process input stream to prevent process zombification. See
        https://github.com/Microsoft/WSL/issues/2592
        Required for Windows 10 version prior 1803
      </description>
    </experimentalFeature>
    <experimentalFeature id="wsl.p9.support" percentOfUsers="100">
      <description>Allow IDE to use the \\wsl$\ paths to access the WSL filesystem using P9 protocol (available since Windows update
        1903).
      </description>
    </experimentalFeature>
    <experimentalFeature id="wsl.prefer.p9.support" percentOfUsers="0">
      <description>Prefer P9 FS access protocol even if direct access to WSL FS is available.
      </description>
    </experimentalFeature>
    <experimentalFeature id="wsl.p9.show.roots.in.file.chooser" percentOfUsers="100">
      <description>Show P9 roots (\\wsl$\...) of available WSL distributions in the file chooser (available since Windows update 1903).
      </description>
    </experimentalFeature>

    <virtualFileSystem implementationClass="com.intellij.openapi.vfs.impl.local.LocalFileSystemImpl" key="file" physical="true"/>
    <virtualFileSystem implementationClass="com.intellij.openapi.vfs.impl.jar.JarFileSystemImpl" key="jar" physical="true"/>
    <virtualFileSystem implementationClass="com.intellij.openapi.vfs.ex.temp.TempFileSystem" key="temp" physical="true"/>

    <applicationService serviceInterface="com.intellij.application.options.RegistryManager"
                        serviceImplementation="com.intellij.application.options.RegistryManagerImpl" preload="true"/>

    <applicationService serviceImplementation="com.intellij.ui.jcef.JBCefStartup" preload="true" os="mac"/>

    <applicationService serviceInterface="com.intellij.execution.ExecutorRegistry"
                        serviceImplementation="com.intellij.execution.ExecutorRegistryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.project.impl.ProjectStoreFactory"
                        serviceImplementation="com.intellij.configurationStore.PlatformProjectStoreFactory"/>
    <projectService serviceImplementation="com.intellij.configurationStore.ProjectIdManager"/>

    <applicationService serviceInterface="com.intellij.openapi.components.impl.stores.IComponentStore"
                        serviceImplementation="com.intellij.configurationStore.ApplicationStoreImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.components.PathMacroManager"
                        serviceImplementation="com.intellij.configurationStore.ApplicationPathMacroManager"/>

    <applicationService serviceImplementation="com.intellij.configurationStore.DefaultProjectExportableAndSaveTrigger"/>

    <applicationService serviceInterface="com.intellij.openapi.wm.impl.FrameTitleBuilder"
                        serviceImplementation="com.intellij.openapi.wm.impl.PlatformFrameTitleBuilder"/>

    <applicationService serviceImplementation="com.intellij.ide.GeneralSettings" preload="notHeadless"/>

    <applicationService serviceInterface="com.intellij.openapi.actionSystem.JBAwtEventQueue"
                        serviceImplementation="com.intellij.openapi.actionSystem.impl.JBAwtEventQueueImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.options.ShowSettingsUtil"
                        serviceImplementation="com.intellij.ide.actions.ShowSettingsUtilImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.help.HelpManager"
                        serviceImplementation="com.intellij.help.impl.HelpManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileChooser.FileChooserFactory"
                        serviceImplementation="com.intellij.openapi.fileChooser.impl.FileChooserFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.progress.ProgressManager"
                        serviceImplementation="com.intellij.openapi.progress.impl.ProgressManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.ide.ui.customization.CustomActionsSchema"/>
    <applicationService serviceInterface="com.intellij.ide.ui.ProductIcons"
                        serviceImplementation="com.intellij.ide.impl.ui.ProductsIconsImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.project.DefaultProjectFactory"
                        serviceImplementation="com.intellij.openapi.project.DefaultProjectFactoryImpl"/>

    <undoProvider implementation="com.intellij.openapi.command.impl.FileUndoProvider"/>
    <projectUndoProvider implementation="com.intellij.openapi.command.impl.FileUndoProvider"/>

    <applicationService serviceInterface="com.intellij.openapi.command.CommandProcessor"
                        serviceImplementation="com.intellij.openapi.command.impl.CommandProcessorImpl"/>

    <applicationService serviceInterface="com.intellij.ide.CommonActionsManager"
                        serviceImplementation="com.intellij.ide.impl.CommonActionsManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.ide.CopyPasteManager"
                        serviceImplementation="com.intellij.ide.CopyPasteManagerEx"/>
    <applicationService serviceInterface="com.intellij.openapi.ui.popup.JBPopupFactory"
                        serviceImplementation="com.intellij.ui.popup.PopupFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileEditor.ex.FileEditorProviderManager"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.FileEditorProviderManagerImpl"/>

    <applicationService serviceInterface="com.intellij.ide.ui.search.SearchableOptionsRegistrar"
                        serviceImplementation="com.intellij.ide.ui.search.SearchableOptionsRegistrarImpl"/>
    <search.optionContributor implementation="com.intellij.ide.ui.search.PluginSearchableOptionContributor"/>

    <applicationService serviceImplementation="com.intellij.openapi.fileEditor.impl.EditorEmptyTextPainter"/>
    <applicationService serviceImplementation="com.intellij.openapi.fileEditor.impl.FileOffsetsManager"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.EditorCopyPasteHelper"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorCopyPasteHelperImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.actionSystem.ex.QuickListsManager"/>
    <actionConfigurationCustomizer implementation="com.intellij.openapi.actionSystem.ex.QuickListsManager$QuickListActionCustomizer"/>

    <applicationService serviceImplementation="com.intellij.diagnostic.ErrorReportConfigurable"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.impl.http.RemoteFileManager"
                        serviceImplementation="com.intellij.openapi.vfs.impl.http.RemoteFileManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.newvfs.RefreshQueue"
                        serviceImplementation="com.intellij.openapi.vfs.newvfs.RefreshQueueImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.ui.DialogWrapperPeerFactory"
                        serviceImplementation="com.intellij.openapi.ui.impl.DialogWrapperPeerFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ui.content.ContentFactory"
                        serviceImplementation="com.intellij.ui.content.ContentFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ui.TreeUIHelper"
                        serviceImplementation="com.intellij.ui.TreeUIHelperImpl"/>
    <applicationService serviceInterface="com.intellij.ui.ExpandableItemsHandlerFactory"
                        serviceImplementation="com.intellij.ui.ExpandTipHandlerFactoryImpl"/>
    <applicationService
        serviceInterface="com.intellij.openapi.ui.messages.MessagesService"
        serviceImplementation="com.intellij.ui.messages.MessagesServiceImpl"/>


    <applicationService serviceInterface="com.intellij.openapi.diff.DiffRequestFactory"
                        serviceImplementation="com.intellij.openapi.diff.impl.mergeTool.DiffRequestFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.diff.DiffManager"
                        serviceImplementation="com.intellij.openapi.diff.impl.external.DiffManagerImpl"/>
    <applicationService serviceInterface="com.intellij.diff.DiffManager"
                        serviceImplementation="com.intellij.diff.DiffManagerImpl"/>
    <applicationService serviceInterface="com.intellij.diff.DiffContentFactory"
                        serviceImplementation="com.intellij.diff.DiffContentFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.diff.DiffRequestFactory"
                        serviceImplementation="com.intellij.diff.DiffRequestFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.diff.comparison.ComparisonManager"
                        serviceImplementation="com.intellij.diff.comparison.ComparisonManagerImpl"/>
    <applicationService serviceImplementation="com.intellij.diff.impl.DiffSettingsHolder"/>
    <applicationService serviceImplementation="com.intellij.diff.tools.util.base.TextDiffSettingsHolder"/>
    <applicationService serviceImplementation="com.intellij.diff.tools.external.ExternalDiffSettings"/>
    <applicationService serviceImplementation="com.intellij.diff.vcs.DiffVcsFacade"/>
    <applicationService serviceImplementation="com.intellij.diff.DiffApplicationSettings"/>
    <applicationConfigurable groupId="tools" id="diff.base"
                             bundle="messages.DiffBundle"
                             key="configurable.DiffSettingsConfigurable.display.name"
                             instance="com.intellij.diff.settings.DiffSettingsConfigurable">
      <configurable id="diff.external"
                    bundle="messages.DiffBundle"
                    key="configurable.ExternalDiffSettingsConfigurable.display.name"
                    instance="com.intellij.diff.settings.ExternalDiffSettingsConfigurable"/>
    </applicationConfigurable>
    <applicationConfigurable groupId="appearance" groupWeight="-10"
                             id="preferences.pathVariables"
                             key="title.path.variables"
                             bundle="messages.ApplicationBundle"
                             instance="com.intellij.application.options.pathMacros.PathMacroConfigurable"/>

    <colorAndFontPanelFactory implementation="com.intellij.openapi.diff.impl.settings.DiffColorsPageFactory"/>
    <colorAndFontDescriptorProvider implementation="com.intellij.openapi.diff.impl.settings.DiffColorsPageFactory"/>
    <getDataRule key="diff_navigatable_array" implementationClass="com.intellij.diff.actions.impl.DiffNavigatableArrayRule"/>

    <daemon.highlightInfoFilter implementation="com.intellij.codeInsight.daemon.OutsidersPsiFileSupport$HighlightFilter"/>
    <daemon.intentionActionFilter implementation="com.intellij.codeInsight.daemon.OutsidersPsiFileSupport$IntentionFilter"/>
    <defaultHighlightingSettingProvider id="GeneratedSourcesHighlightingSettingProvider"
                                        implementation="com.intellij.codeInsight.daemon.OutsidersPsiFileSupport$HighlightingSettingProvider"/>

    <fileEditorProvider implementation="com.intellij.diff.editor.DiffEditorProvider"/>

    <fileEditorProvider implementation="com.intellij.diff.editor.GraphViewEditorProvider"/>

    <editorTabColorProvider implementation="com.intellij.diff.editor.VcsEditorTabColorProvider" order="first"/>

    <fileType name="GraphView" implementationClass="com.intellij.diff.editor.GraphViewFileType" fieldName="INSTANCE" extensions="GraphView" />
    <fileIconProvider implementation="com.intellij.diff.editor.GraphViewFileIconProvider"/>

    <fileIconProvider implementation="com.intellij.diff.editor.DiffFileIconProvider"/>

    <applicationService serviceInterface="com.intellij.ui.SystemNotifications"
                        serviceImplementation="com.intellij.ui.SystemNotificationsImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.KeymapGroupFactory"
                        serviceImplementation="com.intellij.openapi.keymap.impl.KeymapGroupFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.impl.ActionShortcutRestrictions"
                        serviceImplementation="com.intellij.openapi.keymap.impl.ActionShortcutRestrictionsImpl"/>
    <applicationService serviceInterface="com.intellij.ide.dnd.DnDManager"
                        serviceImplementation="com.intellij.ide.dnd.DnDManagerImpl"
                        headlessImplementation="com.intellij.ide.dnd.HeadlessDnDManager"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.encoding.EncodingManager"
                        serviceImplementation="com.intellij.openapi.vfs.encoding.EncodingManagerImpl"/>
    <applicationService serviceInterface="com.intellij.ui.errorView.ErrorViewFactory"
                        serviceImplementation="com.intellij.ui.errorView.impl.ErrorViewFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileChooser.FileSystemTreeFactory"
                        serviceImplementation="com.intellij.openapi.fileChooser.ex.FileSystemTreeFactoryImpl"/>
    <applicationService serviceImplementation="com.intellij.ide.plugins.PluginManagerUISettings"/>
    <applicationService serviceInterface="com.intellij.codeInsight.hint.HintManager"
                        serviceImplementation="com.intellij.codeInsight.hint.HintManagerImpl"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.hint.TooltipController"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.actionSystem.EditorActionManager"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorActionManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.actionSystem.TypedAction"
                        serviceImplementation="com.intellij.openapi.editor.impl.TypedActionImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.actionSystem.LatencyRecorder"
                        serviceImplementation="com.intellij.internal.performance.LatencyRecorderImpl"/>
    <applicationService serviceImplementation="com.intellij.util.text.DateTimeFormatManager"/>

    <applicationService serviceImplementation="com.intellij.openapi.updateSettings.impl.UpdateSettings"/>
    <applicationService serviceImplementation="com.intellij.openapi.updateSettings.UpdateStrategyCustomization"/>
    <applicationService serviceInterface="com.intellij.ide.externalComponents.ExternalComponentManager"
                        serviceImplementation="com.intellij.ide.externalComponents.ExternalComponentManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.application.IdeUrlTrackingParametersProvider"/>

    <applicationService serviceInterface="com.intellij.featureStatistics.FeatureUsageTracker"
                        serviceImplementation="com.intellij.featureStatistics.FeatureUsageTrackerImpl"/>
    <applicationService serviceInterface="com.intellij.reporting.FreezeLogger"
                        serviceImplementation="com.intellij.reporting.FreezeLoggerImpl"/>
    <applicationService serviceInterface="com.intellij.featureStatistics.ProductivityFeaturesRegistry"
                        serviceImplementation="com.intellij.featureStatistics.ProductivityFeaturesRegistryImpl"/>
    <applicationService serviceImplementation="com.intellij.internal.psiView.PsiViewerSettings"/>

    <applicationService serviceInterface="com.intellij.util.graph.GraphAlgorithms"
                        serviceImplementation="com.intellij.util.graph.impl.GraphAlgorithmsImpl"/>

    <applicationService serviceInterface="com.intellij.concurrency.AsyncFutureFactory"
                        serviceImplementation="com.intellij.concurrency.AsyncFutureFactoryImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.keymap.impl.DefaultKeymap"/>

    <applicationService serviceInterface="com.intellij.ide.passwordSafe.PasswordSafe"
                        serviceImplementation="com.intellij.ide.passwordSafe.impl.PasswordSafeImpl"
                        testServiceImplementation="com.intellij.ide.passwordSafe.impl.BasePasswordSafe"/>

    <applicationConfigurable parentId="preferences.general" instance="com.intellij.credentialStore.PasswordSafeConfigurable"
                             bundle="messages.CredentialStoreBundle"
                             key="password.safe.configurable"
                             id="application.passwordSafe"/>
    <applicationService serviceImplementation="com.intellij.execution.process.ColoredOutputTypeRegistry"/>
    <applicationService serviceInterface="com.intellij.execution.process.OSProcessManager"
                        serviceImplementation="com.intellij.execution.process.impl.OSProcessManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.options.SchemeManagerFactory"
                        serviceImplementation="com.intellij.configurationStore.schemeManager.SchemeManagerFactoryBase$ApplicationSchemeManagerFactory"/>
    <projectService serviceInterface="com.intellij.openapi.options.SchemeManagerFactory"
                    serviceImplementation="com.intellij.configurationStore.schemeManager.SchemeManagerFactoryBase$ProjectSchemeManagerFactory"/>

    <applicationService serviceImplementation="com.intellij.openapi.editor.EditorActivityManager" />

    <applicationService serviceInterface="com.intellij.openapi.editor.colors.TextAttributesKey$TextAttributeKeyDefaultsProvider"
                        serviceImplementation="com.intellij.openapi.editor.colors.impl.TextAttributeKeyDefaultsProviderImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.colors.EditorColorsManager"
                        serviceImplementation="com.intellij.openapi.editor.colors.impl.EditorColorsManagerImpl" preload="notHeadless"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.colors.EditorColorPaletteFactory"
                        serviceImplementation="com.intellij.openapi.options.colors.EditorColorPaletteFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.FileAppearanceService"
                        serviceImplementation="com.intellij.openapi.roots.ui.FileAppearanceServiceImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.SdkAppearanceService"
                        serviceImplementation="com.intellij.openapi.roots.ui.SdkAppearanceServiceImpl"/>

    <projectService serviceImplementation="com.intellij.internal.statistic.service.fus.collectors.LegacyFUSProjectUsageTrigger"/>
    <applicationService serviceInterface="com.intellij.ide.actions.ActionsCollector"
        serviceImplementation="com.intellij.internal.statistic.collectors.fus.actions.persistence.ActionsCollectorImpl"/>
    <applicationService serviceImplementation="com.intellij.internal.statistic.collectors.fus.actions.persistence.MainMenuCollector"/>
    <applicationService serviceImplementation="com.intellij.internal.statistic.collectors.fus.actions.persistence.ToolWindowCollector"/>
    <applicationService serviceInterface="com.intellij.internal.statistic.eventLog.FeatureUsageUiEvents"
                        serviceImplementation="com.intellij.internal.statistic.collectors.fus.ui.FeatureUsageUiEventsImpl"/>
    <applicationService serviceInterface="com.intellij.ide.plugins.PluginInfoProvider"
                        serviceImplementation="com.intellij.ide.plugins.PluginInfoProviderImpl"/>
    <applicationService serviceInterface="com.intellij.ide.ConsentOptionsProvider"
                        serviceImplementation="com.intellij.ide.gdpr.ConsentOptionsProviderImpl"/>
    <applicationService serviceInterface="com.intellij.ide.StatisticsNotificationManager"
                        serviceImplementation="com.intellij.internal.statistic.notification.StatisticsNotificationManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.util.DimensionService"/>
    <applicationService serviceInterface="com.intellij.openapi.util.WindowStateService"
                        serviceImplementation="com.intellij.openapi.util.WindowStateApplicationService"/>
    <projectService serviceInterface="com.intellij.openapi.util.WindowStateService"
                    serviceImplementation="com.intellij.openapi.util.WindowStateProjectService"/>

    <applicationService serviceInterface="com.intellij.ide.script.IdeScriptEngineManager"
                        serviceImplementation="com.intellij.ide.script.IdeScriptEngineManagerImpl"/>
    <statistics.counterUsagesCollector groupId="ide.script.engine" version="2"/>

    <applicationService serviceInterface="com.intellij.ide.UiActivityMonitor" serviceImplementation="com.intellij.ide.UiActivityMonitorImpl"/>

    <applicationService serviceImplementation="com.intellij.diagnostic.WindowsDefenderChecker"/>
    <applicationService serviceImplementation="com.intellij.diagnostic.GcPauseWatcher"/>

    <applicationService serviceInterface="com.intellij.execution.process.ProcessHandlerFactory"
                        serviceImplementation="com.intellij.execution.process.ProcessHandlerFactoryImpl" />
    <applicationService serviceImplementation="com.intellij.ide.CommandLineWaitingManager" />

    <applicationService serviceImplementation="com.intellij.diagnostic.HeapDumpAnalysisSupport"/>

    <applicationService serviceInterface="com.intellij.diagnostic.EventWatcher"
                        serviceImplementation="com.intellij.diagnostic.EventWatcherImpl"/>
    <toolWindow id="Events Watcher" anchor="bottom" canCloseContents="false" doNotActivateOnStart="true"
                factoryClass="com.intellij.diagnostic.ui.EventWatcherToolWindowFactory"/>

    <projectService serviceInterface="com.intellij.openapi.vfs.ReadonlyStatusHandler"
                    serviceImplementation="com.intellij.openapi.vcs.readOnlyHandler.ReadonlyStatusHandlerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.startup.StartupManager"
                    serviceImplementation="com.intellij.ide.startup.impl.StartupManagerImpl" preload="notHeadless"/>
    <projectService serviceImplementation="com.intellij.openapi.project.ProjectTypeService"/>
    <projectService serviceImplementation="com.intellij.openapi.ui.MasterDetailsStateService"/>
    <projectService serviceImplementation="com.intellij.ide.SelectInManager"/>

    <projectService serviceImplementation="com.intellij.ide.errorTreeView.impl.ErrorTreeViewConfiguration"/>

    <projectService serviceInterface="com.intellij.ui.docking.DockManager"
                    serviceImplementation="com.intellij.ui.docking.impl.DockManagerImpl"/>
    <projectService serviceInterface="com.intellij.ide.SelectInEditorManager"
                    serviceImplementation="com.intellij.ide.impl.SelectInEditorManagerImpl"/>
    <projectService serviceImplementation="com.intellij.ui.RecentsManager"/>
    <projectService serviceInterface="com.intellij.ui.content.MessageView"
                    serviceImplementation="com.intellij.ui.content.impl.MessageViewImpl"/>

    <projectService serviceImplementation="com.intellij.ui.tabs.PerTeamFileColorModelStorageManager"/>
    <projectService serviceImplementation="com.intellij.ui.tabs.PerUserFileColorModelStorageManager"/>

    <projectService serviceInterface="com.intellij.openapi.project.DumbService" serviceImplementation="com.intellij.openapi.project.DumbServiceImpl"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.impl.projectlevelman.AllVcsesI"
                    serviceImplementation="com.intellij.openapi.vcs.impl.projectlevelman.AllVcses"/>

    <projectService serviceImplementation="com.intellij.openapi.vcs.changes.RemoteRevisionsCache"/>

    <projectService serviceImplementation="com.intellij.execution.testframework.export.ExportTestResultsConfiguration"/>

    <projectService serviceImplementation="com.intellij.execution.testframework.autotest.AutoTestManager"/>

    <projectService serviceImplementation="com.intellij.execution.testframework.sm.TestHistoryConfiguration"/>
    <projectService serviceImplementation="com.intellij.openapi.vcs.VcsFileListenerContextHelper"/>

    <projectService serviceInterface="com.intellij.openapi.editor.LazyRangeMarkerFactory"
                    serviceImplementation="com.intellij.openapi.editor.impl.LazyRangeMarkerFactoryImpl"/>

    <projectService serviceInterface="com.intellij.openapi.project.ProjectReloadState"
                    serviceImplementation="com.intellij.openapi.project.impl.ProjectReloadStateImpl"/>

    <projectService serviceInterface="com.intellij.externalDependencies.ExternalDependenciesManager"
                    serviceImplementation="com.intellij.externalDependencies.impl.ExternalDependenciesManagerImpl"/>

    <projectService serviceImplementation="com.intellij.openapi.fileEditor.impl.EditorHistoryManager"/>

    <!-- IdeFocusManager doesn't return project level in headless or unit-test mode, instead, global implementation is used -->
    <projectService serviceInterface="com.intellij.openapi.wm.IdeFocusManager" serviceImplementation="com.intellij.openapi.wm.impl.IdeFocusManagerImpl" preload="notHeadless"/>

    <welcomeFrameProvider implementation="com.intellij.openapi.wm.impl.welcomeScreen.FlatWelcomeFrameProvider"/>
    <themeProvider id="JetBrainsHighContrastTheme" path="/themes/HighContrast.theme.json"/>
    <themeProvider id="JetBrainsLightTheme" path="/themes/Light.theme.json"/>

    <themeMetadataProvider path="/themes/metadata/IntelliJPlatform.themeMetadata.json"/>
    <themeMetadataProvider path="/themes/metadata/JDK.themeMetadata.json"/>

    <applicationService serviceImplementation="com.intellij.ui.IdeUICustomization"/>

    <!-- General -->
    <applicationConfigurable groupId="appearance" groupWeight="120" key="title.general" bundle="messages.IdeBundle" id="preferences.general"
                             instance="com.intellij.ide.GeneralSettingsConfigurable"/>

    <!-- Appearance -->
    <applicationConfigurable groupId="appearance" groupWeight="150" instance="com.intellij.ide.ui.AppearanceConfigurable"
                             id="preferences.lookFeel" key="title.appearance" bundle="messages.IdeBundle"/>

    <!-- Keymap -->
    <applicationConfigurable groupId="root" groupWeight="65" instance="com.intellij.openapi.keymap.impl.ui.KeymapPanel" id="preferences.keymap" key="keymap.display.name"
                             bundle="messages.KeyMapBundle"/>
    <applicationConfigurable groupId="appearance" instance="com.intellij.openapi.keymap.impl.ui.QuickListsPanel"
                             id="reference.idesettings.quicklists"
                             bundle="messages.IdeBundle"
                             key="configurable.quick.lists.name"
    />

    <!-- Customizations -->
    <applicationConfigurable groupId="appearance" groupWeight="130" instance="com.intellij.ide.ui.customization.CustomizationConfigurable" id="preferences.customizations"
                             key="title.customizations" bundle="messages.IdeBundle"/>

    <!-- Notifications -->
    <applicationConfigurable groupId="appearance"
                             groupWeight="110"
                             id="reference.settings.ide.settings.notifications"
                             provider="com.intellij.notification.impl.NotificationsConfigurableProvider"
                             bundle="messages.IdeBundle"
                             key="configurable.notifications.name"
    />
    <search.optionContributor implementation="com.intellij.notification.impl.NotificationSearchableOptionContributor"/>
    <applicationService serviceImplementation="com.intellij.notification.impl.NotificationCollector"/>

    <!-- Plugins -->
    <applicationConfigurable groupId="root" groupWeight="55" instance="com.intellij.ide.plugins.PluginManagerConfigurable" id="preferences.pluginManager"
                             treeRenderer="com.intellij.ide.plugins.PluginManagerConfigurableTreeRenderer"
                             bundle="messages.IdeBundle" key="title.plugins"/>
    <customFileDropHandler implementation="com.intellij.ide.plugins.PluginDropHandler"/>
    <applicationConfigurable parentId="preferences.general" instance="com.intellij.util.net.HttpProxyConfigurable" id="http.proxy"
                             bundle="messages.IdeBundle"
                             key="http.proxy.configurable"/>

    <applicationConfigurable parentId="preferences.general" instance="com.intellij.ide.gdpr.ConsentConfigurable" id="consents"
                             bundle="messages.IdeBundle"
                             key="consent.configurable"/>

    <applicationConfigurable parentId="preferences.general" instance="com.intellij.ide.ui.text.DateTimeFormatConfigurable" id="ide.date.format"
                             bundle="messages.IdeBundle"
                             key="date.time.format.configurable"/>

    <applicationConfigurable groupId="tools"
                             bundle="messages.UIBundle"
                             key="configurable.CertificateConfigurable.display.name"
                             id="http.certificates" instance="com.intellij.util.net.ssl.CertificateConfigurable"/>

    <fileType name="ARCHIVE" implementationClass="com.intellij.ide.highlighter.ArchiveFileType" fieldName="INSTANCE"
              extensions="zip;jar;war;ear;swc;ane;egg;apk"/>
    <fileType name="PLAIN_TEXT" implementationClass="com.intellij.openapi.fileTypes.PlainTextFileType" fieldName="INSTANCE" language="TEXT"
              extensions="txt;bat;cmd;policy;log;cgi;jad;jam;htaccess;opts;csv"/>
    <fileType name="Native" implementationClass="com.intellij.openapi.fileTypes.NativeFileType" fieldName="INSTANCE"
              extensions="doc;docx;xls;xlsx;ppt;pptx;mdb;vsd;pdf;hlp;chm;odt"/>
    <fileType name="UNKNOWN" implementationClass="com.intellij.openapi.fileTypes.UnknownFileType" fieldName="INSTANCE"
              extensions="lib;dll;a;so;dylib"/>

    <fileType name="IDEA_WORKSPACE" implementationClass="com.intellij.ide.highlighter.WorkspaceFileType"  fieldName="INSTANCE" extensions="iws"/>
    <fileType name="IDEA_MODULE" implementationClass="com.intellij.ide.highlighter.ModuleFileType" fieldName="INSTANCE" extensions="iml"/>
    <fileType name="IDEA_PROJECT" implementationClass="com.intellij.ide.highlighter.ProjectFileType" fieldName="INSTANCE" extensions="ipr"/>
    <postStartupActivity implementation="com.intellij.openapi.fileTypes.impl.ApproveRemovedMappingsActivity"/>
    <applicationService serviceInterface="com.intellij.openapi.options.colors.ColorSettingsPages"
                        serviceImplementation="com.intellij.openapi.options.colors.pages.ColorSettingsPagesImpl"/>

    <postStartupActivity implementation="com.intellij.externalDependencies.impl.CheckRequiredPluginsActivity"/>
    <projectConfigurable groupId="build" provider="com.intellij.externalDependencies.impl.ExternalDependenciesConfigurableProvider"
                         id="preferences.externalDependencies"
                         bundle="messages.IdeBundle"
                         key="configurable.ExternalDependenciesConfigurable.display.name"/>

    <applicationConfigurable parentId="preferences.general" instance="com.intellij.openapi.updateSettings.impl.UpdateSettingsConfigurable" id="preferences.updates"
                             key="updates.settings.title" bundle="messages.IdeBundle"/>

    <applicationService serviceInterface="com.intellij.psi.search.scope.packageSet.PackageSetFactory"
                        serviceImplementation="com.intellij.psi.search.scope.packageSet.PackageSetFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.ui.ColorChooserService"
                        serviceImplementation="com.intellij.ui.ColorChooserServiceImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.actionSystem.AbbreviationManager"
                        serviceImplementation="com.intellij.openapi.actionSystem.impl.AbbreviationManagerImpl"/>

    <applicationService serviceInterface="com.intellij.ui.tabs.impl.tabsLayout.TabsLayoutSettingsManager"
                        serviceImplementation="com.intellij.ui.tabs.layout.TabsLayoutSettingsManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.editor.ex.EditorSettingsExternalizable"/>
    <applicationService serviceImplementation="com.intellij.openapi.editor.ex.EditorSettingsExternalizable$OsSpecificState"/>
    <applicationConfigurable
        groupId="editor"
        groupWeight="188"
        bundle="messages.IdeBundle"
        key="configurable.font.name"
        instance="com.intellij.application.options.editor.fonts.AppEditorFontConfigurable"
    />

    <applicationService serviceImplementation="com.intellij.codeInsight.hints.settings.ParameterNameHintsSettings"/>
    <applicationService serviceImplementation="com.intellij.openapi.keymap.KeyboardSettingsExternalizable"/>
    <applicationService serviceImplementation="com.intellij.openapi.editor.SpellCheckingEditorCustomizationProvider"/>

    <scopeParserExtension implementation="com.intellij.psi.search.scope.packageSet.FilePackageSetParserExtension"/>
    <applicationService serviceInterface="com.intellij.openapi.ui.popup.StackingPopupDispatcher" serviceImplementation="com.intellij.ui.popup.StackingPopupDispatcherImpl"/>

    <applicationService serviceInterface="com.intellij.ide.RemoteDesktopService"
                        serviceImplementation="com.intellij.ide.RemoteDesktopDetector"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.EditorFactory"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.notification.NotificationsManager"
                        serviceImplementation="com.intellij.notification.impl.NotificationsManagerImpl"/>
    <applicationService serviceInterface="com.intellij.notification.NotificationsConfiguration"
                        serviceImplementation="com.intellij.notification.impl.NotificationsConfigurationImpl"/>

    <applicationService serviceInterface="com.intellij.ide.SaveAndSyncHandler" preload="notHeadless"
                        serviceImplementation="com.intellij.configurationStore.SaveAndSyncHandlerImpl"
                        headlessImplementation="com.intellij.configurationStore.HeadlessSaveAndSyncHandler"/>

    <projectService serviceInterface="com.intellij.openapi.vfs.encoding.EncodingProjectManager"
                    serviceImplementation="com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl"/>
    <postStartupActivity implementation="com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl$EncodingProjectManagerStartUpActivity"/>

    <projectService serviceInterface="com.intellij.execution.RunManager" serviceImplementation="com.intellij.execution.impl.RunManagerImpl"/>
    <projectService serviceImplementation="com.intellij.execution.impl.IprRunManagerImpl"/>
    <projectServiceContainerInitializedListener implementation="com.intellij.execution.impl.ProjectRunConfigurationInitializer" order="last"/>
    <filePropertyPusher implementation="com.intellij.execution.impl.RunConfigurationInArbitraryFileScanner"/>
    <vfs.asyncListener implementation="com.intellij.execution.impl.RCInArbitraryFileListener"/>
    <editorNotificationProvider implementation="com.intellij.execution.impl.RunConfigEditorNotificationProvider"/>

    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.http.HttpFileEditorProvider"/>
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.hint.EscapeHandler" id="hide-hints"/>

    <editorActionHandler action="EditorDelete" implementationClass="com.intellij.openapi.editor.actions.DeleteSelectionHandler"
                         id="delete.for.selection"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.openapi.editor.actions.DeleteSelectionHandler"
                         id="backspace.for.selection" order="after backspace.lookup"/>
    <editorActionHandler action="EditorDelete" implementationClass="com.intellij.openapi.editor.actions.DeleteInColumnModeHandler"
                         id="delete.in.column.mode"/>

    <editorFloatingToolbarProvider implementation="com.intellij.openapi.editor.toolbar.floating.DefaultFloatingToolbarProvider"/>

    <projectConfigurable groupId="language" groupWeight="110" instance="com.intellij.javaee.ExternalResourceConfigurable" key="display.name.edit.external.resource"
                         bundle="messages.XmlBundle" id="preferences.externalResources">
      <configurable instance="com.intellij.javaee.DefaultSchemasConfigurable"
                    bundle="messages.XmlBundle"
                    key="configurable.DefaultSchemasConfigurable.display.name"
                    id="xml.defaultSchemas"/>

      <configurable instance="com.intellij.javaee.XMLCatalogConfigurable"
                    bundle="messages.XmlBundle"
                    key="configurable.XMLCatalogConfigurable.display.name"
                    id="xml.catalog"/>
    </projectConfigurable>

    <bundledKeymap file="$default.xml"/>
    <bundledKeymap file="Mac OS X 10.5+.xml"/>
    <bundledKeymap file="Mac OS X.xml"/>
    <bundledKeymap file="Default for XWin.xml"/>
    <bundledKeymap file="Default for GNOME.xml"/>
    <bundledKeymap file="Default for KDE.xml"/>
    <bundledKeymap file="Emacs.xml"/>
    <bundledKeymap file="Sublime Text.xml"/>
    <bundledKeymap file="Sublime Text (Mac OS X).xml"/>

    <keymapExtension implementation="com.intellij.ide.actions.ToolWindowKeymapExtension"/>

    <config.inlaySettingsProvider implementation="com.intellij.codeInsight.hints.settings.providers.ParameterInlaySettingsProvider"/>
    <config.inlaySettingsProvider implementation="com.intellij.codeInsight.hints.settings.providers.NewInlaySettingsProvider"/>

    <statistics.validation.customWhiteListRule implementation="com.intellij.configurationStore.statistic.eventLog.SettingsComponentNameValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.FacetTypeUsageCollector$FacetTypeUtilValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.execution.dashboard.RunDashboardUsagesCollector$RunConfigurationTypeValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.featureStatistics.FeatureUsageTrackerImpl$ProductivityUtilValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.RegistryApplicationUsagesCollector$RegistryUtilValidator" />
    <statistics.validation.customWhiteListRule implementation="com.intellij.internal.statistic.collectors.fus.PluginInfoWhiteListRule"/>
    <statistics.validation.customWhiteListRule implementation="com.intellij.openapi.updateSettings.impl.UpdateDialogURLWhiteListRule"/>
    <statistics.validation.customWhiteListRule implementation="com.intellij.ide.TipsOfTheDayUsagesCollector$TipInfoWhiteListRule"/>

    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.fileTypes.ProjectStructureUsageCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.FacetTypeUsageCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.plugins.PluginsUsagesCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.ui.EditorColorSchemesUsagesCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.ui.FontSizeInfoUsageCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.os.LinuxWindowManagerUsageCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.os.SystemRuntimeCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.ui.UiInfoUsageCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.UpdateManagerUsagesCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.diff.statistics.DiffUsagesCollector"/>
    <applicationInitializedListener implementation="com.intellij.openapi.application.ImportOldConfigsUsagesCollector$Trigger"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.RegistryApplicationUsagesCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.internal.statistic.collectors.fus.project.IndexableFilesCollector"/>

    <statistics.counterUsagesCollector implementationClass="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsageCounterCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.featureStatistics.fusCollectors.LifecycleUsageTriggerCollector"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.internal.statistic.collectors.fus.actions.persistence.ActionsEventLogGroup"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.internal.statistic.collectors.fus.ui.persistence.ToolbarClicksCollector"/>
    <statistics.counterUsagesCollector groupId="vcs.diff.trigger" version="1"/>
    <statistics.counterUsagesCollector groupId="vcs.back.forward.trigger" version="1"/>
    <statistics.counterUsagesCollector groupId="ide.self.update" version="2"/>
    <statistics.counterUsagesCollector groupId="import.old.config" version="3"/>
    <statistics.counterUsagesCollector groupId="file.editor" version="2"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.ide.TipsOfTheDayUsagesCollector"/>
    <statistics.counterUsagesCollector groupId="gutter.icon.click" version="2"/>
    <statistics.counterUsagesCollector groupId="inspection.widget" version="1"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.accessibility.AccessibilityUsageTrackerCollector"/>

    <statistics.counterUsagesCollector groupId="new.project.wizard" version="1"/>

    <statistics.counterUsagesCollector groupId="vfs" version="2"/>
    <statistics.counterUsagesCollector groupId="indexing" version="2"/>
    <statistics.counterUsagesCollector groupId="vcs" version="4"/>
    <statistics.counterUsagesCollector groupId="build" version="2"/>
    <statistics.counterUsagesCollector groupId="project.import" version="2"/>
    <statistics.counterUsagesCollector groupId="ui.event" version="7"/>
    <statistics.counterUsagesCollector groupId="plugins.advertiser" version="1"/>
    <statistics.counterUsagesCollector groupId="plugins.dynamic" version="1"/>
    <statistics.counterUsagesCollector groupId="editor.notification.panel" version="1"/>
    <statistics.counterUsagesCollector groupId="customize.wizard" version="1"/>

    <statistics.counterUsagesCollector groupId="ide.update.dialog" version="1"/>

    <statistics.counterUsagesCollector groupId="light.edit" version="1"/>

    <statistics.projectUsagesCollector implementation="com.intellij.openapi.vcs.statistics.VcsOptionsUsagesCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.openapi.vcs.statistics.VcsUsagesCollector"/>

    <statistics.collectorExtension implementation="com.intellij.ide.actions.ToolwindowFusEventFields"/>

    <applicationInitializedListener implementation="com.intellij.openapi.application.Preloader"/>
    <applicationInitializedListener implementation="com.intellij.ide.customize.CustomizeIDEWizardCollectorActivity"/>

    <statistics.applicationUsagesCollector implementation="com.intellij.featureStatistics.fusCollectors.EAPUsageCollector"/>
    <statistic.eventLog.eventLoggerProvider implementation="com.intellij.internal.statistic.eventLog.fus.FeatureUsageEventLoggerProvider"/>
    <statistic.eventLog.fusStateEventTracker implementation="com.intellij.internal.statistic.eventLog.fus.SystemStateMonitor"/>
    <statistic.eventLog.fusStateEventTracker implementation="com.intellij.configurationStore.statistic.eventLog.FeatureUsageSettingsEventScheduler"/>

    <applicationService serviceImplementation="com.intellij.internal.statistic.local.ActionsLocalSummary" />

    <vfs.local.pluggableFileWatcher implementation="com.intellij.openapi.vfs.impl.local.NativeFileWatcherImpl" />

    <virtualFileSystem key="dummy" implementationClass="com.intellij.openapi.vfs.ex.dummy.DummyFileSystem"/>
    <virtualFileSystem key="http" implementationClass="com.intellij.openapi.vfs.impl.http.HttpFileSystemImpl"/>
    <virtualFileSystem key="https" implementationClass="com.intellij.openapi.vfs.impl.http.HttpsFileSystem"/>

    <toolWindow id="Event Log" anchor="bottom" secondary="true"
                icon="AllIcons.Toolwindows.NoEvents"
                factoryClass="com.intellij.notification.EventLogToolWindowFactory"/>

    <projectService serviceImplementation="com.intellij.openapi.wm.impl.ProjectFrameBounds"/>

    <applicationService serviceInterface="com.intellij.ide.TypePresentationService"
                        serviceImplementation="com.intellij.ide.TypePresentationServiceImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.application.AsyncExecutionService"
                        serviceImplementation="com.intellij.openapi.application.impl.AsyncExecutionServiceImpl"/>

    <preloadingActivity implementation="com.intellij.ide.ui.OptionsTopHitProvider$Activity"/>
    <postStartupActivity implementation="com.intellij.ide.ui.OptionsTopHitProvider$Activity"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.OptionsTopHitProvider$ProjectLevelProvidersAdapter"/>
    <applicationService serviceImplementation="com.intellij.ide.ui.TopHitCache"/>
    <projectService serviceImplementation="com.intellij.ide.ui.ProjectTopHitCache"/>

    <startupActivity implementation="com.intellij.openapi.fileEditor.impl.OpenFilesActivity"/>
    <startupActivity implementation="com.intellij.openapi.wm.impl.ToolWindowManagerImpl$InitToolWindowsActivity"/>

    <postStartupActivity implementation="com.intellij.ide.util.TipsOrderUtil$RecommendationsStartupActivity"/>
    <postStartupActivity id="TipOfTheDayActivity" implementation="com.intellij.ide.TipOfTheDayStartupActivity"/>
    <postStartupActivity implementation="com.intellij.ide.actions.PowerSaveModeNotifier"/>
    <postStartupActivity implementation="com.intellij.xml.breadcrumbs.BreadcrumbsInitializingActivity"/>

    <applicationConfigurable parentId="preferences.editor" id="editor.breadcrumbs"
                             key="configurable.breadcrumbs" bundle="messages.ApplicationBundle"
                             instance="com.intellij.xml.breadcrumbs.BreadcrumbsConfigurable"/>

    <fileBreadcrumbsCollector implementation="com.intellij.xml.breadcrumbs.PsiFileBreadcrumbsCollector" order="last"/>

    <postStartupActivity implementation="com.intellij.openapi.fileEditor.impl.EditorHistoryManager$EditorHistoryManagerStartUpActivity"/>

    <backgroundPostStartupActivity implementation="com.intellij.diagnostic.WindowsDefenderCheckerActivity" os="windows"/>

    <preloadingActivity implementation="com.intellij.openapi.actionSystem.impl.ActionPreloader"/>
    <actionConfigurationCustomizer implementation="com.intellij.execution.ExecutorRegistryImpl$ExecutorRegistryActionConfigurationTuner"/>

    <writingAccessProvider implementation="com.intellij.openapi.fileEditor.impl.NonProjectFileWritingAccessProvider" order="first"/>

    <patch.extension implementation="com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP"/>
    <patch.extension implementation="com.intellij.openapi.diff.impl.patch.CharsetEP"/>

    <iconLayerProvider implementation="com.intellij.ide.LockedIconLayerProvider"/>

    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.text.LargeFileEditorProvider"/>
    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.HTMLEditorProvider"/>
    <editorNotificationProvider implementation="com.intellij.openapi.fileEditor.impl.text.LargeFileNotificationProvider"/>
    <fileDocumentSynchronizationVetoer implementation="com.intellij.openapi.fileEditor.impl.LargeFileSavingVetoer"/>

    <editorNotificationProvider implementation="com.intellij.openapi.editor.impl.BidiContentNotificationProvider"/>
    <editorNotificationProvider implementation="com.intellij.openapi.editor.impl.ForcedSoftWrapsNotificationProvider"/>
    <editorNotificationProvider implementation="com.intellij.ide.FileChangedNotificationProvider"/>
    <editorNotificationProvider implementation="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider"/>
    <editorNotificationProvider implementation="com.intellij.ide.CommandLineWaitingManager$MyNotification"/>

    <getDataRule key="context.ProjectFileDirectory" implementationClass="com.intellij.ide.impl.dataRules.ProjectFileDirectoryRule"/>

    <localInspection shortName="InconsistentLineSeparators" bundle="messages.InspectionsBundle" key="inconsistent.line.separators"
                     groupBundle="messages.InspectionsBundle" groupKey="inspection.general.tools.group.name" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.openapi.fileEditor.impl.InconsistentLineSeparatorsInspection"/>
    <search.topHitProvider implementation="com.intellij.platform.DefaultPlatformTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.UISimpleSettingsProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.AppearanceOptionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.SystemOptionsTopHitProvider"/>
    <search.projectOptionsTopHitProvider implementation="com.intellij.ui.tabs.FileColorsOptionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.EditorOptionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.EditorOptionsTopHitProvider$Ex"/>
    <search.projectOptionsTopHitProvider implementation="com.intellij.ide.ui.InspectionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.RegistryOptionsTopHitProvider"/>
    <search.topHitProvider implementation="com.intellij.ide.ui.PluginOptionsTopHitProvider"/>
    <projectService serviceImplementation="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.UnknownFeaturesCollector"/>
    <backgroundPostStartupActivity implementation="com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginsAdvertiserStartupActivity"/>
    <actionPromoter implementation="com.intellij.ui.ToolbarDecoratorActionPromoter"/>

    <ui.suitableFontProvider implementation="com.intellij.ui.SuitableFontProviderImpl"/>

    <jbProtocolCommand implementation="com.intellij.openapi.project.impl.JBProtocolOpenProjectCommand"/>
    <jbProtocolCommand implementation="com.intellij.openapi.application.JBProtocolShutdownCommand"/>
    <jbProtocolCommand implementation="com.intellij.navigation.JBProtocolNavigateCommand"/>

    <intentionAction>
      <className>com.intellij.openapi.editor.actions.FlipCommaIntention</className>
      <category>Other</category>
    </intentionAction>

    <daemon.intentionActionFilter implementation="com.intellij.psi.IntentionFilterOwnerActionFilter"/>

    <projectService serviceImplementation="com.intellij.execution.startup.ProjectStartupLocalConfiguration"/>
    <projectService serviceImplementation="com.intellij.execution.startup.ProjectStartupSharedConfiguration"/>
    <projectConfigurable groupId="tools" provider="com.intellij.execution.startup.ProjectStartupConfigurable$ProjectStartupConfigurableProvider"
                         bundle="messages.ExecutionBundle"
                         key="configurable.ProjectStartupConfigurable.display.name"
                         id="preferences.startup.tasks" nonDefaultProject="true"/>
    <postStartupActivity implementation="com.intellij.execution.startup.ProjectStartupRunner"/>

    <applicationService serviceInterface="com.intellij.remote.ext.CredentialsManager"
                        serviceImplementation="com.intellij.remote.ext.CredentialsManagerImpl"/>

    <projectService serviceImplementation="com.intellij.remote.RemoteMappingsManager"/>

    <applicationService serviceImplementation="com.intellij.openapi.options.newEditor.SettingsDialogFactory"/>

    <additionalTextAttributes scheme="Default" file="idea/FindViewColorsScheme.xml"/>
    <additionalTextAttributes scheme="Darcula" file="idea/FindViewColorsScheme.xml"/>

    <credentialStore implementation="com.intellij.credentialStore.MacOsCredentialStoreFactory" os="mac"/>
    <credentialStore implementation="com.intellij.credentialStore.LinuxCredentialStoreFactory" os="linux"/>
    <registryKey key="credentialStore.linux.prefer.kwallet" defaultValue="false" restartRequired="true"
                 description="Use KWallet if KWallet &amp; SecretService are both available."/>

    <applicationService
      serviceInterface="com.intellij.openapi.projectRoots.JdkFinder"
      serviceImplementation="com.intellij.openapi.projectRoots.impl.JdkFinderImpl"/>

    <sdkType implementation="com.intellij.openapi.projectRoots.SimpleJavaSdkType"/>

    <registryKey key="java.detector.enabled" defaultValue="true" description="Toggles JDK detection features" />
    <registryKey key="java.detector.include.embedded" defaultValue="false" description="Include embedded JetBrains Runtime" />

    <sdkDownload implementation="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkDownloader" />
    <applicationService serviceImplementation="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkListDownloader"/>
    <applicationService serviceImplementation="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkInstaller"/>
    <unknownSdkResolver implementation="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkAuto"/>
    <projectService serviceImplementation="com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkAutoHintService"
                    configurationSchemaKey="java"
    />
    <registryKey key="jdk.auto.setup" defaultValue="true" description="Attempt to use local or downloadable SDK to configure project"/>
    <registryKey key="jdk.downloader" defaultValue="true" description="Suggest JDK downloads"/>
    <registryKey key="jdk.downloader.url" description="Custom URL to download the list of available JDKs"/>

    <runDashboardCustomizer implementation="com.intellij.execution.testframework.sm.runner.SMTRunnerRunDashboardCustomizer"
                            order="first" id="smtRunnerCustomizer"/>

    <!--context providers-->
    <tasks.contextProvider implementation="com.intellij.tasks.context.OpenEditorsContextProvider"/>
    <tasks.contextProvider implementation="com.intellij.tasks.context.ProjectViewContextProvider"/>
    <tasks.contextProvider implementation="com.intellij.tasks.context.RunConfigurationsContextProvider"/>
    <tasks.contextProvider implementation="com.intellij.tasks.context.XDebuggerBreakpointsContextProvider"/>
    <tasks.contextProvider implementation="com.intellij.tasks.context.XDebuggerWatchesProvider"/>
    <tasks.contextProvider implementation="com.intellij.tasks.context.BookmarkContextProvider"/>

    <actionPromoter implementation="com.intellij.execution.testframework.TestTreeViewActionsPromoter"/>
    <smartSelectProvider implementation="com.intellij.ui.tree.TreeSmartSelectProvider"/>

    <!--troubleshooting-->
    <generalTroubleInfoCollector implementation="com.intellij.ide.troubleshooting.AboutTroubleInfoCollector"/>
    <generalTroubleInfoCollector implementation="com.intellij.ide.troubleshooting.SystemTroubleInfoCollector"/>
    <generalTroubleInfoCollector implementation="com.intellij.ide.troubleshooting.DisplayTroubleInfoCollector"/>
    <generalTroubleInfoCollector implementation="com.intellij.ide.troubleshooting.PluginTroubleInfoCollector"/>

    <!-- experiments -->
    <experimentalFeature id="inline.browse.button" percentOfUsers="100">
      <description>Inlines browse button inside TextFieldWithBrowseButton component</description>
    </experimentalFeature>

    <experimentalFeature id="wsl.legacy.distribution" percentOfUsers="0">
      <description>Makes legacy Ubuntu distribution (bash.exe) available</description>
    </experimentalFeature>

    <experimentalFeature id="linux.native.menu" percentOfUsers="100" requireRestart="true">
      <description>Integration with global menu in Linux</description>
    </experimentalFeature>

    <experimentalFeature id="recent.and.edited.files.together" percentOfUsers="100">
      <description>Second Cmd/Ctrl+E switches to Recently Edited Files</description>
    </experimentalFeature>

    <experimentalFeature id="show.create.new.element.in.popup" percentOfUsers="100">
      <description>Use popups (instead of dialogs) for creating new items (files, classes, etc.)</description>
    </experimentalFeature>

    <experimentalFeature id="whats.new.notification" percentOfUsers="0">
      <description>Defines whether to show "What's new" notification after IDE update or not.</description>
    </experimentalFeature>

    <rawEditorTypedHandler implementationClass="com.intellij.openapi.editor.impl.EditorFactoryImpl$MyRawTypedHandler"/>

    <postStartupActivity implementation="com.intellij.diagnostic.AnalyzePendingSnapshotActivity"/>

    <obsoleteStorage file="menu.item.text.update.xml">
      <components>
        <component>ActionMenuItemUpdateCollector</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="statistics.toolbar.clicks.xml">
      <components>
        <component>ToolbarClicksCollector</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="statistics.main_menu.xml">
      <components>
        <component>MainMenuCollector</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="statistics.shortcuts.xml">
      <components>
        <component>ShortcutsCollector</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="statistics.application.usages.xml">
      <components>
        <component>StatisticsApplicationUsages</component>
        <component>UsageTrigger</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="usage.statistics.xml">
      <components>
        <component>StatisticsApplicationUsages</component>
        <component>UsageTrigger</component>
        <component>ToolWindowCollector</component>
        <component>ToolWindowsCollector</component>
        <component>ShortcutsCollector</component>
        <component>ToolbarClicksCollector</component>
        <component>MainMenuCollector</component>
        <component>IntentionsCollector</component>
        <component>ActionsCollector</component>
        <component>FUSApplicationUsageTrigger</component>
      </components>
    </obsoleteStorage>

    <obsoleteStorage file="usage.statistics.xml" isProjectLevel="true">
      <components>
        <component>FUSProjectUsageTrigger</component>
      </components>
    </obsoleteStorage>
    <obsoleteStorage file="$WORKSPACE_FILE$" isProjectLevel="true">
      <components>
        <component>FUSProjectUsageTrigger</component>
      </components>
    </obsoleteStorage>

    <backgroundPostStartupActivity implementation="com.intellij.diagnostic.MemorySizeConfigurator"/>
    <applicationService serviceImplementation="com.intellij.diagnostic.MemorySizeConfiguratorService"/>

    <httpRequestHandler implementation="com.intellij.ide.FavIconHttpRequestHandler" order="last"/>
    <registryKey key="show.last.visited.timestamps" defaultValue="true"
                 description="Shows recent files or code locations last visited timestamps"/>

    <editorFactoryDocumentListener implementation="com.intellij.openapi.command.impl.DocumentUndoProvider"/>

    <editorFactoryListener implementation="com.intellij.openapi.editor.impl.EditorLastActionTracker$MyEditorFactoryListener"/>
    <editorFactoryMouseListener implementation="com.intellij.openapi.editor.impl.EditorLastActionTracker$MyEditorMouseListener"/>

    <editorFactoryMouseListener implementation="com.intellij.openapi.editor.EditorMouseHoverPopupManager$MyEditorMouseEventListener"/>
    <editorFactoryMouseMotionListener implementation="com.intellij.openapi.editor.EditorMouseHoverPopupManager$MyEditorMouseMotionEventListener"/>

    <editorFactoryListener implementation="com.intellij.codeInsight.preview.ImageOrColorPreviewManager"/>

    <preloadingActivity implementation="com.intellij.ide.SystemHealthMonitor"/>

    <experimentalFeature id="copy.reference.popup" percentOfUsers="100"/>

    <registryKey key="run.anything.context.recent.directory.number" defaultValue="5"
                 description="Defines storing Run Anything context combobox directories number."/>

    <applicationService serviceInterface="com.intellij.configurationStore.StoreReloadManager"
                        serviceImplementation="com.intellij.configurationStore.StoreReloadManagerImpl"/>
    <virtualFileManagerListener implementation="com.intellij.configurationStore.StoreReloadManagerImpl$MyVirtualFileManagerListener"/>

    <applicationService serviceInterface="com.intellij.ide.lightEdit.LightEditService"
                        serviceImplementation="com.intellij.ide.lightEdit.LightEditServiceImpl"/>
    <fileDocumentSynchronizationVetoer implementation="com.intellij.ide.lightEdit.LightEditDocumentSaveVetoer"/>
    <fileTypeOverrider implementation="com.intellij.ide.lightEdit.LightEditFileTypeOverrider"/>
    <intentionAction>
      <className>com.intellij.ide.lightEdit.intentions.openInProject.LightEditOpenInProjectIntention</className>
      <category>LightEdit mode</category>
    </intentionAction>

    <postStartupActivity implementation="com.intellij.ide.cds.CDSStartupActivity" order="last"/>
    <statistics.counterUsagesCollector groupId="intellij.cds" version="2"/>

    <statistics.counterUsagesCollector groupId="startup" version="1"/>
    <backgroundPostStartupActivity implementation="com.intellij.diagnostic.startUpPerformanceReporter.StartupMetricCollector"/>

    <postStartupActivity implementation="com.intellij.ide.startup.CheckFsSanityAndProjectRootPostStartUpActivity" order="last"/>

    <actionConfigurationCustomizer implementation="com.intellij.openapi.wm.impl.GlobalMenuLinux$MyActionTuner"/>

    <titleInfoProvider implementation="com.intellij.openapi.wm.impl.simpleTitleParts.ProductTitleInfoProvider"/>
    <titleInfoProvider implementation="com.intellij.openapi.wm.impl.simpleTitleParts.ProductVersionTitleInfoProvider"/>
    <titleInfoProvider implementation="com.intellij.openapi.wm.impl.simpleTitleParts.SuperUserSuffixTitleInfoProvider"/>

    <vfs.asyncListener implementation="com.intellij.ide.plugins.DynamicPluginVfsListener"/>

    <intentionMenuContributor implementation="com.intellij.refactoring.suggested.SuggestedRefactoringIntentionContributor"/>
    <gutterMarkPreprocessor implementation="com.intellij.refactoring.suggested.SuggestedRefactoringGutterMarkPreprocessor"/>
    <statistics.counterUsagesCollector groupId="suggested.refactorings" version="1"/>

    <applicationInitializedListener implementation="com.intellij.ide.customize.WelcomeWizardHelper"/>
    <applicationInitializedListener implementation="com.intellij.openapi.application.impl.JitSuppressor"/>

    <applicationService serviceImplementation="com.intellij.internal.DebugAttachDetector" headlessImplementation="" preload="true"/>
    <applicationService serviceInterface="org.jetbrains.ide.BuiltInServerManager" serviceImplementation="org.jetbrains.ide.BuiltInServerManagerImpl" preload="true"/>

    <projectService serviceInterface="com.intellij.ui.EditorNotifications" serviceImplementation="com.intellij.ui.EditorNotificationsImpl" preload="true"/>

    <applicationService serviceInterface="com.intellij.ide.FrameStateManager" serviceImplementation="com.intellij.ide.FrameStateManagerImpl" preload="await"/>

    <applicationService serviceImplementation="com.intellij.openapi.updateSettings.impl.UpdateCheckerComponent" headlessImplementation=""/>
    <applicationInitializedListener implementation="com.intellij.openapi.updateSettings.impl.UpdateCheckerComponent$MyApplicationInitializedListener"/>
    <postStartupActivity implementation="com.intellij.openapi.updateSettings.impl.UpdateCheckerComponent$MyActivity"/>

    <postStartupActivity implementation="com.intellij.ide.bookmarks.BookmarkManager$MyStartupActivity"/>
    <notificationWhitelist groupIds="Error Report;Heap Dump Analysis;External Executable Critical Failures;Required Plugins;System Health;
    Collect Zipped Logs;Dump Threads Group;Dynamic plugin installation;Plugins updates;Plugins AutoSwitch;Cached value profiling;Keymap;
    IDE and Plugin Updates;Plugins Suggestion;File Watcher Messages;Built-in Server;Password Safe;Structural Search;Branch Context group;
    Automatic Module Unloading;Error Copying File;Project Startup Tasks Messages;scrolling-capabilities-debug;editor-rendering-benchmark;
    Test Runner;Merge;Diff;System shortcuts conflicts;Settings Error;Plugin Error;Memory;Low Memory;Failed to remove BOM;
    File type recognized;Project Settings;Tutorials;System Messages"/>

    <projectService serviceImplementation="com.intellij.openapi.fileTypes.impl.FileTypeHintPersistentComponent" configurationSchemaKey="fileTypes"/>
    <fileTypeOverrider implementation="com.intellij.openapi.fileTypes.impl.FileTypeHintService"/>
  </extensions>
  <applicationListeners>
    <listener class="com.intellij.ide.plugins.DynamicPluginsFrameStateListener" topic="com.intellij.ide.FrameStateListener"/>

    <listener class="com.intellij.notification.impl.widget.NotificationWidgetListener" activeInHeadlessMode="false" activeInTestMode="false"
              topic="com.intellij.ide.ui.UISettingsListener"/>
    <listener class="com.intellij.notification.impl.widget.NotificationWidgetListener" activeInHeadlessMode="false" activeInTestMode="false"
              topic="com.intellij.notification.EventLogListener"/>
    <listener class="com.intellij.notification.impl.widget.NotificationWidgetListener" activeInHeadlessMode="false" activeInTestMode="false"
              topic="com.intellij.openapi.wm.ex.ToolWindowManagerListener"/>
    <listener class="com.intellij.codeInsight.hints.InlayUnloadingListener" activeInHeadlessMode="false" activeInTestMode="false"
              topic="com.intellij.ide.plugins.DynamicPluginListener"/>
    <listener class="com.intellij.openapi.fileTypes.StdFileTypes$StdFileTypesUpdater" activeInHeadlessMode="true" activeInTestMode="false"
              topic="com.intellij.openapi.fileTypes.FileTypeListener" />
  </applicationListeners>
</idea-plugin>
