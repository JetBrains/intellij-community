<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.w3.org/2001/XInclude
   http://www.w3.org/2001/XInclude.xsd">

  <!--suppress PluginXmlDynamicPlugin -->
  <application-components>
    <component>
      <interface-class>com.intellij.openapi.command.undo.UndoManager</interface-class>
      <implementation-class>com.intellij.openapi.command.impl.UndoManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.ui.LafManager</interface-class>
      <implementation-class>com.intellij.ide.ui.laf.LafManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.ide.ui.laf.HeadlessLafManagerImpl</headless-implementation-class>
    </component>
  </application-components>

  <!--suppress PluginXmlDynamicPlugin -->
  <project-components>
    <component>
      <interface-class>com.intellij.openapi.command.undo.UndoManager</interface-class>
      <implementation-class>com.intellij.openapi.command.impl.UndoManagerImpl</implementation-class>
    </component>
  </project-components>

  <xi:include href="/componentSets/UICore.xml"/>
  <xi:include href="/componentSets/Editor.xml"/>
  <xi:include href="/componentSets/Lang.xml"/>

  <applicationListeners>
    <listener class="com.intellij.util.gist.GistManagerImpl$MyBulkFileListener" topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
    <listener class="com.intellij.ide.RecentProjectsManagerBase$MyAppLifecycleListener" topic="com.intellij.ide.AppLifecycleListener" activeInHeadlessMode="false"/>
    <listener class="com.intellij.ide.RecentProjectsManagerBase$MyProjectListener" topic="com.intellij.openapi.project.ProjectManagerListener" activeInHeadlessMode="false"/>
    <listener class="com.intellij.openapi.wm.impl.WindowDressing" topic="com.intellij.openapi.project.ProjectManagerListener" activeInHeadlessMode="false"/>
    <listener class="com.intellij.openapi.wm.impl.WindowDressing" topic="com.intellij.ide.lightEdit.LightEditServiceListener" activeInHeadlessMode="false"/>
    <listener class="com.intellij.openapi.editor.impl.EditorLastActionTracker$MyAnActionListener" topic="com.intellij.openapi.actionSystem.ex.AnActionListener"/>
    <listener class="com.intellij.diagnostic.IdeaFreezeReporter" topic="com.intellij.diagnostic.IdePerformanceListener" activeInTestMode="false" activeInHeadlessMode="false"/>

    <listener class="com.intellij.notification.impl.NotificationsManagerImpl$MyNotificationListener" topic="com.intellij.notification.Notifications"/>
    <listener class="com.intellij.notification.EventLog$MyNotificationListener" topic="com.intellij.notification.Notifications"/>
    <listener class="com.intellij.notification.impl.NotificationsConfigurationImpl$MyNotificationListener" topic="com.intellij.notification.Notifications"/>

    <listener class="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsageCounterCollector$MyAnActionListener" topic="com.intellij.openapi.actionSystem.ex.AnActionListener"/>
    <listener class="com.intellij.internal.statistic.EventLogApplicationLifecycleListener" topic="com.intellij.ide.AppLifecycleListener" activeInHeadlessMode="true" activeInTestMode="false"/>
    <listener class="com.intellij.internal.statistic.local.ActionsLocalSummaryListener" topic="com.intellij.openapi.actionSystem.ex.AnActionListener"/>

    <listener class="com.intellij.ide.GeneratedSourceFileChangeTrackerImpl$MyProjectManagerListener" topic="com.intellij.openapi.project.ProjectManagerListener"/>

    <listener class="com.intellij.notification.impl.MacEventReader" topic="com.intellij.notification.Notifications" os="mac" activeInHeadlessMode="false"/>
    <listener class="com.intellij.notification.impl.NotificationsBeeper" topic="com.intellij.notification.Notifications" activeInHeadlessMode="false"/>

    <listener class="com.intellij.internal.performance.LatenciometerListener" topic="com.intellij.openapi.editor.actionSystem.LatencyListener"/>

    <listener class="com.intellij.openapi.vfs.newvfs.impl.CachedFileType$PsiListener" topic="com.intellij.psi.util.PsiModificationTracker$Listener"/>
    <listener class="com.intellij.openapi.vfs.newvfs.impl.CachedFileType$ReparseListener" topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
  </applicationListeners>
  <projectListeners>
    <listener class="com.intellij.execution.lineMarker.RunnableStatusListener" topic="com.intellij.codeInsight.daemon.DaemonCodeAnalyzer$DaemonListener"/>
    <listener class="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsageCounterCollector$MyFileEditorManagerListener" topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"/>

    <!-- another one for project level -->
    <listener class="com.intellij.notification.impl.MacEventReader" topic="com.intellij.notification.Notifications" os="mac" activeInHeadlessMode="false"/>
    <listener class="com.intellij.notification.impl.NotificationsBeeper" topic="com.intellij.notification.Notifications" activeInHeadlessMode="false"/>
    <listener class="com.intellij.codeInsight.actions.ReaderModeFileEditorListener"
              topic="com.intellij.openapi.fileEditor.FileEditorManagerListener" activeInHeadlessMode="false"/>
    <listener class="com.intellij.codeInsight.actions.ReaderModeSettingsListener"
              topic="com.intellij.codeInsight.actions.ReaderModeListener" activeInHeadlessMode="false"/>
  </projectListeners>
</idea-plugin>
