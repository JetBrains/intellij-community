f:com.intellij.analysis.AnalysisBundle
- sf:BUNDLE:java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
c:com.intellij.analysis.AnalysisScope
- sf:CUSTOM:I
- sf:DIRECTORY:I
- sf:FILE:I
- sf:INVALID:I
- sf:MODULE:I
- sf:MODULES:I
- psf:PACKAGE:I
- sf:PROJECT:I
- sf:UNCOMMITTED_FILES:I
- sf:VIRTUAL_FILES:I
- p:myElement:com.intellij.psi.PsiElement
- p:myModule:com.intellij.openapi.module.Module
- p:myModules:java.util.List
- pf:myScope:com.intellij.psi.search.SearchScope
- p:myType:I
- <init>(com.intellij.openapi.module.Module):V
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,java.util.Collection):V
- <init>(com.intellij.psi.PsiDirectory):V
- <init>(com.intellij.psi.PsiDirectory,com.intellij.openapi.module.Module):V
- <init>(com.intellij.psi.PsiFile):V
- <init>(com.intellij.psi.PsiFile,com.intellij.openapi.module.Module):V
- <init>(com.intellij.psi.search.SearchScope,com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.module.Module[]):V
- p:accept(com.intellij.psi.PsiDirectory,com.intellij.util.Processor):Z
- accept(com.intellij.psi.PsiElementVisitor):V
- accept(com.intellij.util.Processor):Z
- acceptIdempotentVisitor(com.intellij.psi.PsiElementVisitor):V
- ps:collectScopes(com.intellij.openapi.project.Project,java.util.Set):com.intellij.analysis.AnalysisScope
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- contains(com.intellij.psi.PsiElement):Z
- containsModule(com.intellij.openapi.module.Module):Z
- containsSources(Z):Z
- p:createFileSearcher(java.util.Collection):com.intellij.util.Processor
- p:createFilesSet():com.intellij.openapi.vfs.VirtualFileSet
- ps:getAllInterestingModules(com.intellij.openapi.roots.ProjectFileIndex,com.intellij.openapi.vfs.VirtualFile):java.util.HashSet
- getDisplayName():java.lang.String
- getElement():com.intellij.psi.PsiElement
- getFileCount():I
- getFiles():java.util.Set
- getModule():com.intellij.openapi.module.Module
- getModules():java.util.List
- getNarrowedComplementaryScope(com.intellij.openapi.project.Project):com.intellij.analysis.AnalysisScope
- getProject():com.intellij.openapi.project.Project
- getScopeType():I
- getShortenName():java.lang.String
- invalidate():V
- isAnalyzeInjectedCode():Z
- isIncludeTestSource():Z
- isTotalScope():Z
- isValid():Z
- setAnalyzeInjectedCode(Z):V
- setFilter(com.intellij.psi.search.GlobalSearchScope):V
- setIncludeTestSource(Z):V
- setSearchInLibraries(Z):V
- toSearchScope():com.intellij.psi.search.SearchScope
@:com.intellij.analysis.AnalysisScope$Type
- java.lang.annotation.Annotation
f:com.intellij.analysis.AnalysisScopeBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
c:com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:CONSIDERATION_ATTRIBUTES:com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:Companion:com.intellij.codeHighlighting.HighlightDisplayLevel$Companion
- sf:DO_NOT_SHOW:com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:ERROR:com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:GENERIC_SERVER_ERROR_OR_WARNING:com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:INFO:com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:NON_SWITCHABLE_ERROR:com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:NON_SWITCHABLE_WARNING:com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:WARNING:com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:WEAK_WARNING:com.intellij.codeHighlighting.HighlightDisplayLevel
- <init>(com.intellij.lang.annotation.HighlightSeverity):V
- <init>(com.intellij.lang.annotation.HighlightSeverity,javax.swing.Icon):V
- sf:createIconByMask(java.awt.Color):javax.swing.Icon
- sf:find(com.intellij.lang.annotation.HighlightSeverity):com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:find(java.lang.String):com.intellij.codeHighlighting.HighlightDisplayLevel
- sf:getEmptyIconDim():I
- f:getIcon():javax.swing.Icon
- f:getName():java.lang.String
- f:getOutlineIcon():javax.swing.Icon
- f:getSeverity():com.intellij.lang.annotation.HighlightSeverity
- isNonSwitchable():Z
- sf:registerSeverity(com.intellij.lang.annotation.HighlightSeverity,com.intellij.openapi.editor.colors.TextAttributesKey,javax.swing.Icon):V
f:com.intellij.codeHighlighting.HighlightDisplayLevel$Companion
- f:createIconByMask(java.awt.Color):javax.swing.Icon
- f:find(com.intellij.lang.annotation.HighlightSeverity):com.intellij.codeHighlighting.HighlightDisplayLevel
- f:find(java.lang.String):com.intellij.codeHighlighting.HighlightDisplayLevel
- f:getEmptyIconDim():I
- f:registerSeverity(com.intellij.lang.annotation.HighlightSeverity,com.intellij.openapi.editor.colors.TextAttributesKey,javax.swing.Icon):V
com.intellij.codeHighlighting.HighlightDisplayLevelColoredIcon
- javax.swing.Icon
- a:getColor():java.awt.Color
- a:getIcon():javax.swing.Icon
c:com.intellij.codeInsight.CharTailType
- com.intellij.codeInsight.TailType
- <init>(C):V
- <init>(C,Z):V
- equals(java.lang.Object):Z
- hashCode():I
- isApplicable(com.intellij.codeInsight.completion.InsertionContext):Z
- processTail(com.intellij.openapi.editor.Editor,I):I
a:com.intellij.codeInsight.TailType
- sf:CASE_COLON:com.intellij.codeInsight.TailType
- sf:DOT:com.intellij.codeInsight.TailType
- sf:NONE:com.intellij.codeInsight.TailType
- sf:SEMICOLON:com.intellij.codeInsight.TailType
- sf:SPACE:com.intellij.codeInsight.TailType
- <init>():V
- s:createSimpleTailType(C):com.intellij.codeInsight.TailType
- ps:getFileType(com.intellij.openapi.editor.Editor):com.intellij.openapi.fileTypes.FileType
- s:insertChar(com.intellij.openapi.editor.Editor,I,C):I
- s:insertChar(com.intellij.openapi.editor.Editor,I,C,Z):I
- isApplicable(com.intellij.codeInsight.completion.InsertionContext):Z
- ps:moveCaret(com.intellij.openapi.editor.Editor,I,I):I
- a:processTail(com.intellij.openapi.editor.Editor,I):I
f:com.intellij.codeInsight.TailTypes
- s:caseColonType():com.intellij.codeInsight.TailType
- s:charType(C):com.intellij.codeInsight.TailType
- s:charType(C,Z):com.intellij.codeInsight.TailType
- s:conditionalExpressionColonType():com.intellij.codeInsight.TailType
- s:dotType():com.intellij.codeInsight.TailType
- s:equalsType():com.intellij.codeInsight.TailType
- s:humbleSpaceBeforeWordType():com.intellij.codeInsight.TailType
- s:insertSpaceType():com.intellij.codeInsight.TailType
- s:noneType():com.intellij.codeInsight.TailType
- s:semicolonType():com.intellij.codeInsight.TailType
- s:spaceType():com.intellij.codeInsight.TailType
- s:unknownType():com.intellij.codeInsight.TailType
f:com.intellij.codeInsight.codeFragment.CannotCreateCodeFragmentException
- java.lang.RuntimeException
- <init>(java.lang.String):V
c:com.intellij.codeInsight.codeFragment.CodeFragment
- <init>(java.util.Set,java.util.Set,Z):V
- getInputVariables():java.util.Collection
- getOutputVariables():java.util.Collection
- isReturnInstructionInside():Z
f:com.intellij.codeInsight.codeFragment.CodeFragmentUtil
- <init>():V
- s:elementFit(com.intellij.psi.PsiElement,I,I):Z
- s:getPosition(com.intellij.psi.PsiElement,I,I):com.intellij.codeInsight.codeFragment.Position
e:com.intellij.codeInsight.codeFragment.Position
- java.lang.Enum
- sf:AFTER:com.intellij.codeInsight.codeFragment.Position
- sf:BEFORE:com.intellij.codeInsight.codeFragment.Position
- sf:INSIDE:com.intellij.codeInsight.codeFragment.Position
- s:valueOf(java.lang.String):com.intellij.codeInsight.codeFragment.Position
- s:values():com.intellij.codeInsight.codeFragment.Position[]
f:com.intellij.codeInsight.completion.AutoCompletionContext
- <init>(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.lookup.LookupElement[],com.intellij.codeInsight.completion.OffsetMap,com.intellij.codeInsight.lookup.Lookup):V
- getItems():com.intellij.codeInsight.lookup.LookupElement[]
- getLookup():com.intellij.codeInsight.lookup.Lookup
- getOffsetMap():com.intellij.codeInsight.completion.OffsetMap
- getParameters():com.intellij.codeInsight.completion.CompletionParameters
c:com.intellij.codeInsight.completion.AutoCompletionDecision
- sf:CLOSE_LOOKUP:com.intellij.codeInsight.completion.AutoCompletionDecision
- sf:SHOW_LOOKUP:com.intellij.codeInsight.completion.AutoCompletionDecision
- s:insertItem(com.intellij.codeInsight.lookup.LookupElement):com.intellij.codeInsight.completion.AutoCompletionDecision
c:com.intellij.codeInsight.completion.BasicInsertHandler
- com.intellij.codeInsight.completion.InsertHandler
- <init>():V
- handleInsert(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement):V
com.intellij.codeInsight.completion.BatchConsumer
- com.intellij.util.Consumer
- endBatch():V
- startBatch():V
a:com.intellij.codeInsight.completion.CompletionConfidence
- <init>():V
- shouldSkipAutopopup(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,com.intellij.psi.PsiFile,I):com.intellij.util.ThreeState
- shouldSkipAutopopup(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile,I):com.intellij.util.ThreeState
f:com.intellij.codeInsight.completion.CompletionConfidenceEP
- com.intellij.lang.LanguageExtensionPoint
- <init>():V
- s:forLanguage(com.intellij.lang.Language):java.util.List
a:com.intellij.codeInsight.completion.CompletionContributor
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EP:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- advertise(com.intellij.codeInsight.completion.CompletionParameters):java.lang.String
- beforeCompletion(com.intellij.codeInsight.completion.CompletionInitializationContext):V
- duringCompletion(com.intellij.codeInsight.completion.CompletionInitializationContext):V
- f:extend(com.intellij.codeInsight.completion.CompletionType,com.intellij.patterns.ElementPattern,com.intellij.codeInsight.completion.CompletionProvider):V
- fillCompletionVariants(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionResultSet):V
- s:forLanguage(com.intellij.lang.Language):java.util.List
- s:forLanguageHonorDumbness(com.intellij.lang.Language,com.intellij.openapi.project.Project):java.util.List
- s:forParameters(com.intellij.codeInsight.completion.CompletionParameters):java.util.List
- handleAutoCompletionPossibility(com.intellij.codeInsight.completion.AutoCompletionContext):com.intellij.codeInsight.completion.AutoCompletionDecision
- handleEmptyLookup(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.openapi.editor.Editor):java.lang.String
- invokeAutoPopup(com.intellij.psi.PsiElement,C):Z
f:com.intellij.codeInsight.completion.CompletionContributorEP
- com.intellij.lang.LanguageExtensionPoint
- <init>():V
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.extensions.PluginDescriptor):V
c:com.intellij.codeInsight.completion.CompletionInitializationContext
- sf:DUMMY_IDENTIFIER:java.lang.String
- sf:DUMMY_IDENTIFIER_TRIMMED:java.lang.String
- sf:IDENTIFIER_END_OFFSET:com.intellij.codeInsight.completion.OffsetKey
- sf:SELECTION_END_OFFSET:com.intellij.codeInsight.completion.OffsetKey
- sf:START_OFFSET:com.intellij.codeInsight.completion.OffsetKey
- <init>(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.lang.Language,com.intellij.psi.PsiFile,com.intellij.codeInsight.completion.CompletionType,I):V
- s:calcDefaultIdentifierEnd(com.intellij.openapi.editor.Editor,I):I
- s:calcStartOffset(com.intellij.openapi.editor.Caret):I
- getCaret():com.intellij.openapi.editor.Caret
- getCompletionType():com.intellij.codeInsight.completion.CompletionType
- getDummyIdentifier():java.lang.String
- getEditor():com.intellij.openapi.editor.Editor
- getFile():com.intellij.psi.PsiFile
- getIdentifierEndOffset():I
- getInvocationCount():I
- getOffsetMap():com.intellij.codeInsight.completion.OffsetMap
- getPositionLanguage():com.intellij.lang.Language
- getProject():com.intellij.openapi.project.Project
- getReplacementOffset():I
- getSelectionEndOffset():I
- getStartOffset():I
- setDummyIdentifier(java.lang.String):V
- setReplacementOffset(I):V
f:com.intellij.codeInsight.completion.CompletionLocation
- com.intellij.openapi.util.UserDataHolder
- <init>(com.intellij.codeInsight.completion.CompletionParameters):V
- getCompletionParameters():com.intellij.codeInsight.completion.CompletionParameters
- getCompletionType():com.intellij.codeInsight.completion.CompletionType
- getProcessingContext():com.intellij.util.ProcessingContext
- getProject():com.intellij.openapi.project.Project
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
f:com.intellij.codeInsight.completion.CompletionParameters
- getCompletionType():com.intellij.codeInsight.completion.CompletionType
- getEditor():com.intellij.openapi.editor.Editor
- getInvocationCount():I
- getOffset():I
- getOriginalFile():com.intellij.psi.PsiFile
- getOriginalPosition():com.intellij.psi.PsiElement
- getPosition():com.intellij.psi.PsiElement
- getProcess():com.intellij.codeInsight.completion.CompletionProcess
- isAutoPopup():Z
- isCompleteOnlyNotImported():Z
- isExtendedCompletion():Z
- isTestingMode():Z
- setCompleteOnlyNotImported(Z):V
- setIsTestingMode(Z):V
- withInvocationCount(I):com.intellij.codeInsight.completion.CompletionParameters
- withPosition(com.intellij.psi.PsiElement,I):com.intellij.codeInsight.completion.CompletionParameters
- withType(com.intellij.codeInsight.completion.CompletionType):com.intellij.codeInsight.completion.CompletionParameters
a:com.intellij.codeInsight.completion.CompletionPreselectSkipper
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:skipElement(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.CompletionLocation):Z
com.intellij.codeInsight.completion.CompletionProcess
- a:isAutopopupCompletion():Z
a:com.intellij.codeInsight.completion.CompletionProvider
- p:<init>():V
- f:addCompletionVariants(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.util.ProcessingContext,com.intellij.codeInsight.completion.CompletionResultSet):V
- pa:addCompletions(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.util.ProcessingContext,com.intellij.codeInsight.completion.CompletionResultSet):V
f:com.intellij.codeInsight.completion.CompletionResult
- getLookupElement():com.intellij.codeInsight.lookup.LookupElement
- getPrefixMatcher():com.intellij.codeInsight.completion.PrefixMatcher
- getSorter():com.intellij.codeInsight.completion.CompletionSorter
- isStartMatch():Z
- withLookupElement(com.intellij.codeInsight.lookup.LookupElement):com.intellij.codeInsight.completion.CompletionResult
- s:wrap(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.PrefixMatcher,com.intellij.codeInsight.completion.CompletionSorter):com.intellij.codeInsight.completion.CompletionResult
a:com.intellij.codeInsight.completion.CompletionResultSet
- com.intellij.util.Consumer
- pf:contributor:com.intellij.codeInsight.completion.CompletionContributor
- pf:myCompletionService:com.intellij.codeInsight.completion.CompletionService
- p:<init>(com.intellij.codeInsight.completion.PrefixMatcher,java.util.function.Consumer,com.intellij.codeInsight.completion.CompletionContributor):V
- addAllElements(java.lang.Iterable):V
- a:addElement(com.intellij.codeInsight.lookup.LookupElement):V
- a:addLookupAdvertisement(java.lang.String):V
- a:caseInsensitive():com.intellij.codeInsight.completion.CompletionResultSet
- consume(com.intellij.codeInsight.lookup.LookupElement):V
- endBatch():V
- p:getConsumer():java.util.function.Consumer
- getPrefixMatcher():com.intellij.codeInsight.completion.PrefixMatcher
- isStopped():Z
- passResult(com.intellij.codeInsight.completion.CompletionResult):V
- restartCompletionOnAnyPrefixChange():V
- a:restartCompletionOnPrefixChange(com.intellij.patterns.ElementPattern):V
- restartCompletionOnPrefixChange(java.lang.String):V
- a:restartCompletionWhenNothingMatches():V
- runRemainingContributors(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.util.Consumer):V
- runRemainingContributors(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.util.Consumer,Z):V
- runRemainingContributors(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.util.Consumer,Z,com.intellij.codeInsight.completion.CompletionSorter):V
- runRemainingContributors(com.intellij.codeInsight.completion.CompletionParameters,Z):java.util.LinkedHashSet
- startBatch():V
- stopHere():V
- a:withPrefixMatcher(com.intellij.codeInsight.completion.PrefixMatcher):com.intellij.codeInsight.completion.CompletionResultSet
- a:withPrefixMatcher(java.lang.String):com.intellij.codeInsight.completion.CompletionResultSet
- a:withRelevanceSorter(com.intellij.codeInsight.completion.CompletionSorter):com.intellij.codeInsight.completion.CompletionResultSet
a:com.intellij.codeInsight.completion.CompletionService
- sf:RELEVANCE_KEY:com.intellij.openapi.util.Key
- sf:STATISTICS_KEY:com.intellij.openapi.util.Key
- <init>():V
- pa:createMatcher(java.lang.String,Z):com.intellij.codeInsight.completion.PrefixMatcher
- pa:createResultSet(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.util.Consumer,com.intellij.codeInsight.completion.CompletionContributor,com.intellij.codeInsight.completion.PrefixMatcher):com.intellij.codeInsight.completion.CompletionResultSet
- a:defaultSorter(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.PrefixMatcher):com.intellij.codeInsight.completion.CompletionSorter
- a:emptySorter():com.intellij.codeInsight.completion.CompletionSorter
- s:getCompletionService():com.intellij.codeInsight.completion.CompletionService
- a:getCurrentCompletion():com.intellij.codeInsight.completion.CompletionProcess
- p:getVariantsFromContributor(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionContributor,com.intellij.codeInsight.completion.CompletionResultSet):V
- p:getVariantsFromContributors(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionContributor,com.intellij.codeInsight.completion.PrefixMatcher,com.intellij.util.Consumer):V
- p:getVariantsFromContributors(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionContributor,com.intellij.codeInsight.completion.PrefixMatcher,com.intellij.util.Consumer,com.intellij.codeInsight.completion.CompletionSorter):V
- getVariantsFromContributors(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.CompletionContributor,com.intellij.util.Consumer):V
- performCompletion(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.util.Consumer):V
- a:setAdvertisementText(java.lang.String):V
- pa:suggestPrefix(com.intellij.codeInsight.completion.CompletionParameters):java.lang.String
a:com.intellij.codeInsight.completion.CompletionSorter
- <init>():V
- s:defaultSorter(com.intellij.codeInsight.completion.CompletionParameters,com.intellij.codeInsight.completion.PrefixMatcher):com.intellij.codeInsight.completion.CompletionSorter
- s:emptySorter():com.intellij.codeInsight.completion.CompletionSorter
- a:weigh(com.intellij.codeInsight.lookup.LookupElementWeigher):com.intellij.codeInsight.completion.CompletionSorter
- a:weighAfter(java.lang.String,com.intellij.codeInsight.lookup.LookupElementWeigher[]):com.intellij.codeInsight.completion.CompletionSorter
- a:weighBefore(java.lang.String,com.intellij.codeInsight.lookup.LookupElementWeigher[]):com.intellij.codeInsight.completion.CompletionSorter
a:com.intellij.codeInsight.completion.CompletionStatistician
- com.intellij.psi.statistics.Statistician
- psf:EMPTY_SERIALIZER:java.util.function.Function
- psf:NULL_SERIALIZER:java.util.function.Function
- <init>():V
- forLocation(com.intellij.codeInsight.completion.CompletionLocation):java.util.function.Function
- a:serialize(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.CompletionLocation):com.intellij.psi.statistics.StatisticsInfo
e:com.intellij.codeInsight.completion.CompletionType
- java.lang.Enum
- sf:BASIC:com.intellij.codeInsight.completion.CompletionType
- sf:CLASS_NAME:com.intellij.codeInsight.completion.CompletionType
- sf:SMART:com.intellij.codeInsight.completion.CompletionType
- s:valueOf(java.lang.String):com.intellij.codeInsight.completion.CompletionType
- s:values():com.intellij.codeInsight.completion.CompletionType[]
a:com.intellij.codeInsight.completion.CompletionWeigher
- com.intellij.psi.Weigher
- <init>():V
- a:weigh(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.CompletionLocation):java.lang.Comparable
com.intellij.codeInsight.completion.InsertHandler
- a:handleInsert(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement):V
c:com.intellij.codeInsight.completion.InsertionContext
- sf:TAIL_OFFSET:com.intellij.codeInsight.completion.OffsetKey
- <init>(com.intellij.codeInsight.completion.OffsetMap,C,com.intellij.codeInsight.lookup.LookupElement[],com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,Z):V
- commitDocument():V
- forkByOffsetMap():com.intellij.codeInsight.completion.InsertionContext
- getCompletionChar():C
- getDocument():com.intellij.openapi.editor.Document
- getEditor():com.intellij.openapi.editor.Editor
- getElements():com.intellij.codeInsight.lookup.LookupElement[]
- getFile():com.intellij.psi.PsiFile
- getLaterRunnable():java.lang.Runnable
- getOffset(com.intellij.codeInsight.completion.OffsetKey):I
- getOffsetMap():com.intellij.codeInsight.completion.OffsetMap
- getProject():com.intellij.openapi.project.Project
- getSelectionEndOffset():I
- getStartOffset():I
- getTailOffset():I
- setAddCompletionChar(Z):V
- setLaterRunnable(java.lang.Runnable):V
- setTailOffset(I):V
- shouldAddCompletionChar():Z
- s:shouldAddCompletionChar(C):Z
- trackOffset(I,Z):com.intellij.codeInsight.completion.OffsetKey
c:com.intellij.codeInsight.completion.InternalCompletionSettings
- <init>():V
- s:getInstance():com.intellij.codeInsight.completion.InternalCompletionSettings
- mayStartClassNameCompletion(com.intellij.codeInsight.completion.CompletionResultSet):Z
com.intellij.codeInsight.completion.LookupElementListPresenter
- a:getAdditionalPrefix():java.lang.String
- a:getCurrentItem():com.intellij.codeInsight.lookup.LookupElement
- a:getCurrentItemOrEmpty():com.intellij.codeInsight.lookup.LookupElement
- a:getLastVisibleIndex():I
- a:getLookupFocusDegree():com.intellij.codeInsight.lookup.LookupFocusDegree
- a:getSelectedIndex():I
- a:isSelectionTouched():Z
- a:isShown():Z
f:com.intellij.codeInsight.completion.OffsetKey
- s:create(java.lang.String):com.intellij.codeInsight.completion.OffsetKey
- s:create(java.lang.String,Z):com.intellij.codeInsight.completion.OffsetKey
- isMovableToRight():Z
f:com.intellij.codeInsight.completion.OffsetMap
- com.intellij.openapi.Disposable
- <init>(com.intellij.openapi.editor.Document):V
- addOffset(com.intellij.codeInsight.completion.OffsetKey,I):V
- containsOffset(com.intellij.codeInsight.completion.OffsetKey):Z
- dispose():V
- getAllOffsets():java.util.List
- getOffset(com.intellij.codeInsight.completion.OffsetKey):I
- removeOffset(com.intellij.codeInsight.completion.OffsetKey):V
- wasModified(com.intellij.codeInsight.completion.OffsetKey):Z
c:com.intellij.codeInsight.completion.PlainPrefixMatcher
- com.intellij.codeInsight.completion.PrefixMatcher
- <init>(java.lang.String):V
- <init>(java.lang.String,Z):V
- cloneWithPrefix(java.lang.String):com.intellij.codeInsight.completion.PrefixMatcher
- isStartMatch(java.lang.String):Z
- prefixMatches(java.lang.String):Z
a:com.intellij.codeInsight.completion.PrefixMatcher
- sf:ALWAYS_TRUE:com.intellij.codeInsight.completion.PrefixMatcher
- pf:myPrefix:java.lang.String
- p:<init>(java.lang.String):V
- a:cloneWithPrefix(java.lang.String):com.intellij.codeInsight.completion.PrefixMatcher
- f:getPrefix():java.lang.String
- isStartMatch(com.intellij.codeInsight.lookup.LookupElement):Z
- isStartMatch(java.lang.String):Z
- matchingDegree(java.lang.String):I
- prefixMatches(com.intellij.codeInsight.lookup.LookupElement):Z
- a:prefixMatches(java.lang.String):Z
- sortMatching(java.util.Collection):java.util.LinkedHashSet
f:com.intellij.codeInsight.completion.PrioritizedLookupElement
- com.intellij.codeInsight.lookup.LookupElementDecorator
- sf:CLASS_CONDITION_KEY:com.intellij.openapi.util.ClassConditionKey
- getExplicitProximity():I
- getGrouping():I
- getPriority():D
- s:withExplicitProximity(com.intellij.codeInsight.lookup.LookupElement,I):com.intellij.codeInsight.lookup.LookupElement
- s:withGrouping(com.intellij.codeInsight.lookup.LookupElement,I):com.intellij.codeInsight.lookup.LookupElement
- s:withPriority(com.intellij.codeInsight.lookup.LookupElement,D):com.intellij.codeInsight.lookup.LookupElement
a:com.intellij.codeInsight.completion.util.ParenthesesInsertHandler
- com.intellij.codeInsight.completion.InsertHandler
- sf:NO_PARAMETERS:com.intellij.codeInsight.completion.util.ParenthesesInsertHandler
- sf:WITH_PARAMETERS:com.intellij.codeInsight.completion.util.ParenthesesInsertHandler
- p:<init>():V
- p:<init>(Z,Z,Z):V
- p:<init>(Z,Z,Z,Z):V
- p:<init>(Z,Z,Z,Z,C,C):V
- p:findExistingLeftParenthesis(com.intellij.codeInsight.completion.InsertionContext):com.intellij.psi.PsiElement
- p:findNextToken(com.intellij.codeInsight.completion.InsertionContext):com.intellij.psi.PsiElement
- s:getInstance(Z):com.intellij.codeInsight.completion.util.ParenthesesInsertHandler
- s:getInstance(Z,Z,Z,Z,Z):com.intellij.codeInsight.completion.util.ParenthesesInsertHandler
- handleInsert(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement):V
- pa:placeCaretInsideParentheses(com.intellij.codeInsight.completion.InsertionContext,com.intellij.codeInsight.lookup.LookupElement):Z
com.intellij.codeInsight.daemon.ChangeLocalityDetector
- a:getChangeHighlightingDirtyScopeFor(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
a:com.intellij.codeInsight.daemon.DaemonCodeAnalyzer
- sf:DAEMON_EVENT_TOPIC:com.intellij.util.messages.Topic
- <init>():V
- a:autoImportReferenceAtCursor(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- a:disableUpdateByTimer(com.intellij.openapi.Disposable):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.DaemonCodeAnalyzer
- a:isAutohintsAvailable(com.intellij.psi.PsiFile):Z
- a:isHighlightingAvailable(com.intellij.psi.PsiFile):Z
- a:isImportHintsEnabled(com.intellij.psi.PsiFile):Z
- a:resetImportHintsEnabledForProject():V
- a:restart():V
- a:restart(com.intellij.psi.PsiFile):V
- a:setHighlightingEnabled(com.intellij.psi.PsiFile,Z):V
- a:setImportHintsEnabled(com.intellij.psi.PsiFile,Z):V
- a:setUpdateByTimerEnabled(Z):V
- a:settingsChanged():V
com.intellij.codeInsight.daemon.DaemonCodeAnalyzer$DaemonListener
- daemonCancelEventOccurred(java.lang.String):V
- daemonCanceled(java.lang.String,java.util.Collection):V
- daemonFinished():V
- daemonFinished(java.util.Collection):V
- daemonStarting(java.util.Collection):V
com.intellij.codeInsight.daemon.EmptyResolveMessageProvider
- a:getUnresolvedMessagePattern():java.lang.String
com.intellij.codeInsight.daemon.GroupNames
- sf:BUGS_GROUP_NAME:java.lang.String
- sf:COMPILER_ISSUES:java.lang.String
- sf:IMPORTS_GROUP_NAME:java.lang.String
- sf:INTERNATIONALIZATION_GROUP_NAME:java.lang.String
- sf:MODULARIZATION_GROUP_NAME:java.lang.String
- sf:PROPERTIES_GROUP_NAME:java.lang.String
- sf:STYLE_GROUP_NAME:java.lang.String
f:com.intellij.codeInsight.daemon.HighlightDisplayKey
- s:find(java.lang.String):com.intellij.codeInsight.daemon.HighlightDisplayKey
- s:findById(java.lang.String):com.intellij.codeInsight.daemon.HighlightDisplayKey
- s:findOrRegister(java.lang.String,java.lang.String):com.intellij.codeInsight.daemon.HighlightDisplayKey
- s:findOrRegister(java.lang.String,java.lang.String,java.lang.String):com.intellij.codeInsight.daemon.HighlightDisplayKey
- s:getAlternativeID(com.intellij.codeInsight.daemon.HighlightDisplayKey):java.lang.String
- s:getDisplayNameByKey(com.intellij.codeInsight.daemon.HighlightDisplayKey):java.lang.String
- getID():java.lang.String
- getShortName():java.lang.String
- s:register(java.lang.String,com.intellij.openapi.util.Computable,java.lang.String):com.intellij.codeInsight.daemon.HighlightDisplayKey
- s:register(java.lang.String,com.intellij.openapi.util.Computable,java.lang.String,java.lang.String):com.intellij.codeInsight.daemon.HighlightDisplayKey
- s:register(java.lang.String,java.lang.String,java.lang.String):com.intellij.codeInsight.daemon.HighlightDisplayKey
- s:unregister(java.lang.String):V
com.intellij.codeInsight.daemon.HighlightingPassesCache
- sf:Companion:com.intellij.codeInsight.daemon.HighlightingPassesCache$Companion
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.HighlightingPassesCache
- a:schedule(java.util.List,Z):V
- bs:schedule$default(com.intellij.codeInsight.daemon.HighlightingPassesCache,java.util.List,Z,I,java.lang.Object):V
f:com.intellij.codeInsight.daemon.HighlightingPassesCache$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInsight.daemon.HighlightingPassesCache
com.intellij.codeInsight.daemon.ImplicitUsageProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- isClassWithCustomizedInitialization(com.intellij.psi.PsiElement):Z
- a:isImplicitRead(com.intellij.psi.PsiElement):Z
- a:isImplicitUsage(com.intellij.psi.PsiElement):Z
- a:isImplicitWrite(com.intellij.psi.PsiElement):Z
- isImplicitlyNotNullInitialized(com.intellij.psi.PsiElement):Z
a:com.intellij.codeInsight.daemon.ProblemHighlightFilter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:shouldHighlight(com.intellij.psi.PsiFile):Z
- s:shouldHighlightFile(com.intellij.psi.PsiFile):Z
- s:shouldProcessFileInBatch(com.intellij.psi.PsiFile):Z
- shouldProcessInBatch(com.intellij.psi.PsiFile):Z
com.intellij.codeInsight.daemon.QuickFixActionRegistrar
- sf:IGNORE_ALL:com.intellij.codeInsight.daemon.QuickFixActionRegistrar
- a:register(com.intellij.codeInsight.intention.IntentionAction):V
- a:register(com.intellij.openapi.util.TextRange,com.intellij.codeInsight.intention.IntentionAction,com.intellij.codeInsight.daemon.HighlightDisplayKey):V
- unregister(com.intellij.openapi.util.Condition):V
com.intellij.codeInsight.daemon.UnusedImportProvider
- a:isUnusedImportEnabled(com.intellij.psi.PsiElement):Z
e:com.intellij.codeInsight.editorActions.SmartBackspaceMode
- java.lang.Enum
- sf:AUTOINDENT:com.intellij.codeInsight.editorActions.SmartBackspaceMode
- sf:INDENT:com.intellij.codeInsight.editorActions.SmartBackspaceMode
- sf:OFF:com.intellij.codeInsight.editorActions.SmartBackspaceMode
- s:valueOf(java.lang.String):com.intellij.codeInsight.editorActions.SmartBackspaceMode
- s:values():com.intellij.codeInsight.editorActions.SmartBackspaceMode[]
com.intellij.codeInsight.editorActions.TabOutScopesTracker
- s:getInstance():com.intellij.codeInsight.editorActions.TabOutScopesTracker
- a:getScopeEndingAt(com.intellij.openapi.editor.Editor,I):I
- a:hasScopeEndingAt(com.intellij.openapi.editor.Editor,I):Z
- registerEmptyScope(com.intellij.openapi.editor.Editor,I):V
- registerEmptyScope(com.intellij.openapi.editor.Editor,I,I):V
- registerEmptyScopeAtCaret(com.intellij.openapi.editor.Editor):V
- registerScopeRange(com.intellij.openapi.editor.Editor,I,I):V
- a:registerScopeRange(com.intellij.openapi.editor.Editor,I,I,I):V
- a:removeScopeEndingAt(com.intellij.openapi.editor.Editor,I):I
a:com.intellij.codeInsight.highlighting.HighlightErrorFilter
- sf:EP_NAME:com.intellij.openapi.extensions.ProjectExtensionPointName
- <init>():V
- a:shouldHighlightErrorElement(com.intellij.psi.PsiErrorElement):Z
com.intellij.codeInsight.hint.QuestionAction
- a:execute():Z
a:com.intellij.codeInsight.intention.AbstractEmptyIntentionAction
- com.intellij.codeInsight.intention.IntentionAction
- <init>():V
- f:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- f:startInWriteAction():Z
com.intellij.codeInsight.intention.AdvertisementAction
- com.intellij.codeInsight.intention.PriorityAction
- getPriority():com.intellij.codeInsight.intention.PriorityAction$Priority
com.intellij.codeInsight.intention.CommonIntentionAction
- sf:EMPTY_ARRAY:com.intellij.codeInsight.intention.CommonIntentionAction[]
- a:asIntention():com.intellij.codeInsight.intention.IntentionAction
- a:asModCommandAction():com.intellij.modcommand.ModCommandAction
- a:getFamilyName():java.lang.String
com.intellij.codeInsight.intention.CustomizableIntentionAction
- com.intellij.codeInsight.intention.IntentionAction
- getRangesToHighlight(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- getTooltipText():java.lang.String
- hasSeparatorAbove():Z
- isOverrideIntentionBulb():Z
- isSelectable():Z
- isShowIcon():Z
- isShowLightBulb():Z
- isShowSubmenu():Z
f:com.intellij.codeInsight.intention.CustomizableIntentionAction$RangeToHighlight
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.colors.TextAttributesKey):V
- s:from(com.intellij.psi.PsiElement,com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.codeInsight.intention.CustomizableIntentionAction$RangeToHighlight
- getContainingFile():com.intellij.psi.PsiFile
- getHighlightKey():com.intellij.openapi.editor.colors.TextAttributesKey
- getRangeInFile():com.intellij.openapi.util.TextRange
com.intellij.codeInsight.intention.CustomizableIntentionActionDelegate
- com.intellij.codeInsight.intention.CustomizableIntentionAction
- com.intellij.codeInsight.intention.IntentionActionDelegate
- getRangesToHighlight(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- getTooltipText():java.lang.String
- isSelectable():Z
- isShowIcon():Z
- isShowSubmenu():Z
com.intellij.codeInsight.intention.FileModifier
- com.intellij.openapi.application.WriteActionAware
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFileModifierForPreview(com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.FileModifier
@:com.intellij.codeInsight.intention.FileModifier$SafeFieldForPreview
- java.lang.annotation.Annotation
@:com.intellij.codeInsight.intention.FileModifier$SafeTypeForPreview
- java.lang.annotation.Annotation
com.intellij.codeInsight.intention.HighPriorityAction
- com.intellij.codeInsight.intention.PriorityAction
- getPriority():com.intellij.codeInsight.intention.PriorityAction$Priority
com.intellij.codeInsight.intention.IntentionAction
- com.intellij.codeInsight.intention.CommonIntentionAction
- com.intellij.codeInsight.intention.FileModifier
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EMPTY_ARRAY:com.intellij.codeInsight.intention.IntentionAction[]
- asIntention():com.intellij.codeInsight.intention.IntentionAction
- asModCommandAction():com.intellij.modcommand.ModCommandAction
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- a:getText():java.lang.String
- a:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- a:isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- a:startInWriteAction():Z
f:com.intellij.codeInsight.intention.IntentionActionBean
- com.intellij.openapi.extensions.CustomLoadingExtensionPointBean
- bundleName:java.lang.String
- category:java.lang.String
- categoryKey:java.lang.String
- className:java.lang.String
- descriptionDirectoryName:java.lang.String
- language:java.lang.String
- skipBeforeAfter:Z
- <init>():V
- getCategories():java.lang.String[]
- getDescriptionDirectoryName():java.lang.String
com.intellij.codeInsight.intention.IntentionActionDelegate
- com.intellij.openapi.diagnostic.ReportingClassSubstitutor
- com.intellij.openapi.project.PossiblyDumbAware
- a:getDelegate():com.intellij.codeInsight.intention.IntentionAction
- getImplementationClassName():java.lang.String
- getSubstitutedClass():java.lang.Class
- isDumbAware():Z
- s:unwrap(com.intellij.codeInsight.intention.IntentionAction):com.intellij.codeInsight.intention.IntentionAction
com.intellij.codeInsight.intention.IntentionActionProvider
- a:getIntentionAction():com.intellij.codeInsight.intention.IntentionActionWithOptions
com.intellij.codeInsight.intention.IntentionActionWithChoice
- a:getTitle():com.intellij.codeInsight.intention.IntentionAction
- a:getVariants():java.util.List
com.intellij.codeInsight.intention.IntentionActionWithOptions
- com.intellij.codeInsight.intention.IntentionAction
- getCombiningPolicy():com.intellij.codeInsight.intention.IntentionActionWithOptions$CombiningPolicy
- a:getOptions():java.util.List
e:com.intellij.codeInsight.intention.IntentionActionWithOptions$CombiningPolicy
- java.lang.Enum
- sf:InspectionOptionsOnly:com.intellij.codeInsight.intention.IntentionActionWithOptions$CombiningPolicy
- sf:IntentionOptionsOnly:com.intellij.codeInsight.intention.IntentionActionWithOptions$CombiningPolicy
- s:valueOf(java.lang.String):com.intellij.codeInsight.intention.IntentionActionWithOptions$CombiningPolicy
- s:values():com.intellij.codeInsight.intention.IntentionActionWithOptions$CombiningPolicy[]
a:com.intellij.codeInsight.intention.IntentionManager
- sf:SHOW_INTENTION_OPTIONS_KEY:com.intellij.openapi.util.Key
- <init>():V
- a:addAction(com.intellij.codeInsight.intention.IntentionAction):V
- a:convertToFix(com.intellij.codeInsight.intention.IntentionAction):com.intellij.codeInspection.LocalQuickFix
- a:createCleanupAllIntention():com.intellij.codeInsight.intention.IntentionAction
- a:createFixAllIntention(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInsight.intention.IntentionAction):com.intellij.codeInsight.intention.IntentionAction
- a:getAvailableIntentions():java.util.List
- a:getAvailableIntentions(java.util.Collection):java.util.List
- a:getCleanupIntentionOptions():java.util.List
- s:getInstance():com.intellij.codeInsight.intention.IntentionManager
- a:getIntentionActions():com.intellij.codeInsight.intention.IntentionAction[]
- a:getStandardIntentionOptions(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.PsiElement):java.util.List
- a:registerIntentionAndMetaData(com.intellij.codeInsight.intention.IntentionAction,java.lang.String[]):V
- a:unregisterIntention(com.intellij.codeInsight.intention.IntentionAction):V
f:com.intellij.codeInsight.intention.IntentionShortcuts
- sf:WRAPPER_PREFIX:java.lang.String
- <init>():V
com.intellij.codeInsight.intention.LowPriorityAction
- com.intellij.codeInsight.intention.PriorityAction
- getPriority():com.intellij.codeInsight.intention.PriorityAction$Priority
com.intellij.codeInsight.intention.PriorityAction
- a:getPriority():com.intellij.codeInsight.intention.PriorityAction$Priority
e:com.intellij.codeInsight.intention.PriorityAction$Priority
- java.lang.Enum
- sf:BOTTOM:com.intellij.codeInsight.intention.PriorityAction$Priority
- sf:HIGH:com.intellij.codeInsight.intention.PriorityAction$Priority
- sf:LOW:com.intellij.codeInsight.intention.PriorityAction$Priority
- sf:NORMAL:com.intellij.codeInsight.intention.PriorityAction$Priority
- sf:TOP:com.intellij.codeInsight.intention.PriorityAction$Priority
- s:valueOf(java.lang.String):com.intellij.codeInsight.intention.PriorityAction$Priority
- s:values():com.intellij.codeInsight.intention.PriorityAction$Priority[]
a:com.intellij.codeInsight.intention.impl.BaseIntentionAction
- com.intellij.codeInsight.intention.IntentionAction
- <init>():V
- s:canModify(com.intellij.psi.PsiElement):Z
- getText():java.lang.String
- p:setText(java.lang.String):V
- startInWriteAction():Z
a:com.intellij.codeInsight.intention.impl.QuickEditActionKeys
- sf:EDIT_ACTION_AVAILABLE:com.intellij.openapi.util.Key
- <init>():V
com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- sf:DIFF:com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- sf:DIFF_NO_TRIM:com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- sf:EMPTY:com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- s:addListOption(java.util.List,java.lang.String,java.lang.String):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- s:addListOption(java.util.List,java.lang.String,java.util.function.Predicate):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$Html
- s:moveMultiplePsi(java.util.List,com.intellij.psi.PsiNamedElement):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- s:moveMultiplePsi(java.util.List,com.intellij.psi.PsiNamedElement,java.lang.String):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- s:movePsi(com.intellij.psi.PsiNamedElement,com.intellij.psi.PsiNamedElement):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- s:moveToDirectory(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- s:navigate(com.intellij.psi.NavigatablePsiElement):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- s:navigate(com.intellij.psi.PsiFile,I):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$Html
- s:rename(com.intellij.psi.PsiFile,java.lang.String):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
f:com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$CustomDiff
- com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- <init>(com.intellij.openapi.fileTypes.FileType,java.lang.String,java.lang.String):V
- <init>(com.intellij.openapi.fileTypes.FileType,java.lang.String,java.lang.String,java.lang.String):V
- <init>(com.intellij.openapi.fileTypes.FileType,java.lang.String,java.lang.String,java.lang.String,Z):V
- equals(java.lang.Object):Z
- fileName():java.lang.String
- fileType():com.intellij.openapi.fileTypes.FileType
- hashCode():I
- modifiedText():java.lang.String
- originalText():java.lang.String
- showLineNumbers():Z
f:com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$Html
- com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- <init>(com.intellij.openapi.util.text.HtmlChunk):V
- <init>(com.intellij.openapi.util.text.HtmlChunk,com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$InfoKind):V
- <init>(java.lang.String):V
- content():com.intellij.openapi.util.text.HtmlChunk
- equals(java.lang.Object):Z
- hashCode():I
- infoKind():com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$InfoKind
e:com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$InfoKind
- java.lang.Enum
- sf:ERROR:com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$InfoKind
- sf:INFORMATION:com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$InfoKind
- s:valueOf(java.lang.String):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$InfoKind
- s:values():com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$InfoKind[]
f:com.intellij.codeInsight.intention.preview.IntentionPreviewInfo$MultiFileDiff
- com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- <init>(java.util.List):V
- getDiffs():java.util.List
f:com.intellij.codeInsight.intention.preview.IntentionPreviewUtils
- <init>():V
- s:getOriginalFile(com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- s:getPreviewEditor():com.intellij.openapi.editor.Editor
- s:isIntentionPreviewActive():Z
- s:isPreviewElement(com.intellij.psi.PsiElement):Z
- s:prepareElementForWrite(com.intellij.psi.PsiElement):Z
- s:toPreviewElementIfPreviewFile(com.intellij.psi.PsiFile,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:write(com.intellij.util.ThrowableRunnable):V
- s:writeAndCompute(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
e:com.intellij.codeInsight.lookup.AutoCompletionPolicy
- java.lang.Enum
- sf:ALWAYS_AUTOCOMPLETE:com.intellij.codeInsight.lookup.AutoCompletionPolicy
- sf:GIVE_CHANCE_TO_OVERWRITE:com.intellij.codeInsight.lookup.AutoCompletionPolicy
- sf:NEVER_AUTOCOMPLETE:com.intellij.codeInsight.lookup.AutoCompletionPolicy
- sf:SETTINGS_DEPENDENT:com.intellij.codeInsight.lookup.AutoCompletionPolicy
- applyPolicy(com.intellij.codeInsight.lookup.LookupElement):com.intellij.codeInsight.lookup.LookupElement
- s:valueOf(java.lang.String):com.intellij.codeInsight.lookup.AutoCompletionPolicy
- s:values():com.intellij.codeInsight.lookup.AutoCompletionPolicy[]
com.intellij.codeInsight.lookup.Lookup
- sf:AUTO_INSERT_SELECT_CHAR:C
- sf:COMPLETE_STATEMENT_SELECT_CHAR:C
- sf:LOOKUP_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:NORMAL_SELECT_CHAR:C
- sf:REPLACE_SELECT_CHAR:C
- a:addLookupListener(com.intellij.codeInsight.lookup.LookupListener):V
- a:getAdvertisements():java.util.List
- a:getBounds():java.awt.Rectangle
- a:getCurrentItem():com.intellij.codeInsight.lookup.LookupElement
- a:getCurrentItemBounds():java.awt.Rectangle
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getItems():java.util.List
- a:getLookupStart():I
- a:getProject():com.intellij.openapi.project.Project
- a:getPsiElement():com.intellij.psi.PsiElement
- a:getPsiFile():com.intellij.psi.PsiFile
- a:getTopLevelEditor():com.intellij.openapi.editor.Editor
- a:isCompletion():Z
- a:isFocused():Z
- a:isPositionedAboveCaret():Z
- a:isSelectionTouched():Z
- a:itemMatcher(com.intellij.codeInsight.lookup.LookupElement):com.intellij.codeInsight.completion.PrefixMatcher
- a:itemPattern(com.intellij.codeInsight.lookup.LookupElement):java.lang.String
- a:removeLookupListener(com.intellij.codeInsight.lookup.LookupListener):V
a:com.intellij.codeInsight.lookup.LookupElement
- com.intellij.openapi.util.UserDataHolderBase
- sf:EMPTY_ARRAY:com.intellij.codeInsight.lookup.LookupElement[]
- sf:LOOKUP_ELEMENT_SHOW_TIMESTAMP_MILLIS:com.intellij.openapi.util.Key
- <init>():V
- as(com.intellij.openapi.util.ClassConditionKey):java.lang.Object
- as(java.lang.Class):java.lang.Object
- getAllLookupStrings():java.util.Set
- getAutoCompletionPolicy():com.intellij.codeInsight.lookup.AutoCompletionPolicy
- getExpensiveRenderer():com.intellij.codeInsight.lookup.LookupElementRenderer
- a:getLookupString():java.lang.String
- getObject():java.lang.Object
- getPsiElement():com.intellij.psi.PsiElement
- handleInsert(com.intellij.codeInsight.completion.InsertionContext):V
- isCaseSensitive():Z
- isValid():Z
- isWorthShowingInAutoPopup():Z
- renderElement(com.intellij.codeInsight.lookup.LookupElementPresentation):V
- requiresCommittedDocuments():Z
f:com.intellij.codeInsight.lookup.LookupElementBuilder
- com.intellij.codeInsight.lookup.LookupElement
- appendTailText(java.lang.String,Z):com.intellij.codeInsight.lookup.LookupElementBuilder
- bold():com.intellij.codeInsight.lookup.LookupElementBuilder
- s:create(com.intellij.psi.PsiNamedElement):com.intellij.codeInsight.lookup.LookupElementBuilder
- s:create(java.lang.Object):com.intellij.codeInsight.lookup.LookupElementBuilder
- s:create(java.lang.Object,java.lang.String):com.intellij.codeInsight.lookup.LookupElementBuilder
- s:create(java.lang.String):com.intellij.codeInsight.lookup.LookupElementBuilder
- s:createWithIcon(com.intellij.psi.PsiNamedElement):com.intellij.codeInsight.lookup.LookupElementBuilder
- s:createWithSmartPointer(java.lang.String,com.intellij.psi.PsiElement):com.intellij.codeInsight.lookup.LookupElementBuilder
- equals(java.lang.Object):Z
- getAllLookupStrings():java.util.Set
- getExpensiveRenderer():com.intellij.codeInsight.lookup.LookupElementRenderer
- getInsertHandler():com.intellij.codeInsight.completion.InsertHandler
- getLookupString():java.lang.String
- getObject():java.lang.Object
- getPsiElement():com.intellij.psi.PsiElement
- getRenderer():com.intellij.codeInsight.lookup.LookupElementRenderer
- handleInsert(com.intellij.codeInsight.completion.InsertionContext):V
- hashCode():I
- isCaseSensitive():Z
- renderElement(com.intellij.codeInsight.lookup.LookupElementPresentation):V
- strikeout():com.intellij.codeInsight.lookup.LookupElementBuilder
- withAutoCompletionPolicy(com.intellij.codeInsight.lookup.AutoCompletionPolicy):com.intellij.codeInsight.lookup.LookupElement
- withBaseLookupString(java.lang.String):com.intellij.codeInsight.lookup.LookupElementBuilder
- withBoldness(Z):com.intellij.codeInsight.lookup.LookupElementBuilder
- withCaseSensitivity(Z):com.intellij.codeInsight.lookup.LookupElementBuilder
- withExpensiveRenderer(com.intellij.codeInsight.lookup.LookupElementRenderer):com.intellij.codeInsight.lookup.LookupElementBuilder
- withIcon(javax.swing.Icon):com.intellij.codeInsight.lookup.LookupElementBuilder
- withInsertHandler(com.intellij.codeInsight.completion.InsertHandler):com.intellij.codeInsight.lookup.LookupElementBuilder
- withItemTextForeground(java.awt.Color):com.intellij.codeInsight.lookup.LookupElementBuilder
- withItemTextItalic(Z):com.intellij.codeInsight.lookup.LookupElementBuilder
- withItemTextUnderlined(Z):com.intellij.codeInsight.lookup.LookupElementBuilder
- withLookupString(java.lang.String):com.intellij.codeInsight.lookup.LookupElementBuilder
- withLookupStrings(java.util.Collection):com.intellij.codeInsight.lookup.LookupElementBuilder
- withPresentableText(java.lang.String):com.intellij.codeInsight.lookup.LookupElementBuilder
- withPsiElement(com.intellij.psi.PsiElement):com.intellij.codeInsight.lookup.LookupElementBuilder
- withRenderer(com.intellij.codeInsight.lookup.LookupElementRenderer):com.intellij.codeInsight.lookup.LookupElementBuilder
- withStrikeoutness(Z):com.intellij.codeInsight.lookup.LookupElementBuilder
- withTailText(java.lang.String):com.intellij.codeInsight.lookup.LookupElementBuilder
- withTailText(java.lang.String,Z):com.intellij.codeInsight.lookup.LookupElementBuilder
- withTypeIconRightAligned(Z):com.intellij.codeInsight.lookup.LookupElementBuilder
- withTypeText(java.lang.String):com.intellij.codeInsight.lookup.LookupElementBuilder
- withTypeText(java.lang.String,javax.swing.Icon,Z):com.intellij.codeInsight.lookup.LookupElementBuilder
- withTypeText(java.lang.String,Z):com.intellij.codeInsight.lookup.LookupElementBuilder
a:com.intellij.codeInsight.lookup.LookupElementDecorator
- com.intellij.codeInsight.lookup.LookupElement
- p:<init>(com.intellij.codeInsight.lookup.LookupElement):V
- as(com.intellij.openapi.util.ClassConditionKey):java.lang.Object
- as(java.lang.Class):java.lang.Object
- equals(java.lang.Object):Z
- getAllLookupStrings():java.util.Set
- getAutoCompletionPolicy():com.intellij.codeInsight.lookup.AutoCompletionPolicy
- getDecoratorInsertHandler():com.intellij.codeInsight.completion.InsertHandler
- getDelegate():com.intellij.codeInsight.lookup.LookupElement
- getDelegateInsertHandler():com.intellij.codeInsight.completion.InsertHandler
- getExpensiveRenderer():com.intellij.codeInsight.lookup.LookupElementRenderer
- getLookupString():java.lang.String
- getObject():java.lang.Object
- getPsiElement():com.intellij.psi.PsiElement
- handleInsert(com.intellij.codeInsight.completion.InsertionContext):V
- hashCode():I
- isCaseSensitive():Z
- isValid():Z
- isWorthShowingInAutoPopup():Z
- renderElement(com.intellij.codeInsight.lookup.LookupElementPresentation):V
- s:withDelegateInsertHandler(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.InsertHandler):com.intellij.codeInsight.lookup.LookupElementDecorator
- s:withInsertHandler(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.completion.InsertHandler):com.intellij.codeInsight.lookup.LookupElementDecorator
- s:withRenderer(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.lookup.LookupElementRenderer):com.intellij.codeInsight.lookup.LookupElementDecorator
c:com.intellij.codeInsight.lookup.LookupElementPresentation
- <init>():V
- appendTailText(java.lang.String,Z):V
- appendTailTextItalic(java.lang.String,Z):V
- clearTail():V
- copyFrom(com.intellij.codeInsight.lookup.LookupElementPresentation):V
- getIcon():javax.swing.Icon
- getItemText():java.lang.String
- getItemTextForeground():java.awt.Color
- getTailFragments():java.util.List
- getTailText():java.lang.String
- getTypeIcon():javax.swing.Icon
- getTypeText():java.lang.String
- isItemTextBold():Z
- isItemTextItalic():Z
- isItemTextUnderlined():Z
- isReal():Z
- isStrikeout():Z
- isTypeGrayed():Z
- isTypeIconRightAligned():Z
- s:renderElement(com.intellij.codeInsight.lookup.LookupElement):com.intellij.codeInsight.lookup.LookupElementPresentation
- setIcon(javax.swing.Icon):V
- setItemText(java.lang.String):V
- setItemTextBold(Z):V
- setItemTextForeground(java.awt.Color):V
- setItemTextItalic(Z):V
- setItemTextUnderlined(Z):V
- setStrikeout(Z):V
- setTailText(java.lang.String):V
- setTailText(java.lang.String,java.awt.Color):V
- setTailText(java.lang.String,Z):V
- setTypeGrayed(Z):V
- setTypeIconRightAligned(Z):V
- setTypeText(java.lang.String):V
- setTypeText(java.lang.String,javax.swing.Icon):V
f:com.intellij.codeInsight.lookup.LookupElementPresentation$TextFragment
- f:text:java.lang.String
- equals(java.lang.Object):Z
- getForegroundColor():java.awt.Color
- hashCode():I
- isGrayed():Z
- isItalic():Z
a:com.intellij.codeInsight.lookup.LookupElementRenderer
- <init>():V
- a:renderElement(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.lookup.LookupElementPresentation):V
a:com.intellij.codeInsight.lookup.LookupElementWeigher
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,Z,Z):V
- isNegated():Z
- isPrefixDependent():Z
- weigh(com.intellij.codeInsight.lookup.LookupElement):java.lang.Comparable
- weigh(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.lookup.WeighingContext):java.lang.Comparable
f:com.intellij.codeInsight.lookup.LookupEvent
- java.util.EventObject
- <init>(com.intellij.codeInsight.lookup.Lookup,com.intellij.codeInsight.lookup.LookupElement,C):V
- <init>(com.intellij.codeInsight.lookup.Lookup,Z):V
- getCompletionChar():C
- getItem():com.intellij.codeInsight.lookup.LookupElement
- getLookup():com.intellij.codeInsight.lookup.Lookup
- isCanceledExplicitly():Z
- s:isSpecialCompletionChar(C):Z
e:com.intellij.codeInsight.lookup.LookupFocusDegree
- java.lang.Enum
- sf:FOCUSED:com.intellij.codeInsight.lookup.LookupFocusDegree
- sf:SEMI_FOCUSED:com.intellij.codeInsight.lookup.LookupFocusDegree
- sf:UNFOCUSED:com.intellij.codeInsight.lookup.LookupFocusDegree
- s:valueOf(java.lang.String):com.intellij.codeInsight.lookup.LookupFocusDegree
- s:values():com.intellij.codeInsight.lookup.LookupFocusDegree[]
com.intellij.codeInsight.lookup.LookupListener
- java.util.EventListener
- beforeItemSelected(com.intellij.codeInsight.lookup.LookupEvent):Z
- currentItemChanged(com.intellij.codeInsight.lookup.LookupEvent):V
- firstElementShown():V
- focusDegreeChanged():V
- itemSelected(com.intellij.codeInsight.lookup.LookupEvent):V
- lookupCanceled(com.intellij.codeInsight.lookup.LookupEvent):V
- lookupShown(com.intellij.codeInsight.lookup.LookupEvent):V
- uiRefreshed():V
a:com.intellij.codeInsight.lookup.TailTypeDecorator
- com.intellij.codeInsight.lookup.LookupElementDecorator
- <init>(com.intellij.codeInsight.lookup.LookupElement):V
- pa:computeTailType(com.intellij.codeInsight.completion.InsertionContext):com.intellij.codeInsight.TailType
- handleInsert(com.intellij.codeInsight.completion.InsertionContext):V
- s:withTail(com.intellij.codeInsight.lookup.LookupElement,com.intellij.codeInsight.TailType):com.intellij.codeInsight.lookup.TailTypeDecorator
com.intellij.codeInsight.lookup.WeighingContext
- a:itemMatcher(com.intellij.codeInsight.lookup.LookupElement):com.intellij.codeInsight.completion.PrefixMatcher
- a:itemPattern(com.intellij.codeInsight.lookup.LookupElement):java.lang.String
com.intellij.codeInsight.navigation.actions.GotoDeclarationHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- getActionText(com.intellij.openapi.actionSystem.DataContext):java.lang.String
- a:getGotoDeclarationTargets(com.intellij.psi.PsiElement,I,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement[]
a:com.intellij.codeInsight.navigation.actions.GotoDeclarationHandlerBase
- com.intellij.codeInsight.navigation.actions.GotoDeclarationHandler
- <init>():V
- a:getGotoDeclarationTarget(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement
- getGotoDeclarationTargets(com.intellij.psi.PsiElement,I,com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement[]
f:com.intellij.codeInsight.template.EverywhereContextType
- com.intellij.codeInsight.template.TemplateContextType
- <init>():V
- isInContext(com.intellij.psi.PsiFile,I):Z
a:com.intellij.codeInsight.template.Expression
- <init>():V
- a:calculateLookupItems(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateQuickResult(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- a:calculateResult(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- getAdvertisingText():java.lang.String
- getLookupFocusDegree():com.intellij.codeInsight.lookup.LookupFocusDegree
- requiresCommittedPSI():Z
com.intellij.codeInsight.template.ExpressionContext
- sf:SELECTION:com.intellij.openapi.util.Key
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getProject():com.intellij.openapi.project.Project
- a:getProperty(com.intellij.openapi.util.Key):java.lang.Object
- a:getPsiElementAtStartOffset():com.intellij.psi.PsiElement
- a:getStartOffset():I
- a:getTemplateEndOffset():I
- a:getTemplateStartOffset():I
- a:getVariableValue(java.lang.String):com.intellij.codeInsight.template.TextResult
com.intellij.codeInsight.template.LiveTemplateContext
- a:getBaseContextId():java.lang.String
- a:getContextId():java.lang.String
- a:getTemplateContextType():com.intellij.codeInsight.template.TemplateContextType
f:com.intellij.codeInsight.template.LiveTemplateContextBean
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- com.intellij.codeInsight.template.LiveTemplateContext
- sf:EVERYWHERE_CONTEXT_ID:java.lang.String
- baseContextId:java.lang.String
- contextId:java.lang.String
- implementationClass:java.lang.String
- <init>():V
- createInstance(com.intellij.openapi.components.ComponentManager,com.intellij.openapi.extensions.PluginDescriptor):com.intellij.codeInsight.template.TemplateContextType
- getBaseContextId():java.lang.String
- getContextId():java.lang.String
- getTemplateContextType():com.intellij.codeInsight.template.TemplateContextType
com.intellij.codeInsight.template.LiveTemplateContextProvider
- a:createContexts():java.util.Collection
f:com.intellij.codeInsight.template.LiveTemplateContextsSnapshot
- <init>(java.util.Map):V
- getLiveTemplateContext(java.lang.String):com.intellij.codeInsight.template.LiveTemplateContext
- getLiveTemplateContexts():java.util.Collection
f:com.intellij.codeInsight.template.LiveTemplateInternalContextBean
- contextId:java.lang.String
- internalContextId:java.lang.String
- <init>():V
a:com.intellij.codeInsight.template.Macro
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- calculateLookupItems(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateQuickResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- a:calculateResult(com.intellij.codeInsight.template.Expression[],com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- getDefaultValue():java.lang.String
- getLookupFocusDegree():com.intellij.codeInsight.lookup.LookupFocusDegree
- a:getName():java.lang.String
- getPresentableName():java.lang.String
- isAcceptableInContext(com.intellij.codeInsight.template.TemplateContextType):Z
com.intellij.codeInsight.template.Result
- a:equalsToText(java.lang.String,com.intellij.psi.PsiElement):Z
- a:handleFocused(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,I,I):V
- a:toString():java.lang.String
f:com.intellij.codeInsight.template.TemplateActionContext
- s:create(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I,I,Z):com.intellij.codeInsight.template.TemplateActionContext
- s:expanding(com.intellij.psi.PsiFile,I):com.intellij.codeInsight.template.TemplateActionContext
- s:expanding(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.codeInsight.template.TemplateActionContext
- getEndOffset():I
- getFile():com.intellij.psi.PsiFile
- getStartOffset():I
- isSurrounding():Z
- s:surrounding(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.codeInsight.template.TemplateActionContext
- withFile(com.intellij.psi.PsiFile):com.intellij.codeInsight.template.TemplateActionContext
com.intellij.codeInsight.template.TemplateBuilder
- a:replaceElement(com.intellij.psi.PsiElement,com.intellij.codeInsight.template.Expression):V
- a:replaceElement(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.template.Expression):V
- a:replaceElement(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.String):V
- a:replaceElement(com.intellij.psi.PsiElement,java.lang.String):V
- a:replaceRange(com.intellij.openapi.util.TextRange,com.intellij.codeInsight.template.Expression):V
- a:replaceRange(com.intellij.openapi.util.TextRange,java.lang.String):V
- a:run(com.intellij.openapi.editor.Editor,Z):V
- a:runNonInteractively(Z):V
- a:setScrollToTemplate(Z):com.intellij.codeInsight.template.TemplateBuilder
a:com.intellij.codeInsight.template.TemplateBuilderFactory
- <init>():V
- a:createTemplateBuilder(com.intellij.psi.PsiElement):com.intellij.codeInsight.template.TemplateBuilder
- s:getInstance():com.intellij.codeInsight.template.TemplateBuilderFactory
a:com.intellij.codeInsight.template.TemplateContextType
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,java.lang.String):V
- p:<init>(java.lang.String,java.lang.String,java.lang.Class):V
- createDocument(java.lang.CharSequence,com.intellij.openapi.project.Project):com.intellij.openapi.editor.Document
- createHighlighter():com.intellij.openapi.fileTypes.SyntaxHighlighter
- getBaseContextType():com.intellij.codeInsight.template.TemplateContextType
- f:getContextId():java.lang.String
- getPresentableName():java.lang.String
- isExpandableFromEditor():Z
- isInContext(com.intellij.codeInsight.template.TemplateActionContext):Z
- isInContext(com.intellij.psi.PsiFile,I):Z
c:com.intellij.codeInsight.template.TextResult
- com.intellij.codeInsight.template.Result
- <init>(java.lang.String):V
- equalsToText(java.lang.String,com.intellij.psi.PsiElement):Z
- getText():java.lang.String
- handleFocused(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document,I,I):V
f:com.intellij.codeInsight.template.impl.ConstantNode
- com.intellij.codeInsight.template.Expression
- <init>(com.intellij.codeInsight.template.Result):V
- <init>(java.lang.String):V
- calculateLookupItems(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateResult(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- getAdvertisingText():java.lang.String
- requiresCommittedPSI():Z
- withLookupItems(java.util.Collection):com.intellij.codeInsight.template.impl.ConstantNode
- withLookupItems(com.intellij.codeInsight.lookup.LookupElement[]):com.intellij.codeInsight.template.impl.ConstantNode
- withLookupStrings(java.util.Collection):com.intellij.codeInsight.template.impl.ConstantNode
- withLookupStrings(java.lang.String[]):com.intellij.codeInsight.template.impl.ConstantNode
- withPopupAdvertisement(java.lang.String):com.intellij.codeInsight.template.impl.ConstantNode
com.intellij.codeInspection.ActionClassHolder
- a:getActionClass():java.lang.Class
com.intellij.codeInspection.BatchQuickFix
- a:applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.CommonProblemDescriptor[],java.util.List,java.lang.Runnable):V
com.intellij.codeInspection.BatchSuppressableTool
- a:getBatchSuppressActions(com.intellij.psi.PsiElement):com.intellij.codeInspection.SuppressQuickFix[]
- a:isSuppressedFor(com.intellij.psi.PsiElement):Z
com.intellij.codeInspection.CleanupLocalInspectionTool
com.intellij.codeInspection.CommonProblemDescriptor
- sf:ARRAY_FACTORY:com.intellij.util.ArrayFactory
- sf:DESCRIPTOR_COMPARATOR:java.util.Comparator
- sf:EMPTY_ARRAY:com.intellij.codeInspection.CommonProblemDescriptor[]
- a:getDescriptionTemplate():java.lang.String
- a:getFixes():com.intellij.codeInspection.QuickFix[]
f:com.intellij.codeInspection.CommonQuickFixBundle
- sf:BUNDLE:java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
com.intellij.codeInspection.ContainerBasedSuppressQuickFix
- com.intellij.codeInspection.SuppressQuickFix
- a:getContainer(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
com.intellij.codeInspection.CustomSuppressableInspectionTool
- a:getSuppressActions(com.intellij.psi.PsiElement):com.intellij.codeInspection.SuppressIntentionAction[]
- a:isSuppressedFor(com.intellij.psi.PsiElement):Z
com.intellij.codeInspection.GlobalInspectionContext
- com.intellij.openapi.util.UserDataHolder
- a:cleanup():V
- a:getExtension(com.intellij.openapi.util.Key):java.lang.Object
- a:getProject():com.intellij.openapi.project.Project
- a:getRefManager():com.intellij.codeInspection.reference.RefManager
- a:getStdJobDescriptors():com.intellij.codeInspection.ex.StdJobDescriptors
- a:incrementJobDoneAmount(com.intellij.codeInspection.ex.JobDescriptor,java.lang.String):V
- a:isSuppressed(com.intellij.psi.PsiElement,java.lang.String):Z
- a:shouldCheck(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.GlobalInspectionTool):Z
a:com.intellij.codeInspection.GlobalInspectionTool
- com.intellij.codeInspection.InspectionProfileEntry
- <init>():V
- checkElement(com.intellij.codeInspection.reference.RefEntity,com.intellij.analysis.AnalysisScope,com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.GlobalInspectionContext):com.intellij.codeInspection.CommonProblemDescriptor[]
- checkElement(com.intellij.codeInspection.reference.RefEntity,com.intellij.analysis.AnalysisScope,com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.GlobalInspectionContext,com.intellij.codeInspection.ProblemDescriptionsProcessor):com.intellij.codeInspection.CommonProblemDescriptor[]
- checkFile(com.intellij.psi.PsiFile,com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.ProblemsHolder,com.intellij.codeInspection.GlobalInspectionContext,com.intellij.codeInspection.ProblemDescriptionsProcessor):V
- compose(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.HTMLComposer):V
- getAdditionalJobs():com.intellij.codeInspection.ex.JobDescriptor[]
- getAdditionalJobs(com.intellij.codeInspection.GlobalInspectionContext):com.intellij.codeInspection.ex.JobDescriptor[]
- getAnnotator(com.intellij.codeInspection.reference.RefManager):com.intellij.codeInspection.reference.RefGraphAnnotator
- getHint(com.intellij.codeInspection.QuickFix):java.lang.String
- getQuickFix(java.lang.String):com.intellij.codeInspection.QuickFix
- getSharedLocalInspectionTool():com.intellij.codeInspection.LocalInspectionTool
- f:getSuppressId():java.lang.String
- isEnabledByDefault():Z
- isGlobalSimpleInspectionTool():Z
- isGraphNeeded():Z
- isReadActionNeeded():Z
- queryExternalUsagesRequests(com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.GlobalInspectionContext,com.intellij.codeInspection.ProblemDescriptionsProcessor):Z
- runInspection(com.intellij.analysis.AnalysisScope,com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.GlobalInspectionContext,com.intellij.codeInspection.ProblemDescriptionsProcessor):V
- worksInBatchModeOnly():Z
a:com.intellij.codeInspection.GlobalSimpleInspectionTool
- com.intellij.codeInspection.GlobalInspectionTool
- <init>():V
- a:checkFile(com.intellij.psi.PsiFile,com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.ProblemsHolder,com.intellij.codeInspection.GlobalInspectionContext,com.intellij.codeInspection.ProblemDescriptionsProcessor):V
- inspectionFinished(com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.GlobalInspectionContext,com.intellij.codeInspection.ProblemDescriptionsProcessor):V
- inspectionStarted(com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.GlobalInspectionContext,com.intellij.codeInspection.ProblemDescriptionsProcessor):V
- f:isGlobalSimpleInspectionTool():Z
- f:isGraphNeeded():Z
- isReadActionNeeded():Z
- f:runInspection(com.intellij.analysis.AnalysisScope,com.intellij.codeInspection.InspectionManager,com.intellij.codeInspection.GlobalInspectionContext,com.intellij.codeInspection.ProblemDescriptionsProcessor):V
a:com.intellij.codeInspection.HTMLComposer
- <init>():V
- s:appendAfterHeaderIndention(java.lang.StringBuilder):V
- a:appendElementInReferences(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement):V
- a:appendElementOutReferences(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement):V
- a:appendElementReference(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement):V
- a:appendElementReference(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement,java.lang.String,java.lang.String):V
- a:appendElementReference(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement,Z):V
- a:appendElementReference(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.String):V
- s:appendHeading(java.lang.StringBuilder,java.lang.String):V
- a:appendListItem(java.lang.StringBuilder,com.intellij.codeInspection.reference.RefElement):V
- a:appendNoProblems(java.lang.StringBuilder):V
- appendSection(java.lang.StringBuilder,java.lang.String,java.util.Collection):V
- a:composeNumereables(I,java.lang.String,java.lang.String,java.lang.String):java.lang.String
- a:doneList(java.lang.StringBuilder):V
- doneProblemDescription(java.lang.StringBuilder):V
- a:getExtension(com.intellij.openapi.util.Key):java.lang.Object
- a:startList(java.lang.StringBuilder):V
- a:startListItem(java.lang.StringBuilder):V
- startProblemDescription(java.lang.StringBuilder):V
com.intellij.codeInspection.HintAction
- com.intellij.codeInsight.intention.IntentionAction
- fixSilently(com.intellij.openapi.editor.Editor):Z
- a:showHint(com.intellij.openapi.editor.Editor):Z
com.intellij.codeInspection.InjectionAwareSuppressQuickFix
- com.intellij.codeInspection.SuppressQuickFix
- a:isShouldBeAppliedToInjectionHost():com.intellij.util.ThreeState
- a:setShouldBeAppliedToInjectionHost(com.intellij.util.ThreeState):V
c:com.intellij.codeInspection.InspectionEP
- com.intellij.lang.LanguageExtensionPoint
- sf:GLOBAL_INSPECTION:com.intellij.openapi.extensions.ExtensionPointName
- applyToDialects:Z
- bundle:java.lang.String
- cleanupTool:Z
- displayName:java.lang.String
- editorAttributes:java.lang.String
- enabledByDefault:Z
- groupBundle:java.lang.String
- groupDisplayName:java.lang.String
- groupKey:java.lang.String
- groupPath:java.lang.String
- groupPathKey:java.lang.String
- hasStaticDescription:Z
- isInternal:Z
- key:java.lang.String
- level:java.lang.String
- presentation:java.lang.String
- projectType:java.lang.String
- shortName:java.lang.String
- p:<init>():V
- <init>(java.lang.String,com.intellij.openapi.extensions.PluginDescriptor):V
- getDefaultDisplayName():java.lang.String
- getDefaultGroupDisplayName():java.lang.String
- getDefaultLevel():com.intellij.codeHighlighting.HighlightDisplayLevel
- getDefaultShortName():java.lang.String
- getDisplayName():java.lang.String
- getGroupDisplayName():java.lang.String
- getGroupKey():java.lang.String
- getGroupPath():java.lang.String[]
- getShortName():java.lang.String
- instantiateTool():com.intellij.codeInspection.InspectionProfileEntry
a:com.intellij.codeInspection.InspectionManager
- sf:CANT_BE_STATIC_EXTENSION:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:createNewGlobalContext():com.intellij.codeInspection.GlobalInspectionContext
- a:createNewGlobalContext(Z):com.intellij.codeInspection.GlobalInspectionContext
- a:createProblemDescriptor(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.String,com.intellij.codeInspection.ProblemHighlightType,Z,com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.ProblemDescriptor
- a:createProblemDescriptor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.ProblemHighlightType,Z,com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.ProblemDescriptor
- a:createProblemDescriptor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.ProblemHighlightType,com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.ProblemDescriptor
- a:createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix,com.intellij.codeInspection.ProblemHighlightType):com.intellij.codeInspection.ProblemDescriptor
- a:createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix,com.intellij.codeInspection.ProblemHighlightType,Z):com.intellij.codeInspection.ProblemDescriptor
- a:createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,Z,com.intellij.codeInspection.ProblemHighlightType,Z,com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.ProblemDescriptor
- a:createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,Z,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType):com.intellij.codeInspection.ProblemDescriptor
- a:createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType):com.intellij.codeInspection.ProblemDescriptor
- a:createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType,Z):com.intellij.codeInspection.ProblemDescriptor
- a:createProblemDescriptor(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[],com.intellij.codeInspection.ProblemHighlightType,Z,Z):com.intellij.codeInspection.ProblemDescriptor
- a:createProblemDescriptor(java.lang.String,com.intellij.openapi.module.Module,com.intellij.codeInspection.QuickFix[]):com.intellij.codeInspection.ModuleProblemDescriptor
- a:createProblemDescriptor(java.lang.String,com.intellij.codeInspection.QuickFix[]):com.intellij.codeInspection.CommonProblemDescriptor
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInspection.InspectionManager
- a:getProject():com.intellij.openapi.project.Project
com.intellij.codeInspection.InspectionProfile
- java.lang.Comparable
- sf:DEFAULT_PROFILE_NAME:java.lang.String
- a:getAllEnabledInspectionTools(com.intellij.openapi.project.Project):java.util.List
- a:getDisplayName():java.lang.String
- getEditorAttributes(java.lang.String,com.intellij.psi.PsiElement):com.intellij.openapi.editor.colors.TextAttributesKey
- a:getErrorLevel(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.PsiElement):com.intellij.codeHighlighting.HighlightDisplayLevel
- a:getInspectionTool(java.lang.String,com.intellij.openapi.project.Project):com.intellij.codeInspection.ex.InspectionToolWrapper
- a:getInspectionTool(java.lang.String,com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.InspectionToolWrapper
- a:getInspectionTools(com.intellij.psi.PsiElement):java.util.List
- a:getName():java.lang.String
- a:getSingleTool():java.lang.String
- a:getUnwrappedTool(com.intellij.openapi.util.Key,com.intellij.psi.PsiElement):com.intellij.codeInspection.InspectionProfileEntry
- a:getUnwrappedTool(java.lang.String,com.intellij.psi.PsiElement):com.intellij.codeInspection.InspectionProfileEntry
- a:isExecutable(com.intellij.openapi.project.Project):Z
- isToolEnabled(com.intellij.codeInsight.daemon.HighlightDisplayKey):Z
- a:isToolEnabled(com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.psi.PsiElement):Z
- a:modifyToolSettings(com.intellij.openapi.util.Key,com.intellij.psi.PsiElement,com.intellij.util.Consumer):V
a:com.intellij.codeInspection.InspectionProfileEntry
- com.intellij.codeInspection.BatchSuppressableTool
- com.intellij.codeInspection.options.OptionContainer
- <init>():V
- cleanup(com.intellij.openapi.project.Project):V
- createOptionsPanel():javax.swing.JComponent
- getAlternativeID():java.lang.String
- getBatchSuppressActions(com.intellij.psi.PsiElement):com.intellij.codeInspection.SuppressQuickFix[]
- getDefaultLevel():com.intellij.codeHighlighting.HighlightDisplayLevel
- getDescriptionAddendum():com.intellij.openapi.util.text.HtmlChunk
- getDescriptionFileName():java.lang.String
- getDisplayName():java.lang.String
- getEditorAttributesKey():java.lang.String
- s:getGeneralGroupName():java.lang.String
- getGroupDisplayName():java.lang.String
- getGroupKey():java.lang.String
- getGroupPath():java.lang.String[]
- getLanguage():java.lang.String
- getMainToolId():java.lang.String
- getOptionController():com.intellij.codeInspection.options.OptionController
- getOptionsPane():com.intellij.codeInspection.options.OptPane
- p:getSerializationFilter():com.intellij.util.xmlb.SerializationFilter
- getShortName():java.lang.String
- s:getShortName(java.lang.String):java.lang.String
- getStaticDescription():java.lang.String
- getSuppressId():java.lang.String
- s:getSuppressors(com.intellij.psi.PsiElement):java.util.Collection
- initialize(com.intellij.codeInspection.GlobalInspectionContext):V
- isEnabledByDefault():Z
- isInitialized():Z
- isSuppressedFor(com.intellij.psi.PsiElement):Z
- loadDescription():java.lang.String
- readSettings(org.jdom.Element):V
- showDefaultConfigurationOptions():Z
- writeSettings(org.jdom.Element):V
com.intellij.codeInspection.InspectionSuppressor
- com.intellij.openapi.project.PossiblyDumbAware
- a:getSuppressActions(com.intellij.psi.PsiElement,java.lang.String):com.intellij.codeInspection.SuppressQuickFix[]
- a:isSuppressedFor(com.intellij.psi.PsiElement,java.lang.String):Z
com.intellij.codeInspection.InspectionToolProvider
- a:getInspectionClasses():java.lang.Class[]
f:com.intellij.codeInspection.InspectionsBundle
- sf:BUNDLE:java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
f:com.intellij.codeInspection.InspectionsDeprecatedMessagesBundle
- com.intellij.DynamicBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
com.intellij.codeInspection.InspectionsReportConverter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:convert(java.lang.String,java.lang.String,java.util.Map,java.util.List):V
- a:getFormatName():java.lang.String
- projectData(com.intellij.openapi.project.Project,java.nio.file.Path):V
- a:useTmpDirForRawData():Z
f:com.intellij.codeInspection.InspectionsReportConverter$ConversionException
- java.lang.Exception
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.Throwable):V
- <init>(java.lang.Throwable):V
a:com.intellij.codeInspection.IntentionAndQuickFixAction
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.codeInspection.LocalQuickFix
- <init>():V
- applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- a:applyFix(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):V
- a:getFamilyName():java.lang.String
- a:getName():java.lang.String
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
f:com.intellij.codeInspection.LanguageInspectionSuppressors
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.codeInspection.LanguageInspectionSuppressors
c:com.intellij.codeInspection.LocalInspectionEP
- com.intellij.codeInspection.InspectionEP
- sf:LOCAL_INSPECTION:com.intellij.openapi.extensions.ExtensionPointName
- alternativeId:java.lang.String
- dumbAware:Z
- dynamicGroup:Z
- id:java.lang.String
- runForWholeFile:Z
- unfair:Z
- <init>():V
- getDefaultAlternativeID():java.lang.String
- a:getDefaultDisplayName():java.lang.String
- a:getDefaultGroupDisplayName():java.lang.String
- getDefaultID():java.lang.String
- a:getDefaultShortName():java.lang.String
- a:getGroupKey():java.lang.String
a:com.intellij.codeInspection.LocalInspectionTool
- com.intellij.codeInspection.InspectionProfileEntry
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EMPTY_ARRAY:com.intellij.codeInspection.LocalInspectionTool[]
- sf:VALID_ID_PATTERN:java.lang.String
- <init>():V
- buildVisitor(com.intellij.codeInspection.ProblemsHolder,Z):com.intellij.psi.PsiElementVisitor
- buildVisitor(com.intellij.codeInspection.ProblemsHolder,Z,com.intellij.codeInspection.LocalInspectionToolSession):com.intellij.psi.PsiElementVisitor
- checkFile(com.intellij.psi.PsiFile,com.intellij.codeInspection.InspectionManager,Z):com.intellij.codeInspection.ProblemDescriptor[]
- getAlternativeID():java.lang.String
- getID():java.lang.String
- getProblemElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiNamedElement
- f:getSuppressId():java.lang.String
- inspectionFinished(com.intellij.codeInspection.LocalInspectionToolSession,com.intellij.codeInspection.ProblemsHolder):V
- inspectionStarted(com.intellij.codeInspection.LocalInspectionToolSession,Z):V
- isAvailableForFile(com.intellij.psi.PsiFile):Z
- s:isValidID(java.lang.String):Z
- processFile(com.intellij.psi.PsiFile,com.intellij.codeInspection.InspectionManager):java.util.List
- runForWholeFile():Z
f:com.intellij.codeInspection.LocalInspectionToolSession
- com.intellij.openapi.util.UserDataHolderBase
- getFile():com.intellij.psi.PsiFile
- getMinimumSeverity():com.intellij.lang.annotation.HighlightSeverity
- getPriorityRange():com.intellij.openapi.util.TextRange
- getRestrictRange():com.intellij.openapi.util.TextRange
com.intellij.codeInspection.LocalQuickFix
- com.intellij.codeInsight.intention.FileModifier
- com.intellij.codeInspection.QuickFix
- sf:EMPTY_ARRAY:com.intellij.codeInspection.LocalQuickFix[]
- availableInBatchMode():Z
- s:from(com.intellij.modcommand.ModCommandAction):com.intellij.codeInspection.LocalQuickFix
- generatePreview(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getRangesToHighlight(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):java.util.List
- s:notNullElements(com.intellij.codeInspection.LocalQuickFix):com.intellij.codeInspection.LocalQuickFix[]
- s:notNullElements(com.intellij.codeInspection.LocalQuickFix[]):com.intellij.codeInspection.LocalQuickFix[]
a:com.intellij.codeInspection.LocalQuickFixAndIntentionActionOnPsiElement
- com.intellij.codeInspection.LocalQuickFixOnPsiElement
- com.intellij.codeInsight.intention.IntentionAction
- p:<init>(com.intellij.psi.PsiElement):V
- p:<init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- f:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- a:invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- f:isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- isAvailable(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- startInWriteAction():Z
c:com.intellij.codeInspection.LocalQuickFixAsIntentionAdapter
- com.intellij.codeInsight.intention.CustomizableIntentionAction
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.openapi.diagnostic.ReportingClassSubstitutor
- <init>(com.intellij.codeInspection.LocalQuickFix,com.intellij.codeInspection.ProblemDescriptor):V
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- getRangesToHighlight(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- getSubstitutedClass():java.lang.Class
- getText():java.lang.String
- getTooltipText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- isSelectable():Z
- isShowIcon():Z
- isShowSubmenu():Z
- startInWriteAction():Z
c:com.intellij.codeInspection.LocalQuickFixBackedByIntentionAction
- com.intellij.codeInspection.LocalQuickFix
- com.intellij.openapi.diagnostic.ReportingClassSubstitutor
- com.intellij.openapi.util.Iconable
- <init>(com.intellij.codeInsight.intention.IntentionAction):V
- applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- equals(java.lang.Object):Z
- generatePreview(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- getIcon(I):javax.swing.Icon
- getName():java.lang.String
- getSubstitutedClass():java.lang.Class
- hashCode():I
- startInWriteAction():Z
a:com.intellij.codeInspection.LocalQuickFixBase
- com.intellij.codeInspection.LocalQuickFix
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,java.lang.String):V
- a:applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- getFamilyName():java.lang.String
- getName():java.lang.String
a:com.intellij.codeInspection.LocalQuickFixOnPsiElement
- com.intellij.codeInspection.LocalQuickFix
- java.lang.Cloneable
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- pf:myEndElement:com.intellij.psi.SmartPsiElementPointer
- pf:myStartElement:com.intellij.psi.SmartPsiElementPointer
- p:<init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- applyFix():V
- f:applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- p:clone():java.lang.Object
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getEndElement():com.intellij.psi.PsiElement
- getFileModifierForPreview(com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.FileModifier
- f:getName():java.lang.String
- getStartElement():com.intellij.psi.PsiElement
- a:getText():java.lang.String
- a:invoke(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- p:isAvailable():Z
- isAvailable(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
f:com.intellij.codeInspection.LocalQuickFixOnPsiElementAsIntentionAdapter
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.openapi.diagnostic.ReportingClassSubstitutor
- <init>(com.intellij.codeInspection.LocalQuickFixOnPsiElement):V
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- getFileModifierForPreview(com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.FileModifier
- getSubstitutedClass():java.lang.Class
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
com.intellij.codeInspection.LocalQuickFixProvider
- a:getQuickFixes():com.intellij.codeInspection.LocalQuickFix[]
com.intellij.codeInspection.ModuleProblemDescriptor
- com.intellij.codeInspection.CommonProblemDescriptor
- a:getModule():com.intellij.openapi.module.Module
com.intellij.codeInspection.ProblemDescriptionsProcessor
- addProblemElement(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.CommonProblemDescriptor[]):V
- getDescriptions(com.intellij.codeInspection.reference.RefEntity):com.intellij.codeInspection.CommonProblemDescriptor[]
- getElement(com.intellij.codeInspection.CommonProblemDescriptor):com.intellij.codeInspection.reference.RefEntity
- ignoreElement(com.intellij.codeInspection.reference.RefEntity):V
- s:resolveAllProblemsInElement(com.intellij.codeInspection.ProblemDescriptionsProcessor,com.intellij.codeInspection.reference.RefEntity):V
- resolveProblem(com.intellij.codeInspection.CommonProblemDescriptor):V
com.intellij.codeInspection.ProblemDescriptor
- com.intellij.codeInspection.CommonProblemDescriptor
- sf:EMPTY_ARRAY:com.intellij.codeInspection.ProblemDescriptor[]
- getDescriptorForPreview(com.intellij.psi.PsiFile):com.intellij.codeInspection.ProblemDescriptor
- a:getEndElement():com.intellij.psi.PsiElement
- a:getHighlightType():com.intellij.codeInspection.ProblemHighlightType
- a:getLineNumber():I
- a:getProblemGroup():com.intellij.lang.annotation.ProblemGroup
- a:getPsiElement():com.intellij.psi.PsiElement
- a:getStartElement():com.intellij.psi.PsiElement
- a:getTextRangeInElement():com.intellij.openapi.util.TextRange
- getTooltipTemplate():java.lang.String
- a:isAfterEndOfLine():Z
- a:setProblemGroup(com.intellij.lang.annotation.ProblemGroup):V
- a:setTextAttributes(com.intellij.openapi.editor.colors.TextAttributesKey):V
- a:showTooltip():Z
e:com.intellij.codeInspection.ProblemHighlightType
- java.lang.Enum
- sf:ERROR:com.intellij.codeInspection.ProblemHighlightType
- sf:GENERIC_ERROR:com.intellij.codeInspection.ProblemHighlightType
- sf:GENERIC_ERROR_OR_WARNING:com.intellij.codeInspection.ProblemHighlightType
- sf:INFO:com.intellij.codeInspection.ProblemHighlightType
- sf:INFORMATION:com.intellij.codeInspection.ProblemHighlightType
- sf:LIKE_DEPRECATED:com.intellij.codeInspection.ProblemHighlightType
- sf:LIKE_MARKED_FOR_REMOVAL:com.intellij.codeInspection.ProblemHighlightType
- sf:LIKE_UNKNOWN_SYMBOL:com.intellij.codeInspection.ProblemHighlightType
- sf:LIKE_UNUSED_SYMBOL:com.intellij.codeInspection.ProblemHighlightType
- sf:POSSIBLE_PROBLEM:com.intellij.codeInspection.ProblemHighlightType
- sf:WARNING:com.intellij.codeInspection.ProblemHighlightType
- sf:WEAK_WARNING:com.intellij.codeInspection.ProblemHighlightType
- s:valueOf(java.lang.String):com.intellij.codeInspection.ProblemHighlightType
- s:values():com.intellij.codeInspection.ProblemHighlightType[]
c:com.intellij.codeInspection.ProblemsHolder
- <init>(com.intellij.codeInspection.InspectionManager,com.intellij.psi.PsiFile,Z):V
- getFile():com.intellij.psi.PsiFile
- f:getManager():com.intellij.codeInspection.InspectionManager
- f:getProject():com.intellij.openapi.project.Project
- getResultCount():I
- getResults():java.util.List
- getResultsArray():com.intellij.codeInspection.ProblemDescriptor[]
- hasResults():Z
- isOnTheFly():Z
- problem(com.intellij.psi.PsiElement,java.lang.String):com.intellij.codeInspection.ProblemsHolder$ProblemBuilder
- registerPossibleProblem(com.intellij.psi.PsiElement):V
- registerProblem(com.intellij.codeInspection.ProblemDescriptor):V
- registerProblem(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.String,com.intellij.codeInspection.LocalQuickFix[]):V
- registerProblem(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.ProblemHighlightType,com.intellij.openapi.util.TextRange,com.intellij.codeInspection.LocalQuickFix[]):V
- registerProblem(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.ProblemHighlightType,com.intellij.codeInspection.LocalQuickFix[]):V
- registerProblem(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInspection.LocalQuickFix[]):V
- registerProblem(com.intellij.psi.PsiReference):V
- registerProblem(com.intellij.psi.PsiReference,com.intellij.codeInspection.ProblemHighlightType):V
- registerProblem(com.intellij.psi.PsiReference,java.lang.String,com.intellij.codeInspection.ProblemHighlightType):V
- registerProblemForReference(com.intellij.psi.PsiReference,com.intellij.codeInspection.ProblemHighlightType,java.lang.String,com.intellij.codeInspection.LocalQuickFix[]):V
- p:saveProblem(com.intellij.codeInspection.ProblemDescriptor):V
- s:unresolvedReferenceMessage(com.intellij.psi.PsiReference):java.lang.String
f:com.intellij.codeInspection.ProblemsHolder$ProblemBuilder
- fix(com.intellij.codeInspection.LocalQuickFix):com.intellij.codeInspection.ProblemsHolder$ProblemBuilder
- fix(com.intellij.modcommand.ModCommandAction):com.intellij.codeInspection.ProblemsHolder$ProblemBuilder
- highlight(com.intellij.codeInspection.ProblemHighlightType):com.intellij.codeInspection.ProblemsHolder$ProblemBuilder
- maybeFix(com.intellij.codeInspection.LocalQuickFix):com.intellij.codeInspection.ProblemsHolder$ProblemBuilder
- maybeFix(com.intellij.modcommand.ModCommandAction):com.intellij.codeInspection.ProblemsHolder$ProblemBuilder
- range(com.intellij.openapi.util.TextRange):com.intellij.codeInspection.ProblemsHolder$ProblemBuilder
- register():V
com.intellij.codeInspection.QuickFix
- com.intellij.openapi.application.WriteActionAware
- sf:EMPTY_ARRAY:com.intellij.codeInspection.QuickFix[]
- a:applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.CommonProblemDescriptor):V
- a:getFamilyName():java.lang.String
- getName():java.lang.String
com.intellij.codeInspection.RedundantSuppressionDetector
- com.intellij.openapi.project.PossiblyDumbAware
- a:createRemoveRedundantSuppressionFix(java.lang.String):com.intellij.codeInspection.LocalQuickFix
- getHighlightingRange(com.intellij.psi.PsiElement,java.lang.String):com.intellij.openapi.util.TextRange
- a:getSuppressionIds(com.intellij.psi.PsiElement):java.lang.String
- a:isSuppressionFor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.lang.String):Z
a:com.intellij.codeInspection.SuppressIntentionAction
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.openapi.util.Iconable
- sf:EMPTY_ARRAY:com.intellij.codeInspection.SuppressIntentionAction[]
- <init>():V
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getIcon(I):javax.swing.Icon
- getText():java.lang.String
- a:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):V
- f:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- a:isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):Z
- f:isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- isSuppressAll():Z
- p:setText(java.lang.String):V
- startInWriteAction():Z
com.intellij.codeInspection.SuppressQuickFix
- com.intellij.codeInspection.LocalQuickFix
- sf:EMPTY_ARRAY:com.intellij.codeInspection.SuppressQuickFix[]
- getPriority():I
- a:isAvailable(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement):Z
- a:isSuppressAll():Z
com.intellij.codeInspection.SuppressableProblemGroup
- com.intellij.lang.annotation.ProblemGroup
- a:getSuppressActions(com.intellij.psi.PsiElement):com.intellij.codeInspection.SuppressIntentionAction[]
a:com.intellij.codeInspection.ex.EntryPointsManager
- com.intellij.openapi.Disposable
- <init>():V
- a:addEntryPoint(com.intellij.codeInspection.reference.RefElement,Z):V
- a:cleanup():V
- a:configureAnnotations():V
- configureAnnotations(Z):V
- a:getEntryPoints(com.intellij.codeInspection.reference.RefManager):com.intellij.codeInspection.reference.RefElement[]
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.codeInspection.ex.EntryPointsManager
- a:isAddNonJavaEntries():Z
- a:isEntryPoint(com.intellij.psi.PsiElement):Z
- a:isImplicitWrite(com.intellij.psi.PsiElement):Z
- a:removeEntryPoint(com.intellij.codeInspection.reference.RefElement):V
- a:resolveEntryPoints(com.intellij.codeInspection.reference.RefManager):V
a:com.intellij.codeInspection.ex.InspectionElementsMerger
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getMergedToolName():java.lang.String
- s:getMergedToolNames(java.lang.String):java.util.List
- s:getMerger(java.lang.String):com.intellij.codeInspection.ex.InspectionElementsMerger
- a:getSourceToolNames():java.lang.String[]
- getSuppressIds():java.lang.String[]
a:com.intellij.codeInspection.ex.InspectionToolWrapper
- sf:EMPTY_ARRAY:com.intellij.codeInspection.ex.InspectionToolWrapper[]
- pf:myEP:com.intellij.codeInspection.InspectionEP
- p:myTool:com.intellij.codeInspection.InspectionProfileEntry
- p:<init>(com.intellij.codeInspection.InspectionEP):V
- p:<init>(com.intellij.codeInspection.InspectionProfileEntry):V
- p:<init>(com.intellij.codeInspection.InspectionProfileEntry,com.intellij.codeInspection.InspectionEP):V
- p:<init>(com.intellij.codeInspection.ex.InspectionToolWrapper):V
- applyToDialects():Z
- cleanup(com.intellij.openapi.project.Project):V
- a:createCopy():com.intellij.codeInspection.ex.InspectionToolWrapper
- getDefaultEditorAttributes():java.lang.String
- getDefaultLevel():com.intellij.codeHighlighting.HighlightDisplayLevel
- f:getDescriptionContextClass():java.lang.Class
- getDisplayKey():com.intellij.codeInsight.daemon.HighlightDisplayKey
- getDisplayName():java.lang.String
- f:getExtension():com.intellij.codeInspection.InspectionEP
- f:getFolderName():java.lang.String
- getGroupDisplayName():java.lang.String
- getGroupPath():java.lang.String[]
- getID():java.lang.String
- a:getJobDescriptors(com.intellij.codeInspection.GlobalInspectionContext):com.intellij.codeInspection.ex.JobDescriptor[]
- getLanguage():java.lang.String
- getMainToolId():java.lang.String
- getShortName():java.lang.String
- getStaticDescription():java.lang.String
- getTool():com.intellij.codeInspection.InspectionProfileEntry
- initialize(com.intellij.codeInspection.GlobalInspectionContext):V
- isApplicable(com.intellij.lang.Language):Z
- isApplicable(java.util.Set):Z
- isCleanupTool():Z
- isEnabledByDefault():Z
- isInitialized():Z
- loadDescription():java.lang.String
f:com.intellij.codeInspection.ex.InspectionToolsRegistrarCore
- <init>():V
f:com.intellij.codeInspection.ex.JobDescriptor
- sf:EMPTY_ARRAY:com.intellij.codeInspection.ex.JobDescriptor[]
- <init>(java.lang.String):V
- getDisplayName():java.lang.String
- getDoneAmount():I
- getProgress():F
- getTotalAmount():I
- setDoneAmount(I):V
- setTotalAmount(I):V
f:com.intellij.codeInspection.ex.QuickFixWrapper
- com.intellij.codeInsight.intention.CustomizableIntentionAction
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.codeInsight.intention.PriorityAction
- com.intellij.openapi.diagnostic.ReportingClassSubstitutor
- com.intellij.openapi.project.PossiblyDumbAware
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- getFile():com.intellij.psi.PsiFile
- getFix():com.intellij.codeInspection.LocalQuickFix
- s:getHighlightType(com.intellij.codeInsight.intention.IntentionAction):com.intellij.codeInspection.ProblemHighlightType
- getPriority():com.intellij.codeInsight.intention.PriorityAction$Priority
- getRangesToHighlight(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.List
- getSubstitutedClass():java.lang.Class
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- isDumbAware():Z
- startInWriteAction():Z
- s:unwrap(com.intellij.codeInsight.intention.CommonIntentionAction):com.intellij.codeInspection.LocalQuickFix
- s:unwrapFile(com.intellij.codeInsight.intention.IntentionAction):com.intellij.psi.PsiFile
- s:wrap(com.intellij.codeInspection.ProblemDescriptor,I):com.intellij.codeInsight.intention.IntentionAction
- s:wrap(com.intellij.codeInspection.ProblemDescriptor,com.intellij.codeInspection.LocalQuickFix):com.intellij.codeInsight.intention.IntentionAction
f:com.intellij.codeInspection.ex.ScopeToolState
- <init>(com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.codeInspection.ex.InspectionToolWrapper,Z,com.intellij.codeHighlighting.HighlightDisplayLevel):V
- <init>(java.lang.String,com.intellij.codeInspection.ex.InspectionToolWrapper,Z,com.intellij.codeHighlighting.HighlightDisplayLevel):V
- s:areSettingsEqual(com.intellij.codeInspection.ex.InspectionToolWrapper,com.intellij.codeInspection.ex.InspectionToolWrapper):Z
- copy():com.intellij.codeInspection.ex.ScopeToolState
- equalTo(com.intellij.codeInspection.ex.ScopeToolState):Z
- getAdditionalConfigPanel(com.intellij.openapi.Disposable,com.intellij.openapi.project.Project):javax.swing.JComponent
- getEditorAttributesExternalName():java.lang.String
- getEditorAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- getLevel():com.intellij.codeHighlighting.HighlightDisplayLevel
- getScope(com.intellij.openapi.project.Project):com.intellij.psi.search.scope.packageSet.NamedScope
- getScopeName():java.lang.String
- getTool():com.intellij.codeInspection.ex.InspectionToolWrapper
- isEnabled():Z
- resetConfigPanel():V
- scopesChanged():V
- setEditorAttributesExternalName(java.lang.String):V
- setEnabled(Z):V
- setLevel(com.intellij.codeHighlighting.HighlightDisplayLevel):V
- setTool(com.intellij.codeInspection.ex.InspectionToolWrapper):V
- s:tryReadSettings(com.intellij.codeInspection.InspectionProfileEntry,org.jdom.Element):V
- s:tryWriteSettings(com.intellij.codeInspection.InspectionProfileEntry,org.jdom.Element):V
f:com.intellij.codeInspection.ex.StdJobDescriptors
- f:BUILD_GRAPH:com.intellij.codeInspection.ex.JobDescriptor
- f:BUILD_GRAPH_ONLY:com.intellij.codeInspection.ex.JobDescriptor[]
- f:FIND_EXTERNAL_USAGES:com.intellij.codeInspection.ex.JobDescriptor
- f:LOCAL_ANALYSIS_ARRAY:com.intellij.codeInspection.ex.JobDescriptor[]
- <init>():V
f:com.intellij.codeInspection.ex.ToolLanguageUtil
- s:getAllMatchingLanguages(java.lang.String,Z):java.util.Set
- s:isToolLanguageOneOf(java.util.Set,java.lang.String,Z):Z
com.intellij.codeInspection.ex.Tools
- a:collectTools(java.util.List):V
- a:getDefaultState():com.intellij.codeInspection.ex.ScopeToolState
- a:getEnabledTool(com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.InspectionToolWrapper
- getEnabledTool(com.intellij.psi.PsiElement,Z):com.intellij.codeInspection.ex.InspectionToolWrapper
- a:getInspectionTool(com.intellij.psi.PsiElement):com.intellij.codeInspection.ex.InspectionToolWrapper
- a:getShortName():java.lang.String
- a:getTool():com.intellij.codeInspection.ex.InspectionToolWrapper
- a:getTools():java.util.List
- a:isEnabled():Z
- a:isEnabled(com.intellij.psi.PsiElement):Z
com.intellij.codeInspection.lang.GlobalInspectionContextExtension
- a:cleanup():V
- a:getID():com.intellij.openapi.util.Key
- a:performPostRunActivities(java.util.List,com.intellij.codeInspection.GlobalInspectionContext):V
- performPreInitToolsActivities(java.util.List,com.intellij.codeInspection.GlobalInspectionContext):V
- a:performPreRunActivities(java.util.List,java.util.List,com.intellij.codeInspection.GlobalInspectionContext):V
com.intellij.codeInspection.lang.HTMLComposerExtension
- a:appendLocation(com.intellij.codeInspection.reference.RefEntity,java.lang.StringBuilder):V
- a:appendReferencePresentation(com.intellij.codeInspection.reference.RefEntity,java.lang.StringBuilder,Z):V
- a:appendShortName(com.intellij.codeInspection.reference.RefEntity,java.lang.StringBuilder):V
- a:getID():com.intellij.openapi.util.Key
- a:getLanguage():com.intellij.lang.Language
- getLanguages():java.util.Collection
- a:getQualifiedName(com.intellij.codeInspection.reference.RefEntity):java.lang.String
a:com.intellij.codeInspection.lang.InspectionExtensionsFactory
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:createGlobalInspectionContextExtension():com.intellij.codeInspection.lang.GlobalInspectionContextExtension
- a:createHTMLComposerExtension(com.intellij.codeInspection.HTMLComposer):com.intellij.codeInspection.lang.HTMLComposerExtension
- a:createRefManagerExtension(com.intellij.codeInspection.reference.RefManager):com.intellij.codeInspection.lang.RefManagerExtension
- a:getSuppressedInspectionIdsIn(com.intellij.psi.PsiElement):java.lang.String
- isProjectConfiguredToRunInspections(com.intellij.openapi.project.Project,Z,java.lang.Runnable):Z
- a:isToCheckMember(com.intellij.psi.PsiElement,java.lang.String):Z
com.intellij.codeInspection.lang.RefManagerExtension
- a:belongsToScope(com.intellij.psi.PsiElement):Z
- a:cleanup():V
- a:createRefElement(com.intellij.psi.PsiElement):com.intellij.codeInspection.reference.RefElement
- a:export(com.intellij.codeInspection.reference.RefEntity,org.jdom.Element):V
- extractExternalFileImplicitReferences(com.intellij.psi.PsiFile):java.util.stream.Stream
- getElementContainer(com.intellij.psi.PsiElement):com.intellij.psi.PsiNamedElement
- a:getGroupName(com.intellij.codeInspection.reference.RefEntity):java.lang.String
- a:getID():com.intellij.openapi.util.Key
- getLanguage():com.intellij.lang.Language
- getLanguages():java.util.Collection
- a:getReference(java.lang.String,java.lang.String):com.intellij.codeInspection.reference.RefEntity
- a:getRefinedElement(com.intellij.codeInspection.reference.RefEntity):com.intellij.codeInspection.reference.RefEntity
- a:getType(com.intellij.codeInspection.reference.RefEntity):java.lang.String
- a:iterate(com.intellij.codeInspection.reference.RefVisitor):V
- markExternalReferencesProcessed(com.intellij.codeInspection.reference.RefElement):V
- a:onEntityInitialized(com.intellij.codeInspection.reference.RefElement,com.intellij.psi.PsiElement):V
- a:removeReference(com.intellij.codeInspection.reference.RefElement):V
- shouldProcessExternalFile(com.intellij.psi.PsiFile):Z
- a:visitElement(com.intellij.psi.PsiElement):V
f:com.intellij.codeInspection.options.CommonOptionPanes
- s:conventions(java.lang.String,java.lang.String,java.lang.String,com.intellij.codeInspection.options.OptRegularComponent[]):com.intellij.codeInspection.options.OptPane
com.intellij.codeInspection.options.LocMessage
- a:label():java.lang.String
- splitLabel():com.intellij.codeInspection.options.LocMessage$PrefixSuffix
f:com.intellij.codeInspection.options.LocMessage$PrefixSuffix
- java.lang.Record
- <init>(java.lang.String,java.lang.String):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- prefix():java.lang.String
- suffix():java.lang.String
f:com.intellij.codeInspection.options.OptCheckbox
- java.lang.Record
- com.intellij.codeInspection.options.OptControl
- com.intellij.codeInspection.options.OptDescribedComponent
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(java.lang.String,com.intellij.codeInspection.options.LocMessage,java.util.List,com.intellij.openapi.util.text.HtmlChunk):V
- bindId():java.lang.String
- children():java.util.List
- description():com.intellij.openapi.util.text.HtmlChunk
- description(com.intellij.openapi.util.text.HtmlChunk):com.intellij.codeInspection.options.OptCheckbox
- description(java.lang.String):com.intellij.codeInspection.options.OptCheckbox
- f:equals(java.lang.Object):Z
- f:hashCode():I
- label():com.intellij.codeInspection.options.LocMessage
- prefix(java.lang.String):com.intellij.codeInspection.options.OptCheckbox
f:com.intellij.codeInspection.options.OptCheckboxPanel
- java.lang.Record
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(java.util.List):V
- children():java.util.List
- f:equals(java.lang.Object):Z
- f:hashCode():I
- prefix(java.lang.String):com.intellij.codeInspection.options.OptCheckboxPanel
com.intellij.codeInspection.options.OptComponent
- children():java.util.List
- prefix(java.lang.String):com.intellij.codeInspection.options.OptComponent
com.intellij.codeInspection.options.OptControl
- com.intellij.codeInspection.options.OptComponent
- a:bindId():java.lang.String
- getValue(com.intellij.codeInspection.InspectionProfileEntry):java.lang.Object
- setValue(com.intellij.codeInspection.InspectionProfileEntry,java.lang.Object):V
f:com.intellij.codeInspection.options.OptCustom
- java.lang.Record
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String):V
- componentId():java.lang.String
- data():java.lang.String
- f:equals(java.lang.Object):Z
- f:hashCode():I
com.intellij.codeInspection.options.OptDescribedComponent
- a:description():com.intellij.openapi.util.text.HtmlChunk
- a:description(com.intellij.openapi.util.text.HtmlChunk):com.intellij.codeInspection.options.OptRegularComponent
- a:description(java.lang.String):com.intellij.codeInspection.options.OptRegularComponent
f:com.intellij.codeInspection.options.OptDropdown
- java.lang.Record
- com.intellij.codeInspection.options.OptControl
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(java.lang.String,com.intellij.codeInspection.options.LocMessage,java.util.List):V
- bindId():java.lang.String
- f:equals(java.lang.Object):Z
- findOption(java.lang.Object):com.intellij.codeInspection.options.OptDropdown$Option
- f:hashCode():I
- options():java.util.List
- prefix(java.lang.String):com.intellij.codeInspection.options.OptDropdown
- splitLabel():com.intellij.codeInspection.options.LocMessage
f:com.intellij.codeInspection.options.OptDropdown$Option
- java.lang.Record
- <init>(java.lang.String,com.intellij.codeInspection.options.LocMessage):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- key():java.lang.String
- label():com.intellij.codeInspection.options.LocMessage
f:com.intellij.codeInspection.options.OptExpandableString
- java.lang.Record
- com.intellij.codeInspection.options.OptControl
- com.intellij.codeInspection.options.OptDescribedComponent
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(java.lang.String,com.intellij.codeInspection.options.LocMessage,java.lang.String,com.intellij.openapi.util.text.HtmlChunk):V
- bindId():java.lang.String
- description():com.intellij.openapi.util.text.HtmlChunk
- description(com.intellij.openapi.util.text.HtmlChunk):com.intellij.codeInspection.options.OptExpandableString
- description(java.lang.String):com.intellij.codeInspection.options.OptExpandableString
- f:equals(java.lang.Object):Z
- f:hashCode():I
- label():com.intellij.codeInspection.options.LocMessage
- prefix(java.lang.String):com.intellij.codeInspection.options.OptExpandableString
- separator():java.lang.String
f:com.intellij.codeInspection.options.OptGroup
- java.lang.Record
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(com.intellij.codeInspection.options.LocMessage,java.util.List):V
- children():java.util.List
- f:equals(java.lang.Object):Z
- f:hashCode():I
- label():com.intellij.codeInspection.options.LocMessage
- prefix(java.lang.String):com.intellij.codeInspection.options.OptGroup
f:com.intellij.codeInspection.options.OptHorizontalStack
- java.lang.Record
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(java.util.List):V
- children():java.util.List
- f:equals(java.lang.Object):Z
- f:hashCode():I
- prefix(java.lang.String):com.intellij.codeInspection.options.OptHorizontalStack
f:com.intellij.codeInspection.options.OptNumber
- java.lang.Record
- com.intellij.codeInspection.options.OptControl
- com.intellij.codeInspection.options.OptDescribedComponent
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(java.lang.String,com.intellij.codeInspection.options.LocMessage,I,I,com.intellij.openapi.util.text.HtmlChunk):V
- bindId():java.lang.String
- description():com.intellij.openapi.util.text.HtmlChunk
- description(com.intellij.openapi.util.text.HtmlChunk):com.intellij.codeInspection.options.OptNumber
- description(java.lang.String):com.intellij.codeInspection.options.OptNumber
- f:equals(java.lang.Object):Z
- f:hashCode():I
- maxValue():I
- minValue():I
- prefix(java.lang.String):com.intellij.codeInspection.options.OptNumber
- splitLabel():com.intellij.codeInspection.options.LocMessage
f:com.intellij.codeInspection.options.OptPane
- java.lang.Record
- sf:EMPTY:com.intellij.codeInspection.options.OptPane
- <init>(java.util.List):V
- allControls():java.util.List
- append(com.intellij.codeInspection.options.OptRegularComponent[]):com.intellij.codeInspection.options.OptPane
- asCheckbox(java.lang.String,java.lang.String):com.intellij.codeInspection.options.OptCheckbox
- asTab(java.lang.String):com.intellij.codeInspection.options.OptTab
- s:checkbox(java.lang.String,java.lang.String,com.intellij.codeInspection.options.OptRegularComponent[]):com.intellij.codeInspection.options.OptCheckbox
- s:checkboxPanel(com.intellij.codeInspection.options.OptCheckbox[]):com.intellij.codeInspection.options.OptCheckboxPanel
- s:column(java.lang.String,java.lang.String):com.intellij.codeInspection.options.OptTableColumn
- s:column(java.lang.String,java.lang.String,com.intellij.codeInspection.options.StringValidator):com.intellij.codeInspection.options.OptTableColumn
- components():java.util.List
- s:dropdown(java.lang.String,java.lang.String,java.lang.Class,java.util.function.Function):com.intellij.codeInspection.options.OptDropdown
- s:dropdown(java.lang.String,java.lang.String,java.util.Collection,java.util.function.Function,java.util.function.Function):com.intellij.codeInspection.options.OptDropdown
- s:dropdown(java.lang.String,java.lang.String,com.intellij.codeInspection.options.OptDropdown$Option[]):com.intellij.codeInspection.options.OptDropdown
- f:equals(java.lang.Object):Z
- s:expandableString(java.lang.String,java.lang.String,java.lang.String):com.intellij.codeInspection.options.OptExpandableString
- findControl(java.lang.String):com.intellij.codeInspection.options.OptControl
- s:group(java.lang.String,com.intellij.codeInspection.options.OptRegularComponent[]):com.intellij.codeInspection.options.OptGroup
- f:hashCode():I
- s:horizontalStack(com.intellij.codeInspection.options.OptRegularComponent[]):com.intellij.codeInspection.options.OptHorizontalStack
- s:number(java.lang.String,java.lang.String,I,I):com.intellij.codeInspection.options.OptNumber
- s:option(java.lang.Enum,java.lang.String):com.intellij.codeInspection.options.OptDropdown$Option
- s:option(java.lang.String,java.lang.String):com.intellij.codeInspection.options.OptDropdown$Option
- s:pane(com.intellij.codeInspection.options.OptRegularComponent[]):com.intellij.codeInspection.options.OptPane
- prefix(java.lang.String):com.intellij.codeInspection.options.OptPane
- prepend(com.intellij.codeInspection.options.OptRegularComponent[]):com.intellij.codeInspection.options.OptPane
- s:separator():com.intellij.codeInspection.options.OptSeparator
- s:separator(java.lang.String):com.intellij.codeInspection.options.OptSeparator
- s:settingLink(java.lang.String,java.lang.String):com.intellij.codeInspection.options.OptSettingLink
- s:settingLink(java.lang.String,java.lang.String,java.lang.String):com.intellij.codeInspection.options.OptSettingLink
- s:string(java.lang.String,java.lang.String):com.intellij.codeInspection.options.OptString
- s:string(java.lang.String,java.lang.String,I):com.intellij.codeInspection.options.OptString
- s:string(java.lang.String,java.lang.String,I,com.intellij.codeInspection.options.StringValidator):com.intellij.codeInspection.options.OptString
- s:string(java.lang.String,java.lang.String,com.intellij.codeInspection.options.StringValidator):com.intellij.codeInspection.options.OptString
- s:stringList(java.lang.String,java.lang.String):com.intellij.codeInspection.options.OptStringList
- s:stringList(java.lang.String,java.lang.String,com.intellij.codeInspection.options.StringValidator):com.intellij.codeInspection.options.OptStringList
- s:tab(java.lang.String,com.intellij.codeInspection.options.OptRegularComponent[]):com.intellij.codeInspection.options.OptTab
- s:table(java.lang.String,com.intellij.codeInspection.options.OptTableColumn[]):com.intellij.codeInspection.options.OptTable
- s:tabs(com.intellij.codeInspection.options.OptTab[]):com.intellij.codeInspection.options.OptTabSet
com.intellij.codeInspection.options.OptRegularComponent
- com.intellij.codeInspection.options.OptComponent
- prefix(java.lang.String):com.intellij.codeInspection.options.OptRegularComponent
f:com.intellij.codeInspection.options.OptSeparator
- java.lang.Record
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(com.intellij.codeInspection.options.LocMessage):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- label():com.intellij.codeInspection.options.LocMessage
f:com.intellij.codeInspection.options.OptSettingLink
- java.lang.Record
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(com.intellij.codeInspection.options.LocMessage,java.lang.String,java.lang.String):V
- configurableID():java.lang.String
- controlLabel():java.lang.String
- displayName():com.intellij.codeInspection.options.LocMessage
- f:equals(java.lang.Object):Z
- f:hashCode():I
f:com.intellij.codeInspection.options.OptString
- java.lang.Record
- com.intellij.codeInspection.options.OptControl
- com.intellij.codeInspection.options.OptDescribedComponent
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(java.lang.String,com.intellij.codeInspection.options.LocMessage,com.intellij.codeInspection.options.StringValidator,I,com.intellij.openapi.util.text.HtmlChunk):V
- bindId():java.lang.String
- description():com.intellij.openapi.util.text.HtmlChunk
- description(com.intellij.openapi.util.text.HtmlChunk):com.intellij.codeInspection.options.OptString
- description(java.lang.String):com.intellij.codeInspection.options.OptString
- f:equals(java.lang.Object):Z
- f:hashCode():I
- prefix(java.lang.String):com.intellij.codeInspection.options.OptString
- splitLabel():com.intellij.codeInspection.options.LocMessage
- validator():com.intellij.codeInspection.options.StringValidator
- width():I
f:com.intellij.codeInspection.options.OptStringList
- java.lang.Record
- com.intellij.codeInspection.options.OptControl
- com.intellij.codeInspection.options.OptDescribedComponent
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(java.lang.String,com.intellij.codeInspection.options.LocMessage,com.intellij.codeInspection.options.StringValidator,com.intellij.openapi.util.text.HtmlChunk):V
- bindId():java.lang.String
- description():com.intellij.openapi.util.text.HtmlChunk
- description(com.intellij.openapi.util.text.HtmlChunk):com.intellij.codeInspection.options.OptStringList
- description(java.lang.String):com.intellij.codeInspection.options.OptStringList
- f:equals(java.lang.Object):Z
- f:hashCode():I
- label():com.intellij.codeInspection.options.LocMessage
- prefix(java.lang.String):com.intellij.codeInspection.options.OptStringList
- validator():com.intellij.codeInspection.options.StringValidator
f:com.intellij.codeInspection.options.OptTab
- java.lang.Record
- com.intellij.codeInspection.options.OptComponent
- <init>(com.intellij.codeInspection.options.LocMessage,java.util.List):V
- children():java.util.List
- f:equals(java.lang.Object):Z
- f:hashCode():I
- label():com.intellij.codeInspection.options.LocMessage
- prefix(java.lang.String):com.intellij.codeInspection.options.OptTab
f:com.intellij.codeInspection.options.OptTabSet
- java.lang.Record
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(java.util.List):V
- children():java.util.List
- f:equals(java.lang.Object):Z
- f:hashCode():I
- prefix(java.lang.String):com.intellij.codeInspection.options.OptTabSet
f:com.intellij.codeInspection.options.OptTable
- java.lang.Record
- com.intellij.codeInspection.options.OptDescribedComponent
- com.intellij.codeInspection.options.OptRegularComponent
- <init>(com.intellij.codeInspection.options.LocMessage,java.util.List,com.intellij.openapi.util.text.HtmlChunk):V
- children():java.util.List
- description():com.intellij.openapi.util.text.HtmlChunk
- description(com.intellij.openapi.util.text.HtmlChunk):com.intellij.codeInspection.options.OptTable
- description(java.lang.String):com.intellij.codeInspection.options.OptTable
- f:equals(java.lang.Object):Z
- f:hashCode():I
- label():com.intellij.codeInspection.options.LocMessage
- prefix(java.lang.String):com.intellij.codeInspection.options.OptTable
f:com.intellij.codeInspection.options.OptTableColumn
- java.lang.Record
- com.intellij.codeInspection.options.OptControl
- <init>(java.lang.String,com.intellij.codeInspection.options.LocMessage,com.intellij.codeInspection.options.StringValidator):V
- bindId():java.lang.String
- f:equals(java.lang.Object):Z
- f:hashCode():I
- name():com.intellij.codeInspection.options.LocMessage
- prefix(java.lang.String):com.intellij.codeInspection.options.OptTableColumn
- validator():com.intellij.codeInspection.options.StringValidator
com.intellij.codeInspection.options.OptionContainer
- getOptionController():com.intellij.codeInspection.options.OptionController
com.intellij.codeInspection.options.OptionController
- s:empty():com.intellij.codeInspection.options.OptionController
- s:fieldsOf(java.lang.Object):com.intellij.codeInspection.options.OptionController
- findControl(java.lang.String):com.intellij.codeInspection.options.OptionController$OptionControlInfo
- a:getOption(java.lang.String):java.lang.Object
- s:of(java.util.function.Function,java.util.function.BiConsumer):com.intellij.codeInspection.options.OptionController
- onPrefix(java.lang.String,com.intellij.codeInspection.options.OptionController):com.intellij.codeInspection.options.OptionController
- onPrefix(java.lang.String,java.util.function.Function,java.util.function.BiConsumer):com.intellij.codeInspection.options.OptionController
- onPrefixes(java.util.function.Function):com.intellij.codeInspection.options.OptionController
- onValue(java.lang.String,java.util.function.Supplier):com.intellij.codeInspection.options.OptionController
- onValue(java.lang.String,java.util.function.Supplier,java.util.function.Consumer):com.intellij.codeInspection.options.OptionController
- onValue(java.lang.String,kotlin.reflect.KMutableProperty0):com.intellij.codeInspection.options.OptionController
- onValueSet(java.lang.String,java.util.function.Consumer):com.intellij.codeInspection.options.OptionController
- onValueSet(java.util.function.BiConsumer):com.intellij.codeInspection.options.OptionController
- a:setOption(java.lang.String,java.lang.Object):V
- withRootPane(java.util.function.Supplier):com.intellij.codeInspection.options.OptionController
f:com.intellij.codeInspection.options.OptionController$OptionControlInfo
- java.lang.Record
- <init>(com.intellij.codeInspection.options.OptPane,com.intellij.codeInspection.options.OptControl):V
- control():com.intellij.codeInspection.options.OptControl
- f:equals(java.lang.Object):Z
- f:hashCode():I
- pane():com.intellij.codeInspection.options.OptPane
f:com.intellij.codeInspection.options.PlainMessage
- java.lang.Record
- com.intellij.codeInspection.options.LocMessage
- <init>(java.lang.String):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- label():java.lang.String
f:com.intellij.codeInspection.options.RegexValidator
- com.intellij.codeInspection.options.StringValidator
- <init>():V
- getErrorMessage(com.intellij.openapi.project.Project,java.lang.String):java.lang.String
- validatorId():java.lang.String
com.intellij.codeInspection.options.StringValidator
- a:getErrorMessage(com.intellij.openapi.project.Project,java.lang.String):java.lang.String
- s:of(java.lang.String,java.util.function.Function):com.intellij.codeInspection.options.StringValidator
- a:validatorId():java.lang.String
a:com.intellij.codeInspection.reference.EntryPoint
- com.intellij.openapi.util.JDOMExternalizable
- java.lang.Cloneable
- <init>():V
- clone():com.intellij.codeInspection.reference.EntryPoint
- a:getDisplayName():java.lang.String
- getIgnoreAnnotations():java.lang.String[]
- a:isEntryPoint(com.intellij.codeInspection.reference.RefElement,com.intellij.psi.PsiElement):Z
- a:isEntryPoint(com.intellij.psi.PsiElement):Z
- a:isSelected():Z
- a:setSelected(Z):V
- showUI():Z
com.intellij.codeInspection.reference.RefDirectory
- com.intellij.codeInspection.reference.RefElement
com.intellij.codeInspection.reference.RefElement
- com.intellij.codeInspection.reference.RefEntity
- areReferencesBuilt():Z
- buildReferences():V
- a:getContainingEntry():com.intellij.codeInspection.reference.RefElement
- getElement():com.intellij.psi.PsiElement
- a:getInReferences():java.util.Collection
- a:getModule():com.intellij.codeInspection.reference.RefModule
- a:getOutReferences():java.util.Collection
- a:getPointer():com.intellij.psi.SmartPsiElementPointer
- getPsiElement():com.intellij.psi.PsiElement
- initializeIfNeeded():V
- a:isEntry():Z
- isInitialized():Z
- a:isPermanentEntry():Z
- a:isReachable():Z
- a:isReferenced():Z
- isSuppressed(java.lang.String[]):Z
com.intellij.codeInspection.reference.RefEntity
- com.intellij.openapi.util.UserDataHolder
- sf:EMPTY_ELEMENTS_ARRAY:com.intellij.codeInspection.reference.RefEntity[]
- a:accept(com.intellij.codeInspection.reference.RefVisitor):V
- a:getChildren():java.util.List
- a:getExternalName():java.lang.String
- a:getIcon(Z):javax.swing.Icon
- a:getName():java.lang.String
- a:getOwner():com.intellij.codeInspection.reference.RefEntity
- a:getQualifiedName():java.lang.String
- a:getRefManager():com.intellij.codeInspection.reference.RefManager
- a:isValid():Z
com.intellij.codeInspection.reference.RefFile
- com.intellij.codeInspection.reference.RefElement
- getElement():com.intellij.psi.PsiFile
- getPsiElement():com.intellij.psi.PsiFile
a:com.intellij.codeInspection.reference.RefGraphAnnotator
- <init>():V
- onInitialize(com.intellij.codeInspection.reference.RefElement):V
- onMarkReferenced(com.intellij.codeInspection.reference.RefElement,com.intellij.codeInspection.reference.RefElement,Z):V
- onMarkReferenced(com.intellij.codeInspection.reference.RefElement,com.intellij.codeInspection.reference.RefElement,Z,Z,Z):V
- onMarkReferenced(com.intellij.codeInspection.reference.RefElement,com.intellij.codeInspection.reference.RefElement,Z,Z,Z,com.intellij.psi.PsiElement):V
- onMarkReferenced(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):V
- onReferencesBuild(com.intellij.codeInspection.reference.RefElement):V
c:com.intellij.codeInspection.reference.RefGraphAnnotatorEx
- com.intellij.codeInspection.reference.RefGraphAnnotator
- <init>():V
- initialize(com.intellij.codeInspection.reference.RefManager):V
a:com.intellij.codeInspection.reference.RefManager
- <init>():V
- a:belongsToScope(com.intellij.psi.PsiElement):Z
- executeTask(java.lang.Runnable):V
- export(com.intellij.codeInspection.reference.RefEntity):org.jdom.Element
- export(com.intellij.codeInspection.reference.RefEntity,I):org.jdom.Element
- export(com.intellij.codeInspection.reference.RefEntity,org.jdom.Element,I):org.jdom.Element
- getContainerElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiNamedElement
- a:getExtension(com.intellij.openapi.util.Key):java.lang.Object
- a:getGroupName(com.intellij.codeInspection.reference.RefElement):java.lang.String
- a:getLastUsedMask():J
- a:getProject():com.intellij.openapi.project.Project
- a:getPsiManager():com.intellij.psi.PsiManager
- a:getQualifiedName(com.intellij.codeInspection.reference.RefEntity):java.lang.String
- a:getRefModule(com.intellij.openapi.module.Module):com.intellij.codeInspection.reference.RefModule
- a:getRefProject():com.intellij.codeInspection.reference.RefProject
- a:getReference(com.intellij.psi.PsiElement):com.intellij.codeInspection.reference.RefElement
- a:getReference(java.lang.String,java.lang.String):com.intellij.codeInspection.reference.RefEntity
- a:getRefinedElement(com.intellij.codeInspection.reference.RefEntity):com.intellij.codeInspection.reference.RefEntity
- a:getScope():com.intellij.analysis.AnalysisScope
- a:getType(com.intellij.codeInspection.reference.RefEntity):java.lang.String
- isInGraph(com.intellij.openapi.vfs.VirtualFile):Z
- a:iterate(com.intellij.codeInspection.reference.RefVisitor):V
- a:removeRefElement(com.intellij.codeInspection.reference.RefElement,java.util.List):V
com.intellij.codeInspection.reference.RefModule
- com.intellij.codeInspection.reference.RefEntity
- a:getModule():com.intellij.openapi.module.Module
com.intellij.codeInspection.reference.RefProject
- com.intellij.codeInspection.reference.RefEntity
f:com.intellij.codeInspection.reference.RefUtil
- s:contains(com.intellij.codeInspection.reference.RefEntity,java.util.Collection):Z
- s:isImplicitRead(com.intellij.psi.PsiElement):Z
- s:isImplicitUsage(com.intellij.psi.PsiElement):Z
- s:isImplicitWrite(com.intellij.psi.PsiElement):Z
c:com.intellij.codeInspection.reference.RefVisitor
- <init>():V
- visitDirectory(com.intellij.codeInspection.reference.RefDirectory):V
- visitElement(com.intellij.codeInspection.reference.RefEntity):V
- visitFile(com.intellij.codeInspection.reference.RefFile):V
- visitModule(com.intellij.codeInspection.reference.RefModule):V
com.intellij.codeInspection.reference.SmartRefElementPointer
- sf:DIR:java.lang.String
- sf:FILE:java.lang.String
- sf:MODULE:java.lang.String
- sf:PROJECT:java.lang.String
- a:freeReference():V
- a:getFQName():java.lang.String
- a:getRefElement():com.intellij.codeInspection.reference.RefEntity
- a:isPersistent():Z
- a:resolve(com.intellij.codeInspection.reference.RefManager):Z
- a:writeExternal(org.jdom.Element):V
com.intellij.codeInspection.ui.OptionAccessor
- a:getOption(java.lang.String):Z
- a:setOption(java.lang.String,Z):V
f:com.intellij.codeInspection.ui.OptionAccessor$Default
- com.intellij.codeInspection.ui.OptionAccessor
- <init>(com.intellij.codeInspection.InspectionProfileEntry):V
- getOption(java.lang.String):Z
- setOption(java.lang.String,Z):V
@:com.intellij.codeInspection.util.InspectionMessage
- java.lang.annotation.Annotation
@:com.intellij.codeInspection.util.IntentionFamilyName
- java.lang.annotation.Annotation
@:com.intellij.codeInspection.util.IntentionName
- java.lang.annotation.Annotation
f:com.intellij.codeInspection.util.RefEntityAlphabeticalComparator
- java.util.Comparator
- <init>():V
- compare(com.intellij.codeInspection.reference.RefEntity,com.intellij.codeInspection.reference.RefEntity):I
- s:getInstance():com.intellij.codeInspection.util.RefEntityAlphabeticalComparator
a:com.intellij.ide.PlatformIdeService
- <init>():V
- createHyperlinkConsumer():java.util.function.BiConsumer
- s:getInstance():com.intellij.ide.PlatformIdeService
- notification(java.lang.String,com.intellij.ide.PlatformIdeService$NotificationType,java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.project.Project,java.lang.String):V
- notification(java.lang.String,com.intellij.ide.PlatformIdeService$NotificationType,java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.project.Project,java.lang.String,java.util.function.BiConsumer):V
e:com.intellij.ide.PlatformIdeService$NotificationType
- java.lang.Enum
- sf:ERROR:com.intellij.ide.PlatformIdeService$NotificationType
- sf:INFORMATION:com.intellij.ide.PlatformIdeService$NotificationType
- sf:WARNING:com.intellij.ide.PlatformIdeService$NotificationType
- s:valueOf(java.lang.String):com.intellij.ide.PlatformIdeService$NotificationType
- s:values():com.intellij.ide.PlatformIdeService$NotificationType[]
@:com.intellij.ide.presentation.Presentation
- java.lang.annotation.Annotation
- a:icon():java.lang.String
- a:provider():java.lang.Class
- a:typeName():java.lang.String
a:com.intellij.ide.presentation.PresentationProvider
- <init>():V
- getIcon(java.lang.Object):javax.swing.Icon
- getName(java.lang.Object):java.lang.String
- getTypeName(java.lang.Object):java.lang.String
a:com.intellij.ide.scratch.RootType
- sf:ROOT_EP:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(java.lang.String,java.lang.String):V
- containsFile(com.intellij.openapi.vfs.VirtualFile):Z
- fileOpened(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.FileEditorManager):V
- s:findByClass(java.lang.Class):com.intellij.ide.scratch.RootType
- s:findById(java.lang.String):com.intellij.ide.scratch.RootType
- findFile(com.intellij.openapi.project.Project,java.lang.String,com.intellij.ide.scratch.ScratchFileService$Option):com.intellij.openapi.vfs.VirtualFile
- s:forFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.ide.scratch.RootType
- s:getAllRootTypes():java.util.List
- f:getDisplayName():java.lang.String
- f:getId():java.lang.String
- isHidden():Z
- isIgnored(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- patchIcon(javax.swing.Icon,com.intellij.openapi.vfs.VirtualFile,I,com.intellij.openapi.project.Project):javax.swing.Icon
- registerTreeUpdater(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,java.lang.Runnable):V
- substituteIcon(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):javax.swing.Icon
- substituteLanguage(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.lang.Language
- substituteName(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
a:com.intellij.ide.scratch.ScratchFileService
- <init>():V
- a:findFile(com.intellij.ide.scratch.RootType,java.lang.String,com.intellij.ide.scratch.ScratchFileService$Option):com.intellij.openapi.vfs.VirtualFile
- s:findRootType(com.intellij.openapi.vfs.VirtualFile):com.intellij.ide.scratch.RootType
- s:getAllRootPaths():java.util.Set
- s:getInstance():com.intellij.ide.scratch.ScratchFileService
- a:getRootPath(com.intellij.ide.scratch.RootType):java.lang.String
- a:getRootType(com.intellij.openapi.vfs.VirtualFile):com.intellij.ide.scratch.RootType
- a:getScratchesMapping():com.intellij.lang.PerFileMappings
- s:isWorkspaceModelIntegrationEnabled():Z
e:com.intellij.ide.scratch.ScratchFileService$Option
- java.lang.Enum
- sf:create_if_missing:com.intellij.ide.scratch.ScratchFileService$Option
- sf:create_new_always:com.intellij.ide.scratch.ScratchFileService$Option
- sf:existing_only:com.intellij.ide.scratch.ScratchFileService$Option
- s:valueOf(java.lang.String):com.intellij.ide.scratch.ScratchFileService$Option
- s:values():com.intellij.ide.scratch.ScratchFileService$Option[]
f:com.intellij.ide.scratch.ScratchUtil
- s:getRelativePath(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:isScratch(com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.inlinePrompt.InlinePrompt
f:com.intellij.lang.BracePair
- <init>(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType,Z):V
- getLeftBraceType():com.intellij.psi.tree.IElementType
- getRightBraceType():com.intellij.psi.tree.IElementType
- isStructural():Z
f:com.intellij.lang.ContributedReferencesAnnotators
- com.intellij.lang.LanguageExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:INSTANCE:com.intellij.lang.ContributedReferencesAnnotators
com.intellij.lang.ExternalAnnotatorsFilter
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:isProhibited(com.intellij.lang.annotation.ExternalAnnotator,com.intellij.psi.PsiFile):Z
f:com.intellij.lang.ExternalLanguageAnnotators
- com.intellij.lang.LanguageExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:INSTANCE:com.intellij.lang.ExternalLanguageAnnotators
- s:allForFile(com.intellij.lang.Language,com.intellij.psi.PsiFile):java.util.List
f:com.intellij.lang.LanguageAnnotators
- com.intellij.lang.LanguageExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:INSTANCE:com.intellij.lang.LanguageAnnotators
f:com.intellij.lang.LanguageBraceMatching
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageBraceMatching
f:com.intellij.lang.LanguageDocumentation
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageDocumentation
- forLanguage(com.intellij.lang.Language):com.intellij.lang.documentation.DocumentationProvider
f:com.intellij.lang.LanguageNamesValidation
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageNamesValidation
- forLanguage(com.intellij.lang.Language):com.intellij.lang.refactoring.NamesValidator
- s:isIdentifier(com.intellij.lang.Language,java.lang.String):Z
- s:isIdentifier(com.intellij.lang.Language,java.lang.String,com.intellij.openapi.project.Project):Z
com.intellij.lang.PairedBraceMatcher
- a:getCodeConstructStart(com.intellij.psi.PsiFile,I):I
- a:getPairs():com.intellij.lang.BracePair[]
- a:isPairedBracesAllowedBeforeType(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.IElementType):Z
com.intellij.lang.PerFileMappings
- a:getMapping(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- a:setMapping(com.intellij.openapi.vfs.VirtualFile,java.lang.Object):V
f:com.intellij.lang.annotation.Annotation
- com.intellij.openapi.util.Segment
- getBatchFixes():java.util.List
- getEndOffset():I
- getEnforcedTextAttributes():com.intellij.openapi.editor.markup.TextAttributes
- getGutterIconRenderer():com.intellij.openapi.editor.markup.GutterIconRenderer
- getHighlightType():com.intellij.codeInspection.ProblemHighlightType
- getMessage():java.lang.String
- getProblemGroup():com.intellij.lang.annotation.ProblemGroup
- getQuickFixes():java.util.List
- getSeverity():com.intellij.lang.annotation.HighlightSeverity
- getStartOffset():I
- getTextAttributes():com.intellij.openapi.editor.colors.TextAttributesKey
- getTooltip():java.lang.String
- isAfterEndOfLine():Z
- isFileLevelAnnotation():Z
- needsUpdateOnTyping():Z
- registerBatchFix(com.intellij.codeInsight.intention.IntentionAction,com.intellij.codeInspection.LocalQuickFix,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.daemon.HighlightDisplayKey):V
- registerBatchFix(com.intellij.codeInsight.intention.IntentionAction,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.daemon.HighlightDisplayKey):V
- registerFix(com.intellij.codeInsight.intention.IntentionAction):V
- registerFix(com.intellij.codeInsight.intention.IntentionAction,com.intellij.openapi.util.TextRange):V
- registerFix(com.intellij.codeInsight.intention.IntentionAction,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.daemon.HighlightDisplayKey):V
- registerFix(com.intellij.codeInspection.LocalQuickFix,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.daemon.HighlightDisplayKey,com.intellij.codeInspection.ProblemDescriptor):V
- registerUniversalFix(com.intellij.codeInsight.intention.IntentionAction,com.intellij.openapi.util.TextRange,com.intellij.codeInsight.daemon.HighlightDisplayKey):V
- setAfterEndOfLine(Z):V
- setEnforcedTextAttributes(com.intellij.openapi.editor.markup.TextAttributes):V
- setFileLevelAnnotation(Z):V
- setGutterIconRenderer(com.intellij.openapi.editor.markup.GutterIconRenderer):V
- setHighlightType(com.intellij.codeInspection.ProblemHighlightType):V
- setNeedsUpdateOnTyping(Z):V
- setProblemGroup(com.intellij.lang.annotation.ProblemGroup):V
- setTextAttributes(com.intellij.openapi.editor.colors.TextAttributesKey):V
- setTooltip(java.lang.String):V
f:com.intellij.lang.annotation.Annotation$QuickFixInfo
- f:key:com.intellij.codeInsight.daemon.HighlightDisplayKey
- f:quickFix:com.intellij.codeInsight.intention.IntentionAction
- f:textRange:com.intellij.openapi.util.TextRange
- getLocalQuickFix():com.intellij.codeInspection.LocalQuickFix
com.intellij.lang.annotation.AnnotationBuilder
- a:afterEndOfLine():com.intellij.lang.annotation.AnnotationBuilder
- a:create():V
- a:createAnnotation():com.intellij.lang.annotation.Annotation
- a:enforcedTextAttributes(com.intellij.openapi.editor.markup.TextAttributes):com.intellij.lang.annotation.AnnotationBuilder
- a:fileLevel():com.intellij.lang.annotation.AnnotationBuilder
- a:gutterIconRenderer(com.intellij.openapi.editor.markup.GutterIconRenderer):com.intellij.lang.annotation.AnnotationBuilder
- a:highlightType(com.intellij.codeInspection.ProblemHighlightType):com.intellij.lang.annotation.AnnotationBuilder
- a:needsUpdateOnTyping():com.intellij.lang.annotation.AnnotationBuilder
- a:needsUpdateOnTyping(Z):com.intellij.lang.annotation.AnnotationBuilder
- a:newFix(com.intellij.codeInsight.intention.CommonIntentionAction):com.intellij.lang.annotation.AnnotationBuilder$FixBuilder
- a:newFix(com.intellij.codeInsight.intention.IntentionAction):com.intellij.lang.annotation.AnnotationBuilder$FixBuilder
- a:newLocalQuickFix(com.intellij.codeInspection.LocalQuickFix,com.intellij.codeInspection.ProblemDescriptor):com.intellij.lang.annotation.AnnotationBuilder$FixBuilder
- a:problemGroup(com.intellij.lang.annotation.ProblemGroup):com.intellij.lang.annotation.AnnotationBuilder
- a:range(com.intellij.lang.ASTNode):com.intellij.lang.annotation.AnnotationBuilder
- a:range(com.intellij.openapi.util.TextRange):com.intellij.lang.annotation.AnnotationBuilder
- a:range(com.intellij.psi.PsiElement):com.intellij.lang.annotation.AnnotationBuilder
- a:textAttributes(com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.lang.annotation.AnnotationBuilder
- a:tooltip(java.lang.String):com.intellij.lang.annotation.AnnotationBuilder
- a:withFix(com.intellij.codeInsight.intention.CommonIntentionAction):com.intellij.lang.annotation.AnnotationBuilder
- a:withFix(com.intellij.codeInsight.intention.IntentionAction):com.intellij.lang.annotation.AnnotationBuilder
com.intellij.lang.annotation.AnnotationBuilder$FixBuilder
- a:batch():com.intellij.lang.annotation.AnnotationBuilder$FixBuilder
- a:key(com.intellij.codeInsight.daemon.HighlightDisplayKey):com.intellij.lang.annotation.AnnotationBuilder$FixBuilder
- a:range(com.intellij.openapi.util.TextRange):com.intellij.lang.annotation.AnnotationBuilder$FixBuilder
- a:registerFix():com.intellij.lang.annotation.AnnotationBuilder
- a:universal():com.intellij.lang.annotation.AnnotationBuilder$FixBuilder
com.intellij.lang.annotation.AnnotationHolder
- a:createAnnotation(com.intellij.lang.annotation.HighlightSeverity,com.intellij.openapi.util.TextRange,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createAnnotation(com.intellij.lang.annotation.HighlightSeverity,com.intellij.openapi.util.TextRange,java.lang.String,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createErrorAnnotation(com.intellij.lang.ASTNode,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createErrorAnnotation(com.intellij.openapi.util.TextRange,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createErrorAnnotation(com.intellij.psi.PsiElement,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createInfoAnnotation(com.intellij.lang.ASTNode,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createInfoAnnotation(com.intellij.openapi.util.TextRange,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createInfoAnnotation(com.intellij.psi.PsiElement,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createWarningAnnotation(com.intellij.lang.ASTNode,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createWarningAnnotation(com.intellij.openapi.util.TextRange,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createWarningAnnotation(com.intellij.psi.PsiElement,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createWeakWarningAnnotation(com.intellij.openapi.util.TextRange,java.lang.String):com.intellij.lang.annotation.Annotation
- a:createWeakWarningAnnotation(com.intellij.psi.PsiElement,java.lang.String):com.intellij.lang.annotation.Annotation
- a:getCurrentAnnotationSession():com.intellij.lang.annotation.AnnotationSession
- a:isBatchMode():Z
- newAnnotation(com.intellij.lang.annotation.HighlightSeverity,java.lang.String):com.intellij.lang.annotation.AnnotationBuilder
- newSilentAnnotation(com.intellij.lang.annotation.HighlightSeverity):com.intellij.lang.annotation.AnnotationBuilder
Fc:com.intellij.lang.annotation.AnnotationSession
- com.intellij.openapi.util.UserDataHolder
- <init>(com.intellij.psi.PsiFile):V
- getFile():com.intellij.psi.PsiFile
- getMinimumSeverity():com.intellij.lang.annotation.HighlightSeverity
- getPriorityRange():com.intellij.openapi.util.TextRange
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
com.intellij.lang.annotation.Annotator
- com.intellij.openapi.project.PossiblyDumbAware
- a:annotate(com.intellij.psi.PsiElement,com.intellij.lang.annotation.AnnotationHolder):V
com.intellij.lang.annotation.ContributedReferencesAnnotator
- a:annotate(com.intellij.psi.PsiElement,java.util.List,com.intellij.lang.annotation.AnnotationHolder):V
a:com.intellij.lang.annotation.ExternalAnnotator
- com.intellij.openapi.project.PossiblyDumbAware
- <init>():V
- apply(com.intellij.psi.PsiFile,java.lang.Object,com.intellij.lang.annotation.AnnotationHolder):V
- collectInformation(com.intellij.psi.PsiFile):java.lang.Object
- collectInformation(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,Z):java.lang.Object
- doAnnotate(java.lang.Object):java.lang.Object
- getPairedBatchInspectionShortName():java.lang.String
f:com.intellij.lang.annotation.HighlightSeverity
- java.lang.Comparable
- sf:DEFAULT_SEVERITIES:com.intellij.lang.annotation.HighlightSeverity[]
- sf:ERROR:com.intellij.lang.annotation.HighlightSeverity
- sf:GENERIC_SERVER_ERROR_OR_WARNING:com.intellij.lang.annotation.HighlightSeverity
- sf:INFO:com.intellij.lang.annotation.HighlightSeverity
- sf:INFORMATION:com.intellij.lang.annotation.HighlightSeverity
- sf:TEXT_ATTRIBUTES:com.intellij.lang.annotation.HighlightSeverity
- sf:WARNING:com.intellij.lang.annotation.HighlightSeverity
- sf:WEAK_WARNING:com.intellij.lang.annotation.HighlightSeverity
- f:myName:java.lang.String
- f:myVal:I
- <init>(java.lang.String,I):V
- <init>(java.lang.String,I,java.util.function.Supplier,java.util.function.Supplier,java.util.function.Supplier):V
- <init>(org.jdom.Element):V
- compareTo(com.intellij.lang.annotation.HighlightSeverity):I
- equals(java.lang.Object):Z
- getCountMessage(I):java.lang.String
- getDisplayCapitalizedName():java.lang.String
- getDisplayName():java.lang.String
- getName():java.lang.String
- hashCode():I
- writeExternal(org.jdom.Element):V
com.intellij.lang.annotation.ProblemGroup
- a:getProblemName():java.lang.String
a:com.intellij.lang.documentation.AbstractDocumentationProvider
- com.intellij.lang.documentation.DocumentationProviderEx
- <init>():V
com.intellij.lang.documentation.CodeDocumentationProvider
- com.intellij.lang.documentation.DocumentationProvider
- a:findExistingDocComment(com.intellij.psi.PsiComment):com.intellij.psi.PsiComment
- a:generateDocumentationContentStub(com.intellij.psi.PsiComment):java.lang.String
- a:parseContext(com.intellij.psi.PsiElement):com.intellij.openapi.util.Pair
f:com.intellij.lang.documentation.CompositeDocumentationProvider
- com.intellij.lang.documentation.DocumentationProvider
- com.intellij.lang.documentation.ExternalDocumentationHandler
- com.intellij.lang.documentation.ExternalDocumentationProvider
- canFetchDocumentationLink(java.lang.String):Z
- canPromptToConfigureDocumentation(com.intellij.psi.PsiElement):Z
- collectDocComments(com.intellij.psi.PsiFile,java.util.function.Consumer):V
- fetchExternalDocumentation(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.util.List,Z):java.lang.String
- fetchExternalDocumentation(java.lang.String,com.intellij.psi.PsiElement):java.lang.String
- findDocComment(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):com.intellij.psi.PsiDocCommentBase
- generateDoc(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.lang.String
- generateHoverDoc(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.lang.String
- generateRenderedDoc(com.intellij.psi.PsiDocCommentBase):java.lang.String
- getAllProviders():java.util.List
- getCustomDocumentationElement(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,I):com.intellij.psi.PsiElement
- getDocumentationElementForLink(com.intellij.psi.PsiManager,java.lang.String,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getDocumentationElementForLookupItem(com.intellij.psi.PsiManager,java.lang.Object,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getDocumentationParts(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.lang.documentation.DocumentationProvider$DocumentationParts
- getFirstCodeDocumentationProvider():com.intellij.lang.documentation.CodeDocumentationProvider
- getProviders():java.util.List
- getQuickNavigateInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.lang.String
- getUrlFor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.util.List
- handleExternal(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- handleExternalLink(com.intellij.psi.PsiManager,java.lang.String,com.intellij.psi.PsiElement):Z
- hasDocumentationFor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- s:hasUrlsFor(com.intellij.lang.documentation.DocumentationProvider,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- promptToConfigureDocumentation(com.intellij.psi.PsiElement):V
- s:wrapProviders(java.util.Collection):com.intellij.lang.documentation.DocumentationProvider
com.intellij.lang.documentation.DocumentationMarkup
- sf:BOTTOM_ELEMENT:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:CENTERED_ELEMENT:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:CONTENT_ELEMENT:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:CONTENT_END:java.lang.String
- sf:CONTENT_START:java.lang.String
- sf:DEFINITION_ELEMENT:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:DEFINITION_END:java.lang.String
- sf:DEFINITION_START:java.lang.String
- sf:EXTERNAL_LINK_ICON:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:GRAYED_ELEMENT:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:GRAYED_END:java.lang.String
- sf:GRAYED_START:java.lang.String
- sf:INFORMATION_ICON:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:PRE_ELEMENT:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:SECTIONS_END:java.lang.String
- sf:SECTIONS_START:java.lang.String
- sf:SECTIONS_TABLE:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:SECTION_CONTENT_CELL:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:SECTION_END:java.lang.String
- sf:SECTION_HEADER_CELL:com.intellij.openapi.util.text.HtmlChunk$Element
- sf:SECTION_HEADER_START:java.lang.String
- sf:SECTION_SEPARATOR:java.lang.String
- sf:SECTION_START:java.lang.String
- sf:TOP_ELEMENT:com.intellij.openapi.util.text.HtmlChunk$Element
com.intellij.lang.documentation.DocumentationProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- collectDocComments(com.intellij.psi.PsiFile,java.util.function.Consumer):V
- findDocComment(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):com.intellij.psi.PsiDocCommentBase
- generateDoc(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.lang.String
- generateHoverDoc(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.lang.String
- generateRenderedDoc(com.intellij.psi.PsiDocCommentBase):java.lang.String
- getCustomDocumentationElement(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement,I):com.intellij.psi.PsiElement
- getDocumentationElementForLink(com.intellij.psi.PsiManager,java.lang.String,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getDocumentationElementForLookupItem(com.intellij.psi.PsiManager,java.lang.Object,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getDocumentationParts(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.lang.documentation.DocumentationProvider$DocumentationParts
- getQuickNavigateInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.lang.String
- getUrlFor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.util.List
c:com.intellij.lang.documentation.DocumentationProvider$DocumentationParts
- f:definitionDetails:java.lang.String
- f:doc:java.lang.String
- <init>(java.lang.String,java.lang.String):V
c:com.intellij.lang.documentation.DocumentationProviderEx
- com.intellij.lang.documentation.DocumentationProvider
- <init>():V
- getCustomDocumentationElement(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getLocalImageForElement(com.intellij.psi.PsiElement,java.lang.String):java.awt.Image
com.intellij.lang.documentation.ExternalDocumentationHandler
- canFetchDocumentationLink(java.lang.String):Z
- canHandleExternal(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- extractRefFromLink(java.lang.String):java.lang.String
- fetchExternalDocumentation(java.lang.String,com.intellij.psi.PsiElement):java.lang.String
- handleExternal(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- handleExternalLink(com.intellij.psi.PsiManager,java.lang.String,com.intellij.psi.PsiElement):Z
com.intellij.lang.documentation.ExternalDocumentationProvider
- a:canPromptToConfigureDocumentation(com.intellij.psi.PsiElement):Z
- fetchExternalDocumentation(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.util.List):java.lang.String
- fetchExternalDocumentation(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,java.util.List,Z):java.lang.String
- a:hasDocumentationFor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- a:promptToConfigureDocumentation(com.intellij.psi.PsiElement):V
f:com.intellij.lang.parameterInfo.ParameterInfoUtilsBase
- <init>():V
- s:findParentOfType(com.intellij.psi.PsiFile,I,java.lang.Class):com.intellij.psi.PsiElement
- s:findParentOfTypeWithStopElements(com.intellij.psi.PsiFile,I,java.lang.Class,java.lang.Class[]):com.intellij.psi.PsiElement
com.intellij.lang.refactoring.NamesValidator
- a:isIdentifier(java.lang.String,com.intellij.openapi.project.Project):Z
- a:isKeyword(java.lang.String,com.intellij.openapi.project.Project):Z
f:com.intellij.modcommand.ActionContext
- java.lang.Record
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,I,com.intellij.openapi.util.TextRange,com.intellij.psi.PsiElement):V
- element():com.intellij.psi.PsiElement
- f:equals(java.lang.Object):Z
- file():com.intellij.psi.PsiFile
- findLeaf():com.intellij.psi.PsiElement
- findLeafOnTheLeft():com.intellij.psi.PsiElement
- s:from(com.intellij.codeInspection.ProblemDescriptor):com.intellij.modcommand.ActionContext
- s:from(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.modcommand.ActionContext
- f:hashCode():I
- mapToInjected(com.intellij.psi.PsiFile):com.intellij.modcommand.ActionContext
- offset():I
- project():com.intellij.openapi.project.Project
- selection():com.intellij.openapi.util.TextRange
- withElement(com.intellij.psi.PsiElement):com.intellij.modcommand.ActionContext
- withFile(com.intellij.psi.PsiFile):com.intellij.modcommand.ActionContext
- withOffset(I):com.intellij.modcommand.ActionContext
com.intellij.modcommand.MemberChooserElement
- a:getText():java.lang.String
f:com.intellij.modcommand.ModChooseAction
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(java.lang.String,java.util.List):V
- actions():java.util.List
- f:equals(java.lang.Object):Z
- f:hashCode():I
- isEmpty():Z
- title():java.lang.String
com.intellij.modcommand.ModCommand
- andThen(com.intellij.modcommand.ModCommand):com.intellij.modcommand.ModCommand
- s:chooseAction(java.lang.String,java.util.List):com.intellij.modcommand.ModCommand
- s:chooseAction(java.lang.String,com.intellij.modcommand.ModCommandAction[]):com.intellij.modcommand.ModCommand
- s:copyToClipboard(java.lang.String):com.intellij.modcommand.ModCommand
- s:error(java.lang.String):com.intellij.modcommand.ModCommand
- s:highlight(com.intellij.openapi.editor.colors.TextAttributesKey,com.intellij.psi.PsiElement[]):com.intellij.modcommand.ModCommand
- s:highlight(com.intellij.psi.PsiElement[]):com.intellij.modcommand.ModCommand
- s:info(java.lang.String):com.intellij.modcommand.ModCommand
- isEmpty():Z
- modifiedFiles():java.util.Set
- s:moveTo(com.intellij.psi.PsiElement):com.intellij.modcommand.ModCommand
- s:nop():com.intellij.modcommand.ModCommand
- s:openUrl(java.lang.String):com.intellij.modcommand.ModCommand
- s:psiBasedStep(com.intellij.psi.PsiElement,java.lang.String,java.util.function.Function,java.util.function.Function):com.intellij.modcommand.ModCommandAction
- s:psiUpdate(com.intellij.modcommand.ActionContext,java.util.function.Consumer):com.intellij.modcommand.ModCommand
- s:psiUpdate(com.intellij.psi.PsiElement,java.util.function.BiConsumer):com.intellij.modcommand.ModCommand
- s:psiUpdate(com.intellij.psi.PsiElement,java.util.function.Consumer):com.intellij.modcommand.ModCommand
- s:psiUpdateStep(com.intellij.psi.PsiElement,java.lang.String,java.util.function.BiConsumer):com.intellij.modcommand.ModCommandAction
- s:psiUpdateStep(com.intellij.psi.PsiElement,java.lang.String,java.util.function.BiConsumer,java.util.function.Function):com.intellij.modcommand.ModCommandAction
- s:select(com.intellij.psi.PsiElement):com.intellij.modcommand.ModCommand
- s:showConflicts(java.util.Map):com.intellij.modcommand.ModCommand
- unpack():java.util.List
- s:updateInspectionOption(com.intellij.psi.PsiElement,com.intellij.codeInspection.InspectionProfileEntry,java.util.function.Consumer):com.intellij.modcommand.ModCommand
com.intellij.modcommand.ModCommandAction
- com.intellij.codeInsight.intention.CommonIntentionAction
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EMPTY_ARRAY:com.intellij.modcommand.ModCommandAction[]
- asIntention():com.intellij.codeInsight.intention.IntentionAction
- asModCommandAction():com.intellij.modcommand.ModCommandAction
- generatePreview(com.intellij.modcommand.ActionContext):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- a:getPresentation(com.intellij.modcommand.ActionContext):com.intellij.modcommand.Presentation
- a:perform(com.intellij.modcommand.ActionContext):com.intellij.modcommand.ModCommand
- withPresentation(java.util.function.UnaryOperator):com.intellij.modcommand.ModCommandAction
com.intellij.modcommand.ModCommandExecutor
- a:executeForFileCopy(com.intellij.modcommand.ModCommand,com.intellij.psi.PsiFile):V
- a:executeInBatch(com.intellij.modcommand.ActionContext,com.intellij.modcommand.ModCommand):com.intellij.modcommand.ModCommandExecutor$BatchExecutionResult
- a:executeInteractively(com.intellij.modcommand.ActionContext,com.intellij.modcommand.ModCommand,com.intellij.openapi.editor.Editor):V
- s:getInstance():com.intellij.modcommand.ModCommandExecutor
- a:getPreview(com.intellij.modcommand.ModCommand,com.intellij.modcommand.ActionContext):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
com.intellij.modcommand.ModCommandExecutor$BatchExecutionResult
- compose(com.intellij.modcommand.ModCommandExecutor$BatchExecutionResult):com.intellij.modcommand.ModCommandExecutor$BatchExecutionResult
- a:getMessage():java.lang.String
f:com.intellij.modcommand.ModCommandExecutor$Error
- java.lang.Record
- com.intellij.modcommand.ModCommandExecutor$BatchExecutionResult
- <init>(java.lang.String):V
- f:equals(java.lang.Object):Z
- getMessage():java.lang.String
- f:hashCode():I
- message():java.lang.String
e:com.intellij.modcommand.ModCommandExecutor$Result
- java.lang.Enum
- com.intellij.modcommand.ModCommandExecutor$BatchExecutionResult
- sf:ABORT:com.intellij.modcommand.ModCommandExecutor$Result
- sf:CONFLICTS:com.intellij.modcommand.ModCommandExecutor$Result
- sf:INTERACTIVE:com.intellij.modcommand.ModCommandExecutor$Result
- sf:NOTHING:com.intellij.modcommand.ModCommandExecutor$Result
- sf:SUCCESS:com.intellij.modcommand.ModCommandExecutor$Result
- getMessage():java.lang.String
- s:valueOf(java.lang.String):com.intellij.modcommand.ModCommandExecutor$Result
- s:values():com.intellij.modcommand.ModCommandExecutor$Result[]
a:com.intellij.modcommand.ModCommandQuickFix
- com.intellij.codeInspection.LocalQuickFix
- <init>():V
- f:applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- generatePreview(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- f:getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- f:getFileModifierForPreview(com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.FileModifier
- a:perform(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):com.intellij.modcommand.ModCommand
- f:startInWriteAction():Z
com.intellij.modcommand.ModCommandService
- a:chooseFileAndPerform(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,com.intellij.modcommand.ModCommandAction,I):com.intellij.modcommand.ModCommandWithContext
- s:getInstance():com.intellij.modcommand.ModCommandService
- a:psiUpdate(com.intellij.modcommand.ActionContext,java.util.function.Consumer):com.intellij.modcommand.ModCommand
- a:unwrap(com.intellij.codeInspection.LocalQuickFix):com.intellij.modcommand.ModCommandAction
- a:updateOption(com.intellij.psi.PsiElement,com.intellij.codeInspection.InspectionProfileEntry,java.util.function.Consumer):com.intellij.modcommand.ModCommand
- a:wrap(com.intellij.modcommand.ModCommandAction):com.intellij.codeInsight.intention.IntentionAction
- a:wrapToLocalQuickFixAndIntentionActionOnPsiElement(com.intellij.modcommand.ModCommandAction,com.intellij.psi.PsiElement):com.intellij.codeInspection.LocalQuickFixAndIntentionActionOnPsiElement
- a:wrapToQuickFix(com.intellij.modcommand.ModCommandAction):com.intellij.codeInspection.LocalQuickFix
f:com.intellij.modcommand.ModCommandWithContext
- java.lang.Record
- <init>(com.intellij.modcommand.ActionContext,com.intellij.modcommand.ModCommand):V
- command():com.intellij.modcommand.ModCommand
- context():com.intellij.modcommand.ActionContext
- f:equals(java.lang.Object):Z
- executeInBatch():com.intellij.modcommand.ModCommandExecutor$BatchExecutionResult
- executeInteractively(com.intellij.openapi.editor.Editor):V
- f:hashCode():I
f:com.intellij.modcommand.ModCompositeCommand
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(java.util.List):V
- commands():java.util.List
- f:equals(java.lang.Object):Z
- f:hashCode():I
- isEmpty():Z
- modifiedFiles():java.util.Set
- unpack():java.util.List
f:com.intellij.modcommand.ModCopyToClipboard
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(java.lang.String):V
- content():java.lang.String
- f:equals(java.lang.Object):Z
- f:hashCode():I
f:com.intellij.modcommand.ModCreateFile
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(com.intellij.modcommand.FutureVirtualFile,com.intellij.modcommand.ModCreateFile$Content):V
- content():com.intellij.modcommand.ModCreateFile$Content
- f:equals(java.lang.Object):Z
- file():com.intellij.modcommand.FutureVirtualFile
- f:hashCode():I
f:com.intellij.modcommand.ModCreateFile$Binary
- java.lang.Record
- com.intellij.modcommand.ModCreateFile$Content
- <init>(B[]):V
- bytes():B[]
- f:equals(java.lang.Object):Z
- f:hashCode():I
com.intellij.modcommand.ModCreateFile$Content
f:com.intellij.modcommand.ModCreateFile$Text
- java.lang.Record
- com.intellij.modcommand.ModCreateFile$Content
- <init>(java.lang.String):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- text():java.lang.String
f:com.intellij.modcommand.ModDeleteFile
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(com.intellij.openapi.vfs.VirtualFile):V
- f:equals(java.lang.Object):Z
- file():com.intellij.openapi.vfs.VirtualFile
- f:hashCode():I
- modifiedFiles():java.util.Set
f:com.intellij.modcommand.ModDisplayMessage
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(java.lang.String,com.intellij.modcommand.ModDisplayMessage$MessageKind):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- kind():com.intellij.modcommand.ModDisplayMessage$MessageKind
- messageText():java.lang.String
e:com.intellij.modcommand.ModDisplayMessage$MessageKind
- java.lang.Enum
- sf:ERROR:com.intellij.modcommand.ModDisplayMessage$MessageKind
- sf:INFORMATION:com.intellij.modcommand.ModDisplayMessage$MessageKind
- s:valueOf(java.lang.String):com.intellij.modcommand.ModDisplayMessage$MessageKind
- s:values():com.intellij.modcommand.ModDisplayMessage$MessageKind[]
f:com.intellij.modcommand.ModHighlight
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(com.intellij.openapi.vfs.VirtualFile,java.util.List):V
- f:equals(java.lang.Object):Z
- file():com.intellij.openapi.vfs.VirtualFile
- f:hashCode():I
- highlights():java.util.List
- isEmpty():Z
f:com.intellij.modcommand.ModHighlight$HighlightInfo
- java.lang.Record
- <init>(com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.colors.TextAttributesKey,Z):V
- attributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
- f:equals(java.lang.Object):Z
- f:hashCode():I
- hideByTextChange():Z
- range():com.intellij.openapi.util.TextRange
- withRange(com.intellij.openapi.util.TextRange):com.intellij.modcommand.ModHighlight$HighlightInfo
f:com.intellij.modcommand.ModNavigate
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(com.intellij.openapi.vfs.VirtualFile,I,I,I):V
- caret():I
- f:equals(java.lang.Object):Z
- file():com.intellij.openapi.vfs.VirtualFile
- f:hashCode():I
- selectionEnd():I
- selectionStart():I
f:com.intellij.modcommand.ModNothing
- java.lang.Record
- com.intellij.modcommand.ModCommand
- sf:NOTHING:com.intellij.modcommand.ModNothing
- <init>():V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- isEmpty():Z
- unpack():java.util.List
f:com.intellij.modcommand.ModOpenUrl
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(java.lang.String):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- url():java.lang.String
com.intellij.modcommand.ModPsiUpdater
- com.intellij.modcommand.ModPsiNavigator
- a:cancel(java.lang.String):V
- a:getCaretOffset():I
- a:getOriginalFile(com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- a:getWritable(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:highlight(com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.colors.TextAttributesKey):V
- highlight(com.intellij.psi.PsiElement):V
- a:highlight(com.intellij.psi.PsiElement,com.intellij.openapi.editor.colors.TextAttributesKey):V
- a:message(java.lang.String):V
- a:moveCaretTo(I):V
- a:moveCaretTo(com.intellij.psi.PsiElement):V
- a:rename(com.intellij.psi.PsiNameIdentifierOwner,java.util.List):V
- a:rename(com.intellij.psi.PsiNamedElement,com.intellij.psi.PsiElement,java.util.List):V
- a:select(com.intellij.openapi.util.TextRange):V
- a:select(com.intellij.psi.PsiElement):V
- a:showConflicts(java.util.Map):V
- a:templateBuilder():com.intellij.modcommand.ModTemplateBuilder
f:com.intellij.modcommand.ModShowConflicts
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(java.util.Map):V
- conflicts():java.util.Map
- f:equals(java.lang.Object):Z
- f:hashCode():I
- isEmpty():Z
f:com.intellij.modcommand.ModShowConflicts$Conflict
- java.lang.Record
- <init>(java.util.List):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- merge(com.intellij.modcommand.ModShowConflicts$Conflict):com.intellij.modcommand.ModShowConflicts$Conflict
- messages():java.util.List
f:com.intellij.modcommand.ModStartRename
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.modcommand.ModStartRename$RenameSymbolRange,java.util.List):V
- f:equals(java.lang.Object):Z
- file():com.intellij.openapi.vfs.VirtualFile
- f:hashCode():I
- nameSuggestions():java.util.List
- symbolRange():com.intellij.modcommand.ModStartRename$RenameSymbolRange
- withRange(com.intellij.modcommand.ModStartRename$RenameSymbolRange):com.intellij.modcommand.ModStartRename
f:com.intellij.modcommand.ModStartRename$RenameSymbolRange
- java.lang.Record
- <init>(com.intellij.openapi.util.TextRange,com.intellij.openapi.util.TextRange):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- nameIdentifierRange():com.intellij.openapi.util.TextRange
- range():com.intellij.openapi.util.TextRange
f:com.intellij.modcommand.ModStartTemplate
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(com.intellij.openapi.vfs.VirtualFile,java.util.List,java.util.function.Function):V
- f:equals(java.lang.Object):Z
- fields():java.util.List
- file():com.intellij.openapi.vfs.VirtualFile
- f:hashCode():I
- modifiedFiles():java.util.Set
- templateFinishFunction():java.util.function.Function
f:com.intellij.modcommand.ModStartTemplate$DependantVariableField
- java.lang.Record
- com.intellij.modcommand.ModStartTemplate$TemplateField
- <init>(com.intellij.openapi.util.TextRange,java.lang.String,java.lang.String,Z):V
- alwaysStopAt():Z
- dependantVariableName():java.lang.String
- f:equals(java.lang.Object):Z
- f:hashCode():I
- range():com.intellij.openapi.util.TextRange
- varName():java.lang.String
- withRange(com.intellij.openapi.util.TextRange):com.intellij.modcommand.ModStartTemplate$TemplateField
f:com.intellij.modcommand.ModStartTemplate$EndField
- java.lang.Record
- com.intellij.modcommand.ModStartTemplate$TemplateField
- <init>(com.intellij.openapi.util.TextRange):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- range():com.intellij.openapi.util.TextRange
- withRange(com.intellij.openapi.util.TextRange):com.intellij.modcommand.ModStartTemplate$TemplateField
f:com.intellij.modcommand.ModStartTemplate$ExpressionField
- java.lang.Record
- com.intellij.modcommand.ModStartTemplate$TemplateField
- <init>(com.intellij.openapi.util.TextRange,java.lang.String,com.intellij.codeInsight.template.Expression):V
- f:equals(java.lang.Object):Z
- expression():com.intellij.codeInsight.template.Expression
- f:hashCode():I
- range():com.intellij.openapi.util.TextRange
- varName():java.lang.String
- withRange(com.intellij.openapi.util.TextRange):com.intellij.modcommand.ModStartTemplate$TemplateField
com.intellij.modcommand.ModStartTemplate$TemplateField
- a:range():com.intellij.openapi.util.TextRange
- a:withRange(com.intellij.openapi.util.TextRange):com.intellij.modcommand.ModStartTemplate$TemplateField
com.intellij.modcommand.ModTemplateBuilder
- a:field(com.intellij.psi.PsiElement,com.intellij.codeInsight.template.Expression):com.intellij.modcommand.ModTemplateBuilder
- field(com.intellij.psi.PsiElement,java.lang.String):com.intellij.modcommand.ModTemplateBuilder
- a:field(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInsight.template.Expression):com.intellij.modcommand.ModTemplateBuilder
- a:field(com.intellij.psi.PsiElement,java.lang.String,java.lang.String,Z):com.intellij.modcommand.ModTemplateBuilder
- a:finishAt(I):com.intellij.modcommand.ModTemplateBuilder
f:com.intellij.modcommand.ModUpdateFileText
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.String,java.util.List):V
- f:equals(java.lang.Object):Z
- file():com.intellij.openapi.vfs.VirtualFile
- f:hashCode():I
- isEmpty():Z
- modifiedFiles():java.util.Set
- newText():java.lang.String
- oldText():java.lang.String
- updatedRanges():java.util.List
f:com.intellij.modcommand.ModUpdateFileText$Fragment
- java.lang.Record
- <init>(I,I,I):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- intersects(com.intellij.modcommand.ModUpdateFileText$Fragment):Z
- mergeWithNext(com.intellij.modcommand.ModUpdateFileText$Fragment):com.intellij.modcommand.ModUpdateFileText$Fragment
- newLength():I
- offset():I
- oldLength():I
- shift(I):com.intellij.modcommand.ModUpdateFileText$Fragment
f:com.intellij.modcommand.Presentation
- java.lang.Record
- <init>(java.lang.String,com.intellij.codeInsight.intention.PriorityAction$Priority,java.util.List,javax.swing.Icon,com.intellij.modcommand.Presentation$FixAllOption):V
- f:equals(java.lang.Object):Z
- fixAllOption():com.intellij.modcommand.Presentation$FixAllOption
- f:hashCode():I
- icon():javax.swing.Icon
- name():java.lang.String
- s:of(java.lang.String):com.intellij.modcommand.Presentation
- priority():com.intellij.codeInsight.intention.PriorityAction$Priority
- rangesToHighlight():java.util.List
- withFixAllOption(com.intellij.modcommand.ModCommandAction):com.intellij.modcommand.Presentation
- withFixAllOption(com.intellij.modcommand.ModCommandAction,java.util.function.Predicate):com.intellij.modcommand.Presentation
- withHighlighting(com.intellij.modcommand.Presentation$HighlightRange[]):com.intellij.modcommand.Presentation
- withHighlighting(com.intellij.openapi.util.TextRange[]):com.intellij.modcommand.Presentation
- withIcon(javax.swing.Icon):com.intellij.modcommand.Presentation
- withPriority(com.intellij.codeInsight.intention.PriorityAction$Priority):com.intellij.modcommand.Presentation
f:com.intellij.modcommand.Presentation$FixAllOption
- java.lang.Record
- <init>(java.lang.String,java.util.function.Predicate):V
- belongsToMyFamily():java.util.function.Predicate
- f:equals(java.lang.Object):Z
- f:hashCode():I
- name():java.lang.String
f:com.intellij.modcommand.Presentation$HighlightRange
- java.lang.Record
- <init>(com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.colors.TextAttributesKey):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- highlightKey():com.intellij.openapi.editor.colors.TextAttributesKey
- range():com.intellij.openapi.util.TextRange
a:com.intellij.modcommand.PsiBasedModCommandAction
- com.intellij.modcommand.ModCommandAction
- p:<init>(com.intellij.psi.PsiElement):V
- p:<init>(java.lang.Class):V
- f:generatePreview(com.intellij.modcommand.ActionContext):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- p:generatePreview(com.intellij.modcommand.ActionContext,com.intellij.psi.PsiElement):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- f:getPresentation(com.intellij.modcommand.ActionContext):com.intellij.modcommand.Presentation
- p:getPresentation(com.intellij.modcommand.ActionContext,com.intellij.psi.PsiElement):com.intellij.modcommand.Presentation
- p:isElementApplicable(com.intellij.psi.PsiElement,com.intellij.modcommand.ActionContext):Z
- f:perform(com.intellij.modcommand.ActionContext):com.intellij.modcommand.ModCommand
- pa:perform(com.intellij.modcommand.ActionContext,com.intellij.psi.PsiElement):com.intellij.modcommand.ModCommand
- p:stopSearchAt(com.intellij.psi.PsiElement,com.intellij.modcommand.ActionContext):Z
a:com.intellij.modcommand.PsiUpdateModCommandQuickFix
- com.intellij.modcommand.ModCommandQuickFix
- <init>():V
- pa:applyFix(com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,com.intellij.modcommand.ModPsiUpdater):V
- f:perform(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):com.intellij.modcommand.ModCommand
com.intellij.openapi.actionSystem.ShortcutProvider
- a:getShortcut():com.intellij.openapi.actionSystem.ShortcutSet
com.intellij.openapi.application.WriteActionAware
- startInWriteAction():Z
a:com.intellij.openapi.command.undo.BasicUndoableAction
- com.intellij.openapi.command.undo.UndoableAction
- <init>():V
- <init>(com.intellij.openapi.command.undo.DocumentReference[]):V
- <init>(com.intellij.openapi.editor.Document[]):V
- <init>(com.intellij.openapi.vfs.VirtualFile[]):V
- getAffectedDocuments():com.intellij.openapi.command.undo.DocumentReference[]
- getPerformedNanoTime():J
- isGlobal():Z
- setPerformedNanoTime(J):V
com.intellij.openapi.command.undo.DocumentReference
- sf:EMPTY_ARRAY:com.intellij.openapi.command.undo.DocumentReference[]
- a:getDocument():com.intellij.openapi.editor.Document
- a:getFile():com.intellij.openapi.vfs.VirtualFile
a:com.intellij.openapi.command.undo.DocumentReferenceManager
- <init>():V
- a:create(com.intellij.openapi.editor.Document):com.intellij.openapi.command.undo.DocumentReference
- a:create(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.command.undo.DocumentReference
- s:getInstance():com.intellij.openapi.command.undo.DocumentReferenceManager
com.intellij.openapi.command.undo.DocumentReferenceProvider
- a:getDocumentReferences():java.util.Collection
a:com.intellij.openapi.command.undo.GlobalUndoableAction
- com.intellij.openapi.command.undo.BasicUndoableAction
- <init>():V
- <init>(com.intellij.openapi.command.undo.DocumentReference[]):V
- <init>(com.intellij.openapi.editor.Document[]):V
- <init>(com.intellij.openapi.vfs.VirtualFile[]):V
- isGlobal():Z
a:com.intellij.openapi.command.undo.UndoManager
- sf:ORIGINAL_DOCUMENT:com.intellij.openapi.util.Key
- <init>():V
- s:getGlobalInstance():com.intellij.openapi.command.undo.UndoManager
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.command.undo.UndoManager
- a:getRedoActionNameAndDescription(com.intellij.openapi.fileEditor.FileEditor):com.intellij.openapi.util.Pair
- a:getUndoActionNameAndDescription(com.intellij.openapi.fileEditor.FileEditor):com.intellij.openapi.util.Pair
- a:isRedoAvailable(com.intellij.openapi.fileEditor.FileEditor):Z
- a:isRedoInProgress():Z
- a:isUndoAvailable(com.intellij.openapi.fileEditor.FileEditor):Z
- a:isUndoInProgress():Z
- isUndoOrRedoInProgress():Z
- a:nonundoableActionPerformed(com.intellij.openapi.command.undo.DocumentReference,Z):V
- a:redo(com.intellij.openapi.fileEditor.FileEditor):V
- a:undo(com.intellij.openapi.fileEditor.FileEditor):V
- a:undoableActionPerformed(com.intellij.openapi.command.undo.UndoableAction):V
com.intellij.openapi.command.undo.UndoableAction
- a:getAffectedDocuments():com.intellij.openapi.command.undo.DocumentReference[]
- getPerformedNanoTime():J
- a:isGlobal():Z
- a:redo():V
- setPerformedNanoTime(J):V
- a:undo():V
f:com.intellij.openapi.command.undo.UnexpectedUndoException
- java.lang.Exception
- <init>(java.lang.String):V
a:com.intellij.openapi.editor.LazyRangeMarkerFactory
- <init>():V
- a:createRangeMarker(com.intellij.openapi.vfs.VirtualFile,I):com.intellij.openapi.editor.RangeMarker
- a:createRangeMarker(com.intellij.openapi.vfs.VirtualFile,I,I,Z):com.intellij.openapi.editor.RangeMarker
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.editor.LazyRangeMarkerFactory
com.intellij.openapi.fileEditor.EditorDataProvider
- a:getData(java.lang.String,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret):java.lang.Object
com.intellij.openapi.fileEditor.FileEditorComposite
- sf:Companion:com.intellij.openapi.fileEditor.FileEditorComposite$Companion
- a:getAllEditors():java.util.List
- a:getAllProviders():java.util.List
- a:isPreview():Z
f:com.intellij.openapi.fileEditor.FileEditorComposite$Companion
- f:createFileEditorComposite(java.util.List,java.util.List,Z):com.intellij.openapi.fileEditor.FileEditorComposite
- bs:createFileEditorComposite$default(com.intellij.openapi.fileEditor.FileEditorComposite$Companion,java.util.List,java.util.List,Z,I,java.lang.Object):com.intellij.openapi.fileEditor.FileEditorComposite
- f:fromPair(kotlin.Pair):com.intellij.openapi.fileEditor.FileEditorComposite
a:com.intellij.openapi.fileEditor.FileEditorManager
- sf:SEPARATOR_BORDER:com.intellij.openapi.util.Key
- sf:SEPARATOR_COLOR:com.intellij.openapi.util.Key
- sf:SEPARATOR_DISABLED:com.intellij.openapi.util.Key
- sf:USE_CURRENT_WINDOW:com.intellij.openapi.util.Key
- <init>():V
- a:addBottomComponent(com.intellij.openapi.fileEditor.FileEditor,javax.swing.JComponent):V
- addFileEditorManagerListener(com.intellij.openapi.fileEditor.FileEditorManagerListener):V
- a:addTopComponent(com.intellij.openapi.fileEditor.FileEditor,javax.swing.JComponent):V
- a:closeFile(com.intellij.openapi.vfs.VirtualFile):V
- a:getAllEditorList(com.intellij.openapi.vfs.VirtualFile):java.util.List
- a:getAllEditors():com.intellij.openapi.fileEditor.FileEditor[]
- a:getAllEditors(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor[]
- a:getComposite(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditorComposite
- a:getData(java.lang.String,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret):java.lang.Object
- getEditorList(com.intellij.openapi.vfs.VirtualFile):java.util.List
- a:getEditors(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor[]
- getFocusedEditor():com.intellij.openapi.fileEditor.FileEditor
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.FileEditorManager
- a:getOpenFiles():com.intellij.openapi.vfs.VirtualFile[]
- a:getProject():com.intellij.openapi.project.Project
- getSelectedEditor():com.intellij.openapi.fileEditor.FileEditor
- a:getSelectedEditor(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor
- a:getSelectedEditors():com.intellij.openapi.fileEditor.FileEditor[]
- a:getSelectedFiles():com.intellij.openapi.vfs.VirtualFile[]
- a:getSelectedTextEditor():com.intellij.openapi.editor.Editor
- hasOpenFiles():Z
- a:isFileOpen(com.intellij.openapi.vfs.VirtualFile):Z
- navigateToTextEditor(com.intellij.openapi.fileEditor.OpenFileDescriptor,Z):V
- f:openEditor(com.intellij.openapi.fileEditor.OpenFileDescriptor,Z):java.util.List
- a:openFile(com.intellij.openapi.vfs.VirtualFile):java.util.List
- a:openFile(com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.fileEditor.FileEditor[]
- openFile(com.intellij.openapi.vfs.VirtualFile,Z,Z):com.intellij.openapi.fileEditor.FileEditor[]
- a:openFileEditor(com.intellij.openapi.fileEditor.FileEditorNavigatable,Z):java.util.List
- a:openTextEditor(com.intellij.openapi.fileEditor.OpenFileDescriptor,Z):com.intellij.openapi.editor.Editor
- a:registerExtraEditorDataProvider(com.intellij.openapi.fileEditor.EditorDataProvider,com.intellij.openapi.Disposable):V
- a:removeBottomComponent(com.intellij.openapi.fileEditor.FileEditor,javax.swing.JComponent):V
- removeFileEditorManagerListener(com.intellij.openapi.fileEditor.FileEditorManagerListener):V
- a:removeTopComponent(com.intellij.openapi.fileEditor.FileEditor,javax.swing.JComponent):V
- a:runWhenLoaded(com.intellij.openapi.editor.Editor,java.lang.Runnable):V
- a:setSelectedEditor(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- updateFileColor(com.intellij.openapi.vfs.VirtualFile):V
- updateFilePresentation(com.intellij.openapi.vfs.VirtualFile):V
f:com.intellij.openapi.fileEditor.FileEditorManagerEvent
- <init>(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.fileEditor.ex.FileEditorWithProvider,com.intellij.openapi.fileEditor.ex.FileEditorWithProvider):V
- <init>(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.fileEditor.FileEditorProvider,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.fileEditor.FileEditorProvider):V
- f:getManager():com.intellij.openapi.fileEditor.FileEditorManager
- f:getNewEditor():com.intellij.openapi.fileEditor.FileEditor
- f:getNewFile():com.intellij.openapi.vfs.VirtualFile
- f:getNewProvider():com.intellij.openapi.fileEditor.FileEditorProvider
- f:getOldEditor():com.intellij.openapi.fileEditor.FileEditor
- f:getOldFile():com.intellij.openapi.vfs.VirtualFile
- f:getOldProvider():com.intellij.openapi.fileEditor.FileEditorProvider
com.intellij.openapi.fileEditor.FileEditorManagerListener
- java.util.EventListener
- sf:FILE_EDITOR_MANAGER:com.intellij.util.messages.Topic
- fileClosed(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.vfs.VirtualFile):V
- fileOpened(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.vfs.VirtualFile):V
- fileOpenedSync(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.Pair):V
- fileOpenedSync(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.vfs.VirtualFile,java.util.List):V
- selectionChanged(com.intellij.openapi.fileEditor.FileEditorManagerEvent):V
com.intellij.openapi.fileEditor.FileEditorManagerListener$Before
- java.util.EventListener
- sf:FILE_EDITOR_MANAGER:com.intellij.util.messages.Topic
- beforeFileClosed(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.vfs.VirtualFile):V
- beforeFileOpened(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.vfs.VirtualFile):V
e:com.intellij.openapi.fileEditor.FileEditorPolicy
- java.lang.Enum
- sf:HIDE_DEFAULT_EDITOR:com.intellij.openapi.fileEditor.FileEditorPolicy
- sf:NONE:com.intellij.openapi.fileEditor.FileEditorPolicy
- sf:PLACE_AFTER_DEFAULT_EDITOR:com.intellij.openapi.fileEditor.FileEditorPolicy
- sf:PLACE_BEFORE_DEFAULT_EDITOR:com.intellij.openapi.fileEditor.FileEditorPolicy
- s:valueOf(java.lang.String):com.intellij.openapi.fileEditor.FileEditorPolicy
- s:values():com.intellij.openapi.fileEditor.FileEditorPolicy[]
com.intellij.openapi.fileEditor.FileEditorProvider
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EMPTY_ARRAY:com.intellij.openapi.fileEditor.FileEditorProvider[]
- sf:EP_FILE_EDITOR_PROVIDER:com.intellij.openapi.extensions.ExtensionPointName
- sf:KEY:com.intellij.openapi.util.Key
- a:accept(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- acceptRequiresReadAction():Z
- a:createEditor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditor
- disposeEditor(com.intellij.openapi.fileEditor.FileEditor):V
- a:getEditorTypeId():java.lang.String
- a:getPolicy():com.intellij.openapi.fileEditor.FileEditorPolicy
- readState(org.jdom.Element,com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileEditor.FileEditorState
- writeState(com.intellij.openapi.fileEditor.FileEditorState,com.intellij.openapi.project.Project,org.jdom.Element):V
com.intellij.openapi.fileEditor.FileNavigator
- sf:Companion:com.intellij.openapi.fileEditor.FileNavigator$Companion
- canNavigate(com.intellij.openapi.fileEditor.OpenFileDescriptor):Z
- canNavigateToSource(com.intellij.openapi.fileEditor.OpenFileDescriptor):Z
- s:getInstance():com.intellij.openapi.fileEditor.FileNavigator
- a:navigate(com.intellij.openapi.fileEditor.OpenFileDescriptor,Z):V
- a:navigateInEditor(com.intellij.openapi.fileEditor.OpenFileDescriptor,Z):Z
f:com.intellij.openapi.fileEditor.FileNavigator$Companion
- f:getInstance():com.intellij.openapi.fileEditor.FileNavigator
com.intellij.openapi.fileEditor.FileOpenedSyncListener
- sf:Companion:com.intellij.openapi.fileEditor.FileOpenedSyncListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- fileOpenedSync(com.intellij.openapi.fileEditor.FileEditorManager,com.intellij.openapi.vfs.VirtualFile,java.util.List):V
f:com.intellij.openapi.fileEditor.FileOpenedSyncListener$Companion
c:com.intellij.openapi.fileEditor.OpenFileDescriptor
- com.intellij.openapi.fileEditor.FileEditorNavigatable
- java.lang.Comparable
- sf:NAVIGATE_IN_EDITOR:com.intellij.openapi.actionSystem.DataKey
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I,I):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I,I,Z):V
- canNavigate():Z
- canNavigateToSource():Z
- compareTo(com.intellij.openapi.fileEditor.OpenFileDescriptor):I
- dispose():V
- getColumn():I
- getFile():com.intellij.openapi.vfs.VirtualFile
- getLine():I
- getOffset():I
- getProject():com.intellij.openapi.project.Project
- getRangeMarker():com.intellij.openapi.editor.RangeMarker
- s:getRangeToUnfoldOnNavigation(com.intellij.openapi.editor.Editor):com.intellij.openapi.util.TextRange
- isUseCurrentWindow():Z
- isUsePreviewTab():Z
- navigate(Z):V
- navigateIn(com.intellij.openapi.editor.Editor):V
- ps:navigateInEditor(com.intellij.openapi.fileEditor.OpenFileDescriptor,com.intellij.openapi.editor.Editor):V
- navigateInEditor(com.intellij.openapi.project.Project,Z):Z
- setScrollType(com.intellij.openapi.editor.ScrollType):V
- setUseCurrentWindow(Z):com.intellij.openapi.fileEditor.OpenFileDescriptor
- setUsePreviewTab(Z):com.intellij.openapi.fileEditor.OpenFileDescriptor
- ps:unfoldCurrentLine(com.intellij.openapi.editor.Editor):V
f:com.intellij.openapi.fileEditor.ex.FileEditorWithProvider
- <init>(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.fileEditor.FileEditorProvider):V
- f:component1():com.intellij.openapi.fileEditor.FileEditor
- f:component2():com.intellij.openapi.fileEditor.FileEditorProvider
- f:copy(com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.fileEditor.FileEditorProvider):com.intellij.openapi.fileEditor.ex.FileEditorWithProvider
- bs:copy$default(com.intellij.openapi.fileEditor.ex.FileEditorWithProvider,com.intellij.openapi.fileEditor.FileEditor,com.intellij.openapi.fileEditor.FileEditorProvider,I,java.lang.Object):com.intellij.openapi.fileEditor.ex.FileEditorWithProvider
- equals(java.lang.Object):Z
- f:getFileEditor():com.intellij.openapi.fileEditor.FileEditor
- f:getProvider():com.intellij.openapi.fileEditor.FileEditorProvider
- hashCode():I
com.intellij.openapi.fileEditor.ex.StructureViewFileEditorProvider
- a:getStructureViewBuilder(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.ide.structureView.StructureViewBuilder
a:com.intellij.openapi.roots.GeneratedSourcesFilter
- sf:Companion:com.intellij.openapi.roots.GeneratedSourcesFilter$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- getNotificationText(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.lang.String
- getOriginalElements(com.intellij.psi.PsiElement):java.util.List
- a:isGeneratedSource(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
- sf:isGeneratedSourceByAnyFilter(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
f:com.intellij.openapi.roots.GeneratedSourcesFilter$Companion
- f:findFirstMatchingFilter(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.roots.GeneratedSourcesFilter
- f:isGeneratedSourceByAnyFilter(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
com.intellij.openapi.ui.InputValidatorEx
- com.intellij.openapi.ui.InputValidator
- canClose(java.lang.String):Z
- checkInput(java.lang.String):Z
- a:getErrorText(java.lang.String):java.lang.String
- getWarningText(java.lang.String):java.lang.String
f:com.intellij.openapi.util.ClassConditionKey
- s:create(java.lang.Class):com.intellij.openapi.util.ClassConditionKey
- isInstance(java.lang.Object):Z
com.intellij.openapi.vfs.LocalFileOperationsHandler
- a:afterDone(com.intellij.util.ThrowableConsumer):V
- a:copy(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,java.lang.String):java.io.File
- a:createDirectory(com.intellij.openapi.vfs.VirtualFile,java.lang.String):Z
- a:createFile(com.intellij.openapi.vfs.VirtualFile,java.lang.String):Z
- a:delete(com.intellij.openapi.vfs.VirtualFile):Z
- a:move(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):Z
- a:rename(com.intellij.openapi.vfs.VirtualFile,java.lang.String):Z
a:com.intellij.openapi.vfs.LocalFileSystem
- com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem
- sf:PROTOCOL:java.lang.String
- sf:PROTOCOL_PREFIX:java.lang.String
- <init>():V
- addRootToWatch(java.lang.String,Z):com.intellij.openapi.vfs.LocalFileSystem$WatchRequest
- addRootsToWatch(java.util.Collection,Z):java.util.Set
- findFileByIoFile(java.io.File):com.intellij.openapi.vfs.VirtualFile
- findFileByNioFile(java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- s:getInstance():com.intellij.openapi.vfs.LocalFileSystem
- refreshAndFindFileByIoFile(java.io.File):com.intellij.openapi.vfs.VirtualFile
- refreshAndFindFileByNioFile(java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- refreshFiles(java.lang.Iterable):V
- a:refreshFiles(java.lang.Iterable,Z,Z,java.lang.Runnable):V
- refreshIoFiles(java.lang.Iterable):V
- a:refreshIoFiles(java.lang.Iterable,Z,Z,java.lang.Runnable):V
- f:refreshNioFiles(java.lang.Iterable):V
- a:refreshNioFiles(java.lang.Iterable,Z,Z,java.lang.Runnable):V
- a:registerAuxiliaryFileOperationsHandler(com.intellij.openapi.vfs.LocalFileOperationsHandler):V
- removeWatchedRoot(com.intellij.openapi.vfs.LocalFileSystem$WatchRequest):V
- removeWatchedRoots(java.util.Collection):V
- replaceWatchedRoot(com.intellij.openapi.vfs.LocalFileSystem$WatchRequest,java.lang.String,Z):com.intellij.openapi.vfs.LocalFileSystem$WatchRequest
- a:replaceWatchedRoots(java.util.Collection,java.util.Collection,java.util.Collection):java.util.Set
- a:unregisterAuxiliaryFileOperationsHandler(com.intellij.openapi.vfs.LocalFileOperationsHandler):V
com.intellij.openapi.vfs.LocalFileSystem$WatchRequest
- a:getRootPath():java.lang.String
- a:isToWatchRecursively():Z
f:com.intellij.openapi.vfs.VfsUtil
- com.intellij.openapi.vfs.VfsUtilCore
- sf:NOTIFICATION_DELAY_MILLIS:J
- <init>():V
- s:collectChildrenRecursively(com.intellij.openapi.vfs.VirtualFile):java.util.List
- s:copy(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:copyDirectory(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFileFilter):V
- s:createChildSequent(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- s:createDirectories(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- s:createDirectoryIfMissing(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- s:createDirectoryIfMissing(com.intellij.openapi.vfs.VirtualFileSystem,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- s:createDirectoryIfMissing(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- s:extractFileName(java.lang.String):java.lang.String
- s:filterNames(java.lang.String[]):java.lang.String[]
- s:findFile(java.nio.file.Path,Z):com.intellij.openapi.vfs.VirtualFile
- s:findFileByIoFile(java.io.File,Z):com.intellij.openapi.vfs.VirtualFile
- s:findFileByURL(java.net.URL):com.intellij.openapi.vfs.VirtualFile
- s:findRelativeFile(com.intellij.openapi.vfs.VirtualFile,java.lang.String[]):com.intellij.openapi.vfs.VirtualFile
- s:getChildren(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile[]
- s:getChildren(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFileFilter):java.util.List
- s:getCommonAncestor(java.util.Collection):com.intellij.openapi.vfs.VirtualFile
- s:getCommonAncestors(com.intellij.openapi.vfs.VirtualFile[]):com.intellij.openapi.vfs.VirtualFile[]
- s:getLocalFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:getNextAvailableName(com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.String):java.lang.String
- s:getParentDir(java.lang.String):java.lang.String
- s:getReadableUrl(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:getUrlForLibraryRoot(java.io.File):java.lang.String
- s:getUrlForLibraryRoot(java.nio.file.Path):java.lang.String
- s:getUserHomeDir():com.intellij.openapi.vfs.VirtualFile
- s:isBadName(java.lang.String):Z
- s:markDirty(Z,Z,com.intellij.openapi.vfs.VirtualFile[]):java.util.List
- s:markDirtyAndRefresh(Z,Z,Z,com.intellij.openapi.vfs.VirtualFile[]):V
- s:markDirtyAndRefresh(Z,Z,Z,java.io.File[]):V
- s:processFileRecursivelyWithoutIgnored(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor):V
- s:refreshAndFindChild(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- s:saveText(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- s:toByteArray(com.intellij.openapi.vfs.VirtualFile,java.lang.String):B[]
- s:toUri(java.io.File):java.net.URI
- s:toUri(java.lang.String):java.net.URI
a:com.intellij.openapi.vfs.newvfs.ArchiveFileSystem
- com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem
- <init>():V
- pa:composeRootPath(java.lang.String):java.lang.String
- contentsToByteArray(com.intellij.openapi.vfs.VirtualFile):B[]
- copyFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildDirectory(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- deleteFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- exists(com.intellij.openapi.vfs.VirtualFile):Z
- pa:extractLocalPath(java.lang.String):java.lang.String
- findLocalByRootPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- getAttributes(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.util.io.FileAttributes
- pa:getHandler(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.impl.ArchiveHandler
- getInputStream(com.intellij.openapi.vfs.VirtualFile):java.io.InputStream
- getLength(com.intellij.openapi.vfs.VirtualFile):J
- getLocalByEntry(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- getOutputStream(com.intellij.openapi.vfs.VirtualFile,java.lang.Object,J,J):java.io.OutputStream
- getRank():I
- p:getRelativePath(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getRootByEntry(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- getRootByLocal(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- getRootPathByLocal(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getTimeStamp(com.intellij.openapi.vfs.VirtualFile):J
- p:isCorrectFileType(com.intellij.openapi.vfs.VirtualFile):Z
- isDirectory(com.intellij.openapi.vfs.VirtualFile):Z
- isWritable(com.intellij.openapi.vfs.VirtualFile):Z
- list(com.intellij.openapi.vfs.VirtualFile):java.lang.String[]
- moveFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- renameFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- setTimeStamp(com.intellij.openapi.vfs.VirtualFile,J):V
- setWritable(com.intellij.openapi.vfs.VirtualFile,Z):V
c:com.intellij.openapi.vfs.newvfs.FileAttribute
- <init>(java.lang.String):V
- <init>(java.lang.String,I,Z):V
- <init>(java.lang.String,I,Z,Z):V
- getId():java.lang.String
- getVersion():I
- isFixedSize():Z
- isVersioned():Z
- newVersion(I):com.intellij.openapi.vfs.newvfs.FileAttribute
- readAttribute(com.intellij.openapi.vfs.VirtualFile):java.io.DataInputStream
- readAttributeBytes(com.intellij.openapi.vfs.VirtualFile):B[]
- readFileAttribute(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.newvfs.AttributeInputStream
- s:resetRegisteredIds():V
- writeAttribute(com.intellij.openapi.vfs.VirtualFile):java.io.DataOutputStream
- writeAttributeBytes(com.intellij.openapi.vfs.VirtualFile,B[]):V
- writeAttributeBytes(com.intellij.openapi.vfs.VirtualFile,B[],I,I):V
- writeFileAttribute(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.newvfs.AttributeOutputStream
com.intellij.openapi.vfs.newvfs.FileSystemInterface
- sf:DEFAULT_LENGTH:J
- sf:DEFAULT_TIMESTAMP:J
- a:contentsToByteArray(com.intellij.openapi.vfs.VirtualFile):B[]
- a:copyFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:createChildDirectory(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:createChildFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:deleteFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- a:exists(com.intellij.openapi.vfs.VirtualFile):Z
- findCachedFilesForPath(java.lang.String):java.lang.Iterable
- a:getInputStream(com.intellij.openapi.vfs.VirtualFile):java.io.InputStream
- a:getLength(com.intellij.openapi.vfs.VirtualFile):J
- a:getOutputStream(com.intellij.openapi.vfs.VirtualFile,java.lang.Object,J,J):java.io.OutputStream
- a:getTimeStamp(com.intellij.openapi.vfs.VirtualFile):J
- a:isDirectory(com.intellij.openapi.vfs.VirtualFile):Z
- a:isSymLink(com.intellij.openapi.vfs.VirtualFile):Z
- a:isWritable(com.intellij.openapi.vfs.VirtualFile):Z
- a:list(com.intellij.openapi.vfs.VirtualFile):java.lang.String[]
- a:moveFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- a:renameFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- a:resolveSymLink(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- a:setTimeStamp(com.intellij.openapi.vfs.VirtualFile,J):V
- a:setWritable(com.intellij.openapi.vfs.VirtualFile,Z):V
a:com.intellij.openapi.vfs.newvfs.ManagingFS
- com.intellij.openapi.vfs.newvfs.FileSystemInterface
- <init>():V
- a:areChildrenLoaded(com.intellij.openapi.vfs.VirtualFile):Z
- a:findFileById(I):com.intellij.openapi.vfs.VirtualFile
- a:findRoot(java.lang.String,com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- a:getCreationTimestamp():J
- a:getFilesystemModificationCount():I
- s:getInstance():com.intellij.openapi.vfs.newvfs.ManagingFS
- s:getInstanceOrNull():com.intellij.openapi.vfs.newvfs.ManagingFS
- a:getLocalRoots():com.intellij.openapi.vfs.VirtualFile[]
- a:getModificationCount(com.intellij.openapi.vfs.VirtualFile):I
- a:getRoots():com.intellij.openapi.vfs.VirtualFile[]
- a:getRoots(com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem):com.intellij.openapi.vfs.VirtualFile[]
- a:getStructureModificationCount():I
- a:readAttribute(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.newvfs.FileAttribute):com.intellij.openapi.vfs.newvfs.AttributeInputStream
- a:wereChildrenAccessed(com.intellij.openapi.vfs.VirtualFile):Z
- a:writeAttribute(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.newvfs.FileAttribute):com.intellij.openapi.vfs.newvfs.AttributeOutputStream
a:com.intellij.openapi.vfs.newvfs.NewVirtualFile
- com.intellij.openapi.vfs.VirtualFile
- com.intellij.openapi.vfs.VirtualFileWithId
- <init>():V
- contentsToByteArray():B[]
- a:findChild(java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- a:findChildIfCached(java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- a:getCachedChildren():java.util.Collection
- a:getCanonicalFile():com.intellij.openapi.vfs.newvfs.NewVirtualFile
- a:getFileSystem():com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem
- a:getId():I
- a:getNameSequence():java.lang.CharSequence
- a:getParent():com.intellij.openapi.vfs.newvfs.NewVirtualFile
- a:isDirty():Z
- isValid():Z
- a:iterInDbChildren():java.lang.Iterable
- a:markClean():V
- a:markDirty():V
- a:markDirtyRecursively():V
- move(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- refresh(Z,Z,java.lang.Runnable):V
- a:refreshAndFindChild(java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- a:setTimeStamp(J):V
- a:setWritable(Z):V
a:com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem
- com.intellij.openapi.vfs.VirtualFileSystem
- com.intellij.openapi.vfs.newvfs.CachingVirtualFileSystem
- com.intellij.openapi.vfs.newvfs.FileSystemInterface
- <init>():V
- addVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- a:copyFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:createChildDirectory(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:createChildFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:deleteFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- pa:extractRootPath(java.lang.String):java.lang.String
- a:findFileByPathIfCached(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:getAttributes(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.util.io.FileAttributes
- getCanonicallyCasedName(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- a:getRank():I
- hasChildren(com.intellij.openapi.vfs.VirtualFile):Z
- isReadOnly():Z
- isSymLink(com.intellij.openapi.vfs.VirtualFile):Z
- markNewFilesAsDirty():Z
- a:moveFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- p:normalize(java.lang.String):java.lang.String
- refreshWithoutFileWatcher(Z):V
- removeVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- a:renameFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- resolveSymLink(com.intellij.openapi.vfs.VirtualFile):java.lang.String
a:com.intellij.openapi.vfs.newvfs.RefreshQueue
- <init>():V
- f:createSession(Z,Z,java.lang.Runnable):com.intellij.openapi.vfs.newvfs.RefreshSession
- a:createSession(Z,Z,java.lang.Runnable,com.intellij.openapi.application.ModalityState):com.intellij.openapi.vfs.newvfs.RefreshSession
- s:getInstance():com.intellij.openapi.vfs.newvfs.RefreshQueue
- f:refresh(Z,Z,java.lang.Runnable,com.intellij.openapi.application.ModalityState,java.util.Collection):V
- f:refresh(Z,Z,java.lang.Runnable,com.intellij.openapi.application.ModalityState,com.intellij.openapi.vfs.VirtualFile[]):V
- f:refresh(Z,Z,java.lang.Runnable,java.util.Collection):V
- f:refresh(Z,Z,java.lang.Runnable,com.intellij.openapi.vfs.VirtualFile[]):V
a:com.intellij.openapi.vfs.newvfs.RefreshSession
- <init>():V
- a:addAllFiles(java.util.Collection):V
- addAllFiles(com.intellij.openapi.vfs.VirtualFile[]):V
- a:addFile(com.intellij.openapi.vfs.VirtualFile):V
- a:cancel():V
- a:launch():V
f:com.intellij.openapi.vfs.newvfs.VirtualFileFilteringListener
- com.intellij.openapi.vfs.VirtualFileListener
- <init>(com.intellij.openapi.vfs.VirtualFileListener,com.intellij.openapi.vfs.VirtualFileSystem):V
- beforeContentsChange(com.intellij.openapi.vfs.VirtualFileEvent):V
- beforeFileDeletion(com.intellij.openapi.vfs.VirtualFileEvent):V
- beforeFileMovement(com.intellij.openapi.vfs.VirtualFileMoveEvent):V
- beforePropertyChange(com.intellij.openapi.vfs.VirtualFilePropertyEvent):V
- contentsChanged(com.intellij.openapi.vfs.VirtualFileEvent):V
- fileCopied(com.intellij.openapi.vfs.VirtualFileCopyEvent):V
- fileCreated(com.intellij.openapi.vfs.VirtualFileEvent):V
- fileDeleted(com.intellij.openapi.vfs.VirtualFileEvent):V
- fileMoved(com.intellij.openapi.vfs.VirtualFileMoveEvent):V
- propertyChanged(com.intellij.openapi.vfs.VirtualFilePropertyEvent):V
f:com.intellij.packageDependencies.DependencyRule
- <init>(com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.psi.search.scope.packageSet.NamedScope,Z):V
- createCopy():com.intellij.packageDependencies.DependencyRule
- equals(java.lang.Object):Z
- getDisplayText():java.lang.String
- getFromScope():com.intellij.psi.search.scope.packageSet.NamedScope
- getToScope():com.intellij.psi.search.scope.packageSet.NamedScope
- hashCode():I
- isApplicable(com.intellij.psi.PsiFile):Z
- isDenyRule():Z
- isForbiddenToUse(com.intellij.psi.PsiFile,com.intellij.psi.PsiFile):Z
- setFromScope(com.intellij.psi.search.scope.packageSet.NamedScope):V
- setToScope(com.intellij.psi.search.scope.packageSet.NamedScope):V
a:com.intellij.packageDependencies.DependencyValidationManager
- com.intellij.psi.search.scope.packageSet.NamedScopesHolder
- <init>(com.intellij.openapi.project.Project):V
- a:addRule(com.intellij.packageDependencies.DependencyRule):V
- a:getAllRules():com.intellij.packageDependencies.DependencyRule[]
- a:getApplicableRules(com.intellij.psi.PsiFile):com.intellij.packageDependencies.DependencyRule[]
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.packageDependencies.DependencyValidationManager
- a:getUnnamedScopes():java.util.Map
- a:getViolatorDependencyRule(com.intellij.psi.PsiFile,com.intellij.psi.PsiFile):com.intellij.packageDependencies.DependencyRule
- a:getViolatorDependencyRules(com.intellij.psi.PsiFile,com.intellij.psi.PsiFile):com.intellij.packageDependencies.DependencyRule[]
- a:hasRules():Z
- a:removeAllRules():V
- a:setSkipImportStatements(Z):V
- a:skipImportStatements():Z
com.intellij.problems.Problem
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
com.intellij.problems.ProblemListener
- sf:TOPIC:com.intellij.util.messages.Topic
- problemsAppeared(com.intellij.openapi.vfs.VirtualFile):V
- problemsChanged(com.intellij.openapi.vfs.VirtualFile):V
- problemsDisappeared(com.intellij.openapi.vfs.VirtualFile):V
a:com.intellij.problems.WolfTheProblemSolver
- psf:FILTER_EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:clearProblems(com.intellij.openapi.vfs.VirtualFile):V
- a:clearProblemsFromExternalSource(com.intellij.openapi.vfs.VirtualFile,java.lang.Object):V
- a:convertToProblem(com.intellij.openapi.vfs.VirtualFile,I,I,java.lang.String[]):com.intellij.problems.Problem
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.problems.WolfTheProblemSolver
- s:getInstanceIfCreated(com.intellij.openapi.project.Project):com.intellij.problems.WolfTheProblemSolver
- a:hasProblemFilesBeneath(com.intellij.openapi.module.Module):Z
- a:hasProblemFilesBeneath(com.intellij.openapi.util.Condition):Z
- a:hasSyntaxErrors(com.intellij.openapi.vfs.VirtualFile):Z
- a:isProblemFile(com.intellij.openapi.vfs.VirtualFile):Z
- a:queue(com.intellij.openapi.vfs.VirtualFile):V
- a:reportProblems(com.intellij.openapi.vfs.VirtualFile,java.util.Collection):V
- a:reportProblemsFromExternalSource(com.intellij.openapi.vfs.VirtualFile,java.lang.Object):V
- a:weHaveGotNonIgnorableProblems(com.intellij.openapi.vfs.VirtualFile,java.util.List):V
- a:weHaveGotProblems(com.intellij.openapi.vfs.VirtualFile,java.util.List):V
com.intellij.profile.ProfileChangeAdapter
- sf:TOPIC:com.intellij.util.messages.Topic
- profileActivated(com.intellij.codeInspection.InspectionProfile,com.intellij.codeInspection.InspectionProfile):V
- profileChanged(com.intellij.codeInspection.InspectionProfile):V
- profilesInitialized():V
com.intellij.psi.ForceableComparable
- a:force():V
com.intellij.psi.InjectedLanguagePlaces
- a:addPlace(com.intellij.lang.Language,com.intellij.openapi.util.TextRange,java.lang.String,java.lang.String):V
com.intellij.psi.IntentionFilterOwner
- a:getIntentionActionsFilter():com.intellij.psi.IntentionFilterOwner$IntentionActionsFilter
- a:setIntentionActionsFilter(com.intellij.psi.IntentionFilterOwner$IntentionActionsFilter):V
com.intellij.psi.IntentionFilterOwner$IntentionActionsFilter
- sf:EVERYTHING_AVAILABLE:com.intellij.psi.IntentionFilterOwner$IntentionActionsFilter
- a:isAvailable(com.intellij.codeInsight.intention.IntentionAction):Z
com.intellij.psi.LanguageInjector
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getLanguagesToInject(com.intellij.psi.PsiLanguageInjectionHost,com.intellij.psi.InjectedLanguagePlaces):V
a:com.intellij.psi.Weigher
- <init>():V
- setDebugName(java.lang.String):V
- a:weigh(java.lang.Object,java.lang.Object):java.lang.Comparable
f:com.intellij.psi.WeigherExtensionPoint
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- com.intellij.util.KeyedLazyInstance
- sf:EP:com.intellij.openapi.extensions.ExtensionPointName
- id:java.lang.String
- implementationClass:java.lang.String
- key:java.lang.String
- <init>():V
- createInstance(com.intellij.openapi.components.ComponentManager,com.intellij.openapi.extensions.PluginDescriptor):com.intellij.psi.Weigher
- getKey():java.lang.String
f:com.intellij.psi.WeighingComparable
- com.intellij.psi.ForceableComparable
- java.lang.Comparable
- <init>(com.intellij.openapi.util.Computable,java.lang.Object,com.intellij.psi.Weigher[]):V
- compareTo(com.intellij.psi.WeighingComparable):I
- force():V
f:com.intellij.psi.WeighingService
- s:getWeighers(com.intellij.openapi.util.Key):java.util.List
- s:weigh(com.intellij.openapi.util.Key,com.intellij.openapi.util.Computable,java.lang.Object):com.intellij.psi.WeighingComparable
- s:weigh(com.intellij.openapi.util.Key,java.lang.Object,java.lang.Object):com.intellij.psi.WeighingComparable
a:com.intellij.psi.file.FileLookupInfoProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getFileTypes():com.intellij.openapi.fileTypes.FileType[]
- a:getLookupInfo(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.util.Pair
a:com.intellij.psi.injection.Injectable
- java.lang.Comparable
- <init>():V
- compareTo(com.intellij.psi.injection.Injectable):I
- s:fromLanguage(com.intellij.lang.Language):com.intellij.psi.injection.Injectable
- getAdditionalDescription():java.lang.String
- a:getDisplayName():java.lang.String
- getIcon():javax.swing.Icon
- a:getId():java.lang.String
- a:getLanguage():com.intellij.lang.Language
- toLanguage():com.intellij.lang.Language
a:com.intellij.psi.injection.ReferenceInjector
- com.intellij.psi.injection.Injectable
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- s:findById(java.lang.String):com.intellij.psi.injection.ReferenceInjector
- f:getLanguage():com.intellij.lang.Language
- a:getReferences(com.intellij.psi.PsiElement,com.intellij.util.ProcessingContext,com.intellij.openapi.util.TextRange):com.intellij.psi.PsiReference[]
f:com.intellij.psi.search.GlobalSearchScopesCore
- <init>():V
- s:directoriesScope(com.intellij.openapi.project.Project,Z,com.intellij.openapi.vfs.VirtualFile[]):com.intellij.psi.search.GlobalSearchScope
- s:directoryScope(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.psi.search.GlobalSearchScope
- s:directoryScope(com.intellij.psi.PsiDirectory,Z):com.intellij.psi.search.GlobalSearchScope
- s:filterScope(com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScope):com.intellij.psi.search.GlobalSearchScope
- s:getProjectProductionFilesScopeName():java.lang.String
- s:getProjectTestFilesScopeName():java.lang.String
- s:projectProductionScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- s:projectTestScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
f:com.intellij.psi.search.GlobalSearchScopesCore$DirectoryScope
- com.intellij.psi.search.GlobalSearchScope
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z):V
- calcHashCode():I
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- equals(java.lang.Object):Z
- getDirectory():com.intellij.openapi.vfs.VirtualFile
- getDisplayName():java.lang.String
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
- isWithSubdirectories():Z
- uniteWith(com.intellij.psi.search.GlobalSearchScope):com.intellij.psi.search.GlobalSearchScope
f:com.intellij.psi.search.scope.GeneratedFilesScope
- com.intellij.psi.search.scope.packageSet.NamedScope
- sf:INSTANCE:com.intellij.psi.search.scope.GeneratedFilesScope
- <init>():V
- getDefaultColorName():java.lang.String
f:com.intellij.psi.search.scope.ProjectFilesScope
- com.intellij.psi.search.scope.packageSet.NamedScope
- sf:INSTANCE:com.intellij.psi.search.scope.ProjectFilesScope
- <init>():V
f:com.intellij.psi.search.scope.ProjectProductionScope
- com.intellij.psi.search.scope.packageSet.NamedScope
- sf:INSTANCE:com.intellij.psi.search.scope.ProjectProductionScope
- s:getNameText():java.lang.String
f:com.intellij.psi.search.scope.TestsScope
- com.intellij.psi.search.scope.packageSet.NamedScope
- sf:INSTANCE:com.intellij.psi.search.scope.TestsScope
- sf:NAME:java.lang.String
- getDefaultColorName():java.lang.String
a:com.intellij.psi.search.scope.packageSet.AbstractPackageSet
- com.intellij.psi.search.scope.packageSet.PackageSetBase
- <init>(java.lang.String):V
- <init>(java.lang.String,I):V
- createCopy():com.intellij.psi.search.scope.packageSet.AbstractPackageSet
- getNodePriority():I
- getText():java.lang.String
f:com.intellij.psi.search.scope.packageSet.ComplementPackageSet
- com.intellij.psi.search.scope.packageSet.PackageSetBase
- <init>(com.intellij.psi.search.scope.packageSet.PackageSet):V
- anyMatches(java.util.function.Predicate):Z
- contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- createCopy():com.intellij.psi.search.scope.packageSet.PackageSet
- getComplementarySet():com.intellij.psi.search.scope.packageSet.PackageSet
- getNodePriority():I
- getText():java.lang.String
- map(java.util.function.Function):com.intellij.psi.search.scope.packageSet.PackageSet
a:com.intellij.psi.search.scope.packageSet.CompoundPackageSet
- com.intellij.psi.search.scope.packageSet.PackageSetBase
- anyMatches(java.util.function.Predicate):Z
- createCopy():com.intellij.psi.search.scope.packageSet.PackageSet
- getSets():com.intellij.psi.search.scope.packageSet.PackageSet[]
- getText():java.lang.String
com.intellij.psi.search.scope.packageSet.CustomScopesFilter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:excludeScope(com.intellij.psi.search.scope.packageSet.NamedScope):Z
com.intellij.psi.search.scope.packageSet.CustomScopesProvider
- sf:CUSTOM_SCOPES_PROVIDER:com.intellij.openapi.extensions.ProjectExtensionPointName
- a:getCustomScopes():java.util.List
- getFilteredScopes():java.util.List
a:com.intellij.psi.search.scope.packageSet.CustomScopesProviderEx
- com.intellij.psi.search.scope.packageSet.CustomScopesProvider
- <init>():V
- s:filterNoSettingsScopes(com.intellij.openapi.project.Project,java.util.List):V
- s:findPredefinedScope(java.lang.String,java.util.List):com.intellij.psi.search.scope.packageSet.NamedScope
- s:getAllScope():com.intellij.psi.search.scope.packageSet.NamedScope
- getCustomScope(java.lang.String):com.intellij.psi.search.scope.packageSet.NamedScope
- isVetoed(com.intellij.psi.search.scope.packageSet.NamedScope,com.intellij.psi.search.scope.packageSet.CustomScopesProviderEx$ScopePlace):Z
e:com.intellij.psi.search.scope.packageSet.CustomScopesProviderEx$ScopePlace
- java.lang.Enum
- sf:ACTION:com.intellij.psi.search.scope.packageSet.CustomScopesProviderEx$ScopePlace
- sf:SETTING:com.intellij.psi.search.scope.packageSet.CustomScopesProviderEx$ScopePlace
- s:valueOf(java.lang.String):com.intellij.psi.search.scope.packageSet.CustomScopesProviderEx$ScopePlace
- s:values():com.intellij.psi.search.scope.packageSet.CustomScopesProviderEx$ScopePlace[]
f:com.intellij.psi.search.scope.packageSet.FilePatternPackageSet
- com.intellij.psi.search.scope.packageSet.PatternBasedPackageSet
- sf:SCOPE_EXT:java.lang.String
- sf:SCOPE_FILE:java.lang.String
- <init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,Z):V
- contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- s:convertToRegexp(java.lang.String,C):java.lang.String
- createCopy():com.intellij.psi.search.scope.packageSet.PackageSet
- s:getLibRelativePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.ProjectFileIndex):java.lang.String
- getNodePriority():I
- getPattern():java.lang.String
- s:getRelativePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.ProjectFileIndex,Z,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getText():java.lang.String
- isOn(java.lang.String):Z
- updateModulePattern(java.lang.String,java.lang.String):com.intellij.psi.search.scope.packageSet.PatternBasedPackageSet
- updatePattern(java.lang.String,java.lang.String):com.intellij.psi.search.scope.packageSet.PatternBasedPackageSet
c:com.intellij.psi.search.scope.packageSet.FilteredNamedScope
- com.intellij.psi.search.scope.packageSet.NamedScope
- <init>(java.lang.String,java.util.function.Supplier,javax.swing.Icon,I,com.intellij.openapi.vfs.VirtualFileFilter):V
a:com.intellij.psi.search.scope.packageSet.FilteredPackageSet
- com.intellij.psi.search.scope.packageSet.AbstractPackageSet
- <init>(java.lang.String):V
- <init>(java.lang.String,I):V
- a:contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
- contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
f:com.intellij.psi.search.scope.packageSet.IntersectionPackageSet
- com.intellij.psi.search.scope.packageSet.CompoundPackageSet
- contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- s:create(com.intellij.psi.search.scope.packageSet.PackageSet[]):com.intellij.psi.search.scope.packageSet.PackageSet
- getNodePriority():I
- getText():java.lang.String
- map(java.util.function.Function):com.intellij.psi.search.scope.packageSet.PackageSet
f:com.intellij.psi.search.scope.packageSet.InvalidPackageSet
- com.intellij.psi.search.scope.packageSet.AbstractPackageSet
- <init>(java.lang.String):V
- contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
f:com.intellij.psi.search.scope.packageSet.NamedPackageSetReference
- com.intellij.psi.search.scope.packageSet.PackageSetBase
- <init>(java.lang.String):V
- contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- createCopy():com.intellij.psi.search.scope.packageSet.PackageSet
- getNodePriority():I
- getText():java.lang.String
c:com.intellij.psi.search.scope.packageSet.NamedScope
- sf:EMPTY_ARRAY:com.intellij.psi.search.scope.packageSet.NamedScope[]
- <init>(java.lang.String,com.intellij.psi.search.scope.packageSet.PackageSet):V
- <init>(java.lang.String,java.util.function.Supplier,javax.swing.Icon,com.intellij.psi.search.scope.packageSet.PackageSet):V
- <init>(java.lang.String,javax.swing.Icon,com.intellij.psi.search.scope.packageSet.PackageSet):V
- createCopy():com.intellij.psi.search.scope.packageSet.NamedScope
- getDefaultColorName():java.lang.String
- getIcon():javax.swing.Icon
- getName():java.lang.String
- getPresentableName():java.lang.String
- getScopeId():java.lang.String
- getValue():com.intellij.psi.search.scope.packageSet.PackageSet
f:com.intellij.psi.search.scope.packageSet.NamedScope$UnnamedScope
- com.intellij.psi.search.scope.packageSet.NamedScope
- <init>(com.intellij.psi.search.scope.packageSet.PackageSet):V
f:com.intellij.psi.search.scope.packageSet.NamedScopeManager
- com.intellij.psi.search.scope.packageSet.NamedScopesHolder
- myOrderState:com.intellij.psi.search.scope.packageSet.NamedScopeManager$OrderState
- <init>(com.intellij.openapi.project.Project):V
- getDisplayName():java.lang.String
- getIcon():javax.swing.Icon
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.search.scope.packageSet.NamedScopeManager
- getState():org.jdom.Element
- loadState(org.jdom.Element):V
f:com.intellij.psi.search.scope.packageSet.NamedScopeManager$OrderState
- myOrder:java.util.List
- <init>():V
- equals(java.lang.Object):Z
- hashCode():I
a:com.intellij.psi.search.scope.packageSet.NamedScopesHolder
- com.intellij.openapi.components.PersistentStateComponent
- pf:myProject:com.intellij.openapi.project.Project
- <init>(com.intellij.openapi.project.Project):V
- addScope(com.intellij.psi.search.scope.packageSet.NamedScope):V
- addScopeListener(com.intellij.psi.search.scope.packageSet.NamedScopesHolder$ScopeListener,com.intellij.openapi.Disposable):V
- f:createScope(java.lang.String,com.intellij.psi.search.scope.packageSet.PackageSet):com.intellij.psi.search.scope.packageSet.NamedScope
- fireScopeListeners():V
- s:getAllNamedScopeHolders(com.intellij.openapi.project.Project):com.intellij.psi.search.scope.packageSet.NamedScopesHolder[]
- a:getDisplayName():java.lang.String
- getEditableScopes():com.intellij.psi.search.scope.packageSet.NamedScope[]
- s:getHolder(com.intellij.openapi.project.Project,java.lang.String,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):com.intellij.psi.search.scope.packageSet.NamedScopesHolder
- a:getIcon():javax.swing.Icon
- getPredefinedScope(java.lang.String):com.intellij.psi.search.scope.packageSet.NamedScope
- getPredefinedScopes():java.util.List
- getProject():com.intellij.openapi.project.Project
- getProjectBaseDir():com.intellij.openapi.vfs.VirtualFile
- s:getScope(com.intellij.openapi.project.Project,java.lang.String):com.intellij.psi.search.scope.packageSet.NamedScope
- getScope(java.lang.String):com.intellij.psi.search.scope.packageSet.NamedScope
- getScopes():com.intellij.psi.search.scope.packageSet.NamedScope[]
- getState():org.jdom.Element
- loadState(org.jdom.Element):V
- removeAllSets():V
- setScopes(com.intellij.psi.search.scope.packageSet.NamedScope[]):V
com.intellij.psi.search.scope.packageSet.NamedScopesHolder$ScopeListener
- a:scopesChanged():V
com.intellij.psi.search.scope.packageSet.PackageSet
- anyMatches(java.util.function.Predicate):Z
- a:contains(com.intellij.psi.PsiFile,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- contains(com.intellij.psi.PsiFileSystemItem,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- a:createCopy():com.intellij.psi.search.scope.packageSet.PackageSet
- a:getNodePriority():I
- a:getText():java.lang.String
- map(java.util.function.Function):com.intellij.psi.search.scope.packageSet.PackageSet
a:com.intellij.psi.search.scope.packageSet.PackageSetBase
- com.intellij.psi.search.scope.packageSet.PackageSet
- <init>():V
- contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- contains(com.intellij.psi.PsiFile,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- contains(com.intellij.psi.PsiFileSystemItem,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- s:getPsiFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.psi.PsiFile
a:com.intellij.psi.search.scope.packageSet.PackageSetFactory
- <init>():V
- a:compile(java.lang.String):com.intellij.psi.search.scope.packageSet.PackageSet
- s:getInstance():com.intellij.psi.search.scope.packageSet.PackageSetFactory
f:com.intellij.psi.search.scope.packageSet.ParsingException
- java.lang.Exception
- <init>(java.lang.String):V
a:com.intellij.psi.search.scope.packageSet.PatternBasedPackageSet
- com.intellij.psi.search.scope.packageSet.PackageSetBase
- pf:myModuleGroupPattern:java.util.regex.Pattern
- pf:myModulePattern:java.util.regex.Pattern
- pf:myModulePatternText:java.lang.String
- <init>(java.lang.String):V
- getModulePattern():java.lang.String
- a:getPattern():java.lang.String
- a:isOn(java.lang.String):Z
- ps:matchesLibrary(java.util.regex.Pattern,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.ProjectFileIndex):Z
- p:matchesModule(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.roots.ProjectFileIndex):Z
- a:updateModulePattern(java.lang.String,java.lang.String):com.intellij.psi.search.scope.packageSet.PatternBasedPackageSet
- a:updatePattern(java.lang.String,java.lang.String):com.intellij.psi.search.scope.packageSet.PatternBasedPackageSet
f:com.intellij.psi.search.scope.packageSet.UnionPackageSet
- com.intellij.psi.search.scope.packageSet.CompoundPackageSet
- contains(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScopesHolder):Z
- s:create(com.intellij.psi.search.scope.packageSet.PackageSet[]):com.intellij.psi.search.scope.packageSet.PackageSet
- getNodePriority():I
- map(java.util.function.Function):com.intellij.psi.search.scope.packageSet.PackageSet
a:com.intellij.psi.statistics.Statistician
- <init>():V
- a:serialize(java.lang.Object,java.lang.Object):com.intellij.psi.statistics.StatisticsInfo
f:com.intellij.psi.statistics.StatisticsInfo
- sf:EMPTY:com.intellij.psi.statistics.StatisticsInfo
- <init>(java.lang.String,java.lang.String):V
- s:createComposite(java.util.List):com.intellij.psi.statistics.StatisticsInfo
- getConjuncts():java.util.List
- getContext():java.lang.String
- getValue():java.lang.String
a:com.intellij.psi.statistics.StatisticsManager
- sf:COLLECTOR:com.intellij.openapi.util.KeyedExtensionCollector
- sf:OBLIVION_THRESHOLD:I
- sf:RECENCY_OBLIVION_THRESHOLD:I
- <init>():V
- a:getAllValues(java.lang.String):com.intellij.psi.statistics.StatisticsInfo[]
- s:getInstance():com.intellij.psi.statistics.StatisticsManager
- a:getLastUseRecency(com.intellij.psi.statistics.StatisticsInfo):I
- getUseCount(com.intellij.openapi.util.Key,java.lang.Object,java.lang.Object):I
- a:getUseCount(com.intellij.psi.statistics.StatisticsInfo):I
- incUseCount(com.intellij.openapi.util.Key,java.lang.Object,java.lang.Object):V
- a:incUseCount(com.intellij.psi.statistics.StatisticsInfo):V
- s:serialize(com.intellij.openapi.util.Key,java.lang.Object,java.lang.Object):com.intellij.psi.statistics.StatisticsInfo
f:com.intellij.psi.util.PsiUtilBase
- com.intellij.psi.util.PsiUtilCore
- com.intellij.psi.util.PsiEditorUtil
- sf:LANGUAGE_COMPARATOR:java.util.Comparator
- <init>():V
- s:asVirtualFile(com.intellij.psi.PsiElement):com.intellij.openapi.vfs.VirtualFile
- s:assertEditorAndProjectConsistent(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- s:findEditor(com.intellij.psi.PsiElement):com.intellij.openapi.editor.Editor
- findEditorByPsiElement(com.intellij.psi.PsiElement):com.intellij.openapi.editor.Editor
- s:getElementAtCaret(com.intellij.openapi.editor.Editor):com.intellij.psi.PsiElement
- s:getLanguageInEditor(com.intellij.openapi.editor.Caret,com.intellij.openapi.project.Project):com.intellij.lang.Language
- s:getLanguageInEditor(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):com.intellij.lang.Language
- s:getPsiFileAtOffset(com.intellij.psi.PsiFile,I):com.intellij.psi.PsiFile
- s:getPsiFileInEditor(com.intellij.openapi.editor.Caret,com.intellij.openapi.project.Project):com.intellij.psi.PsiFile
- s:getPsiFileInEditor(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):com.intellij.psi.PsiFile
- s:getRoot(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- s:isSymLink(com.intellij.psi.PsiFileSystemItem):Z
- s:isUnderPsiRoot(com.intellij.psi.PsiFile,com.intellij.psi.PsiElement):Z
- s:reallyEvaluateLanguageInRange(I,I,com.intellij.psi.PsiFile):com.intellij.lang.Language
a:com.intellij.refactoring.listeners.RefactoringElementAdapter
- com.intellij.refactoring.listeners.RefactoringElementListener
- com.intellij.refactoring.listeners.UndoRefactoringElementListener
- <init>():V
- f:elementMoved(com.intellij.psi.PsiElement):V
- f:elementRenamed(com.intellij.psi.PsiElement):V
- pa:elementRenamedOrMoved(com.intellij.psi.PsiElement):V
com.intellij.refactoring.listeners.RefactoringElementListener
- sf:DEAF:com.intellij.refactoring.listeners.RefactoringElementListener
- a:elementMoved(com.intellij.psi.PsiElement):V
- a:elementRenamed(com.intellij.psi.PsiElement):V
com.intellij.refactoring.listeners.RefactoringElementListenerProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getListener(com.intellij.psi.PsiElement):com.intellij.refactoring.listeners.RefactoringElementListener
com.intellij.refactoring.listeners.UndoRefactoringElementListener
- a:undoElementMovedOrRenamed(com.intellij.psi.PsiElement,java.lang.String):V
c:com.intellij.refactoring.util.MoveRenameUsageInfo
- com.intellij.usageView.UsageInfo
- java.lang.Cloneable
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiReference,I,I,com.intellij.psi.PsiElement,Z):V
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiReference,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiReference,com.intellij.psi.PsiElement):V
- getReference():com.intellij.psi.PsiReference
- getReferencedElement():com.intellij.psi.PsiElement
- getUpToDateReferencedElement():com.intellij.psi.PsiElement
f:com.intellij.refactoring.util.NonCodeUsageInfo
- com.intellij.refactoring.util.MoveRenameUsageInfo
- f:newText:java.lang.String
- s:create(com.intellij.psi.PsiFile,I,I,com.intellij.psi.PsiElement,java.lang.String):com.intellij.refactoring.util.NonCodeUsageInfo
- getReference():com.intellij.psi.PsiReference
- replaceElement(com.intellij.psi.PsiElement):com.intellij.refactoring.util.NonCodeUsageInfo
com.intellij.testIntegration.TestFailedLineManager
- a:getDebugQuickFix(com.intellij.psi.PsiElement,java.lang.String):com.intellij.codeInspection.LocalQuickFix
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.testIntegration.TestFailedLineManager
- a:getRunQuickFix(com.intellij.psi.PsiElement):com.intellij.codeInspection.LocalQuickFix
- a:getTestInfo(com.intellij.psi.PsiElement):com.intellij.testIntegration.TestFailedLineManager$TestInfo
com.intellij.testIntegration.TestFailedLineManager$TestInfo
- a:getErrorMessage():java.lang.String
- a:getMagnitude():I
- a:getTopStackTraceLine():java.lang.String
f:com.intellij.util.FileContentUtil
- <init>():V
- s:reparseFiles(com.intellij.openapi.project.Project,java.util.Collection,Z):V
- s:reparseOpenedFiles():V
c:com.intellij.webcore.packaging.InstalledPackage
- <init>(java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getName():java.lang.String
- getTooltipText():java.lang.String
- getVersion():java.lang.String
- hashCode():I
a:com.intellij.webcore.packaging.PackageManagementService
- <init>():V
- addRepository(java.lang.String):V
- canInstallToUser():Z
- canManageRepositories():Z
- canModifyRepository(java.lang.String):Z
- compareVersions(java.lang.String,java.lang.String):I
- fetchAllRepositories(com.intellij.util.CatchingConsumer):V
- a:fetchPackageDetails(java.lang.String,com.intellij.util.CatchingConsumer):V
- a:fetchPackageVersions(java.lang.String,com.intellij.util.CatchingConsumer):V
- a:getAllPackages():java.util.List
- getAllPackagesCached():java.util.List
- getAllRepositories():java.util.List
- getID():java.lang.String
- getInstallToUserText():java.lang.String
- getInstalledPackages():java.util.Collection
- getInstalledPackagesList():java.util.List
- a:installPackage(com.intellij.webcore.packaging.RepoPackage,java.lang.String,Z,java.lang.String,com.intellij.webcore.packaging.PackageManagementService$Listener,Z):V
- installToUserChanged(Z):V
- isInstallToUserSelected():Z
- a:reloadAllPackages():java.util.List
- removeRepository(java.lang.String):V
- a:uninstallPackages(java.util.List,com.intellij.webcore.packaging.PackageManagementService$Listener):V
c:com.intellij.webcore.packaging.PackageManagementService$ErrorDescription
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- s:fromMessage(java.lang.String):com.intellij.webcore.packaging.PackageManagementService$ErrorDescription
- getCommand():java.lang.String
- getMessage():java.lang.String
- getOutput():java.lang.String
- getSolution():java.lang.String
com.intellij.webcore.packaging.PackageManagementService$Listener
- a:operationFinished(java.lang.String,com.intellij.webcore.packaging.PackageManagementService$ErrorDescription):V
- a:operationStarted(java.lang.String):V
f:com.intellij.webcore.packaging.PackageVersionComparator
- java.util.Comparator
- sf:VERSION_COMPARATOR:java.util.Comparator
- <init>():V
- compare(java.lang.String,java.lang.String):I
c:com.intellij.webcore.packaging.RepoPackage
- java.lang.Comparable
- <init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Collection):V
- compareTo(java.lang.Object):I
- getKeywords():java.util.Collection
- getLatestVersion():java.lang.String
- getName():java.lang.String
- getRepoUrl():java.lang.String
