*:com.intellij.codeInsight.completion.ml.MLRankingIgnorable
- s:wrap(com.intellij.codeInsight.lookup.LookupElement):com.intellij.codeInsight.lookup.LookupElement
*:com.intellij.codeInsight.highlighting.PsiHighlightedReference
- com.intellij.model.psi.PsiSymbolReference
- highlightMessage():java.lang.String
- highlightReference(com.intellij.lang.annotation.AnnotationBuilder):com.intellij.lang.annotation.AnnotationBuilder
- highlightSeverity():com.intellij.lang.annotation.HighlightSeverity
f:com.intellij.codeInsight.intention.preview.IntentionPreviewUtils
- *s:getModCommandPreview(com.intellij.modcommand.ModCommand,com.intellij.modcommand.ActionContext):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
com.intellij.codeInsight.lookup.LookupEx
- com.intellij.codeInsight.lookup.Lookup
- *a:setPresentation(com.intellij.codeInsight.lookup.LookupPresentation):V
*e:com.intellij.codeInsight.lookup.LookupPositionStrategy
- java.lang.Enum
- sf:ONLY_ABOVE:com.intellij.codeInsight.lookup.LookupPositionStrategy
- sf:PREFER_BELOW:com.intellij.codeInsight.lookup.LookupPositionStrategy
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeInsight.lookup.LookupPositionStrategy
- s:values():com.intellij.codeInsight.lookup.LookupPositionStrategy[]
*f:com.intellij.codeInsight.lookup.LookupPresentation
- f:getMaxVisibleItemsCount():I
- f:getMaxVisibleItemsProperty():kotlin.properties.ReadWriteProperty
- f:getMostRelevantOnTop():Z
- f:getPositionStrategy():com.intellij.codeInsight.lookup.LookupPositionStrategy
- f:setMaxVisibleItemsCount(I):V
*f:com.intellij.codeInsight.lookup.LookupPresentation$Builder
- <init>():V
- <init>(com.intellij.codeInsight.lookup.LookupPresentation):V
- f:build():com.intellij.codeInsight.lookup.LookupPresentation
- f:withMaxVisibleItemsCount(kotlin.properties.ReadWriteProperty):com.intellij.codeInsight.lookup.LookupPresentation$Builder
- f:withMostRelevantOnTop(Z):com.intellij.codeInsight.lookup.LookupPresentation$Builder
- f:withPositionStrategy(com.intellij.codeInsight.lookup.LookupPositionStrategy):com.intellij.codeInsight.lookup.LookupPresentation$Builder
com.intellij.codeInsight.template.TemplateBuilder
- *a:replaceElement(com.intellij.psi.PsiElement,java.lang.String,com.intellij.codeInsight.template.Expression,Z):V
- *a:replaceElement(com.intellij.psi.PsiElement,java.lang.String,java.lang.String,Z):V
*a:com.intellij.codeInspection.options.CustomComponentExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(java.lang.String):V
- component(java.lang.Object):com.intellij.codeInspection.options.OptCustom
- componentId():java.lang.String
- deserializeData(java.lang.String):java.lang.Object
- s:find(java.lang.String):com.intellij.codeInspection.options.CustomComponentExtension
- serializeData(java.lang.Object):java.lang.String
*:com.intellij.codeInspection.options.OptionControllerProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:forContext(com.intellij.psi.PsiElement):com.intellij.codeInspection.options.OptionController
- s:getOption(com.intellij.psi.PsiElement,java.lang.String):java.lang.Object
- a:name():java.lang.String
- s:rootController(com.intellij.psi.PsiElement):com.intellij.codeInspection.options.OptionController
- s:setOption(com.intellij.psi.PsiElement,java.lang.String,java.lang.Object):V
*:com.intellij.formatting.CaretRestorationDecider
- *sf:Companion:com.intellij.formatting.CaretRestorationDecider$Companion
- s:forLanguage(com.intellij.lang.Language):com.intellij.formatting.CaretRestorationDecider
- a:shouldRestoreCaret(com.intellij.openapi.editor.Document,com.intellij.openapi.editor.Editor,I):Z
*f:com.intellij.formatting.CaretRestorationDecider$Companion
- f:forLanguage(com.intellij.lang.Language):com.intellij.formatting.CaretRestorationDecider
f:com.intellij.inlinePrompt.InlinePrompt
- *sf:isInlinePromptGenerating(com.intellij.openapi.editor.Editor):Z
- *sf:isInlinePromptGenerating(com.intellij.openapi.editor.Editor,java.lang.Integer):Z
- *sf:isInlinePromptGenerating(com.intellij.openapi.editor.Editor,java.lang.Integer,com.intellij.openapi.project.Project):Z
- *bs:isInlinePromptGenerating$default(com.intellij.openapi.editor.Editor,java.lang.Integer,com.intellij.openapi.project.Project,I,java.lang.Object):Z
- *sf:isInlinePromptShown(com.intellij.openapi.editor.Editor):Z
- *sf:isInlinePromptShown(com.intellij.openapi.editor.Editor,java.lang.Integer):Z
- *sf:isInlinePromptShown(com.intellij.openapi.editor.Editor,java.lang.Integer,com.intellij.openapi.project.Project):Z
- *bs:isInlinePromptShown$default(com.intellij.openapi.editor.Editor,java.lang.Integer,com.intellij.openapi.project.Project,I,java.lang.Object):Z
com.intellij.lang.annotation.AnnotationBuilder
- *a:withLazyQuickFix(java.util.function.Consumer):com.intellij.lang.annotation.AnnotationBuilder
*f:com.intellij.lang.documentation.DocumentationSettings
- s:autoShowQuickDocInModalDialogs():Z
- s:getHighlightingSaturation(Z):F
- s:getInlineCodeHighlightingMode():com.intellij.lang.documentation.DocumentationSettings$InlineCodeHighlightingMode
- s:getMonospaceFontSizeCorrection(Z):I
- s:isCodeBackgroundEnabled():Z
- s:isHighlightingOfCodeBlocksEnabled():Z
- s:isHighlightingOfQuickDocSignaturesEnabled():Z
- s:isSemanticHighlightingOfLinksEnabled():Z
*e:com.intellij.lang.documentation.DocumentationSettings$InlineCodeHighlightingMode
- java.lang.Enum
- sf:AS_DEFAULT_CODE:com.intellij.lang.documentation.DocumentationSettings$InlineCodeHighlightingMode
- sf:NO_HIGHLIGHTING:com.intellij.lang.documentation.DocumentationSettings$InlineCodeHighlightingMode
- sf:SEMANTIC_HIGHLIGHTING:com.intellij.lang.documentation.DocumentationSettings$InlineCodeHighlightingMode
- s:valueOf(java.lang.String):com.intellij.lang.documentation.DocumentationSettings$InlineCodeHighlightingMode
- s:values():com.intellij.lang.documentation.DocumentationSettings$InlineCodeHighlightingMode[]
*f:com.intellij.modcommand.FutureVirtualFile
- com.intellij.testFramework.LightVirtualFile
- <init>(com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.fileTypes.FileType):V
- getParent():com.intellij.openapi.vfs.VirtualFile
*f:com.intellij.modcommand.ModChooseMember
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(java.lang.String,java.util.List,java.util.List,com.intellij.modcommand.ModChooseMember$SelectionMode,java.util.function.Function):V
- defaultSelection():java.util.List
- elements():java.util.List
- f:equals(java.lang.Object):Z
- f:hashCode():I
- mode():com.intellij.modcommand.ModChooseMember$SelectionMode
- nextCommand():java.util.function.Function
- title():java.lang.String
*e:com.intellij.modcommand.ModChooseMember$SelectionMode
- java.lang.Enum
- sf:MULTIPLE:com.intellij.modcommand.ModChooseMember$SelectionMode
- sf:MULTIPLE_OR_EMPTY:com.intellij.modcommand.ModChooseMember$SelectionMode
- sf:SINGLE:com.intellij.modcommand.ModChooseMember$SelectionMode
- sf:SINGLE_OR_EMPTY:com.intellij.modcommand.ModChooseMember$SelectionMode
- s:valueOf(java.lang.String):com.intellij.modcommand.ModChooseMember$SelectionMode
- s:values():com.intellij.modcommand.ModChooseMember$SelectionMode[]
com.intellij.modcommand.ModCommand
- *s:chooseMultipleMembers(java.lang.String,java.util.List,java.util.List,java.util.function.Function):com.intellij.modcommand.ModCommand
- *s:chooseMultipleMembers(java.lang.String,java.util.List,java.util.function.Function):com.intellij.modcommand.ModCommand
- *s:moveCaretAfter(com.intellij.modcommand.ModCommand,com.intellij.psi.PsiFile,I,Z):com.intellij.modcommand.ModCommand
- *s:updateOption(com.intellij.psi.PsiElement,java.lang.String,java.lang.Object):com.intellij.modcommand.ModCommand
- *s:updateOptionList(com.intellij.psi.PsiElement,java.lang.String,java.util.function.Consumer):com.intellij.modcommand.ModCommand
*a:com.intellij.modcommand.ModCommandBatchQuickFix
- com.intellij.modcommand.ModCommandQuickFix
- com.intellij.codeInspection.BatchQuickFix
- <init>():V
- f:applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.CommonProblemDescriptor[],java.util.List,java.lang.Runnable):V
- perform(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):com.intellij.modcommand.ModCommand
- a:perform(com.intellij.openapi.project.Project,java.util.List):com.intellij.modcommand.ModCommand
com.intellij.modcommand.ModCommandExecutor
- *s:executeInteractively(com.intellij.modcommand.ActionContext,java.lang.String,com.intellij.openapi.editor.Editor,java.util.function.Supplier):V
*:com.intellij.modcommand.ModPsiNavigator
- a:getCaretOffset():I
- a:moveCaretTo(I):V
- a:moveCaretTo(com.intellij.psi.PsiElement):V
- a:select(com.intellij.openapi.util.TextRange):V
- a:select(com.intellij.psi.PsiElement):V
com.intellij.modcommand.ModPsiUpdater
- com.intellij.modcommand.ModPsiNavigator
- *a:trackDeclaration(com.intellij.psi.PsiElement):V
*f:com.intellij.modcommand.ModUpdateReferences
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.util.TextRange,com.intellij.openapi.util.TextRange):V
- f:equals(java.lang.Object):Z
- file():com.intellij.openapi.vfs.VirtualFile
- f:hashCode():I
- newRange():com.intellij.openapi.util.TextRange
- oldRange():com.intellij.openapi.util.TextRange
- oldText():java.lang.String
- withNewRange(com.intellij.openapi.util.TextRange):com.intellij.modcommand.ModUpdateReferences
*f:com.intellij.modcommand.ModUpdateSystemOptions
- java.lang.Record
- com.intellij.modcommand.ModCommand
- <init>(java.util.List):V
- andThen(com.intellij.modcommand.ModCommand):com.intellij.modcommand.ModCommand
- f:equals(java.lang.Object):Z
- f:hashCode():I
- isEmpty():Z
- options():java.util.List
*f:com.intellij.modcommand.ModUpdateSystemOptions$ModifiedOption
- java.lang.Record
- <init>(java.lang.String,java.lang.Object,java.lang.Object):V
- bindId():java.lang.String
- f:equals(java.lang.Object):Z
- f:hashCode():I
- newValue():java.lang.Object
- oldValue():java.lang.Object
*a:com.intellij.modcommand.PsiUpdateModCommandAction
- com.intellij.modcommand.PsiBasedModCommandAction
- p:<init>(com.intellij.psi.PsiElement):V
- p:<init>(java.lang.Class):V
- pa:invoke(com.intellij.modcommand.ActionContext,com.intellij.psi.PsiElement,com.intellij.modcommand.ModPsiUpdater):V
- pf:perform(com.intellij.modcommand.ActionContext,com.intellij.psi.PsiElement):com.intellij.modcommand.ModCommand
*:com.intellij.model.psi.PsiCompletableReference
- com.intellij.model.psi.PsiSymbolReference
- a:getCompletionVariants():java.util.Collection
*:com.intellij.openapi.command.undo.ActionChangeRange
- a:asInverted():com.intellij.openapi.command.undo.ActionChangeRange
- a:getId():I
- a:getNewDocumentLength():I
- a:getNewLength():I
- a:getOffset():I
- a:getOldDocumentLength():I
- a:getOldLength():I
- a:getTimestamp():I
- a:toImmutable(Z):com.intellij.openapi.command.undo.ImmutableActionChangeRange
*:com.intellij.openapi.command.undo.AdjustableUndoableAction
- com.intellij.openapi.command.undo.UndoableAction
- a:getChangeRanges(com.intellij.openapi.command.undo.DocumentReference):java.util.List
*f:com.intellij.openapi.command.undo.ImmutableActionChangeRange
- com.intellij.openapi.command.undo.ActionChangeRange
- *sf:Companion:com.intellij.openapi.command.undo.ImmutableActionChangeRange$Companion
- asInverted():com.intellij.openapi.command.undo.ImmutableActionChangeRange
- f:getActionReference():java.lang.ref.WeakReference
- getId():I
- getNewDocumentLength():I
- getNewLength():I
- getOffset():I
- getOldDocumentLength():I
- getOldLength():I
- getTimestamp():I
- f:hasTheSameOrigin(com.intellij.openapi.command.undo.ImmutableActionChangeRange):Z
- f:isSymmetricTo(com.intellij.openapi.command.undo.ImmutableActionChangeRange):Z
- f:moveAfter(com.intellij.openapi.command.undo.ImmutableActionChangeRange,Z):com.intellij.openapi.command.undo.ImmutableActionChangeRange
- toImmutable(Z):com.intellij.openapi.command.undo.ImmutableActionChangeRange
*f:com.intellij.openapi.command.undo.ImmutableActionChangeRange$Companion
- f:createNew(I,I,I,I,I,com.intellij.openapi.command.undo.AdjustableUndoableAction):com.intellij.openapi.command.undo.ImmutableActionChangeRange
*:com.intellij.openapi.command.undo.MutableActionChangeRange
- com.intellij.openapi.command.undo.ActionChangeRange
- a:asInverted():com.intellij.openapi.command.undo.MutableActionChangeRange
- a:getOriginalTimestamp():I
- a:getState():com.intellij.openapi.command.undo.ImmutableActionChangeRange
- isMoved():Z
- a:setState(com.intellij.openapi.command.undo.ImmutableActionChangeRange):V
*f:com.intellij.openapi.command.undo.MutableActionChangeRangeImpl
- com.intellij.openapi.command.undo.MutableActionChangeRange
- <init>(com.intellij.openapi.command.undo.ImmutableActionChangeRange):V
- asInverted():com.intellij.openapi.command.undo.MutableActionChangeRange
- getId():I
- getNewDocumentLength():I
- getNewLength():I
- getOffset():I
- getOldDocumentLength():I
- getOldLength():I
- getOriginalTimestamp():I
- getState():com.intellij.openapi.command.undo.ImmutableActionChangeRange
- getTimestamp():I
- setState(com.intellij.openapi.command.undo.ImmutableActionChangeRange):V
- toImmutable(Z):com.intellij.openapi.command.undo.ImmutableActionChangeRange
a:com.intellij.openapi.command.undo.UndoManager
- *a:getNextRedoNanoTime(com.intellij.openapi.fileEditor.FileEditor):J
- *a:getNextUndoNanoTime(com.intellij.openapi.fileEditor.FileEditor):J
- *a:isNextRedoAskConfirmation(com.intellij.openapi.fileEditor.FileEditor):Z
- *a:isNextUndoAskConfirmation(com.intellij.openapi.fileEditor.FileEditor):Z
a:com.intellij.openapi.fileEditor.FileEditorManager
- *a:getOpenFilesWithRemotes():java.util.List
- *:getSelectedEditorWithRemotes():java.util.Collection
- *:getSelectedTextEditor(Z):com.intellij.openapi.editor.Editor
- *:getSelectedTextEditorWithRemotes():com.intellij.openapi.editor.Editor[]
- *:isFileOpenWithRemotes(com.intellij.openapi.vfs.VirtualFile):Z
- *:requestOpenFile(com.intellij.openapi.vfs.VirtualFile):V
e:com.intellij.openapi.fileEditor.FileEditorPolicy
- java.lang.Enum
- *sf:HIDE_OTHER_EDITORS:com.intellij.openapi.fileEditor.FileEditorPolicy
*f:com.intellij.openapi.vfs.newvfs.AttributeInputStream
- java.io.DataInputStream
- readEnumeratedString():java.lang.String
*a:com.intellij.openapi.vfs.newvfs.AttributeOutputStream
- com.intellij.util.io.DataOutputStream
- com.intellij.util.io.RepresentableAsByteArraySequence
- <init>(java.io.OutputStream):V
- asByteArraySequence():com.intellij.openapi.util.io.ByteArraySequence
- a:writeEnumeratedString(java.lang.String):V
*f:com.intellij.openapi.vfs.newvfs.AttributeOutputStreamImpl
- com.intellij.openapi.vfs.newvfs.AttributeOutputStream
- writeEnumeratedString(java.lang.String):V
a:com.intellij.openapi.vfs.newvfs.NewVirtualFile
- com.intellij.openapi.vfs.VirtualFile
- com.intellij.openapi.vfs.VirtualFileWithId
- *a:isOffline():Z
- *a:setOffline(Z):V
