f:com.intellij.platform.backend.workspace.UseNewWorkspaceModelApiKt
- sf:useNewWorkspaceModelApiForUnloadedModules():Z
- sf:useQueryCacheWorkspaceModelApi():Z
- sf:useReactiveWorkspaceModelApi():Z
f:com.intellij.platform.backend.workspace.VirtualFileUrls
- sf:getVirtualFile(com.intellij.platform.workspace.storage.url.VirtualFileUrl):com.intellij.openapi.vfs.VirtualFile
- sf:toVirtualFileUrl(com.intellij.openapi.vfs.VirtualFile,com.intellij.platform.workspace.storage.url.VirtualFileUrlManager):com.intellij.platform.workspace.storage.url.VirtualFileUrl
*:com.intellij.platform.backend.workspace.WorkspaceEntityLifecycleSupporter
- *sf:Companion:com.intellij.platform.backend.workspace.WorkspaceEntityLifecycleSupporter$Companion
- a:createSampleEntity(com.intellij.openapi.project.Project):com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
- a:getEntityClass():java.lang.Class
- a:haveEqualData(com.intellij.platform.workspace.storage.WorkspaceEntity$Builder,com.intellij.platform.workspace.storage.WorkspaceEntity):Z
*f:com.intellij.platform.backend.workspace.WorkspaceEntityLifecycleSupporter$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
com.intellij.platform.backend.workspace.WorkspaceModel
- sf:Companion:com.intellij.platform.backend.workspace.WorkspaceModel$Companion
- a:getCurrentSnapshot():com.intellij.platform.workspace.storage.ImmutableEntityStorage
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.platform.backend.workspace.WorkspaceModel
- a:getVirtualFileUrlManager():com.intellij.platform.workspace.storage.url.VirtualFileUrlManager
- a:subscribe(kotlin.jvm.functions.Function4,kotlin.coroutines.Continuation):java.lang.Object
- a:update(java.lang.String,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- a:updateProjectModel(java.lang.String,kotlin.jvm.functions.Function1):V
f:com.intellij.platform.backend.workspace.WorkspaceModel$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.platform.backend.workspace.WorkspaceModel
com.intellij.platform.backend.workspace.WorkspaceModelChangeListener
- java.util.EventListener
- beforeChanged(com.intellij.platform.workspace.storage.VersionedStorageChange):V
- changed(com.intellij.platform.workspace.storage.VersionedStorageChange):V
f:com.intellij.platform.backend.workspace.WorkspaceModelKt
- sf:getWorkspaceModel(com.intellij.openapi.project.Project):com.intellij.platform.backend.workspace.WorkspaceModel
f:com.intellij.platform.backend.workspace.WorkspaceModelTopics
- sf:CHANGED:com.intellij.util.messages.Topic
- sf:Companion:com.intellij.platform.backend.workspace.WorkspaceModelTopics$Companion
- sf:UNLOADED_ENTITIES_CHANGED:com.intellij.util.messages.Topic
- <init>():V
- f:getModulesAreLoaded():Z
- f:notifyModulesAreLoaded():V
f:com.intellij.platform.backend.workspace.WorkspaceModelTopics$Companion
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.platform.backend.workspace.WorkspaceModelTopics
com.intellij.platform.backend.workspace.WorkspaceModelUnloadedStorageChangeListener
- java.util.EventListener
- a:changed(com.intellij.platform.workspace.storage.VersionedStorageChange):V
