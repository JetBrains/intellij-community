public abstract interface class org/jetbrains/jewel/markdown/InlineMarkdown {
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Code : org/jetbrains/jewel/markdown/InlineMarkdown, org/jetbrains/jewel/markdown/WithTextContent {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getContent ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/jewel/markdown/InlineMarkdown$CustomNode : org/jetbrains/jewel/markdown/InlineMarkdown {
	public abstract fun contentOrNull ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$CustomNode$DefaultImpls {
	public static fun contentOrNull (Lorg/jetbrains/jewel/markdown/InlineMarkdown$CustomNode;)Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Emphasis : org/jetbrains/jewel/markdown/InlineMarkdown, org/jetbrains/jewel/markdown/WithInlineMarkdown {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun <init> (Ljava/lang/String;[Lorg/jetbrains/jewel/markdown/InlineMarkdown;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDelimiter ()Ljava/lang/String;
	public fun getInlineContent ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$HardLineBreak : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final field $stable I
	public static final field INSTANCE Lorg/jetbrains/jewel/markdown/InlineMarkdown$HardLineBreak;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$HtmlInline : org/jetbrains/jewel/markdown/InlineMarkdown, org/jetbrains/jewel/markdown/WithTextContent {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getContent ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Image : org/jetbrains/jewel/markdown/InlineMarkdown, org/jetbrains/jewel/markdown/WithInlineMarkdown {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Lorg/jetbrains/jewel/markdown/InlineMarkdown;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAlt ()Ljava/lang/String;
	public fun getInlineContent ()Ljava/util/List;
	public final fun getSource ()Ljava/lang/String;
	public final fun getTitle ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Link : org/jetbrains/jewel/markdown/InlineMarkdown, org/jetbrains/jewel/markdown/WithInlineMarkdown {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;[Lorg/jetbrains/jewel/markdown/InlineMarkdown;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDestination ()Ljava/lang/String;
	public fun getInlineContent ()Ljava/util/List;
	public final fun getTitle ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$SoftLineBreak : org/jetbrains/jewel/markdown/InlineMarkdown {
	public static final field $stable I
	public static final field INSTANCE Lorg/jetbrains/jewel/markdown/InlineMarkdown$SoftLineBreak;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$StrongEmphasis : org/jetbrains/jewel/markdown/InlineMarkdown, org/jetbrains/jewel/markdown/WithInlineMarkdown {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun <init> (Ljava/lang/String;[Lorg/jetbrains/jewel/markdown/InlineMarkdown;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDelimiter ()Ljava/lang/String;
	public fun getInlineContent ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/InlineMarkdown$Text : org/jetbrains/jewel/markdown/InlineMarkdown, org/jetbrains/jewel/markdown/WithTextContent {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getContent ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/jewel/markdown/MarkdownBlock {
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$BlockQuote : org/jetbrains/jewel/markdown/MarkdownBlock {
	public static final field $stable I
	public fun <init> (Ljava/util/List;)V
	public fun <init> ([Lorg/jetbrains/jewel/markdown/MarkdownBlock;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock : org/jetbrains/jewel/markdown/MarkdownBlock {
	public abstract fun getContent ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock : org/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock {
	public static final field $stable I
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getContent ()Ljava/lang/String;
	public final fun getMimeType-VwCp3SY ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$IndentedCodeBlock : org/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getContent ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/jewel/markdown/MarkdownBlock$CustomBlock : org/jetbrains/jewel/markdown/MarkdownBlock {
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$Heading : org/jetbrains/jewel/markdown/MarkdownBlock, org/jetbrains/jewel/markdown/WithInlineMarkdown {
	public static final field $stable I
	public fun <init> (I[Lorg/jetbrains/jewel/markdown/InlineMarkdown;)V
	public fun <init> (Ljava/util/List;I)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlineContent ()Ljava/util/List;
	public final fun getLevel ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$HtmlBlock : org/jetbrains/jewel/markdown/MarkdownBlock {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContent ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/jewel/markdown/MarkdownBlock$ListBlock : org/jetbrains/jewel/markdown/MarkdownBlock {
	public abstract fun getChildren ()Ljava/util/List;
	public abstract fun isTight ()Z
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$OrderedList : org/jetbrains/jewel/markdown/MarkdownBlock$ListBlock {
	public static final field $stable I
	public fun <init> (Ljava/util/List;ZILjava/lang/String;)V
	public fun <init> (ZILjava/lang/String;[Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListItem;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public final fun getDelimiter ()Ljava/lang/String;
	public final fun getStartFrom ()I
	public fun hashCode ()I
	public fun isTight ()Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$UnorderedList : org/jetbrains/jewel/markdown/MarkdownBlock$ListBlock {
	public static final field $stable I
	public fun <init> (Ljava/util/List;ZLjava/lang/String;)V
	public fun <init> (ZLjava/lang/String;[Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListItem;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public final fun getMarker ()Ljava/lang/String;
	public fun hashCode ()I
	public fun isTight ()Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$ListItem : org/jetbrains/jewel/markdown/MarkdownBlock {
	public static final field $stable I
	public fun <init> (Ljava/util/List;)V
	public fun <init> ([Lorg/jetbrains/jewel/markdown/MarkdownBlock;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$Paragraph : org/jetbrains/jewel/markdown/MarkdownBlock, org/jetbrains/jewel/markdown/WithInlineMarkdown {
	public static final field $stable I
	public fun <init> (Ljava/util/List;)V
	public fun <init> ([Lorg/jetbrains/jewel/markdown/InlineMarkdown;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlineContent ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownBlock$ThematicBreak : org/jetbrains/jewel/markdown/MarkdownBlock {
	public static final field $stable I
	public static final field INSTANCE Lorg/jetbrains/jewel/markdown/MarkdownBlock$ThematicBreak;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/MarkdownKt {
	public static final fun LazyMarkdown (Ljava/util/List;Landroidx/compose/ui/Modifier;Landroidx/compose/foundation/layout/PaddingValues;Landroidx/compose/foundation/lazy/LazyListState;ZZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling;Lorg/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer;Landroidx/compose/runtime/Composer;II)V
	public static final fun Markdown (Ljava/lang/String;Landroidx/compose/ui/Modifier;ZZLkotlinx/coroutines/CoroutineDispatcher;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling;Lorg/jetbrains/jewel/markdown/processing/MarkdownProcessor;Lorg/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer;Landroidx/compose/runtime/Composer;II)V
	public static final fun Markdown (Ljava/util/List;Ljava/lang/String;Landroidx/compose/ui/Modifier;ZZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling;Lorg/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer;Landroidx/compose/runtime/Composer;II)V
}

public abstract interface class org/jetbrains/jewel/markdown/MarkdownMode {
}

public final class org/jetbrains/jewel/markdown/MarkdownMode$EditorPreview : org/jetbrains/jewel/markdown/MarkdownMode {
	public static final field $stable I
	public fun <init> (Lorg/jetbrains/jewel/markdown/scrolling/ScrollingSynchronizer;)V
	public final fun getScrollingSynchronizer ()Lorg/jetbrains/jewel/markdown/scrolling/ScrollingSynchronizer;
}

public final class org/jetbrains/jewel/markdown/MarkdownMode$Standalone : org/jetbrains/jewel/markdown/MarkdownMode {
	public static final field $stable I
	public static final field INSTANCE Lorg/jetbrains/jewel/markdown/MarkdownMode$Standalone;
}

public final class org/jetbrains/jewel/markdown/MarkdownModeKt {
	public static final fun WithMarkdownMode (Lorg/jetbrains/jewel/markdown/MarkdownMode;Lkotlin/jvm/functions/Function2;Landroidx/compose/runtime/Composer;I)V
}

public final class org/jetbrains/jewel/markdown/SemanticsKt {
	public static final fun getRawMarkdown ()Landroidx/compose/ui/semantics/SemanticsPropertyKey;
	public static final fun getRawMarkdown (Landroidx/compose/ui/semantics/SemanticsPropertyReceiver;)Ljava/lang/String;
	public static final fun setRawMarkdown (Landroidx/compose/ui/semantics/SemanticsPropertyReceiver;Ljava/lang/String;)V
}

public abstract interface class org/jetbrains/jewel/markdown/WithInlineMarkdown {
	public abstract fun getInlineContent ()Ljava/util/List;
}

public abstract interface class org/jetbrains/jewel/markdown/WithTextContent {
	public abstract fun getContent ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/jewel/markdown/extensions/MarkdownBlockProcessorExtension {
	public abstract fun canProcess (Lorg/commonmark/node/CustomBlock;)Z
	public abstract fun processMarkdownBlock (Lorg/commonmark/node/CustomBlock;Lorg/jetbrains/jewel/markdown/processing/MarkdownProcessor;)Lorg/jetbrains/jewel/markdown/MarkdownBlock$CustomBlock;
}

public abstract interface class org/jetbrains/jewel/markdown/extensions/MarkdownBlockRendererExtension {
	public abstract fun canRender (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CustomBlock;)Z
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CustomBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer;Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
}

public abstract interface class org/jetbrains/jewel/markdown/extensions/MarkdownInlineProcessorExtension {
	public abstract fun canProcess (Lorg/commonmark/node/CustomNode;)Z
	public abstract fun processInlineMarkdown (Lorg/commonmark/node/CustomNode;Lorg/jetbrains/jewel/markdown/processing/MarkdownProcessor;)Lorg/jetbrains/jewel/markdown/InlineMarkdown$CustomNode;
}

public abstract interface class org/jetbrains/jewel/markdown/extensions/MarkdownInlineRendererExtension {
	public abstract fun canRender (Lorg/jetbrains/jewel/markdown/InlineMarkdown$CustomNode;)Z
	public abstract fun render (Lorg/jetbrains/jewel/markdown/InlineMarkdown$CustomNode;Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer;Z)V
}

public final class org/jetbrains/jewel/markdown/extensions/MarkdownKt {
	public static final fun getLocalMarkdownBlockRenderer ()Landroidx/compose/runtime/ProvidableCompositionLocal;
	public static final fun getLocalMarkdownMode ()Landroidx/compose/runtime/ProvidableCompositionLocal;
	public static final fun getLocalMarkdownProcessor ()Landroidx/compose/runtime/ProvidableCompositionLocal;
	public static final fun getLocalMarkdownStyling ()Landroidx/compose/runtime/ProvidableCompositionLocal;
	public static final fun getMarkdownBlockRenderer (Lorg/jetbrains/jewel/foundation/theme/JewelTheme$Companion;Landroidx/compose/runtime/Composer;I)Lorg/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer;
	public static final fun getMarkdownMode (Lorg/jetbrains/jewel/foundation/theme/JewelTheme$Companion;Landroidx/compose/runtime/Composer;I)Lorg/jetbrains/jewel/markdown/MarkdownMode;
	public static final fun getMarkdownProcessor (Lorg/jetbrains/jewel/foundation/theme/JewelTheme$Companion;Landroidx/compose/runtime/Composer;I)Lorg/jetbrains/jewel/markdown/processing/MarkdownProcessor;
	public static final fun getMarkdownStyling (Lorg/jetbrains/jewel/foundation/theme/JewelTheme$Companion;Landroidx/compose/runtime/Composer;I)Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling;
}

public abstract interface class org/jetbrains/jewel/markdown/extensions/MarkdownProcessorExtension {
	public abstract fun getBlockProcessorExtension ()Lorg/jetbrains/jewel/markdown/extensions/MarkdownBlockProcessorExtension;
	public abstract fun getInlineProcessorExtension ()Lorg/jetbrains/jewel/markdown/extensions/MarkdownInlineProcessorExtension;
	public abstract fun getParserExtension ()Lorg/commonmark/parser/Parser$ParserExtension;
	public abstract fun getTextRendererExtension ()Lorg/commonmark/renderer/text/TextContentRenderer$TextContentRendererExtension;
}

public final class org/jetbrains/jewel/markdown/extensions/MarkdownProcessorExtension$DefaultImpls {
	public static fun getBlockProcessorExtension (Lorg/jetbrains/jewel/markdown/extensions/MarkdownProcessorExtension;)Lorg/jetbrains/jewel/markdown/extensions/MarkdownBlockProcessorExtension;
	public static fun getInlineProcessorExtension (Lorg/jetbrains/jewel/markdown/extensions/MarkdownProcessorExtension;)Lorg/jetbrains/jewel/markdown/extensions/MarkdownInlineProcessorExtension;
	public static fun getParserExtension (Lorg/jetbrains/jewel/markdown/extensions/MarkdownProcessorExtension;)Lorg/commonmark/parser/Parser$ParserExtension;
	public static fun getTextRendererExtension (Lorg/jetbrains/jewel/markdown/extensions/MarkdownProcessorExtension;)Lorg/commonmark/renderer/text/TextContentRenderer$TextContentRendererExtension;
}

public abstract interface class org/jetbrains/jewel/markdown/extensions/MarkdownRendererExtension {
	public abstract fun getBlockRenderer ()Lorg/jetbrains/jewel/markdown/extensions/MarkdownBlockRendererExtension;
	public abstract fun getInlineRenderer ()Lorg/jetbrains/jewel/markdown/extensions/MarkdownInlineRendererExtension;
}

public final class org/jetbrains/jewel/markdown/extensions/MarkdownRendererExtension$DefaultImpls {
	public static fun getBlockRenderer (Lorg/jetbrains/jewel/markdown/extensions/MarkdownRendererExtension;)Lorg/jetbrains/jewel/markdown/extensions/MarkdownBlockRendererExtension;
	public static fun getInlineRenderer (Lorg/jetbrains/jewel/markdown/extensions/MarkdownRendererExtension;)Lorg/jetbrains/jewel/markdown/extensions/MarkdownInlineRendererExtension;
}

public final class org/jetbrains/jewel/markdown/processing/MarkdownParserFactory {
	public static final field $stable I
	public static final field INSTANCE Lorg/jetbrains/jewel/markdown/processing/MarkdownParserFactory;
	public final fun create (ZLjava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/commonmark/parser/Parser;
	public static synthetic fun create$default (Lorg/jetbrains/jewel/markdown/processing/MarkdownParserFactory;ZLjava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/commonmark/parser/Parser;
}

public final class org/jetbrains/jewel/markdown/processing/MarkdownProcessor {
	public static final field $stable I
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Lorg/jetbrains/jewel/markdown/MarkdownMode;Lorg/commonmark/parser/Parser;)V
	public synthetic fun <init> (Ljava/util/List;Lorg/jetbrains/jewel/markdown/MarkdownMode;Lorg/commonmark/parser/Parser;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun processChildren (Lorg/commonmark/node/Node;)Ljava/util/List;
	public final fun processMarkdownDocument (Ljava/lang/String;)Ljava/util/List;
}

public class org/jetbrains/jewel/markdown/rendering/DefaultInlineMarkdownRenderer : org/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/DefaultInlineMarkdownRenderer$Companion;
	public fun <init> (Ljava/util/List;)V
	public fun renderAsAnnotatedString (Ljava/lang/Iterable;Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;ZLkotlin/jvm/functions/Function1;)Landroidx/compose/ui/text/AnnotatedString;
}

public final class org/jetbrains/jewel/markdown/rendering/DefaultInlineMarkdownRenderer$Companion {
}

public class org/jetbrains/jewel/markdown/rendering/DefaultMarkdownBlockRenderer : org/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer {
	public static final field $stable I
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling;Ljava/util/List;Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer;)V
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling;Ljava/util/List;Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected final fun MaybeScrollingContainer (ZLandroidx/compose/ui/Modifier;Lkotlin/jvm/functions/Function2;Landroidx/compose/runtime/Composer;II)V
	public fun render (Ljava/util/List;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$BlockQuote;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$IndentedCodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$HtmlBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$OrderedList;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$UnorderedList;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListItem;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Paragraph;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render-EWr_ITI (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock;Ljava/lang/String;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced;Landroidx/compose/runtime/Composer;I)V
	public fun renderThematicBreak (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak;Landroidx/compose/runtime/Composer;I)V
}

public abstract interface class org/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer {
	public abstract fun renderAsAnnotatedString (Ljava/lang/Iterable;Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;ZLkotlin/jvm/functions/Function1;)Landroidx/compose/ui/text/AnnotatedString;
}

public final class org/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer$DefaultImpls {
	public static synthetic fun renderAsAnnotatedString$default (Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer;Ljava/lang/Iterable;Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Landroidx/compose/ui/text/AnnotatedString;
}

public final class org/jetbrains/jewel/markdown/rendering/InlinesStyling {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling$Companion;
	public fun <init> (Landroidx/compose/ui/text/TextStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Landroidx/compose/ui/text/SpanStyle;Z)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEmphasis ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getInlineCode ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getInlineHtml ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getLink ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getLinkDisabled ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getLinkFocused ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getLinkHovered ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getLinkPressed ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getLinkVisited ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getRenderInlineHtml ()Z
	public final fun getStrongEmphasis ()Landroidx/compose/ui/text/SpanStyle;
	public final fun getTextLinkStyles ()Landroidx/compose/ui/text/TextLinkStyles;
	public final fun getTextStyle ()Landroidx/compose/ui/text/TextStyle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/InlinesStyling$Companion {
}

public abstract interface class org/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer {
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer$Companion;
	public abstract fun render (Ljava/util/List;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$BlockQuote;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$IndentedCodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$HtmlBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$OrderedList;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock$UnorderedList;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$ListItem;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Paragraph;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public abstract fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public abstract fun renderThematicBreak (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak;Landroidx/compose/runtime/Composer;I)V
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownBlockRenderer$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Companion;
	public synthetic fun <init> (FLorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Image;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBlockQuote ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote;
	public final fun getBlockVerticalSpacing-D9Ej5fM ()F
	public final fun getCode ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code;
	public final fun getHeading ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading;
	public final fun getHtmlBlock ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock;
	public final fun getImage ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Image;
	public final fun getList ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List;
	public final fun getParagraph ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph;
	public final fun getThematicBreak ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote$Companion;
	public synthetic fun <init> (Landroidx/compose/foundation/layout/PaddingValues;FJLandroidx/compose/ui/graphics/PathEffect;IJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLineColor-0d7_KjU ()J
	public final fun getLineWidth-D9Ej5fM ()F
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getPathEffect ()Landroidx/compose/ui/graphics/PathEffect;
	public final fun getStrokeCap-KaPHkGw ()I
	public final fun getTextColor-0d7_KjU ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$BlockQuote$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Companion;
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFenced ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced;
	public final fun getIndented ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$Companion;
	public synthetic fun <init> (Landroidx/compose/ui/text/TextStyle;Landroidx/compose/foundation/layout/PaddingValues;Landroidx/compose/ui/graphics/Shape;JFJZZLandroidx/compose/ui/text/TextStyle;Landroidx/compose/foundation/layout/PaddingValues;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackground-0d7_KjU ()J
	public final fun getBorderColor-0d7_KjU ()J
	public final fun getBorderWidth-D9Ej5fM ()F
	public final fun getEditorTextStyle ()Landroidx/compose/ui/text/TextStyle;
	public final fun getFillWidth ()Z
	public final fun getInfoPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getInfoPosition ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public final fun getInfoTextStyle ()Landroidx/compose/ui/text/TextStyle;
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getScrollsHorizontally ()Z
	public final fun getShape ()Landroidx/compose/ui/graphics/Shape;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition : java/lang/Enum {
	public static final field BottomCenter Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field BottomEnd Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field BottomStart Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field Hide Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field TopCenter Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field TopEnd Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static final field TopStart Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
	public static fun values ()[Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced$InfoPosition;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented$Companion;
	public synthetic fun <init> (Landroidx/compose/ui/text/TextStyle;Landroidx/compose/foundation/layout/PaddingValues;Landroidx/compose/ui/graphics/Shape;JFJZZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackground-0d7_KjU ()J
	public final fun getBorderColor-0d7_KjU ()J
	public final fun getBorderWidth-D9Ej5fM ()F
	public final fun getEditorTextStyle ()Landroidx/compose/ui/text/TextStyle;
	public final fun getFillWidth ()Z
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getScrollsHorizontally ()Z
	public final fun getShape ()Landroidx/compose/ui/graphics/Shape;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$Companion;
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H1;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H2;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H3;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H4;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H5;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H6;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getH1 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H1;
	public final fun getH2 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H2;
	public final fun getH3 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H3;
	public final fun getH4 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H4;
	public final fun getH5 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H5;
	public final fun getH6 ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H6;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H1 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H1$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H1$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H2 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H2$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H2$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H3 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H3$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H3$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H4 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H4$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H4$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H5 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H5$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H5$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H6 : org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H6$Companion;
	public synthetic fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;FJFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun getUnderlineColor-0d7_KjU ()J
	public fun getUnderlineGap-D9Ej5fM ()F
	public fun getUnderlineWidth-D9Ej5fM ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$H6$Companion {
}

public abstract interface class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN : org/jetbrains/jewel/markdown/rendering/WithInlinesStyling, org/jetbrains/jewel/markdown/rendering/WithUnderline {
	public abstract fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock$Companion;
	public synthetic fun <init> (Landroidx/compose/ui/text/TextStyle;Landroidx/compose/foundation/layout/PaddingValues;Landroidx/compose/ui/graphics/Shape;JFJZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackground-0d7_KjU ()J
	public final fun getBorderColor-0d7_KjU ()J
	public final fun getBorderWidth-D9Ej5fM ()F
	public final fun getFillWidth ()Z
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getShape ()Landroidx/compose/ui/graphics/Shape;
	public final fun getTextStyle ()Landroidx/compose/ui/text/TextStyle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$HtmlBlock$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Image {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Image$Companion;
	public synthetic fun <init> (Landroidx/compose/ui/Alignment;Landroidx/compose/ui/layout/ContentScale;Landroidx/compose/foundation/layout/PaddingValues;Landroidx/compose/ui/graphics/Shape;JFJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAlignment ()Landroidx/compose/ui/Alignment;
	public final fun getBackground-0d7_KjU ()J
	public final fun getBorderColor-0d7_KjU ()J
	public final fun getBorderWidth-D9Ej5fM ()F
	public final fun getContentScale ()Landroidx/compose/ui/layout/ContentScale;
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public final fun getShape ()Landroidx/compose/ui/graphics/Shape;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Image$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Companion;
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getOrdered ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered;
	public final fun getUnordered ()Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered$Companion;
	public synthetic fun <init> (Landroidx/compose/ui/text/TextStyle;FFIFFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getItemVerticalSpacing-D9Ej5fM ()F
	public final fun getItemVerticalSpacingTight-D9Ej5fM ()F
	public final fun getNumberContentGap-D9Ej5fM ()F
	public final fun getNumberMinWidth-D9Ej5fM ()F
	public final fun getNumberStyle ()Landroidx/compose/ui/text/TextStyle;
	public final fun getNumberTextAlign-e0LSkKk ()I
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Ordered$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered$Companion;
	public synthetic fun <init> (Ljava/lang/Character;Landroidx/compose/ui/text/TextStyle;FFFLandroidx/compose/foundation/layout/PaddingValues;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBullet ()Ljava/lang/Character;
	public final fun getBulletContentGap-D9Ej5fM ()F
	public final fun getBulletStyle ()Landroidx/compose/ui/text/TextStyle;
	public final fun getItemVerticalSpacing-D9Ej5fM ()F
	public final fun getItemVerticalSpacingTight-D9Ej5fM ()F
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$List$Unordered$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph : org/jetbrains/jewel/markdown/rendering/WithInlinesStyling {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph$Companion;
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph$Companion {
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak$Companion;
	public synthetic fun <init> (Landroidx/compose/foundation/layout/PaddingValues;FJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLineColor-0d7_KjU ()J
	public final fun getLineWidth-D9Ej5fM ()F
	public final fun getPadding ()Landroidx/compose/foundation/layout/PaddingValues;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/jewel/markdown/rendering/MarkdownStyling$ThematicBreak$Companion {
}

public abstract interface class org/jetbrains/jewel/markdown/rendering/WithInlinesStyling {
	public abstract fun getInlinesStyling ()Lorg/jetbrains/jewel/markdown/rendering/InlinesStyling;
}

public abstract interface class org/jetbrains/jewel/markdown/rendering/WithUnderline {
	public abstract fun getUnderlineColor-0d7_KjU ()J
	public abstract fun getUnderlineGap-D9Ej5fM ()F
	public abstract fun getUnderlineWidth-D9Ej5fM ()F
}

public final class org/jetbrains/jewel/markdown/scrolling/AutoScrollingUtilKt {
	public static final fun AutoScrollableBlock (Lorg/jetbrains/jewel/markdown/MarkdownBlock;Lorg/jetbrains/jewel/markdown/scrolling/ScrollingSynchronizer;Landroidx/compose/ui/Modifier;Lkotlin/jvm/functions/Function2;Landroidx/compose/runtime/Composer;II)V
}

public class org/jetbrains/jewel/markdown/scrolling/ScrollSyncMarkdownBlockRenderer : org/jetbrains/jewel/markdown/rendering/DefaultMarkdownBlockRenderer {
	public static final field $stable I
	public fun <init> (Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling;Ljava/util/List;Lorg/jetbrains/jewel/markdown/rendering/InlineMarkdownRenderer;)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$IndentedCodeBlock;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Indented;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Heading;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Heading$HN;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render (Lorg/jetbrains/jewel/markdown/MarkdownBlock$Paragraph;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Paragraph;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V
	public fun render-EWr_ITI (Lorg/jetbrains/jewel/markdown/MarkdownBlock$CodeBlock$FencedCodeBlock;Ljava/lang/String;Lorg/jetbrains/jewel/markdown/rendering/MarkdownStyling$Code$Fenced;Landroidx/compose/runtime/Composer;I)V
}

public abstract class org/jetbrains/jewel/markdown/scrolling/ScrollingSynchronizer {
	public static final field $stable I
	public static final field Companion Lorg/jetbrains/jewel/markdown/scrolling/ScrollingSynchronizer$Companion;
	public fun <init> ()V
	public abstract fun acceptBlockSpans (Lorg/jetbrains/jewel/markdown/MarkdownBlock;Lkotlin/ranges/IntRange;)V
	public abstract fun acceptGlobalPosition (Lorg/jetbrains/jewel/markdown/MarkdownBlock;Landroidx/compose/ui/layout/LayoutCoordinates;)V
	public abstract fun acceptTextLayout (Lorg/jetbrains/jewel/markdown/MarkdownBlock;Landroidx/compose/ui/text/TextLayoutResult;)V
	protected abstract fun afterProcessing ()V
	protected abstract fun beforeProcessing ()V
	public final fun process (Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun scrollToLine (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/jetbrains/jewel/markdown/scrolling/ScrollingSynchronizer$Companion {
	public final fun create (Landroidx/compose/foundation/gestures/ScrollableState;)Lorg/jetbrains/jewel/markdown/scrolling/ScrollingSynchronizer;
}

