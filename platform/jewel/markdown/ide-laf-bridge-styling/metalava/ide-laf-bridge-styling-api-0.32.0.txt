// Signature format: 4.0
package org.jetbrains.jewel.intui.markdown.bridge {

  public final class BridgeMarkdownBlockRendererExtensionsKt {
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownBlockRenderer create(org.jetbrains.jewel.markdown.rendering.MarkdownBlockRenderer.Companion, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling styling, optional java.util.List<? extends org.jetbrains.jewel.markdown.extensions.MarkdownRendererExtension> rendererExtensions, optional org.jetbrains.jewel.markdown.rendering.InlineMarkdownRenderer inlineRenderer);
  }

  public final class BridgeProvideMarkdownStylingKt {
    method @SuppressCompatibility @androidx.compose.runtime.Composable @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static void ProvideMarkdownStyling(com.intellij.openapi.project.Project project, org.jetbrains.jewel.markdown.rendering.ImageSourceResolver imageSourceResolver, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling markdownStyling, optional org.jetbrains.jewel.markdown.MarkdownMode markdownMode, optional org.jetbrains.jewel.markdown.processing.MarkdownProcessor markdownProcessor, optional org.jetbrains.jewel.markdown.rendering.MarkdownBlockRenderer markdownBlockRenderer, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @SuppressCompatibility @androidx.compose.runtime.Composable @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static void ProvideMarkdownStyling(com.intellij.openapi.project.Project project, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling markdownStyling, optional org.jetbrains.jewel.markdown.MarkdownMode markdownMode, optional org.jetbrains.jewel.markdown.processing.MarkdownProcessor markdownProcessor, optional org.jetbrains.jewel.markdown.rendering.MarkdownBlockRenderer markdownBlockRenderer, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @Deprecated @SuppressCompatibility @androidx.compose.runtime.Composable @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static void ProvideMarkdownStyling(optional String themeName, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling markdownStyling, optional org.jetbrains.jewel.markdown.MarkdownMode markdownMode, optional org.jetbrains.jewel.markdown.processing.MarkdownProcessor markdownProcessor, optional org.jetbrains.jewel.markdown.rendering.MarkdownBlockRenderer markdownBlockRenderer, optional org.jetbrains.jewel.foundation.code.highlighting.CodeHighlighter codeHighlighter, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @SuppressCompatibility @androidx.compose.runtime.Composable @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static void ProvideMarkdownStyling(org.jetbrains.jewel.markdown.rendering.ImageSourceResolver imageSourceResolver, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling markdownStyling, optional org.jetbrains.jewel.markdown.MarkdownMode markdownMode, optional org.jetbrains.jewel.markdown.processing.MarkdownProcessor markdownProcessor, optional org.jetbrains.jewel.markdown.rendering.MarkdownBlockRenderer markdownBlockRenderer, optional org.jetbrains.jewel.foundation.code.highlighting.CodeHighlighter codeHighlighter, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @SuppressCompatibility @androidx.compose.runtime.Composable @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static void ProvideMarkdownStyling(optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling markdownStyling, optional org.jetbrains.jewel.markdown.MarkdownMode markdownMode, optional org.jetbrains.jewel.markdown.processing.MarkdownProcessor markdownProcessor, optional org.jetbrains.jewel.markdown.rendering.MarkdownBlockRenderer markdownBlockRenderer, optional org.jetbrains.jewel.foundation.code.highlighting.CodeHighlighter codeHighlighter, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

}

package org.jetbrains.jewel.intui.markdown.bridge.styling {

  public final class BridgeMarkdownStylingKt {
    method @Deprecated @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.InlinesStyling create(org.jetbrains.jewel.markdown.rendering.InlinesStyling.Companion, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.text.SpanStyle inlineCode, optional androidx.compose.ui.text.SpanStyle link, optional androidx.compose.ui.text.SpanStyle linkDisabled, optional androidx.compose.ui.text.SpanStyle linkHovered, optional androidx.compose.ui.text.SpanStyle linkFocused, optional androidx.compose.ui.text.SpanStyle linkPressed, optional androidx.compose.ui.text.SpanStyle linkVisited, optional androidx.compose.ui.text.SpanStyle emphasis, optional androidx.compose.ui.text.SpanStyle strongEmphasis, optional androidx.compose.ui.text.SpanStyle inlineHtml, optional boolean renderInlineHtml);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.InlinesStyling create(org.jetbrains.jewel.markdown.rendering.InlinesStyling.Companion, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.text.TextStyle editorTextStyle, optional androidx.compose.ui.text.SpanStyle inlineCode, optional androidx.compose.ui.text.SpanStyle link, optional androidx.compose.ui.text.SpanStyle linkDisabled, optional androidx.compose.ui.text.SpanStyle linkHovered, optional androidx.compose.ui.text.SpanStyle linkFocused, optional androidx.compose.ui.text.SpanStyle linkPressed, optional androidx.compose.ui.text.SpanStyle linkVisited, optional androidx.compose.ui.text.SpanStyle emphasis, optional androidx.compose.ui.text.SpanStyle strongEmphasis, optional androidx.compose.ui.text.SpanStyle inlineHtml);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.BlockQuote create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.BlockQuote.Companion, optional androidx.compose.foundation.layout.PaddingValues padding, optional float lineWidth, optional long lineColor, optional androidx.compose.ui.graphics.PathEffect? pathEffect, optional int strokeCap, optional long textColor);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Code create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Code.Companion, optional androidx.compose.ui.text.TextStyle editorTextStyle, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Code.Indented indented, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Code.Fenced fenced);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Code.Fenced create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Code.Fenced.Companion, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.foundation.layout.PaddingValues padding, optional androidx.compose.ui.graphics.Shape shape, optional long background, optional float borderWidth, optional long borderColor, optional boolean fillWidth, optional boolean scrollsHorizontally, optional androidx.compose.ui.text.TextStyle infoTextStyle, optional androidx.compose.foundation.layout.PaddingValues infoPadding, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Code.Fenced.InfoPosition infoPosition);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Code.Indented create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Code.Indented.Companion, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.foundation.layout.PaddingValues padding, optional androidx.compose.ui.graphics.Shape shape, optional long background, optional float borderWidth, optional long borderColor, optional boolean fillWidth, optional boolean scrollsHorizontally);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Companion, optional androidx.compose.ui.text.TextStyle baseTextStyle, optional androidx.compose.ui.text.TextStyle editorTextStyle, optional org.jetbrains.jewel.markdown.rendering.InlinesStyling inlinesStyling, optional float blockVerticalSpacing, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Paragraph paragraph, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading heading, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.BlockQuote blockQuote, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Code code, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List list, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Image image, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.ThematicBreak thematicBreak, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.HtmlBlock htmlBlock);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.Companion, optional androidx.compose.ui.text.TextStyle baseTextStyle, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H1 h1, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H2 h2, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H3 h3, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H4 h4, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H5 h5, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H6 h6);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H1 create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H1.Companion, optional androidx.compose.ui.text.TextStyle baseTextStyle, optional org.jetbrains.jewel.markdown.rendering.InlinesStyling inlinesStyling, optional float underlineWidth, optional long underlineColor, optional float underlineGap, optional androidx.compose.foundation.layout.PaddingValues padding);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H2 create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H2.Companion, optional androidx.compose.ui.text.TextStyle baseTextStyle, optional org.jetbrains.jewel.markdown.rendering.InlinesStyling inlinesStyling, optional float underlineWidth, optional long underlineColor, optional float underlineGap, optional androidx.compose.foundation.layout.PaddingValues padding);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H3 create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H3.Companion, optional androidx.compose.ui.text.TextStyle baseTextStyle, optional org.jetbrains.jewel.markdown.rendering.InlinesStyling inlinesStyling, optional float underlineWidth, optional long underlineColor, optional float underlineGap, optional androidx.compose.foundation.layout.PaddingValues padding);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H4 create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H4.Companion, optional androidx.compose.ui.text.TextStyle baseTextStyle, optional org.jetbrains.jewel.markdown.rendering.InlinesStyling inlinesStyling, optional float underlineWidth, optional long underlineColor, optional float underlineGap, optional androidx.compose.foundation.layout.PaddingValues padding);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H5 create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H5.Companion, optional androidx.compose.ui.text.TextStyle baseTextStyle, optional org.jetbrains.jewel.markdown.rendering.InlinesStyling inlinesStyling, optional float underlineWidth, optional long underlineColor, optional float underlineGap, optional androidx.compose.foundation.layout.PaddingValues padding);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H6 create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Heading.H6.Companion, optional androidx.compose.ui.text.TextStyle baseTextStyle, optional org.jetbrains.jewel.markdown.rendering.InlinesStyling inlinesStyling, optional float underlineWidth, optional long underlineColor, optional float underlineGap, optional androidx.compose.foundation.layout.PaddingValues padding);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.HtmlBlock create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.HtmlBlock.Companion, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.foundation.layout.PaddingValues padding, optional androidx.compose.ui.graphics.Shape shape, optional long background, optional float borderWidth, optional long borderColor, optional boolean fillWidth);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Companion, optional androidx.compose.ui.text.TextStyle baseTextStyle, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Ordered ordered, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Unordered unordered);
    method @Deprecated @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Ordered create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Ordered.Companion, optional androidx.compose.ui.text.TextStyle numberStyle, optional float numberContentGap, optional float numberMinWidth, optional int numberTextAlign, optional float itemVerticalSpacing, optional float itemVerticalSpacingTight, optional androidx.compose.foundation.layout.PaddingValues padding);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Ordered create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Ordered.Companion, optional androidx.compose.ui.text.TextStyle numberStyle, optional float numberContentGap, optional float numberMinWidth, optional int numberTextAlign, optional float itemVerticalSpacing, optional float itemVerticalSpacingTight, optional androidx.compose.foundation.layout.PaddingValues padding, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Ordered.NumberFormatStyles numberFormatStyles);
    method @Deprecated @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Unordered create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Unordered.Companion, optional Character? bullet, optional androidx.compose.ui.text.TextStyle bulletStyle, optional float bulletContentGap, optional float itemVerticalSpacing, optional float itemVerticalSpacingTight, optional androidx.compose.foundation.layout.PaddingValues padding, optional float markerMinWidth);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Unordered create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Unordered.Companion, optional Character? bullet, optional androidx.compose.ui.text.TextStyle bulletStyle, optional float bulletContentGap, optional float itemVerticalSpacing, optional float itemVerticalSpacingTight, optional androidx.compose.foundation.layout.PaddingValues padding, optional float markerMinWidth, optional org.jetbrains.jewel.markdown.rendering.MarkdownStyling.List.Unordered.BulletCharStyles? bulletCharStyles);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Paragraph create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Paragraph.Companion, optional org.jetbrains.jewel.markdown.rendering.InlinesStyling inlinesStyling);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.ThematicBreak create(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.ThematicBreak.Companion, optional androidx.compose.foundation.layout.PaddingValues padding, optional float lineWidth, optional long lineColor);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Image default(org.jetbrains.jewel.markdown.rendering.MarkdownStyling.Image.Companion, optional androidx.compose.ui.Alignment alignment, optional androidx.compose.ui.layout.ContentScale contentScale, optional androidx.compose.foundation.layout.PaddingValues padding, optional androidx.compose.ui.graphics.Shape shape, optional long background, optional float borderWidth, optional long borderColor);
  }

}

package org.jetbrains.jewel.intui.markdown.bridge.styling.extensions.github.alerts {

  public final class BridgeGitHubAlertStylingKt {
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.extensions.github.alerts.AlertStyling create(org.jetbrains.jewel.markdown.extensions.github.alerts.AlertStyling.Companion, optional org.jetbrains.jewel.markdown.extensions.github.alerts.NoteAlertStyling note, optional org.jetbrains.jewel.markdown.extensions.github.alerts.TipAlertStyling tip, optional org.jetbrains.jewel.markdown.extensions.github.alerts.ImportantAlertStyling important, optional org.jetbrains.jewel.markdown.extensions.github.alerts.WarningAlertStyling warning, optional org.jetbrains.jewel.markdown.extensions.github.alerts.CautionAlertStyling caution);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.extensions.github.alerts.CautionAlertStyling create(org.jetbrains.jewel.markdown.extensions.github.alerts.CautionAlertStyling.Companion, optional androidx.compose.foundation.layout.PaddingValues padding, optional float lineWidth, optional long lineColor, optional androidx.compose.ui.graphics.PathEffect? pathEffect, optional int strokeCap, optional androidx.compose.ui.text.TextStyle titleTextStyle, optional org.jetbrains.jewel.ui.icon.IconKey? titleIconKey, optional long titleIconTint, optional long textColor);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.extensions.github.alerts.ImportantAlertStyling create(org.jetbrains.jewel.markdown.extensions.github.alerts.ImportantAlertStyling.Companion, optional androidx.compose.foundation.layout.PaddingValues padding, optional float lineWidth, optional long lineColor, optional androidx.compose.ui.graphics.PathEffect? pathEffect, optional int strokeCap, optional androidx.compose.ui.text.TextStyle titleTextStyle, optional org.jetbrains.jewel.ui.icon.IconKey? titleIconKey, optional long titleIconTint, optional long textColor);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.extensions.github.alerts.NoteAlertStyling create(org.jetbrains.jewel.markdown.extensions.github.alerts.NoteAlertStyling.Companion, optional androidx.compose.foundation.layout.PaddingValues padding, optional float lineWidth, optional long lineColor, optional androidx.compose.ui.graphics.PathEffect? pathEffect, optional int strokeCap, optional androidx.compose.ui.text.TextStyle titleTextStyle, optional org.jetbrains.jewel.ui.icon.IconKey? titleIconKey, optional long titleIconTint, optional long textColor);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.extensions.github.alerts.TipAlertStyling create(org.jetbrains.jewel.markdown.extensions.github.alerts.TipAlertStyling.Companion, optional androidx.compose.foundation.layout.PaddingValues padding, optional float lineWidth, optional long lineColor, optional androidx.compose.ui.graphics.PathEffect? pathEffect, optional int strokeCap, optional androidx.compose.ui.text.TextStyle titleTextStyle, optional org.jetbrains.jewel.ui.icon.IconKey? titleIconKey, optional long titleIconTint, optional long textColor);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.extensions.github.alerts.WarningAlertStyling create(org.jetbrains.jewel.markdown.extensions.github.alerts.WarningAlertStyling.Companion, optional androidx.compose.foundation.layout.PaddingValues padding, optional float lineWidth, optional long lineColor, optional androidx.compose.ui.graphics.PathEffect? pathEffect, optional int strokeCap, optional androidx.compose.ui.text.TextStyle titleTextStyle, optional org.jetbrains.jewel.ui.icon.IconKey? titleIconKey, optional long titleIconTint, optional long textColor);
  }

}

package org.jetbrains.jewel.intui.markdown.bridge.styling.extensions.github.tables {

  public final class BridgeGitHubTableStylingKt {
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.extensions.github.tables.GfmTableColors create(org.jetbrains.jewel.markdown.extensions.github.tables.GfmTableColors.Companion, optional long borderColor, optional long rowBackgroundColor, optional long alternateRowBackgroundColor, optional org.jetbrains.jewel.markdown.extensions.github.tables.RowBackgroundStyle rowBackgroundStyle);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.extensions.github.tables.GfmTableMetrics create(org.jetbrains.jewel.markdown.extensions.github.tables.GfmTableMetrics.Companion, optional float borderWidth, optional androidx.compose.foundation.layout.PaddingValues cellPadding, optional androidx.compose.ui.Alignment.Horizontal defaultCellContentAlignment, optional androidx.compose.ui.Alignment.Horizontal headerDefaultCellContentAlignment);
    method @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.Experimental @org.jetbrains.jewel.foundation.ExperimentalJewelApi public static org.jetbrains.jewel.markdown.extensions.github.tables.GfmTableStyling create(org.jetbrains.jewel.markdown.extensions.github.tables.GfmTableStyling.Companion, optional org.jetbrains.jewel.markdown.extensions.github.tables.GfmTableColors colors, optional org.jetbrains.jewel.markdown.extensions.github.tables.GfmTableMetrics metrics, optional androidx.compose.ui.text.font.FontWeight headerBaseFontWeight);
  }

}

