// Signature format: 4.0
package org.jetbrains.jewel.ui {

  public interface ComponentStyling {
    method public default org.jetbrains.jewel.ui.ComponentStyling provide(androidx.compose.runtime.ProvidedValue<? extends java.lang.Object?>... values);
    method public default org.jetbrains.jewel.ui.ComponentStyling provide(kotlin.jvm.functions.Function0<? extends androidx.compose.runtime.ProvidedValue<? extends java.lang.Object?>[]> provider);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.ProvidedValue<? extends java.lang.Object?>[] styles();
    method public default org.jetbrains.jewel.ui.ComponentStyling with(kotlin.jvm.functions.Function0<? extends org.jetbrains.jewel.ui.ComponentStyling> styling);
    method public default org.jetbrains.jewel.ui.ComponentStyling with(org.jetbrains.jewel.ui.ComponentStyling styling);
    field public static final org.jetbrains.jewel.ui.ComponentStyling.Companion Companion;
  }

  public static final class ComponentStyling.Companion implements org.jetbrains.jewel.ui.ComponentStyling {
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.ProvidedValue<? extends java.lang.Object?>[] styles();
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class DefaultComponentStyling implements org.jetbrains.jewel.ui.ComponentStyling {
    ctor public DefaultComponentStyling(org.jetbrains.jewel.ui.component.styling.CheckboxStyle checkboxStyle, org.jetbrains.jewel.ui.component.styling.ChipStyle chipStyle, org.jetbrains.jewel.ui.component.styling.CircularProgressStyle circularProgressStyle, org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles defaultBannerStyle, org.jetbrains.jewel.ui.component.styling.ComboBoxStyle comboBoxStyle, org.jetbrains.jewel.ui.component.styling.ButtonStyle defaultButtonStyle, org.jetbrains.jewel.ui.component.styling.DropdownStyle defaultDropdownStyle, org.jetbrains.jewel.ui.component.styling.SplitButtonStyle defaultSplitButtonStyle, org.jetbrains.jewel.ui.component.styling.TabStyle defaultTabStyle, org.jetbrains.jewel.ui.component.styling.DividerStyle dividerStyle, org.jetbrains.jewel.ui.component.styling.TabStyle editorTabStyle, org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle groupHeaderStyle, org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle horizontalProgressBarStyle, org.jetbrains.jewel.ui.component.styling.IconButtonStyle iconButtonStyle, org.jetbrains.jewel.ui.component.styling.IconButtonStyle transparentIconButtonStyle, org.jetbrains.jewel.ui.component.styling.InlineBannerStyles inlineBannerStyle, org.jetbrains.jewel.ui.component.styling.LazyTreeStyle lazyTreeStyle, org.jetbrains.jewel.ui.component.styling.LinkStyle linkStyle, org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle, org.jetbrains.jewel.ui.component.styling.ButtonStyle outlinedButtonStyle, org.jetbrains.jewel.ui.component.styling.PopupContainerStyle popupContainerStyle, org.jetbrains.jewel.ui.component.styling.SplitButtonStyle outlinedSplitButtonStyle, org.jetbrains.jewel.ui.component.styling.RadioButtonStyle radioButtonStyle, org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle, org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle segmentedControlButtonStyle, org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle segmentedControlStyle, org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle selectableLazyColumnStyle, org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle simpleListItemStyle, org.jetbrains.jewel.ui.component.styling.SliderStyle sliderStyle, org.jetbrains.jewel.ui.component.styling.TextAreaStyle textAreaStyle, org.jetbrains.jewel.ui.component.styling.TextFieldStyle textFieldStyle, org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, org.jetbrains.jewel.ui.component.styling.DropdownStyle undecoratedDropdownStyle);
    ctor @Deprecated public DefaultComponentStyling(org.jetbrains.jewel.ui.component.styling.CheckboxStyle checkboxStyle, org.jetbrains.jewel.ui.component.styling.ChipStyle chipStyle, org.jetbrains.jewel.ui.component.styling.CircularProgressStyle circularProgressStyle, org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles defaultBannerStyle, org.jetbrains.jewel.ui.component.styling.ComboBoxStyle comboBoxStyle, org.jetbrains.jewel.ui.component.styling.ButtonStyle defaultButtonStyle, org.jetbrains.jewel.ui.component.styling.DropdownStyle defaultDropdownStyle, org.jetbrains.jewel.ui.component.styling.SplitButtonStyle defaultSplitButtonStyle, org.jetbrains.jewel.ui.component.styling.TabStyle defaultTabStyle, org.jetbrains.jewel.ui.component.styling.DividerStyle dividerStyle, org.jetbrains.jewel.ui.component.styling.TabStyle editorTabStyle, org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle groupHeaderStyle, org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle horizontalProgressBarStyle, org.jetbrains.jewel.ui.component.styling.IconButtonStyle iconButtonStyle, org.jetbrains.jewel.ui.component.styling.InlineBannerStyles inlineBannerStyle, org.jetbrains.jewel.ui.component.styling.LazyTreeStyle lazyTreeStyle, org.jetbrains.jewel.ui.component.styling.LinkStyle linkStyle, org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle, org.jetbrains.jewel.ui.component.styling.ButtonStyle outlinedButtonStyle, org.jetbrains.jewel.ui.component.styling.PopupContainerStyle popupContainerStyle, org.jetbrains.jewel.ui.component.styling.SplitButtonStyle outlinedSplitButtonStyle, org.jetbrains.jewel.ui.component.styling.RadioButtonStyle radioButtonStyle, org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle, org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle segmentedControlButtonStyle, org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle segmentedControlStyle, org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle selectableLazyColumnStyle, org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle simpleListItemStyle, org.jetbrains.jewel.ui.component.styling.SliderStyle sliderStyle, org.jetbrains.jewel.ui.component.styling.TextAreaStyle textAreaStyle, org.jetbrains.jewel.ui.component.styling.TextFieldStyle textFieldStyle, org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, org.jetbrains.jewel.ui.component.styling.DropdownStyle undecoratedDropdownStyle);
    method public org.jetbrains.jewel.ui.component.styling.CheckboxStyle getCheckboxStyle();
    method public org.jetbrains.jewel.ui.component.styling.ChipStyle getChipStyle();
    method public org.jetbrains.jewel.ui.component.styling.CircularProgressStyle getCircularProgressStyle();
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxStyle getComboBoxStyle();
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles getDefaultBannerStyle();
    method public org.jetbrains.jewel.ui.component.styling.ButtonStyle getDefaultButtonStyle();
    method public org.jetbrains.jewel.ui.component.styling.DropdownStyle getDefaultDropdownStyle();
    method public org.jetbrains.jewel.ui.component.styling.SplitButtonStyle getDefaultSplitButtonStyle();
    method public org.jetbrains.jewel.ui.component.styling.TabStyle getDefaultTabStyle();
    method public org.jetbrains.jewel.ui.component.styling.DividerStyle getDividerStyle();
    method public org.jetbrains.jewel.ui.component.styling.TabStyle getEditorTabStyle();
    method public org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle getGroupHeaderStyle();
    method public org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle getHorizontalProgressBarStyle();
    method public org.jetbrains.jewel.ui.component.styling.IconButtonStyle getIconButtonStyle();
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyles getInlineBannerStyle();
    method public org.jetbrains.jewel.ui.component.styling.LazyTreeStyle getLazyTreeStyle();
    method public org.jetbrains.jewel.ui.component.styling.LinkStyle getLinkStyle();
    method public org.jetbrains.jewel.ui.component.styling.MenuStyle getMenuStyle();
    method public org.jetbrains.jewel.ui.component.styling.ButtonStyle getOutlinedButtonStyle();
    method public org.jetbrains.jewel.ui.component.styling.SplitButtonStyle getOutlinedSplitButtonStyle();
    method public org.jetbrains.jewel.ui.component.styling.PopupContainerStyle getPopupContainerStyle();
    method public org.jetbrains.jewel.ui.component.styling.RadioButtonStyle getRadioButtonStyle();
    method public org.jetbrains.jewel.ui.component.styling.ScrollbarStyle getScrollbarStyle();
    method public org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle getSegmentedControlButtonStyle();
    method public org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle getSegmentedControlStyle();
    method public org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle getSelectableLazyColumnStyle();
    method public org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle getSimpleListItemStyle();
    method public org.jetbrains.jewel.ui.component.styling.SliderStyle getSliderStyle();
    method public org.jetbrains.jewel.ui.component.styling.TextAreaStyle getTextAreaStyle();
    method public org.jetbrains.jewel.ui.component.styling.TextFieldStyle getTextFieldStyle();
    method public org.jetbrains.jewel.ui.component.styling.TooltipStyle getTooltipStyle();
    method public org.jetbrains.jewel.ui.component.styling.IconButtonStyle getTransparentIconButtonStyle();
    method public org.jetbrains.jewel.ui.component.styling.DropdownStyle getUndecoratedDropdownStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.ProvidedValue<? extends java.lang.Object?>[] styles();
    property public org.jetbrains.jewel.ui.component.styling.CheckboxStyle checkboxStyle;
    property public org.jetbrains.jewel.ui.component.styling.ChipStyle chipStyle;
    property public org.jetbrains.jewel.ui.component.styling.CircularProgressStyle circularProgressStyle;
    property public org.jetbrains.jewel.ui.component.styling.ComboBoxStyle comboBoxStyle;
    property public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles defaultBannerStyle;
    property public org.jetbrains.jewel.ui.component.styling.ButtonStyle defaultButtonStyle;
    property public org.jetbrains.jewel.ui.component.styling.DropdownStyle defaultDropdownStyle;
    property public org.jetbrains.jewel.ui.component.styling.SplitButtonStyle defaultSplitButtonStyle;
    property public org.jetbrains.jewel.ui.component.styling.TabStyle defaultTabStyle;
    property public org.jetbrains.jewel.ui.component.styling.DividerStyle dividerStyle;
    property public org.jetbrains.jewel.ui.component.styling.TabStyle editorTabStyle;
    property public org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle groupHeaderStyle;
    property public org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle horizontalProgressBarStyle;
    property public org.jetbrains.jewel.ui.component.styling.IconButtonStyle iconButtonStyle;
    property public org.jetbrains.jewel.ui.component.styling.InlineBannerStyles inlineBannerStyle;
    property public org.jetbrains.jewel.ui.component.styling.LazyTreeStyle lazyTreeStyle;
    property public org.jetbrains.jewel.ui.component.styling.LinkStyle linkStyle;
    property public org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle;
    property public org.jetbrains.jewel.ui.component.styling.ButtonStyle outlinedButtonStyle;
    property public org.jetbrains.jewel.ui.component.styling.SplitButtonStyle outlinedSplitButtonStyle;
    property public org.jetbrains.jewel.ui.component.styling.PopupContainerStyle popupContainerStyle;
    property public org.jetbrains.jewel.ui.component.styling.RadioButtonStyle radioButtonStyle;
    property public org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle;
    property public org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle segmentedControlButtonStyle;
    property public org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle segmentedControlStyle;
    property public org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle selectableLazyColumnStyle;
    property public org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle simpleListItemStyle;
    property public org.jetbrains.jewel.ui.component.styling.SliderStyle sliderStyle;
    property public org.jetbrains.jewel.ui.component.styling.TextAreaStyle textAreaStyle;
    property public org.jetbrains.jewel.ui.component.styling.TextFieldStyle textFieldStyle;
    property public org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle;
    property public org.jetbrains.jewel.ui.component.styling.IconButtonStyle transparentIconButtonStyle;
    property public org.jetbrains.jewel.ui.component.styling.DropdownStyle undecoratedDropdownStyle;
  }

  public final class DisabledAppearanceKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier disabledAppearance(androidx.compose.ui.Modifier, optional int brightness, optional int contrast, optional int alpha);
  }

  public final class DisabledColorFilterKt {
    method @Deprecated public static androidx.compose.ui.graphics.ColorFilter disabled(androidx.compose.ui.graphics.ColorFilter.Companion);
  }

  public interface MenuItemShortcutHintProvider {
    method public String getShortcutHint(org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction actionType);
  }

  public final class MenuItemShortcutHintProviderKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.MenuItemShortcutHintProvider> getLocalMenuItemShortcutHintProvider();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.MenuItemShortcutHintProvider> LocalMenuItemShortcutHintProvider;
  }

  public interface MenuItemShortcutProvider {
    method public javax.swing.KeyStroke? getShortcutKeyStroke(org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction actionType);
  }

  public final class MenuItemShortcutProviderKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.MenuItemShortcutProvider> getLocalMenuItemShortcutProvider();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.MenuItemShortcutProvider> LocalMenuItemShortcutProvider;
  }

  public enum Orientation {
    enum_constant public static final org.jetbrains.jewel.ui.Orientation Horizontal;
    enum_constant public static final org.jetbrains.jewel.ui.Orientation Vertical;
  }

  public enum Outline {
    enum_constant public static final org.jetbrains.jewel.ui.Outline Error;
    enum_constant public static final org.jetbrains.jewel.ui.Outline None;
    enum_constant public static final org.jetbrains.jewel.ui.Outline Warning;
    field public static final org.jetbrains.jewel.ui.Outline.Companion Companion;
  }

  public static final class Outline.Companion {
    method public org.jetbrains.jewel.ui.Outline of(boolean warning, boolean error);
  }

  public final class OutlineKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier focusOutline(androidx.compose.ui.Modifier, boolean showOutline, androidx.compose.ui.graphics.Shape outlineShape, optional org.jetbrains.jewel.foundation.Stroke.Alignment alignment, optional float outlineWidth, optional float expand);
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier focusOutline(androidx.compose.ui.Modifier, org.jetbrains.jewel.foundation.state.FocusableComponentState state, androidx.compose.ui.graphics.Shape outlineShape, optional org.jetbrains.jewel.foundation.Stroke.Alignment alignment, optional float outlineWidth, optional float expand);
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier outline(androidx.compose.ui.Modifier, org.jetbrains.jewel.foundation.state.FocusableComponentState state, org.jetbrains.jewel.ui.Outline outline, androidx.compose.ui.graphics.Shape outlineShape, optional org.jetbrains.jewel.foundation.Stroke.Alignment alignment, optional float outlineWidth);
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier outline(androidx.compose.ui.Modifier, org.jetbrains.jewel.ui.Outline outline, boolean focused, optional androidx.compose.ui.graphics.Shape outlineShape, optional org.jetbrains.jewel.foundation.Stroke.Alignment alignment, optional float outlineWidth);
  }

  public interface Typography {
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getConsoleTextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getEditorTextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getH0TextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getH1TextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getH2TextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getH3TextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getH4TextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getLabelTextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getMedium();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getRegular();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getSmall();
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle consoleTextStyle;
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle editorTextStyle;
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle h0TextStyle;
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle h1TextStyle;
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle h2TextStyle;
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle h3TextStyle;
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle h4TextStyle;
    property public abstract androidx.compose.ui.unit.TextUnit labelTextSize;
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle labelTextStyle;
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle medium;
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle regular;
    property @androidx.compose.runtime.Composable public abstract androidx.compose.ui.text.TextStyle small;
  }

  public final class TypographyKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.Typography> getLocalTypography();
    method @androidx.compose.runtime.Composable public static org.jetbrains.jewel.ui.Typography getTypography(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.Typography> LocalTypography;
    property @androidx.compose.runtime.Composable public static org.jetbrains.jewel.ui.Typography org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.typography;
  }

}

package org.jetbrains.jewel.ui.component {

  public final class ActionButtonKt {
    method @androidx.compose.runtime.Composable public static void ActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> tooltip, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, optional androidx.compose.foundation.TooltipPlacement tooltipPlacement, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  @Deprecated public enum AutoHideBehavior {
    enum_constant @Deprecated public static final org.jetbrains.jewel.ui.component.AutoHideBehavior Long;
    enum_constant @Deprecated public static final org.jetbrains.jewel.ui.component.AutoHideBehavior Never;
    enum_constant @Deprecated public static final org.jetbrains.jewel.ui.component.AutoHideBehavior Normal;
  }

  public final class BannerKt {
    method @androidx.compose.runtime.Composable public static void DefaultErrorBanner(optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void DefaultErrorBanner(String text, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @androidx.compose.runtime.Composable public static void DefaultInformationBanner(optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void DefaultInformationBanner(String text, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @androidx.compose.runtime.Composable public static void DefaultSuccessBanner(optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void DefaultSuccessBanner(String text, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @androidx.compose.runtime.Composable public static void DefaultWarningBanner(optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void DefaultWarningBanner(String text, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @Deprecated @androidx.compose.runtime.Composable public static void ErrorDefaultBanner(String text, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @Deprecated @androidx.compose.runtime.Composable public static void InformationDefaultBanner(String text, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @Deprecated @androidx.compose.runtime.Composable public static void SuccessDefaultBanner(String text, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @Deprecated @androidx.compose.runtime.Composable public static void WarningDefaultBanner(String text, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actions, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
  }

  public final class ButtonKt {
    method @androidx.compose.runtime.Composable public static void DefaultButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.ButtonStyle style, optional androidx.compose.ui.text.TextStyle textStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void DefaultSplitButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> secondaryOnClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.SplitButtonStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content, kotlin.jvm.functions.Function0<kotlin.Unit> popupContainer);
    method @androidx.compose.runtime.Composable public static void DefaultSplitButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> secondaryOnClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.SplitButtonStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content, kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.MenuScope,kotlin.Unit> menuContent);
    method @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.ButtonStyle style, optional androidx.compose.ui.text.TextStyle textStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void OutlinedSplitButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> secondaryOnClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.SplitButtonStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content, kotlin.jvm.functions.Function0<kotlin.Unit> popupContainer);
    method @androidx.compose.runtime.Composable public static void OutlinedSplitButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> secondaryOnClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.SplitButtonStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content, kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.MenuScope,kotlin.Unit> menuContent);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class ButtonState implements org.jetbrains.jewel.foundation.state.FocusableComponentState {
    ctor @KotlinOnly public ButtonState(kotlin.ULong state);
    method public long copy(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.ButtonState.Companion Companion;
  }

  public static final class ButtonState.Companion {
    method public long of(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class CheckboxKt {
    method @androidx.compose.runtime.Composable public static void Checkbox(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.CheckboxColors colors, optional org.jetbrains.jewel.ui.component.styling.CheckboxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.CheckboxIcons icons, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.Alignment.Vertical verticalAlignment);
    method @androidx.compose.runtime.Composable public static void CheckboxRow(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.CheckboxColors colors, optional org.jetbrains.jewel.ui.component.styling.CheckboxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.CheckboxIcons icons, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void CheckboxRow(String text, boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier textModifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.CheckboxColors colors, optional org.jetbrains.jewel.ui.component.styling.CheckboxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.CheckboxIcons icons, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.Alignment.Vertical verticalAlignment);
    method @androidx.compose.runtime.Composable public static void TriStateCheckbox(androidx.compose.ui.state.ToggleableState state, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.CheckboxColors colors, optional org.jetbrains.jewel.ui.component.styling.CheckboxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.CheckboxIcons icons, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.Alignment.Vertical verticalAlignment);
    method @androidx.compose.runtime.Composable public static void TriStateCheckboxRow(androidx.compose.ui.state.ToggleableState state, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.CheckboxColors colors, optional org.jetbrains.jewel.ui.component.styling.CheckboxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.CheckboxIcons icons, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void TriStateCheckboxRow(String text, androidx.compose.ui.state.ToggleableState state, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier textModifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.CheckboxColors colors, optional org.jetbrains.jewel.ui.component.styling.CheckboxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.CheckboxIcons icons, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.Alignment.Vertical verticalAlignment);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class CheckboxState implements org.jetbrains.jewel.foundation.state.FocusableComponentState org.jetbrains.jewel.foundation.state.ToggleableComponentState {
    ctor @KotlinOnly public CheckboxState(kotlin.ULong state);
    method public long copy(optional androidx.compose.ui.state.ToggleableState toggleableState, optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public androidx.compose.ui.state.ToggleableState toggleableState;
    field public static final org.jetbrains.jewel.ui.component.CheckboxState.Companion Companion;
  }

  public static final class CheckboxState.Companion {
    method public long of(androidx.compose.ui.state.ToggleableState toggleableState, optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class ChipKt {
    method @androidx.compose.runtime.Composable public static void Chip(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional boolean enabled, optional boolean selected, optional org.jetbrains.jewel.ui.component.styling.ChipStyle style, optional kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void RadioButtonChip(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional boolean enabled, optional org.jetbrains.jewel.ui.component.styling.ChipStyle style, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ToggleableChip(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional boolean enabled, optional org.jetbrains.jewel.ui.component.styling.ChipStyle style, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class ChipState implements org.jetbrains.jewel.foundation.state.FocusableComponentState org.jetbrains.jewel.foundation.state.SelectableComponentState {
    ctor @KotlinOnly public ChipState(kotlin.ULong state);
    method public long copy(optional boolean enabled, optional boolean focused, optional boolean selected, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public boolean isSelected;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.ChipState.Companion Companion;
  }

  public static final class ChipState.Companion {
    method public long of(optional boolean enabled, optional boolean focused, optional boolean selected, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class CircularProgressIndicatorKt {
    method @androidx.compose.runtime.Composable public static void CircularProgressIndicator(optional androidx.compose.ui.Modifier modifier, optional org.jetbrains.jewel.ui.component.styling.CircularProgressStyle style, optional kotlinx.coroutines.CoroutineDispatcher loadingDispatcher);
    method @androidx.compose.runtime.Composable public static void CircularProgressIndicatorBig(optional androidx.compose.ui.Modifier modifier, optional org.jetbrains.jewel.ui.component.styling.CircularProgressStyle style, optional kotlinx.coroutines.CoroutineDispatcher loadingDispatcher);
  }

  public final class ComboBoxKt {
    method @androidx.compose.runtime.Composable public static void ComboBox(String labelText, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier popupModifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional float maxPopupHeight, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.ComboBoxStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional kotlin.jvm.functions.Function0<kotlin.Unit> onArrowDownPress, optional kotlin.jvm.functions.Function0<kotlin.Unit> onArrowUpPress, optional org.jetbrains.jewel.ui.component.PopupManager popupManager, kotlin.jvm.functions.Function0<kotlin.Unit> popupContent);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class ComboBoxState implements org.jetbrains.jewel.foundation.state.FocusableComponentState {
    ctor @KotlinOnly public ComboBoxState(kotlin.ULong state);
    method public long copy(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.ComboBoxState.Companion Companion;
  }

  public static final class ComboBoxState.Companion {
    method public long of(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class ContextMenuDivider extends androidx.compose.foundation.ContextMenuItem {
    field public static final org.jetbrains.jewel.ui.component.ContextMenuDivider INSTANCE;
  }

  public final class ContextMenuItemOption extends androidx.compose.foundation.ContextMenuItem {
    ctor public ContextMenuItemOption(optional org.jetbrains.jewel.ui.icon.IconKey? icon, optional org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction? actionType, String label, kotlin.jvm.functions.Function0<kotlin.Unit> action);
    method public org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction? getActionType();
    method public org.jetbrains.jewel.ui.icon.IconKey? getIcon();
    property public org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction? actionType;
    property public org.jetbrains.jewel.ui.icon.IconKey? icon;
  }

  public abstract sealed class ContextMenuItemOptionAction {
  }

  public static final class ContextMenuItemOptionAction.CopyMenuItemOptionAction extends org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction {
    field public static final org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction.CopyMenuItemOptionAction INSTANCE;
  }

  public static final class ContextMenuItemOptionAction.CutMenuItemOptionAction extends org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction {
    field public static final org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction.CutMenuItemOptionAction INSTANCE;
  }

  public static final class ContextMenuItemOptionAction.PasteMenuItemOptionAction extends org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction {
    field public static final org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction.PasteMenuItemOptionAction INSTANCE;
  }

  public static final class ContextMenuItemOptionAction.SelectAllMenuItemOptionAction extends org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction {
    field public static final org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction.SelectAllMenuItemOptionAction INSTANCE;
  }

  public final class ContextMenuRepresentation implements androidx.compose.foundation.ContextMenuRepresentation {
    method @androidx.compose.runtime.Composable public void Representation(androidx.compose.foundation.ContextMenuState state, kotlin.jvm.functions.Function0<? extends java.util.List<? extends androidx.compose.foundation.ContextMenuItem>> items);
    field public static final org.jetbrains.jewel.ui.component.ContextMenuRepresentation INSTANCE;
  }

  public final class ContextSubmenu extends androidx.compose.foundation.ContextMenuItem {
    ctor public ContextSubmenu(String label, kotlin.jvm.functions.Function0<? extends java.util.List<? extends androidx.compose.foundation.ContextMenuItem>> submenu);
    method public kotlin.jvm.functions.Function0<java.util.List<androidx.compose.foundation.ContextMenuItem>> getSubmenu();
    property public kotlin.jvm.functions.Function0<java.util.List<androidx.compose.foundation.ContextMenuItem>> submenu;
  }

  public final class DividerKt {
    method @androidx.compose.runtime.Composable public static void Divider(org.jetbrains.jewel.ui.Orientation orientation, optional androidx.compose.ui.Modifier modifier, optional long color, optional float thickness, optional float startIndent, optional org.jetbrains.jewel.ui.component.styling.DividerStyle style);
  }

  public final class DropdownKt {
    method @Deprecated @androidx.compose.runtime.Composable public static void Dropdown(optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.Modifier menuModifier, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.DropdownStyle style, kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.MenuScope,kotlin.Unit> menuContent, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
  }

  @Deprecated @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class DropdownState implements org.jetbrains.jewel.foundation.state.FocusableComponentState {
    ctor @KotlinOnly @Deprecated public DropdownState(kotlin.ULong state);
    method @Deprecated public long copy(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property @Deprecated public boolean isActive;
    property @Deprecated public boolean isEnabled;
    property @Deprecated public boolean isFocused;
    property @Deprecated public boolean isHovered;
    property @Deprecated public boolean isPressed;
    property @Deprecated public kotlin.ULong state;
    field @Deprecated public static final org.jetbrains.jewel.ui.component.DropdownState.Companion Companion;
  }

  @Deprecated public static final class DropdownState.Companion {
    method @Deprecated public long of(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class EditableComboBoxKt {
    method @androidx.compose.runtime.Composable public static void EditableComboBox(androidx.compose.foundation.text.input.TextFieldState textFieldState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier popupModifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.ComboBoxStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional kotlin.jvm.functions.Function0<kotlin.Unit> onArrowDownPress, optional kotlin.jvm.functions.Function0<kotlin.Unit> onArrowUpPress, optional kotlin.jvm.functions.Function0<kotlin.Unit> onEnterPress, optional org.jetbrains.jewel.ui.component.PopupManager popupManager, kotlin.jvm.functions.Function0<kotlin.Unit> popupContent);
  }

  public final class GroupHeaderKt {
    method @androidx.compose.runtime.Composable public static void GroupHeader(String text, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? startComponent, optional kotlin.jvm.functions.Function0<kotlin.Unit>? endComponent, optional org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
  }

  public final class IconActionButtonKt {
    method @androidx.compose.runtime.Composable public static void IconActionButton(androidx.compose.ui.graphics.painter.Painter painter, String? contentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource);
    method @androidx.compose.runtime.Composable public static void IconActionButton(androidx.compose.ui.graphics.painter.Painter painter, String? contentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, optional androidx.compose.ui.Modifier tooltipModifier, optional androidx.compose.foundation.TooltipPlacement tooltipPlacement, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> tooltip);
    method @androidx.compose.runtime.Composable public static void IconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional org.jetbrains.jewel.ui.painter.PainterHint? hint, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass);
    method @androidx.compose.runtime.Composable public static void IconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional org.jetbrains.jewel.ui.painter.PainterHint? hint, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, optional androidx.compose.ui.Modifier tooltipModifier, optional androidx.compose.foundation.TooltipPlacement tooltipPlacement, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass, kotlin.jvm.functions.Function0<kotlin.Unit> tooltip);
    method @androidx.compose.runtime.Composable public static void IconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, org.jetbrains.jewel.ui.painter.PainterHint[] hints, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass);
    method @androidx.compose.runtime.Composable public static void IconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, org.jetbrains.jewel.ui.painter.PainterHint[] hints, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, optional androidx.compose.ui.Modifier tooltipModifier, optional androidx.compose.foundation.TooltipPlacement tooltipPlacement, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass, kotlin.jvm.functions.Function0<kotlin.Unit> tooltip);
  }

  public final class IconButtonKt {
    method @androidx.compose.runtime.Composable public static void IconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super org.jetbrains.jewel.ui.component.IconButtonState,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void SelectableIconButton(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super org.jetbrains.jewel.ui.component.SelectableIconButtonState,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ToggleableIconButton(boolean value, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super org.jetbrains.jewel.ui.component.ToggleableIconButtonState,kotlin.Unit> content);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class IconButtonState implements org.jetbrains.jewel.foundation.state.FocusableComponentState {
    ctor @KotlinOnly public IconButtonState(kotlin.ULong state);
    method public long copy(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.IconButtonState.Companion Companion;
  }

  public static final class IconButtonState.Companion {
    method public long of(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class IconKt {
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.ImageBitmap bitmap, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional long tint);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.painter.Painter painter, String? contentDescription, androidx.compose.ui.graphics.ColorFilter? colorFilter, optional androidx.compose.ui.Modifier modifier);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.painter.Painter painter, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional long tint);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.vector.ImageVector imageVector, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional long tint);
    method @androidx.compose.runtime.Composable public static void Icon(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional Class<? extends java.lang.Object?> iconClass, androidx.compose.ui.graphics.ColorFilter? colorFilter, org.jetbrains.jewel.ui.painter.PainterHint hint);
    method @androidx.compose.runtime.Composable public static void Icon(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional Class<? extends java.lang.Object?> iconClass, androidx.compose.ui.graphics.ColorFilter? colorFilter, org.jetbrains.jewel.ui.painter.PainterHint... hints);
    method @androidx.compose.runtime.Composable public static void Icon(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional Class<? extends java.lang.Object?> iconClass, optional long tint, org.jetbrains.jewel.ui.painter.PainterHint hint);
    method @androidx.compose.runtime.Composable public static void Icon(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional Class<? extends java.lang.Object?> iconClass, optional long tint, org.jetbrains.jewel.ui.painter.PainterHint... hints);
    method @Deprecated @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.painter.Painter painterResource(String resourcePath);
  }

  public final class ImageKt {
    method @androidx.compose.runtime.Composable public static void Image(org.jetbrains.jewel.ui.icon.IconKey iconKey, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional Class<? extends java.lang.Object?> iconClass, optional androidx.compose.ui.Alignment alignment, optional androidx.compose.ui.layout.ContentScale contentScale, optional float alpha, optional androidx.compose.ui.graphics.ColorFilter? colorFilter);
    method @androidx.compose.runtime.Composable public static void Image(org.jetbrains.jewel.ui.icon.IconKey iconKey, String? contentDescription, org.jetbrains.jewel.ui.painter.PainterHint[] hints, optional androidx.compose.ui.Modifier modifier, optional Class<? extends java.lang.Object?> iconClass, optional androidx.compose.ui.Alignment alignment, optional androidx.compose.ui.layout.ContentScale contentScale, optional float alpha, optional androidx.compose.ui.graphics.ColorFilter? colorFilter);
  }

  public final class InfoTextKt {
    method @androidx.compose.runtime.Composable public static void InfoText(androidx.compose.ui.text.AnnotatedString text, optional androidx.compose.ui.Modifier modifier, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional long letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional int textAlign, optional long lineHeight, optional int overflow, optional boolean softWrap, optional int maxLines, optional java.util.Map<java.lang.String,androidx.compose.foundation.text.InlineTextContent> inlineContent, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
    method @androidx.compose.runtime.Composable public static void InfoText(String text, optional androidx.compose.ui.Modifier modifier, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional long letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional int textAlign, optional long lineHeight, optional int overflow, optional boolean softWrap, optional int maxLines, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
  }

  public final class InlineBannerKt {
    method @Deprecated @androidx.compose.runtime.Composable public static void ErrorInlineBanner(optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowScope,kotlin.Unit>? actions, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actionIcons, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void ErrorInlineBanner(String text, optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowScope,kotlin.Unit>? actions, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actionIcons, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @Deprecated @androidx.compose.runtime.Composable public static void InformationInlineBanner(optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowScope,kotlin.Unit>? actions, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actionIcons, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void InformationInlineBanner(String text, optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowScope,kotlin.Unit>? actions, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actionIcons, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @androidx.compose.runtime.Composable public static void InlineErrorBanner(optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void InlineErrorBanner(String text, optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @androidx.compose.runtime.Composable public static void InlineInformationBanner(optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void InlineInformationBanner(String text, optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @androidx.compose.runtime.Composable public static void InlineSuccessBanner(optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void InlineSuccessBanner(String text, optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @androidx.compose.runtime.Composable public static void InlineWarningBanner(optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void InlineWarningBanner(String text, optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerLinkActionScope,kotlin.Unit>? linkActions, optional kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.banner.BannerIconActionScope,kotlin.Unit>? iconActions, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @Deprecated @androidx.compose.runtime.Composable public static void SuccessInlineBanner(optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowScope,kotlin.Unit>? actions, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actionIcons, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void SuccessInlineBanner(String text, optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowScope,kotlin.Unit>? actions, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actionIcons, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
    method @Deprecated @androidx.compose.runtime.Composable public static void WarningInlineBanner(optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowScope,kotlin.Unit>? actions, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actionIcons, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void WarningInlineBanner(String text, optional androidx.compose.ui.Modifier modifier, optional String? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowScope,kotlin.Unit>? actions, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actionIcons, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle style, optional androidx.compose.ui.text.TextStyle textStyle);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class InputFieldState implements org.jetbrains.jewel.foundation.state.FocusableComponentState {
    ctor @KotlinOnly public InputFieldState(kotlin.ULong state);
    method public long copy(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.InputFieldState.Companion Companion;
  }

  public static final class InputFieldState.Companion {
    method public long of(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class LinearProgressBarKt {
    method @androidx.compose.runtime.Composable public static void HorizontalProgressBar(float progress, optional androidx.compose.ui.Modifier modifier, optional org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle style);
    method @androidx.compose.runtime.Composable public static void IndeterminateHorizontalProgressBar(optional androidx.compose.ui.Modifier modifier, optional org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle style);
  }

  public final class LinkKt {
    method @androidx.compose.runtime.Composable public static void DropdownLink(String text, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.text.TextStyle textStyle, optional int overflow, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.LinkStyle style, optional androidx.compose.ui.Modifier menuModifier, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle, kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.MenuScope,kotlin.Unit> menuContent);
    method @androidx.compose.runtime.Composable public static void ExternalLink(String text, String uri, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.text.TextStyle textStyle, optional int overflow, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.LinkStyle style);
    method @androidx.compose.runtime.Composable public static void ExternalLink(String text, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.text.TextStyle textStyle, optional int overflow, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.LinkStyle style);
    method @androidx.compose.runtime.Composable public static void Link(String text, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.text.TextStyle textStyle, optional int overflow, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.LinkStyle style);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class LinkState implements org.jetbrains.jewel.foundation.state.FocusableComponentState {
    ctor @KotlinOnly public LinkState(kotlin.ULong state);
    method @androidx.compose.runtime.Composable public <T> T chooseValueWithVisited(T normal, T disabled, T focused, T pressed, T hovered, T visited, T active);
    method public long copy(optional boolean enabled, optional boolean focused, optional boolean visited, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public boolean isVisited;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.LinkState.Companion Companion;
  }

  public static final class LinkState.Companion {
    method public long of(optional boolean enabled, optional boolean focused, optional boolean visited, optional boolean hovered, optional boolean pressed, optional boolean active);
  }

  public final class ListComboBoxKt {
    method @androidx.compose.runtime.Composable public static void EditableListComboBox(java.util.List<java.lang.String> items, int selectedIndex, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onSelectedItemChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional float maxPopupHeight, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.ComboBoxStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onPopupVisibleChange, optional kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.String,?> itemKeys, optional org.jetbrains.jewel.foundation.lazy.SelectableLazyListState listState);
    method @androidx.compose.runtime.Composable public static void ListComboBox(java.util.List<java.lang.String> items, int selectedIndex, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onSelectedItemChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional float maxPopupHeight, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.ComboBoxStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onPopupVisibleChange, optional kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.String,?> itemKeys, optional org.jetbrains.jewel.foundation.lazy.SelectableLazyListState listState);
    method public static <T> int selectedItemIndex(org.jetbrains.jewel.foundation.lazy.SelectableLazyListState, java.util.List<? extends T> items, kotlin.jvm.functions.Function2<? super java.lang.Integer,? super T,?> itemKeys);
  }

  @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ListItemState {
    ctor public ListItemState(boolean isSelected, optional boolean isActive);
    method public boolean isActive();
    method public boolean isSelected();
    property public boolean isActive;
    property public boolean isSelected;
  }

  public interface MenuController {
    method public void clearShortcutActions();
    method public boolean close(int mode);
    method public void closeAll(int mode, boolean force);
    method public Boolean? findAndExecuteShortcut(javax.swing.KeyStroke? keyStroke);
    method public kotlin.jvm.functions.Function1<androidx.compose.ui.input.InputMode,java.lang.Boolean> getOnDismissRequest();
    method public boolean isRootMenu();
    method public boolean isSubmenu();
    method public void onHoveredChange(boolean hovered);
    method public void registerShortcutAction(javax.swing.KeyStroke keyStroke, kotlin.jvm.functions.Function0<kotlin.Unit> action);
    method public org.jetbrains.jewel.ui.component.MenuController submenuController(kotlin.jvm.functions.Function1<? super androidx.compose.ui.input.InputMode,java.lang.Boolean> onDismissRequest);
    property public abstract kotlin.jvm.functions.Function1<androidx.compose.ui.input.InputMode,java.lang.Boolean> onDismissRequest;
  }

  public final class MenuControllerKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.MenuController> getLocalMenuController();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.MenuController> LocalMenuController;
  }

  @Deprecated @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class MenuItemState implements org.jetbrains.jewel.foundation.state.FocusableComponentState org.jetbrains.jewel.foundation.state.SelectableComponentState {
    ctor @KotlinOnly @Deprecated public MenuItemState(kotlin.ULong state);
    method @Deprecated public long copy(optional boolean selected, optional boolean enabled, optional boolean focused, optional boolean hovered, optional boolean pressed, optional boolean active);
    property @Deprecated public boolean isActive;
    property @Deprecated public boolean isEnabled;
    property @Deprecated public boolean isFocused;
    property @Deprecated public boolean isHovered;
    property @Deprecated public boolean isPressed;
    property @Deprecated public boolean isSelected;
    property @Deprecated public kotlin.ULong state;
    field @Deprecated public static final org.jetbrains.jewel.ui.component.MenuItemState.Companion Companion;
  }

  @Deprecated public static final class MenuItemState.Companion {
    method @Deprecated public long of(boolean selected, boolean enabled, optional boolean focused, optional boolean hovered, optional boolean pressed, optional boolean active);
  }

  public final class MenuKt {
    method @Deprecated @androidx.compose.runtime.Composable public static void MenuSeparator(optional androidx.compose.ui.Modifier modifier, optional org.jetbrains.jewel.ui.component.styling.MenuItemMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.MenuItemColors colors);
    method @Deprecated @androidx.compose.runtime.Composable public static void MenuSubmenuItem(optional androidx.compose.ui.Modifier modifier, optional boolean enabled, boolean canShowIcon, org.jetbrains.jewel.ui.icon.IconKey? iconKey, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.MenuStyle style, kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.MenuScope,kotlin.Unit> submenu, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void PopupMenu(kotlin.jvm.functions.Function1<? super androidx.compose.ui.input.InputMode,java.lang.Boolean> onDismissRequest, androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.ui.Modifier modifier, optional org.jetbrains.jewel.ui.component.styling.MenuStyle style, optional androidx.compose.ui.window.PopupProperties popupProperties, kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.MenuScope,kotlin.Unit> content);
    method public static void items(org.jetbrains.jewel.ui.component.MenuScope, int count, kotlin.jvm.functions.Function1<? super java.lang.Integer,java.lang.Boolean> isSelected, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onItemClick, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> content);
    method public static <T> void items(org.jetbrains.jewel.ui.component.MenuScope, java.util.List<? extends T> items, kotlin.jvm.functions.Function1<? super T,java.lang.Boolean> isSelected, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> onItemClick, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> content);
    method public static void separator(org.jetbrains.jewel.ui.component.MenuScope);
  }

  @Deprecated public final class MenuManager {
    ctor @Deprecated public MenuManager(kotlin.jvm.functions.Function1<? super androidx.compose.ui.input.InputMode,java.lang.Boolean> onDismissRequest, optional org.jetbrains.jewel.ui.component.MenuManager? parentMenuManager);
    method @Deprecated public boolean close(int mode);
    method @Deprecated public void closeAll(int mode, boolean force);
    method @Deprecated public kotlin.jvm.functions.Function1<androidx.compose.ui.input.InputMode,java.lang.Boolean> getOnDismissRequest();
    method @Deprecated public boolean isRootMenu();
    method @Deprecated public boolean isSubmenu();
    method @Deprecated public org.jetbrains.jewel.ui.component.MenuManager submenuManager(kotlin.jvm.functions.Function1<? super androidx.compose.ui.input.InputMode,java.lang.Boolean> onDismissRequest);
    property @Deprecated public kotlin.jvm.functions.Function1<androidx.compose.ui.input.InputMode,java.lang.Boolean> onDismissRequest;
  }

  public final class MenuManagerKt {
    method @Deprecated public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.MenuManager> getLocalMenuManager();
    property @Deprecated public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.MenuManager> LocalMenuManager;
  }

  public interface MenuScope {
    method public void passiveItem(kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method public void selectableItem(boolean selected, optional org.jetbrains.jewel.ui.icon.IconKey? iconKey, optional java.util.Set<java.lang.String>? keybinding, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional boolean enabled, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method public void selectableItemWithActionType(boolean selected, optional org.jetbrains.jewel.ui.icon.IconKey? iconKey, optional org.jetbrains.jewel.ui.component.ContextMenuItemOptionAction? actionType, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional boolean enabled, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method public void submenu(optional boolean enabled, optional org.jetbrains.jewel.ui.icon.IconKey? iconKey, kotlin.jvm.functions.Function1<? super org.jetbrains.jewel.ui.component.MenuScope,kotlin.Unit> submenu, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class PopupContainerKt {
    method @androidx.compose.runtime.Composable public static void PopupContainer(kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.ui.Modifier modifier, optional org.jetbrains.jewel.ui.component.styling.PopupContainerStyle style, optional androidx.compose.ui.window.PopupProperties popupProperties, optional androidx.compose.ui.window.PopupPositionProvider popupPositionProvider, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class RadioButtonKt {
    method @androidx.compose.runtime.Composable public static void RadioButton(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.RadioButtonStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.Alignment.Vertical verticalAlignment);
    method @androidx.compose.runtime.Composable public static void RadioButtonRow(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.RadioButtonStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void RadioButtonRow(String text, boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.Outline outline, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.RadioButtonStyle style, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.Alignment.Vertical verticalAlignment);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class RadioButtonState implements org.jetbrains.jewel.foundation.state.FocusableComponentState org.jetbrains.jewel.foundation.state.SelectableComponentState {
    ctor @KotlinOnly public RadioButtonState(kotlin.ULong state);
    method public long copy(optional boolean selected, optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public boolean isSelected;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.RadioButtonState.Companion Companion;
  }

  public static final class RadioButtonState.Companion {
    method public long of(boolean selected, optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class ScrollableContainerKt {
    method @androidx.compose.runtime.Composable public static void HorizontallyScrollableContainer(androidx.compose.foundation.gestures.ScrollableState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier scrollbarModifier, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean reverseLayout, optional boolean scrollbarEnabled, optional androidx.compose.foundation.interaction.MutableInteractionSource scrollbarInteractionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void HorizontallyScrollableContainer(androidx.compose.foundation.lazy.grid.LazyGridState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier scrollbarModifier, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean reverseLayout, optional boolean scrollbarEnabled, optional androidx.compose.foundation.interaction.MutableInteractionSource scrollbarInteractionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void HorizontallyScrollableContainer(androidx.compose.foundation.lazy.LazyListState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier scrollbarModifier, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean reverseLayout, optional boolean scrollbarEnabled, optional androidx.compose.foundation.interaction.MutableInteractionSource scrollbarInteractionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void HorizontallyScrollableContainer(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier scrollbarModifier, optional androidx.compose.foundation.ScrollState scrollState, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean reverseLayout, optional boolean scrollbarEnabled, optional androidx.compose.foundation.interaction.MutableInteractionSource scrollbarInteractionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void HorizontallyScrollableContainer(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier scrollbarModifier, optional androidx.compose.foundation.ScrollState scrollState, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean reverseLayout, optional boolean userScrollEnabled, optional boolean scrollbarEnabled, optional androidx.compose.foundation.interaction.MutableInteractionSource scrollbarInteractionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void VerticallyScrollableContainer(androidx.compose.foundation.gestures.ScrollableState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier scrollbarModifier, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean reverseLayout, optional boolean scrollbarEnabled, optional androidx.compose.foundation.interaction.MutableInteractionSource scrollbarInteractionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void VerticallyScrollableContainer(androidx.compose.foundation.lazy.grid.LazyGridState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier scrollbarModifier, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean reverseLayout, optional boolean scrollbarEnabled, optional androidx.compose.foundation.interaction.MutableInteractionSource scrollbarInteractionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void VerticallyScrollableContainer(androidx.compose.foundation.lazy.LazyListState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier scrollbarModifier, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean reverseLayout, optional boolean scrollbarEnabled, optional androidx.compose.foundation.interaction.MutableInteractionSource scrollbarInteractionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void VerticallyScrollableContainer(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier scrollbarModifier, optional androidx.compose.foundation.ScrollState scrollState, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean reverseLayout, optional boolean scrollbarEnabled, optional androidx.compose.foundation.interaction.MutableInteractionSource scrollbarInteractionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void VerticallyScrollableContainer(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier scrollbarModifier, optional androidx.compose.foundation.ScrollState scrollState, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean reverseLayout, optional boolean userScrollEnabled, optional boolean scrollbarEnabled, optional androidx.compose.foundation.interaction.MutableInteractionSource scrollbarInteractionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static float scrollbarContentSafePadding(optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style);
  }

  public final class ScrollbarKt {
    method @androidx.compose.runtime.Composable public static void HorizontalScrollbar(androidx.compose.foundation.gestures.ScrollableState scrollState, optional androidx.compose.ui.Modifier modifier, optional boolean reverseLayout, optional boolean enabled, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean keepVisible);
    method @androidx.compose.runtime.Composable public static void VerticalScrollbar(androidx.compose.foundation.gestures.ScrollableState scrollState, optional androidx.compose.ui.Modifier modifier, optional boolean reverseLayout, optional boolean enabled, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle style, optional boolean keepVisible);
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SegmentedControlButtonData {
    ctor public SegmentedControlButtonData(boolean selected, kotlin.jvm.functions.Function2<? super org.jetbrains.jewel.ui.component.SegmentedControlButtonScope,? super org.jetbrains.jewel.ui.component.SegmentedControlButtonState,kotlin.Unit> content, kotlin.jvm.functions.Function0<kotlin.Unit> onSelect);
    method public kotlin.jvm.functions.Function2<org.jetbrains.jewel.ui.component.SegmentedControlButtonScope,org.jetbrains.jewel.ui.component.SegmentedControlButtonState,kotlin.Unit> getContent();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getOnSelect();
    method public boolean getSelected();
    property public kotlin.jvm.functions.Function2<org.jetbrains.jewel.ui.component.SegmentedControlButtonScope,org.jetbrains.jewel.ui.component.SegmentedControlButtonState,kotlin.Unit> content;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> onSelect;
    property public boolean selected;
  }

  public interface SegmentedControlButtonScope {
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class SegmentedControlButtonState implements org.jetbrains.jewel.foundation.state.SelectableComponentState {
    ctor @KotlinOnly public SegmentedControlButtonState(kotlin.ULong state);
    method public long copy(optional boolean selected, optional boolean enabled, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isHovered;
    property public boolean isPressed;
    property public boolean isSelected;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.SegmentedControlButtonState.Companion Companion;
  }

  public static final class SegmentedControlButtonState.Companion {
    method public long of(boolean selected, optional boolean enabled, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class SegmentedControlKt {
    method @androidx.compose.runtime.Composable public static void SegmentedControl(java.util.List<org.jetbrains.jewel.ui.component.SegmentedControlButtonData> buttons, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle style, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle buttonStyle, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class SegmentedControlState implements org.jetbrains.jewel.foundation.state.FocusableComponentState {
    ctor @KotlinOnly public SegmentedControlState(kotlin.ULong state);
    method public long copy(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.SegmentedControlState.Companion Companion;
  }

  public static final class SegmentedControlState.Companion {
    method public long of(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class SelectableIconActionButtonKt {
    method @androidx.compose.runtime.Composable public static void SelectableIconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional org.jetbrains.jewel.ui.painter.PainterHint? extraHint, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass);
    method @androidx.compose.runtime.Composable public static void SelectableIconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional org.jetbrains.jewel.ui.painter.PainterHint? extraHint, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, optional androidx.compose.ui.Modifier tooltipModifier, optional androidx.compose.foundation.TooltipPlacement tooltipPlacement, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass, kotlin.jvm.functions.Function0<kotlin.Unit> tooltip);
    method @androidx.compose.runtime.Composable public static void SelectableIconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, boolean selected, org.jetbrains.jewel.ui.painter.PainterHint[] extraHints, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass);
    method @androidx.compose.runtime.Composable public static void SelectableIconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, boolean selected, org.jetbrains.jewel.ui.painter.PainterHint[] extraHints, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, optional androidx.compose.ui.Modifier tooltipModifier, optional androidx.compose.foundation.TooltipPlacement tooltipPlacement, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass, kotlin.jvm.functions.Function0<kotlin.Unit> tooltip);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class SelectableIconButtonState implements org.jetbrains.jewel.foundation.state.FocusableComponentState org.jetbrains.jewel.foundation.state.SelectableComponentState {
    ctor @KotlinOnly public SelectableIconButtonState(kotlin.ULong state);
    method public long copy(optional boolean enabled, optional boolean selected, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public boolean isSelected;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.SelectableIconButtonState.Companion Companion;
  }

  public static final class SelectableIconButtonState.Companion {
    method public long of(optional boolean enabled, optional boolean selected, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class SimpleListItemKt {
    method @Deprecated @androidx.compose.runtime.Composable public static void SimpleListItem(boolean isSelected, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean isActive, optional org.jetbrains.jewel.ui.icon.IconKey? icon, optional String? iconContentDescription, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle style, optional float height, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void SimpleListItem(boolean selected, optional boolean active, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional java.util.List<? extends org.jetbrains.jewel.ui.painter.PainterHint> painterHints, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional org.jetbrains.jewel.ui.icon.IconKey? icon, optional String? iconContentDescription, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle style, optional float height, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void SimpleListItem(String text, boolean isSelected, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier textModifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean isActive, optional org.jetbrains.jewel.ui.icon.IconKey? icon, optional String? iconContentDescription, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle style, optional float height);
    method @androidx.compose.runtime.Composable public static void SimpleListItem(String text, boolean selected, optional boolean active, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier textModifier, optional androidx.compose.ui.Modifier iconModifier, optional org.jetbrains.jewel.ui.icon.IconKey? icon, optional String? iconContentDescription, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle style, optional float height, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, org.jetbrains.jewel.ui.painter.PainterHint... painterHints);
    method @Deprecated @androidx.compose.runtime.Composable public static void SimpleListItem(String text, org.jetbrains.jewel.ui.component.ListItemState state, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier textModifier, optional androidx.compose.ui.Modifier iconModifier, optional org.jetbrains.jewel.ui.icon.IconKey? icon, optional String? iconContentDescription, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle style, optional float height);
    method @androidx.compose.runtime.Composable public static void SimpleListItem(String text, org.jetbrains.jewel.ui.component.ListItemState state, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier textModifier, optional androidx.compose.ui.Modifier iconModifier, optional org.jetbrains.jewel.ui.icon.IconKey? icon, optional String? iconContentDescription, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle style, optional float height, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, org.jetbrains.jewel.ui.painter.PainterHint... painterHints);
    method @androidx.compose.runtime.Composable public static void SimpleListItem(org.jetbrains.jewel.ui.component.ListItemState state, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional java.util.List<? extends org.jetbrains.jewel.ui.painter.PainterHint> painterHints, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional org.jetbrains.jewel.ui.icon.IconKey? icon, optional String? iconContentDescription, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle style, optional float height, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void SimpleListItem(org.jetbrains.jewel.ui.component.ListItemState state, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional org.jetbrains.jewel.ui.icon.IconKey? icon, optional String? iconContentDescription, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle style, optional float height, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class SliderKt {
    method @androidx.compose.runtime.Composable public static void Slider(float value, kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, optional int steps, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.SliderStyle style);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class SliderState implements org.jetbrains.jewel.foundation.state.FocusableComponentState {
    ctor @KotlinOnly public SliderState(kotlin.ULong state);
    method public long copy(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.SliderState.Companion Companion;
  }

  public static final class SliderState.Companion {
    method public long of(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class SplitLayoutKt {
    method @androidx.compose.runtime.Composable public static void HorizontalSplitLayout(kotlin.jvm.functions.Function0<kotlin.Unit> first, kotlin.jvm.functions.Function0<kotlin.Unit> second, optional androidx.compose.ui.Modifier modifier, optional org.jetbrains.jewel.ui.component.styling.DividerStyle dividerStyle, optional float draggableWidth, optional float firstPaneMinWidth, optional float secondPaneMinWidth, optional org.jetbrains.jewel.ui.component.SplitLayoutState state);
    method @androidx.compose.runtime.Composable public static void VerticalSplitLayout(kotlin.jvm.functions.Function0<kotlin.Unit> first, kotlin.jvm.functions.Function0<kotlin.Unit> second, optional androidx.compose.ui.Modifier modifier, optional org.jetbrains.jewel.ui.component.styling.DividerStyle dividerStyle, optional float draggableWidth, optional float firstPaneMinWidth, optional float secondPaneMinWidth, optional org.jetbrains.jewel.ui.component.SplitLayoutState state);
    method @androidx.compose.runtime.Composable public static org.jetbrains.jewel.ui.component.SplitLayoutState rememberSplitLayoutState(optional float initialSplitFraction);
  }

  public final class SplitLayoutState {
    ctor public SplitLayoutState(float initialSplitFraction);
    method public float getDividerPosition();
    method public androidx.compose.ui.layout.LayoutCoordinates? getLayoutCoordinates();
    method public void setDividerPosition(float);
    method public void setLayoutCoordinates(androidx.compose.ui.layout.LayoutCoordinates?);
    property public float dividerPosition;
    property public androidx.compose.ui.layout.LayoutCoordinates? layoutCoordinates;
  }

  public interface TabContentScope {
    method @androidx.compose.runtime.Composable public default androidx.compose.ui.Modifier tabContentAlpha(androidx.compose.ui.Modifier, long state);
  }

  @androidx.compose.runtime.Immutable public abstract sealed class TabData {
    method public abstract boolean getClosable();
    method public abstract kotlin.jvm.functions.Function2<org.jetbrains.jewel.ui.component.TabContentScope,org.jetbrains.jewel.ui.component.TabState,kotlin.Unit> getContent();
    method public abstract kotlin.jvm.functions.Function0<kotlin.Unit> getOnClick();
    method public abstract kotlin.jvm.functions.Function0<kotlin.Unit> getOnClose();
    method public abstract boolean getSelected();
    property public abstract boolean closable;
    property public abstract kotlin.jvm.functions.Function2<org.jetbrains.jewel.ui.component.TabContentScope,org.jetbrains.jewel.ui.component.TabState,kotlin.Unit> content;
    property public abstract kotlin.jvm.functions.Function0<kotlin.Unit> onClick;
    property public abstract kotlin.jvm.functions.Function0<kotlin.Unit> onClose;
    property public abstract boolean selected;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public static final class TabData.Default extends org.jetbrains.jewel.ui.component.TabData {
    ctor public TabData.Default(boolean selected, kotlin.jvm.functions.Function2<? super org.jetbrains.jewel.ui.component.TabContentScope,? super org.jetbrains.jewel.ui.component.TabState,kotlin.Unit> content, optional boolean closable, optional kotlin.jvm.functions.Function0<kotlin.Unit> onClose, optional kotlin.jvm.functions.Function0<kotlin.Unit> onClick);
    method public boolean getClosable();
    method public kotlin.jvm.functions.Function2<org.jetbrains.jewel.ui.component.TabContentScope,org.jetbrains.jewel.ui.component.TabState,kotlin.Unit> getContent();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getOnClick();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getOnClose();
    method public boolean getSelected();
    property public boolean closable;
    property public kotlin.jvm.functions.Function2<org.jetbrains.jewel.ui.component.TabContentScope,org.jetbrains.jewel.ui.component.TabState,kotlin.Unit> content;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> onClick;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> onClose;
    property public boolean selected;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public static final class TabData.Editor extends org.jetbrains.jewel.ui.component.TabData {
    ctor public TabData.Editor(boolean selected, kotlin.jvm.functions.Function2<? super org.jetbrains.jewel.ui.component.TabContentScope,? super org.jetbrains.jewel.ui.component.TabState,kotlin.Unit> content, optional boolean closable, optional kotlin.jvm.functions.Function0<kotlin.Unit> onClose, optional kotlin.jvm.functions.Function0<kotlin.Unit> onClick);
    method public boolean getClosable();
    method public kotlin.jvm.functions.Function2<org.jetbrains.jewel.ui.component.TabContentScope,org.jetbrains.jewel.ui.component.TabState,kotlin.Unit> getContent();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getOnClick();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getOnClose();
    method public boolean getSelected();
    property public boolean closable;
    property public kotlin.jvm.functions.Function2<org.jetbrains.jewel.ui.component.TabContentScope,org.jetbrains.jewel.ui.component.TabState,kotlin.Unit> content;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> onClick;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> onClose;
    property public boolean selected;
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class TabState implements org.jetbrains.jewel.foundation.state.SelectableComponentState {
    ctor @KotlinOnly public TabState(kotlin.ULong state);
    method public long copy(optional boolean selected, optional boolean enabled, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isHovered;
    property public boolean isPressed;
    property public boolean isSelected;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.TabState.Companion Companion;
  }

  public static final class TabState.Companion {
    method public long of(boolean selected, optional boolean enabled, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class TabStripKt {
    method @androidx.compose.runtime.Composable public static void TabStrip(java.util.List<? extends org.jetbrains.jewel.ui.component.TabData> tabs, org.jetbrains.jewel.ui.component.styling.TabStyle style, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class TabStripState implements org.jetbrains.jewel.foundation.state.FocusableComponentState {
    ctor @KotlinOnly public TabStripState(kotlin.ULong state);
    method public long copy(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public kotlin.ULong state;
    field public static final org.jetbrains.jewel.ui.component.TabStripState.Companion Companion;
  }

  public static final class TabStripState.Companion {
    method public long of(optional boolean enabled, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class TabsKt {
    method @androidx.compose.runtime.Composable public static void SimpleTabContent(org.jetbrains.jewel.ui.component.TabContentScope, String label, long state, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.painter.Painter? icon);
    method @androidx.compose.runtime.Composable public static void SimpleTabContent(org.jetbrains.jewel.ui.component.TabContentScope, String label, long state, optional androidx.compose.ui.Modifier modifier, optional org.jetbrains.jewel.ui.icon.IconKey? iconKey, org.jetbrains.jewel.ui.painter.PainterHint... painterHints);
    method @androidx.compose.runtime.Composable public static void SimpleTabContent(org.jetbrains.jewel.ui.component.TabContentScope, long state, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, kotlin.jvm.functions.Function0<kotlin.Unit> label);
  }

  public final class TextAreaKt {
    method @androidx.compose.runtime.Composable public static void TextArea(androidx.compose.foundation.text.input.TextFieldState state, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean readOnly, optional androidx.compose.foundation.text.input.InputTransformation? inputTransformation, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.input.KeyboardActionHandler? onKeyboardAction, optional androidx.compose.foundation.text.input.TextFieldLineLimits lineLimits, optional kotlin.jvm.functions.Function2<? super androidx.compose.ui.unit.Density,? super kotlin.jvm.functions.Function0<androidx.compose.ui.text.TextLayoutResult?>,kotlin.Unit>? onTextLayout, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.TextAreaStyle style, optional org.jetbrains.jewel.ui.Outline outline, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional androidx.compose.ui.Modifier decorationBoxModifier, optional androidx.compose.foundation.text.input.OutputTransformation? outputTransformation, optional boolean undecorated, optional androidx.compose.foundation.ScrollState scrollState, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle? scrollbarStyle);
  }

  public final class TextContextMenu implements androidx.compose.foundation.text.TextContextMenu {
    method @androidx.compose.runtime.Composable public void Area(androidx.compose.foundation.text.TextContextMenu.TextManager textManager, androidx.compose.foundation.ContextMenuState state, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    field public static final org.jetbrains.jewel.ui.component.TextContextMenu INSTANCE;
  }

  public final class TextFieldKt {
    method @androidx.compose.runtime.Composable public static void TextField(androidx.compose.foundation.text.input.TextFieldState state, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean readOnly, optional androidx.compose.foundation.text.input.InputTransformation? inputTransformation, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.input.KeyboardActionHandler? onKeyboardAction, optional kotlin.jvm.functions.Function2<? super androidx.compose.ui.unit.Density,? super kotlin.jvm.functions.Function0<androidx.compose.ui.text.TextLayoutResult?>,kotlin.Unit>? onTextLayout, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional org.jetbrains.jewel.ui.component.styling.TextFieldStyle style, optional org.jetbrains.jewel.ui.Outline outline, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.compose.foundation.text.input.OutputTransformation? outputTransformation, optional boolean undecorated);
  }

  public final class TextKt {
    method @androidx.compose.runtime.Composable public static void Text(androidx.compose.ui.text.AnnotatedString text, optional androidx.compose.ui.Modifier modifier, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional long letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional int textAlign, optional long lineHeight, optional int overflow, optional boolean softWrap, optional int maxLines, optional java.util.Map<java.lang.String,androidx.compose.foundation.text.InlineTextContent> inlineContent, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
    method @androidx.compose.runtime.Composable public static void Text(String text, optional androidx.compose.ui.Modifier modifier, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional long letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional int textAlign, optional long lineHeight, optional int overflow, optional boolean softWrap, optional int maxLines, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
  }

  public final class ToggleableIconActionButtonKt {
    method @androidx.compose.runtime.Composable public static void ToggleableIconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, boolean value, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional org.jetbrains.jewel.ui.painter.PainterHint? extraHint, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass);
    method @androidx.compose.runtime.Composable public static void ToggleableIconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, boolean value, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional org.jetbrains.jewel.ui.painter.PainterHint? extraHint, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, optional androidx.compose.ui.Modifier tooltipModifier, optional androidx.compose.foundation.TooltipPlacement tooltipPlacement, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass, kotlin.jvm.functions.Function0<kotlin.Unit> tooltip);
    method @androidx.compose.runtime.Composable public static void ToggleableIconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, boolean value, org.jetbrains.jewel.ui.painter.PainterHint[] extraHints, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass);
    method @androidx.compose.runtime.Composable public static void ToggleableIconActionButton(org.jetbrains.jewel.ui.icon.IconKey key, String? contentDescription, boolean value, org.jetbrains.jewel.ui.painter.PainterHint[] extraHints, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier iconModifier, optional boolean enabled, optional boolean focusable, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle style, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, optional androidx.compose.ui.Modifier tooltipModifier, optional androidx.compose.foundation.TooltipPlacement tooltipPlacement, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional Class<? extends java.lang.Object?> iconClass, kotlin.jvm.functions.Function0<kotlin.Unit> tooltip);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class ToggleableIconButtonState implements org.jetbrains.jewel.foundation.state.FocusableComponentState org.jetbrains.jewel.foundation.state.ToggleableComponentState {
    ctor @KotlinOnly public ToggleableIconButtonState(kotlin.ULong state);
    method public long copy(optional boolean enabled, optional androidx.compose.ui.state.ToggleableState toggleableState, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
    property public boolean isActive;
    property public boolean isEnabled;
    property public boolean isFocused;
    property public boolean isHovered;
    property public boolean isPressed;
    property public kotlin.ULong state;
    property public androidx.compose.ui.state.ToggleableState toggleableState;
    field public static final org.jetbrains.jewel.ui.component.ToggleableIconButtonState.Companion Companion;
  }

  public static final class ToggleableIconButtonState.Companion {
    method public long of(optional boolean enabled, optional androidx.compose.ui.state.ToggleableState toggleableState, optional boolean focused, optional boolean pressed, optional boolean hovered, optional boolean active);
  }

  public final class TooltipKt {
    method @androidx.compose.runtime.Composable public static void Tooltip(kotlin.jvm.functions.Function0<kotlin.Unit> tooltip, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle style, optional androidx.compose.foundation.TooltipPlacement tooltipPlacement, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @Deprecated @androidx.compose.runtime.Composable public static void Tooltip(kotlin.jvm.functions.Function0<kotlin.Unit> tooltip, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle style, optional androidx.compose.foundation.TooltipPlacement tooltipPlacement, optional org.jetbrains.jewel.ui.component.AutoHideBehavior autoHideBehavior, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  @Deprecated public final class Typography {
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle consoleTextStyle();
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle editorTextStyle();
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle h0TextStyle();
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle h1TextStyle();
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle h2TextStyle();
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle h3TextStyle();
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle h4TextStyle();
    method @Deprecated @androidx.compose.runtime.Composable public long labelTextSize();
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle labelTextStyle();
    property @Deprecated public static float DefaultLineHeightMultiplier;
    property @Deprecated public static float EditorLineHeightMultiplier;
    field @Deprecated public static final float DefaultLineHeightMultiplier = 1.3f;
    field @Deprecated public static final float EditorLineHeightMultiplier = 1.5f;
    field @Deprecated public static final org.jetbrains.jewel.ui.component.Typography INSTANCE;
  }

  public final class TypographyKt {
    method @Deprecated public static androidx.compose.ui.text.TextStyle copyWithSize(androidx.compose.ui.text.TextStyle, long fontSize, androidx.compose.ui.graphics.Brush? brush, optional float alpha, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional String? fontFeatureSettings, optional long letterSpacing, optional androidx.compose.ui.text.style.BaselineShift? baselineShift, optional androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform, optional androidx.compose.ui.text.intl.LocaleList? localeList, optional long background, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.graphics.Shadow? shadow, optional androidx.compose.ui.graphics.drawscope.DrawStyle? drawStyle, optional int textAlign, optional int textDirection, optional androidx.compose.ui.text.style.TextIndent? textIndent, optional androidx.compose.ui.text.PlatformTextStyle? platformStyle, optional androidx.compose.ui.text.style.LineHeightStyle? lineHeightStyle, optional int lineBreak, optional int hyphens, optional androidx.compose.ui.text.style.TextMotion? textMotion);
    method @Deprecated public static androidx.compose.ui.text.TextStyle copyWithSize(androidx.compose.ui.text.TextStyle, long fontSize, optional long color, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional String? fontFeatureSettings, optional long letterSpacing, optional androidx.compose.ui.text.style.BaselineShift? baselineShift, optional androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform, optional androidx.compose.ui.text.intl.LocaleList? localeList, optional long background, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.graphics.Shadow? shadow, optional androidx.compose.ui.graphics.drawscope.DrawStyle? drawStyle, optional int textAlign, optional int textDirection, optional androidx.compose.ui.text.style.TextIndent? textIndent, optional androidx.compose.ui.text.PlatformTextStyle? platformStyle, optional androidx.compose.ui.text.style.LineHeightStyle? lineHeightStyle, optional int lineBreak, optional int hyphens, optional androidx.compose.ui.text.style.TextMotion? textMotion);
    method public static operator long minus(long, long other);
    method public static operator long plus(long, long other);
  }

}

package org.jetbrains.jewel.ui.component.banner {

  public interface BannerIconActionScope {
    method public void iconAction(org.jetbrains.jewel.ui.icon.IconKey icon, String? contentDescription, optional String? tooltipText, kotlin.jvm.functions.Function0<kotlin.Unit> onClick);
  }

  public interface BannerLinkActionScope {
    method public void action(String text, kotlin.jvm.functions.Function0<kotlin.Unit> onClick);
  }

}

package org.jetbrains.jewel.ui.component.styling {

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class BannerColors {
    ctor @KotlinOnly public BannerColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color border);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color border;
    field public static final org.jetbrains.jewel.ui.component.styling.BannerColors.Companion Companion;
  }

  public static final class BannerColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class BannerMetrics {
    ctor @KotlinOnly public BannerMetrics(androidx.compose.ui.unit.Dp borderWidth);
    property public androidx.compose.ui.unit.Dp borderWidth;
    field public static final org.jetbrains.jewel.ui.component.styling.BannerMetrics.Companion Companion;
  }

  public static final class BannerMetrics.Companion {
  }

  public final class BannerStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles> getLocalDefaultBannerStyle();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.InlineBannerStyles> getLocalInlineBannerStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles> LocalDefaultBannerStyle;
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.InlineBannerStyles> LocalInlineBannerStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ButtonColors {
    ctor @KotlinOnly public ButtonColors(androidx.compose.ui.graphics.Brush background, androidx.compose.ui.graphics.Brush backgroundDisabled, androidx.compose.ui.graphics.Brush backgroundFocused, androidx.compose.ui.graphics.Brush backgroundPressed, androidx.compose.ui.graphics.Brush backgroundHovered, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentFocused, androidx.compose.ui.graphics.Color contentPressed, androidx.compose.ui.graphics.Color contentHovered, androidx.compose.ui.graphics.Brush border, androidx.compose.ui.graphics.Brush borderDisabled, androidx.compose.ui.graphics.Brush borderFocused, androidx.compose.ui.graphics.Brush borderPressed, androidx.compose.ui.graphics.Brush borderHovered);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Brush> backgroundFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Brush> borderFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    method public androidx.compose.ui.graphics.Brush getBackground();
    method public androidx.compose.ui.graphics.Brush getBackgroundDisabled();
    method public androidx.compose.ui.graphics.Brush getBackgroundFocused();
    method public androidx.compose.ui.graphics.Brush getBackgroundHovered();
    method public androidx.compose.ui.graphics.Brush getBackgroundPressed();
    method public androidx.compose.ui.graphics.Brush getBorder();
    method public androidx.compose.ui.graphics.Brush getBorderDisabled();
    method public androidx.compose.ui.graphics.Brush getBorderFocused();
    method public androidx.compose.ui.graphics.Brush getBorderHovered();
    method public androidx.compose.ui.graphics.Brush getBorderPressed();
    property public androidx.compose.ui.graphics.Brush background;
    property public androidx.compose.ui.graphics.Brush backgroundDisabled;
    property public androidx.compose.ui.graphics.Brush backgroundFocused;
    property public androidx.compose.ui.graphics.Brush backgroundHovered;
    property public androidx.compose.ui.graphics.Brush backgroundPressed;
    property public androidx.compose.ui.graphics.Brush border;
    property public androidx.compose.ui.graphics.Brush borderDisabled;
    property public androidx.compose.ui.graphics.Brush borderFocused;
    property public androidx.compose.ui.graphics.Brush borderHovered;
    property public androidx.compose.ui.graphics.Brush borderPressed;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentFocused;
    property public androidx.compose.ui.graphics.Color contentHovered;
    property public androidx.compose.ui.graphics.Color contentPressed;
    field public static final org.jetbrains.jewel.ui.component.styling.ButtonColors.Companion Companion;
  }

  public static final class ButtonColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ButtonMetrics {
    ctor @KotlinOnly public ButtonMetrics(androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.foundation.layout.PaddingValues padding, androidx.compose.ui.unit.DpSize minSize, androidx.compose.ui.unit.Dp borderWidth, androidx.compose.ui.unit.Dp focusOutlineExpand);
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    method public androidx.compose.foundation.layout.PaddingValues getPadding();
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public androidx.compose.ui.unit.Dp focusOutlineExpand;
    property public androidx.compose.ui.unit.DpSize minSize;
    property public androidx.compose.foundation.layout.PaddingValues padding;
    field public static final org.jetbrains.jewel.ui.component.styling.ButtonMetrics.Companion Companion;
  }

  public static final class ButtonMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ButtonStyle {
    ctor public ButtonStyle(org.jetbrains.jewel.ui.component.styling.ButtonColors colors, org.jetbrains.jewel.ui.component.styling.ButtonMetrics metrics, org.jetbrains.jewel.foundation.Stroke.Alignment focusOutlineAlignment);
    method public org.jetbrains.jewel.ui.component.styling.ButtonColors getColors();
    method public org.jetbrains.jewel.foundation.Stroke.Alignment getFocusOutlineAlignment();
    method public org.jetbrains.jewel.ui.component.styling.ButtonMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.ButtonColors colors;
    property public org.jetbrains.jewel.foundation.Stroke.Alignment focusOutlineAlignment;
    property public org.jetbrains.jewel.ui.component.styling.ButtonMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.ButtonStyle.Companion Companion;
  }

  public static final class ButtonStyle.Companion {
  }

  public final class ButtonStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ButtonStyle> getLocalDefaultButtonStyle();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ButtonStyle> getLocalOutlinedButtonStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ButtonStyle> LocalDefaultButtonStyle;
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ButtonStyle> LocalOutlinedButtonStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class CheckboxColors {
    ctor @KotlinOnly public CheckboxColors(androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentSelected);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentSelected;
    field public static final org.jetbrains.jewel.ui.component.styling.CheckboxColors.Companion Companion;
  }

  public static final class CheckboxColors.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class CheckboxIcons {
    ctor public CheckboxIcons(org.jetbrains.jewel.ui.icon.IconKey checkbox);
    method public org.jetbrains.jewel.ui.icon.IconKey getCheckbox();
    property public org.jetbrains.jewel.ui.icon.IconKey checkbox;
    field public static final org.jetbrains.jewel.ui.component.styling.CheckboxIcons.Companion Companion;
  }

  public static final class CheckboxIcons.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class CheckboxMetrics {
    ctor @KotlinOnly public CheckboxMetrics(androidx.compose.ui.unit.DpSize checkboxSize, androidx.compose.foundation.shape.CornerSize outlineCornerSize, androidx.compose.foundation.shape.CornerSize outlineFocusedCornerSize, androidx.compose.foundation.shape.CornerSize outlineSelectedCornerSize, androidx.compose.foundation.shape.CornerSize outlineSelectedFocusedCornerSize, androidx.compose.ui.unit.DpSize outlineSize, androidx.compose.ui.unit.DpSize outlineFocusedSize, androidx.compose.ui.unit.DpSize outlineSelectedSize, androidx.compose.ui.unit.DpSize outlineSelectedFocusedSize, androidx.compose.ui.unit.Dp iconContentGap);
    method public androidx.compose.foundation.shape.CornerSize getOutlineCornerSize();
    method public androidx.compose.foundation.shape.CornerSize getOutlineFocusedCornerSize();
    method public androidx.compose.foundation.shape.CornerSize getOutlineSelectedCornerSize();
    method public androidx.compose.foundation.shape.CornerSize getOutlineSelectedFocusedCornerSize();
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.foundation.shape.CornerSize> outlineCornerSizeFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.unit.DpSize> outlineSizeFor(long state);
    property public androidx.compose.ui.unit.DpSize checkboxSize;
    property public androidx.compose.ui.unit.Dp iconContentGap;
    property public androidx.compose.foundation.shape.CornerSize outlineCornerSize;
    property public androidx.compose.foundation.shape.CornerSize outlineFocusedCornerSize;
    property public androidx.compose.ui.unit.DpSize outlineFocusedSize;
    property public androidx.compose.foundation.shape.CornerSize outlineSelectedCornerSize;
    property public androidx.compose.foundation.shape.CornerSize outlineSelectedFocusedCornerSize;
    property public androidx.compose.ui.unit.DpSize outlineSelectedFocusedSize;
    property public androidx.compose.ui.unit.DpSize outlineSelectedSize;
    property public androidx.compose.ui.unit.DpSize outlineSize;
    field public static final org.jetbrains.jewel.ui.component.styling.CheckboxMetrics.Companion Companion;
  }

  public static final class CheckboxMetrics.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class CheckboxStyle {
    ctor public CheckboxStyle(org.jetbrains.jewel.ui.component.styling.CheckboxColors colors, org.jetbrains.jewel.ui.component.styling.CheckboxMetrics metrics, org.jetbrains.jewel.ui.component.styling.CheckboxIcons icons);
    method public org.jetbrains.jewel.ui.component.styling.CheckboxColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.CheckboxIcons getIcons();
    method public org.jetbrains.jewel.ui.component.styling.CheckboxMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.CheckboxColors colors;
    property public org.jetbrains.jewel.ui.component.styling.CheckboxIcons icons;
    property public org.jetbrains.jewel.ui.component.styling.CheckboxMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.CheckboxStyle.Companion Companion;
  }

  public static final class CheckboxStyle.Companion {
  }

  public final class CheckboxStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.CheckboxStyle> getLocalCheckboxStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.CheckboxStyle> LocalCheckboxStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ChipColors {
    ctor @KotlinOnly public ChipColors(androidx.compose.ui.graphics.Brush background, androidx.compose.ui.graphics.Brush backgroundDisabled, androidx.compose.ui.graphics.Brush backgroundFocused, androidx.compose.ui.graphics.Brush backgroundPressed, androidx.compose.ui.graphics.Brush backgroundHovered, androidx.compose.ui.graphics.Brush backgroundSelected, androidx.compose.ui.graphics.Brush backgroundSelectedDisabled, androidx.compose.ui.graphics.Brush backgroundSelectedPressed, androidx.compose.ui.graphics.Brush backgroundSelectedFocused, androidx.compose.ui.graphics.Brush backgroundSelectedHovered, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentFocused, androidx.compose.ui.graphics.Color contentPressed, androidx.compose.ui.graphics.Color contentHovered, androidx.compose.ui.graphics.Color contentSelected, androidx.compose.ui.graphics.Color contentSelectedDisabled, androidx.compose.ui.graphics.Color contentSelectedPressed, androidx.compose.ui.graphics.Color contentSelectedFocused, androidx.compose.ui.graphics.Color contentSelectedHovered, androidx.compose.ui.graphics.Color border, androidx.compose.ui.graphics.Color borderDisabled, androidx.compose.ui.graphics.Color borderFocused, androidx.compose.ui.graphics.Color borderPressed, androidx.compose.ui.graphics.Color borderHovered, androidx.compose.ui.graphics.Color borderSelected, androidx.compose.ui.graphics.Color borderSelectedDisabled, androidx.compose.ui.graphics.Color borderSelectedPressed, androidx.compose.ui.graphics.Color borderSelectedFocused, androidx.compose.ui.graphics.Color borderSelectedHovered);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Brush> backgroundFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> borderFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    method public androidx.compose.ui.graphics.Brush getBackground();
    method public androidx.compose.ui.graphics.Brush getBackgroundDisabled();
    method public androidx.compose.ui.graphics.Brush getBackgroundFocused();
    method public androidx.compose.ui.graphics.Brush getBackgroundHovered();
    method public androidx.compose.ui.graphics.Brush getBackgroundPressed();
    method public androidx.compose.ui.graphics.Brush getBackgroundSelected();
    method public androidx.compose.ui.graphics.Brush getBackgroundSelectedDisabled();
    method public androidx.compose.ui.graphics.Brush getBackgroundSelectedFocused();
    method public androidx.compose.ui.graphics.Brush getBackgroundSelectedHovered();
    method public androidx.compose.ui.graphics.Brush getBackgroundSelectedPressed();
    property public androidx.compose.ui.graphics.Brush background;
    property public androidx.compose.ui.graphics.Brush backgroundDisabled;
    property public androidx.compose.ui.graphics.Brush backgroundFocused;
    property public androidx.compose.ui.graphics.Brush backgroundHovered;
    property public androidx.compose.ui.graphics.Brush backgroundPressed;
    property public androidx.compose.ui.graphics.Brush backgroundSelected;
    property public androidx.compose.ui.graphics.Brush backgroundSelectedDisabled;
    property public androidx.compose.ui.graphics.Brush backgroundSelectedFocused;
    property public androidx.compose.ui.graphics.Brush backgroundSelectedHovered;
    property public androidx.compose.ui.graphics.Brush backgroundSelectedPressed;
    property public androidx.compose.ui.graphics.Color border;
    property public androidx.compose.ui.graphics.Color borderDisabled;
    property public androidx.compose.ui.graphics.Color borderFocused;
    property public androidx.compose.ui.graphics.Color borderHovered;
    property public androidx.compose.ui.graphics.Color borderPressed;
    property public androidx.compose.ui.graphics.Color borderSelected;
    property public androidx.compose.ui.graphics.Color borderSelectedDisabled;
    property public androidx.compose.ui.graphics.Color borderSelectedFocused;
    property public androidx.compose.ui.graphics.Color borderSelectedHovered;
    property public androidx.compose.ui.graphics.Color borderSelectedPressed;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentFocused;
    property public androidx.compose.ui.graphics.Color contentHovered;
    property public androidx.compose.ui.graphics.Color contentPressed;
    property public androidx.compose.ui.graphics.Color contentSelected;
    property public androidx.compose.ui.graphics.Color contentSelectedDisabled;
    property public androidx.compose.ui.graphics.Color contentSelectedFocused;
    property public androidx.compose.ui.graphics.Color contentSelectedHovered;
    property public androidx.compose.ui.graphics.Color contentSelectedPressed;
    field public static final org.jetbrains.jewel.ui.component.styling.ChipColors.Companion Companion;
  }

  public static final class ChipColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ChipMetrics {
    ctor @KotlinOnly public ChipMetrics(androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.foundation.layout.PaddingValues padding, androidx.compose.ui.unit.Dp borderWidth, androidx.compose.ui.unit.Dp borderWidthSelected);
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    method public androidx.compose.foundation.layout.PaddingValues getPadding();
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.ui.unit.Dp borderWidthSelected;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public androidx.compose.foundation.layout.PaddingValues padding;
    field public static final org.jetbrains.jewel.ui.component.styling.ChipMetrics.Companion Companion;
  }

  public static final class ChipMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ChipStyle {
    ctor public ChipStyle(org.jetbrains.jewel.ui.component.styling.ChipColors colors, org.jetbrains.jewel.ui.component.styling.ChipMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.ChipColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.ChipMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.ChipColors colors;
    property public org.jetbrains.jewel.ui.component.styling.ChipMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.ChipStyle.Companion Companion;
  }

  public static final class ChipStyle.Companion {
  }

  public final class ChipStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ChipStyle> getLocalChipStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ChipStyle> LocalChipStyle;
  }

  @androidx.compose.runtime.Immutable public final class CircularProgressStyle {
    ctor @KotlinOnly public CircularProgressStyle(kotlin.time.Duration frameTime, androidx.compose.ui.graphics.Color color);
    property public androidx.compose.ui.graphics.Color color;
    property public kotlin.time.Duration frameTime;
    field public static final org.jetbrains.jewel.ui.component.styling.CircularProgressStyle.Companion Companion;
  }

  public static final class CircularProgressStyle.Companion {
  }

  public final class CircularProgressStyleKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.CircularProgressStyle> getLocalCircularProgressStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.CircularProgressStyle> LocalCircularProgressStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ComboBoxColors {
    ctor @KotlinOnly public ComboBoxColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color nonEditableBackground, androidx.compose.ui.graphics.Color backgroundDisabled, androidx.compose.ui.graphics.Color backgroundFocused, androidx.compose.ui.graphics.Color backgroundPressed, androidx.compose.ui.graphics.Color backgroundHovered, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentFocused, androidx.compose.ui.graphics.Color contentPressed, androidx.compose.ui.graphics.Color contentHovered, androidx.compose.ui.graphics.Color border, androidx.compose.ui.graphics.Color borderDisabled, androidx.compose.ui.graphics.Color borderFocused, androidx.compose.ui.graphics.Color borderPressed, androidx.compose.ui.graphics.Color borderHovered);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> backgroundFor(long state, boolean isEditable);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> borderFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color backgroundDisabled;
    property public androidx.compose.ui.graphics.Color backgroundFocused;
    property public androidx.compose.ui.graphics.Color backgroundHovered;
    property public androidx.compose.ui.graphics.Color backgroundPressed;
    property public androidx.compose.ui.graphics.Color border;
    property public androidx.compose.ui.graphics.Color borderDisabled;
    property public androidx.compose.ui.graphics.Color borderFocused;
    property public androidx.compose.ui.graphics.Color borderHovered;
    property public androidx.compose.ui.graphics.Color borderPressed;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentFocused;
    property public androidx.compose.ui.graphics.Color contentHovered;
    property public androidx.compose.ui.graphics.Color contentPressed;
    property public androidx.compose.ui.graphics.Color nonEditableBackground;
    field public static final org.jetbrains.jewel.ui.component.styling.ComboBoxColors.Companion Companion;
  }

  public static final class ComboBoxColors.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ComboBoxIcons {
    ctor public ComboBoxIcons(org.jetbrains.jewel.ui.icon.IconKey chevronDown);
    method public org.jetbrains.jewel.ui.icon.IconKey getChevronDown();
    property public org.jetbrains.jewel.ui.icon.IconKey chevronDown;
    field public static final org.jetbrains.jewel.ui.component.styling.ComboBoxIcons.Companion Companion;
  }

  public static final class ComboBoxIcons.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ComboBoxMetrics {
    ctor @KotlinOnly public ComboBoxMetrics(androidx.compose.ui.unit.DpSize arrowAreaSize, androidx.compose.ui.unit.DpSize minSize, androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.foundation.layout.PaddingValues contentPadding, androidx.compose.foundation.layout.PaddingValues popupContentPadding, androidx.compose.ui.unit.Dp borderWidth, androidx.compose.ui.unit.Dp maxPopupHeight);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    method public androidx.compose.foundation.layout.PaddingValues getPopupContentPadding();
    property public androidx.compose.ui.unit.DpSize arrowAreaSize;
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public androidx.compose.ui.unit.Dp maxPopupHeight;
    property public androidx.compose.ui.unit.DpSize minSize;
    property public androidx.compose.foundation.layout.PaddingValues popupContentPadding;
    field public static final org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics.Companion Companion;
  }

  public static final class ComboBoxMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ComboBoxStyle {
    ctor public ComboBoxStyle(org.jetbrains.jewel.ui.component.styling.ComboBoxColors colors, org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics metrics, org.jetbrains.jewel.ui.component.styling.ComboBoxIcons icons);
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxIcons getIcons();
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.ComboBoxColors colors;
    property public org.jetbrains.jewel.ui.component.styling.ComboBoxIcons icons;
    property public org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.ComboBoxStyle.Companion Companion;
  }

  public static final class ComboBoxStyle.Companion {
  }

  public final class ComboBoxStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ComboBoxStyle> getLocalDefaultComboBoxStyle();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ComboBoxStyle> getLocalUndecoratedComboBoxStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ComboBoxStyle> LocalDefaultComboBoxStyle;
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ComboBoxStyle> LocalUndecoratedComboBoxStyle;
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class DefaultBannerStyle {
    ctor public DefaultBannerStyle(org.jetbrains.jewel.ui.component.styling.BannerColors colors, org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.BannerColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.BannerMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.BannerColors colors;
    property public org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle.Companion Companion;
  }

  public static final class DefaultBannerStyle.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class DefaultBannerStyles {
    ctor public DefaultBannerStyles(org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle information, org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle success, org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle warning, org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle error);
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle getError();
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle getInformation();
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle getSuccess();
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle getWarning();
    property public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle error;
    property public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle information;
    property public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle success;
    property public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle warning;
    field public static final org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles.Companion Companion;
  }

  public static final class DefaultBannerStyles.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class DividerMetrics {
    ctor @KotlinOnly public DividerMetrics(androidx.compose.ui.unit.Dp thickness, androidx.compose.ui.unit.Dp startIndent);
    property public androidx.compose.ui.unit.Dp startIndent;
    property public androidx.compose.ui.unit.Dp thickness;
    field public static final org.jetbrains.jewel.ui.component.styling.DividerMetrics.Companion Companion;
  }

  public static final class DividerMetrics.Companion {
    method public org.jetbrains.jewel.ui.component.styling.DividerMetrics defaults(optional float thickness, optional float startIndent);
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class DividerStyle {
    ctor @KotlinOnly public DividerStyle(androidx.compose.ui.graphics.Color color, org.jetbrains.jewel.ui.component.styling.DividerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.DividerMetrics getMetrics();
    property public androidx.compose.ui.graphics.Color color;
    property public org.jetbrains.jewel.ui.component.styling.DividerMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.DividerStyle.Companion Companion;
  }

  public static final class DividerStyle.Companion {
  }

  public final class DividerStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.DividerStyle> getLocalDividerStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.DividerStyle> LocalDividerStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class DropdownColors {
    ctor @KotlinOnly public DropdownColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color backgroundDisabled, androidx.compose.ui.graphics.Color backgroundFocused, androidx.compose.ui.graphics.Color backgroundPressed, androidx.compose.ui.graphics.Color backgroundHovered, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentFocused, androidx.compose.ui.graphics.Color contentPressed, androidx.compose.ui.graphics.Color contentHovered, androidx.compose.ui.graphics.Color border, androidx.compose.ui.graphics.Color borderDisabled, androidx.compose.ui.graphics.Color borderFocused, androidx.compose.ui.graphics.Color borderPressed, androidx.compose.ui.graphics.Color borderHovered, androidx.compose.ui.graphics.Color iconTint, androidx.compose.ui.graphics.Color iconTintDisabled, androidx.compose.ui.graphics.Color iconTintFocused, androidx.compose.ui.graphics.Color iconTintPressed, androidx.compose.ui.graphics.Color iconTintHovered);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> backgroundFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> borderFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> iconTintFor(long state);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color backgroundDisabled;
    property public androidx.compose.ui.graphics.Color backgroundFocused;
    property public androidx.compose.ui.graphics.Color backgroundHovered;
    property public androidx.compose.ui.graphics.Color backgroundPressed;
    property public androidx.compose.ui.graphics.Color border;
    property public androidx.compose.ui.graphics.Color borderDisabled;
    property public androidx.compose.ui.graphics.Color borderFocused;
    property public androidx.compose.ui.graphics.Color borderHovered;
    property public androidx.compose.ui.graphics.Color borderPressed;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentFocused;
    property public androidx.compose.ui.graphics.Color contentHovered;
    property public androidx.compose.ui.graphics.Color contentPressed;
    property public androidx.compose.ui.graphics.Color iconTint;
    property public androidx.compose.ui.graphics.Color iconTintDisabled;
    property public androidx.compose.ui.graphics.Color iconTintFocused;
    property public androidx.compose.ui.graphics.Color iconTintHovered;
    property public androidx.compose.ui.graphics.Color iconTintPressed;
    field public static final org.jetbrains.jewel.ui.component.styling.DropdownColors.Companion Companion;
  }

  public static final class DropdownColors.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class DropdownIcons {
    ctor public DropdownIcons(org.jetbrains.jewel.ui.icon.IconKey chevronDown);
    method public org.jetbrains.jewel.ui.icon.IconKey getChevronDown();
    property public org.jetbrains.jewel.ui.icon.IconKey chevronDown;
    field public static final org.jetbrains.jewel.ui.component.styling.DropdownIcons.Companion Companion;
  }

  public static final class DropdownIcons.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class DropdownMetrics {
    ctor @KotlinOnly public DropdownMetrics(androidx.compose.ui.unit.DpSize arrowMinSize, androidx.compose.ui.unit.DpSize minSize, androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.foundation.layout.PaddingValues contentPadding, androidx.compose.ui.unit.Dp borderWidth);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    property public androidx.compose.ui.unit.DpSize arrowMinSize;
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public androidx.compose.ui.unit.DpSize minSize;
    field public static final org.jetbrains.jewel.ui.component.styling.DropdownMetrics.Companion Companion;
  }

  public static final class DropdownMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class DropdownStyle {
    ctor public DropdownStyle(org.jetbrains.jewel.ui.component.styling.DropdownColors colors, org.jetbrains.jewel.ui.component.styling.DropdownMetrics metrics, org.jetbrains.jewel.ui.component.styling.DropdownIcons icons, org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle);
    method public org.jetbrains.jewel.ui.component.styling.DropdownColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.DropdownIcons getIcons();
    method public org.jetbrains.jewel.ui.component.styling.MenuStyle getMenuStyle();
    method public org.jetbrains.jewel.ui.component.styling.DropdownMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.DropdownColors colors;
    property public org.jetbrains.jewel.ui.component.styling.DropdownIcons icons;
    property public org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle;
    property public org.jetbrains.jewel.ui.component.styling.DropdownMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.DropdownStyle.Companion Companion;
  }

  public static final class DropdownStyle.Companion {
  }

  public final class DropdownStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.DropdownStyle> getLocalDefaultDropdownStyle();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.DropdownStyle> getLocalUndecoratedDropdownStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.DropdownStyle> LocalDefaultDropdownStyle;
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.DropdownStyle> LocalUndecoratedDropdownStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class GroupHeaderColors {
    ctor @KotlinOnly public GroupHeaderColors(androidx.compose.ui.graphics.Color divider);
    property public androidx.compose.ui.graphics.Color divider;
    field public static final org.jetbrains.jewel.ui.component.styling.GroupHeaderColors.Companion Companion;
  }

  public static final class GroupHeaderColors.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class GroupHeaderMetrics {
    ctor @KotlinOnly public GroupHeaderMetrics(androidx.compose.ui.unit.Dp dividerThickness, androidx.compose.ui.unit.Dp indent);
    property public androidx.compose.ui.unit.Dp dividerThickness;
    property public androidx.compose.ui.unit.Dp indent;
    field public static final org.jetbrains.jewel.ui.component.styling.GroupHeaderMetrics.Companion Companion;
  }

  public static final class GroupHeaderMetrics.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class GroupHeaderStyle {
    ctor public GroupHeaderStyle(org.jetbrains.jewel.ui.component.styling.GroupHeaderColors colors, org.jetbrains.jewel.ui.component.styling.GroupHeaderMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.GroupHeaderColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.GroupHeaderMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.GroupHeaderColors colors;
    property public org.jetbrains.jewel.ui.component.styling.GroupHeaderMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle.Companion Companion;
  }

  public static final class GroupHeaderStyle.Companion {
  }

  public final class GroupHeaderStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle> getLocalGroupHeaderStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle> LocalGroupHeaderStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class HorizontalProgressBarColors {
    ctor @KotlinOnly public HorizontalProgressBarColors(androidx.compose.ui.graphics.Color track, androidx.compose.ui.graphics.Color progress, androidx.compose.ui.graphics.Color indeterminateBase, androidx.compose.ui.graphics.Color indeterminateHighlight);
    property public androidx.compose.ui.graphics.Color indeterminateBase;
    property public androidx.compose.ui.graphics.Color indeterminateHighlight;
    property public androidx.compose.ui.graphics.Color progress;
    property public androidx.compose.ui.graphics.Color track;
    field public static final org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarColors.Companion Companion;
  }

  public static final class HorizontalProgressBarColors.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class HorizontalProgressBarMetrics {
    ctor @KotlinOnly public HorizontalProgressBarMetrics(androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.ui.unit.Dp minHeight, androidx.compose.ui.unit.Dp indeterminateHighlightWidth);
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public androidx.compose.ui.unit.Dp indeterminateHighlightWidth;
    property public androidx.compose.ui.unit.Dp minHeight;
    field public static final org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarMetrics.Companion Companion;
  }

  public static final class HorizontalProgressBarMetrics.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class HorizontalProgressBarStyle {
    ctor @KotlinOnly public HorizontalProgressBarStyle(org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarColors colors, org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarMetrics metrics, kotlin.time.Duration indeterminateCycleDuration);
    method public org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarColors colors;
    property public kotlin.time.Duration indeterminateCycleDuration;
    property public org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle.Companion Companion;
  }

  public static final class HorizontalProgressBarStyle.Companion {
  }

  public final class HorizontalProgressBarStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle> getLocalHorizontalProgressBarStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle> LocalHorizontalProgressBarStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class IconButtonColors {
    ctor @KotlinOnly public IconButtonColors(androidx.compose.ui.graphics.Color foregroundSelectedActivated, androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color backgroundDisabled, androidx.compose.ui.graphics.Color backgroundSelected, androidx.compose.ui.graphics.Color backgroundSelectedActivated, androidx.compose.ui.graphics.Color backgroundFocused, androidx.compose.ui.graphics.Color backgroundPressed, androidx.compose.ui.graphics.Color backgroundHovered, androidx.compose.ui.graphics.Color border, androidx.compose.ui.graphics.Color borderDisabled, androidx.compose.ui.graphics.Color borderSelected, androidx.compose.ui.graphics.Color borderSelectedActivated, androidx.compose.ui.graphics.Color borderFocused, androidx.compose.ui.graphics.Color borderPressed, androidx.compose.ui.graphics.Color borderHovered);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> backgroundFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> borderFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> selectableBackgroundFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> selectableBorderFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> selectableForegroundFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> toggleableBackgroundFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> toggleableBorderFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> toggleableForegroundFor(long state);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color backgroundDisabled;
    property public androidx.compose.ui.graphics.Color backgroundFocused;
    property public androidx.compose.ui.graphics.Color backgroundHovered;
    property public androidx.compose.ui.graphics.Color backgroundPressed;
    property public androidx.compose.ui.graphics.Color backgroundSelected;
    property public androidx.compose.ui.graphics.Color backgroundSelectedActivated;
    property public androidx.compose.ui.graphics.Color border;
    property public androidx.compose.ui.graphics.Color borderDisabled;
    property public androidx.compose.ui.graphics.Color borderFocused;
    property public androidx.compose.ui.graphics.Color borderHovered;
    property public androidx.compose.ui.graphics.Color borderPressed;
    property public androidx.compose.ui.graphics.Color borderSelected;
    property public androidx.compose.ui.graphics.Color borderSelectedActivated;
    property public androidx.compose.ui.graphics.Color foregroundSelectedActivated;
    field public static final org.jetbrains.jewel.ui.component.styling.IconButtonColors.Companion Companion;
  }

  public static final class IconButtonColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class IconButtonMetrics {
    ctor @KotlinOnly public IconButtonMetrics(androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.ui.unit.Dp borderWidth, androidx.compose.foundation.layout.PaddingValues padding, androidx.compose.ui.unit.DpSize minSize);
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    method public androidx.compose.foundation.layout.PaddingValues getPadding();
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public androidx.compose.ui.unit.DpSize minSize;
    property public androidx.compose.foundation.layout.PaddingValues padding;
    field public static final org.jetbrains.jewel.ui.component.styling.IconButtonMetrics.Companion Companion;
  }

  public static final class IconButtonMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class IconButtonStyle {
    ctor public IconButtonStyle(org.jetbrains.jewel.ui.component.styling.IconButtonColors colors, org.jetbrains.jewel.ui.component.styling.IconButtonMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.IconButtonColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.IconButtonMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.IconButtonColors colors;
    property public org.jetbrains.jewel.ui.component.styling.IconButtonMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.IconButtonStyle.Companion Companion;
  }

  public static final class IconButtonStyle.Companion {
  }

  public final class IconButtonStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.IconButtonStyle> getLocalIconButtonStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.IconButtonStyle> LocalIconButtonStyle;
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class InlineBannerStyle {
    ctor public InlineBannerStyle(org.jetbrains.jewel.ui.component.styling.BannerColors colors, org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.BannerColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.BannerMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.BannerColors colors;
    property public org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.InlineBannerStyle.Companion Companion;
  }

  public static final class InlineBannerStyle.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class InlineBannerStyles {
    ctor public InlineBannerStyles(org.jetbrains.jewel.ui.component.styling.InlineBannerStyle information, org.jetbrains.jewel.ui.component.styling.InlineBannerStyle success, org.jetbrains.jewel.ui.component.styling.InlineBannerStyle warning, org.jetbrains.jewel.ui.component.styling.InlineBannerStyle error);
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle getError();
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle getInformation();
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle getSuccess();
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle getWarning();
    property public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle error;
    property public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle information;
    property public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle success;
    property public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle warning;
    field public static final org.jetbrains.jewel.ui.component.styling.InlineBannerStyles.Companion Companion;
  }

  public static final class InlineBannerStyles.Companion {
  }

  @androidx.compose.runtime.Immutable public interface InputFieldColors {
    method @androidx.compose.runtime.Composable public default androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> backgroundFor(long state);
    method @androidx.compose.runtime.Composable public default androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> borderFor(long state);
    method @androidx.compose.runtime.Composable public default androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> caretFor(long state);
    method @androidx.compose.runtime.Composable public default androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    property public abstract androidx.compose.ui.graphics.Color background;
    property public abstract androidx.compose.ui.graphics.Color backgroundDisabled;
    property public abstract androidx.compose.ui.graphics.Color backgroundFocused;
    property public abstract androidx.compose.ui.graphics.Color backgroundHovered;
    property public abstract androidx.compose.ui.graphics.Color backgroundPressed;
    property public abstract androidx.compose.ui.graphics.Color border;
    property public abstract androidx.compose.ui.graphics.Color borderDisabled;
    property public abstract androidx.compose.ui.graphics.Color borderFocused;
    property public abstract androidx.compose.ui.graphics.Color borderHovered;
    property public abstract androidx.compose.ui.graphics.Color borderPressed;
    property public abstract androidx.compose.ui.graphics.Color caret;
    property public abstract androidx.compose.ui.graphics.Color caretDisabled;
    property public abstract androidx.compose.ui.graphics.Color caretFocused;
    property public abstract androidx.compose.ui.graphics.Color caretHovered;
    property public abstract androidx.compose.ui.graphics.Color caretPressed;
    property public abstract androidx.compose.ui.graphics.Color content;
    property public abstract androidx.compose.ui.graphics.Color contentDisabled;
    property public abstract androidx.compose.ui.graphics.Color contentFocused;
    property public abstract androidx.compose.ui.graphics.Color contentHovered;
    property public abstract androidx.compose.ui.graphics.Color contentPressed;
  }

  @androidx.compose.runtime.Stable public interface InputFieldMetrics {
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    property public abstract androidx.compose.ui.unit.Dp borderWidth;
    property public abstract androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public abstract androidx.compose.foundation.shape.CornerSize cornerSize;
    property public abstract androidx.compose.ui.unit.DpSize minSize;
  }

  @androidx.compose.runtime.Stable public interface InputFieldStyle {
    method public org.jetbrains.jewel.ui.component.styling.InputFieldColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.InputFieldMetrics getMetrics();
    property public abstract org.jetbrains.jewel.ui.component.styling.InputFieldColors colors;
    property public abstract org.jetbrains.jewel.ui.component.styling.InputFieldMetrics metrics;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class LazyTreeIcons {
    ctor public LazyTreeIcons(org.jetbrains.jewel.ui.icon.IconKey chevronCollapsed, org.jetbrains.jewel.ui.icon.IconKey chevronExpanded, org.jetbrains.jewel.ui.icon.IconKey chevronSelectedCollapsed, org.jetbrains.jewel.ui.icon.IconKey chevronSelectedExpanded);
    method @androidx.compose.runtime.Composable public org.jetbrains.jewel.ui.icon.IconKey chevron(boolean isExpanded, boolean isSelected);
    method public org.jetbrains.jewel.ui.icon.IconKey getChevronCollapsed();
    method public org.jetbrains.jewel.ui.icon.IconKey getChevronExpanded();
    method public org.jetbrains.jewel.ui.icon.IconKey getChevronSelectedCollapsed();
    method public org.jetbrains.jewel.ui.icon.IconKey getChevronSelectedExpanded();
    property public org.jetbrains.jewel.ui.icon.IconKey chevronCollapsed;
    property public org.jetbrains.jewel.ui.icon.IconKey chevronExpanded;
    property public org.jetbrains.jewel.ui.icon.IconKey chevronSelectedCollapsed;
    property public org.jetbrains.jewel.ui.icon.IconKey chevronSelectedExpanded;
    field public static final org.jetbrains.jewel.ui.component.styling.LazyTreeIcons.Companion Companion;
  }

  public static final class LazyTreeIcons.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class LazyTreeMetrics {
    ctor @KotlinOnly public LazyTreeMetrics(androidx.compose.ui.unit.Dp indentSize, androidx.compose.ui.unit.Dp elementMinHeight, androidx.compose.ui.unit.Dp chevronContentGap, org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics simpleListItemMetrics);
    method public org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics getSimpleListItemMetrics();
    property public androidx.compose.ui.unit.Dp chevronContentGap;
    property public androidx.compose.ui.unit.Dp elementMinHeight;
    property public androidx.compose.ui.unit.Dp indentSize;
    property public org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics simpleListItemMetrics;
    field public static final org.jetbrains.jewel.ui.component.styling.LazyTreeMetrics.Companion Companion;
  }

  public static final class LazyTreeMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class LazyTreeStyle {
    ctor public LazyTreeStyle(org.jetbrains.jewel.ui.component.styling.SimpleListItemColors colors, org.jetbrains.jewel.ui.component.styling.LazyTreeMetrics metrics, org.jetbrains.jewel.ui.component.styling.LazyTreeIcons icons);
    method public org.jetbrains.jewel.ui.component.styling.SimpleListItemColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.LazyTreeIcons getIcons();
    method public org.jetbrains.jewel.ui.component.styling.LazyTreeMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.SimpleListItemColors colors;
    property public org.jetbrains.jewel.ui.component.styling.LazyTreeIcons icons;
    property public org.jetbrains.jewel.ui.component.styling.LazyTreeMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.LazyTreeStyle.Companion Companion;
  }

  public static final class LazyTreeStyle.Companion {
  }

  public final class LazyTreeStylingKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(org.jetbrains.jewel.ui.component.styling.SimpleListItemColors, long state);
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.LazyTreeStyle> getLocalLazyTreeStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.LazyTreeStyle> LocalLazyTreeStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class LinkColors {
    ctor @KotlinOnly public LinkColors(androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentFocused, androidx.compose.ui.graphics.Color contentPressed, androidx.compose.ui.graphics.Color contentHovered, androidx.compose.ui.graphics.Color contentVisited);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentFocused;
    property public androidx.compose.ui.graphics.Color contentHovered;
    property public androidx.compose.ui.graphics.Color contentPressed;
    property public androidx.compose.ui.graphics.Color contentVisited;
    field public static final org.jetbrains.jewel.ui.component.styling.LinkColors.Companion Companion;
  }

  public static final class LinkColors.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class LinkIcons {
    ctor public LinkIcons(org.jetbrains.jewel.ui.icon.IconKey dropdownChevron, org.jetbrains.jewel.ui.icon.IconKey externalLink);
    method public org.jetbrains.jewel.ui.icon.IconKey getDropdownChevron();
    method public org.jetbrains.jewel.ui.icon.IconKey getExternalLink();
    property public org.jetbrains.jewel.ui.icon.IconKey dropdownChevron;
    property public org.jetbrains.jewel.ui.icon.IconKey externalLink;
    field public static final org.jetbrains.jewel.ui.component.styling.LinkIcons.Companion Companion;
  }

  public static final class LinkIcons.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class LinkMetrics {
    ctor @KotlinOnly public LinkMetrics(androidx.compose.foundation.shape.CornerSize focusHaloCornerSize, androidx.compose.ui.unit.Dp textIconGap, androidx.compose.ui.unit.DpSize iconSize);
    method public androidx.compose.foundation.shape.CornerSize getFocusHaloCornerSize();
    property public androidx.compose.foundation.shape.CornerSize focusHaloCornerSize;
    property public androidx.compose.ui.unit.DpSize iconSize;
    property public androidx.compose.ui.unit.Dp textIconGap;
    field public static final org.jetbrains.jewel.ui.component.styling.LinkMetrics.Companion Companion;
  }

  public static final class LinkMetrics.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class LinkStyle {
    ctor public LinkStyle(org.jetbrains.jewel.ui.component.styling.LinkColors colors, org.jetbrains.jewel.ui.component.styling.LinkMetrics metrics, org.jetbrains.jewel.ui.component.styling.LinkIcons icons, org.jetbrains.jewel.ui.component.styling.LinkUnderlineBehavior underlineBehavior);
    method public org.jetbrains.jewel.ui.component.styling.LinkColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.LinkIcons getIcons();
    method public org.jetbrains.jewel.ui.component.styling.LinkMetrics getMetrics();
    method public org.jetbrains.jewel.ui.component.styling.LinkUnderlineBehavior getUnderlineBehavior();
    property public org.jetbrains.jewel.ui.component.styling.LinkColors colors;
    property public org.jetbrains.jewel.ui.component.styling.LinkIcons icons;
    property public org.jetbrains.jewel.ui.component.styling.LinkMetrics metrics;
    property public org.jetbrains.jewel.ui.component.styling.LinkUnderlineBehavior underlineBehavior;
    field public static final org.jetbrains.jewel.ui.component.styling.LinkStyle.Companion Companion;
  }

  public static final class LinkStyle.Companion {
  }

  public final class LinkStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.LinkStyle> getLocalLinkStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.LinkStyle> LocalLinkStyle;
  }

  public enum LinkUnderlineBehavior {
    enum_constant public static final org.jetbrains.jewel.ui.component.styling.LinkUnderlineBehavior ShowAlways;
    enum_constant public static final org.jetbrains.jewel.ui.component.styling.LinkUnderlineBehavior ShowOnHover;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class MenuColors {
    ctor @KotlinOnly public MenuColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color border, androidx.compose.ui.graphics.Color shadow, org.jetbrains.jewel.ui.component.styling.MenuItemColors itemColors);
    method public org.jetbrains.jewel.ui.component.styling.MenuItemColors getItemColors();
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color border;
    property public org.jetbrains.jewel.ui.component.styling.MenuItemColors itemColors;
    property public androidx.compose.ui.graphics.Color shadow;
    field public static final org.jetbrains.jewel.ui.component.styling.MenuColors.Companion Companion;
  }

  public static final class MenuColors.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class MenuIcons {
    ctor public MenuIcons(org.jetbrains.jewel.ui.icon.IconKey submenuChevron);
    method public org.jetbrains.jewel.ui.icon.IconKey getSubmenuChevron();
    property public org.jetbrains.jewel.ui.icon.IconKey submenuChevron;
    field public static final org.jetbrains.jewel.ui.component.styling.MenuIcons.Companion Companion;
  }

  public static final class MenuIcons.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class MenuItemColors {
    ctor @KotlinOnly public MenuItemColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color backgroundDisabled, androidx.compose.ui.graphics.Color backgroundFocused, androidx.compose.ui.graphics.Color backgroundPressed, androidx.compose.ui.graphics.Color backgroundHovered, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentFocused, androidx.compose.ui.graphics.Color contentPressed, androidx.compose.ui.graphics.Color contentHovered, androidx.compose.ui.graphics.Color iconTint, androidx.compose.ui.graphics.Color iconTintDisabled, androidx.compose.ui.graphics.Color iconTintFocused, androidx.compose.ui.graphics.Color iconTintPressed, androidx.compose.ui.graphics.Color iconTintHovered, androidx.compose.ui.graphics.Color keybindingTint, androidx.compose.ui.graphics.Color keybindingTintDisabled, androidx.compose.ui.graphics.Color keybindingTintFocused, androidx.compose.ui.graphics.Color keybindingTintPressed, androidx.compose.ui.graphics.Color keybindingTintHovered, androidx.compose.ui.graphics.Color separator);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> backgroundFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> iconTintFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> keybindingTintFor(long state);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color backgroundDisabled;
    property public androidx.compose.ui.graphics.Color backgroundFocused;
    property public androidx.compose.ui.graphics.Color backgroundHovered;
    property public androidx.compose.ui.graphics.Color backgroundPressed;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentFocused;
    property public androidx.compose.ui.graphics.Color contentHovered;
    property public androidx.compose.ui.graphics.Color contentPressed;
    property public androidx.compose.ui.graphics.Color iconTint;
    property public androidx.compose.ui.graphics.Color iconTintDisabled;
    property public androidx.compose.ui.graphics.Color iconTintFocused;
    property public androidx.compose.ui.graphics.Color iconTintHovered;
    property public androidx.compose.ui.graphics.Color iconTintPressed;
    property public androidx.compose.ui.graphics.Color keybindingTint;
    property public androidx.compose.ui.graphics.Color keybindingTintDisabled;
    property public androidx.compose.ui.graphics.Color keybindingTintFocused;
    property public androidx.compose.ui.graphics.Color keybindingTintHovered;
    property public androidx.compose.ui.graphics.Color keybindingTintPressed;
    property public androidx.compose.ui.graphics.Color separator;
    field public static final org.jetbrains.jewel.ui.component.styling.MenuItemColors.Companion Companion;
  }

  public static final class MenuItemColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class MenuItemMetrics {
    ctor @KotlinOnly public MenuItemMetrics(androidx.compose.foundation.shape.CornerSize selectionCornerSize, androidx.compose.foundation.layout.PaddingValues outerPadding, androidx.compose.foundation.layout.PaddingValues contentPadding, androidx.compose.foundation.layout.PaddingValues separatorPadding, androidx.compose.foundation.layout.PaddingValues keybindingsPadding, androidx.compose.ui.unit.Dp separatorThickness, androidx.compose.ui.unit.Dp separatorHeight, androidx.compose.ui.unit.Dp iconSize, androidx.compose.ui.unit.Dp minHeight);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public androidx.compose.foundation.layout.PaddingValues getKeybindingsPadding();
    method public androidx.compose.foundation.layout.PaddingValues getOuterPadding();
    method public androidx.compose.foundation.shape.CornerSize getSelectionCornerSize();
    method public androidx.compose.foundation.layout.PaddingValues getSeparatorPadding();
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.ui.unit.Dp iconSize;
    property public androidx.compose.foundation.layout.PaddingValues keybindingsPadding;
    property public androidx.compose.ui.unit.Dp minHeight;
    property public androidx.compose.foundation.layout.PaddingValues outerPadding;
    property public androidx.compose.foundation.shape.CornerSize selectionCornerSize;
    property public androidx.compose.ui.unit.Dp separatorHeight;
    property public androidx.compose.foundation.layout.PaddingValues separatorPadding;
    property public androidx.compose.ui.unit.Dp separatorThickness;
    field public static final org.jetbrains.jewel.ui.component.styling.MenuItemMetrics.Companion Companion;
  }

  public static final class MenuItemMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class MenuMetrics {
    ctor @KotlinOnly public MenuMetrics(androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.foundation.layout.PaddingValues menuMargin, androidx.compose.foundation.layout.PaddingValues contentPadding, androidx.compose.ui.unit.DpOffset offset, androidx.compose.ui.unit.Dp shadowSize, androidx.compose.ui.unit.Dp borderWidth, org.jetbrains.jewel.ui.component.styling.MenuItemMetrics itemMetrics, org.jetbrains.jewel.ui.component.styling.SubmenuMetrics submenuMetrics);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    method public org.jetbrains.jewel.ui.component.styling.MenuItemMetrics getItemMetrics();
    method public androidx.compose.foundation.layout.PaddingValues getMenuMargin();
    method public org.jetbrains.jewel.ui.component.styling.SubmenuMetrics getSubmenuMetrics();
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public org.jetbrains.jewel.ui.component.styling.MenuItemMetrics itemMetrics;
    property public androidx.compose.foundation.layout.PaddingValues menuMargin;
    property public androidx.compose.ui.unit.DpOffset offset;
    property public androidx.compose.ui.unit.Dp shadowSize;
    property public org.jetbrains.jewel.ui.component.styling.SubmenuMetrics submenuMetrics;
    field public static final org.jetbrains.jewel.ui.component.styling.MenuMetrics.Companion Companion;
  }

  public static final class MenuMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class MenuStyle {
    ctor public MenuStyle(boolean isDark, org.jetbrains.jewel.ui.component.styling.MenuColors colors, org.jetbrains.jewel.ui.component.styling.MenuMetrics metrics, org.jetbrains.jewel.ui.component.styling.MenuIcons icons);
    method public org.jetbrains.jewel.ui.component.styling.MenuColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.MenuIcons getIcons();
    method public org.jetbrains.jewel.ui.component.styling.MenuMetrics getMetrics();
    method public boolean isDark();
    property public org.jetbrains.jewel.ui.component.styling.MenuColors colors;
    property public org.jetbrains.jewel.ui.component.styling.MenuIcons icons;
    property public boolean isDark;
    property public org.jetbrains.jewel.ui.component.styling.MenuMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.MenuStyle.Companion Companion;
  }

  public static final class MenuStyle.Companion {
  }

  public final class MenuStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.MenuStyle> getLocalMenuStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.MenuStyle> LocalMenuStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class PopupContainerColors {
    ctor @KotlinOnly public PopupContainerColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color border, androidx.compose.ui.graphics.Color shadow);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color border;
    property public androidx.compose.ui.graphics.Color shadow;
    field public static final org.jetbrains.jewel.ui.component.styling.PopupContainerColors.Companion Companion;
  }

  public static final class PopupContainerColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class PopupContainerMetrics {
    ctor @KotlinOnly public PopupContainerMetrics(androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.foundation.layout.PaddingValues menuMargin, androidx.compose.foundation.layout.PaddingValues contentPadding, androidx.compose.ui.unit.DpOffset offset, androidx.compose.ui.unit.Dp shadowSize, androidx.compose.ui.unit.Dp borderWidth);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    method public androidx.compose.foundation.layout.PaddingValues getMenuMargin();
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public androidx.compose.foundation.layout.PaddingValues menuMargin;
    property public androidx.compose.ui.unit.DpOffset offset;
    property public androidx.compose.ui.unit.Dp shadowSize;
    field public static final org.jetbrains.jewel.ui.component.styling.PopupContainerMetrics.Companion Companion;
  }

  public static final class PopupContainerMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class PopupContainerStyle {
    ctor public PopupContainerStyle(boolean isDark, org.jetbrains.jewel.ui.component.styling.PopupContainerColors colors, org.jetbrains.jewel.ui.component.styling.PopupContainerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.PopupContainerColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.PopupContainerMetrics getMetrics();
    method public boolean isDark();
    property public org.jetbrains.jewel.ui.component.styling.PopupContainerColors colors;
    property public boolean isDark;
    property public org.jetbrains.jewel.ui.component.styling.PopupContainerMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.PopupContainerStyle.Companion Companion;
  }

  public static final class PopupContainerStyle.Companion {
  }

  public final class PopupContainerStyleKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.PopupContainerStyle> getLocalPopupContainerStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.PopupContainerStyle> LocalPopupContainerStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class RadioButtonColors {
    ctor @KotlinOnly public RadioButtonColors(androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentHovered, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentSelected, androidx.compose.ui.graphics.Color contentSelectedHovered, androidx.compose.ui.graphics.Color contentSelectedDisabled);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentHovered;
    property public androidx.compose.ui.graphics.Color contentSelected;
    property public androidx.compose.ui.graphics.Color contentSelectedDisabled;
    property public androidx.compose.ui.graphics.Color contentSelectedHovered;
    field public static final org.jetbrains.jewel.ui.component.styling.RadioButtonColors.Companion Companion;
  }

  public static final class RadioButtonColors.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class RadioButtonIcons {
    ctor public RadioButtonIcons(org.jetbrains.jewel.ui.icon.IconKey radioButton);
    method public org.jetbrains.jewel.ui.icon.IconKey getRadioButton();
    property public org.jetbrains.jewel.ui.icon.IconKey radioButton;
    field public static final org.jetbrains.jewel.ui.component.styling.RadioButtonIcons.Companion Companion;
  }

  public static final class RadioButtonIcons.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class RadioButtonMetrics {
    ctor @KotlinOnly public RadioButtonMetrics(androidx.compose.ui.unit.DpSize radioButtonSize, androidx.compose.ui.unit.DpSize outlineSize, androidx.compose.ui.unit.DpSize outlineFocusedSize, androidx.compose.ui.unit.DpSize outlineSelectedSize, androidx.compose.ui.unit.DpSize outlineSelectedFocusedSize, androidx.compose.ui.unit.Dp iconContentGap);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.unit.DpSize> outlineSizeFor(long state);
    property public androidx.compose.ui.unit.Dp iconContentGap;
    property public androidx.compose.ui.unit.DpSize outlineFocusedSize;
    property public androidx.compose.ui.unit.DpSize outlineSelectedFocusedSize;
    property public androidx.compose.ui.unit.DpSize outlineSelectedSize;
    property public androidx.compose.ui.unit.DpSize outlineSize;
    property public androidx.compose.ui.unit.DpSize radioButtonSize;
    field public static final org.jetbrains.jewel.ui.component.styling.RadioButtonMetrics.Companion Companion;
  }

  public static final class RadioButtonMetrics.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class RadioButtonStyle {
    ctor public RadioButtonStyle(org.jetbrains.jewel.ui.component.styling.RadioButtonColors colors, org.jetbrains.jewel.ui.component.styling.RadioButtonMetrics metrics, org.jetbrains.jewel.ui.component.styling.RadioButtonIcons icons);
    method public org.jetbrains.jewel.ui.component.styling.RadioButtonColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.RadioButtonIcons getIcons();
    method public org.jetbrains.jewel.ui.component.styling.RadioButtonMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.RadioButtonColors colors;
    property public org.jetbrains.jewel.ui.component.styling.RadioButtonIcons icons;
    property public org.jetbrains.jewel.ui.component.styling.RadioButtonMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.RadioButtonStyle.Companion Companion;
  }

  public static final class RadioButtonStyle.Companion {
  }

  public final class RadioButtonStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.RadioButtonStyle> getLocalRadioButtonStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.RadioButtonStyle> LocalRadioButtonStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ScrollbarColors {
    ctor @KotlinOnly public ScrollbarColors(androidx.compose.ui.graphics.Color thumbBackground, androidx.compose.ui.graphics.Color thumbBackgroundActive, androidx.compose.ui.graphics.Color thumbOpaqueBackground, androidx.compose.ui.graphics.Color thumbOpaqueBackgroundHovered, androidx.compose.ui.graphics.Color thumbBorder, androidx.compose.ui.graphics.Color thumbBorderActive, androidx.compose.ui.graphics.Color thumbOpaqueBorder, androidx.compose.ui.graphics.Color thumbOpaqueBorderHovered, androidx.compose.ui.graphics.Color trackBackground, androidx.compose.ui.graphics.Color trackBackgroundExpanded, androidx.compose.ui.graphics.Color trackOpaqueBackground, androidx.compose.ui.graphics.Color trackOpaqueBackgroundHovered);
    property public androidx.compose.ui.graphics.Color thumbBackground;
    property public androidx.compose.ui.graphics.Color thumbBackgroundActive;
    property public androidx.compose.ui.graphics.Color thumbBorder;
    property public androidx.compose.ui.graphics.Color thumbBorderActive;
    property public androidx.compose.ui.graphics.Color thumbOpaqueBackground;
    property public androidx.compose.ui.graphics.Color thumbOpaqueBackgroundHovered;
    property public androidx.compose.ui.graphics.Color thumbOpaqueBorder;
    property public androidx.compose.ui.graphics.Color thumbOpaqueBorderHovered;
    property public androidx.compose.ui.graphics.Color trackBackground;
    property public androidx.compose.ui.graphics.Color trackBackgroundExpanded;
    property public androidx.compose.ui.graphics.Color trackOpaqueBackground;
    property public androidx.compose.ui.graphics.Color trackOpaqueBackgroundHovered;
    field public static final org.jetbrains.jewel.ui.component.styling.ScrollbarColors.Companion Companion;
  }

  public static final class ScrollbarColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ScrollbarMetrics {
    ctor @KotlinOnly public ScrollbarMetrics(androidx.compose.foundation.shape.CornerSize thumbCornerSize, androidx.compose.ui.unit.Dp minThumbLength);
    method public androidx.compose.foundation.shape.CornerSize getThumbCornerSize();
    property public androidx.compose.ui.unit.Dp minThumbLength;
    property public androidx.compose.foundation.shape.CornerSize thumbCornerSize;
    field public static final org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics.Companion Companion;
  }

  public static final class ScrollbarMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class ScrollbarStyle {
    ctor public ScrollbarStyle(org.jetbrains.jewel.ui.component.styling.ScrollbarColors colors, org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics metrics, org.jetbrains.jewel.ui.component.styling.TrackClickBehavior trackClickBehavior, org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility scrollbarVisibility);
    method public org.jetbrains.jewel.ui.component.styling.ScrollbarColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics getMetrics();
    method public org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility getScrollbarVisibility();
    method public org.jetbrains.jewel.ui.component.styling.TrackClickBehavior getTrackClickBehavior();
    property public org.jetbrains.jewel.ui.component.styling.ScrollbarColors colors;
    property public org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics metrics;
    property public org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility scrollbarVisibility;
    property public org.jetbrains.jewel.ui.component.styling.TrackClickBehavior trackClickBehavior;
    field public static final org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion Companion;
  }

  public static final class ScrollbarStyle.Companion {
  }

  public final class ScrollbarStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ScrollbarStyle> getLocalScrollbarStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.ScrollbarStyle> LocalScrollbarStyle;
  }

  public sealed interface ScrollbarVisibility {
    method public androidx.compose.foundation.layout.PaddingValues getTrackPadding();
    method public androidx.compose.foundation.layout.PaddingValues getTrackPaddingWithBorder();
    property public abstract kotlin.time.Duration expandAnimationDuration;
    property public abstract kotlin.time.Duration lingerDuration;
    property public abstract kotlin.time.Duration thumbColorAnimationDuration;
    property public abstract kotlin.time.Duration trackColorAnimationDuration;
    property public abstract androidx.compose.foundation.layout.PaddingValues trackPadding;
    property public abstract androidx.compose.foundation.layout.PaddingValues trackPaddingWithBorder;
    property public abstract androidx.compose.ui.unit.Dp trackThickness;
    property public abstract androidx.compose.ui.unit.Dp trackThicknessExpanded;
  }

  @org.jetbrains.jewel.foundation.GenerateDataFunctions public static final class ScrollbarVisibility.AlwaysVisible implements org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility {
    ctor @KotlinOnly public ScrollbarVisibility.AlwaysVisible(androidx.compose.ui.unit.Dp trackThickness, androidx.compose.foundation.layout.PaddingValues trackPadding, androidx.compose.foundation.layout.PaddingValues trackPaddingWithBorder, kotlin.time.Duration thumbColorAnimationDuration, kotlin.time.Duration trackColorAnimationDuration, androidx.compose.ui.graphics.Color scrollbarBackgroundColorLight, androidx.compose.ui.graphics.Color scrollbarBackgroundColorDark);
    method public androidx.compose.foundation.layout.PaddingValues getTrackPadding();
    method public androidx.compose.foundation.layout.PaddingValues getTrackPaddingWithBorder();
    property public kotlin.time.Duration expandAnimationDuration;
    property public kotlin.time.Duration lingerDuration;
    property public androidx.compose.ui.graphics.Color scrollbarBackgroundColorDark;
    property public androidx.compose.ui.graphics.Color scrollbarBackgroundColorLight;
    property public kotlin.time.Duration thumbColorAnimationDuration;
    property public kotlin.time.Duration trackColorAnimationDuration;
    property public androidx.compose.foundation.layout.PaddingValues trackPadding;
    property public androidx.compose.foundation.layout.PaddingValues trackPaddingWithBorder;
    property public androidx.compose.ui.unit.Dp trackThickness;
    property public androidx.compose.ui.unit.Dp trackThicknessExpanded;
    field public static final org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible.Companion Companion;
  }

  public static final class ScrollbarVisibility.AlwaysVisible.Companion {
  }

  @org.jetbrains.jewel.foundation.GenerateDataFunctions public static final class ScrollbarVisibility.WhenScrolling implements org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility {
    ctor @KotlinOnly public ScrollbarVisibility.WhenScrolling(androidx.compose.ui.unit.Dp trackThickness, androidx.compose.ui.unit.Dp trackThicknessExpanded, androidx.compose.foundation.layout.PaddingValues trackPadding, androidx.compose.foundation.layout.PaddingValues trackPaddingWithBorder, kotlin.time.Duration trackColorAnimationDuration, kotlin.time.Duration expandAnimationDuration, kotlin.time.Duration thumbColorAnimationDuration, kotlin.time.Duration lingerDuration);
    method public androidx.compose.foundation.layout.PaddingValues getTrackPadding();
    method public androidx.compose.foundation.layout.PaddingValues getTrackPaddingWithBorder();
    property public kotlin.time.Duration expandAnimationDuration;
    property public kotlin.time.Duration lingerDuration;
    property public kotlin.time.Duration thumbColorAnimationDuration;
    property public kotlin.time.Duration trackColorAnimationDuration;
    property public androidx.compose.foundation.layout.PaddingValues trackPadding;
    property public androidx.compose.foundation.layout.PaddingValues trackPaddingWithBorder;
    property public androidx.compose.ui.unit.Dp trackThickness;
    property public androidx.compose.ui.unit.Dp trackThicknessExpanded;
    field public static final org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.WhenScrolling.Companion Companion;
  }

  public static final class ScrollbarVisibility.WhenScrolling.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SegmentedControlButtonColors {
    ctor @KotlinOnly public SegmentedControlButtonColors(androidx.compose.ui.graphics.Brush background, androidx.compose.ui.graphics.Brush backgroundPressed, androidx.compose.ui.graphics.Brush backgroundHovered, androidx.compose.ui.graphics.Brush backgroundSelected, androidx.compose.ui.graphics.Brush backgroundSelectedFocused, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Brush border, androidx.compose.ui.graphics.Brush borderSelected, androidx.compose.ui.graphics.Brush borderSelectedDisabled, androidx.compose.ui.graphics.Brush borderSelectedFocused);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Brush> backgroundFor(long state, boolean isFocused);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Brush> borderFor(long state, boolean isFocused);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    method public androidx.compose.ui.graphics.Brush getBackground();
    method public androidx.compose.ui.graphics.Brush getBackgroundHovered();
    method public androidx.compose.ui.graphics.Brush getBackgroundPressed();
    method public androidx.compose.ui.graphics.Brush getBackgroundSelected();
    method public androidx.compose.ui.graphics.Brush getBackgroundSelectedFocused();
    method public androidx.compose.ui.graphics.Brush getBorder();
    method public androidx.compose.ui.graphics.Brush getBorderSelected();
    method public androidx.compose.ui.graphics.Brush getBorderSelectedDisabled();
    method public androidx.compose.ui.graphics.Brush getBorderSelectedFocused();
    property public androidx.compose.ui.graphics.Brush background;
    property public androidx.compose.ui.graphics.Brush backgroundHovered;
    property public androidx.compose.ui.graphics.Brush backgroundPressed;
    property public androidx.compose.ui.graphics.Brush backgroundSelected;
    property public androidx.compose.ui.graphics.Brush backgroundSelectedFocused;
    property public androidx.compose.ui.graphics.Brush border;
    property public androidx.compose.ui.graphics.Brush borderSelected;
    property public androidx.compose.ui.graphics.Brush borderSelectedDisabled;
    property public androidx.compose.ui.graphics.Brush borderSelectedFocused;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    field public static final org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonColors.Companion Companion;
  }

  public static final class SegmentedControlButtonColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SegmentedControlButtonMetrics {
    ctor @KotlinOnly public SegmentedControlButtonMetrics(androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.foundation.layout.PaddingValues segmentedButtonPadding, androidx.compose.ui.unit.DpSize minSize, androidx.compose.ui.unit.Dp borderWidth);
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    method public androidx.compose.foundation.layout.PaddingValues getSegmentedButtonPadding();
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public androidx.compose.ui.unit.DpSize minSize;
    property public androidx.compose.foundation.layout.PaddingValues segmentedButtonPadding;
    field public static final org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonMetrics.Companion Companion;
  }

  public static final class SegmentedControlButtonMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SegmentedControlButtonStyle {
    ctor public SegmentedControlButtonStyle(org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonColors colors, org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonColors colors;
    property public org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle.Companion Companion;
  }

  public static final class SegmentedControlButtonStyle.Companion {
  }

  public final class SegmentedControlButtonStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle> getLocalSegmentedControlButtonStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle> LocalSegmentedControlButtonStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SegmentedControlColors {
    ctor public SegmentedControlColors(androidx.compose.ui.graphics.Brush border, androidx.compose.ui.graphics.Brush borderDisabled, androidx.compose.ui.graphics.Brush borderPressed, androidx.compose.ui.graphics.Brush borderHovered, androidx.compose.ui.graphics.Brush borderFocused);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Brush> borderFor(long state);
    method public androidx.compose.ui.graphics.Brush getBorder();
    method public androidx.compose.ui.graphics.Brush getBorderDisabled();
    method public androidx.compose.ui.graphics.Brush getBorderFocused();
    method public androidx.compose.ui.graphics.Brush getBorderHovered();
    method public androidx.compose.ui.graphics.Brush getBorderPressed();
    property public androidx.compose.ui.graphics.Brush border;
    property public androidx.compose.ui.graphics.Brush borderDisabled;
    property public androidx.compose.ui.graphics.Brush borderFocused;
    property public androidx.compose.ui.graphics.Brush borderHovered;
    property public androidx.compose.ui.graphics.Brush borderPressed;
    field public static final org.jetbrains.jewel.ui.component.styling.SegmentedControlColors.Companion Companion;
  }

  public static final class SegmentedControlColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SegmentedControlMetrics {
    ctor @KotlinOnly public SegmentedControlMetrics(androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.ui.unit.Dp borderWidth);
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    field public static final org.jetbrains.jewel.ui.component.styling.SegmentedControlMetrics.Companion Companion;
  }

  public static final class SegmentedControlMetrics.Companion {
  }

  public final class SegmentedControlStyle {
    ctor public SegmentedControlStyle(org.jetbrains.jewel.ui.component.styling.SegmentedControlColors colors, org.jetbrains.jewel.ui.component.styling.SegmentedControlMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.SegmentedControlColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.SegmentedControlMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.SegmentedControlColors colors;
    property public org.jetbrains.jewel.ui.component.styling.SegmentedControlMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle.Companion Companion;
  }

  public static final class SegmentedControlStyle.Companion {
  }

  public final class SegmentedControlStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle> getLocalSegmentedControlStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle> LocalSegmentedControlStyle;
  }

  @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SelectableLazyColumnStyle {
    ctor @KotlinOnly public SelectableLazyColumnStyle(androidx.compose.ui.unit.Dp itemHeight, org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle simpleListItemStyle);
    method public org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle getSimpleListItemStyle();
    property public androidx.compose.ui.unit.Dp itemHeight;
    property public org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle simpleListItemStyle;
    field public static final org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle.Companion Companion;
  }

  public static final class SelectableLazyColumnStyle.Companion {
  }

  public final class SelectableLazyColumnStyleKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle> getLocalSelectableLazyColumnStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle> LocalSelectableLazyColumnStyle;
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SimpleListItemColors {
    ctor @KotlinOnly public SimpleListItemColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color backgroundActive, androidx.compose.ui.graphics.Color backgroundSelected, androidx.compose.ui.graphics.Color backgroundSelectedActive, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentActive, androidx.compose.ui.graphics.Color contentSelected, androidx.compose.ui.graphics.Color contentSelectedActive);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> backgroundFor(org.jetbrains.jewel.ui.component.ListItemState state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(org.jetbrains.jewel.ui.component.ListItemState state);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color backgroundActive;
    property public androidx.compose.ui.graphics.Color backgroundSelected;
    property public androidx.compose.ui.graphics.Color backgroundSelectedActive;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentActive;
    property public androidx.compose.ui.graphics.Color contentSelected;
    property public androidx.compose.ui.graphics.Color contentSelectedActive;
    field public static final org.jetbrains.jewel.ui.component.styling.SimpleListItemColors.Companion Companion;
  }

  public static final class SimpleListItemColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SimpleListItemMetrics {
    ctor @KotlinOnly public SimpleListItemMetrics(androidx.compose.foundation.layout.PaddingValues innerPadding, androidx.compose.foundation.layout.PaddingValues outerPadding, androidx.compose.foundation.shape.CornerSize selectionBackgroundCornerSize, androidx.compose.ui.unit.Dp iconTextGap);
    method public androidx.compose.foundation.layout.PaddingValues getInnerPadding();
    method public androidx.compose.foundation.layout.PaddingValues getOuterPadding();
    method public androidx.compose.foundation.shape.CornerSize getSelectionBackgroundCornerSize();
    property public androidx.compose.ui.unit.Dp iconTextGap;
    property public androidx.compose.foundation.layout.PaddingValues innerPadding;
    property public androidx.compose.foundation.layout.PaddingValues outerPadding;
    property public androidx.compose.foundation.shape.CornerSize selectionBackgroundCornerSize;
    field public static final org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics.Companion Companion;
  }

  public static final class SimpleListItemMetrics.Companion {
  }

  @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SimpleListItemStyle {
    ctor public SimpleListItemStyle(org.jetbrains.jewel.ui.component.styling.SimpleListItemColors colors, org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.SimpleListItemColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.SimpleListItemColors colors;
    property public org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle.Companion Companion;
  }

  public static final class SimpleListItemStyle.Companion {
  }

  public final class SimpleListItemStyleKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle> getLocalSimpleListItemStyleStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle> LocalSimpleListItemStyleStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SliderColors {
    ctor @KotlinOnly public SliderColors(androidx.compose.ui.graphics.Color track, androidx.compose.ui.graphics.Color trackFilled, androidx.compose.ui.graphics.Color trackDisabled, androidx.compose.ui.graphics.Color trackFilledDisabled, androidx.compose.ui.graphics.Color stepMarker, androidx.compose.ui.graphics.Color thumbFill, androidx.compose.ui.graphics.Color thumbFillDisabled, androidx.compose.ui.graphics.Color thumbFillFocused, androidx.compose.ui.graphics.Color thumbFillPressed, androidx.compose.ui.graphics.Color thumbFillHovered, androidx.compose.ui.graphics.Color thumbBorder, androidx.compose.ui.graphics.Color thumbBorderFocused, androidx.compose.ui.graphics.Color thumbBorderDisabled, androidx.compose.ui.graphics.Color thumbBorderPressed, androidx.compose.ui.graphics.Color thumbBorderHovered);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> thumbBorderFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> thumbFillFor(long state);
    property public androidx.compose.ui.graphics.Color stepMarker;
    property public androidx.compose.ui.graphics.Color thumbBorder;
    property public androidx.compose.ui.graphics.Color thumbBorderDisabled;
    property public androidx.compose.ui.graphics.Color thumbBorderFocused;
    property public androidx.compose.ui.graphics.Color thumbBorderHovered;
    property public androidx.compose.ui.graphics.Color thumbBorderPressed;
    property public androidx.compose.ui.graphics.Color thumbFill;
    property public androidx.compose.ui.graphics.Color thumbFillDisabled;
    property public androidx.compose.ui.graphics.Color thumbFillFocused;
    property public androidx.compose.ui.graphics.Color thumbFillHovered;
    property public androidx.compose.ui.graphics.Color thumbFillPressed;
    property public androidx.compose.ui.graphics.Color track;
    property public androidx.compose.ui.graphics.Color trackDisabled;
    property public androidx.compose.ui.graphics.Color trackFilled;
    property public androidx.compose.ui.graphics.Color trackFilledDisabled;
    field public static final org.jetbrains.jewel.ui.component.styling.SliderColors.Companion Companion;
  }

  public static final class SliderColors.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SliderMetrics {
    ctor @KotlinOnly public SliderMetrics(androidx.compose.ui.unit.Dp trackHeight, androidx.compose.ui.unit.DpSize thumbSize, androidx.compose.ui.unit.Dp thumbBorderWidth, androidx.compose.ui.unit.Dp stepLineHeight, androidx.compose.ui.unit.Dp stepLineWidth, androidx.compose.ui.unit.Dp trackToStepSpacing);
    property public androidx.compose.ui.unit.Dp stepLineHeight;
    property public androidx.compose.ui.unit.Dp stepLineWidth;
    property public androidx.compose.ui.unit.Dp thumbBorderWidth;
    property public androidx.compose.ui.unit.DpSize thumbSize;
    property public androidx.compose.ui.unit.Dp trackHeight;
    property public androidx.compose.ui.unit.Dp trackToStepSpacing;
    field public static final org.jetbrains.jewel.ui.component.styling.SliderMetrics.Companion Companion;
  }

  public static final class SliderMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SliderStyle {
    ctor public SliderStyle(org.jetbrains.jewel.ui.component.styling.SliderColors colors, org.jetbrains.jewel.ui.component.styling.SliderMetrics metrics, androidx.compose.ui.graphics.Shape thumbShape);
    method public org.jetbrains.jewel.ui.component.styling.SliderColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.SliderMetrics getMetrics();
    method public androidx.compose.ui.graphics.Shape getThumbShape();
    property public org.jetbrains.jewel.ui.component.styling.SliderColors colors;
    property public org.jetbrains.jewel.ui.component.styling.SliderMetrics metrics;
    property public androidx.compose.ui.graphics.Shape thumbShape;
    field public static final org.jetbrains.jewel.ui.component.styling.SliderStyle.Companion Companion;
  }

  public static final class SliderStyle.Companion {
  }

  public final class SliderStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SliderStyle> getLocalSliderStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SliderStyle> LocalSliderStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SplitButtonColors {
    ctor @KotlinOnly public SplitButtonColors(androidx.compose.ui.graphics.Color dividerColor, androidx.compose.ui.graphics.Color dividerDisabledColor, androidx.compose.ui.graphics.Color chevronColor);
    property public androidx.compose.ui.graphics.Color chevronColor;
    property public androidx.compose.ui.graphics.Color dividerColor;
    property public androidx.compose.ui.graphics.Color dividerDisabledColor;
    field public static final org.jetbrains.jewel.ui.component.styling.SplitButtonColors.Companion Companion;
  }

  public static final class SplitButtonColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SplitButtonMetrics {
    ctor @KotlinOnly public SplitButtonMetrics(org.jetbrains.jewel.ui.component.styling.DividerMetrics dividerMetrics, androidx.compose.ui.unit.Dp dividerPadding);
    method public org.jetbrains.jewel.ui.component.styling.DividerMetrics getDividerMetrics();
    property public org.jetbrains.jewel.ui.component.styling.DividerMetrics dividerMetrics;
    property public androidx.compose.ui.unit.Dp dividerPadding;
    field public static final org.jetbrains.jewel.ui.component.styling.SplitButtonMetrics.Companion Companion;
  }

  public static final class SplitButtonMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SplitButtonStyle {
    ctor public SplitButtonStyle(org.jetbrains.jewel.ui.component.styling.ButtonStyle button, org.jetbrains.jewel.ui.component.styling.SplitButtonColors colors, org.jetbrains.jewel.ui.component.styling.SplitButtonMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.ButtonStyle getButton();
    method public org.jetbrains.jewel.ui.component.styling.SplitButtonColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.SplitButtonMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.ButtonStyle button;
    property public org.jetbrains.jewel.ui.component.styling.SplitButtonColors colors;
    property public org.jetbrains.jewel.ui.component.styling.SplitButtonMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.SplitButtonStyle.Companion Companion;
  }

  public static final class SplitButtonStyle.Companion {
  }

  public final class SplitButtonStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SplitButtonStyle> getLocalDefaultSplitButtonStyle();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SplitButtonStyle> getLocalOutlinedSplitButtonStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SplitButtonStyle> LocalDefaultSplitButtonStyle;
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.SplitButtonStyle> LocalOutlinedSplitButtonStyle;
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class SubmenuMetrics {
    ctor @KotlinOnly public SubmenuMetrics(androidx.compose.ui.unit.DpOffset offset);
    property public androidx.compose.ui.unit.DpOffset offset;
    field public static final org.jetbrains.jewel.ui.component.styling.SubmenuMetrics.Companion Companion;
  }

  public static final class SubmenuMetrics.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TabColors {
    ctor @KotlinOnly public TabColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color backgroundDisabled, androidx.compose.ui.graphics.Color backgroundPressed, androidx.compose.ui.graphics.Color backgroundHovered, androidx.compose.ui.graphics.Color backgroundSelected, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentPressed, androidx.compose.ui.graphics.Color contentHovered, androidx.compose.ui.graphics.Color contentSelected, androidx.compose.ui.graphics.Color underline, androidx.compose.ui.graphics.Color underlineDisabled, androidx.compose.ui.graphics.Color underlinePressed, androidx.compose.ui.graphics.Color underlineHovered, androidx.compose.ui.graphics.Color underlineSelected);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> backgroundFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> contentFor(long state);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> underlineFor(long state);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color backgroundDisabled;
    property public androidx.compose.ui.graphics.Color backgroundHovered;
    property public androidx.compose.ui.graphics.Color backgroundPressed;
    property public androidx.compose.ui.graphics.Color backgroundSelected;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentHovered;
    property public androidx.compose.ui.graphics.Color contentPressed;
    property public androidx.compose.ui.graphics.Color contentSelected;
    property public androidx.compose.ui.graphics.Color underline;
    property public androidx.compose.ui.graphics.Color underlineDisabled;
    property public androidx.compose.ui.graphics.Color underlineHovered;
    property public androidx.compose.ui.graphics.Color underlinePressed;
    property public androidx.compose.ui.graphics.Color underlineSelected;
    field public static final org.jetbrains.jewel.ui.component.styling.TabColors.Companion Companion;
  }

  public static final class TabColors.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TabContentAlpha {
    ctor public TabContentAlpha(float iconNormal, float iconDisabled, float iconPressed, float iconHovered, float iconSelected, float contentNormal, float contentDisabled, float contentPressed, float contentHovered, float contentSelected);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<java.lang.Float> contentFor(long state);
    method public float getContentDisabled();
    method public float getContentHovered();
    method public float getContentNormal();
    method public float getContentPressed();
    method public float getContentSelected();
    method public float getIconDisabled();
    method public float getIconHovered();
    method public float getIconNormal();
    method public float getIconPressed();
    method public float getIconSelected();
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<java.lang.Float> iconFor(long state);
    property public float contentDisabled;
    property public float contentHovered;
    property public float contentNormal;
    property public float contentPressed;
    property public float contentSelected;
    property public float iconDisabled;
    property public float iconHovered;
    property public float iconNormal;
    property public float iconPressed;
    property public float iconSelected;
    field public static final org.jetbrains.jewel.ui.component.styling.TabContentAlpha.Companion Companion;
  }

  public static final class TabContentAlpha.Companion {
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TabIcons {
    ctor public TabIcons(org.jetbrains.jewel.ui.icon.IconKey close);
    method public org.jetbrains.jewel.ui.icon.IconKey getClose();
    property public org.jetbrains.jewel.ui.icon.IconKey close;
    field public static final org.jetbrains.jewel.ui.component.styling.TabIcons.Companion Companion;
  }

  public static final class TabIcons.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TabMetrics {
    ctor @KotlinOnly public TabMetrics(androidx.compose.ui.unit.Dp underlineThickness, androidx.compose.foundation.layout.PaddingValues tabPadding, androidx.compose.ui.unit.Dp tabHeight, androidx.compose.ui.unit.Dp tabContentSpacing, androidx.compose.ui.unit.Dp closeContentGap);
    method public androidx.compose.foundation.layout.PaddingValues getTabPadding();
    property public androidx.compose.ui.unit.Dp closeContentGap;
    property public androidx.compose.ui.unit.Dp tabContentSpacing;
    property public androidx.compose.ui.unit.Dp tabHeight;
    property public androidx.compose.foundation.layout.PaddingValues tabPadding;
    property public androidx.compose.ui.unit.Dp underlineThickness;
    field public static final org.jetbrains.jewel.ui.component.styling.TabMetrics.Companion Companion;
  }

  public static final class TabMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TabStyle {
    ctor public TabStyle(org.jetbrains.jewel.ui.component.styling.TabColors colors, org.jetbrains.jewel.ui.component.styling.TabMetrics metrics, org.jetbrains.jewel.ui.component.styling.TabIcons icons, org.jetbrains.jewel.ui.component.styling.TabContentAlpha contentAlpha, org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle);
    method public org.jetbrains.jewel.ui.component.styling.TabColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.TabContentAlpha getContentAlpha();
    method public org.jetbrains.jewel.ui.component.styling.TabIcons getIcons();
    method public org.jetbrains.jewel.ui.component.styling.TabMetrics getMetrics();
    method public org.jetbrains.jewel.ui.component.styling.ScrollbarStyle getScrollbarStyle();
    property public org.jetbrains.jewel.ui.component.styling.TabColors colors;
    property public org.jetbrains.jewel.ui.component.styling.TabContentAlpha contentAlpha;
    property public org.jetbrains.jewel.ui.component.styling.TabIcons icons;
    property public org.jetbrains.jewel.ui.component.styling.TabMetrics metrics;
    property public org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle;
    field public static final org.jetbrains.jewel.ui.component.styling.TabStyle.Companion Companion;
  }

  public static final class TabStyle.Companion {
  }

  public final class TabStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.TabStyle> getLocalDefaultTabStyle();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.TabStyle> getLocalEditorTabStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.TabStyle> LocalDefaultTabStyle;
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.TabStyle> LocalEditorTabStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TextAreaColors implements org.jetbrains.jewel.ui.component.styling.InputFieldColors {
    ctor @KotlinOnly public TextAreaColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color backgroundDisabled, androidx.compose.ui.graphics.Color backgroundFocused, androidx.compose.ui.graphics.Color backgroundPressed, androidx.compose.ui.graphics.Color backgroundHovered, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentFocused, androidx.compose.ui.graphics.Color contentPressed, androidx.compose.ui.graphics.Color contentHovered, androidx.compose.ui.graphics.Color border, androidx.compose.ui.graphics.Color borderDisabled, androidx.compose.ui.graphics.Color borderFocused, androidx.compose.ui.graphics.Color borderPressed, androidx.compose.ui.graphics.Color borderHovered, androidx.compose.ui.graphics.Color caret, androidx.compose.ui.graphics.Color caretDisabled, androidx.compose.ui.graphics.Color caretFocused, androidx.compose.ui.graphics.Color caretPressed, androidx.compose.ui.graphics.Color caretHovered, androidx.compose.ui.graphics.Color placeholder);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color backgroundDisabled;
    property public androidx.compose.ui.graphics.Color backgroundFocused;
    property public androidx.compose.ui.graphics.Color backgroundHovered;
    property public androidx.compose.ui.graphics.Color backgroundPressed;
    property public androidx.compose.ui.graphics.Color border;
    property public androidx.compose.ui.graphics.Color borderDisabled;
    property public androidx.compose.ui.graphics.Color borderFocused;
    property public androidx.compose.ui.graphics.Color borderHovered;
    property public androidx.compose.ui.graphics.Color borderPressed;
    property public androidx.compose.ui.graphics.Color caret;
    property public androidx.compose.ui.graphics.Color caretDisabled;
    property public androidx.compose.ui.graphics.Color caretFocused;
    property public androidx.compose.ui.graphics.Color caretHovered;
    property public androidx.compose.ui.graphics.Color caretPressed;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentFocused;
    property public androidx.compose.ui.graphics.Color contentHovered;
    property public androidx.compose.ui.graphics.Color contentPressed;
    property public androidx.compose.ui.graphics.Color placeholder;
    field public static final org.jetbrains.jewel.ui.component.styling.TextAreaColors.Companion Companion;
  }

  public static final class TextAreaColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TextAreaMetrics implements org.jetbrains.jewel.ui.component.styling.InputFieldMetrics {
    ctor @KotlinOnly public TextAreaMetrics(androidx.compose.ui.unit.Dp borderWidth, androidx.compose.foundation.layout.PaddingValues contentPadding, androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.ui.unit.DpSize minSize);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public androidx.compose.ui.unit.DpSize minSize;
    field public static final org.jetbrains.jewel.ui.component.styling.TextAreaMetrics.Companion Companion;
  }

  public static final class TextAreaMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TextAreaStyle implements org.jetbrains.jewel.ui.component.styling.InputFieldStyle {
    ctor public TextAreaStyle(org.jetbrains.jewel.ui.component.styling.TextAreaColors colors, org.jetbrains.jewel.ui.component.styling.TextAreaMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.TextAreaColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.TextAreaMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.TextAreaColors colors;
    property public org.jetbrains.jewel.ui.component.styling.TextAreaMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.TextAreaStyle.Companion Companion;
  }

  public static final class TextAreaStyle.Companion {
  }

  public final class TextAreaStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.TextAreaStyle> getLocalTextAreaStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.TextAreaStyle> LocalTextAreaStyle;
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TextFieldColors implements org.jetbrains.jewel.ui.component.styling.InputFieldColors {
    ctor @KotlinOnly public TextFieldColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color backgroundDisabled, androidx.compose.ui.graphics.Color backgroundFocused, androidx.compose.ui.graphics.Color backgroundPressed, androidx.compose.ui.graphics.Color backgroundHovered, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color contentDisabled, androidx.compose.ui.graphics.Color contentFocused, androidx.compose.ui.graphics.Color contentPressed, androidx.compose.ui.graphics.Color contentHovered, androidx.compose.ui.graphics.Color border, androidx.compose.ui.graphics.Color borderDisabled, androidx.compose.ui.graphics.Color borderFocused, androidx.compose.ui.graphics.Color borderPressed, androidx.compose.ui.graphics.Color borderHovered, androidx.compose.ui.graphics.Color caret, androidx.compose.ui.graphics.Color caretDisabled, androidx.compose.ui.graphics.Color caretFocused, androidx.compose.ui.graphics.Color caretPressed, androidx.compose.ui.graphics.Color caretHovered, androidx.compose.ui.graphics.Color placeholder);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color backgroundDisabled;
    property public androidx.compose.ui.graphics.Color backgroundFocused;
    property public androidx.compose.ui.graphics.Color backgroundHovered;
    property public androidx.compose.ui.graphics.Color backgroundPressed;
    property public androidx.compose.ui.graphics.Color border;
    property public androidx.compose.ui.graphics.Color borderDisabled;
    property public androidx.compose.ui.graphics.Color borderFocused;
    property public androidx.compose.ui.graphics.Color borderHovered;
    property public androidx.compose.ui.graphics.Color borderPressed;
    property public androidx.compose.ui.graphics.Color caret;
    property public androidx.compose.ui.graphics.Color caretDisabled;
    property public androidx.compose.ui.graphics.Color caretFocused;
    property public androidx.compose.ui.graphics.Color caretHovered;
    property public androidx.compose.ui.graphics.Color caretPressed;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color contentDisabled;
    property public androidx.compose.ui.graphics.Color contentFocused;
    property public androidx.compose.ui.graphics.Color contentHovered;
    property public androidx.compose.ui.graphics.Color contentPressed;
    property public androidx.compose.ui.graphics.Color placeholder;
    field public static final org.jetbrains.jewel.ui.component.styling.TextFieldColors.Companion Companion;
  }

  public static final class TextFieldColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TextFieldMetrics implements org.jetbrains.jewel.ui.component.styling.InputFieldMetrics {
    ctor @KotlinOnly public TextFieldMetrics(androidx.compose.ui.unit.Dp borderWidth, androidx.compose.foundation.layout.PaddingValues contentPadding, androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.ui.unit.DpSize minSize);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public androidx.compose.ui.unit.DpSize minSize;
    field public static final org.jetbrains.jewel.ui.component.styling.TextFieldMetrics.Companion Companion;
  }

  public static final class TextFieldMetrics.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TextFieldStyle implements org.jetbrains.jewel.ui.component.styling.InputFieldStyle {
    ctor public TextFieldStyle(org.jetbrains.jewel.ui.component.styling.TextFieldColors colors, org.jetbrains.jewel.ui.component.styling.TextFieldMetrics metrics, org.jetbrains.jewel.ui.component.styling.IconButtonStyle iconButtonStyle);
    method public org.jetbrains.jewel.ui.component.styling.TextFieldColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.IconButtonStyle getIconButtonStyle();
    method public org.jetbrains.jewel.ui.component.styling.TextFieldMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.TextFieldColors colors;
    property public org.jetbrains.jewel.ui.component.styling.IconButtonStyle iconButtonStyle;
    property public org.jetbrains.jewel.ui.component.styling.TextFieldMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.TextFieldStyle.Companion Companion;
  }

  public static final class TextFieldStyle.Companion {
  }

  public final class TextFieldStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.TextFieldStyle> getLocalTextFieldStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.TextFieldStyle> LocalTextFieldStyle;
  }

  public enum TooltipAutoHideBehavior {
    enum_constant public static final org.jetbrains.jewel.ui.component.styling.TooltipAutoHideBehavior Long;
    enum_constant public static final org.jetbrains.jewel.ui.component.styling.TooltipAutoHideBehavior Never;
    enum_constant public static final org.jetbrains.jewel.ui.component.styling.TooltipAutoHideBehavior Normal;
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TooltipColors {
    ctor @KotlinOnly public TooltipColors(androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color content, androidx.compose.ui.graphics.Color border, androidx.compose.ui.graphics.Color shadow);
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color border;
    property public androidx.compose.ui.graphics.Color content;
    property public androidx.compose.ui.graphics.Color shadow;
    field public static final org.jetbrains.jewel.ui.component.styling.TooltipColors.Companion Companion;
  }

  public static final class TooltipColors.Companion {
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TooltipMetrics {
    ctor @KotlinOnly public TooltipMetrics(androidx.compose.foundation.layout.PaddingValues contentPadding, kotlin.time.Duration showDelay, androidx.compose.foundation.shape.CornerSize cornerSize, androidx.compose.ui.unit.Dp borderWidth, androidx.compose.ui.unit.Dp shadowSize, androidx.compose.foundation.TooltipPlacement placement, kotlin.time.Duration regularDisappearDelay, kotlin.time.Duration fullDisappearDelay);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public androidx.compose.foundation.shape.CornerSize getCornerSize();
    method public androidx.compose.foundation.TooltipPlacement getPlacement();
    property public androidx.compose.ui.unit.Dp borderWidth;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.foundation.shape.CornerSize cornerSize;
    property public kotlin.time.Duration fullDisappearDelay;
    property public androidx.compose.foundation.TooltipPlacement placement;
    property public kotlin.time.Duration regularDisappearDelay;
    property public androidx.compose.ui.unit.Dp shadowSize;
    property public kotlin.time.Duration showDelay;
    field public static final org.jetbrains.jewel.ui.component.styling.TooltipMetrics.Companion Companion;
  }

  public static final class TooltipMetrics.Companion {
    method @Deprecated public org.jetbrains.jewel.ui.component.styling.TooltipMetrics defaults(optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional long showDelay, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional float borderWidth, optional float shadowSize, optional androidx.compose.foundation.TooltipPlacement placement);
    method public org.jetbrains.jewel.ui.component.styling.TooltipMetrics defaults(optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional long showDelay, optional long regularDisappearDelay, optional long fullDisappearDelay, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional float borderWidth, optional float shadowSize, optional androidx.compose.foundation.TooltipPlacement placement);
  }

  @androidx.compose.runtime.Stable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class TooltipStyle {
    ctor public TooltipStyle(org.jetbrains.jewel.ui.component.styling.TooltipColors colors, org.jetbrains.jewel.ui.component.styling.TooltipMetrics metrics);
    ctor public TooltipStyle(org.jetbrains.jewel.ui.component.styling.TooltipColors colors, org.jetbrains.jewel.ui.component.styling.TooltipMetrics metrics, org.jetbrains.jewel.ui.component.styling.TooltipAutoHideBehavior autoHideBehavior);
    method public org.jetbrains.jewel.ui.component.styling.TooltipAutoHideBehavior getAutoHideBehavior();
    method public org.jetbrains.jewel.ui.component.styling.TooltipColors getColors();
    method public org.jetbrains.jewel.ui.component.styling.TooltipMetrics getMetrics();
    property public org.jetbrains.jewel.ui.component.styling.TooltipAutoHideBehavior autoHideBehavior;
    property public org.jetbrains.jewel.ui.component.styling.TooltipColors colors;
    property public org.jetbrains.jewel.ui.component.styling.TooltipMetrics metrics;
    field public static final org.jetbrains.jewel.ui.component.styling.TooltipStyle.Companion Companion;
  }

  public static final class TooltipStyle.Companion {
  }

  public final class TooltipStylingKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.TooltipStyle> getLocalTooltipStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.component.styling.TooltipStyle> LocalTooltipStyle;
  }

  public enum TrackClickBehavior {
    enum_constant public static final org.jetbrains.jewel.ui.component.styling.TrackClickBehavior JumpToSpot;
    enum_constant public static final org.jetbrains.jewel.ui.component.styling.TrackClickBehavior NextPage;
  }

}

package org.jetbrains.jewel.ui.graphics {

  public final class CssLinearGradientBrushKt {
    method public static androidx.compose.ui.graphics.Brush cssLinearGradient(androidx.compose.ui.graphics.Brush.Companion, double angleDegrees, java.util.List<androidx.compose.ui.graphics.Color> colors, optional java.util.List<java.lang.Float>? stops, optional float scaleX, optional float scaleY, optional long offset);
  }

}

package org.jetbrains.jewel.ui.icon {

  public interface IconKey {
    method public Class<? extends java.lang.Object?> getIconClass();
    method public String path(boolean isNewUi);
    property public abstract Class<? extends java.lang.Object?> iconClass;
  }

  @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class IntelliJIconKey implements org.jetbrains.jewel.ui.icon.IconKey {
    ctor public IntelliJIconKey(String oldUiPath, String newUiPath, Class<? extends java.lang.Object?> iconClass);
    method public Class<? extends java.lang.Object?> getIconClass();
    method public String getNewUiPath();
    method public String getOldUiPath();
    method public String path(boolean isNewUi);
    property public Class<? extends java.lang.Object?> iconClass;
    property public String newUiPath;
    property public String oldUiPath;
    field public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey.Companion Companion;
  }

  public static final class IntelliJIconKey.Companion {
  }

  public fun interface NewUiChecker {
    method public boolean isNewUi();
  }

  public final class NewUiCheckerKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.icon.NewUiChecker> getLocalNewUiChecker();
    method @androidx.compose.runtime.Composable public static org.jetbrains.jewel.ui.icon.NewUiChecker getNewUiChecker(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.icon.NewUiChecker> LocalNewUiChecker;
    property @androidx.compose.runtime.Composable public static org.jetbrains.jewel.ui.icon.NewUiChecker org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.newUiChecker;
  }

  @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class PathIconKey implements org.jetbrains.jewel.ui.icon.IconKey {
    ctor public PathIconKey(String path, Class<? extends java.lang.Object?> iconClass);
    method public Class<? extends java.lang.Object?> getIconClass();
    method public String path(boolean isNewUi);
    property public Class<? extends java.lang.Object?> iconClass;
  }

}

package org.jetbrains.jewel.ui.icons {

  @SuppressCompatibility public final class AllIconsKeys {
    ctor public AllIconsKeys();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Empty;
    field @Deprecated @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Icon;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Idea_logo_welcome;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Stub;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Actions {
    ctor public AllIconsKeys.Actions();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddDirectory;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddFile;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddList;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddMulticaret;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddToDictionary;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Annotate;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowCollapse;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowExpand;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Attach;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Back;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BuildAutoReloadChanges;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BuildLoadChanges;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Cancel;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ChangeView;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CheckMulticaret;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CheckOut;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Checked;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Checked_selected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ClearCash;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Close;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseDarkGrey;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Collapseall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Colors;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Commit;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compile;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Copy;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DeleteTag;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DeleteTagHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DependencyAnalyzer;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DiagramDiff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Diff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DiffWithClipboard;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Download;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Dump;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DynamicUsages;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Edit;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EditScheme;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EditSource;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EnableNewUi;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EnableNewUiSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Execute;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Exit;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Expandall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Find;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FindAndShowNextMatches;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FindAndShowNextMatchesSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FindAndShowPrevMatches;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FindAndShowPrevMatchesSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FindBackward;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FindEntireFile;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FindForward;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ForceRefresh;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Forward;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GC;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GeneratedFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GroupBy;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GroupByClass;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GroupByFile;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GroupByMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GroupByModule;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GroupByModuleGroup;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GroupByPackage;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GroupByPrefix;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GroupByTestProduction;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Help;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Highlighting;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InSelection;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlayDropTriangle;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlayGear;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlayGlobe;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlayRenameInComments;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlayRenameInCommentsActive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlayRenameInNoCodeFiles;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlayRenameInNoCodeFilesActive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlaySecuredShield;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineDropFrame;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineDropFrameSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Install;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey IntentionBulb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey IntentionBulbGrey;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Learn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Lightning;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ListChanges;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ListFiles;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MatchCase;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MatchCaseHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MatchCaseSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MenuCut;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MenuOpen;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MenuPaste;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MenuSaveall;
    field @Deprecated @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Menu_cut;
    field @Deprecated @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Menu_open;
    field @Deprecated @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Menu_paste;
    field @Deprecated @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Menu_saveall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Minimap;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ModuleDirectory;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey More;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoreHorizontal;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveDown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveTo2;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveToBottomLeft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveToBottomRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveToButton;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveToLeftBottom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveToLeftTop;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveToRightBottom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveToRightTop;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveToTopLeft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveToTopRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveToWindow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoveUp;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey New;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NewFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NextOccurence;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OfflineMode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OpenNewTab;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Pause;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PinTab;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Play_back;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Play_first;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Play_forward;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Play_last;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PopFrame;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PresentationAssistantSettings;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PreserveCase;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PreserveCaseHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PreserveCaseSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PrettyPrint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Preview;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PreviewDetails;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PreviewDetailsVertically;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PreviousOccurence;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Profile;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProfileBlue;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProfileCPU;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProfileMemory;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProfileRed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProfileYellow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProjectDirectory;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProjectWideAnalysisOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProjectWideAnalysisOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Properties;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey QuickfixBulb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey QuickfixOffBulb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RealIntentionBulb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rebuild;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Redo;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RefactoringBulb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ReformatCode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Refresh;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Regex;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RegexHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RegexSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RemoveMulticaret;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Replace;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Report;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rerun;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RerunAutomatically;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Restart;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestartDebugger;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestartFrame;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestartStop;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Resume;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rollback;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RunAll;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RunAnything;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RunToCursor;
    field @Deprecated @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Run_anything;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Scratch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Search;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SearchNewLine;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SearchNewLineHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SearchWithHistory;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Selectall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SetDefault;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Share;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShortcutFilter;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Show;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowAsTree;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowCode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowImportStatements;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowReadAccess;
    field @Deprecated @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.ScheduledForRemoval public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowViewer;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowWriteAccess;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SplitHorizontally;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SplitVertically;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StartDebugger;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StartMemoryProfile;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StepOut;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StepOutCodeBlock;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StopAndRestart;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StopRefresh;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StopWatch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Stub;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SuggestedRefactoringBulb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Suspend;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SwapPanels;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SyncPanels;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SynchronizeScrolling;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToggleSoftWrap;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToggleVisibility;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TraceInto;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TraceOver;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Undo;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Uninstall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Unselectall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Unshare;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Upload;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Words;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WordsHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WordsSelected;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Breakpoints {
    ctor public AllIconsKeys.Breakpoints();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BreakpointFieldUnsuspendentDisabled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BreakpointMethodUnsuspendentDisabled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BreakpointUnsuspendentDisabled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MultipleBreakpointsDisabled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MultipleBreakpointsMuted;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Chooser {
    ctor public AllIconsKeys.Chooser();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Bottom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Left;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Right;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Top;
  }

  @SuppressCompatibility public static final class AllIconsKeys.CodeStyle {
    ctor public AllIconsKeys.CodeStyle();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddNewSectionRule;
  }

  @SuppressCompatibility public static final class AllIconsKeys.CodeWithMe {
    ctor public AllIconsKeys.CodeWithMe();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmAccess;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmAccessDotOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmAccessDotOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmAccessOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmAccessOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmCamAvatarOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmCamAvatarOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmCamOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmCamOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmDisableCall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmEnableCall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmFollow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmFollowMe;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmForceFollowMe;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmFullSync;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmIconModificator;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmIconModificatorMenu;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmInvite;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmJoin;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmJump;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmKick;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmLeaveCall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmLogoToolbar;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmMicAvatarOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmMicAvatarOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmMicOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmMicOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmPermissionEdit;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmPermissionFull;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmPermissionView;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmPermissions;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmPermissionsDenied;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmPermissionsGranted;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmScreenInBrowserOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmScreenInBrowserOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmScreenOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmScreenOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmShared;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmSharingAvatarOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmTerminate;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CwmVerified;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Users;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Debugger {
    ctor public AllIconsKeys.Debugger();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddToWatch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AttachToProcess;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ClassLevelWatch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Console;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_array;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_db_object;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_dep_field_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_dep_line_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_dep_method_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_disabled_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_disabled_breakpoint_process;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_disabled_exception_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_disabled_field_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_disabled_method_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_evaluateNode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_exception_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_field_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_invalid_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_method_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_muted_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_muted_dep_field_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_muted_dep_line_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_muted_dep_method_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_muted_disabled_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_muted_disabled_field_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_muted_disabled_method_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_muted_field_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_muted_method_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_no_suspend_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_no_suspend_field_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_no_suspend_method_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_obsolete;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_primitive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_set_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_verified_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_verified_field_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_verified_method_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_verified_no_suspend_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_verified_no_suspend_field_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_verified_no_suspend_method_breakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Db_watch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EvaluateExpression;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EvaluationResult;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ForceRunToCursor;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ForceStepInto;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ForceStepOver;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Frame;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Freeze;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FreezeAll;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey KillProcess;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LambdaBreakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MultipleBreakpoints;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MultipleBreakpointsDisabled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MultipleBreakpointsMuted;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MuteBreakpoints;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NextStatement;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Overhead;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PromptInput;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PromptInputHistory;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Question_badge;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestoreLayout;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Selfreference;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowCurrentFrame;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SmartStepInto;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Thaw;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ThawAll;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ThreadAtBreakpoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ThreadCurrent;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ThreadDaemon;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ThreadFrozen;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ThreadGroup;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ThreadGroupCurrent;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ThreadRunning;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ThreadSuspended;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ThreadVirtual;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Threads;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Value;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey VariablesTab;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ViewBreakpoints;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Watch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WatchLastReturnValue;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Debugger.ThreadStates {
    ctor public AllIconsKeys.Debugger.ThreadStates();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Idle;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Socket;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Diff {
    ctor public AllIconsKeys.Diff();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddComment_14x14;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ApplyNotConflicts;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ApplyNotConflictsLeft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ApplyNotConflictsRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Arrow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowLeftDown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowLeftRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowRightDown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compare3LeftMiddle;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compare3LeftRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compare3MiddleRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compare4LeftBottom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compare4LeftMiddle;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compare4LeftRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compare4MiddleBottom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compare4MiddleRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compare4RightBottom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GutterCheckBox;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GutterCheckBoxIndeterminate;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GutterCheckBoxSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HiddenComment_14x14;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Lock;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MagicResolve;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MagicResolveToolbar;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Remove;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Revert;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Duplicates {
    ctor public AllIconsKeys.Duplicates();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SendToTheLeft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SendToTheLeftGrayed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SendToTheRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SendToTheRightGrayed;
  }

  @SuppressCompatibility public static final class AllIconsKeys.FileTypes {
    ctor public AllIconsKeys.FileTypes();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AS;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddAny;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Any_type;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Archive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Aspectj;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BinaryData;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Config;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Contexts;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ContextsModifier;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Css;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Csv;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Custom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Diagram;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Dtd;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Font;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Gitignore;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Hprof;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Htaccess;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Html;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Http;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey I18n;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Idl;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Image;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Java;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JavaClass;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JavaOutsideSource;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JavaScript;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Jfr;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Json;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JsonSchema;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Jsp;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Jspx;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Manifest;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MicrosoftWindows;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Perl;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Properties;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Regexp;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SourceMap;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Text;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey UiForm;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Unknown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WsdlFile;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Xhtml;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Xml;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey XsdFile;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Yaml;
  }

  @SuppressCompatibility public static final class AllIconsKeys.General {
    ctor public AllIconsKeys.General();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ActualZoom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Add;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddJdk;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Add_20x20;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Alpha;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowDown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowDownSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowLeft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowSplitCenterH;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowSplitCenterV;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ArrowUp;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AutoscrollFromSource;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AutoscrollToSource;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Balloon;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BalloonError;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BalloonInformation;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BalloonWarning;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BalloonWarning12;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Beta;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ButtonDropTriangle;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ChevronDown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ChevronDownLargeWhite;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ChevronLeft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ChevronRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ChevronUp;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Close;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseSmallHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CollapseComponent;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CollapseComponentHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ContextHelp;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Copy;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CopyHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DebugDisabled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Delete;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Divider;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Drag;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DropPlace;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Dropdown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DropdownGutter;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EditorPreviewVertical;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Ellipsis;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Error;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ErrorDialog;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExclMark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExpandComponent;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExpandComponentHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Export;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExternalTools;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Filter;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FitContent;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Gear;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GearHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GearPlain;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GreenCheckmark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Groups;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Hashtag;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HideToolWindow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey History;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ImplementingMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey IndentDetected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Information;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InformationDialog;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InheritedMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineAdd;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineAddHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineClose;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineCloseHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineCopy;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineCopyHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineRefresh;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineRefreshHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineVariables;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InlineVariablesHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Inline_edit;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Inline_edit_hovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsError;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsErrorEmpty;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsEye;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsGrammar;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsMixed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsOK;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsOKEmpty;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsPause;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsPowerSaveMode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsTrafficOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsTypos;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsWarning;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionsWarningEmpty;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Keyboard;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Language;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Layout;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LayoutEditorOnly;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LayoutEditorPreview;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LayoutPreviewOnly;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LinkDropTriangle;
    field @Deprecated @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LocalizationSettings;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Locate;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Menu;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Modified;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ModifiedSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MoreTabs;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Mouse;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey New_badge;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Note;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NotificationError;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NotificationInfo;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NotificationWarning;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OpenDisk;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OpenDiskHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OpenInToolWindow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OverridenMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OverridingMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Pin;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PinHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PinSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PinSelectedHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Pin_tab;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PreviewHorizontally;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Print;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProjectConfigurable;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProjectStructure;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProjectTab;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey QuestionDialog;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ReaderMode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Refresh;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RefreshAuto;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Remove;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Reset;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RunWithCoverage;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SelectIn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SeparatorH;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Settings;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Show;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowInfos;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowWarning;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Show_to_implement;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SuccessDialog;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SuccessLogin;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TbHidden;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TbShown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Tip;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TodoDefault;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TodoImportant;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TodoQuestion;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Tree;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TreeHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TreeSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TrialBadge;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey User;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Vcs;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Warning;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WarningDecorator;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WarningDialog;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Web;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WindowsMenu_20x20;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ZoomIn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ZoomOut;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Graph {
    ctor public AllIconsKeys.Graph();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ActualZoom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Grid;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Layout;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NodeSelectionMode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SnapToGrid;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ZoomIn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ZoomOut;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Gutter {
    ctor public AllIconsKeys.Gutter();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Bookmark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Colors;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DataSchema;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExtAnnotation;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Fold;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FoldBottom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ImplementedMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ImplementingFunctionalInterface;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ImplementingMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Java9Service;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JavadocEdit;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JavadocRead;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Mnemonic;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OverridenMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OverridingMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ReadAccess;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RecursiveMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RunInQueue;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SiblingInheritedMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SuggestedRefactoringBulb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SuggestedRefactoringBulbDisabled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Unfold;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Unique;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Web;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WriteAccess;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Hierarchy {
    ctor public AllIconsKeys.Hierarchy();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Class;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MethodDefined;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MethodNotDefined;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShouldDefineMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Subtypes;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Supertypes;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Icons {
    ctor public AllIconsKeys.Icons();
  }

  @SuppressCompatibility public static final class AllIconsKeys.Icons.Ide {
    ctor public AllIconsKeys.Icons.Ide();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MenuArrow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MenuArrowSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NextStep;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NextStepInverted;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Ide {
    ctor public AllIconsKeys.Ide();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ConfigFile;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Dislike;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DislikeDimmed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DislikeSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ErrorPoint;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExternalLinkArrowWhite;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey External_link_arrow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FatalError;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FatalErrorRead;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Feedback;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FeedbackRating;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FeedbackRatingFocused;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FeedbackRatingFocusedOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FeedbackRatingOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FeedbackRatingOnFocused;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Gift;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HectorOff;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HectorOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HectorSyntax;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey IncomingChangesOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Like;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LikeDimmed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LikeSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Link;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LocalScope;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LocalScopeAction;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NavBarSeparator;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OutgoingChangesOn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Pipette;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PipetteRollover;
    field @Deprecated @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Pipette_rollover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PowerSaveMode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rating;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rating1;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rating2;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rating3;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rating4;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Readonly;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Readwrite;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SharedScope;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Statusbar_arrows;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey UpDown;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Ide.Macro {
    ctor public AllIconsKeys.Ide.Macro();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Recording_1;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Recording_2;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Recording_3;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Recording_4;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Ide.Notification {
    ctor public AllIconsKeys.Ide.Notification();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Close;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Collapse;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CollapseHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DropTriangle;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ErrorEvents;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Expand;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExpandHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Gear;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GearHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey IdeUpdate;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InfoEvents;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NoEvents;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PluginUpdate;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WarningEvents;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Ide.RoundShadow {
    ctor public AllIconsKeys.Ide.RoundShadow();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Bottom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BottomLeft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BottomRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Left;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Right;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Top;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TopLeft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TopRight;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Ide.Shadow {
    ctor public AllIconsKeys.Ide.Shadow();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Bottom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BottomLeft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BottomRight;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Left;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Right;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Top;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TopLeft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TopRight;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Javaee {
    ctor public AllIconsKeys.Javaee();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Home;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PersistenceEntity;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey UpdateRunningApplication;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WebModuleGroup;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WebService;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WebServiceClient;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Json {
    ctor public AllIconsKeys.Json();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Array;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Object;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Language {
    ctor public AllIconsKeys.Language();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GO;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Php;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Python;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Ruby;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rust;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Scala;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Linux {
    ctor public AllIconsKeys.Linux();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Linux;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Linux.Theme {
    ctor public AllIconsKeys.Linux.Theme();
  }

  @SuppressCompatibility public static final class AllIconsKeys.Linux.Theme.Gnome {
    ctor public AllIconsKeys.Linux.Theme.Gnome();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Close;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ClosePressed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Maximize;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MaximizeHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MaximizeInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MaximizePressed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Minimize;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MinimizeHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MinimizeInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MinimizePressed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Restore;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestoreHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestoreInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestorePressed;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Linux.Theme.Kde {
    ctor public AllIconsKeys.Linux.Theme.Kde();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Close;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ClosePressed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Maximize;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MaximizeHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MaximizeInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MaximizePressed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Minimize;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MinimizeHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MinimizeInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MinimizePressed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Restore;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestoreHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestoreInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestorePressed;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Mac {
    ctor public AllIconsKeys.Mac();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AppIconOk512;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Mac.Touchbar {
    ctor public AllIconsKeys.Mac.Touchbar();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PopoverArrow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PopoverClose;
  }

  @SuppressCompatibility public static final class AllIconsKeys.MeetNewUi {
    ctor public AllIconsKeys.MeetNewUi();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DarkTheme;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DarkThemeSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DensityCompact;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DensityDefault;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LightTheme;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LightThemeSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SystemTheme;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SystemThemeSelected;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Modules {
    ctor public AllIconsKeys.Modules();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddExcludedRoot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Annotation;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EditFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExcludeRoot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExcludedGeneratedRoot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GeneratedFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GeneratedSourceRoot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GeneratedTestRoot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ResourcesRoot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SourceRoot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SourceRootFileLayer;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Split;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestResourcesRoot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestRoot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey UnloadedModule;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey UnmarkWebroot;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Nodes {
    ctor public AllIconsKeys.Nodes();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AbstractClass;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AbstractException;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AbstractMethod;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Alias;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Annotationtype;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AnonymousClass;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Artifact;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Aspect;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Bookmark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BookmarkGroup;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey C_plocal;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey C_private;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey C_protected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey C_public;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Class;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ClassInitializer;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CompiledClassesFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ConfigFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Console;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Constant;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Constructor;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Controller;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CopyOfFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CustomRegion;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DataColumn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DataSchema;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DataTables;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Deploy;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Desktop;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DoneMark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Editorconfig;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EmptyNode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EnterpriseProject;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey EntryPoints;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Enum;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ErrorIntroduction;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ErrorMark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExceptionClass;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExcludedFromCompile;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExtractedFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Favorite;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Field;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FieldPK;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FilePrivate;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FinalMark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Folder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FolderGithub;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Function;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Gvariable;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HomeFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey IdeaModule;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey IdeaProject;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Include;
    field @Deprecated @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.ScheduledForRemoval public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InspectionResults;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Interface;
    field @Deprecated @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.ScheduledForRemoval public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey J2eeParameter;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JarDirectory;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JavaDocFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JavaModule;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JunitTestMark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey KeymapAnt;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey KeymapEditor;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey KeymapMainMenu;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey KeymapOther;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey KeymapTools;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Lambda;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Library;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Locked;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LogFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Method;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MethodReference;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Mnemonic;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ModelClass;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Models;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Module;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Module8x8;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ModuleGroup;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MultipleTypeDefinitions;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NativeLibrariesFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NewParameter;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NodePlaceholder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NotFavoriteOnHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ObjectTypeAttribute;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Package;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PackageLocal;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Padlock;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Parameter;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Plugin;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PluginJB;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PluginRestart;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Pluginnotinstalled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Pluginobsolete;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PpInvalid;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PpJar;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PpJdk;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PpLib;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PpLibFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PpWeb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Private;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProcessMark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Project;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Property;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PropertyRead;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PropertyReadStatic;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PropertyReadWrite;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PropertyReadWriteStatic;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PropertyWrite;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PropertyWriteStatic;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Protected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Public;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ReadAccess;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Record;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Related;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ResourceBundle;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RunnableMark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RwAccess;
    field @Deprecated @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rw_access;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SecurityRole;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Services;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Servlet;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Shared;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SortBySeverity;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Static;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StaticMark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Symlink;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TabAlert;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TabPin;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Tag;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Target;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Template;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Test;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestGroup;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestIgnored;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestSourceFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TextArea;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Toolbox;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Type;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Undeploy;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Unknown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey UnknownJdk;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey UnloadedProject;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey UpFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey UpLevel;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Variable;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WarningIntroduction;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WarningMark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WebFolder;
    field @Deprecated @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.ScheduledForRemoval public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Weblistener;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Word;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Workspace;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WriteAccess;
  }

  @SuppressCompatibility public static final class AllIconsKeys.ObjectBrowser {
    ctor public AllIconsKeys.ObjectBrowser();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AbbreviatePackageNames;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CompactEmptyPackages;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FlattenModules;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FlattenPackages;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowLibraryContents;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowMembers;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SortByType;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Sorted;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SortedByUsage;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey VisibilitySort;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Plugins {
    ctor public AllIconsKeys.Plugins();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Disabled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Downloads;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ModifierInvalid;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PluginLogo;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PluginLogoDisabled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rating;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Updated;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Process {
    ctor public AllIconsKeys.Process();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProgressPause;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProgressPauseHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProgressPauseSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProgressPauseSmallHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProgressResume;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProgressResumeHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProgressResumeSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProgressResumeSmallHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_1;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_2;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_3;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_4;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_5;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_6;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_7;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_8;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_mask;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_passive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Stop;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StopHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StopSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey StopSmallHovered;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Process.Big {
    ctor public AllIconsKeys.Process.Big();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_1;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_2;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_3;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_4;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_5;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_6;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_7;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_8;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_passive;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Process.FS {
    ctor public AllIconsKeys.Process.FS();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_1;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_10;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_11;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_12;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_13;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_14;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_15;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_16;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_17;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_18;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_2;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_3;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_4;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_5;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_6;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_7;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_8;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_9;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_mask;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Step_passive;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Profiler {
    ctor public AllIconsKeys.Profiler();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CollapseNode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExpandNode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Rec;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Providers {
    ctor public AllIconsKeys.Providers();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ActiveMQ;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Apache;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ApacheDerby;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ApacheIgnite;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ApachePhoenix;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Athena;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Aws;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Azure;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BigQuery;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Cassandra;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ClickHouse;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CockroachDB;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Couchbase;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DB2;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Databricks;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Denodo;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DocumentDB;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DuckDB;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey DynamoDB;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Eclipse;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Elasticsearch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Exasol;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Firebird;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GaussDB;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GeminiDb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey GoogleCloudSpanner;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Greenplum;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey H2;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HANA;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Hive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Hsqldb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Ibm;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Impala;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InfluxDB;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Informix;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey IntersystemCache;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Kafka;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Liquibase;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Mariadb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Microsoft;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MimerSQL;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MongoDB;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Mysql;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Netezza;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Openedge;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Oracle;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Postgresql;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Presto;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RabbitMQ;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Redis;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Redshift;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Singlestore;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Snowflake;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Spark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SqlServer;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Sqlite;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Sun;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Sybase;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Tair;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Tarantool;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TaurusDB;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Teradata;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Tibero;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Tidb;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Trino;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Turso;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Vertica;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Yugabyte;
  }

  @SuppressCompatibility public static final class AllIconsKeys.RemoteServers {
    ctor public AllIconsKeys.RemoteServers();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ResumeScaled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SuspendScaled;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Run {
    ctor public AllIconsKeys.Run();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Restart;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowIgnored;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Stop;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Run.Widget {
    ctor public AllIconsKeys.Run.Widget();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Build;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Restart;
  }

  @SuppressCompatibility public static final class AllIconsKeys.RunConfigurations {
    ctor public AllIconsKeys.RunConfigurations();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Applet;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Application;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Compound;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HidePassed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey IgnoredTest;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InvalidConfigurationLayer;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Junit;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MultiLaunch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Remote;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RemoteDebug;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RerunFailedTests;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Scroll_down;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Scroll_up;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowIgnored;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowPassed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SortbyDuration;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestCustom;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestError;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestFailed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestIgnored;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestMark;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestNotRan;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestPassed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestPassedIgnored;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestPaused;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestSkipped;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestTerminated;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TestUnknown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Tomcat;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolbarError;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolbarFailed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolbarPassed;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolbarPassedIgnored;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolbarSkipped;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolbarTerminated;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey TrackCoverage;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Web_app;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Wsl;
  }

  @SuppressCompatibility public static final class AllIconsKeys.RunConfigurations.TestState {
    ctor public AllIconsKeys.RunConfigurations.TestState();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Green2;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Red2;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Run;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Run_run;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Yellow2;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Scope {
    ctor public AllIconsKeys.Scope();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ChangedFiles;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ChangedFilesAll;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Problems;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Production;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Scratches;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Tests;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Status {
    ctor public AllIconsKeys.Status();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FailedInProgress;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Success;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Survey {
    ctor public AllIconsKeys.Survey();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Dissatisfied;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Neutral;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Satisfied;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey VeryDissatisfied;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey VerySatisfied;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Table {
    ctor public AllIconsKeys.Table();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Pagination;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Toolbar {
    ctor public AllIconsKeys.Toolbar();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddSlot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Collapse;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Expand;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Filterdups;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Locale;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Pin;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RemoveSlot;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Unknown;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Xcode;
  }

  @SuppressCompatibility public static final class AllIconsKeys.ToolbarDecorator {
    ctor public AllIconsKeys.ToolbarDecorator();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddBlankLine;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddClass;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddFolder;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddIcon;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddJira;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddLink;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddPattern;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddRemoteDatasource;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey AddYouTrack;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Export;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ExportSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Import;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Toolwindows {
    ctor public AllIconsKeys.Toolwindows();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Changes;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Dependencies;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Documentation;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ErrorEvents;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey InfoEvents;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Learn;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MeetNewUi;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NoEvents;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Notifications;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NotificationsNew;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey NotificationsNewImportant;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Problems;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ProblemsEmpty;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Repositories;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey SettingSync;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Task;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowAnalyzeDataflow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowAnt;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowAskAI;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowBookmarks;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowBuild;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowChanges;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowCommander;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowCommit;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowComponents;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowCoverage;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowDataView;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowDebugger;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowDevMode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowDuplicates;
    field @Deprecated @SuppressCompatibility @org.jetbrains.annotations.ApiStatus.ScheduledForRemoval public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowFavorites;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowFind;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowHierarchy;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowInspection;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowInternal;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowJsonPath;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowMessages;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowModuleDependencies;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowOverflow;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowPalette;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowProblems;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowProblemsEmpty;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowProfiler;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowProfilerAndroid;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowProject;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowRun;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowRunWithCoverage;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowServer;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowServices;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowStructure;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowTodo;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ToolWindowVariableView;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WarningEvents;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WebToolWindow;
  }

  @SuppressCompatibility public static final class AllIconsKeys.TransferSettings {
    ctor public AllIconsKeys.TransferSettings();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Keymap;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PluginsAndFeatures;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RecentProjects;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Resharper;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Settings;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey VS;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Vscode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Vsmac;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Xcode;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Ultimate {
    ctor public AllIconsKeys.Ultimate();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey IdeaUltimatePromo;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Lock;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey LockWhite;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PycharmLock;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey PycharmPromo;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Vcs {
    ctor public AllIconsKeys.Vcs();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Abort;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Arrow_left;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Arrow_right;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Author;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Branch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey BranchNode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Changelist;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Clone;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CommitNode;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Equal;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Fetch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Fetch_20x20;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Folders;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FromVCSDialog;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey History;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HistoryInline;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HistoryInlineHovered;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Ignore_file;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Merge;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Not_equal;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Patch;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Patch_applied;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Patch_file;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Push;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Push_20x20;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Remove;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShelveSilent;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey ShowUnversionedFiles;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Unshelve;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey UnshelveSilent;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Update_20x20;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Vcs.Vendors {
    ctor public AllIconsKeys.Vcs.Vendors();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Github;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Webreferences {
    ctor public AllIconsKeys.Webreferences();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MessageQueue;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Openapi;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Server;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey WebSocket;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Welcome {
    ctor public AllIconsKeys.Welcome();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CreateNewProjectTab;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CreateNewProjectTabSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FromVCSTab;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FromVCSTabSelected;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Open;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey OpenSelected;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Welcome.LearnTab {
    ctor public AllIconsKeys.Welcome.LearnTab();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey JetBrainsAcademy;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Welcome.RecentProjects {
    ctor public AllIconsKeys.Welcome.RecentProjects();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RemoteProject;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Remove;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RemoveDisabled;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RemoveDisabledHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RemoveHover;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Windows {
    ctor public AllIconsKeys.Windows();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Close;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseActive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseHover;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CloseSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Collapse;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Help;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HelpButton;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HelpButtonInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey HelpInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Maximize;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MaximizeInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MaximizeSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Minimize;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MinimizeInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey MinimizeSmall;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Restore;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestoreInactive;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey RestoreSmall;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Windows.Mouse {
    ctor public AllIconsKeys.Windows.Mouse();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CursorPointingHand;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey CursorText;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Xml {
    ctor public AllIconsKeys.Xml();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Css_class;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Html5;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Html_id;
  }

  @SuppressCompatibility public static final class AllIconsKeys.Xml.Browsers {
    ctor public AllIconsKeys.Xml.Browsers();
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Canary;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Chrome;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Chromium;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Edge;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Explorer;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Firefox;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey FirefoxDeveloper;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Nwjs;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Opera;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Safari;
    field @SuppressCompatibility public static final org.jetbrains.jewel.ui.icon.IntelliJIconKey Yandex;
  }

}

package org.jetbrains.jewel.ui.painter {

  public final class BadgePainter extends org.jetbrains.jewel.ui.painter.DelegatePainter {
    ctor @KotlinOnly public BadgePainter(androidx.compose.ui.graphics.painter.Painter source, androidx.compose.ui.graphics.Color color, org.jetbrains.jewel.ui.painter.badge.BadgeShape shape);
  }

  @androidx.compose.runtime.Immutable public interface BitmapPainterHint extends org.jetbrains.jewel.ui.painter.PainterHint {
  }

  public final class CommonPainterHintsProvider implements org.jetbrains.jewel.ui.painter.PainterHintsProvider {
    method @androidx.compose.runtime.Composable public java.util.List<org.jetbrains.jewel.ui.painter.PainterHint> hints(String path);
    field public static final org.jetbrains.jewel.ui.painter.CommonPainterHintsProvider INSTANCE;
  }

  public class DelegatePainter extends androidx.compose.ui.graphics.painter.Painter {
    ctor public DelegatePainter(androidx.compose.ui.graphics.painter.Painter delegate);
    method protected final void drawDelegate(androidx.compose.ui.graphics.drawscope.DrawScope);
    method protected final float getAlpha();
    method protected final androidx.compose.ui.graphics.ColorFilter? getFilter();
    method protected final androidx.compose.ui.unit.LayoutDirection getLayoutDirection();
    method protected void onDraw(androidx.compose.ui.graphics.drawscope.DrawScope);
    method protected final void setAlpha(float);
    method protected final void setFilter(androidx.compose.ui.graphics.ColorFilter?);
    method protected final void setLayoutDirection(androidx.compose.ui.unit.LayoutDirection);
    property protected final float alpha;
    property protected final androidx.compose.ui.graphics.ColorFilter? filter;
    property public androidx.compose.ui.geometry.Size intrinsicSize;
    property protected final androidx.compose.ui.unit.LayoutDirection layoutDirection;
  }

  @androidx.compose.runtime.Immutable public sealed interface PainterHint {
    method public default boolean canApply(org.jetbrains.jewel.ui.painter.PainterProviderScope);
    field public static final org.jetbrains.jewel.ui.painter.PainterHint.None None;
  }

  public static final class PainterHint.None implements org.jetbrains.jewel.ui.painter.PainterHint {
  }

  @androidx.compose.runtime.Immutable public interface PainterHintsProvider {
    method @androidx.compose.runtime.Composable public java.util.List<org.jetbrains.jewel.ui.painter.PainterHint> hints(String path);
    method @androidx.compose.runtime.Composable public default java.util.List<org.jetbrains.jewel.ui.painter.PainterHint> priorityHints(String path);
  }

  public final class PainterHintsProviderKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.painter.PainterHintsProvider> getLocalPainterHintsProvider();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<org.jetbrains.jewel.ui.painter.PainterHintsProvider> LocalPainterHintsProvider;
  }

  @androidx.compose.runtime.Immutable public interface PainterPathHint extends org.jetbrains.jewel.ui.painter.PainterHint {
    method public String patch(org.jetbrains.jewel.ui.painter.PainterProviderScope);
  }

  @androidx.compose.runtime.Immutable public abstract class PainterPrefixHint implements org.jetbrains.jewel.ui.painter.PainterPathHint {
    ctor public PainterPrefixHint();
    method public String patch(org.jetbrains.jewel.ui.painter.PainterProviderScope);
    method public abstract String prefix(org.jetbrains.jewel.ui.painter.PainterProviderScope);
  }

  public interface PainterProvider {
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.painter.Painter> getPainter(org.jetbrains.jewel.ui.painter.PainterHint... hints);
  }

  public interface PainterProviderScope extends androidx.compose.ui.unit.Density {
    method public java.util.List<org.jetbrains.jewel.ui.painter.PainterHint> getAcceptedHints();
    method public String getPath();
    method public String getRawPath();
    property public abstract java.util.List<org.jetbrains.jewel.ui.painter.PainterHint> acceptedHints;
    property public abstract String path;
    property public abstract String rawPath;
  }

  @androidx.compose.runtime.Immutable public abstract class PainterSuffixHint implements org.jetbrains.jewel.ui.painter.PainterPathHint {
    ctor public PainterSuffixHint();
    method public String patch(org.jetbrains.jewel.ui.painter.PainterProviderScope);
    method public abstract String suffix(org.jetbrains.jewel.ui.painter.PainterProviderScope);
  }

  @androidx.compose.runtime.Immutable public interface PainterSvgPatchHint extends org.jetbrains.jewel.ui.painter.SvgPainterHint {
    method public void patch(org.jetbrains.jewel.ui.painter.PainterProviderScope, org.w3c.dom.Element element);
  }

  @androidx.compose.runtime.Immutable public interface PainterWrapperHint extends org.jetbrains.jewel.ui.painter.PainterHint {
    method public androidx.compose.ui.graphics.painter.Painter wrap(org.jetbrains.jewel.ui.painter.PainterProviderScope, androidx.compose.ui.graphics.painter.Painter painter);
  }

  public abstract class PalettePainterHintsProvider implements org.jetbrains.jewel.ui.painter.PainterHintsProvider {
    ctor public PalettePainterHintsProvider(boolean isDark, java.util.Map<java.lang.String,java.lang.String?> intellijIconPalette, java.util.Map<java.lang.String,java.lang.String?> themeIconPalette, java.util.Map<java.lang.String,androidx.compose.ui.graphics.Color?> themeColorPalette);
    method protected abstract org.jetbrains.jewel.ui.painter.PainterHint getCheckBoxByColorPaletteHint();
    method protected abstract org.jetbrains.jewel.ui.painter.PainterHint getCheckBoxByKeyPaletteHint();
    method protected final java.util.Map<java.lang.String,java.lang.String?> getIntellijIconPalette();
    method protected final org.jetbrains.jewel.ui.painter.PainterHint getPaletteHint(String path, boolean isNewUi);
    method protected final java.util.Map<java.lang.String,androidx.compose.ui.graphics.Color?> getThemeColorPalette();
    method protected final java.util.Map<java.lang.String,java.lang.String?> getThemeIconPalette();
    method protected abstract org.jetbrains.jewel.ui.painter.PainterHint getTreePaletteHint();
    method protected abstract org.jetbrains.jewel.ui.painter.PainterHint getUiPaletteHint();
    method protected final boolean isDark();
    method protected final androidx.compose.ui.graphics.Color? resolveColor(String value);
    method protected final androidx.compose.ui.graphics.Color? resolveKeyColor(String key, java.util.Map<java.lang.String,java.lang.String?> keyPalette, boolean isDark);
    method protected final java.util.Map<androidx.compose.ui.graphics.Color,androidx.compose.ui.graphics.Color>? selectMap(String key, java.util.Map<androidx.compose.ui.graphics.Color,androidx.compose.ui.graphics.Color> checkboxes, java.util.Map<androidx.compose.ui.graphics.Color,androidx.compose.ui.graphics.Color> trees, java.util.Map<androidx.compose.ui.graphics.Color,androidx.compose.ui.graphics.Color> ui);
    property protected abstract org.jetbrains.jewel.ui.painter.PainterHint checkBoxByColorPaletteHint;
    property protected abstract org.jetbrains.jewel.ui.painter.PainterHint checkBoxByKeyPaletteHint;
    property protected final java.util.Map<java.lang.String,java.lang.String?> intellijIconPalette;
    property protected final boolean isDark;
    property protected final java.util.Map<java.lang.String,androidx.compose.ui.graphics.Color?> themeColorPalette;
    property protected final java.util.Map<java.lang.String,java.lang.String?> themeIconPalette;
    property protected abstract org.jetbrains.jewel.ui.painter.PainterHint treePaletteHint;
    property protected abstract org.jetbrains.jewel.ui.painter.PainterHint uiPaletteHint;
  }

  public final class ResizedPainter extends org.jetbrains.jewel.ui.painter.DelegatePainter {
    ctor @KotlinOnly public ResizedPainter(androidx.compose.ui.graphics.painter.Painter delegate, androidx.compose.ui.geometry.Size size);
    property public androidx.compose.ui.geometry.Size intrinsicSize;
  }

  public final class ResourcePainterProvider implements org.jetbrains.jewel.ui.painter.PainterProvider {
    ctor public ResourcePainterProvider(String basePath, java.lang.ClassLoader... classLoaders);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.painter.Painter> getPainter(org.jetbrains.jewel.ui.painter.PainterHint... hints);
  }

  public final class ResourcePainterProviderKt {
    method @androidx.compose.runtime.Composable public static org.jetbrains.jewel.ui.painter.PainterProvider rememberResourcePainterProvider(String path, Class<? extends java.lang.Object?> iconClass);
    method @androidx.compose.runtime.Composable public static org.jetbrains.jewel.ui.painter.PainterProvider rememberResourcePainterProvider(org.jetbrains.jewel.ui.icon.IconKey iconKey, optional Class<? extends java.lang.Object?> iconClass);
  }

  public interface ResourcePainterProviderScope extends org.jetbrains.jewel.ui.painter.PainterProviderScope {
    method public java.util.Set<java.lang.ClassLoader> getClassLoaders();
    property public abstract java.util.Set<java.lang.ClassLoader> classLoaders;
  }

  @androidx.compose.runtime.Immutable public interface SvgPainterHint extends org.jetbrains.jewel.ui.painter.PainterHint {
  }

  @androidx.compose.runtime.Immutable public interface XmlPainterHint extends org.jetbrains.jewel.ui.painter.PainterHint {
  }

}

package org.jetbrains.jewel.ui.painter.badge {

  @androidx.compose.runtime.Immutable public interface BadgeShape extends androidx.compose.ui.graphics.Shape {
    method public androidx.compose.ui.graphics.Outline createHoleOutline(long size, androidx.compose.ui.unit.LayoutDirection layoutDirection, androidx.compose.ui.unit.Density density);
  }

  @androidx.compose.runtime.Immutable @org.jetbrains.jewel.foundation.GenerateDataFunctions public final class DotBadgeShape implements org.jetbrains.jewel.ui.painter.badge.BadgeShape {
    ctor public DotBadgeShape();
    ctor public DotBadgeShape(optional float x, optional float y, optional float radius, optional float border);
    method public androidx.compose.ui.graphics.Outline createHoleOutline(long size, androidx.compose.ui.unit.LayoutDirection layoutDirection, androidx.compose.ui.unit.Density density);
    method public androidx.compose.ui.graphics.Outline createOutline(long size, androidx.compose.ui.unit.LayoutDirection layoutDirection, androidx.compose.ui.unit.Density density);
    method public float getBorder();
    method public float getRadius();
    method public float getX();
    method public float getY();
    property public float border;
    property public float radius;
    property public float x;
    property public float y;
    field public static final org.jetbrains.jewel.ui.painter.badge.DotBadgeShape.Companion Companion;
  }

  public static final class DotBadgeShape.Companion {
    method public org.jetbrains.jewel.ui.painter.badge.DotBadgeShape getDefault();
    property public org.jetbrains.jewel.ui.painter.badge.DotBadgeShape Default;
  }

}

package org.jetbrains.jewel.ui.painter.hints {

  public final class BadgeKt {
    method public static org.jetbrains.jewel.ui.painter.PainterHint Badge(long color, optional org.jetbrains.jewel.ui.painter.badge.BadgeShape shape);
  }

  public final class ColorBasedPaletteReplacementKt {
    method public static org.jetbrains.jewel.ui.painter.PainterHint ColorBasedPaletteReplacement(java.util.Map<androidx.compose.ui.graphics.Color,androidx.compose.ui.graphics.Color> paletteMap);
  }

  public final class DarkAndStrokeKt {
    method public static org.jetbrains.jewel.ui.painter.PainterHint Dark(optional boolean isDark);
    method public static org.jetbrains.jewel.ui.painter.PainterHint Stroke(long color);
  }

  public final class HiDpiKt {
    method public static org.jetbrains.jewel.ui.painter.PainterHint HiDpi();
  }

  public final class KeyBasedPaletteReplacementKt {
    method public static org.jetbrains.jewel.ui.painter.PainterHint KeyBasedPaletteReplacement(java.util.Map<java.lang.String,androidx.compose.ui.graphics.Color> paletteMap);
  }

  public final class PathOverrideKt {
    method public static org.jetbrains.jewel.ui.painter.PainterHint PathOverride(java.util.Map<java.lang.String,java.lang.String> overrides);
  }

  public final class SelectedKt {
    method public static org.jetbrains.jewel.ui.painter.PainterHint Selected(optional boolean selected);
    method public static org.jetbrains.jewel.ui.painter.PainterHint Selected(org.jetbrains.jewel.foundation.state.SelectableComponentState state);
  }

  public final class SizeKt {
    method public static org.jetbrains.jewel.ui.painter.PainterHint Size(int size);
    method public static org.jetbrains.jewel.ui.painter.PainterHint Size(int width, int height);
  }

  public final class StatefulKt {
    method public static org.jetbrains.jewel.ui.painter.PainterHint Stateful(org.jetbrains.jewel.foundation.state.InteractiveComponentState state);
  }

}

package org.jetbrains.jewel.ui.theme {

  public final class JewelThemeKt {
    method @androidx.compose.runtime.Composable public static void BaseJewelTheme(org.jetbrains.jewel.foundation.theme.ThemeDefinition theme, org.jetbrains.jewel.ui.ComponentStyling styling, optional boolean swingCompatMode, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void BaseJewelTheme(org.jetbrains.jewel.foundation.theme.ThemeDefinition theme, org.jetbrains.jewel.ui.ComponentStyling styling, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.CheckboxStyle getCheckboxStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.ChipStyle getChipStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.CircularProgressStyle getCircularProgressStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.foundation.theme.ThemeColorPalette getColorPalette(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.ComboBoxStyle getComboBoxStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles getDefaultBannerStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.ButtonStyle getDefaultButtonStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SplitButtonStyle getDefaultSplitButtonStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.TabStyle getDefaultTabStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.DividerStyle getDividerStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.DropdownStyle getDropdownStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.TabStyle getEditorTabStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle getGroupHeaderStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle getHorizontalProgressBarStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.IconButtonStyle getIconButtonStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.foundation.theme.ThemeIconData getIconData(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.InlineBannerStyles getInlineBannerStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.LinkStyle getLinkStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.MenuStyle getMenuStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.ButtonStyle getOutlinedButtonStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SplitButtonStyle getOutlinedSplitButtonStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.PopupContainerStyle getPopupContainerStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.RadioButtonStyle getRadioButtonStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle getScrollbarStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle getSegmentedControlButtonStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle getSegmentedControlStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle getSelectableLazyColumnStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle getSimpleListItemStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SliderStyle getSliderStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.TextAreaStyle getTextAreaStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.TextFieldStyle getTextFieldStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.TooltipStyle getTooltipStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.LazyTreeStyle getTreeStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion);
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.CheckboxStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.checkboxStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.ChipStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.chipStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.CircularProgressStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.circularProgressStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.foundation.theme.ThemeColorPalette org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.colorPalette;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.ComboBoxStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.comboBoxStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.defaultBannerStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.ButtonStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.defaultButtonStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SplitButtonStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.defaultSplitButtonStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.TabStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.defaultTabStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.DividerStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.dividerStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.DropdownStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.dropdownStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.TabStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.editorTabStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.groupHeaderStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.horizontalProgressBarStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.IconButtonStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.iconButtonStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.foundation.theme.ThemeIconData org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.iconData;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.InlineBannerStyles org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.inlineBannerStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.LinkStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.linkStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.MenuStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.menuStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.ButtonStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.outlinedButtonStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SplitButtonStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.outlinedSplitButtonStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.PopupContainerStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.popupContainerStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.RadioButtonStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.radioButtonStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.scrollbarStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.segmentedControlButtonStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.segmentedControlStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.selectableLazyColumnStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.simpleListItemStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.SliderStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.sliderStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.TextAreaStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.textAreaStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.TextFieldStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.textFieldStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.TooltipStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.tooltipStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static org.jetbrains.jewel.ui.component.styling.LazyTreeStyle org.jetbrains.jewel.foundation.theme.JewelTheme.Companion.treeStyle;
  }

}

package org.jetbrains.jewel.ui.util {

  public final class ColorExtensionsKt {
    method public static androidx.compose.ui.graphics.Color? fromArgbHexStringOrNull(androidx.compose.ui.graphics.Color.Companion, String argb);
    method @Deprecated public static androidx.compose.ui.graphics.Color? fromRGBAHexStringOrNull(androidx.compose.ui.graphics.Color.Companion, String rgba);
    method public static androidx.compose.ui.graphics.Color? fromRgbaHexStringOrNull(androidx.compose.ui.graphics.Color.Companion, String rgba);
    method public static boolean isDark(long);
    method public static String toArgbHexString(java.awt.Color, optional boolean includeHashSymbol, optional boolean omitAlphaWhenFullyOpaque);
    method public static String toArgbHexString(long, optional boolean includeHashSymbol, optional boolean omitAlphaWhenFullyOpaque);
    method @Deprecated public static String toRgbaHexString(java.awt.Color);
    method public static String toRgbaHexString(java.awt.Color, optional boolean includeHashSymbol, optional boolean omitAlphaWhenFullyOpaque);
    method @Deprecated public static String toRgbaHexString(long);
    method public static String toRgbaHexString(long, optional boolean includeHashSymbol, optional boolean omitAlphaWhenFullyOpaque);
  }

  public final class ModifierExtensionsKt {
    method @Deprecated @org.jetbrains.annotations.ApiStatus.ScheduledForRemoval(inVersion="2025.2") public static inline androidx.compose.ui.Modifier thenIf(androidx.compose.ui.Modifier, boolean precondition, kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier,? extends androidx.compose.ui.Modifier> action);
  }

}

