// Signature format: 4.0
package org.jetbrains.jewel.intui.core.theme {

  public final class IntUiDarkTheme implements org.jetbrains.jewel.foundation.theme.ThemeDescriptor {
    method public org.jetbrains.jewel.foundation.theme.ThemeColorPalette getColors();
    method public org.jetbrains.jewel.foundation.theme.ThemeIconData getIconData();
    method public String getName();
    method public boolean isDark();
    property public org.jetbrains.jewel.foundation.theme.ThemeColorPalette colors;
    property public org.jetbrains.jewel.foundation.theme.ThemeIconData iconData;
    property public boolean isDark;
    property public String name;
    field public static final org.jetbrains.jewel.intui.core.theme.IntUiDarkTheme INSTANCE;
  }

  public final class IntUiLightTheme implements org.jetbrains.jewel.foundation.theme.ThemeDescriptor {
    method public org.jetbrains.jewel.foundation.theme.ThemeColorPalette getColors();
    method public org.jetbrains.jewel.foundation.theme.ThemeIconData getIconData();
    method public String getName();
    method public boolean isDark();
    property public org.jetbrains.jewel.foundation.theme.ThemeColorPalette colors;
    property public org.jetbrains.jewel.foundation.theme.ThemeIconData iconData;
    property public boolean isDark;
    property public String name;
    field public static final org.jetbrains.jewel.intui.core.theme.IntUiLightTheme INSTANCE;
  }

}

package org.jetbrains.jewel.intui.standalone {

  public final class IntUiTypography implements org.jetbrains.jewel.ui.Typography {
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getConsoleTextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getEditorTextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getH0TextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getH1TextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getH2TextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getH3TextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getH4TextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getLabelTextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getMedium();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getRegular();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle getSmall();
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle consoleTextStyle;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle editorTextStyle;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle h0TextStyle;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle h1TextStyle;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle h2TextStyle;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle h3TextStyle;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle h4TextStyle;
    property public androidx.compose.ui.unit.TextUnit labelTextSize;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle labelTextStyle;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle medium;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle regular;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle small;
    field public static final org.jetbrains.jewel.intui.standalone.IntUiTypography INSTANCE;
  }

  public final class InterFontKt {
    method public static androidx.compose.ui.text.font.FontFamily getInter(androidx.compose.ui.text.font.FontFamily.Companion);
    property public static androidx.compose.ui.text.font.FontFamily androidx.compose.ui.text.font.FontFamily.Companion.Inter;
  }

  public final class JetBrainsMonoFontKt {
    method public static androidx.compose.ui.text.font.FontFamily getJetBrainsMono(androidx.compose.ui.text.font.FontFamily.Companion);
    property public static androidx.compose.ui.text.font.FontFamily androidx.compose.ui.text.font.FontFamily.Companion.JetBrainsMono;
  }

  public final class PainterProviderKt {
    method @Deprecated public static org.jetbrains.jewel.ui.painter.ResourcePainterProvider standalonePainterProvider(String path);
  }

  public final class StandalonePainterHintsProvider extends org.jetbrains.jewel.ui.painter.PalettePainterHintsProvider {
    ctor public StandalonePainterHintsProvider(org.jetbrains.jewel.foundation.theme.ThemeDefinition theme);
    method protected org.jetbrains.jewel.ui.painter.PainterHint getCheckBoxByColorPaletteHint();
    method protected org.jetbrains.jewel.ui.painter.PainterHint getCheckBoxByKeyPaletteHint();
    method protected org.jetbrains.jewel.ui.painter.PainterHint getTreePaletteHint();
    method protected org.jetbrains.jewel.ui.painter.PainterHint getUiPaletteHint();
    method @androidx.compose.runtime.Composable public java.util.List<org.jetbrains.jewel.ui.painter.PainterHint> hints(String path);
    property protected org.jetbrains.jewel.ui.painter.PainterHint checkBoxByColorPaletteHint;
    property protected org.jetbrains.jewel.ui.painter.PainterHint checkBoxByKeyPaletteHint;
    property protected org.jetbrains.jewel.ui.painter.PainterHint treePaletteHint;
    property protected org.jetbrains.jewel.ui.painter.PainterHint uiPaletteHint;
    field public static final org.jetbrains.jewel.intui.standalone.StandalonePainterHintsProvider.Companion Companion;
  }

  public static final class StandalonePainterHintsProvider.Companion {
  }

}

package org.jetbrains.jewel.intui.standalone.styling {

  public final class IntUIBannerStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.BannerMetrics default(org.jetbrains.jewel.ui.component.styling.BannerMetrics.Companion, optional float borderWidth);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultBannerStylesFactory getDefault(org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiInlineBannerStylesFactory getDefault(org.jetbrains.jewel.ui.component.styling.InlineBannerStyles.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiErrorBannerColorFactory getError(org.jetbrains.jewel.ui.component.styling.BannerColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultErrorBannerStyleFactory getError(org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiInlineErrorBannerStyleFactory getError(org.jetbrains.jewel.ui.component.styling.InlineBannerStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiInformationBannerColorFactory getInformation(org.jetbrains.jewel.ui.component.styling.BannerColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultInformationBannerStyleFactory getInformation(org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiInlineInformationBannerStyleFactory getInformation(org.jetbrains.jewel.ui.component.styling.InlineBannerStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiSuccessBannerColorFactory getSuccess(org.jetbrains.jewel.ui.component.styling.BannerColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultSuccessBannerStyleFactory getSuccess(org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiInlineSuccessBannerStyleFactory getSuccess(org.jetbrains.jewel.ui.component.styling.InlineBannerStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiWarningBannerColorFactory getWarning(org.jetbrains.jewel.ui.component.styling.BannerColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultWarningBannerStyleFactory getWarning(org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiInlineWarningBannerStyleFactory getWarning(org.jetbrains.jewel.ui.component.styling.InlineBannerStyle.Companion);
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultBannerStylesFactory org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiInlineBannerStylesFactory org.jetbrains.jewel.ui.component.styling.InlineBannerStyles.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultErrorBannerStyleFactory org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle.Companion.Error;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiErrorBannerColorFactory org.jetbrains.jewel.ui.component.styling.BannerColors.Companion.Error;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiInlineErrorBannerStyleFactory org.jetbrains.jewel.ui.component.styling.InlineBannerStyle.Companion.Error;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultInformationBannerStyleFactory org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle.Companion.Information;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiInformationBannerColorFactory org.jetbrains.jewel.ui.component.styling.BannerColors.Companion.Information;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiInlineInformationBannerStyleFactory org.jetbrains.jewel.ui.component.styling.InlineBannerStyle.Companion.Information;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultSuccessBannerStyleFactory org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle.Companion.Success;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiInlineSuccessBannerStyleFactory org.jetbrains.jewel.ui.component.styling.InlineBannerStyle.Companion.Success;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiSuccessBannerColorFactory org.jetbrains.jewel.ui.component.styling.BannerColors.Companion.Success;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultWarningBannerStyleFactory org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle.Companion.Warning;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiWarningBannerColorFactory org.jetbrains.jewel.ui.component.styling.BannerColors.Companion.Warning;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiInlineWarningBannerStyleFactory org.jetbrains.jewel.ui.component.styling.InlineBannerStyle.Companion.Warning;
  }

  public final class IntUiButtonStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.ButtonMetrics default(org.jetbrains.jewel.ui.component.styling.ButtonMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues padding, optional long minSize, optional float borderWidth, optional float focusOutlineExpand);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultButtonColorFactory getDefault(org.jetbrains.jewel.ui.component.styling.ButtonColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultButtonStyleFactory getDefault(org.jetbrains.jewel.ui.component.styling.ButtonStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiOutlinedButtonColorFactory getOutlined(org.jetbrains.jewel.ui.component.styling.ButtonColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiOutlinedButtonStyleFactory getOutlined(org.jetbrains.jewel.ui.component.styling.ButtonStyle.Companion);
    method public static org.jetbrains.jewel.ui.component.styling.ButtonMetrics outlined(org.jetbrains.jewel.ui.component.styling.ButtonMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues padding, optional long minSize, optional float borderWidth, optional float focusOutlineExpand);
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultButtonStyleFactory org.jetbrains.jewel.ui.component.styling.ButtonStyle.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultButtonColorFactory org.jetbrains.jewel.ui.component.styling.ButtonColors.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiOutlinedButtonStyleFactory org.jetbrains.jewel.ui.component.styling.ButtonStyle.Companion.Outlined;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiOutlinedButtonColorFactory org.jetbrains.jewel.ui.component.styling.ButtonColors.Companion.Outlined;
  }

  public final class IntUiCheckboxStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.CheckboxColors dark(org.jetbrains.jewel.ui.component.styling.CheckboxColors.Companion, optional long content, optional long contentDisabled, optional long contentSelected);
    method public static org.jetbrains.jewel.ui.component.styling.CheckboxIcons dark(org.jetbrains.jewel.ui.component.styling.CheckboxIcons.Companion, optional org.jetbrains.jewel.ui.icon.IconKey checkbox);
    method public static org.jetbrains.jewel.ui.component.styling.CheckboxStyle dark(org.jetbrains.jewel.ui.component.styling.CheckboxStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.CheckboxColors colors, optional org.jetbrains.jewel.ui.component.styling.CheckboxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.CheckboxIcons icons);
    method public static org.jetbrains.jewel.ui.component.styling.CheckboxMetrics defaults(org.jetbrains.jewel.ui.component.styling.CheckboxMetrics.Companion, optional long checkboxSize, optional androidx.compose.foundation.shape.CornerSize outlineCornerSize, optional androidx.compose.foundation.shape.CornerSize outlineFocusedCornerSize, optional androidx.compose.foundation.shape.CornerSize outlineSelectedCornerSize, optional androidx.compose.foundation.shape.CornerSize outlineSelectedFocusedCornerSize, optional long outlineSize, optional long outlineFocusedSize, optional long outlineSelectedSize, optional long outlineSelectedFocusedSize, optional float iconContentGap);
    method public static org.jetbrains.jewel.ui.component.styling.CheckboxColors light(org.jetbrains.jewel.ui.component.styling.CheckboxColors.Companion, optional long content, optional long contentDisabled, optional long contentSelected);
    method public static org.jetbrains.jewel.ui.component.styling.CheckboxIcons light(org.jetbrains.jewel.ui.component.styling.CheckboxIcons.Companion, optional org.jetbrains.jewel.ui.icon.IconKey checkbox);
    method public static org.jetbrains.jewel.ui.component.styling.CheckboxStyle light(org.jetbrains.jewel.ui.component.styling.CheckboxStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.CheckboxColors colors, optional org.jetbrains.jewel.ui.component.styling.CheckboxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.CheckboxIcons icons);
  }

  public final class IntUiChipStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.ChipColors dark(org.jetbrains.jewel.ui.component.styling.ChipColors.Companion, optional androidx.compose.ui.graphics.Brush background, optional androidx.compose.ui.graphics.Brush backgroundDisabled, optional androidx.compose.ui.graphics.Brush backgroundFocused, optional androidx.compose.ui.graphics.Brush backgroundPressed, optional androidx.compose.ui.graphics.Brush backgroundHovered, optional androidx.compose.ui.graphics.Brush backgroundSelected, optional androidx.compose.ui.graphics.Brush backgroundSelectedDisabled, optional androidx.compose.ui.graphics.Brush backgroundSelectedFocused, optional androidx.compose.ui.graphics.Brush backgroundSelectedPressed, optional androidx.compose.ui.graphics.Brush backgroundSelectedHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long contentSelected, optional long contentSelectedDisabled, optional long contentSelectedFocused, optional long contentSelectedPressed, optional long contentSelectedHovered, optional long border, optional long borderDisabled, optional long borderFocused, optional long borderPressed, optional long borderHovered, optional long borderSelected, optional long borderSelectedDisabled, optional long borderSelectedFocused, optional long borderSelectedPressed, optional long borderSelectedHovered);
    method public static org.jetbrains.jewel.ui.component.styling.ChipStyle dark(org.jetbrains.jewel.ui.component.styling.ChipStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.ChipColors colors, optional org.jetbrains.jewel.ui.component.styling.ChipMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.ChipMetrics defaults(org.jetbrains.jewel.ui.component.styling.ChipMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues padding, optional float borderWidth, optional float borderWidthSelected);
    method public static org.jetbrains.jewel.ui.component.styling.ChipColors light(org.jetbrains.jewel.ui.component.styling.ChipColors.Companion, optional androidx.compose.ui.graphics.Brush background, optional androidx.compose.ui.graphics.Brush backgroundDisabled, optional androidx.compose.ui.graphics.Brush backgroundFocused, optional androidx.compose.ui.graphics.Brush backgroundPressed, optional androidx.compose.ui.graphics.Brush backgroundHovered, optional androidx.compose.ui.graphics.Brush backgroundSelected, optional androidx.compose.ui.graphics.Brush backgroundSelectedDisabled, optional androidx.compose.ui.graphics.Brush backgroundSelectedFocused, optional androidx.compose.ui.graphics.Brush backgroundSelectedPressed, optional androidx.compose.ui.graphics.Brush backgroundSelectedHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long contentSelected, optional long contentSelectedDisabled, optional long contentSelectedFocused, optional long contentSelectedPressed, optional long contentSelectedHovered, optional long border, optional long borderDisabled, optional long borderFocused, optional long borderPressed, optional long borderHovered, optional long borderSelected, optional long borderSelectedDisabled, optional long borderSelectedFocused, optional long borderSelectedPressed, optional long borderSelectedHovered);
    method public static org.jetbrains.jewel.ui.component.styling.ChipStyle light(org.jetbrains.jewel.ui.component.styling.ChipStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.ChipColors colors, optional org.jetbrains.jewel.ui.component.styling.ChipMetrics metrics);
  }

  public final class IntUiCircularProgressStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.CircularProgressStyle dark(org.jetbrains.jewel.ui.component.styling.CircularProgressStyle.Companion, optional long frameTime, optional long color);
    method public static org.jetbrains.jewel.ui.component.styling.CircularProgressStyle light(org.jetbrains.jewel.ui.component.styling.CircularProgressStyle.Companion, optional long frameTime, optional long color);
  }

  public final class IntUiComboBoxStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics default(org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics.Companion, optional long arrowAreaSize, optional long minSize, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.layout.PaddingValues popupContentPadding, optional float borderWidth, optional float maxPopupHeight);
    method public static org.jetbrains.jewel.ui.component.styling.ComboBoxIcons defaults(org.jetbrains.jewel.ui.component.styling.ComboBoxIcons.Companion, optional org.jetbrains.jewel.ui.icon.IconKey chevronDown);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultComboBoxColorsFactory getDefault(org.jetbrains.jewel.ui.component.styling.ComboBoxColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultComboBoxStyleFactory getDefault(org.jetbrains.jewel.ui.component.styling.ComboBoxStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedComboBoxColorsFactory getUndecorated(org.jetbrains.jewel.ui.component.styling.ComboBoxColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedComboBoxStyleFactory getUndecorated(org.jetbrains.jewel.ui.component.styling.ComboBoxStyle.Companion);
    method public static org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics undecorated(org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics.Companion, optional long arrowAreaSize, optional long minSize, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.layout.PaddingValues popupContentPadding, optional float borderWidth, optional float maxPopupHeight);
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultComboBoxStyleFactory org.jetbrains.jewel.ui.component.styling.ComboBoxStyle.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultComboBoxColorsFactory org.jetbrains.jewel.ui.component.styling.ComboBoxColors.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedComboBoxStyleFactory org.jetbrains.jewel.ui.component.styling.ComboBoxStyle.Companion.Undecorated;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedComboBoxColorsFactory org.jetbrains.jewel.ui.component.styling.ComboBoxColors.Companion.Undecorated;
  }

  public final class IntUiDefaultBannerStylesFactory {
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles dark(optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle information, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle success, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle warning, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle error);
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles light(optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle information, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle success, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle warning, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle error);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultBannerStylesFactory INSTANCE;
  }

  public final class IntUiDefaultButtonColorFactory {
    method public org.jetbrains.jewel.ui.component.styling.ButtonColors dark(optional androidx.compose.ui.graphics.Brush background, optional androidx.compose.ui.graphics.Brush backgroundDisabled, optional androidx.compose.ui.graphics.Brush backgroundFocused, optional androidx.compose.ui.graphics.Brush backgroundPressed, optional androidx.compose.ui.graphics.Brush backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional androidx.compose.ui.graphics.Brush border, optional androidx.compose.ui.graphics.Brush borderDisabled, optional androidx.compose.ui.graphics.Brush borderFocused, optional androidx.compose.ui.graphics.Brush borderPressed, optional androidx.compose.ui.graphics.Brush borderHovered);
    method public org.jetbrains.jewel.ui.component.styling.ButtonColors light(optional androidx.compose.ui.graphics.Brush background, optional androidx.compose.ui.graphics.Brush backgroundDisabled, optional androidx.compose.ui.graphics.Brush backgroundFocused, optional androidx.compose.ui.graphics.Brush backgroundPressed, optional androidx.compose.ui.graphics.Brush backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional androidx.compose.ui.graphics.Brush border, optional androidx.compose.ui.graphics.Brush borderDisabled, optional androidx.compose.ui.graphics.Brush borderFocused, optional androidx.compose.ui.graphics.Brush borderPressed, optional androidx.compose.ui.graphics.Brush borderHovered);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultButtonColorFactory INSTANCE;
  }

  public final class IntUiDefaultButtonStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.ButtonStyle dark(optional org.jetbrains.jewel.ui.component.styling.ButtonColors colors, optional org.jetbrains.jewel.ui.component.styling.ButtonMetrics metrics, optional org.jetbrains.jewel.foundation.Stroke.Alignment focusOutlineAlignment);
    method public org.jetbrains.jewel.ui.component.styling.ButtonStyle light(optional org.jetbrains.jewel.ui.component.styling.ButtonColors colors, optional org.jetbrains.jewel.ui.component.styling.ButtonMetrics metrics, optional org.jetbrains.jewel.foundation.Stroke.Alignment focusOutlineAlignment);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultButtonStyleFactory INSTANCE;
  }

  public final class IntUiDefaultComboBoxColorsFactory {
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxColors dark(optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long nonEditableBackground, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long border, optional long borderDisabled, optional long borderFocused, optional long borderPressed, optional long borderHovered);
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxColors light(optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long nonEditableBackground, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long border, optional long borderDisabled, optional long borderFocused, optional long borderPressed, optional long borderHovered);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultComboBoxColorsFactory INSTANCE;
  }

  public final class IntUiDefaultComboBoxStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxStyle dark(optional org.jetbrains.jewel.ui.component.styling.ComboBoxColors colors, optional org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.ComboBoxIcons icons);
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxStyle light(optional org.jetbrains.jewel.ui.component.styling.ComboBoxColors colors, optional org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.ComboBoxIcons icons);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultComboBoxStyleFactory INSTANCE;
  }

  public final class IntUiDefaultDropdownColorsFactory {
    method public org.jetbrains.jewel.ui.component.styling.DropdownColors dark(optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long border, optional long borderDisabled, optional long borderFocused, optional long borderPressed, optional long borderHovered, optional long iconTint, optional long iconTintDisabled, optional long iconTintFocused, optional long iconTintPressed, optional long iconTintHovered);
    method public org.jetbrains.jewel.ui.component.styling.DropdownColors light(optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long border, optional long borderDisabled, optional long borderFocused, optional long borderPressed, optional long borderHovered, optional long iconTint, optional long iconTintDisabled, optional long iconTintFocused, optional long iconTintPressed, optional long iconTintHovered);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultDropdownColorsFactory INSTANCE;
  }

  public final class IntUiDefaultDropdownStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.DropdownStyle dark(optional org.jetbrains.jewel.ui.component.styling.DropdownColors colors, optional org.jetbrains.jewel.ui.component.styling.DropdownMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.DropdownIcons icons, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle);
    method public org.jetbrains.jewel.ui.component.styling.DropdownStyle light(optional org.jetbrains.jewel.ui.component.styling.DropdownColors colors, optional org.jetbrains.jewel.ui.component.styling.DropdownMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.DropdownIcons icons, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultDropdownStyleFactory INSTANCE;
  }

  public final class IntUiDefaultErrorBannerStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle dark(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle light(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultErrorBannerStyleFactory INSTANCE;
  }

  public final class IntUiDefaultInformationBannerStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle dark(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle light(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultInformationBannerStyleFactory INSTANCE;
  }

  public final class IntUiDefaultSimpleListItemLazyTreeStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.SimpleListItemColors dark(optional long content, optional long contentActive, optional long contentSelected, optional long contentSelectedActive, optional long nodeBackground, optional long nodeBackgroundActive, optional long nodeBackgroundSelected, optional long nodeBackgroundSelectedActive);
    method public org.jetbrains.jewel.ui.component.styling.SimpleListItemColors light(optional long content, optional long contentActive, optional long contentSelected, optional long contentSelectedActive, optional long nodeBackground, optional long nodeBackgroundActive, optional long nodeBackgroundSelected, optional long nodeBackgroundSelectedActive);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultSimpleListItemLazyTreeStyleFactory INSTANCE;
  }

  public final class IntUiDefaultSplitButtonStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.SplitButtonStyle dark(optional org.jetbrains.jewel.ui.component.styling.ButtonStyle buttonStyle, optional org.jetbrains.jewel.ui.component.styling.DividerMetrics dividerMetrics, optional long dividerColor, optional long dividerDisabledColor, optional float dividerPadding, optional long chevronColor);
    method public org.jetbrains.jewel.ui.component.styling.SplitButtonStyle light(optional org.jetbrains.jewel.ui.component.styling.ButtonStyle buttonStyle, optional org.jetbrains.jewel.ui.component.styling.DividerMetrics dividerMetrics, optional long dividerColor, optional long dividerDisabledColor, optional float dividerPadding, optional long chevronColor);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultSplitButtonStyleFactory INSTANCE;
  }

  public final class IntUiDefaultSuccessBannerStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle dark(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle light(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultSuccessBannerStyleFactory INSTANCE;
  }

  public final class IntUiDefaultTabColorsFactory {
    method public org.jetbrains.jewel.ui.component.styling.TabColors dark(optional long background, optional long backgroundHovered, optional long backgroundPressed, optional long backgroundSelected, optional long backgroundDisabled, optional long content, optional long contentHovered, optional long contentDisabled, optional long contentPressed, optional long contentSelected, optional long underline, optional long underlineHovered, optional long underlineDisabled, optional long underlinePressed, optional long underlineSelected);
    method public org.jetbrains.jewel.ui.component.styling.TabColors light(optional long background, optional long backgroundHovered, optional long backgroundPressed, optional long backgroundSelected, optional long backgroundDisabled, optional long content, optional long contentHovered, optional long contentDisabled, optional long contentPressed, optional long contentSelected, optional long underline, optional long underlineHovered, optional long underlineDisabled, optional long underlinePressed, optional long underlineSelected);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultTabColorsFactory INSTANCE;
  }

  public final class IntUiDefaultTabStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.TabStyle dark(optional org.jetbrains.jewel.ui.component.styling.TabColors colors, optional org.jetbrains.jewel.ui.component.styling.TabMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TabIcons icons, optional org.jetbrains.jewel.ui.component.styling.TabContentAlpha contentAlpha, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle);
    method public org.jetbrains.jewel.ui.component.styling.TabStyle light(optional org.jetbrains.jewel.ui.component.styling.TabColors colors, optional org.jetbrains.jewel.ui.component.styling.TabMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TabIcons icons, optional org.jetbrains.jewel.ui.component.styling.TabContentAlpha contentAlpha, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultTabStyleFactory INSTANCE;
  }

  public final class IntUiDefaultWarningBannerStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle dark(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.DefaultBannerStyle light(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultWarningBannerStyleFactory INSTANCE;
  }

  public final class IntUiDividerStyleKt {
    method public static org.jetbrains.jewel.ui.component.styling.DividerStyle dark(org.jetbrains.jewel.ui.component.styling.DividerStyle.Companion, optional long color, optional org.jetbrains.jewel.ui.component.styling.DividerMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.DividerStyle light(org.jetbrains.jewel.ui.component.styling.DividerStyle.Companion, optional long color, optional org.jetbrains.jewel.ui.component.styling.DividerMetrics metrics);
  }

  public final class IntUiDropdownStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.DropdownMetrics default(org.jetbrains.jewel.ui.component.styling.DropdownMetrics.Companion, optional long arrowMinSize, optional long minSize, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional float borderWidth);
    method public static org.jetbrains.jewel.ui.component.styling.DropdownIcons defaults(org.jetbrains.jewel.ui.component.styling.DropdownIcons.Companion, optional org.jetbrains.jewel.ui.icon.IconKey chevronDown);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultDropdownColorsFactory getDefault(org.jetbrains.jewel.ui.component.styling.DropdownColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultDropdownStyleFactory getDefault(org.jetbrains.jewel.ui.component.styling.DropdownStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedDropdownColorsFactory getUndecorated(org.jetbrains.jewel.ui.component.styling.DropdownColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedDropdownStyleFactory getUndecorated(org.jetbrains.jewel.ui.component.styling.DropdownStyle.Companion);
    method public static org.jetbrains.jewel.ui.component.styling.DropdownMetrics undecorated(org.jetbrains.jewel.ui.component.styling.DropdownMetrics.Companion, optional long arrowMinSize, optional long minSize, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional float borderWidth);
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultDropdownStyleFactory org.jetbrains.jewel.ui.component.styling.DropdownStyle.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultDropdownColorsFactory org.jetbrains.jewel.ui.component.styling.DropdownColors.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedDropdownStyleFactory org.jetbrains.jewel.ui.component.styling.DropdownStyle.Companion.Undecorated;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedDropdownColorsFactory org.jetbrains.jewel.ui.component.styling.DropdownColors.Companion.Undecorated;
  }

  public final class IntUiEditorTabColorsFactory {
    method public org.jetbrains.jewel.ui.component.styling.TabColors dark(optional long background, optional long backgroundHovered, optional long backgroundPressed, optional long backgroundSelected, optional long backgroundDisabled, optional long content, optional long contentHovered, optional long contentDisabled, optional long contentPressed, optional long contentSelected, optional long underline, optional long underlineHovered, optional long underlineDisabled, optional long underlinePressed, optional long underlineSelected);
    method public org.jetbrains.jewel.ui.component.styling.TabColors light(optional long background, optional long backgroundHovered, optional long backgroundPressed, optional long backgroundSelected, optional long backgroundDisabled, optional long content, optional long contentHovered, optional long contentDisabled, optional long contentPressed, optional long contentSelected, optional long underline, optional long underlineHovered, optional long underlineDisabled, optional long underlinePressed, optional long underlineSelected);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiEditorTabColorsFactory INSTANCE;
  }

  public final class IntUiEditorTabStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.TabStyle dark(optional org.jetbrains.jewel.ui.component.styling.TabColors colors, optional org.jetbrains.jewel.ui.component.styling.TabMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TabIcons icons, optional org.jetbrains.jewel.ui.component.styling.TabContentAlpha contentAlpha, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle);
    method public org.jetbrains.jewel.ui.component.styling.TabStyle light(optional org.jetbrains.jewel.ui.component.styling.TabColors colors, optional org.jetbrains.jewel.ui.component.styling.TabMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TabIcons icons, optional org.jetbrains.jewel.ui.component.styling.TabContentAlpha contentAlpha, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiEditorTabStyleFactory INSTANCE;
  }

  public final class IntUiErrorBannerColorFactory {
    method public org.jetbrains.jewel.ui.component.styling.BannerColors dark(optional long background, optional long border);
    method public org.jetbrains.jewel.ui.component.styling.BannerColors light(optional long background, optional long border);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiErrorBannerColorFactory INSTANCE;
  }

  public final class IntUiGroupHeaderStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.GroupHeaderColors dark(org.jetbrains.jewel.ui.component.styling.GroupHeaderColors.Companion, optional long divider);
    method public static org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle dark(org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.GroupHeaderColors colors, optional org.jetbrains.jewel.ui.component.styling.GroupHeaderMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.GroupHeaderMetrics defaults(org.jetbrains.jewel.ui.component.styling.GroupHeaderMetrics.Companion, optional float dividerThickness, optional float indent);
    method public static org.jetbrains.jewel.ui.component.styling.GroupHeaderColors light(org.jetbrains.jewel.ui.component.styling.GroupHeaderColors.Companion, optional long divider);
    method public static org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle light(org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.GroupHeaderColors colors, optional org.jetbrains.jewel.ui.component.styling.GroupHeaderMetrics metrics);
  }

  public final class IntUiHorizontalProgressBarStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarColors dark(org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarColors.Companion, optional long track, optional long progress, optional long indeterminateBase, optional long indeterminateHighlight);
    method public static org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle dark(org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarColors colors, optional org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarMetrics metrics, optional long indeterminateCycleDuration);
    method public static org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarMetrics defaults(org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional float minHeight, optional float indeterminateHighlightWidth);
    method public static org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarColors light(org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarColors.Companion, optional long track, optional long progress, optional long indeterminateBase, optional long indeterminateHighlight);
    method public static org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle light(org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarColors colors, optional org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarMetrics metrics, optional long indeterminateCycleDuration);
  }

  public final class IntUiIconButtonStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.IconButtonColors dark(org.jetbrains.jewel.ui.component.styling.IconButtonColors.Companion, optional long foregroundSelectedActivated, optional long background, optional long backgroundDisabled, optional long backgroundSelected, optional long backgroundSelectedActivated, optional long backgroundPressed, optional long backgroundHovered, optional long backgroundFocused, optional long border, optional long borderDisabled, optional long borderSelected, optional long borderSelectedActivated, optional long borderFocused, optional long borderPressed, optional long borderHovered);
    method public static org.jetbrains.jewel.ui.component.styling.IconButtonStyle dark(org.jetbrains.jewel.ui.component.styling.IconButtonStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.IconButtonColors colors, optional org.jetbrains.jewel.ui.component.styling.IconButtonMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.IconButtonMetrics defaults(org.jetbrains.jewel.ui.component.styling.IconButtonMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional float borderWidth, optional androidx.compose.foundation.layout.PaddingValues padding, optional long minSize);
    method public static org.jetbrains.jewel.ui.component.styling.IconButtonColors light(org.jetbrains.jewel.ui.component.styling.IconButtonColors.Companion, optional long foregroundSelectedActivated, optional long background, optional long backgroundDisabled, optional long backgroundSelected, optional long backgroundSelectedActivated, optional long backgroundPressed, optional long backgroundHovered, optional long backgroundFocused, optional long border, optional long borderDisabled, optional long borderSelected, optional long borderSelectedActivated, optional long borderFocused, optional long borderPressed, optional long borderHovered);
    method public static org.jetbrains.jewel.ui.component.styling.IconButtonStyle light(org.jetbrains.jewel.ui.component.styling.IconButtonStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.IconButtonColors colors, optional org.jetbrains.jewel.ui.component.styling.IconButtonMetrics metrics);
  }

  public final class IntUiInformationBannerColorFactory {
    method public org.jetbrains.jewel.ui.component.styling.BannerColors dark(optional long background, optional long border);
    method public org.jetbrains.jewel.ui.component.styling.BannerColors light(optional long background, optional long border);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiInformationBannerColorFactory INSTANCE;
  }

  public final class IntUiInlineBannerStylesFactory {
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyles dark(optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle information, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle success, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle warning, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle error);
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyles light(optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle information, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle success, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle warning, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyle error);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiInlineBannerStylesFactory INSTANCE;
  }

  public final class IntUiInlineErrorBannerStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle dark(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle light(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiInlineErrorBannerStyleFactory INSTANCE;
  }

  public final class IntUiInlineInformationBannerStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle dark(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle light(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiInlineInformationBannerStyleFactory INSTANCE;
  }

  public final class IntUiInlineSuccessBannerStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle dark(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle light(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiInlineSuccessBannerStyleFactory INSTANCE;
  }

  public final class IntUiInlineWarningBannerStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle dark(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    method public org.jetbrains.jewel.ui.component.styling.InlineBannerStyle light(optional org.jetbrains.jewel.ui.component.styling.BannerColors colors, optional org.jetbrains.jewel.ui.component.styling.BannerMetrics metrics);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiInlineWarningBannerStyleFactory INSTANCE;
  }

  public final class IntUiLazyTreeStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.LazyTreeStyle dark(org.jetbrains.jewel.ui.component.styling.LazyTreeStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemColors colors, optional org.jetbrains.jewel.ui.component.styling.LazyTreeMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.LazyTreeIcons icons);
    method public static org.jetbrains.jewel.ui.component.styling.LazyTreeIcons defaults(org.jetbrains.jewel.ui.component.styling.LazyTreeIcons.Companion, optional org.jetbrains.jewel.ui.icon.IconKey chevronCollapsed, optional org.jetbrains.jewel.ui.icon.IconKey chevronExpanded, optional org.jetbrains.jewel.ui.icon.IconKey chevronSelectedCollapsed, optional org.jetbrains.jewel.ui.icon.IconKey chevronSelectedExpanded);
    method public static org.jetbrains.jewel.ui.component.styling.LazyTreeMetrics defaults(org.jetbrains.jewel.ui.component.styling.LazyTreeMetrics.Companion, optional float indentSize, optional androidx.compose.foundation.shape.CornerSize elementBackgroundCornerSize, optional androidx.compose.foundation.layout.PaddingValues elementPadding, optional androidx.compose.foundation.layout.PaddingValues elementContentPadding, optional float elementMinHeight, optional float elementIconTextGap, optional float chevronContentGap);
    method public static org.jetbrains.jewel.ui.component.styling.LazyTreeStyle light(org.jetbrains.jewel.ui.component.styling.LazyTreeStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemColors colors, optional org.jetbrains.jewel.ui.component.styling.LazyTreeMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.LazyTreeIcons icons);
  }

  public final class IntUiLinkStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.LinkColors dark(org.jetbrains.jewel.ui.component.styling.LinkColors.Companion, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long contentVisited);
    method public static org.jetbrains.jewel.ui.component.styling.LinkStyle dark(org.jetbrains.jewel.ui.component.styling.LinkStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.LinkColors colors, optional org.jetbrains.jewel.ui.component.styling.LinkMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.LinkIcons icons, optional org.jetbrains.jewel.ui.component.styling.LinkUnderlineBehavior underlineBehavior);
    method public static org.jetbrains.jewel.ui.component.styling.LinkIcons defaults(org.jetbrains.jewel.ui.component.styling.LinkIcons.Companion, optional org.jetbrains.jewel.ui.icon.IconKey dropdownChevron, optional org.jetbrains.jewel.ui.icon.IconKey externalLink);
    method public static org.jetbrains.jewel.ui.component.styling.LinkMetrics defaults(org.jetbrains.jewel.ui.component.styling.LinkMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize focusHaloCornerSize, optional float textIconGap, optional long iconSize);
    method public static org.jetbrains.jewel.ui.component.styling.LinkColors light(org.jetbrains.jewel.ui.component.styling.LinkColors.Companion, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long contentVisited);
    method public static org.jetbrains.jewel.ui.component.styling.LinkStyle light(org.jetbrains.jewel.ui.component.styling.LinkStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.LinkColors colors, optional org.jetbrains.jewel.ui.component.styling.LinkMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.LinkIcons icons, optional org.jetbrains.jewel.ui.component.styling.LinkUnderlineBehavior underlineBehavior);
  }

  public final class IntUiMenuStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.MenuColors dark(org.jetbrains.jewel.ui.component.styling.MenuColors.Companion, optional long background, optional long border, optional long shadow, optional org.jetbrains.jewel.ui.component.styling.MenuItemColors itemColors);
    method public static org.jetbrains.jewel.ui.component.styling.MenuItemColors dark(org.jetbrains.jewel.ui.component.styling.MenuItemColors.Companion, optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long iconTint, optional long iconTintDisabled, optional long iconTintFocused, optional long iconTintPressed, optional long iconTintHovered, optional long keybindingTint, optional long keybindingTintDisabled, optional long keybindingTintFocused, optional long keybindingTintPressed, optional long keybindingTintHovered, optional long separator);
    method public static org.jetbrains.jewel.ui.component.styling.MenuStyle dark(org.jetbrains.jewel.ui.component.styling.MenuStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.MenuColors colors, optional org.jetbrains.jewel.ui.component.styling.MenuMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.MenuIcons icons);
    method public static org.jetbrains.jewel.ui.component.styling.MenuIcons defaults(org.jetbrains.jewel.ui.component.styling.MenuIcons.Companion, optional org.jetbrains.jewel.ui.icon.IconKey submenuChevron);
    method public static org.jetbrains.jewel.ui.component.styling.MenuItemMetrics defaults(org.jetbrains.jewel.ui.component.styling.MenuItemMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize selectionCornerSize, optional androidx.compose.foundation.layout.PaddingValues outerPadding, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.layout.PaddingValues separatorPadding, optional androidx.compose.foundation.layout.PaddingValues keybindingsPadding, optional float separatorThickness, optional float separatorHeight, optional float iconSize, optional float minHeight);
    method public static org.jetbrains.jewel.ui.component.styling.MenuMetrics defaults(org.jetbrains.jewel.ui.component.styling.MenuMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues menuMargin, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional long offset, optional float shadowSize, optional float borderWidth, optional org.jetbrains.jewel.ui.component.styling.MenuItemMetrics itemMetrics, optional org.jetbrains.jewel.ui.component.styling.SubmenuMetrics submenuMetrics);
    method public static org.jetbrains.jewel.ui.component.styling.SubmenuMetrics defaults(org.jetbrains.jewel.ui.component.styling.SubmenuMetrics.Companion, optional long offset);
    method public static org.jetbrains.jewel.ui.component.styling.MenuColors light(org.jetbrains.jewel.ui.component.styling.MenuColors.Companion, optional long background, optional long border, optional long shadow, optional org.jetbrains.jewel.ui.component.styling.MenuItemColors itemColors);
    method public static org.jetbrains.jewel.ui.component.styling.MenuItemColors light(org.jetbrains.jewel.ui.component.styling.MenuItemColors.Companion, optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long iconTint, optional long iconTintDisabled, optional long iconTintFocused, optional long iconTintPressed, optional long iconTintHovered, optional long keybindingTint, optional long keybindingTintDisabled, optional long keybindingTintFocused, optional long keybindingTintPressed, optional long keybindingTintHovered, optional long separator);
    method public static org.jetbrains.jewel.ui.component.styling.MenuStyle light(org.jetbrains.jewel.ui.component.styling.MenuStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.MenuColors colors, optional org.jetbrains.jewel.ui.component.styling.MenuMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.MenuIcons icons);
  }

  public final class IntUiOutlinedButtonColorFactory {
    method public org.jetbrains.jewel.ui.component.styling.ButtonColors dark(optional androidx.compose.ui.graphics.Brush background, optional androidx.compose.ui.graphics.Brush backgroundDisabled, optional androidx.compose.ui.graphics.Brush backgroundFocused, optional androidx.compose.ui.graphics.Brush backgroundPressed, optional androidx.compose.ui.graphics.Brush backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional androidx.compose.ui.graphics.Brush border, optional androidx.compose.ui.graphics.Brush borderDisabled, optional androidx.compose.ui.graphics.Brush borderFocused, optional androidx.compose.ui.graphics.Brush borderPressed, optional androidx.compose.ui.graphics.Brush borderHovered);
    method public org.jetbrains.jewel.ui.component.styling.ButtonColors light(optional androidx.compose.ui.graphics.Brush background, optional androidx.compose.ui.graphics.Brush backgroundDisabled, optional androidx.compose.ui.graphics.Brush backgroundFocused, optional androidx.compose.ui.graphics.Brush backgroundPressed, optional androidx.compose.ui.graphics.Brush backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional androidx.compose.ui.graphics.Brush border, optional androidx.compose.ui.graphics.Brush borderDisabled, optional androidx.compose.ui.graphics.Brush borderFocused, optional androidx.compose.ui.graphics.Brush borderPressed, optional androidx.compose.ui.graphics.Brush borderHovered);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiOutlinedButtonColorFactory INSTANCE;
  }

  public final class IntUiOutlinedButtonStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.ButtonStyle dark(optional org.jetbrains.jewel.ui.component.styling.ButtonColors colors, optional org.jetbrains.jewel.ui.component.styling.ButtonMetrics metrics, optional org.jetbrains.jewel.foundation.Stroke.Alignment focusOutlineAlignment);
    method public org.jetbrains.jewel.ui.component.styling.ButtonStyle light(optional org.jetbrains.jewel.ui.component.styling.ButtonColors colors, optional org.jetbrains.jewel.ui.component.styling.ButtonMetrics metrics, optional org.jetbrains.jewel.foundation.Stroke.Alignment focusOutlineAlignment);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiOutlinedButtonStyleFactory INSTANCE;
  }

  public final class IntUiOutlinedSplitButtonStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.SplitButtonStyle dark(optional org.jetbrains.jewel.ui.component.styling.ButtonStyle buttonStyle, optional org.jetbrains.jewel.ui.component.styling.DividerMetrics dividerMetrics, optional long dividerColor, optional long dividerDisabledColor, optional float dividerPadding, optional long chevronColor);
    method public org.jetbrains.jewel.ui.component.styling.SplitButtonStyle light(optional org.jetbrains.jewel.ui.component.styling.ButtonStyle buttonStyle, optional org.jetbrains.jewel.ui.component.styling.DividerMetrics dividerMetrics, optional long dividerColor, optional long dividerDisabledColor, optional float dividerPadding, optional long chevronColor);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiOutlinedSplitButtonStyleFactory INSTANCE;
  }

  public final class IntUiPopupContainerStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.PopupContainerColors dark(org.jetbrains.jewel.ui.component.styling.PopupContainerColors.Companion, optional long background, optional long border, optional long shadow);
    method public static org.jetbrains.jewel.ui.component.styling.PopupContainerStyle dark(org.jetbrains.jewel.ui.component.styling.PopupContainerStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.PopupContainerColors colors, optional org.jetbrains.jewel.ui.component.styling.PopupContainerMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.PopupContainerMetrics defaults(org.jetbrains.jewel.ui.component.styling.PopupContainerMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues menuMargin, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional long offset, optional float shadowSize, optional float borderWidth);
    method public static org.jetbrains.jewel.ui.component.styling.PopupContainerColors light(org.jetbrains.jewel.ui.component.styling.PopupContainerColors.Companion, optional long background, optional long border, optional long shadow);
    method public static org.jetbrains.jewel.ui.component.styling.PopupContainerStyle light(org.jetbrains.jewel.ui.component.styling.PopupContainerStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.PopupContainerColors colors, optional org.jetbrains.jewel.ui.component.styling.PopupContainerMetrics metrics);
  }

  public final class IntUiRadioButtonStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.RadioButtonColors dark(org.jetbrains.jewel.ui.component.styling.RadioButtonColors.Companion, optional long content, optional long contentHovered, optional long contentDisabled, optional long contentSelected, optional long contentSelectedHovered, optional long contentSelectedDisabled);
    method public static org.jetbrains.jewel.ui.component.styling.RadioButtonIcons dark(org.jetbrains.jewel.ui.component.styling.RadioButtonIcons.Companion, optional org.jetbrains.jewel.ui.icon.IconKey radioButton);
    method public static org.jetbrains.jewel.ui.component.styling.RadioButtonStyle dark(org.jetbrains.jewel.ui.component.styling.RadioButtonStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.RadioButtonColors colors, optional org.jetbrains.jewel.ui.component.styling.RadioButtonMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.RadioButtonIcons icons);
    method public static org.jetbrains.jewel.ui.component.styling.RadioButtonMetrics defaults(org.jetbrains.jewel.ui.component.styling.RadioButtonMetrics.Companion, optional long radioButtonSize, optional long outlineSize, optional long outlineFocusedSize, optional long outlineSelectedSize, optional long outlineSelectedFocusedSize, optional float iconContentGap);
    method public static org.jetbrains.jewel.ui.component.styling.RadioButtonColors light(org.jetbrains.jewel.ui.component.styling.RadioButtonColors.Companion, optional long content, optional long contentHovered, optional long contentDisabled, optional long contentSelected, optional long contentSelectedHovered, optional long contentSelectedDisabled);
    method public static org.jetbrains.jewel.ui.component.styling.RadioButtonIcons light(org.jetbrains.jewel.ui.component.styling.RadioButtonIcons.Companion, optional org.jetbrains.jewel.ui.icon.IconKey radioButton);
    method public static org.jetbrains.jewel.ui.component.styling.RadioButtonStyle light(org.jetbrains.jewel.ui.component.styling.RadioButtonStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.RadioButtonColors colors, optional org.jetbrains.jewel.ui.component.styling.RadioButtonMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.RadioButtonIcons icons);
  }

  public final class IntUiScrollbarStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle dark(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible default(org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible.Companion);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.WhenScrolling default(org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.WhenScrolling.Companion, optional float trackThickness, optional float trackThicknessExpanded, optional androidx.compose.foundation.layout.PaddingValues trackPadding, optional androidx.compose.foundation.layout.PaddingValues trackPaddingWithBorder, optional long trackColorAnimationDuration, optional long expandAnimationDuration, optional long thumbColorAnimationDuration, optional long lingerDuration);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle light(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics macOs(org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize thumbCornerSize, optional float minThumbLength);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible macOs(org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible.Companion, optional float trackThickness, optional androidx.compose.foundation.layout.PaddingValues trackPadding, optional long thumbColorAnimationDuration, optional long scrollbarBackgroundColorLight, optional long scrollbarBackgroundColorDark);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarColors macOsDark(org.jetbrains.jewel.ui.component.styling.ScrollbarColors.Companion, optional long thumbBackground, optional long thumbBackgroundActive, optional long thumbOpaqueBackground, optional long thumbOpaqueBackgroundHovered, optional long thumbBorder, optional long thumbBorderActive, optional long thumbOpaqueBorder, optional long thumbOpaqueBorderHovered, optional long trackBackground, optional long trackBackgroundHovered, optional long trackOpaqueBackground, optional long trackOpaqueBackgroundHovered);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle macOsDark(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.ScrollbarColors colors, optional org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TrackClickBehavior trackClickBehavior, optional org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility scrollbarVisibility);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarColors macOsLight(org.jetbrains.jewel.ui.component.styling.ScrollbarColors.Companion, optional long thumbBackground, optional long thumbBackgroundActive, optional long thumbOpaqueBackground, optional long thumbOpaqueBackgroundHovered, optional long thumbBorder, optional long thumbBorderActive, optional long thumbOpaqueBorder, optional long thumbOpaqueBorderHovered, optional long trackBackground, optional long trackBackgroundHovered, optional long trackOpaqueBackground, optional long trackOpaqueBackgroundHovered);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle macOsLight(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.ScrollbarColors colors, optional org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TrackClickBehavior trackClickBehavior, optional org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility scrollbarVisibility);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics windowsAndLinux(org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize thumbCornerSize, optional float minThumbLength);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible windowsAndLinux(org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible.Companion, optional float trackThickness, optional androidx.compose.foundation.layout.PaddingValues trackPadding, optional long thumbColorAnimationDuration, optional long trackColorAnimationDuration);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarColors windowsAndLinuxDark(org.jetbrains.jewel.ui.component.styling.ScrollbarColors.Companion, optional long thumbBackground, optional long thumbBackgroundActive, optional long thumbOpaqueBackground, optional long thumbOpaqueBackgroundHovered, optional long thumbBorder, optional long thumbBorderActive, optional long thumbOpaqueBorder, optional long thumbOpaqueBorderHovered, optional long trackBackground, optional long trackBackgroundHovered, optional long trackOpaqueBackground, optional long trackOpaqueBackgroundHovered);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle windowsAndLinuxDark(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.ScrollbarColors colors, optional org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TrackClickBehavior trackClickBehavior, optional org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible scrollbarVisibility);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarColors windowsAndLinuxLight(org.jetbrains.jewel.ui.component.styling.ScrollbarColors.Companion, optional long thumbBackground, optional long thumbBackgroundActive, optional long thumbOpaqueBackground, optional long thumbOpaqueBackgroundHovered, optional long thumbBorder, optional long thumbBorderActive, optional long thumbOpaqueBorder, optional long thumbOpaqueBorderHovered, optional long trackBackground, optional long trackBackgroundHovered, optional long trackOpaqueBackground, optional long trackOpaqueBackgroundHovered);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle windowsAndLinuxLight(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.ScrollbarColors colors, optional org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TrackClickBehavior trackClickBehavior, optional org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible scrollbarVisibility);
  }

  public final class IntUiSegmentedControlButtonStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonColors dark(org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonColors.Companion, optional androidx.compose.ui.graphics.Brush background, optional androidx.compose.ui.graphics.Brush backgroundPressed, optional androidx.compose.ui.graphics.Brush backgroundHovered, optional androidx.compose.ui.graphics.Brush backgroundSelected, optional androidx.compose.ui.graphics.Brush backgroundSelectedFocused, optional long content, optional long contentDisabled, optional androidx.compose.ui.graphics.Brush border, optional androidx.compose.ui.graphics.Brush borderSelected, optional androidx.compose.ui.graphics.Brush borderSelectedDisabled, optional androidx.compose.ui.graphics.Brush borderSelectedFocused);
    method public static org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle dark(org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonColors colors, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonMetrics defaults(org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues segmentedButtonPadding, optional long minSize, optional float borderWidth);
    method public static org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonColors light(org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonColors.Companion, optional androidx.compose.ui.graphics.Brush background, optional androidx.compose.ui.graphics.Brush backgroundPressed, optional androidx.compose.ui.graphics.Brush backgroundHovered, optional androidx.compose.ui.graphics.Brush backgroundSelected, optional androidx.compose.ui.graphics.Brush backgroundSelectedFocused, optional long content, optional long contentDisabled, optional androidx.compose.ui.graphics.Brush border, optional androidx.compose.ui.graphics.Brush borderSelected, optional androidx.compose.ui.graphics.Brush borderSelectedDisabled, optional androidx.compose.ui.graphics.Brush borderSelectedFocused);
    method public static org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle light(org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonColors colors, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonMetrics metrics);
  }

  public final class IntUiSegmentedControlStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.SegmentedControlColors dark(org.jetbrains.jewel.ui.component.styling.SegmentedControlColors.Companion, optional androidx.compose.ui.graphics.Brush border, optional androidx.compose.ui.graphics.Brush borderDisabled, optional androidx.compose.ui.graphics.Brush borderFocused, optional androidx.compose.ui.graphics.Brush borderPressed, optional androidx.compose.ui.graphics.Brush borderHovered);
    method public static org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle dark(org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlColors colors, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.SegmentedControlMetrics defaults(org.jetbrains.jewel.ui.component.styling.SegmentedControlMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional float borderWidth);
    method public static org.jetbrains.jewel.ui.component.styling.SegmentedControlColors light(org.jetbrains.jewel.ui.component.styling.SegmentedControlColors.Companion, optional androidx.compose.ui.graphics.Brush border, optional androidx.compose.ui.graphics.Brush borderDisabled, optional androidx.compose.ui.graphics.Brush borderFocused, optional androidx.compose.ui.graphics.Brush borderPressed, optional androidx.compose.ui.graphics.Brush borderHovered);
    method public static org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle light(org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlColors colors, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlMetrics metrics);
  }

  public final class IntUiSelectableLazyColumnStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle dark(org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle.Companion, optional float itemHeight, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemColors itemColors, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics itemMetrics);
    method public static org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle light(org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle.Companion, optional float itemHeight, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemColors itemColors, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics itemMetrics);
  }

  public final class IntUiSimpleListItemStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.SimpleListItemColors dark(org.jetbrains.jewel.ui.component.styling.SimpleListItemColors.Companion, optional long background, optional long backgroundActive, optional long backgroundSelected, optional long backgroundSelectedActive, optional long content, optional long contentActive, optional long contentSelected, optional long contentSelectedActive);
    method public static org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle dark(org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemColors colors, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle darkFullWidth(org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemColors colors, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics default(org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics.Companion, optional androidx.compose.foundation.layout.PaddingValues innerPadding, optional androidx.compose.foundation.layout.PaddingValues outerPadding, optional androidx.compose.foundation.shape.CornerSize selectionBackgroundCornerSize, optional float iconTextGap);
    method @androidx.compose.runtime.Composable public static org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle default(org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle.Companion);
    method public static org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics fullWidth(org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics.Companion, optional androidx.compose.foundation.layout.PaddingValues innerPadding, optional androidx.compose.foundation.layout.PaddingValues outerPadding, optional androidx.compose.foundation.shape.CornerSize selectionBackgroundCornerSize, optional float iconTextGap);
    method @androidx.compose.runtime.Composable public static org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle fullWidth(org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle.Companion);
    method public static org.jetbrains.jewel.ui.component.styling.SimpleListItemColors light(org.jetbrains.jewel.ui.component.styling.SimpleListItemColors.Companion, optional long background, optional long backgroundActive, optional long backgroundSelected, optional long backgroundSelectedActive, optional long content, optional long contentActive, optional long contentSelected, optional long contentSelectedActive);
    method public static org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle light(org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemColors colors, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle lightFullWidth(org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemColors colors, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemMetrics metrics);
  }

  public final class IntUiSliderStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.SliderColors dark(org.jetbrains.jewel.ui.component.styling.SliderColors.Companion, optional long track, optional long trackFilled, optional long trackDisabled, optional long trackFilledDisabled, optional long stepMarker, optional long thumbFill, optional long thumbFillDisabled, optional long thumbFillFocused, optional long thumbFillPressed, optional long thumbFillHovered, optional long thumbBorder, optional long thumbBorderFocused, optional long thumbBorderDisabled, optional long thumbBorderPressed, optional long thumbBorderHovered);
    method public static org.jetbrains.jewel.ui.component.styling.SliderStyle dark(org.jetbrains.jewel.ui.component.styling.SliderStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SliderColors colors, optional org.jetbrains.jewel.ui.component.styling.SliderMetrics metrics, optional androidx.compose.ui.graphics.Shape thumbShape);
    method public static org.jetbrains.jewel.ui.component.styling.SliderMetrics defaults(org.jetbrains.jewel.ui.component.styling.SliderMetrics.Companion, optional float trackHeight, optional long thumbSize, optional float thumbBorderWidth, optional float stepLineHeight, optional float stepLineWidth, optional float trackToStepSpacing);
    method public static org.jetbrains.jewel.ui.component.styling.SliderColors light(org.jetbrains.jewel.ui.component.styling.SliderColors.Companion, optional long track, optional long trackFilled, optional long trackDisabled, optional long trackFilledDisabled, optional long stepMarker, optional long thumbFill, optional long thumbFillDisabled, optional long thumbFillFocused, optional long thumbFillPressed, optional long thumbFillHovered, optional long thumbBorder, optional long thumbBorderFocused, optional long thumbBorderDisabled, optional long thumbBorderPressed, optional long thumbBorderHovered);
    method public static org.jetbrains.jewel.ui.component.styling.SliderStyle light(org.jetbrains.jewel.ui.component.styling.SliderStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.SliderColors colors, optional org.jetbrains.jewel.ui.component.styling.SliderMetrics metrics, optional androidx.compose.ui.graphics.Shape thumbShape);
  }

  public final class IntUiSplitButtonStylingKt {
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultSplitButtonStyleFactory getDefault(org.jetbrains.jewel.ui.component.styling.SplitButtonStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiOutlinedSplitButtonStyleFactory getOutlined(org.jetbrains.jewel.ui.component.styling.SplitButtonStyle.Companion);
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultSplitButtonStyleFactory org.jetbrains.jewel.ui.component.styling.SplitButtonStyle.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiOutlinedSplitButtonStyleFactory org.jetbrains.jewel.ui.component.styling.SplitButtonStyle.Companion.Outlined;
  }

  public final class IntUiSuccessBannerColorFactory {
    method public org.jetbrains.jewel.ui.component.styling.BannerColors dark(optional long background, optional long border);
    method public org.jetbrains.jewel.ui.component.styling.BannerColors light(optional long background, optional long border);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiSuccessBannerColorFactory INSTANCE;
  }

  public final class IntUiTabStripScrollbarStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible tabStrip(org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility.AlwaysVisible.Companion, optional float trackThickness, optional androidx.compose.foundation.layout.PaddingValues trackPadding, optional androidx.compose.foundation.layout.PaddingValues trackPaddingWithBorder);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle tabStripDark(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle tabStripLight(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics tabStripMacOs(org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize thumbCornerSize, optional float minThumbLength);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle tabStripMacOsDark(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.ScrollbarColors colors, optional org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TrackClickBehavior trackClickBehavior, optional org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility scrollbarVisibility);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle tabStripMacOsLight(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.ScrollbarColors colors, optional org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TrackClickBehavior trackClickBehavior, optional org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility scrollbarVisibility);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics tabStripWindowsAndLinux(org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize thumbCornerSize, optional float minThumbLength);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle tabStripWindowsAndLinuxDark(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.ScrollbarColors colors, optional org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TrackClickBehavior trackClickBehavior, optional org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility scrollbarVisibility);
    method public static org.jetbrains.jewel.ui.component.styling.ScrollbarStyle tabStripWindowsAndLinuxLight(org.jetbrains.jewel.ui.component.styling.ScrollbarStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.ScrollbarColors colors, optional org.jetbrains.jewel.ui.component.styling.ScrollbarMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.TrackClickBehavior trackClickBehavior, optional org.jetbrains.jewel.ui.component.styling.ScrollbarVisibility scrollbarVisibility);
  }

  public final class IntUiTabStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.TabContentAlpha default(org.jetbrains.jewel.ui.component.styling.TabContentAlpha.Companion, optional float iconNormal, optional float iconDisabled, optional float iconPressed, optional float iconHovered, optional float iconSelected, optional float contentNormal, optional float contentDisabled, optional float contentPressed, optional float contentHovered, optional float contentSelected);
    method public static org.jetbrains.jewel.ui.component.styling.TabIcons defaults(org.jetbrains.jewel.ui.component.styling.TabIcons.Companion, optional org.jetbrains.jewel.ui.icon.IconKey close);
    method public static org.jetbrains.jewel.ui.component.styling.TabMetrics defaults(org.jetbrains.jewel.ui.component.styling.TabMetrics.Companion, optional float underlineThickness, optional androidx.compose.foundation.layout.PaddingValues tabPadding, optional float closeContentGap, optional float tabContentSpacing, optional float tabHeight);
    method public static org.jetbrains.jewel.ui.component.styling.TabContentAlpha editor(org.jetbrains.jewel.ui.component.styling.TabContentAlpha.Companion, optional float iconNormal, optional float iconDisabled, optional float iconPressed, optional float iconHovered, optional float iconSelected, optional float contentNormal, optional float contentDisabled, optional float contentPressed, optional float contentHovered, optional float contentSelected);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultTabColorsFactory getDefault(org.jetbrains.jewel.ui.component.styling.TabColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultTabStyleFactory getDefault(org.jetbrains.jewel.ui.component.styling.TabStyle.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiEditorTabColorsFactory getEditor(org.jetbrains.jewel.ui.component.styling.TabColors.Companion);
    method public static org.jetbrains.jewel.intui.standalone.styling.IntUiEditorTabStyleFactory getEditor(org.jetbrains.jewel.ui.component.styling.TabStyle.Companion);
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultTabStyleFactory org.jetbrains.jewel.ui.component.styling.TabStyle.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiDefaultTabColorsFactory org.jetbrains.jewel.ui.component.styling.TabColors.Companion.Default;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiEditorTabStyleFactory org.jetbrains.jewel.ui.component.styling.TabStyle.Companion.Editor;
    property public static org.jetbrains.jewel.intui.standalone.styling.IntUiEditorTabColorsFactory org.jetbrains.jewel.ui.component.styling.TabColors.Companion.Editor;
  }

  public final class IntUiTextAreaStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.TextAreaColors dark(org.jetbrains.jewel.ui.component.styling.TextAreaColors.Companion, optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long border, optional long borderDisabled, optional long borderFocused, optional long borderPressed, optional long borderHovered, optional long caret, optional long caretDisabled, optional long caretFocused, optional long caretPressed, optional long caretHovered, optional long placeholder);
    method public static org.jetbrains.jewel.ui.component.styling.TextAreaStyle dark(org.jetbrains.jewel.ui.component.styling.TextAreaStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.TextAreaColors colors, optional org.jetbrains.jewel.ui.component.styling.TextAreaMetrics metrics);
    method public static org.jetbrains.jewel.ui.component.styling.TextAreaMetrics defaults(org.jetbrains.jewel.ui.component.styling.TextAreaMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional long minSize, optional float borderWidth);
    method public static org.jetbrains.jewel.ui.component.styling.TextAreaColors light(org.jetbrains.jewel.ui.component.styling.TextAreaColors.Companion, optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long border, optional long borderDisabled, optional long borderFocused, optional long borderPressed, optional long borderHovered, optional long caret, optional long caretDisabled, optional long caretFocused, optional long caretPressed, optional long caretHovered, optional long placeholder);
    method public static org.jetbrains.jewel.ui.component.styling.TextAreaStyle light(org.jetbrains.jewel.ui.component.styling.TextAreaStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.TextAreaColors colors, optional org.jetbrains.jewel.ui.component.styling.TextAreaMetrics metrics);
  }

  public final class IntUiTextFieldStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.TextFieldColors dark(org.jetbrains.jewel.ui.component.styling.TextFieldColors.Companion, optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long border, optional long borderDisabled, optional long borderFocused, optional long borderPressed, optional long borderHovered, optional long caret, optional long caretDisabled, optional long caretFocused, optional long caretPressed, optional long caretHovered, optional long placeholder);
    method public static org.jetbrains.jewel.ui.component.styling.TextFieldStyle dark(org.jetbrains.jewel.ui.component.styling.TextFieldStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.TextFieldColors colors, optional org.jetbrains.jewel.ui.component.styling.TextFieldMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle iconButtonStyle);
    method public static org.jetbrains.jewel.ui.component.styling.TextFieldMetrics defaults(org.jetbrains.jewel.ui.component.styling.TextFieldMetrics.Companion, optional androidx.compose.foundation.shape.CornerSize cornerSize, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional long minSize, optional float borderWidth);
    method public static org.jetbrains.jewel.ui.component.styling.TextFieldColors light(org.jetbrains.jewel.ui.component.styling.TextFieldColors.Companion, optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long border, optional long borderDisabled, optional long borderFocused, optional long borderPressed, optional long borderHovered, optional long caret, optional long caretDisabled, optional long caretFocused, optional long caretPressed, optional long caretHovered, optional long placeholder);
    method public static org.jetbrains.jewel.ui.component.styling.TextFieldStyle light(org.jetbrains.jewel.ui.component.styling.TextFieldStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.TextFieldColors colors, optional org.jetbrains.jewel.ui.component.styling.TextFieldMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle iconButtonStyle);
  }

  public final class IntUiTooltipStylingKt {
    method public static org.jetbrains.jewel.ui.component.styling.TooltipColors dark(org.jetbrains.jewel.ui.component.styling.TooltipColors.Companion, optional long backgroundColor, optional long contentColor, optional long borderColor, optional long shadow);
    method @Deprecated public static org.jetbrains.jewel.ui.component.styling.TooltipStyle dark(org.jetbrains.jewel.ui.component.styling.TooltipStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.TooltipColors intUiTooltipColors, optional org.jetbrains.jewel.ui.component.styling.TooltipMetrics intUiTooltipMetrics);
    method public static org.jetbrains.jewel.ui.component.styling.TooltipStyle dark(org.jetbrains.jewel.ui.component.styling.TooltipStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.TooltipColors intUiTooltipColors, optional org.jetbrains.jewel.ui.component.styling.TooltipMetrics intUiTooltipMetrics, optional org.jetbrains.jewel.ui.component.styling.TooltipAutoHideBehavior autoHideBehavior);
    method public static org.jetbrains.jewel.ui.component.styling.TooltipColors light(org.jetbrains.jewel.ui.component.styling.TooltipColors.Companion, optional long backgroundColor, optional long contentColor, optional long borderColor, optional long shadow);
    method @Deprecated public static org.jetbrains.jewel.ui.component.styling.TooltipStyle light(org.jetbrains.jewel.ui.component.styling.TooltipStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.TooltipColors intUiTooltipColors, optional org.jetbrains.jewel.ui.component.styling.TooltipMetrics intUiTooltipMetrics);
    method public static org.jetbrains.jewel.ui.component.styling.TooltipStyle light(org.jetbrains.jewel.ui.component.styling.TooltipStyle.Companion, optional org.jetbrains.jewel.ui.component.styling.TooltipColors intUiTooltipColors, optional org.jetbrains.jewel.ui.component.styling.TooltipMetrics intUiTooltipMetrics, optional org.jetbrains.jewel.ui.component.styling.TooltipAutoHideBehavior autoHideBehavior);
  }

  public final class IntUiUndecoratedComboBoxColorsFactory {
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxColors dark(optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long nonEditableBackground, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered);
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxColors light(optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long nonEditableBackground, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedComboBoxColorsFactory INSTANCE;
  }

  public final class IntUiUndecoratedComboBoxStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxStyle dark(optional org.jetbrains.jewel.ui.component.styling.ComboBoxColors colors, optional org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.ComboBoxIcons icons);
    method public org.jetbrains.jewel.ui.component.styling.ComboBoxStyle light(optional org.jetbrains.jewel.ui.component.styling.ComboBoxColors colors, optional org.jetbrains.jewel.ui.component.styling.ComboBoxMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.ComboBoxIcons icons);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedComboBoxStyleFactory INSTANCE;
  }

  public final class IntUiUndecoratedDropdownColorsFactory {
    method public org.jetbrains.jewel.ui.component.styling.DropdownColors dark(optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long iconTint, optional long iconTintDisabled, optional long iconTintFocused, optional long iconTintPressed, optional long iconTintHovered);
    method public org.jetbrains.jewel.ui.component.styling.DropdownColors light(optional long background, optional long backgroundDisabled, optional long backgroundFocused, optional long backgroundPressed, optional long backgroundHovered, optional long content, optional long contentDisabled, optional long contentFocused, optional long contentPressed, optional long contentHovered, optional long iconTint, optional long iconTintDisabled, optional long iconTintFocused, optional long iconTintPressed, optional long iconTintHovered);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedDropdownColorsFactory INSTANCE;
  }

  public final class IntUiUndecoratedDropdownStyleFactory {
    method public org.jetbrains.jewel.ui.component.styling.DropdownStyle dark(optional org.jetbrains.jewel.ui.component.styling.DropdownColors colors, optional org.jetbrains.jewel.ui.component.styling.DropdownMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.DropdownIcons icons, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle);
    method public org.jetbrains.jewel.ui.component.styling.DropdownStyle light(optional org.jetbrains.jewel.ui.component.styling.DropdownColors colors, optional org.jetbrains.jewel.ui.component.styling.DropdownMetrics metrics, optional org.jetbrains.jewel.ui.component.styling.DropdownIcons icons, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiUndecoratedDropdownStyleFactory INSTANCE;
  }

  public final class IntUiWarningBannerColorFactory {
    method public org.jetbrains.jewel.ui.component.styling.BannerColors dark(optional long background, optional long border);
    method public org.jetbrains.jewel.ui.component.styling.BannerColors light(optional long background, optional long border);
    field public static final org.jetbrains.jewel.intui.standalone.styling.IntUiWarningBannerColorFactory INSTANCE;
  }

}

package org.jetbrains.jewel.intui.standalone.theme {

  public final class IntUiGlobalColorsKt {
    method public static org.jetbrains.jewel.foundation.BorderColors dark(org.jetbrains.jewel.foundation.BorderColors.Companion, optional long normal, optional long focused, optional long disabled);
    method public static org.jetbrains.jewel.foundation.GlobalColors dark(org.jetbrains.jewel.foundation.GlobalColors.Companion, optional org.jetbrains.jewel.foundation.BorderColors borders, optional org.jetbrains.jewel.foundation.OutlineColors outlines, optional org.jetbrains.jewel.foundation.TextColors text, optional long paneBackground);
    method public static org.jetbrains.jewel.foundation.OutlineColors dark(org.jetbrains.jewel.foundation.OutlineColors.Companion, optional long focused, optional long focusedWarning, optional long focusedError, optional long warning, optional long error);
    method public static org.jetbrains.jewel.foundation.TextColors dark(org.jetbrains.jewel.foundation.TextColors.Companion, optional long normal, optional long selected, optional long disabled, optional long info, optional long error);
    method public static org.jetbrains.jewel.foundation.BorderColors light(org.jetbrains.jewel.foundation.BorderColors.Companion, optional long normal, optional long focused, optional long disabled);
    method public static org.jetbrains.jewel.foundation.GlobalColors light(org.jetbrains.jewel.foundation.GlobalColors.Companion, optional org.jetbrains.jewel.foundation.BorderColors borders, optional org.jetbrains.jewel.foundation.OutlineColors outlines, optional org.jetbrains.jewel.foundation.TextColors text, optional long paneBackground);
    method public static org.jetbrains.jewel.foundation.OutlineColors light(org.jetbrains.jewel.foundation.OutlineColors.Companion, optional long focused, optional long focusedWarning, optional long focusedError, optional long warning, optional long error);
    method public static org.jetbrains.jewel.foundation.TextColors light(org.jetbrains.jewel.foundation.TextColors.Companion, optional long normal, optional long selected, optional long disabled, optional long info, optional long error);
  }

  public final class IntUiGlobalMetricsKt {
    method public static org.jetbrains.jewel.foundation.GlobalMetrics defaults(org.jetbrains.jewel.foundation.GlobalMetrics.Companion, optional float outlineWidth, optional float rowHeight);
  }

  public final class IntUiGrayFilterValuesKt {
    method public static org.jetbrains.jewel.foundation.DisabledAppearanceValues dark(org.jetbrains.jewel.foundation.DisabledAppearanceValues.Companion, optional int brightness, optional int contrast, optional int alpha);
    method public static org.jetbrains.jewel.foundation.DisabledAppearanceValues light(org.jetbrains.jewel.foundation.DisabledAppearanceValues.Companion, optional int brightness, optional int contrast, optional int alpha);
  }

  public final class IntUiThemeKt {
    method @androidx.compose.runtime.Composable public static void IntUiTheme(optional boolean isDark, optional boolean swingCompatMode, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void IntUiTheme(org.jetbrains.jewel.foundation.theme.ThemeDefinition theme, org.jetbrains.jewel.ui.ComponentStyling styling, optional boolean swingCompatMode, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method public static org.jetbrains.jewel.ui.ComponentStyling dark(org.jetbrains.jewel.ui.ComponentStyling, optional org.jetbrains.jewel.ui.component.styling.CheckboxStyle checkboxStyle, optional org.jetbrains.jewel.ui.component.styling.ChipStyle chipStyle, optional org.jetbrains.jewel.ui.component.styling.CircularProgressStyle circularProgressStyle, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles defaultBannerStyle, optional org.jetbrains.jewel.ui.component.styling.ComboBoxStyle comboBoxStyle, optional org.jetbrains.jewel.ui.component.styling.ButtonStyle defaultButtonStyle, optional org.jetbrains.jewel.ui.component.styling.SplitButtonStyle defaultSplitButtonStyle, optional org.jetbrains.jewel.ui.component.styling.TabStyle defaultTabStyle, optional org.jetbrains.jewel.ui.component.styling.DividerStyle dividerStyle, optional org.jetbrains.jewel.ui.component.styling.DropdownStyle dropdownStyle, optional org.jetbrains.jewel.ui.component.styling.TabStyle editorTabStyle, optional org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle groupHeaderStyle, optional org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle horizontalProgressBarStyle, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle iconButtonStyle, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyles inlineBannerStyle, optional org.jetbrains.jewel.ui.component.styling.LazyTreeStyle lazyTreeStyle, optional org.jetbrains.jewel.ui.component.styling.LinkStyle linkStyle, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle, optional org.jetbrains.jewel.ui.component.styling.ButtonStyle outlinedButtonStyle, optional org.jetbrains.jewel.ui.component.styling.PopupContainerStyle popupContainerStyle, optional org.jetbrains.jewel.ui.component.styling.SplitButtonStyle outlinedSplitButtonStyle, optional org.jetbrains.jewel.ui.component.styling.RadioButtonStyle radioButtonStyle, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle segmentedControlButtonStyle, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle segmentedControlStyle, optional org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle selectableLazyColumnStyle, optional org.jetbrains.jewel.ui.component.styling.SliderStyle sliderStyle, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle simpleListItemStyle, optional org.jetbrains.jewel.ui.component.styling.TextAreaStyle textAreaStyle, optional org.jetbrains.jewel.ui.component.styling.TextFieldStyle textFieldStyle, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, optional org.jetbrains.jewel.ui.component.styling.DropdownStyle undecoratedDropdownStyle);
    method public static org.jetbrains.jewel.foundation.theme.ThemeDefinition darkThemeDefinition(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion, optional org.jetbrains.jewel.foundation.GlobalColors colors, optional org.jetbrains.jewel.foundation.GlobalMetrics metrics, optional org.jetbrains.jewel.foundation.theme.ThemeColorPalette palette, optional org.jetbrains.jewel.foundation.theme.ThemeIconData iconData, optional androidx.compose.ui.text.TextStyle defaultTextStyle, optional androidx.compose.ui.text.TextStyle editorTextStyle, optional androidx.compose.ui.text.TextStyle consoleTextStyle, optional long contentColor, optional org.jetbrains.jewel.foundation.DisabledAppearanceValues disabledAppearanceValues);
    method @androidx.compose.runtime.Composable public static org.jetbrains.jewel.ui.ComponentStyling default(org.jetbrains.jewel.ui.ComponentStyling);
    method public static org.jetbrains.jewel.ui.ComponentStyling light(org.jetbrains.jewel.ui.ComponentStyling, optional org.jetbrains.jewel.ui.component.styling.CheckboxStyle checkboxStyle, optional org.jetbrains.jewel.ui.component.styling.ChipStyle chipStyle, optional org.jetbrains.jewel.ui.component.styling.CircularProgressStyle circularProgressStyle, optional org.jetbrains.jewel.ui.component.styling.DefaultBannerStyles defaultBannerStyle, optional org.jetbrains.jewel.ui.component.styling.ComboBoxStyle comboBoxStyle, optional org.jetbrains.jewel.ui.component.styling.ButtonStyle defaultButtonStyle, optional org.jetbrains.jewel.ui.component.styling.SplitButtonStyle defaultSplitButtonStyle, optional org.jetbrains.jewel.ui.component.styling.TabStyle defaultTabStyle, optional org.jetbrains.jewel.ui.component.styling.DividerStyle dividerStyle, optional org.jetbrains.jewel.ui.component.styling.DropdownStyle dropdownStyle, optional org.jetbrains.jewel.ui.component.styling.TabStyle editorTabStyle, optional org.jetbrains.jewel.ui.component.styling.GroupHeaderStyle groupHeaderStyle, optional org.jetbrains.jewel.ui.component.styling.HorizontalProgressBarStyle horizontalProgressBarStyle, optional org.jetbrains.jewel.ui.component.styling.IconButtonStyle iconButtonStyle, optional org.jetbrains.jewel.ui.component.styling.InlineBannerStyles inlineBannerStyle, optional org.jetbrains.jewel.ui.component.styling.LazyTreeStyle lazyTreeStyle, optional org.jetbrains.jewel.ui.component.styling.LinkStyle linkStyle, optional org.jetbrains.jewel.ui.component.styling.MenuStyle menuStyle, optional org.jetbrains.jewel.ui.component.styling.PopupContainerStyle popupContainerStyle, optional org.jetbrains.jewel.ui.component.styling.ButtonStyle outlinedButtonStyle, optional org.jetbrains.jewel.ui.component.styling.SplitButtonStyle outlinedSplitButtonStyle, optional org.jetbrains.jewel.ui.component.styling.RadioButtonStyle radioButtonStyle, optional org.jetbrains.jewel.ui.component.styling.ScrollbarStyle scrollbarStyle, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlButtonStyle segmentedControlButtonStyle, optional org.jetbrains.jewel.ui.component.styling.SegmentedControlStyle segmentedControlStyle, optional org.jetbrains.jewel.ui.component.styling.SliderStyle sliderStyle, optional org.jetbrains.jewel.ui.component.styling.SelectableLazyColumnStyle selectableLazyColumnStyle, optional org.jetbrains.jewel.ui.component.styling.SimpleListItemStyle simpleListItemStyle, optional org.jetbrains.jewel.ui.component.styling.TextAreaStyle textAreaStyle, optional org.jetbrains.jewel.ui.component.styling.TextFieldStyle textFieldStyle, optional org.jetbrains.jewel.ui.component.styling.TooltipStyle tooltipStyle, optional org.jetbrains.jewel.ui.component.styling.DropdownStyle undecoratedDropdownStyle);
    method public static org.jetbrains.jewel.foundation.theme.ThemeDefinition lightThemeDefinition(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion, optional org.jetbrains.jewel.foundation.GlobalColors colors, optional org.jetbrains.jewel.foundation.GlobalMetrics metrics, optional org.jetbrains.jewel.foundation.theme.ThemeColorPalette palette, optional org.jetbrains.jewel.foundation.theme.ThemeIconData iconData, optional androidx.compose.ui.text.TextStyle defaultTextStyle, optional androidx.compose.ui.text.TextStyle editorTextStyle, optional androidx.compose.ui.text.TextStyle consoleTextStyle, optional long contentColor, optional org.jetbrains.jewel.foundation.DisabledAppearanceValues disabledAppearanceValues);
  }

  public final class TextStylesKt {
    method public static androidx.compose.ui.text.TextStyle createDefaultTextStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion, androidx.compose.ui.graphics.Brush? brush, optional float alpha, optional long fontSize, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional String? fontFeatureSettings, optional long letterSpacing, optional androidx.compose.ui.text.style.BaselineShift? baselineShift, optional androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform, optional androidx.compose.ui.text.intl.LocaleList? localeList, optional long background, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.graphics.Shadow? shadow, optional androidx.compose.ui.graphics.drawscope.DrawStyle? drawStyle, optional int textAlign, optional int textDirection, optional long lineHeight, optional androidx.compose.ui.text.style.TextIndent? textIndent, optional androidx.compose.ui.text.PlatformTextStyle? platformStyle, optional androidx.compose.ui.text.style.LineHeightStyle? lineHeightStyle, optional int lineBreak, optional int hyphens, optional androidx.compose.ui.text.style.TextMotion? textMotion);
    method public static androidx.compose.ui.text.TextStyle createDefaultTextStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional String? fontFeatureSettings, optional long letterSpacing, optional androidx.compose.ui.text.style.BaselineShift? baselineShift, optional androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform, optional androidx.compose.ui.text.intl.LocaleList? localeList, optional long background, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.graphics.Shadow? shadow, optional androidx.compose.ui.graphics.drawscope.DrawStyle? drawStyle, optional int textAlign, optional int textDirection, optional long lineHeight, optional androidx.compose.ui.text.style.TextIndent? textIndent, optional androidx.compose.ui.text.PlatformTextStyle? platformStyle, optional androidx.compose.ui.text.style.LineHeightStyle? lineHeightStyle, optional int lineBreak, optional int hyphens, optional androidx.compose.ui.text.style.TextMotion? textMotion);
    method public static androidx.compose.ui.text.TextStyle createEditorTextStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion, androidx.compose.ui.graphics.Brush? brush, optional float alpha, optional long fontSize, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional String? fontFeatureSettings, optional long letterSpacing, optional androidx.compose.ui.text.style.BaselineShift? baselineShift, optional androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform, optional androidx.compose.ui.text.intl.LocaleList? localeList, optional long background, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.graphics.Shadow? shadow, optional androidx.compose.ui.graphics.drawscope.DrawStyle? drawStyle, optional int textAlign, optional int textDirection, optional long lineHeight, optional androidx.compose.ui.text.style.TextIndent? textIndent, optional androidx.compose.ui.text.PlatformTextStyle? platformStyle, optional androidx.compose.ui.text.style.LineHeightStyle? lineHeightStyle, optional int lineBreak, optional int hyphens, optional androidx.compose.ui.text.style.TextMotion? textMotion);
    method public static androidx.compose.ui.text.TextStyle createEditorTextStyle(org.jetbrains.jewel.foundation.theme.JewelTheme.Companion, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional String? fontFeatureSettings, optional long letterSpacing, optional androidx.compose.ui.text.style.BaselineShift? baselineShift, optional androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform, optional androidx.compose.ui.text.intl.LocaleList? localeList, optional long background, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.graphics.Shadow? shadow, optional androidx.compose.ui.graphics.drawscope.DrawStyle? drawStyle, optional int textAlign, optional int textDirection, optional long lineHeight, optional androidx.compose.ui.text.style.TextIndent? textIndent, optional androidx.compose.ui.text.PlatformTextStyle? platformStyle, optional androidx.compose.ui.text.style.LineHeightStyle? lineHeightStyle, optional int lineBreak, optional int hyphens, optional androidx.compose.ui.text.style.TextMotion? textMotion);
  }

}
