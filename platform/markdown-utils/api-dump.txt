f:com.intellij.markdown.utils.MarkdownToHtmlConverterKt
- sf:convertMarkdownToHtml(java.lang.String):java.lang.String
f:com.intellij.markdown.utils.doc.DocMarkdownToHtmlConverter
- sf:INSTANCE:com.intellij.markdown.utils.doc.DocMarkdownToHtmlConverter
- sf:convert(com.intellij.openapi.project.Project,java.lang.String):java.lang.String
- sf:convert(com.intellij.openapi.project.Project,java.lang.String,com.intellij.lang.Language):java.lang.String
- bs:convert$default(com.intellij.openapi.project.Project,java.lang.String,com.intellij.lang.Language,I,java.lang.Object):java.lang.String
f:com.intellij.markdown.utils.lang.CodeBlockHtmlSyntaxHighlighter
- com.intellij.markdown.utils.lang.HtmlSyntaxHighlighter
- <init>(com.intellij.openapi.project.Project):V
- color(java.lang.String,java.lang.String):com.intellij.openapi.util.text.HtmlChunk
com.intellij.markdown.utils.lang.HtmlSyntaxHighlighter
- sf:Companion:com.intellij.markdown.utils.lang.HtmlSyntaxHighlighter$Companion
- a:color(java.lang.String,java.lang.String):com.intellij.openapi.util.text.HtmlChunk
f:com.intellij.markdown.utils.lang.HtmlSyntaxHighlighter$Companion
- f:colorHtmlChunk(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String):com.intellij.openapi.util.text.HtmlChunk
- f:parseContent(com.intellij.openapi.project.Project,com.intellij.lang.Language,java.lang.String,kotlin.jvm.functions.Function3):V
