f:com.intellij.openapi.diff.impl.patch.formove.FilePathComparator
- java.util.Comparator
- <init>():V
- compare(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):I
- s:getInstance():com.intellij.openapi.diff.impl.patch.formove.FilePathComparator
com.intellij.openapi.localVcs.UpToDateLineNumberProvider
- sf:ABSENT_LINE_NUMBER:I
- sf:FAKE_LINE_NUMBER:I
- a:getLineCount():I
- a:getLineNumber(I):I
- a:getLineNumber(I,Z):I
- a:isLineChanged(I):Z
- a:isRangeChanged(I,I):Z
a:com.intellij.openapi.vcs.AbstractFilterChildren
- <init>():V
- doFilter(java.util.List):V
- pa:isAncestor(java.lang.Object,java.lang.Object):Z
- p:onRemove(java.lang.Object):V
- pa:sortAscending(java.util.List):V
a:com.intellij.openapi.vcs.AbstractVcs
- com.intellij.openapi.vcs.StartedActivated
- pf:myProject:com.intellij.openapi.project.Project
- psf:ourIntegerPattern:java.lang.String
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- p:activate():V
- allowsNestedRoots():Z
- allowsRemoteCalls(com.intellij.openapi.vfs.VirtualFile):Z
- areDirectoriesVersionedItems():Z
- arePartialChangelistsSupported():Z
- p:createCheckinEnvironment():com.intellij.openapi.vcs.checkin.CheckinEnvironment
- createDirtyScope():com.intellij.openapi.vcs.changes.VcsDirtyScopeBuilder
- createEmptyVcsRootSettings():com.intellij.openapi.vcs.VcsRootSettings
- ps:createKey(java.lang.String):com.intellij.openapi.vcs.VcsKey
- p:createRollbackEnvironment():com.intellij.openapi.vcs.rollback.RollbackEnvironment
- p:createUpdateEnvironment():com.intellij.openapi.vcs.update.UpdateEnvironment
- p:deactivate():V
- enableIntegration():V
- enableIntegration(com.intellij.openapi.vfs.VirtualFile):V
- equals(java.lang.Object):Z
- fileExistsInVcs(com.intellij.openapi.vcs.FilePath):Z
- s:fileInVcsByFileStatus(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):Z
- s:fileInVcsByFileStatus(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- fileIsUnderVcs(com.intellij.openapi.vcs.FilePath):Z
- fileListenerIsSynchronous():Z
- filterUniqueRoots(java.util.List,java.util.function.Function):java.util.List
- getAnnotationProvider():com.intellij.openapi.vcs.annotate.AnnotationProvider
- f:getCachingCommittedChangesProvider():com.intellij.openapi.vcs.CachingCommittedChangesProvider
- getChangeProvider():com.intellij.openapi.vcs.changes.ChangeProvider
- getCheckinEnvironment():com.intellij.openapi.vcs.checkin.CheckinEnvironment
- getCheckoutProvider():com.intellij.openapi.vcs.CheckoutProvider
- getCommitExecutors():java.util.List
- getCommittedChangesProvider():com.intellij.openapi.vcs.CommittedChangesProvider
- getCompareWithTheSameVersionActionName():java.lang.String
- getConfigurable():com.intellij.openapi.options.Configurable
- f:getConfiguration():com.intellij.openapi.vcs.VcsConfiguration
- getCustomConvertor():com.intellij.openapi.vcs.AbstractVcs$RootsConvertor
- getDiffProvider():com.intellij.openapi.vcs.diff.DiffProvider
- a:getDisplayName():java.lang.String
- getEditFileProvider():com.intellij.openapi.vcs.EditFileProvider
- getForcedCommitMode():com.intellij.vcs.commit.CommitMode
- getIntegrateEnvironment():com.intellij.openapi.vcs.update.UpdateEnvironment
- f:getKeyInstanceMethod():com.intellij.openapi.vcs.VcsKey
- getMergeProvider():com.intellij.openapi.vcs.merge.MergeProvider
- f:getName():java.lang.String
- f:getOutgoingChangesProvider():com.intellij.openapi.vcs.VcsOutgoingChangesProvider
- p:getOutgoingProviderImpl():com.intellij.openapi.vcs.VcsOutgoingChangesProvider
- getProject():com.intellij.openapi.project.Project
- getProvidedStatuses():com.intellij.openapi.vcs.FileStatus[]
- getRemoteDifferenceStrategy():com.intellij.openapi.vcs.RemoteDifferenceStrategy
- getRevisionPattern():java.lang.String
- getRevisionSelector():com.intellij.openapi.vcs.diff.RevisionSelector
- getRollbackEnvironment():com.intellij.openapi.vcs.rollback.RollbackEnvironment
- getRootConfigurable(com.intellij.openapi.vcs.VcsDirectoryMapping):com.intellij.openapi.options.UnnamedConfigurable
- getShortName():java.lang.String
- getShortNameWithMnemonic():java.lang.String
- getStatusEnvironment():com.intellij.openapi.vcs.update.UpdateEnvironment
- getTransactionProvider():com.intellij.openapi.vcs.TransactionProvider
- getTreeDiffProvider():com.intellij.openapi.vcs.TreeDiffProvider
- p:getTreeDiffProviderImpl():com.intellij.openapi.vcs.TreeDiffProvider
- getType():com.intellij.openapi.vcs.VcsType
- getUpdateEnvironment():com.intellij.openapi.vcs.update.UpdateEnvironment
- getVcsBlockHistoryProvider():com.intellij.openapi.vcs.history.VcsHistoryProvider
- getVcsExceptionsHotFixer():com.intellij.openapi.vcs.VcsExceptionsHotFixer
- getVcsHistoryProvider():com.intellij.openapi.vcs.history.VcsHistoryProvider
- hashCode():I
- isCommitActionDisabled():Z
- isTrackingUnchangedContent():Z
- isUpdateActionDisabled():Z
- isVcsBackgroundOperationsAllowed(com.intellij.openapi.vfs.VirtualFile):Z
- isVersionedDirectory(com.intellij.openapi.vfs.VirtualFile):Z
- isWithCustomMenu():Z
- isWithCustomShelves():Z
- loadRevisions(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.history.VcsRevisionNumber):com.intellij.openapi.vcs.versionBrowser.CommittedChangeList
- loadSettings():V
- mayRemoveChangeList(com.intellij.openapi.vcs.changes.LocalChangeList,Z):com.intellij.util.ThreeState
- needsCaseSensitiveDirtyScope():Z
- needsLFSWatchesForRoots():Z
- needsLegacyDefaultMappings():Z
- parseRevisionNumber(java.lang.String):com.intellij.openapi.vcs.history.VcsRevisionNumber
- parseRevisionNumber(java.lang.String,com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.history.VcsRevisionNumber
- setCheckinEnvironment(com.intellij.openapi.vcs.checkin.CheckinEnvironment):V
- setRollbackEnvironment(com.intellij.openapi.vcs.rollback.RollbackEnvironment):V
- setUpdateEnvironment(com.intellij.openapi.vcs.update.UpdateEnvironment):V
- setupEnvironments():V
- p:shutdown():V
- p:start():V
com.intellij.openapi.vcs.AbstractVcs$RootsConvertor
- a:convertRoots(java.util.List):java.util.List
a:com.intellij.openapi.vcs.AbstractVcsHelper
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project):V
- a:commitChanges(java.util.Collection,com.intellij.openapi.vcs.changes.LocalChangeList,java.lang.String,com.intellij.openapi.vcs.changes.CommitResultHandler):Z
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.AbstractVcsHelper
- a:loadAndShowCommittedChangesDetails(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.RepositoryLocation,Z):V
- a:openCommittedChangesTab(com.intellij.openapi.vcs.CommittedChangesProvider,com.intellij.openapi.vcs.RepositoryLocation,com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings,I,java.lang.String):V
- a:runTransactionRunnable(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vcs.TransactionRunnable,java.lang.Object):java.util.List
- a:selectFilePathsToProcess(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption):java.util.Collection
- a:selectFilePathsToProcess(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption,java.lang.String,java.lang.String):java.util.Collection
- a:selectFilesToProcess(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.intellij.openapi.vcs.VcsShowConfirmationOption):java.util.Collection
- a:showAnnotation(com.intellij.openapi.vcs.annotate.FileAnnotation,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.AbstractVcs):V
- a:showAnnotation(com.intellij.openapi.vcs.annotate.FileAnnotation,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.AbstractVcs,I):V
- a:showChangesListBrowser(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList,java.lang.String):V
- a:showCommittedChangesBrowser(com.intellij.openapi.vcs.CommittedChangesProvider,com.intellij.openapi.vcs.RepositoryLocation,java.lang.String,java.awt.Component):V
- showError(com.intellij.openapi.vcs.VcsException,java.lang.String):V
- a:showErrors(java.util.List,java.lang.String):V
- a:showErrors(java.util.Map,java.lang.String):V
- a:showFileHistory(com.intellij.openapi.vcs.history.VcsHistoryProvider,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.AbstractVcs):V
- a:showFileHistory(com.intellij.openapi.vcs.history.VcsHistoryProvider,com.intellij.openapi.vcs.annotate.AnnotationProvider,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.AbstractVcs):V
- f:showMergeDialog(java.util.List):java.util.List
- f:showMergeDialog(java.util.List,com.intellij.openapi.vcs.merge.MergeProvider):java.util.List
- a:showMergeDialog(java.util.List,com.intellij.openapi.vcs.merge.MergeProvider,com.intellij.openapi.vcs.merge.MergeDialogCustomizer):java.util.List
- a:showWhatDiffersBrowser(java.util.Collection,java.lang.String):V
e:com.intellij.openapi.vcs.ActionType
- java.lang.Enum
- sf:checkin:com.intellij.openapi.vcs.ActionType
- sf:checkout:com.intellij.openapi.vcs.ActionType
- sf:revert:com.intellij.openapi.vcs.ActionType
- sf:status:com.intellij.openapi.vcs.ActionType
- sf:update:com.intellij.openapi.vcs.ActionType
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.ActionType
- s:values():com.intellij.openapi.vcs.ActionType[]
com.intellij.openapi.vcs.BranchChangeListener
- java.util.EventListener
- sf:VCS_BRANCH_CHANGED:com.intellij.util.messages.Topic
- a:branchHasChanged(java.lang.String):V
- a:branchWillChange(java.lang.String):V
com.intellij.openapi.vcs.BranchRenameListener
- java.util.EventListener
- sf:VCS_BRANCH_RENAMED:com.intellij.util.messages.Topic
- a:branchNameChanged(com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.String):V
com.intellij.openapi.vcs.CachingCommittedChangesProvider
- com.intellij.openapi.vcs.CommittedChangesProvider
- a:getChangelistTitle():java.lang.String
- a:getFormatVersion():I
- getIncomingFiles(com.intellij.openapi.vcs.RepositoryLocation):java.util.Collection
- isChangeLocallyAvailable(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):Z
- isMaxCountSupported():Z
- a:readChangeList(com.intellij.openapi.vcs.RepositoryLocation,java.io.DataInput):com.intellij.openapi.vcs.versionBrowser.CommittedChangeList
- refreshCacheByNumber():Z
- a:refreshIncomingWithCommitted():Z
- a:writeChangeList(java.io.DataOutput,com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):V
a:com.intellij.openapi.vcs.ChangeListColumn
- sf:DATE:com.intellij.openapi.vcs.ChangeListColumn
- sf:DESCRIPTION:com.intellij.openapi.vcs.ChangeListColumn
- sf:NAME:com.intellij.openapi.vcs.ChangeListColumn
- sf:NUMBER:com.intellij.openapi.vcs.ChangeListColumn
- <init>():V
- getComparator():java.util.Comparator
- a:getTitle():java.lang.String
- a:getValue(com.intellij.openapi.vcs.changes.ChangeList):java.lang.Object
- s:isCustom(com.intellij.openapi.vcs.ChangeListColumn):Z
c:com.intellij.openapi.vcs.ChangeListColumn$ChangeListNumberColumn
- com.intellij.openapi.vcs.ChangeListColumn
- <init>(java.lang.String):V
- getComparator():java.util.Comparator
- getTitle():java.lang.String
- getValue(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):java.lang.Object
com.intellij.openapi.vcs.CheckinProjectPanel
- com.intellij.openapi.vcs.CommitMessageI
- com.intellij.openapi.vcs.ui.Refreshable
- a:getCommitActionName():java.lang.String
- a:getCommitMessage():java.lang.String
- a:getCommitWorkflowHandler():com.intellij.vcs.commit.CommitWorkflowHandler
- a:getComponent():javax.swing.JComponent
- a:getFiles():java.util.Collection
- a:getPreferredFocusedComponent():javax.swing.JComponent
- a:getProject():com.intellij.openapi.project.Project
- a:getRoots():java.util.Collection
- a:getSelectedChanges():java.util.Collection
- a:getVirtualFiles():java.util.Collection
- a:hasDiffs():Z
- a:vcsIsAffected(java.lang.String):Z
com.intellij.openapi.vcs.CheckoutProvider
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- buildVcsCloneComponent(com.intellij.openapi.project.Project,com.intellij.openapi.application.ModalityState,com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogComponentStateListener):com.intellij.openapi.vcs.ui.VcsCloneComponent
- a:doCheckout(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.CheckoutProvider$Listener):V
- a:getVcsName():java.lang.String
c:com.intellij.openapi.vcs.CheckoutProvider$CheckoutProviderComparator
- java.util.Comparator
- <init>():V
- compare(com.intellij.openapi.vcs.CheckoutProvider,com.intellij.openapi.vcs.CheckoutProvider):I
com.intellij.openapi.vcs.CheckoutProvider$Listener
- a:checkoutCompleted():V
- a:directoryCheckedOut(java.io.File,com.intellij.openapi.vcs.VcsKey):V
a:com.intellij.openapi.vcs.CheckoutProviderEx
- com.intellij.openapi.vcs.CheckoutProvider
- <init>():V
- a:doCheckout(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.CheckoutProvider$Listener,java.lang.String):V
- a:getVcsId():java.lang.String
com.intellij.openapi.vcs.CommitMessageI
- a:setCommitMessage(java.lang.String):V
com.intellij.openapi.vcs.CommittedChangesProvider
- createActions(com.intellij.openapi.vcs.changes.committed.DecoratorManager,com.intellij.openapi.vcs.RepositoryLocation):com.intellij.openapi.vcs.changes.committed.VcsCommittedViewAuxiliary
- createDefaultSettings():com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings
- a:createFilterUI(Z):com.intellij.openapi.vcs.versionBrowser.ChangesBrowserSettingsEditor
- a:getColumns():com.intellij.openapi.vcs.ChangeListColumn[]
- a:getCommittedChanges(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings,com.intellij.openapi.vcs.RepositoryLocation,I):java.util.List
- getForNonLocal(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.RepositoryLocation
- a:getLocationFor(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.RepositoryLocation
- a:getOneList(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.history.VcsRevisionNumber):com.intellij.openapi.util.Pair
- a:getUnlimitedCountValue():I
- getZipper():com.intellij.openapi.vcs.changes.committed.VcsCommittedListsZipper
- a:loadCommittedChanges(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings,com.intellij.openapi.vcs.RepositoryLocation,I,com.intellij.util.AsynchConsumer):V
- supportsIncomingChanges():Z
c:com.intellij.openapi.vcs.ComparableComparator
- java.util.Comparator
- <init>():V
- compare(java.lang.Comparable,java.lang.Comparable):I
c:com.intellij.openapi.vcs.ComparableComparator$Descending
- java.util.Comparator
- <init>():V
- compare(java.lang.Comparable,java.lang.Comparable):I
c:com.intellij.openapi.vcs.DefaultRepositoryLocation
- com.intellij.openapi.vcs.RepositoryLocation
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String):V
- getKey():java.lang.String
- getLocation():java.lang.String
- getURL():java.lang.String
- toPresentableString():java.lang.String
com.intellij.openapi.vcs.EditFileProvider
- a:editFiles(com.intellij.openapi.vfs.VirtualFile[]):V
- a:getRequestText():java.lang.String
com.intellij.openapi.vcs.FilesProcessor
- com.intellij.openapi.Disposable
- a:processFiles(java.util.Collection):V
c:com.intellij.openapi.vcs.FilterDescendantVirtualFileConvertible
- com.intellij.openapi.vcs.AbstractFilterChildren
- <init>(java.util.function.Function,java.util.Comparator):V
- p:isAncestor(java.lang.Object,java.lang.Object):Z
- p:sortAscending(java.util.List):V
f:com.intellij.openapi.vcs.FilterDescendantVirtualFiles
- com.intellij.openapi.vcs.AbstractFilterChildren
- s:filter(java.util.List):V
f:com.intellij.openapi.vcs.FilterFilePathStrings
- com.intellij.openapi.vcs.AbstractFilterChildren
- <init>():V
- s:getInstance():com.intellij.openapi.vcs.FilterFilePathStrings
f:com.intellij.openapi.vcs.Ignored
- com.intellij.openapi.vcs.IgnoredCheckResult
- <init>(java.io.File,java.lang.String):V
- f:component1():java.io.File
- f:component2():java.lang.String
- f:copy(java.io.File,java.lang.String):com.intellij.openapi.vcs.Ignored
- bs:copy$default(com.intellij.openapi.vcs.Ignored,java.io.File,java.lang.String,I,java.lang.Object):com.intellij.openapi.vcs.Ignored
- equals(java.lang.Object):Z
- f:getIgnoreFile():java.io.File
- f:getMatchedPattern():java.lang.String
- hashCode():I
a:com.intellij.openapi.vcs.IgnoredCheckResult
c:com.intellij.openapi.vcs.IssueNavigationConfiguration
- com.intellij.openapi.util.SimpleModificationTracker
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- s:findIssueLinkMatches(java.lang.CharSequence,com.intellij.openapi.vcs.IssueNavigationLink,java.util.List):V
- findIssueLinks(java.lang.CharSequence):java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.IssueNavigationConfiguration
- getLinks():java.util.List
- getState():com.intellij.openapi.vcs.IssueNavigationConfiguration
- loadState(com.intellij.openapi.vcs.IssueNavigationConfiguration):V
- s:processTextWithLinks(java.lang.String,java.util.List,java.util.function.Consumer,java.util.function.BiConsumer):V
- setLinks(java.util.List):V
c:com.intellij.openapi.vcs.IssueNavigationConfiguration$LinkMatch
- com.intellij.openapi.vcs.LinkDescriptor
- java.lang.Comparable
- <init>(com.intellij.openapi.util.TextRange,java.lang.String):V
- compareTo(java.lang.Object):I
- getRange():com.intellij.openapi.util.TextRange
- getTargetUrl():java.lang.String
c:com.intellij.openapi.vcs.IssueNavigationLink
- <init>():V
- <init>(java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getIssuePattern():java.util.regex.Pattern
- getIssueRegexp():java.lang.String
- getLinkRegexp():java.lang.String
- hashCode():I
- setIssueRegexp(java.lang.String):V
- setLinkRegexp(java.lang.String):V
f:com.intellij.openapi.vcs.LineHandlerHelper
- <init>():V
- s:splitText(java.lang.String):java.util.List
- s:trimLineSeparator(java.lang.String):java.lang.String
com.intellij.openapi.vcs.LineProcessEventListener
- com.intellij.openapi.vcs.ProcessEventListener
- a:onLineAvailable(java.lang.String,com.intellij.openapi.util.Key):V
f:com.intellij.openapi.vcs.NotIgnored
- com.intellij.openapi.vcs.IgnoredCheckResult
- sf:INSTANCE:com.intellij.openapi.vcs.NotIgnored
com.intellij.openapi.vcs.PluginVcsMappingListener
- java.util.EventListener
- a:directoryMappingChanged():V
com.intellij.openapi.vcs.ProcessEventListener
- java.util.EventListener
- processTerminated(I):V
- startFailed(java.lang.Throwable):V
a:com.intellij.openapi.vcs.ProjectLevelVcsManager
- sf:VCS_CONFIGURATION_CHANGED:com.intellij.util.messages.Topic
- sf:VCS_CONFIGURATION_CHANGED_IN_PLUGIN:com.intellij.util.messages.Topic
- <init>():V
- a:addMessageToConsoleWindow(com.intellij.openapi.vcs.VcsConsoleLine):V
- a:addMessageToConsoleWindow(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType):V
- a:addMessageToConsoleWindow(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):V
- areVcsesActivated():Z
- a:checkAllFilesAreUnder(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vfs.VirtualFile[]):Z
- a:checkVcsIsActive(com.intellij.openapi.vcs.AbstractVcs):Z
- a:checkVcsIsActive(java.lang.String):Z
- a:findVcsByName(java.lang.String):com.intellij.openapi.vcs.AbstractVcs
- a:findVersioningVcs(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.AbstractVcs
- a:getAllActiveVcss():com.intellij.openapi.vcs.AbstractVcs[]
- a:getAllSupportedVcss():com.intellij.openapi.vcs.AbstractVcs[]
- a:getAllVcsRoots():com.intellij.openapi.vcs.VcsRoot[]
- a:getAllVcss():com.intellij.openapi.vcs.impl.VcsDescriptor[]
- a:getAllVersionedRoots():com.intellij.openapi.vfs.VirtualFile[]
- a:getAnnotationLocalChangesListener():com.intellij.openapi.vcs.changes.VcsAnnotationLocalChangesListener
- a:getCompositeCheckoutListener():com.intellij.openapi.vcs.CheckoutProvider$Listener
- a:getConsolidatedVcsName():java.lang.String
- a:getContentRevisionCache():com.intellij.openapi.vcs.impl.ContentRevisionCache
- a:getDescriptor(java.lang.String):com.intellij.openapi.vcs.impl.VcsDescriptor
- a:getDirectoryMappingFor(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.VcsDirectoryMapping
- a:getDirectoryMappings():java.util.List
- a:getDirectoryMappings(com.intellij.openapi.vcs.AbstractVcs):java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.ProjectLevelVcsManager
- a:getRootChecker(com.intellij.openapi.vcs.AbstractVcs):com.intellij.openapi.vcs.VcsRootChecker
- a:getRootsUnderVcs(com.intellij.openapi.vcs.AbstractVcs):com.intellij.openapi.vfs.VirtualFile[]
- a:getRootsUnderVcsWithoutFiltering(com.intellij.openapi.vcs.AbstractVcs):java.util.List
- a:getShortNameForVcsRoot(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- a:getSingleVCS():com.intellij.openapi.vcs.AbstractVcs
- a:getStandardConfirmation(com.intellij.openapi.vcs.VcsConfiguration$StandardConfirmation,com.intellij.openapi.vcs.AbstractVcs):com.intellij.openapi.vcs.VcsShowConfirmationOption
- a:getStandardOption(com.intellij.openapi.vcs.VcsConfiguration$StandardOption,com.intellij.openapi.vcs.AbstractVcs):com.intellij.openapi.vcs.VcsShowSettingOption
- a:getVcsFor(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.AbstractVcs
- a:getVcsFor(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.AbstractVcs
- a:getVcsHistoryCache():com.intellij.openapi.vcs.history.VcsHistoryCache
- a:getVcsRootFor(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vfs.VirtualFile
- a:getVcsRootFor(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- a:getVcsRootObjectFor(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.VcsRoot
- a:getVcsRootObjectFor(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.VcsRoot
- a:hasActiveVcss():Z
- a:hasAnyMappings():Z
- a:isBackgroundVcsOperationRunning():Z
- a:isFileInContent(com.intellij.openapi.vfs.VirtualFile):Z
- a:isIgnored(com.intellij.openapi.vcs.FilePath):Z
- a:isIgnored(com.intellij.openapi.vfs.VirtualFile):Z
- a:iterateVcsRoot(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor):V
- a:iterateVcsRoot(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor,com.intellij.openapi.vcs.VirtualFileFilter):V
- a:iterateVfUnderVcsRoot(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor):V
- a:runAfterInitialization(java.lang.Runnable):V
- a:scrollConsoleToTheEnd():V
- a:setDirectoryMapping(java.lang.String,java.lang.String):V
- a:setDirectoryMappings(java.util.List):V
- a:showConsole(java.lang.Runnable):V
- a:showProjectOperationInfo(com.intellij.openapi.vcs.update.UpdatedFiles,java.lang.String):V
- a:startBackgroundVcsOperation():V
- a:stopBackgroundVcsOperation():V
- updateActiveVcss():V
f:com.intellij.openapi.vcs.ReadonlyStatusIsVisibleActivationCheck
- <init>():V
- s:check(com.intellij.openapi.project.Project,java.lang.String):V
e:com.intellij.openapi.vcs.RemoteDifferenceStrategy
- java.lang.Enum
- sf:ASK_LATEST_REVISION:com.intellij.openapi.vcs.RemoteDifferenceStrategy
- sf:ASK_TREE_PROVIDER:com.intellij.openapi.vcs.RemoteDifferenceStrategy
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.RemoteDifferenceStrategy
- s:values():com.intellij.openapi.vcs.RemoteDifferenceStrategy[]
com.intellij.openapi.vcs.RepositoryLocation
- a:getKey():java.lang.String
- onAfterBatch():V
- onBeforeBatch():V
- a:toPresentableString():java.lang.String
f:com.intellij.openapi.vcs.RichTextItem
- <init>(java.lang.String,com.intellij.ui.SimpleTextAttributes):V
- getText():java.lang.String
- getTextAttributes():com.intellij.ui.SimpleTextAttributes
a:com.intellij.openapi.vcs.StartedActivated
- p:<init>():V
- pa:activate():V
- pa:deactivate():V
- f:doActivate():V
- f:doDeactivate():V
- f:doShutdown():V
- f:doStart():V
- pa:shutdown():V
- pa:start():V
com.intellij.openapi.vcs.TransactionProvider
- a:commitTransaction(java.lang.Object):V
- a:rollbackTransaction(java.lang.Object):V
- a:startTransaction(java.lang.Object):V
com.intellij.openapi.vcs.TransactionRunnable
- a:run(java.util.List):V
com.intellij.openapi.vcs.TreeDiffProvider
- a:getRemotelyChanged(com.intellij.openapi.vfs.VirtualFile,java.util.Collection):java.util.Collection
com.intellij.openapi.vcs.VcsActions
- sf:ACTION_COPY_REVISION_NUMBER:java.lang.String
- sf:COMMIT_EXECUTORS_GROUP:java.lang.String
- sf:DIFF_AFTER_WITH_LOCAL:java.lang.String
- sf:DIFF_BEFORE_WITH_LOCAL:java.lang.String
- sf:PRIMARY_COMMIT_EXECUTORS_GROUP:java.lang.String
- sf:VCS_OPERATIONS_POPUP:java.lang.String
c:com.intellij.openapi.vcs.VcsApplicationSettings
- com.intellij.openapi.components.PersistentStateComponent
- COMMIT_FROM_LOCAL_CHANGES:Z
- CREATE_CHANGELISTS_AUTOMATICALLY:Z
- DETECT_PATCH_ON_THE_FLY:Z
- DISABLE_MANAGE_IGNORE_FILES:Z
- ENABLE_PARTIAL_CHANGELISTS:Z
- MANAGE_IGNORE_FILES:Z
- MARK_EXCLUDED_AS_IGNORED:Z
- PATCH_STORAGE_LOCATION:java.lang.String
- SHOW_DIFF_ON_DOUBLE_CLICK:Z
- SHOW_EDITOR_PREVIEW_ON_DOUBLE_CLICK:Z
- SHOW_LST_ERROR_STRIPE_MARKERS:Z
- SHOW_LST_GUTTER_MARKERS:Z
- SHOW_WHITESPACES_IN_LST:Z
- <init>():V
- s:getInstance():com.intellij.openapi.vcs.VcsApplicationSettings
- getState():com.intellij.openapi.vcs.VcsApplicationSettings
- loadState(com.intellij.openapi.vcs.VcsApplicationSettings):V
a:com.intellij.openapi.vcs.VcsCheckoutProcessor
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:checkout(java.util.Map,com.intellij.openapi.vfs.VirtualFile,java.lang.String):Z
- a:getId():java.lang.String
- s:getProcessor(java.lang.String):com.intellij.openapi.vcs.VcsCheckoutProcessor
com.intellij.openapi.vcs.VcsConfigurableProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getConfigurable(com.intellij.openapi.project.Project):com.intellij.openapi.options.Configurable
f:com.intellij.openapi.vcs.VcsConfiguration
- com.intellij.openapi.components.PersistentStateComponent
- ADD_EXTERNAL_FILES_SILENTLY:Z
- CHANGED_ON_SERVER_INTERVAL:I
- CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT:Z
- CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT_LOCAL:Z
- CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT_PROFILE:java.lang.String
- CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT:Z
- CHECK_LOCALLY_CHANGED_CONFLICTS_IN_BACKGROUND:Z
- CHECK_NEW_TODO:Z
- CLEAR_INITIAL_COMMIT_MESSAGE:Z
- CODE_SMELLS_PROFILE:java.lang.String
- CODE_SMELLS_PROFILE_LOCAL:Z
- CUSTOM_SHELF_PATH:java.lang.String
- DEFAULT_PATCH_EXTENSION:java.lang.String
- sf:DIFF:java.lang.String
- GROUP_MULTIFILE_MERGE_BY_DIRECTORY:Z
- IGNORED_UNREGISTERED_ROOTS:java.util.List
- INCLUDE_TEXT_INTO_SHELF:Z
- LAST_CHUNK_COMMIT_MESSAGE:java.lang.String
- LAST_COMMIT_MESSAGE:java.lang.String
- LIMIT_HISTORY:Z
- LOCAL_CHANGES_DETAILS_PREVIEW_SHOWN:Z
- MAKE_NEW_CHANGELIST_ACTIVE:Z
- MARK_IGNORED_AS_EXCLUDED:Z
- MAXIMUM_HISTORY_ROWS:I
- MOVE_SHELVES:Z
- NON_MODAL_COMMIT_POSTPONE_SLOW_CHECKS:Z
- OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT:Z
- sf:PATCH:java.lang.String
- PRESELECT_EXISTING_CHANGELIST:Z
- REARRANGE_BEFORE_PROJECT_COMMIT:Z
- REFORMAT_BEFORE_PROJECT_COMMIT:Z
- RELOAD_CONTEXT:Z
- REMOVE_EMPTY_INACTIVE_CHANGELISTS:com.intellij.openapi.vcs.VcsShowConfirmationOption$Value
- SHELVE_DETAILS_PREVIEW_SHOWN:Z
- SHOW_DIRTY_RECURSIVELY:Z
- SHOW_FILE_HISTORY_AS_TREE:Z
- SHOW_FILE_HISTORY_DETAILS:Z
- SHOW_ONLY_CHANGED_IN_SELECTION_DIFF:Z
- SHOW_PATCH_IN_EXPLORER:java.lang.Boolean
- UPDATE_FILTER_BY_SCOPE:Z
- UPDATE_FILTER_SCOPE_NAME:java.lang.String
- UPDATE_GROUP_BY_CHANGELIST:Z
- UPDATE_GROUP_BY_PACKAGES:Z
- USE_COMMIT_MESSAGE_MARGIN:Z
- USE_CUSTOM_SHELF_PATH:Z
- WRAP_WHEN_TYPING_REACHES_RIGHT_MARGIN:Z
- changeBrowserSettings:java.util.Map
- myLastCommitMessages:java.util.List
- myTodoPanelSettings:com.intellij.ide.todo.TodoPanelSettings
- sf:ourMaximumFileForBaseRevisionSize:J
- <init>():V
- acceptLastCreatedPatchName(java.lang.String):V
- addIgnoredUnregisteredRoots(java.util.Collection):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.VcsConfiguration
- getLastNonEmptyCommitMessage():java.lang.String
- getPatchFileExtension():java.lang.String
- getRecentMessages():java.util.ArrayList
- getState():com.intellij.openapi.vcs.VcsConfiguration
- getTempChunkCommitMessage():java.lang.String
- getUpdateOption():com.intellij.openapi.progress.PerformInBackgroundOption
- isChangedOnServerEnabled():Z
- isIgnoredUnregisteredRoot(java.lang.String):Z
- loadState(com.intellij.openapi.vcs.VcsConfiguration):V
- removeFromIgnoredUnregisteredRoots(java.util.Collection):V
- replaceMessage(java.lang.String,java.lang.String):V
- saveCommitMessage(java.lang.String):V
- saveTempChunkCommitMessage(java.lang.String):V
- setRecentMessages(java.util.List):V
e:com.intellij.openapi.vcs.VcsConfiguration$StandardConfirmation
- java.lang.Enum
- sf:ADD:com.intellij.openapi.vcs.VcsConfiguration$StandardConfirmation
- sf:REMOVE:com.intellij.openapi.vcs.VcsConfiguration$StandardConfirmation
- getDisplayName():java.lang.String
- getId():java.lang.String
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.VcsConfiguration$StandardConfirmation
- s:values():com.intellij.openapi.vcs.VcsConfiguration$StandardConfirmation[]
e:com.intellij.openapi.vcs.VcsConfiguration$StandardOption
- java.lang.Enum
- sf:ADD:com.intellij.openapi.vcs.VcsConfiguration$StandardOption
- sf:CHECKOUT:com.intellij.openapi.vcs.VcsConfiguration$StandardOption
- sf:EDIT:com.intellij.openapi.vcs.VcsConfiguration$StandardOption
- sf:REMOVE:com.intellij.openapi.vcs.VcsConfiguration$StandardOption
- sf:STATUS:com.intellij.openapi.vcs.VcsConfiguration$StandardOption
- sf:UPDATE:com.intellij.openapi.vcs.VcsConfiguration$StandardOption
- getDisplayName():java.lang.String
- getId():java.lang.String
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.VcsConfiguration$StandardOption
- s:values():com.intellij.openapi.vcs.VcsConfiguration$StandardOption[]
c:com.intellij.openapi.vcs.VcsConnectionProblem
- com.intellij.openapi.vcs.VcsException
- <init>(com.intellij.openapi.vcs.VcsConnectionProblem):V
- <init>(java.lang.String):V
- attemptQuickFix(Z):Z
f:com.intellij.openapi.vcs.VcsConsoleLine
- s:create(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType):com.intellij.openapi.vcs.VcsConsoleLine
- s:create(java.util.List):com.intellij.openapi.vcs.VcsConsoleLine
- print(com.intellij.execution.ui.ConsoleView):V
com.intellij.openapi.vcs.VcsDataKeys
- sf:CHANGES:com.intellij.openapi.actionSystem.DataKey
- sf:CHANGES_SELECTION:com.intellij.openapi.actionSystem.DataKey
- sf:CHANGE_LEAD_SELECTION:com.intellij.openapi.actionSystem.DataKey
- sf:CHANGE_LISTS:com.intellij.openapi.actionSystem.DataKey
- sf:COMMIT_MESSAGE_CONTROL:com.intellij.openapi.actionSystem.DataKey
- sf:COMMIT_MESSAGE_DOCUMENT:com.intellij.openapi.actionSystem.DataKey
- sf:COMMIT_WORKFLOW_HANDLER:com.intellij.openapi.actionSystem.DataKey
- sf:COMMIT_WORKFLOW_UI:com.intellij.openapi.actionSystem.DataKey
- sf:CURRENT_CHANGE:com.intellij.openapi.actionSystem.DataKey
- sf:CURRENT_UNVERSIONED:com.intellij.openapi.actionSystem.DataKey
- sf:FILE_PATH:com.intellij.openapi.actionSystem.DataKey
- sf:HISTORY_PROVIDER:com.intellij.openapi.actionSystem.DataKey
- sf:HISTORY_SESSION:com.intellij.openapi.actionSystem.DataKey
- sf:PRESET_COMMIT_MESSAGE:com.intellij.openapi.actionSystem.DataKey
- sf:REMOTE_HISTORY_CHANGED_LISTENER:com.intellij.openapi.actionSystem.DataKey
- sf:REMOTE_HISTORY_LOCATION:com.intellij.openapi.actionSystem.DataKey
- sf:SELECTED_CHANGES:com.intellij.openapi.actionSystem.DataKey
- sf:SELECTED_CHANGES_IN_DETAILS:com.intellij.openapi.actionSystem.DataKey
- sf:VCS:com.intellij.openapi.actionSystem.DataKey
- sf:VCS_COMMIT_SUBJECTS:com.intellij.openapi.actionSystem.DataKey
- sf:VCS_FILE_REVISION:com.intellij.openapi.actionSystem.DataKey
- sf:VCS_FILE_REVISIONS:com.intellij.openapi.actionSystem.DataKey
- sf:VCS_NON_LOCAL_HISTORY_SESSION:com.intellij.openapi.actionSystem.DataKey
- sf:VCS_REVISION_NUMBER:com.intellij.openapi.actionSystem.DataKey
- sf:VCS_REVISION_NUMBERS:com.intellij.openapi.actionSystem.DataKey
- sf:VCS_VIRTUAL_FILE:com.intellij.openapi.actionSystem.DataKey
- sf:VIRTUAL_FILES:com.intellij.openapi.actionSystem.DataKey
f:com.intellij.openapi.vcs.VcsDirectoryMapping
- sf:DEFAULT_MAPPING_DIR:java.lang.String
- sf:EMPTY_ARRAY:com.intellij.openapi.vcs.VcsDirectoryMapping[]
- sf:PROJECT_CONSTANT:java.util.function.Supplier
- <init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.vcs.VcsRootSettings):V
- s:createDefault(java.lang.String):com.intellij.openapi.vcs.VcsDirectoryMapping
- equals(java.lang.Object):Z
- getDirectory():java.lang.String
- getRootSettings():com.intellij.openapi.vcs.VcsRootSettings
- getVcs():java.lang.String
- hashCode():I
- isDefaultMapping():Z
- isNoneMapping():Z
a:com.intellij.openapi.vcs.VcsEnvCustomizer
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:customizeCommandAndEnvironment(com.intellij.openapi.project.Project,java.util.Map,com.intellij.openapi.vcs.VcsEnvCustomizer$VcsExecutableContext):V
- getConfigurable(com.intellij.openapi.project.Project):com.intellij.openapi.options.UnnamedConfigurable
e:com.intellij.openapi.vcs.VcsEnvCustomizer$ExecutableType
- java.lang.Enum
- sf:LOCAL:com.intellij.openapi.vcs.VcsEnvCustomizer$ExecutableType
- sf:WSL:com.intellij.openapi.vcs.VcsEnvCustomizer$ExecutableType
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.VcsEnvCustomizer$ExecutableType
- s:values():com.intellij.openapi.vcs.VcsEnvCustomizer$ExecutableType[]
c:com.intellij.openapi.vcs.VcsEnvCustomizer$VcsExecutableContext
- <init>(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.VcsEnvCustomizer$ExecutableType):V
- getRoot():com.intellij.openapi.vfs.VirtualFile
- getType():com.intellij.openapi.vcs.VcsEnvCustomizer$ExecutableType
- getVcs():com.intellij.openapi.vcs.AbstractVcs
- getWslOptions():com.intellij.execution.wsl.WSLCommandLineOptions
com.intellij.openapi.vcs.VcsExceptionsHotFixer
- a:groupExceptions(com.intellij.openapi.vcs.ActionType,java.util.List):java.util.Map
com.intellij.openapi.vcs.VcsFileListenerContextHelper
- a:clearContext():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.VcsFileListenerContextHelper
- a:ignoreAdded(java.util.Collection):V
- a:ignoreAddedRecursive(java.util.Collection):V
- a:ignoreDeleted(java.util.Collection):V
- a:isAdditionContextEmpty():Z
- a:isAdditionIgnored(com.intellij.openapi.vcs.FilePath):Z
- a:isDeletionContextEmpty():Z
- a:isDeletionIgnored(com.intellij.openapi.vcs.FilePath):Z
com.intellij.openapi.vcs.VcsIgnoreChecker
- a:getSupportedVcs():com.intellij.openapi.vcs.VcsKey
- a:isFilePatternIgnored(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vcs.IgnoredCheckResult
- a:isIgnored(com.intellij.openapi.vfs.VirtualFile,java.nio.file.Path):com.intellij.openapi.vcs.IgnoredCheckResult
com.intellij.openapi.vcs.VcsListener
- com.intellij.openapi.vcs.PluginVcsMappingListener
- com.intellij.openapi.vcs.VcsMappingListener
com.intellij.openapi.vcs.VcsMappingListener
- java.util.EventListener
- a:directoryMappingChanged():V
com.intellij.openapi.vcs.VcsOutgoingChangesProvider
- a:getMergeBaseNumber(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.history.VcsRevisionNumber
- a:getOutgoingChanges(com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.util.Pair
f:com.intellij.openapi.vcs.VcsRoot
- <init>(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.vfs.VirtualFile):V
- equals(java.lang.Object):Z
- getPath():com.intellij.openapi.vfs.VirtualFile
- getVcs():com.intellij.openapi.vcs.AbstractVcs
- hashCode():I
a:com.intellij.openapi.vcs.VcsRootChecker
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- areChildrenValidMappings():Z
- detectProjectMappings(com.intellij.openapi.project.Project,java.util.Collection,java.util.Set):java.util.Collection
- a:getSupportedVcs():com.intellij.openapi.vcs.VcsKey
- isIgnored(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):Z
- isRoot(com.intellij.openapi.vfs.VirtualFile):Z
- isRoot(java.lang.String):Z
- isVcsDir(java.lang.String):Z
- suggestDependentRoots(com.intellij.openapi.vfs.VirtualFile):java.util.List
- validateRoot(com.intellij.openapi.vfs.VirtualFile):Z
- validateRoot(java.lang.String):Z
com.intellij.openapi.vcs.VcsRootError
- a:getMapping():com.intellij.openapi.vcs.VcsDirectoryMapping
- a:getType():com.intellij.openapi.vcs.VcsRootError$Type
e:com.intellij.openapi.vcs.VcsRootError$Type
- java.lang.Enum
- sf:EXTRA_MAPPING:com.intellij.openapi.vcs.VcsRootError$Type
- sf:UNREGISTERED_ROOT:com.intellij.openapi.vcs.VcsRootError$Type
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.VcsRootError$Type
- s:values():com.intellij.openapi.vcs.VcsRootError$Type[]
com.intellij.openapi.vcs.VcsRootSettings
- com.intellij.openapi.util.JDOMExternalizable
com.intellij.openapi.vcs.VcsShowConfirmationOption
- sf:STATIC_SHOW_CONFIRMATION:com.intellij.openapi.vcs.VcsShowConfirmationOption
- s:getConfirmationOptionText(com.intellij.openapi.vcs.VcsShowConfirmationOption$Value):java.lang.String
- a:getValue():com.intellij.openapi.vcs.VcsShowConfirmationOption$Value
- a:isPersistent():Z
- a:setValue(com.intellij.openapi.vcs.VcsShowConfirmationOption$Value):V
e:com.intellij.openapi.vcs.VcsShowConfirmationOption$Value
- java.lang.Enum
- sf:DO_ACTION_SILENTLY:com.intellij.openapi.vcs.VcsShowConfirmationOption$Value
- sf:DO_NOTHING_SILENTLY:com.intellij.openapi.vcs.VcsShowConfirmationOption$Value
- sf:SHOW_CONFIRMATION:com.intellij.openapi.vcs.VcsShowConfirmationOption$Value
- s:fromString(java.lang.String):com.intellij.openapi.vcs.VcsShowConfirmationOption$Value
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.VcsShowConfirmationOption$Value
- s:values():com.intellij.openapi.vcs.VcsShowConfirmationOption$Value[]
com.intellij.openapi.vcs.VcsShowSettingOption
- a:getValue():Z
- a:setValue(Z):V
a:com.intellij.openapi.vcs.VcsTaskHandler
- <init>():V
- cleanUpBranchName(java.lang.String):java.lang.String
- a:closeTask(com.intellij.openapi.vcs.VcsTaskHandler$TaskInfo,com.intellij.openapi.vcs.VcsTaskHandler$TaskInfo):V
- a:getAllExistingTasks():com.intellij.openapi.vcs.VcsTaskHandler$TaskInfo[]
- s:getAllHandlers(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.VcsTaskHandler[]
- a:getCurrentTasks():com.intellij.openapi.vcs.VcsTaskHandler$TaskInfo[]
- isBranchNameValid(java.lang.String):Z
- a:isEnabled():Z
- a:isSyncEnabled():Z
- a:startNewTask(java.lang.String):com.intellij.openapi.vcs.VcsTaskHandler$TaskInfo
- a:switchToTask(com.intellij.openapi.vcs.VcsTaskHandler$TaskInfo,java.lang.Runnable):Z
c:com.intellij.openapi.vcs.VcsTaskHandler$TaskInfo
- java.lang.Comparable
- <init>(java.lang.String,java.util.Collection):V
- <init>(java.lang.String,java.util.Collection,Z):V
- compareTo(com.intellij.openapi.vcs.VcsTaskHandler$TaskInfo):I
- equals(java.lang.Object):Z
- getName():java.lang.String
- getRepositories():java.util.Collection
- hashCode():I
- isRemote():Z
e:com.intellij.openapi.vcs.VcsType
- java.lang.Enum
- sf:centralized:com.intellij.openapi.vcs.VcsType
- sf:distributed:com.intellij.openapi.vcs.VcsType
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.VcsType
- s:values():com.intellij.openapi.vcs.VcsType[]
a:com.intellij.openapi.vcs.VirtualFileFilter
- <init>():V
- afterChildrenVisited(com.intellij.openapi.vfs.VirtualFile):V
- a:shouldGoIntoDirectory(com.intellij.openapi.vfs.VirtualFile):Z
com.intellij.openapi.vcs.actions.ActiveAnnotationGutter
- com.intellij.openapi.editor.EditorGutterAction
- com.intellij.openapi.editor.TextAnnotationGutterProvider
a:com.intellij.openapi.vcs.actions.StandardVcsGroup
- com.intellij.openapi.actionSystem.DefaultActionGroup
- com.intellij.openapi.project.DumbAware
- <init>():V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- a:getVcs(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.AbstractVcs
- getVcsName(com.intellij.openapi.project.Project):java.lang.String
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.openapi.vcs.actions.VcsContext
- com.intellij.ui.PlaceProvider
- a:getActionName():java.lang.String
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getModifiers():I
- a:getProject():com.intellij.openapi.project.Project
- a:getSelectedChangeLists():com.intellij.openapi.vcs.changes.ChangeList[]
- a:getSelectedChanges():com.intellij.openapi.vcs.changes.Change[]
- a:getSelectedFile():com.intellij.openapi.vfs.VirtualFile
- a:getSelectedFilePath():com.intellij.openapi.vcs.FilePath
- a:getSelectedFilePaths():com.intellij.openapi.vcs.FilePath[]
- getSelectedFilePathsStream():java.util.stream.Stream
- a:getSelectedFiles():com.intellij.openapi.vfs.VirtualFile[]
- a:getSelectedFilesCollection():java.util.Collection
- getSelectedFilesStream():java.util.stream.Stream
- a:getSelectedIOFile():java.io.File
- a:getSelectedIOFiles():java.io.File[]
- getSelectedUnversionedFilePaths():java.util.List
com.intellij.openapi.vcs.actions.VcsContextFactory
- a:createCachedContextOn(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.vcs.actions.VcsContext
- a:createContextOn(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.vcs.actions.VcsContext
- a:createFilePath(com.intellij.openapi.vfs.VirtualFile,java.lang.String,Z):com.intellij.openapi.vcs.FilePath
- a:createFilePath(java.lang.String,Z):com.intellij.openapi.vcs.FilePath
- a:createFilePath(java.nio.file.Path,Z):com.intellij.openapi.vcs.FilePath
- a:createFilePathOn(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.FilePath
- a:createFilePathOn(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vcs.FilePath
- a:createFilePathOn(java.io.File):com.intellij.openapi.vcs.FilePath
- a:createFilePathOn(java.io.File,Z):com.intellij.openapi.vcs.FilePath
- a:createFilePathOnNonLocal(java.lang.String,Z):com.intellij.openapi.vcs.FilePath
- a:createLocalChangeList(com.intellij.openapi.project.Project,java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- s:getInstance():com.intellij.openapi.vcs.actions.VcsContextFactory
f:com.intellij.openapi.vcs.actions.VcsContextFactory$SERVICE
- s:getInstance():com.intellij.openapi.vcs.actions.VcsContextFactory
com.intellij.openapi.vcs.actions.VcsQuickListContentProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- getNotInVcsActions(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.AnActionEvent):java.util.List
- getNotInVcsActions(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):java.util.List
- getVcsActions(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.actionSystem.AnActionEvent):java.util.List
- getVcsActions(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.actionSystem.DataContext):java.util.List
- replaceVcsActionsFor(com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.actionSystem.DataContext):Z
a:com.intellij.openapi.vcs.actions.VcsQuickListContentProviderBase
- com.intellij.openapi.vcs.actions.VcsQuickListContentProvider
- <init>():V
- ps:add(java.lang.String,com.intellij.openapi.actionSystem.ActionManager,java.util.List):V
- pa:collectVcsSpecificActions(com.intellij.openapi.actionSystem.ActionManager):java.util.List
- getVcsActions(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.AbstractVcs,com.intellij.openapi.actionSystem.AnActionEvent):java.util.List
- pa:getVcsName():java.lang.String
c:com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails
- f:changes:java.util.List
- f:lineContentAfter:java.lang.String
- <init>(java.lang.String,java.util.List):V
c:com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails$InnerChange
- f:endOffset:I
- f:startOffset:I
- f:type:com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails$InnerChangeType
- <init>(I,I,com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails$InnerChangeType):V
e:com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails$InnerChangeType
- java.lang.Enum
- sf:DELETED:com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails$InnerChangeType
- sf:INSERTED:com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails$InnerChangeType
- sf:MODIFIED:com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails$InnerChangeType
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails$InnerChangeType
- s:values():com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails$InnerChangeType[]
com.intellij.openapi.vcs.annotate.AnnotationGutterActionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createAction(com.intellij.openapi.vcs.annotate.FileAnnotation):com.intellij.openapi.actionSystem.AnAction
com.intellij.openapi.vcs.annotate.AnnotationGutterColumnProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createColumn(com.intellij.openapi.vcs.annotate.FileAnnotation):com.intellij.openapi.vcs.annotate.LineAnnotationAspect
com.intellij.openapi.vcs.annotate.AnnotationProvider
- a:annotate(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.annotate.FileAnnotation
- a:annotate(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.history.VcsFileRevision):com.intellij.openapi.vcs.annotate.FileAnnotation
- getActionName():java.lang.String
- getAnnotationWarnings(com.intellij.openapi.vcs.annotate.FileAnnotation):com.intellij.openapi.vcs.annotate.AnnotationWarning
- getCustomActionName():java.lang.String
- isAnnotationValid(com.intellij.openapi.vcs.history.VcsFileRevision):Z
e:com.intellij.openapi.vcs.annotate.AnnotationSource
- java.lang.Enum
- sf:LOCAL:com.intellij.openapi.vcs.annotate.AnnotationSource
- sf:MERGE:com.intellij.openapi.vcs.annotate.AnnotationSource
- getColor():com.intellij.openapi.editor.colors.ColorKey
- getColor(Z):com.intellij.openapi.editor.colors.ColorKey
- s:getInstance(Z):com.intellij.openapi.vcs.annotate.AnnotationSource
- showMerged():Z
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.annotate.AnnotationSource
- s:values():com.intellij.openapi.vcs.annotate.AnnotationSource[]
com.intellij.openapi.vcs.annotate.AnnotationSourceSwitcher
- a:getAnnotationSource(I):com.intellij.openapi.vcs.annotate.AnnotationSource
- a:getDefaultSource():com.intellij.openapi.vcs.annotate.AnnotationSource
- a:getRevisionAspect():com.intellij.openapi.vcs.annotate.LineAnnotationAspect
- a:mergeSourceAvailable(I):Z
- a:switchTo(com.intellij.openapi.vcs.annotate.AnnotationSource):V
f:com.intellij.openapi.vcs.annotate.AnnotationWarning
- sf:Companion:com.intellij.openapi.vcs.annotate.AnnotationWarning$Companion
- sf:error(java.lang.String):com.intellij.openapi.vcs.annotate.AnnotationWarning
- sf:error(java.lang.String,java.util.List):com.intellij.openapi.vcs.annotate.AnnotationWarning
- f:getActions():java.util.List
- f:getBackgroundColor():java.awt.Color
- f:getMessage():java.lang.String
- f:getShowAnnotation():Z
- f:getStatus():com.intellij.ui.EditorNotificationPanel$Status
- sf:warning(java.lang.String):com.intellij.openapi.vcs.annotate.AnnotationWarning
- sf:warning(java.lang.String,java.util.List):com.intellij.openapi.vcs.annotate.AnnotationWarning
a:com.intellij.openapi.vcs.annotate.AnnotationWarning$Action
- <init>(java.lang.String):V
- a:doAction(java.lang.Runnable):V
- f:getText():java.lang.String
f:com.intellij.openapi.vcs.annotate.AnnotationWarning$Companion
- f:error(java.lang.String):com.intellij.openapi.vcs.annotate.AnnotationWarning
- f:error(java.lang.String,java.util.List):com.intellij.openapi.vcs.annotate.AnnotationWarning
- bs:error$default(com.intellij.openapi.vcs.annotate.AnnotationWarning$Companion,java.lang.String,java.util.List,I,java.lang.Object):com.intellij.openapi.vcs.annotate.AnnotationWarning
- f:warning(java.lang.String):com.intellij.openapi.vcs.annotate.AnnotationWarning
- f:warning(java.lang.String,java.util.List):com.intellij.openapi.vcs.annotate.AnnotationWarning
- bs:warning$default(com.intellij.openapi.vcs.annotate.AnnotationWarning$Companion,java.lang.String,java.util.List,I,java.lang.Object):com.intellij.openapi.vcs.annotate.AnnotationWarning
a:com.intellij.openapi.vcs.annotate.FileAnnotation
- p:<init>(com.intellij.openapi.project.Project):V
- f:close():V
- dispose():V
- s:formatDate(java.util.Date):java.lang.String
- a:getAnnotatedContent():java.lang.String
- getAnnotationSourceSwitcher():com.intellij.openapi.vcs.annotate.AnnotationSourceSwitcher
- a:getAspects():com.intellij.openapi.vcs.annotate.LineAnnotationAspect[]
- getAuthorsMappingProvider():com.intellij.openapi.vcs.annotate.FileAnnotation$AuthorsMappingProvider
- getCurrentFileRevisionProvider():com.intellij.openapi.vcs.annotate.FileAnnotation$CurrentFileRevisionProvider
- a:getCurrentRevision():com.intellij.openapi.vcs.history.VcsRevisionNumber
- getFile():com.intellij.openapi.vfs.VirtualFile
- getHtmlToolTip(I):java.lang.String
- a:getLineCount():I
- a:getLineDate(I):java.util.Date
- getLineModificationDetailsProvider():com.intellij.openapi.vcs.annotate.FileAnnotation$LineModificationDetailsProvider
- a:getLineRevisionNumber(I):com.intellij.openapi.vcs.history.VcsRevisionNumber
- getPreviousFileRevisionProvider():com.intellij.openapi.vcs.annotate.FileAnnotation$PreviousFileRevisionProvider
- getProject():com.intellij.openapi.project.Project
- a:getRevisions():java.util.List
- getRevisionsChangesProvider():com.intellij.openapi.vcs.annotate.FileAnnotation$RevisionChangesProvider
- getRevisionsOrderProvider():com.intellij.openapi.vcs.annotate.FileAnnotation$RevisionsOrderProvider
- a:getToolTip(I):java.lang.String
- getVcsKey():com.intellij.openapi.vcs.VcsKey
- isBaseRevisionChanged(com.intellij.openapi.vcs.history.VcsRevisionNumber):Z
- isClosed():Z
- originalRevision(I):com.intellij.openapi.vcs.history.VcsRevisionNumber
- f:reload(com.intellij.openapi.vcs.annotate.FileAnnotation):V
- f:setCloser(java.lang.Runnable):V
- f:setReloader(com.intellij.util.Consumer):V
com.intellij.openapi.vcs.annotate.FileAnnotation$AuthorsMappingProvider
- a:getAuthors():java.util.Map
com.intellij.openapi.vcs.annotate.FileAnnotation$CurrentFileRevisionProvider
- a:getRevision(I):com.intellij.openapi.vcs.history.VcsFileRevision
com.intellij.openapi.vcs.annotate.FileAnnotation$LineModificationDetailsProvider
- a:getDetails(I):com.intellij.openapi.vcs.annotate.AnnotatedLineModificationDetails
com.intellij.openapi.vcs.annotate.FileAnnotation$PreviousFileRevisionProvider
- a:getLastRevision():com.intellij.openapi.vcs.history.VcsFileRevision
- a:getPreviousRevision(I):com.intellij.openapi.vcs.history.VcsFileRevision
com.intellij.openapi.vcs.annotate.FileAnnotation$RevisionChangesProvider
- a:getChangesIn(I):com.intellij.openapi.util.Pair
com.intellij.openapi.vcs.annotate.FileAnnotation$RevisionsOrderProvider
- a:getOrderedRevisions():java.util.List
com.intellij.openapi.vcs.annotate.LineAnnotationAspect
- sf:AUTHOR:java.lang.String
- sf:DATE:java.lang.String
- sf:REVISION:java.lang.String
- getBgColor(I):java.awt.Color
- getColor(I):com.intellij.openapi.editor.colors.ColorKey
- getDisplayName():java.lang.String
- a:getId():java.lang.String
- getStyle(I):com.intellij.openapi.editor.colors.EditorFontType
- a:getTooltipText(I):java.lang.String
- a:getValue(I):java.lang.String
- a:isShowByDefault():Z
a:com.intellij.openapi.vcs.annotate.LineAnnotationAspectAdapter
- com.intellij.openapi.editor.EditorGutterAction
- com.intellij.openapi.vcs.annotate.LineAnnotationAspect
- sf:NULL_ASPECT:com.intellij.openapi.vcs.annotate.LineAnnotationAspect
- p:<init>(java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,Z):V
- doAction(I):V
- getCursor(I):java.awt.Cursor
- getDisplayName():java.lang.String
- getId():java.lang.String
- getTooltipText(I):java.lang.String
- isShowByDefault():Z
- pa:showAffectedPaths(I):V
com.intellij.openapi.vcs.annotate.LineNumberListener
- com.intellij.util.Consumer
f:com.intellij.openapi.vcs.annotate.ShowAllAffectedGenericAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- s:getInstance():com.intellij.openapi.vcs.annotate.ShowAllAffectedGenericAction
- s:showSubmittedFiles(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.VcsKey):V
- s:showSubmittedFiles(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.RepositoryLocation,Z):V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
com.intellij.openapi.vcs.annotate.UpToDateLineNumberListener
- com.intellij.util.Consumer
c:com.intellij.openapi.vcs.annotate.VcsAnnotation
- <init>(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.annotate.VcsLineAnnotationData,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- addAnnotation(java.lang.Object,com.intellij.openapi.vcs.annotate.VcsLineAnnotationData):V
- addCachedOtherRevisions(java.util.Map):V
- addCachedRevision(com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.history.VcsFileRevision):V
- getAdditionalAnnotations():java.util.Map
- getBasicAnnotation():com.intellij.openapi.vcs.annotate.VcsLineAnnotationData
- getCachedOtherRevisions():java.util.Map
- getFilePath():com.intellij.openapi.vcs.FilePath
- getFirstRevision():com.intellij.openapi.vcs.history.VcsRevisionNumber
com.intellij.openapi.vcs.annotate.VcsCacheableAnnotationProvider
- a:createCacheable(com.intellij.openapi.vcs.annotate.FileAnnotation):com.intellij.openapi.vcs.annotate.VcsAnnotation
- a:restore(com.intellij.openapi.vcs.annotate.VcsAnnotation,com.intellij.openapi.vcs.history.VcsAbstractHistorySession,java.lang.String,Z,com.intellij.openapi.vcs.history.VcsRevisionNumber):com.intellij.openapi.vcs.annotate.FileAnnotation
com.intellij.openapi.vcs.annotate.VcsLineAnnotationData
- a:getNumLines():I
- a:getRevision(I):com.intellij.openapi.vcs.history.VcsRevisionNumber
- a:put(I,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
c:com.intellij.openapi.vcs.annotate.VcsUsualLineAnnotationData
- com.intellij.openapi.vcs.annotate.VcsLineAnnotationData
- <init>(I):V
- getNumLines():I
- getRevision(I):com.intellij.openapi.vcs.history.VcsRevisionNumber
- put(I,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
f:com.intellij.openapi.vcs.changes.BackgroundFromStartOption
- <init>():V
- s:getInstance():com.intellij.openapi.progress.PerformInBackgroundOption
com.intellij.openapi.vcs.changes.BinaryContentRevision
- com.intellij.openapi.vcs.changes.ByteBackedContentRevision
- a:getBinaryContent():B[]
- getContentAsBytes():B[]
com.intellij.openapi.vcs.changes.ChangeList
- a:getChanges():java.util.Collection
- a:getComment():java.lang.String
- a:getName():java.lang.String
c:com.intellij.openapi.vcs.changes.ChangeListAdapter
- com.intellij.openapi.vcs.changes.ChangeListListener
- <init>():V
- allChangeListsMappingsChanged():V
- changeListAdded(com.intellij.openapi.vcs.changes.ChangeList):V
- changeListChanged(com.intellij.openapi.vcs.changes.ChangeList):V
- changeListCommentChanged(com.intellij.openapi.vcs.changes.ChangeList,java.lang.String):V
- changeListDataChanged(com.intellij.openapi.vcs.changes.ChangeList):V
- changeListRemoved(com.intellij.openapi.vcs.changes.ChangeList):V
- changeListRenamed(com.intellij.openapi.vcs.changes.ChangeList,java.lang.String):V
- changeListsChanged():V
- changesAdded(java.util.Collection,com.intellij.openapi.vcs.changes.ChangeList):V
- changesMoved(java.util.Collection,com.intellij.openapi.vcs.changes.ChangeList,com.intellij.openapi.vcs.changes.ChangeList):V
- changesRemoved(java.util.Collection,com.intellij.openapi.vcs.changes.ChangeList):V
- defaultListChanged(com.intellij.openapi.vcs.changes.ChangeList,com.intellij.openapi.vcs.changes.ChangeList):V
f:com.intellij.openapi.vcs.changes.ChangeListChange
- com.intellij.openapi.vcs.changes.Change
- sf:Companion:com.intellij.openapi.vcs.changes.ChangeListChange$Companion
- sf:HASHING_STRATEGY:com.intellij.util.containers.HashingStrategy
- <init>(com.intellij.openapi.vcs.changes.Change,java.lang.String,java.lang.String):V
- <init>(com.intellij.openapi.vcs.changes.ContentRevision,com.intellij.openapi.vcs.changes.ContentRevision,com.intellij.openapi.vcs.FileStatus,com.intellij.openapi.vcs.changes.Change,java.lang.String,java.lang.String):V
- f:getChange():com.intellij.openapi.vcs.changes.Change
- f:getChangeListId():java.lang.String
- f:getChangeListName():java.lang.String
f:com.intellij.openapi.vcs.changes.ChangeListChange$Companion
- f:replaceChangeContents(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.ContentRevision,com.intellij.openapi.vcs.changes.ContentRevision):com.intellij.openapi.vcs.changes.Change
com.intellij.openapi.vcs.changes.ChangeListDecorator
- sf:EP_NAME:com.intellij.openapi.extensions.ProjectExtensionPointName
- a:decorateChangeList(com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.ui.ColoredTreeCellRenderer,Z,Z,Z):V
- s:getDecorators(com.intellij.openapi.project.Project):java.util.List
com.intellij.openapi.vcs.changes.ChangeListListener
- java.util.EventListener
- sf:TOPIC:com.intellij.util.messages.Topic
- allChangeListsMappingsChanged():V
- changeListAdded(com.intellij.openapi.vcs.changes.ChangeList):V
- changeListAvailabilityChanged():V
- changeListChanged(com.intellij.openapi.vcs.changes.ChangeList):V
- changeListCommentChanged(com.intellij.openapi.vcs.changes.ChangeList,java.lang.String):V
- changeListDataChanged(com.intellij.openapi.vcs.changes.ChangeList):V
- changeListRemoved(com.intellij.openapi.vcs.changes.ChangeList):V
- changeListRenamed(com.intellij.openapi.vcs.changes.ChangeList,java.lang.String):V
- changeListUpdateDone():V
- changedFileStatusChanged():V
- changedFileStatusChanged(Z):V
- changesAdded(java.util.Collection,com.intellij.openapi.vcs.changes.ChangeList):V
- changesMoved(java.util.Collection,com.intellij.openapi.vcs.changes.ChangeList,com.intellij.openapi.vcs.changes.ChangeList):V
- changesRemoved(java.util.Collection,com.intellij.openapi.vcs.changes.ChangeList):V
- defaultListChanged(com.intellij.openapi.vcs.changes.ChangeList,com.intellij.openapi.vcs.changes.ChangeList):V
- defaultListChanged(com.intellij.openapi.vcs.changes.ChangeList,com.intellij.openapi.vcs.changes.ChangeList,Z):V
- unchangedFileStatusChanged():V
- unchangedFileStatusChanged(Z):V
a:com.intellij.openapi.vcs.changes.ChangeListManager
- com.intellij.openapi.vcs.changes.ChangeListModification
- <init>():V
- a:addChangeListListener(com.intellij.openapi.vcs.changes.ChangeListListener):V
- a:addChangeListListener(com.intellij.openapi.vcs.changes.ChangeListListener,com.intellij.openapi.Disposable):V
- a:addDirectoryToIgnoreImplicitly(java.lang.String):V
- a:areChangeListsEnabled():Z
- a:commitChanges(com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List):V
- a:findChangeList(java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- a:getAffectedFiles():java.util.List
- a:getAffectedPaths():java.util.List
- a:getAllChanges():java.util.Collection
- a:getChange(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.changes.Change
- a:getChange(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.changes.Change
- a:getChangeList(com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.vcs.changes.LocalChangeList
- a:getChangeList(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.changes.LocalChangeList
- a:getChangeList(java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- a:getChangeListNameIfOnlyOne(com.intellij.openapi.vcs.changes.Change[]):java.lang.String
- a:getChangeLists():java.util.List
- a:getChangeLists(com.intellij.openapi.vcs.changes.Change):java.util.List
- a:getChangeLists(com.intellij.openapi.vfs.VirtualFile):java.util.List
- getChangeListsCopy():java.util.List
- a:getChangeListsNumber():I
- a:getChangesIn(com.intellij.openapi.vcs.FilePath):java.util.Collection
- a:getChangesIn(com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- a:getDefaultChangeList():com.intellij.openapi.vcs.changes.LocalChangeList
- a:getDefaultListName():java.lang.String
- a:getFilesToIgnore():com.intellij.openapi.vcs.changes.IgnoredFileBean[]
- a:getIgnoredFilePaths():java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.ChangeListManager
- a:getModifiedWithoutEditing():java.util.List
- a:getRegisteredExecutors():java.util.List
- a:getStatus(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.FileStatus
- a:getStatus(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.FileStatus
- a:getSwitchedBranch(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- a:getUnversionedFilesPaths():java.util.List
- a:haveChangesUnder(com.intellij.openapi.vfs.VirtualFile):com.intellij.util.ThreeState
- a:invokeAfterUpdate(java.lang.Runnable,com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode,java.lang.String,com.intellij.openapi.application.ModalityState):V
- invokeAfterUpdate(Z,java.lang.Runnable):V
- invokeAfterUpdateWithModal(Z,java.lang.String,java.lang.Runnable):V
- invokeAfterUpdateWithProgress(Z,java.lang.String,java.lang.Runnable):V
- a:isFileAffected(com.intellij.openapi.vfs.VirtualFile):Z
- a:isFreezed():java.lang.String
- a:isFreezedWithNotification(java.lang.String):Z
- a:isIgnoredFile(com.intellij.openapi.vcs.FilePath):Z
- a:isIgnoredFile(com.intellij.openapi.vfs.VirtualFile):Z
- a:isUnversioned(com.intellij.openapi.vfs.VirtualFile):Z
- a:registerCommitExecutor(com.intellij.openapi.vcs.changes.CommitExecutor):V
- a:removeChangeListListener(com.intellij.openapi.vcs.changes.ChangeListListener):V
- a:reopenFiles(java.util.List):V
- a:scheduleAutomaticEmptyChangeListDeletion(com.intellij.openapi.vcs.changes.LocalChangeList):V
- a:scheduleAutomaticEmptyChangeListDeletion(com.intellij.openapi.vcs.changes.LocalChangeList,Z):V
- a:setFilesToIgnore(com.intellij.openapi.vcs.changes.IgnoredFileBean[]):V
com.intellij.openapi.vcs.changes.ChangeListManagerGate
- a:addChangeList(java.lang.String,java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- a:editComment(java.lang.String,java.lang.String):V
- a:editName(java.lang.String,java.lang.String):V
- a:findChangeList(java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- a:findOrCreateList(java.lang.String,java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- a:getListsCopy():java.util.List
- a:getStatus(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.FileStatus
- a:getStatus(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.FileStatus
- a:setDefaultChangeList(java.lang.String):V
- a:setListsToDisappear(java.util.Collection):V
com.intellij.openapi.vcs.changes.ChangeListModification
- a:addChangeList(java.lang.String,java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- a:editComment(java.lang.String,java.lang.String):java.lang.String
- a:editName(java.lang.String,java.lang.String):Z
- a:moveChangesTo(com.intellij.openapi.vcs.changes.LocalChangeList,java.util.List):V
- a:moveChangesTo(com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.vcs.changes.Change[]):V
- a:removeChangeList(com.intellij.openapi.vcs.changes.LocalChangeList):V
- a:removeChangeList(java.lang.String):V
- a:setDefaultChangeList(com.intellij.openapi.vcs.changes.LocalChangeList):V
- a:setDefaultChangeList(java.lang.String):V
- a:setReadOnly(java.lang.String,Z):Z
com.intellij.openapi.vcs.changes.ChangeProvider
- doCleanup(java.util.List):V
- a:getChanges(com.intellij.openapi.vcs.changes.VcsDirtyScope,com.intellij.openapi.vcs.changes.ChangelistBuilder,com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.vcs.changes.ChangeListManagerGate):V
- a:isModifiedDocumentTrackingRequired():Z
com.intellij.openapi.vcs.changes.ChangelistBuilder
- a:processChange(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.VcsKey):V
- a:processChangeInList(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.ChangeList,com.intellij.openapi.vcs.VcsKey):V
- a:processChangeInList(com.intellij.openapi.vcs.changes.Change,java.lang.String,com.intellij.openapi.vcs.VcsKey):V
- a:processIgnoredFile(com.intellij.openapi.vcs.FilePath):V
- a:processLocallyDeletedFile(com.intellij.openapi.vcs.FilePath):V
- a:processLocallyDeletedFile(com.intellij.openapi.vcs.changes.LocallyDeletedChange):V
- a:processLockedFolder(com.intellij.openapi.vfs.VirtualFile):V
- a:processLogicallyLockedFolder(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.changes.LogicalLock):V
- a:processModifiedWithoutCheckout(com.intellij.openapi.vfs.VirtualFile):V
- a:processRootSwitch(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- a:processSwitchedFile(com.intellij.openapi.vfs.VirtualFile,java.lang.String,Z):V
- a:processUnversionedFile(com.intellij.openapi.vcs.FilePath):V
- processUnversionedFile(com.intellij.openapi.vfs.VirtualFile):V
- a:removeRegisteredChangeFor(com.intellij.openapi.vcs.FilePath):V
- a:reportAdditionalInfo(com.intellij.openapi.util.Factory):V
- a:reportAdditionalInfo(java.lang.String):V
- a:reportChangesOutsideProject():Z
f:com.intellij.openapi.vcs.changes.ChangesUtil
- sf:CASE_SENSITIVE_FILE_PATH_HASHING_STRATEGY:com.intellij.util.containers.HashingStrategy
- sf:CHANGELIST_COMPARATOR:java.util.Comparator
- s:equalsCaseSensitive(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath):Z
- s:filePathsToFiles(java.util.Collection):java.util.List
- s:findCommonAncestor(java.util.Collection):java.io.File
- s:findValidParentAccurately(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vfs.VirtualFile
- s:getAffectedVcses(java.util.Collection,com.intellij.openapi.project.Project):java.util.Set
- s:getAffectedVcsesForFilePaths(java.util.Collection,com.intellij.openapi.project.Project):java.util.Set
- s:getAfterPath(com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.vcs.FilePath
- s:getBeforePath(com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.vcs.FilePath
- s:getChangeListIfOnlyOne(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.changes.Change[]):com.intellij.openapi.vcs.changes.LocalChangeList
- s:getCommittedPath(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.FilePath
- s:getFilePath(com.intellij.openapi.vcs.changes.Change):com.intellij.openapi.vcs.FilePath
- s:getFilesFromChanges(java.util.Collection):com.intellij.openapi.vfs.VirtualFile[]
- s:getIoFilesFromChanges(java.util.Collection):java.util.List
- s:getLocalPath(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.FilePath
- s:getNavigatableArray(com.intellij.openapi.project.Project,java.lang.Iterable):com.intellij.pom.Navigatable[]
- s:getPaths(java.util.Collection):java.util.List
- s:getProjectRelativePath(com.intellij.openapi.project.Project,java.io.File):java.lang.String
- s:getVcsForChange(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.project.Project):com.intellij.openapi.vcs.AbstractVcs
- s:getVcsForFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.vcs.AbstractVcs
- s:getVcsForFile(java.io.File,com.intellij.openapi.project.Project):com.intellij.openapi.vcs.AbstractVcs
- s:hasFileChanges(java.util.Collection):Z
- s:hasMeaningfulChangelists(com.intellij.openapi.project.Project):Z
- s:isInternalOperation(com.intellij.openapi.vfs.VirtualFile):Z
- s:isTextConflictingChange(com.intellij.openapi.vcs.changes.Change):Z
- s:iterateAfterRevisionFiles(java.lang.Iterable):com.intellij.util.containers.JBIterable
- s:iterateFiles(java.lang.Iterable):com.intellij.util.containers.JBIterable
- s:iteratePaths(java.lang.Iterable):com.intellij.util.containers.JBIterable
- s:iteratePathsCaseSensitive(com.intellij.openapi.vcs.changes.Change):com.intellij.util.containers.JBIterable
- s:loadContentRevision(com.intellij.openapi.vcs.changes.ContentRevision):B[]
- s:markInternalOperation(com.intellij.openapi.vfs.VirtualFile,Z):V
- s:markInternalOperation(java.lang.Iterable,Z):V
- s:processChangesByVcs(com.intellij.openapi.project.Project,java.util.Collection,com.intellij.openapi.vcs.changes.ChangesUtil$PerVcsProcessor):V
- s:processFilePathsByVcs(com.intellij.openapi.project.Project,java.util.Collection,com.intellij.openapi.vcs.changes.ChangesUtil$PerVcsProcessor):V
- s:processItemsByVcs(java.util.Collection,com.intellij.openapi.vcs.changes.ChangesUtil$VcsSeparator,com.intellij.openapi.vcs.changes.ChangesUtil$PerVcsProcessor):V
- s:processVirtualFilesByVcs(com.intellij.openapi.project.Project,java.util.Collection,com.intellij.openapi.vcs.changes.ChangesUtil$PerVcsProcessor):V
com.intellij.openapi.vcs.changes.ChangesUtil$PerVcsProcessor
- a:process(com.intellij.openapi.vcs.AbstractVcs,java.util.List):V
com.intellij.openapi.vcs.changes.ChangesUtil$VcsSeparator
- a:getVcsFor(java.lang.Object):com.intellij.openapi.vcs.AbstractVcs
com.intellij.openapi.vcs.changes.ChangesViewRefresher
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:refresh(com.intellij.openapi.project.Project):V
com.intellij.openapi.vcs.changes.CommitExecutor
- sf:LOCAL_COMMIT_EXECUTOR:com.intellij.openapi.extensions.ProjectExtensionPointName
- areChangesRequired():Z
- createCommitSession():com.intellij.openapi.vcs.changes.CommitSession
- createCommitSession(com.intellij.openapi.vcs.changes.CommitContext):com.intellij.openapi.vcs.changes.CommitSession
- a:getActionText():java.lang.String
- getId():java.lang.String
- requiresSyncCommitChecks():Z
- supportsPartialCommit():Z
- useDefaultAction():Z
com.intellij.openapi.vcs.changes.CommitResultHandler
- java.util.EventListener
- onCancel():V
- onFailure(java.util.List):V
- a:onSuccess(java.lang.String):V
com.intellij.openapi.vcs.changes.CommitSession
- sf:VCS_COMMIT:com.intellij.openapi.vcs.changes.CommitSession
- canExecute(java.util.Collection,java.lang.String):Z
- a:execute(java.util.Collection,java.lang.String):V
- executionCanceled():V
- getAdditionalConfigurationUI(java.util.Collection,java.lang.String):javax.swing.JComponent
- getHelpId():java.lang.String
- validateFields():com.intellij.openapi.ui.ValidationInfo
c:com.intellij.openapi.vcs.changes.CurrentBinaryContentRevision
- com.intellij.openapi.vcs.changes.CurrentContentRevision
- com.intellij.openapi.vcs.changes.BinaryContentRevision
- <init>(com.intellij.openapi.vcs.FilePath):V
- getBinaryContent():B[]
c:com.intellij.openapi.vcs.changes.CurrentContentRevision
- com.intellij.openapi.vcs.changes.ByteBackedContentRevision
- p:myFile:com.intellij.openapi.vcs.FilePath
- <init>(com.intellij.openapi.vcs.FilePath):V
- s:create(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.changes.ContentRevision
- getContent():java.lang.String
- getContentAsBytes():B[]
- getFile():com.intellij.openapi.vcs.FilePath
- getRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
c:com.intellij.openapi.vcs.changes.EmptyChangelistBuilder
- com.intellij.openapi.vcs.changes.ChangelistBuilder
- <init>():V
- processChange(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.VcsKey):V
- processChangeInList(com.intellij.openapi.vcs.changes.Change,com.intellij.openapi.vcs.changes.ChangeList,com.intellij.openapi.vcs.VcsKey):V
- processChangeInList(com.intellij.openapi.vcs.changes.Change,java.lang.String,com.intellij.openapi.vcs.VcsKey):V
- processIgnoredFile(com.intellij.openapi.vcs.FilePath):V
- processLocallyDeletedFile(com.intellij.openapi.vcs.FilePath):V
- processLocallyDeletedFile(com.intellij.openapi.vcs.changes.LocallyDeletedChange):V
- processLockedFolder(com.intellij.openapi.vfs.VirtualFile):V
- processLogicallyLockedFolder(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.changes.LogicalLock):V
- processModifiedWithoutCheckout(com.intellij.openapi.vfs.VirtualFile):V
- processRootSwitch(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- processSwitchedFile(com.intellij.openapi.vfs.VirtualFile,java.lang.String,Z):V
- processUnversionedFile(com.intellij.openapi.vcs.FilePath):V
- removeRegisteredChangeFor(com.intellij.openapi.vcs.FilePath):V
- reportAdditionalInfo(com.intellij.openapi.util.Factory):V
- reportAdditionalInfo(java.lang.String):V
- reportChangesOutsideProject():Z
- reportWarningMessage(java.lang.String):V
c:com.intellij.openapi.vcs.changes.ExternallyRenamedChange
- com.intellij.openapi.vcs.changes.Change
- <init>(com.intellij.openapi.vcs.changes.ContentRevision,com.intellij.openapi.vcs.changes.ContentRevision,java.lang.String):V
- p:getMovedText(com.intellij.openapi.project.Project):java.lang.String
- getOriginText(com.intellij.openapi.project.Project):java.lang.String
- getOriginUrl():java.lang.String
- p:getRenamedText():java.lang.String
- isCopied():Z
- setCopied(Z):V
- setRenamedOrMovedTarget(com.intellij.openapi.vcs.FilePath):V
com.intellij.openapi.vcs.changes.FilePathIconProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getIcon(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.project.Project):javax.swing.Icon
f:com.intellij.openapi.vcs.changes.FilePathsHelper
- s:convertPath(com.intellij.openapi.vcs.FilePath):java.lang.String
- s:convertPath(java.lang.String):java.lang.String
- s:convertPath(java.lang.String,java.lang.String):java.lang.String
- s:convertWithLastSeparator(com.intellij.openapi.vcs.FilePath):java.lang.String
e:com.intellij.openapi.vcs.changes.IgnoreSettingsType
- java.lang.Enum
- sf:FILE:com.intellij.openapi.vcs.changes.IgnoreSettingsType
- sf:MASK:com.intellij.openapi.vcs.changes.IgnoreSettingsType
- sf:UNDER_DIR:com.intellij.openapi.vcs.changes.IgnoreSettingsType
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.IgnoreSettingsType
- s:values():com.intellij.openapi.vcs.changes.IgnoreSettingsType[]
f:com.intellij.openapi.vcs.changes.IgnoredBeanFactory
- s:ignoreFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.IgnoredFileBean
- s:ignoreFile(java.lang.String,com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.IgnoredFileBean
- s:ignoreUnderDirectory(java.lang.String,com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.IgnoredFileBean
- s:withMask(java.lang.String):com.intellij.openapi.vcs.changes.IgnoredFileBean
- s:withMask(java.lang.String,java.lang.String):com.intellij.openapi.vcs.changes.IgnoredFileBean
f:com.intellij.openapi.vcs.changes.IgnoredFileBean
- com.intellij.openapi.vcs.changes.IgnoredFileDescriptor
- equals(java.lang.Object):Z
- getMask():java.lang.String
- getPath():java.lang.String
- getType():com.intellij.openapi.vcs.changes.IgnoreSettingsType
- hashCode():I
- matchesFile(com.intellij.openapi.vcs.FilePath):Z
- matchesFile(com.intellij.openapi.vfs.VirtualFile):Z
- resetCache():V
com.intellij.openapi.vcs.changes.IgnoredFileContentProvider
- sf:IGNORE_FILE_CONTENT_PROVIDER:com.intellij.openapi.extensions.ExtensionPointName
- a:buildIgnoreEntryContent(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.changes.IgnoredFileDescriptor):java.lang.String
- a:buildIgnoreFileContent(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.changes.IgnoredFileProvider[]):java.lang.String
- a:buildIgnoreGroupDescription(com.intellij.openapi.vcs.changes.IgnoredFileProvider):java.lang.String
- a:buildUnignoreContent(java.lang.String):java.lang.String
- canCreateIgnoreFileInStateStoreDir():Z
- a:getFileName():java.lang.String
- a:getSupportedVcs():com.intellij.openapi.vcs.VcsKey
- supportIgnoreFileNotInVcsRoot():Z
com.intellij.openapi.vcs.changes.IgnoredFileDescriptor
- a:getMask():java.lang.String
- a:getPath():java.lang.String
- a:getType():com.intellij.openapi.vcs.changes.IgnoreSettingsType
- a:matchesFile(com.intellij.openapi.vcs.FilePath):Z
- a:matchesFile(com.intellij.openapi.vfs.VirtualFile):Z
com.intellij.openapi.vcs.changes.IgnoredFileGenerator
- a:generateFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.AbstractVcs,Z):V
com.intellij.openapi.vcs.changes.IgnoredFileProvider
- sf:IGNORE_FILE:com.intellij.openapi.extensions.ExtensionPointName
- a:getIgnoredFiles(com.intellij.openapi.project.Project):java.util.Set
- a:getIgnoredGroupDescription():java.lang.String
- a:isIgnoredFile(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):Z
com.intellij.openapi.vcs.changes.InclusionListener
- java.util.EventListener
- a:inclusionChanged():V
com.intellij.openapi.vcs.changes.InclusionModel
- a:addInclusion(java.util.Collection):V
- a:addInclusionListener(com.intellij.openapi.vcs.changes.InclusionListener):V
- a:clearInclusion():V
- a:getInclusion():java.util.Set
- a:getInclusionState(java.lang.Object):com.intellij.util.ui.ThreeStateCheckBox$State
- a:isInclusionEmpty():Z
- a:removeInclusion(java.util.Collection):V
- a:removeInclusionListener(com.intellij.openapi.vcs.changes.InclusionListener):V
- a:retainInclusion(java.util.Collection):V
- a:setInclusion(java.util.Collection):V
e:com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode
- java.lang.Enum
- sf:BACKGROUND_CANCELLABLE:com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode
- sf:BACKGROUND_NOT_CANCELLABLE:com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode
- sf:SILENT:com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode
- sf:SILENT_CALLBACK_POOLED:com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode
- sf:SYNCHRONOUS_CANCELLABLE:com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode
- sf:SYNCHRONOUS_NOT_CANCELLABLE:com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode
- isCallbackOnAwt():Z
- isCancellable():Z
- isSilent():Z
- isSynchronous():Z
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode
- s:values():com.intellij.openapi.vcs.changes.InvokeAfterUpdateMode[]
a:com.intellij.openapi.vcs.changes.LocalChangeList
- com.intellij.openapi.vcs.changes.ChangeList
- java.lang.Cloneable
- sf:OLD_DEFAULT_NAME:java.lang.String
- <init>():V
- a:copy():com.intellij.openapi.vcs.changes.LocalChangeList
- s:createEmptyChangeList(com.intellij.openapi.project.Project,java.lang.String):com.intellij.openapi.vcs.changes.LocalChangeList
- s:getAllDefaultNames():java.util.List
- a:getChanges():java.util.Collection
- a:getComment():java.lang.String
- a:getData():java.lang.Object
- s:getDefaultName():java.lang.String
- getId():java.lang.String
- a:getName():java.lang.String
- hasDefaultName():Z
- isBlank():Z
- a:isDefault():Z
- a:isReadOnly():Z
- a:setComment(java.lang.String):V
com.intellij.openapi.vcs.changes.LocalChangeListsLoadedListener
- a:processLoadedLists(java.util.List):V
a:com.intellij.openapi.vcs.changes.LocalCommitExecutor
- com.intellij.ide.HelpIdProvider
- com.intellij.openapi.vcs.changes.CommitExecutor
- <init>():V
c:com.intellij.openapi.vcs.changes.LocallyDeletedChange
- <init>(com.intellij.openapi.vcs.FilePath):V
- equals(java.lang.Object):Z
- getAddIcon():javax.swing.Icon
- getDescription():java.lang.String
- getPath():com.intellij.openapi.vcs.FilePath
- getPresentableUrl():java.lang.String
- hashCode():I
f:com.intellij.openapi.vcs.changes.LogicalLock
- <init>(Z,java.lang.String,java.lang.String,java.util.Date,java.util.Date):V
- getComment():java.lang.String
- getCreationDate():java.util.Date
- getExpirationDate():java.util.Date
- getOwner():java.lang.String
- isIsLocal():Z
f:com.intellij.openapi.vcs.changes.TextRevisionNumber
- com.intellij.openapi.vcs.history.ShortVcsRevisionNumber
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String):V
- asString():java.lang.String
- compareTo(com.intellij.openapi.vcs.history.VcsRevisionNumber):I
- equals(java.lang.Object):Z
- hashCode():I
- toShortString():java.lang.String
com.intellij.openapi.vcs.changes.VcsAnnotationLocalChangesListener
- a:invalidateAnnotationsFor(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.VcsKey):V
- a:registerAnnotation(com.intellij.openapi.vcs.annotate.FileAnnotation):V
- registerAnnotation(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.annotate.FileAnnotation):V
- a:reloadAnnotations():V
- a:reloadAnnotationsForVcs(com.intellij.openapi.vcs.VcsKey):V
- a:unregisterAnnotation(com.intellij.openapi.vcs.annotate.FileAnnotation):V
- unregisterAnnotation(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.annotate.FileAnnotation):V
a:com.intellij.openapi.vcs.changes.VcsDirtyScope
- <init>():V
- a:belongsTo(com.intellij.openapi.vcs.FilePath):Z
- a:getAffectedContentRoots():java.util.Collection
- a:getDirtyFiles():java.util.Set
- a:getDirtyFilesNoExpand():java.util.Set
- a:getProject():com.intellij.openapi.project.Project
- a:getRecursivelyDirtyDirectories():java.util.Set
- a:getVcs():com.intellij.openapi.vcs.AbstractVcs
- a:isEmpty():Z
- a:wasEveryThingDirty():Z
a:com.intellij.openapi.vcs.changes.VcsDirtyScopeManager
- <init>():V
- a:dirDirtyRecursively(com.intellij.openapi.vcs.FilePath):V
- a:dirDirtyRecursively(com.intellij.openapi.vfs.VirtualFile):V
- a:fileDirty(com.intellij.openapi.vcs.FilePath):V
- a:fileDirty(com.intellij.openapi.vfs.VirtualFile):V
- a:filePathsDirty(java.util.Collection,java.util.Collection):V
- a:filesDirty(java.util.Collection,java.util.Collection):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.VcsDirtyScopeManager
- a:markEverythingDirty():V
- a:rootDirty(com.intellij.openapi.vfs.VirtualFile):V
- a:whatFilesDirty(java.util.Collection):java.util.Collection
com.intellij.openapi.vcs.changes.VcsIgnoreManager
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.changes.VcsIgnoreManager
- a:isDirectoryVcsIgnored(java.lang.String):Z
- a:isPotentiallyIgnoredFile(com.intellij.openapi.vcs.FilePath):Z
- a:isPotentiallyIgnoredFile(com.intellij.openapi.vfs.VirtualFile):Z
- a:isRunConfigurationVcsIgnored(java.lang.String):Z
- a:removeRunConfigurationFromVcsIgnore(java.lang.String):V
a:com.intellij.openapi.vcs.changes.VcsModifiableDirtyScope
- com.intellij.openapi.vcs.changes.VcsDirtyScope
- <init>():V
- a:addDirtyDirRecursively(com.intellij.openapi.vcs.FilePath):V
- a:addDirtyFile(com.intellij.openapi.vcs.FilePath):V
com.intellij.openapi.vcs.changes.VcsPreservingExecutor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:execute(com.intellij.openapi.project.Project,java.util.Collection,java.lang.String,com.intellij.openapi.progress.ProgressIndicator,java.lang.Runnable):Z
- s:executeOperation(com.intellij.openapi.project.Project,java.util.Collection,java.lang.String,com.intellij.openapi.progress.ProgressIndicator,java.lang.Runnable):V
com.intellij.openapi.vcs.changes.committed.ChangeListFilteringStrategy
- a:addChangeListener(javax.swing.event.ChangeListener):V
- a:appendFilterBase(java.util.List):V
- a:filterChangeLists(java.util.List):java.util.List
- a:getFilterUI():javax.swing.JComponent
- a:getKey():com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey
- a:removeChangeListener(javax.swing.event.ChangeListener):V
- a:resetFilterBase():V
- a:setFilterBase(java.util.List):V
- a:toString():java.lang.String
com.intellij.openapi.vcs.changes.committed.CommittedChangeListDecorator
- a:decorate(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):javax.swing.Icon
com.intellij.openapi.vcs.changes.committed.CommittedChangeListsListener
- a:onAfterEndReport():V
- a:onBeforeStartReport():V
- a:report(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):Z
f:com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey
- java.lang.Comparable
- <init>(java.lang.String,com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority):V
- compareTo(com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey):I
- f:copy(java.lang.String,com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority):com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey
- bs:copy$default(com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey,java.lang.String,com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority,I,java.lang.Object):com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey
- equals(java.lang.Object):Z
- hashCode():I
e:com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority
- java.lang.Enum
- sf:MERGE:com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority
- sf:NONE:com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority
- sf:STRUCTURE:com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority
- sf:TEXT:com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority
- sf:USER:com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority
- s:getEntries():kotlin.enums.EnumEntries
- f:getPriority():I
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority
- s:values():com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterPriority[]
com.intellij.openapi.vcs.changes.committed.DecoratorManager
- a:install(com.intellij.openapi.vcs.changes.committed.CommittedChangeListDecorator):V
- a:remove(com.intellij.openapi.vcs.changes.committed.CommittedChangeListDecorator):V
- a:removeFilteringStrategy(com.intellij.openapi.vcs.changes.committed.CommittedChangesFilterKey):V
- a:repaintTree():V
- a:reportLoadedLists(com.intellij.openapi.vcs.changes.committed.CommittedChangeListsListener):V
- a:setFilteringStrategy(com.intellij.openapi.vcs.changes.committed.ChangeListFilteringStrategy):Z
c:com.intellij.openapi.vcs.changes.committed.RepositoryLocationGroup
- com.intellij.openapi.vcs.RepositoryLocation
- <init>(java.lang.String):V
- add(com.intellij.openapi.vcs.RepositoryLocation):V
- getKey():java.lang.String
- getLocations():java.util.List
- toPresentableString():java.lang.String
com.intellij.openapi.vcs.changes.committed.VcsCommittedListsZipper
- a:getNumber(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):J
- a:groupLocations(java.util.List):com.intellij.openapi.util.Pair
- a:zip(com.intellij.openapi.vcs.changes.committed.RepositoryLocationGroup,java.util.List):com.intellij.openapi.vcs.versionBrowser.CommittedChangeList
a:com.intellij.openapi.vcs.changes.committed.VcsCommittedListsZipperAdapter
- com.intellij.openapi.vcs.changes.committed.VcsCommittedListsZipper
- p:<init>(com.intellij.openapi.vcs.changes.committed.VcsCommittedListsZipperAdapter$GroupCreator):V
- getNumber(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):J
- groupLocations(java.util.List):com.intellij.openapi.util.Pair
- zip(com.intellij.openapi.vcs.changes.committed.RepositoryLocationGroup,java.util.List):com.intellij.openapi.vcs.versionBrowser.CommittedChangeList
com.intellij.openapi.vcs.changes.committed.VcsCommittedListsZipperAdapter$GroupCreator
- a:createGroup(java.lang.Object,java.util.Collection):com.intellij.openapi.vcs.changes.committed.RepositoryLocationGroup
- a:createKey(com.intellij.openapi.vcs.RepositoryLocation):java.lang.Object
f:com.intellij.openapi.vcs.changes.committed.VcsCommittedViewAuxiliary
- <init>(java.util.List,java.lang.Runnable,java.util.List):V
- f:getCalledOnViewDispose():java.lang.Runnable
- f:getPopupActions():java.util.List
- f:getToolbarActions():java.util.List
com.intellij.openapi.vcs.changes.ui.CommitMessageProvider
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getCommitMessage(com.intellij.openapi.vcs.changes.LocalChangeList,com.intellij.openapi.project.Project):java.lang.String
com.intellij.openapi.vcs.checkin.BaseCheckinHandlerFactory
- a:createHandler(com.intellij.openapi.vcs.CheckinProjectPanel,com.intellij.openapi.vcs.changes.CommitContext):com.intellij.openapi.vcs.checkin.CheckinHandler
- a:createSystemReadyHandler(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.checkin.BeforeCheckinDialogHandler
a:com.intellij.openapi.vcs.checkin.BeforeCheckinDialogHandler
- <init>():V
- beforeCommitDialogShown(com.intellij.openapi.project.Project,java.util.List,java.lang.Iterable,Z):Z
com.intellij.openapi.vcs.checkin.CheckinChangeListSpecificComponent
- com.intellij.openapi.vcs.ui.RefreshableOnComponent
- a:onChangeListSelected(com.intellij.openapi.vcs.changes.LocalChangeList):V
com.intellij.openapi.vcs.checkin.CheckinEnvironment
- commit(java.util.List,java.lang.String):java.util.List
- commit(java.util.List,java.lang.String,com.intellij.openapi.vcs.changes.CommitContext,java.util.Set):java.util.List
- commit(java.util.List,java.lang.String,com.intellij.util.NullableFunction,java.util.Set):java.util.List
- createAdditionalOptionsPanel(com.intellij.openapi.vcs.CheckinProjectPanel,com.intellij.util.PairConsumer):com.intellij.openapi.vcs.ui.RefreshableOnComponent
- createCommitOptions(com.intellij.openapi.vcs.CheckinProjectPanel,com.intellij.openapi.vcs.changes.CommitContext):com.intellij.openapi.vcs.ui.RefreshableOnComponent
- a:getCheckinOperationName():java.lang.String
- getDefaultMessageFor(com.intellij.openapi.vcs.FilePath[]):java.lang.String
- a:getHelpId():java.lang.String
- getPostCommitChangeConverter():com.intellij.openapi.vcs.checkin.PostCommitChangeConverter
- a:isRefreshAfterCommitNeeded():Z
- keepChangeListAfterCommit(com.intellij.openapi.vcs.changes.ChangeList):Z
- a:scheduleMissingFileForDeletion(java.util.List):java.util.List
- a:scheduleUnversionedFilesForAddition(java.util.List):java.util.List
a:com.intellij.openapi.vcs.checkin.CheckinHandler
- sf:DUMMY:com.intellij.openapi.vcs.checkin.CheckinHandler
- <init>():V
- acceptExecutor(com.intellij.openapi.vcs.changes.CommitExecutor):Z
- beforeCheckin():com.intellij.openapi.vcs.checkin.CheckinHandler$ReturnResult
- beforeCheckin(com.intellij.openapi.vcs.changes.CommitExecutor,com.intellij.util.PairConsumer):com.intellij.openapi.vcs.checkin.CheckinHandler$ReturnResult
- checkinFailed(java.util.List):V
- checkinSuccessful():V
- getAfterCheckinConfigurationPanel(com.intellij.openapi.Disposable):com.intellij.openapi.vcs.ui.RefreshableOnComponent
- getBeforeCheckinConfigurationPanel():com.intellij.openapi.vcs.ui.RefreshableOnComponent
- getBeforeCheckinSettings():com.intellij.openapi.options.UnnamedConfigurable
- includedChangesChanged():V
e:com.intellij.openapi.vcs.checkin.CheckinHandler$ReturnResult
- java.lang.Enum
- sf:CANCEL:com.intellij.openapi.vcs.checkin.CheckinHandler$ReturnResult
- sf:CLOSE_WINDOW:com.intellij.openapi.vcs.checkin.CheckinHandler$ReturnResult
- sf:COMMIT:com.intellij.openapi.vcs.checkin.CheckinHandler$ReturnResult
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.checkin.CheckinHandler$ReturnResult
- s:values():com.intellij.openapi.vcs.checkin.CheckinHandler$ReturnResult[]
a:com.intellij.openapi.vcs.checkin.CheckinHandlerFactory
- com.intellij.openapi.vcs.checkin.BaseCheckinHandlerFactory
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:createHandler(com.intellij.openapi.vcs.CheckinProjectPanel,com.intellij.openapi.vcs.changes.CommitContext):com.intellij.openapi.vcs.checkin.CheckinHandler
- createSystemReadyHandler(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.checkin.BeforeCheckinDialogHandler
com.intellij.openapi.vcs.checkin.CheckinMetaHandler
- com.intellij.openapi.vcs.checkin.CheckinModificationHandler
- a:runCheckinHandlers(java.lang.Runnable):V
com.intellij.openapi.vcs.checkin.CheckinModificationHandler
com.intellij.openapi.vcs.checkin.CommitCheck
- com.intellij.openapi.project.PossiblyDumbAware
- a:getExecutionOrder():com.intellij.openapi.vcs.checkin.CommitCheck$ExecutionOrder
- a:isEnabled():Z
- a:runCheck(com.intellij.openapi.vcs.checkin.CommitInfo,kotlin.coroutines.Continuation):java.lang.Object
e:com.intellij.openapi.vcs.checkin.CommitCheck$ExecutionOrder
- java.lang.Enum
- sf:EARLY:com.intellij.openapi.vcs.checkin.CommitCheck$ExecutionOrder
- sf:LATE:com.intellij.openapi.vcs.checkin.CommitCheck$ExecutionOrder
- sf:MODIFICATION:com.intellij.openapi.vcs.checkin.CommitCheck$ExecutionOrder
- sf:POST_COMMIT:com.intellij.openapi.vcs.checkin.CommitCheck$ExecutionOrder
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.checkin.CommitCheck$ExecutionOrder
- s:values():com.intellij.openapi.vcs.checkin.CommitCheck$ExecutionOrder[]
f:com.intellij.openapi.vcs.checkin.CommitCheckKt
- sf:getCommittedVirtualFiles(com.intellij.openapi.vcs.checkin.CommitInfo):java.util.List
com.intellij.openapi.vcs.checkin.CommitInfo
- a:getAffectedVcses():java.util.List
- a:getCommitActionText():java.lang.String
- a:getCommitContext():com.intellij.openapi.vcs.changes.CommitContext
- a:getCommitMessage():java.lang.String
- a:getCommittedChanges():java.util.List
- a:getExecutor():com.intellij.openapi.vcs.changes.CommitExecutor
- a:isVcsCommit():Z
com.intellij.openapi.vcs.checkin.CommitProblem
- sf:Companion:com.intellij.openapi.vcs.checkin.CommitProblem$Companion
- a:getText():java.lang.String
- showModalSolution(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.checkin.CommitInfo):com.intellij.openapi.vcs.checkin.CheckinHandler$ReturnResult
f:com.intellij.openapi.vcs.checkin.CommitProblem$Companion
- f:createError(java.lang.Throwable):com.intellij.openapi.vcs.checkin.CommitProblem
com.intellij.openapi.vcs.checkin.CommitProblemWithDetails
- com.intellij.openapi.vcs.checkin.CommitProblem
- a:getShowDetailsAction():java.lang.String
- getShowDetailsLink():java.lang.String
- a:showDetails(com.intellij.openapi.project.Project):V
f:com.intellij.openapi.vcs.checkin.TextCommitProblem
- com.intellij.openapi.vcs.checkin.CommitProblem
- <init>(java.lang.String):V
- getText():java.lang.String
a:com.intellij.openapi.vcs.checkin.VcsCheckinHandlerFactory
- com.intellij.openapi.vcs.checkin.BaseCheckinHandlerFactory
- sf:Companion:com.intellij.openapi.vcs.checkin.VcsCheckinHandlerFactory$Companion
- p:<init>(com.intellij.openapi.vcs.VcsKey):V
- f:createHandler(com.intellij.openapi.vcs.CheckinProjectPanel,com.intellij.openapi.vcs.changes.CommitContext):com.intellij.openapi.vcs.checkin.CheckinHandler
- createSystemReadyHandler(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.checkin.BeforeCheckinDialogHandler
- p:createVcsHandler(com.intellij.openapi.vcs.CheckinProjectPanel):com.intellij.openapi.vcs.checkin.CheckinHandler
- p:createVcsHandler(com.intellij.openapi.vcs.CheckinProjectPanel,com.intellij.openapi.vcs.changes.CommitContext):com.intellij.openapi.vcs.checkin.CheckinHandler
- sf:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
- f:getKey():com.intellij.openapi.vcs.VcsKey
f:com.intellij.openapi.vcs.checkin.VcsCheckinHandlerFactory$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
f:com.intellij.openapi.vcs.checkout.CheckoutFolderToTheSameFolder
- com.intellij.openapi.vcs.checkout.CheckoutStrategy
- <init>(java.io.File,java.io.File,Z):V
- getCheckoutDirectory():java.io.File
- getResult():java.io.File
- useAlternativeCheckoutLocation():Z
com.intellij.openapi.vcs.checkout.CheckoutListener
- sf:COMPLETED_EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:processCheckedOutDirectory(com.intellij.openapi.project.Project,java.nio.file.Path):Z
a:com.intellij.openapi.vcs.checkout.CheckoutStrategy
- java.lang.Comparable
- <init>(java.io.File,java.io.File,Z):V
- compareTo(java.lang.Object):I
- s:createAllStrategies(java.io.File,java.io.File,Z):com.intellij.openapi.vcs.checkout.CheckoutStrategy[]
- a:getCheckoutDirectory():java.io.File
- getCvsPath():java.io.File
- a:getResult():java.io.File
- getSelectedLocation():java.io.File
- isForFile():Z
- a:useAlternativeCheckoutLocation():Z
f:com.intellij.openapi.vcs.checkout.CheckoutToTheDirectoryWithModuleName
- com.intellij.openapi.vcs.checkout.CheckoutStrategy
- <init>(java.io.File,java.io.File,Z):V
- getCheckoutDirectory():java.io.File
- getResult():java.io.File
- useAlternativeCheckoutLocation():Z
f:com.intellij.openapi.vcs.checkout.CreateDirectoryForFolderStrategy
- com.intellij.openapi.vcs.checkout.CheckoutStrategy
- <init>(java.io.File,java.io.File,Z):V
- getCheckoutDirectory():java.io.File
- getResult():java.io.File
- useAlternativeCheckoutLocation():Z
f:com.intellij.openapi.vcs.checkout.SimpleCheckoutStrategy
- com.intellij.openapi.vcs.checkout.CheckoutStrategy
- <init>(java.io.File,java.io.File,Z):V
- getCheckoutDirectory():java.io.File
- getResult():java.io.File
- useAlternativeCheckoutLocation():Z
com.intellij.openapi.vcs.checkout.VcsAwareCheckoutListener
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:processCheckedOutDirectory(com.intellij.openapi.project.Project,java.nio.file.Path,com.intellij.openapi.vcs.VcsKey):Z
com.intellij.openapi.vcs.contentAnnotation.ContentAnnotationCache
- a:isRecent(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.util.TextRange,J):com.intellij.util.ThreeState
- a:register(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.annotate.FileAnnotation):V
com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotation
- a:fileRecentlyChanged(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.history.VcsRevisionNumber
- a:intervalRecentlyChanged(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.TextRange,com.intellij.openapi.vcs.history.VcsRevisionNumber):Z
c:com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotation$Details
- <init>(Z,Z,Z,java.util.List):V
- isFileChanged():Z
- isLineChanged():Z
- isMethodChanged():Z
f:com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotationImpl
- com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotation
- <init>(com.intellij.openapi.project.Project):V
- fileRecentlyChanged(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.history.VcsRevisionNumber
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotation
- intervalRecentlyChanged(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.TextRange,com.intellij.openapi.vcs.history.VcsRevisionNumber):Z
com.intellij.openapi.vcs.diff.DiffMixin
- a:getCurrentRevisionDescription(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.history.VcsRevisionDescription
com.intellij.openapi.vcs.diff.DiffProvider
- canCompareWithWorkingDir():Z
- compareWithWorkingDir(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.history.VcsRevisionNumber):java.util.Collection
- createCurrentFileContent(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.changes.ContentRevision
- a:createFileContent(com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.changes.ContentRevision
- a:getCurrentRevision(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.history.VcsRevisionNumber
- a:getLastRevision(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.diff.ItemLatestState
- a:getLastRevision(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.diff.ItemLatestState
- a:getLatestCommittedRevision(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.history.VcsRevisionNumber
- preloadBaseRevisions(com.intellij.openapi.vfs.VirtualFile,java.util.Collection):V
a:com.intellij.openapi.vcs.diff.DiffProviderEx
- com.intellij.openapi.vcs.diff.DiffProvider
- <init>():V
- getCurrentRevisions(java.lang.Iterable):java.util.Map
- s:getCurrentRevisions(java.lang.Iterable,com.intellij.openapi.vcs.diff.DiffProvider):java.util.Map
c:com.intellij.openapi.vcs.diff.ItemLatestState
- <init>(com.intellij.openapi.vcs.history.VcsRevisionNumber,Z,Z):V
- getNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
- isDefaultHead():Z
- isItemExists():Z
com.intellij.openapi.vcs.diff.RevisionSelector
- a:selectNumber(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.history.VcsRevisionNumber
c:com.intellij.openapi.vcs.history.CurrentRevision
- com.intellij.openapi.vcs.history.VcsFileRevision
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- getAuthor():java.lang.String
- getBranchName():java.lang.String
- getChangedRepositoryPath():com.intellij.openapi.vcs.RepositoryLocation
- getCommitMessage():java.lang.String
- getContent():B[]
- s:getCurrent():java.lang.String
- getRevisionDate():java.util.Date
- getRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
- loadContent():B[]
com.intellij.openapi.vcs.history.DiffFromHistoryHandler
- a:showDiffForOne(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):V
- a:showDiffForTwo(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsFileRevision,com.intellij.openapi.vcs.history.VcsFileRevision):V
com.intellij.openapi.vcs.history.HistoryAsTreeProvider
- a:createTreeOn(java.util.List):java.util.List
c:com.intellij.openapi.vcs.history.HistoryCacheBaseKey
- <init>(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey):V
- equals(java.lang.Object):Z
- getFilePath():com.intellij.openapi.vcs.FilePath
- getVcsKey():com.intellij.openapi.vcs.VcsKey
- hashCode():I
f:com.intellij.openapi.vcs.history.HistoryCacheWithRevisionKey
- com.intellij.openapi.vcs.history.HistoryCacheBaseKey
- <init>(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- equals(java.lang.Object):Z
- getRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
- hashCode():I
com.intellij.openapi.vcs.history.ShortVcsRevisionNumber
- com.intellij.openapi.vcs.history.VcsRevisionNumber
- a:toShortString():java.lang.String
a:com.intellij.openapi.vcs.history.VcsAbstractHistorySession
- com.intellij.openapi.vcs.history.VcsHistorySession
- <init>(java.util.List):V
- p:<init>(java.util.List,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- appendRevision(com.intellij.openapi.vcs.history.VcsFileRevision):V
- pa:calcCurrentRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
- a:copy():com.intellij.openapi.vcs.history.VcsHistorySession
- copyWithCachedRevision():com.intellij.openapi.vcs.history.VcsHistorySession
- p:getCachedRevision():com.intellij.openapi.vcs.history.VcsRevisionNumber
- f:getCurrentRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
- getHistoryAsMap():java.util.Map
- getRevisionList():java.util.List
- hasLocalSource():Z
- isContentAvailable(com.intellij.openapi.vcs.history.VcsFileRevision):Z
- isCurrentRevision(com.intellij.openapi.vcs.history.VcsRevisionNumber):Z
- p:setCachedRevision(com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- shouldBeRefreshed():Z
c:com.intellij.openapi.vcs.history.VcsAppendableHistoryPartnerAdapter
- com.intellij.openapi.vcs.history.VcsAppendableHistorySessionPartner
- <init>():V
- acceptRevision(com.intellij.openapi.vcs.history.VcsFileRevision):V
- check():V
- getSession():com.intellij.openapi.vcs.history.VcsAbstractHistorySession
- reportCreatedEmptySession(com.intellij.openapi.vcs.history.VcsAbstractHistorySession):V
- reportException(com.intellij.openapi.vcs.VcsException):V
com.intellij.openapi.vcs.history.VcsAppendableHistorySessionPartner
- a:acceptRevision(com.intellij.openapi.vcs.history.VcsFileRevision):V
- a:reportCreatedEmptySession(com.intellij.openapi.vcs.history.VcsAbstractHistorySession):V
- a:reportException(com.intellij.openapi.vcs.VcsException):V
com.intellij.openapi.vcs.history.VcsBaseRevisionAdviser
- a:getBaseVersionContent(com.intellij.openapi.vcs.FilePath,java.lang.String):java.lang.String
com.intellij.openapi.vcs.history.VcsCacheableHistorySessionFactory
- a:createFromCachedData(java.io.Serializable,java.util.List,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber):com.intellij.openapi.vcs.history.VcsAbstractHistorySession
- getAdditionallyCachedData(com.intellij.openapi.vcs.history.VcsAbstractHistorySession):java.io.Serializable
- getUsedFilePath(com.intellij.openapi.vcs.history.VcsAbstractHistorySession):com.intellij.openapi.vcs.FilePath
c:com.intellij.openapi.vcs.history.VcsDependentHistoryComponents
- <init>(com.intellij.util.ui.ColumnInfo[],com.intellij.util.Consumer,javax.swing.JComponent):V
- <init>(com.intellij.util.ui.ColumnInfo[],com.intellij.util.Consumer,javax.swing.JComponent,com.intellij.ui.EditorNotificationPanel):V
- s:createOnlyColumns(com.intellij.util.ui.ColumnInfo[]):com.intellij.openapi.vcs.history.VcsDependentHistoryComponents
- getColumns():com.intellij.util.ui.ColumnInfo[]
- getDetailsComponent():javax.swing.JComponent
- getNotificationPanel():com.intellij.ui.EditorNotificationPanel
- getRevisionListener():com.intellij.util.Consumer
com.intellij.openapi.vcs.history.VcsFileContent
- a:getContent():B[]
- getDefaultCharset():java.nio.charset.Charset
- a:loadContent():B[]
com.intellij.openapi.vcs.history.VcsFileRevision
- com.intellij.openapi.vcs.history.VcsFileContent
- com.intellij.openapi.vcs.history.VcsRevisionDescription
- sf:NULL:com.intellij.openapi.vcs.history.VcsFileRevision
- a:getBranchName():java.lang.String
- a:getChangedRepositoryPath():com.intellij.openapi.vcs.RepositoryLocation
a:com.intellij.openapi.vcs.history.VcsFileRevisionEx
- com.intellij.openapi.vcs.history.VcsFileRevision
- <init>():V
- a:getAuthorDate():java.util.Date
- a:getAuthorEmail():java.lang.String
- a:getCommitterEmail():java.lang.String
- a:getCommitterName():java.lang.String
- a:getPath():com.intellij.openapi.vcs.FilePath
- a:isDeleted():Z
f:com.intellij.openapi.vcs.history.VcsHistoryCache
- <init>():V
- f:clearAll():V
- f:clearAnnotations():V
- f:clearHistory():V
- f:clearLastRevisions():V
- f:getAnnotation(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsRevisionNumber):java.lang.Object
- f:getFull(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsCacheableHistorySessionFactory):com.intellij.openapi.vcs.history.VcsAbstractHistorySession
- f:getLastRevision(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsRevisionNumber):com.intellij.openapi.vcs.history.VcsRevisionNumber
- f:getRevisions(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey):java.util.List
- f:getSession(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsCacheableHistorySessionFactory,Z):com.intellij.openapi.vcs.history.VcsAbstractHistorySession
- f:put(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsAbstractHistorySession,com.intellij.openapi.vcs.history.VcsCacheableHistorySessionFactory,Z):V
- f:putAnnotation(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsRevisionNumber,java.lang.Object):V
- f:putLastRevision(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- f:putSession(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsAbstractHistorySession,com.intellij.openapi.vcs.history.VcsCacheableHistorySessionFactory,Z):V
com.intellij.openapi.vcs.history.VcsHistoryProvider
- a:canShowHistoryFor(com.intellij.openapi.vfs.VirtualFile):Z
- a:createSessionFor(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.history.VcsHistorySession
- a:getAdditionalActions(java.lang.Runnable):com.intellij.openapi.actionSystem.AnAction[]
- a:getHelpId():java.lang.String
- a:getHistoryDiffHandler():com.intellij.openapi.vcs.history.DiffFromHistoryHandler
- a:getUICustomization(com.intellij.openapi.vcs.history.VcsHistorySession,javax.swing.JComponent):com.intellij.openapi.vcs.history.VcsDependentHistoryComponents
- a:isDateOmittable():Z
- a:reportAppendableHistory(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsAppendableHistorySessionPartner):V
- a:supportsHistoryForDirectories():Z
com.intellij.openapi.vcs.history.VcsHistorySession
- a:getCurrentRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
- getHistoryAsTreeProvider():com.intellij.openapi.vcs.history.HistoryAsTreeProvider
- a:getRevisionList():java.util.List
- a:hasLocalSource():Z
- a:isContentAvailable(com.intellij.openapi.vcs.history.VcsFileRevision):Z
- a:isCurrentRevision(com.intellij.openapi.vcs.history.VcsRevisionNumber):Z
- a:shouldBeRefreshed():Z
com.intellij.openapi.vcs.history.VcsRevisionDescription
- a:getAuthor():java.lang.String
- a:getCommitMessage():java.lang.String
- a:getRevisionDate():java.util.Date
- a:getRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
f:com.intellij.openapi.vcs.history.VcsRevisionDescriptionImpl
- com.intellij.openapi.vcs.history.VcsRevisionDescription
- <init>(com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- <init>(com.intellij.openapi.vcs.history.VcsRevisionNumber,java.util.Date,java.lang.String,java.lang.String):V
- getAuthor():java.lang.String
- getCommitMessage():java.lang.String
- getRevisionDate():java.util.Date
- getRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
- setAuthor(java.lang.String):V
- setDate(java.util.Date):V
- setMessage(java.lang.String):V
a:com.intellij.openapi.vcs.impl.CheckinHandlersManager
- <init>():V
- s:getInstance():com.intellij.openapi.vcs.impl.CheckinHandlersManager
- a:getRegisteredCheckinHandlerFactories(com.intellij.openapi.vcs.AbstractVcs[]):java.util.List
f:com.intellij.openapi.vcs.impl.ContentRevisionCache
- <init>():V
- s:checkContentsSize(java.lang.String,J):V
- clearAll():V
- clearConstantCache():V
- s:getAsString(B[],com.intellij.openapi.vcs.FilePath,java.nio.charset.Charset):java.lang.String
- getBytes(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.impl.ContentRevisionCache$UniqueType):B[]
- getFromConstantCache(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.impl.ContentRevisionCache$UniqueType):B[]
- s:getOrLoadAsBytes(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.impl.ContentRevisionCache$UniqueType,com.intellij.openapi.util.Throwable2Computable):B[]
- s:getOrLoadCurrentAsBytes(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.impl.CurrentRevisionProvider):com.intellij.openapi.util.Pair
- s:loadAsBytes(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.util.Throwable2Computable):B[]
- putIntoConstantCache(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.VcsKey,B[]):V
e:com.intellij.openapi.vcs.impl.ContentRevisionCache$UniqueType
- java.lang.Enum
- sf:REMOTE_CONTENT:com.intellij.openapi.vcs.impl.ContentRevisionCache$UniqueType
- sf:REPOSITORY_CONTENT:com.intellij.openapi.vcs.impl.ContentRevisionCache$UniqueType
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.impl.ContentRevisionCache$UniqueType
- s:values():com.intellij.openapi.vcs.impl.ContentRevisionCache$UniqueType[]
com.intellij.openapi.vcs.impl.CurrentRevisionProvider
- a:get():com.intellij.openapi.util.Pair
- a:getCurrentRevision():com.intellij.openapi.vcs.history.VcsRevisionNumber
c:com.intellij.openapi.vcs.impl.VcsDescriptor
- <init>(java.lang.String,java.lang.String,java.lang.String,Z):V
- areChildrenValidMappings():Z
- equals(java.lang.Object):Z
- getDisplayName():java.lang.String
- getName():java.lang.String
- hasVcsDirPattern():Z
- hashCode():I
- matchesVcsDirPattern(java.lang.String):Z
- probablyUnderVcs(com.intellij.openapi.vfs.VirtualFile):Z
com.intellij.openapi.vcs.impl.projectlevelman.AllVcsesI
- a:getAll():com.intellij.openapi.vcs.impl.VcsDescriptor[]
- a:getByName(java.lang.String):com.intellij.openapi.vcs.AbstractVcs
- a:getDescriptor(java.lang.String):com.intellij.openapi.vcs.impl.VcsDescriptor
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.impl.projectlevelman.AllVcsesI
- a:getSupportedVcses():com.intellij.openapi.vcs.AbstractVcs[]
- a:isEmpty():Z
- a:registerManually(com.intellij.openapi.vcs.AbstractVcs):V
- a:unregisterManually(com.intellij.openapi.vcs.AbstractVcs):V
f:com.intellij.openapi.vcs.merge.MergeData
- CONFLICT_TYPE:com.intellij.diff.merge.ConflictType
- CURRENT:B[]
- CURRENT_FILE_PATH:com.intellij.openapi.vcs.FilePath
- CURRENT_REVISION_NUMBER:com.intellij.openapi.vcs.history.VcsRevisionNumber
- LAST:B[]
- LAST_FILE_PATH:com.intellij.openapi.vcs.FilePath
- LAST_REVISION_NUMBER:com.intellij.openapi.vcs.history.VcsRevisionNumber
- ORIGINAL:B[]
- ORIGINAL_FILE_PATH:com.intellij.openapi.vcs.FilePath
- ORIGINAL_REVISION_NUMBER:com.intellij.openapi.vcs.history.VcsRevisionNumber
- <init>():V
c:com.intellij.openapi.vcs.merge.MergeDialogCustomizer
- sf:Companion:com.intellij.openapi.vcs.merge.MergeDialogCustomizer$Companion
- <init>():V
- getCenterPanelTitle(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getColumnNames():java.util.List
- getLeftPanelTitle(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getMergeWindowTitle(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getMultipleFileDialogTitle():java.lang.String
- getMultipleFileMergeDescription(java.util.Collection):java.lang.String
- getRightPanelTitle(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.history.VcsRevisionNumber):java.lang.String
- getTitleCustomizerList(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.merge.MergeDialogCustomizer$DiffEditorTitleCustomizerList
f:com.intellij.openapi.vcs.merge.MergeDialogCustomizer$Companion
- f:getDEFAULT_CUSTOMIZER_LIST():com.intellij.openapi.vcs.merge.MergeDialogCustomizer$DiffEditorTitleCustomizerList
f:com.intellij.openapi.vcs.merge.MergeDialogCustomizer$DiffEditorTitleCustomizerList
- <init>(com.intellij.diff.DiffEditorTitleCustomizer,com.intellij.diff.DiffEditorTitleCustomizer,com.intellij.diff.DiffEditorTitleCustomizer):V
- f:component1():com.intellij.diff.DiffEditorTitleCustomizer
- f:component2():com.intellij.diff.DiffEditorTitleCustomizer
- f:component3():com.intellij.diff.DiffEditorTitleCustomizer
- f:copy(com.intellij.diff.DiffEditorTitleCustomizer,com.intellij.diff.DiffEditorTitleCustomizer,com.intellij.diff.DiffEditorTitleCustomizer):com.intellij.openapi.vcs.merge.MergeDialogCustomizer$DiffEditorTitleCustomizerList
- bs:copy$default(com.intellij.openapi.vcs.merge.MergeDialogCustomizer$DiffEditorTitleCustomizerList,com.intellij.diff.DiffEditorTitleCustomizer,com.intellij.diff.DiffEditorTitleCustomizer,com.intellij.diff.DiffEditorTitleCustomizer,I,java.lang.Object):com.intellij.openapi.vcs.merge.MergeDialogCustomizer$DiffEditorTitleCustomizerList
- equals(java.lang.Object):Z
- f:getCenterTitleCustomizer():com.intellij.diff.DiffEditorTitleCustomizer
- f:getLeftTitleCustomizer():com.intellij.diff.DiffEditorTitleCustomizer
- f:getRightTitleCustomizer():com.intellij.diff.DiffEditorTitleCustomizer
- hashCode():I
com.intellij.openapi.vcs.merge.MergeProvider
- a:conflictResolvedForFile(com.intellij.openapi.vfs.VirtualFile):V
- createDefaultMergeDialogCustomizer():com.intellij.openapi.vcs.merge.MergeDialogCustomizer
- a:isBinary(com.intellij.openapi.vfs.VirtualFile):Z
- a:loadRevisions(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.merge.MergeData
com.intellij.openapi.vcs.merge.MergeProvider2
- com.intellij.openapi.vcs.merge.MergeProvider
- a:createMergeSession(java.util.List):com.intellij.openapi.vcs.merge.MergeSession
com.intellij.openapi.vcs.merge.MergeSession
- a:canMerge(com.intellij.openapi.vfs.VirtualFile):Z
- a:conflictResolvedForFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vcs.merge.MergeSession$Resolution):V
- a:getMergeInfoColumns():com.intellij.util.ui.ColumnInfo[]
e:com.intellij.openapi.vcs.merge.MergeSession$Resolution
- java.lang.Enum
- sf:AcceptedTheirs:com.intellij.openapi.vcs.merge.MergeSession$Resolution
- sf:AcceptedYours:com.intellij.openapi.vcs.merge.MergeSession$Resolution
- sf:Merged:com.intellij.openapi.vcs.merge.MergeSession$Resolution
- s:valueOf(java.lang.String):com.intellij.openapi.vcs.merge.MergeSession$Resolution
- s:values():com.intellij.openapi.vcs.merge.MergeSession$Resolution[]
com.intellij.openapi.vcs.merge.MergeSessionEx
- com.intellij.openapi.vcs.merge.MergeSession
- a:acceptFilesRevisions(java.util.List,com.intellij.openapi.vcs.merge.MergeSession$Resolution):V
- a:conflictResolvedForFiles(java.util.List,com.intellij.openapi.vcs.merge.MergeSession$Resolution):V
a:com.intellij.openapi.vcs.rollback.DefaultRollbackEnvironment
- com.intellij.openapi.vcs.rollback.RollbackEnvironment
- <init>():V
- getRollbackOperationName():java.lang.String
- s:getRollbackOperationText():java.lang.String
- rollbackModifiedWithoutCheckout(java.util.List,java.util.List,com.intellij.openapi.vcs.rollback.RollbackProgressListener):V
com.intellij.openapi.vcs.rollback.RollbackEnvironment
- createCustomRollbackActions():java.util.Collection
- a:getRollbackOperationName():java.lang.String
- a:rollbackChanges(java.util.List,java.util.List,com.intellij.openapi.vcs.rollback.RollbackProgressListener):V
- rollbackIfUnchanged(com.intellij.openapi.vfs.VirtualFile):V
- a:rollbackMissingFileDeletion(java.util.List,java.util.List,com.intellij.openapi.vcs.rollback.RollbackProgressListener):V
- a:rollbackModifiedWithoutCheckout(java.util.List,java.util.List,com.intellij.openapi.vcs.rollback.RollbackProgressListener):V
com.intellij.openapi.vcs.rollback.RollbackProgressListener
- sf:EMPTY:com.intellij.openapi.vcs.rollback.RollbackProgressListener
- a:accept(com.intellij.openapi.vcs.FilePath):V
- a:accept(com.intellij.openapi.vcs.changes.Change):V
- a:accept(com.intellij.openapi.vfs.VirtualFile):V
- a:accept(java.io.File):V
- a:accept(java.util.List):V
- a:checkCanceled():V
- a:determinate():V
- a:indeterminate():V
com.intellij.openapi.vcs.roots.VcsRootDetector
- a:detect():java.util.Collection
- a:detect(com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.roots.VcsRootDetector
- a:getOrDetect():java.util.Collection
com.intellij.openapi.vcs.ui.Refreshable
- sf:PANEL_KEY:com.intellij.openapi.actionSystem.DataKey
- refresh():V
- a:restoreState():V
- a:saveState():V
com.intellij.openapi.vcs.ui.RefreshableOnComponent
- com.intellij.openapi.vcs.ui.Refreshable
- a:getComponent():javax.swing.JComponent
c:com.intellij.openapi.vcs.ui.ReplaceFileConfirmationDialog
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- collectModifiedFiles(com.intellij.openapi.vfs.VirtualFile[]):java.util.Collection
- confirmFor(com.intellij.openapi.vfs.VirtualFile[]):Z
- p:createMessage(java.util.Collection):java.lang.String
- p:getCancelButtonText():java.lang.String
- p:getOkButtonTextForFiles():java.lang.String
- p:getOkButtonTextForOneFile():java.lang.String
- requestConfirmation(java.util.Collection):Z
a:com.intellij.openapi.vcs.ui.SearchFieldAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- <init>(java.lang.String):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- getText():java.lang.String
- setTextFieldFg(Z):V
a:com.intellij.openapi.vcs.ui.TextFieldAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.ex.CustomComponentAction
- com.intellij.openapi.project.DumbAware
- p:myField:javax.swing.JTextField
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon,I):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- createCustomComponent(com.intellij.openapi.actionSystem.Presentation,java.lang.String):javax.swing.JComponent
- perform():V
com.intellij.openapi.vcs.ui.VcsCloneComponent
- com.intellij.openapi.Disposable
- a:doClone(com.intellij.openapi.vcs.CheckoutProvider$Listener):V
- a:doValidateAll():java.util.List
- getOkButtonText():java.lang.String
- a:getPreferredFocusedComponent():javax.swing.JComponent
- a:getView():javax.swing.JComponent
- a:isOkEnabled():Z
- onComponentSelected(com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogComponentStateListener):V
com.intellij.openapi.vcs.ui.VcsCloneComponent$WithSettableUrl
- a:setUrl(java.lang.String):V
f:com.intellij.openapi.vcs.ui.VcsCloneComponentStub
- com.intellij.openapi.vcs.ui.VcsCloneComponent
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.CheckoutProvider,java.lang.String):V
- b:<init>(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.CheckoutProvider,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- dispose():V
- doClone(com.intellij.openapi.vcs.CheckoutProvider$Listener):V
- doValidateAll():java.util.List
- getOkButtonText():java.lang.String
- getPreferredFocusedComponent():javax.swing.JComponent
- getView():javax.swing.JComponent
- isOkEnabled():Z
com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogComponentStateListener
- java.util.EventListener
- a:onListItemChanged():V
- a:onOkActionEnabled(Z):V
- a:onOkActionNameChanged(java.lang.String):V
com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension
- sf:Companion:com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension$Companion
- createMainComponent(com.intellij.openapi.project.Project):com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionComponent
- createMainComponent(com.intellij.openapi.project.Project,com.intellij.openapi.application.ModalityState):com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionComponent
- getAdditionalStatusLines():java.util.List
- a:getIcon():javax.swing.Icon
- a:getName():java.lang.String
- getTooltip():java.lang.String
f:com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
f:com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension$DefaultImpls
- s:createMainComponent(com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension,com.intellij.openapi.project.Project):com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionComponent
- s:createMainComponent(com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension,com.intellij.openapi.project.Project,com.intellij.openapi.application.ModalityState):com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionComponent
- s:getAdditionalStatusLines(com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension):java.util.List
- s:getTooltip(com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension):java.lang.String
a:com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionComponent
- com.intellij.openapi.Disposable
- <init>():V
- f:addComponentStateListener(com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogComponentStateListener):V
- f:dispose():V
- a:doClone(com.intellij.openapi.vcs.CheckoutProvider$Listener):V
- a:doValidateAll():java.util.List
- pf:getDialogStateListener():com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogComponentStateListener
- getPreferredFocusedComponent():javax.swing.JComponent
- a:getView():javax.swing.JComponent
- a:onComponentSelected():V
- f:removeComponentListener(com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogComponentStateListener):V
f:com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionStatusLine
- sf:Companion:com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionStatusLine$Companion
- <init>(java.lang.String,com.intellij.ui.SimpleTextAttributes,java.awt.event.ActionListener):V
- b:<init>(java.lang.String,com.intellij.ui.SimpleTextAttributes,java.awt.event.ActionListener,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.String
- f:component2():com.intellij.ui.SimpleTextAttributes
- f:component3():java.awt.event.ActionListener
- f:copy(java.lang.String,com.intellij.ui.SimpleTextAttributes,java.awt.event.ActionListener):com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionStatusLine
- bs:copy$default(com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionStatusLine,java.lang.String,com.intellij.ui.SimpleTextAttributes,java.awt.event.ActionListener,I,java.lang.Object):com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionStatusLine
- equals(java.lang.Object):Z
- f:getActionListener():java.awt.event.ActionListener
- f:getAttribute():com.intellij.ui.SimpleTextAttributes
- f:getText():java.lang.String
- hashCode():I
f:com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionStatusLine$Companion
- f:greyText(java.lang.String):com.intellij.openapi.vcs.ui.cloneDialog.VcsCloneDialogExtensionStatusLine
f:com.intellij.openapi.vcs.update.FileGroup
- sf:CHANGED_ON_SERVER_ID:java.lang.String
- sf:CREATED_ID:java.lang.String
- sf:LOCALLY_ADDED_ID:java.lang.String
- sf:LOCALLY_REMOVED_ID:java.lang.String
- sf:MERGED_ID:java.lang.String
- sf:MERGED_WITH_CONFLICT_ID:java.lang.String
- sf:MERGED_WITH_PROPERTY_CONFLICT_ID:java.lang.String
- sf:MERGED_WITH_TREE_CONFLICT:java.lang.String
- sf:MODIFIED_ID:java.lang.String
- sf:REMOVED_FROM_REPOSITORY_ID:java.lang.String
- sf:RESTORED_ID:java.lang.String
- sf:SKIPPED_ID:java.lang.String
- sf:SWITCHED_ID:java.lang.String
- sf:UNKNOWN_ID:java.lang.String
- sf:UPDATED_ID:java.lang.String
- myCanBeAbsent:Z
- myId:java.lang.String
- myStatusName:java.lang.String
- mySupportsDeletion:Z
- myUpdateName:java.lang.String
- <init>():V
- <init>(java.lang.String,java.lang.String,Z,java.lang.String,Z):V
- add(java.lang.String,com.intellij.openapi.vcs.VcsKey,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- add(java.lang.String,java.lang.String,com.intellij.openapi.vcs.history.VcsRevisionNumber):V
- addChild(com.intellij.openapi.vcs.update.FileGroup):V
- addError(java.lang.String,java.lang.String):V
- getChildren():java.util.List
- getErrorsMap():java.util.Map
- getFiles():java.util.Collection
- getFilesAndRevisions(com.intellij.openapi.vcs.ProjectLevelVcsManager):java.util.List
- getId():java.lang.String
- getInvalidAttributes():com.intellij.ui.SimpleTextAttributes
- getRevision(com.intellij.openapi.vcs.ProjectLevelVcsManager,java.lang.String):com.intellij.openapi.vcs.history.VcsRevisionNumber
- getStatusName():java.lang.String
- getSupportsDeletion():Z
- getUpdateName():java.lang.String
- getUpdatedFiles():java.util.Collection
- isEmpty():Z
- readExternal(org.jdom.Element):V
- s:readGroupsFromElement(java.util.List,org.jdom.Element):V
- remove(java.lang.String):V
- writeExternal(org.jdom.Element):V
- s:writeGroupsToElement(java.util.List,org.jdom.Element):V
com.intellij.openapi.vcs.update.SequentialUpdatesContext
- a:getMessageWhenInterruptedBeforeStart():java.lang.String
- a:shouldFail():Z
com.intellij.openapi.vcs.update.UpdateEnvironment
- a:createConfigurable(java.util.Collection):com.intellij.openapi.options.Configurable
- a:fillGroups(com.intellij.openapi.vcs.update.UpdatedFiles):V
- hasCustomNotification():Z
- a:updateDirectories(com.intellij.openapi.vcs.FilePath[],com.intellij.openapi.vcs.update.UpdatedFiles,com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.util.Ref):com.intellij.openapi.vcs.update.UpdateSession
- a:validateOptions(java.util.Collection):Z
com.intellij.openapi.vcs.update.UpdateSession
- getAdditionalNotificationContent():java.lang.String
- a:getExceptions():java.util.List
- a:isCanceled():Z
- a:onRefreshFilesCompleted():V
- showNotification():V
c:com.intellij.openapi.vcs.update.UpdateSessionAdapter
- com.intellij.openapi.vcs.update.UpdateSession
- <init>(java.util.List,Z):V
- getExceptions():java.util.List
- isCanceled():Z
- onRefreshFilesCompleted():V
f:com.intellij.openapi.vcs.update.UpdatedFiles
- sf:Companion:com.intellij.openapi.vcs.update.UpdatedFiles$Companion
- sf:create():com.intellij.openapi.vcs.update.UpdatedFiles
- f:getGroupById(java.lang.String):com.intellij.openapi.vcs.update.FileGroup
- f:getTopLevelGroups():java.util.List
- f:isEmpty():Z
- f:registerGroup(com.intellij.openapi.vcs.update.FileGroup):com.intellij.openapi.vcs.update.FileGroup
f:com.intellij.openapi.vcs.update.UpdatedFiles$Companion
- f:create():com.intellij.openapi.vcs.update.UpdatedFiles
c:com.intellij.openapi.vcs.update.UpdatedFilesReverseSide
- <init>(com.intellij.openapi.vcs.update.UpdatedFiles):V
- accumulateFiles(com.intellij.openapi.vcs.update.UpdatedFiles,com.intellij.openapi.vcs.update.UpdatedFilesReverseSide$DuplicateLevel):V
- addFileToGroup(com.intellij.openapi.vcs.update.FileGroup,java.lang.String,com.intellij.openapi.vcs.update.UpdatedFilesReverseSide$DuplicateLevel,java.lang.String):V
- addFileToGroup(java.lang.String,java.lang.String,com.intellij.openapi.vcs.update.UpdatedFilesReverseSide$DuplicateLevel,java.lang.String):V
- containErrors():Z
- s:containErrors(com.intellij.openapi.vcs.update.UpdatedFiles):Z
- containsFile(com.intellij.openapi.vfs.VirtualFile):Z
- getGroup(java.lang.String):com.intellij.openapi.vcs.update.FileGroup
- s:getPathsFromUpdatedFiles(com.intellij.openapi.vcs.update.UpdatedFiles):java.util.Set
- getUpdatedFiles():com.intellij.openapi.vcs.update.UpdatedFiles
- isEmpty():Z
- rebuildFromUpdatedFiles():V
a:com.intellij.openapi.vcs.update.UpdatedFilesReverseSide$DuplicateLevel
- sf:ALLOW_DUPLICATES:com.intellij.openapi.vcs.update.UpdatedFilesReverseSide$DuplicateLevel
- sf:DUPLICATE_ERRORS:com.intellij.openapi.vcs.update.UpdatedFilesReverseSide$DuplicateLevel
- sf:DUPLICATE_ERRORS_LOCALS:com.intellij.openapi.vcs.update.UpdatedFilesReverseSide$DuplicateLevel
- sf:NO_DUPLICATES:com.intellij.openapi.vcs.update.UpdatedFilesReverseSide$DuplicateLevel
c:com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings
- CHANGE_AFTER:java.lang.String
- CHANGE_BEFORE:java.lang.String
- DATE_AFTER:java.lang.String
- DATE_BEFORE:java.lang.String
- sf:DATE_FORMAT:java.time.format.DateTimeFormatter
- sf:HEAD:java.lang.String
- STOP_ON_COPY:Z
- STRICTLY_AFTER:Z
- USER:java.lang.String
- USE_CHANGE_AFTER_FILTER:Z
- USE_CHANGE_BEFORE_FILTER:Z
- USE_DATE_AFTER_FILTER:Z
- USE_DATE_BEFORE_FILTER:Z
- USE_USER_FILTER:Z
- <init>():V
- createFilter():com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings$Filter
- p:createFilters():java.util.List
- filterChanges(java.util.List):V
- getChangeAfterFilter():java.lang.Long
- getChangeBeforeFilter():java.lang.Long
- getDateAfter():java.util.Date
- getDateAfterFilter():java.util.Date
- getDateBefore():java.util.Date
- getDateBeforeFilter():java.util.Date
- getUserFilter():java.lang.String
- isAnyFilterSpecified():Z
- isNonDateFilterSpecified():Z
- setDateAfter(java.util.Date):V
- setDateBefore(java.util.Date):V
com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings$Filter
- a:accepts(com.intellij.openapi.vcs.versionBrowser.CommittedChangeList):Z
com.intellij.openapi.vcs.versionBrowser.ChangesBrowserSettingsEditor
- a:getComponent():javax.swing.JComponent
- a:getDimensionServiceKey():java.lang.String
- a:getSettings():com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings
- a:setSettings(com.intellij.openapi.vcs.versionBrowser.ChangeBrowserSettings):V
- a:updateEnabledControls():V
- a:validateInput():java.lang.String
com.intellij.openapi.vcs.versionBrowser.CommittedChangeList
- com.intellij.openapi.vcs.changes.ChangeList
- a:getBranch():java.lang.String
- getChangesWithMovedTrees():java.util.Collection
- a:getCommitDate():java.util.Date
- a:getCommitterName():java.lang.String
- a:getNumber():J
- a:getVcs():com.intellij.openapi.vcs.AbstractVcs
- a:isModifiable():Z
- a:setDescription(java.lang.String):V
c:com.intellij.openapi.vcs.versionBrowser.CommittedChangeListImpl
- com.intellij.openapi.vcs.versionBrowser.CommittedChangeList
- p:myChanges:java.util.ArrayList
- <init>(java.lang.String,java.lang.String,java.lang.String,J,java.util.Date,java.util.Collection):V
- getBranch():java.lang.String
- getChanges():java.util.Collection
- getComment():java.lang.String
- getCommitDate():java.util.Date
- getCommitterName():java.lang.String
- getName():java.lang.String
- getNumber():J
- getVcs():com.intellij.openapi.vcs.AbstractVcs
- isModifiable():Z
- setDescription(java.lang.String):V
com.intellij.openapi.vcs.versionBrowser.VcsRevisionNumberAware
- a:getRevisionNumber():com.intellij.openapi.vcs.history.VcsRevisionNumber
com.intellij.util.AsynchConsumer
- com.intellij.util.Consumer
- a:finished():V
f:com.intellij.util.FilePathByPathComparator
- java.util.Comparator
- <init>():V
- compare(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.FilePath):I
- s:getInstance():com.intellij.util.FilePathByPathComparator
c:com.intellij.util.ui.ConfirmationDialog
- com.intellij.util.ui.OptionsMessageDialog
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.vcs.VcsShowConfirmationOption):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,com.intellij.openapi.vcs.VcsShowConfirmationOption,java.lang.String,java.lang.String):V
- p:canBeHidden():Z
- p:getCancelActionName():java.lang.String
- p:getDoNotShowMessage():java.lang.String
- p:getOkActionName():java.lang.String
- p:isToBeShown():Z
- s:requestForConfirmation(com.intellij.openapi.vcs.VcsShowConfirmationOption,com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon):Z
- s:requestForConfirmation(com.intellij.openapi.vcs.VcsShowConfirmationOption,com.intellij.openapi.project.Project,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String,java.lang.String):Z
- setDoNotShowAgainMessage(java.lang.String):V
- p:setToBeShown(Z,Z):V
- p:shouldSaveOptionsOnCancel():Z
a:com.intellij.util.ui.VcsBackgroundTask
- com.intellij.openapi.progress.Task$Backgroundable
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.util.Collection):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,java.util.Collection,Z):V
- p:executedOk():Z
- onSuccess():V
- pa:process(java.lang.Object):V
- run(com.intellij.openapi.progress.ProgressIndicator):V
f:com.intellij.util.ui.VcsSynchronousProgressWrapper
- s:compute(com.intellij.openapi.util.ThrowableComputable,com.intellij.openapi.project.Project,java.lang.String):java.lang.Object
- s:wrap(com.intellij.util.ThrowableRunnable,com.intellij.openapi.project.Project,java.lang.String):Z
com.intellij.vcs.VcsRepositoryInitializer
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getSupportedVcs():com.intellij.openapi.vcs.VcsKey
- a:initRepository(java.io.File):V
com.intellij.vcs.VcsSymlinkResolver
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:isEnabled():Z
- a:resolveSymlink(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
com.intellij.vcs.branch.BranchData
- a:getBranchName():java.lang.String
- a:getPresentableRootName():java.lang.String
com.intellij.vcs.branch.BranchStateProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getCurrentBranch(com.intellij.openapi.vcs.FilePath):com.intellij.vcs.branch.BranchData
com.intellij.vcs.branch.LinkedBranchData
- com.intellij.vcs.branch.BranchData
- a:getLinkedBranchName():java.lang.String
com.intellij.vcs.commit.AmendCommitModeListener
- java.util.EventListener
- a:amendCommitModeToggled():V
com.intellij.vcs.commit.CommitAuthorListener
- java.util.EventListener
- a:commitAuthorChanged():V
- a:commitAuthorDateChanged():V
com.intellij.vcs.commit.CommitAuthorTracker
- a:addCommitAuthorListener(com.intellij.vcs.commit.CommitAuthorListener,com.intellij.openapi.Disposable):V
- a:getCommitAuthor():com.intellij.vcs.log.VcsUser
- a:getCommitAuthorDate():java.util.Date
- a:setCommitAuthor(com.intellij.vcs.log.VcsUser):V
- a:setCommitAuthorDate(java.util.Date):V
a:com.intellij.vcs.commit.CommitChecksResult
- f:getShouldCloseWindow():Z
- f:getShouldCommit():Z
f:com.intellij.vcs.commit.CommitChecksResult$Cancelled
- com.intellij.vcs.commit.CommitChecksResult
- sf:INSTANCE:com.intellij.vcs.commit.CommitChecksResult$Cancelled
f:com.intellij.vcs.commit.CommitChecksResult$ExecutionError
- com.intellij.vcs.commit.CommitChecksResult
- sf:INSTANCE:com.intellij.vcs.commit.CommitChecksResult$ExecutionError
f:com.intellij.vcs.commit.CommitChecksResult$Failed
- com.intellij.vcs.commit.CommitChecksResult
- <init>():V
- <init>(Z):V
- b:<init>(Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getToCloseWindow():Z
f:com.intellij.vcs.commit.CommitChecksResult$OnlyChecks
- com.intellij.vcs.commit.CommitChecksResult
- <init>(Z):V
- f:getChecksPassed():Z
f:com.intellij.vcs.commit.CommitChecksResult$Passed
- com.intellij.vcs.commit.CommitChecksResult
- sf:INSTANCE:com.intellij.vcs.commit.CommitChecksResult$Passed
com.intellij.vcs.commit.CommitExecutorListener
- java.util.EventListener
- a:executorCalled(com.intellij.openapi.vcs.changes.CommitExecutor):V
com.intellij.vcs.commit.CommitMessageUi
- com.intellij.ui.TextAccessor
- a:focus():V
- a:getText():java.lang.String
- a:setText(java.lang.String):V
- a:startLoading():V
- a:stopLoading():V
com.intellij.vcs.commit.CommitMode
- disableDefaultCommitAction():Z
- hideLocalChangesTab():Z
- a:useCommitToolWindow():Z
f:com.intellij.vcs.commit.CommitMode$ModalCommitMode
- com.intellij.vcs.commit.CommitMode
- sf:INSTANCE:com.intellij.vcs.commit.CommitMode$ModalCommitMode
- useCommitToolWindow():Z
f:com.intellij.vcs.commit.CommitMode$NonModalCommitMode
- com.intellij.vcs.commit.CommitMode
- <init>(Z):V
- f:component1():Z
- f:copy(Z):com.intellij.vcs.commit.CommitMode$NonModalCommitMode
- bs:copy$default(com.intellij.vcs.commit.CommitMode$NonModalCommitMode,Z,I,java.lang.Object):com.intellij.vcs.commit.CommitMode$NonModalCommitMode
- equals(java.lang.Object):Z
- hashCode():I
- f:isToggleMode():Z
- useCommitToolWindow():Z
f:com.intellij.vcs.commit.CommitMode$PendingCommitMode
- com.intellij.vcs.commit.CommitMode
- sf:INSTANCE:com.intellij.vcs.commit.CommitMode$PendingCommitMode
- disableDefaultCommitAction():Z
- useCommitToolWindow():Z
com.intellij.vcs.commit.CommitWorkflowHandler
- a:execute(com.intellij.openapi.vcs.changes.CommitExecutor):V
- a:getAmendCommitHandler():com.intellij.vcs.commit.AmendCommitHandler
- getCommitAuthorTracker():com.intellij.vcs.commit.CommitAuthorTracker
- a:getExecutor(java.lang.String):com.intellij.openapi.vcs.changes.CommitExecutor
- getState():com.intellij.vcs.commit.CommitWorkflowHandlerState
- a:isExecutorEnabled(com.intellij.openapi.vcs.changes.CommitExecutor):Z
com.intellij.vcs.commit.CommitWorkflowUi
- com.intellij.openapi.Disposable
- com.intellij.openapi.actionSystem.UiCompatibleDataProvider
- a:activate():Z
- a:addDataProvider(com.intellij.openapi.actionSystem.DataProvider):V
- a:addExecutorListener(com.intellij.vcs.commit.CommitExecutorListener,com.intellij.openapi.Disposable):V
- a:addInclusionListener(com.intellij.openapi.vcs.changes.InclusionListener,com.intellij.openapi.Disposable):V
- a:endBeforeCommitChecks(com.intellij.vcs.commit.CommitChecksResult):V
- a:getCommitMessageUi():com.intellij.vcs.commit.CommitMessageUi
- a:getDefaultCommitActionName():java.lang.String
- a:getDisplayedChanges():java.util.List
- a:getDisplayedUnversionedFiles():java.util.List
- a:getIncludedChanges():java.util.List
- a:getIncludedUnversionedFiles():java.util.List
- a:setDefaultCommitActionName(java.lang.String):V
- a:startBeforeCommitChecks():V
com.intellij.vcs.history.VcsHistoryProviderEx
- com.intellij.openapi.vcs.history.VcsHistoryProvider
- a:getLastRevision(com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.history.VcsFileRevision
- a:reportAppendableHistory(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.vcs.history.VcsRevisionNumber,com.intellij.openapi.vcs.history.VcsAppendableHistorySessionPartner):V
com.intellij.vcs.log.VcsUser
- a:getEmail():java.lang.String
- a:getName():java.lang.String
a:com.intellij.vcsUtil.ActionWithTempFile
- <init>(java.io.File):V
- execute():V
- pa:executeInternal():V
f:com.intellij.vcsUtil.UIVcsUtil
- s:errorPanel(java.lang.String,Z):javax.swing.JPanel
- s:infoPanel(java.lang.String,java.lang.String):javax.swing.JPanel
a:com.intellij.vcsUtil.VcsCatchingRunnable
- java.lang.Runnable
- java.util.function.Supplier
- <init>():V
- get():java.util.List
- run():V
- pa:runImpl():V
com.intellij.vcsUtil.VcsRunnable
- a:run():V
c:com.intellij.vcsUtil.VcsSelection
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.util.TextRange,java.lang.String):V
- getActionName():java.lang.String
- getDialogTitle():java.lang.String
- getDocument():com.intellij.openapi.editor.Document
- getSelectionEndLineNumber():I
- getSelectionStartLineNumber():I
com.intellij.vcsUtil.VcsSelectionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getSelection(com.intellij.openapi.actionSystem.DataContext):com.intellij.vcsUtil.VcsSelection
f:com.intellij.vcsUtil.VcsUIUtil
- sf:INSTANCE:com.intellij.vcsUtil.VcsUIUtil
- f:showPopupAbove(com.intellij.openapi.ui.popup.JBPopup,java.awt.Component):V
- f:showPopupAbove(com.intellij.openapi.ui.popup.JBPopup,java.awt.Component,java.lang.Integer):V
f:com.intellij.vcsUtil.VcsUIUtilKt
- sf:showAbove(com.intellij.openapi.ui.popup.JBPopup,java.awt.Component):V
f:com.intellij.vcsUtil.VcsUtil
- sf:MAX_VCS_LOADED_SIZE_KB:java.lang.String
- <init>():V
- s:addMapping(java.util.List,com.intellij.openapi.vcs.VcsDirectoryMapping):java.util.List
- s:addMapping(java.util.List,java.lang.String,java.lang.String):java.util.List
- s:chopTrailingChars(java.lang.String,C[]):java.lang.String
- s:computeWithModalProgress(com.intellij.openapi.project.Project,java.lang.String,Z,com.intellij.util.ThrowableConvertor):java.lang.Object
- s:findVcs(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.vcs.AbstractVcs
- s:findVcsByKey(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.VcsKey):com.intellij.openapi.vcs.AbstractVcs
- s:getCanonicalLocalPath(java.lang.String):java.lang.String
- s:getCanonicalPath(java.io.File):java.lang.String
- s:getCanonicalPath(java.lang.String):java.lang.String
- s:getFileByteContent(java.io.File):B[]
- s:getFileContent(java.lang.String):java.lang.String
- s:getFilePath(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.FilePath
- s:getFilePath(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vcs.FilePath
- s:getFilePath(com.intellij.openapi.vfs.VirtualFile,java.lang.String,Z):com.intellij.openapi.vcs.FilePath
- s:getFilePath(java.io.File):com.intellij.openapi.vcs.FilePath
- s:getFilePath(java.io.File,Z):com.intellij.openapi.vcs.FilePath
- s:getFilePath(java.lang.String):com.intellij.openapi.vcs.FilePath
- s:getFilePath(java.lang.String,Z):com.intellij.openapi.vcs.FilePath
- s:getFilePath(java.nio.file.Path,Z):com.intellij.openapi.vcs.FilePath
- s:getFilePathForDeletedFile(java.lang.String,Z):com.intellij.openapi.vcs.FilePath
- s:getFilePathOnNonLocal(java.lang.String,Z):com.intellij.openapi.vcs.FilePath
- s:getIcon(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):javax.swing.Icon
- s:getLastCommitPath(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.FilePath
- s:getMaxVcsLoadedFileSize():I
- s:getOneVirtualFile(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.vfs.VirtualFile
- s:getPathForProgressPresentation(java.io.File):java.lang.String
- s:getPresentablePath(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath,Z,Z):java.lang.String
- s:getPresentablePath(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z,Z):java.lang.String
- s:getShortRevisionString(com.intellij.openapi.vcs.history.VcsRevisionNumber):java.lang.String
- s:getShortVcsRootName(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:getVcsFor(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vcs.AbstractVcs
- s:getVcsFor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vcs.AbstractVcs
- s:getVcsIgnoreFileNames(com.intellij.openapi.project.Project):java.util.Set
- s:getVcsRootFor(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):com.intellij.openapi.vfs.VirtualFile
- s:getVcsRootFor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:getVirtualFile(java.io.File):com.intellij.openapi.vfs.VirtualFile
- s:getVirtualFile(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- s:getVirtualFileWithRefresh(java.io.File):com.intellij.openapi.vfs.VirtualFile
- s:getVirtualFiles(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.openapi.vfs.VirtualFile[]
- s:groupByRoots(com.intellij.openapi.project.Project,java.util.Collection,com.intellij.util.Function):java.util.Map
- s:groupByRoots(com.intellij.openapi.project.Project,java.util.Collection,Z,com.intellij.util.Function):java.util.Map
- s:isAspectAvailableByDefault(java.lang.String):Z
- s:isAspectAvailableByDefault(java.lang.String,Z):Z
- s:isChangeForFolder(com.intellij.openapi.vcs.changes.Change):Z
- s:isFileForVcs(com.intellij.openapi.vcs.FilePath,com.intellij.openapi.project.Project,com.intellij.openapi.vcs.AbstractVcs):Z
- s:isFileForVcs(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project,com.intellij.openapi.vcs.AbstractVcs):Z
- s:isFileForVcs(java.lang.String,com.intellij.openapi.project.Project,com.intellij.openapi.vcs.AbstractVcs):Z
- s:isFileUnderVcs(com.intellij.openapi.project.Project,com.intellij.openapi.vcs.FilePath):Z
- s:isFileUnderVcs(com.intellij.openapi.project.Project,java.lang.String):Z
- s:joinWithAnd(java.util.List,I):java.lang.String
- s:removeAllFromSet(java.util.Set,java.util.Collection):Z
- s:resolveSymlink(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:resolveSymlinkIfNeeded(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:runVcsProcessWithProgress(com.intellij.vcsUtil.VcsRunnable,java.lang.String,Z,com.intellij.openapi.project.Project):Z
- s:setAspectAvailability(java.lang.String,Z):V
- s:shouldDetectVcsMappingsFor(com.intellij.openapi.project.Project):Z
- s:sortPathsFromOutermost(com.intellij.openapi.vcs.FilePath[]):com.intellij.openapi.vcs.FilePath[]
- s:trimCommitMessageToSaneSize(java.lang.String):java.lang.String
com.intellij.vfs.AsyncVfsEventsListener
- a:filesChanged(java.util.List,kotlin.coroutines.Continuation):java.lang.Object
com.intellij.vfs.AsyncVfsEventsPostProcessor
- a:addListener(com.intellij.vfs.AsyncVfsEventsListener,kotlinx.coroutines.CoroutineScope):V
- s:getInstance():com.intellij.vfs.AsyncVfsEventsPostProcessor
