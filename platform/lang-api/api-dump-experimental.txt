*a:com.intellij.application.options.codeStyle.properties.CodeStyleFieldAccessor
- com.intellij.application.options.codeStyle.properties.CodeStylePropertyAccessor
- <init>(java.lang.Object,java.lang.reflect.Field):V
- pa:fromExternal(java.lang.Object):java.lang.Object
- get():java.lang.Object
- getDataObject():java.lang.Object
- getPropertyName():java.lang.String
- p:isEmpty(java.lang.Object):Z
- set(java.lang.Object):Z
- pa:toExternal(java.lang.Object):java.lang.Object
*f:com.intellij.application.options.codeStyle.properties.LanguageCodeStylePropertyMapper
- com.intellij.application.options.codeStyle.properties.AbstractCodeStylePropertyMapper
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.lang.Language,java.lang.String):V
- getLanguage():com.intellij.lang.Language
- getLanguageDomainId():java.lang.String
- getPropertyDescription(java.lang.String):java.lang.String
*:com.intellij.build.BuildWorkspaceConfiguration
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.build.BuildWorkspaceConfiguration
- a:isShowFirstErrorInEditor():Z
*:com.intellij.build.events.BuildIssueEvent
- com.intellij.build.events.MessageEvent
- a:getIssue():com.intellij.build.issue.BuildIssue
*:com.intellij.build.events.DerivedResult
- com.intellij.build.events.EventResult
- a:createDefaultResult():com.intellij.build.events.EventResult
- a:createFailureResult():com.intellij.build.events.FailureResult
*:com.intellij.build.events.DuplicateMessageAware
*:com.intellij.build.issue.BuildIssueChecker
- a:check(com.intellij.build.issue.BuildIssueData):com.intellij.build.issue.BuildIssue
*:com.intellij.build.issue.BuildIssueData
*:com.intellij.build.issue.BuildIssueQuickFix
- a:getId():java.lang.String
- runQuickFix(com.intellij.openapi.project.Project,com.intellij.openapi.actionSystem.DataContext):java.util.concurrent.CompletableFuture
*:com.intellij.codeInsight.codeVision.settings.CodeVisionSettingsDefaults
- *sf:Companion:com.intellij.codeInsight.codeVision.settings.CodeVisionSettingsDefaults$Companion
- getDefaultEnablementForProviderId():java.util.Map
- getDefaultPosition():com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
*f:com.intellij.codeInsight.codeVision.settings.CodeVisionSettingsDefaults$Companion
- f:getInstance():com.intellij.codeInsight.codeVision.settings.CodeVisionSettingsDefaults
*:com.intellij.codeInsight.hints.AbstractSettingsKey
- a:getFullId(com.intellij.lang.Language):java.lang.String
*f:com.intellij.codeInsight.hints.BlockConstrainedPresentation
- com.intellij.codeInsight.hints.ConstrainedPresentation
- <init>(com.intellij.codeInsight.hints.presentation.RootInlayPresentation,com.intellij.codeInsight.hints.BlockConstraints):V
- f:component1():com.intellij.codeInsight.hints.presentation.RootInlayPresentation
- f:component2():com.intellij.codeInsight.hints.BlockConstraints
- f:copy(com.intellij.codeInsight.hints.presentation.RootInlayPresentation,com.intellij.codeInsight.hints.BlockConstraints):com.intellij.codeInsight.hints.BlockConstrainedPresentation
- bs:copy$default(com.intellij.codeInsight.hints.BlockConstrainedPresentation,com.intellij.codeInsight.hints.presentation.RootInlayPresentation,com.intellij.codeInsight.hints.BlockConstraints,I,java.lang.Object):com.intellij.codeInsight.hints.BlockConstrainedPresentation
- equals(java.lang.Object):Z
- getConstraints():com.intellij.codeInsight.hints.BlockConstraints
- getPriority():I
- getRoot():com.intellij.codeInsight.hints.presentation.RootInlayPresentation
- hashCode():I
*f:com.intellij.codeInsight.hints.BlockConstraints
- <init>(Z,I,java.lang.Integer,java.lang.Integer):V
- b:<init>(Z,I,java.lang.Integer,java.lang.Integer,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- *f:getColumn():java.lang.Integer
- *f:getGroup():java.lang.Integer
- f:getPriority():I
- f:getRelatesToPrecedingText():Z
*:com.intellij.codeInsight.hints.ChangeListener
- a:settingsChanged():V
*:com.intellij.codeInsight.hints.ConstrainedPresentation
- a:getConstraints():java.lang.Object
- a:getPriority():I
- a:getRoot():com.intellij.codeInsight.hints.presentation.RootInlayPresentation
*:com.intellij.codeInsight.hints.ContentKey
*a:com.intellij.codeInsight.hints.HintInfo
- isOwnedByPsiElement(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):Z
*c:com.intellij.codeInsight.hints.HintInfo$MethodInfo
- com.intellij.codeInsight.hints.HintInfo
- <init>(java.lang.String,java.util.List):V
- <init>(java.lang.String,java.util.List,com.intellij.lang.Language):V
- getDisableHintText():java.lang.String
- f:getFullyQualifiedName():java.lang.String
- f:getLanguage():com.intellij.lang.Language
- getMethodName():java.lang.String
- f:getParamNames():java.util.List
*c:com.intellij.codeInsight.hints.HintInfo$OptionInfo
- com.intellij.codeInsight.hints.HintInfo
- <init>(com.intellij.codeInsight.hints.Option):V
- disable():V
- enable():V
- pf:getOption():com.intellij.codeInsight.hints.Option
- getOptionName():java.lang.String
- f:isOptionEnabled():Z
*c:com.intellij.codeInsight.hints.HintWidthAdjustment
- <init>(java.lang.String,java.lang.String,I):V
- getAdjustmentPosition():I
- getEditorTextToMatch():java.lang.String
- getHintTextToMatch():java.lang.String
*f:com.intellij.codeInsight.hints.HorizontalConstrainedPresentation
- com.intellij.codeInsight.hints.ConstrainedPresentation
- <init>(com.intellij.codeInsight.hints.presentation.RootInlayPresentation,com.intellij.codeInsight.hints.HorizontalConstraints):V
- f:component1():com.intellij.codeInsight.hints.presentation.RootInlayPresentation
- f:component2():com.intellij.codeInsight.hints.HorizontalConstraints
- f:copy(com.intellij.codeInsight.hints.presentation.RootInlayPresentation,com.intellij.codeInsight.hints.HorizontalConstraints):com.intellij.codeInsight.hints.HorizontalConstrainedPresentation
- bs:copy$default(com.intellij.codeInsight.hints.HorizontalConstrainedPresentation,com.intellij.codeInsight.hints.presentation.RootInlayPresentation,com.intellij.codeInsight.hints.HorizontalConstraints,I,java.lang.Object):com.intellij.codeInsight.hints.HorizontalConstrainedPresentation
- equals(java.lang.Object):Z
- getConstraints():com.intellij.codeInsight.hints.HorizontalConstraints
- getPriority():I
- getRoot():com.intellij.codeInsight.hints.presentation.RootInlayPresentation
- hashCode():I
*f:com.intellij.codeInsight.hints.HorizontalConstraints
- <init>(I,Z,Z):V
- b:<init>(I,Z,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getPlacedAtTheEndOfLine():Z
- f:getPriority():I
- f:getRelatesToPrecedingText():Z
*:com.intellij.codeInsight.hints.ImmediateConfigurable
- a:createComponent(com.intellij.codeInsight.hints.ChangeListener):javax.swing.JComponent
- getCases():java.util.List
- getMainCheckboxText():java.lang.String
- reset():V
*f:com.intellij.codeInsight.hints.ImmediateConfigurable$Case
- <init>(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.lang.String,java.lang.String,kotlin.reflect.KMutableProperty0,java.lang.String):V
- b:<init>(java.lang.String,java.lang.String,kotlin.reflect.KMutableProperty0,java.lang.String,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getExtendedDescription():java.lang.String
- f:getId():java.lang.String
- f:getName():java.lang.String
- f:getValue():Z
- f:setValue(Z):V
*e:com.intellij.codeInsight.hints.InlayGroup
- java.lang.Enum
- sf:ANNOTATIONS_GROUP:com.intellij.codeInsight.hints.InlayGroup
- sf:CODE_AUTHOR_GROUP:com.intellij.codeInsight.hints.InlayGroup
- sf:CODE_VISION_GROUP:com.intellij.codeInsight.hints.InlayGroup
- sf:CODE_VISION_GROUP_NEW:com.intellij.codeInsight.hints.InlayGroup
- sf:LAMBDAS_GROUP:com.intellij.codeInsight.hints.InlayGroup
- sf:METHOD_CHAINS_GROUP:com.intellij.codeInsight.hints.InlayGroup
- sf:OTHER_GROUP:com.intellij.codeInsight.hints.InlayGroup
- sf:PARAMETERS_GROUP:com.intellij.codeInsight.hints.InlayGroup
- sf:TYPES_GROUP:com.intellij.codeInsight.hints.InlayGroup
- sf:URL_PATH_GROUP:com.intellij.codeInsight.hints.InlayGroup
- sf:VALUES_GROUP:com.intellij.codeInsight.hints.InlayGroup
- f:getDescription():java.lang.String
- s:getEntries():kotlin.enums.EnumEntries
- f:getKey():java.lang.String
- f:title():java.lang.String
- s:valueOf(java.lang.String):com.intellij.codeInsight.hints.InlayGroup
- s:values():com.intellij.codeInsight.hints.InlayGroup[]
*:com.intellij.codeInsight.hints.InlayHintsCollector
- a:collect(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.InlayHintsSink):Z
*:com.intellij.codeInsight.hints.InlayHintsProvider
- a:createConfigurable(java.lang.Object):com.intellij.codeInsight.hints.ImmediateConfigurable
- createFile(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.Document):com.intellij.psi.PsiFile
- a:createSettings():java.lang.Object
- getCaseDescription(com.intellij.codeInsight.hints.ImmediateConfigurable$Case):java.lang.String
- a:getCollectorFor(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.Object,com.intellij.codeInsight.hints.InlayHintsSink):com.intellij.codeInsight.hints.InlayHintsCollector
- getDescription():java.lang.String
- getGroup():com.intellij.codeInsight.hints.InlayGroup
- a:getKey():com.intellij.codeInsight.hints.SettingsKey
- a:getName():java.lang.String
- *:getPlaceholdersCollectorFor(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.Object,com.intellij.codeInsight.hints.InlayHintsSink):com.intellij.codeInsight.hints.InlayHintsCollector
- a:getPreviewText():java.lang.String
- getProperty(java.lang.String):java.lang.String
- getSettingsLanguage(com.intellij.lang.Language):com.intellij.lang.Language
- isLanguageSupported(com.intellij.lang.Language):Z
- isVisibleInSettings():Z
- preparePreview(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,java.lang.Object):V
*f:com.intellij.codeInsight.hints.InlayHintsProvider$DefaultImpls
- s:createFile(com.intellij.codeInsight.hints.InlayHintsProvider,com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.Document):com.intellij.psi.PsiFile
- s:getCaseDescription(com.intellij.codeInsight.hints.InlayHintsProvider,com.intellij.codeInsight.hints.ImmediateConfigurable$Case):java.lang.String
- s:getDescription(com.intellij.codeInsight.hints.InlayHintsProvider):java.lang.String
- s:getGroup(com.intellij.codeInsight.hints.InlayHintsProvider):com.intellij.codeInsight.hints.InlayGroup
- *s:getPlaceholdersCollectorFor(com.intellij.codeInsight.hints.InlayHintsProvider,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,java.lang.Object,com.intellij.codeInsight.hints.InlayHintsSink):com.intellij.codeInsight.hints.InlayHintsCollector
- s:getProperty(com.intellij.codeInsight.hints.InlayHintsProvider,java.lang.String):java.lang.String
- s:getSettingsLanguage(com.intellij.codeInsight.hints.InlayHintsProvider,com.intellij.lang.Language):com.intellij.lang.Language
- s:isLanguageSupported(com.intellij.codeInsight.hints.InlayHintsProvider,com.intellij.lang.Language):Z
- s:isVisibleInSettings(com.intellij.codeInsight.hints.InlayHintsProvider):Z
- s:preparePreview(com.intellij.codeInsight.hints.InlayHintsProvider,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,java.lang.Object):V
*f:com.intellij.codeInsight.hints.InlayHintsProviderExtension
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.codeInsight.hints.InlayHintsProviderExtension
- f:findProviders():java.util.List
- f:getInlayProviderName():com.intellij.openapi.extensions.ExtensionPointName
*f:com.intellij.codeInsight.hints.InlayHintsProviderExtensionBean
- com.intellij.openapi.extensions.CustomLoadingExtensionPointBean
- com.intellij.util.KeyedLazyInstance
- <init>():V
- f:getImplementationClass():java.lang.String
- getKey():java.lang.String
- f:getLanguage():java.lang.String
- f:getSettingsKeyId():java.lang.String
- f:isEnabledByDefault():Z
- f:setEnabledByDefault(Z):V
- f:setImplementationClass(java.lang.String):V
- f:setLanguage(java.lang.String):V
- f:setSettingsKeyId(java.lang.String):V
*:com.intellij.codeInsight.hints.InlayHintsProviderFactory
- com.intellij.openapi.project.PossiblyDumbAware
- *sf:Companion:com.intellij.codeInsight.hints.InlayHintsProviderFactory$Companion
- s:getEP():com.intellij.openapi.extensions.ExtensionPointName
- getLanguages():java.lang.Iterable
- getProvidersInfo():java.util.List
- getProvidersInfo(com.intellij.openapi.project.Project):java.util.List
- getProvidersInfoForLanguage(com.intellij.lang.Language):java.util.List
*f:com.intellij.codeInsight.hints.InlayHintsProviderFactory$Companion
- f:getEP():com.intellij.openapi.extensions.ExtensionPointName
*f:com.intellij.codeInsight.hints.InlayHintsSettings
- com.intellij.openapi.components.PersistentStateComponent
- *sf:Companion:com.intellij.codeInsight.hints.InlayHintsSettings$Companion
- sf:INLAY_SETTINGS_CHANGED:com.intellij.util.messages.Topic
- <init>():V
- f:changeHintTypeStatus(com.intellij.codeInsight.hints.SettingsKey,com.intellij.lang.Language,Z):V
- f:findSettings(com.intellij.codeInsight.hints.SettingsKey,com.intellij.lang.Language,kotlin.jvm.functions.Function0):java.lang.Object
- f:getLastViewedProviderId():java.lang.String
- getState():com.intellij.codeInsight.hints.InlayHintsSettings$State
- f:hintsEnabled(com.intellij.codeInsight.hints.SettingsKey,com.intellij.lang.Language):Z
- f:hintsEnabled(com.intellij.lang.Language):Z
- f:hintsEnabledGlobally():Z
- f:hintsShouldBeShown(com.intellij.codeInsight.hints.SettingsKey,com.intellij.lang.Language):Z
- f:hintsShouldBeShown(com.intellij.lang.Language):Z
- sf:instance():com.intellij.codeInsight.hints.InlayHintsSettings
- loadState(com.intellij.codeInsight.hints.InlayHintsSettings$State):V
- f:saveLastViewedProviderId(java.lang.String):V
- f:setEnabledGlobally(Z):V
- f:setHintsEnabledForLanguage(com.intellij.lang.Language,Z):V
- f:storeSettings(com.intellij.codeInsight.hints.SettingsKey,com.intellij.lang.Language,java.lang.Object):V
*f:com.intellij.codeInsight.hints.InlayHintsSettings$Companion
- f:instance():com.intellij.codeInsight.hints.InlayHintsSettings
*:com.intellij.codeInsight.hints.InlayHintsSettings$SettingsListener
- globalEnabledStatusChanged(Z):V
- languageStatusChanged():V
- settingsChanged():V
*f:com.intellij.codeInsight.hints.InlayHintsSettings$State
- <init>():V
- f:getDisabledHintProviderIds():java.util.TreeSet
- f:getDisabledLanguages():java.util.TreeSet
- f:getEnabledHintProviderIds():java.util.TreeSet
- f:getLastViewedProviderKeyId():java.lang.String
- f:getSettingsMapElement():org.jdom.Element
- f:isEnabled():Z
- f:setDisabledHintProviderIds(java.util.TreeSet):V
- f:setDisabledLanguages(java.util.TreeSet):V
- f:setEnabled(Z):V
- f:setEnabledHintProviderIds(java.util.TreeSet):V
- f:setLastViewedProviderKeyId(java.lang.String):V
- f:setSettingsMapElement(org.jdom.Element):V
*:com.intellij.codeInsight.hints.InlayHintsSink
- *a:addBlockElement(I,Z,com.intellij.codeInsight.hints.presentation.RootInlayPresentation,com.intellij.codeInsight.hints.BlockConstraints):V
- a:addBlockElement(I,Z,Z,I,com.intellij.codeInsight.hints.presentation.InlayPresentation):V
- *a:addInlineElement(I,com.intellij.codeInsight.hints.presentation.RootInlayPresentation,com.intellij.codeInsight.hints.HorizontalConstraints):V
- addInlineElement(I,Z,com.intellij.codeInsight.hints.presentation.InlayPresentation):V
- a:addInlineElement(I,Z,com.intellij.codeInsight.hints.presentation.InlayPresentation,Z):V
*:com.intellij.codeInsight.hints.InlayHintsSwitch
- *sf:Companion:com.intellij.codeInsight.hints.InlayHintsSwitch$Companion
- a:isEnabled(com.intellij.openapi.project.Project):Z
- a:setEnabled(com.intellij.openapi.project.Project,Z):V
*f:com.intellij.codeInsight.hints.InlayHintsSwitch$Companion
- f:isEnabled(com.intellij.openapi.project.Project):Z
- f:setEnabled(com.intellij.openapi.project.Project,Z):V
*f:com.intellij.codeInsight.hints.InlayInfo
- <init>(java.lang.String,I):V
- <init>(java.lang.String,I,Z):V
- <init>(java.lang.String,I,Z,Z,Z):V
- <init>(java.lang.String,I,Z,Z,Z,com.intellij.codeInsight.hints.HintWidthAdjustment):V
- equals(java.lang.Object):Z
- f:getOffset():I
- f:getRelatesToPrecedingText():Z
- f:getText():java.lang.String
- f:getWidthAdjustment():com.intellij.codeInsight.hints.HintWidthAdjustment
- hashCode():I
- f:isFilterByExcludeList():Z
- f:isShowOnlyIfExistedBefore():Z
*f:com.intellij.codeInsight.hints.InlayKey
- com.intellij.codeInsight.hints.AbstractSettingsKey
- com.intellij.codeInsight.hints.ContentKey
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.codeInsight.hints.InlayKey
- bs:copy$default(com.intellij.codeInsight.hints.InlayKey,java.lang.String,I,java.lang.Object):com.intellij.codeInsight.hints.InlayKey
- equals(java.lang.Object):Z
- getFullId(com.intellij.lang.Language):java.lang.String
- f:getId():java.lang.String
- hashCode():I
*f:com.intellij.codeInsight.hints.InlayParameterHintsExtension
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.codeInsight.hints.InlayParameterHintsExtension
*:com.intellij.codeInsight.hints.InlayParameterHintsProvider
- canShowHintsWhenDisabled():Z
- createTraversal(com.intellij.psi.PsiElement):com.intellij.psi.SyntaxTraverser
- getBlackListDependencyLanguage():com.intellij.lang.Language
- getBlacklistExplanationHTML():java.lang.String
- a:getDefaultBlackList():java.util.Set
- getDescription():java.lang.String
- getHintInfo(com.intellij.psi.PsiElement):com.intellij.codeInsight.hints.HintInfo
- getHintInfo(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):com.intellij.codeInsight.hints.HintInfo
- getInlayPresentation(java.lang.String):java.lang.String
- getMainCheckboxText():java.lang.String
- getParameterHints(com.intellij.psi.PsiElement):java.util.List
- getParameterHints(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):java.util.List
- getProperty(java.lang.String):java.lang.String
- getSettingsPreview():java.lang.String
- getSupportedOptions():java.util.List
- isBlackListSupported():Z
- isExhaustive():Z
*f:com.intellij.codeInsight.hints.InlayParameterHintsProviderKt
- sf:getPARAMETER_NAME_HINTS_EP():com.intellij.openapi.extensions.ExtensionPointName
*:com.intellij.codeInsight.hints.InlayPresentationFactory
- a:container(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$Padding,com.intellij.codeInsight.hints.InlayPresentationFactory$RoundedCorners,java.awt.Color,F):com.intellij.codeInsight.hints.presentation.InlayPresentation
- bs:container$default(com.intellij.codeInsight.hints.InlayPresentationFactory,com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$Padding,com.intellij.codeInsight.hints.InlayPresentationFactory$RoundedCorners,java.awt.Color,F,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.InlayPresentation
- a:icon(javax.swing.Icon):com.intellij.codeInsight.hints.presentation.InlayPresentation
- a:mouseHandling(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$ClickListener,com.intellij.codeInsight.hints.InlayPresentationFactory$HoverListener):com.intellij.codeInsight.hints.presentation.InlayPresentation
- a:smallScaledIcon(javax.swing.Icon):com.intellij.codeInsight.hints.presentation.InlayPresentation
- a:smallText(java.lang.String):com.intellij.codeInsight.hints.presentation.InlayPresentation
- a:text(java.lang.String):com.intellij.codeInsight.hints.presentation.InlayPresentation
*:com.intellij.codeInsight.hints.InlayPresentationFactory$ClickListener
- a:onClick(java.awt.event.MouseEvent,java.awt.Point):V
*f:com.intellij.codeInsight.hints.InlayPresentationFactory$DefaultImpls
- bs:container$default(com.intellij.codeInsight.hints.InlayPresentationFactory,com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.codeInsight.hints.InlayPresentationFactory$Padding,com.intellij.codeInsight.hints.InlayPresentationFactory$RoundedCorners,java.awt.Color,F,I,java.lang.Object):com.intellij.codeInsight.hints.presentation.InlayPresentation
*:com.intellij.codeInsight.hints.InlayPresentationFactory$HoverListener
- a:onHover(java.awt.event.MouseEvent,java.awt.Point):V
- a:onHoverFinished():V
*f:com.intellij.codeInsight.hints.InlayPresentationFactory$Padding
- <init>(I,I,I,I):V
- f:component1():I
- f:component2():I
- f:component3():I
- f:component4():I
- f:copy(I,I,I,I):com.intellij.codeInsight.hints.InlayPresentationFactory$Padding
- bs:copy$default(com.intellij.codeInsight.hints.InlayPresentationFactory$Padding,I,I,I,I,I,java.lang.Object):com.intellij.codeInsight.hints.InlayPresentationFactory$Padding
- equals(java.lang.Object):Z
- f:getBottom():I
- f:getLeft():I
- f:getRight():I
- f:getTop():I
- hashCode():I
*f:com.intellij.codeInsight.hints.InlayPresentationFactory$RoundedCorners
- <init>(I,I):V
- f:component1():I
- f:component2():I
- f:copy(I,I):com.intellij.codeInsight.hints.InlayPresentationFactory$RoundedCorners
- bs:copy$default(com.intellij.codeInsight.hints.InlayPresentationFactory$RoundedCorners,I,I,I,java.lang.Object):com.intellij.codeInsight.hints.InlayPresentationFactory$RoundedCorners
- equals(java.lang.Object):Z
- f:getArcHeight():I
- f:getArcWidth():I
- hashCode():I
*f:com.intellij.codeInsight.hints.NoSettings
- <init>():V
- equals(java.lang.Object):Z
- hashCode():I
*f:com.intellij.codeInsight.hints.Option
- <init>(java.lang.String,java.lang.String,Z):V
- <init>(java.lang.String,java.util.function.Supplier,Z):V
- f:component1():java.lang.String
- f:component3():Z
- f:copy(java.lang.String,java.util.function.Supplier,Z):com.intellij.codeInsight.hints.Option
- bs:copy$default(com.intellij.codeInsight.hints.Option,java.lang.String,java.util.function.Supplier,Z,I,java.lang.Object):com.intellij.codeInsight.hints.Option
- equals(java.lang.Object):Z
- f:get():Z
- f:getDefaultValue():Z
- f:getExtendedDescriptionSupplier():java.util.function.Supplier
- f:getId():java.lang.String
- f:getName():java.lang.String
- hashCode():I
- f:isEnabled():Z
- f:set(Z):V
- f:setExtendedDescriptionSupplier(java.util.function.Supplier):V
*:com.intellij.codeInsight.hints.ParameterNameHintsSuppressor
- sf:All:com.intellij.codeInsight.hints.ParameterNameHintsSuppressor$All
- a:isSuppressedFor(com.intellij.psi.PsiFile,com.intellij.codeInsight.hints.InlayInfo):Z
*f:com.intellij.codeInsight.hints.ParameterNameHintsSuppressor$All
- f:isSuppressedFor(com.intellij.psi.PsiFile,com.intellij.codeInsight.hints.InlayInfo):Z
*:com.intellij.codeInsight.hints.PresentationContainerRenderer
- com.intellij.codeInsight.hints.presentation.InputHandler
- com.intellij.openapi.editor.EditorCustomElementRenderer
- a:addOrUpdate(java.util.List,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.InlayPresentationFactory):V
- a:isAcceptablePlacement(com.intellij.openapi.editor.Inlay$Placement):Z
- a:setListener(com.intellij.codeInsight.hints.presentation.PresentationListener):V
*f:com.intellij.codeInsight.hints.ProviderInfo
- <init>(com.intellij.lang.Language,com.intellij.codeInsight.hints.InlayHintsProvider):V
- f:getLanguage():com.intellij.lang.Language
- f:getProvider():com.intellij.codeInsight.hints.InlayHintsProvider
*f:com.intellij.codeInsight.hints.SettingsKey
- *sf:Companion:com.intellij.codeInsight.hints.SettingsKey$Companion
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.codeInsight.hints.SettingsKey
- bs:copy$default(com.intellij.codeInsight.hints.SettingsKey,java.lang.String,I,java.lang.Object):com.intellij.codeInsight.hints.SettingsKey
- equals(java.lang.Object):Z
- f:getFullId(com.intellij.lang.Language):java.lang.String
- f:getId():java.lang.String
- hashCode():I
*f:com.intellij.codeInsight.hints.SettingsKey$Companion
- f:getFullId(java.lang.String,java.lang.String):java.lang.String
*f:com.intellij.codeInsight.hints.declarative.AboveLineIndentedPosition
- com.intellij.codeInsight.hints.declarative.InlayPosition
- <init>(I,I,I):V
- b:<init>(I,I,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getOffset():I
- f:getPriority():I
- f:getVerticalPriority():I
*:com.intellij.codeInsight.hints.presentation.InlayPresentation
- com.intellij.codeInsight.hints.presentation.InputHandler
- a:addListener(com.intellij.codeInsight.hints.presentation.PresentationListener):V
- a:fireContentChanged(java.awt.Rectangle):V
- a:fireSizeChanged(java.awt.Dimension,java.awt.Dimension):V
- a:getHeight():I
- a:getWidth():I
- a:paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
- a:removeListener(com.intellij.codeInsight.hints.presentation.PresentationListener):V
- a:toString():java.lang.String
- updateState(com.intellij.codeInsight.hints.presentation.InlayPresentation):Z
*a:com.intellij.codeInspection.ui.CustomComponentExtensionWithSwingRenderer
- com.intellij.codeInspection.options.CustomComponentExtension
- p:<init>(java.lang.String):V
- f:render(com.intellij.codeInspection.options.OptCustom,com.intellij.openapi.project.Project):javax.swing.JComponent
- a:render(java.lang.Object,com.intellij.openapi.project.Project):javax.swing.JComponent
*:com.intellij.execution.dashboard.RunDashboardChecker
- a:countUniqueConfigurations(com.intellij.openapi.project.Project):I
- a:getTypeId():java.lang.String
com.intellij.ide.bookmark.BookmarksListProvider
- *:getDescriptor(com.intellij.ide.util.treeView.AbstractTreeNode):com.intellij.openapi.fileEditor.OpenFileDescriptor
com.intellij.ide.bookmark.BookmarksManager
- *sf:ALLOWED:com.intellij.openapi.util.Key
*e:com.intellij.ide.projectView.NodeSortOrder
- java.lang.Enum
- sf:FOLDER:com.intellij.ide.projectView.NodeSortOrder
- sf:LIBRARY_ROOT:com.intellij.ide.projectView.NodeSortOrder
- sf:MANUAL:com.intellij.ide.projectView.NodeSortOrder
- sf:MODULE_GROUP:com.intellij.ide.projectView.NodeSortOrder
- sf:MODULE_ROOT:com.intellij.ide.projectView.NodeSortOrder
- sf:PACKAGE:com.intellij.ide.projectView.NodeSortOrder
- sf:PROJECT_ROOT:com.intellij.ide.projectView.NodeSortOrder
- sf:SCRATCH_ROOT:com.intellij.ide.projectView.NodeSortOrder
- sf:UNSPECIFIED:com.intellij.ide.projectView.NodeSortOrder
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ide.projectView.NodeSortOrder
- s:values():com.intellij.ide.projectView.NodeSortOrder[]
*a:com.intellij.ide.projectView.NodeSortSettings
- *sf:Companion:com.intellij.ide.projectView.NodeSortSettings$Companion
- a:getSortKey():com.intellij.ide.projectView.NodeSortKey
- a:isFoldersAlwaysOnTop():Z
- a:isManualOrder():Z
- a:isSortByType():Z
*f:com.intellij.ide.projectView.NodeSortSettings$Companion
*a:com.intellij.ide.tags.TagManager
- <init>():V
- s:getElementTags(com.intellij.psi.PsiElement):java.util.Collection
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.tags.TagManager
- s:getTagIconAndText(com.intellij.psi.PsiElement):com.intellij.ide.tags.TagManager$TagIconAndText
- a:getTags(com.intellij.psi.PsiElement):java.util.Collection
- s:isEnabled():Z
*f:com.intellij.ide.tags.TagManager$Tag
- f:color:java.awt.Color
- f:icon:javax.swing.Icon
- f:text:java.lang.String
- <init>(java.lang.String,java.awt.Color,javax.swing.Icon):V
- equals(java.lang.Object):Z
- hashCode():I
*f:com.intellij.ide.tags.TagManager$TagIconAndText
- java.lang.Record
- sf:EMPTY:com.intellij.ide.tags.TagManager$TagIconAndText
- <init>(javax.swing.Icon,com.intellij.ui.ColoredText):V
- coloredText():com.intellij.ui.ColoredText
- f:equals(java.lang.Object):Z
- f:hashCode():I
- icon():javax.swing.Icon
*:com.intellij.ide.util.projectWizard.ModuleNameGenerator
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getUi(java.lang.String,java.util.function.Consumer):javax.swing.JComponent
*a:com.intellij.lang.surroundWith.ModCommandSurrounder
- com.intellij.lang.surroundWith.Surrounder
- <init>():V
- f:startInWriteAction():Z
- a:surroundElements(com.intellij.modcommand.ActionContext,com.intellij.psi.PsiElement[]):com.intellij.modcommand.ModCommand
- f:surroundElements(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement[]):com.intellij.openapi.util.TextRange
*:com.intellij.openapi.roots.SkipAddingToWatchedRoots
*a:com.intellij.platform.lang.lsWidget.LanguageServiceWidgetItem
- <init>():V
- f:createWidgetAction():com.intellij.openapi.actionSystem.AnAction
- p:createWidgetInlineActions():java.util.List
- pa:createWidgetMainAction():com.intellij.openapi.actionSystem.AnAction
- a:getStatusBarIcon():javax.swing.Icon
- a:getStatusBarTooltip():java.lang.String
- a:getWidgetActionLocation():com.intellij.platform.lang.lsWidget.LanguageServicePopupSection
- isError():Z
*a:com.intellij.platform.lang.lsWidget.LanguageServiceWidgetItemsProvider
- *sf:Companion:com.intellij.platform.lang.lsWidget.LanguageServiceWidgetItemsProvider$Companion
- <init>():V
- a:createWidgetItems(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.util.List
- registerWidgetUpdaters(com.intellij.openapi.project.Project,com.intellij.openapi.Disposable,kotlin.jvm.functions.Function0):V
*f:com.intellij.platform.lang.lsWidget.LanguageServiceWidgetItemsProvider$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
a:com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider
- com.intellij.psi.codeStyle.CodeStyleSettingsProvider
- *:getAccessor(java.lang.Object,java.lang.reflect.Field):com.intellij.application.options.codeStyle.properties.CodeStyleFieldAccessor
- *f:getPropertyMapper(com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.application.options.codeStyle.properties.AbstractCodeStylePropertyMapper
*f:com.intellij.psi.util.PartiallyKnownString
- *sf:Companion:com.intellij.psi.util.PartiallyKnownString$Companion
- <init>(com.intellij.psi.util.StringEntry):V
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):V
- <init>(java.util.List):V
- equals(java.lang.Object):Z
- f:findIndexOfInKnown(java.lang.String):I
- f:findIndexOfInKnown(java.lang.String,I):I
- bs:findIndexOfInKnown$default(com.intellij.psi.util.PartiallyKnownString,java.lang.String,I,I,java.lang.Object):I
- f:getConcatenationOfKnown():java.lang.String
- f:getRangeInHost(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- f:getRangeOfTheHostContent(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- f:getSegments():java.util.List
- f:getValueIfKnown():java.lang.String
- hashCode():I
- f:mapRangeToHostRange(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):com.intellij.openapi.util.TextRange
- f:split(java.lang.String,kotlin.jvm.functions.Function2):java.util.List
- bs:split$default(com.intellij.psi.util.PartiallyKnownString,java.lang.String,kotlin.jvm.functions.Function2,I,java.lang.Object):java.util.List
- f:splitAtInKnown(I):kotlin.Pair
*f:com.intellij.psi.util.PartiallyKnownString$Companion
- f:getEmpty():com.intellij.psi.util.PartiallyKnownString
f:com.intellij.psi.util.PartiallyKnownStringKt
- *sf:splitToTextRanges(java.lang.CharSequence,java.lang.String,kotlin.jvm.functions.Function2):kotlin.sequences.Sequence
- *bs:splitToTextRanges$default(java.lang.CharSequence,java.lang.String,kotlin.jvm.functions.Function2,I,java.lang.Object):kotlin.sequences.Sequence
*:com.intellij.psi.util.SplitEscaper
- a:filter(I,I):Z
*f:com.intellij.psi.util.SplitEscaper$AcceptAll
- com.intellij.psi.util.SplitEscaper
- sf:INSTANCE:com.intellij.psi.util.SplitEscaper$AcceptAll
- filter(I,I):Z
*a:com.intellij.psi.util.StringEntry
- f:getHost():com.intellij.psi.PsiElement
- a:getRange():com.intellij.openapi.util.TextRange
- f:getRangeAlignedToHost():kotlin.Pair
- a:getSourcePsi():com.intellij.psi.PsiElement
*f:com.intellij.psi.util.StringEntry$Known
- com.intellij.psi.util.StringEntry
- <init>(java.lang.String,com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):V
- equals(java.lang.Object):Z
- getRange():com.intellij.openapi.util.TextRange
- getSourcePsi():com.intellij.psi.PsiElement
- f:getValue():java.lang.String
- hashCode():I
*f:com.intellij.psi.util.StringEntry$Unknown
- com.intellij.psi.util.StringEntry
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.Iterable):V
- b:<init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.Iterable,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- equals(java.lang.Object):Z
- getRange():com.intellij.openapi.util.TextRange
- getSourcePsi():com.intellij.psi.PsiElement
- hashCode():I
com.intellij.refactoring.RenameRefactoring
- com.intellij.refactoring.Refactoring
- *a:hasNonCodeUsages():Z
- *a:respectAllAutomaticRenames():V
- *a:respectEnabledAutomaticRenames():V
c:com.intellij.task.ProjectTaskContext
- com.intellij.openapi.util.UserDataHolderBase
- *:addDirtyOutputPathsProvider(java.util.function.Supplier):V
- *:enableCollectionOfGeneratedFiles():V
- *:fileGenerated(java.lang.String,java.lang.String):V
- *:getGeneratedFilesRelativePaths(java.lang.String):java.util.Collection
- *:getGeneratedFilesRoots():java.util.Collection
- *:isCollectionOfGeneratedFilesEnabled():Z
Fa:com.intellij.task.ProjectTaskManager
- *a:createProjectTaskExecutionEnvironment(com.intellij.task.ProjectTask):com.intellij.execution.runners.ExecutionEnvironment
com.intellij.task.ProjectTaskManager$Result
- *a:anyTaskMatches(java.util.function.BiPredicate):Z
a:com.intellij.task.ProjectTaskRunner
- *:createExecutionEnvironment(com.intellij.openapi.project.Project,com.intellij.task.ProjectTask[]):com.intellij.execution.runners.ExecutionEnvironment
- *:isFileGeneratedEventsSupported():Z
*:com.intellij.task.RunConfigurationTaskState
- *sf:Companion:com.intellij.task.RunConfigurationTaskState$Companion
- createCustomActions(com.intellij.execution.process.ProcessHandler,com.intellij.execution.ui.ExecutionConsole,com.intellij.execution.Executor):java.util.List
- s:getKEY():com.intellij.openapi.util.Key
- a:handleCreatedTargetEnvironment(com.intellij.execution.target.TargetEnvironment,com.intellij.execution.target.TargetProgressIndicator):java.lang.String
- a:prepareTargetEnvironmentRequest(com.intellij.execution.target.TargetEnvironmentRequest,com.intellij.execution.target.TargetProgressIndicator):V
- a:processExecutionResult(com.intellij.execution.process.ProcessHandler,com.intellij.execution.ui.ExecutionConsole):V
*f:com.intellij.task.RunConfigurationTaskState$Companion
- f:getKEY():com.intellij.openapi.util.Key
*e:com.intellij.task.TaskRunnerResults
- java.lang.Enum
- com.intellij.task.ProjectTaskRunner$Result
- sf:ABORTED:com.intellij.task.TaskRunnerResults
- sf:FAILURE:com.intellij.task.TaskRunnerResults
- sf:SUCCESS:com.intellij.task.TaskRunnerResults
- hasErrors():Z
- isAborted():Z
- s:valueOf(java.lang.String):com.intellij.task.TaskRunnerResults
- s:values():com.intellij.task.TaskRunnerResults[]
com.intellij.testIntegration.TestFinder
- *:navigateToTestImmediately(com.intellij.psi.PsiElement):Z
