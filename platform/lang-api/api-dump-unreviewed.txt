f:com.intellij.analysis.AnalysisScopeUtil
- sf:KEY:com.intellij.openapi.actionSystem.DataKey
- <init>():V
c:com.intellij.application.options.ContinuationOption
- com.intellij.psi.codeStyle.CodeStyleConstraints
- <init>(java.lang.String,java.util.function.Function,java.util.function.BiConsumer,I):V
- addListener(com.intellij.ui.components.fields.valueEditors.ValueEditor$Listener):V
- addToEditor(com.intellij.application.options.IndentOptionsEditor):V
- apply(com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):V
- isModified(com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):Z
- reset(com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):V
- setDefaultValueToDisplay(I):V
- setEnabled(Z):V
- setSupported(Z):V
- setVisible(Z):V
c:com.intellij.application.options.IndentOptionsEditor
- com.intellij.ui.OptionGroup
- com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable
- <init>():V
- <init>(com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider):V
- p:addComponents():V
- p:addIndentField():V
- p:addTabOptions():V
- p:addTabSizeField():V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):V
- p:createIndentTextField(java.lang.String,I,I,I):com.intellij.ui.components.fields.IntegerField
- createPanel():javax.swing.JPanel
- p:getFieldValue(javax.swing.JTextField,I,I):I
- p:getUIIndent():I
- p:getUITabSize():I
- ps:isFieldModified(javax.swing.JCheckBox,Z):Z
- ps:isFieldModified(javax.swing.JTextField,I):Z
- isModified(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):Z
- pf:isUseTabsSelected():Z
- reset(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):V
- setEnabled(Z):V
- p:setVisible(Z):V
- showAllStandardOptions():V
- showStandardOptions(java.lang.String[]):V
c:com.intellij.application.options.SmartIndentOptionsEditor
- com.intellij.application.options.IndentOptionsEditor
- com.intellij.application.options.SmartIndentOptionsEditorBase
- <init>():V
- <init>(com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider):V
- p:addComponents():V
- p:addTabOptions():V
- apply(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):V
- s:getContinuationIndentLabel():java.lang.String
- isModified(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):Z
- reset(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):V
- setEnabled(Z):V
- p:setVisible(Z):V
- showStandardOptions(java.lang.String[]):V
- withArrayElementIndent():com.intellij.application.options.SmartIndentOptionsEditor
- withCallParameterIndent():com.intellij.application.options.SmartIndentOptionsEditor
- withChainedCallIndent():com.intellij.application.options.SmartIndentOptionsEditor
- withDeclarationParameterIndent():com.intellij.application.options.SmartIndentOptionsEditor
- withGenericTypeParameterIndent():com.intellij.application.options.SmartIndentOptionsEditor
com.intellij.application.options.SmartIndentOptionsEditorBase
f:com.intellij.application.options.codeStyle.arrangement.ArrangementConstants
- sf:ACTION_GROUP_GROUPING_RULES_CONTROL_TOOLBAR:java.lang.String
- sf:ACTION_GROUP_MATCHING_RULES_CONTEXT_MENU:java.lang.String
- sf:ACTION_GROUP_MATCHING_RULES_CONTROL_TOOLBAR:java.lang.String
- sf:ALIAS_RULE_CONTEXT_MENU:java.lang.String
- sf:ALIAS_RULE_CONTROL_PLACE:java.lang.String
- sf:ALIAS_RULE_CONTROL_TOOLBAR:java.lang.String
- sf:ALIAS_RULE_CONTROL_TOOLBAR_PLACE:java.lang.String
- sf:ANIMATION_STEPS_TIME_GAP_MILLIS:I
- sf:BORDER_ARC_SIZE:I
- sf:CALLOUT_BORDER_HEIGHT:I
- sf:GROUPING_RULES_CONTROL_TOOLBAR_PLACE:java.lang.String
- sf:HORIZONTAL_GAP:I
- sf:HORIZONTAL_PADDING:I
- sf:LOG_RULE_MODIFICATION:Z
- sf:MATCHING_RULES_CONTROL_PLACE:java.lang.String
- sf:MATCHING_RULES_CONTROL_TOOLBAR_PLACE:java.lang.String
- sf:TEXT_UPDATE_DELAY_MILLIS:I
- sf:VERTICAL_GAP:I
- sf:VERTICAL_PADDING:I
com.intellij.application.options.codeStyle.arrangement.color.ArrangementColorsProvider
- a:getBorderColor(Z):java.awt.Color
- a:getTextAttributes(com.intellij.psi.codeStyle.arrangement.std.ArrangementSettingsToken,Z):com.intellij.openapi.editor.markup.TextAttributes
a:com.intellij.application.options.codeStyle.properties.AbstractCodeStylePropertyMapper
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings):V
- p:addAdditionalAccessors(java.util.Map):V
- enumProperties():java.util.List
- p:getAccessor(java.lang.Object,java.lang.reflect.Field):com.intellij.application.options.codeStyle.properties.CodeStylePropertyAccessor
- getAccessor(java.lang.String):com.intellij.application.options.codeStyle.properties.CodeStylePropertyAccessor
- a:getLanguageDomainId():java.lang.String
- a:getPropertyDescription(java.lang.String):java.lang.String
- p:getRootSettings():com.intellij.psi.codeStyle.CodeStyleSettings
- pa:getSupportedFields():java.util.List
- p:useDeclaredFields():Z
pf:com.intellij.application.options.codeStyle.properties.AbstractCodeStylePropertyMapper$CodeStyleObjectDescriptor
- <init>(java.lang.Object,java.util.Set):V
c:com.intellij.application.options.codeStyle.properties.BooleanAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleFieldAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleChoiceList
- <init>(java.lang.Object,java.lang.reflect.Field):V
- p:fromExternal(java.lang.Boolean):java.lang.Boolean
- getChoices():java.util.List
- p:parseString(java.lang.String):java.lang.Boolean
- p:toExternal(java.lang.Boolean):java.lang.Boolean
- p:valueToString(java.lang.Boolean):java.lang.String
com.intellij.application.options.codeStyle.properties.CodeStyleChoiceList
- a:getChoices():java.util.List
f:com.intellij.application.options.codeStyle.properties.CodeStylePropertiesUtil
- s:collectMappers(com.intellij.psi.codeStyle.CodeStyleSettings,java.util.function.Consumer):V
- s:getValueList(java.lang.String):java.util.List
- s:isAccessorAllowingEmptyList(com.intellij.application.options.codeStyle.properties.CodeStylePropertyAccessor):Z
- s:toCommaSeparatedString(java.util.List):java.lang.String
a:com.intellij.application.options.codeStyle.properties.CodeStylePropertyAccessor
- <init>():V
- a:get():java.lang.Object
- f:getAsString():java.lang.String
- a:getPropertyName():java.lang.String
- isIgnorable():Z
- pa:parseString(java.lang.String):java.lang.Object
- a:set(java.lang.Object):Z
- f:setFromString(java.lang.String):Z
- pa:valueToString(java.lang.Object):java.lang.String
com.intellij.application.options.codeStyle.properties.CodeStyleValueList
- a:isEmptyListAllowed():Z
c:com.intellij.application.options.codeStyle.properties.CommaSeparatedValuesAccessor
- com.intellij.application.options.codeStyle.properties.ValueListPropertyAccessor
- <init>(java.lang.Object,java.lang.reflect.Field):V
- p:fromExternal(java.util.List):java.lang.String
- isEmptyListAllowed():Z
- p:toExternal(java.lang.String):java.util.List
- p:valueToString(java.util.List):java.lang.String
c:com.intellij.application.options.codeStyle.properties.EnumPropertyAccessor
- com.intellij.application.options.codeStyle.properties.ExternalStringAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleChoiceList
- <init>(java.lang.Object,java.lang.reflect.Field):V
- p:fromExternal(java.lang.String):java.lang.Enum
- getChoices():java.util.List
- p:toExternal(java.lang.Enum):java.lang.String
a:com.intellij.application.options.codeStyle.properties.ExternalStringAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleFieldAccessor
- <init>(java.lang.Object,java.lang.reflect.Field):V
- pa:fromExternal(java.lang.String):java.lang.Object
- p:parseString(java.lang.String):java.lang.String
- pa:toExternal(java.lang.Object):java.lang.String
- p:valueToString(java.lang.String):java.lang.String
c:com.intellij.application.options.codeStyle.properties.FormatterEnabledAccessor
- com.intellij.application.options.codeStyle.properties.CodeStylePropertyAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleChoiceList
- sf:PROPERTY_NAME:java.lang.String
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings):V
- get():java.lang.Boolean
- getChoices():java.util.List
- getPropertyName():java.lang.String
- p:parseString(java.lang.String):java.lang.Boolean
- set(java.lang.Boolean):Z
- p:valueToString(java.lang.Boolean):java.lang.String
f:com.intellij.application.options.codeStyle.properties.GeneralCodeStylePropertyMapper
- com.intellij.application.options.codeStyle.properties.AbstractCodeStylePropertyMapper
- sf:COMMON_DOMAIN_ID:java.lang.String
- <init>(com.intellij.psi.codeStyle.CodeStyleSettings):V
- getLanguageDomainId():java.lang.String
- getPropertyDescription(java.lang.String):java.lang.String
c:com.intellij.application.options.codeStyle.properties.IntegerAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleFieldAccessor
- <init>(java.lang.Object,java.lang.reflect.Field):V
- p:fromExternal(java.lang.Integer):java.lang.Integer
- p:isEmpty(java.lang.Integer):Z
- p:parseString(java.lang.String):java.lang.Integer
- p:toExternal(java.lang.Integer):java.lang.Integer
- p:valueToString(java.lang.Integer):java.lang.String
c:com.intellij.application.options.codeStyle.properties.MagicIntegerConstAccessor
- com.intellij.application.options.codeStyle.properties.ExternalStringAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleChoiceList
- <init>(java.lang.Object,java.lang.reflect.Field,I[],java.lang.String[]):V
- pf:fromExternal(java.lang.String):java.lang.Integer
- f:getChoices():java.util.List
- pf:toExternal(java.lang.Integer):java.lang.String
c:com.intellij.application.options.codeStyle.properties.OverrideLanguageIndentOptionsAccessor
- com.intellij.application.options.codeStyle.properties.CodeStylePropertyAccessor
- sf:OVERRIDE_LANGUAGE_INDENT_OPTIONS_PROPERTY_NAME:java.lang.String
- get():java.lang.Boolean
- getPropertyName():java.lang.String
- p:parseString(java.lang.String):java.lang.Boolean
- set(java.lang.Boolean):Z
- p:valueToString(java.lang.Boolean):java.lang.String
c:com.intellij.application.options.codeStyle.properties.StringAccessor
- com.intellij.application.options.codeStyle.properties.ExternalStringAccessor
- p:fromExternal(java.lang.String):java.lang.String
- p:isEmpty(java.lang.String):Z
- p:toExternal(java.lang.String):java.lang.String
a:com.intellij.application.options.codeStyle.properties.ValueListPropertyAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleFieldAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleValueList
- <init>(java.lang.Object,java.lang.reflect.Field):V
- pa:fromExternal(java.util.List):java.lang.Object
- p:parseString(java.lang.String):java.util.List
- pa:toExternal(java.lang.Object):java.util.List
c:com.intellij.application.options.codeStyle.properties.VisualGuidesAccessor
- com.intellij.application.options.codeStyle.properties.CodeStylePropertyAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleValueList
- sf:VISUAL_GUIDES_PROPERTY_NAME:java.lang.String
- get():java.util.List
- getPropertyName():java.lang.String
- isEmptyListAllowed():Z
- p:parseString(java.lang.String):java.util.List
- set(java.util.List):Z
- p:valueToString(java.util.List):java.lang.String
c:com.intellij.application.options.codeStyle.properties.WrapOnTypingAccessor
- com.intellij.application.options.codeStyle.properties.CodeStyleFieldAccessor
- p:fromExternal(java.lang.Boolean):java.lang.Integer
- p:isEmpty(java.lang.Integer):Z
- p:parseString(java.lang.String):java.lang.Boolean
- p:toExternal(java.lang.Integer):java.lang.Boolean
- p:valueToString(java.lang.Boolean):java.lang.String
com.intellij.build.BuildConsoleView
- com.intellij.build.BuildProgressListener
- com.intellij.openapi.ui.ComponentContainer
com.intellij.build.BuildDescriptor
- getGroupId():java.lang.Object
- a:getId():java.lang.Object
- a:getStartTime():J
- a:getTitle():java.lang.String
- a:getWorkingDir():java.lang.String
com.intellij.build.BuildProgressListener
- a:onEvent(java.lang.Object,com.intellij.build.events.BuildEvent):V
c:com.intellij.build.FilePosition
- <init>(java.io.File,I,I):V
- <init>(java.io.File,I,I,I,I):V
- equals(java.lang.Object):Z
- getEndColumn():I
- getEndLine():I
- getFile():java.io.File
- getStartColumn():I
- getStartLine():I
- hashCode():I
com.intellij.build.ViewManager
- a:isBuildContentView():Z
- a:isConsoleEnabledByDefault():Z
com.intellij.build.events.BuildEvent
- a:getDescription():java.lang.String
- a:getEventTime():J
- a:getHint():java.lang.String
- a:getId():java.lang.Object
- a:getMessage():java.lang.String
- a:getParentId():java.lang.Object
com.intellij.build.events.EventResult
com.intellij.build.events.Failure
- a:getCauses():java.util.List
- a:getDescription():java.lang.String
- getError():java.lang.Throwable
- a:getMessage():java.lang.String
- getNavigatable():com.intellij.pom.Navigatable
- getNotification():com.intellij.notification.Notification
com.intellij.build.events.FailureResult
- com.intellij.build.events.EventResult
- a:getFailures():java.util.List
com.intellij.build.events.FileMessageEvent
- com.intellij.build.events.MessageEvent
- a:getFilePosition():com.intellij.build.FilePosition
- a:getResult():com.intellij.build.events.FileMessageEventResult
com.intellij.build.events.FileMessageEventResult
- com.intellij.build.events.MessageEventResult
- a:getFilePosition():com.intellij.build.FilePosition
com.intellij.build.events.FinishBuildEvent
- com.intellij.build.events.FinishEvent
com.intellij.build.events.FinishEvent
- com.intellij.build.events.BuildEvent
- a:getResult():com.intellij.build.events.EventResult
com.intellij.build.events.MessageEvent
- com.intellij.build.events.BuildEvent
- a:getGroup():java.lang.String
- a:getKind():com.intellij.build.events.MessageEvent$Kind
- a:getNavigatable(com.intellij.openapi.project.Project):com.intellij.pom.Navigatable
- a:getResult():com.intellij.build.events.MessageEventResult
e:com.intellij.build.events.MessageEvent$Kind
- java.lang.Enum
- sf:ERROR:com.intellij.build.events.MessageEvent$Kind
- sf:INFO:com.intellij.build.events.MessageEvent$Kind
- sf:SIMPLE:com.intellij.build.events.MessageEvent$Kind
- sf:STATISTICS:com.intellij.build.events.MessageEvent$Kind
- sf:WARNING:com.intellij.build.events.MessageEvent$Kind
- s:valueOf(java.lang.String):com.intellij.build.events.MessageEvent$Kind
- s:values():com.intellij.build.events.MessageEvent$Kind[]
com.intellij.build.events.MessageEventResult
- com.intellij.build.events.EventResult
- getDetails():java.lang.String
- a:getKind():com.intellij.build.events.MessageEvent$Kind
com.intellij.build.events.OutputBuildEvent
- a:getMessage():java.lang.String
- a:isStdOut():Z
com.intellij.build.events.ProgressBuildEvent
- com.intellij.build.events.BuildEvent
- a:getProgress():J
- a:getTotal():J
- a:getUnit():java.lang.String
com.intellij.build.events.SkippedResult
- com.intellij.build.events.EventResult
com.intellij.build.events.StartBuildEvent
- com.intellij.build.events.StartEvent
- a:getBuildDescriptor():com.intellij.build.BuildDescriptor
com.intellij.build.events.StartEvent
- com.intellij.build.events.BuildEvent
com.intellij.build.events.SuccessResult
- com.intellij.build.events.EventResult
- a:getWarnings():java.util.List
- a:isUpToDate():Z
com.intellij.build.events.Warning
- a:getDescription():java.lang.String
- a:getMessage():java.lang.String
com.intellij.build.issue.BuildIssue
- a:getDescription():java.lang.String
- a:getNavigatable(com.intellij.openapi.project.Project):com.intellij.pom.Navigatable
- a:getQuickFixes():java.util.List
- a:getTitle():java.lang.String
com.intellij.build.issue.BuildIssueProvider
- a:getBuildIssue():com.intellij.build.issue.BuildIssue
a:com.intellij.build.issue.ConfigurableBuildIssue
- com.intellij.build.issue.BuildIssue
- <init>():V
- f:addDescription(java.lang.String):V
- f:addQuickFix(com.intellij.build.issue.BuildIssueQuickFix):java.lang.String
- f:addQuickFixPrompt(java.lang.String):V
- f:getDescription():java.lang.String
- getNavigatable(com.intellij.openapi.project.Project):com.intellij.pom.Navigatable
- f:getQuickFixes():java.util.List
- f:getTitle():java.lang.String
- f:setTitle(java.lang.String):V
com.intellij.build.output.BuildOutputInstantReader
- a:getParentEventId():java.lang.Object
- a:pushBack():V
- a:pushBack(I):V
- a:readLine():java.lang.String
com.intellij.build.output.BuildOutputParser
- a:parse(java.lang.String,com.intellij.build.output.BuildOutputInstantReader,java.util.function.Consumer):Z
a:com.intellij.build.process.BuildProcessHandler
- com.intellij.execution.process.ProcessHandler
- <init>():V
- a:getExecutionName():java.lang.String
com.intellij.codeInsight.CodeInsightActionHandler
- com.intellij.codeInsight.intention.FileModifier
- a:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
f:com.intellij.codeInsight.CodeInsightBundle
- sf:BUNDLE:java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
a:com.intellij.codeInsight.actions.CodeInsightAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.actionSystem.PerformWithDocumentsCommitted
- <init>():V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- actionPerformedImpl(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:getCommandName():java.lang.String
- p:getEditor(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.project.Project,Z):com.intellij.openapi.editor.Editor
- pa:getHandler():com.intellij.codeInsight.CodeInsightActionHandler
- p:getHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.codeInsight.CodeInsightActionHandler
- p:isValidForFile(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:update(com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- p:update(com.intellij.openapi.actionSystem.Presentation,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.actionSystem.DataContext,java.lang.String):V
a:com.intellij.codeInsight.actions.SimpleCodeInsightAction
- com.intellij.codeInsight.actions.CodeInsightAction
- com.intellij.codeInsight.CodeInsightActionHandler
- <init>():V
- p:getHandler():com.intellij.codeInsight.CodeInsightActionHandler
e:com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- java.lang.Enum
- sf:Default:com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- sf:EmptySpace:com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- sf:NearScroll:com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- sf:Right:com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- sf:Top:com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- s:getEntries():kotlin.enums.EnumEntries
- f:getKey():java.lang.String
- s:valueOf(java.lang.String):com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- s:values():com.intellij.codeInsight.codeVision.CodeVisionAnchorKind[]
a:com.intellij.codeInsight.codeVision.CodeVisionEntry
- com.intellij.openapi.util.UserDataHolderBase
- <init>(java.lang.String,javax.swing.Icon,java.lang.String,java.lang.String,java.util.List):V
- f:getExtraActions():java.util.List
- f:getIcon():javax.swing.Icon
- f:getLongPresentation():java.lang.String
- f:getProviderId():java.lang.String
- f:getShowInMorePopup():Z
- f:getTooltip():java.lang.String
- f:setShowInMorePopup(Z):V
f:com.intellij.codeInsight.codeVision.CodeVisionEntryExtraActionModel
- <init>(java.lang.String,java.lang.String):V
- f:component1():java.lang.String
- f:component2():java.lang.String
- f:copy(java.lang.String,java.lang.String):com.intellij.codeInsight.codeVision.CodeVisionEntryExtraActionModel
- bs:copy$default(com.intellij.codeInsight.codeVision.CodeVisionEntryExtraActionModel,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.codeInsight.codeVision.CodeVisionEntryExtraActionModel
- equals(java.lang.Object):Z
- f:getActionId():java.lang.String
- f:getDisplayText():java.lang.String
- hashCode():I
a:com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering
f:com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering$CodeVisionRelativeOrderingAfter
- com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering
- <init>(java.lang.String):V
- f:getId():java.lang.String
f:com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering$CodeVisionRelativeOrderingBefore
- com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering
- <init>(java.lang.String):V
- f:getId():java.lang.String
f:com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering$CodeVisionRelativeOrderingFirst
- com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering
- sf:INSTANCE:com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering$CodeVisionRelativeOrderingFirst
f:com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering$CodeVisionRelativeOrderingLast
- com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering
- sf:INSTANCE:com.intellij.codeInsight.codeVision.CodeVisionRelativeOrdering$CodeVisionRelativeOrderingLast
f:com.intellij.codeInsight.codeVision.settings.CodeVisionSettings
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.codeInsight.codeVision.settings.CodeVisionSettings$Companion
- <init>():V
- f:getAnchorLimit(com.intellij.codeInsight.codeVision.CodeVisionAnchorKind):I
- sf:getCODE_LENS_SETTINGS_CHANGED():com.intellij.util.messages.Topic
- f:getCodeVisionEnabled():Z
- f:getDefaultPosition():com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- f:getDisabledCodeVisionProviderIds():java.util.Set
- sf:getInstance():com.intellij.codeInsight.codeVision.settings.CodeVisionSettings
- f:getPositionForGroup(java.lang.String):com.intellij.codeInsight.codeVision.CodeVisionAnchorKind
- getState():com.intellij.codeInsight.codeVision.settings.CodeVisionSettings$State
- f:getVisibleMetricsAboveDeclarationCount():I
- f:getVisibleMetricsNextToDeclarationCount():I
- f:isProviderEnabled(java.lang.String):Z
- loadState(com.intellij.codeInsight.codeVision.settings.CodeVisionSettings$State):V
- f:resetDefaultPosition():V
- f:setAnchorLimit(com.intellij.codeInsight.codeVision.CodeVisionAnchorKind,I):V
- f:setCodeVisionEnabled(Z):V
- f:setDefaultPosition(com.intellij.codeInsight.codeVision.CodeVisionAnchorKind):V
- f:setPositionForGroup(java.lang.String,com.intellij.codeInsight.codeVision.CodeVisionAnchorKind):V
- f:setProviderEnabled(java.lang.String,Z):V
- f:setVisibleMetricsAboveDeclarationCount(I):V
- f:setVisibleMetricsNextToDeclarationCount(I):V
com.intellij.codeInsight.codeVision.settings.CodeVisionSettings$CodeVisionSettingsListener
- defaultPositionChanged(com.intellij.codeInsight.codeVision.CodeVisionAnchorKind):V
- globalEnabledChanged(Z):V
- a:groupPositionChanged(java.lang.String,com.intellij.codeInsight.codeVision.CodeVisionAnchorKind):V
- providerAvailabilityChanged(java.lang.String,Z):V
- visibleMetricsAboveDeclarationCountChanged(I):V
- visibleMetricsNextToDeclarationCountChanged(I):V
f:com.intellij.codeInsight.codeVision.settings.CodeVisionSettings$Companion
- f:getCODE_LENS_SETTINGS_CHANGED():com.intellij.util.messages.Topic
- f:getInstance():com.intellij.codeInsight.codeVision.settings.CodeVisionSettings
- f:instance():com.intellij.codeInsight.codeVision.settings.CodeVisionSettings
f:com.intellij.codeInsight.codeVision.settings.CodeVisionSettings$State
- <init>():V
- f:getCodeVisionGroupToPosition():java.util.Map
- f:getDefaultPosition():java.lang.String
- f:getDisabledCodeVisionProviderIds():java.util.TreeSet
- f:getEnabledCodeVisionProviderIds():java.util.TreeSet
- f:getVisibleMetricsAboveDeclarationCount():I
- f:getVisibleMetricsNextToDeclarationCount():I
- f:isEnabled():Z
- f:setCodeVisionGroupToPosition(java.util.Map):V
- f:setDefaultPosition(java.lang.String):V
- f:setDisabledCodeVisionProviderIds(java.util.TreeSet):V
- f:setEnabled(Z):V
- f:setEnabledCodeVisionProviderIds(java.util.TreeSet):V
- f:setVisibleMetricsAboveDeclarationCount(I):V
- f:setVisibleMetricsNextToDeclarationCount(I):V
a:com.intellij.codeInsight.completion.NextPrevParameterAction
- com.intellij.codeInsight.actions.CodeInsightAction
- com.intellij.openapi.project.DumbAware
- p:<init>(Z):V
- getHandler():com.intellij.codeInsight.CodeInsightActionHandler
- getHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.codeInsight.CodeInsightActionHandler
- s:hasSuitablePolicy(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- p:isValidForFile(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
c:com.intellij.codeInsight.completion.NextPrevParameterAction$Next
- com.intellij.codeInsight.completion.NextPrevParameterAction
- <init>():V
c:com.intellij.codeInsight.completion.NextPrevParameterAction$Prev
- com.intellij.codeInsight.completion.NextPrevParameterAction
- <init>():V
c:com.intellij.codeInsight.completion.NextPrevParameterHandler
- com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler$ForEachCaret
- pf:next:Z
- pf:originalHandler:com.intellij.openapi.editor.actionSystem.EditorActionHandler
- <init>(com.intellij.openapi.editor.actionSystem.EditorActionHandler,Z):V
- executeWriteAction(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):V
- s:hasSuitablePolicy(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- s:hasSuitablePolicy(com.intellij.psi.PsiFile):Z
- isEnabledForCaret(com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Caret,com.intellij.openapi.actionSystem.DataContext):Z
com.intellij.codeInsight.completion.PlainTextSymbolCompletionContributor
- a:getLookupElements(com.intellij.psi.PsiFile,I,java.lang.String):java.util.Collection
c:com.intellij.codeInsight.completion.PlainTextSymbolCompletionContributorEP
- com.intellij.lang.LanguageExtensionPoint
- <init>():V
- s:forLanguage(com.intellij.lang.Language):com.intellij.codeInsight.completion.PlainTextSymbolCompletionContributor
c:com.intellij.codeInsight.completion.SkipAutopopupInComments
- com.intellij.codeInsight.completion.CompletionConfidence
- <init>():V
- shouldSkipAutopopup(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile,I):com.intellij.util.ThreeState
c:com.intellij.codeInsight.completion.SkipAutopopupInStrings
- com.intellij.codeInsight.completion.CompletionConfidence
- <init>():V
- s:isInStringLiteral(com.intellij.psi.PsiElement):Z
- shouldSkipAutopopup(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile,I):com.intellij.util.ThreeState
c:com.intellij.codeInsight.completion.StartOnlyMatcher
- com.intellij.codeInsight.completion.PrefixMatcher
- <init>(com.intellij.codeInsight.completion.PrefixMatcher):V
- cloneWithPrefix(java.lang.String):com.intellij.codeInsight.completion.PrefixMatcher
- isStartMatch(java.lang.String):Z
- prefixMatches(java.lang.String):Z
com.intellij.codeInsight.completion.TemplateParameterTraversalPolicy
- a:invoke(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,Z):V
- a:isValidForFile(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
com.intellij.codeInsight.completion.ml.CompletionEnvironment
- com.intellij.openapi.util.UserDataHolder
- a:getLookup():com.intellij.codeInsight.lookup.Lookup
- a:getParameters():com.intellij.codeInsight.completion.CompletionParameters
com.intellij.codeInsight.completion.ml.ContextFeatures
- com.intellij.openapi.util.UserDataHolder
- a:asMap():java.util.Map
- a:binaryValue(java.lang.String):java.lang.Boolean
- a:categoricalValue(java.lang.String):java.lang.String
- a:classNameValue(java.lang.String):java.lang.String
- a:floatValue(java.lang.String):java.lang.Double
f:com.intellij.codeInsight.completion.util.CompletionStyleUtil
- <init>():V
- s:getCodeStyleSettings(com.intellij.codeInsight.completion.InsertionContext):com.intellij.psi.codeStyle.CommonCodeStyleSettings
f:com.intellij.codeInsight.daemon.DaemonBundle
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
a:com.intellij.codeInsight.daemon.GutterIconDescriptor
- <init>():V
- getIcon():javax.swing.Icon
- getId():java.lang.String
- a:getName():java.lang.String
- getOptions():com.intellij.codeInsight.daemon.GutterIconDescriptor$Option[]
- isEnabledByDefault():Z
c:com.intellij.codeInsight.daemon.GutterIconDescriptor$Option
- com.intellij.codeInsight.daemon.GutterIconDescriptor
- <init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- getIcon():javax.swing.Icon
- getId():java.lang.String
- getName():java.lang.String
- isEnabled():Z
com.intellij.codeInsight.daemon.GutterIconNavigationHandler
- a:navigate(java.awt.event.MouseEvent,com.intellij.psi.PsiElement):V
@:com.intellij.codeInsight.daemon.GutterName
- java.lang.annotation.Annotation
c:com.intellij.codeInsight.daemon.LineMarkerInfo
- f:endOffset:I
- highlighter:com.intellij.openapi.editor.markup.RangeHighlighter
- pf:myIcon:javax.swing.Icon
- separatorColor:java.awt.Color
- separatorPlacement:com.intellij.openapi.editor.markup.SeparatorPlacement
- f:startOffset:I
- updatePass:I
- <init>(com.intellij.psi.PsiElement,I,javax.swing.Icon,I,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,I,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment,java.util.function.Supplier):V
- p:<init>(com.intellij.psi.SmartPsiElementPointer,com.intellij.openapi.util.TextRange,javax.swing.Icon,java.util.function.Supplier,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment):V
- createGutterRenderer():com.intellij.openapi.editor.markup.GutterIconRenderer
- getEditorFilter():com.intellij.openapi.editor.markup.MarkupEditorFilter
- getElement():com.intellij.psi.PsiElement
- getIcon():javax.swing.Icon
- getLineMarkerTooltip():java.lang.String
- f:getNavigationHandler():com.intellij.codeInsight.daemon.GutterIconNavigationHandler
c:com.intellij.codeInsight.daemon.LineMarkerInfo$LineMarkerGutterIconRenderer
- com.intellij.openapi.editor.markup.GutterIconRenderer
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.codeInsight.daemon.LineMarkerInfo):V
- equals(java.lang.Object):Z
- getAccessibleName():java.lang.String
- getAlignment():com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment
- getClickAction():com.intellij.openapi.actionSystem.AnAction
- getIcon():javax.swing.Icon
- getLineMarkerInfo():com.intellij.codeInsight.daemon.LineMarkerInfo
- getTooltipText():java.lang.String
- hashCode():I
- isNavigateAction():Z
- p:looksTheSameAs(com.intellij.codeInsight.daemon.LineMarkerInfo$LineMarkerGutterIconRenderer):Z
com.intellij.codeInsight.daemon.LineMarkerProvider
- com.intellij.openapi.project.PossiblyDumbAware
- collectSlowLineMarkers(java.util.List,java.util.Collection):V
- a:getLineMarkerInfo(com.intellij.psi.PsiElement):com.intellij.codeInsight.daemon.LineMarkerInfo
a:com.intellij.codeInsight.daemon.LineMarkerProviderDescriptor
- com.intellij.codeInsight.daemon.GutterIconDescriptor
- com.intellij.codeInsight.daemon.LineMarkerProvider
- <init>():V
f:com.intellij.codeInsight.daemon.LineMarkerProviders
- com.intellij.lang.LanguageExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- s:getInstance():com.intellij.codeInsight.daemon.LineMarkerProviders
a:com.intellij.codeInsight.daemon.LineMarkerSettings
- <init>():V
- s:getSettings():com.intellij.codeInsight.daemon.LineMarkerSettings
- a:isEnabled(com.intellij.codeInsight.daemon.GutterIconDescriptor):Z
- a:setEnabled(com.intellij.codeInsight.daemon.GutterIconDescriptor,Z):V
a:com.intellij.codeInsight.daemon.MergeableLineMarkerInfo
- com.intellij.codeInsight.daemon.LineMarkerInfo
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,I,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment,java.util.function.Supplier):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,com.intellij.util.Function,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment,java.util.function.Supplier):V
- a:canMergeWith(com.intellij.codeInsight.daemon.MergeableLineMarkerInfo):Z
- a:getCommonIcon(java.util.List):javax.swing.Icon
- getCommonIconAlignment(java.util.List):com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment
- getCommonTooltip(java.util.List):com.intellij.util.Function
- getElementPresentation(com.intellij.psi.PsiElement):java.lang.String
- s:getMergedMarkers(com.intellij.codeInsight.daemon.LineMarkerInfo):java.util.List
- getWeight():I
- s:merge(java.util.List,I):java.util.List
c:com.intellij.codeInsight.daemon.NavigateAction
- com.intellij.openapi.actionSystem.AnAction
- <init>(com.intellij.codeInsight.daemon.LineMarkerInfo):V
- <init>(java.lang.String,com.intellij.codeInsight.daemon.LineMarkerInfo,java.lang.String):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getOriginalActionId():java.lang.String
- s:setNavigateAction(com.intellij.codeInsight.daemon.LineMarkerInfo,java.lang.String,java.lang.String):com.intellij.codeInsight.daemon.LineMarkerInfo
- s:setNavigateAction(com.intellij.codeInsight.daemon.LineMarkerInfo,java.lang.String,java.lang.String,javax.swing.Icon):com.intellij.codeInsight.daemon.LineMarkerInfo
c:com.intellij.codeInsight.daemon.RelatedItemLineMarkerInfo
- com.intellij.codeInsight.daemon.MergeableLineMarkerInfo
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,I,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment,com.intellij.openapi.util.NotNullLazyValue):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,I,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment,java.util.Collection):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment,com.intellij.openapi.util.NotNullFactory):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,javax.swing.Icon,com.intellij.util.Function,com.intellij.util.Function,com.intellij.codeInsight.daemon.GutterIconNavigationHandler,com.intellij.openapi.editor.markup.GutterIconRenderer$Alignment,com.intellij.openapi.util.NotNullFactory,java.util.function.Supplier):V
- canMergeWith(com.intellij.codeInsight.daemon.MergeableLineMarkerInfo):Z
- createGotoRelatedItems():java.util.Collection
- createGutterRenderer():com.intellij.openapi.editor.markup.GutterIconRenderer
- getCommonIcon(java.util.List):javax.swing.Icon
a:com.intellij.codeInsight.daemon.RelatedItemLineMarkerProvider
- com.intellij.codeInsight.daemon.LineMarkerProviderDescriptor
- <init>():V
- p:collectNavigationMarkers(com.intellij.psi.PsiElement,java.util.Collection):V
- collectNavigationMarkers(java.util.List,java.util.Collection,Z):V
- collectSlowLineMarkers(java.util.List,java.util.Collection):V
- getLineMarkerInfo(com.intellij.psi.PsiElement):com.intellij.codeInsight.daemon.RelatedItemLineMarkerInfo
- getName():java.lang.String
f:com.intellij.codeInsight.daemon.impl.analysis.DaemonTooltipsUtil
- <init>():V
- s:getShortcutText():java.lang.String
- s:getWrappedTooltip(java.lang.String,java.lang.String,java.lang.String,Z):java.lang.String
- s:getWrappedTooltip(java.lang.String,java.lang.String,Z):java.lang.String
- s:getWrappedTooltipWithCustomReference(java.lang.String,java.lang.String,java.lang.String,Z):java.lang.String
- s:getWrappedTooltipWithCustomReference(java.lang.String,java.lang.String,Z):java.lang.String
a:com.intellij.codeInsight.daemon.impl.analysis.DefaultHighlightingSettingProvider
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getDefaultSetting(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting
e:com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting
- java.lang.Enum
- sf:ESSENTIAL:com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting
- sf:FORCE_HIGHLIGHTING:com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting
- sf:NONE:com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting
- sf:SKIP_HIGHLIGHTING:com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting
- sf:SKIP_INSPECTION:com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting
- s:fromInspectionsLevel(com.intellij.openapi.editor.markup.InspectionsLevel):com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting
- s:toInspectionsLevel(com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting):com.intellij.openapi.editor.markup.InspectionsLevel
- s:valueOf(java.lang.String):com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting
- s:values():com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting[]
com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSettingListener
- sf:SETTING_CHANGE:com.intellij.util.messages.Topic
- a:settingChanged(com.intellij.psi.PsiElement,com.intellij.codeInsight.daemon.impl.analysis.FileHighlightingSetting):V
a:com.intellij.codeInsight.editorActions.BackspaceHandlerDelegate
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:beforeCharDeleted(C,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):V
- a:charDeleted(C,com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):Z
a:com.intellij.codeInsight.editorActions.BackspaceModeOverride
- <init>():V
- getBackspaceMode(com.intellij.codeInsight.editorActions.SmartBackspaceMode):com.intellij.codeInsight.editorActions.SmartBackspaceMode
- getBackspaceMode(com.intellij.psi.PsiFile,com.intellij.codeInsight.editorActions.SmartBackspaceMode):com.intellij.codeInsight.editorActions.SmartBackspaceMode
a:com.intellij.codeInsight.editorActions.CopyPastePostProcessor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:collectTransferableData(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor,I[],I[]):java.util.List
- extractTransferableData(java.awt.datatransfer.Transferable):java.util.List
- processTransferableData(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.RangeMarker,I,com.intellij.openapi.util.Ref,java.util.List):V
- requiresAllDocumentsToBeCommitted(com.intellij.openapi.editor.Editor,com.intellij.openapi.project.Project):Z
com.intellij.codeInsight.editorActions.ExtendWordSelectionHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:canSelect(com.intellij.psi.PsiElement):Z
- a:select(com.intellij.psi.PsiElement,java.lang.CharSequence,I,com.intellij.openapi.editor.Editor):java.util.List
com.intellij.codeInsight.editorActions.JoinLinesHandlerDelegate
- sf:CANNOT_JOIN:I
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:tryJoinLines(com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile,I,I):I
com.intellij.codeInsight.editorActions.JoinRawLinesHandlerDelegate
- com.intellij.codeInsight.editorActions.JoinLinesHandlerDelegate
- a:tryJoinRawLines(com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile,I,I):I
f:com.intellij.codeInsight.editorActions.LanguageBackspaceModeOverride
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.codeInsight.editorActions.LanguageBackspaceModeOverride
com.intellij.codeInsight.editorActions.ReferenceCopyPasteProcessor
c:com.intellij.codeInsight.editorActions.SmartBackspaceDisabler
- com.intellij.codeInsight.editorActions.BackspaceModeOverride
- <init>():V
- getBackspaceMode(com.intellij.codeInsight.editorActions.SmartBackspaceMode):com.intellij.codeInsight.editorActions.SmartBackspaceMode
a:com.intellij.codeInsight.editorActions.TypedHandlerDelegate
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- beforeCharTyped(C,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.openapi.fileTypes.FileType):com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- beforeClosingParenInserted(C,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- beforeClosingQuoteInserted(java.lang.CharSequence,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- beforeSelectionRemoved(C,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- charTyped(C,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- checkAutoPopup(C,com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- isImmediatePaintingEnabled(com.intellij.openapi.editor.Editor,C,com.intellij.openapi.actionSystem.DataContext):Z
- newTypingStarted(C,com.intellij.openapi.editor.Editor,com.intellij.openapi.actionSystem.DataContext):V
e:com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- java.lang.Enum
- sf:CONTINUE:com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- sf:DEFAULT:com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- sf:STOP:com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- s:valueOf(java.lang.String):com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result
- s:values():com.intellij.codeInsight.editorActions.TypedHandlerDelegate$Result[]
a:com.intellij.codeInsight.editorActions.moveLeftRight.MoveElementLeftRightHandler
- sf:EXTENSION:com.intellij.lang.LanguageExtension
- <init>():V
- a:getMovableSubElements(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement[]
c:com.intellij.codeInsight.editorActions.moveUpDown.LineMover
- com.intellij.codeInsight.editorActions.moveUpDown.StatementUpDownMover
- <init>():V
- checkAvailable(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.editorActions.moveUpDown.StatementUpDownMover$MoveInfo,Z):Z
- s:checkLineMoverAvailable(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.editorActions.moveUpDown.StatementUpDownMover$MoveInfo,Z):Z
- ps:getElementRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.openapi.util.Pair
c:com.intellij.codeInsight.editorActions.moveUpDown.LineRange
- f:endLine:I
- firstElement:com.intellij.psi.PsiElement
- lastElement:com.intellij.psi.PsiElement
- f:startLine:I
- <init>(I,I):V
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document):V
- contains(com.intellij.codeInsight.editorActions.moveUpDown.LineRange):Z
- containsLine(I):Z
a:com.intellij.codeInsight.editorActions.moveUpDown.StatementUpDownMover
- sf:STATEMENT_UP_DOWN_MOVER_EP:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- afterMove(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.editorActions.moveUpDown.StatementUpDownMover$MoveInfo,Z):V
- beforeMove(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.editorActions.moveUpDown.StatementUpDownMover$MoveInfo,Z):V
- a:checkAvailable(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.editorActions.moveUpDown.StatementUpDownMover$MoveInfo,Z):Z
- ps:firstNonWhiteElement(I,com.intellij.psi.PsiFile,Z):com.intellij.psi.PsiElement
- ps:firstNonWhiteElement(com.intellij.psi.PsiElement,Z):com.intellij.psi.PsiElement
- ps:getElementRange(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile,com.intellij.codeInsight.editorActions.moveUpDown.LineRange):com.intellij.openapi.util.Pair
- ps:getLineRangeFromSelection(com.intellij.openapi.editor.Editor):com.intellij.codeInsight.editorActions.moveUpDown.LineRange
- s:getLineStartSafeOffset(com.intellij.openapi.editor.Document,I):I
c:com.intellij.codeInsight.editorActions.moveUpDown.StatementUpDownMover$MoveInfo
- com.intellij.openapi.util.UserDataHolderBase
- indentSource:Z
- indentTarget:Z
- range1:com.intellij.openapi.editor.RangeMarker
- range2:com.intellij.openapi.editor.RangeMarker
- toMove:com.intellij.codeInsight.editorActions.moveUpDown.LineRange
- toMove2:com.intellij.codeInsight.editorActions.moveUpDown.LineRange
- <init>():V
- f:prohibitMove():Z
a:com.intellij.codeInsight.editorActions.smartEnter.SmartEnterProcessor
- <init>():V
- commit(com.intellij.openapi.editor.Editor):V
- s:commitDocument(com.intellij.openapi.editor.Editor):V
- p:createRangeMarker(com.intellij.psi.PsiElement):com.intellij.openapi.editor.RangeMarker
- p:getStatementAtCaret(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- ps:isUncommited(com.intellij.openapi.project.Project):Z
- a:process(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- processAfterCompletion(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- p:reformat(com.intellij.psi.PsiElement):V
c:com.intellij.codeInsight.editorActions.smartEnter.SmartEnterProcessors
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.codeInsight.editorActions.smartEnter.SmartEnterProcessors
- <init>():V
com.intellij.codeInsight.folding.CollapseBlockHandler
- sf:EP_NAME:com.intellij.lang.LanguageExtension
- a:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
com.intellij.codeInsight.generation.ClassMember
- com.intellij.codeInsight.generation.MemberChooserObject
- com.intellij.modcommand.MemberChooserElement
- sf:EMPTY_ARRAY:com.intellij.codeInsight.generation.ClassMember[]
- s:from(com.intellij.modcommand.MemberChooserElement):com.intellij.codeInsight.generation.ClassMember
- a:getParentNodeDelegate():com.intellij.codeInsight.generation.MemberChooserObject
com.intellij.codeInsight.generation.MemberChooserObject
- a:equals(java.lang.Object):Z
- a:getText():java.lang.String
- a:hashCode():I
- a:renderTreeNode(com.intellij.ui.SimpleColoredComponent,javax.swing.JTree):V
c:com.intellij.codeInsight.generation.MemberChooserObjectBase
- com.intellij.codeInsight.generation.MemberChooserObject
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon):V
- getText():java.lang.String
- p:getTextAttributes(javax.swing.JTree):com.intellij.ui.SimpleTextAttributes
- renderTreeNode(com.intellij.ui.SimpleColoredComponent,javax.swing.JTree):V
com.intellij.codeInsight.generation.OverrideImplementsAnnotationsFilter
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getAnnotations(com.intellij.psi.PsiFile):java.lang.String[]
- s:keepAnnotationOnOverrideMember(java.lang.String,com.intellij.psi.PsiFile):Z
c:com.intellij.codeInsight.generation.PsiElementMemberChooserObject
- com.intellij.codeInsight.generation.MemberChooserObjectBase
- <init>(com.intellij.psi.PsiElement,java.lang.String):V
- <init>(com.intellij.psi.PsiElement,java.lang.String,javax.swing.Icon):V
- equals(java.lang.Object):Z
- getPsiElement():com.intellij.psi.PsiElement
- hashCode():I
com.intellij.codeInsight.generation.actions.GenerateActionPopupTemplateInjector
- a:createEditTemplateAction(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.AnAction
com.intellij.codeInsight.generation.surroundWith.SurroundWithRangeAdjuster
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:adjustSurroundWithRange(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):com.intellij.openapi.util.TextRange
- adjustSurroundWithRange(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange,Z):com.intellij.openapi.util.TextRange
com.intellij.codeInsight.hint.DeclarationRangeHandler
- a:getDeclarationRange(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
c:com.intellij.codeInsight.hint.DefaultImplementationTextSelectioner
- com.intellij.codeInsight.hint.ImplementationTextSelectioner
- <init>():V
- getTextEndOffset(com.intellij.psi.PsiElement):I
- getTextStartOffset(com.intellij.psi.PsiElement):I
com.intellij.codeInsight.hint.ImplementationTextProcessor
- a:process(java.lang.String,com.intellij.psi.PsiElement):java.lang.String
com.intellij.codeInsight.hint.ImplementationTextSelectioner
- a:getTextEndOffset(com.intellij.psi.PsiElement):I
- a:getTextStartOffset(com.intellij.psi.PsiElement):I
c:com.intellij.codeInsight.hint.LanguageImplementationTextProcessor
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.codeInsight.hint.LanguageImplementationTextProcessor
- <init>():V
c:com.intellij.codeInsight.hint.LanguageImplementationTextSelectioner
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.codeInsight.hint.LanguageImplementationTextSelectioner
- <init>():V
e:com.intellij.codeInsight.hints.declarative.CollapseState
- java.lang.Enum
- sf:Collapsed:com.intellij.codeInsight.hints.declarative.CollapseState
- sf:Expanded:com.intellij.codeInsight.hints.declarative.CollapseState
- sf:NoPreference:com.intellij.codeInsight.hints.declarative.CollapseState
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeInsight.hints.declarative.CollapseState
- s:values():com.intellij.codeInsight.hints.declarative.CollapseState[]
com.intellij.codeInsight.hints.declarative.CollapsiblePresentationTreeBuilder
- com.intellij.codeInsight.hints.declarative.PresentationTreeBuilder
- a:toggleButton(kotlin.jvm.functions.Function1):V
f:com.intellij.codeInsight.hints.declarative.DeclarativeInlayHintsSettings
- com.intellij.openapi.components.SimplePersistentStateComponent
- sf:Companion:com.intellij.codeInsight.hints.declarative.DeclarativeInlayHintsSettings$Companion
- <init>():V
- f:isOptionEnabled(java.lang.String,java.lang.String):java.lang.Boolean
- f:isProviderEnabled(java.lang.String):java.lang.Boolean
- f:setOptionEnabled(java.lang.String,java.lang.String,Z):V
- f:setProviderEnabled(java.lang.String,Z):V
f:com.intellij.codeInsight.hints.declarative.DeclarativeInlayHintsSettings$Companion
- f:getInstance():com.intellij.codeInsight.hints.declarative.DeclarativeInlayHintsSettings
f:com.intellij.codeInsight.hints.declarative.DeclarativeInlayHintsSettings$HintsState
- com.intellij.openapi.components.BaseState
- <init>():V
- f:getEnabledOptions():java.util.Map
- f:getProviderIdToEnabled():java.util.Map
- f:setEnabledOptions(java.util.Map):V
- f:setProviderIdToEnabled(java.util.Map):V
f:com.intellij.codeInsight.hints.declarative.EndOfLinePosition
- com.intellij.codeInsight.hints.declarative.InlayPosition
- <init>(I):V
- <init>(I,I):V
- b:<init>(I,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getLine():I
- f:getPriority():I
e:com.intellij.codeInsight.hints.declarative.HintColorKind
- java.lang.Enum
- sf:Default:com.intellij.codeInsight.hints.declarative.HintColorKind
- sf:Parameter:com.intellij.codeInsight.hints.declarative.HintColorKind
- sf:TextWithoutBackground:com.intellij.codeInsight.hints.declarative.HintColorKind
- s:getEntries():kotlin.enums.EnumEntries
- f:hasBackground():Z
- s:valueOf(java.lang.String):com.intellij.codeInsight.hints.declarative.HintColorKind
- s:values():com.intellij.codeInsight.hints.declarative.HintColorKind[]
e:com.intellij.codeInsight.hints.declarative.HintFontSize
- java.lang.Enum
- sf:ABitSmallerThanInEditor:com.intellij.codeInsight.hints.declarative.HintFontSize
- sf:AsInEditor:com.intellij.codeInsight.hints.declarative.HintFontSize
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeInsight.hints.declarative.HintFontSize
- s:values():com.intellij.codeInsight.hints.declarative.HintFontSize[]
f:com.intellij.codeInsight.hints.declarative.HintFormat
- sf:Companion:com.intellij.codeInsight.hints.declarative.HintFormat$Companion
- <init>(com.intellij.codeInsight.hints.declarative.HintColorKind,com.intellij.codeInsight.hints.declarative.HintFontSize,com.intellij.codeInsight.hints.declarative.HintMarginPadding):V
- f:component1():com.intellij.codeInsight.hints.declarative.HintColorKind
- f:component2():com.intellij.codeInsight.hints.declarative.HintFontSize
- f:component3():com.intellij.codeInsight.hints.declarative.HintMarginPadding
- f:copy(com.intellij.codeInsight.hints.declarative.HintColorKind,com.intellij.codeInsight.hints.declarative.HintFontSize,com.intellij.codeInsight.hints.declarative.HintMarginPadding):com.intellij.codeInsight.hints.declarative.HintFormat
- bs:copy$default(com.intellij.codeInsight.hints.declarative.HintFormat,com.intellij.codeInsight.hints.declarative.HintColorKind,com.intellij.codeInsight.hints.declarative.HintFontSize,com.intellij.codeInsight.hints.declarative.HintMarginPadding,I,java.lang.Object):com.intellij.codeInsight.hints.declarative.HintFormat
- equals(java.lang.Object):Z
- f:getColorKind():com.intellij.codeInsight.hints.declarative.HintColorKind
- f:getFontSize():com.intellij.codeInsight.hints.declarative.HintFontSize
- f:getHorizontalMarginPadding():com.intellij.codeInsight.hints.declarative.HintMarginPadding
- hashCode():I
- f:withColorKind(com.intellij.codeInsight.hints.declarative.HintColorKind):com.intellij.codeInsight.hints.declarative.HintFormat
- f:withFontSize(com.intellij.codeInsight.hints.declarative.HintFontSize):com.intellij.codeInsight.hints.declarative.HintFormat
- f:withHorizontalMargin(com.intellij.codeInsight.hints.declarative.HintMarginPadding):com.intellij.codeInsight.hints.declarative.HintFormat
f:com.intellij.codeInsight.hints.declarative.HintFormat$Companion
- f:getDefault():com.intellij.codeInsight.hints.declarative.HintFormat
e:com.intellij.codeInsight.hints.declarative.HintMarginPadding
- java.lang.Enum
- sf:MarginAndSmallerPadding:com.intellij.codeInsight.hints.declarative.HintMarginPadding
- sf:OnlyPadding:com.intellij.codeInsight.hints.declarative.HintMarginPadding
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeInsight.hints.declarative.HintMarginPadding
- s:values():com.intellij.codeInsight.hints.declarative.HintMarginPadding[]
f:com.intellij.codeInsight.hints.declarative.InlayActionData
- <init>(com.intellij.codeInsight.hints.declarative.InlayActionPayload,java.lang.String):V
- equals(java.lang.Object):Z
- f:getHandlerId():java.lang.String
- f:getPayload():com.intellij.codeInsight.hints.declarative.InlayActionPayload
- hashCode():I
com.intellij.codeInsight.hints.declarative.InlayActionHandler
- sf:Companion:com.intellij.codeInsight.hints.declarative.InlayActionHandler$Companion
- handleClick(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.declarative.InlayActionPayload):V
- handleClick(com.intellij.openapi.editor.event.EditorMouseEvent,com.intellij.codeInsight.hints.declarative.InlayActionPayload):V
f:com.intellij.codeInsight.hints.declarative.InlayActionHandler$Companion
- f:getActionHandler(java.lang.String):com.intellij.codeInsight.hints.declarative.InlayActionHandler
f:com.intellij.codeInsight.hints.declarative.InlayActionHandlerBean
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- <init>():V
- f:getHandlerId():java.lang.String
- f:getImplementationClass():java.lang.String
- f:setHandlerId(java.lang.String):V
- f:setImplementationClass(java.lang.String):V
com.intellij.codeInsight.hints.declarative.InlayActionPayload
com.intellij.codeInsight.hints.declarative.InlayHintsCollector
com.intellij.codeInsight.hints.declarative.InlayHintsCustomSettingsProvider
- sf:Companion:com.intellij.codeInsight.hints.declarative.InlayHintsCustomSettingsProvider$Companion
- a:createComponent(com.intellij.openapi.project.Project,com.intellij.lang.Language):javax.swing.JComponent
- a:getSettingsCopy():java.lang.Object
- a:isDifferentFrom(com.intellij.openapi.project.Project,java.lang.Object):Z
- a:persistSettings(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.lang.Language):V
- a:putSettings(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.lang.Language):V
f:com.intellij.codeInsight.hints.declarative.InlayHintsCustomSettingsProvider$Companion
- f:getCustomSettingsProvider(java.lang.String,com.intellij.lang.Language):com.intellij.codeInsight.hints.declarative.InlayHintsCustomSettingsProvider
f:com.intellij.codeInsight.hints.declarative.InlayHintsCustomSettingsProviderBean
- com.intellij.openapi.extensions.CustomLoadingExtensionPointBean
- sf:Companion:com.intellij.codeInsight.hints.declarative.InlayHintsCustomSettingsProviderBean$Companion
- <init>():V
- f:getImplementationClass():java.lang.String
- f:getLanguage():java.lang.String
- f:getProviderId():java.lang.String
- f:setImplementationClass(java.lang.String):V
- f:setLanguage(java.lang.String):V
- f:setProviderId(java.lang.String):V
f:com.intellij.codeInsight.hints.declarative.InlayHintsCustomSettingsProviderBean$Companion
- f:getEP():com.intellij.openapi.extensions.ExtensionPointName
com.intellij.codeInsight.hints.declarative.InlayHintsProvider
- com.intellij.openapi.project.PossiblyDumbAware
- sf:Companion:com.intellij.codeInsight.hints.declarative.InlayHintsProvider$Companion
- a:createCollector(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Editor):com.intellij.codeInsight.hints.declarative.InlayHintsCollector
- s:getINLAY_PAYLOADS():com.intellij.openapi.actionSystem.DataKey
- s:getPROVIDER_ID():com.intellij.openapi.actionSystem.DataKey
- s:getPROVIDER_NAME():com.intellij.openapi.actionSystem.DataKey
f:com.intellij.codeInsight.hints.declarative.InlayHintsProvider$Companion
- f:getINLAY_PAYLOADS():com.intellij.openapi.actionSystem.DataKey
- f:getPROVIDER_ID():com.intellij.openapi.actionSystem.DataKey
- f:getPROVIDER_NAME():com.intellij.openapi.actionSystem.DataKey
f:com.intellij.codeInsight.hints.declarative.InlayHintsProviderExtensionBean
- com.intellij.openapi.extensions.CustomLoadingExtensionPointBean
- com.intellij.util.KeyedLazyInstance
- sf:Companion:com.intellij.codeInsight.hints.declarative.InlayHintsProviderExtensionBean$Companion
- group:com.intellij.codeInsight.hints.InlayGroup
- <init>():V
- f:getBundle():java.lang.String
- f:getDescription():java.lang.String
- f:getDescriptionKey():java.lang.String
- f:getImplementationClass():java.lang.String
- getKey():java.lang.String
- f:getLanguage():java.lang.String
- f:getNameKey():java.lang.String
- f:getOptions():java.util.List
- f:getProviderId():java.lang.String
- f:getProviderName():java.lang.String
- f:isEnabledByDefault():Z
- f:requiredGroup():com.intellij.codeInsight.hints.InlayGroup
- f:requiredProviderId():java.lang.String
- f:setBundle(java.lang.String):V
- f:setDescriptionKey(java.lang.String):V
- f:setEnabledByDefault(Z):V
- f:setImplementationClass(java.lang.String):V
- f:setLanguage(java.lang.String):V
- f:setNameKey(java.lang.String):V
- f:setOptions(java.util.List):V
- f:setProviderId(java.lang.String):V
f:com.intellij.codeInsight.hints.declarative.InlayHintsProviderExtensionBean$Companion
- f:getEP():com.intellij.openapi.extensions.ExtensionPointName
com.intellij.codeInsight.hints.declarative.InlayHintsProviderFactory
- sf:Companion:com.intellij.codeInsight.hints.declarative.InlayHintsProviderFactory$Companion
- a:getProviderInfo(com.intellij.lang.Language,java.lang.String):com.intellij.codeInsight.hints.declarative.InlayProviderInfo
- a:getProvidersForLanguage(com.intellij.lang.Language):java.util.List
- a:getSupportedLanguages():java.util.Set
f:com.intellij.codeInsight.hints.declarative.InlayHintsProviderFactory$Companion
- f:getEP():com.intellij.openapi.extensions.ExtensionPointName
- f:getProviderInfo(com.intellij.lang.Language,java.lang.String):com.intellij.codeInsight.hints.declarative.InlayProviderInfo
- f:getProvidersForLanguage(com.intellij.lang.Language):java.util.List
f:com.intellij.codeInsight.hints.declarative.InlayOptionInfo
- <init>(java.lang.String,Z,java.lang.String):V
- equals(java.lang.Object):Z
- f:getId():java.lang.String
- f:getName():java.lang.String
- hashCode():I
- f:isEnabledByDefault():Z
f:com.intellij.codeInsight.hints.declarative.InlayPayload
- <init>(java.lang.String,com.intellij.codeInsight.hints.declarative.InlayActionPayload):V
- f:getPayload():com.intellij.codeInsight.hints.declarative.InlayActionPayload
- f:getPayloadName():java.lang.String
com.intellij.codeInsight.hints.declarative.InlayPosition
f:com.intellij.codeInsight.hints.declarative.InlayProviderInfo
- <init>(com.intellij.codeInsight.hints.declarative.InlayHintsProvider,java.lang.String,java.util.Set,Z,java.lang.String):V
- equals(java.lang.Object):Z
- f:getOptions():java.util.Set
- f:getProvider():com.intellij.codeInsight.hints.declarative.InlayHintsProvider
- f:getProviderId():java.lang.String
- f:getProviderName():java.lang.String
- hashCode():I
- f:isEnabledByDefault():Z
f:com.intellij.codeInsight.hints.declarative.InlayProviderOption
- sf:Companion:com.intellij.codeInsight.hints.declarative.InlayProviderOption$Companion
- <init>():V
- f:getBundle():java.lang.String
- f:getDescription(com.intellij.codeInsight.hints.declarative.InlayHintsProviderExtensionBean):java.lang.String
- f:getDescriptionBundleKey():java.lang.String
- f:getEnabledByDefault():Z
- f:getName(com.intellij.codeInsight.hints.declarative.InlayHintsProviderExtensionBean):java.lang.String
- f:getNameKey():java.lang.String
- f:getOptionId():java.lang.String
- f:requireOptionId():java.lang.String
- f:setBundle(java.lang.String):V
- f:setDescriptionBundleKey(java.lang.String):V
- f:setEnabledByDefault(Z):V
- f:setNameKey(java.lang.String):V
- f:setOptionId(java.lang.String):V
f:com.intellij.codeInsight.hints.declarative.InlayProviderOption$Companion
f:com.intellij.codeInsight.hints.declarative.InlayProviderPassInfo
- <init>(com.intellij.codeInsight.hints.declarative.InlayHintsProvider,java.lang.String,java.util.Map):V
- f:getOptionToEnabled():java.util.Map
- f:getProvider():com.intellij.codeInsight.hints.declarative.InlayHintsProvider
- f:getProviderId():java.lang.String
com.intellij.codeInsight.hints.declarative.InlayTreeSink
- a:addPresentation(com.intellij.codeInsight.hints.declarative.InlayPosition,java.util.List,java.lang.String,com.intellij.codeInsight.hints.declarative.HintFormat,kotlin.jvm.functions.Function1):V
- addPresentation(com.intellij.codeInsight.hints.declarative.InlayPosition,java.util.List,java.lang.String,Z,kotlin.jvm.functions.Function1):V
- bs:addPresentation$default(com.intellij.codeInsight.hints.declarative.InlayTreeSink,com.intellij.codeInsight.hints.declarative.InlayPosition,java.util.List,java.lang.String,com.intellij.codeInsight.hints.declarative.HintFormat,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- bs:addPresentation$default(com.intellij.codeInsight.hints.declarative.InlayTreeSink,com.intellij.codeInsight.hints.declarative.InlayPosition,java.util.List,java.lang.String,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- a:whenOptionEnabled(java.lang.String,kotlin.jvm.functions.Function0):V
f:com.intellij.codeInsight.hints.declarative.InlineInlayPosition
- com.intellij.codeInsight.hints.declarative.InlayPosition
- <init>(I,Z,I):V
- b:<init>(I,Z,I,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getOffset():I
- f:getPriority():I
- f:getRelatedToPrevious():Z
com.intellij.codeInsight.hints.declarative.OwnBypassCollector
- com.intellij.codeInsight.hints.declarative.InlayHintsCollector
- a:collectHintsForFile(com.intellij.psi.PsiFile,com.intellij.codeInsight.hints.declarative.InlayTreeSink):V
- getOptionsToToggle(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.util.Set
- shouldSuggestToggling(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
com.intellij.codeInsight.hints.declarative.PresentationTreeBuilder
- a:clickHandlerScope(com.intellij.codeInsight.hints.declarative.InlayActionData,kotlin.jvm.functions.Function1):V
- a:collapsibleList(com.intellij.codeInsight.hints.declarative.CollapseState,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):V
- bs:collapsibleList$default(com.intellij.codeInsight.hints.declarative.PresentationTreeBuilder,com.intellij.codeInsight.hints.declarative.CollapseState,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,I,java.lang.Object):V
- a:list(kotlin.jvm.functions.Function1):V
- a:text(java.lang.String,com.intellij.codeInsight.hints.declarative.InlayActionData):V
- bs:text$default(com.intellij.codeInsight.hints.declarative.PresentationTreeBuilder,java.lang.String,com.intellij.codeInsight.hints.declarative.InlayActionData,I,java.lang.Object):V
f:com.intellij.codeInsight.hints.declarative.PsiPointerInlayActionNavigationHandler
- com.intellij.codeInsight.hints.declarative.InlayActionHandler
- sf:Companion:com.intellij.codeInsight.hints.declarative.PsiPointerInlayActionNavigationHandler$Companion
- sf:HANDLER_ID:java.lang.String
- <init>():V
- handleClick(com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.declarative.InlayActionPayload):V
f:com.intellij.codeInsight.hints.declarative.PsiPointerInlayActionNavigationHandler$Companion
f:com.intellij.codeInsight.hints.declarative.PsiPointerInlayActionPayload
- com.intellij.codeInsight.hints.declarative.InlayActionPayload
- <init>(com.intellij.psi.SmartPsiElementPointer):V
- equals(java.lang.Object):Z
- f:getPointer():com.intellij.psi.SmartPsiElementPointer
- hashCode():I
com.intellij.codeInsight.hints.declarative.SharedBypassCollector
- com.intellij.codeInsight.hints.declarative.InlayHintsCollector
- a:collectFromElement(com.intellij.psi.PsiElement,com.intellij.codeInsight.hints.declarative.InlayTreeSink):V
- collectFromElementForActions(com.intellij.psi.PsiElement,com.intellij.codeInsight.hints.declarative.InlayTreeSink):V
f:com.intellij.codeInsight.hints.declarative.StringInlayActionPayload
- com.intellij.codeInsight.hints.declarative.InlayActionPayload
- <init>(java.lang.String):V
- equals(java.lang.Object):Z
- f:getText():java.lang.String
- hashCode():I
f:com.intellij.codeInsight.hints.declarative.SymbolPointerInlayActionPayload
- com.intellij.codeInsight.hints.declarative.InlayActionPayload
- <init>(com.intellij.model.Pointer):V
- equals(java.lang.Object):Z
- f:getPointer():com.intellij.model.Pointer
- hashCode():I
a:com.intellij.codeInsight.hints.presentation.BasePresentation
- com.intellij.codeInsight.hints.presentation.InlayPresentation
- <init>():V
- addListener(com.intellij.codeInsight.hints.presentation.PresentationListener):V
- fireContentChanged(java.awt.Rectangle):V
- fireSizeChanged(java.awt.Dimension,java.awt.Dimension):V
- removeListener(com.intellij.codeInsight.hints.presentation.PresentationListener):V
com.intellij.codeInsight.hints.presentation.InputHandler
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
- mousePressed(java.awt.event.MouseEvent,java.awt.Point):V
- mouseReleased(java.awt.event.MouseEvent,java.awt.Point):V
- translatePoint(java.awt.Point):java.awt.Point
com.intellij.codeInsight.hints.presentation.PresentationListener
- a:contentChanged(java.awt.Rectangle):V
- a:sizeChanged(java.awt.Dimension,java.awt.Dimension):V
c:com.intellij.codeInsight.hints.presentation.RecursivelyUpdatingRootPresentation
- com.intellij.codeInsight.hints.presentation.BasePresentation
- com.intellij.codeInsight.hints.presentation.RootInlayPresentation
- sf:Companion:com.intellij.codeInsight.hints.presentation.RecursivelyUpdatingRootPresentation$Companion
- <init>(com.intellij.codeInsight.hints.presentation.InlayPresentation):V
- getContent():com.intellij.codeInsight.hints.presentation.InlayPresentation
- getHeight():I
- getKey():com.intellij.codeInsight.hints.ContentKey
- getWidth():I
- mouseClicked(java.awt.event.MouseEvent,java.awt.Point):V
- mouseExited():V
- mouseMoved(java.awt.event.MouseEvent,java.awt.Point):V
- mousePressed(java.awt.event.MouseEvent,java.awt.Point):V
- paint(java.awt.Graphics2D,com.intellij.openapi.editor.markup.TextAttributes):V
- update(com.intellij.codeInsight.hints.presentation.InlayPresentation,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.InlayPresentationFactory):Z
f:com.intellij.codeInsight.hints.presentation.RecursivelyUpdatingRootPresentation$Companion
f:com.intellij.codeInsight.hints.presentation.RecursivelyUpdatingRootPresentation$MyPresentationListener
- com.intellij.codeInsight.hints.presentation.PresentationListener
- <init>(com.intellij.codeInsight.hints.presentation.RecursivelyUpdatingRootPresentation):V
- contentChanged(java.awt.Rectangle):V
- sizeChanged(java.awt.Dimension,java.awt.Dimension):V
com.intellij.codeInsight.hints.presentation.RootInlayPresentation
- com.intellij.codeInsight.hints.presentation.InlayPresentation
- a:getContent():java.lang.Object
- a:getKey():com.intellij.codeInsight.hints.ContentKey
- a:update(java.lang.Object,com.intellij.openapi.editor.Editor,com.intellij.codeInsight.hints.InlayPresentationFactory):Z
f:com.intellij.codeInsight.hints.settings.Diff
- sf:Builder:com.intellij.codeInsight.hints.settings.Diff$Builder
- <init>(java.util.Set,java.util.Set):V
- f:applyOn(java.util.Set):java.util.Set
- f:getAdded():java.util.Set
- f:getRemoved():java.util.Set
f:com.intellij.codeInsight.hints.settings.Diff$Builder
- f:build(java.util.Set,java.util.Set):com.intellij.codeInsight.hints.settings.Diff
com.intellij.codeInsight.hints.settings.InlayGroupSettingProvider
- a:apply():V
- a:getComponent():javax.swing.JComponent
- a:getGroup():com.intellij.codeInsight.hints.InlayGroup
- a:isEnabled():Z
- a:isModified():Z
- a:reset():V
- a:setEnabled(Z):V
f:com.intellij.codeInsight.hints.settings.InlayGroupSettingProvider$EP
- sf:INSTANCE:com.intellij.codeInsight.hints.settings.InlayGroupSettingProvider$EP
- f:findForGroup(com.intellij.codeInsight.hints.InlayGroup):com.intellij.codeInsight.hints.settings.InlayGroupSettingProvider
- f:getEXTENSION_POINT_NAME():com.intellij.openapi.extensions.ExtensionPointName
a:com.intellij.codeInsight.hints.settings.InlayProviderSettingsModel
- <init>(Z,java.lang.String,com.intellij.lang.Language):V
- a:apply():V
- collectAndApply(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- collectData(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):java.lang.Runnable
- createFile(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.Document):com.intellij.psi.PsiFile
- createFile(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.editor.Document,java.lang.String):com.intellij.psi.PsiFile
- a:getCaseDescription(com.intellij.codeInsight.hints.ImmediateConfigurable$Case):java.lang.String
- a:getCasePreview(com.intellij.codeInsight.hints.ImmediateConfigurable$Case):java.lang.String
- a:getCasePreviewLanguage(com.intellij.codeInsight.hints.ImmediateConfigurable$Case):com.intellij.lang.Language
- a:getCases():java.util.List
- a:getComponent():javax.swing.JComponent
- a:getDescription():java.lang.String
- getGroup():com.intellij.codeInsight.hints.InlayGroup
- f:getId():java.lang.String
- f:getLanguage():com.intellij.lang.Language
- a:getMainCheckBoxLabel():java.lang.String
- a:getName():java.lang.String
- f:getOnChangeListener():com.intellij.codeInsight.hints.ChangeListener
- a:getPreviewText():java.lang.String
- f:isEnabled():Z
- f:isMergedNode():Z
- a:isModified():Z
- a:reset():V
- f:setEnabled(Z):V
- f:setMergedNode(Z):V
- f:setOnChangeListener(com.intellij.codeInsight.hints.ChangeListener):V
com.intellij.codeInsight.hints.settings.InlaySettingsProvider
- a:createModels(com.intellij.openapi.project.Project,com.intellij.lang.Language):java.util.List
- getDependencies():java.util.Collection
- a:getSupportedLanguages(com.intellij.openapi.project.Project):java.util.Collection
f:com.intellij.codeInsight.hints.settings.InlaySettingsProvider$EP
- sf:INSTANCE:com.intellij.codeInsight.hints.settings.InlaySettingsProvider$EP
- f:getEXTENSION_POINT_NAME():com.intellij.openapi.extensions.ExtensionPointName
- f:getExtensions():java.util.List
f:com.intellij.codeInsight.hints.settings.ParameterNameHintsSettings
- com.intellij.openapi.components.PersistentStateComponent
- sf:Companion:com.intellij.codeInsight.hints.settings.ParameterNameHintsSettings$Companion
- <init>():V
- f:addIgnorePattern(com.intellij.lang.Language,java.lang.String):V
- f:getExcludeListDiff(com.intellij.lang.Language):com.intellij.codeInsight.hints.settings.Diff
- sf:getInstance():com.intellij.codeInsight.hints.settings.ParameterNameHintsSettings
- f:getOption(java.lang.String):java.lang.Boolean
- getState():org.jdom.Element
- f:isEnabledForLanguage(com.intellij.lang.Language):Z
- loadState(org.jdom.Element):V
- f:setExcludeListDiff(com.intellij.lang.Language,com.intellij.codeInsight.hints.settings.Diff):V
- f:setIsEnabledForLanguage(Z,com.intellij.lang.Language):V
- f:setOption(java.lang.String,java.lang.Boolean):V
f:com.intellij.codeInsight.hints.settings.ParameterNameHintsSettings$Companion
- f:getInstance():com.intellij.codeInsight.hints.settings.ParameterNameHintsSettings
a:com.intellij.codeInsight.intention.AbstractIntentionAction
- com.intellij.codeInsight.intention.IntentionAction
- <init>():V
- getFamilyName():java.lang.String
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
a:com.intellij.codeInsight.intention.BaseElementAtCaretIntentionAction
- com.intellij.codeInsight.intention.impl.BaseIntentionAction
- <init>():V
- p:checkFile(com.intellij.psi.PsiFile):Z
- p:getElement(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- a:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):V
- f:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- a:isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):Z
- f:isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
a:com.intellij.codeInsight.intention.PsiElementBaseIntentionAction
- com.intellij.codeInsight.intention.impl.BaseIntentionAction
- <init>():V
- checkFile(com.intellij.psi.PsiFile):Z
- ps:getElement(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- a:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):V
- f:invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- a:isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement):Z
- f:isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
f:com.intellij.codeInsight.intention.impl.PriorityIntentionActionWrapper
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.codeInsight.intention.IntentionActionDelegate
- com.intellij.codeInsight.intention.PriorityAction
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getDelegate():com.intellij.codeInsight.intention.IntentionAction
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- getPriority():com.intellij.codeInsight.intention.PriorityAction$Priority
- getText():java.lang.String
- s:highPriority(com.intellij.codeInsight.intention.IntentionAction):com.intellij.codeInsight.intention.IntentionAction
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- s:lowPriority(com.intellij.codeInsight.intention.IntentionAction):com.intellij.codeInsight.intention.IntentionAction
- s:normalPriority(com.intellij.codeInsight.intention.IntentionAction):com.intellij.codeInsight.intention.IntentionAction
- startInWriteAction():Z
a:com.intellij.codeInsight.intention.numeric.AbstractNumberConversionIntention
- com.intellij.modcommand.ModCommandAction
- <init>():V
- pa:extract(com.intellij.psi.PsiElement):com.intellij.codeInsight.intention.numeric.AbstractNumberConversionIntention$NumberConversionContext
- pa:getConverters(com.intellij.psi.PsiFile):java.util.List
- getFamilyName():java.lang.String
- getPresentation(com.intellij.modcommand.ActionContext):com.intellij.modcommand.Presentation
- perform(com.intellij.modcommand.ActionContext):com.intellij.modcommand.ModCommand
- pa:replace(com.intellij.psi.PsiElement,java.lang.String):V
pc:com.intellij.codeInsight.intention.numeric.AbstractNumberConversionIntention$NumberConversionContext
- <init>(com.intellij.psi.PsiElement,java.lang.Number,java.lang.String,Z):V
- getProject():com.intellij.openapi.project.Project
com.intellij.codeInsight.intention.numeric.NumberConverter
- a:getConvertedText(java.lang.String,java.lang.Number):java.lang.String
- a:toString():java.lang.String
com.intellij.codeInsight.lookup.InsertHandlerDecorator
- com.intellij.codeInsight.completion.InsertHandler
com.intellij.codeInsight.navigation.MethodNavigationOffsetProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getMethodNavigationOffsets(com.intellij.psi.PsiFile,I):I[]
com.intellij.codeInsight.preview.ElementPreviewProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:hide(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor):V
- a:isSupportedFile(com.intellij.psi.PsiFile):Z
- a:show(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Editor,java.awt.Point,Z):V
c:com.intellij.codeInsight.template.impl.TextExpression
- com.intellij.codeInsight.template.Expression
- <init>(java.lang.String):V
- calculateLookupItems(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.lookup.LookupElement[]
- calculateResult(com.intellij.codeInsight.template.ExpressionContext):com.intellij.codeInsight.template.Result
- requiresCommittedPSI():Z
c:com.intellij.codeInspection.IntentionWrapper
- com.intellij.codeInsight.intention.CustomizableIntentionActionDelegate
- com.intellij.codeInsight.intention.IntentionAction
- com.intellij.codeInspection.ActionClassHolder
- com.intellij.codeInspection.LocalQuickFix
- <init>(com.intellij.codeInsight.intention.IntentionAction):V
- applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- generatePreview(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):com.intellij.codeInsight.intention.preview.IntentionPreviewInfo
- getAction():com.intellij.codeInsight.intention.IntentionAction
- getActionClass():java.lang.Class
- getDelegate():com.intellij.codeInsight.intention.IntentionAction
- getElementToMakeWritable(com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- getFamilyName():java.lang.String
- getName():java.lang.String
- getText():java.lang.String
- invoke(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
- startInWriteAction():Z
- s:wrapToQuickFix(com.intellij.codeInsight.intention.IntentionAction,com.intellij.psi.PsiFile):com.intellij.codeInspection.LocalQuickFix
- s:wrapToQuickFixes(java.util.List,com.intellij.psi.PsiFile):java.util.List
- s:wrapToQuickFixes(com.intellij.codeInsight.intention.IntentionAction[],com.intellij.psi.PsiFile):com.intellij.codeInspection.LocalQuickFix[]
com.intellij.codeInspection.RefactoringQuickFix
- com.intellij.codeInspection.LocalQuickFix
- applyFix(com.intellij.openapi.project.Project,com.intellij.codeInspection.ProblemDescriptor):V
- doFix(com.intellij.psi.PsiElement):V
- enhanceDataContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DataContext
- getElementToRefactor(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:getHandler():com.intellij.refactoring.RefactoringActionHandler
- getHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.refactoring.RefactoringActionHandler
- startInWriteAction():Z
c:com.intellij.codeInspection.offline.OfflineProblemDescriptor
- <init>():V
- equals(java.lang.Object):Z
- getDescription():java.lang.String
- getFQName():java.lang.String
- getHints():java.util.List
- getLine():I
- getModuleName():java.lang.String
- getOffset():I
- getProblemIndex():I
- getRefElement(com.intellij.codeInspection.reference.RefManager):com.intellij.codeInspection.reference.RefEntity
- getType():java.lang.String
- hashCode():I
- setDescription(java.lang.String):V
- setFQName(java.lang.String):V
- setHints(java.util.List):V
- setLine(I):V
- setModule(java.lang.String):V
- setOffset(I):V
- setProblemIndex(I):V
- setType(java.lang.String):V
c:com.intellij.codeInspection.ui.InspectionOptionsPanel
- javax.swing.JPanel
- <init>():V
- <init>(com.intellij.codeInspection.InspectionProfileEntry):V
- <init>(com.intellij.codeInspection.ui.OptionAccessor):V
- add(java.awt.Component):java.awt.Component
- addCheckbox(java.lang.String,java.lang.String):V
- addCheckboxEx(java.lang.String,java.lang.String):javax.swing.JCheckBox
- addComponent(javax.swing.JComponent):V
- addDependentCheckBox(java.lang.String,java.lang.String,javax.swing.JCheckBox):javax.swing.JCheckBox
- addGlueIfNeeded():V
- addGrowing(java.awt.Component):V
- addGrowingX(java.awt.Component):V
- addLabeledRow(java.lang.String,java.awt.Component):V
- addRow(java.awt.Component,java.awt.Component):V
- s:getMinimumListSize():java.awt.Dimension
- s:getMinimumLongListSize():java.awt.Dimension
- s:singleCheckBox(com.intellij.codeInspection.InspectionProfileEntry,java.lang.String,java.lang.String):com.intellij.codeInspection.ui.InspectionOptionsPanel
c:com.intellij.codeInspection.ui.ListEditForm
- <init>(java.lang.String,java.lang.String,java.util.List):V
- <init>(java.lang.String,java.lang.String,java.util.List,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.util.List,java.lang.String,java.util.function.Function):V
- <init>(java.lang.String,java.util.List):V
- getContentPanel():javax.swing.JComponent
c:com.intellij.codeInspection.ui.ListTable
- com.intellij.ui.table.JBTable
- <init>(com.intellij.codeInspection.ui.ListWrappingTableModel):V
- getModel():com.intellij.codeInspection.ui.ListWrappingTableModel
- prepareRenderer(javax.swing.table.TableCellRenderer,I,I):java.awt.Component
- setModel(javax.swing.table.TableModel):V
c:com.intellij.codeInspection.ui.ListWrappingTableModel
- javax.swing.table.AbstractTableModel
- com.intellij.util.ui.ItemRemovable
- <init>(java.util.List,java.lang.String):V
- <init>(java.util.List,java.lang.String[]):V
- addRow():V
- addRow(java.lang.String[]):V
- getColumnClass(I):java.lang.Class
- getColumnCount():I
- getColumnName(I):java.lang.String
- getRowCount():I
- getValueAt(I,I):java.lang.Object
- indexOf(java.lang.String,I):I
- isCellEditable(I,I):Z
- removeRow(I):V
- setValueAt(java.lang.Object,I,I):V
c:com.intellij.codeInspection.ui.MultipleCheckboxOptionsPanel
- com.intellij.codeInspection.ui.InspectionOptionsPanel
- <init>(com.intellij.codeInspection.InspectionProfileEntry):V
- <init>(com.intellij.codeInspection.ui.OptionAccessor):V
c:com.intellij.codeInspection.ui.RegExFormatter
- javax.swing.text.DefaultFormatter
- <init>():V
- stringToValue(java.lang.String):java.lang.Object
- valueToString(java.lang.Object):java.lang.String
c:com.intellij.codeInspection.ui.RegExInputVerifier
- javax.swing.InputVerifier
- <init>():V
- shouldYieldFocus(javax.swing.JComponent):Z
- verify(javax.swing.JComponent):Z
c:com.intellij.codeInspection.ui.SingleCheckboxOptionsPanel
- com.intellij.codeInspection.ui.InspectionOptionsPanel
- <init>(java.lang.String,com.intellij.codeInspection.InspectionProfileEntry,java.lang.String):V
c:com.intellij.codeInspection.ui.SingleIntegerFieldOptionsPanel
- com.intellij.codeInspection.ui.InspectionOptionsPanel
- <init>(java.lang.String,com.intellij.codeInspection.InspectionProfileEntry,java.lang.String):V
- <init>(java.lang.String,com.intellij.codeInspection.InspectionProfileEntry,java.lang.String,I):V
- s:createIntegerFieldTrackingValue(com.intellij.codeInspection.InspectionProfileEntry,java.lang.String,I):javax.swing.JFormattedTextField
- s:setupIntegerFieldTrackingValue(javax.swing.JFormattedTextField,com.intellij.codeInspection.InspectionProfileEntry,java.lang.String):V
com.intellij.codeInspection.ui.StringValidatorWithSwingSelector
- com.intellij.codeInspection.options.StringValidator
- a:select(com.intellij.openapi.project.Project):java.lang.String
c:com.intellij.execution.ExecutionAdapter
- com.intellij.execution.ExecutionListener
- <init>():V
a:com.intellij.execution.ExecutionTargetProvider
- sf:EXTENSION_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getTargets(com.intellij.openapi.project.Project,com.intellij.execution.configurations.RunConfiguration):java.util.List
f:com.intellij.execution.RunConfigurationConfigurableAdapter
- com.intellij.openapi.options.SettingsEditorConfigurable
- <init>(com.intellij.openapi.options.SettingsEditor,com.intellij.execution.configurations.RunConfiguration):V
- getConfiguration():com.intellij.execution.configurations.RunConfiguration
- getDisplayName():java.lang.String
f:com.intellij.execution.RunConfigurationProducerService
- com.intellij.openapi.components.PersistentStateComponent
- <init>():V
- addIgnoredProducer(java.lang.Class):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.execution.RunConfigurationProducerService
- getState():com.intellij.execution.RunConfigurationProducerService$State
- isIgnored(com.intellij.execution.actions.RunConfigurationProducer):Z
- loadState(com.intellij.execution.RunConfigurationProducerService$State):V
f:com.intellij.execution.RunConfigurationProducerService$State
- ignoredProducers:java.util.Set
- <init>():V
f:com.intellij.execution.RunnerRegistry
- <init>():V
- s:getInstance():com.intellij.execution.RunnerRegistry
- getRunner(java.lang.String,com.intellij.execution.configurations.RunProfile):com.intellij.execution.runners.ProgramRunner
a:com.intellij.execution.actions.CompatibleRunConfigurationProducer
- com.intellij.execution.actions.RunConfigurationProducer
- p:<init>():V
- pa:isConfigurationFromCompatibleContext(com.intellij.execution.configurations.RunConfiguration,com.intellij.execution.actions.ConfigurationContext):Z
- f:isConfigurationFromContext(com.intellij.execution.configurations.RunConfiguration,com.intellij.execution.actions.ConfigurationContext):Z
- p:isContextCompatible(com.intellij.execution.actions.ConfigurationContext):Z
- pa:setupConfigurationFromCompatibleContext(com.intellij.execution.configurations.RunConfiguration,com.intellij.execution.actions.ConfigurationContext,com.intellij.openapi.util.Ref):Z
- p:setupConfigurationFromContext(com.intellij.execution.configurations.RunConfiguration,com.intellij.execution.actions.ConfigurationContext,com.intellij.openapi.util.Ref):Z
c:com.intellij.execution.actions.ConfigurationContext
- sf:SHARED_CONTEXT:com.intellij.openapi.util.Key
- <init>(com.intellij.psi.PsiElement):V
- containsMultipleSelection():Z
- createConfigurationsFromContext():java.util.List
- s:createEmptyContextForLocation(com.intellij.execution.Location):com.intellij.execution.actions.ConfigurationContext
- findExisting():com.intellij.execution.RunnerAndConfigurationSettings
- getConfiguration():com.intellij.execution.RunnerAndConfigurationSettings
- getConfigurationsFromContext():java.util.List
- getDataContext():com.intellij.openapi.actionSystem.DataContext
- getDefaultDataContext():com.intellij.openapi.actionSystem.DataContext
- s:getFromContext(com.intellij.openapi.actionSystem.DataContext):com.intellij.execution.actions.ConfigurationContext
- s:getFromContext(com.intellij.openapi.actionSystem.DataContext,java.lang.String):com.intellij.execution.actions.ConfigurationContext
- s:getFromEvent(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.execution.actions.ConfigurationContext
- getLocation():com.intellij.execution.Location
- getModule():com.intellij.openapi.module.Module
- getOriginalConfiguration(com.intellij.execution.configurations.ConfigurationType):com.intellij.execution.configurations.RunConfiguration
- getPlace():java.lang.String
- getProject():com.intellij.openapi.project.Project
- getPsiLocation():com.intellij.psi.PsiElement
- getRunManager():com.intellij.execution.RunManager
- isCompatibleWithOriginalRunConfiguration(com.intellij.execution.configurations.ConfigurationType):Z
- setConfiguration(com.intellij.execution.RunnerAndConfigurationSettings):V
a:com.intellij.execution.actions.ConfigurationFromContext
- sf:COMPARATOR:java.util.Comparator
- sf:NAME_COMPARATOR:java.util.Comparator
- <init>():V
- getAlternativeLocationDisplayName():java.lang.String
- getConfiguration():com.intellij.execution.configurations.RunConfiguration
- a:getConfigurationSettings():com.intellij.execution.RunnerAndConfigurationSettings
- getConfigurationType():com.intellij.execution.configurations.ConfigurationType
- a:getSourceElement():com.intellij.psi.PsiElement
- isFromAlternativeLocation():Z
- isPreferredTo(com.intellij.execution.actions.ConfigurationFromContext):Z
- isProducedBy(java.lang.Class):Z
- onFirstRun(com.intellij.execution.actions.ConfigurationContext,java.lang.Runnable):V
- setAlternativeLocationDisplayName(java.lang.String):V
- a:setConfigurationSettings(com.intellij.execution.RunnerAndConfigurationSettings):V
- setFromAlternativeLocation(Z):V
- shouldReplace(com.intellij.execution.actions.ConfigurationFromContext):Z
c:com.intellij.execution.actions.ConfigurationFromContextImpl
- com.intellij.execution.actions.ConfigurationFromContext
- <init>(com.intellij.execution.actions.RunConfigurationProducer,com.intellij.execution.RunnerAndConfigurationSettings,com.intellij.psi.PsiElement):V
- getConfigurationProducer():com.intellij.execution.actions.RunConfigurationProducer
- getConfigurationSettings():com.intellij.execution.RunnerAndConfigurationSettings
- getSourceElement():com.intellij.psi.PsiElement
- isPreferredTo(com.intellij.execution.actions.ConfigurationFromContext):Z
- isProducedBy(java.lang.Class):Z
- onFirstRun(com.intellij.execution.actions.ConfigurationContext,java.lang.Runnable):V
- setConfigurationSettings(com.intellij.execution.RunnerAndConfigurationSettings):V
- shouldReplace(com.intellij.execution.actions.ConfigurationFromContext):Z
a:com.intellij.execution.actions.ConsoleActionsPostProcessor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- postProcess(com.intellij.execution.ui.ConsoleView,com.intellij.openapi.actionSystem.AnAction[]):com.intellij.openapi.actionSystem.AnAction[]
- postProcessPopupActions(com.intellij.execution.ui.ConsoleView,com.intellij.openapi.actionSystem.AnAction[]):com.intellij.openapi.actionSystem.AnAction[]
a:com.intellij.execution.actions.LazyRunConfigurationProducer
- com.intellij.execution.actions.RunConfigurationProducer
- <init>():V
- a:getConfigurationFactory():com.intellij.execution.configurations.ConfigurationFactory
a:com.intellij.execution.actions.MultipleRunLocationsProvider
- sf:Companion:com.intellij.execution.actions.MultipleRunLocationsProvider$Companion
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- sf:findAlternativeLocations(com.intellij.execution.Location):com.intellij.execution.actions.MultipleRunLocationsProvider$AlternativeLocationsInfo
- a:getAlternativeLocations(com.intellij.execution.Location):java.util.List
- a:getLocationDisplayName(com.intellij.execution.Location,com.intellij.execution.Location):java.lang.String
f:com.intellij.execution.actions.MultipleRunLocationsProvider$AlternativeLocationsInfo
- <init>(com.intellij.execution.actions.MultipleRunLocationsProvider,java.util.List):V
- f:component1():com.intellij.execution.actions.MultipleRunLocationsProvider
- f:component2():java.util.List
- f:copy(com.intellij.execution.actions.MultipleRunLocationsProvider,java.util.List):com.intellij.execution.actions.MultipleRunLocationsProvider$AlternativeLocationsInfo
- bs:copy$default(com.intellij.execution.actions.MultipleRunLocationsProvider$AlternativeLocationsInfo,com.intellij.execution.actions.MultipleRunLocationsProvider,java.util.List,I,java.lang.Object):com.intellij.execution.actions.MultipleRunLocationsProvider$AlternativeLocationsInfo
- equals(java.lang.Object):Z
- f:getAlternativeLocations():java.util.List
- f:getProvider():com.intellij.execution.actions.MultipleRunLocationsProvider
- hashCode():I
f:com.intellij.execution.actions.MultipleRunLocationsProvider$Companion
- f:findAlternativeLocations(com.intellij.execution.Location):com.intellij.execution.actions.MultipleRunLocationsProvider$AlternativeLocationsInfo
a:com.intellij.execution.actions.RunConfigurationProducer
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(com.intellij.execution.configurations.ConfigurationFactory):V
- p:<init>(com.intellij.execution.configurations.ConfigurationType):V
- p:<init>(java.lang.Class):V
- <init>(Z):V
- p:cloneTemplateConfiguration(com.intellij.execution.actions.ConfigurationContext):com.intellij.execution.RunnerAndConfigurationSettings
- ps:cloneTemplateConfigurationStatic(com.intellij.execution.actions.ConfigurationContext,com.intellij.execution.configurations.ConfigurationFactory):com.intellij.execution.RunnerAndConfigurationSettings
- createConfigurationFromContext(com.intellij.execution.actions.ConfigurationContext):com.intellij.execution.actions.ConfigurationFromContext
- createLightConfiguration(com.intellij.execution.actions.ConfigurationContext):com.intellij.execution.configurations.RunConfiguration
- findExistingConfiguration(com.intellij.execution.actions.ConfigurationContext):com.intellij.execution.RunnerAndConfigurationSettings
- findOrCreateConfigurationFromContext(com.intellij.execution.actions.ConfigurationContext):com.intellij.execution.actions.ConfigurationFromContext
- getConfigurationFactory():com.intellij.execution.configurations.ConfigurationFactory
- p:getConfigurationSettingsList(com.intellij.execution.RunManager):java.util.List
- f:getConfigurationType():com.intellij.execution.configurations.ConfigurationType
- s:getInstance(java.lang.Class):com.intellij.execution.actions.RunConfigurationProducer
- s:getProducers(com.intellij.openapi.project.Project):java.util.List
- a:isConfigurationFromContext(com.intellij.execution.configurations.RunConfiguration,com.intellij.execution.actions.ConfigurationContext):Z
- isPreferredConfiguration(com.intellij.execution.actions.ConfigurationFromContext,com.intellij.execution.actions.ConfigurationFromContext):Z
- onFirstRun(com.intellij.execution.actions.ConfigurationFromContext,com.intellij.execution.actions.ConfigurationContext,java.lang.Runnable):V
- pa:setupConfigurationFromContext(com.intellij.execution.configurations.RunConfiguration,com.intellij.execution.actions.ConfigurationContext,com.intellij.openapi.util.Ref):Z
- shouldReplace(com.intellij.execution.actions.ConfigurationFromContext,com.intellij.execution.actions.ConfigurationFromContext):Z
a:com.intellij.execution.dashboard.RunDashboardCustomizer
- sf:NODE_LINKS:com.intellij.openapi.util.Key
- <init>():V
- canDrop(com.intellij.execution.dashboard.RunDashboardRunConfigurationNode,com.intellij.ide.dnd.DnDEvent):Z
- drop(com.intellij.execution.dashboard.RunDashboardRunConfigurationNode,com.intellij.ide.dnd.DnDEvent):V
- getChildren(com.intellij.execution.dashboard.RunDashboardRunConfigurationNode):java.util.Collection
- getPsiElement(com.intellij.execution.dashboard.RunDashboardRunConfigurationNode):com.intellij.psi.PsiElement
- getStatus(com.intellij.execution.dashboard.RunDashboardRunConfigurationNode):com.intellij.execution.dashboard.RunDashboardRunConfigurationStatus
- a:isApplicable(com.intellij.execution.RunnerAndConfigurationSettings,com.intellij.execution.ui.RunContentDescriptor):Z
- updatePresentation(com.intellij.ide.projectView.PresentationData,com.intellij.execution.dashboard.RunDashboardRunConfigurationNode):Z
com.intellij.execution.dashboard.RunDashboardDefaultTypesProvider
- a:getDefaultTypeIds(com.intellij.openapi.project.Project):java.util.Collection
com.intellij.execution.dashboard.RunDashboardGroup
- a:getIcon():javax.swing.Icon
- a:getName():java.lang.String
com.intellij.execution.dashboard.RunDashboardGroupingRule
- a:getGroup(com.intellij.ide.util.treeView.AbstractTreeNode):com.intellij.execution.dashboard.RunDashboardGroup
- a:getName():java.lang.String
com.intellij.execution.dashboard.RunDashboardNode
- getContent():com.intellij.ui.content.Content
- getDescriptor():com.intellij.execution.ui.RunContentDescriptor
- a:getProject():com.intellij.openapi.project.Project
- getRemover():java.lang.Runnable
com.intellij.execution.dashboard.RunDashboardRunConfigurationNode
- com.intellij.execution.dashboard.RunDashboardNode
- com.intellij.openapi.util.UserDataHolder
- a:getConfigurationSettings():com.intellij.execution.RunnerAndConfigurationSettings
- a:getCustomizers():java.util.List
- a:getStatus():com.intellij.execution.dashboard.RunDashboardRunConfigurationStatus
c:com.intellij.execution.dashboard.RunDashboardRunConfigurationStatus
- com.intellij.ide.util.treeView.WeighedItem
- sf:CONFIGURED:com.intellij.execution.dashboard.RunDashboardRunConfigurationStatus
- sf:FAILED:com.intellij.execution.dashboard.RunDashboardRunConfigurationStatus
- sf:STARTED:com.intellij.execution.dashboard.RunDashboardRunConfigurationStatus
- sf:STOPPED:com.intellij.execution.dashboard.RunDashboardRunConfigurationStatus
- <init>(java.lang.String,javax.swing.Icon,I):V
- getIcon():javax.swing.Icon
- getName():java.lang.String
- s:getStatus(com.intellij.execution.dashboard.RunDashboardRunConfigurationNode):com.intellij.execution.dashboard.RunDashboardRunConfigurationStatus
- getWeight():I
c:com.intellij.execution.filters.CompositeFilter
- com.intellij.execution.filters.Filter
- com.intellij.execution.filters.FilterMixin
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,java.util.List):V
- addFilter(com.intellij.execution.filters.Filter):V
- applyFilter(java.lang.String,I):com.intellij.execution.filters.Filter$Result
- applyHeavyFilter(com.intellij.openapi.editor.Document,I,I,com.intellij.util.Consumer):V
- getFilters():java.util.List
- getUpdateMessage():java.lang.String
- ps:intersects(java.util.List,com.intellij.execution.filters.Filter$ResultItem):Z
- isAnyHeavy():Z
- isEmpty():Z
- setForceUseAllFilters(Z):V
- shouldRunHeavy():Z
c:com.intellij.execution.filters.CompositeFilter$ApplyFilterException
- java.lang.RuntimeException
c:com.intellij.execution.filters.CompositeInputFilter
- com.intellij.execution.filters.InputFilter
- <init>(com.intellij.openapi.project.Project,java.util.Collection):V
- applyFilter(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType):java.util.List
a:com.intellij.execution.filters.ConsoleDependentFilterProvider
- com.intellij.execution.filters.ConsoleFilterProvider
- <init>():V
- a:getDefaultFilters(com.intellij.execution.ui.ConsoleView,com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope):com.intellij.execution.filters.Filter[]
- getDefaultFilters(com.intellij.openapi.project.Project):com.intellij.execution.filters.Filter[]
a:com.intellij.execution.filters.ConsoleDependentInputFilterProvider
- com.intellij.execution.filters.ConsoleInputFilterProvider
- <init>():V
- a:getDefaultFilters(com.intellij.execution.ui.ConsoleView,com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope):java.util.List
- f:getDefaultFilters(com.intellij.openapi.project.Project):com.intellij.execution.filters.InputFilter[]
com.intellij.execution.filters.ConsoleFilterProvider
- sf:FILTER_PROVIDERS:com.intellij.openapi.extensions.ExtensionPointName
- a:getDefaultFilters(com.intellij.openapi.project.Project):com.intellij.execution.filters.Filter[]
com.intellij.execution.filters.ConsoleFilterProviderEx
- com.intellij.execution.filters.ConsoleFilterProvider
- a:getDefaultFilters(com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope):com.intellij.execution.filters.Filter[]
com.intellij.execution.filters.ConsoleInputFilterProvider
- sf:INPUT_FILTER_PROVIDERS:com.intellij.openapi.extensions.ExtensionPointName
- a:getDefaultFilters(com.intellij.openapi.project.Project):com.intellij.execution.filters.InputFilter[]
com.intellij.execution.filters.FileHyperlinkInfo
- com.intellij.execution.filters.HyperlinkInfo
- a:getDescriptor():com.intellij.openapi.fileEditor.OpenFileDescriptor
a:com.intellij.execution.filters.FileHyperlinkInfoBase
- com.intellij.execution.filters.FileHyperlinkInfo
- <init>(com.intellij.openapi.project.Project,I,I):V
- <init>(com.intellij.openapi.project.Project,I,I,Z):V
- b:<init>(com.intellij.openapi.project.Project,I,I,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- p:calculateOffset(com.intellij.openapi.editor.Document,I,I):java.lang.Integer
- getDescriptor():com.intellij.openapi.fileEditor.OpenFileDescriptor
- pa:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- navigate(com.intellij.openapi.project.Project):V
com.intellij.execution.filters.FilterMixin
- a:applyHeavyFilter(com.intellij.openapi.editor.Document,I,I,com.intellij.util.Consumer):V
- a:getUpdateMessage():java.lang.String
- a:shouldRunHeavy():Z
c:com.intellij.execution.filters.FilterMixin$AdditionalHighlight
- com.intellij.execution.filters.Filter$Result
- <init>(I,I):V
- <init>(java.util.List):V
- getTextAttributes(com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.markup.TextAttributes
a:com.intellij.execution.filters.HyperlinkInfoFactory
- <init>():V
- a:createMultipleFilesHyperlinkInfo(java.util.List,I,com.intellij.openapi.project.Project):com.intellij.execution.filters.HyperlinkInfo
- a:createMultipleFilesHyperlinkInfo(java.util.List,I,com.intellij.openapi.project.Project,com.intellij.execution.filters.HyperlinkInfoFactory$HyperlinkHandler):com.intellij.execution.filters.HyperlinkInfo
- a:createMultiplePsiElementHyperlinkInfo(java.util.Collection):com.intellij.execution.filters.HyperlinkInfo
- s:getInstance():com.intellij.execution.filters.HyperlinkInfoFactory
com.intellij.execution.filters.HyperlinkInfoFactory$HyperlinkHandler
- a:onLinkFollowed(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.Editor,com.intellij.openapi.editor.Editor):V
com.intellij.execution.filters.InputFilter
- a:applyFilter(java.lang.String,com.intellij.execution.ui.ConsoleViewContentType):java.util.List
c:com.intellij.execution.filters.InvalidExpressionException
- java.lang.IllegalArgumentException
- <init>(java.lang.String):V
c:com.intellij.execution.filters.LazyFileHyperlinkInfo
- com.intellij.execution.filters.FileHyperlinkInfoBase
- <init>(com.intellij.openapi.project.Project,java.lang.String,I,I):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,I,I,Z):V
- b:<init>(com.intellij.openapi.project.Project,java.lang.String,I,I,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- p:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
com.intellij.execution.filters.LineNumbersMapping
- sf:LINE_NUMBERS_MAPPING_KEY:com.intellij.openapi.util.Key
- a:bytecodeToSource(I):I
- a:sourceToBytecode(I):I
c:com.intellij.execution.filters.LineNumbersMapping$ArrayBasedMapping
- com.intellij.execution.filters.LineNumbersMapping
- <init>(I[]):V
- bytecodeToSource(I):I
- sourceToBytecode(I):I
c:com.intellij.execution.filters.OpenFileHyperlinkInfo
- com.intellij.execution.filters.FileHyperlinkInfoBase
- com.intellij.execution.filters.FileHyperlinkInfo
- <init>(com.intellij.openapi.fileEditor.OpenFileDescriptor):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I,I):V
- <init>(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I,I,Z):V
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
c:com.intellij.execution.filters.RegexpFilter
- com.intellij.execution.filters.Filter
- com.intellij.openapi.project.DumbAware
- sf:COLUMN_MACROS:java.lang.String
- sf:FILE_PATH_MACROS:java.lang.String
- sf:LINE_MACROS:java.lang.String
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- applyFilter(java.lang.String,I):com.intellij.execution.filters.Filter$Result
- p:createOpenFileHyperlink(java.lang.String,I,I):com.intellij.execution.filters.HyperlinkInfo
- s:getMacrosName():java.lang.String[]
- getPattern():java.util.regex.Pattern
- s:validate(java.lang.String):V
com.intellij.execution.impl.CheckableRunConfigurationEditor
- a:checkEditorData(java.lang.Object):V
c:com.intellij.execution.impl.ConfigurationFromContextWrapper
- com.intellij.execution.actions.ConfigurationFromContext
- <init>(com.intellij.execution.junit.RuntimeConfigurationProducer):V
- getConfigurationSettings():com.intellij.execution.RunnerAndConfigurationSettings
- getSourceElement():com.intellij.psi.PsiElement
- isPreferredTo(com.intellij.execution.actions.ConfigurationFromContext):Z
- onFirstRun(com.intellij.execution.actions.ConfigurationContext,java.lang.Runnable):V
- setConfigurationSettings(com.intellij.execution.RunnerAndConfigurationSettings):V
- shouldReplace(com.intellij.execution.actions.ConfigurationFromContext):Z
a:com.intellij.execution.impl.NewRunConfigurationTreePopupFactory
- <init>():V
- pf:convertToDescriptors(com.intellij.openapi.project.Project,com.intellij.ide.util.treeView.NodeDescriptor,java.lang.Object[]):com.intellij.ide.util.treeView.NodeDescriptor[]
- a:createChildElements(com.intellij.openapi.project.Project,com.intellij.ide.util.treeView.NodeDescriptor):com.intellij.ide.util.treeView.NodeDescriptor[]
- f:createDescriptor(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.ide.util.treeView.NodeDescriptor):com.intellij.ide.util.treeView.NodeDescriptor
- createDescriptor(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.ide.util.treeView.NodeDescriptor,I):com.intellij.ide.util.treeView.NodeDescriptor
- createIconAndText(java.lang.Object):com.intellij.openapi.util.Pair
- a:getRootElement():com.intellij.ide.util.treeView.NodeDescriptor
- a:initStructure(com.intellij.openapi.project.Project):V
a:com.intellij.execution.junit.RuntimeConfigurationProducer
- com.intellij.openapi.project.PossiblyDumbAware
- java.lang.Cloneable
- java.lang.Comparable
- sf:COMPARATOR:java.util.Comparator
- psf:PREFERED:I
- sf:RUNTIME_CONFIGURATION_PRODUCER:com.intellij.openapi.extensions.ExtensionPointName
- p:isClone:Z
- p:<init>(com.intellij.execution.configurations.ConfigurationFactory):V
- <init>(com.intellij.execution.configurations.ConfigurationType):V
- clone():com.intellij.execution.junit.RuntimeConfigurationProducer
- p:cloneTemplateConfiguration(com.intellij.openapi.project.Project,com.intellij.execution.actions.ConfigurationContext):com.intellij.execution.RunnerAndConfigurationSettings
- pa:createConfigurationByElement(com.intellij.execution.Location,com.intellij.execution.actions.ConfigurationContext):com.intellij.execution.RunnerAndConfigurationSettings
- createProducer(com.intellij.execution.Location,com.intellij.execution.actions.ConfigurationContext):com.intellij.execution.junit.RuntimeConfigurationProducer
- p:findExistingByElement(com.intellij.execution.Location,java.util.List,com.intellij.execution.actions.ConfigurationContext):com.intellij.execution.RunnerAndConfigurationSettings
- findExistingConfiguration(com.intellij.execution.Location,com.intellij.execution.actions.ConfigurationContext):com.intellij.execution.RunnerAndConfigurationSettings
- getConfiguration():com.intellij.execution.RunnerAndConfigurationSettings
- p:getConfigurationFactory():com.intellij.execution.configurations.ConfigurationFactory
- getConfigurationType():com.intellij.execution.configurations.ConfigurationType
- s:getInstance(java.lang.Class):com.intellij.execution.junit.RuntimeConfigurationProducer
- a:getSourceElement():com.intellij.psi.PsiElement
- perform(com.intellij.execution.actions.ConfigurationContext,java.lang.Runnable):V
- p:restoreSourceElement():com.intellij.psi.PsiElement
- setConfiguration(com.intellij.execution.RunnerAndConfigurationSettings):V
- p:storeSourceElement(com.intellij.psi.PsiElement):V
f:com.intellij.execution.runToolbar.RunToolbarRunProcess
- com.intellij.execution.runToolbar.RunToolbarProcess
- <init>():V
- getActionId():java.lang.String
- getExecutorId():java.lang.String
- getID():java.lang.String
- getMoreActionSubGroupName():java.lang.String
- getName():java.lang.String
- getPillColor():com.intellij.ui.JBColor
- getShortName():java.lang.String
- getShowInBar():Z
com.intellij.execution.services.ServiceEventListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:handle(com.intellij.execution.services.ServiceEventListener$ServiceEvent):V
e:com.intellij.execution.services.ServiceEventListener$EventType
- java.lang.Enum
- sf:GROUP_CHANGED:com.intellij.execution.services.ServiceEventListener$EventType
- sf:RESET:com.intellij.execution.services.ServiceEventListener$EventType
- sf:SERVICE_ADDED:com.intellij.execution.services.ServiceEventListener$EventType
- sf:SERVICE_CHANGED:com.intellij.execution.services.ServiceEventListener$EventType
- sf:SERVICE_CHILDREN_CHANGED:com.intellij.execution.services.ServiceEventListener$EventType
- sf:SERVICE_GROUP_CHANGED:com.intellij.execution.services.ServiceEventListener$EventType
- sf:SERVICE_REMOVED:com.intellij.execution.services.ServiceEventListener$EventType
- sf:SERVICE_STRUCTURE_CHANGED:com.intellij.execution.services.ServiceEventListener$EventType
- sf:UNLOAD_SYNC_RESET:com.intellij.execution.services.ServiceEventListener$EventType
- s:valueOf(java.lang.String):com.intellij.execution.services.ServiceEventListener$EventType
- s:values():com.intellij.execution.services.ServiceEventListener$EventType[]
f:com.intellij.execution.services.ServiceEventListener$ServiceEvent
- f:contributorClass:java.lang.Class
- f:parent:java.lang.Object
- f:target:java.lang.Object
- f:type:com.intellij.execution.services.ServiceEventListener$EventType
- s:createEvent(com.intellij.execution.services.ServiceEventListener$EventType,java.lang.Object,java.lang.Class):com.intellij.execution.services.ServiceEventListener$ServiceEvent
- s:createResetEvent(java.lang.Class):com.intellij.execution.services.ServiceEventListener$ServiceEvent
- s:createServiceAddedEvent(java.lang.Object,java.lang.Class,java.lang.Object):com.intellij.execution.services.ServiceEventListener$ServiceEvent
- s:createUnloadSyncResetEvent(java.lang.Class):com.intellij.execution.services.ServiceEventListener$ServiceEvent
f:com.intellij.execution.services.ServiceViewActionUtils
- sf:CONTRIBUTORS_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:IS_FROM_TREE_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:OPTIONS_KEY:com.intellij.openapi.actionSystem.DataKey
- s:getTarget(com.intellij.openapi.actionSystem.AnActionEvent,java.lang.Class):java.lang.Object
- s:getTargets(com.intellij.openapi.actionSystem.AnActionEvent,java.lang.Class):java.util.List
com.intellij.execution.services.ServiceViewContributor
- sf:CONTRIBUTOR_EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- s:findRootContributor(java.lang.Class):com.intellij.execution.services.ServiceViewContributor
- a:getServiceDescriptor(com.intellij.openapi.project.Project,java.lang.Object):com.intellij.execution.services.ServiceViewDescriptor
- a:getServices(com.intellij.openapi.project.Project):java.util.List
- a:getViewDescriptor(com.intellij.openapi.project.Project):com.intellij.execution.services.ServiceViewDescriptor
com.intellij.execution.services.ServiceViewDescriptor
- sf:ACTION_HOLDER_KEY:com.intellij.openapi.util.Key
- getContentComponent():javax.swing.JComponent
- getContentPresentation():com.intellij.navigation.ItemPresentation
- getCustomPresentation(com.intellij.execution.services.ServiceViewOptions,com.intellij.execution.services.ServiceViewItemState):com.intellij.navigation.ItemPresentation
- getDataProvider():com.intellij.openapi.actionSystem.DataProvider
- getId():java.lang.String
- getNavigatable():com.intellij.pom.Navigatable
- getPopupActions():com.intellij.openapi.actionSystem.ActionGroup
- a:getPresentation():com.intellij.navigation.ItemPresentation
- getPresentationTag(java.lang.Object):java.lang.Object
- getRemover():java.lang.Runnable
- getToolbarActions():com.intellij.openapi.actionSystem.ActionGroup
- handleDoubleClick(java.awt.event.MouseEvent):Z
- isContentPartVisible():Z
- isVisible():Z
- onNodeSelected(java.util.List):V
- onNodeUnselected():V
com.intellij.execution.services.ServiceViewDnDDescriptor
- sf:LIST_DATA_FLAVOR:java.awt.datatransfer.DataFlavor
- a:canDrop(com.intellij.ide.dnd.DnDEvent,com.intellij.execution.services.ServiceViewDnDDescriptor$Position):Z
- a:drop(com.intellij.ide.dnd.DnDEvent,com.intellij.execution.services.ServiceViewDnDDescriptor$Position):V
e:com.intellij.execution.services.ServiceViewDnDDescriptor$Position
- java.lang.Enum
- sf:ABOVE:com.intellij.execution.services.ServiceViewDnDDescriptor$Position
- sf:BELOW:com.intellij.execution.services.ServiceViewDnDDescriptor$Position
- sf:INTO:com.intellij.execution.services.ServiceViewDnDDescriptor$Position
- s:valueOf(java.lang.String):com.intellij.execution.services.ServiceViewDnDDescriptor$Position
- s:values():com.intellij.execution.services.ServiceViewDnDDescriptor$Position[]
com.intellij.execution.services.ServiceViewGroupingContributor
- com.intellij.execution.services.ServiceViewContributor
- a:getGroupDescriptor(java.lang.Object):com.intellij.execution.services.ServiceViewDescriptor
- a:getGroups(java.lang.Object):java.util.List
f:com.intellij.execution.services.ServiceViewItemState
- <init>(Z,Z,Z,Z):V
- f:component1():Z
- f:component2():Z
- f:component3():Z
- f:component4():Z
- f:copy(Z,Z,Z,Z):com.intellij.execution.services.ServiceViewItemState
- bs:copy$default(com.intellij.execution.services.ServiceViewItemState,Z,Z,Z,Z,I,java.lang.Object):com.intellij.execution.services.ServiceViewItemState
- equals(java.lang.Object):Z
- f:getExpanded():Z
- f:getHasFocus():Z
- f:getLeaf():Z
- f:getSelected():Z
- hashCode():I
com.intellij.execution.services.ServiceViewLazyContributor
com.intellij.execution.services.ServiceViewLocatableDescriptor
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
com.intellij.execution.services.ServiceViewManager
- a:expand(java.lang.Object,java.lang.Class):org.jetbrains.concurrency.Promise
- a:extract(java.lang.Object,java.lang.Class):org.jetbrains.concurrency.Promise
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.execution.services.ServiceViewManager
- a:getToolWindowId(java.lang.Class):java.lang.String
- a:select(java.lang.Object,java.lang.Class,Z,Z):org.jetbrains.concurrency.Promise
com.intellij.execution.services.ServiceViewNonActivatingDescriptor
com.intellij.execution.services.ServiceViewOptions
- a:isGroupByContributor():Z
com.intellij.execution.services.ServiceViewProvidingContributor
- com.intellij.execution.services.ServiceViewContributor
- a:asService():java.lang.Object
com.intellij.execution.services.ServiceViewToolWindowDescriptor
- a:getStripeTitle():java.lang.String
- a:getToolWindowIcon():javax.swing.Icon
- a:getToolWindowId():java.lang.String
- isExcludedByDefault():Z
- isExclusionAllowed():Z
c:com.intellij.execution.services.SimpleServiceViewDescriptor
- com.intellij.execution.services.ServiceViewDescriptor
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon,java.lang.String):V
- getId():java.lang.String
- getPresentation():com.intellij.navigation.ItemPresentation
com.intellij.execution.target.CustomToolLanguageConfigurable
- a:createCustomTool():java.lang.Object
- a:setIntrospectable(com.intellij.execution.target.LanguageRuntimeType$Introspectable):V
- a:validate():java.util.Collection
com.intellij.execution.target.CustomToolLanguageRuntimeType
com.intellij.execution.testframework.PoolOfTestIcons
- sf:ERROR_ICON:javax.swing.Icon
- sf:ERROR_ICON_MARK:javax.swing.Icon
- sf:FAILED_ICON:javax.swing.Icon
- sf:IGNORED_ICON:javax.swing.Icon
- sf:NOT_RAN:javax.swing.Icon
- sf:PASSED_ICON:javax.swing.Icon
- sf:PASSED_IGNORED:javax.swing.Icon
- sf:SKIPPED_ICON:javax.swing.Icon
- sf:TEAR_DOWN_FAILURE:javax.swing.Icon
- sf:TERMINATED_ICON:javax.swing.Icon
f:com.intellij.execution.testframework.TestIconMapper
- com.intellij.execution.testframework.PoolOfTestIcons
- <init>():V
- s:getIcon(com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude):javax.swing.Icon
- s:getMagnitude(I):com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- s:getToolbarIcon(com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude,Z,java.util.function.BooleanSupplier):javax.swing.Icon
com.intellij.execution.testframework.sm.runner.states.TestStateInfo
- a:getMagnitude():com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- a:isDefect():Z
- a:isFinal():Z
- a:isInProgress():Z
- a:wasLaunched():Z
- a:wasTerminated():Z
e:com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- java.lang.Enum
- sf:COMPLETE_INDEX:com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- sf:ERROR_INDEX:com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- sf:FAILED_INDEX:com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- sf:IGNORED_INDEX:com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- sf:NOT_RUN_INDEX:com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- sf:PASSED_INDEX:com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- sf:RUNNING_INDEX:com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- sf:SKIPPED_INDEX:com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- sf:TERMINATED_INDEX:com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- getSortWeight():I
- getTitle():java.lang.String
- getValue():I
- s:valueOf(java.lang.String):com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude
- s:values():com.intellij.execution.testframework.sm.runner.states.TestStateInfo$Magnitude[]
c:com.intellij.execution.ui.actions.AbstractFocusOnAction
- com.intellij.execution.ui.actions.BaseViewAction
- com.intellij.openapi.actionSystem.Toggleable
- <init>(java.lang.String):V
- p:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.execution.ui.layout.ViewContext,com.intellij.ui.content.Content[]):V
- p:update(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.execution.ui.layout.ViewContext,com.intellij.ui.content.Content[]):V
a:com.intellij.execution.ui.actions.BaseViewAction
- com.intellij.openapi.project.DumbAwareAction
- <init>():V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.execution.ui.layout.ViewContext,com.intellij.ui.content.Content[]):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- ps:getTabFor(com.intellij.execution.ui.layout.ViewContext,com.intellij.ui.content.Content[]):com.intellij.execution.ui.layout.Tab
- ps:setEnabled(com.intellij.openapi.actionSystem.AnActionEvent,Z):V
- f:update(com.intellij.openapi.actionSystem.AnActionEvent):V
- p:update(com.intellij.openapi.actionSystem.AnActionEvent,com.intellij.execution.ui.layout.ViewContext,com.intellij.ui.content.Content[]):V
c:com.intellij.execution.ui.actions.CloseAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>(com.intellij.execution.Executor,com.intellij.execution.ui.RunContentDescriptor,com.intellij.openapi.project.Project):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- getContentDescriptor():com.intellij.execution.ui.RunContentDescriptor
- getExecutor():com.intellij.execution.Executor
- perform():V
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
c:com.intellij.execution.ui.actions.FocusOnStartAction
- com.intellij.execution.ui.actions.AbstractFocusOnAction
- <init>():V
com.intellij.execution.ui.layout.CellTransform
com.intellij.execution.ui.layout.CellTransform$Facade
- a:minimize(com.intellij.ui.content.Content,com.intellij.execution.ui.layout.CellTransform$Restore):V
com.intellij.execution.ui.layout.CellTransform$Restore
- a:restoreInGrid():com.intellij.openapi.util.ActionCallback
c:com.intellij.execution.ui.layout.CellTransform$Restore$List
- com.intellij.execution.ui.layout.CellTransform$Restore
- <init>():V
- add(com.intellij.execution.ui.layout.CellTransform$Restore):V
- isRestoringNow():Z
- restoreInGrid():com.intellij.openapi.util.ActionCallback
com.intellij.execution.ui.layout.Grid
- a:getCellFor(com.intellij.ui.content.Content):com.intellij.execution.ui.layout.GridCell
- a:getContents():java.util.List
com.intellij.execution.ui.layout.GridCell
- a:getContentCount():I
- a:minimize(com.intellij.ui.content.Content):V
com.intellij.execution.ui.layout.Tab
- a:getDefaultIndex():I
- a:getIndex():I
- a:isDefault():Z
- a:isDetached(com.intellij.execution.ui.layout.PlaceInGrid):Z
- a:setDetached(com.intellij.execution.ui.layout.PlaceInGrid,Z):V
com.intellij.execution.ui.layout.View
- a:assignTab(com.intellij.execution.ui.layout.Tab):V
- a:getPlaceInGrid():com.intellij.execution.ui.layout.PlaceInGrid
- a:getTab():com.intellij.execution.ui.layout.Tab
- a:getTabIndex():I
- a:getWindow():I
- a:isMinimizedInGrid():Z
- a:setMinimizedInGrid(Z):V
- a:setPlaceInGrid(com.intellij.execution.ui.layout.PlaceInGrid):V
- a:setTabIndex(I):V
- a:setWindow(I):V
com.intellij.execution.ui.layout.ViewContext
- com.intellij.openapi.Disposable
- sf:CELL_POPUP_PLACE:java.lang.String
- sf:CELL_TOOLBAR_PLACE:java.lang.String
- sf:CONTENT_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:CONTEXT_KEY:com.intellij.openapi.actionSystem.DataKey
- sf:TAB_POPUP_PLACE:java.lang.String
- sf:TAB_TOOLBAR_PLACE:java.lang.String
- a:findCellFor(com.intellij.ui.content.Content):com.intellij.execution.ui.layout.GridCell
- a:findGridFor(com.intellij.ui.content.Content):com.intellij.execution.ui.layout.Grid
- a:getActionManager():com.intellij.openapi.actionSystem.ActionManager
- a:getCellTransform():com.intellij.execution.ui.layout.CellTransform$Facade
- a:getContentManager():com.intellij.ui.content.ContentManager
- a:getFocusManager():com.intellij.openapi.wm.IdeFocusManager
- a:getProject():com.intellij.openapi.project.Project
- a:getRunnerLayoutUi():com.intellij.execution.ui.RunnerLayoutUi
- a:getStateFor(com.intellij.ui.content.Content):com.intellij.execution.ui.layout.View
- a:getTabFor(com.intellij.execution.ui.layout.Grid):com.intellij.execution.ui.layout.Tab
- a:isMinimizeActionEnabled():Z
- a:isMoveToGridActionEnabled():Z
- s:isPopupPlace(java.lang.String):Z
- a:isStateBeingRestored():Z
- a:isToDisposeRemovedContent():Z
- a:restoreLayout():V
- a:saveUiState():V
- a:select(com.intellij.ui.content.Content,Z):com.intellij.openapi.util.ActionCallback
- a:setStateIsBeingRestored(Z,java.lang.Object):V
- a:validate(com.intellij.ui.content.Content,com.intellij.openapi.util.ActiveRunnable):V
c:com.intellij.execution.util.EnvVariablesTable
- com.intellij.execution.util.ListTableWithButtons
- <init>():V
- p:canDeleteElement(com.intellij.execution.util.EnvironmentVariable):Z
- p:cloneElement(com.intellij.execution.util.EnvironmentVariable):com.intellij.execution.util.EnvironmentVariable
- p:createElement():com.intellij.execution.util.EnvironmentVariable
- p:createExtraToolbarActions():com.intellij.openapi.actionSystem.AnAction[]
- p:createListModel():com.intellij.util.ui.ListTableModel
- editVariableName(com.intellij.execution.util.EnvironmentVariable):V
- getComponent():javax.swing.JComponent
- getEnvironmentVariables():java.util.List
- p:isEmpty(com.intellij.execution.util.EnvironmentVariable):Z
- s:parseEnvsFromText(java.lang.String):java.util.Map
- setPasteActionEnabled(Z):V
- setValues(java.util.List):V
pc:com.intellij.execution.util.EnvVariablesTable$NameColumnInfo
- com.intellij.execution.util.ListTableWithButtons$ElementsColumnInfoBase
- <init>(com.intellij.execution.util.EnvVariablesTable):V
- p:getDescription(com.intellij.execution.util.EnvironmentVariable):java.lang.String
- getEditor(com.intellij.execution.util.EnvironmentVariable):javax.swing.table.TableCellEditor
- isCellEditable(com.intellij.execution.util.EnvironmentVariable):Z
- setValue(com.intellij.execution.util.EnvironmentVariable,java.lang.String):V
- valueOf(com.intellij.execution.util.EnvironmentVariable):java.lang.String
pc:com.intellij.execution.util.EnvVariablesTable$ValueColumnInfo
- com.intellij.execution.util.ListTableWithButtons$ElementsColumnInfoBase
- <init>(com.intellij.execution.util.EnvVariablesTable):V
- p:getDescription(com.intellij.execution.util.EnvironmentVariable):java.lang.String
- getEditor(com.intellij.execution.util.EnvironmentVariable):javax.swing.table.TableCellEditor
- isCellEditable(com.intellij.execution.util.EnvironmentVariable):Z
- setValue(com.intellij.execution.util.EnvironmentVariable,java.lang.String):V
- valueOf(com.intellij.execution.util.EnvironmentVariable):java.lang.String
c:com.intellij.execution.util.EnvironmentVariable
- com.intellij.openapi.util.JDOMExternalizable
- java.lang.Cloneable
- IS_PREDEFINED:Z
- NAME:java.lang.String
- VALUE:java.lang.String
- <init>():V
- <init>(java.lang.String,java.lang.String,Z):V
- clone():com.intellij.execution.util.EnvironmentVariable
- getDescription():java.lang.String
- getIsPredefined():Z
- getName():java.lang.String
- getNameIsWriteable():Z
- getValue():java.lang.String
- isVisible():Z
- readExternal(org.jdom.Element):V
- setName(java.lang.String):V
- setValue(java.lang.String):V
- writeExternal(org.jdom.Element):V
a:com.intellij.execution.util.ListTableWithButtons
- java.util.Observable
- p:<init>():V
- p:addNewElement(java.lang.Object):V
- pa:canDeleteElement(java.lang.Object):Z
- pa:cloneElement(java.lang.Object):java.lang.Object
- p:configureToolbarButtons(javax.swing.JPanel):V
- p:createAddAction():com.intellij.ui.AnActionButtonRunnable
- p:createEditAction():com.intellij.ui.AnActionButtonRunnable
- pa:createElement():java.lang.Object
- p:createExtraActions():com.intellij.ui.AnActionButton[]
- p:createExtraToolbarActions():com.intellij.openapi.actionSystem.AnAction[]
- pa:createListModel():com.intellij.util.ui.ListTableModel
- p:createRemoveAction():com.intellij.ui.AnActionButtonRunnable
- p:createToolbarDecorator():com.intellij.ui.ToolbarDecorator
- p:editSelection(I):V
- getActionsPanel():com.intellij.ui.CommonActionsPanel
- getComponent():javax.swing.JComponent
- p:getElements():java.util.List
- p:getSelection():java.util.List
- getTableView():com.intellij.ui.table.TableView
- pa:isEmpty(java.lang.Object):Z
- p:isUpDownSupported():Z
- refreshValues():V
- p:removeSelected():V
- setDisabled():V
- setEnabled():V
- p:setModified():V
- p:setSelection(java.lang.Object):V
- setValues(java.util.List):V
- p:shouldEditRowOnCreation():Z
- stopEditing():V
pa:com.intellij.execution.util.ListTableWithButtons$ElementsColumnInfoBase
- com.intellij.util.ui.ColumnInfo
- p:<init>(java.lang.String):V
- pa:getDescription(java.lang.Object):java.lang.String
- getRenderer(java.lang.Object):javax.swing.table.TableCellRenderer
f:com.intellij.execution.util.ListTableWithButtonsUtilKt
- sf:setEmptyState(com.intellij.execution.util.ListTableWithButtons,java.lang.String):com.intellij.execution.util.ListTableWithButtons
- sf:setVisibleRowCount(com.intellij.execution.util.ListTableWithButtons,I):com.intellij.execution.util.ListTableWithButtons
f:com.intellij.execution.util.PathMappingsComponent
- com.intellij.openapi.ui.LabeledComponent
- com.intellij.ui.UserActivityProviderComponent
- <init>():V
- addChangeListener(javax.swing.event.ChangeListener):V
- getMappingSettings():com.intellij.util.PathMappingSettings
- removeChangeListener(javax.swing.event.ChangeListener):V
- setMappingSettings(com.intellij.util.PathMappingSettings):V
c:com.intellij.execution.util.StringWithNewLinesCellEditor
- javax.swing.DefaultCellEditor
- <init>():V
Fa:com.intellij.facet.FacetFinder
- <init>():V
- a:findFacet(com.intellij.openapi.vfs.VirtualFile,com.intellij.facet.FacetTypeId):com.intellij.facet.Facet
- a:findFacets(com.intellij.openapi.vfs.VirtualFile,com.intellij.facet.FacetTypeId):java.util.Collection
- a:getAllFacetsOfTypeModificationTracker(com.intellij.facet.FacetTypeId):com.intellij.openapi.util.ModificationTracker
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.facet.FacetFinder
a:com.intellij.facet.FacetManagerAdapter
- com.intellij.facet.FacetManagerListener
- <init>():V
Fa:com.intellij.facet.FacetModificationTrackingService
- <init>():V
- a:getFacetModificationTracker(com.intellij.facet.Facet):com.intellij.openapi.util.ModificationTracker
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.facet.FacetModificationTrackingService
- a:incFacetModificationTracker():V
- a:incFacetModificationTracker(com.intellij.facet.Facet):V
com.intellij.facet.FacetRootsProvider
- a:getFacetRoots():java.util.Collection
a:com.intellij.facet.FacetTypeRegistry
- <init>():V
- a:findFacetType(com.intellij.facet.FacetTypeId):com.intellij.facet.FacetType
- a:findFacetType(java.lang.String):com.intellij.facet.FacetType
- a:getFacetTypeIds():com.intellij.facet.FacetTypeId[]
- a:getFacetTypes():com.intellij.facet.FacetType[]
- s:getInstance():com.intellij.facet.FacetTypeRegistry
- a:getSortedFacetTypes():com.intellij.facet.FacetType[]
com.intellij.facet.ProjectFacetListener
- allFacetsRemoved(com.intellij.openapi.project.Project):V
- beforeFacetRemoved(com.intellij.facet.Facet):V
- facetAdded(com.intellij.facet.Facet):V
- facetConfigurationChanged(com.intellij.facet.Facet):V
- facetRemoved(com.intellij.facet.Facet,com.intellij.openapi.project.Project):V
- firstFacetAdded(com.intellij.openapi.project.Project):V
Fa:com.intellij.facet.ProjectFacetManager
- <init>():V
- a:createDefaultConfiguration(com.intellij.facet.FacetType):com.intellij.facet.FacetConfiguration
- a:getFacets(com.intellij.facet.FacetTypeId):java.util.List
- a:getFacets(com.intellij.facet.FacetTypeId,com.intellij.openapi.module.Module[]):java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.facet.ProjectFacetManager
- a:getModulesWithFacet(com.intellij.facet.FacetTypeId):java.util.List
- a:hasFacets(com.intellij.facet.FacetTypeId):Z
- a:setDefaultConfiguration(com.intellij.facet.FacetType,com.intellij.facet.FacetConfiguration):V
a:com.intellij.facet.ProjectWideFacetAdapter
- com.intellij.facet.ProjectWideFacetListener
- <init>():V
- allFacetsRemoved():V
- beforeFacetRemoved(com.intellij.facet.Facet):V
- facetAdded(com.intellij.facet.Facet):V
- facetConfigurationChanged(com.intellij.facet.Facet):V
- facetRemoved(com.intellij.facet.Facet):V
- firstFacetAdded():V
com.intellij.facet.ProjectWideFacetListener
- java.util.EventListener
- a:allFacetsRemoved():V
- a:beforeFacetRemoved(com.intellij.facet.Facet):V
- a:facetAdded(com.intellij.facet.Facet):V
- a:facetConfigurationChanged(com.intellij.facet.Facet):V
- a:facetRemoved(com.intellij.facet.Facet):V
- a:firstFacetAdded():V
Fa:com.intellij.facet.ProjectWideFacetListenersRegistry
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.facet.ProjectWideFacetListenersRegistry
- a:registerListener(com.intellij.facet.FacetTypeId,com.intellij.facet.ProjectWideFacetListener):V
- a:registerListener(com.intellij.facet.FacetTypeId,com.intellij.facet.ProjectWideFacetListener,com.intellij.openapi.Disposable):V
- a:registerListener(com.intellij.facet.ProjectWideFacetListener):V
- a:registerListener(com.intellij.facet.ProjectWideFacetListener,com.intellij.openapi.Disposable):V
- a:unregisterListener(com.intellij.facet.FacetTypeId,com.intellij.facet.ProjectWideFacetListener):V
- a:unregisterListener(com.intellij.facet.ProjectWideFacetListener):V
com.intellij.facet.pointers.FacetPointer
- a:findFacet(com.intellij.openapi.roots.ui.configuration.ModulesProvider,com.intellij.openapi.roots.ui.configuration.FacetsProvider):com.intellij.facet.Facet
- a:getFacet():com.intellij.facet.Facet
- a:getFacetName():java.lang.String
- a:getFacetName(com.intellij.openapi.roots.ui.configuration.ModulesProvider,com.intellij.openapi.roots.ui.configuration.FacetsProvider):java.lang.String
- a:getFacetType():com.intellij.facet.FacetType
- a:getFacetTypeId():java.lang.String
- a:getId():java.lang.String
- a:getModuleName():java.lang.String
- a:getModuleName(com.intellij.openapi.module.ModifiableModuleModel):java.lang.String
- a:getProject():com.intellij.openapi.project.Project
com.intellij.facet.pointers.FacetPointerListener
- java.util.EventListener
- a:pointerIdChanged(com.intellij.facet.pointers.FacetPointer,java.lang.String):V
Fa:com.intellij.facet.pointers.FacetPointersManager
- <init>():V
- a:addListener(com.intellij.facet.pointers.FacetPointerListener):V
- a:addListener(com.intellij.facet.pointers.FacetPointerListener,com.intellij.openapi.Disposable):V
- a:addListener(java.lang.Class,com.intellij.facet.pointers.FacetPointerListener):V
- a:addListener(java.lang.Class,com.intellij.facet.pointers.FacetPointerListener,com.intellij.openapi.Disposable):V
- s:constructId(com.intellij.facet.Facet):java.lang.String
- s:constructId(java.lang.String,java.lang.String,java.lang.String):java.lang.String
- a:create(com.intellij.facet.Facet):com.intellij.facet.pointers.FacetPointer
- a:create(java.lang.String):com.intellij.facet.pointers.FacetPointer
- s:getFacetName(java.lang.String):java.lang.String
- s:getFacetType(java.lang.String):java.lang.String
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.facet.pointers.FacetPointersManager
- s:getModuleName(java.lang.String):java.lang.String
- a:removeListener(com.intellij.facet.pointers.FacetPointerListener):V
- a:removeListener(java.lang.Class,com.intellij.facet.pointers.FacetPointerListener):V
a:com.intellij.facet.ui.FacetBasedFrameworkSupportProvider
- com.intellij.ide.util.frameworkSupport.FrameworkSupportProviderBase
- p:<init>(com.intellij.facet.FacetType):V
- p:addSupport(com.intellij.openapi.module.Module,com.intellij.openapi.roots.ModifiableRootModel,com.intellij.ide.util.frameworkSupport.FrameworkVersion,com.intellij.openapi.roots.libraries.Library):V
- getIcon():javax.swing.Icon
- s:getProviderId(com.intellij.facet.FacetType):java.lang.String
- s:getProviderId(com.intellij.facet.FacetTypeId):java.lang.String
- getUnderlyingFrameworkId():java.lang.String
- isEnabledForModuleType(com.intellij.openapi.module.ModuleType):Z
- isSupportAlreadyAdded(com.intellij.openapi.module.Module,com.intellij.openapi.roots.ui.configuration.FacetsProvider):Z
- p:onFacetCreated(com.intellij.facet.Facet,com.intellij.openapi.roots.ModifiableRootModel,com.intellij.ide.util.frameworkSupport.FrameworkVersion):V
- p:onLibraryAdded(com.intellij.facet.Facet,com.intellij.openapi.roots.libraries.Library):V
- processAddedLibraries(com.intellij.openapi.module.Module,java.util.List):V
- pa:setupConfiguration(com.intellij.facet.Facet,com.intellij.openapi.roots.ModifiableRootModel,com.intellij.ide.util.frameworkSupport.FrameworkVersion):V
f:com.intellij.facet.ui.FacetDependentToolWindow
- com.intellij.openapi.wm.ToolWindowEP
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- facetIdList:java.lang.String
- showOnStripeByDefault:Z
- <init>():V
- getFacetIds():java.lang.String[]
- getFacetTypes():java.util.List
com.intellij.facet.ui.MultipleFacetEditorHelper
- a:bind(com.intellij.util.ui.ThreeStateCheckBox,com.intellij.facet.ui.FacetEditor[],com.intellij.util.NotNullFunction):V
- a:bind(javax.swing.JComboBox,com.intellij.facet.ui.FacetEditor[],com.intellij.util.NotNullFunction):V
- a:bind(javax.swing.JTextField,com.intellij.facet.ui.FacetEditor[],com.intellij.util.NotNullFunction):V
- a:unbind():V
f:com.intellij.find.SearchInBackgroundOption
- com.intellij.openapi.progress.PerformInBackgroundOption
- <init>():V
- processSentToBackground():V
- shouldStartInBackground():Z
a:com.intellij.framework.FrameworkAvailabilityCondition
- sf:ALWAYS_FALSE:com.intellij.framework.FrameworkAvailabilityCondition
- sf:ALWAYS_TRUE:com.intellij.framework.FrameworkAvailabilityCondition
- <init>():V
- a:isAvailableFor(com.intellij.ide.util.frameworkSupport.FrameworkSupportModel):Z
a:com.intellij.framework.FrameworkType
- p:<init>(java.lang.String):V
- f:equals(java.lang.Object):Z
- a:getIcon():javax.swing.Icon
- f:getId():java.lang.String
- a:getPresentableName():java.lang.String
- f:hashCode():I
com.intellij.framework.FrameworkVersion
- com.intellij.framework.PresentableVersion
- a:getAvailabilityCondition():com.intellij.framework.FrameworkAvailabilityCondition
- a:getId():java.lang.String
com.intellij.framework.PresentableVersion
- a:getPresentableName():java.lang.String
- a:getVersionNumber():java.lang.String
a:com.intellij.framework.detection.DetectedFrameworkDescription
- <init>():V
- canSetupFramework(java.util.Collection):Z
- a:equals(java.lang.Object):Z
- a:getDetector():com.intellij.framework.detection.FrameworkDetector
- a:getRelatedFiles():java.util.Collection
- a:getSetupText():java.lang.String
- a:hashCode():I
- a:setupFramework(com.intellij.openapi.roots.ModifiableModelsProvider,com.intellij.openapi.roots.ui.configuration.ModulesProvider):V
a:com.intellij.framework.detection.DetectionExcludesConfiguration
- <init>():V
- a:addExcludedFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.framework.FrameworkType):V
- a:addExcludedFramework(com.intellij.framework.FrameworkType):V
- a:addExcludedUrl(java.lang.String,com.intellij.framework.FrameworkType):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.framework.detection.DetectionExcludesConfiguration
- a:isExcludedFromDetection(com.intellij.framework.FrameworkType):Z
- a:isExcludedFromDetection(com.intellij.openapi.vfs.VirtualFile,com.intellij.framework.FrameworkType):Z
a:com.intellij.framework.detection.FacetBasedFrameworkDetector
- com.intellij.framework.detection.FrameworkDetector
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,I):V
- p:createConfiguration(java.util.Collection):com.intellij.facet.FacetConfiguration
- createConfigurations(java.util.Collection,java.util.Collection):java.util.List
- detect(java.util.Collection,com.intellij.framework.detection.FrameworkDetectionContext):java.util.List
- a:getFacetType():com.intellij.facet.FacetType
- getFrameworkType():com.intellij.framework.FrameworkType
- getUnderlyingFrameworkType():com.intellij.framework.FrameworkType
- isSuitableUnderlyingFacetConfiguration(com.intellij.facet.FacetConfiguration,com.intellij.facet.FacetConfiguration,java.util.Set):Z
- setupFacet(com.intellij.facet.Facet,com.intellij.openapi.roots.ModifiableRootModel):V
f:com.intellij.framework.detection.FileContentPattern
- com.intellij.patterns.ObjectPattern
- s:fileContent():com.intellij.framework.detection.FileContentPattern
- inDirectory(java.lang.String):com.intellij.framework.detection.FileContentPattern
- withName(com.intellij.patterns.StringPattern):com.intellij.framework.detection.FileContentPattern
- withName(java.lang.String):com.intellij.framework.detection.FileContentPattern
- xmlWithRootTag(java.lang.String):com.intellij.framework.detection.FileContentPattern
- xmlWithRootTagNamespace(com.intellij.patterns.ElementPattern):com.intellij.framework.detection.FileContentPattern
- xmlWithRootTagNamespace(java.lang.String):com.intellij.framework.detection.FileContentPattern
com.intellij.framework.detection.FileContentPattern$ParseXml
- s:getInstance():com.intellij.framework.detection.FileContentPattern$ParseXml
- a:parseHeaderWithException(java.io.Reader):com.intellij.util.xml.XmlFileHeader
com.intellij.framework.detection.FrameworkDetectionContext
- a:createDetectedFacetDescriptions(com.intellij.framework.detection.FacetBasedFrameworkDetector,java.util.Collection):java.util.List
- a:getBaseDir():com.intellij.openapi.vfs.VirtualFile
- a:getProject():com.intellij.openapi.project.Project
a:com.intellij.framework.detection.FrameworkDetector
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,I):V
- a:createSuitableFilePattern():com.intellij.patterns.ElementPattern
- a:detect(java.util.Collection,com.intellij.framework.detection.FrameworkDetectionContext):java.util.List
- f:getDetectorId():java.lang.String
- f:getDetectorVersion():I
- a:getFileType():com.intellij.openapi.fileTypes.FileType
- a:getFrameworkType():com.intellij.framework.FrameworkType
- getUnderlyingFrameworkType():com.intellij.framework.FrameworkType
com.intellij.framework.library.DownloadableLibraryFileDescription
- com.intellij.util.download.DownloadableFileDescription
- a:getDocumentationDescription():com.intellij.util.download.DownloadableFileDescription
- a:getSourcesDescription():com.intellij.util.download.DownloadableFileDescription
- a:isOptional():Z
com.intellij.framework.library.FrameworkLibraryVersion
- com.intellij.framework.PresentableVersion
- com.intellij.util.download.DownloadableFileSetDescription
- a:getDefaultLibraryName():java.lang.String
- a:getFiles():java.util.List
com.intellij.framework.library.FrameworkLibraryVersionFilter
- sf:ALL:com.intellij.framework.library.FrameworkLibraryVersionFilter
- a:isAccepted(com.intellij.framework.library.FrameworkLibraryVersion):Z
com.intellij.ide.StandardTargetWeights
- sf:BOOKMARKS_WEIGHT:F
- sf:CHANGES_VIEW:F
- sf:COMMANDER_WEIGHT:F
- sf:FAVORITES_WEIGHT:F
- sf:J2EE_WEIGHT:F
- sf:NAV_BAR_WEIGHT:F
- sf:OS_FILE_MANAGER:F
- sf:PACKAGES_WEIGHT:F
- sf:PROJECT_SETTINGS_WEIGHT:F
- sf:PROJECT_WEIGHT:F
- sf:SCOPE_WEIGHT:F
- sf:STRUCTURE_WEIGHT:F
com.intellij.ide.TitledHandler
- a:getActionTitle():java.lang.String
a:com.intellij.ide.actions.CreateElementActionBase
- com.intellij.ide.actions.CreateInDirectoryActionBase
- com.intellij.openapi.application.WriteActionAware
- p:<init>():V
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier,java.util.function.Supplier):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- f:actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
- pa:create(java.lang.String,com.intellij.psi.PsiDirectory):com.intellij.psi.PsiElement[]
- s:filterMessage(java.lang.String):java.lang.String
- pa:getActionName(com.intellij.psi.PsiDirectory,java.lang.String):java.lang.String
- p:getCommandName():java.lang.String
- pa:getErrorTitle():java.lang.String
- p:getIdeView(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ide.IdeView
- p:invokeDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory):com.intellij.psi.PsiElement[]
- p:invokeDialog(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory,java.util.function.Consumer):V
pc:com.intellij.ide.actions.CreateElementActionBase$MyInputValidator
- com.intellij.ide.actions.ElementCreator
- com.intellij.openapi.ui.InputValidator
- <init>(com.intellij.ide.actions.CreateElementActionBase,com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory):V
- canClose(java.lang.String):Z
- checkInput(java.lang.String):Z
- create(java.lang.String):com.intellij.psi.PsiElement[]
- getActionName(java.lang.String):java.lang.String
- f:getCreatedElements():com.intellij.psi.PsiElement[]
- getDirectory():com.intellij.psi.PsiDirectory
- startInWriteAction():Z
a:com.intellij.ide.actions.CreateInDirectoryActionBase
- com.intellij.openapi.actionSystem.AnAction
- p:<init>():V
- p:<init>(java.lang.String,java.lang.String,javax.swing.Icon):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier,java.util.function.Supplier):V
- p:<init>(java.util.function.Supplier,java.util.function.Supplier,javax.swing.Icon):V
- getActionUpdateThread():com.intellij.openapi.actionSystem.ActionUpdateThread
- p:isAvailable(com.intellij.openapi.actionSystem.AnActionEvent):Z
- p:isAvailable(com.intellij.openapi.actionSystem.DataContext):Z
- isDumbAware():Z
- update(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.ide.actions.ElementCreator
- com.intellij.openapi.application.WriteActionAware
- p:<init>(com.intellij.openapi.project.Project,java.lang.String):V
- pa:create(java.lang.String):com.intellij.psi.PsiElement[]
- pa:getActionName(java.lang.String):java.lang.String
- s:getErrorMessage(java.lang.Throwable):java.lang.String
- tryCreate(java.lang.String):com.intellij.psi.PsiElement[]
a:com.intellij.ide.actions.PrintActionHandler
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:canPrint(com.intellij.openapi.actionSystem.DataContext):Z
- s:getHandler(com.intellij.openapi.actionSystem.DataContext):com.intellij.ide.actions.PrintActionHandler
- a:print(com.intellij.openapi.actionSystem.DataContext):V
com.intellij.ide.actions.searcheverywhere.AutoCompletionCommand
- a:completeQuery(javax.swing.text.JTextComponent):V
- a:getPresentationString():java.lang.String
com.intellij.ide.actions.searcheverywhere.AutoCompletionContributor
- a:getAutocompleteItems(java.lang.String,I):java.util.List
c:com.intellij.ide.actions.searcheverywhere.ContributorSearchResult
- <init>(java.util.List):V
- <init>(java.util.List,Z):V
- s:builder():com.intellij.ide.actions.searcheverywhere.ContributorSearchResult$Builder
- s:empty():com.intellij.ide.actions.searcheverywhere.ContributorSearchResult
- getItems():java.util.List
- hasMoreItems():Z
- isEmpty():Z
c:com.intellij.ide.actions.searcheverywhere.ContributorSearchResult$Builder
- <init>():V
- addItem(java.lang.Object):V
- build():com.intellij.ide.actions.searcheverywhere.ContributorSearchResult
- itemsCount():I
- setHasMore(Z):V
com.intellij.ide.actions.searcheverywhere.EssentialContributor
- s:checkEssential(com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor):Z
- isEssential():Z
c:com.intellij.ide.actions.searcheverywhere.ExtendedInfo
- <init>():V
- <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):V
- f:getLeftText():kotlin.jvm.functions.Function1
- f:getRightAction():kotlin.jvm.functions.Function1
- f:setLeftText(kotlin.jvm.functions.Function1):V
- f:setRightAction(kotlin.jvm.functions.Function1):V
c:com.intellij.ide.actions.searcheverywhere.FoundItemDescriptor
- <init>(java.lang.Object,I):V
- getItem():java.lang.Object
- getWeight():I
com.intellij.ide.actions.searcheverywhere.PossibleSlowContributor
- s:checkSlow(com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor):Z
- isSlow():Z
f:com.intellij.ide.actions.searcheverywhere.SearchEverywhereCommandInfo
- <init>(java.lang.String,java.lang.String,com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor):V
- getCommand():java.lang.String
- getCommandWithPrefix():java.lang.String
- getContributor():com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
- getDefinition():java.lang.String
com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
- com.intellij.openapi.Disposable
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- dispose():V
- a:fetchElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):V
- filterControlSymbols(java.lang.String):java.lang.String
- getActions(java.lang.Runnable):java.util.List
- getAdvertisement():java.lang.String
- getDataForItem(java.lang.Object,java.lang.String):java.lang.Object
- getElementPriority(java.lang.Object,java.lang.String):I
- a:getElementsRenderer():javax.swing.ListCellRenderer
- getFullGroupName():java.lang.String
- a:getGroupName():java.lang.String
- getItemDescription(java.lang.Object):java.lang.String
- a:getSearchProviderId():java.lang.String
- a:getSortWeight():I
- getSupportedCommands():java.util.List
- isDumbAware():Z
- isEmptyPatternSupported():Z
- isMultiSelectionSupported():Z
- isShownInSeparateTab():Z
- a:processSelectedItem(java.lang.Object,I,java.lang.String):Z
- search(java.lang.String,com.intellij.openapi.progress.ProgressIndicator):java.util.List
- search(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,I):com.intellij.ide.actions.searcheverywhere.ContributorSearchResult
- a:showInFindResults():Z
com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributorFactory
- a:createContributor(com.intellij.openapi.actionSystem.AnActionEvent):com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
- isAvailable(com.intellij.openapi.project.Project):Z
com.intellij.ide.actions.searcheverywhere.SearchEverywhereExtendedInfoProvider
- createExtendedInfo():com.intellij.ide.actions.searcheverywhere.ExtendedInfo
com.intellij.ide.actions.searcheverywhere.SearchEverywherePresentationProvider
- a:getTargetPresentation(java.lang.Object):com.intellij.platform.backend.presentation.TargetPresentation
com.intellij.ide.actions.searcheverywhere.SearchEverywhereToggleAction
- a:canToggleEverywhere():Z
- a:isEverywhere():Z
- a:setEverywhere(Z):V
- setScopeIsDefaultAndAutoSet(Z):V
com.intellij.ide.actions.searcheverywhere.SearchFieldActionsContributor
- a:createRightActions(kotlin.jvm.functions.Function1,java.lang.Runnable):java.util.List
com.intellij.ide.actions.searcheverywhere.WeightedSearchEverywhereContributor
- com.intellij.ide.actions.searcheverywhere.SearchEverywhereContributor
- fetchElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):V
- a:fetchWeightedElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,com.intellij.util.Processor):V
- searchWeightedElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator):java.util.List
- searchWeightedElements(java.lang.String,com.intellij.openapi.progress.ProgressIndicator,I):com.intellij.ide.actions.searcheverywhere.ContributorSearchResult
com.intellij.ide.actions.searcheverywhere.remote.RemoteSearchEverywhereConverter
- a:convertToItem(com.intellij.ide.actions.searcheverywhere.remote.RemoteSearchEverywherePresentation):java.lang.Object
- a:convertToPresentation(java.lang.Object):com.intellij.ide.actions.searcheverywhere.remote.RemoteSearchEverywherePresentation
com.intellij.ide.actions.searcheverywhere.remote.RemoteSearchEverywhereConverterSupplier
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:contributorsList():java.util.List
- a:createConverter():com.intellij.ide.actions.searcheverywhere.remote.RemoteSearchEverywhereConverter
com.intellij.ide.actions.searcheverywhere.remote.RemoteSearchEverywherePresentation
- a:getPresentationRenderer():javax.swing.ListCellRenderer
com.intellij.ide.actions.searcheverywhere.remote.SearchEverywhereRemoteSupportService
- a:getConverters(java.lang.String):java.util.List
- s:getInstance():com.intellij.ide.actions.searcheverywhere.remote.SearchEverywhereRemoteSupportService
com.intellij.ide.bookmark.Bookmark
- com.intellij.pom.Navigatable
- a:createNode():com.intellij.ide.util.treeView.AbstractTreeNode
- a:equals(java.lang.Object):Z
- a:getAttributes():java.util.Map
- a:getProvider():com.intellij.ide.bookmark.BookmarkProvider
- a:hashCode():I
- prepareDefaultDescription():java.lang.String
com.intellij.ide.bookmark.BookmarkGroup
- a:add(com.intellij.ide.bookmark.Bookmark,com.intellij.ide.bookmark.BookmarkType,java.lang.String):Z
- bs:add$default(com.intellij.ide.bookmark.BookmarkGroup,com.intellij.ide.bookmark.Bookmark,com.intellij.ide.bookmark.BookmarkType,java.lang.String,I,java.lang.Object):Z
- a:canAdd(com.intellij.ide.bookmark.Bookmark):Z
- a:canRemove(com.intellij.ide.bookmark.Bookmark):Z
- a:getBookmarks():java.util.List
- a:getDescription(com.intellij.ide.bookmark.Bookmark):java.lang.String
- a:getName():java.lang.String
- a:isDefault():Z
- a:remove():V
- a:remove(com.intellij.ide.bookmark.Bookmark):Z
- a:setDefault(Z):V
- a:setDescription(com.intellij.ide.bookmark.Bookmark,java.lang.String):V
- a:setName(java.lang.String):V
f:com.intellij.ide.bookmark.BookmarkGroup$DefaultImpls
- bs:add$default(com.intellij.ide.bookmark.BookmarkGroup,com.intellij.ide.bookmark.Bookmark,com.intellij.ide.bookmark.BookmarkType,java.lang.String,I,java.lang.Object):Z
f:com.intellij.ide.bookmark.BookmarkIcon
- com.intellij.ui.icons.IconWrapperWithToolTip
- sf:Companion:com.intellij.ide.bookmark.BookmarkIcon$Companion
- f:getMnemonic():C
- replaceBy(com.intellij.ui.icons.IconReplacer):com.intellij.ide.bookmark.BookmarkIcon
f:com.intellij.ide.bookmark.BookmarkIcon$Companion
com.intellij.ide.bookmark.BookmarkProvider
- java.util.Comparator
- sf:EP:com.intellij.openapi.extensions.ProjectExtensionPointName
- a:createBookmark(java.lang.Object):com.intellij.ide.bookmark.Bookmark
- a:createBookmark(java.util.Map):com.intellij.ide.bookmark.Bookmark
- a:getProject():com.intellij.openapi.project.Project
- a:getWeight():I
- prepareGroup(java.util.List):java.util.List
e:com.intellij.ide.bookmark.BookmarkType
- java.lang.Enum
- sf:Companion:com.intellij.ide.bookmark.BookmarkType$Companion
- sf:DEFAULT:com.intellij.ide.bookmark.BookmarkType
- sf:DIGIT_0:com.intellij.ide.bookmark.BookmarkType
- sf:DIGIT_1:com.intellij.ide.bookmark.BookmarkType
- sf:DIGIT_2:com.intellij.ide.bookmark.BookmarkType
- sf:DIGIT_3:com.intellij.ide.bookmark.BookmarkType
- sf:DIGIT_4:com.intellij.ide.bookmark.BookmarkType
- sf:DIGIT_5:com.intellij.ide.bookmark.BookmarkType
- sf:DIGIT_6:com.intellij.ide.bookmark.BookmarkType
- sf:DIGIT_7:com.intellij.ide.bookmark.BookmarkType
- sf:DIGIT_8:com.intellij.ide.bookmark.BookmarkType
- sf:DIGIT_9:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_A:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_B:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_C:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_D:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_E:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_F:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_G:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_H:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_I:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_J:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_K:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_L:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_M:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_N:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_O:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_P:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_Q:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_R:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_S:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_T:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_U:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_V:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_W:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_X:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_Y:com.intellij.ide.bookmark.BookmarkType
- sf:LETTER_Z:com.intellij.ide.bookmark.BookmarkType
- sf:get(C):com.intellij.ide.bookmark.BookmarkType
- s:getEntries():kotlin.enums.EnumEntries
- f:getGutterIcon():javax.swing.Icon
- f:getIcon():javax.swing.Icon
- f:getMnemonic():C
- s:valueOf(java.lang.String):com.intellij.ide.bookmark.BookmarkType
- s:values():com.intellij.ide.bookmark.BookmarkType[]
f:com.intellij.ide.bookmark.BookmarkType$Companion
- f:get(C):com.intellij.ide.bookmark.BookmarkType
com.intellij.ide.bookmark.BookmarksListProvider
- sf:EP:com.intellij.openapi.extensions.ProjectExtensionPointName
- a:canDelete(java.util.List):Z
- a:canEdit(java.lang.Object):Z
- a:createNode():com.intellij.ide.util.treeView.AbstractTreeNode
- a:getDeleteActionText():java.lang.String
- a:getEditActionText():java.lang.String
- a:getProject():com.intellij.openapi.project.Project
- a:getWeight():I
- a:performDelete(java.util.List,javax.swing.JComponent):V
- a:performEdit(java.lang.Object,javax.swing.JComponent):V
com.intellij.ide.bookmark.BookmarksListener
- sf:TOPIC:com.intellij.util.messages.Topic
- bookmarkAdded(com.intellij.ide.bookmark.BookmarkGroup,com.intellij.ide.bookmark.Bookmark):V
- bookmarkChanged(com.intellij.ide.bookmark.BookmarkGroup,com.intellij.ide.bookmark.Bookmark):V
- bookmarkRemoved(com.intellij.ide.bookmark.BookmarkGroup,com.intellij.ide.bookmark.Bookmark):V
- bookmarkTypeChanged(com.intellij.ide.bookmark.Bookmark):V
- bookmarksSorted(com.intellij.ide.bookmark.BookmarkGroup):V
- defaultGroupChanged(com.intellij.ide.bookmark.BookmarkGroup,com.intellij.ide.bookmark.BookmarkGroup):V
- groupAdded(com.intellij.ide.bookmark.BookmarkGroup):V
- groupRemoved(com.intellij.ide.bookmark.BookmarkGroup):V
- groupRenamed(com.intellij.ide.bookmark.BookmarkGroup):V
- groupsSorted():V
- structureChanged(java.lang.Object):V
com.intellij.ide.bookmark.BookmarksManager
- a:add(com.intellij.ide.bookmark.Bookmark,com.intellij.ide.bookmark.BookmarkType):V
- a:addGroup(java.lang.String,Z):com.intellij.ide.bookmark.BookmarkGroup
- a:createBookmark(java.lang.Object):com.intellij.ide.bookmark.Bookmark
- a:getAssignedTypes():java.util.Set
- a:getBookmark(com.intellij.ide.bookmark.BookmarkType):com.intellij.ide.bookmark.Bookmark
- a:getBookmarks():java.util.List
- a:getDefaultGroup():com.intellij.ide.bookmark.BookmarkGroup
- a:getGroup(java.lang.String):com.intellij.ide.bookmark.BookmarkGroup
- a:getGroups():java.util.List
- a:getGroups(com.intellij.ide.bookmark.Bookmark):java.util.List
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.bookmark.BookmarksManager
- a:getType(com.intellij.ide.bookmark.Bookmark):com.intellij.ide.bookmark.BookmarkType
- a:remove():V
- a:remove(com.intellij.ide.bookmark.Bookmark):V
- a:setType(com.intellij.ide.bookmark.Bookmark,com.intellij.ide.bookmark.BookmarkType):V
- a:toggle(com.intellij.ide.bookmark.Bookmark,com.intellij.ide.bookmark.BookmarkType):V
- a:update(java.util.Map):V
com.intellij.ide.bookmark.FileBookmark
- com.intellij.ide.bookmark.Bookmark
- a:getFile():com.intellij.openapi.vfs.VirtualFile
com.intellij.ide.bookmark.LineBookmark
- com.intellij.ide.bookmark.FileBookmark
- a:getLine():I
a:com.intellij.ide.favoritesTreeView.FavoriteNodeProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- createNode(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.ide.projectView.ViewSettings):com.intellij.ide.util.treeView.AbstractTreeNode
- a:createPathFromUrl(com.intellij.openapi.project.Project,java.lang.String,java.lang.String):java.lang.Object[]
- a:elementContainsFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):Z
- a:getElementLocation(java.lang.Object):java.lang.String
- a:getElementModuleName(java.lang.Object):java.lang.String
- a:getElementUrl(java.lang.Object):java.lang.String
- a:getElementWeight(java.lang.Object,Z):I
- a:getFavoriteNodes(com.intellij.openapi.actionSystem.DataContext,com.intellij.ide.projectView.ViewSettings):java.util.Collection
- a:getFavoriteTypeId():java.lang.String
- getPsiElement(java.lang.Object):com.intellij.psi.PsiElement
- a:isInvalidElement(java.lang.Object):Z
com.intellij.ide.fileTemplates.DefaultTemplatePropertiesProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:fillProperties(com.intellij.psi.PsiDirectory,java.util.Properties):V
c:com.intellij.ide.fileTemplates.FileTemplateGroupDescriptor
- com.intellij.ide.fileTemplates.FileTemplateDescriptor
- <init>(java.lang.String,javax.swing.Icon):V
- <init>(java.lang.String,javax.swing.Icon,com.intellij.ide.fileTemplates.FileTemplateDescriptor[]):V
- addTemplate(com.intellij.ide.fileTemplates.FileTemplateDescriptor):V
- addTemplate(java.lang.String):V
- getDisplayName():java.lang.String
- getFileName():java.lang.String
- getTemplates():java.util.List
- getTitle():java.lang.String
com.intellij.ide.fileTemplates.FileTemplateGroupDescriptorFactory
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getFileTemplatesDescriptor():com.intellij.ide.fileTemplates.FileTemplateGroupDescriptor
com.intellij.ide.hierarchy.HierarchyBrowser
- com.intellij.openapi.project.PossiblyDumbAware
- a:getComponent():javax.swing.JComponent
- a:setContent(com.intellij.ui.content.Content):V
com.intellij.ide.hierarchy.HierarchyProvider
- a:browserActivated(com.intellij.ide.hierarchy.HierarchyBrowser):V
- a:createHierarchyBrowser(com.intellij.psi.PsiElement):com.intellij.ide.hierarchy.HierarchyBrowser
- a:getTarget(com.intellij.openapi.actionSystem.DataContext):com.intellij.psi.PsiElement
c:com.intellij.ide.hierarchy.LanguageCallHierarchy
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.ide.hierarchy.LanguageCallHierarchy
- <init>():V
c:com.intellij.ide.hierarchy.LanguageMethodHierarchy
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.ide.hierarchy.LanguageMethodHierarchy
- <init>():V
c:com.intellij.ide.hierarchy.LanguageTypeHierarchy
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.ide.hierarchy.LanguageTypeHierarchy
- <init>():V
e:com.intellij.ide.projectView.NodeSortKey
- java.lang.Enum
- sf:BY_NAME:com.intellij.ide.projectView.NodeSortKey
- sf:BY_TIME_ASCENDING:com.intellij.ide.projectView.NodeSortKey
- sf:BY_TIME_DESCENDING:com.intellij.ide.projectView.NodeSortKey
- sf:BY_TYPE:com.intellij.ide.projectView.NodeSortKey
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.ide.projectView.NodeSortKey
- s:values():com.intellij.ide.projectView.NodeSortKey[]
com.intellij.ide.projectView.ProjectViewNestingRulesProvider
- a:addFileNestingRules(com.intellij.ide.projectView.ProjectViewNestingRulesProvider$Consumer):V
com.intellij.ide.projectView.ProjectViewNestingRulesProvider$Consumer
- a:addNestingRule(java.lang.String,java.lang.String):V
a:com.intellij.ide.projectView.ProjectViewNode
- com.intellij.ide.projectView.RootsProvider
- com.intellij.ide.projectView.SettingsProvider
- com.intellij.ide.util.treeView.AbstractTreeNode
- psf:LOG:com.intellij.openapi.diagnostic.Logger
- p:<init>(com.intellij.openapi.project.Project,java.lang.Object,com.intellij.ide.projectView.ViewSettings):V
- canHaveChildrenMatching(com.intellij.openapi.util.Condition):Z
- p:computeBackgroundColor():java.awt.Color
- a:contains(com.intellij.openapi.vfs.VirtualFile):Z
- s:createTreeNode(java.lang.Class,com.intellij.openapi.project.Project,java.lang.Object,com.intellij.ide.projectView.ViewSettings):com.intellij.ide.util.treeView.AbstractTreeNode
- ps:getDefaultRootsFor(com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- getManualOrderKey():java.lang.Comparable
- getQualifiedNameSortKey():java.lang.String
- getRoots():java.util.Collection
- f:getSettings():com.intellij.ide.projectView.ViewSettings
- getSortKey():java.lang.Comparable
- getSortOrder(com.intellij.ide.projectView.NodeSortSettings):com.intellij.ide.projectView.NodeSortOrder
- getTimeSortKey():java.lang.Comparable
- getTitle():java.lang.String
- getTypeSortKey():java.lang.Comparable
- getTypeSortWeight(Z):I
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- p:hasProblemFileBeneath():Z
- isSortByFirstChild():Z
- isValidating():Z
- p:shouldApply():Z
- shouldDrillDownOnEmptyElement():Z
- p:shouldPostprocess():Z
- someChildContainsFile(com.intellij.openapi.vfs.VirtualFile):Z
- someChildContainsFile(com.intellij.openapi.vfs.VirtualFile,Z):Z
- validate():Z
- s:wrap(java.util.Collection,com.intellij.openapi.project.Project,java.lang.Class,com.intellij.ide.projectView.ViewSettings):java.util.List
com.intellij.ide.projectView.ProjectViewSelectionListener
- a:onChanged():V
f:com.intellij.ide.projectView.ProjectViewSelectionTopicKt
- sf:PROJECT_VIEW_SELECTION_TOPIC:com.intellij.util.messages.Topic
com.intellij.ide.projectView.SelectableTreeStructureProvider
- com.intellij.ide.projectView.TreeStructureProvider
- a:getTopLevelElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
c:com.intellij.ide.todo.TodoPanelSettings
- areFlattenPackages:Z
- areModulesShown:Z
- arePackagesShown:Z
- isAutoScrollToSource:Z
- showPreview:Z
- todoFilterName:java.lang.String
- <init>():V
- <init>(com.intellij.ide.todo.TodoPanelSettings):V
f:com.intellij.ide.util.EditSourceUtil
- s:canNavigate(com.intellij.psi.PsiElement):Z
- s:getDescriptor(com.intellij.psi.PsiElement):com.intellij.pom.Navigatable
- s:navigate(com.intellij.navigation.NavigationItem,Z,Z):V
- s:navigateToPsiElement(com.intellij.psi.PsiElement):Z
com.intellij.ide.util.TreeChooser
- a:getSelected():java.lang.Object
- a:select(java.lang.Object):V
- a:selectDirectory(com.intellij.psi.PsiDirectory):V
- a:showDialog():V
- a:showPopup():V
com.intellij.ide.util.TreeChooser$Filter
- a:isAccepted(java.lang.Object):Z
com.intellij.ide.util.TreeFileChooser
- a:getSelectedFile():com.intellij.psi.PsiFile
- a:selectFile(com.intellij.psi.PsiFile):V
- a:showDialog():V
com.intellij.ide.util.TreeFileChooser$PsiFileFilter
- a:accept(com.intellij.psi.PsiFile):Z
a:com.intellij.ide.util.TreeFileChooserFactory
- <init>():V
- a:createFileChooser(java.lang.String,com.intellij.psi.PsiFile,com.intellij.openapi.fileTypes.FileType,com.intellij.ide.util.TreeFileChooser$PsiFileFilter):com.intellij.ide.util.TreeFileChooser
- a:createFileChooser(java.lang.String,com.intellij.psi.PsiFile,com.intellij.openapi.fileTypes.FileType,com.intellij.ide.util.TreeFileChooser$PsiFileFilter,java.util.Comparator,Z,Z):com.intellij.ide.util.TreeFileChooser
- a:createFileChooser(java.lang.String,com.intellij.psi.PsiFile,com.intellij.openapi.fileTypes.FileType,com.intellij.ide.util.TreeFileChooser$PsiFileFilter,Z):com.intellij.ide.util.TreeFileChooser
- a:createFileChooser(java.lang.String,com.intellij.psi.PsiFile,com.intellij.openapi.fileTypes.FileType,com.intellij.ide.util.TreeFileChooser$PsiFileFilter,Z,Z):com.intellij.ide.util.TreeFileChooser
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.util.TreeFileChooserFactory
a:com.intellij.ide.util.frameworkSupport.FrameworkSupportConfigurable
- com.intellij.openapi.Disposable
- <init>():V
- addListener(com.intellij.ide.util.frameworkSupport.FrameworkSupportConfigurableListener):V
- a:addSupport(com.intellij.openapi.module.Module,com.intellij.openapi.roots.ModifiableRootModel,com.intellij.openapi.roots.libraries.Library):V
- dispose():V
- p:fireFrameworkVersionChanged():V
- a:getComponent():javax.swing.JComponent
- getSelectedVersion():com.intellij.ide.util.frameworkSupport.FrameworkVersion
- getVersionFilter():com.intellij.framework.library.FrameworkLibraryVersionFilter
- getVersions():java.util.List
- isVisible():Z
- onFrameworkSelectionChanged(Z):V
- removeListener(com.intellij.ide.util.frameworkSupport.FrameworkSupportConfigurableListener):V
c:com.intellij.ide.util.frameworkSupport.FrameworkSupportConfigurableBase
- com.intellij.ide.util.frameworkSupport.FrameworkSupportConfigurable
- pf:myFrameworkSupportModel:com.intellij.ide.util.frameworkSupport.FrameworkSupportModel
- b:$$$getRootComponent$$$():javax.swing.JComponent
- <init>(com.intellij.ide.util.frameworkSupport.FrameworkSupportProviderBase,com.intellij.ide.util.frameworkSupport.FrameworkSupportModel):V
- <init>(com.intellij.ide.util.frameworkSupport.FrameworkSupportProviderBase,com.intellij.ide.util.frameworkSupport.FrameworkSupportModel,java.util.List,java.lang.String):V
- addSupport(com.intellij.openapi.module.Module,com.intellij.openapi.roots.ModifiableRootModel,com.intellij.openapi.roots.libraries.Library):V
- getComponent():javax.swing.JComponent
- getLibraries():com.intellij.facet.ui.libraries.LibraryInfo[]
- getSelectedVersion():com.intellij.ide.util.frameworkSupport.FrameworkVersion
- getVersions():java.util.List
- p:reloadVersions(java.util.List):V
- p:updateAvailableVersions(java.util.List):V
com.intellij.ide.util.frameworkSupport.FrameworkSupportConfigurableListener
- java.util.EventListener
- a:frameworkVersionChanged():V
com.intellij.ide.util.frameworkSupport.FrameworkSupportModel
- com.intellij.openapi.util.UserDataHolder
- a:addFrameworkListener(com.intellij.ide.util.frameworkSupport.FrameworkSupportModelListener):V
- a:addFrameworkListener(com.intellij.ide.util.frameworkSupport.FrameworkSupportModelListener,com.intellij.openapi.Disposable):V
- a:findFrameworkConfigurable(java.lang.String):com.intellij.ide.util.frameworkSupport.FrameworkSupportConfigurable
- a:getFrameworkConfigurable(java.lang.String):com.intellij.ide.util.frameworkSupport.FrameworkSupportConfigurable
- a:getModuleBuilder():com.intellij.ide.util.projectWizard.ModuleBuilder
- a:getProject():com.intellij.openapi.project.Project
- a:isFrameworkSelected(java.lang.String):Z
- a:removeFrameworkListener(com.intellij.ide.util.frameworkSupport.FrameworkSupportModelListener):V
- a:setFrameworkComponentEnabled(java.lang.String,Z):V
- a:updateFrameworkLibraryComponent(java.lang.String):V
a:com.intellij.ide.util.frameworkSupport.FrameworkSupportModelAdapter
- com.intellij.ide.util.frameworkSupport.FrameworkSupportModelListener
- <init>():V
- frameworkSelected(com.intellij.ide.util.frameworkSupport.FrameworkSupportProvider):V
- frameworkUnselected(com.intellij.ide.util.frameworkSupport.FrameworkSupportProvider):V
- wizardStepUpdated():V
com.intellij.ide.util.frameworkSupport.FrameworkSupportModelListener
- java.util.EventListener
- a:frameworkSelected(com.intellij.ide.util.frameworkSupport.FrameworkSupportProvider):V
- a:frameworkUnselected(com.intellij.ide.util.frameworkSupport.FrameworkSupportProvider):V
- a:wizardStepUpdated():V
a:com.intellij.ide.util.frameworkSupport.FrameworkSupportProvider
- sf:EXTENSION_POINT:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(java.lang.String,java.lang.String):V
- a:createConfigurable(com.intellij.ide.util.frameworkSupport.FrameworkSupportModel):com.intellij.ide.util.frameworkSupport.FrameworkSupportConfigurable
- getGroupId():java.lang.String
- getIcon():javax.swing.Icon
- f:getId():java.lang.String
- getPrecedingFrameworkProviderIds():java.lang.String[]
- getProjectCategories():java.lang.String[]
- getRoles():com.intellij.ide.util.frameworkSupport.FrameworkRole[]
- getTitle():java.lang.String
- getUnderlyingFrameworkId():java.lang.String
- isEnabledForModuleBuilder(com.intellij.ide.util.projectWizard.ModuleBuilder):Z
- a:isEnabledForModuleType(com.intellij.openapi.module.ModuleType):Z
- isSupportAlreadyAdded(com.intellij.openapi.module.Module):Z
- isSupportAlreadyAdded(com.intellij.openapi.module.Module,com.intellij.openapi.roots.ui.configuration.FacetsProvider):Z
a:com.intellij.ide.util.frameworkSupport.FrameworkSupportProviderBase
- com.intellij.ide.util.frameworkSupport.FrameworkSupportProvider
- p:<init>(java.lang.String,java.lang.String):V
- pa:addSupport(com.intellij.openapi.module.Module,com.intellij.openapi.roots.ModifiableRootModel,com.intellij.ide.util.frameworkSupport.FrameworkVersion,com.intellij.openapi.roots.libraries.Library):V
- createConfigurable(com.intellij.ide.util.frameworkSupport.FrameworkSupportModel):com.intellij.ide.util.frameworkSupport.FrameworkSupportConfigurable
- getVersionLabelText():java.lang.String
- getVersions():java.util.List
c:com.intellij.ide.util.frameworkSupport.FrameworkVersion
- sf:EMPTY_ARRAY:com.intellij.ide.util.frameworkSupport.FrameworkVersion[]
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.String,com.intellij.facet.ui.libraries.LibraryInfo[]):V
- <init>(java.lang.String,java.lang.String,com.intellij.facet.ui.libraries.LibraryInfo[],Z):V
- <init>(java.lang.String,Z):V
- getLibraries():com.intellij.facet.ui.libraries.LibraryInfo[]
- getLibraryName():java.lang.String
- getVersionName():java.lang.String
- isDefault():Z
a:com.intellij.ide.util.gotoByName.ChooseByNameFactory
- <init>():V
- a:createChooseByNamePopupComponent(com.intellij.ide.util.gotoByName.ChooseByNameModel):com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.util.gotoByName.ChooseByNameFactory
com.intellij.ide.util.gotoByName.ChooseByNameModel
- com.intellij.openapi.project.PossiblyDumbAware
- getCheckBoxMnemonic():C
- a:getCheckBoxName():java.lang.String
- a:getElementName(java.lang.Object):java.lang.String
- a:getElementsByName(java.lang.String,Z,java.lang.String):java.lang.Object[]
- a:getFullName(java.lang.Object):java.lang.String
- a:getHelpId():java.lang.String
- a:getListCellRenderer():javax.swing.ListCellRenderer
- a:getNames(Z):java.lang.String[]
- a:getNotFoundMessage():java.lang.String
- a:getNotInMessage():java.lang.String
- a:getPromptText():java.lang.String
- a:getSeparators():java.lang.String[]
- a:loadInitialCheckBoxState():Z
- a:saveInitialCheckBoxState(Z):V
- a:useMiddleMatching():Z
- a:willOpenEditor():Z
com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent
- a:getChosenElement():java.lang.Object
- a:invoke(com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent$Callback,com.intellij.openapi.application.ModalityState,Z):V
a:com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent$Callback
- <init>():V
- a:elementChosen(java.lang.Object):V
- onClose():V
a:com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent$MultiElementsCallback
- com.intellij.ide.util.gotoByName.ChooseByNamePopupComponent$Callback
- <init>():V
- f:elementChosen(java.lang.Object):V
- a:elementsChosen(java.util.List):V
com.intellij.ide.util.gotoByName.QuickSearchComponent
- a:registerHint(com.intellij.openapi.ui.popup.JBPopup):V
- a:unregisterHint():V
c:com.intellij.ide.util.projectWizard.EmptyModuleBuilder
- com.intellij.ide.util.projectWizard.ModuleBuilder
- <init>():V
- canCreateModule():Z
- getDescription():java.lang.String
- getGroupName():java.lang.String
- getModuleType():com.intellij.openapi.module.ModuleType
- getPresentableName():java.lang.String
- isOpenProjectSettingsAfter():Z
- isTemplateBased():Z
f:com.intellij.lang.CodeInsightActions
- sf:DELEGATE_METHODS:com.intellij.lang.LanguageExtension
- sf:GOTO_SUPER:com.intellij.lang.LanguageExtension
- sf:IMPLEMENT_METHOD:com.intellij.lang.LanguageExtension
- sf:OVERRIDE_METHOD:com.intellij.lang.LanguageExtension
c:com.intellij.lang.DefaultWordCompletionFilter
- com.intellij.lang.WordCompletionElementFilter
- <init>():V
- isWordCompletionEnabledIn(com.intellij.psi.tree.IElementType):Z
a:com.intellij.lang.ExpressionTypeProvider
- com.intellij.openapi.project.PossiblyDumbAware
- <init>():V
- getAdvancedInformationHint(com.intellij.psi.PsiElement):java.lang.String
- a:getErrorHint():java.lang.String
- a:getExpressionsAt(com.intellij.psi.PsiElement):java.util.List
- a:getInformationHint(com.intellij.psi.PsiElement):java.lang.String
- hasAdvancedInformation():Z
f:com.intellij.lang.LangBundle
- sf:BUNDLE:java.lang.String
- s:getLocale():java.util.Locale
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messagePointer(java.lang.String,java.lang.Object[]):java.util.function.Supplier
com.intellij.lang.LanguageCodeInsightActionHandler
- com.intellij.codeInsight.CodeInsightActionHandler
- a:isValidFor(com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
f:com.intellij.lang.LanguageDependentMembersRefactoringSupport
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageDependentMembersRefactoringSupport
f:com.intellij.lang.LanguageExpressionTypes
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageExpressionTypes
f:com.intellij.lang.LanguagePsiElementExternalizer
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguagePsiElementExternalizer
f:com.intellij.lang.LanguageSurrounders
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageSurrounders
f:com.intellij.lang.LanguageWordCompletion
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageWordCompletion
- isEnabledIn(com.intellij.psi.tree.IElementType):Z
- isWordCompletionInDumbModeEnabled(com.intellij.lang.Language):Z
com.intellij.lang.NodeStructure
- sf:AST_NODE_STRUCTURE:com.intellij.lang.NodeStructure
- sf:LIGHTER_NODE_STRUCTURE:com.intellij.lang.NodeStructure
- a:getEndOffset(java.lang.Object):I
- a:getStartOffset(java.lang.Object):I
- a:getTokenType(java.lang.Object):com.intellij.psi.tree.IElementType
com.intellij.lang.PsiElementExternalizer
- a:findByQualifiedName(com.intellij.openapi.project.Project,java.lang.String):com.intellij.psi.PsiElement
- a:getQualifiedName(com.intellij.psi.PsiElement):java.lang.String
com.intellij.lang.WordCompletionElementFilter
- a:isWordCompletionEnabledIn(com.intellij.psi.tree.IElementType):Z
- isWordCompletionInDumbModeEnabled():Z
com.intellij.lang.imports.ImportBlockRangeProvider
- sf:Companion:com.intellij.lang.imports.ImportBlockRangeProvider$Companion
- s:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
- a:getImportBlockRange(com.intellij.psi.PsiFile):com.intellij.openapi.util.TextRange
- s:getRange(com.intellij.psi.PsiFile):com.intellij.openapi.util.TextRange
- a:isEnabledForFile(com.intellij.psi.PsiFile):Z
f:com.intellij.lang.imports.ImportBlockRangeProvider$Companion
- f:getEP_NAME():com.intellij.openapi.extensions.ExtensionPointName
- f:getRange(com.intellij.psi.PsiFile):com.intellij.openapi.util.TextRange
- f:isFileSupported(com.intellij.psi.PsiFile):Z
com.intellij.lang.injection.ConcatenationAwareInjector
- a:getLanguagesToInject(com.intellij.lang.injection.MultiHostRegistrar,com.intellij.psi.PsiElement[]):V
f:com.intellij.lang.injection.MultiHostRegistrarPlaceholderHelper
- <init>(com.intellij.lang.injection.MultiHostRegistrar):V
- f:addGlobalPlaceholders(java.lang.Iterable):com.intellij.lang.injection.MultiHostRegistrarPlaceholderHelper
- f:addHostPlaces(com.intellij.psi.PsiLanguageInjectionHost,java.util.List):com.intellij.lang.injection.MultiHostRegistrarPlaceholderHelper
- f:doneInjecting():V
- f:startInjecting(com.intellij.lang.Language):com.intellij.lang.injection.MultiHostRegistrarPlaceholderHelper
- f:startInjecting(com.intellij.lang.Language,java.lang.String):com.intellij.lang.injection.MultiHostRegistrarPlaceholderHelper
com.intellij.lang.parameterInfo.CreateParameterInfoContext
- com.intellij.lang.parameterInfo.ParameterInfoContext
- a:getHighlightedElement():com.intellij.psi.PsiElement
- a:getItemsToShow():java.lang.Object[]
- a:getParameterListStart():I
- a:setHighlightedElement(com.intellij.psi.PsiElement):V
- a:setItemsToShow(java.lang.Object[]):V
- a:showHint(com.intellij.psi.PsiElement,I,com.intellij.lang.parameterInfo.ParameterInfoHandler):V
com.intellij.lang.parameterInfo.DeleteParameterInfoContext
- a:getCustomContext():com.intellij.openapi.util.UserDataHolderEx
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getParameterOwner():com.intellij.psi.PsiElement
f:com.intellij.lang.parameterInfo.LanguageParameterInfo
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.parameterInfo.LanguageParameterInfo
com.intellij.lang.parameterInfo.ParameterInfoContext
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getFile():com.intellij.psi.PsiFile
- a:getOffset():I
- a:getProject():com.intellij.openapi.project.Project
com.intellij.lang.parameterInfo.ParameterInfoHandler
- com.intellij.openapi.project.PossiblyDumbAware
- couldShowInLookup():Z
- createBottomComponent():javax.swing.JComponent
- dispose(com.intellij.lang.parameterInfo.DeleteParameterInfoContext):V
- a:findElementForParameterInfo(com.intellij.lang.parameterInfo.CreateParameterInfoContext):java.lang.Object
- a:findElementForUpdatingParameterInfo(com.intellij.lang.parameterInfo.UpdateParameterInfoContext):java.lang.Object
- getParameterCloseChars():java.lang.String
- getParametersForDocumentation(java.lang.Object,com.intellij.lang.parameterInfo.ParameterInfoContext):java.lang.Object[]
- getParametersForLookup(com.intellij.codeInsight.lookup.LookupElement,com.intellij.lang.parameterInfo.ParameterInfoContext):java.lang.Object[]
- isWhitespaceSensitive():Z
- processFoundElementForUpdatingParameterInfo(java.lang.Object,com.intellij.lang.parameterInfo.UpdateParameterInfoContext):V
- a:showParameterInfo(java.lang.Object,com.intellij.lang.parameterInfo.CreateParameterInfoContext):V
- supportsOverloadSwitching():Z
- syncUpdateOnCaretMove(com.intellij.lang.parameterInfo.UpdateParameterInfoContext):V
- tracksParameterIndex():Z
- updateBottomComponent(javax.swing.JComponent):V
- a:updateParameterInfo(java.lang.Object,com.intellij.lang.parameterInfo.UpdateParameterInfoContext):V
- a:updateUI(java.lang.Object,com.intellij.lang.parameterInfo.ParameterInfoUIContext):V
com.intellij.lang.parameterInfo.ParameterInfoHandlerWithTabActionSupport
- com.intellij.lang.parameterInfo.ParameterInfoHandler
- a:getActualParameterDelimiterType():com.intellij.psi.tree.IElementType
- a:getActualParameters(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement[]
- a:getActualParametersRBraceType():com.intellij.psi.tree.IElementType
- a:getArgListStopSearchClasses():java.util.Set
- a:getArgumentListAllowedParentClasses():java.util.Set
- a:getArgumentListClass():java.lang.Class
- isWhitespaceSensitive():Z
com.intellij.lang.parameterInfo.ParameterInfoUIContext
- a:getCurrentParameterIndex():I
- a:getDefaultParameterColor():java.awt.Color
- a:getParameterOwner():com.intellij.psi.PsiElement
- a:isSingleOverload():Z
- a:isSingleParameterInfo():Z
- a:isUIComponentEnabled():Z
- isUIComponentVisible():Z
- a:setUIComponentEnabled(Z):V
- setUIComponentVisible(Z):V
- a:setupRawUIComponentPresentation(java.lang.String):V
- a:setupUIComponentPresentation(java.lang.String,I,I,Z,Z,Z,java.awt.Color):java.lang.String
com.intellij.lang.parameterInfo.ParameterInfoUIContextEx
- com.intellij.lang.parameterInfo.ParameterInfoUIContext
- a:setEscapeFunction(com.intellij.util.Function):V
- a:setupUIComponentPresentation(java.lang.String[],java.util.EnumSet[],java.awt.Color):java.lang.String
e:com.intellij.lang.parameterInfo.ParameterInfoUIContextEx$Flag
- java.lang.Enum
- sf:DISABLE:com.intellij.lang.parameterInfo.ParameterInfoUIContextEx$Flag
- sf:HIGHLIGHT:com.intellij.lang.parameterInfo.ParameterInfoUIContextEx$Flag
- sf:STRIKEOUT:com.intellij.lang.parameterInfo.ParameterInfoUIContextEx$Flag
- s:valueOf(java.lang.String):com.intellij.lang.parameterInfo.ParameterInfoUIContextEx$Flag
- s:values():com.intellij.lang.parameterInfo.ParameterInfoUIContextEx$Flag[]
f:com.intellij.lang.parameterInfo.ParameterInfoUtils
- sf:DEFAULT_PARAMETER_CLOSE_CHARS:java.lang.String
- <init>():V
- s:findArgumentList(com.intellij.psi.PsiFile,I,I,com.intellij.lang.parameterInfo.ParameterInfoHandlerWithTabActionSupport):com.intellij.psi.PsiElement
- s:findArgumentList(com.intellij.psi.PsiFile,I,I,com.intellij.lang.parameterInfo.ParameterInfoHandlerWithTabActionSupport,Z):com.intellij.psi.PsiElement
- s:findParentOfType(com.intellij.psi.PsiFile,I,java.lang.Class):com.intellij.psi.PsiElement
- s:findParentOfTypeWithStopElements(com.intellij.psi.PsiFile,I,java.lang.Class,java.lang.Class[]):com.intellij.psi.PsiElement
- s:getCurrentParameterIndex(com.intellij.lang.ASTNode,I,com.intellij.psi.tree.IElementType):I
- s:getCurrentParameterIndex(com.intellij.psi.SyntaxTraverser,I,com.intellij.psi.tree.IElementType):I
com.intellij.lang.parameterInfo.UpdateParameterInfoContext
- com.intellij.lang.parameterInfo.ParameterInfoContext
- a:getCustomContext():com.intellij.openapi.util.UserDataHolderEx
- a:getHighlightedParameter():java.lang.Object
- a:getObjectsToView():java.lang.Object[]
- a:getParameterListStart():I
- a:getParameterOwner():com.intellij.psi.PsiElement
- a:isInnermostContext():Z
- a:isPreservedOnHintHidden():Z
- a:isSingleParameterInfo():Z
- a:isUIComponentEnabled(I):Z
- a:removeHint():V
- a:setCurrentParameter(I):V
- a:setHighlightedParameter(java.lang.Object):V
- a:setParameterOwner(com.intellij.psi.PsiElement):V
- a:setPreservedOnHintHidden(Z):V
- a:setUIComponentEnabled(I,Z):V
com.intellij.lang.surroundWith.SurroundDescriptor
- a:getElementsToSurround(com.intellij.psi.PsiFile,I,I):com.intellij.psi.PsiElement[]
- a:getSurrounders():com.intellij.lang.surroundWith.Surrounder[]
- a:isExclusive():Z
com.intellij.lang.surroundWith.Surrounder
- com.intellij.openapi.application.WriteActionAware
- sf:EMPTY_ARRAY:com.intellij.lang.surroundWith.Surrounder[]
- sf:myArrayFactory:com.intellij.util.ArrayFactory
- a:getTemplateDescription():java.lang.String
- a:isApplicable(com.intellij.psi.PsiElement[]):Z
- a:surroundElements(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiElement[]):com.intellij.openapi.util.TextRange
f:com.intellij.lexer.LexerUtil
- s:getRootLexer(com.intellij.lexer.Lexer):com.intellij.lexer.Lexer
- s:getTokenText(com.intellij.lexer.Lexer):java.lang.CharSequence
- s:internToken(com.intellij.lexer.Lexer,com.intellij.util.CharTable):java.lang.CharSequence
c:com.intellij.lexer.StoppableLexerAdapter
- com.intellij.lexer.DelegateLexer
- <init>(com.intellij.lexer.StoppableLexerAdapter$StoppingCondition,com.intellij.lexer.Lexer):V
- advance():V
- getCurrentPosition():com.intellij.lexer.LexerPosition
- getPrevTokenEnd():I
- getTokenEnd():I
- getTokenType():com.intellij.psi.tree.IElementType
- restore(com.intellij.lexer.LexerPosition):V
com.intellij.lexer.StoppableLexerAdapter$StoppingCondition
- a:stopsAt(com.intellij.psi.tree.IElementType,I,I):Z
com.intellij.navigation.ChooseByNameContributor
- sf:CLASS_EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:FILE_EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:SYMBOL_EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getItemsByName(java.lang.String,java.lang.String,com.intellij.openapi.project.Project,Z):com.intellij.navigation.NavigationItem[]
- a:getNames(com.intellij.openapi.project.Project,Z):java.lang.String[]
f:com.intellij.navigation.ChooseByNameRegistry
- <init>():V
- getClassModelContributorList():java.util.List
- getClassModelContributors():com.intellij.navigation.ChooseByNameContributor[]
- s:getInstance():com.intellij.navigation.ChooseByNameRegistry
- getSymbolModelContributors():java.util.List
com.intellij.navigation.GotoClassContributor
- com.intellij.navigation.ChooseByNameContributor
- getElementKind():java.lang.String
- getElementKindsPluralized():java.util.List
- getElementLanguage():com.intellij.lang.Language
- a:getQualifiedName(com.intellij.navigation.NavigationItem):java.lang.String
- a:getQualifiedNameSeparator():java.lang.String
- getTabTitlePluralized():java.lang.String
c:com.intellij.navigation.GotoRelatedItem
- sf:DEFAULT_GROUP_NAME:java.lang.String
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,java.lang.String):V
- p:<init>(com.intellij.psi.PsiElement,java.lang.String,I):V
- s:createItems(java.util.Collection):java.util.List
- s:createItems(java.util.Collection,java.lang.String):java.util.List
- equals(java.lang.Object):Z
- getCustomContainerName():java.lang.String
- getCustomIcon():javax.swing.Icon
- getCustomName():java.lang.String
- getElement():com.intellij.psi.PsiElement
- getGroup():java.lang.String
- getMnemonic():I
- hashCode():I
- navigate():V
a:com.intellij.navigation.GotoRelatedProvider
- <init>():V
- getItems(com.intellij.openapi.actionSystem.DataContext):java.util.List
- getItems(com.intellij.psi.PsiElement):java.util.List
com.intellij.openapi.editor.ElementColorProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getColorFrom(com.intellij.psi.PsiElement):java.awt.Color
- a:setColorTo(com.intellij.psi.PsiElement,java.awt.Color):V
a:com.intellij.openapi.editor.HectorComponentPanel
- com.intellij.openapi.options.UnnamedConfigurable
- <init>():V
- canClose():Z
com.intellij.openapi.editor.HectorComponentPanelsProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createConfigurable(com.intellij.psi.PsiFile):com.intellij.openapi.editor.HectorComponentPanel
c:com.intellij.openapi.editor.LanguageIndentStrategy
- com.intellij.lang.LanguageExtension
- sf:EP_NAME:java.lang.String
- sf:INSTANCE:com.intellij.openapi.editor.LanguageIndentStrategy
- <init>():V
- s:getIndentStrategy(com.intellij.psi.PsiFile):com.intellij.openapi.editor.IndentStrategy
- s:isDefault(com.intellij.openapi.editor.IndentStrategy):Z
c:com.intellij.openapi.editor.PsiAwareDefaultLineWrapPositionStrategy
- com.intellij.openapi.editor.PsiAwareLineWrapPositionStrategy
- <init>(Z,com.intellij.psi.tree.IElementType[]):V
- p:doCalculateWrapPosition(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,I,I,I,Z):I
a:com.intellij.openapi.editor.PsiAwareLineWrapPositionStrategy
- com.intellij.openapi.editor.LineWrapPositionStrategy
- sf:NO_ELEMENT_WRAP:I
- sf:NO_LINE_WRAP:I
- <init>(Z,com.intellij.psi.tree.IElementType[]):V
- calculateWrapPosition(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,I,I,I,Z,Z):I
- pa:doCalculateWrapPosition(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project,com.intellij.psi.PsiElement,I,I,I,Z):I
f:com.intellij.openapi.module.ModuleTypeEP
- com.intellij.serviceContainer.LazyExtensionInstance
- com.intellij.openapi.extensions.PluginAware
- classpathProvider:Z
- id:java.lang.String
- implementationClass:java.lang.String
- <init>():V
- getModuleType():com.intellij.openapi.module.ModuleType
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
f:com.intellij.openapi.module.ModuleUtil
- com.intellij.openapi.module.ModuleUtilCore
- s:getModuleType(com.intellij.openapi.module.Module):com.intellij.openapi.module.ModuleType
- s:getModulesOfType(com.intellij.openapi.project.Project,com.intellij.openapi.module.ModuleType):java.util.Collection
- s:hasModulesOfType(com.intellij.openapi.project.Project,com.intellij.openapi.module.ModuleType):Z
- s:hasTestSourceRoots(com.intellij.openapi.project.Project):Z
c:com.intellij.openapi.paths.PathReference
- sf:NULL_ICON:com.intellij.util.NullableFunction
- <init>(java.lang.String,com.intellij.util.Function):V
- getIcon():javax.swing.Icon
- getPath():java.lang.String
- getTrimmedPath():java.lang.String
- resolve():com.intellij.psi.PsiElement
- s:trimPath(java.lang.String):java.lang.String
c:com.intellij.openapi.paths.PathReference$ResolveFunction
- com.intellij.util.NullableFunction
- sf:NULL_RESOLVE_FUNCTION:com.intellij.openapi.paths.PathReference$ResolveFunction
- <init>(javax.swing.Icon):V
- fun(com.intellij.openapi.paths.PathReference):javax.swing.Icon
a:com.intellij.openapi.paths.PathReferenceManager
- sf:ANCHOR_REFERENCE_PROVIDER_EP:com.intellij.openapi.extensions.ExtensionPointName
- sf:PATH_REFERENCE_PROVIDER_EP:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:createCustomReferences(com.intellij.psi.PsiElement,Z,com.intellij.openapi.paths.PathReferenceProvider[]):com.intellij.psi.PsiReference[]
- a:createReferences(com.intellij.psi.PsiElement,Z,Z,Z,com.intellij.openapi.fileTypes.FileType[],com.intellij.openapi.paths.PathReferenceProvider[]):com.intellij.psi.PsiReference[]
- a:createReferences(com.intellij.psi.PsiElement,Z,Z,Z,com.intellij.openapi.paths.PathReferenceProvider[]):com.intellij.psi.PsiReference[]
- a:createReferences(com.intellij.psi.PsiElement,Z,com.intellij.openapi.paths.PathReferenceProvider[]):com.intellij.psi.PsiReference[]
- a:createStaticPathReferenceProvider(Z):com.intellij.openapi.paths.PathReferenceProvider
- a:getCustomPathReference(java.lang.String,com.intellij.openapi.module.Module,com.intellij.psi.PsiElement,com.intellij.openapi.paths.PathReferenceProvider[]):com.intellij.openapi.paths.PathReference
- a:getGlobalWebPathReferenceProvider():com.intellij.openapi.paths.PathReferenceProvider
- s:getInstance():com.intellij.openapi.paths.PathReferenceManager
- a:getPathReference(java.lang.String,com.intellij.psi.PsiElement,com.intellij.openapi.paths.PathReferenceProvider[]):com.intellij.openapi.paths.PathReference
- s:getReferencesFromProvider(com.intellij.openapi.paths.PathReferenceProvider,com.intellij.psi.PsiElement,Z):com.intellij.psi.PsiReference[]
com.intellij.openapi.paths.PathReferenceProvider
- a:createReferences(com.intellij.psi.PsiElement,java.util.List,Z):Z
- a:getPathReference(java.lang.String,com.intellij.psi.PsiElement):com.intellij.openapi.paths.PathReference
com.intellij.openapi.projectRoots.OutOfSourcesChecker
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getFileType():com.intellij.openapi.fileTypes.FileType
- a:isOutOfSources(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
com.intellij.openapi.projectRoots.ValidatableSdkAdditionalData
- com.intellij.openapi.projectRoots.SdkAdditionalData
- a:checkValid(com.intellij.openapi.projectRoots.SdkModel):V
f:com.intellij.openapi.projectRoots.impl.UnknownSdkType
- com.intellij.openapi.projectRoots.SdkType
- allowCreationByUser():Z
- createAdditionalDataConfigurable(com.intellij.openapi.projectRoots.SdkModel,com.intellij.openapi.projectRoots.SdkModificator):com.intellij.openapi.projectRoots.AdditionalDataConfigurable
- getBinPath(com.intellij.openapi.projectRoots.Sdk):java.lang.String
- getIcon():javax.swing.Icon
- s:getInstance(java.lang.String):com.intellij.openapi.projectRoots.impl.UnknownSdkType
- getPresentableName():java.lang.String
- getToolsPath(com.intellij.openapi.projectRoots.Sdk):java.lang.String
- getVMExecutablePath(com.intellij.openapi.projectRoots.Sdk):java.lang.String
- getVersionString(java.lang.String):java.lang.String
- isValidSdkHome(java.lang.String):Z
- loadAdditionalData(org.jdom.Element):com.intellij.openapi.projectRoots.SdkAdditionalData
- saveAdditionalData(com.intellij.openapi.projectRoots.SdkAdditionalData,org.jdom.Element):V
- suggestHomePath():java.lang.String
- suggestSdkName(java.lang.String,java.lang.String):java.lang.String
c:com.intellij.openapi.projectRoots.ui.PathEditor
- sf:INVALID_COLOR:java.awt.Color
- p:myEnabled:Z
- p:myPanel:javax.swing.JPanel
- <init>(com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- p:addElement(com.intellij.openapi.vfs.VirtualFile):Z
- addPaths(com.intellij.openapi.vfs.VirtualFile[]):V
- p:addToolbarButtons(com.intellij.ui.ToolbarDecorator):V
- p:adjustAddedFileSet(java.awt.Component,com.intellij.openapi.vfs.VirtualFile[]):com.intellij.openapi.vfs.VirtualFile[]
- clearList():V
- createComponent():javax.swing.JComponent
- p:createListCellRenderer(com.intellij.ui.components.JBList):javax.swing.ListCellRenderer
- p:createListModel():javax.swing.DefaultListModel
- p:doAddItems():com.intellij.openapi.vfs.VirtualFile[]
- p:doRemoveItems(I[],javax.swing.JList):V
- p:getListModel():javax.swing.DefaultListModel
- getRoots():com.intellij.openapi.vfs.VirtualFile[]
- p:getRowCount():I
- p:getSelectedRoots():com.intellij.openapi.vfs.VirtualFile[]
- p:getValueAt(I):com.intellij.openapi.vfs.VirtualFile
- isModified():Z
- p:isRemoveActionEnabled(com.intellij.openapi.vfs.VirtualFile[]):Z
- p:isUrlInserted():Z
- p:itemsRemoved(java.util.List):V
- removePaths(com.intellij.openapi.vfs.VirtualFile[]):V
- p:requestDefaultFocus():V
- resetPath(java.util.List):V
- setAddBaseDir(com.intellij.openapi.vfs.VirtualFile):V
- p:setEnabled(Z):V
- p:setModified(Z):V
- p:setSelectedRoots(com.intellij.openapi.vfs.VirtualFile[]):V
pc:com.intellij.openapi.projectRoots.ui.PathEditor$PathCellRenderer
- com.intellij.ui.ColoredListCellRenderer
- p:<init>():V
- p:customizeCellRenderer(javax.swing.JList,com.intellij.openapi.vfs.VirtualFile,I,Z,Z):V
- p:getItemIcon(com.intellij.openapi.vfs.VirtualFile):javax.swing.Icon
c:com.intellij.openapi.projectRoots.ui.SdkPathEditor
- com.intellij.openapi.projectRoots.ui.PathEditor
- <init>(java.lang.String,com.intellij.openapi.roots.OrderRootType,com.intellij.openapi.fileChooser.FileChooserDescriptor):V
- apply(com.intellij.openapi.projectRoots.SdkModificator):V
- getDisplayName():java.lang.String
- getOrderRootType():com.intellij.openapi.roots.OrderRootType
- reset(com.intellij.openapi.projectRoots.SdkModificator):V
com.intellij.openapi.roots.CollectingContentIterator
- com.intellij.openapi.roots.ContentIterator
- a:getFiles():java.util.List
a:com.intellij.openapi.roots.CompilerProjectExtension
- <init>():V
- a:getCompilerOutput():com.intellij.openapi.vfs.VirtualFile
- a:getCompilerOutputPointer():com.intellij.openapi.vfs.pointers.VirtualFilePointer
- a:getCompilerOutputUrl():java.lang.String
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.roots.CompilerProjectExtension
- a:setCompilerOutputPointer(com.intellij.openapi.vfs.pointers.VirtualFilePointer):V
- a:setCompilerOutputUrl(java.lang.String):V
com.intellij.openapi.roots.ModifiableModelsProvider
- a:commitFacetModifiableModel(com.intellij.openapi.module.Module,com.intellij.facet.ModifiableFacetModel):V
- a:commitModuleModifiableModel(com.intellij.openapi.roots.ModifiableRootModel):V
- a:disposeLibraryTableModifiableModel(com.intellij.openapi.roots.libraries.LibraryTable$ModifiableModel):V
- a:disposeModuleModifiableModel(com.intellij.openapi.roots.ModifiableRootModel):V
- a:getFacetModifiableModel(com.intellij.openapi.module.Module):com.intellij.facet.ModifiableFacetModel
- s:getInstance():com.intellij.openapi.roots.ModifiableModelsProvider
- a:getLibraryTableModifiableModel():com.intellij.openapi.roots.libraries.LibraryTable$ModifiableModel
- a:getLibraryTableModifiableModel(com.intellij.openapi.project.Project):com.intellij.openapi.roots.libraries.LibraryTable$ModifiableModel
- a:getModuleModifiableModel(com.intellij.openapi.module.Module):com.intellij.openapi.roots.ModifiableRootModel
f:com.intellij.openapi.roots.ModifiableModelsProvider$SERVICE
- s:getInstance():com.intellij.openapi.roots.ModifiableModelsProvider
com.intellij.openapi.roots.WatchedRootsProvider
- a:getRootsToWatch(com.intellij.openapi.project.Project):java.util.Set
com.intellij.openapi.roots.ui.OrderRootTypeUIFactory
- sf:FACTORY:com.intellij.openapi.util.KeyedExtensionFactory
- a:createPathEditor(com.intellij.openapi.projectRoots.Sdk):com.intellij.openapi.projectRoots.ui.SdkPathEditor
- a:getIcon():javax.swing.Icon
- a:getNodeText():java.lang.String
c:com.intellij.openapi.roots.ui.configuration.libraryEditor.DocumentationOrderRootTypeUIFactory
- com.intellij.openapi.roots.ui.OrderRootTypeUIFactory
- <init>():V
- createPathEditor(com.intellij.openapi.projectRoots.Sdk):com.intellij.openapi.projectRoots.ui.SdkPathEditor
- getIcon():javax.swing.Icon
- getNodeText():java.lang.String
e:com.intellij.platform.lang.lsWidget.LanguageServicePopupSection
- java.lang.Enum
- sf:ForCurrentFile:com.intellij.platform.lang.lsWidget.LanguageServicePopupSection
- sf:Other:com.intellij.platform.lang.lsWidget.LanguageServicePopupSection
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.platform.lang.lsWidget.LanguageServicePopupSection
- s:values():com.intellij.platform.lang.lsWidget.LanguageServicePopupSection[]
f:com.intellij.platform.lang.lsWidget.OpenSettingsAction
- com.intellij.openapi.actionSystem.AnAction
- com.intellij.openapi.project.DumbAware
- <init>(java.lang.Class,java.lang.String,javax.swing.Icon):V
- b:<init>(java.lang.Class,java.lang.String,javax.swing.Icon,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent):V
a:com.intellij.pom.PomDescriptionProvider
- com.intellij.psi.ElementDescriptionProvider
- <init>():V
- a:getElementDescription(com.intellij.pom.PomTarget,com.intellij.psi.ElementDescriptionLocation):java.lang.String
- getElementDescription(com.intellij.psi.PsiElement,com.intellij.psi.ElementDescriptionLocation):java.lang.String
com.intellij.properties.provider.PropertiesProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getPropertyValue(java.lang.String,com.intellij.psi.search.GlobalSearchScope):java.lang.String
c:com.intellij.psi.ManipulatableTarget
- com.intellij.psi.DelegatePsiTarget
- com.intellij.pom.PomRenameableTarget
- com.intellij.pom.PsiDeclaredTarget
- <init>(com.intellij.psi.PsiElement):V
- getName():java.lang.String
- getNameIdentifierRange():com.intellij.openapi.util.TextRange
- isWritable():Z
- setName(java.lang.String):java.lang.Object
a:com.intellij.psi.PsiChildLink
- com.intellij.psi.PsiRefElementCreator
- <init>():V
- f:createChildRef(com.intellij.psi.PsiElement):com.intellij.psi.PsiElementRef
- f:createChildRef(com.intellij.psi.PsiElementRef):com.intellij.psi.PsiElementRef
- a:findLinkedChild(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
f:com.intellij.psi.PsiElementRef
- com.intellij.model.Pointer
- dereference():com.intellij.psi.PsiElement
- ensurePsiElementExists():com.intellij.psi.PsiElement
- equals(java.lang.Object):Z
- getPsiElement():com.intellij.psi.PsiElement
- getPsiManager():com.intellij.psi.PsiManager
- getRoot():com.intellij.psi.PsiElement
- hashCode():I
- s:imaginary(com.intellij.psi.PsiElementRef,com.intellij.psi.PsiRefElementCreator):com.intellij.psi.PsiElementRef
- isImaginary():Z
- isValid():Z
- s:real(com.intellij.psi.PsiElement):com.intellij.psi.PsiElementRef
com.intellij.psi.PsiRefElementCreator
- a:createChild(java.lang.Object):java.lang.Object
com.intellij.psi.PsiReferenceFactory
- a:getReferencesByElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiReference[]
c:com.intellij.psi.PsiReferenceWrapper
- com.intellij.psi.PsiReference
- <init>(com.intellij.psi.PsiReference):V
- bindToElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- cast(java.lang.Class):com.intellij.psi.PsiReference
- getCanonicalText():java.lang.String
- getElement():com.intellij.psi.PsiElement
- getRangeInElement():com.intellij.openapi.util.TextRange
- getVariants():java.lang.Object[]
- handleElementRename(java.lang.String):com.intellij.psi.PsiElement
- isInstance(java.lang.Class):Z
- isReferenceTo(com.intellij.psi.PsiElement):Z
- isSoft():Z
- resolve():com.intellij.psi.PsiElement
c:com.intellij.psi.RenameableDelegatePsiTarget
- com.intellij.psi.DelegatePsiTarget
- com.intellij.pom.PomRenameableTarget
- <init>(com.intellij.psi.PsiNamedElement):V
- getName():java.lang.String
- isWritable():Z
- setName(java.lang.String):com.intellij.psi.RenameableDelegatePsiTarget
com.intellij.psi.codeStyle.CodeStyleConfigurable
- com.intellij.openapi.options.Configurable
- a:apply(com.intellij.psi.codeStyle.CodeStyleSettings):V
- a:reset(com.intellij.psi.codeStyle.CodeStyleSettings):V
c:com.intellij.psi.codeStyle.CodeStyleGroup
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.intellij.lang.Language):V
- getDescription():java.lang.String
- getDisplayName():java.lang.String
- getHelpTopic():java.lang.String
- getId():java.lang.String
- getLanguage():com.intellij.lang.Language
com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable
- sf:BLANK_LINES:java.lang.String
- sf:BLANK_LINES_KEEP:java.lang.String
- sf:BRACE_OPTIONS:java.lang.String[]
- sf:BRACE_PLACEMENT_VALUES:I[]
- sf:BRACE_VALUES:I[]
- sf:SPACES_AROUND_OPERATORS:java.lang.String
- sf:SPACES_BEFORE_LEFT_BRACE:java.lang.String
- sf:SPACES_BEFORE_PARENTHESES:java.lang.String
- sf:SPACES_OTHER:java.lang.String
- sf:SPACES_WITHIN:java.lang.String
- sf:WRAPPING_BRACES:java.lang.String
- sf:WRAPPING_KEEP:java.lang.String
- sf:WRAP_ON_TYPING_VALUES:I[]
- sf:WRAP_OPTIONS:java.lang.String[]
- sf:WRAP_VALUES:I[]
- sf:WRAP_VALUES_FOR_SINGLETON:I[]
- moveStandardOption(java.lang.String,java.lang.String):V
- renameStandardOption(java.lang.String,java.lang.String):V
- a:showAllStandardOptions():V
- showCustomOption(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor,java.lang.String,java.lang.Object[]):V
- showCustomOption(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[]):V
- a:showStandardOptions(java.lang.String[]):V
e:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- java.lang.Enum
- sf:BLANK_LINES_AFTER_ANONYMOUS_CLASS_HEADER:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_AFTER_CLASS_HEADER:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_AFTER_IMPORTS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_AFTER_PACKAGE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_AROUND_CLASS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_AROUND_FIELD:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_AROUND_FIELD_IN_INTERFACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_AROUND_METHOD:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_AROUND_METHOD_IN_INTERFACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_BEFORE_CLASS_END:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_BEFORE_IMPORTS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_BEFORE_METHOD_BODY:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:BLANK_LINES_BEFORE_PACKAGE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:KEEP_BLANK_LINES_BEFORE_RBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:KEEP_BLANK_LINES_BETWEEN_PACKAGE_DECLARATION_AND_HEADER:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:KEEP_BLANK_LINES_IN_CODE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- sf:KEEP_BLANK_LINES_IN_DECLARATIONS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- s:valueOf(java.lang.String):com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption
- s:values():com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$BlankLinesOption[]
e:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$CommenterOption
- java.lang.Enum
- sf:BLOCK_COMMENT_ADD_SPACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$CommenterOption
- sf:BLOCK_COMMENT_AT_FIRST_COLUMN:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$CommenterOption
- sf:LINE_COMMENT_ADD_SPACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$CommenterOption
- sf:LINE_COMMENT_ADD_SPACE_IN_SUPPRESSION:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$CommenterOption
- sf:LINE_COMMENT_ADD_SPACE_ON_REFORMAT:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$CommenterOption
- sf:LINE_COMMENT_AT_FIRST_COLUMN:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$CommenterOption
- s:valueOf(java.lang.String):com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$CommenterOption
- s:values():com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$CommenterOption[]
e:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- java.lang.Enum
- sf:CONTINUATION_INDENT_SIZE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- sf:INDENT_SIZE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- sf:KEEP_INDENTS_ON_EMPTY_LINES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- sf:LABEL_INDENT_ABSOLUTE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- sf:LABEL_INDENT_SIZE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- sf:SMART_TABS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- sf:TAB_SIZE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- sf:USE_RELATIVE_INDENTS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- sf:USE_TAB_CHARACTER:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- s:valueOf(java.lang.String):com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption
- s:values():com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$IndentOption[]
e:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor
- java.lang.Enum
- sf:AFTER:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor
- sf:BEFORE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor
- sf:NONE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor
- s:valueOf(java.lang.String):com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor
- s:values():com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$OptionAnchor[]
e:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- java.lang.Enum
- sf:INSERT_FIRST_SPACE_IN_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AFTER_COLON:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AFTER_COMMA:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AFTER_COMMA_IN_TYPE_ARGUMENTS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AFTER_QUEST:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AFTER_SEMICOLON:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AFTER_TYPE_CAST:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_ADDITIVE_OPERATORS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_ASSIGNMENT_OPERATORS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_BITWISE_OPERATORS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_EQUALITY_OPERATORS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_LAMBDA_ARROW:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_LOGICAL_OPERATORS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_METHOD_REF_DBL_COLON:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_MULTIPLICATIVE_OPERATORS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_RELATIONAL_OPERATORS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_SHIFT_OPERATORS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_AROUND_UNARY_OPERATOR:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_ANNOTATION_ARRAY_INITIALIZER_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_ANOTATION_PARAMETER_LIST:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_ARRAY_INITIALIZER_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_CATCH_KEYWORD:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_CATCH_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_CATCH_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_CLASS_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_COLON:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_COMMA:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_DO_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_ELSE_KEYWORD:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_ELSE_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_FINALLY_KEYWORD:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_FINALLY_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_FOR_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_FOR_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_IF_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_IF_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_METHOD_CALL_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_METHOD_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_METHOD_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_QUEST:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_SEMICOLON:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_SWITCH_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_SWITCH_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_SYNCHRONIZED_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_SYNCHRONIZED_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_TRY_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_TRY_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_TYPE_PARAMETER_LIST:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_WHILE_KEYWORD:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_WHILE_LBRACE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_BEFORE_WHILE_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_ANNOTATION_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_ARRAY_INITIALIZER_BRACES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_BRACES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_BRACKETS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_CAST_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_CATCH_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_EMPTY_ARRAY_INITIALIZER_BRACES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_EMPTY_METHOD_CALL_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_EMPTY_METHOD_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_FOR_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_IF_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_METHOD_CALL_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_METHOD_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_SWITCH_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_SYNCHRONIZED_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_TRY_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- sf:SPACE_WITHIN_WHILE_PARENTHESES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- s:valueOf(java.lang.String):com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption
- s:values():com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$SpacingOption[]
e:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- java.lang.Enum
- sf:ALIGN_CONSECUTIVE_ASSIGNMENTS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_CONSECUTIVE_VARIABLE_DECLARATIONS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_GROUP_FIELD_DECLARATIONS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_ARRAY_INITIALIZER_EXPRESSION:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_ASSIGNMENT:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_BINARY_OPERATION:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_CHAINED_METHODS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_EXTENDS_LIST:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_FOR:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_METHOD_BRACKETS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_PARAMETERS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_PARAMETERS_IN_CALLS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_PARENTHESIZED_EXPRESSION:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_RESOURCES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_TERNARY_OPERATION:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_MULTILINE_THROWS_LIST:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_SUBSEQUENT_SIMPLE_METHODS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ALIGN_THROWS_KEYWORD:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ARRAY_INITIALIZER_LBRACE_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ARRAY_INITIALIZER_RBRACE_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ARRAY_INITIALIZER_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ASSERT_STATEMENT_COLON_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ASSERT_STATEMENT_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ASSIGNMENT_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:BINARY_OPERATION_SIGN_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:BINARY_OPERATION_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:BRACE_STYLE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:BUILDER_METHODS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:CALL_PARAMETERS_LPAREN_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:CALL_PARAMETERS_RPAREN_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:CALL_PARAMETERS_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:CASE_STATEMENT_ON_NEW_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:CATCH_ON_NEW_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:CLASS_ANNOTATION_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:CLASS_BRACE_STYLE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:DOWHILE_BRACE_FORCE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:DO_NOT_INDENT_TOP_LEVEL_CLASS_MEMBERS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ELSE_ON_NEW_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:ENUM_CONSTANTS_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:EXTENDS_KEYWORD_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:EXTENDS_LIST_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:FIELD_ANNOTATION_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:FINALLY_ON_NEW_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:FLYING_GEESE_BRACES_GAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:FOR_BRACE_FORCE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:FOR_STATEMENT_LPAREN_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:FOR_STATEMENT_RPAREN_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:FOR_STATEMENT_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:IF_BRACE_FORCE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:INDENT_BREAK_FROM_CASE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:INDENT_CASE_FROM_SWITCH:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:INDENT_WHEN_CASES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:KEEP_BUILDER_METHODS_INDENTS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:KEEP_CONTROL_STATEMENT_IN_ONE_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:KEEP_FIRST_COLUMN_COMMENT:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:KEEP_LINE_BREAKS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:KEEP_MULTIPLE_EXPRESSIONS_IN_ONE_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:KEEP_SIMPLE_BLOCKS_IN_ONE_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:KEEP_SIMPLE_CLASSES_IN_ONE_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:KEEP_SIMPLE_LAMBDAS_IN_ONE_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:KEEP_SIMPLE_METHODS_IN_ONE_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:LABELED_STATEMENT_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:LAMBDA_BRACE_STYLE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:METHOD_ANNOTATION_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:METHOD_BRACE_STYLE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:METHOD_CALL_CHAIN_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:METHOD_PARAMETERS_LPAREN_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:METHOD_PARAMETERS_RPAREN_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:METHOD_PARAMETERS_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:MODIFIER_LIST_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:PARAMETER_ANNOTATION_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:PARENTHESES_EXPRESSION_LPAREN_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:PARENTHESES_EXPRESSION_RPAREN_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:PLACE_ASSIGNMENT_SIGN_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:PREFER_PARAMETERS_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:RESOURCE_LIST_LPAREN_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:RESOURCE_LIST_RPAREN_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:RESOURCE_LIST_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:RIGHT_MARGIN:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:SPECIAL_ELSE_IF_TREATMENT:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:SWITCH_EXPRESSIONS_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:TERNARY_OPERATION_SIGNS_ON_NEXT_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:TERNARY_OPERATION_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:THROWS_KEYWORD_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:THROWS_LIST_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:USE_FLYING_GEESE_BRACES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:VARIABLE_ANNOTATION_WRAP:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:WHILE_BRACE_FORCE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:WHILE_ON_NEW_LINE:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:WRAP_COMMENTS:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:WRAP_FIRST_METHOD_IN_CALL_CHAIN:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:WRAP_LONG_LINES:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- sf:WRAP_ON_TYPING:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- s:valueOf(java.lang.String):com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption
- s:values():com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable$WrappingOrBraceOption[]
f:com.intellij.psi.codeStyle.CodeStyleSettingsCustomizableOptions
- f:BLANK_LINES:java.lang.String
- f:BLANK_LINES_KEEP:java.lang.String
- f:BRACE_OPTIONS:java.lang.String[]
- f:BRACE_PLACEMENT_OPTIONS:java.lang.String[]
- f:SPACES_AROUND_OPERATORS:java.lang.String
- f:SPACES_BEFORE_KEYWORD:java.lang.String
- f:SPACES_BEFORE_LEFT_BRACE:java.lang.String
- f:SPACES_BEFORE_PARENTHESES:java.lang.String
- f:SPACES_IN_TERNARY_OPERATOR:java.lang.String
- f:SPACES_IN_TYPE_ARGUMENTS:java.lang.String
- f:SPACES_IN_TYPE_PARAMETERS:java.lang.String
- f:SPACES_OTHER:java.lang.String
- f:SPACES_WITHIN:java.lang.String
- f:SPACES_WITHIN_TYPE_ARGUMENTS:java.lang.String
- f:WRAPPING_ARRAY_INITIALIZER:java.lang.String
- f:WRAPPING_ASSERT_STATEMENT:java.lang.String
- f:WRAPPING_ASSIGNMENT:java.lang.String
- f:WRAPPING_BINARY_OPERATION:java.lang.String
- f:WRAPPING_BRACES:java.lang.String
- f:WRAPPING_CALL_CHAIN:java.lang.String
- f:WRAPPING_COMMENTS:java.lang.String
- f:WRAPPING_DOWHILE_STATEMENT:java.lang.String
- f:WRAPPING_EXTENDS_KEYWORD:java.lang.String
- f:WRAPPING_EXTENDS_LIST:java.lang.String
- f:WRAPPING_FIELDS_VARIABLES_GROUPS:java.lang.String
- f:WRAPPING_FOR_STATEMENT:java.lang.String
- f:WRAPPING_IF_STATEMENT:java.lang.String
- f:WRAPPING_KEEP:java.lang.String
- f:WRAPPING_METHOD_ARGUMENTS_WRAPPING:java.lang.String
- f:WRAPPING_METHOD_PARAMETERS:java.lang.String
- f:WRAPPING_METHOD_PARENTHESES:java.lang.String
- f:WRAPPING_MODIFIER_LIST:java.lang.String
- f:WRAPPING_SWITCH_STATEMENT:java.lang.String
- f:WRAPPING_TERNARY_OPERATION:java.lang.String
- f:WRAPPING_THROWS_KEYWORD:java.lang.String
- f:WRAPPING_THROWS_LIST:java.lang.String
- f:WRAPPING_TRY_RESOURCE_LIST:java.lang.String
- f:WRAPPING_TRY_STATEMENT:java.lang.String
- f:WRAPPING_WHILE_STATEMENT:java.lang.String
- f:WRAP_ON_TYPING_OPTIONS:java.lang.String[]
- f:WRAP_OPTIONS:java.lang.String[]
- f:WRAP_OPTIONS_FOR_SINGLETON:java.lang.String[]
- s:getInstance():com.intellij.psi.codeStyle.CodeStyleSettingsCustomizableOptions
a:com.intellij.psi.codeStyle.CodeStyleSettingsProvider
- com.intellij.psi.codeStyle.DisplayPrioritySortable
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- createConfigurable(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.psi.codeStyle.CodeStyleConfigurable
- createCustomSettings(com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.psi.codeStyle.CustomCodeStyleSettings
- createSettingsPage(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.openapi.options.Configurable
- getConfigurableDisplayName():java.lang.String
- getGroup():com.intellij.psi.codeStyle.CodeStyleGroup
- getLanguage():com.intellij.lang.Language
- getPriority():com.intellij.psi.codeStyle.DisplayPriority
- hasSettingsPage():Z
e:com.intellij.psi.codeStyle.DisplayPriority
- java.lang.Enum
- sf:CODE_SETTINGS:com.intellij.psi.codeStyle.DisplayPriority
- sf:COMMON_SETTINGS:com.intellij.psi.codeStyle.DisplayPriority
- sf:FONT_SETTINGS:com.intellij.psi.codeStyle.DisplayPriority
- sf:GENERAL_SETTINGS:com.intellij.psi.codeStyle.DisplayPriority
- sf:KEY_LANGUAGE_SETTINGS:com.intellij.psi.codeStyle.DisplayPriority
- sf:LANGUAGE_SETTINGS:com.intellij.psi.codeStyle.DisplayPriority
- sf:OTHER_SETTINGS:com.intellij.psi.codeStyle.DisplayPriority
- s:valueOf(java.lang.String):com.intellij.psi.codeStyle.DisplayPriority
- s:values():com.intellij.psi.codeStyle.DisplayPriority[]
com.intellij.psi.codeStyle.DisplayPrioritySortable
- s:compare(java.lang.Object,java.lang.Object,java.util.function.Function):I
- a:getPriority():com.intellij.psi.codeStyle.DisplayPriority
- getWeight():I
com.intellij.psi.codeStyle.FileTypeIndentOptionsProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:createIndentOptions():com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions
- a:getFileType():com.intellij.openapi.fileTypes.FileType
- a:getPreviewText():java.lang.String
- a:prepareForReformat(com.intellij.psi.PsiFile):V
a:com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider
- com.intellij.psi.codeStyle.CodeStyleSettingsProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- createConfigurable(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.psi.codeStyle.CodeStyleConfigurable
- createFileFromText(com.intellij.openapi.project.Project,java.lang.String):com.intellij.psi.PsiFile
- p:customizeDefaults(com.intellij.psi.codeStyle.CommonCodeStyleSettings,com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):V
- customizeSettings(com.intellij.psi.codeStyle.CodeStyleSettingsCustomizable,com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType):V
- s:findByExternalLanguageId(java.lang.String):com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider
- s:findUsingBaseLanguage(com.intellij.lang.Language):com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider
- s:forLanguage(com.intellij.lang.Language):com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider
- getAdditionalAccessors(java.lang.Object):java.util.List
- s:getAllProviders():java.util.List
- getApplicableLanguages():java.util.List
- s:getCodeSample(com.intellij.lang.Language,com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType):java.lang.String
- a:getCodeSample(com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType):java.lang.String
- getDefaultCommonSettings():com.intellij.psi.codeStyle.CommonCodeStyleSettings
- s:getDefaultCommonSettings(com.intellij.lang.Language):com.intellij.psi.codeStyle.CommonCodeStyleSettings
- getDisplayPriority():com.intellij.psi.codeStyle.DisplayPriority
- getDocCommentSettings(com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.psi.codeStyle.DocCommentSettings
- getExternalLanguageId():java.lang.String
- getFileExt():java.lang.String
- s:getFileExt(com.intellij.lang.Language):java.lang.String
- getIndentOptionsEditor():com.intellij.application.options.IndentOptionsEditor
- a:getLanguage():com.intellij.lang.Language
- s:getLanguage(java.lang.String):com.intellij.lang.Language
- getLanguageName():java.lang.String
- s:getLanguageName(com.intellij.lang.Language):java.lang.String
- s:getLanguagesWithCodeStyleSettings():java.util.List
- s:getRightMargin(com.intellij.lang.Language,com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType):I
- getRightMargin(com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType):I
- s:getSettingsPagesProviders():java.util.Set
- getSupportedFields():java.util.Set
- getSupportedFields(com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType):java.util.Set
- supportsExternalFormats():Z
e:com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- java.lang.Enum
- sf:BLANK_LINES_SETTINGS:com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- sf:COMMENTER_SETTINGS:com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- sf:INDENT_SETTINGS:com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- sf:LANGUAGE_SPECIFIC:com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- sf:SPACING_SETTINGS:com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- sf:WRAPPING_AND_BRACES_SETTINGS:com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- s:valueOf(java.lang.String):com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType
- s:values():com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType[]
com.intellij.psi.codeStyle.arrangement.std.ArrangementColorsAware
- a:getBorderColor(com.intellij.openapi.editor.colors.EditorColorsScheme,Z):java.awt.Color
- a:getTextAttributes(com.intellij.openapi.editor.colors.EditorColorsScheme,com.intellij.psi.codeStyle.arrangement.std.ArrangementSettingsToken,Z):com.intellij.openapi.editor.markup.TextAttributes
c:com.intellij.psi.codeStyle.arrangement.std.ArrangementStandardSettingsManager
- <init>(com.intellij.psi.codeStyle.arrangement.std.ArrangementStandardSettingsAware,com.intellij.application.options.codeStyle.arrangement.color.ArrangementColorsProvider):V
- <init>(com.intellij.psi.codeStyle.arrangement.std.ArrangementStandardSettingsAware,com.intellij.application.options.codeStyle.arrangement.color.ArrangementColorsProvider,java.util.Collection):V
- buildMatcher(com.intellij.psi.codeStyle.arrangement.model.ArrangementMatchCondition):com.intellij.psi.codeStyle.arrangement.match.ArrangementEntryMatcher
- getDefaultSettings():com.intellij.psi.codeStyle.arrangement.std.StdArrangementSettings
- getDelegate():com.intellij.psi.codeStyle.arrangement.std.ArrangementStandardSettingsAware
- getMutexes():java.util.Collection
- getRuleAliases():java.util.Collection
- getSupportedGroupingTokens():java.util.List
- getSupportedMatchingTokens():java.util.List
- getWidth(com.intellij.psi.codeStyle.arrangement.std.ArrangementSettingsToken):I
- isEnabled(com.intellij.psi.codeStyle.arrangement.std.ArrangementSettingsToken,com.intellij.psi.codeStyle.arrangement.model.ArrangementMatchCondition):Z
- isSectionRulesSupported():Z
- sort(java.util.Collection):java.util.List
com.intellij.psi.codeStyle.arrangement.std.ArrangementUiComponent
- a:alwaysCanBeActive():Z
- a:chooseToken(com.intellij.psi.codeStyle.arrangement.std.ArrangementSettingsToken):V
- a:getAvailableTokens():java.util.Set
- a:getBaselineToUse(I,I):I
- a:getMatchCondition():com.intellij.psi.codeStyle.arrangement.model.ArrangementMatchCondition
- a:getScreenBounds():java.awt.Rectangle
- a:getToken():com.intellij.psi.codeStyle.arrangement.std.ArrangementSettingsToken
- a:getUiComponent():javax.swing.JComponent
- a:handleMouseClickOnSelected():V
- a:isEnabled():Z
- a:isSelected():Z
- a:onMouseEntered(java.awt.event.MouseEvent):java.awt.Rectangle
- a:onMouseExited():java.awt.Rectangle
- a:onMouseMove(java.awt.event.MouseEvent):java.awt.Rectangle
- a:onMouseRelease(java.awt.event.MouseEvent):V
- a:reset():V
- a:setData(java.lang.Object):V
- a:setEnabled(Z):V
- a:setListener(com.intellij.psi.codeStyle.arrangement.std.ArrangementUiComponent$Listener):V
- a:setSelected(Z):V
com.intellij.psi.codeStyle.arrangement.std.ArrangementUiComponent$Factory
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:build(com.intellij.psi.codeStyle.arrangement.std.StdArrangementTokenUiRole,java.util.List,com.intellij.application.options.codeStyle.arrangement.color.ArrangementColorsProvider,com.intellij.psi.codeStyle.arrangement.std.ArrangementStandardSettingsManager):com.intellij.psi.codeStyle.arrangement.std.ArrangementUiComponent
com.intellij.psi.codeStyle.arrangement.std.ArrangementUiComponent$Listener
- a:stateChanged():V
com.intellij.psi.codeStyle.autodetect.IndentOptionsAdjuster
- a:adjust(com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):V
com.intellij.psi.codeStyle.autodetect.IndentOptionsDetector
- a:getIndentOptions():com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions
- a:getIndentOptionsAdjuster():com.intellij.psi.codeStyle.autodetect.IndentOptionsAdjuster
f:com.intellij.psi.codeStyle.autodetect.IndentUsageInfo
- <init>(I,I):V
- getIndentSize():I
- getTimesUsed():I
com.intellij.psi.codeStyle.autodetect.IndentUsageStatistics
- a:getKMostUsedIndentInfo(I):com.intellij.psi.codeStyle.autodetect.IndentUsageInfo
- a:getTimesIndentUsed(I):I
- a:getTotalIndentSizesDetected():I
- a:getTotalLinesWithLeadingSpaces():I
- a:getTotalLinesWithLeadingTabs():I
f:com.intellij.psi.codeStyle.extractor.Utils
- sf:CRITICAL_SYMBOL_WEIGHT:I
- <init>():V
- s:adjustValuesGA(com.intellij.psi.codeStyle.extractor.values.Gens,com.intellij.psi.codeStyle.extractor.differ.Differ,com.intellij.openapi.progress.ProgressIndicator):V
- s:adjustValuesMin(com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResult,com.intellij.psi.codeStyle.extractor.differ.Differ,com.intellij.openapi.progress.ProgressIndicator):V
- s:getDiff(com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions,java.lang.String,java.lang.String):I
- s:getLanguageSettings(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.lang.Language):com.intellij.psi.codeStyle.CustomCodeStyleSettings
- s:getNormalizedLength(com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions,java.lang.String):I
- s:getRandom():J
- s:getRandomLess(I):I
- s:getTabSize(com.intellij.psi.codeStyle.CommonCodeStyleSettings$IndentOptions):I
- s:isBracket(C):Z
- s:isSpace(C):Z
- s:logError(java.lang.String):V
- s:resetRandom():V
com.intellij.psi.codeStyle.extractor.differ.Differ
- sf:UGLY_FORMATTING:I
- a:getDifference(com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResult):I
a:com.intellij.psi.codeStyle.extractor.differ.DifferBase
- com.intellij.psi.codeStyle.extractor.differ.Differ
- pf:myFile:com.intellij.psi.PsiFile
- pf:myOrigText:java.lang.String
- pf:myProject:com.intellij.openapi.project.Project
- pf:mySettings:com.intellij.psi.codeStyle.CodeStyleSettings
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.psi.codeStyle.CodeStyleSettings):V
- getDifference(com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResult):I
- a:reformattedText():java.lang.String
com.intellij.psi.codeStyle.extractor.differ.LangCodeStyleExtractor
- sf:EXTENSION:com.intellij.lang.LanguageExtension
- a:getCustomVarKinds():java.util.Collection
- a:getDiffer(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile,com.intellij.psi.codeStyle.CodeStyleSettings):com.intellij.psi.codeStyle.extractor.differ.Differ
c:com.intellij.psi.codeStyle.extractor.processor.BruteForceProcessor
- com.intellij.psi.codeStyle.extractor.processor.CodeStyleDeriveProcessor
- <init>(com.intellij.psi.codeStyle.extractor.differ.LangCodeStyleExtractor):V
- getHTMLReport():java.lang.String
- randomizeSettings(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.lang.Language):V
- runWithProgress(com.intellij.openapi.project.Project,com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.PsiFile,com.intellij.openapi.progress.ProgressIndicator):com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResult
a:com.intellij.psi.codeStyle.extractor.processor.CodeStyleDeriveProcessor
- pf:myLangExtractor:com.intellij.psi.codeStyle.extractor.differ.LangCodeStyleExtractor
- p:<init>(com.intellij.psi.codeStyle.extractor.differ.LangCodeStyleExtractor):V
- backupValues(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.lang.Language):java.util.Map
- p:getFormattingValues(com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.lang.Language):java.util.List
- a:getHTMLReport():java.lang.String
- a:runWithProgress(com.intellij.openapi.project.Project,com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.PsiFile,com.intellij.openapi.progress.ProgressIndicator):com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResult
c:com.intellij.psi.codeStyle.extractor.processor.GenProcessor
- com.intellij.psi.codeStyle.extractor.processor.CodeStyleDeriveProcessor
- <init>(com.intellij.psi.codeStyle.extractor.differ.LangCodeStyleExtractor):V
- getHTMLReport():java.lang.String
- runWithProgress(com.intellij.openapi.project.Project,com.intellij.psi.codeStyle.CodeStyleSettings,com.intellij.psi.PsiFile,com.intellij.openapi.progress.ProgressIndicator):com.intellij.psi.codeStyle.extractor.values.Gens
c:com.intellij.psi.codeStyle.extractor.values.ClassSerializer
- <init>(java.lang.String,java.lang.Object):V
- equals(java.lang.Object):Z
- getInstanceName():java.lang.String
- s:getPreparedField(java.lang.reflect.Field):java.lang.reflect.Field
- hashCode():I
- read(java.lang.String):java.lang.Object
- write(java.lang.String,java.lang.Object,Z):java.lang.Object
f:com.intellij.psi.codeStyle.extractor.values.Generation
- s:GEN_COUNT:I
- s:createNextGeneration(com.intellij.psi.codeStyle.extractor.differ.Differ,com.intellij.psi.codeStyle.extractor.values.Generation):com.intellij.psi.codeStyle.extractor.values.Generation
- s:createZeroGeneration(com.intellij.psi.codeStyle.extractor.values.Gens):com.intellij.psi.codeStyle.extractor.values.Generation
- getAge():I
- getBestGens(com.intellij.psi.codeStyle.extractor.differ.Differ):com.intellij.psi.codeStyle.extractor.values.Gens
- getParentKind():I
- tryAgain():Z
c:com.intellij.psi.codeStyle.extractor.values.Gens
- com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResultImpl
- <init>(com.intellij.psi.codeStyle.extractor.values.Gens):V
- <init>(java.util.List):V
- s:breed(com.intellij.psi.codeStyle.extractor.values.Gens,com.intellij.psi.codeStyle.extractor.values.Gens,I):com.intellij.psi.codeStyle.extractor.values.Gens
- copy():com.intellij.psi.codeStyle.extractor.values.Gens
- copyFrom(com.intellij.psi.codeStyle.extractor.values.Gens):V
- diff(com.intellij.psi.codeStyle.extractor.values.Gens):com.intellij.psi.codeStyle.extractor.values.Gens
- dropToInitial():com.intellij.psi.codeStyle.extractor.values.Gens
- mutate(I):com.intellij.psi.codeStyle.extractor.values.Gens
c:com.intellij.psi.codeStyle.extractor.values.Value
- f:kind:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- f:name:java.lang.String
- serializer:com.intellij.psi.codeStyle.extractor.values.ClassSerializer
- state:com.intellij.psi.codeStyle.extractor.values.Value$STATE
- value:java.lang.Object
- <init>(com.intellij.psi.codeStyle.extractor.values.Value):V
- <init>(java.lang.String,java.lang.Object,com.intellij.psi.codeStyle.extractor.values.ClassSerializer,com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND):V
- equals(java.lang.Object):Z
- getMutagenFactor():I
- getPossibleValues():java.lang.Object[]
- hashCode():I
- write(Z):com.intellij.psi.codeStyle.extractor.values.Value
a:com.intellij.psi.codeStyle.extractor.values.Value$CLASS_BASED_VAR_KIND
- com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- <init>(java.lang.Object[],java.lang.Class):V
- accepts(java.lang.String,java.lang.Object):Z
- a:acceptsName(java.lang.String):Z
e:com.intellij.psi.codeStyle.extractor.values.Value$STATE
- java.lang.Enum
- sf:ANY:com.intellij.psi.codeStyle.extractor.values.Value$STATE
- sf:INIT:com.intellij.psi.codeStyle.extractor.values.Value$STATE
- sf:SELECTED:com.intellij.psi.codeStyle.extractor.values.Value$STATE
- s:valueOf(java.lang.String):com.intellij.psi.codeStyle.extractor.values.Value$STATE
- s:values():com.intellij.psi.codeStyle.extractor.values.Value$STATE[]
a:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:BLANK:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:BOOL:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:BRACE_STYLE:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:DEFAULT:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:INDENT:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:KEEP:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:NOTHING:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:RIGHT_MARGIN:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:TAB_SIZE:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:WRAP:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND
- sf:defaultKinds:com.intellij.psi.codeStyle.extractor.values.Value$VAR_KIND[]
- a:accepts(java.lang.String,java.lang.Object):Z
- getMutagenFactor():I
- getPossibleValues():java.lang.Object[]
com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResult
- a:apply(Z):com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResult
- a:applyConditioned(com.intellij.openapi.util.Condition,java.util.Map):V
- a:applySelected():V
- a:getValues():java.util.List
c:com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResultImpl
- com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResult
- pf:myValues:java.util.List
- <init>(java.util.List):V
- apply(Z):com.intellij.psi.codeStyle.extractor.values.ValuesExtractionResult
- applyConditioned(com.intellij.openapi.util.Condition,java.util.Map):V
- applySelected():V
- getValues():java.util.List
c:com.intellij.psi.codeStyle.presentation.CodeStyleBoundedIntegerSettingPresentation
- com.intellij.psi.codeStyle.presentation.CodeStyleSettingPresentation
- p:myDefaultValue:I
- p:myDefaultValueUiName:java.lang.String
- p:myLowerBound:I
- p:myUpperBound:I
- <init>(java.lang.String,java.lang.String,I,I,I,java.lang.String):V
- getDefaultValue():I
- getLowerBound():I
- getUpperBound():I
- getValueUiName(java.lang.Object):java.lang.String
c:com.intellij.psi.codeStyle.presentation.CodeStyleCommaSeparatedIdentifiersPresentation
- com.intellij.psi.codeStyle.presentation.CodeStyleSettingPresentation
- <init>(java.lang.String,java.lang.String):V
c:com.intellij.psi.codeStyle.presentation.CodeStyleSelectSettingPresentation
- com.intellij.psi.codeStyle.presentation.CodeStyleSettingPresentation
- p:myLowerBound:I
- p:myUpperBound:I
- p:myValueUiNames:java.lang.String[]
- p:myValues:I[]
- <init>(java.lang.String,java.lang.String,I[],java.lang.String[]):V
- getLowerBound():I
- getOptions():java.lang.String[]
- getUpperBound():I
- getValueUiName(java.lang.Object):java.lang.String
- getValues():I[]
c:com.intellij.psi.codeStyle.presentation.CodeStyleSettingPresentation
- p:myFieldName:java.lang.String
- p:myUiName:java.lang.String
- <init>(java.lang.String,java.lang.String):V
- equals(java.lang.Object):Z
- getFieldName():java.lang.String
- s:getStandardSettings(com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider$SettingsType):java.util.Map
- getUiName():java.lang.String
- getValueUiName(java.lang.Object):java.lang.String
- hashCode():I
- setUiName(java.lang.String):V
c:com.intellij.psi.codeStyle.presentation.CodeStyleSettingPresentation$SettingsGroup
- f:name:java.lang.String
- <init>(java.lang.String):V
- equals(java.lang.Object):Z
- hashCode():I
- isNull():Z
c:com.intellij.psi.codeStyle.presentation.CodeStyleSoftMarginsPresentation
- com.intellij.psi.codeStyle.presentation.CodeStyleSettingPresentation
- sf:OPTION_NAME:java.lang.String
- <init>():V
c:com.intellij.psi.impl.include.FileIncludeInfo
- sf:EMPTY:com.intellij.psi.impl.include.FileIncludeInfo[]
- f:fileName:java.lang.String
- f:offset:I
- f:path:java.lang.String
- f:runtimeOnly:Z
- <init>(java.lang.String):V
- <init>(java.lang.String,I):V
- <init>(java.lang.String,java.lang.String,I,Z):V
a:com.intellij.psi.impl.include.FileIncludeManager
- <init>():V
- a:getIncludedFiles(com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.vfs.VirtualFile[]
- a:getIncludedFiles(com.intellij.openapi.vfs.VirtualFile,Z,Z):com.intellij.openapi.vfs.VirtualFile[]
- a:getIncludingFiles(com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.openapi.vfs.VirtualFile[]
- s:getManager(com.intellij.openapi.project.Project):com.intellij.psi.impl.include.FileIncludeManager
- a:processIncludingFiles(com.intellij.psi.PsiFile,com.intellij.util.Processor):V
- a:resolveFileInclude(com.intellij.psi.impl.include.FileIncludeInfo,com.intellij.psi.PsiFile):com.intellij.psi.PsiFileSystemItem
c:com.intellij.psi.meta.PsiMetaDataTarget
- com.intellij.psi.DelegatePsiTarget
- com.intellij.pom.PomRenameableTarget
- <init>(com.intellij.psi.meta.PsiMetaData):V
- getName():java.lang.String
- isWritable():Z
- setName(java.lang.String):com.intellij.psi.meta.PsiMetaDataTarget
f:com.intellij.psi.search.GlobalSearchScopes
- s:directoriesScope(com.intellij.openapi.project.Project,Z,com.intellij.openapi.vfs.VirtualFile[]):com.intellij.psi.search.GlobalSearchScope
- s:directoryScope(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,Z):com.intellij.psi.search.GlobalSearchScope
- s:directoryScope(com.intellij.psi.PsiDirectory,Z):com.intellij.psi.search.GlobalSearchScope
- s:executionScope(com.intellij.openapi.project.Project,com.intellij.execution.configurations.RunProfile):com.intellij.psi.search.GlobalSearchScope
- s:filterScope(com.intellij.openapi.project.Project,com.intellij.psi.search.scope.packageSet.NamedScope):com.intellij.psi.search.GlobalSearchScope
- s:openFilesScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- s:projectProductionScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- s:projectTestScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
a:com.intellij.psi.stubs.NamedStubBase
- com.intellij.psi.stubs.StubBase
- com.intellij.psi.stubs.NamedStub
- p:<init>(com.intellij.psi.stubs.StubElement,com.intellij.psi.stubs.IStubElementType,com.intellij.util.io.StringRef):V
- p:<init>(com.intellij.psi.stubs.StubElement,com.intellij.psi.stubs.IStubElementType,java.lang.String):V
- getName():java.lang.String
f:com.intellij.psi.targets.AliasingPsiTargetUtil
- <init>():V
- s:renameTargets(com.intellij.psi.targets.AliasingPsiTarget,java.lang.String):V
com.intellij.psi.templateLanguages.ConfigurableTemplateLanguageFileViewProvider
- com.intellij.psi.templateLanguages.TemplateLanguageFileViewProvider
c:com.intellij.psi.templateLanguages.TemplateDataHighlighterWrapper
- com.intellij.openapi.fileTypes.SyntaxHighlighter
- <init>(com.intellij.openapi.fileTypes.SyntaxHighlighter):V
- getHighlightingLexer():com.intellij.lexer.Lexer
- getTokenHighlights(com.intellij.psi.tree.IElementType):com.intellij.openapi.editor.colors.TextAttributesKey[]
f:com.intellij.psi.util.PartiallyKnownStringKt
c:com.intellij.psi.util.ProximityLocation
- com.intellij.openapi.util.UserDataHolder
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.module.Module):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.module.Module,com.intellij.util.ProcessingContext):V
- getPosition():com.intellij.psi.PsiElement
- getPositionModule():com.intellij.openapi.module.Module
- getProject():com.intellij.openapi.project.Project
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
c:com.intellij.psi.util.PsiEditorUtilBase
- com.intellij.psi.util.PsiEditorUtil
- <init>():V
- findEditorByPsiElement(com.intellij.psi.PsiElement):com.intellij.openapi.editor.Editor
c:com.intellij.psi.util.PsiFilter
- sf:EMPTY:com.intellij.psi.util.PsiFilter[]
- <init>(java.lang.Class):V
- accept(com.intellij.psi.PsiElement):Z
- areEquivalent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- createVisitor(java.util.List):com.intellij.psi.util.PsiFilter$Visitor
- f:getParentClass():java.lang.Class
c:com.intellij.psi.util.PsiFilter$Visitor
- com.intellij.psi.PsiRecursiveElementVisitor
- p:<init>(com.intellij.psi.util.PsiFilter,java.util.List):V
- visitElement(com.intellij.psi.PsiElement):V
a:com.intellij.psi.util.ReferenceSetBase
- sf:DOT_SEPARATOR:C
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,I):V
- <init>(java.lang.String,com.intellij.psi.PsiElement,I,C):V
- p:createReference(com.intellij.openapi.util.TextRange,I):com.intellij.psi.PsiReference
- p:createReferences(com.intellij.openapi.util.TextRange,I):java.util.List
- p:findNextSeparator(java.lang.String,I):I
- getElement():com.intellij.psi.PsiElement
- getLastReference():com.intellij.psi.PsiReference
- getPsiReferences():com.intellij.psi.PsiReference[]
- getReference(I):com.intellij.psi.PsiReference
- getReferences():java.util.List
- isSoft():Z
- p:parse(java.lang.String,I):java.util.List
com.intellij.refactoring.Refactoring
- a:doRefactoring(com.intellij.usageView.UsageInfo[]):V
- a:findUsages():com.intellij.usageView.UsageInfo[]
- a:isInteractive():Z
- a:isPreviewUsages():Z
- a:preprocessUsages(com.intellij.openapi.util.Ref):Z
- a:run():V
- a:setInteractive(java.lang.Runnable):V
- a:setPreviewUsages(Z):V
- a:shouldPreviewUsages(com.intellij.usageView.UsageInfo[]):Z
a:com.intellij.refactoring.RefactoringActionHandlerFactory
- <init>():V
- a:createMoveHandler():com.intellij.refactoring.RefactoringActionHandler
- a:createRenameHandler():com.intellij.refactoring.RefactoringActionHandler
- a:createSafeDeleteHandler():com.intellij.refactoring.RefactoringActionHandler
- s:getInstance():com.intellij.refactoring.RefactoringActionHandlerFactory
a:com.intellij.refactoring.RefactoringFactory
- <init>():V
- a:createRename(com.intellij.psi.PsiElement,java.lang.String):com.intellij.refactoring.RenameRefactoring
- a:createRename(com.intellij.psi.PsiElement,java.lang.String,com.intellij.psi.search.SearchScope,Z,Z):com.intellij.refactoring.RenameRefactoring
- a:createRename(com.intellij.psi.PsiElement,java.lang.String,Z,Z):com.intellij.refactoring.RenameRefactoring
- a:createSafeDelete(com.intellij.psi.PsiElement[]):com.intellij.refactoring.SafeDeleteRefactoring
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.refactoring.RefactoringFactory
com.intellij.refactoring.RenameRefactoring
- com.intellij.refactoring.Refactoring
- a:addElement(com.intellij.psi.PsiElement,java.lang.String):V
- a:getElements():java.util.Set
- a:getNewNames():java.util.Collection
- a:isSearchInComments():Z
- a:isSearchInNonJavaFiles():Z
- a:setSearchInComments(Z):V
- a:setSearchInNonJavaFiles(Z):V
com.intellij.refactoring.SafeDeleteRefactoring
- com.intellij.refactoring.Refactoring
- a:getElements():java.util.List
- a:isSearchInComments():Z
- a:isSearchInNonJavaFiles():Z
- a:setSearchInComments(Z):V
- a:setSearchInNonJavaFiles(Z):V
a:com.intellij.refactoring.classMembers.AbstractMemberInfoModel
- com.intellij.refactoring.classMembers.MemberInfoModel
- <init>():V
- checkForProblems(com.intellij.refactoring.classMembers.MemberInfoBase):I
- getTooltipText(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.String
- isAbstractEnabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isAbstractWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isCheckedWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- isFixedAbstract(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.Boolean
- isMemberEnabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- memberInfoChanged(com.intellij.refactoring.classMembers.MemberInfoChange):V
com.intellij.refactoring.classMembers.ClassMembersRefactoringSupport
- a:createDependentMembersCollector(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.refactoring.classMembers.DependentMembersCollectorBase
- a:isProperMember(com.intellij.refactoring.classMembers.MemberInfoBase):Z
a:com.intellij.refactoring.classMembers.DependentMembersCollectorBase
- pf:myClass:java.lang.Object
- pf:myCollection:java.util.HashSet
- pf:mySuperClass:java.lang.Object
- <init>(java.lang.Object,java.lang.Object):V
- a:collect(com.intellij.psi.PsiElement):V
- getClazz():java.lang.Object
- getCollection():java.util.Set
- getSuperClass():java.lang.Object
com.intellij.refactoring.classMembers.MemberDependencyGraph
- a:getDependenciesOf(com.intellij.psi.PsiElement):java.util.Set
- a:getDependent():java.util.Set
- a:memberChanged(com.intellij.refactoring.classMembers.MemberInfoBase):V
c:com.intellij.refactoring.classMembers.MemberInfoChange
- <init>(java.util.Collection):V
- getChangedMembers():java.util.Collection
com.intellij.refactoring.classMembers.MemberInfoChangeListener
- java.util.EventListener
- a:memberInfoChanged(com.intellij.refactoring.classMembers.MemberInfoChange):V
com.intellij.refactoring.classMembers.MemberInfoModel
- com.intellij.refactoring.classMembers.MemberInfoChangeListener
- sf:ERROR:I
- sf:OK:I
- sf:WARNING:I
- a:checkForProblems(com.intellij.refactoring.classMembers.MemberInfoBase):I
- a:getTooltipText(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.String
- a:isAbstractEnabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- a:isAbstractWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- a:isCheckedWhenDisabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
- a:isFixedAbstract(com.intellij.refactoring.classMembers.MemberInfoBase):java.lang.Boolean
- a:isMemberEnabled(com.intellij.refactoring.classMembers.MemberInfoBase):Z
com.intellij.refactoring.lang.ElementsHandler
- com.intellij.refactoring.RefactoringActionHandler
- a:isEnabledOnElements(com.intellij.psi.PsiElement[]):Z
f:com.intellij.refactoring.suggested.SignatureChangePresentationModel
- <init>(java.util.List,java.util.List):V
- f:getNewSignature():java.util.List
- f:getOldSignature():java.util.List
e:com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect
- java.lang.Enum
- sf:Added:com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect
- sf:Modified:com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect
- sf:Moved:com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect
- sf:None:com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect
- sf:Removed:com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect
- s:values():com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect[]
a:com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment
- a:anySelfOrDescendants(kotlin.jvm.functions.Function1):Z
- a:forSelfAndDescendants(kotlin.jvm.functions.Function1):V
- f:getConnectionId():java.lang.Object
- f:getEffect():com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect
- a:withConnectionId(java.lang.Object):com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment
- a:withEffect(com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect):com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment
f:com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment$Group
- com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment
- <init>(java.util.List,com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect,java.lang.Object):V
- anySelfOrDescendants(kotlin.jvm.functions.Function1):Z
- forSelfAndDescendants(kotlin.jvm.functions.Function1):V
- f:getChildren():java.util.List
- withConnectionId(java.lang.Object):com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment$Group
- withEffect(com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect):com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment$Group
f:com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment$Leaf
- com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect):V
- <init>(java.lang.String,com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect,java.lang.Object):V
- b:<init>(java.lang.String,com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect,java.lang.Object,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- anySelfOrDescendants(kotlin.jvm.functions.Function1):Z
- forSelfAndDescendants(kotlin.jvm.functions.Function1):V
- f:getText():java.lang.String
- withConnectionId(java.lang.Object):com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment$Leaf
- withEffect(com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect):com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment$Leaf
f:com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment$LineBreak
- com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment
- <init>(java.lang.String,Z):V
- anySelfOrDescendants(kotlin.jvm.functions.Function1):Z
- forSelfAndDescendants(kotlin.jvm.functions.Function1):V
- f:getIndentAfter():Z
- f:getSpaceInHorizontalMode():java.lang.String
- withConnectionId(java.lang.Object):com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment
- withEffect(com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect):com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment
f:com.intellij.refactoring.suggested.SignatureChangePresentationModelKt
- sf:checkCorrectness(com.intellij.refactoring.suggested.SignatureChangePresentationModel):V
- sf:forAllFragments(java.util.List,kotlin.jvm.functions.Function1):V
- sf:improvePresentation(com.intellij.refactoring.suggested.SignatureChangePresentationModel):com.intellij.refactoring.suggested.SignatureChangePresentationModel
a:com.intellij.refactoring.suggested.SignaturePresentationBuilder
- <init>(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,Z):V
- pf:buildParameterList(java.lang.String,java.lang.String,kotlin.jvm.functions.Function3):V
- pf:buildParameterList(java.lang.String,kotlin.jvm.functions.Function3):V
- pf:buildParameterList(kotlin.jvm.functions.Function3):V
- bs:buildParameterList$default(com.intellij.refactoring.suggested.SignaturePresentationBuilder,java.lang.String,java.lang.String,kotlin.jvm.functions.Function3,I,java.lang.Object):V
- a:buildPresentation():V
- pf:effect(java.lang.String,java.lang.String):com.intellij.refactoring.suggested.SignatureChangePresentationModel$Effect
- pf:getFragments():java.util.List
- pf:getOtherSignature():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- f:getResult():java.util.List
- pf:getSignature():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- pf:isOldSignature():Z
- pf:leaf(java.lang.String,java.lang.String):com.intellij.refactoring.suggested.SignatureChangePresentationModel$TextFragment$Leaf
f:com.intellij.refactoring.suggested.SuggestedChangeSignatureData
- com.intellij.refactoring.suggested.SuggestedRefactoringData
- sf:Companion:com.intellij.refactoring.suggested.SuggestedChangeSignatureData$Companion
- f:component1():com.intellij.psi.SmartPsiElementPointer
- f:component2():com.intellij.psi.SmartPsiElementPointer
- f:component3():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- f:component4():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- f:component5():java.lang.String
- f:component6():java.lang.String
- f:component7():java.lang.String
- f:copy(com.intellij.psi.SmartPsiElementPointer,com.intellij.psi.SmartPsiElementPointer,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,java.lang.String,java.lang.String,java.lang.String):com.intellij.refactoring.suggested.SuggestedChangeSignatureData
- bs:copy$default(com.intellij.refactoring.suggested.SuggestedChangeSignatureData,com.intellij.psi.SmartPsiElementPointer,com.intellij.psi.SmartPsiElementPointer,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,java.lang.String,java.lang.String,java.lang.String,I,java.lang.Object):com.intellij.refactoring.suggested.SuggestedChangeSignatureData
- sf:create(com.intellij.refactoring.suggested.SuggestedRefactoringState,java.lang.String):com.intellij.refactoring.suggested.SuggestedChangeSignatureData
- equals(java.lang.Object):Z
- f:getAnchor():com.intellij.psi.PsiElement
- f:getAnchorPointer():com.intellij.psi.SmartPsiElementPointer
- getDeclaration():com.intellij.psi.PsiElement
- f:getDeclarationPointer():com.intellij.psi.SmartPsiElementPointer
- f:getNameOfStuffToUpdate():java.lang.String
- f:getNewSignature():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- f:getOldDeclarationText():java.lang.String
- f:getOldImportsText():java.lang.String
- f:getOldSignature():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- hashCode():I
- f:restoreInitialState(com.intellij.refactoring.suggested.SuggestedRefactoringSupport):kotlin.jvm.functions.Function0
f:com.intellij.refactoring.suggested.SuggestedChangeSignatureData$Companion
- f:create(com.intellij.refactoring.suggested.SuggestedRefactoringState,java.lang.String):com.intellij.refactoring.suggested.SuggestedChangeSignatureData
a:com.intellij.refactoring.suggested.SuggestedRefactoringAvailability
- sf:Companion:com.intellij.refactoring.suggested.SuggestedRefactoringAvailability$Companion
- sf:IMPLEMENTATIONS:java.lang.String
- sf:OVERRIDES:java.lang.String
- sf:USAGES:java.lang.String
- <init>(com.intellij.refactoring.suggested.SuggestedRefactoringSupport):V
- amendStateInBackground(com.intellij.refactoring.suggested.SuggestedRefactoringState):java.util.Iterator
- a:detectAvailableRefactoring(com.intellij.refactoring.suggested.SuggestedRefactoringState):com.intellij.refactoring.suggested.SuggestedRefactoringData
- pf:getRefactoringSupport():com.intellij.refactoring.suggested.SuggestedRefactoringSupport
- pf:hasParameterAddedRemovedOrReordered(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature):Z
- p:hasParameterTypeChanges(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Parameter,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Parameter):Z
- p:hasTypeChanges(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature):Z
- isAvailable(com.intellij.refactoring.suggested.SuggestedRefactoringState):Z
- pf:nameChanges(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.psi.PsiElement,java.util.List):kotlin.Pair
- refineSignaturesWithResolve(com.intellij.refactoring.suggested.SuggestedRefactoringState):com.intellij.refactoring.suggested.SuggestedRefactoringState
- shouldSuppressRefactoringForDeclaration(com.intellij.refactoring.suggested.SuggestedRefactoringState):Z
f:com.intellij.refactoring.suggested.SuggestedRefactoringAvailability$Companion
c:com.intellij.refactoring.suggested.SuggestedRefactoringAvailability$RenameOnly
- com.intellij.refactoring.suggested.SuggestedRefactoringAvailability
- <init>(com.intellij.refactoring.suggested.SuggestedRefactoringSupport):V
- detectAvailableRefactoring(com.intellij.refactoring.suggested.SuggestedRefactoringState):com.intellij.refactoring.suggested.SuggestedRefactoringData
a:com.intellij.refactoring.suggested.SuggestedRefactoringData
- a:getDeclaration():com.intellij.psi.PsiElement
a:com.intellij.refactoring.suggested.SuggestedRefactoringExecution
- <init>(com.intellij.refactoring.suggested.SuggestedRefactoringSupport):V
- pf:getRefactoringSupport():com.intellij.refactoring.suggested.SuggestedRefactoringSupport
- a:performChangeSignature(com.intellij.refactoring.suggested.SuggestedChangeSignatureData,java.util.List,java.lang.Object):V
- a:prepareChangeSignature(com.intellij.refactoring.suggested.SuggestedChangeSignatureData):java.lang.Object
a:com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue
f:com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue$AnyVariable
- com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue
- sf:INSTANCE:com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue$AnyVariable
f:com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue$Expression
- com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue
- <init>(com.intellij.psi.PsiElement):V
- f:component1():com.intellij.psi.PsiElement
- f:copy(com.intellij.psi.PsiElement):com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue$Expression
- bs:copy$default(com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue$Expression,com.intellij.psi.PsiElement,I,java.lang.Object):com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue$Expression
- equals(java.lang.Object):Z
- f:getExpression():com.intellij.psi.PsiElement
- hashCode():I
f:com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue$None
- com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue
- sf:INSTANCE:com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue$None
c:com.intellij.refactoring.suggested.SuggestedRefactoringExecution$RenameOnly
- com.intellij.refactoring.suggested.SuggestedRefactoringExecution
- <init>(com.intellij.refactoring.suggested.SuggestedRefactoringSupport):V
- performChangeSignature(com.intellij.refactoring.suggested.SuggestedChangeSignatureData,java.util.List,java.lang.Object):V
- prepareChangeSignature(com.intellij.refactoring.suggested.SuggestedChangeSignatureData):java.lang.Object
f:com.intellij.refactoring.suggested.SuggestedRefactoringState
- <init>(com.intellij.psi.PsiElement,com.intellij.refactoring.suggested.SuggestedRefactoringSupport,com.intellij.refactoring.suggested.SuggestedRefactoringState$ErrorLevel,java.lang.String,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,java.util.List,java.util.Map,I,com.intellij.refactoring.suggested.SuggestedRefactoringState$AdditionalData):V
- b:<init>(com.intellij.psi.PsiElement,com.intellij.refactoring.suggested.SuggestedRefactoringSupport,com.intellij.refactoring.suggested.SuggestedRefactoringState$ErrorLevel,java.lang.String,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,java.util.List,java.util.Map,I,com.intellij.refactoring.suggested.SuggestedRefactoringState$AdditionalData,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:getAdditionalData():com.intellij.refactoring.suggested.SuggestedRefactoringState$AdditionalData
- f:getAnchor():com.intellij.psi.PsiElement
- f:getDeclaration():com.intellij.psi.PsiElement
- f:getDisappearedParameters():java.util.Map
- f:getErrorLevel():com.intellij.refactoring.suggested.SuggestedRefactoringState$ErrorLevel
- f:getFeatureUsageId():I
- f:getNewSignature():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- f:getOldDeclarationText():java.lang.String
- f:getOldImportsText():java.lang.String
- f:getOldSignature():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- f:getParameterMarkers():java.util.List
- f:getRefactoringSupport():com.intellij.refactoring.suggested.SuggestedRefactoringSupport
- f:restoredDeclarationCopy():com.intellij.psi.PsiElement
- f:withAdditionalData(com.intellij.openapi.util.Key,java.lang.Object):com.intellij.refactoring.suggested.SuggestedRefactoringState
- f:withAnchor(com.intellij.psi.PsiElement):com.intellij.refactoring.suggested.SuggestedRefactoringState
- f:withDisappearedParameters(java.util.Map):com.intellij.refactoring.suggested.SuggestedRefactoringState
- f:withErrorLevel(com.intellij.refactoring.suggested.SuggestedRefactoringState$ErrorLevel):com.intellij.refactoring.suggested.SuggestedRefactoringState
- f:withNewSignature(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature):com.intellij.refactoring.suggested.SuggestedRefactoringState
- f:withOldSignature(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature):com.intellij.refactoring.suggested.SuggestedRefactoringState
- f:withParameterMarkers(java.util.List):com.intellij.refactoring.suggested.SuggestedRefactoringState
f:com.intellij.refactoring.suggested.SuggestedRefactoringState$AdditionalData
- sf:Companion:com.intellij.refactoring.suggested.SuggestedRefactoringState$AdditionalData$Companion
- f:get(com.intellij.openapi.util.Key):java.lang.Object
- f:withData(com.intellij.openapi.util.Key,java.lang.Object):com.intellij.refactoring.suggested.SuggestedRefactoringState$AdditionalData
f:com.intellij.refactoring.suggested.SuggestedRefactoringState$AdditionalData$Companion
- f:getEmpty():com.intellij.refactoring.suggested.SuggestedRefactoringState$AdditionalData
e:com.intellij.refactoring.suggested.SuggestedRefactoringState$ErrorLevel
- java.lang.Enum
- sf:INCONSISTENT:com.intellij.refactoring.suggested.SuggestedRefactoringState$ErrorLevel
- sf:NO_ERRORS:com.intellij.refactoring.suggested.SuggestedRefactoringState$ErrorLevel
- sf:SYNTAX_ERROR:com.intellij.refactoring.suggested.SuggestedRefactoringState$ErrorLevel
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.refactoring.suggested.SuggestedRefactoringState$ErrorLevel
- s:values():com.intellij.refactoring.suggested.SuggestedRefactoringState$ErrorLevel[]
f:com.intellij.refactoring.suggested.SuggestedRefactoringState$ParameterMarker
- <init>(com.intellij.openapi.editor.RangeMarker,java.lang.Object):V
- f:component1():com.intellij.openapi.editor.RangeMarker
- f:component2():java.lang.Object
- f:copy(com.intellij.openapi.editor.RangeMarker,java.lang.Object):com.intellij.refactoring.suggested.SuggestedRefactoringState$ParameterMarker
- bs:copy$default(com.intellij.refactoring.suggested.SuggestedRefactoringState$ParameterMarker,com.intellij.openapi.editor.RangeMarker,java.lang.Object,I,java.lang.Object):com.intellij.refactoring.suggested.SuggestedRefactoringState$ParameterMarker
- equals(java.lang.Object):Z
- f:getParameterId():java.lang.Object
- f:getRangeMarker():com.intellij.openapi.editor.RangeMarker
- hashCode():I
a:com.intellij.refactoring.suggested.SuggestedRefactoringStateChanges
- <init>(com.intellij.refactoring.suggested.SuggestedRefactoringSupport):V
- createInitialState(com.intellij.psi.PsiElement):com.intellij.refactoring.suggested.SuggestedRefactoringState
- findDeclaration(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- pf:getRefactoringSupport():com.intellij.refactoring.suggested.SuggestedRefactoringSupport
- p:guessParameterIdByMarkers(com.intellij.openapi.util.TextRange,com.intellij.refactoring.suggested.SuggestedRefactoringState):java.lang.Object
- pf:matchParametersWithPrevState(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.psi.PsiElement,com.intellij.refactoring.suggested.SuggestedRefactoringState):com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- a:parameterMarkerRanges(com.intellij.psi.PsiElement):java.util.List
- a:signature(com.intellij.psi.PsiElement,com.intellij.refactoring.suggested.SuggestedRefactoringState):com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- updateState(com.intellij.refactoring.suggested.SuggestedRefactoringState,com.intellij.psi.PsiElement):com.intellij.refactoring.suggested.SuggestedRefactoringState
f:com.intellij.refactoring.suggested.SuggestedRefactoringStateChanges$RenameOnly
- com.intellij.refactoring.suggested.SuggestedRefactoringStateChanges
- <init>(com.intellij.refactoring.suggested.SuggestedRefactoringSupport):V
- parameterMarkerRanges(com.intellij.psi.PsiElement):java.util.List
- signature(com.intellij.psi.PsiElement,com.intellij.refactoring.suggested.SuggestedRefactoringState):com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
f:com.intellij.refactoring.suggested.SuggestedRefactoringStateChangesKt
- sf:parameterMarkers(com.intellij.refactoring.suggested.SuggestedRefactoringStateChanges,com.intellij.psi.PsiElement,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature):java.util.List
com.intellij.refactoring.suggested.SuggestedRefactoringSupport
- sf:Companion:com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Companion
- a:getAvailability():com.intellij.refactoring.suggested.SuggestedRefactoringAvailability
- a:getExecution():com.intellij.refactoring.suggested.SuggestedRefactoringExecution
- a:getStateChanges():com.intellij.refactoring.suggested.SuggestedRefactoringStateChanges
- a:getUi():com.intellij.refactoring.suggested.SuggestedRefactoringUI
- hasSyntaxError(com.intellij.psi.PsiElement):Z
- a:importsRange(com.intellij.psi.PsiFile):com.intellij.openapi.util.TextRange
- a:isAnchor(com.intellij.psi.PsiElement):Z
- a:isIdentifierPart(C):Z
- a:isIdentifierStart(C):Z
- a:nameRange(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- a:signatureRange(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
f:com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Companion
- com.intellij.lang.LanguageExtension
- forLanguage(com.intellij.lang.Language):com.intellij.refactoring.suggested.SuggestedRefactoringSupport
f:com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Parameter
- <init>(java.lang.Object,java.lang.String,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$ParameterAdditionalData):V
- b:<init>(java.lang.Object,java.lang.String,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$ParameterAdditionalData,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.Object
- f:component2():java.lang.String
- f:component3():java.lang.String
- f:component4():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$ParameterAdditionalData
- f:copy(java.lang.Object,java.lang.String,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$ParameterAdditionalData):com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Parameter
- bs:copy$default(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Parameter,java.lang.Object,java.lang.String,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$ParameterAdditionalData,I,java.lang.Object):com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Parameter
- equals(java.lang.Object):Z
- f:getAdditionalData():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$ParameterAdditionalData
- f:getId():java.lang.Object
- f:getName():java.lang.String
- f:getType():java.lang.String
- hashCode():I
com.intellij.refactoring.suggested.SuggestedRefactoringSupport$ParameterAdditionalData
- a:equals(java.lang.Object):Z
f:com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- sf:Companion:com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature$Companion
- sf:create(java.lang.String,java.lang.String,java.util.List,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$SignatureAdditionalData):com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
- equals(java.lang.Object):Z
- f:getAdditionalData():com.intellij.refactoring.suggested.SuggestedRefactoringSupport$SignatureAdditionalData
- f:getName():java.lang.String
- f:getParameters():java.util.List
- f:getType():java.lang.String
- hashCode():I
- f:parameterById(java.lang.Object):com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Parameter
- f:parameterByName(java.lang.String):com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Parameter
- f:parameterIndex(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Parameter):I
f:com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature$Companion
- f:create(java.lang.String,java.lang.String,java.util.List,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$SignatureAdditionalData):com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature
com.intellij.refactoring.suggested.SuggestedRefactoringSupport$SignatureAdditionalData
- a:equals(java.lang.Object):Z
f:com.intellij.refactoring.suggested.SuggestedRefactoringSupportKt
- sf:anchorByOffset(com.intellij.refactoring.suggested.SuggestedRefactoringSupport,com.intellij.psi.PsiFile,I):com.intellij.psi.PsiElement
a:com.intellij.refactoring.suggested.SuggestedRefactoringUI
- <init>():V
- buildSignatureChangePresentation(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature):com.intellij.refactoring.suggested.SignatureChangePresentationModel
- a:createSignaturePresentationBuilder(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,Z):com.intellij.refactoring.suggested.SignaturePresentationBuilder
- a:extractNewParameterData(com.intellij.refactoring.suggested.SuggestedChangeSignatureData):java.util.List
- a:extractValue(com.intellij.psi.PsiCodeFragment):com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue$Expression
- validateValue(com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterData,javax.swing.JComponent):com.intellij.openapi.ui.ValidationInfo
com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterAdditionalData
- a:equals(java.lang.Object):Z
f:com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterData
- b:<init>(java.lang.String,com.intellij.psi.PsiCodeFragment,Z):V
- b:<init>(java.lang.String,com.intellij.psi.PsiCodeFragment,Z,java.lang.String):V
- b:<init>(java.lang.String,com.intellij.psi.PsiCodeFragment,Z,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterAdditionalData):V
- b:<init>(java.lang.String,com.intellij.psi.PsiCodeFragment,Z,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterAdditionalData,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- <init>(java.lang.String,com.intellij.psi.PsiCodeFragment,Z,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterAdditionalData,Z):V
- b:<init>(java.lang.String,com.intellij.psi.PsiCodeFragment,Z,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterAdditionalData,Z,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- f:component1():java.lang.String
- f:component2():com.intellij.psi.PsiCodeFragment
- f:component3():Z
- f:component4():java.lang.String
- f:component5():com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterAdditionalData
- f:component6():Z
- f:copy(java.lang.String,com.intellij.psi.PsiCodeFragment,Z,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterAdditionalData,Z):com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterData
- bs:copy$default(com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterData,java.lang.String,com.intellij.psi.PsiCodeFragment,Z,java.lang.String,com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterAdditionalData,Z,I,java.lang.Object):com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterData
- equals(java.lang.Object):Z
- f:getAdditionalData():com.intellij.refactoring.suggested.SuggestedRefactoringUI$NewParameterAdditionalData
- f:getOfferToUseAnyVariable():Z
- f:getPlaceholderText():java.lang.String
- f:getPresentableName():java.lang.String
- f:getSuggestRename():Z
- f:getValueFragment():com.intellij.psi.PsiCodeFragment
- hashCode():I
f:com.intellij.refactoring.suggested.SuggestedRefactoringUI$RenameOnly
- com.intellij.refactoring.suggested.SuggestedRefactoringUI
- sf:INSTANCE:com.intellij.refactoring.suggested.SuggestedRefactoringUI$RenameOnly
- createSignaturePresentationBuilder(com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,com.intellij.refactoring.suggested.SuggestedRefactoringSupport$Signature,Z):com.intellij.refactoring.suggested.SignaturePresentationBuilder
- extractNewParameterData(com.intellij.refactoring.suggested.SuggestedChangeSignatureData):java.util.List
- extractValue(com.intellij.psi.PsiCodeFragment):com.intellij.refactoring.suggested.SuggestedRefactoringExecution$NewParameterValue$Expression
f:com.intellij.refactoring.suggested.SuggestedRenameData
- com.intellij.refactoring.suggested.SuggestedRefactoringData
- <init>(com.intellij.psi.PsiNamedElement,java.lang.String):V
- getDeclaration():com.intellij.psi.PsiNamedElement
- f:getNewName():java.lang.String
- f:getOldName():java.lang.String
f:com.intellij.refactoring.suggested.TextRangeUtilsKt
- sf:extend(com.intellij.openapi.util.TextRange,java.lang.CharSequence,kotlin.jvm.functions.Function1):com.intellij.openapi.util.TextRange
- sf:extendWithWhitespace(com.intellij.openapi.util.TextRange,java.lang.CharSequence):com.intellij.openapi.util.TextRange
- sf:strip(com.intellij.openapi.util.TextRange,java.lang.CharSequence,kotlin.jvm.functions.Function1):com.intellij.openapi.util.TextRange
- sf:stripWhitespace(com.intellij.openapi.util.TextRange,java.lang.CharSequence):com.intellij.openapi.util.TextRange
f:com.intellij.refactoring.suggested.UtilsKt
- sf:createSmartPointer(com.intellij.psi.PsiElement):com.intellij.psi.SmartPsiElementPointer
- sf:getEndOffset(com.intellij.psi.PsiElement):I
- sf:getNewRange(com.intellij.openapi.editor.event.DocumentEvent):com.intellij.openapi.util.TextRange
- sf:getOldRange(com.intellij.openapi.editor.event.DocumentEvent):com.intellij.openapi.util.TextRange
- sf:getRange(com.intellij.openapi.editor.RangeMarker):com.intellij.openapi.util.TextRange
- sf:getStartOffset(com.intellij.psi.PsiElement):I
c:com.intellij.refactoring.util.DocCommentPolicy
- sf:ASIS:I
- sf:COPY:I
- sf:MOVE:I
- <init>(I):V
- getJavaDocPolicy():I
- processCopiedJavaDoc(com.intellij.psi.PsiComment,com.intellij.psi.PsiComment,Z):V
- processNewJavaDoc(com.intellij.psi.PsiComment):V
- processOldJavaDoc(com.intellij.psi.PsiComment):V
c:com.intellij.refactoring.util.RefactoringMessageDialog
- com.intellij.openapi.ui.DialogWrapper
- <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,Z,com.intellij.openapi.project.Project):V
- p:createActions():javax.swing.Action[]
- p:createCenterPanel():javax.swing.JComponent
- p:createNorthPanel():javax.swing.JComponent
- p:getHelpId():java.lang.String
a:com.intellij.refactoring.util.RelatedUsageInfo
- com.intellij.refactoring.util.MoveRenameUsageInfo
- p:<init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiReference,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiReference,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- getRelatedElement():com.intellij.psi.PsiElement
a:com.intellij.semantic.SemContributor
- <init>():V
- p:isAvailable(com.intellij.openapi.project.Project):Z
- a:registerSemProviders(com.intellij.semantic.SemRegistrar,com.intellij.openapi.project.Project):V
f:com.intellij.semantic.SemContributorEP
- implementation:java.lang.String
- <init>():V
com.intellij.semantic.SemElement
f:com.intellij.semantic.SemKey
- s:createKey(java.lang.String,com.intellij.semantic.SemKey[]):com.intellij.semantic.SemKey
- getSupers():com.intellij.semantic.SemKey[]
- getUniqueId():I
- hashCode():I
- f:subKey(java.lang.String,com.intellij.semantic.SemKey[]):com.intellij.semantic.SemKey
com.intellij.semantic.SemRegistrar
- registerRepeatableSemElementProvider(com.intellij.semantic.SemKey,com.intellij.patterns.ElementPattern,java.util.function.Function):V
- registerSemElementProvider(com.intellij.semantic.SemKey,com.intellij.patterns.ElementPattern,java.util.function.Function):V
- a:registerSemProvider(com.intellij.semantic.SemKey,java.util.function.BiFunction):V
a:com.intellij.semantic.SemService
- <init>():V
- getSemElement(com.intellij.semantic.SemKey,com.intellij.psi.PsiElement):com.intellij.semantic.SemElement
- a:getSemElements(com.intellij.semantic.SemKey,com.intellij.psi.PsiElement):java.util.List
- a:getSemElementsNoCache(com.intellij.semantic.SemKey,com.intellij.psi.PsiElement):java.util.List
- s:getSemService(com.intellij.openapi.project.Project):com.intellij.semantic.SemService
com.intellij.task.BuildTask
- com.intellij.task.ProjectTask
- a:isIncrementalBuild():Z
com.intellij.task.EmptyCompileScopeBuildTask
- com.intellij.task.BuildTask
com.intellij.task.ExecuteRunConfigurationTask
- com.intellij.task.ProjectTask
- a:getConfigurationSettings():com.intellij.execution.configurations.ConfigurationPerRunnerSettings
- a:getExecutionTarget():com.intellij.execution.ExecutionTarget
- a:getRunProfile():com.intellij.execution.configurations.RunProfile
- a:getRunnerSettings():com.intellij.execution.configurations.RunnerSettings
- a:getSettings():com.intellij.execution.RunnerAndConfigurationSettings
com.intellij.task.ModuleBuildTask
- com.intellij.task.BuildTask
- a:getModule():com.intellij.openapi.module.Module
- a:isIncludeDependentModules():Z
- a:isIncludeRuntimeDependencies():Z
- isIncludeTests():Z
com.intellij.task.ModuleFilesBuildTask
- com.intellij.task.ModuleBuildTask
- a:getFiles():com.intellij.openapi.vfs.VirtualFile[]
com.intellij.task.ModuleResourcesBuildTask
- com.intellij.task.ModuleBuildTask
com.intellij.task.ProjectModelBuildTask
- com.intellij.task.BuildTask
- a:getBuildableElement():com.intellij.openapi.roots.ProjectModelBuildableElement
com.intellij.task.ProjectTask
- a:getPresentableName():java.lang.String
c:com.intellij.task.ProjectTaskContext
- com.intellij.openapi.util.UserDataHolderBase
- <init>():V
- <init>(java.lang.Object):V
- <init>(java.lang.Object,com.intellij.execution.configurations.RunConfiguration):V
- <init>(java.lang.Object,com.intellij.execution.configurations.RunConfiguration,Z):V
- <init>(Z):V
- getDirtyOutputPaths():java.util.Optional
- getRunConfiguration():com.intellij.execution.configurations.RunConfiguration
- getSessionId():java.lang.Object
- isAutoRun():Z
- withUserData(com.intellij.openapi.util.Key,java.lang.Object):com.intellij.task.ProjectTaskContext
com.intellij.task.ProjectTaskListener
- sf:TOPIC:com.intellij.util.messages.Topic
- finished(com.intellij.task.ProjectTaskManager$Result):V
- started(com.intellij.task.ProjectTaskContext):V
Fa:com.intellij.task.ProjectTaskManager
- sf:EMPTY_TASKS_ARRAY:com.intellij.task.ProjectTask[]
- <init>(com.intellij.openapi.project.Project):V
- a:build(com.intellij.openapi.module.Module[]):org.jetbrains.concurrency.Promise
- a:build(com.intellij.openapi.roots.ProjectModelBuildableElement[]):org.jetbrains.concurrency.Promise
- a:buildAllModules():org.jetbrains.concurrency.Promise
- a:compile(com.intellij.openapi.vfs.VirtualFile[]):org.jetbrains.concurrency.Promise
- a:createAllModulesBuildTask(Z,com.intellij.openapi.project.Project):com.intellij.task.ProjectTask
- a:createBuildTask(Z,com.intellij.openapi.roots.ProjectModelBuildableElement[]):com.intellij.task.ProjectTask
- createModulesBuildTask(com.intellij.openapi.module.Module,Z,Z,Z):com.intellij.task.ProjectTask
- createModulesBuildTask(com.intellij.openapi.module.Module[],Z,Z,Z):com.intellij.task.ProjectTask
- a:createModulesBuildTask(com.intellij.openapi.module.Module[],Z,Z,Z,Z):com.intellij.task.ProjectTask
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.task.ProjectTaskManager
- a:rebuild(com.intellij.openapi.module.Module[]):org.jetbrains.concurrency.Promise
- a:rebuild(com.intellij.openapi.roots.ProjectModelBuildableElement[]):org.jetbrains.concurrency.Promise
- a:rebuildAllModules():org.jetbrains.concurrency.Promise
- a:run(com.intellij.task.ProjectTask):org.jetbrains.concurrency.Promise
- a:run(com.intellij.task.ProjectTaskContext,com.intellij.task.ProjectTask):org.jetbrains.concurrency.Promise
com.intellij.task.ProjectTaskManager$Result
- a:getContext():com.intellij.task.ProjectTaskContext
- a:hasErrors():Z
- a:isAborted():Z
com.intellij.task.ProjectTaskNotification
- finished(com.intellij.task.ProjectTaskContext,com.intellij.task.ProjectTaskResult):V
- finished(com.intellij.task.ProjectTaskResult):V
c:com.intellij.task.ProjectTaskResult
- <init>(Z,I,I):V
- <init>(Z,I,I,java.util.Map):V
- anyMatch(java.util.function.BiPredicate):Z
- getAffectedModules(java.util.function.Predicate):java.util.List
- getBuildableElements(java.lang.Class,java.util.function.Predicate):java.util.List
- getErrors():I
- getTasks(java.util.function.BiPredicate):java.util.List
- getTasksState():java.util.Map
- getWarnings():I
- isAborted():Z
a:com.intellij.task.ProjectTaskRunner
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- canRun(com.intellij.openapi.project.Project,com.intellij.task.ProjectTask):Z
- canRun(com.intellij.openapi.project.Project,com.intellij.task.ProjectTask,com.intellij.task.ProjectTaskContext):Z
- a:canRun(com.intellij.task.ProjectTask):Z
- createExecutionEnvironment(com.intellij.openapi.project.Project,com.intellij.task.ExecuteRunConfigurationTask,com.intellij.execution.Executor):com.intellij.execution.runners.ExecutionEnvironment
- run(com.intellij.openapi.project.Project,com.intellij.task.ProjectTaskContext,com.intellij.task.ProjectTask[]):org.jetbrains.concurrency.Promise
com.intellij.task.ProjectTaskRunner$Result
- a:hasErrors():Z
- a:isAborted():Z
com.intellij.task.ProjectTaskState
- a:isFailed():Z
- a:isSkipped():Z
com.intellij.testIntegration.TestCreator
- com.intellij.openapi.project.PossiblyDumbAware
- a:createTest(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):V
- a:isAvailable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Editor,com.intellij.psi.PsiFile):Z
com.intellij.testIntegration.TestFinder
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:findClassesForTest(com.intellij.psi.PsiElement):java.util.Collection
- a:findSourceElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:findTestsForClass(com.intellij.psi.PsiElement):java.util.Collection
- getSearchingForClassesForTestProgressTitle(com.intellij.psi.PsiElement):java.lang.String
- getSearchingForTestsForClassProgressTitle(com.intellij.psi.PsiElement):java.lang.String
- a:isTest(com.intellij.psi.PsiElement):Z
a:com.intellij.ui.FileColorManager
- <init>():V
- a:addScopeColor(java.lang.String,java.lang.String,Z):V
- a:getColor(java.lang.String):java.awt.Color
- a:getColorIDs():java.util.Collection
- a:getColorName(java.lang.String):java.lang.String
- a:getColorNames():java.util.Collection
- a:getFileColor(com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ui.FileColorManager
- a:getProject():com.intellij.openapi.project.Project
- a:getRendererBackground(com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- a:getRendererBackground(com.intellij.psi.PsiFile):java.awt.Color
- a:getScopeColor(java.lang.String):java.awt.Color
- a:isEnabled():Z
- a:isEnabledForProjectView():Z
- a:isEnabledForTabs():Z
- a:isShared(java.lang.String):Z
- a:setEnabled(Z):V
com.intellij.ui.popup.util.DetailView
- com.intellij.openapi.util.UserDataHolder
- a:clearEditor():V
- a:getCurrentItem():com.intellij.ui.popup.util.ItemWrapper
- a:getEditor():com.intellij.openapi.editor.Editor
- a:getEditorState():com.intellij.ui.popup.util.DetailView$PreviewEditorState
- a:getPropertiesPanel():javax.swing.JPanel
- a:hasEditorOnly():Z
- a:navigateInPreviewEditor(com.intellij.ui.popup.util.DetailView$PreviewEditorState):V
- a:setCurrentItem(com.intellij.ui.popup.util.ItemWrapper):V
- a:setPropertiesPanel(javax.swing.JPanel):V
c:com.intellij.ui.popup.util.DetailView$PreviewEditorState
- s:EMPTY:com.intellij.ui.popup.util.DetailView$PreviewEditorState
- <init>(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.editor.LogicalPosition,com.intellij.openapi.editor.markup.TextAttributes):V
- s:create(com.intellij.openapi.vfs.VirtualFile,I):com.intellij.ui.popup.util.DetailView$PreviewEditorState
- s:create(com.intellij.openapi.vfs.VirtualFile,I,com.intellij.openapi.editor.markup.TextAttributes):com.intellij.ui.popup.util.DetailView$PreviewEditorState
- equals(java.lang.Object):Z
- getAttributes():com.intellij.openapi.editor.markup.TextAttributes
- getFile():com.intellij.openapi.vfs.VirtualFile
- getNavigate():com.intellij.openapi.editor.LogicalPosition
- hashCode():I
a:com.intellij.ui.popup.util.ItemWrapper
- <init>():V
- a:allowedToRemove():Z
- pa:doUpdateDetailView(com.intellij.ui.popup.util.DetailView,Z):V
- a:footerText():java.lang.String
- a:removed(com.intellij.openapi.project.Project):V
- a:setupRenderer(com.intellij.ui.ColoredListCellRenderer,com.intellij.openapi.project.Project,Z):V
- a:setupRenderer(com.intellij.ui.ColoredTreeCellRenderer,com.intellij.openapi.project.Project,Z):V
- a:speedSearchText():java.lang.String
- a:updateAccessoryView(javax.swing.JComponent):V
- updateDetailView(com.intellij.ui.popup.util.DetailView):V
c:com.intellij.ui.popup.util.SplitterItem
- com.intellij.ui.popup.util.ItemWrapper
- <init>(java.lang.String):V
- allowedToRemove():Z
- p:doUpdateDetailView(com.intellij.ui.popup.util.DetailView,Z):V
- footerText():java.lang.String
- getText():java.lang.String
- removed(com.intellij.openapi.project.Project):V
- setupRenderer(com.intellij.ui.ColoredListCellRenderer,com.intellij.openapi.project.Project,Z):V
- setupRenderer(com.intellij.ui.ColoredTreeCellRenderer,com.intellij.openapi.project.Project,Z):V
- speedSearchText():java.lang.String
- updateAccessoryView(javax.swing.JComponent):V
a:com.intellij.util.ActionRunner
- <init>():V
- s:runInsideWriteAction(com.intellij.util.ActionRunner$InterruptibleRunnable):V
- s:runInsideWriteAction(com.intellij.util.ActionRunner$InterruptibleRunnableWithResult):java.lang.Object
com.intellij.util.ActionRunner$InterruptibleRunnable
- a:run():V
com.intellij.util.ActionRunner$InterruptibleRunnableWithResult
- a:run():java.lang.Object
f:com.intellij.util.PsiNavigateUtil
- <init>():V
- s:navigate(com.intellij.psi.PsiElement):V
- s:navigate(com.intellij.psi.PsiElement,Z):V
f:com.intellij.util.indexing.LightDirectoryIndex
- <init>(com.intellij.openapi.Disposable,java.lang.Object,com.intellij.util.Consumer):V
- getInfoForFile(com.intellij.openapi.vfs.VirtualFile):java.lang.Object
- putInfo(com.intellij.openapi.vfs.VirtualFile,java.lang.Object):V
- resetIndex():V
