<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="com.intellij.psi.util.CachedValueProvider">
    <annotation name="java.lang.FunctionalInterface" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil java.util.Collection<T> collectElementsOfType(com.intellij.psi.PsiElement, java.lang.Class&lt;T&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil java.util.Collection<T> findChildrenOfAnyType(com.intellij.psi.PsiElement, java.lang.Class&lt;? extends T&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil T findChildOfAnyType(com.intellij.psi.PsiElement, java.lang.Class&lt;? extends T&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil T findChildOfAnyType(com.intellij.psi.PsiElement, boolean, java.lang.Class&lt;? extends T&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil java.util.List<T> getChildrenOfAnyType(com.intellij.psi.PsiElement, java.lang.Class&lt;? extends T&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil T getChildOfAnyType(com.intellij.psi.PsiElement, java.lang.Class&lt;? extends T&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil T getContextOfType(com.intellij.psi.PsiElement, java.lang.Class&lt;T&gt;, boolean, java.lang.Class&lt;? extends com.intellij.psi.PsiElement&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil T getContextOfType(com.intellij.psi.PsiElement, java.lang.Class&lt;? extends T&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil T getContextOfType(com.intellij.psi.PsiElement, boolean, java.lang.Class&lt;? extends T&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil T getNonStrictParentOfType(com.intellij.psi.PsiElement, java.lang.Class&lt;? extends T&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil T getParentOfType(com.intellij.psi.PsiElement, java.lang.Class&lt;T&gt;, boolean, java.lang.Class&lt;? extends com.intellij.psi.PsiElement&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil T getParentOfType(com.intellij.psi.PsiElement, java.lang.Class&lt;? extends T&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
  <item name="com.intellij.psi.util.PsiTreeUtil boolean instanceOf(java.lang.Object, java.lang.Class&lt;?&gt;...)">
    <annotation name="java.lang.SafeVarargs" />
  </item>
</root>