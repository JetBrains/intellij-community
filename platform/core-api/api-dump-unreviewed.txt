c:com.intellij.DynamicBundle
- com.intellij.AbstractBundle
- sf:INSTANCE:com.intellij.DynamicBundle
- <init>(java.lang.Class,java.lang.String):V
- p:<init>(java.lang.String):V
- p:findBundle(java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle$Control):java.util.ResourceBundle
- s:getBundle(java.lang.String):java.util.ResourceBundle
- s:getBundle(java.lang.String,java.lang.Class):java.util.ResourceBundle
- s:getLocale():java.util.Locale
- s:getPluginBundle(com.intellij.openapi.extensions.PluginDescriptor):java.util.ResourceBundle
- s:getResourceBundle(java.lang.ClassLoader,java.lang.String):java.util.ResourceBundle
- s:getResourceBundle(java.lang.ClassLoader,java.lang.String,java.util.Locale):java.util.ResourceBundle
- f:getResourceBundle(java.lang.String,java.lang.ClassLoader):java.util.ResourceBundle
f:com.intellij.application.Topics
- sf:subscribe(com.intellij.util.messages.Topic,com.intellij.openapi.Disposable,java.lang.Object):V
com.intellij.codeInsight.ContainerProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getContainer(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
a:com.intellij.codeInsight.FileModificationService
- <init>():V
- s:getInstance():com.intellij.codeInsight.FileModificationService
- a:prepareFileForWrite(com.intellij.psi.PsiFile):Z
- preparePsiElementForWrite(com.intellij.psi.PsiElement):Z
- a:preparePsiElementsForWrite(java.util.Collection):Z
- preparePsiElementsForWrite(com.intellij.psi.PsiElement[]):Z
- a:prepareVirtualFilesForWrite(com.intellij.openapi.project.Project,java.util.Collection):Z
f:com.intellij.codeInsight.PsiEquivalenceUtil
- <init>():V
- s:areElementsEquivalent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- s:areEquivalent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.util.function.BiPredicate,java.util.function.BiPredicate):Z
- s:areEquivalent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.util.function.BiPredicate,java.util.function.BiPredicate,java.util.function.Predicate,Z):Z
- s:areEquivalent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,java.util.function.BiPredicate,Z):Z
- s:findChildRangeDuplicates(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.util.PairConsumer):V
- s:getFilteredChildren(com.intellij.psi.PsiElement,java.util.function.Predicate,Z):com.intellij.psi.PsiElement[]
f:com.intellij.codeInsight.completion.CompletionUtilCore
- sf:DUMMY_IDENTIFIER:java.lang.String
- sf:DUMMY_IDENTIFIER_TRIMMED:java.lang.String
- <init>():V
com.intellij.codeInsight.controlflow.ConditionalInstruction
- com.intellij.codeInsight.controlflow.Instruction
- a:getCondition():com.intellij.psi.PsiElement
- a:getResult():Z
com.intellij.codeInsight.controlflow.ControlFlow
- a:getInstructions():com.intellij.codeInsight.controlflow.Instruction[]
com.intellij.codeInsight.controlflow.Instruction
- sf:EMPTY_ARRAY:com.intellij.codeInsight.controlflow.Instruction[]
- addPred(com.intellij.codeInsight.controlflow.Instruction):V
- addSucc(com.intellij.codeInsight.controlflow.Instruction):V
- a:allPred():java.util.Collection
- a:allSucc():java.util.Collection
- a:getElement():com.intellij.psi.PsiElement
- a:getElementPresentation():java.lang.String
- a:num():I
- replacePred(com.intellij.codeInsight.controlflow.Instruction,java.util.Collection):V
- replaceSucc(com.intellij.codeInsight.controlflow.Instruction,java.util.Collection):V
com.intellij.codeInsight.controlflow.TransparentInstruction
- com.intellij.codeInsight.controlflow.Instruction
com.intellij.codeInsight.documentation.DocumentationManagerProtocol
- sf:KEEP_SCROLLING_POSITION_REF:java.lang.String
- sf:PSI_ELEMENT_PROTOCOL:java.lang.String
- sf:PSI_ELEMENT_PROTOCOL_REF_SEPARATOR:java.lang.String
f:com.intellij.codeInsight.documentation.DocumentationManagerUtil
- s:createHyperlink(java.lang.StringBuilder,com.intellij.psi.PsiElement,java.lang.String,java.lang.String,Z):V
- s:createHyperlink(java.lang.StringBuilder,com.intellij.psi.PsiElement,java.lang.String,java.lang.String,Z,Z):V
- s:createHyperlink(java.lang.StringBuilder,java.lang.String,java.lang.String,Z):V
- s:createHyperlink(java.lang.StringBuilder,java.lang.String,java.lang.String,Z,Z):V
c:com.intellij.codeInsight.folding.CodeFoldingSettings
- COLLAPSE_CUSTOM_FOLDING_REGIONS:Z
- COLLAPSE_DOC_COMMENTS:Z
- COLLAPSE_FILE_HEADER:Z
- COLLAPSE_IMPORTS:Z
- COLLAPSE_METHODS:Z
- <init>():V
- s:getInstance():com.intellij.codeInsight.folding.CodeFoldingSettings
a:com.intellij.codeInsight.generation.CommenterDataHolder
- com.intellij.openapi.util.UserDataHolderBase
- <init>():V
com.intellij.codeInsight.generation.CommenterWithLineSuffix
- com.intellij.lang.Commenter
- a:getLineCommentSuffix():java.lang.String
com.intellij.codeInsight.generation.EscapingCommenter
- com.intellij.lang.Commenter
- a:escape(com.intellij.openapi.editor.Document,com.intellij.openapi.editor.RangeMarker):V
- a:unescape(com.intellij.openapi.editor.Document,com.intellij.openapi.editor.RangeMarker):V
com.intellij.codeInsight.generation.IndentedCommenter
- com.intellij.lang.Commenter
- forceIndentedBlockComment():java.lang.Boolean
- a:forceIndentedLineComment():java.lang.Boolean
com.intellij.codeInsight.generation.SelfManagingCommenter
- sf:EMPTY_STATE:com.intellij.codeInsight.generation.CommenterDataHolder
- a:commentLine(I,I,com.intellij.openapi.editor.Document,com.intellij.codeInsight.generation.CommenterDataHolder):V
- a:createBlockCommentingState(I,I,com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile):com.intellij.codeInsight.generation.CommenterDataHolder
- a:createLineCommentingState(I,I,com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile):com.intellij.codeInsight.generation.CommenterDataHolder
- a:getBlockCommentPrefix(I,com.intellij.openapi.editor.Document,com.intellij.codeInsight.generation.CommenterDataHolder):java.lang.String
- a:getBlockCommentRange(I,I,com.intellij.openapi.editor.Document,com.intellij.codeInsight.generation.CommenterDataHolder):com.intellij.openapi.util.TextRange
- a:getBlockCommentSuffix(I,com.intellij.openapi.editor.Document,com.intellij.codeInsight.generation.CommenterDataHolder):java.lang.String
- a:getCommentPrefix(I,com.intellij.openapi.editor.Document,com.intellij.codeInsight.generation.CommenterDataHolder):java.lang.String
- a:insertBlockComment(I,I,com.intellij.openapi.editor.Document,com.intellij.codeInsight.generation.CommenterDataHolder):com.intellij.openapi.util.TextRange
- a:isLineCommented(I,I,com.intellij.openapi.editor.Document,com.intellij.codeInsight.generation.CommenterDataHolder):Z
- a:uncommentBlockComment(I,I,com.intellij.openapi.editor.Document,com.intellij.codeInsight.generation.CommenterDataHolder):V
- a:uncommentLine(I,I,com.intellij.openapi.editor.Document,com.intellij.codeInsight.generation.CommenterDataHolder):V
f:com.intellij.codeInsight.generation.SelfManagingCommenterUtil
- <init>():V
- s:getBlockCommentRange(I,I,com.intellij.openapi.editor.Document,java.lang.String,java.lang.String):com.intellij.openapi.util.TextRange
- s:insertBlockComment(I,I,com.intellij.openapi.editor.Document,java.lang.String,java.lang.String):com.intellij.openapi.util.TextRange
- s:uncommentBlockComment(I,I,com.intellij.openapi.editor.Document,java.lang.String,java.lang.String):V
a:com.intellij.codeInsight.highlighting.ReadWriteAccessDetector
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- s:findDetector(com.intellij.psi.PsiElement):com.intellij.codeInsight.highlighting.ReadWriteAccessDetector
- a:getExpressionAccess(com.intellij.psi.PsiElement):com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access
- a:getReferenceAccess(com.intellij.psi.PsiElement,com.intellij.psi.PsiReference):com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access
- a:isDeclarationWriteAccess(com.intellij.psi.PsiElement):Z
- a:isReadWriteAccessible(com.intellij.psi.PsiElement):Z
e:com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access
- java.lang.Enum
- sf:Read:com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access
- sf:ReadWrite:com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access
- sf:Write:com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access
- isReferencedForRead():Z
- isReferencedForWrite():Z
- s:valueOf(java.lang.String):com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access
- s:values():com.intellij.codeInsight.highlighting.ReadWriteAccessDetector$Access[]
f:com.intellij.codeWithMe.ClientId
- sf:Companion:com.intellij.codeWithMe.ClientId$Companion
- <init>(java.lang.String):V
- f:component1():java.lang.String
- f:copy(java.lang.String):com.intellij.codeWithMe.ClientId
- bs:copy$default(com.intellij.codeWithMe.ClientId,java.lang.String,I,java.lang.Object):com.intellij.codeWithMe.ClientId
- equals(java.lang.Object):Z
- sf:getCurrent():com.intellij.codeWithMe.ClientId
- sf:getCurrentOrNull():com.intellij.codeWithMe.ClientId
- sf:getLocalId():com.intellij.codeWithMe.ClientId
- sf:getOwnerId():com.intellij.codeWithMe.ClientId
- f:getValue():java.lang.String
- hashCode():I
- sf:isCurrentlyUnderLocalId():Z
- sf:isLocal(com.intellij.codeWithMe.ClientId):Z
e:com.intellij.codeWithMe.ClientId$AbsenceBehavior
- java.lang.Enum
- sf:LOG_ERROR:com.intellij.codeWithMe.ClientId$AbsenceBehavior
- sf:RETURN_LOCAL:com.intellij.codeWithMe.ClientId$AbsenceBehavior
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.codeWithMe.ClientId$AbsenceBehavior
- s:values():com.intellij.codeWithMe.ClientId$AbsenceBehavior[]
f:com.intellij.codeWithMe.ClientId$Companion
- f:getCurrent():com.intellij.codeWithMe.ClientId
- f:getCurrentOrNull():com.intellij.codeWithMe.ClientId
- f:getDefaultLocalId():com.intellij.codeWithMe.ClientId
- f:getLocalId():com.intellij.codeWithMe.ClientId
- f:getOwnerId():com.intellij.codeWithMe.ClientId
- f:isCurrentlyUnderLocalId():Z
- f:isLocal(com.intellij.codeWithMe.ClientId):Z
f:com.intellij.codeWithMe.ClientIdKt
- sf:asContextElement(com.intellij.codeWithMe.ClientId):kotlin.coroutines.CoroutineContext$Element
- sf:isForeignClientOnServer():Z
- sf:isOnGuest():Z
com.intellij.concurrency.AsyncFuture
- java.util.concurrent.Future
- a:addConsumer(java.util.concurrent.Executor,com.intellij.concurrency.ResultConsumer):V
f:com.intellij.concurrency.AsyncUtil
- <init>():V
- s:get(java.util.concurrent.Future):java.lang.Object
- s:wrapBoolean(Z):com.intellij.concurrency.AsyncFuture
a:com.intellij.concurrency.JobScheduler
- <init>():V
- s:getScheduler():java.util.concurrent.ScheduledExecutorService
com.intellij.concurrency.ResultConsumer
- a:onFailure(java.lang.Throwable):V
- a:onSuccess(java.lang.Object):V
f:com.intellij.core.CoreBundle
- sf:BUNDLE:java.lang.String
- s:message(java.lang.String,java.lang.Object[]):java.lang.String
- s:messageOrNull(java.lang.String,java.lang.Object[]):java.lang.String
com.intellij.diagnostic.Dumpable
- a:dumpState():java.lang.String
f:com.intellij.diagnostic.ImplementationConflictException
- java.lang.RuntimeException
- <init>(java.lang.String,java.lang.Throwable,java.lang.Object[]):V
- getConflictingPluginIds():java.util.Set
- isConflictWithPlatform():Z
c:com.intellij.diagnostic.PluginException
- java.lang.RuntimeException
- com.intellij.openapi.diagnostic.ExceptionWithAttachments
- <init>(java.lang.String,com.intellij.openapi.extensions.PluginId):V
- <init>(java.lang.String,com.intellij.openapi.extensions.PluginId,java.util.List):V
- <init>(java.lang.String,java.lang.Throwable,com.intellij.openapi.extensions.PluginId):V
- <init>(java.lang.String,java.lang.Throwable,com.intellij.openapi.extensions.PluginId,java.util.List):V
- <init>(java.lang.Throwable,com.intellij.openapi.extensions.PluginId):V
- s:createByClass(java.lang.String,java.lang.Throwable,java.lang.Class):com.intellij.diagnostic.PluginException
- s:createByClass(java.lang.Throwable,java.lang.Class):com.intellij.diagnostic.PluginException
- f:getAttachments():com.intellij.openapi.diagnostic.Attachment[]
- getMessage():java.lang.String
- f:getPluginId():com.intellij.openapi.extensions.PluginId
- s:logPluginError(com.intellij.openapi.diagnostic.Logger,java.lang.String,java.lang.Throwable,java.lang.Class):V
- s:reportDeprecatedDefault(java.lang.Class,java.lang.String,java.lang.String):V
- s:reportDeprecatedUsage(java.lang.Class,java.lang.String,java.lang.String):V
- s:reportDeprecatedUsage(java.lang.String,java.lang.String):V
com.intellij.execution.filters.HyperlinkInfo
- includeInOccurenceNavigation():Z
- a:navigate(com.intellij.openapi.project.Project):V
e:com.intellij.formatting.FormattingMode
- java.lang.Enum
- sf:ADJUST_INDENT:com.intellij.formatting.FormattingMode
- sf:ADJUST_INDENT_ON_ENTER:com.intellij.formatting.FormattingMode
- sf:REFORMAT:com.intellij.formatting.FormattingMode
- s:valueOf(java.lang.String):com.intellij.formatting.FormattingMode
- s:values():com.intellij.formatting.FormattingMode[]
com.intellij.ide.ConsentOptionsProvider
- a:isActivatedWithFreeLicense():Z
- a:isEAP():Z
- a:isSendingUsageStatsAllowed():Z
- a:setSendingUsageStatsAllowed(Z):V
f:com.intellij.ide.EssentialHighlightingMode
- sf:INSTANCE:com.intellij.ide.EssentialHighlightingMode
- f:isEnabled():Z
- f:setEnabled(Z):V
com.intellij.ide.FileIconPatcher
- com.intellij.openapi.project.DumbAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:patchIcon(javax.swing.Icon,com.intellij.openapi.vfs.VirtualFile,I,com.intellij.openapi.project.Project):javax.swing.Icon
com.intellij.ide.FileIconProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getIcon(com.intellij.openapi.vfs.VirtualFile,I,com.intellij.openapi.project.Project):javax.swing.Icon
com.intellij.ide.HelpIdProvider
- a:getHelpId():java.lang.String
com.intellij.ide.IconLayerProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getLayerDescription():java.lang.String
- a:getLayerIcon(com.intellij.openapi.util.Iconable,Z):javax.swing.Icon
a:com.intellij.ide.IconProvider
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EXTENSION_POINT_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getIcon(com.intellij.psi.PsiElement,I):javax.swing.Icon
f:com.intellij.ide.PowerSaveMode
- sf:TOPIC:com.intellij.util.messages.Topic
- <init>():V
- s:isEnabled():Z
- s:setEnabled(Z):V
com.intellij.ide.PowerSaveMode$Listener
- a:powerSaveStateChanged():V
com.intellij.ide.StatisticsNotificationManager
- a:showNotificationIfNeeded():V
a:com.intellij.ide.TypePresentationService
- <init>():V
- s:getDefaultTypeName(java.lang.Class):java.lang.String
- a:getIcon(java.lang.Object):javax.swing.Icon
- s:getService():com.intellij.ide.TypePresentationService
- a:getTypeIcon(java.lang.Class):javax.swing.Icon
- a:getTypeName(java.lang.Object):java.lang.String
- a:getTypePresentableName(java.lang.Class):java.lang.String
c:com.intellij.ide.fileTemplates.FileTemplateDescriptor
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.Icon):V
- getDisplayName():java.lang.String
- getFileName():java.lang.String
- getIcon():javax.swing.Icon
c:com.intellij.ide.highlighter.ArchiveFileType
- com.intellij.openapi.fileTypes.FileType
- sf:INSTANCE:com.intellij.ide.highlighter.ArchiveFileType
- p:<init>():V
- getDefaultExtension():java.lang.String
- getDescription():java.lang.String
- getDisplayName():java.lang.String
- getIcon():javax.swing.Icon
- getName():java.lang.String
- isBinary():Z
f:com.intellij.ide.plugins.CannotUnloadPluginException
- com.intellij.openapi.progress.ProcessCanceledException
- <init>(java.lang.String):V
com.intellij.ide.plugins.DynamicPluginListener
- sf:Companion:com.intellij.ide.plugins.DynamicPluginListener$Companion
- sf:TOPIC:com.intellij.util.messages.Topic
- beforePluginLoaded(com.intellij.ide.plugins.IdeaPluginDescriptor):V
- beforePluginUnload(com.intellij.ide.plugins.IdeaPluginDescriptor,Z):V
- checkUnloadPlugin(com.intellij.ide.plugins.IdeaPluginDescriptor):V
- pluginLoaded(com.intellij.ide.plugins.IdeaPluginDescriptor):V
- pluginUnloaded(com.intellij.ide.plugins.IdeaPluginDescriptor,Z):V
f:com.intellij.ide.plugins.DynamicPluginListener$Companion
com.intellij.ide.plugins.DynamicPluginVetoer
- a:vetoPluginUnload(com.intellij.ide.plugins.IdeaPluginDescriptor):java.lang.String
@:com.intellij.ide.plugins.DynamicallyLoaded
- java.lang.annotation.Annotation
com.intellij.ide.plugins.IdeaPluginDependency
- a:getPluginId():com.intellij.openapi.extensions.PluginId
- a:isOptional():Z
com.intellij.ide.plugins.IdeaPluginDescriptor
- com.intellij.openapi.extensions.PluginDescriptor
- a:getDependencies():java.util.List
- a:getDescriptorPath():java.lang.String
com.intellij.ide.plugins.PluginUtil
- a:findPluginId(java.lang.Throwable):com.intellij.openapi.extensions.PluginId
- a:findPluginName(com.intellij.openapi.extensions.PluginId):java.lang.String
- s:getInstance():com.intellij.ide.plugins.PluginUtil
a:com.intellij.ide.util.PropertiesComponent
- <init>():V
- f:getBoolean(java.lang.String):Z
- f:getBoolean(java.lang.String,Z):Z
- getFloat(java.lang.String,F):F
- s:getInstance():com.intellij.ide.util.PropertiesComponent
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.util.PropertiesComponent
- getInt(java.lang.String,I):I
- a:getList(java.lang.String):java.util.List
- getLong(java.lang.String,J):J
- f:getOrInitInt(java.lang.String,I):I
- f:getOrInitLong(java.lang.String,J):J
- a:getValue(java.lang.String):java.lang.String
- getValue(java.lang.String,java.lang.String):java.lang.String
- a:getValues(java.lang.String):java.lang.String[]
- f:isTrueValue(java.lang.String):Z
- a:isValueSet(java.lang.String):Z
- f:loadFields(java.lang.Object):Z
- f:saveFields(java.lang.Object):Z
- a:setList(java.lang.String,java.util.Collection):V
- a:setValue(java.lang.String,F,F):V
- a:setValue(java.lang.String,I,I):V
- a:setValue(java.lang.String,java.lang.String):V
- a:setValue(java.lang.String,java.lang.String,java.lang.String):V
- f:setValue(java.lang.String,Z):V
- a:setValue(java.lang.String,Z,Z):V
- a:setValues(java.lang.String,java.lang.String[]):V
- a:unsetValue(java.lang.String):V
- a:updateValue(java.lang.String,Z):Z
@:com.intellij.ide.util.PropertyName
- java.lang.annotation.Annotation
- sf:NOT_SET:java.lang.String
- a:defaultValue():java.lang.String
- a:value():java.lang.String
a:com.intellij.ide.util.PsiNavigationSupport
- <init>():V
- a:canNavigate(com.intellij.psi.PsiElement):Z
- a:createNavigatable(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,I):com.intellij.pom.Navigatable
- a:getDescriptor(com.intellij.psi.PsiElement):com.intellij.pom.Navigatable
- s:getInstance():com.intellij.ide.util.PsiNavigationSupport
- a:navigateToDirectory(com.intellij.psi.PsiDirectory,Z):V
- a:openDirectoryInSystemFileManager(java.io.File):V
com.intellij.injected.editor.DocumentWindow
- com.intellij.openapi.editor.Document
- a:areRangesEqual(com.intellij.injected.editor.DocumentWindow):Z
- a:containsRange(I,I):Z
- a:getDelegate():com.intellij.openapi.editor.Document
- a:getHostRange(I):com.intellij.openapi.util.TextRange
- a:getHostRanges():com.intellij.openapi.util.Segment[]
- a:hostToInjected(I):I
- a:injectedToHost(I):I
- a:injectedToHost(com.intellij.openapi.util.TextRange):com.intellij.openapi.util.TextRange
- a:injectedToHostLine(I):I
- a:isOneLine():Z
- a:isValid():Z
- a:prepareReplaceString(I,I,java.lang.CharSequence):java.util.Collection
com.intellij.injected.editor.InjectionEditService
- a:synchronizeWithFragment(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document):com.intellij.openapi.Disposable
com.intellij.injected.editor.VirtualFileDelegate
- a:getDelegate():com.intellij.openapi.vfs.VirtualFile
com.intellij.injected.editor.VirtualFileWindow
- a:getDelegate():com.intellij.openapi.vfs.VirtualFile
- a:getDocumentWindow():com.intellij.injected.editor.DocumentWindow
- a:isValid():Z
f:com.intellij.l10n.LocalizationUtil
- sf:INSTANCE:com.intellij.l10n.LocalizationUtil
- f:getLocale():java.util.Locale
- f:getLocale(Z):java.util.Locale
- bs:getLocale$default(com.intellij.l10n.LocalizationUtil,Z,I,java.lang.Object):java.util.Locale
- f:getLocaleOrNullForDefault():java.util.Locale
com.intellij.lang.ASTNode
- com.intellij.openapi.util.UserDataHolder
- sf:EMPTY_ARRAY:com.intellij.lang.ASTNode[]
- a:addChild(com.intellij.lang.ASTNode):V
- a:addChild(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- a:addChildren(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- a:addLeaf(com.intellij.psi.tree.IElementType,java.lang.CharSequence,com.intellij.lang.ASTNode):V
- a:clone():java.lang.Object
- a:copyElement():com.intellij.lang.ASTNode
- a:findChildByType(com.intellij.psi.tree.IElementType):com.intellij.lang.ASTNode
- a:findChildByType(com.intellij.psi.tree.IElementType,com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- a:findChildByType(com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode
- a:findChildByType(com.intellij.psi.tree.TokenSet,com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- a:findLeafElementAt(I):com.intellij.lang.ASTNode
- a:getChars():java.lang.CharSequence
- a:getChildren(com.intellij.psi.tree.TokenSet):com.intellij.lang.ASTNode[]
- a:getCopyableUserData(com.intellij.openapi.util.Key):java.lang.Object
- a:getElementType():com.intellij.psi.tree.IElementType
- a:getFirstChildNode():com.intellij.lang.ASTNode
- a:getLastChildNode():com.intellij.lang.ASTNode
- a:getPsi():com.intellij.psi.PsiElement
- a:getPsi(java.lang.Class):com.intellij.psi.PsiElement
- a:getStartOffset():I
- getStartOffsetInParent():I
- a:getText():java.lang.String
- a:getTextLength():I
- a:getTextRange():com.intellij.openapi.util.TextRange
- a:getTreeNext():com.intellij.lang.ASTNode
- a:getTreeParent():com.intellij.lang.ASTNode
- a:getTreePrev():com.intellij.lang.ASTNode
- a:putCopyableUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- a:removeChild(com.intellij.lang.ASTNode):V
- a:removeRange(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- a:replaceAllChildrenToChildrenOf(com.intellij.lang.ASTNode):V
- a:replaceChild(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- a:textContains(C):Z
com.intellij.lang.CodeDocumentationAwareCommenter
- com.intellij.lang.Commenter
- a:getBlockCommentTokenType():com.intellij.psi.tree.IElementType
- a:getDocumentationCommentLinePrefix():java.lang.String
- a:getDocumentationCommentPrefix():java.lang.String
- a:getDocumentationCommentSuffix():java.lang.String
- a:getDocumentationCommentTokenType():com.intellij.psi.tree.IElementType
- a:getLineCommentTokenType():com.intellij.psi.tree.IElementType
- getLineCommentTokenTypes():java.util.List
- a:isDocumentationComment(com.intellij.psi.PsiComment):Z
com.intellij.lang.CodeDocumentationAwareCommenterEx
- com.intellij.lang.CodeDocumentationAwareCommenter
- a:isDocumentationCommentText(com.intellij.psi.PsiElement):Z
com.intellij.lang.Commenter
- blockCommentRequiresFullLineSelection():Z
- a:getBlockCommentPrefix():java.lang.String
- a:getBlockCommentSuffix():java.lang.String
- a:getCommentedBlockCommentPrefix():java.lang.String
- a:getCommentedBlockCommentSuffix():java.lang.String
- a:getLineCommentPrefix():java.lang.String
- getLineCommentPrefixes():java.util.List
c:com.intellij.lang.CompositeLanguage
- com.intellij.lang.Language
- p:<init>(com.intellij.lang.Language,java.lang.String,java.lang.String[]):V
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,java.lang.String[]):V
- getLanguageExtensions():com.intellij.lang.LanguageFilter[]
- getLanguageExtensionsForFile(com.intellij.psi.PsiFile):com.intellij.lang.Language[]
- registerLanguageExtension(com.intellij.lang.LanguageFilter):V
com.intellij.lang.CustomUncommenter
- a:findMaximumCommentedRange(java.lang.CharSequence):com.intellij.openapi.util.TextRange
- a:getCommentRangesToDelete(java.lang.CharSequence):java.util.Collection
com.intellij.lang.DependentLanguage
c:com.intellij.lang.FCTSBackedLighterAST
- com.intellij.lang.LighterAST
- <init>(com.intellij.util.CharTable,com.intellij.util.diff.FlyweightCapableTreeStructure):V
- getChildren(com.intellij.lang.LighterASTNode):java.util.List
- getParent(com.intellij.lang.LighterASTNode):com.intellij.lang.LighterASTNode
- getRoot():com.intellij.lang.LighterASTNode
com.intellij.lang.FileASTNode
- com.intellij.lang.ASTNode
- a:getCharTable():com.intellij.util.CharTable
- a:getLighterAST():com.intellij.lang.LighterAST
- a:isParsed():Z
com.intellij.lang.ITokenTypeRemapper
- a:filter(com.intellij.psi.tree.IElementType,I,I,java.lang.CharSequence):com.intellij.psi.tree.IElementType
com.intellij.lang.InjectableLanguage
a:com.intellij.lang.Language
- com.intellij.openapi.util.UserDataHolderBase
- sf:ANY:com.intellij.lang.Language
- sf:EMPTY_ARRAY:com.intellij.lang.Language[]
- p:<init>(com.intellij.lang.Language,java.lang.String,java.lang.String[]):V
- p:<init>(java.lang.String):V
- p:<init>(java.lang.String,Z):V
- p:<init>(java.lang.String,java.lang.String[]):V
- s:findInstance(java.lang.Class):com.intellij.lang.Language
- s:findInstancesByMimeType(java.lang.String):java.util.Collection
- s:findLanguageByID(java.lang.String):com.intellij.lang.Language
- getAssociatedFileType():com.intellij.openapi.fileTypes.LanguageFileType
- getBaseLanguage():com.intellij.lang.Language
- getDialects():java.util.List
- getDisplayName():java.lang.String
- getID():java.lang.String
- getMimeTypes():java.lang.String[]
- s:getRegisteredLanguages():java.util.Collection
- getTransitiveDialects():java.util.Collection
- f:is(com.intellij.lang.Language):Z
- isCaseSensitive():Z
- f:isKindOf(com.intellij.lang.Language):Z
- f:isKindOf(java.lang.String):Z
f:com.intellij.lang.LanguageCommenters
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageCommenters
c:com.intellij.lang.LanguageExtension
- com.intellij.openapi.util.KeyedExtensionCollector
- <init>(com.intellij.openapi.extensions.ExtensionPointName):V
- <init>(com.intellij.openapi.extensions.ExtensionPointName,java.lang.Object):V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.Object):V
- addExplicitExtension(com.intellij.lang.Language,java.lang.Object):V
- allForLanguage(com.intellij.lang.Language):java.util.List
- allForLanguageOrAny(com.intellij.lang.Language):java.util.List
- p:buildExtensions(java.lang.String,com.intellij.lang.Language):java.util.List
- clearCache(com.intellij.lang.Language):V
- p:ensureValuesLoaded():V
- p:findForLanguage(com.intellij.lang.Language):java.lang.Object
- forLanguage(com.intellij.lang.Language):java.lang.Object
- p:getDefaultImplementation():java.lang.Object
- invalidateCacheForExtension(java.lang.String):V
- p:keyToString(com.intellij.lang.Language):java.lang.String
- removeExplicitExtension(com.intellij.lang.Language,java.lang.Object):V
c:com.intellij.lang.LanguageExtensionPoint
- com.intellij.openapi.extensions.CustomLoadingExtensionPointBean
- com.intellij.util.KeyedLazyInstance
- implementationClass:java.lang.String
- language:java.lang.String
- <init>():V
- <init>(java.lang.String,java.lang.Object):V
- <init>(java.lang.String,java.lang.String,com.intellij.openapi.extensions.PluginDescriptor):V
- pf:getImplementationClassName():java.lang.String
- getKey():java.lang.String
com.intellij.lang.LanguageFilter
- a:getLanguage():com.intellij.lang.Language
- a:isRelevantForFile(com.intellij.psi.PsiFile):Z
f:com.intellij.lang.LanguageParserDefinitions
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.lang.LanguageParserDefinitions
f:com.intellij.lang.LanguageUtil
- sf:LANGUAGE_COMPARATOR:java.util.Comparator
- s:canStickTokensTogetherByLexer(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode,com.intellij.lexer.Lexer):com.intellij.lang.ParserDefinition$SpaceRequirements
- s:findRegisteredLanguage(java.lang.String):com.intellij.lang.Language
- s:getAllDerivedLanguages(com.intellij.lang.Language):java.util.Set
- s:getBaseLanguages(com.intellij.lang.Language):com.intellij.util.containers.JBIterable
- s:getFileLanguage(com.intellij.openapi.vfs.VirtualFile):com.intellij.lang.Language
- s:getFileLanguages():java.util.List
- s:getFileTypeLanguage(com.intellij.openapi.fileTypes.FileType):com.intellij.lang.Language
- s:getInjectableLanguages():java.util.List
- s:getLanguageFileType(com.intellij.lang.Language):com.intellij.openapi.fileTypes.FileType
- s:getLanguageForPsi(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.lang.Language
- s:getLanguageForPsi(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileTypes.FileType):com.intellij.lang.Language
- s:getLanguages(java.util.function.Predicate):java.util.List
- s:getRootLanguage(com.intellij.psi.PsiElement):com.intellij.lang.Language
- s:isFileLanguage(com.intellij.lang.Language):Z
- s:isInTemplateLanguageFile(com.intellij.psi.PsiElement):Z
- s:isInjectableLanguage(com.intellij.lang.Language):Z
com.intellij.lang.LightPsiParser
- a:parseLight(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder):V
a:com.intellij.lang.LighterAST
- <init>(com.intellij.util.CharTable):V
- getCharTable():com.intellij.util.CharTable
- a:getChildren(com.intellij.lang.LighterASTNode):java.util.List
- a:getParent(com.intellij.lang.LighterASTNode):com.intellij.lang.LighterASTNode
- a:getRoot():com.intellij.lang.LighterASTNode
com.intellij.lang.LighterASTNode
- sf:EMPTY_ARRAY:com.intellij.lang.LighterASTNode[]
- a:getEndOffset():I
- a:getStartOffset():I
- getTextLength():I
- a:getTokenType():com.intellij.psi.tree.IElementType
com.intellij.lang.LighterASTSyntaxTreeBuilderBackedNode
- com.intellij.lang.LighterASTNode
- a:getText():java.lang.CharSequence
com.intellij.lang.LighterASTTokenNode
- com.intellij.lang.LighterASTNode
- a:getText():java.lang.CharSequence
com.intellij.lang.LighterLazyParseableNode
- com.intellij.lang.LighterASTNode
- a:accept(com.intellij.lang.LighterLazyParseableNode$Visitor):Z
- a:getCharTable():com.intellij.util.CharTable
- a:getContainingFile():com.intellij.psi.PsiFile
- a:getText():java.lang.CharSequence
com.intellij.lang.LighterLazyParseableNode$Visitor
- a:visit(com.intellij.psi.tree.IElementType):Z
a:com.intellij.lang.MetaLanguage
- com.intellij.lang.Language
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>(java.lang.String):V
- s:all():java.util.List
- getMatchingLanguages():java.util.Collection
- a:matchesLanguage(com.intellij.lang.Language):Z
com.intellij.lang.ParserDefinition
- a:createElement(com.intellij.lang.ASTNode):com.intellij.psi.PsiElement
- a:createFile(com.intellij.psi.FileViewProvider):com.intellij.psi.PsiFile
- a:createLexer(com.intellij.openapi.project.Project):com.intellij.lexer.Lexer
- a:createParser(com.intellij.openapi.project.Project):com.intellij.lang.PsiParser
- a:getCommentTokens():com.intellij.psi.tree.TokenSet
- a:getFileNodeType():com.intellij.psi.tree.IFileElementType
- a:getStringLiteralElements():com.intellij.psi.tree.TokenSet
- getWhitespaceTokens():com.intellij.psi.tree.TokenSet
- spaceExistanceTypeBetweenTokens(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):com.intellij.lang.ParserDefinition$SpaceRequirements
- spaceExistenceTypeBetweenTokens(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):com.intellij.lang.ParserDefinition$SpaceRequirements
e:com.intellij.lang.ParserDefinition$SpaceRequirements
- java.lang.Enum
- sf:MAY:com.intellij.lang.ParserDefinition$SpaceRequirements
- sf:MUST:com.intellij.lang.ParserDefinition$SpaceRequirements
- sf:MUST_LINE_BREAK:com.intellij.lang.ParserDefinition$SpaceRequirements
- sf:MUST_NOT:com.intellij.lang.ParserDefinition$SpaceRequirements
- s:valueOf(java.lang.String):com.intellij.lang.ParserDefinition$SpaceRequirements
- s:values():com.intellij.lang.ParserDefinition$SpaceRequirements[]
com.intellij.lang.PsiBuilder
- com.intellij.lang.SyntaxTreeBuilder
- com.intellij.openapi.util.UserDataHolder
- a:getLightTree():com.intellij.util.diff.FlyweightCapableTreeStructure
- a:getProject():com.intellij.openapi.project.Project
- a:getTreeBuilt():com.intellij.lang.ASTNode
- getUserDataUnprotected(com.intellij.openapi.util.Key):java.lang.Object
- a:mark():com.intellij.lang.PsiBuilder$Marker
- putUserDataUnprotected(com.intellij.openapi.util.Key,java.lang.Object):V
com.intellij.lang.PsiBuilder$Marker
- com.intellij.lang.SyntaxTreeBuilder$Marker
- a:doneBefore(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder$Marker):V
- a:doneBefore(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder$Marker,java.lang.String):V
- doneBefore(com.intellij.psi.tree.IElementType,com.intellij.lang.SyntaxTreeBuilder$Marker):V
- doneBefore(com.intellij.psi.tree.IElementType,com.intellij.lang.SyntaxTreeBuilder$Marker,java.lang.String):V
- a:errorBefore(java.lang.String,com.intellij.lang.PsiBuilder$Marker):V
- errorBefore(java.lang.String,com.intellij.lang.SyntaxTreeBuilder$Marker):V
- a:precede():com.intellij.lang.PsiBuilder$Marker
a:com.intellij.lang.PsiBuilderFactory
- <init>():V
- a:createBuilder(com.intellij.lang.ParserDefinition,com.intellij.lexer.Lexer,java.lang.CharSequence):com.intellij.lang.PsiBuilder
- a:createBuilder(com.intellij.openapi.project.Project,com.intellij.lang.ASTNode):com.intellij.lang.PsiBuilder
- a:createBuilder(com.intellij.openapi.project.Project,com.intellij.lang.ASTNode,com.intellij.lexer.Lexer,com.intellij.lang.Language,java.lang.CharSequence):com.intellij.lang.PsiBuilder
- a:createBuilder(com.intellij.openapi.project.Project,com.intellij.lang.LighterLazyParseableNode):com.intellij.lang.PsiBuilder
- a:createBuilder(com.intellij.openapi.project.Project,com.intellij.lang.LighterLazyParseableNode,com.intellij.lexer.Lexer,com.intellij.lang.Language,java.lang.CharSequence):com.intellij.lang.PsiBuilder
- createBuilder(com.intellij.openapi.project.Project,com.intellij.lexer.Lexer,com.intellij.lang.ASTNode):com.intellij.lang.PsiBuilder
- s:getInstance():com.intellij.lang.PsiBuilderFactory
com.intellij.lang.PsiParser
- a:parse(com.intellij.psi.tree.IElementType,com.intellij.lang.PsiBuilder):com.intellij.lang.ASTNode
com.intellij.lang.SyntaxTreeBuilder
- a:advanceLexer():V
- a:enforceCommentTokens(com.intellij.psi.tree.TokenSet):V
- a:eof():Z
- a:error(java.lang.String):V
- a:getCurrentOffset():I
- a:getLatestDoneMarker():com.intellij.lang.LighterASTNode
- a:getOriginalText():java.lang.CharSequence
- getProductions():java.util.List
- a:getTokenText():java.lang.String
- a:getTokenType():com.intellij.psi.tree.IElementType
- isWhitespaceOrComment(com.intellij.psi.tree.IElementType):Z
- a:lookAhead(I):com.intellij.psi.tree.IElementType
- a:mark():com.intellij.lang.SyntaxTreeBuilder$Marker
- rawAdvanceLexer(I):V
- a:rawLookup(I):com.intellij.psi.tree.IElementType
- a:rawTokenIndex():I
- a:rawTokenTypeStart(I):I
- a:remapCurrentToken(com.intellij.psi.tree.IElementType):V
- a:setDebugMode(Z):V
- a:setTokenTypeRemapper(com.intellij.lang.ITokenTypeRemapper):V
- a:setWhitespaceSkippedCallback(com.intellij.lang.WhitespaceSkippedCallback):V
com.intellij.lang.SyntaxTreeBuilder$Marker
- com.intellij.lang.SyntaxTreeBuilder$Production
- a:collapse(com.intellij.psi.tree.IElementType):V
- a:done(com.intellij.psi.tree.IElementType):V
- a:doneBefore(com.intellij.psi.tree.IElementType,com.intellij.lang.SyntaxTreeBuilder$Marker):V
- a:doneBefore(com.intellij.psi.tree.IElementType,com.intellij.lang.SyntaxTreeBuilder$Marker,java.lang.String):V
- a:drop():V
- a:error(java.lang.String):V
- a:errorBefore(java.lang.String,com.intellij.lang.SyntaxTreeBuilder$Marker):V
- a:precede():com.intellij.lang.SyntaxTreeBuilder$Marker
- a:rollbackTo():V
- a:setCustomEdgeTokenBinders(com.intellij.lang.WhitespacesAndCommentsBinder,com.intellij.lang.WhitespacesAndCommentsBinder):V
com.intellij.lang.SyntaxTreeBuilder$Production
- com.intellij.lang.LighterASTNode
- getEndIndex():I
- getEndOffset():I
- getErrorMessage():java.lang.String
- getStartIndex():I
- getStartOffset():I
- getTokenType():com.intellij.psi.tree.IElementType
- isCollapsed():Z
com.intellij.lang.TokenSeparatorGenerator
- a:generateWhitespaceBetweenTokens(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
c:com.intellij.lang.TreeBackedLighterAST
- com.intellij.lang.LighterAST
- <init>(com.intellij.lang.FileASTNode):V
- getChildren(com.intellij.lang.LighterASTNode):java.util.List
- getParent(com.intellij.lang.LighterASTNode):com.intellij.lang.LighterASTNode
- getRoot():com.intellij.lang.LighterASTNode
- unwrap(com.intellij.lang.LighterASTNode):com.intellij.lang.ASTNode
- s:wrap(com.intellij.lang.ASTNode):com.intellij.lang.LighterASTNode
com.intellij.lang.WhitespaceSkippedCallback
- a:onSkip(com.intellij.psi.tree.IElementType,I,I):V
com.intellij.lang.WhitespacesAndCommentsBinder
- a:getEdgePosition(java.util.List,Z,com.intellij.lang.WhitespacesAndCommentsBinder$TokenTextGetter):I
- isRecursive():Z
com.intellij.lang.WhitespacesAndCommentsBinder$RecursiveBinder
- com.intellij.lang.WhitespacesAndCommentsBinder
com.intellij.lang.WhitespacesAndCommentsBinder$TokenTextGetter
- a:get(I):java.lang.CharSequence
c:com.intellij.lang.folding.CompositeFoldingBuilder
- com.intellij.lang.folding.FoldingBuilderEx
- com.intellij.openapi.project.PossiblyDumbAware
- s:assertSameFile(com.intellij.psi.PsiFile,com.intellij.lang.folding.FoldingDescriptor,com.intellij.psi.PsiElement,com.intellij.lang.folding.FoldingBuilder):V
- buildFoldRegions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,Z):com.intellij.lang.folding.FoldingDescriptor[]
- s:getOriginalBuilder(com.intellij.lang.folding.FoldingDescriptor):com.intellij.lang.folding.FoldingBuilder
- getPlaceholderText(com.intellij.lang.ASTNode):java.lang.String
- getPlaceholderText(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange):java.lang.String
- isCollapsedByDefault(com.intellij.lang.ASTNode):Z
- isCollapsedByDefault(com.intellij.lang.folding.FoldingDescriptor):Z
- isDumbAware():Z
a:com.intellij.lang.folding.CustomFoldingBuilder
- com.intellij.lang.folding.FoldingBuilderEx
- com.intellij.openapi.project.PossiblyDumbAware
- <init>():V
- f:buildFoldRegions(com.intellij.lang.ASTNode,com.intellij.openapi.editor.Document):com.intellij.lang.folding.FoldingDescriptor[]
- f:buildFoldRegions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,Z):com.intellij.lang.folding.FoldingDescriptor[]
- pa:buildLanguageFoldRegions(java.util.List,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,Z):V
- pa:getLanguagePlaceholderText(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange):java.lang.String
- f:getPlaceholderText(com.intellij.lang.ASTNode):java.lang.String
- f:getPlaceholderText(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange):java.lang.String
- f:isCollapsedByDefault(com.intellij.lang.ASTNode):Z
- f:isCollapsedByDefault(com.intellij.lang.folding.FoldingDescriptor):Z
- p:isCustomFoldingCandidate(com.intellij.lang.ASTNode):Z
- f:isCustomFoldingCandidate(com.intellij.psi.PsiElement):Z
- p:isCustomFoldingRoot(com.intellij.lang.ASTNode):Z
- ps:isCustomRegionElement(com.intellij.psi.PsiElement):Z
- pf:isCustomRegionEnd(com.intellij.lang.ASTNode):Z
- f:isCustomRegionStart(com.intellij.lang.ASTNode):Z
- isDumbAware():Z
- pa:isRegionCollapsedByDefault(com.intellij.lang.ASTNode):Z
- p:isRegionCollapsedByDefault(com.intellij.lang.folding.FoldingDescriptor):Z
a:com.intellij.lang.folding.CustomFoldingProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- s:getAllProviders():java.util.List
- a:getDescription():java.lang.String
- a:getEndString():java.lang.String
- a:getPlaceholderText(java.lang.String):java.lang.String
- a:getStartString():java.lang.String
- isCollapsedByDefault(java.lang.String):Z
- a:isCustomRegionEnd(java.lang.String):Z
- a:isCustomRegionStart(java.lang.String):Z
- isSupported(com.intellij.lang.Language):Z
- isSupportedBy(com.intellij.lang.folding.FoldingBuilder):Z
- wrapStartEndMarkerTextInLanguageSpecificComment():Z
com.intellij.lang.folding.FoldingBuilder
- com.intellij.openapi.project.PossiblyDumbAware
- a:buildFoldRegions(com.intellij.lang.ASTNode,com.intellij.openapi.editor.Document):com.intellij.lang.folding.FoldingDescriptor[]
- a:getPlaceholderText(com.intellij.lang.ASTNode):java.lang.String
- a:isCollapsedByDefault(com.intellij.lang.ASTNode):Z
- isCollapsedByDefault(com.intellij.lang.folding.FoldingDescriptor):Z
a:com.intellij.lang.folding.FoldingBuilderEx
- com.intellij.lang.folding.FoldingBuilder
- <init>():V
- buildFoldRegions(com.intellij.lang.ASTNode,com.intellij.openapi.editor.Document):com.intellij.lang.folding.FoldingDescriptor[]
- a:buildFoldRegions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,Z):com.intellij.lang.folding.FoldingDescriptor[]
- getPlaceholderText(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange):java.lang.String
- a:isCollapsedByDefault(com.intellij.lang.ASTNode):Z
c:com.intellij.lang.folding.FoldingDescriptor
- sf:EMPTY:com.intellij.lang.folding.FoldingDescriptor[]
- sf:EMPTY_ARRAY:com.intellij.lang.folding.FoldingDescriptor[]
- <init>(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange):V
- <init>(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.FoldingGroup):V
- <init>(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.FoldingGroup,java.lang.String):V
- <init>(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.FoldingGroup,java.lang.String,java.lang.Boolean,java.util.Set):V
- <init>(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.FoldingGroup,java.util.Set):V
- <init>(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.FoldingGroup,java.util.Set,Z):V
- <init>(com.intellij.lang.ASTNode,com.intellij.openapi.util.TextRange,com.intellij.openapi.editor.FoldingGroup,java.util.Set,Z,java.lang.String,java.lang.Boolean):V
- <init>(com.intellij.psi.PsiElement,I,I,com.intellij.openapi.editor.FoldingGroup,java.lang.String):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):V
- canBeRemovedWhenCollapsed():Z
- getDependencies():java.util.Set
- getElement():com.intellij.lang.ASTNode
- getGroup():com.intellij.openapi.editor.FoldingGroup
- getPlaceholderText():java.lang.String
- getRange():com.intellij.openapi.util.TextRange
- isCollapsedByDefault():java.lang.Boolean
- isGutterMarkEnabledForSingleLine():Z
- isNonExpandable():Z
- setCanBeRemovedWhenCollapsed(Z):V
- setGutterMarkEnabledForSingleLine(Z):V
- setPlaceholderText(java.lang.String):V
f:com.intellij.lang.folding.LanguageFolding
- com.intellij.lang.LanguageExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:INSTANCE:com.intellij.lang.folding.LanguageFolding
- allForLanguage(com.intellij.lang.Language):java.util.List
- s:buildFoldingDescriptors(com.intellij.lang.folding.FoldingBuilder,com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document,Z):com.intellij.lang.folding.FoldingDescriptor[]
- forLanguage(com.intellij.lang.Language):com.intellij.lang.folding.FoldingBuilder
a:com.intellij.lang.injection.InjectedLanguageManager
- sf:FRANKENSTEIN_INJECTION:com.intellij.openapi.util.Key
- <init>():V
- a:dropFileCaches(com.intellij.psi.PsiFile):V
- a:enumerate(com.intellij.psi.PsiElement,com.intellij.psi.PsiLanguageInjectionHost$InjectedPsiVisitor):V
- a:enumerateEx(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile,Z,com.intellij.psi.PsiLanguageInjectionHost$InjectedPsiVisitor):V
- a:findInjectedElementAt(com.intellij.psi.PsiFile,I):com.intellij.psi.PsiElement
- a:freezeWindow(com.intellij.injected.editor.DocumentWindow):com.intellij.injected.editor.DocumentWindow
- a:getCachedInjectedDocumentsInRange(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):java.util.List
- a:getInjectedPsiFiles(com.intellij.psi.PsiElement):java.util.List
- a:getInjectionHost(com.intellij.psi.FileViewProvider):com.intellij.psi.PsiLanguageInjectionHost
- a:getInjectionHost(com.intellij.psi.PsiElement):com.intellij.psi.PsiLanguageInjectionHost
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.lang.injection.InjectedLanguageManager
- a:getNonEditableFragments(com.intellij.injected.editor.DocumentWindow):java.util.List
- a:getTopLevelFile(com.intellij.psi.PsiElement):com.intellij.psi.PsiFile
- a:getUnescapedText(com.intellij.psi.PsiElement):java.lang.String
- hasInjections(com.intellij.psi.PsiElement):Z
- a:injectedToHost(com.intellij.psi.PsiElement,I):I
- a:injectedToHost(com.intellij.psi.PsiElement,I,Z):I
- a:injectedToHost(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):com.intellij.openapi.util.TextRange
- a:intersectWithAllEditableFragments(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):java.util.List
- isInjectedFragment(com.intellij.psi.PsiFile):Z
- a:isInjectedViewProvider(com.intellij.psi.FileViewProvider):Z
- mapInjectedOffsetToUnescaped(com.intellij.psi.PsiFile,I):I
- mapUnescapedOffsetToInjected(com.intellij.psi.PsiFile,I):I
- a:mightHaveInjectedFragmentAtOffset(com.intellij.openapi.editor.Document,I):Z
- a:registerMultiHostInjector(com.intellij.lang.injection.MultiHostInjector,com.intellij.openapi.Disposable):V
com.intellij.lang.injection.MultiHostInjector
- com.intellij.openapi.project.PossiblyDumbAware
- sf:MULTIHOST_INJECTOR_EP_NAME:com.intellij.openapi.extensions.ProjectExtensionPointName
- a:elementsToInjectIn():java.util.List
- a:getLanguagesToInject(com.intellij.lang.injection.MultiHostRegistrar,com.intellij.psi.PsiElement):V
com.intellij.lang.injection.MultiHostRegistrar
- a:addPlace(java.lang.String,java.lang.String,com.intellij.psi.PsiLanguageInjectionHost,com.intellij.openapi.util.TextRange):com.intellij.lang.injection.MultiHostRegistrar
- a:doneInjecting():V
- a:startInjecting(com.intellij.lang.Language):com.intellij.lang.injection.MultiHostRegistrar
- startInjecting(com.intellij.lang.Language,java.lang.String):com.intellij.lang.injection.MultiHostRegistrar
com.intellij.lang.injection.general.Injection
- a:getInjectedLanguage():com.intellij.lang.Language
- a:getInjectedLanguageId():java.lang.String
- a:getPrefix():java.lang.String
- a:getSuffix():java.lang.String
- a:getSupportId():java.lang.String
com.intellij.lang.injection.general.LanguageInjectionContributor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:INJECTOR_EXTENSION:com.intellij.lang.LanguageExtension
- a:getInjection(com.intellij.psi.PsiElement):com.intellij.lang.injection.general.Injection
com.intellij.lang.injection.general.LanguageInjectionPerformer
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- sf:INJECTOR_EXTENSION:com.intellij.lang.LanguageExtension
- a:isPrimary():Z
- a:performInjection(com.intellij.lang.injection.MultiHostRegistrar,com.intellij.lang.injection.general.Injection,com.intellij.psi.PsiElement):Z
c:com.intellij.lang.injection.general.SimpleInjection
- com.intellij.lang.injection.general.Injection
- <init>(com.intellij.lang.Language,java.lang.String,java.lang.String,java.lang.String):V
- getInjectedLanguage():com.intellij.lang.Language
- getInjectedLanguageId():java.lang.String
- getPrefix():java.lang.String
- getSuffix():java.lang.String
- getSupportId():java.lang.String
f:com.intellij.lang.tree.util.AstUtilKt
- sf:children(com.intellij.lang.ASTNode):kotlin.sequences.Sequence
- sf:parents(com.intellij.lang.ASTNode,Z):kotlin.sequences.Sequence
- sf:siblings(com.intellij.lang.ASTNode,Z,Z):kotlin.sequences.Sequence
com.intellij.lexer.DocCommentTokenTypes
- a:badCharacter():com.intellij.psi.tree.IElementType
- a:commentData():com.intellij.psi.tree.IElementType
- a:commentEnd():com.intellij.psi.tree.IElementType
- a:commentLeadingAsterisks():com.intellij.psi.tree.IElementType
- a:commentStart():com.intellij.psi.tree.IElementType
- a:inlineTagEnd():com.intellij.psi.tree.IElementType
- a:inlineTagStart():com.intellij.psi.tree.IElementType
- a:space():com.intellij.psi.tree.IElementType
- a:spaceCommentsTokenSet():com.intellij.psi.tree.TokenSet
- a:tagName():com.intellij.psi.tree.IElementType
- tagValueColon():com.intellij.psi.tree.IElementType
- a:tagValueComma():com.intellij.psi.tree.IElementType
- a:tagValueGT():com.intellij.psi.tree.IElementType
- a:tagValueLParen():com.intellij.psi.tree.IElementType
- a:tagValueLT():com.intellij.psi.tree.IElementType
- tagValueQuote():com.intellij.psi.tree.IElementType
- a:tagValueRParen():com.intellij.psi.tree.IElementType
- a:tagValueSharp():com.intellij.psi.tree.IElementType
- a:tagValueToken():com.intellij.psi.tree.IElementType
c:com.intellij.lexer.DummyLexer
- com.intellij.lexer.LexerBase
- <init>(com.intellij.psi.tree.IElementType):V
- advance():V
- getBufferEnd():I
- getBufferSequence():java.lang.CharSequence
- getCurrentPosition():com.intellij.lexer.LexerPosition
- getState():I
- getTokenEnd():I
- getTokenStart():I
- getTokenType():com.intellij.psi.tree.IElementType
- restore(com.intellij.lexer.LexerPosition):V
- start(java.lang.CharSequence,I,I,I):V
c:com.intellij.lexer.EmptyLexer
- com.intellij.lexer.DummyLexer
- <init>():V
a:com.intellij.lexer.Lexer
- <init>():V
- a:advance():V
- a:getBufferEnd():I
- a:getBufferSequence():java.lang.CharSequence
- a:getCurrentPosition():com.intellij.lexer.LexerPosition
- a:getState():I
- a:getTokenEnd():I
- getTokenSequence():java.lang.CharSequence
- a:getTokenStart():I
- getTokenText():java.lang.String
- a:getTokenType():com.intellij.psi.tree.IElementType
- a:restore(com.intellij.lexer.LexerPosition):V
- f:start(java.lang.CharSequence):V
- f:start(java.lang.CharSequence,I,I):V
- a:start(java.lang.CharSequence,I,I,I):V
a:com.intellij.lexer.LexerBase
- com.intellij.lexer.Lexer
- <init>():V
- getCurrentPosition():com.intellij.lexer.LexerPosition
- restore(com.intellij.lexer.LexerPosition):V
com.intellij.lexer.LexerPosition
- a:getOffset():I
- a:getState():I
com.intellij.lexer.MergeFunction
- a:merge(com.intellij.psi.tree.IElementType,com.intellij.lexer.Lexer):com.intellij.psi.tree.IElementType
com.intellij.lexer.RestartableLexer
- a:getStartState():I
com.intellij.model.search.SearchRequest
- s:of(java.lang.String):com.intellij.model.search.SearchRequest
- s:of(java.lang.String,com.intellij.psi.search.SearchScope):com.intellij.model.search.SearchRequest
- s:of(java.lang.String,com.intellij.psi.search.SearchScope,com.intellij.psi.search.SearchScope):com.intellij.model.search.SearchRequest
com.intellij.navigation.ColoredItemPresentation
- com.intellij.navigation.ItemPresentation
- a:getTextAttributesKey():com.intellij.openapi.editor.colors.TextAttributesKey
f:com.intellij.navigation.EmptyNavigatable
- com.intellij.pom.Navigatable
- sf:INSTANCE:com.intellij.pom.Navigatable
com.intellij.navigation.ItemPresentation
- a:getIcon(Z):javax.swing.Icon
- getLocationString():java.lang.String
- a:getPresentableText():java.lang.String
com.intellij.navigation.ItemPresentationProvider
- a:getPresentation(com.intellij.navigation.NavigationItem):com.intellij.navigation.ItemPresentation
f:com.intellij.navigation.ItemPresentationProviders
- com.intellij.openapi.util.ClassExtension
- sf:INSTANCE:com.intellij.navigation.ItemPresentationProviders
- s:getItemPresentation(com.intellij.navigation.NavigationItem):com.intellij.navigation.ItemPresentation
com.intellij.navigation.ItemPresentationWithSeparator
- com.intellij.navigation.ItemPresentation
com.intellij.navigation.LocationPresentation
- sf:DEFAULT_LOCATION_PREFIX:java.lang.String
- sf:DEFAULT_LOCATION_SUFFIX:java.lang.String
- a:getLocationPrefix():java.lang.String
- a:getLocationSuffix():java.lang.String
com.intellij.navigation.NavigationItem
- com.intellij.pom.Navigatable
- sf:EMPTY_NAVIGATION_ITEM_ARRAY:com.intellij.navigation.NavigationItem[]
- a:getName():java.lang.String
- a:getPresentation():com.intellij.navigation.ItemPresentation
com.intellij.navigation.PsiElementNavigationItem
- com.intellij.navigation.NavigationItem
- a:getTargetElement():com.intellij.psi.PsiElement
f:com.intellij.openapi.application.ActionsKt
- sf:invokeLater(com.intellij.openapi.application.ModalityState,kotlin.jvm.functions.Function0):V
- bs:invokeLater$default(com.intellij.openapi.application.ModalityState,kotlin.jvm.functions.Function0,I,java.lang.Object):V
- sf:runInEdt(com.intellij.openapi.application.ModalityState,kotlin.jvm.functions.Function0):V
- bs:runInEdt$default(com.intellij.openapi.application.ModalityState,kotlin.jvm.functions.Function0,I,java.lang.Object):V
- sf:runReadAction(kotlin.jvm.functions.Function0):java.lang.Object
- sf:runUndoTransparentWriteAction(kotlin.jvm.functions.Function0):java.lang.Object
- sf:runWriteAction(kotlin.jvm.functions.Function0):java.lang.Object
com.intellij.openapi.application.AppUIExecutor
- com.intellij.openapi.application.BaseExpirableExecutor
- a:inSmartMode(com.intellij.openapi.project.Project):com.intellij.openapi.application.AppUIExecutor
- a:later():com.intellij.openapi.application.AppUIExecutor
- s:onUiThread():com.intellij.openapi.application.AppUIExecutor
- s:onUiThread(com.intellij.openapi.application.ModalityState):com.intellij.openapi.application.AppUIExecutor
- s:onWriteThread():com.intellij.openapi.application.AppUIExecutor
- s:onWriteThread(com.intellij.openapi.application.ModalityState):com.intellij.openapi.application.AppUIExecutor
- a:withDocumentsCommitted(com.intellij.openapi.project.Project):com.intellij.openapi.application.AppUIExecutor
com.intellij.openapi.application.Application
- com.intellij.openapi.components.ComponentManager
- a:acquireReadActionLock():com.intellij.openapi.application.AccessToken
- a:acquireWriteActionLock(java.lang.Class):com.intellij.openapi.application.AccessToken
- a:addApplicationListener(com.intellij.openapi.application.ApplicationListener):V
- a:addApplicationListener(com.intellij.openapi.application.ApplicationListener,com.intellij.openapi.Disposable):V
- a:assertIsDispatchThread():V
- a:assertReadAccessAllowed():V
- a:assertWriteAccessAllowed():V
- a:executeOnPooledThread(java.lang.Runnable):java.util.concurrent.Future
- a:executeOnPooledThread(java.util.concurrent.Callable):java.util.concurrent.Future
- a:exit():V
- exit(Z,Z,Z):V
- exit(Z,Z,Z,I):V
- a:getDefaultModalityState():com.intellij.openapi.application.ModalityState
- a:getIdleTime():J
- a:getModalityStateForComponent(java.awt.Component):com.intellij.openapi.application.ModalityState
- a:getStartTime():J
- a:hasWriteAction(java.lang.Class):Z
- a:holdsReadLock():Z
- a:invokeAndWait(java.lang.Runnable):V
- a:invokeAndWait(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- a:invokeLater(java.lang.Runnable):V
- a:invokeLater(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- a:invokeLater(java.lang.Runnable,com.intellij.openapi.application.ModalityState,com.intellij.openapi.util.Condition):V
- a:invokeLater(java.lang.Runnable,com.intellij.openapi.util.Condition):V
- invokeLaterOnWriteThread(java.lang.Runnable):V
- invokeLaterOnWriteThread(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- invokeLaterOnWriteThread(java.lang.Runnable,com.intellij.openapi.application.ModalityState,com.intellij.openapi.util.Condition):V
- a:isActive():Z
- a:isCommandLine():Z
- a:isDispatchThread():Z
- isDisposeInProgress():Z
- a:isEAP():Z
- a:isHeadlessEnvironment():Z
- a:isInternal():Z
- a:isReadAccessAllowed():Z
- a:isRestartCapable():Z
- a:isUnitTestMode():Z
- a:isWriteAccessAllowed():Z
- a:removeApplicationListener(com.intellij.openapi.application.ApplicationListener):V
- a:restart():V
- a:runReadAction(com.intellij.openapi.util.Computable):java.lang.Object
- a:runReadAction(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- a:runReadAction(java.lang.Runnable):V
- a:runWriteAction(com.intellij.openapi.util.Computable):java.lang.Object
- a:runWriteAction(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- a:runWriteAction(java.lang.Runnable):V
- a:saveSettings():V
a:com.intellij.openapi.application.ApplicationAdapter
- com.intellij.openapi.application.ApplicationListener
- <init>():V
a:com.intellij.openapi.application.ApplicationInfo
- <init>():V
- s:contextHelpAvailable():Z
- a:getApiVersion():java.lang.String
- a:getBuild():com.intellij.openapi.util.BuildNumber
- a:getBuildDate():java.util.Calendar
- a:getCompanyName():java.lang.String
- a:getCompanyURL():java.lang.String
- a:getFullApplicationName():java.lang.String
- a:getFullVersion():java.lang.String
- s:getInstance():com.intellij.openapi.application.ApplicationInfo
- a:getJetBrainsTvUrl():java.lang.String
- a:getMajorVersion():java.lang.String
- a:getMicroVersion():java.lang.String
- a:getMinorVersion():java.lang.String
- f:getMinorVersionMainPart():java.lang.String
- a:getPatchVersion():java.lang.String
- a:getProductUrl():java.lang.String
- a:getShortCompanyName():java.lang.String
- f:getShortVersion():java.lang.String
- getSplashImageUrl():java.lang.String
- a:getStrictVersion():java.lang.String
- a:getVersionName():java.lang.String
- a:hasContextHelp():Z
- a:hasHelp():Z
- s:helpAvailable():Z
- isEAP():Z
com.intellij.openapi.application.ApplicationListener
- java.util.EventListener
- afterWriteActionFinished(java.lang.Object):V
- applicationExiting():V
- beforeWriteActionStart(java.lang.Object):V
- canExitApplication():Z
- canRestartApplication():Z
- writeActionFinished(java.lang.Object):V
- writeActionStarted(java.lang.Object):V
c:com.intellij.openapi.application.ApplicationManager
- <init>():V
- s:getApplication():com.intellij.openapi.application.Application
- s:setApplication(com.intellij.openapi.application.Application,com.intellij.openapi.Disposable):V
- s:setApplication(com.intellij.openapi.application.Application,java.util.function.Supplier,com.intellij.openapi.Disposable):V
f:com.intellij.openapi.application.ApplicationNamesInfo
- getEditionName():java.lang.String
- getFullProductName():java.lang.String
- getFullProductNameWithEdition():java.lang.String
- s:getInstance():com.intellij.openapi.application.ApplicationNamesInfo
- getLowercaseProductName():java.lang.String
- getMotto():java.lang.String
- getProductName():java.lang.String
- getScriptName():java.lang.String
a:com.intellij.openapi.application.BaseActionRunnable
- <init>():V
- a:execute():com.intellij.openapi.application.RunResult
- pa:run(com.intellij.openapi.application.Result):V
com.intellij.openapi.application.BaseExpirableExecutor
- a:execute(java.lang.Runnable):V
- a:expireWith(com.intellij.openapi.Disposable):com.intellij.openapi.application.BaseExpirableExecutor
- a:submit(java.lang.Runnable):org.jetbrains.concurrency.CancellablePromise
- a:submit(java.util.concurrent.Callable):org.jetbrains.concurrency.CancellablePromise
f:com.intellij.openapi.application.CoroutinesKt
- bsf:asContextElement(com.intellij.openapi.application.ModalityState):kotlin.coroutines.CoroutineContext
- sf:constrainedReadAction(com.intellij.openapi.application.ReadConstraint[],kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation):java.lang.Object
- sf:constrainedReadActionBlocking(com.intellij.openapi.application.ReadConstraint[],kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation):java.lang.Object
- sf:constrainedReadAndWriteAction(com.intellij.openapi.application.ReadConstraint[],kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- sf:edtWriteAction(kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation):java.lang.Object
- sf:getEDT(kotlinx.coroutines.Dispatchers):kotlin.coroutines.CoroutineContext
- sf:readAction(kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation):java.lang.Object
- sf:readActionBlocking(kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation):java.lang.Object
- sf:readAndWriteAction(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):java.lang.Object
- sf:smartReadAction(com.intellij.openapi.project.Project,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation):java.lang.Object
- sf:smartReadActionBlocking(com.intellij.openapi.project.Project,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation):java.lang.Object
com.intellij.openapi.application.DumbAwareSearchParameters
- com.intellij.util.QueryParameters
- a:getProject():com.intellij.openapi.project.Project
e:com.intellij.openapi.application.EdtReplacementThread
- java.lang.Enum
- sf:EDT:com.intellij.openapi.application.EdtReplacementThread
- sf:EDT_WITH_IW:com.intellij.openapi.application.EdtReplacementThread
- sf:WT:com.intellij.openapi.application.EdtReplacementThread
- s:valueOf(java.lang.String):com.intellij.openapi.application.EdtReplacementThread
- s:values():com.intellij.openapi.application.EdtReplacementThread[]
com.intellij.openapi.application.ExpirableExecutor
- com.intellij.openapi.application.BaseExpirableExecutor
- s:on(java.util.concurrent.Executor):com.intellij.openapi.application.ExpirableExecutor
c:com.intellij.openapi.application.IdeUrlTrackingParametersProvider
- <init>():V
- augmentUrl(java.lang.String):java.lang.String
- augmentUrl(java.lang.String,java.lang.String):java.lang.String
- s:getInstance():com.intellij.openapi.application.IdeUrlTrackingParametersProvider
com.intellij.openapi.application.ModalityInvokator
- a:invokeLater(java.lang.Runnable):com.intellij.openapi.util.ActionCallback
- a:invokeLater(java.lang.Runnable,com.intellij.openapi.application.ModalityState):com.intellij.openapi.util.ActionCallback
- a:invokeLater(java.lang.Runnable,com.intellij.openapi.application.ModalityState,com.intellij.openapi.util.Condition):com.intellij.openapi.util.ActionCallback
- a:invokeLater(java.lang.Runnable,com.intellij.openapi.util.Condition):com.intellij.openapi.util.ActionCallback
f:com.intellij.openapi.application.ModalityKt
- sf:asContextElement(com.intellij.openapi.application.ModalityState):kotlin.coroutines.CoroutineContext
- sf:isModalAwareContext(kotlin.coroutines.Continuation):java.lang.Object
a:com.intellij.openapi.application.ModalityState
- sf:NON_MODAL:com.intellij.openapi.application.ModalityState
- <init>():V
- a:accepts(com.intellij.openapi.application.ModalityState):Z
- s:any():com.intellij.openapi.application.ModalityState
- s:current():com.intellij.openapi.application.ModalityState
- s:defaultModalityState():com.intellij.openapi.application.ModalityState
- f:dominates(com.intellij.openapi.application.ModalityState):Z
- s:nonModal():com.intellij.openapi.application.ModalityState
- s:stateForComponent(java.awt.Component):com.intellij.openapi.application.ModalityState
- a:toString():java.lang.String
com.intellij.openapi.application.ModalityStateListener
- java.util.EventListener
- beforeModalityStateChanged(Z,java.lang.Object):V
com.intellij.openapi.application.NonBlockingReadAction
- a:coalesceBy(java.lang.Object[]):com.intellij.openapi.application.NonBlockingReadAction
- a:executeSynchronously():java.lang.Object
- a:expireWhen(java.util.function.BooleanSupplier):com.intellij.openapi.application.NonBlockingReadAction
- a:expireWith(com.intellij.openapi.Disposable):com.intellij.openapi.application.NonBlockingReadAction
- a:finishOnUiThread(com.intellij.openapi.application.ModalityState,java.util.function.Consumer):com.intellij.openapi.application.NonBlockingReadAction
- a:inSmartMode(com.intellij.openapi.project.Project):com.intellij.openapi.application.NonBlockingReadAction
- a:submit(java.util.concurrent.Executor):org.jetbrains.concurrency.CancellablePromise
- a:withDocumentsCommitted(com.intellij.openapi.project.Project):com.intellij.openapi.application.NonBlockingReadAction
- a:wrapProgress(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.application.NonBlockingReadAction
com.intellij.openapi.application.PathMacroContributor
- forceRegisterPathMacros(java.util.Map):V
- a:registerPathMacros(java.util.Map,java.util.Map):V
a:com.intellij.openapi.application.PathMacros
- <init>():V
- a:addIgnoredMacro(java.util.List):V
- a:getAllMacroNames():java.util.Set
- a:getIgnoredMacroNames():java.util.Collection
- s:getInstance():com.intellij.openapi.application.PathMacros
- a:getLegacyMacroNames():java.util.Collection
- a:getSystemMacroNames():java.util.Set
- a:getUserMacroNames():java.util.Set
- a:getUserMacros():java.util.Map
- a:getValue(java.lang.String):java.lang.String
- a:isIgnoredMacroName(java.lang.String):Z
- a:removeAllMacros():V
- a:setIgnoredMacroNames(java.util.Collection):V
a:com.intellij.openapi.application.QueryExecutorBase
- com.intellij.util.QueryExecutor
- p:<init>():V
- p:<init>(Z):V
- f:execute(java.lang.Object,com.intellij.util.Processor):Z
- a:processQuery(java.lang.Object,com.intellij.util.Processor):V
a:com.intellij.openapi.application.ReadAction
- com.intellij.openapi.application.BaseActionRunnable
- <init>():V
- s:compute(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- execute():com.intellij.openapi.application.RunResult
- s:nonBlocking(java.lang.Runnable):com.intellij.openapi.application.NonBlockingReadAction
- s:nonBlocking(java.util.concurrent.Callable):com.intellij.openapi.application.NonBlockingReadAction
- pa:run(com.intellij.openapi.application.Result):V
- s:run(com.intellij.util.ThrowableRunnable):V
f:com.intellij.openapi.application.ReadAction$CannotReadException
- com.intellij.openapi.progress.ProcessCanceledException
com.intellij.openapi.application.ReadActionListener
- java.util.EventListener
- afterReadActionFinished(java.lang.Class):V
- beforeReadActionStart(java.lang.Class):V
- readActionFinished(java.lang.Class):V
- readActionStarted(java.lang.Class):V
a:com.intellij.openapi.application.ReadActionProcessor
- com.intellij.util.Processor
- <init>():V
- process(java.lang.Object):Z
- a:processInReadAction(java.lang.Object):Z
- s:wrapInReadAction(com.intellij.util.Processor):com.intellij.util.Processor
com.intellij.openapi.application.ReadAndWriteScope
- a:value(java.lang.Object):com.intellij.openapi.application.ReadResult
- a:writeAction(kotlin.jvm.functions.Function0):com.intellij.openapi.application.ReadResult
com.intellij.openapi.application.ReadConstraint
- sf:Companion:com.intellij.openapi.application.ReadConstraint$Companion
- a:awaitConstraint(kotlin.coroutines.Continuation):java.lang.Object
- a:isSatisfied():Z
f:com.intellij.openapi.application.ReadConstraint$Companion
- f:inSmartMode(com.intellij.openapi.project.Project):com.intellij.openapi.application.ReadConstraint
- f:withDocumentsCommitted(com.intellij.openapi.project.Project):com.intellij.openapi.application.ReadConstraint
com.intellij.openapi.application.ReadResult
- s:value(java.lang.Object):com.intellij.openapi.application.ReadResult
- s:writeAction(kotlin.jvm.functions.Function0):com.intellij.openapi.application.ReadResult
c:com.intellij.openapi.application.Result
- p:myResult:java.lang.Object
- <init>():V
- f:setResult(java.lang.Object):V
f:com.intellij.openapi.application.RunResult
- com.intellij.openapi.application.Result
- <init>(com.intellij.openapi.application.BaseActionRunnable):V
- getResultObject():java.lang.Object
- getThrowable():java.lang.Throwable
- hasException():Z
- logException(com.intellij.openapi.diagnostic.Logger):com.intellij.openapi.application.RunResult
- run():com.intellij.openapi.application.RunResult
- setThrowable(java.lang.Exception):V
- throwException():com.intellij.openapi.application.RunResult
a:com.intellij.openapi.application.TransactionGuard
- <init>():V
- a:assertWriteSafeContext(com.intellij.openapi.application.ModalityState):V
- a:getContextTransaction():com.intellij.openapi.application.TransactionId
- s:getInstance():com.intellij.openapi.application.TransactionGuard
- a:isWriteSafeModality(com.intellij.openapi.application.ModalityState):Z
- a:isWritingAllowed():Z
- a:submitTransaction(com.intellij.openapi.Disposable,com.intellij.openapi.application.TransactionId,java.lang.Runnable):V
- s:submitTransaction(com.intellij.openapi.Disposable,java.lang.Runnable):V
- a:submitTransactionAndWait(java.lang.Runnable):V
- a:submitTransactionLater(com.intellij.openapi.Disposable,java.lang.Runnable):V
com.intellij.openapi.application.TransactionId
a:com.intellij.openapi.application.WriteAction
- com.intellij.openapi.application.BaseActionRunnable
- <init>():V
- s:compute(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- s:computeAndWait(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- s:computeAndWait(com.intellij.openapi.util.ThrowableComputable,com.intellij.openapi.application.ModalityState):java.lang.Object
- execute():com.intellij.openapi.application.RunResult
- pa:run(com.intellij.openapi.application.Result):V
- s:run(com.intellij.util.ThrowableRunnable):V
- s:runAndWait(com.intellij.util.ThrowableRunnable):V
- s:start():com.intellij.openapi.application.AccessToken
com.intellij.openapi.application.WriteActionListener
- java.util.EventListener
- afterWriteActionFinished(java.lang.Class):V
- beforeWriteActionStart(java.lang.Class):V
- writeActionFinished(java.lang.Class):V
- writeActionStarted(java.lang.Class):V
com.intellij.openapi.application.WriteIntentReadActionListener
- java.util.EventListener
- afterWriteIntentReadActionFinished(java.lang.Class):V
- beforeWriteIntentReadActionStart(java.lang.Class):V
- writeIntentReadActionFinished(java.lang.Class):V
- writeIntentReadActionStarted(java.lang.Class):V
f:com.intellij.openapi.client.ClientSessionsUtil
- sf:forEachSession(com.intellij.openapi.application.Application,com.intellij.openapi.client.ClientKind,kotlin.jvm.functions.Function1):V
- sf:forEachSession(com.intellij.openapi.project.Project,com.intellij.openapi.client.ClientKind,kotlin.jvm.functions.Function1):V
- sf:forEachSessionSuspending(com.intellij.openapi.application.Application,com.intellij.openapi.client.ClientKind,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- sf:forEachSessionSuspending(com.intellij.openapi.project.Project,com.intellij.openapi.client.ClientKind,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
f:com.intellij.openapi.command.ActionsKt
- sf:executeCommand(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,kotlin.jvm.functions.Function0):V
- bs:executeCommand$default(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,I,java.lang.Object):V
c:com.intellij.openapi.command.CommandEvent
- java.util.EventObject
- <init>(com.intellij.openapi.command.CommandProcessor,java.lang.Runnable,com.intellij.openapi.project.Project,com.intellij.openapi.command.UndoConfirmationPolicy):V
- <init>(com.intellij.openapi.command.CommandProcessor,java.lang.Runnable,java.lang.String,java.lang.Object,com.intellij.openapi.project.Project,com.intellij.openapi.command.UndoConfirmationPolicy,Z,com.intellij.openapi.editor.Document):V
- getCommand():java.lang.Runnable
- getCommandGroupId():java.lang.Object
- getCommandName():java.lang.String
- getCommandProcessor():com.intellij.openapi.command.CommandProcessor
- getDocument():com.intellij.openapi.editor.Document
- getProject():com.intellij.openapi.project.Project
- getUndoConfirmationPolicy():com.intellij.openapi.command.UndoConfirmationPolicy
- shouldRecordActionForOriginalDocument():Z
com.intellij.openapi.command.CommandListener
- java.util.EventListener
- sf:TOPIC:com.intellij.util.messages.Topic
- beforeCommandFinished(com.intellij.openapi.command.CommandEvent):V
- beforeUndoTransparentActionFinished():V
- commandFinished(com.intellij.openapi.command.CommandEvent):V
- commandStarted(com.intellij.openapi.command.CommandEvent):V
- undoTransparentActionFinished():V
- undoTransparentActionStarted():V
a:com.intellij.openapi.command.CommandProcessor
- <init>():V
- a:addAffectedDocuments(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document[]):V
- a:addAffectedFiles(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile[]):V
- a:addCommandListener(com.intellij.openapi.command.CommandListener):V
- a:executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object):V
- a:executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object,com.intellij.openapi.command.UndoConfirmationPolicy):V
- a:executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object,com.intellij.openapi.command.UndoConfirmationPolicy,com.intellij.openapi.editor.Document):V
- a:executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object,com.intellij.openapi.command.UndoConfirmationPolicy,Z):V
- a:executeCommand(com.intellij.openapi.project.Project,java.lang.Runnable,java.lang.String,java.lang.Object,com.intellij.openapi.editor.Document):V
- a:getCurrentCommand():java.lang.Runnable
- a:getCurrentCommandGroupId():java.lang.Object
- a:getCurrentCommandName():java.lang.String
- a:getCurrentCommandProject():com.intellij.openapi.project.Project
- s:getInstance():com.intellij.openapi.command.CommandProcessor
- a:isUndoTransparentActionInProgress():Z
- a:markCurrentCommandAsGlobal(com.intellij.openapi.project.Project):V
- a:runUndoTransparentAction(java.lang.Runnable):V
- a:setCurrentCommandGroupId(java.lang.Object):V
- a:setCurrentCommandName(java.lang.String):V
f:com.intellij.openapi.command.CoroutinesKt
e:com.intellij.openapi.command.UndoConfirmationPolicy
- java.lang.Enum
- sf:DEFAULT:com.intellij.openapi.command.UndoConfirmationPolicy
- sf:DO_NOT_REQUEST_CONFIRMATION:com.intellij.openapi.command.UndoConfirmationPolicy
- sf:REQUEST_CONFIRMATION:com.intellij.openapi.command.UndoConfirmationPolicy
- s:valueOf(java.lang.String):com.intellij.openapi.command.UndoConfirmationPolicy
- s:values():com.intellij.openapi.command.UndoConfirmationPolicy[]
a:com.intellij.openapi.command.WriteCommandAction
- com.intellij.openapi.application.BaseActionRunnable
- p:<init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.psi.PsiFile[]):V
- p:<init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.psi.PsiFile[]):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[]):V
- execute():com.intellij.openapi.application.RunResult
- f:getCommandName():java.lang.String
- getGroupID():java.lang.String
- f:getProject():com.intellij.openapi.project.Project
- p:isGlobalUndoAction():Z
- s:runWriteCommandAction(com.intellij.openapi.project.Project,com.intellij.openapi.util.Computable):java.lang.Object
- s:runWriteCommandAction(com.intellij.openapi.project.Project,com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- s:runWriteCommandAction(com.intellij.openapi.project.Project,java.lang.Runnable):V
- s:runWriteCommandAction(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,java.lang.Runnable,com.intellij.psi.PsiFile[]):V
- s:writeCommandAction(com.intellij.openapi.project.Project):com.intellij.openapi.command.WriteCommandAction$Builder
- s:writeCommandAction(com.intellij.openapi.project.Project,java.util.Collection):com.intellij.openapi.command.WriteCommandAction$Builder
- s:writeCommandAction(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[]):com.intellij.openapi.command.WriteCommandAction$Builder
- s:writeCommandAction(com.intellij.psi.PsiFile,com.intellij.psi.PsiFile[]):com.intellij.openapi.command.WriteCommandAction$Builder
com.intellij.openapi.command.WriteCommandAction$Builder
- a:compute(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- a:run(com.intellij.util.ThrowableRunnable):V
- a:shouldRecordActionForActiveDocument(Z):com.intellij.openapi.command.WriteCommandAction$Builder
- a:withGlobalUndo():com.intellij.openapi.command.WriteCommandAction$Builder
- a:withGroupId(java.lang.String):com.intellij.openapi.command.WriteCommandAction$Builder
- a:withName(java.lang.String):com.intellij.openapi.command.WriteCommandAction$Builder
- a:withUndoConfirmationPolicy(com.intellij.openapi.command.UndoConfirmationPolicy):com.intellij.openapi.command.WriteCommandAction$Builder
a:com.intellij.openapi.command.WriteCommandAction$Simple
- com.intellij.openapi.command.WriteCommandAction
- p:<init>(com.intellij.openapi.project.Project,java.lang.String,java.lang.String,com.intellij.psi.PsiFile[]):V
- p:<init>(com.intellij.openapi.project.Project,java.lang.String,com.intellij.psi.PsiFile[]):V
- p:<init>(com.intellij.openapi.project.Project,com.intellij.psi.PsiFile[]):V
- pa:run():V
- p:run(com.intellij.openapi.application.Result):V
com.intellij.openapi.command.undo.UndoConstants
- sf:DONT_RECORD_UNDO:com.intellij.openapi.util.Key
- sf:FORCE_RECORD_UNDO:com.intellij.openapi.util.Key
f:com.intellij.openapi.command.undo.UndoUtil
- s:disableUndoFor(com.intellij.openapi.editor.Document):V
- s:disableUndoFor(com.intellij.openapi.vfs.VirtualFile):V
- s:disableUndoIn(com.intellij.openapi.editor.Document,java.lang.Runnable):V
- s:enableUndoFor(com.intellij.openapi.editor.Document):V
- s:forceUndoIn(com.intellij.openapi.vfs.VirtualFile,java.lang.Runnable):V
- s:isForceUndoFlagSet(com.intellij.openapi.vfs.VirtualFile):Z
- s:isUndoDisabledFor(com.intellij.openapi.editor.Document):Z
- s:isUndoDisabledFor(com.intellij.openapi.vfs.VirtualFile):Z
- s:markPsiFileForUndo(com.intellij.psi.PsiFile):V
- s:setForceUndoFlag(com.intellij.openapi.vfs.VirtualFile,Z):V
com.intellij.openapi.components.ApplicationComponent
- com.intellij.openapi.components.BaseComponent
c:com.intellij.openapi.components.ApplicationComponent$Adapter
- com.intellij.openapi.components.ApplicationComponent
- <init>():V
com.intellij.openapi.components.ExportableApplicationComponent
- com.intellij.openapi.components.ApplicationComponent
- com.intellij.openapi.components.ExportableComponent
com.intellij.openapi.components.ExportableComponent
- sf:EXTENSION_POINT:com.intellij.openapi.extensions.ExtensionPointName
- a:getExportFiles():java.io.File[]
- a:getPresentableName():java.lang.String
f:com.intellij.openapi.components.ExtensionAreas
- sf:IDEA_MODULE:java.lang.String
- sf:IDEA_PROJECT:java.lang.String
- <init>():V
com.intellij.openapi.components.ProjectComponent
- com.intellij.openapi.components.BaseComponent
- projectClosed():V
- projectOpened():V
e:com.intellij.openapi.components.RoamingType
- java.lang.Enum
- sf:DEFAULT:com.intellij.openapi.components.RoamingType
- sf:DISABLED:com.intellij.openapi.components.RoamingType
- sf:LOCAL:com.intellij.openapi.components.RoamingType
- sf:PER_OS:com.intellij.openapi.components.RoamingType
- canBeMigrated():Z
- isOsSpecific():Z
- isRoamable():Z
- s:valueOf(java.lang.String):com.intellij.openapi.components.RoamingType
- s:values():com.intellij.openapi.components.RoamingType[]
@:com.intellij.openapi.components.Service
- java.lang.annotation.Annotation
- a:value():com.intellij.openapi.components.Service$Level[]
e:com.intellij.openapi.components.Service$Level
- java.lang.Enum
- sf:APP:com.intellij.openapi.components.Service$Level
- sf:PROJECT:com.intellij.openapi.components.Service$Level
- s:valueOf(java.lang.String):com.intellij.openapi.components.Service$Level
- s:values():com.intellij.openapi.components.Service$Level[]
f:com.intellij.openapi.components.ServiceBean
- com.intellij.openapi.extensions.PluginAware
- serviceInterface:java.lang.String
- <init>():V
- getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- s:loadServicesFromBeans(com.intellij.openapi.extensions.ExtensionPointName,java.lang.Class):java.util.List
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
f:com.intellij.openapi.components.ServiceDescriptor
- f:client:com.intellij.openapi.client.ClientKind
- f:headlessImplementation:java.lang.String
- f:os:com.intellij.openapi.extensions.ExtensionDescriptor$Os
- f:overrides:Z
- f:serviceImplementation:java.lang.String
- f:serviceInterface:java.lang.String
- f:testServiceImplementation:java.lang.String
f:com.intellij.openapi.components.ServiceManager
- s:createLazyKey(java.lang.Class):com.intellij.openapi.util.NotNullLazyKey
- s:getService(com.intellij.openapi.project.Project,java.lang.Class):java.lang.Object
- s:getService(java.lang.Class):java.lang.Object
- s:getServiceIfCreated(com.intellij.openapi.project.Project,java.lang.Class):java.lang.Object
f:com.intellij.openapi.components.ServicesKt
- sf:serviceNotFoundError(com.intellij.openapi.components.ComponentManager,java.lang.Class):java.lang.IllegalStateException
f:com.intellij.openapi.editor.CharacterSequences
- sf:codePointAt(java.lang.CharSequence,I):I
com.intellij.openapi.editor.Document
- com.intellij.openapi.util.UserDataHolder
- sf:EMPTY_ARRAY:com.intellij.openapi.editor.Document[]
- sf:PROP_WRITABLE:java.lang.String
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- addDocumentListener(com.intellij.openapi.editor.event.DocumentListener,com.intellij.openapi.Disposable):V
- addPropertyChangeListener(java.beans.PropertyChangeListener):V
- a:createGuardedBlock(I,I):com.intellij.openapi.editor.RangeMarker
- createRangeMarker(I,I):com.intellij.openapi.editor.RangeMarker
- a:createRangeMarker(I,I,Z):com.intellij.openapi.editor.RangeMarker
- createRangeMarker(com.intellij.openapi.util.TextRange):com.intellij.openapi.editor.RangeMarker
- a:deleteString(I,I):V
- fireReadOnlyModificationAttempt():V
- getChars():C[]
- getCharsSequence():java.lang.CharSequence
- a:getImmutableCharSequence():java.lang.CharSequence
- a:getLineCount():I
- a:getLineEndOffset(I):I
- a:getLineNumber(I):I
- getLineSeparatorLength(I):I
- a:getLineStartOffset(I):I
- a:getModificationStamp():J
- getOffsetGuard(I):com.intellij.openapi.editor.RangeMarker
- getRangeGuard(I,I):com.intellij.openapi.editor.RangeMarker
- getText():java.lang.String
- getText(com.intellij.openapi.util.TextRange):java.lang.String
- getTextLength():I
- a:insertString(I,java.lang.CharSequence):V
- isInBulkUpdate():Z
- isLineModified(I):Z
- a:isWritable():Z
- removeDocumentListener(com.intellij.openapi.editor.event.DocumentListener):V
- removeGuardedBlock(com.intellij.openapi.editor.RangeMarker):V
- removePropertyChangeListener(java.beans.PropertyChangeListener):V
- a:replaceString(I,I,java.lang.CharSequence):V
- setCyclicBufferSize(I):V
- setInBulkUpdate(Z):V
- setReadOnly(Z):V
- a:setText(java.lang.CharSequence):V
- startGuardedBlockChecking():V
- stopGuardedBlockChecking():V
a:com.intellij.openapi.editor.DocumentRunnable
- java.lang.Runnable
- <init>(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):V
- getDocument():com.intellij.openapi.editor.Document
- getProject():com.intellij.openapi.project.Project
f:com.intellij.openapi.editor.FoldingGroup
- equals(java.lang.Object):Z
- hashCode():I
- s:newGroup(java.lang.String):com.intellij.openapi.editor.FoldingGroup
com.intellij.openapi.editor.RangeMarker
- com.intellij.openapi.util.Segment
- com.intellij.openapi.util.UserDataHolder
- sf:BY_START_OFFSET:java.util.Comparator
- a:dispose():V
- a:getDocument():com.intellij.openapi.editor.Document
- a:getEndOffset():I
- a:getStartOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- a:isGreedyToLeft():Z
- a:isGreedyToRight():Z
- a:isValid():Z
- a:setGreedyToLeft(Z):V
- a:setGreedyToRight(Z):V
f:com.intellij.openapi.editor.RangeMarkersKt
- sf:getAsTextRange(com.intellij.openapi.editor.RangeMarker):com.intellij.openapi.util.TextRange
c:com.intellij.openapi.editor.ReadOnlyFragmentModificationException
- java.lang.RuntimeException
- sf:MESSAGE:java.lang.String
- <init>(com.intellij.openapi.editor.event.DocumentEvent,com.intellij.openapi.editor.RangeMarker):V
- getGuardedBlock():com.intellij.openapi.editor.RangeMarker
- getIllegalAttemptEvent():com.intellij.openapi.editor.event.DocumentEvent
f:com.intellij.openapi.editor.ReadOnlyModificationException
- java.lang.RuntimeException
- <init>(com.intellij.openapi.editor.Document,java.lang.String):V
- getDocument():com.intellij.openapi.editor.Document
a:com.intellij.openapi.editor.SmartStripTrailingSpacesFilter
- com.intellij.openapi.editor.StripTrailingSpacesFilter
- <init>():V
- a:getTrailingSpacesToLeave(I):I
- f:isStripSpacesAllowedForLine(I):Z
com.intellij.openapi.editor.StripTrailingSpacesFilter
- sf:ALL_LINES:com.intellij.openapi.editor.StripTrailingSpacesFilter
- sf:ENFORCED_REMOVAL:com.intellij.openapi.editor.StripTrailingSpacesFilter
- sf:NOT_ALLOWED:com.intellij.openapi.editor.StripTrailingSpacesFilter
- sf:POSTPONED:com.intellij.openapi.editor.StripTrailingSpacesFilter
- a:isStripSpacesAllowedForLine(I):Z
a:com.intellij.openapi.editor.StripTrailingSpacesFilterFactory
- sf:EXTENSION_POINT:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:createFilter(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):com.intellij.openapi.editor.StripTrailingSpacesFilter
com.intellij.openapi.editor.TextChange
- a:getChars():C[]
- a:getEnd():I
- a:getStart():I
- a:getText():java.lang.CharSequence
f:com.intellij.openapi.editor.actionSystem.DocCommandGroupId
- equals(java.lang.Object):Z
- getDocument():com.intellij.openapi.editor.Document
- hashCode():I
- s:noneGroupId(com.intellij.openapi.editor.Document):com.intellij.openapi.editor.actionSystem.DocCommandGroupId
- s:withGroupId(com.intellij.openapi.editor.Document,java.lang.Object):com.intellij.openapi.editor.actionSystem.DocCommandGroupId
com.intellij.openapi.editor.actionSystem.ReadonlyFragmentModificationHandler
- a:handle(com.intellij.openapi.editor.ReadOnlyFragmentModificationException):V
com.intellij.openapi.editor.colors.CodeInsightColors
- sf:ANNOTATION_NAME_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:BLINKING_HIGHLIGHTS_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:BOOKMARKS_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:CONSIDERATION_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DEPRECATED_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:DUPLICATE_FROM_SERVER:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:ERRORS_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:FOLLOWED_HYPERLINK_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:GENERIC_SERVER_ERROR_OR_WARNING:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:HYPERLINK_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INACTIVE_HYPERLINK_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INFORMATION_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INFO_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:INSTANCE_FIELD_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:JOIN_POINT:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:LINE_FULL_COVERAGE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:LINE_NONE_COVERAGE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:LINE_PARTIAL_COVERAGE:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:MARKED_FOR_REMOVAL_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:MATCHED_BRACE_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:METHOD_CALL_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:METHOD_SEPARATORS_COLOR:com.intellij.openapi.editor.colors.ColorKey
- sf:NOT_USED_ELEMENT_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:RUNTIME_ERROR:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:STATIC_FINAL_FIELD_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:TODO_DEFAULT_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:UNMATCHED_BRACE_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:WARNINGS_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:WEAK_WARNING_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
- sf:WRONG_REFERENCES_ATTRIBUTES:com.intellij.openapi.editor.colors.TextAttributesKey
f:com.intellij.openapi.editor.colors.ColorKey
- java.lang.Comparable
- sf:FUNCTION_KEY:com.intellij.openapi.util.Key
- compareTo(com.intellij.openapi.editor.colors.ColorKey):I
- s:createColorKey(java.lang.String):com.intellij.openapi.editor.colors.ColorKey
- s:createColorKey(java.lang.String,java.awt.Color):com.intellij.openapi.editor.colors.ColorKey
- s:createColorKeyWithFallback(java.lang.String,com.intellij.openapi.editor.colors.ColorKey):com.intellij.openapi.editor.colors.ColorKey
- equals(java.lang.Object):Z
- s:find(java.lang.String):com.intellij.openapi.editor.colors.ColorKey
- getDefaultColor():java.awt.Color
- getExternalName():java.lang.String
- getFallbackColorKey():com.intellij.openapi.editor.colors.ColorKey
- hashCode():I
f:com.intellij.openapi.editor.colors.TextAttributesKey
- java.lang.Comparable
- sf:EMPTY_ARRAY:com.intellij.openapi.editor.colors.TextAttributesKey[]
- <init>(org.jdom.Element):V
- compareTo(com.intellij.openapi.editor.colors.TextAttributesKey):I
- s:createTempTextAttributesKey(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.colors.TextAttributesKey
- s:createTextAttributesKey(java.lang.String):com.intellij.openapi.editor.colors.TextAttributesKey
- s:createTextAttributesKey(java.lang.String,com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.openapi.editor.colors.TextAttributesKey
- s:createTextAttributesKey(java.lang.String,com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.colors.TextAttributesKey
- equals(java.lang.Object):Z
- s:find(java.lang.String):com.intellij.openapi.editor.colors.TextAttributesKey
- getDefaultAttributes():com.intellij.openapi.editor.markup.TextAttributes
- getExternalName():java.lang.String
- getFallbackAttributeKey():com.intellij.openapi.editor.colors.TextAttributesKey
- hashCode():I
- s:isTemp(com.intellij.openapi.editor.colors.TextAttributesKey):Z
- setFallbackAttributeKey(com.intellij.openapi.editor.colors.TextAttributesKey):V
- writeExternal(org.jdom.Element):V
com.intellij.openapi.editor.colors.TextAttributesKey$TextAttributeKeyDefaultsProvider
- a:getDefaultAttributes(com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.openapi.editor.markup.TextAttributes
com.intellij.openapi.editor.colors.TextAttributesScheme
- a:getAttributes(com.intellij.openapi.editor.colors.TextAttributesKey):com.intellij.openapi.editor.markup.TextAttributes
com.intellij.openapi.editor.event.BulkAwareDocumentListener
- com.intellij.openapi.editor.event.DocumentListener
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- beforeDocumentChangeNonBulk(com.intellij.openapi.editor.event.DocumentEvent):V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
- documentChangedNonBulk(com.intellij.openapi.editor.event.DocumentEvent):V
com.intellij.openapi.editor.event.BulkAwareDocumentListener$Simple
- com.intellij.openapi.editor.event.BulkAwareDocumentListener
- afterDocumentChange(com.intellij.openapi.editor.Document):V
- beforeDocumentChange(com.intellij.openapi.editor.Document):V
- beforeDocumentChangeNonBulk(com.intellij.openapi.editor.event.DocumentEvent):V
- bulkUpdateFinished(com.intellij.openapi.editor.Document):V
- bulkUpdateStarting(com.intellij.openapi.editor.Document):V
- documentChangedNonBulk(com.intellij.openapi.editor.event.DocumentEvent):V
a:com.intellij.openapi.editor.event.DocumentAdapter
- com.intellij.openapi.editor.event.DocumentListener
- <init>():V
a:com.intellij.openapi.editor.event.DocumentEvent
- java.util.EventObject
- p:<init>(com.intellij.openapi.editor.Document):V
- getDocument():com.intellij.openapi.editor.Document
- getMoveOffset():I
- a:getNewFragment():java.lang.CharSequence
- a:getNewLength():I
- a:getOffset():I
- a:getOldFragment():java.lang.CharSequence
- a:getOldLength():I
- a:getOldTimeStamp():J
- isWholeTextReplaced():Z
com.intellij.openapi.editor.event.DocumentListener
- java.util.EventListener
- sf:ARRAY_FACTORY:com.intellij.util.ArrayFactory
- sf:EMPTY_ARRAY:com.intellij.openapi.editor.event.DocumentListener[]
- beforeDocumentChange(com.intellij.openapi.editor.event.DocumentEvent):V
- bulkUpdateFinished(com.intellij.openapi.editor.Document):V
- bulkUpdateStarting(com.intellij.openapi.editor.Document):V
- documentChanged(com.intellij.openapi.editor.event.DocumentEvent):V
com.intellij.openapi.editor.ex.PrioritizedDocumentListener
- com.intellij.openapi.editor.event.DocumentListener
- sf:COMPARATOR:java.util.Comparator
- a:getPriority():I
f:com.intellij.openapi.editor.markup.AttributesFlyweight
- s:create(java.awt.Color,java.awt.Color,I,java.awt.Color,com.intellij.openapi.editor.markup.EffectType,java.awt.Color):com.intellij.openapi.editor.markup.AttributesFlyweight
- equals(java.lang.Object):Z
- getAllEffects():java.util.Map
- getBackground():java.awt.Color
- getEffectColor():java.awt.Color
- getEffectType():com.intellij.openapi.editor.markup.EffectType
- getFontType():I
- getForeground():java.awt.Color
- hashCode():I
- withBackground(java.awt.Color):com.intellij.openapi.editor.markup.AttributesFlyweight
- withEffectColor(java.awt.Color):com.intellij.openapi.editor.markup.AttributesFlyweight
- withEffectType(com.intellij.openapi.editor.markup.EffectType):com.intellij.openapi.editor.markup.AttributesFlyweight
- withErrorStripeColor(java.awt.Color):com.intellij.openapi.editor.markup.AttributesFlyweight
- withFontType(I):com.intellij.openapi.editor.markup.AttributesFlyweight
- withForeground(java.awt.Color):com.intellij.openapi.editor.markup.AttributesFlyweight
e:com.intellij.openapi.editor.markup.EffectType
- java.lang.Enum
- sf:BOLD_DOTTED_LINE:com.intellij.openapi.editor.markup.EffectType
- sf:BOLD_LINE_UNDERSCORE:com.intellij.openapi.editor.markup.EffectType
- sf:BOXED:com.intellij.openapi.editor.markup.EffectType
- sf:LINE_UNDERSCORE:com.intellij.openapi.editor.markup.EffectType
- sf:ROUNDED_BOX:com.intellij.openapi.editor.markup.EffectType
- sf:SEARCH_MATCH:com.intellij.openapi.editor.markup.EffectType
- sf:STRIKEOUT:com.intellij.openapi.editor.markup.EffectType
- sf:WAVE_UNDERSCORE:com.intellij.openapi.editor.markup.EffectType
- s:valueOf(java.lang.String):com.intellij.openapi.editor.markup.EffectType
- s:values():com.intellij.openapi.editor.markup.EffectType[]
c:com.intellij.openapi.editor.markup.TextAttributes
- java.lang.Cloneable
- sf:ERASE_MARKER:com.intellij.openapi.editor.markup.TextAttributes
- <init>():V
- <init>(java.awt.Color,java.awt.Color,java.awt.Color,com.intellij.openapi.editor.markup.EffectType,I):V
- <init>(org.jdom.Element):V
- clone():com.intellij.openapi.editor.markup.TextAttributes
- copyFrom(com.intellij.openapi.editor.markup.TextAttributes):V
- equals(java.lang.Object):Z
- s:fromFlyweight(com.intellij.openapi.editor.markup.AttributesFlyweight):com.intellij.openapi.editor.markup.TextAttributes
- getBackgroundColor():java.awt.Color
- getEffectColor():java.awt.Color
- getEffectType():com.intellij.openapi.editor.markup.EffectType
- getErrorStripeColor():java.awt.Color
- getFlyweight():com.intellij.openapi.editor.markup.AttributesFlyweight
- getFontType():I
- getForegroundColor():java.awt.Color
- hashCode():I
- isEmpty():Z
- s:merge(com.intellij.openapi.editor.markup.TextAttributes,com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.markup.TextAttributes
- readExternal(org.jdom.Element):V
- setAttributes(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,com.intellij.openapi.editor.markup.EffectType,I):V
- setBackgroundColor(java.awt.Color):V
- setEffectColor(java.awt.Color):V
- setEffectType(com.intellij.openapi.editor.markup.EffectType):V
- setErrorStripeColor(java.awt.Color):V
- setFontType(I):V
- setForegroundColor(java.awt.Color):V
- writeExternal(org.jdom.Element):V
f:com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder
- applyTo(com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.markup.TextAttributes
- coverWith(com.intellij.openapi.editor.markup.EffectType,java.awt.Color):com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder
- coverWith(com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder
- s:create():com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder
- s:create(com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder
- getEffectDescriptor(com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder$EffectSlot):com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder$EffectDescriptor
- slipUnder(com.intellij.openapi.editor.markup.EffectType,java.awt.Color):com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder
- slipUnder(com.intellij.openapi.editor.markup.TextAttributes):com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder
f:com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder$EffectDescriptor
- f:effectColor:java.awt.Color
- f:effectType:com.intellij.openapi.editor.markup.EffectType
e:com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder$EffectSlot
- java.lang.Enum
- sf:FOREGROUND_SLOT:com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder$EffectSlot
- sf:FRAME_SLOT:com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder$EffectSlot
- sf:STRIKE_SLOT:com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder$EffectSlot
- sf:UNDERLINE_SLOT:com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder$EffectSlot
- s:valueOf(java.lang.String):com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder$EffectSlot
- s:values():com.intellij.openapi.editor.markup.TextAttributesEffectsBuilder$EffectSlot[]
c:com.intellij.openapi.editor.markup.UnmodifiableTextAttributes
- com.intellij.openapi.editor.markup.TextAttributes
- <init>():V
- copyFrom(com.intellij.openapi.editor.markup.TextAttributes):V
- readExternal(org.jdom.Element):V
- setAdditionalEffects(java.util.Map):V
- setAttributes(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,com.intellij.openapi.editor.markup.EffectType,I):V
- setBackgroundColor(java.awt.Color):V
- setEffectColor(java.awt.Color):V
- setEffectType(com.intellij.openapi.editor.markup.EffectType):V
- setErrorStripeColor(java.awt.Color):V
- setFontType(I):V
- setForegroundColor(java.awt.Color):V
a:com.intellij.openapi.extensions.CustomLoadingExtensionPointBean
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- factoryArgument:java.lang.String
- factoryClass:java.lang.String
- p:<init>():V
- p:<init>(java.lang.Object):V
- f:createInstance(com.intellij.openapi.components.ComponentManager):java.lang.Object
com.intellij.openapi.extensions.ExtensionFactory
- a:createInstance(java.lang.String,java.lang.String):java.lang.Object
f:com.intellij.openapi.extensions.KeyedFactoryEPBean
- com.intellij.openapi.extensions.PluginAware
- factoryClass:java.lang.String
- implementationClass:java.lang.String
- key:java.lang.String
- <init>(com.intellij.openapi.extensions.PluginDescriptor):V
- getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
@:com.intellij.openapi.extensions.RequiredElement
- java.lang.annotation.Annotation
- a:allowEmpty():Z
a:com.intellij.openapi.fileEditor.FileDocumentManager
- com.intellij.openapi.vfs.SavingRequestor
- <init>():V
- s:fileForDocumentCheckedOutSuccessfully(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):Z
- a:getCachedDocument(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.Document
- a:getDocument(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.Document
- a:getFile(com.intellij.openapi.editor.Document):com.intellij.openapi.vfs.VirtualFile
- s:getInstance():com.intellij.openapi.fileEditor.FileDocumentManager
- a:getLineSeparator(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.lang.String
- a:getUnsavedDocuments():com.intellij.openapi.editor.Document[]
- a:isDocumentUnsaved(com.intellij.openapi.editor.Document):Z
- a:isFileModified(com.intellij.openapi.vfs.VirtualFile):Z
- a:isPartialPreviewOfALargeFile(com.intellij.openapi.editor.Document):Z
- processUnsavedDocuments(com.intellij.util.Processor):Z
- a:reloadFiles(com.intellij.openapi.vfs.VirtualFile[]):V
- reloadFromDisk(com.intellij.openapi.editor.Document):V
- a:reloadFromDisk(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):V
- a:requestWriting(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):Z
- requestWritingStatus(com.intellij.openapi.editor.Document,com.intellij.openapi.project.Project):com.intellij.openapi.fileEditor.FileDocumentManager$WriteAccessStatus
- a:saveAllDocuments():V
- a:saveDocument(com.intellij.openapi.editor.Document):V
- a:saveDocumentAsIs(com.intellij.openapi.editor.Document):V
- a:saveDocuments(java.util.function.Predicate):V
c:com.intellij.openapi.fileEditor.FileDocumentManager$WriteAccessStatus
- sf:NON_WRITABLE:com.intellij.openapi.fileEditor.FileDocumentManager$WriteAccessStatus
- sf:WRITABLE:com.intellij.openapi.fileEditor.FileDocumentManager$WriteAccessStatus
- <init>(java.lang.String):V
- <init>(java.lang.String,javax.swing.event.HyperlinkListener):V
- getHyperlinkListener():javax.swing.event.HyperlinkListener
- getReadOnlyMessage():java.lang.String
- hasWriteAccess():Z
com.intellij.openapi.fileTypes.BinaryFileDecompiler
- a:decompile(com.intellij.openapi.vfs.VirtualFile):java.lang.CharSequence
f:com.intellij.openapi.fileTypes.BinaryFileTypeDecompilers
- com.intellij.openapi.fileTypes.FileTypeExtension
- s:getInstance():com.intellij.openapi.fileTypes.BinaryFileTypeDecompilers
- notifyDecompilerSetChange():V
f:com.intellij.openapi.fileTypes.CharsetUtil
- <init>():V
- s:extractCharsetFromFileContent(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence):java.nio.charset.Charset
- s:findUnmappableCharacters(java.lang.CharSequence,java.nio.charset.Charset):com.intellij.openapi.util.TextRange
- s:findUnmappableCharacters(java.nio.ByteBuffer,java.nio.charset.Charset):com.intellij.openapi.util.TextRange
com.intellij.openapi.fileTypes.DirectoryFileType
- com.intellij.openapi.fileTypes.FileType
com.intellij.openapi.fileTypes.FileType
- sf:EMPTY_ARRAY:com.intellij.openapi.fileTypes.FileType[]
- getCharset(com.intellij.openapi.vfs.VirtualFile,B[]):java.lang.String
- a:getDefaultExtension():java.lang.String
- a:getDescription():java.lang.String
- getDisplayName():java.lang.String
- a:getIcon():javax.swing.Icon
- a:getName():java.lang.String
- a:isBinary():Z
- isReadOnly():Z
c:com.intellij.openapi.fileTypes.FileTypeExtension
- com.intellij.openapi.util.KeyedExtensionCollector
- <init>(com.intellij.openapi.extensions.ExtensionPointName):V
- <init>(java.lang.String):V
- allForFileType(com.intellij.openapi.fileTypes.FileType):java.util.List
- forFileType(com.intellij.openapi.fileTypes.FileType):java.lang.Object
- getAllRegisteredExtensions():java.util.Map
- p:keyToString(com.intellij.openapi.fileTypes.FileType):java.lang.String
f:com.intellij.openapi.fileTypes.FileTypeExtensionFactory
- com.intellij.openapi.util.KeyedExtensionFactory
- <init>(java.lang.Class,com.intellij.openapi.extensions.ExtensionPointName):V
- getKey(com.intellij.openapi.fileTypes.FileType):java.lang.String
f:com.intellij.openapi.fileTypes.FileTypeExtensionPoint
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- com.intellij.util.KeyedLazyInstance
- filetype:java.lang.String
- implementationClass:java.lang.String
- <init>(java.lang.String,java.lang.Object):V
- getKey():java.lang.String
a:com.intellij.openapi.fileTypes.FileTypeRegistry
- <init>():V
- findFileTypeByLanguage(com.intellij.lang.Language):com.intellij.openapi.fileTypes.LanguageFileType
- a:findFileTypeByName(java.lang.String):com.intellij.openapi.fileTypes.FileType
- a:getFileTypeByExtension(java.lang.String):com.intellij.openapi.fileTypes.FileType
- a:getFileTypeByFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.fileTypes.FileType
- getFileTypeByFile(com.intellij.openapi.vfs.VirtualFile,B[]):com.intellij.openapi.fileTypes.FileType
- getFileTypeByFileName(java.lang.CharSequence):com.intellij.openapi.fileTypes.FileType
- a:getFileTypeByFileName(java.lang.String):com.intellij.openapi.fileTypes.FileType
- s:getInstance():com.intellij.openapi.fileTypes.FileTypeRegistry
- a:getRegisteredFileTypes():com.intellij.openapi.fileTypes.FileType[]
- a:isFileIgnored(com.intellij.openapi.vfs.VirtualFile):Z
- isFileOfType(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileTypes.FileType):Z
com.intellij.openapi.fileTypes.FileTypeRegistry$FileTypeDetector
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:detect(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.io.ByteSequence,java.lang.CharSequence):com.intellij.openapi.fileTypes.FileType
- getDesiredContentPrefixLength():I
- getVersion():I
com.intellij.openapi.fileTypes.INativeFileType
- com.intellij.openapi.fileTypes.FileType
- a:openFileInAssociatedApplication(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):Z
- a:useNativeIcon():Z
com.intellij.openapi.fileTypes.InternalFileType
- com.intellij.openapi.fileTypes.FileType
- isReadOnly():Z
a:com.intellij.openapi.fileTypes.LanguageFileType
- com.intellij.openapi.fileTypes.FileType
- p:<init>(com.intellij.lang.Language):V
- p:<init>(com.intellij.lang.Language,Z):V
- extractCharsetFromFileContent(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.CharSequence):java.nio.charset.Charset
- extractCharsetFromFileContent(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.String):java.nio.charset.Charset
- getDisplayName():java.lang.String
- f:getLanguage():com.intellij.lang.Language
- f:isBinary():Z
- isJVMDebuggingSupported():Z
- isSecondary():Z
com.intellij.openapi.fileTypes.OSFileIdeAssociation
- getExtensionMode():com.intellij.openapi.fileTypes.OSFileIdeAssociation$ExtensionMode
- isFileAssociationAllowed():Z
e:com.intellij.openapi.fileTypes.OSFileIdeAssociation$ExtensionMode
- java.lang.Enum
- sf:All:com.intellij.openapi.fileTypes.OSFileIdeAssociation$ExtensionMode
- sf:Default:com.intellij.openapi.fileTypes.OSFileIdeAssociation$ExtensionMode
- sf:Selected:com.intellij.openapi.fileTypes.OSFileIdeAssociation$ExtensionMode
- s:valueOf(java.lang.String):com.intellij.openapi.fileTypes.OSFileIdeAssociation$ExtensionMode
- s:values():com.intellij.openapi.fileTypes.OSFileIdeAssociation$ExtensionMode[]
com.intellij.openapi.fileTypes.PlainTextLikeFileType
com.intellij.openapi.fileTypes.UIBasedFileType
- com.intellij.openapi.fileTypes.FileType
f:com.intellij.openapi.fileTypes.UnknownFileType
- com.intellij.openapi.fileTypes.FileType
- sf:INSTANCE:com.intellij.openapi.fileTypes.FileType
- getDefaultExtension():java.lang.String
- getDescription():java.lang.String
- getDisplayName():java.lang.String
- getIcon():javax.swing.Icon
- getName():java.lang.String
- isBinary():Z
a:com.intellij.openapi.fileTypes.ex.FakeFileType
- com.intellij.openapi.fileTypes.ex.FileTypeIdentifiableByVirtualFile
- p:<init>():V
- getDefaultExtension():java.lang.String
- getIcon():javax.swing.Icon
- isBinary():Z
- isReadOnly():Z
com.intellij.openapi.fileTypes.ex.FileTypeIdentifiableByVirtualFile
- com.intellij.openapi.fileTypes.FileType
- sf:ARRAY_FACTORY:com.intellij.util.ArrayFactory
- sf:EMPTY_ARRAY:com.intellij.openapi.fileTypes.ex.FileTypeIdentifiableByVirtualFile[]
- a:isMyFileType(com.intellij.openapi.vfs.VirtualFile):Z
com.intellij.openapi.module.Module
- com.intellij.openapi.Disposable
- com.intellij.openapi.components.ComponentManager
- com.intellij.openapi.extensions.AreaInstance
- sf:ELEMENT_TYPE:java.lang.String
- sf:EMPTY_ARRAY:com.intellij.openapi.module.Module[]
- a:getMessageBus():com.intellij.util.messages.MessageBus
- a:getModuleContentScope():com.intellij.psi.search.GlobalSearchScope
- a:getModuleContentWithDependenciesScope():com.intellij.psi.search.GlobalSearchScope
- getModuleProductionSourceScope():com.intellij.psi.search.GlobalSearchScope
- a:getModuleRuntimeScope(Z):com.intellij.psi.search.GlobalSearchScope
- a:getModuleScope():com.intellij.psi.search.GlobalSearchScope
- a:getModuleScope(Z):com.intellij.psi.search.GlobalSearchScope
- getModuleTestSourceScope():com.intellij.psi.search.GlobalSearchScope
- a:getModuleTestsWithDependentsScope():com.intellij.psi.search.GlobalSearchScope
- a:getModuleWithDependenciesAndLibrariesScope(Z):com.intellij.psi.search.GlobalSearchScope
- a:getModuleWithDependenciesScope():com.intellij.psi.search.GlobalSearchScope
- a:getModuleWithDependentsScope():com.intellij.psi.search.GlobalSearchScope
- a:getModuleWithLibrariesScope():com.intellij.psi.search.GlobalSearchScope
- a:getName():java.lang.String
- a:getOptionValue(java.lang.String):java.lang.String
- a:getProject():com.intellij.openapi.project.Project
- a:isDisposed():Z
- a:isLoaded():Z
- a:setOption(java.lang.String,java.lang.String):V
f:com.intellij.openapi.module.ModuleServiceManager
- s:getService(com.intellij.openapi.module.Module,java.lang.Class):java.lang.Object
com.intellij.openapi.options.Scheme
- sf:EDITABLE_COPY_PREFIX:java.lang.String
- s:getBaseName(java.lang.String):java.lang.String
- getDisplayName():java.lang.String
- a:getName():java.lang.String
com.intellij.openapi.options.SchemeElement
- a:copy():com.intellij.openapi.options.SchemeElement
- a:getKey():java.lang.String
- a:setGroupName(java.lang.String):V
com.intellij.openapi.options.SchemeMetaInfo
- a:getMetaProperties():java.util.Properties
com.intellij.openapi.progress.CoroutineSuspender
- a:isPaused():Z
- a:pause():V
- a:resume():V
c:com.intellij.openapi.progress.DumbProgressIndicator
- com.intellij.openapi.progress.StandardProgressIndicator
- sf:INSTANCE:com.intellij.openapi.progress.DumbProgressIndicator
- <init>():V
- f:cancel():V
- f:checkCanceled():V
- getFraction():D
- getModalityState():com.intellij.openapi.application.ModalityState
- getText():java.lang.String
- getText2():java.lang.String
- f:isCanceled():Z
- isIndeterminate():Z
- isModal():Z
- isPopupWasShown():Z
- isRunning():Z
- isShowing():Z
- popState():V
- pushState():V
- setFraction(D):V
- setIndeterminate(Z):V
- setModalityProgress(com.intellij.openapi.progress.ProgressIndicator):V
- setText(java.lang.String):V
- setText2(java.lang.String):V
- start():V
- stop():V
c:com.intellij.openapi.progress.EmptyProgressIndicator
- com.intellij.openapi.progress.EmptyProgressIndicatorBase
- com.intellij.openapi.progress.StandardProgressIndicator
- <init>():V
- <init>(com.intellij.openapi.application.ModalityState):V
- f:cancel():V
- f:isCanceled():Z
- s:notNullize(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.progress.ProgressIndicator
- start():V
a:com.intellij.openapi.progress.EmptyProgressIndicatorBase
- com.intellij.openapi.progress.ProgressIndicator
- <init>():V
- <init>(com.intellij.openapi.application.ModalityState):V
- f:checkCanceled():V
- finishNonCancelableSection():V
- getFraction():D
- getModalityState():com.intellij.openapi.application.ModalityState
- getText():java.lang.String
- getText2():java.lang.String
- isIndeterminate():Z
- isModal():Z
- isPopupWasShown():Z
- isRunning():Z
- isShowing():Z
- popState():V
- pushState():V
- setFraction(D):V
- setIndeterminate(Z):V
- setModalityProgress(com.intellij.openapi.progress.ProgressIndicator):V
- setText(java.lang.String):V
- setText2(java.lang.String):V
- start():V
- startNonCancelableSection():V
- stop():V
com.intellij.openapi.progress.PerformInBackgroundOption
- sf:ALWAYS_BACKGROUND:com.intellij.openapi.progress.PerformInBackgroundOption
- sf:DEAF:com.intellij.openapi.progress.PerformInBackgroundOption
- processSentToBackground():V
- a:shouldStartInBackground():Z
com.intellij.openapi.progress.ProgressIndicator
- a:cancel():V
- a:checkCanceled():V
- finishNonCancelableSection():V
- a:getFraction():D
- a:getModalityState():com.intellij.openapi.application.ModalityState
- a:getText():java.lang.String
- a:getText2():java.lang.String
- a:isCanceled():Z
- a:isIndeterminate():Z
- a:isModal():Z
- a:isPopupWasShown():Z
- a:isRunning():Z
- a:isShowing():Z
- a:popState():V
- a:pushState():V
- a:setFraction(D):V
- a:setIndeterminate(Z):V
- a:setModalityProgress(com.intellij.openapi.progress.ProgressIndicator):V
- a:setText(java.lang.String):V
- a:setText2(java.lang.String):V
- a:start():V
- startNonCancelableSection():V
- a:stop():V
a:com.intellij.openapi.progress.ProgressIndicatorProvider
- <init>():V
- s:checkCanceled():V
- pa:doCheckCanceled():V
- s:getGlobalProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
- s:getInstance():com.intellij.openapi.progress.ProgressIndicatorProvider
- a:getProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
a:com.intellij.openapi.progress.ProgressManager
- com.intellij.openapi.progress.ProgressIndicatorProvider
- <init>():V
- s:assertNotCircular(com.intellij.openapi.progress.ProgressIndicator):V
- s:canceled(com.intellij.openapi.progress.ProgressIndicator):V
- s:checkCanceled():V
- a:computeInNonCancelableSection(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- a:executeNonCancelableSection(java.lang.Runnable):V
- a:executeProcessUnderProgress(java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):V
- s:getInstance():com.intellij.openapi.progress.ProgressManager
- a:getProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
- a:hasModalProgressIndicator():Z
- a:hasProgressIndicator():Z
- a:hasUnsafeProgressIndicator():Z
- p:indicatorCanceled(com.intellij.openapi.progress.ProgressIndicator):V
- a:isInNonCancelableSection():Z
- s:progress(java.lang.String):V
- s:progress(java.lang.String,java.lang.String):V
- s:progress2(java.lang.String):V
- run(com.intellij.openapi.progress.Task$WithResult):java.lang.Object
- a:run(com.intellij.openapi.progress.Task):V
- a:runInReadActionWithWriteActionPriority(java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):Z
- f:runProcess(com.intellij.openapi.util.Computable,com.intellij.openapi.progress.ProgressIndicator):java.lang.Object
- a:runProcess(java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):V
- a:runProcessWithProgressAsynchronously(com.intellij.openapi.progress.Task$Backgroundable,com.intellij.openapi.progress.ProgressIndicator):V
- a:runProcessWithProgressAsynchronously(com.intellij.openapi.project.Project,java.lang.String,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable,com.intellij.openapi.progress.PerformInBackgroundOption):V
- a:runProcessWithProgressSynchronously(com.intellij.openapi.util.ThrowableComputable,java.lang.String,Z,com.intellij.openapi.project.Project):java.lang.Object
- a:runProcessWithProgressSynchronously(java.lang.Runnable,java.lang.String,Z,com.intellij.openapi.project.Project):Z
- a:runProcessWithProgressSynchronously(java.lang.Runnable,java.lang.String,Z,com.intellij.openapi.project.Project,javax.swing.JComponent):Z
f:com.intellij.openapi.progress.ProgressReporterKt
- sf:durationStep(D,java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- bs:durationStep$default(D,java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- sf:indeterminateStep(java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- bs:indeterminateStep$default(java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- sf:progressStep(D,java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
- bs:progressStep$default(D,java.lang.String,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
- sf:withRawProgressReporter(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):java.lang.Object
com.intellij.openapi.progress.Progressive
- a:run(com.intellij.openapi.progress.ProgressIndicator):V
com.intellij.openapi.progress.StandardProgressIndicator
- com.intellij.openapi.progress.ProgressIndicator
a:com.intellij.openapi.progress.Task
- com.intellij.openapi.progress.Progressive
- com.intellij.openapi.progress.TaskInfo
- pf:myParentComponent:javax.swing.JComponent
- pf:myProject:com.intellij.openapi.project.Project
- p:myTitle:java.lang.String
- f:asBackgroundable():com.intellij.openapi.progress.Task$Backgroundable
- f:asModal():com.intellij.openapi.progress.Task$Modal
- f:getCancelText():java.lang.String
- f:getCancelTooltipText():java.lang.String
- getNotificationInfo():com.intellij.openapi.progress.Task$NotificationInfo
- f:getParentComponent():javax.swing.JComponent
- f:getProject():com.intellij.openapi.project.Project
- f:getTitle():java.lang.String
- f:isCancellable():Z
- isHeadless():Z
- a:isModal():Z
- notifyFinished():com.intellij.openapi.progress.Task$NotificationInfo
- onCancel():V
- onFinished():V
- onSuccess():V
- onThrowable(java.lang.Throwable):V
- f:queue():V
- f:setCancelText(java.lang.String):com.intellij.openapi.progress.Task
- f:setCancelTooltipText(java.lang.String):com.intellij.openapi.progress.Task
- f:setTitle(java.lang.String):com.intellij.openapi.progress.Task
- whereToRunCallbacks():com.intellij.openapi.application.EdtReplacementThread
a:com.intellij.openapi.progress.Task$Backgroundable
- com.intellij.openapi.progress.Task
- com.intellij.openapi.progress.PerformInBackgroundOption
- <init>(com.intellij.openapi.project.Project,java.lang.String):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z):V
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,com.intellij.openapi.progress.PerformInBackgroundOption):V
- <init>(com.intellij.openapi.project.Project,javax.swing.JComponent,java.lang.String,Z,com.intellij.openapi.progress.PerformInBackgroundOption):V
- isConditionalModal():Z
- f:isModal():Z
- processSentToBackground():V
- shouldStartInBackground():Z
a:com.intellij.openapi.progress.Task$ConditionalModal
- com.intellij.openapi.progress.Task$Backgroundable
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z,com.intellij.openapi.progress.PerformInBackgroundOption):V
- <init>(com.intellij.openapi.project.Project,javax.swing.JComponent,java.lang.String,Z,com.intellij.openapi.progress.PerformInBackgroundOption):V
- f:isConditionalModal():Z
a:com.intellij.openapi.progress.Task$Modal
- com.intellij.openapi.progress.Task
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z):V
- <init>(com.intellij.openapi.project.Project,javax.swing.JComponent,java.lang.String,Z):V
- f:isModal():Z
c:com.intellij.openapi.progress.Task$NotificationInfo
- <init>(java.lang.String,java.lang.String,java.lang.String):V
- <init>(java.lang.String,java.lang.String,java.lang.String,Z):V
- getNotificationName():java.lang.String
- getNotificationText():java.lang.String
- getNotificationTitle():java.lang.String
- isShowWhenFocused():Z
a:com.intellij.openapi.progress.Task$WithResult
- com.intellij.openapi.progress.Task$Modal
- <init>(com.intellij.openapi.project.Project,java.lang.String,Z):V
- <init>(com.intellij.openapi.project.Project,javax.swing.JComponent,java.lang.String,Z):V
- pa:compute(com.intellij.openapi.progress.ProgressIndicator):java.lang.Object
- getResult():java.lang.Object
- f:run(com.intellij.openapi.progress.ProgressIndicator):V
com.intellij.openapi.progress.TaskInfo
- a:getCancelText():java.lang.String
- a:getCancelTooltipText():java.lang.String
- getStatusBarIndicatorWeight():I
- a:getTitle():java.lang.String
- a:isCancellable():Z
com.intellij.openapi.progress.WrappedProgressIndicator
- com.intellij.openapi.progress.ProgressIndicator
- a:getOriginalProgressIndicator():com.intellij.openapi.progress.ProgressIndicator
a:com.intellij.openapi.project.DefaultProjectFactory
- <init>():V
- a:getDefaultProject():com.intellij.openapi.project.Project
- s:getInstance():com.intellij.openapi.project.DefaultProjectFactory
com.intellij.openapi.project.DumbAware
com.intellij.openapi.project.DumbAwareRunnable
- com.intellij.openapi.project.DumbAware
- java.lang.Runnable
f:com.intellij.openapi.project.DumbKt
- sf:lazyDumbAwareExtensions(com.intellij.openapi.extensions.ExtensionPointName,com.intellij.openapi.project.Project):kotlin.sequences.Sequence
e:com.intellij.openapi.project.DumbModeBlockedFunctionality
- java.lang.Enum
- sf:Action:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:ActionWithoutId:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:Android:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:CodeCompletion:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:CtrlMouseHandler:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:DupLocator:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:EditorGutterComponent:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:FindUsages:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:FrameworkDetection:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GlobalInspectionContext:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoBeanDeclarations:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoClass:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoDeclaration:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoDeclarationOnly:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoDeclarationOrUsage:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoEventPublisher:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoImplementations:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoInjectionPoints:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoSuperMethod:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoTarget:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GotoTypeDeclaration:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:GroovyMarkers:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:Gwt:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:Intentions:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:JfrStackFrames:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:Jpa:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:Kotlin:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:LineProfiler:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:MemberInplaceRenamer:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:MultipleActionIds:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:OpenInHTTPClient:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:Other:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:PackageDependencies:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:PostCommitCheck:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:ProjectView:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:RDClientHyperlink:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:Refactoring:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:RefactoringDialog:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:RemoteDebuggingFileFinder:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:SafeDeleteDialog:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:SearchEverywhere:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:Spring:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:TmsFilter:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:Uml:com.intellij.openapi.project.DumbModeBlockedFunctionality
- sf:UsageInfoSearcherAdapter:com.intellij.openapi.project.DumbModeBlockedFunctionality
- s:valueOf(java.lang.String):com.intellij.openapi.project.DumbModeBlockedFunctionality
- s:values():com.intellij.openapi.project.DumbModeBlockedFunctionality[]
e:com.intellij.openapi.project.DumbModePermission
- java.lang.Enum
- sf:MAY_START_BACKGROUND:com.intellij.openapi.project.DumbModePermission
- sf:MAY_START_MODAL:com.intellij.openapi.project.DumbModePermission
- s:valueOf(java.lang.String):com.intellij.openapi.project.DumbModePermission
- s:values():com.intellij.openapi.project.DumbModePermission[]
a:com.intellij.openapi.project.DumbModeTask
- com.intellij.openapi.Disposable
- com.intellij.openapi.project.MergeableQueueTask
- <init>():V
- <init>(java.lang.Object):V
- dispose():V
- f:perform(com.intellij.openapi.progress.ProgressIndicator):V
- a:performInDumbMode(com.intellij.openapi.progress.ProgressIndicator):V
- f:queue(com.intellij.openapi.project.Project):V
- tryMergeWith(com.intellij.openapi.project.DumbModeTask):com.intellij.openapi.project.DumbModeTask
a:com.intellij.openapi.project.DumbService
- sf:Companion:com.intellij.openapi.project.DumbService$Companion
- sf:DUMB_MODE:com.intellij.util.messages.Topic
- <init>():V
- sf:allowStartingDumbModeInside(com.intellij.openapi.project.DumbModePermission,java.lang.Runnable):V
- a:cancelTask(com.intellij.openapi.project.DumbModeTask):V
- a:completeJustSubmittedTasks():V
- f:computeWithAlternativeResolveEnabled(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- f:filterByDumbAwareness(java.util.Collection):java.util.List
- f:filterByDumbAwareness(java.lang.Object[]):java.util.List
- sf:getDumbAwareExtensions(com.intellij.openapi.project.Project,com.intellij.openapi.extensions.ExtensionPointName):java.util.List
- sf:getDumbAwareExtensions(com.intellij.openapi.project.Project,com.intellij.openapi.extensions.ProjectExtensionPointName):java.util.List
- sf:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.project.DumbService
- a:getModificationTracker():com.intellij.openapi.util.ModificationTracker
- a:getProject():com.intellij.openapi.project.Project
- a:isAlternativeResolveEnabled():Z
- a:isDumb():Z
- sf:isDumb(com.intellij.openapi.project.Project):Z
- sf:isDumbAware(java.lang.Object):Z
- f:isUsableInCurrentContext(java.lang.Object):Z
- f:makeDumbAware(javax.swing.JComponent,com.intellij.openapi.Disposable):V
- a:queueTask(com.intellij.openapi.project.DumbModeTask):V
- f:repeatUntilPassesInSmartMode(java.lang.Runnable):V
- f:runReadActionInSmartMode(com.intellij.openapi.util.Computable):java.lang.Object
- f:runReadActionInSmartMode(java.lang.Runnable):V
- a:runWhenSmart(java.lang.Runnable):V
- f:runWithAlternativeResolveEnabled(com.intellij.util.ThrowableRunnable):V
- a:setAlternativeResolveEnabled(Z):V
- a:showDumbModeActionBalloon(java.lang.String,java.lang.Runnable,java.util.List):V
- a:showDumbModeNotification(java.lang.String):V
- a:showDumbModeNotificationForAction(java.lang.String,java.lang.String):V
- a:showDumbModeNotificationForFunctionality(java.lang.String,com.intellij.openapi.project.DumbModeBlockedFunctionality):V
- a:smartInvokeLater(java.lang.Runnable):V
- a:smartInvokeLater(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- a:suspendIndexingAndRun(java.lang.String,java.lang.Runnable):V
- f:tryRunReadActionInSmartMode(com.intellij.openapi.util.Computable,java.lang.String):java.lang.Object
- f:tryRunReadActionInSmartMode(com.intellij.openapi.util.Computable,java.lang.String,com.intellij.openapi.project.DumbModeBlockedFunctionality):java.lang.Object
- a:waitForSmartMode():V
- f:withAlternativeResolveEnabled(java.lang.Runnable):V
- f:withAlternativeResolveEnabled(kotlin.jvm.functions.Function0):java.lang.Object
- a:wrapGently(javax.swing.JComponent,com.intellij.openapi.Disposable):javax.swing.JComponent
- a:wrapWithSpoiler(javax.swing.JComponent,java.lang.Runnable,com.intellij.openapi.Disposable):javax.swing.JComponent
f:com.intellij.openapi.project.DumbService$Companion
- f:allowStartingDumbModeInside(com.intellij.openapi.project.DumbModePermission,java.lang.Runnable):V
- f:getDumbAwareExtensions(com.intellij.openapi.project.Project,com.intellij.openapi.extensions.ExtensionPointName):java.util.List
- f:getDumbAwareExtensions(com.intellij.openapi.project.Project,com.intellij.openapi.extensions.ProjectExtensionPointName):java.util.List
- f:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.project.DumbService
- f:isDumb(com.intellij.openapi.project.Project):Z
- f:isDumbAware(java.lang.Object):Z
com.intellij.openapi.project.DumbService$DumbModeListener
- enteredDumbMode():V
- exitDumbMode():V
f:com.intellij.openapi.project.IndexNotReadyException
- java.lang.RuntimeException
- com.intellij.openapi.diagnostic.ExceptionWithAttachments
- s:create():com.intellij.openapi.project.IndexNotReadyException
- s:create(java.lang.Throwable):com.intellij.openapi.project.IndexNotReadyException
- getAttachments():com.intellij.openapi.diagnostic.Attachment[]
com.intellij.openapi.project.MergeableQueueTask
- com.intellij.openapi.Disposable
- a:perform(com.intellij.openapi.progress.ProgressIndicator):V
- a:tryMergeWith(com.intellij.openapi.project.MergeableQueueTask):com.intellij.openapi.project.MergeableQueueTask
com.intellij.openapi.project.PossiblyDumbAware
- isDumbAware():Z
com.intellij.openapi.project.Project
- com.intellij.openapi.components.ComponentManager
- com.intellij.openapi.extensions.AreaInstance
- sf:DIRECTORY_STORE_FOLDER:java.lang.String
- a:getBaseDir():com.intellij.openapi.vfs.VirtualFile
- a:getBasePath():java.lang.String
- a:getLocationHash():java.lang.String
- a:getName():java.lang.String
- getPresentableUrl():java.lang.String
- a:getProjectFile():com.intellij.openapi.vfs.VirtualFile
- a:getProjectFilePath():java.lang.String
- a:getWorkspaceFile():com.intellij.openapi.vfs.VirtualFile
- isDefault():Z
- a:isInitialized():Z
- a:isOpen():Z
- a:save():V
- scheduleSave():V
f:com.intellij.openapi.project.ProjectCoreUtil
- sf:INSTANCE:com.intellij.openapi.project.ProjectCoreUtil
- sf:isProjectOrWorkspaceFile(com.intellij.openapi.vfs.VirtualFile):Z
- sf:isProjectOrWorkspaceFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.fileTypes.FileType):Z
- sf:isProjectOrWorkspaceFile(com.intellij.openapi.vfs.VirtualFile,java.lang.CharSequence):Z
Fa:com.intellij.openapi.project.ProjectLocator
- sf:Companion:com.intellij.openapi.project.ProjectLocator$Companion
- <init>():V
- sf:getInstance():com.intellij.openapi.project.ProjectLocator
- sf:getPreferredProject(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.project.Project
- a:getProjectsForFile(com.intellij.openapi.vfs.VirtualFile):java.util.Collection
- a:guessProjectForFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.project.Project
f:com.intellij.openapi.project.ProjectLocator$Companion
- f:getInstance():com.intellij.openapi.project.ProjectLocator
- f:getPreferredProject(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.project.Project
com.intellij.openapi.project.RootsChangeRescanningInfo
- sf:NO_RESCAN_NEEDED:com.intellij.openapi.project.RootsChangeRescanningInfo
- sf:RESCAN_DEPENDENCIES_IF_NEEDED:com.intellij.openapi.project.RootsChangeRescanningInfo
- sf:TOTAL_RESCAN:com.intellij.openapi.project.RootsChangeRescanningInfo
f:com.intellij.openapi.project.WriteActionAutoCloseable
- java.lang.AutoCloseable
- <init>(kotlin.jvm.functions.Function0):V
- close():V
com.intellij.openapi.roots.ContentIterator
- a:processFile(com.intellij.openapi.vfs.VirtualFile):Z
a:com.intellij.openapi.roots.FileIndexFacade
- pf:myProject:com.intellij.openapi.project.Project
- p:<init>(com.intellij.openapi.project.Project):V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.roots.FileIndexFacade
- a:getModuleForFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.module.Module
- a:getRootModificationTracker():com.intellij.openapi.util.ModificationTracker
- a:getUnloadedModuleDescriptions():java.util.Collection
- a:isExcludedFile(com.intellij.openapi.vfs.VirtualFile):Z
- a:isInContent(com.intellij.openapi.vfs.VirtualFile):Z
- a:isInLibrary(com.intellij.openapi.vfs.VirtualFile):Z
- a:isInLibraryClasses(com.intellij.openapi.vfs.VirtualFile):Z
- a:isInLibrarySource(com.intellij.openapi.vfs.VirtualFile):Z
- a:isInSource(com.intellij.openapi.vfs.VirtualFile):Z
- a:isInSourceContent(com.intellij.openapi.vfs.VirtualFile):Z
- a:isUnderIgnored(com.intellij.openapi.vfs.VirtualFile):Z
- a:isValidAncestor(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):Z
a:com.intellij.openapi.roots.ProjectRootModificationTracker
- com.intellij.openapi.util.ModificationTracker
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.roots.ProjectRootModificationTracker
com.intellij.openapi.startup.ProjectActivity
- a:execute(com.intellij.openapi.project.Project,kotlin.coroutines.Continuation):java.lang.Object
com.intellij.openapi.startup.StartupActivity
- sf:Companion:com.intellij.openapi.startup.StartupActivity$Companion
- a:runActivity(com.intellij.openapi.project.Project):V
com.intellij.openapi.startup.StartupActivity$Background
- com.intellij.openapi.project.DumbAware
- com.intellij.openapi.startup.StartupActivity
f:com.intellij.openapi.startup.StartupActivity$Companion
com.intellij.openapi.startup.StartupActivity$DumbAware
- com.intellij.openapi.project.DumbAware
- com.intellij.openapi.startup.StartupActivity
com.intellij.openapi.startup.StartupActivity$RequiredForSmartMode
- com.intellij.openapi.startup.StartupActivity
a:com.intellij.openapi.startup.StartupManager
- <init>():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.startup.StartupManager
- a:postStartupActivityPassed():Z
- a:registerPostStartupActivity(java.lang.Runnable):V
- a:runWhenProjectIsInitialized(java.lang.Runnable):V
com.intellij.openapi.ui.ComponentContainer
- com.intellij.openapi.Disposable
- a:getComponent():javax.swing.JComponent
- a:getPreferredFocusableComponent():javax.swing.JComponent
com.intellij.openapi.ui.Queryable
- a:putInfo(java.util.Map):V
com.intellij.openapi.ui.Queryable$Contributor
- a:apply(java.util.Map):V
f:com.intellij.openapi.ui.Queryable$PrintInfo
- <init>():V
- <init>(java.lang.String[]):V
- <init>(java.lang.String[],java.lang.String[]):V
f:com.intellij.openapi.ui.Queryable$Util
- <init>():V
- s:print(com.intellij.openapi.ui.Queryable,com.intellij.openapi.ui.Queryable$PrintInfo):java.lang.String
- s:print(com.intellij.openapi.ui.Queryable,com.intellij.openapi.ui.Queryable$PrintInfo,com.intellij.openapi.ui.Queryable$Contributor):java.lang.String
c:com.intellij.openapi.util.ActionCallback
- com.intellij.openapi.Disposable
- sf:DONE:com.intellij.openapi.util.ActionCallback
- sf:REJECTED:com.intellij.openapi.util.ActionCallback
- p:myError:java.lang.String
- <init>():V
- <init>(I):V
- <init>(java.lang.String):V
- <init>(java.lang.String,I):V
- createSetDoneRunnable():java.lang.Runnable
- dispose():V
- f:doWhenDone(java.lang.Runnable):com.intellij.openapi.util.ActionCallback
- f:doWhenProcessed(java.lang.Runnable):com.intellij.openapi.util.ActionCallback
- f:doWhenRejected(java.lang.Runnable):com.intellij.openapi.util.ActionCallback
- f:doWhenRejected(java.util.function.Consumer):com.intellij.openapi.util.ActionCallback
- getError():java.lang.String
- isDone():Z
- isProcessed():Z
- isRejected():Z
- notify(com.intellij.openapi.util.ActionCallback):com.intellij.openapi.util.ActionCallback
- f:notifyWhenDone(com.intellij.openapi.util.ActionCallback):com.intellij.openapi.util.ActionCallback
- f:notifyWhenRejected(com.intellij.openapi.util.ActionCallback):com.intellij.openapi.util.ActionCallback
- f:processOnDone(java.lang.Runnable,Z):V
- reject(java.lang.String):com.intellij.openapi.util.ActionCallback
- setDone():V
- setRejected():V
- waitFor(J):Z
c:com.intellij.openapi.util.ActionCallback$Chunk
- <init>():V
- add(com.intellij.openapi.util.ActionCallback):V
- create():com.intellij.openapi.util.ActionCallback
- getSize():I
- getWhenProcessed():com.intellij.openapi.util.ActionCallback
- isEmpty():Z
c:com.intellij.openapi.util.ActionCallback$Done
- com.intellij.openapi.util.ActionCallback
- <init>():V
c:com.intellij.openapi.util.ActionCallback$Rejected
- com.intellij.openapi.util.ActionCallback
- <init>():V
f:com.intellij.openapi.util.BuildNumber
- java.lang.Comparable
- sf:SNAPSHOT_VALUE:I
- <init>(java.lang.String,I,I):V
- <init>(java.lang.String,I[]):V
- asString():java.lang.String
- asStringWithoutProductCode():java.lang.String
- asStringWithoutProductCodeAndSnapshot():java.lang.String
- compareTo(com.intellij.openapi.util.BuildNumber):I
- equals(java.lang.Object):Z
- s:fromPluginCompatibleBuild():com.intellij.openapi.util.BuildNumber
- s:fromString(java.lang.String):com.intellij.openapi.util.BuildNumber
- s:fromString(java.lang.String,java.lang.String,java.lang.String):com.intellij.openapi.util.BuildNumber
- s:fromStringOrNull(java.lang.String):com.intellij.openapi.util.BuildNumber
- s:fromStringWithProductCode(java.lang.String,java.lang.String):com.intellij.openapi.util.BuildNumber
- getBaselineVersion():I
- getComponents():I[]
- getProductCode():java.lang.String
- hashCode():I
- isSnapshot():Z
- withoutProductCode():com.intellij.openapi.util.BuildNumber
c:com.intellij.openapi.util.BuildRange
- <init>(com.intellij.openapi.util.BuildNumber,com.intellij.openapi.util.BuildNumber):V
- s:fromStrings(java.lang.String,java.lang.String):com.intellij.openapi.util.BuildRange
- inRange(com.intellij.openapi.util.BuildNumber):Z
c:com.intellij.openapi.util.ClassExtension
- com.intellij.openapi.util.KeyedExtensionCollector
- <init>(java.lang.String):V
- pf:buildExtensions(java.lang.String,java.lang.Class):java.util.List
- f:forClass(java.lang.Class):java.lang.Object
- pf:invalidateCacheForExtension(java.lang.String):V
- pf:keyToString(java.lang.Class):java.lang.String
f:com.intellij.openapi.util.ClassExtensionPoint
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- com.intellij.util.KeyedLazyInstance
- implementationClass:java.lang.String
- psiElementClass:java.lang.String
- <init>():V
- getKey():java.lang.String
c:com.intellij.openapi.util.CompositeModificationTracker
- com.intellij.openapi.util.SimpleModificationTracker
- <init>(com.intellij.openapi.util.ModificationTracker):V
- getModificationCount():J
f:com.intellij.openapi.util.CoroutinesKt
- sf:await(com.intellij.openapi.util.ActionCallback,kotlin.coroutines.Continuation):java.lang.Object
c:com.intellij.openapi.util.KeyedExtensionCollector
- com.intellij.openapi.util.ModificationTracker
- pf:lock:java.lang.String
- pf:myEpListenerAdded:java.util.concurrent.atomic.AtomicBoolean
- <init>(com.intellij.openapi.extensions.ExtensionPointName):V
- <init>(java.lang.String):V
- addExplicitExtension(java.lang.Object,java.lang.Object):V
- addExplicitExtension(java.lang.Object,java.lang.Object,com.intellij.openapi.Disposable):V
- p:buildExtensions(java.lang.String,java.lang.Object):java.util.List
- pf:buildExtensions(java.util.Set):java.util.List
- pf:buildExtensionsFromExplicitRegistration(java.util.function.Predicate):java.util.List
- clearCache():V
- p:ensureValuesLoaded():V
- f:findSingle(java.lang.Object):java.lang.Object
- f:forKey(java.lang.Object):java.util.List
- pf:getExtensions():java.util.List
- getModificationCount():J
- getName():java.lang.String
- hasAnyExtensions():Z
- s:instantiate(com.intellij.util.KeyedLazyInstance):java.lang.Object
- p:invalidateCacheForExtension(java.lang.String):V
- p:keyToString(java.lang.Object):java.lang.String
- removeExplicitExtension(java.lang.Object,java.lang.Object):V
a:com.intellij.openapi.util.KeyedExtensionFactory
- <init>(java.lang.Class,com.intellij.openapi.extensions.ExtensionPointName,com.intellij.openapi.components.ComponentManager):V
- s:findByKey(java.lang.String,com.intellij.openapi.extensions.ExtensionPointName,com.intellij.openapi.components.ComponentManager):java.lang.Object
- get():java.lang.Object
- getByKey(java.lang.Object):java.lang.Object
- a:getKey(java.lang.Object):java.lang.String
c:com.intellij.openapi.util.SimpleModificationTracker
- com.intellij.openapi.util.ModificationTracker
- <init>():V
- getModificationCount():J
- incModificationCount():V
com.intellij.openapi.util.registry.RegistryManager
- sf:Companion:com.intellij.openapi.util.registry.RegistryManager$Companion
- a:get(java.lang.String):com.intellij.openapi.util.registry.RegistryValue
- s:getInstance():com.intellij.openapi.util.registry.RegistryManager
- a:intValue(java.lang.String):I
- a:intValue(java.lang.String,I):I
- a:is(java.lang.String):Z
- a:resetValueChangeListener():V
- a:stringValue(java.lang.String):java.lang.String
f:com.intellij.openapi.util.registry.RegistryManager$Companion
- f:getInstance():com.intellij.openapi.util.registry.RegistryManager
- f:getInstanceAsync(kotlin.coroutines.Continuation):java.lang.Object
com.intellij.openapi.vfs.AsyncFileListener
- a:prepareChange(java.util.List):com.intellij.openapi.vfs.AsyncFileListener$ChangeApplier
com.intellij.openapi.vfs.AsyncFileListener$ChangeApplier
- afterVfsChange():V
- beforeVfsChange():V
a:com.intellij.openapi.vfs.DeprecatedVirtualFileSystem
- com.intellij.openapi.vfs.VirtualFileSystem
- <init>():V
- addVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- p:assertWriteAccessAllowed():V
- copyFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildDirectory(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- p:deleteFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- p:fireBeforeContentsChange(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- p:fireBeforeFileDeletion(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- p:fireBeforeFileMovement(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- p:fireBeforePropertyChange(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.Object,java.lang.Object):V
- p:fireContentsChanged(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,J):V
- p:fireFileCopied(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- p:fireFileCreated(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- p:fireFileDeleted(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String,com.intellij.openapi.vfs.VirtualFile):V
- p:fireFileMoved(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- p:firePropertyChanged(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.Object,java.lang.Object):V
- isReadOnly():Z
- p:moveFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- removeVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- p:renameFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- p:startEventPropagation():V
c:com.intellij.openapi.vfs.InvalidVirtualFileAccessException
- java.lang.RuntimeException
- <init>(com.intellij.openapi.vfs.VirtualFile):V
- <init>(java.lang.String):V
com.intellij.openapi.vfs.LocalFileProvider
com.intellij.openapi.vfs.NonPhysicalFileSystem
f:com.intellij.openapi.vfs.PersistentFSConstants
- s:getMaxIntellisenseFileSize():I
- s:setMaxIntellisenseFileSize(I):V
a:com.intellij.openapi.vfs.ReadonlyStatusHandler
- <init>():V
- s:ensureDocumentWritable(com.intellij.openapi.project.Project,com.intellij.openapi.editor.Document):Z
- s:ensureFilesWritable(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile[]):Z
- a:ensureFilesWritable(java.util.Collection):com.intellij.openapi.vfs.ReadonlyStatusHandler$OperationStatus
- ensureFilesWritable(com.intellij.openapi.vfs.VirtualFile[]):com.intellij.openapi.vfs.ReadonlyStatusHandler$OperationStatus
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vfs.ReadonlyStatusHandler
a:com.intellij.openapi.vfs.ReadonlyStatusHandler$OperationStatus
- <init>():V
- getHyperlinkListener():javax.swing.event.HyperlinkListener
- a:getReadonlyFiles():com.intellij.openapi.vfs.VirtualFile[]
- a:getReadonlyFilesMessage():java.lang.String
- a:hasReadonlyFiles():Z
c:com.intellij.openapi.vfs.ReadonlyStatusHandlerBase
- com.intellij.openapi.vfs.ReadonlyStatusHandler
- <init>(com.intellij.openapi.project.Project):V
- ps:createResultStatus(java.util.Collection,java.util.Collection):com.intellij.openapi.vfs.ReadonlyStatusHandler$OperationStatus
- ensureFilesWritable(java.util.Collection):com.intellij.openapi.vfs.ReadonlyStatusHandler$OperationStatus
- p:ensureFilesWritable(java.util.Collection,java.util.Collection):com.intellij.openapi.vfs.ReadonlyStatusHandler$OperationStatus
f:com.intellij.openapi.vfs.ReadonlyStatusHandlerBase$OperationStatusImpl
- com.intellij.openapi.vfs.ReadonlyStatusHandler$OperationStatus
- <init>(com.intellij.openapi.vfs.VirtualFile[]):V
- getHyperlinkListener():javax.swing.event.HyperlinkListener
- getReadonlyFiles():com.intellij.openapi.vfs.VirtualFile[]
- getReadonlyFilesMessage():java.lang.String
- hasReadonlyFiles():Z
com.intellij.openapi.vfs.SavingRequestor
f:com.intellij.openapi.vfs.StandardFileSystems
- sf:FILE_PROTOCOL:java.lang.String
- sf:FILE_PROTOCOL_PREFIX:java.lang.String
- sf:JAR_PROTOCOL:java.lang.String
- sf:JAR_PROTOCOL_PREFIX:java.lang.String
- sf:JRT_PROTOCOL:java.lang.String
- sf:JRT_PROTOCOL_PREFIX:java.lang.String
- <init>():V
- s:jar():com.intellij.openapi.vfs.VirtualFileSystem
- s:local():com.intellij.openapi.vfs.VirtualFileSystem
e:com.intellij.openapi.vfs.VFileProperty
- java.lang.Enum
- sf:HIDDEN:com.intellij.openapi.vfs.VFileProperty
- sf:SPECIAL:com.intellij.openapi.vfs.VFileProperty
- sf:SYMLINK:com.intellij.openapi.vfs.VFileProperty
- getName():java.lang.String
- s:valueOf(java.lang.String):com.intellij.openapi.vfs.VFileProperty
- s:values():com.intellij.openapi.vfs.VFileProperty[]
com.intellij.openapi.vfs.VersionManagingFileSystem
- a:getVersioningType(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VersionManagingFileSystem$VersioningType
- s:isDisabled(com.intellij.openapi.vfs.VirtualFile):Z
- s:isEnforcedNonLocal(com.intellij.openapi.vfs.VirtualFile):Z
e:com.intellij.openapi.vfs.VersionManagingFileSystem$VersioningType
- java.lang.Enum
- sf:DISABLED:com.intellij.openapi.vfs.VersionManagingFileSystem$VersioningType
- sf:ENFORCED_NON_LOCAL:com.intellij.openapi.vfs.VersionManagingFileSystem$VersioningType
- sf:LOCAL:com.intellij.openapi.vfs.VersionManagingFileSystem$VersioningType
- s:valueOf(java.lang.String):com.intellij.openapi.vfs.VersionManagingFileSystem$VersioningType
- s:values():com.intellij.openapi.vfs.VersionManagingFileSystem$VersioningType[]
c:com.intellij.openapi.vfs.VfsUtilCore
- sf:VFS_SEPARATOR:java.lang.String
- sf:VFS_SEPARATOR_CHAR:C
- <init>():V
- s:byteStreamSkippingBOM(B[],com.intellij.openapi.vfs.VirtualFile):java.io.InputStream
- s:compareByPath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):I
- s:convertFromUrl(java.net.URL):java.lang.String
- s:convertToURL(java.lang.String):java.net.URL
- s:copyFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:copyFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- s:createCompactVirtualFileSet():com.intellij.openapi.vfs.VirtualFileSet
- s:createCompactVirtualFileSet(java.util.Collection):com.intellij.openapi.vfs.VirtualFileSet
- s:fileToUrl(java.io.File):java.lang.String
- s:findContainingDirectory(com.intellij.openapi.vfs.VirtualFile,java.lang.CharSequence):com.intellij.openapi.vfs.VirtualFile
- s:findRelativeFile(java.lang.String,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:findRelativePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,C):java.lang.String
- s:fixIDEAUrl(java.lang.String):java.lang.String
- s:fixURLforIDEA(java.lang.String):java.lang.String
- s:getCommonAncestor(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:getRelativeLocation(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:getRelativePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:getRelativePath(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,C):java.lang.String
- s:getRootFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:getVirtualFileForJar(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- s:hasInvalidFiles(java.lang.Iterable):Z
- s:inputStreamSkippingBOM(java.io.InputStream,com.intellij.openapi.vfs.VirtualFile):java.io.InputStream
- s:isAncestor(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,Z):Z
- s:isAncestor(java.io.File,java.io.File,Z):Z
- s:isBrokenLink(com.intellij.openapi.vfs.VirtualFile):Z
- s:isEqualOrAncestor(java.lang.String,java.lang.String):Z
- s:isInvalidLink(com.intellij.openapi.vfs.VirtualFile):Z
- s:isUnder(com.intellij.openapi.vfs.VirtualFile,java.util.Set):Z
- s:isUnder(java.lang.String,java.util.Collection):Z
- s:isUnderFiles(com.intellij.openapi.vfs.VirtualFile,java.util.Collection):Z
- s:iterateChildrenRecursively(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFileFilter,com.intellij.openapi.roots.ContentIterator):Z
- s:iterateChildrenRecursively(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFileFilter,com.intellij.openapi.roots.ContentIterator,com.intellij.openapi.vfs.VirtualFileVisitor$Option[]):Z
- s:loadBytes(com.intellij.openapi.vfs.VirtualFile):B[]
- s:loadNBytes(com.intellij.openapi.vfs.VirtualFile,I):B[]
- s:loadText(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:loadText(com.intellij.openapi.vfs.VirtualFile,I):java.lang.String
- s:outputStreamAddingBOM(java.io.OutputStream,com.intellij.openapi.vfs.VirtualFile):java.io.OutputStream
- s:pathToUrl(java.lang.String):java.lang.String
- s:processFilesRecursively(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Processor):Z
- s:saveText(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
- s:toIdeaUrl(java.lang.String):java.lang.String
- s:toIdeaUrl(java.lang.String,Z):java.lang.String
- s:toVirtualFileArray(java.util.Collection):com.intellij.openapi.vfs.VirtualFile[]
- s:urlToPath(java.lang.String):java.lang.String
- s:virtualToIoFile(com.intellij.openapi.vfs.VirtualFile):java.io.File
- s:virtualToIoFiles(java.util.Collection):java.util.List
- s:visitChildrenRecursively(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFileVisitor):com.intellij.openapi.vfs.VirtualFileVisitor$Result
- s:visitChildrenRecursively(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFileVisitor,java.lang.Class):com.intellij.openapi.vfs.VirtualFileVisitor$Result
f:com.intellij.openapi.vfs.VfsUtilCore$DistinctVFilesRootsCollection
- com.intellij.util.containers.DistinctRootsCollection
- <init>(java.util.Collection):V
- <init>(com.intellij.openapi.vfs.VirtualFile[]):V
a:com.intellij.openapi.vfs.VirtualFile
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.openapi.util.ModificationTracker
- sf:ARRAY_FACTORY:com.intellij.util.ArrayFactory
- sf:EMPTY_ARRAY:com.intellij.openapi.vfs.VirtualFile[]
- sf:PROP_CHILDREN_CASE_SENSITIVITY:java.lang.String
- sf:PROP_ENCODING:java.lang.String
- sf:PROP_HIDDEN:java.lang.String
- sf:PROP_NAME:java.lang.String
- sf:PROP_SYMLINK_TARGET:java.lang.String
- sf:PROP_WRITABLE:java.lang.String
- p:<init>():V
- computeWithPreloadedContentHint(B[],java.util.function.Supplier):java.lang.Object
- a:contentsToByteArray():B[]
- contentsToByteArray(Z):B[]
- copy(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildData(java.lang.Object,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildDirectory(java.lang.Object,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- delete(java.lang.Object):V
- exists():Z
- findChild(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- findFileByRelativePath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- findOrCreateChildData(java.lang.Object,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- getBOM():B[]
- getCanonicalFile():com.intellij.openapi.vfs.VirtualFile
- getCanonicalPath():java.lang.String
- getCharset():java.nio.charset.Charset
- a:getChildren():com.intellij.openapi.vfs.VirtualFile[]
- getDetectedLineSeparator():java.lang.String
- getExtension():java.lang.String
- a:getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getFileType():com.intellij.openapi.fileTypes.FileType
- a:getInputStream():java.io.InputStream
- a:getLength():J
- getModificationCount():J
- getModificationStamp():J
- a:getName():java.lang.String
- getNameSequence():java.lang.CharSequence
- getNameWithoutExtension():java.lang.String
- f:getOutputStream(java.lang.Object):java.io.OutputStream
- a:getOutputStream(java.lang.Object,J,J):java.io.OutputStream
- a:getParent():com.intellij.openapi.vfs.VirtualFile
- a:getPath():java.lang.String
- getPresentableName():java.lang.String
- f:getPresentableUrl():java.lang.String
- a:getTimeStamp():J
- getUrl():java.lang.String
- is(com.intellij.openapi.vfs.VFileProperty):Z
- isCharsetSet():Z
- a:isDirectory():Z
- isInLocalFileSystem():Z
- isRecursiveOrCircularSymlink():Z
- a:isValid():Z
- a:isWritable():Z
- move(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- p:nameEquals(java.lang.String):Z
- refresh(Z,Z):V
- a:refresh(Z,Z,java.lang.Runnable):V
- rename(java.lang.Object,java.lang.String):V
- setBOM(B[]):V
- f:setBinaryContent(B[]):V
- setBinaryContent(B[],J,J):V
- setBinaryContent(B[],J,J,java.lang.Object):V
- setCharset(java.nio.charset.Charset):V
- setCharset(java.nio.charset.Charset,java.lang.Runnable):V
- setCharset(java.nio.charset.Charset,java.lang.Runnable,Z):V
- setDetectedLineSeparator(java.lang.String):V
- setWritable(Z):V
- p:storeCharset(java.nio.charset.Charset):V
- toNioPath():java.nio.file.Path
@:com.intellij.openapi.vfs.VirtualFile$PropName
- java.lang.annotation.Annotation
a:com.intellij.openapi.vfs.VirtualFileAdapter
- com.intellij.openapi.vfs.VirtualFileListener
- <init>():V
a:com.intellij.openapi.vfs.VirtualFileContentsChangedAdapter
- com.intellij.openapi.vfs.VirtualFileListener
- <init>():V
- beforeContentsChange(com.intellij.openapi.vfs.VirtualFileEvent):V
- beforeFileDeletion(com.intellij.openapi.vfs.VirtualFileEvent):V
- beforeFileMovement(com.intellij.openapi.vfs.VirtualFileMoveEvent):V
- contentsChanged(com.intellij.openapi.vfs.VirtualFileEvent):V
- fileCopied(com.intellij.openapi.vfs.VirtualFileCopyEvent):V
- fileCreated(com.intellij.openapi.vfs.VirtualFileEvent):V
- fileDeleted(com.intellij.openapi.vfs.VirtualFileEvent):V
- fileMoved(com.intellij.openapi.vfs.VirtualFileMoveEvent):V
- pa:onBeforeFileChange(com.intellij.openapi.vfs.VirtualFile):V
- pa:onFileChange(com.intellij.openapi.vfs.VirtualFile):V
c:com.intellij.openapi.vfs.VirtualFileCopyEvent
- com.intellij.openapi.vfs.VirtualFileEvent
- <init>(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- getOriginalFile():com.intellij.openapi.vfs.VirtualFile
c:com.intellij.openapi.vfs.VirtualFileEvent
- java.util.EventObject
- <init>(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,J,J):V
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFileName():java.lang.String
- getNewModificationStamp():J
- getOldModificationStamp():J
- getParent():com.intellij.openapi.vfs.VirtualFile
- getRequestor():java.lang.Object
- isFromRefresh():Z
- isFromSave():Z
com.intellij.openapi.vfs.VirtualFileFilter
- sf:ALL:com.intellij.openapi.vfs.VirtualFileFilter
- sf:NONE:com.intellij.openapi.vfs.VirtualFileFilter
- a:accept(com.intellij.openapi.vfs.VirtualFile):Z
- and(com.intellij.openapi.vfs.VirtualFileFilter):com.intellij.openapi.vfs.VirtualFileFilter
com.intellij.openapi.vfs.VirtualFileListener
- java.util.EventListener
- beforeContentsChange(com.intellij.openapi.vfs.VirtualFileEvent):V
- beforeFileDeletion(com.intellij.openapi.vfs.VirtualFileEvent):V
- beforeFileMovement(com.intellij.openapi.vfs.VirtualFileMoveEvent):V
- beforePropertyChange(com.intellij.openapi.vfs.VirtualFilePropertyEvent):V
- contentsChanged(com.intellij.openapi.vfs.VirtualFileEvent):V
- fileCopied(com.intellij.openapi.vfs.VirtualFileCopyEvent):V
- fileCreated(com.intellij.openapi.vfs.VirtualFileEvent):V
- fileDeleted(com.intellij.openapi.vfs.VirtualFileEvent):V
- fileMoved(com.intellij.openapi.vfs.VirtualFileMoveEvent):V
- propertyChanged(com.intellij.openapi.vfs.VirtualFilePropertyEvent):V
a:com.intellij.openapi.vfs.VirtualFileManager
- com.intellij.openapi.util.ModificationTracker
- sf:VFS_CHANGES:com.intellij.util.messages.Topic
- sf:VFS_STRUCTURE_MODIFICATIONS:com.intellij.openapi.util.ModificationTracker
- <init>():V
- a:addAsyncFileListener(com.intellij.openapi.vfs.AsyncFileListener,com.intellij.openapi.Disposable):V
- a:addVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- a:addVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener,com.intellij.openapi.Disposable):V
- a:addVirtualFileManagerListener(com.intellij.openapi.vfs.VirtualFileManagerListener,com.intellij.openapi.Disposable):V
- f:asyncRefresh():J
- a:asyncRefresh(java.lang.Runnable):J
- s:constructUrl(java.lang.String,java.lang.String):java.lang.String
- s:extractPath(java.lang.String):java.lang.String
- s:extractProtocol(java.lang.String):java.lang.String
- findFileByNioPath(java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- findFileByUrl(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:getFileSystem(java.lang.String):com.intellij.openapi.vfs.VirtualFileSystem
- s:getInstance():com.intellij.openapi.vfs.VirtualFileManager
- a:getModificationCount():J
- a:getStructureModificationCount():J
- a:notifyPropertyChanged(com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.Object,java.lang.Object):V
- refreshAndFindFileByNioPath(java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- refreshAndFindFileByUrl(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:refreshWithoutFileWatcher(Z):V
- a:removeVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- a:removeVirtualFileManagerListener(com.intellij.openapi.vfs.VirtualFileManagerListener):V
- a:syncRefresh():J
com.intellij.openapi.vfs.VirtualFileManagerListener
- java.util.EventListener
- sf:TOPIC:com.intellij.util.messages.Topic
- afterRefreshFinish(Z):V
- beforeRefreshStart(Z):V
c:com.intellij.openapi.vfs.VirtualFileMoveEvent
- com.intellij.openapi.vfs.VirtualFileEvent
- <init>(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- getNewParent():com.intellij.openapi.vfs.VirtualFile
- getOldParent():com.intellij.openapi.vfs.VirtualFile
com.intellij.openapi.vfs.VirtualFilePathWrapper
- a:enforcePresentableName():Z
- a:getPresentablePath():java.lang.String
c:com.intellij.openapi.vfs.VirtualFilePropertyEvent
- com.intellij.openapi.vfs.VirtualFileEvent
- <init>(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.Object,java.lang.Object):V
- getNewValue():java.lang.Object
- getOldValue():java.lang.Object
- getPropertyName():java.lang.String
com.intellij.openapi.vfs.VirtualFileSet
- java.util.Set
- a:freeze():V
- a:freezed():java.util.Set
- a:process(com.intellij.util.Processor):Z
a:com.intellij.openapi.vfs.VirtualFileSystem
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- p:<init>():V
- a:addVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- f:addVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener,com.intellij.openapi.Disposable):V
- pa:copyFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- pa:createChildDirectory(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- pa:createChildFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- pa:deleteFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- extractPresentableUrl(java.lang.String):java.lang.String
- a:findFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- getNioPath(com.intellij.openapi.vfs.VirtualFile):java.nio.file.Path
- a:getProtocol():java.lang.String
- isCaseSensitive():Z
- a:isReadOnly():Z
- isValidName(java.lang.String):Z
- pa:moveFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):V
- a:refresh(Z):V
- a:refreshAndFindFileByPath(java.lang.String):com.intellij.openapi.vfs.VirtualFile
- a:removeVirtualFileListener(com.intellij.openapi.vfs.VirtualFileListener):V
- pa:renameFile(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
f:com.intellij.openapi.vfs.VirtualFileUtil
- sf:findDirectory(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- sf:findDocument(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.editor.Document
- sf:findFile(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- sf:findFileOrDirectory(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- sf:findOrCreateDirectory(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- sf:findOrCreateFile(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- sf:findPsiFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.psi.PsiFile
- sf:isFile(com.intellij.openapi.vfs.VirtualFile):Z
- sf:isTooLarge(com.intellij.openapi.vfs.VirtualFile):Z
- sf:isTooLargeForIntellijSense(com.intellij.openapi.vfs.VirtualFile):Z
- sf:originalFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- sf:originalFileOrSelf(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- sf:readBytes(com.intellij.openapi.vfs.VirtualFile):B[]
- sf:readText(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- sf:refreshAndFindVirtualDirectory(java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- sf:refreshAndFindVirtualFile(java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- sf:refreshAndFindVirtualFileOrDirectory(java.nio.file.Path):com.intellij.openapi.vfs.VirtualFile
- sf:resolveFromRootOrRelative(com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- sf:toNioPathOrNull(com.intellij.openapi.vfs.VirtualFile):java.nio.file.Path
- sf:validOrNull(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- sf:writeBytes(com.intellij.openapi.vfs.VirtualFile,B[]):V
- sf:writeText(com.intellij.openapi.vfs.VirtualFile,java.lang.String):V
a:com.intellij.openapi.vfs.VirtualFileVisitor
- sf:CONTINUE:com.intellij.openapi.vfs.VirtualFileVisitor$Result
- sf:NO_FOLLOW_SYMLINKS:com.intellij.openapi.vfs.VirtualFileVisitor$Option
- sf:ONE_LEVEL_DEEP:com.intellij.openapi.vfs.VirtualFileVisitor$Option
- sf:SKIP_CHILDREN:com.intellij.openapi.vfs.VirtualFileVisitor$Result
- sf:SKIP_ROOT:com.intellij.openapi.vfs.VirtualFileVisitor$Option
- p:<init>(com.intellij.openapi.vfs.VirtualFileVisitor$Option[]):V
- afterChildrenVisited(com.intellij.openapi.vfs.VirtualFile):V
- getChildrenIterable(com.intellij.openapi.vfs.VirtualFile):java.lang.Iterable
- f:getCurrentValue():java.lang.Object
- s:limit(I):com.intellij.openapi.vfs.VirtualFileVisitor$Option
- f:setValueForChildren(java.lang.Object):V
- s:skipTo(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFileVisitor$Result
- visitFile(com.intellij.openapi.vfs.VirtualFile):Z
- visitFileEx(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFileVisitor$Result
c:com.intellij.openapi.vfs.VirtualFileVisitor$Option
f:com.intellij.openapi.vfs.VirtualFileVisitor$Result
- f:skipChildren:Z
- f:skipToParent:com.intellij.openapi.vfs.VirtualFile
pc:com.intellij.openapi.vfs.VirtualFileVisitor$VisitorException
- java.lang.RuntimeException
- <init>(java.lang.Throwable):V
com.intellij.openapi.vfs.VirtualFileWithId
- a:getId():I
com.intellij.openapi.vfs.VirtualFileWithoutContent
a:com.intellij.openapi.vfs.WritingAccessProvider
- sf:EP:com.intellij.openapi.extensions.ProjectExtensionPointName
- <init>():V
- getHyperlinkListener():javax.swing.event.HyperlinkListener
- getReadOnlyMessage():java.lang.String
- isPotentiallyWritable(com.intellij.openapi.vfs.VirtualFile):Z
- s:isPotentiallyWritable(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
- requestWriting(java.util.Collection):java.util.Collection
- requestWriting(com.intellij.openapi.vfs.VirtualFile[]):java.util.Collection
a:com.intellij.openapi.vfs.encoding.EncodingManager
- com.intellij.openapi.vfs.encoding.EncodingRegistry
- sf:PROP_DEFAULT_FILES_ENCODING:java.lang.String
- sf:PROP_NATIVE2ASCII_SWITCH:java.lang.String
- sf:PROP_PROPERTIES_FILES_ENCODING:java.lang.String
- <init>():V
- a:getCachedCharsetFromContent(com.intellij.openapi.editor.Document):java.nio.charset.Charset
- a:getDefaultCharsetForPropertiesFiles(com.intellij.openapi.vfs.VirtualFile):java.nio.charset.Charset
- a:getDefaultCharsetName():java.lang.String
- a:getDefaultConsoleEncoding():java.nio.charset.Charset
- a:getFavorites():java.util.Collection
- s:getInstance():com.intellij.openapi.vfs.encoding.EncodingManager
- a:isNative2AsciiForPropertiesFiles():Z
- a:setDefaultCharsetForPropertiesFiles(com.intellij.openapi.vfs.VirtualFile,java.nio.charset.Charset):V
- setDefaultCharsetName(java.lang.String):V
- a:setNative2AsciiForPropertiesFiles(com.intellij.openapi.vfs.VirtualFile,Z):V
- shouldAddBOMForNewUtf8File():Z
com.intellij.openapi.vfs.encoding.EncodingManagerListener
- sf:ENCODING_MANAGER_CHANGES:com.intellij.util.messages.Topic
- a:propertyChanged(com.intellij.openapi.editor.Document,java.lang.String,java.lang.Object,java.lang.Object):V
a:com.intellij.openapi.vfs.encoding.EncodingProjectManager
- com.intellij.openapi.vfs.encoding.EncodingManager
- <init>():V
- a:getDefaultCharset():java.nio.charset.Charset
- a:getDefaultCharsetName():java.lang.String
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.openapi.vfs.encoding.EncodingProjectManager
- a:setDefaultCharsetName(java.lang.String):V
f:com.intellij.openapi.vfs.encoding.EncodingReference
- sf:Companion:com.intellij.openapi.vfs.encoding.EncodingReference$Companion
- sf:DEFAULT:com.intellij.openapi.vfs.encoding.EncodingReference
- <init>(java.lang.String):V
- <init>(java.nio.charset.Charset):V
- f:component1():java.nio.charset.Charset
- f:copy(java.nio.charset.Charset):com.intellij.openapi.vfs.encoding.EncodingReference
- bs:copy$default(com.intellij.openapi.vfs.encoding.EncodingReference,java.nio.charset.Charset,I,java.lang.Object):com.intellij.openapi.vfs.encoding.EncodingReference
- f:dereference():java.nio.charset.Charset
- equals(java.lang.Object):Z
- f:getCharset():java.nio.charset.Charset
- hashCode():I
f:com.intellij.openapi.vfs.encoding.EncodingReference$Companion
a:com.intellij.openapi.vfs.encoding.EncodingRegistry
- <init>():V
- s:doActionAndRestoreEncoding(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.ThrowableComputable):com.intellij.openapi.vfs.VirtualFile
- a:getDefaultCharset():java.nio.charset.Charset
- getDefaultCharsetForPropertiesFiles(com.intellij.openapi.vfs.VirtualFile):java.nio.charset.Charset
- a:getDefaultConsoleEncoding():java.nio.charset.Charset
- a:getEncoding(com.intellij.openapi.vfs.VirtualFile,Z):java.nio.charset.Charset
- s:getInstance():com.intellij.openapi.vfs.encoding.EncodingRegistry
- a:isNative2Ascii(com.intellij.openapi.vfs.VirtualFile):Z
- a:isNative2AsciiForPropertiesFiles():Z
- a:setEncoding(com.intellij.openapi.vfs.VirtualFile,java.nio.charset.Charset):V
com.intellij.openapi.vfs.encoding.FileEncodingProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getEncoding(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):java.nio.charset.Charset
com.intellij.openapi.vfs.encoding.Utf8BomOptionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:shouldAddBOMForNewUtf8File(com.intellij.openapi.vfs.VirtualFile):Z
a:com.intellij.openapi.vfs.ex.http.HttpFileSystem
- com.intellij.openapi.vfs.DeprecatedVirtualFileSystem
- <init>():V
- a:addFileListener(com.intellij.openapi.vfs.ex.http.HttpVirtualFileListener):V
- a:addFileListener(com.intellij.openapi.vfs.ex.http.HttpVirtualFileListener,com.intellij.openapi.Disposable):V
- a:createChild(com.intellij.openapi.vfs.VirtualFile,java.lang.String,Z):com.intellij.openapi.vfs.VirtualFile
- s:getInstance():com.intellij.openapi.vfs.ex.http.HttpFileSystem
- a:isFileDownloaded(com.intellij.openapi.vfs.VirtualFile):Z
- a:removeFileListener(com.intellij.openapi.vfs.ex.http.HttpVirtualFileListener):V
com.intellij.openapi.vfs.ex.http.HttpVirtualFileListener
- java.util.EventListener
- a:fileDownloaded(com.intellij.openapi.vfs.VirtualFile):V
a:com.intellij.openapi.vfs.impl.ArchiveHandler
- sf:DEFAULT_LENGTH:J
- sf:DEFAULT_TIMESTAMP:J
- sf:DIRECTORY_ATTRIBUTES:com.intellij.openapi.util.io.FileAttributes
- p:<init>(java.lang.String):V
- clearCaches():V
- a:contentsToByteArray(java.lang.String):B[]
- pa:createEntriesMap():java.util.Map
- getAttributes(java.lang.String):com.intellij.openapi.util.io.FileAttributes
- p:getEntriesMap():java.util.Map
- getFile():java.io.File
- getInputStream(java.lang.String):java.io.InputStream
- getPath():java.nio.file.Path
- list(java.lang.String):java.lang.String[]
- p:normalizeName(java.lang.String):java.lang.String
- pf:processEntry(java.util.Map,com.intellij.openapi.diagnostic.Logger,java.lang.String,java.util.function.BiFunction):V
- pf:processEntry(java.util.Map,java.lang.String,java.util.function.BiFunction):V
c:com.intellij.openapi.vfs.impl.BulkVirtualFileListenerAdapter
- com.intellij.openapi.vfs.newvfs.BulkFileListener
- <init>(com.intellij.openapi.vfs.VirtualFileListener):V
- <init>(com.intellij.openapi.vfs.VirtualFileListener,com.intellij.openapi.vfs.VirtualFileSystem):V
- after(java.util.List):V
- before(java.util.List):V
- s:fireAfter(com.intellij.openapi.vfs.VirtualFileListener,com.intellij.openapi.vfs.newvfs.events.VFileEvent):V
- s:fireBefore(com.intellij.openapi.vfs.VirtualFileListener,com.intellij.openapi.vfs.newvfs.events.VFileEvent):V
a:com.intellij.openapi.vfs.impl.TempCopyArchiveHandler
- com.intellij.openapi.vfs.impl.ArchiveHandler
- p:<init>(java.lang.String):V
- clearCaches():V
- p:getTempCopy(com.intellij.openapi.util.ThrowableComputable):java.nio.file.Path
- pa:getTempDir():java.lang.String
com.intellij.openapi.vfs.newvfs.BulkFileListener
- after(java.util.List):V
- before(java.util.List):V
com.intellij.openapi.vfs.newvfs.CachingVirtualFileSystem
- a:refreshWithoutFileWatcher(Z):V
f:com.intellij.openapi.vfs.newvfs.events.VFileContentChangeEvent
- com.intellij.openapi.vfs.newvfs.events.VFileEvent
- <init>(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,J,J,Z):V
- equals(java.lang.Object):Z
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getModificationStamp():J
- getNewLength():J
- getNewTimestamp():J
- getOldLength():J
- getOldModificationStamp():J
- getOldTimestamp():J
- hashCode():I
- isLengthAndTimestampDiffProvided():Z
- isValid():Z
f:com.intellij.openapi.vfs.newvfs.events.VFileCopyEvent
- com.intellij.openapi.vfs.newvfs.events.VFileEvent
- equals(java.lang.Object):Z
- findCreatedFile():com.intellij.openapi.vfs.VirtualFile
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getNewChildName():java.lang.String
- getNewParent():com.intellij.openapi.vfs.VirtualFile
- hashCode():I
- isValid():Z
f:com.intellij.openapi.vfs.newvfs.events.VFileCreateEvent
- com.intellij.openapi.vfs.newvfs.events.VFileEvent
- equals(java.lang.Object):Z
- getAttributes():com.intellij.openapi.util.io.FileAttributes
- getChildName():java.lang.String
- getChildNameId():I
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getParent():com.intellij.openapi.vfs.VirtualFile
- getSymlinkTarget():java.lang.String
- hashCode():I
- isDirectory():Z
- isEmptyDirectory():Z
- isValid():Z
- resetCache():V
f:com.intellij.openapi.vfs.newvfs.events.VFileDeleteEvent
- com.intellij.openapi.vfs.newvfs.events.VFileEvent
- <init>(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,Z):V
- equals(java.lang.Object):Z
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- hashCode():I
- isValid():Z
a:com.intellij.openapi.vfs.newvfs.events.VFileEvent
- <init>(java.lang.Object):V
- pa:computePath():java.lang.String
- a:equals(java.lang.Object):Z
- a:getFile():com.intellij.openapi.vfs.VirtualFile
- a:getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getPath():java.lang.String
- getRequestor():java.lang.Object
- a:hashCode():I
- isFromRefresh():Z
- isFromSave():Z
- a:isValid():Z
f:com.intellij.openapi.vfs.newvfs.events.VFileMoveEvent
- com.intellij.openapi.vfs.newvfs.events.VFileEvent
- equals(java.lang.Object):Z
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getNewParent():com.intellij.openapi.vfs.VirtualFile
- getNewPath():java.lang.String
- getOldParent():com.intellij.openapi.vfs.VirtualFile
- getOldPath():java.lang.String
- getPath():java.lang.String
- hashCode():I
- isValid():Z
f:com.intellij.openapi.vfs.newvfs.events.VFilePropertyChangeEvent
- com.intellij.openapi.vfs.newvfs.events.VFileEvent
- <init>(java.lang.Object,com.intellij.openapi.vfs.VirtualFile,java.lang.String,java.lang.Object,java.lang.Object,Z):V
- s:checkPropertyValuesCorrect(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object):V
- equals(java.lang.Object):Z
- getFile():com.intellij.openapi.vfs.VirtualFile
- getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getNewPath():java.lang.String
- getNewValue():java.lang.Object
- getOldPath():java.lang.String
- getOldValue():java.lang.Object
- getPath():java.lang.String
- getPropertyName():java.lang.String
- hashCode():I
- isValid():Z
com.intellij.openapi.vfs.pointers.VirtualFilePointer
- sf:EMPTY_ARRAY:com.intellij.openapi.vfs.pointers.VirtualFilePointer[]
- a:getFile():com.intellij.openapi.vfs.VirtualFile
- a:getFileName():java.lang.String
- a:getPresentableUrl():java.lang.String
- a:getUrl():java.lang.String
- a:isValid():Z
com.intellij.openapi.vfs.pointers.VirtualFilePointerContainer
- a:add(com.intellij.openapi.vfs.VirtualFile):V
- a:add(java.lang.String):V
- a:addAll(com.intellij.openapi.vfs.pointers.VirtualFilePointerContainer):V
- a:addJarDirectory(java.lang.String,Z):V
- a:clear():V
- a:clone(com.intellij.openapi.Disposable):com.intellij.openapi.vfs.pointers.VirtualFilePointerContainer
- a:clone(com.intellij.openapi.Disposable,com.intellij.openapi.vfs.pointers.VirtualFilePointerListener):com.intellij.openapi.vfs.pointers.VirtualFilePointerContainer
- a:findByUrl(java.lang.String):com.intellij.openapi.vfs.pointers.VirtualFilePointer
- a:getDirectories():com.intellij.openapi.vfs.VirtualFile[]
- a:getFiles():com.intellij.openapi.vfs.VirtualFile[]
- a:getJarDirectories():java.util.List
- a:getList():java.util.List
- a:getUrls():java.lang.String[]
- a:isEmpty():Z
- a:killAll():V
- a:moveDown(java.lang.String):V
- a:moveUp(java.lang.String):V
- a:readExternal(org.jdom.Element,java.lang.String,Z):V
- a:remove(com.intellij.openapi.vfs.pointers.VirtualFilePointer):V
- a:removeJarDirectory(java.lang.String):Z
- a:size():I
- a:writeExternal(org.jdom.Element,java.lang.String,Z):V
com.intellij.openapi.vfs.pointers.VirtualFilePointerListener
- sf:TOPIC:com.intellij.util.messages.Topic
- beforeValidityChanged(com.intellij.openapi.vfs.pointers.VirtualFilePointer[]):V
- validityChanged(com.intellij.openapi.vfs.pointers.VirtualFilePointer[]):V
a:com.intellij.openapi.vfs.pointers.VirtualFilePointerManager
- com.intellij.openapi.util.SimpleModificationTracker
- <init>():V
- a:create(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.Disposable,com.intellij.openapi.vfs.pointers.VirtualFilePointerListener):com.intellij.openapi.vfs.pointers.VirtualFilePointer
- a:create(java.lang.String,com.intellij.openapi.Disposable,com.intellij.openapi.vfs.pointers.VirtualFilePointerListener):com.intellij.openapi.vfs.pointers.VirtualFilePointer
- a:createContainer(com.intellij.openapi.Disposable):com.intellij.openapi.vfs.pointers.VirtualFilePointerContainer
- a:createContainer(com.intellij.openapi.Disposable,com.intellij.openapi.vfs.pointers.VirtualFilePointerListener):com.intellij.openapi.vfs.pointers.VirtualFilePointerContainer
- a:createDirectoryPointer(java.lang.String,Z,com.intellij.openapi.Disposable,com.intellij.openapi.vfs.pointers.VirtualFilePointerListener):com.intellij.openapi.vfs.pointers.VirtualFilePointer
- a:duplicate(com.intellij.openapi.vfs.pointers.VirtualFilePointer,com.intellij.openapi.Disposable,com.intellij.openapi.vfs.pointers.VirtualFilePointerListener):com.intellij.openapi.vfs.pointers.VirtualFilePointer
- s:getInstance():com.intellij.openapi.vfs.pointers.VirtualFilePointerManager
c:com.intellij.patterns.CaseInsensitiveValuePatternCondition
- com.intellij.patterns.PatternCondition
- <init>(java.lang.String,java.lang.String[]):V
- accepts(java.lang.String,com.intellij.util.ProcessingContext):Z
- getValues():java.lang.String[]
c:com.intellij.patterns.CharPattern
- com.intellij.patterns.ObjectPattern
- p:<init>():V
- javaIdentifierPart():com.intellij.patterns.CharPattern
- s:javaIdentifierPartCharacter():com.intellij.patterns.CharPattern
- javaIdentifierStart():com.intellij.patterns.CharPattern
- s:javaIdentifierStartCharacter():com.intellij.patterns.CharPattern
- letterOrDigit():com.intellij.patterns.CharPattern
- s:letterOrDigitCharacter():com.intellij.patterns.CharPattern
- whitespace():com.intellij.patterns.CharPattern
- s:whitespaceCharacter():com.intellij.patterns.CharPattern
c:com.intellij.patterns.CollectionPattern
- com.intellij.patterns.ObjectPattern
- p:<init>():V
- all(com.intellij.patterns.ElementPattern):com.intellij.patterns.CollectionPattern
- atLeast(I):com.intellij.patterns.CollectionPattern
- atLeastOne(com.intellij.patterns.ElementPattern):com.intellij.patterns.CollectionPattern
- empty():com.intellij.patterns.CollectionPattern
- filter(com.intellij.patterns.ElementPattern,com.intellij.patterns.ElementPattern):com.intellij.patterns.CollectionPattern
- first(com.intellij.patterns.ElementPattern):com.intellij.patterns.CollectionPattern
- last(com.intellij.patterns.ElementPattern):com.intellij.patterns.CollectionPattern
- notEmpty():com.intellij.patterns.CollectionPattern
- size(I):com.intellij.patterns.CollectionPattern
com.intellij.patterns.ElementPattern
- a:accepts(java.lang.Object):Z
- a:accepts(java.lang.Object,com.intellij.util.ProcessingContext):Z
- a:getCondition():com.intellij.patterns.ElementPatternCondition
c:com.intellij.patterns.ElementPatternBean
- text:java.lang.String
- type:java.lang.String
- <init>():V
- compilePattern():com.intellij.patterns.ElementPattern
f:com.intellij.patterns.ElementPatternCondition
- <init>(com.intellij.patterns.InitialPatternCondition):V
- append(com.intellij.patterns.PatternCondition):com.intellij.patterns.ElementPatternCondition
- append(java.lang.StringBuilder,java.lang.String):V
- getConditions():java.util.List
- getInitialCondition():com.intellij.patterns.InitialPatternCondition
c:com.intellij.patterns.IElementTypePattern
- com.intellij.patterns.ObjectPattern
- p:<init>():V
- or(com.intellij.psi.tree.IElementType[]):com.intellij.patterns.IElementTypePattern
- tokenSet(com.intellij.psi.tree.TokenSet):com.intellij.patterns.IElementTypePattern
a:com.intellij.patterns.InitialPatternCondition
- p:<init>(java.lang.Class):V
- accepts(java.lang.Object,com.intellij.util.ProcessingContext):Z
- append(java.lang.StringBuilder,java.lang.String):V
- getAcceptedClass():java.lang.Class
a:com.intellij.patterns.InitialPatternConditionPlus
- com.intellij.patterns.InitialPatternCondition
- p:<init>(java.lang.Class):V
- a:getPatterns():java.util.List
a:com.intellij.patterns.ObjectPattern
- com.intellij.patterns.ElementPattern
- java.lang.Cloneable
- p:<init>(com.intellij.patterns.InitialPatternCondition):V
- p:<init>(java.lang.Class):V
- f:accepts(java.lang.Object):Z
- accepts(java.lang.Object,com.intellij.util.ProcessingContext):Z
- and(com.intellij.patterns.ElementPattern):com.intellij.patterns.ObjectPattern
- andNot(com.intellij.patterns.ElementPattern):com.intellij.patterns.ObjectPattern
- andOr(com.intellij.patterns.ElementPattern[]):com.intellij.patterns.ObjectPattern
- equalTo(java.lang.Object):com.intellij.patterns.ObjectPattern
- f:getCondition():com.intellij.patterns.ElementPatternCondition
- isNull():com.intellij.patterns.ObjectPattern
- notNull():com.intellij.patterns.ObjectPattern
- oneOf(java.util.Collection):com.intellij.patterns.ObjectPattern
- oneOf(java.lang.Object[]):com.intellij.patterns.ObjectPattern
- save(com.intellij.openapi.util.Key):com.intellij.patterns.ObjectPattern
- save(java.lang.String):com.intellij.patterns.ObjectPattern
- with(com.intellij.patterns.PatternCondition):com.intellij.patterns.ObjectPattern
- without(com.intellij.patterns.PatternCondition):com.intellij.patterns.ObjectPattern
f:com.intellij.patterns.ObjectPattern$Capture
- com.intellij.patterns.ObjectPattern
- <init>(com.intellij.patterns.InitialPatternCondition):V
- <init>(java.lang.Class):V
a:com.intellij.patterns.PatternCondition
- <init>(java.lang.String):V
- a:accepts(java.lang.Object,com.intellij.util.ProcessingContext):Z
- append(java.lang.StringBuilder,java.lang.String):V
- ps:appendArray(java.lang.StringBuilder,java.lang.String,java.lang.Object[]):V
- getDebugMethodName():java.lang.String
- processParameters(com.intellij.util.PairProcessor):Z
a:com.intellij.patterns.PatternConditionPlus
- com.intellij.patterns.PatternCondition
- com.intellij.util.PairProcessor
- <init>(java.lang.String,com.intellij.patterns.ElementPattern):V
- accepts(java.lang.Object,com.intellij.util.ProcessingContext):Z
- getValuePattern():com.intellij.patterns.ElementPattern
- f:process(java.lang.Object,com.intellij.util.ProcessingContext):Z
- a:processValues(java.lang.Object,com.intellij.util.ProcessingContext,com.intellij.util.PairProcessor):Z
c:com.intellij.patterns.PlatformPatterns
- com.intellij.patterns.StandardPatterns
- <init>():V
- s:elementType():com.intellij.patterns.IElementTypePattern
- s:pomElement(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern$Capture
- s:psiComment():com.intellij.patterns.PsiElementPattern$Capture
- s:psiElement():com.intellij.patterns.PsiElementPattern$Capture
- s:psiElement(com.intellij.psi.tree.IElementType):com.intellij.patterns.PsiElementPattern$Capture
- s:psiElement(java.lang.Class):com.intellij.patterns.PsiElementPattern$Capture
- s:psiFile():com.intellij.patterns.PsiFilePattern$Capture
- s:psiFile(java.lang.Class):com.intellij.patterns.PsiFilePattern$Capture
- s:virtualFile():com.intellij.patterns.VirtualFilePattern
a:com.intellij.patterns.PropertyPatternCondition
- com.intellij.patterns.PatternConditionPlus
- <init>(java.lang.String,com.intellij.patterns.ElementPattern):V
- a:getPropertyValue(java.lang.Object):java.lang.Object
- processValues(java.lang.Object,com.intellij.util.ProcessingContext,com.intellij.util.PairProcessor):Z
a:com.intellij.patterns.PsiElementPattern
- com.intellij.patterns.TreeElementPattern
- p:<init>(com.intellij.patterns.InitialPatternCondition):V
- p:<init>(java.lang.Class):V
- afterLeaf(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- afterLeaf(java.lang.String[]):com.intellij.patterns.PsiElementPattern
- afterLeafSkipping(com.intellij.patterns.ElementPattern,com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- atStartOf(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- beforeLeaf(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- beforeLeaf(java.lang.String[]):com.intellij.patterns.PsiElementPattern
- beforeLeafSkipping(com.intellij.patterns.ElementPattern,com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- compiled():com.intellij.patterns.PsiElementPattern
- equalTo(com.intellij.psi.PsiElement):com.intellij.patterns.PsiElementPattern
- p:getChildren(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement[]
- p:getParent(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- inFile(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- inVirtualFile(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- insideStarting(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- notEmpty():com.intellij.patterns.PsiElementPattern
- referencing(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- whitespace():com.intellij.patterns.PsiElementPattern
- whitespaceCommentEmptyOrError():com.intellij.patterns.PsiElementPattern
- whitespaceCommentOrError():com.intellij.patterns.PsiElementPattern
- withElementType(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- withElementType(com.intellij.psi.tree.IElementType):com.intellij.patterns.PsiElementPattern
- withElementType(com.intellij.psi.tree.TokenSet):com.intellij.patterns.PsiElementPattern
- withFirstNonWhitespaceChild(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- withLanguage(com.intellij.lang.Language):com.intellij.patterns.PsiElementPattern
- withLastChildSkipping(com.intellij.patterns.ElementPattern,com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- withMetaData(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- withName(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- withName(java.lang.String):com.intellij.patterns.PsiElementPattern
- withName(java.lang.String[]):com.intellij.patterns.PsiElementPattern
- withReference(java.lang.Class):com.intellij.patterns.PsiElementPattern
- withText(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- withText(java.lang.String):com.intellij.patterns.PsiElementPattern
- withTextLength(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- withTextLengthLongerThan(I):com.intellij.patterns.PsiElementPattern
- withTreeParent(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- withoutText(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiElementPattern
- withoutText(java.lang.String):com.intellij.patterns.PsiElementPattern
c:com.intellij.patterns.PsiElementPattern$Capture
- com.intellij.patterns.PsiElementPattern
- p:<init>(com.intellij.patterns.InitialPatternCondition):V
- p:<init>(java.lang.Class):V
c:com.intellij.patterns.PsiFilePattern
- com.intellij.patterns.PsiElementPattern
- p:<init>(com.intellij.patterns.InitialPatternCondition):V
- p:<init>(java.lang.Class):V
- withFileType(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiFilePattern
- withOriginalFile(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiFilePattern
- withParentDirectoryName(com.intellij.patterns.StringPattern):com.intellij.patterns.PsiFilePattern
- withVirtualFile(com.intellij.patterns.ElementPattern):com.intellij.patterns.PsiFilePattern
c:com.intellij.patterns.PsiFilePattern$Capture
- com.intellij.patterns.PsiFilePattern
- <init>(com.intellij.patterns.InitialPatternCondition):V
- p:<init>(java.lang.Class):V
c:com.intellij.patterns.PsiNamePatternCondition
- com.intellij.patterns.PropertyPatternCondition
- <init>(java.lang.String,com.intellij.patterns.ElementPattern):V
- getNamePattern():com.intellij.patterns.ElementPattern
- getPropertyValue(java.lang.Object):java.lang.String
c:com.intellij.patterns.StandardPatterns
- <init>():V
- s:alwaysFalse():com.intellij.patterns.ElementPattern
- s:and(com.intellij.patterns.ElementPattern[]):com.intellij.patterns.ElementPattern
- s:character():com.intellij.patterns.CharPattern
- s:collection():com.intellij.patterns.CollectionPattern
- s:collection(java.lang.Class):com.intellij.patterns.CollectionPattern
- s:get(java.lang.String):com.intellij.patterns.ElementPattern
- s:instanceOf(java.lang.Class):com.intellij.patterns.ObjectPattern$Capture
- s:instanceOf(java.lang.Class[]):com.intellij.patterns.ElementPattern
- s:not(com.intellij.patterns.ElementPattern):com.intellij.patterns.ObjectPattern$Capture
- s:object():com.intellij.patterns.ObjectPattern$Capture
- s:object(java.lang.Object):com.intellij.patterns.ObjectPattern$Capture
- s:optional(com.intellij.patterns.ElementPattern):com.intellij.patterns.ObjectPattern$Capture
- s:or(com.intellij.patterns.ElementPattern[]):com.intellij.patterns.ElementPattern
- s:save(com.intellij.openapi.util.Key):com.intellij.patterns.ElementPattern
- s:string():com.intellij.patterns.StringPattern
f:com.intellij.patterns.StringPattern
- com.intellij.patterns.ObjectPattern
- contains(com.intellij.patterns.ElementPattern):com.intellij.patterns.StringPattern
- contains(java.lang.String):com.intellij.patterns.StringPattern
- containsChars(java.lang.String):com.intellij.patterns.StringPattern
- endsWith(java.lang.String):com.intellij.patterns.StringPattern
- longerThan(I):com.intellij.patterns.StringPattern
- matches(java.lang.String):com.intellij.patterns.StringPattern
- s:newBombedCharSequence(java.lang.CharSequence):java.lang.CharSequence
- oneOf(java.util.Collection):com.intellij.patterns.StringPattern
- oneOf(java.lang.String[]):com.intellij.patterns.StringPattern
- oneOfIgnoreCase(java.lang.String[]):com.intellij.patterns.StringPattern
- shorterThan(I):com.intellij.patterns.StringPattern
- startsWith(java.lang.String):com.intellij.patterns.StringPattern
- withLength(I):com.intellij.patterns.StringPattern
a:com.intellij.patterns.TreeElementPattern
- com.intellij.patterns.ObjectPattern
- p:<init>(com.intellij.patterns.InitialPatternCondition):V
- p:<init>(java.lang.Class):V
- afterSibling(com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- afterSiblingSkipping(com.intellij.patterns.ElementPattern,com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- pa:getChildren(java.lang.Object):java.lang.Object[]
- pa:getParent(java.lang.Object):java.lang.Object
- inside(com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- inside(java.lang.Class):com.intellij.patterns.TreeElementPattern
- inside(Z,com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- inside(Z,com.intellij.patterns.ElementPattern,com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- f:insideSequence(Z,com.intellij.patterns.ElementPattern[]):com.intellij.patterns.TreeElementPattern
- isFirstAcceptedChild(com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- withAncestor(I,com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- withChild(com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- withChildren(com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- withFirstChild(com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- withLastChild(com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- withParent(com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- withParent(java.lang.Class):com.intellij.patterns.TreeElementPattern
- f:withParents(java.lang.Class[]):com.intellij.patterns.TreeElementPattern
- withSuperParent(I,com.intellij.patterns.ElementPattern):com.intellij.patterns.TreeElementPattern
- withSuperParent(I,java.lang.Class):com.intellij.patterns.TreeElementPattern
a:com.intellij.patterns.ValuePatternCondition
- com.intellij.patterns.PatternCondition
- p:<init>(java.lang.String):V
- a:getValues():java.util.Collection
c:com.intellij.patterns.VirtualFilePattern
- com.intellij.patterns.TreeElementPattern
- <init>():V
- p:getChildren(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile[]
- p:getParent(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- ofType(com.intellij.openapi.fileTypes.FileType):com.intellij.patterns.VirtualFilePattern
- withExtension(java.lang.String):com.intellij.patterns.VirtualFilePattern
- withExtension(java.lang.String[]):com.intellij.patterns.VirtualFilePattern
- withName(com.intellij.patterns.ElementPattern):com.intellij.patterns.VirtualFilePattern
- withName(java.lang.String):com.intellij.patterns.VirtualFilePattern
- withPath(com.intellij.patterns.ElementPattern):com.intellij.patterns.VirtualFilePattern
com.intellij.patterns.compiler.PatternCompiler
- a:compileElementPattern(java.lang.String):com.intellij.patterns.ElementPattern
- a:createElementPattern(java.lang.String,java.lang.String):com.intellij.patterns.ElementPattern
- a:dumpContextDeclarations():java.lang.String
a:com.intellij.patterns.compiler.PatternCompilerFactory
- <init>():V
- a:dropCache():V
- s:getFactory():com.intellij.patterns.compiler.PatternCompilerFactory
- a:getPatternClasses(java.lang.String):java.lang.Class[]
- getPatternCompiler(java.lang.String):com.intellij.patterns.compiler.PatternCompiler
- a:getPatternCompiler(java.lang.Class[]):com.intellij.patterns.compiler.PatternCompiler
com.intellij.pom.Navigatable
- sf:EMPTY_NAVIGATABLE_ARRAY:com.intellij.pom.Navigatable[]
- canNavigate():Z
- canNavigateToSource():Z
- navigate(Z):V
a:com.intellij.pom.PomDeclarationSearcher
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:findDeclarationsAt(com.intellij.psi.PsiElement,I,com.intellij.util.Consumer):V
a:com.intellij.pom.PomIconProvider
- com.intellij.ide.IconProvider
- <init>():V
- a:getIcon(com.intellij.pom.PomTarget,I):javax.swing.Icon
- getIcon(com.intellij.psi.PsiElement,I):javax.swing.Icon
f:com.intellij.pom.PomManager
- s:getModel(com.intellij.openapi.project.Project):com.intellij.pom.PomModel
com.intellij.pom.PomModel
- com.intellij.openapi.util.UserDataHolder
- a:addModelListener(com.intellij.pom.event.PomModelListener):V
- a:addModelListener(com.intellij.pom.event.PomModelListener,com.intellij.openapi.Disposable):V
- a:getModelAspect(java.lang.Class):com.intellij.pom.PomModelAspect
- a:removeModelListener(com.intellij.pom.event.PomModelListener):V
- a:runTransaction(com.intellij.pom.PomTransaction):V
com.intellij.pom.PomModelAspect
- a:update(com.intellij.pom.event.PomModelEvent):V
com.intellij.pom.PomNamedTarget
- com.intellij.pom.PomTarget
- sf:EMPTY_ARRAY:com.intellij.pom.PomNamedTarget[]
- a:getName():java.lang.String
com.intellij.pom.PomRenameableTarget
- com.intellij.pom.PomNamedTarget
- a:isWritable():Z
- a:setName(java.lang.String):java.lang.Object
com.intellij.pom.PomTarget
- com.intellij.pom.Navigatable
- sf:EMPTY_ARRAY:com.intellij.pom.PomTarget[]
- a:isValid():Z
com.intellij.pom.PomTargetPsiElement
- com.intellij.psi.PsiElement
- a:getTarget():com.intellij.pom.PomTarget
com.intellij.pom.PomTransaction
- a:getAccumulatedEvent():com.intellij.pom.event.PomModelEvent
- a:getChangeScope():com.intellij.psi.PsiElement
- a:run():V
com.intellij.pom.PsiDeclaredTarget
- com.intellij.psi.PsiTarget
- a:getNameIdentifierRange():com.intellij.openapi.util.TextRange
com.intellij.pom.StatePreservingNavigatable
- com.intellij.pom.Navigatable
- a:navigate(Z,Z):V
com.intellij.pom.event.PomChangeSet
- beforeNestedTransaction():V
- a:getAspect():com.intellij.pom.PomModelAspect
- a:merge(com.intellij.pom.event.PomChangeSet):V
c:com.intellij.pom.event.PomModelEvent
- java.util.EventObject
- beforeNestedTransaction():V
- getChangeSet(com.intellij.pom.PomModelAspect):com.intellij.pom.event.PomChangeSet
- getChangedAspects():java.util.Set
- getSource():com.intellij.pom.PomModel
- merge(com.intellij.pom.event.PomModelEvent):V
com.intellij.pom.event.PomModelListener
- java.util.EventListener
- a:isAspectChangeInteresting(com.intellij.pom.PomModelAspect):Z
- a:modelChanged(com.intellij.pom.event.PomModelEvent):V
a:com.intellij.pom.impl.PomTransactionBase
- com.intellij.pom.PomTransaction
- <init>(com.intellij.psi.PsiElement):V
- getAccumulatedEvent():com.intellij.pom.event.PomModelEvent
- getChangeScope():com.intellij.psi.PsiElement
- run():V
- a:runInner():com.intellij.pom.event.PomModelEvent
a:com.intellij.pom.references.PomService
- <init>():V
- s:convertToPsi(com.intellij.openapi.project.Project,com.intellij.pom.PomTarget):com.intellij.psi.PsiElement
- pa:convertToPsi(com.intellij.pom.PomTarget):com.intellij.psi.PsiElement
- s:convertToPsi(com.intellij.psi.PsiTarget):com.intellij.psi.PsiElement
a:com.intellij.psi.AbstractElementManipulator
- com.intellij.psi.ElementManipulator
- <init>():V
- getRangeInElement(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- handleContentChange(com.intellij.psi.PsiElement,java.lang.String):com.intellij.psi.PsiElement
com.intellij.psi.CommonClassNames
- sf:CLASS_FILE_EXTENSION:java.lang.String
- sf:DEFAULT_PACKAGE:java.lang.String
- sf:JAVA_IO_BYTE_ARRAY_OUTPUT_STREAM:java.lang.String
- sf:JAVA_IO_EXTERNALIZABLE:java.lang.String
- sf:JAVA_IO_FILE:java.lang.String
- sf:JAVA_IO_FILE_INPUT_STREAM:java.lang.String
- sf:JAVA_IO_FILE_OUTPUT_STREAM:java.lang.String
- sf:JAVA_IO_FILE_READER:java.lang.String
- sf:JAVA_IO_FILE_WRITER:java.lang.String
- sf:JAVA_IO_PRINT_STREAM:java.lang.String
- sf:JAVA_IO_PRINT_WRITER:java.lang.String
- sf:JAVA_IO_SERIAL:java.lang.String
- sf:JAVA_IO_SERIALIZABLE:java.lang.String
- sf:JAVA_LANG_ABSTRACT_STRING_BUILDER:java.lang.String
- sf:JAVA_LANG_ANNOTATION_ANNOTATION:java.lang.String
- sf:JAVA_LANG_ANNOTATION_INHERITED:java.lang.String
- sf:JAVA_LANG_ANNOTATION_REPEATABLE:java.lang.String
- sf:JAVA_LANG_ANNOTATION_RETENTION:java.lang.String
- sf:JAVA_LANG_ANNOTATION_TARGET:java.lang.String
- sf:JAVA_LANG_ASSERTION_ERROR:java.lang.String
- sf:JAVA_LANG_AUTO_CLOSEABLE:java.lang.String
- sf:JAVA_LANG_BOOLEAN:java.lang.String
- sf:JAVA_LANG_BYTE:java.lang.String
- sf:JAVA_LANG_CHARACTER:java.lang.String
- sf:JAVA_LANG_CHAR_SEQUENCE:java.lang.String
- sf:JAVA_LANG_CLASS:java.lang.String
- sf:JAVA_LANG_CLONEABLE:java.lang.String
- sf:JAVA_LANG_COMPARABLE:java.lang.String
- sf:JAVA_LANG_DEPRECATED:java.lang.String
- sf:JAVA_LANG_DOUBLE:java.lang.String
- sf:JAVA_LANG_ENUM:java.lang.String
- sf:JAVA_LANG_ERROR:java.lang.String
- sf:JAVA_LANG_EXCEPTION:java.lang.String
- sf:JAVA_LANG_FLOAT:java.lang.String
- sf:JAVA_LANG_FUNCTIONAL_INTERFACE:java.lang.String
- sf:JAVA_LANG_INTEGER:java.lang.String
- sf:JAVA_LANG_INVOKE_MH_POLYMORPHIC:java.lang.String
- sf:JAVA_LANG_ITERABLE:java.lang.String
- sf:JAVA_LANG_LONG:java.lang.String
- sf:JAVA_LANG_MATH:java.lang.String
- sf:JAVA_LANG_NULL_POINTER_EXCEPTION:java.lang.String
- sf:JAVA_LANG_NUMBER:java.lang.String
- sf:JAVA_LANG_OBJECT:java.lang.String
- sf:JAVA_LANG_OBJECT_SHORT:java.lang.String
- sf:JAVA_LANG_OVERRIDE:java.lang.String
- sf:JAVA_LANG_RECORD:java.lang.String
- sf:JAVA_LANG_REFLECT_ARRAY:java.lang.String
- sf:JAVA_LANG_RUNNABLE:java.lang.String
- sf:JAVA_LANG_RUNTIME_EXCEPTION:java.lang.String
- sf:JAVA_LANG_SAFE_VARARGS:java.lang.String
- sf:JAVA_LANG_SHORT:java.lang.String
- sf:JAVA_LANG_STRICT_MATH:java.lang.String
- sf:JAVA_LANG_STRING:java.lang.String
- sf:JAVA_LANG_STRING_BUFFER:java.lang.String
- sf:JAVA_LANG_STRING_BUILDER:java.lang.String
- sf:JAVA_LANG_STRING_SHORT:java.lang.String
- sf:JAVA_LANG_STRING_TEMPLATE:java.lang.String
- sf:JAVA_LANG_STRING_TEMPLATE_PROCESSOR:java.lang.String
- sf:JAVA_LANG_SYSTEM:java.lang.String
- sf:JAVA_LANG_THROWABLE:java.lang.String
- sf:JAVA_LANG_VOID:java.lang.String
- sf:JAVA_NET_URI:java.lang.String
- sf:JAVA_NET_URL:java.lang.String
- sf:JAVA_NIO_CHARSET_CHARSET:java.lang.String
- sf:JAVA_TIME_LOCAL_DATE:java.lang.String
- sf:JAVA_TIME_LOCAL_DATE_TIME:java.lang.String
- sf:JAVA_TIME_LOCAL_TIME:java.lang.String
- sf:JAVA_TIME_OFFSET_DATE_TIME:java.lang.String
- sf:JAVA_TIME_OFFSET_TIME:java.lang.String
- sf:JAVA_TIME_ZONED_DATE_TIME:java.lang.String
- sf:JAVA_UTIL_ARRAYS:java.lang.String
- sf:JAVA_UTIL_ARRAY_LIST:java.lang.String
- sf:JAVA_UTIL_CALENDAR:java.lang.String
- sf:JAVA_UTIL_COLLECTION:java.lang.String
- sf:JAVA_UTIL_COLLECTIONS:java.lang.String
- sf:JAVA_UTIL_COMPARATOR:java.lang.String
- sf:JAVA_UTIL_CONCURRENT_CALLABLE:java.lang.String
- sf:JAVA_UTIL_CONCURRENT_COMPLETABLE_FUTURE:java.lang.String
- sf:JAVA_UTIL_CONCURRENT_COMPLETION_STAGE:java.lang.String
- sf:JAVA_UTIL_CONCURRENT_FUTURE:java.lang.String
- sf:JAVA_UTIL_CONCURRENT_HASH_MAP:java.lang.String
- sf:JAVA_UTIL_DATE:java.lang.String
- sf:JAVA_UTIL_DICTIONARY:java.lang.String
- sf:JAVA_UTIL_FORMATTER:java.lang.String
- sf:JAVA_UTIL_FUNCTION_BI_FUNCTION:java.lang.String
- sf:JAVA_UTIL_FUNCTION_CONSUMER:java.lang.String
- sf:JAVA_UTIL_FUNCTION_FUNCTION:java.lang.String
- sf:JAVA_UTIL_FUNCTION_PREDICATE:java.lang.String
- sf:JAVA_UTIL_FUNCTION_SUPPLIER:java.lang.String
- sf:JAVA_UTIL_HASH_MAP:java.lang.String
- sf:JAVA_UTIL_HASH_SET:java.lang.String
- sf:JAVA_UTIL_ITERATOR:java.lang.String
- sf:JAVA_UTIL_LINKED_HASH_MAP:java.lang.String
- sf:JAVA_UTIL_LINKED_HASH_SET:java.lang.String
- sf:JAVA_UTIL_LINKED_LIST:java.lang.String
- sf:JAVA_UTIL_LIST:java.lang.String
- sf:JAVA_UTIL_MAP:java.lang.String
- sf:JAVA_UTIL_MAP_ENTRY:java.lang.String
- sf:JAVA_UTIL_NAVIGABLE_MAP:java.lang.String
- sf:JAVA_UTIL_NAVIGABLE_SET:java.lang.String
- sf:JAVA_UTIL_OBJECTS:java.lang.String
- sf:JAVA_UTIL_OPTIONAL:java.lang.String
- sf:JAVA_UTIL_PROPERTIES:java.lang.String
- sf:JAVA_UTIL_PROPERTY_RESOURCE_BUNDLE:java.lang.String
- sf:JAVA_UTIL_QUEUE:java.lang.String
- sf:JAVA_UTIL_SERVICE_LOADER:java.lang.String
- sf:JAVA_UTIL_SET:java.lang.String
- sf:JAVA_UTIL_SORTED_MAP:java.lang.String
- sf:JAVA_UTIL_SORTED_SET:java.lang.String
- sf:JAVA_UTIL_STACK:java.lang.String
- sf:JAVA_UTIL_STREAM_BASE_STREAM:java.lang.String
- sf:JAVA_UTIL_STREAM_COLLECTORS:java.lang.String
- sf:JAVA_UTIL_STREAM_DOUBLE_STREAM:java.lang.String
- sf:JAVA_UTIL_STREAM_INT_STREAM:java.lang.String
- sf:JAVA_UTIL_STREAM_LONG_STREAM:java.lang.String
- sf:JAVA_UTIL_STREAM_STREAM:java.lang.String
- sf:JAVA_UTIL_UUID:java.lang.String
- sf:SERIAL_VERSION_UID_FIELD_NAME:java.lang.String
com.intellij.psi.ContributedReferenceHost
- com.intellij.psi.PsiElement
- a:getReferences():com.intellij.psi.PsiReference[]
c:com.intellij.psi.DelegatePsiTarget
- com.intellij.psi.PsiTarget
- <init>(com.intellij.psi.PsiElement):V
- canNavigate():Z
- canNavigateToSource():Z
- equals(java.lang.Object):Z
- f:getNavigationElement():com.intellij.psi.PsiElement
- getTextOffset():I
- hashCode():I
- isValid():Z
- navigate(Z):V
c:com.intellij.psi.ElementDescriptionLocation
- <init>():V
- getDefaultProvider():com.intellij.psi.ElementDescriptionProvider
com.intellij.psi.ElementDescriptionProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getElementDescription(com.intellij.psi.PsiElement,com.intellij.psi.ElementDescriptionLocation):java.lang.String
f:com.intellij.psi.ElementDescriptionUtil
- s:getElementDescription(com.intellij.psi.PsiElement,com.intellij.psi.ElementDescriptionLocation):java.lang.String
com.intellij.psi.ElementManipulator
- a:getRangeInElement(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- a:handleContentChange(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.String):com.intellij.psi.PsiElement
- a:handleContentChange(com.intellij.psi.PsiElement,java.lang.String):com.intellij.psi.PsiElement
f:com.intellij.psi.ElementManipulators
- com.intellij.openapi.util.ClassExtension
- sf:EP_NAME:java.lang.String
- sf:INSTANCE:com.intellij.psi.ElementManipulators
- s:getManipulator(com.intellij.psi.PsiElement):com.intellij.psi.ElementManipulator
- s:getNotNullManipulator(com.intellij.psi.PsiElement):com.intellij.psi.ElementManipulator
- s:getOffsetInElement(com.intellij.psi.PsiElement):I
- s:getValueText(com.intellij.psi.PsiElement):java.lang.String
- s:getValueTextRange(com.intellij.psi.PsiElement):com.intellij.openapi.util.TextRange
- s:handleContentChange(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,java.lang.String):com.intellij.psi.PsiElement
- s:handleContentChange(com.intellij.psi.PsiElement,java.lang.String):com.intellij.psi.PsiElement
f:com.intellij.psi.EmptyResolveResult
- com.intellij.psi.ResolveResult
- sf:INSTANCE:com.intellij.psi.ResolveResult
- getElement():com.intellij.psi.PsiElement
- isValidResult():Z
com.intellij.psi.ExternallyAnnotated
- a:getAnnotationRegion():com.intellij.openapi.util.TextRange
com.intellij.psi.ExternallyDefinedPsiElement
- com.intellij.psi.PsiElement
- a:getProblemTarget():com.intellij.psi.PsiElement
a:com.intellij.psi.FileContextProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:getContextFile(com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- a:getContextFolders(com.intellij.psi.PsiFile):java.util.Collection
- s:getProvider(com.intellij.psi.PsiFile):com.intellij.psi.FileContextProvider
- pa:isAvailable(com.intellij.psi.PsiFile):Z
com.intellij.psi.FileResolveScopeProvider
- a:getFileResolveScope():com.intellij.psi.search.GlobalSearchScope
- a:ignoreReferencedElementAccessibility():Z
com.intellij.psi.FileViewProvider
- com.intellij.openapi.util.UserDataHolderEx
- java.lang.Cloneable
- a:beforeContentsSynchronized():V
- a:clone():com.intellij.psi.FileViewProvider
- a:contentsSynchronized():V
- a:createCopy(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.FileViewProvider
- a:findElementAt(I):com.intellij.psi.PsiElement
- a:findElementAt(I,com.intellij.lang.Language):com.intellij.psi.PsiElement
- a:findElementAt(I,java.lang.Class):com.intellij.psi.PsiElement
- a:findReferenceAt(I):com.intellij.psi.PsiReference
- a:findReferenceAt(I,com.intellij.lang.Language):com.intellij.psi.PsiReference
- a:getAllFiles():java.util.List
- a:getBaseLanguage():com.intellij.lang.Language
- a:getContents():java.lang.CharSequence
- a:getDocument():com.intellij.openapi.editor.Document
- a:getFileType():com.intellij.openapi.fileTypes.FileType
- a:getLanguages():java.util.Set
- a:getManager():com.intellij.psi.PsiManager
- a:getModificationStamp():J
- a:getPsi(com.intellij.lang.Language):com.intellij.psi.PsiFile
- a:getStubBindingRoot():com.intellij.psi.PsiFile
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- hasLanguage(com.intellij.lang.Language):Z
- a:isEventSystemEnabled():Z
- a:isPhysical():Z
- a:rootChanged(com.intellij.psi.PsiFile):V
- a:supportsIncrementalReparse(com.intellij.lang.Language):Z
com.intellij.psi.FileViewProviderFactory
- a:createFileViewProvider(com.intellij.openapi.vfs.VirtualFile,com.intellij.lang.Language,com.intellij.psi.PsiManager,Z):com.intellij.psi.FileViewProvider
com.intellij.psi.HintedReferenceHost
- com.intellij.psi.PsiElement
- a:getReferences(com.intellij.psi.PsiReferenceService$Hints):com.intellij.psi.PsiReference[]
- a:shouldAskParentForReferences(com.intellij.psi.PsiReferenceService$Hints):Z
f:com.intellij.psi.LanguageFileViewProviders
- com.intellij.lang.LanguageExtension
- sf:INSTANCE:com.intellij.psi.LanguageFileViewProviders
a:com.intellij.psi.LanguageSubstitutor
- <init>():V
- a:getLanguage(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.lang.Language
f:com.intellij.psi.LanguageSubstitutors
- com.intellij.lang.LanguageExtension
- s:cancelReparsing(com.intellij.openapi.vfs.VirtualFile):V
- s:getInstance():com.intellij.psi.LanguageSubstitutors
- substituteLanguage(com.intellij.lang.Language,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):com.intellij.lang.Language
a:com.intellij.psi.LiteralTextEscaper
- pf:myHost:com.intellij.psi.PsiLanguageInjectionHost
- p:<init>(com.intellij.psi.PsiLanguageInjectionHost):V
- s:createSimple(com.intellij.psi.PsiLanguageInjectionHost):com.intellij.psi.LiteralTextEscaper
- s:createSimple(com.intellij.psi.PsiLanguageInjectionHost,Z):com.intellij.psi.LiteralTextEscaper
- a:decode(com.intellij.openapi.util.TextRange,java.lang.StringBuilder):Z
- a:getOffsetInHost(I,com.intellij.openapi.util.TextRange):I
- getRelevantTextRange():com.intellij.openapi.util.TextRange
- a:isOneLine():Z
com.intellij.psi.MultiRangeReference
- com.intellij.psi.PsiReference
- a:getRanges():java.util.List
com.intellij.psi.NavigatablePsiElement
- com.intellij.navigation.NavigationItem
- com.intellij.psi.PsiElement
- sf:EMPTY_NAVIGATABLE_ELEMENT_ARRAY:com.intellij.psi.NavigatablePsiElement[]
com.intellij.psi.OriginInfoAwareElement
- a:getOriginInfo():java.lang.String
com.intellij.psi.PackagePrefixFileSystemItem
- com.intellij.psi.PsiFileSystemItem
- a:getDirectory():com.intellij.psi.PsiDirectory
com.intellij.psi.PsiBinaryFile
- com.intellij.psi.PsiFile
com.intellij.psi.PsiCheckedRenameElement
- com.intellij.psi.PsiNamedElement
- a:checkSetName(java.lang.String):V
com.intellij.psi.PsiCodeFragment
- com.intellij.psi.PsiFile
- a:forceResolveScope(com.intellij.psi.search.GlobalSearchScope):V
- a:getForcedResolveScope():com.intellij.psi.search.GlobalSearchScope
com.intellij.psi.PsiComment
- com.intellij.model.psi.UrlReferenceHost
- com.intellij.psi.PsiElement
- a:getTokenType():com.intellij.psi.tree.IElementType
com.intellij.psi.PsiCompiledElement
- com.intellij.psi.PsiElement
- a:getMirror():com.intellij.psi.PsiElement
com.intellij.psi.PsiCompiledFile
- com.intellij.psi.PsiCompiledElement
- com.intellij.psi.PsiFile
- a:getDecompiledPsiFile():com.intellij.psi.PsiFile
com.intellij.psi.PsiDirectory
- com.intellij.psi.PsiFileSystemItem
- sf:EMPTY_ARRAY:com.intellij.psi.PsiDirectory[]
- a:checkCreateFile(java.lang.String):V
- a:checkCreateSubdirectory(java.lang.String):V
- a:copyFileFrom(java.lang.String,com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- a:createFile(java.lang.String):com.intellij.psi.PsiFile
- a:createSubdirectory(java.lang.String):com.intellij.psi.PsiDirectory
- a:findFile(java.lang.String):com.intellij.psi.PsiFile
- a:findSubdirectory(java.lang.String):com.intellij.psi.PsiDirectory
- a:getFiles():com.intellij.psi.PsiFile[]
- getFiles(com.intellij.psi.search.GlobalSearchScope):com.intellij.psi.PsiFile[]
- a:getName():java.lang.String
- a:getParent():com.intellij.psi.PsiDirectory
- a:getParentDirectory():com.intellij.psi.PsiDirectory
- a:getSubdirectories():com.intellij.psi.PsiDirectory[]
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- a:setName(java.lang.String):com.intellij.psi.PsiElement
com.intellij.psi.PsiDirectoryContainer
- com.intellij.psi.PsiNamedElement
- a:getDirectories():com.intellij.psi.PsiDirectory[]
- a:getDirectories(com.intellij.psi.search.GlobalSearchScope):com.intellij.psi.PsiDirectory[]
com.intellij.psi.PsiDocCommentBase
- com.intellij.psi.PsiComment
- a:getOwner():com.intellij.psi.PsiElement
com.intellij.psi.PsiDocumentListener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:documentCreated(com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile,com.intellij.openapi.project.Project):V
- fileCreated(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document):V
a:com.intellij.psi.PsiDocumentManager
- <init>():V
- a:commitAllDocuments():V
- a:commitAllDocumentsUnderProgress():Z
- a:commitAndRunReadAction(com.intellij.openapi.util.Computable):java.lang.Object
- a:commitAndRunReadAction(java.lang.Runnable):V
- a:commitDocument(com.intellij.openapi.editor.Document):V
- a:doPostponedOperationsAndUnblockDocument(com.intellij.openapi.editor.Document):V
- a:getCachedDocument(com.intellij.psi.PsiFile):com.intellij.openapi.editor.Document
- a:getCachedPsiFile(com.intellij.openapi.editor.Document):com.intellij.psi.PsiFile
- a:getDocument(com.intellij.psi.PsiFile):com.intellij.openapi.editor.Document
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.PsiDocumentManager
- a:getLastCommittedDocument(com.intellij.psi.PsiFile):com.intellij.openapi.editor.Document
- a:getLastCommittedStamp(com.intellij.openapi.editor.Document):J
- a:getLastCommittedText(com.intellij.openapi.editor.Document):java.lang.CharSequence
- a:getPsiFile(com.intellij.openapi.editor.Document):com.intellij.psi.PsiFile
- a:getUncommittedDocuments():com.intellij.openapi.editor.Document[]
- a:hasUncommitedDocuments():Z
- a:isCommitted(com.intellij.openapi.editor.Document):Z
- a:isDocumentBlockedByPsi(com.intellij.openapi.editor.Document):Z
- a:isUncommited(com.intellij.openapi.editor.Document):Z
- a:performForCommittedDocument(com.intellij.openapi.editor.Document,java.lang.Runnable):V
- a:performLaterWhenAllCommitted(com.intellij.openapi.application.ModalityState,java.lang.Runnable):V
- a:performLaterWhenAllCommitted(java.lang.Runnable):V
- a:performWhenAllCommitted(java.lang.Runnable):Z
- a:reparseFiles(java.util.Collection,Z):V
com.intellij.psi.PsiDocumentManager$Listener
- java.util.EventListener
- a:documentCreated(com.intellij.openapi.editor.Document,com.intellij.psi.PsiFile):V
- fileCreated(com.intellij.psi.PsiFile,com.intellij.openapi.editor.Document):V
com.intellij.psi.PsiElement
- com.intellij.openapi.util.Iconable
- com.intellij.openapi.util.UserDataHolder
- sf:ARRAY_FACTORY:com.intellij.util.ArrayFactory
- sf:EMPTY_ARRAY:com.intellij.psi.PsiElement[]
- a:accept(com.intellij.psi.PsiElementVisitor):V
- a:acceptChildren(com.intellij.psi.PsiElementVisitor):V
- a:add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:addRangeAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:checkAdd(com.intellij.psi.PsiElement):V
- a:checkDelete():V
- a:copy():com.intellij.psi.PsiElement
- a:delete():V
- a:deleteChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- a:findElementAt(I):com.intellij.psi.PsiElement
- a:findReferenceAt(I):com.intellij.psi.PsiReference
- a:getChildren():com.intellij.psi.PsiElement[]
- a:getContainingFile():com.intellij.psi.PsiFile
- a:getContext():com.intellij.psi.PsiElement
- a:getCopyableUserData(com.intellij.openapi.util.Key):java.lang.Object
- a:getFirstChild():com.intellij.psi.PsiElement
- a:getLanguage():com.intellij.lang.Language
- a:getLastChild():com.intellij.psi.PsiElement
- a:getManager():com.intellij.psi.PsiManager
- a:getNavigationElement():com.intellij.psi.PsiElement
- a:getNextSibling():com.intellij.psi.PsiElement
- a:getNode():com.intellij.lang.ASTNode
- a:getOriginalElement():com.intellij.psi.PsiElement
- a:getParent():com.intellij.psi.PsiElement
- a:getPrevSibling():com.intellij.psi.PsiElement
- a:getProject():com.intellij.openapi.project.Project
- a:getReference():com.intellij.psi.PsiReference
- a:getReferences():com.intellij.psi.PsiReference[]
- a:getResolveScope():com.intellij.psi.search.GlobalSearchScope
- a:getStartOffsetInParent():I
- a:getText():java.lang.String
- a:getTextLength():I
- a:getTextOffset():I
- a:getTextRange():com.intellij.openapi.util.TextRange
- getTextRangeInParent():com.intellij.openapi.util.TextRange
- a:getUseScope():com.intellij.psi.search.SearchScope
- a:isEquivalentTo(com.intellij.psi.PsiElement):Z
- a:isPhysical():Z
- a:isValid():Z
- a:isWritable():Z
- a:processDeclarations(com.intellij.psi.scope.PsiScopeProcessor,com.intellij.psi.ResolveState,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- a:putCopyableUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- a:replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:textContains(C):Z
- a:textMatches(com.intellij.psi.PsiElement):Z
- a:textMatches(java.lang.CharSequence):Z
- a:textToCharArray():C[]
- a:toString():java.lang.String
c:com.intellij.psi.PsiElementResolveResult
- com.intellij.psi.ResolveResult
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,Z):V
- s:createResults(java.util.Collection):com.intellij.psi.ResolveResult[]
- s:createResults(com.intellij.psi.PsiElement[]):com.intellij.psi.ResolveResult[]
- equals(java.lang.Object):Z
- getElement():com.intellij.psi.PsiElement
- hashCode():I
- isValidResult():Z
a:com.intellij.psi.PsiElementVisitor
- sf:EMPTY_VISITOR:com.intellij.psi.PsiElementVisitor
- <init>():V
- visitBinaryFile(com.intellij.psi.PsiBinaryFile):V
- visitComment(com.intellij.psi.PsiComment):V
- visitDirectory(com.intellij.psi.PsiDirectory):V
- visitElement(com.intellij.psi.PsiElement):V
- visitErrorElement(com.intellij.psi.PsiErrorElement):V
- visitFile(com.intellij.psi.PsiFile):V
- visitOuterLanguageElement(com.intellij.psi.templateLanguages.OuterLanguageElement):V
- visitPlainText(com.intellij.psi.PsiPlainText):V
- visitPlainTextFile(com.intellij.psi.PsiPlainTextFile):V
- visitWhiteSpace(com.intellij.psi.PsiWhiteSpace):V
com.intellij.psi.PsiErrorElement
- com.intellij.psi.PsiElement
- a:getErrorDescription():java.lang.String
com.intellij.psi.PsiFile
- com.intellij.psi.PsiFileSystemItem
- sf:EMPTY_ARRAY:com.intellij.psi.PsiFile[]
- clearCaches():V
- a:getContainingDirectory():com.intellij.psi.PsiDirectory
- F:getFileDocument():com.intellij.openapi.editor.Document
- getFileElementType():com.intellij.psi.tree.IFileElementType
- a:getFileType():com.intellij.openapi.fileTypes.FileType
- a:getModificationStamp():J
- a:getNode():com.intellij.lang.FileASTNode
- a:getOriginalFile():com.intellij.psi.PsiFile
- a:getParent():com.intellij.psi.PsiDirectory
- a:getPsiRoots():com.intellij.psi.PsiFile[]
- a:getViewProvider():com.intellij.psi.FileViewProvider
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- a:subtreeChanged():V
a:com.intellij.psi.PsiFileFactory
- sf:ORIGINAL_FILE:com.intellij.openapi.util.Key
- <init>():V
- createFileFromText(com.intellij.lang.Language,java.lang.CharSequence):com.intellij.psi.PsiFile
- a:createFileFromText(com.intellij.openapi.fileTypes.FileType,java.lang.String,java.lang.CharSequence,I,I):com.intellij.psi.PsiFile
- a:createFileFromText(java.lang.CharSequence,com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- a:createFileFromText(java.lang.String,com.intellij.lang.Language,java.lang.CharSequence):com.intellij.psi.PsiFile
- a:createFileFromText(java.lang.String,com.intellij.lang.Language,java.lang.CharSequence,Z,Z):com.intellij.psi.PsiFile
- a:createFileFromText(java.lang.String,com.intellij.lang.Language,java.lang.CharSequence,Z,Z,Z):com.intellij.psi.PsiFile
- a:createFileFromText(java.lang.String,com.intellij.lang.Language,java.lang.CharSequence,Z,Z,Z,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFile
- a:createFileFromText(java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence):com.intellij.psi.PsiFile
- a:createFileFromText(java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence,J,Z):com.intellij.psi.PsiFile
- a:createFileFromText(java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence,J,Z,Z):com.intellij.psi.PsiFile
- a:createFileFromText(java.lang.String,java.lang.String):com.intellij.psi.PsiFile
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.PsiFileFactory
com.intellij.psi.PsiFileSystemItem
- com.intellij.psi.NavigatablePsiElement
- com.intellij.psi.PsiCheckedRenameElement
- a:getName():java.lang.String
- a:getParent():com.intellij.psi.PsiFileSystemItem
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- a:isDirectory():Z
- a:processChildren(com.intellij.psi.search.PsiElementProcessor):Z
com.intellij.psi.PsiFileWithOneLanguage
- com.intellij.psi.PsiFile
f:com.intellij.psi.PsiInvalidElementAccessException
- java.lang.RuntimeException
- com.intellij.openapi.diagnostic.ExceptionWithAttachments
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,java.lang.String):V
- <init>(com.intellij.psi.PsiElement,java.lang.String,java.lang.Throwable):V
- <init>(com.intellij.psi.PsiElement,java.lang.Throwable):V
- s:createByNode(com.intellij.lang.ASTNode,java.lang.String):com.intellij.psi.PsiInvalidElementAccessException
- s:findInvalidationTrace(com.intellij.lang.ASTNode):java.lang.Object
- s:findOutInvalidationReason(com.intellij.psi.PsiElement):java.lang.String
- getAttachments():com.intellij.openapi.diagnostic.Attachment[]
- s:getInvalidationTrace(com.intellij.openapi.util.UserDataHolder):java.lang.Object
- getMessage():java.lang.String
- getPsiElement():com.intellij.psi.PsiElement
- s:isTrackingInvalidation():Z
- s:setInvalidationTrace(com.intellij.openapi.util.UserDataHolder,java.lang.Object):V
com.intellij.psi.PsiLanguageInjectionHost
- com.intellij.model.psi.PsiExternalReferenceHost
- a:createLiteralTextEscaper():com.intellij.psi.LiteralTextEscaper
- a:isValidHost():Z
- a:updateText(java.lang.String):com.intellij.psi.PsiLanguageInjectionHost
com.intellij.psi.PsiLanguageInjectionHost$InjectedPsiVisitor
- a:visit(com.intellij.psi.PsiFile,java.util.List):V
com.intellij.psi.PsiLanguageInjectionHost$Shred
- a:dispose():V
- a:getHost():com.intellij.psi.PsiLanguageInjectionHost
- a:getHostRangeMarker():com.intellij.openapi.util.Segment
- a:getPrefix():java.lang.String
- a:getRange():com.intellij.openapi.util.TextRange
- a:getRangeInsideHost():com.intellij.openapi.util.TextRange
- a:getSuffix():java.lang.String
- a:isValid():Z
a:com.intellij.psi.PsiLanguageInjectionHostVisitor
- com.intellij.psi.PsiElementVisitor
- <init>():V
- getHintPsiElements():java.util.List
com.intellij.psi.PsiLargeBinaryFile
- com.intellij.psi.PsiBinaryFile
- com.intellij.psi.PsiLargeFile
com.intellij.psi.PsiLargeFile
- com.intellij.psi.PsiFile
com.intellij.psi.PsiLargeTextFile
- com.intellij.psi.PsiLargeFile
- com.intellij.psi.PsiPlainTextFile
com.intellij.psi.PsiListLikeElement
- com.intellij.psi.PsiElement
- a:getComponents():java.util.List
com.intellij.psi.PsiLiteralValue
- com.intellij.model.psi.PsiExternalReferenceHost
- com.intellij.psi.PsiElement
- a:getValue():java.lang.Object
f:com.intellij.psi.PsiLock
- <init>():V
a:com.intellij.psi.PsiManager
- com.intellij.openapi.util.UserDataHolderBase
- <init>():V
- a:addPsiTreeChangeListener(com.intellij.psi.PsiTreeChangeListener):V
- a:addPsiTreeChangeListener(com.intellij.psi.PsiTreeChangeListener,com.intellij.openapi.Disposable):V
- a:areElementsEquivalent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- a:dropPsiCaches():V
- a:dropResolveCaches():V
- a:findDirectory(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiDirectory
- a:findFile(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFile
- a:findViewProvider(com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.FileViewProvider
- a:finishBatchFilesProcessingMode():V
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.PsiManager
- a:getModificationTracker():com.intellij.psi.util.PsiModificationTracker
- a:getProject():com.intellij.openapi.project.Project
- a:isDisposed():Z
- a:isInProject(com.intellij.psi.PsiElement):Z
- a:reloadFromDisk(com.intellij.psi.PsiFile):V
- a:removePsiTreeChangeListener(com.intellij.psi.PsiTreeChangeListener):V
- a:runInBatchFilesMode(com.intellij.openapi.util.Computable):java.lang.Object
- a:startBatchFilesProcessingMode():V
com.intellij.psi.PsiMirrorElement
- com.intellij.psi.PsiElement
- com.intellij.psi.SyntheticElement
- a:getPrototype():com.intellij.psi.PsiElement
com.intellij.psi.PsiNameIdentifierOwner
- com.intellij.psi.PsiNamedElement
- getIdentifyingElement():com.intellij.psi.PsiElement
- a:getNameIdentifier():com.intellij.psi.PsiElement
com.intellij.psi.PsiNamedElement
- com.intellij.psi.PsiElement
- sf:EMPTY_ARRAY:com.intellij.psi.PsiNamedElement[]
- a:getName():java.lang.String
- a:setName(java.lang.String):com.intellij.psi.PsiElement
com.intellij.psi.PsiParserFacade
- a:createBlockCommentFromText(com.intellij.lang.Language,java.lang.String):com.intellij.psi.PsiComment
- a:createLineCommentFromText(com.intellij.lang.Language,java.lang.String):com.intellij.psi.PsiComment
- a:createLineCommentFromText(com.intellij.openapi.fileTypes.LanguageFileType,java.lang.String):com.intellij.psi.PsiComment
- a:createLineOrBlockCommentFromText(com.intellij.lang.Language,java.lang.String):com.intellij.psi.PsiComment
- a:createWhiteSpaceFromText(java.lang.String):com.intellij.psi.PsiElement
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.PsiParserFacade
f:com.intellij.psi.PsiParserFacade$SERVICE
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.PsiParserFacade
com.intellij.psi.PsiPlainText
- com.intellij.psi.PsiElement
com.intellij.psi.PsiPlainTextFile
- com.intellij.psi.PsiFile
com.intellij.psi.PsiPolyVariantReference
- com.intellij.psi.PsiReference
- a:multiResolve(Z):com.intellij.psi.ResolveResult[]
a:com.intellij.psi.PsiPolyVariantReferenceBase
- com.intellij.psi.PsiReferenceBase
- com.intellij.psi.PsiPolyVariantReference
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,Z):V
- <init>(com.intellij.psi.PsiElement,Z):V
- isReferenceTo(com.intellij.psi.PsiElement):Z
- resolve():com.intellij.psi.PsiElement
com.intellij.psi.PsiQualifiedNamedElement
- com.intellij.psi.PsiNamedElement
- a:getName():java.lang.String
- a:getQualifiedName():java.lang.String
com.intellij.psi.PsiQualifiedReference
- com.intellij.psi.PsiReference
- a:getQualifier():com.intellij.psi.PsiElement
- a:getReferenceName():java.lang.String
com.intellij.psi.PsiQualifiedReferenceElement
- com.intellij.psi.PsiElement
- com.intellij.psi.PsiQualifiedReference
a:com.intellij.psi.PsiRecursiveElementVisitor
- com.intellij.psi.PsiElementVisitor
- com.intellij.psi.PsiRecursiveVisitor
- p:<init>():V
- p:<init>(Z):V
- visitElement(com.intellij.psi.PsiElement):V
- visitFile(com.intellij.psi.PsiFile):V
a:com.intellij.psi.PsiRecursiveElementWalkingVisitor
- com.intellij.psi.PsiElementVisitor
- com.intellij.psi.PsiRecursiveVisitor
- p:<init>():V
- p:<init>(Z):V
- p:elementFinished(com.intellij.psi.PsiElement):V
- stopWalking():V
- visitElement(com.intellij.psi.PsiElement):V
- visitFile(com.intellij.psi.PsiFile):V
com.intellij.psi.PsiRecursiveVisitor
com.intellij.psi.PsiReference
- sf:ARRAY_FACTORY:com.intellij.util.ArrayFactory
- sf:EMPTY_ARRAY:com.intellij.psi.PsiReference[]
- a:bindToElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getAbsoluteRange():com.intellij.openapi.util.TextRange
- a:getCanonicalText():java.lang.String
- a:getElement():com.intellij.psi.PsiElement
- a:getRangeInElement():com.intellij.openapi.util.TextRange
- getVariants():java.lang.Object[]
- a:handleElementRename(java.lang.String):com.intellij.psi.PsiElement
- a:isReferenceTo(com.intellij.psi.PsiElement):Z
- a:isSoft():Z
- a:resolve():com.intellij.psi.PsiElement
a:com.intellij.psi.PsiReferenceBase
- com.intellij.psi.PsiReference
- pf:myElement:com.intellij.psi.PsiElement
- p:mySoft:Z
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,Z):V
- <init>(com.intellij.psi.PsiElement,Z):V
- bindToElement(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- p:calculateDefaultRangeInElement():com.intellij.openapi.util.TextRange
- s:createSelfReference(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,com.intellij.psi.PsiElement):com.intellij.psi.PsiReferenceBase
- s:createSelfReference(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiReferenceBase
- getCanonicalText():java.lang.String
- getElement():com.intellij.psi.PsiElement
- getRangeInElement():com.intellij.openapi.util.TextRange
- getValue():java.lang.String
- handleElementRename(java.lang.String):com.intellij.psi.PsiElement
- isReferenceTo(com.intellij.psi.PsiElement):Z
- isSoft():Z
- setRangeInElement(com.intellij.openapi.util.TextRange):V
c:com.intellij.psi.PsiReferenceBase$Immediate
- com.intellij.psi.PsiReferenceBase
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,Z,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,Z,com.intellij.psi.PsiElement):V
- handleElementRename(java.lang.String):com.intellij.psi.PsiElement
- resolve():com.intellij.psi.PsiElement
a:com.intellij.psi.PsiReferenceBase$Poly
- com.intellij.psi.PsiReferenceBase
- com.intellij.psi.PsiPolyVariantReference
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,Z):V
- <init>(com.intellij.psi.PsiElement,Z):V
- isReferenceTo(com.intellij.psi.PsiElement):Z
- resolve():com.intellij.psi.PsiElement
a:com.intellij.psi.PsiReferenceContributor
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:registerReferenceProviders(com.intellij.psi.PsiReferenceRegistrar):V
a:com.intellij.psi.PsiReferenceProvider
- <init>():V
- acceptsHints(com.intellij.psi.PsiElement,com.intellij.psi.PsiReferenceService$Hints):Z
- acceptsTarget(com.intellij.psi.PsiElement):Z
- a:getReferencesByElement(com.intellij.psi.PsiElement,com.intellij.util.ProcessingContext):com.intellij.psi.PsiReference[]
c:com.intellij.psi.PsiReferenceProviderBean
- com.intellij.openapi.extensions.PluginAware
- com.intellij.util.KeyedLazyInstance
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- className:java.lang.String
- description:java.lang.String
- language:java.lang.String
- patterns:com.intellij.patterns.ElementPatternBean[]
- <init>():V
- createElementPattern():com.intellij.patterns.ElementPattern
- getDescription():java.lang.String
- getInstance():com.intellij.psi.PsiReferenceProviderBean
- getKey():java.lang.String
- instantiate():com.intellij.psi.PsiReferenceProvider
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
a:com.intellij.psi.PsiReferenceRegistrar
- com.intellij.openapi.util.UserDataHolder
- sf:DEFAULT_PRIORITY:D
- sf:HIGHER_PRIORITY:D
- sf:LOWER_PRIORITY:D
- <init>():V
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- registerReferenceProvider(com.intellij.patterns.ElementPattern,com.intellij.psi.PsiReferenceProvider):V
- a:registerReferenceProvider(com.intellij.patterns.ElementPattern,com.intellij.psi.PsiReferenceProvider,D):V
a:com.intellij.psi.PsiReferenceService
- <init>():V
- getContributedReferences(com.intellij.psi.PsiElement):com.intellij.psi.PsiReference[]
- a:getReferences(com.intellij.psi.PsiElement,com.intellij.psi.PsiReferenceService$Hints):java.util.List
- s:getService():com.intellij.psi.PsiReferenceService
c:com.intellij.psi.PsiReferenceService$Hints
- sf:HIGHLIGHTED_REFERENCES:com.intellij.psi.PsiReferenceService$Hints
- sf:NO_HINTS:com.intellij.psi.PsiReferenceService$Hints
- f:offsetInElement:java.lang.Integer
- f:target:com.intellij.psi.PsiElement
- <init>():V
- <init>(com.intellij.psi.PsiElement,java.lang.Integer):V
com.intellij.psi.PsiTarget
- com.intellij.pom.PomTarget
- a:getNavigationElement():com.intellij.psi.PsiElement
a:com.intellij.psi.PsiTreeAnyChangeAbstractAdapter
- com.intellij.psi.PsiTreeChangeAdapter
- <init>():V
- childAdded(com.intellij.psi.PsiTreeChangeEvent):V
- childMoved(com.intellij.psi.PsiTreeChangeEvent):V
- childRemoved(com.intellij.psi.PsiTreeChangeEvent):V
- childReplaced(com.intellij.psi.PsiTreeChangeEvent):V
- childrenChanged(com.intellij.psi.PsiTreeChangeEvent):V
- pa:onChange(com.intellij.psi.PsiFile):V
- propertyChanged(com.intellij.psi.PsiTreeChangeEvent):V
a:com.intellij.psi.PsiTreeChangeAdapter
- com.intellij.psi.PsiTreeChangeListener
- <init>():V
- beforeChildAddition(com.intellij.psi.PsiTreeChangeEvent):V
- beforeChildMovement(com.intellij.psi.PsiTreeChangeEvent):V
- beforeChildRemoval(com.intellij.psi.PsiTreeChangeEvent):V
- beforeChildReplacement(com.intellij.psi.PsiTreeChangeEvent):V
- beforeChildrenChange(com.intellij.psi.PsiTreeChangeEvent):V
- beforePropertyChange(com.intellij.psi.PsiTreeChangeEvent):V
- childAdded(com.intellij.psi.PsiTreeChangeEvent):V
- childMoved(com.intellij.psi.PsiTreeChangeEvent):V
- childRemoved(com.intellij.psi.PsiTreeChangeEvent):V
- childReplaced(com.intellij.psi.PsiTreeChangeEvent):V
- childrenChanged(com.intellij.psi.PsiTreeChangeEvent):V
- propertyChanged(com.intellij.psi.PsiTreeChangeEvent):V
a:com.intellij.psi.PsiTreeChangeEvent
- java.util.EventObject
- sf:PROP_DIRECTORY_NAME:java.lang.String
- sf:PROP_FILE_NAME:java.lang.String
- sf:PROP_FILE_TYPES:java.lang.String
- sf:PROP_ROOTS:java.lang.String
- sf:PROP_UNLOADED_PSI:java.lang.String
- sf:PROP_WRITABLE:java.lang.String
- p:myChild:com.intellij.psi.PsiElement
- p:myElement:com.intellij.psi.PsiElement
- p:myFile:com.intellij.psi.PsiFile
- p:myNewChild:com.intellij.psi.PsiElement
- p:myNewParent:com.intellij.psi.PsiElement
- p:myNewValue:java.lang.Object
- p:myOffset:I
- p:myOldChild:com.intellij.psi.PsiElement
- p:myOldLength:I
- p:myOldParent:com.intellij.psi.PsiElement
- p:myOldValue:java.lang.Object
- p:myParent:com.intellij.psi.PsiElement
- p:myPropertyName:java.lang.String
- p:<init>(com.intellij.psi.PsiManager):V
- getChild():com.intellij.psi.PsiElement
- getElement():com.intellij.psi.PsiElement
- getFile():com.intellij.psi.PsiFile
- getNewChild():com.intellij.psi.PsiElement
- getNewParent():com.intellij.psi.PsiElement
- getNewValue():java.lang.Object
- getOldChild():com.intellij.psi.PsiElement
- getOldParent():com.intellij.psi.PsiElement
- getOldValue():java.lang.Object
- getParent():com.intellij.psi.PsiElement
- getPropertyName():java.lang.String
com.intellij.psi.PsiTreeChangeListener
- java.util.EventListener
- sf:EP:com.intellij.openapi.extensions.ProjectExtensionPointName
- a:beforeChildAddition(com.intellij.psi.PsiTreeChangeEvent):V
- a:beforeChildMovement(com.intellij.psi.PsiTreeChangeEvent):V
- a:beforeChildRemoval(com.intellij.psi.PsiTreeChangeEvent):V
- a:beforeChildReplacement(com.intellij.psi.PsiTreeChangeEvent):V
- a:beforeChildrenChange(com.intellij.psi.PsiTreeChangeEvent):V
- a:beforePropertyChange(com.intellij.psi.PsiTreeChangeEvent):V
- a:childAdded(com.intellij.psi.PsiTreeChangeEvent):V
- a:childMoved(com.intellij.psi.PsiTreeChangeEvent):V
- a:childRemoved(com.intellij.psi.PsiTreeChangeEvent):V
- a:childReplaced(com.intellij.psi.PsiTreeChangeEvent):V
- a:childrenChanged(com.intellij.psi.PsiTreeChangeEvent):V
- a:propertyChanged(com.intellij.psi.PsiTreeChangeEvent):V
a:com.intellij.psi.PsiWalkingState
- com.intellij.util.WalkingState
- p:<init>(com.intellij.psi.PsiElementVisitor):V
- p:<init>(com.intellij.psi.PsiElementVisitor,com.intellij.util.WalkingState$TreeGuide):V
- elementStarted(com.intellij.psi.PsiElement):V
- s:processAll(com.intellij.psi.PsiElement,com.intellij.util.Processor):Z
- visit(com.intellij.psi.PsiElement):V
com.intellij.psi.PsiWhiteSpace
- com.intellij.psi.PsiElement
f:com.intellij.psi.ReferenceRange
- s:containsOffsetInElement(com.intellij.psi.PsiReference,I):Z
- s:containsRangeInElement(com.intellij.psi.PsiReference,com.intellij.openapi.util.TextRange):Z
- s:getAbsoluteRanges(com.intellij.psi.PsiReference):java.util.List
- s:getRange(com.intellij.psi.PsiReference):com.intellij.openapi.util.TextRange
- s:getRanges(com.intellij.psi.PsiReference):java.util.List
com.intellij.psi.ResolveResult
- sf:EMPTY_ARRAY:com.intellij.psi.ResolveResult[]
- a:getElement():com.intellij.psi.PsiElement
- a:isValidResult():Z
c:com.intellij.psi.ResolveState
- <init>():V
- get(com.intellij.openapi.util.Key):java.lang.Object
- s:initial():com.intellij.psi.ResolveState
- put(com.intellij.openapi.util.Key,java.lang.Object):com.intellij.psi.ResolveState
- putAll(com.intellij.psi.ResolveState):com.intellij.psi.ResolveState
com.intellij.psi.ResolvingHint
- a:canResolveTo(java.lang.Class):Z
a:com.intellij.psi.SmartPointerManager
- <init>():V
- createLazyPointer(com.intellij.psi.PsiElement):com.intellij.psi.SmartPsiElementPointer
- s:createPointer(com.intellij.psi.PsiElement):com.intellij.psi.SmartPsiElementPointer
- a:createSmartPsiElementPointer(com.intellij.psi.PsiElement):com.intellij.psi.SmartPsiElementPointer
- a:createSmartPsiElementPointer(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):com.intellij.psi.SmartPsiElementPointer
- a:createSmartPsiFileRangePointer(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):com.intellij.psi.SmartPsiFileRange
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.SmartPointerManager
- a:pointToTheSameElement(com.intellij.psi.SmartPsiElementPointer,com.intellij.psi.SmartPsiElementPointer):Z
- a:removePointer(com.intellij.psi.SmartPsiElementPointer):V
f:com.intellij.psi.SmartPointersKt
- sf:createSmartPointer(com.intellij.psi.PsiElement):com.intellij.psi.SmartPsiElementPointer
com.intellij.psi.SmartPsiElementPointer
- com.intellij.model.Pointer
- dereference():com.intellij.psi.PsiElement
- a:getContainingFile():com.intellij.psi.PsiFile
- a:getElement():com.intellij.psi.PsiElement
- a:getProject():com.intellij.openapi.project.Project
- a:getPsiRange():com.intellij.openapi.util.Segment
- a:getRange():com.intellij.openapi.util.Segment
- a:getVirtualFile():com.intellij.openapi.vfs.VirtualFile
com.intellij.psi.SmartPsiFileRange
- com.intellij.psi.SmartPsiElementPointer
- a:getRange():com.intellij.openapi.util.Segment
com.intellij.psi.StringEscapesTokenTypes
- sf:INVALID_CHARACTER_ESCAPE_TOKEN:com.intellij.psi.tree.IElementType
- sf:INVALID_UNICODE_ESCAPE_TOKEN:com.intellij.psi.tree.IElementType
- sf:STRING_LITERAL_ESCAPES:com.intellij.psi.tree.TokenSet
- sf:VALID_STRING_ESCAPE_TOKEN:com.intellij.psi.tree.IElementType
com.intellij.psi.StubBasedPsiElement
- com.intellij.psi.PsiElement
- a:getElementType():com.intellij.psi.stubs.IStubElementType
- a:getStub():com.intellij.psi.stubs.StubElement
com.intellij.psi.StubBuilder
- a:buildStubTree(com.intellij.psi.PsiFile):com.intellij.psi.stubs.StubElement
- a:skipChildProcessingWhenBuildingStubs(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):Z
c:com.intellij.psi.SyntaxTraverser
- com.intellij.util.containers.FilteredTraverserBase
- com.intellij.openapi.util.UserDataHolder
- f:api:com.intellij.psi.SyntaxTraverser$Api
- p:<init>(com.intellij.psi.SyntaxTraverser$Api,com.intellij.util.containers.FilteredTraverserBase$Meta):V
- s:astApi():com.intellij.psi.SyntaxTraverser$ApiEx
- s:astTraverser():com.intellij.psi.SyntaxTraverser
- s:astTraverser(com.intellij.lang.ASTNode):com.intellij.psi.SyntaxTraverser
- expandTypes(com.intellij.openapi.util.Condition):com.intellij.psi.SyntaxTraverser
- filterTypes(com.intellij.openapi.util.Condition):com.intellij.psi.SyntaxTraverser
- forceDisregardTypes(com.intellij.openapi.util.Condition):com.intellij.psi.SyntaxTraverser
- getRawDeepestLast():java.lang.Object
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- s:lightApi(com.intellij.lang.PsiBuilder):com.intellij.psi.SyntaxTraverser$Api
- s:lightTraverser(com.intellij.lang.PsiBuilder):com.intellij.psi.SyntaxTraverser
- f:map(com.intellij.util.Function):com.intellij.psi.SyntaxTraverser
- f:map(com.intellij.util.Function,com.intellij.util.Function):com.intellij.psi.SyntaxTraverser
- p:newInstance(com.intellij.util.containers.FilteredTraverserBase$Meta):com.intellij.psi.SyntaxTraverser
- f:onRange(com.intellij.openapi.util.TextRange):com.intellij.psi.SyntaxTraverser
- s:psiApi():com.intellij.psi.SyntaxTraverser$ApiEx
- s:psiApiReversed():com.intellij.psi.SyntaxTraverser$ApiEx
- s:psiTraverser():com.intellij.psi.SyntaxTraverser
- s:psiTraverser(com.intellij.psi.PsiElement):com.intellij.psi.SyntaxTraverser
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- s:revPsiTraverser():com.intellij.psi.SyntaxTraverser
- s:syntaxTraverser(com.intellij.psi.SyntaxTraverser$Api):com.intellij.psi.SyntaxTraverser
a:com.intellij.psi.SyntaxTraverser$Api
- com.intellij.util.Function
- f:TO_RANGE:com.intellij.util.Function
- f:TO_TEXT:com.intellij.util.Function
- f:TO_TYPE:com.intellij.util.Function
- <init>():V
- a:children(java.lang.Object):com.intellij.util.containers.JBIterable
- fun(java.lang.Object):com.intellij.util.containers.JBIterable
- a:parent(java.lang.Object):java.lang.Object
- parents(java.lang.Object):com.intellij.util.containers.JBIterable
- a:rangeOf(java.lang.Object):com.intellij.openapi.util.TextRange
- a:textOf(java.lang.Object):java.lang.CharSequence
- a:typeOf(java.lang.Object):com.intellij.psi.tree.IElementType
a:com.intellij.psi.SyntaxTraverser$ApiEx
- com.intellij.psi.SyntaxTraverser$Api
- <init>():V
- children(java.lang.Object):com.intellij.util.containers.JBIterable
- a:first(java.lang.Object):java.lang.Object
- a:last(java.lang.Object):java.lang.Object
- a:next(java.lang.Object):java.lang.Object
- a:previous(java.lang.Object):java.lang.Object
- siblings(java.lang.Object):com.intellij.util.containers.JBIterable
com.intellij.psi.SyntheticElement
com.intellij.psi.TokenType
- sf:BAD_CHARACTER:com.intellij.psi.tree.IElementType
- sf:CODE_FRAGMENT:com.intellij.psi.tree.IElementType
- sf:DUMMY_HOLDER:com.intellij.psi.tree.IElementType
- sf:ERROR_ELEMENT:com.intellij.psi.tree.IElementType
- sf:NEW_LINE_INDENT:com.intellij.psi.tree.IElementType
- sf:WHITE_SPACE:com.intellij.psi.tree.IElementType
c:com.intellij.psi.codeStyle.ChangedRangesInfo
- f:allChangedRanges:java.util.List
- f:insertedRanges:java.util.List
- <init>(java.util.List,java.util.List):V
a:com.intellij.psi.codeStyle.CodeStyleManager
- <init>():V
- a:adjustLineIndent(com.intellij.openapi.editor.Document,I):I
- a:adjustLineIndent(com.intellij.psi.PsiFile,I):I
- a:adjustLineIndent(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):V
- a:fillIndent(com.intellij.psi.codeStyle.Indent,com.intellij.openapi.fileTypes.FileType):java.lang.String
- s:getCurrentFormattingMode(com.intellij.openapi.project.Project):com.intellij.formatting.FormattingMode
- getDocCommentSettings(com.intellij.psi.PsiFile):com.intellij.psi.codeStyle.DocCommentSettings
- a:getIndent(java.lang.String,com.intellij.openapi.fileTypes.FileType):com.intellij.psi.codeStyle.Indent
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.codeStyle.CodeStyleManager
- s:getInstance(com.intellij.psi.PsiManager):com.intellij.psi.codeStyle.CodeStyleManager
- a:getLineIndent(com.intellij.openapi.editor.Document,I):java.lang.String
- a:getLineIndent(com.intellij.psi.PsiFile,I):java.lang.String
- getLineIndent(com.intellij.psi.PsiFile,I,com.intellij.formatting.FormattingMode):java.lang.String
- getLineIndents(com.intellij.psi.PsiFile):java.util.List
- getMinLineFeeds(com.intellij.psi.PsiFile,I):I
- a:getProject():com.intellij.openapi.project.Project
- getSpacing(com.intellij.psi.PsiFile,I):I
- a:isLineToBeIndented(com.intellij.psi.PsiFile,I):Z
- a:isSequentialProcessingAllowed():Z
- a:performActionWithFormatterDisabled(com.intellij.openapi.util.Computable):java.lang.Object
- a:performActionWithFormatterDisabled(com.intellij.util.ThrowableRunnable):V
- a:performActionWithFormatterDisabled(java.lang.Runnable):V
- a:reformat(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:reformat(com.intellij.psi.PsiElement,Z):com.intellij.psi.PsiElement
- reformatChanges(com.intellij.psi.PsiFile,com.intellij.psi.codeStyle.ChangedRangesInfo):V
- a:reformatNewlyAddedElement(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):V
- a:reformatRange(com.intellij.psi.PsiElement,I,I):com.intellij.psi.PsiElement
- a:reformatRange(com.intellij.psi.PsiElement,I,I,Z):com.intellij.psi.PsiElement
- a:reformatText(com.intellij.psi.PsiFile,I,I):V
- a:reformatText(com.intellij.psi.PsiFile,java.util.Collection):V
- reformatText(com.intellij.psi.PsiFile,java.util.Collection,Z):V
- reformatTextWithContext(com.intellij.psi.PsiFile,com.intellij.psi.codeStyle.ChangedRangesInfo):V
- reformatTextWithContext(com.intellij.psi.PsiFile,java.util.Collection):V
- runWithDocCommentFormattingDisabled(com.intellij.psi.PsiFile,java.lang.Runnable):V
- scheduleIndentAdjustment(com.intellij.openapi.editor.Document,I):V
- scheduleReformatWhenSettingsComputed(com.intellij.psi.PsiFile):V
- a:zeroIndent():com.intellij.psi.codeStyle.Indent
com.intellij.psi.codeStyle.CodeStyleManager$Listener
- sf:TOPIC:com.intellij.util.messages.Topic
- a:afterReformatText(com.intellij.psi.PsiFile):V
- a:beforeReformatText(com.intellij.psi.PsiFile):V
com.intellij.psi.codeStyle.CodeStyleSettingsFacade
- a:getIndentSize():I
- a:getTabSize():I
- a:isSpaceAfterComma():Z
- a:isSpaceAroundAssignmentOperators():Z
- a:isSpaceBeforeComma():Z
- a:withLanguage(com.intellij.lang.Language):com.intellij.psi.codeStyle.CodeStyleSettingsFacade
com.intellij.psi.codeStyle.DocCommentSettings
- sf:DEFAULTS:com.intellij.psi.codeStyle.DocCommentSettings
- a:isDocFormattingEnabled():Z
- a:isLeadingAsteriskEnabled():Z
- a:isRemoveEmptyTags():Z
- a:setDocFormattingEnabled(Z):V
- a:setRemoveEmptyTags(Z):V
f:com.intellij.psi.codeStyle.DocCommentSettings$Defaults
- com.intellij.psi.codeStyle.DocCommentSettings
- <init>():V
- isDocFormattingEnabled():Z
- isLeadingAsteriskEnabled():Z
- isRemoveEmptyTags():Z
- setDocFormattingEnabled(Z):V
- setRemoveEmptyTags(Z):V
com.intellij.psi.codeStyle.FormattingModeAwareIndentAdjuster
- a:adjustLineIndent(com.intellij.openapi.editor.Document,I,com.intellij.formatting.FormattingMode):I
- a:getCurrentFormattingMode():com.intellij.formatting.FormattingMode
com.intellij.psi.codeStyle.Indent
- a:add(com.intellij.psi.codeStyle.Indent):com.intellij.psi.codeStyle.Indent
- a:isGreaterThan(com.intellij.psi.codeStyle.Indent):Z
- a:isZero():Z
- a:max(com.intellij.psi.codeStyle.Indent):com.intellij.psi.codeStyle.Indent
- a:min(com.intellij.psi.codeStyle.Indent):com.intellij.psi.codeStyle.Indent
- a:subtract(com.intellij.psi.codeStyle.Indent):com.intellij.psi.codeStyle.Indent
a:com.intellij.psi.codeStyle.SuggestedNameInfo
- sf:NULL_INFO:com.intellij.psi.codeStyle.SuggestedNameInfo
- sf:SUGGESTED_NAME_INFO_KEY:com.intellij.openapi.util.Key
- f:names:java.lang.String[]
- <init>(java.lang.String[]):V
- nameChosen(java.lang.String):V
c:com.intellij.psi.codeStyle.SuggestedNameInfo$Delegate
- com.intellij.psi.codeStyle.SuggestedNameInfo
- <init>(java.lang.String[],com.intellij.psi.codeStyle.SuggestedNameInfo):V
- nameChosen(java.lang.String):V
com.intellij.psi.filters.ElementFilter
- sf:EMPTY_ARRAY:com.intellij.psi.filters.ElementFilter[]
- a:isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
- a:isClassAcceptable(java.lang.Class):Z
- a:toString():java.lang.String
a:com.intellij.psi.filters.ElementFilterBase
- com.intellij.psi.filters.ElementFilter
- <init>(java.lang.Class):V
- f:isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
- isClassAcceptable(java.lang.Class):Z
- pa:isElementAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
c:com.intellij.psi.filters.position.FilterPattern
- com.intellij.patterns.ObjectPattern
- <init>(com.intellij.psi.filters.ElementFilter):V
- equals(java.lang.Object):Z
- hashCode():I
c:com.intellij.psi.filters.position.PatternFilter
- com.intellij.psi.filters.ElementFilter
- <init>(com.intellij.patterns.ElementPattern):V
- isAcceptable(java.lang.Object,com.intellij.psi.PsiElement):Z
- isClassAcceptable(java.lang.Class):Z
a:com.intellij.psi.impl.source.codeStyle.IndentHelper
- <init>():V
- f:getIndent(com.intellij.openapi.project.Project,com.intellij.openapi.fileTypes.FileType,com.intellij.lang.ASTNode,Z):I
- a:getIndent(com.intellij.psi.PsiFile,com.intellij.lang.ASTNode):I
- a:getIndent(com.intellij.psi.PsiFile,com.intellij.lang.ASTNode,Z):I
- s:getInstance():com.intellij.psi.impl.source.codeStyle.IndentHelper
a:com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry
- sf:NULL_REFERENCE_PROVIDER:com.intellij.psi.PsiReferenceProvider
- <init>():V
- s:assertNotContributingReferences():V
- pa:doGetReferencesFromProviders(com.intellij.psi.PsiElement,com.intellij.psi.PsiReferenceService$Hints):com.intellij.psi.PsiReference[]
- s:getInstance():com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry
- s:getReferencesFromProviders(com.intellij.psi.PsiElement):com.intellij.psi.PsiReference[]
- s:getReferencesFromProviders(com.intellij.psi.PsiElement,com.intellij.psi.PsiReferenceService$Hints):com.intellij.psi.PsiReference[]
- a:getRegistrar(com.intellij.lang.Language):com.intellij.psi.PsiReferenceRegistrar
com.intellij.psi.meta.MetaDataContributor
- a:contributeMetaData(com.intellij.psi.meta.MetaDataRegistrar):V
a:com.intellij.psi.meta.MetaDataRegistrar
- <init>():V
- s:getInstance():com.intellij.psi.meta.MetaDataRegistrar
- a:registerMetaData(com.intellij.psi.filters.ElementFilter,java.lang.Class):V
com.intellij.psi.meta.PsiMetaData
- a:getDeclaration():com.intellij.psi.PsiElement
- getDependences():java.lang.Object[]
- getDependencies():java.lang.Object[]
- a:getName():java.lang.String
- a:getName(com.intellij.psi.PsiElement):java.lang.String
- a:init(com.intellij.psi.PsiElement):V
com.intellij.psi.meta.PsiMetaOwner
- a:getMetaData():com.intellij.psi.meta.PsiMetaData
com.intellij.psi.meta.PsiPresentableMetaData
- com.intellij.psi.meta.PsiMetaData
- a:getIcon():javax.swing.Icon
- a:getTypeName():java.lang.String
com.intellij.psi.meta.PsiWritableMetaData
- com.intellij.psi.meta.PsiMetaData
- a:setName(java.lang.String):V
com.intellij.psi.scope.PsiScopeProcessor
- a:execute(com.intellij.psi.PsiElement,com.intellij.psi.ResolveState):Z
- executeForUnresolved():Z
- getHint(com.intellij.openapi.util.Key):java.lang.Object
- handleEvent(com.intellij.psi.scope.PsiScopeProcessor$Event,java.lang.Object):V
com.intellij.psi.scope.PsiScopeProcessor$Event
- sf:SET_DECLARATION_HOLDER:com.intellij.psi.scope.PsiScopeProcessor$Event
c:com.intellij.psi.search.DelegatingGlobalSearchScope
- com.intellij.psi.search.GlobalSearchScope
- pf:myBaseScope:com.intellij.psi.search.GlobalSearchScope
- p:<init>(com.intellij.openapi.project.Project):V
- <init>(com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope):V
- <init>(com.intellij.psi.search.GlobalSearchScope):V
- <init>(com.intellij.psi.search.GlobalSearchScope,java.lang.Object[]):V
- calcHashCode():I
- compare(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):I
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- equals(java.lang.Object):Z
- getDelegate():com.intellij.psi.search.GlobalSearchScope
- getDisplayName():java.lang.String
- getIcon():javax.swing.Icon
- getUnloadedModulesBelongingToScope():java.util.Collection
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
- isSearchInModuleContent(com.intellij.openapi.module.Module,Z):Z
- unwrap():com.intellij.psi.search.GlobalSearchScope
c:com.intellij.psi.search.EverythingGlobalScope
- com.intellij.psi.search.GlobalSearchScope
- <init>():V
- <init>(com.intellij.openapi.project.Project):V
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- getDisplayName():java.lang.String
- s:getNameText():java.lang.String
- getUnloadedModulesBelongingToScope():java.util.Collection
- intersectWith(com.intellij.psi.search.SearchScope):com.intellij.psi.search.SearchScope
- isForceSearchingInLibrarySources():Z
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
- union(com.intellij.psi.search.SearchScope):com.intellij.psi.search.GlobalSearchScope
a:com.intellij.psi.search.GlobalSearchScope
- com.intellij.psi.search.SearchScope
- com.intellij.psi.search.ProjectAwareFileFilter
- sf:EMPTY_ARRAY:com.intellij.psi.search.GlobalSearchScope[]
- sf:EMPTY_SCOPE:com.intellij.psi.search.GlobalSearchScope
- p:<init>():V
- p:<init>(com.intellij.openapi.project.Project):V
- f:accept(com.intellij.openapi.vfs.VirtualFile):Z
- s:allScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- compare(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile):I
- s:everythingScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- s:fileScope(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.search.GlobalSearchScope
- s:fileScope(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile,java.lang.String):com.intellij.psi.search.GlobalSearchScope
- s:fileScope(com.intellij.psi.PsiFile):com.intellij.psi.search.GlobalSearchScope
- s:filesScope(com.intellij.openapi.project.Project,java.util.Collection):com.intellij.psi.search.GlobalSearchScope
- s:filesScope(com.intellij.openapi.project.Project,java.util.Collection,java.lang.String):com.intellij.psi.search.GlobalSearchScope
- s:filesScope(com.intellij.openapi.project.Project,java.util.function.Supplier):com.intellij.psi.search.GlobalSearchScope
- s:filesWithLibrariesScope(com.intellij.openapi.project.Project,java.util.Collection):com.intellij.psi.search.GlobalSearchScope
- s:filesWithoutLibrariesScope(com.intellij.openapi.project.Project,java.util.Collection):com.intellij.psi.search.GlobalSearchScope
- F:getProject():com.intellij.openapi.project.Project
- s:getScopeRestrictedByFileTypes(com.intellij.psi.search.GlobalSearchScope,com.intellij.openapi.fileTypes.FileType[]):com.intellij.psi.search.GlobalSearchScope
- getUnloadedModulesBelongingToScope():java.util.Collection
- intersectWith(com.intellij.psi.search.GlobalSearchScope):com.intellij.psi.search.GlobalSearchScope
- intersectWith(com.intellij.psi.search.LocalSearchScope):com.intellij.psi.search.LocalSearchScope
- intersectWith(com.intellij.psi.search.SearchScope):com.intellij.psi.search.SearchScope
- isForceSearchingInLibrarySources():Z
- a:isSearchInLibraries():Z
- a:isSearchInModuleContent(com.intellij.openapi.module.Module):Z
- isSearchInModuleContent(com.intellij.openapi.module.Module,Z):Z
- s:moduleRuntimeScope(com.intellij.openapi.module.Module,Z):com.intellij.psi.search.GlobalSearchScope
- s:moduleScope(com.intellij.openapi.module.Module):com.intellij.psi.search.GlobalSearchScope
- s:moduleTestsWithDependentsScope(com.intellij.openapi.module.Module):com.intellij.psi.search.GlobalSearchScope
- s:moduleWithDependenciesAndLibrariesScope(com.intellij.openapi.module.Module):com.intellij.psi.search.GlobalSearchScope
- s:moduleWithDependenciesAndLibrariesScope(com.intellij.openapi.module.Module,Z):com.intellij.psi.search.GlobalSearchScope
- s:moduleWithDependenciesScope(com.intellij.openapi.module.Module):com.intellij.psi.search.GlobalSearchScope
- s:moduleWithDependentsScope(com.intellij.openapi.module.Module):com.intellij.psi.search.GlobalSearchScope
- s:moduleWithLibrariesScope(com.intellij.openapi.module.Module):com.intellij.psi.search.GlobalSearchScope
- s:notScope(com.intellij.psi.search.GlobalSearchScope):com.intellij.psi.search.GlobalSearchScope
- s:projectScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- union(com.intellij.psi.search.LocalSearchScope):com.intellij.psi.search.GlobalSearchScope
- union(com.intellij.psi.search.SearchScope):com.intellij.psi.search.GlobalSearchScope
- s:union(java.util.Collection):com.intellij.psi.search.GlobalSearchScope
- s:union(com.intellij.psi.search.GlobalSearchScope[]):com.intellij.psi.search.GlobalSearchScope
- uniteWith(com.intellij.psi.search.GlobalSearchScope):com.intellij.psi.search.GlobalSearchScope
c:com.intellij.psi.search.GlobalSearchScope$FilesScope
- com.intellij.psi.search.GlobalSearchScope
- getFiles():com.intellij.openapi.vfs.VirtualFileSet
f:com.intellij.psi.search.GlobalSearchScopeUtil
- <init>():V
- s:getLocalScopeFiles(com.intellij.psi.search.LocalSearchScope):java.util.Set
- s:toGlobalSearchScope(com.intellij.psi.search.SearchScope,com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
c:com.intellij.psi.search.LocalSearchScope
- com.intellij.psi.search.SearchScope
- sf:EMPTY:com.intellij.psi.search.LocalSearchScope
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,java.lang.String):V
- <init>(com.intellij.psi.PsiElement[]):V
- <init>(com.intellij.psi.PsiElement[],java.lang.String):V
- <init>(com.intellij.psi.PsiElement[],java.lang.String,Z):V
- p:calcHashCode():I
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- containsRange(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):Z
- equals(java.lang.Object):Z
- getDisplayName():java.lang.String
- getScope():com.intellij.psi.PsiElement[]
- s:getScopeRestrictedByFileTypes(com.intellij.psi.search.LocalSearchScope,com.intellij.openapi.fileTypes.FileType[]):com.intellij.psi.search.LocalSearchScope
- getVirtualFiles():com.intellij.openapi.vfs.VirtualFile[]
- intersectWith(com.intellij.psi.search.LocalSearchScope):com.intellij.psi.search.LocalSearchScope
- intersectWith(com.intellij.psi.search.SearchScope):com.intellij.psi.search.SearchScope
- isIgnoreInjectedPsi():Z
- isInScope(com.intellij.openapi.vfs.VirtualFile):Z
- union(com.intellij.psi.search.LocalSearchScope):com.intellij.psi.search.SearchScope
- union(com.intellij.psi.search.SearchScope):com.intellij.psi.search.SearchScope
c:com.intellij.psi.search.NonClasspathDirectoriesScope
- com.intellij.psi.search.GlobalSearchScope
- <init>(java.util.Collection):V
- calcHashCode():I
- s:compose(java.util.List):com.intellij.psi.search.GlobalSearchScope
- contains(com.intellij.openapi.vfs.VirtualFile):Z
- equals(java.lang.Object):Z
- getDisplayName():java.lang.String
- isSearchInLibraries():Z
- isSearchInModuleContent(com.intellij.openapi.module.Module):Z
com.intellij.psi.search.ProjectAwareFileFilter
- com.intellij.openapi.vfs.VirtualFileFilter
- a:getProject():com.intellij.openapi.project.Project
f:com.intellij.psi.search.ProjectScope
- s:getAllScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- s:getContentScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- s:getEverythingScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- s:getLibrariesScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
- s:getProjectFilesScopeName():java.lang.String
- s:getProjectScope(com.intellij.openapi.project.Project):com.intellij.psi.search.GlobalSearchScope
com.intellij.psi.search.PsiElementProcessor
- a:execute(com.intellij.psi.PsiElement):Z
c:com.intellij.psi.search.PsiElementProcessor$CollectElements
- com.intellij.psi.search.PsiElementProcessor
- <init>():V
- <init>(java.util.Collection):V
- execute(com.intellij.psi.PsiElement):Z
- getCollection():java.util.Collection
- toArray():com.intellij.psi.PsiElement[]
- toArray(com.intellij.psi.PsiElement[]):com.intellij.psi.PsiElement[]
c:com.intellij.psi.search.PsiElementProcessor$CollectElementsWithLimit
- com.intellij.psi.search.PsiElementProcessor$CollectElements
- <init>(I):V
- <init>(I,java.util.Collection):V
- execute(com.intellij.psi.PsiElement):Z
- isOverflow():Z
c:com.intellij.psi.search.PsiElementProcessor$CollectFilteredElements
- com.intellij.psi.search.PsiElementProcessor$CollectElements
- <init>(com.intellij.psi.util.PsiElementFilter):V
- <init>(com.intellij.psi.util.PsiElementFilter,java.util.Collection):V
- execute(com.intellij.psi.PsiElement):Z
c:com.intellij.psi.search.PsiElementProcessor$FindElement
- com.intellij.psi.search.PsiElementProcessor
- <init>():V
- execute(com.intellij.psi.PsiElement):Z
- getFoundElement():com.intellij.psi.PsiElement
- isFound():Z
- setFound(com.intellij.psi.PsiElement):Z
c:com.intellij.psi.search.PsiElementProcessorAdapter
- com.intellij.openapi.application.ReadActionProcessor
- com.intellij.util.Processor
- <init>(com.intellij.psi.search.PsiElementProcessor):V
- processInReadAction(com.intellij.psi.PsiElement):Z
com.intellij.psi.search.PsiNonJavaFileReferenceProcessor
- a:process(com.intellij.psi.PsiFile,I,I):Z
f:com.intellij.psi.search.PsiSearchScopeUtil
- sf:USE_SCOPE_KEY:com.intellij.openapi.util.Key
- <init>():V
- s:isInScope(com.intellij.psi.search.GlobalSearchScope,com.intellij.psi.PsiElement):Z
- s:isInScope(com.intellij.psi.search.LocalSearchScope,com.intellij.psi.PsiElement):Z
- s:isInScope(com.intellij.psi.search.SearchScope,com.intellij.psi.PsiElement):Z
- s:restrictScopeTo(com.intellij.psi.search.SearchScope,com.intellij.openapi.fileTypes.FileType[]):com.intellij.psi.search.SearchScope
- s:union(com.intellij.psi.search.SearchScope,com.intellij.psi.search.SearchScope):com.intellij.psi.search.SearchScope
a:com.intellij.psi.search.SearchScope
- <init>():V
- p:calcHashCode():I
- a:contains(com.intellij.openapi.vfs.VirtualFile):Z
- getDisplayName():java.lang.String
- getIcon():javax.swing.Icon
- F:hashCode():I
- a:intersectWith(com.intellij.psi.search.SearchScope):com.intellij.psi.search.SearchScope
- s:isEmptyScope(com.intellij.psi.search.SearchScope):Z
- a:union(com.intellij.psi.search.SearchScope):com.intellij.psi.search.SearchScope
c:com.intellij.psi.search.searches.ExtensibleQueryFactory
- com.intellij.util.QueryFactory
- p:<init>():V
- p:<init>(com.intellij.openapi.extensions.ExtensionPointName):V
- p:<init>(java.lang.String):V
- p:getExecutors():java.util.List
- registerExecutor(com.intellij.util.QueryExecutor):V
- registerExecutor(com.intellij.util.QueryExecutor,com.intellij.openapi.Disposable):V
- unregisterExecutor(com.intellij.util.QueryExecutor):V
com.intellij.psi.stubs.BinaryFileStubBuilder
- a:acceptsFile(com.intellij.openapi.vfs.VirtualFile):Z
- a:buildStubTree(com.intellij.util.indexing.FileContent):com.intellij.psi.stubs.Stub
- a:getStubVersion():I
com.intellij.psi.stubs.BinaryFileStubBuilder$CompositeBinaryFileStubBuilder
- com.intellij.psi.stubs.BinaryFileStubBuilder
- buildStubTree(com.intellij.util.indexing.FileContent):com.intellij.psi.stubs.Stub
- a:buildStubTree(com.intellij.util.indexing.FileContent,java.lang.Object):com.intellij.psi.stubs.Stub
- a:getAllSubBuilders():java.util.stream.Stream
- a:getSubBuilder(com.intellij.util.indexing.FileContent):java.lang.Object
- a:getSubBuilderVersion(java.lang.Object):java.lang.String
c:com.intellij.psi.stubs.BinaryFileStubBuilders
- com.intellij.openapi.fileTypes.FileTypeExtension
- sf:INSTANCE:com.intellij.psi.stubs.BinaryFileStubBuilders
- <init>():V
f:com.intellij.psi.stubs.EmptyStub
- com.intellij.psi.stubs.StubBase
- <init>(com.intellij.psi.stubs.StubElement,com.intellij.psi.stubs.IStubElementType):V
a:com.intellij.psi.stubs.EmptyStubElementType
- com.intellij.psi.stubs.IStubElementType
- p:<init>(java.lang.String,com.intellij.lang.Language):V
- f:createStub(com.intellij.psi.PsiElement,com.intellij.psi.stubs.StubElement):com.intellij.psi.stubs.EmptyStub
- p:createStub(com.intellij.psi.stubs.StubElement):com.intellij.psi.stubs.EmptyStub
- f:deserialize(com.intellij.psi.stubs.StubInputStream,com.intellij.psi.stubs.StubElement):com.intellij.psi.stubs.EmptyStub
- getExternalId():java.lang.String
- f:indexStub(com.intellij.psi.stubs.EmptyStub,com.intellij.psi.stubs.IndexSink):V
- f:serialize(com.intellij.psi.stubs.EmptyStub,com.intellij.psi.stubs.StubOutputStream):V
com.intellij.psi.stubs.EmptyStubSerializer
- com.intellij.psi.stubs.StubSerializer
- F:deserialize(com.intellij.psi.stubs.StubInputStream,com.intellij.psi.stubs.StubElement):com.intellij.psi.stubs.StubElement
- a:instantiate(com.intellij.psi.stubs.StubElement):com.intellij.psi.stubs.StubElement
- F:serialize(com.intellij.psi.stubs.StubElement,com.intellij.psi.stubs.StubOutputStream):V
a:com.intellij.psi.stubs.ILightStubElementType
- com.intellij.psi.stubs.IStubElementType
- <init>(java.lang.String,com.intellij.lang.Language):V
- a:createStub(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.stubs.StubElement):com.intellij.psi.stubs.StubElement
- shouldCreateStub(com.intellij.lang.LighterAST,com.intellij.lang.LighterASTNode,com.intellij.psi.stubs.StubElement):Z
a:com.intellij.psi.stubs.IStubElementType
- com.intellij.psi.tree.IElementType
- com.intellij.psi.stubs.StubSerializer
- <init>(java.lang.String,com.intellij.lang.Language):V
- s:checkNotInstantiatedTooLate(java.lang.Class):V
- a:createPsi(com.intellij.psi.stubs.StubElement):com.intellij.psi.PsiElement
- a:createStub(com.intellij.psi.PsiElement,com.intellij.psi.stubs.StubElement):com.intellij.psi.stubs.StubElement
- shouldCreateStub(com.intellij.lang.ASTNode):Z
com.intellij.psi.stubs.IndexSink
- a:occurrence(com.intellij.psi.stubs.StubIndexKey,java.lang.Object):V
com.intellij.psi.stubs.NamedStub
- com.intellij.psi.stubs.StubElement
- a:getName():java.lang.String
a:com.intellij.psi.stubs.ObjectStubBase
- com.intellij.openapi.util.UserDataHolderBase
- com.intellij.psi.stubs.Stub
- pf:myParent:com.intellij.psi.stubs.Stub
- <init>(com.intellij.psi.stubs.Stub):V
- getParentStub():com.intellij.psi.stubs.Stub
- getStubId():I
- isDangling():Z
- markDangling():V
com.intellij.psi.stubs.ObjectStubSerializer
- a:deserialize(com.intellij.psi.stubs.StubInputStream,com.intellij.psi.stubs.Stub):com.intellij.psi.stubs.Stub
- a:getExternalId():java.lang.String
- a:indexStub(com.intellij.psi.stubs.Stub,com.intellij.psi.stubs.IndexSink):V
- isAlwaysLeaf(com.intellij.psi.stubs.StubBase):Z
- a:serialize(com.intellij.psi.stubs.Stub,com.intellij.psi.stubs.StubOutputStream):V
com.intellij.psi.stubs.PsiFileStub
- com.intellij.openapi.util.UserDataHolder
- com.intellij.psi.stubs.StubElement
- sf:EMPTY_ARRAY:com.intellij.psi.stubs.PsiFileStub[]
- a:getInvalidationReason():java.lang.String
- a:getType():com.intellij.psi.tree.StubFileElementType
c:com.intellij.psi.stubs.SerializerNotFoundException
- java.lang.Exception
- <init>(java.lang.String):V
com.intellij.psi.stubs.Stub
- a:getChildrenStubs():java.util.List
- a:getParentStub():com.intellij.psi.stubs.Stub
- a:getStubType():com.intellij.psi.stubs.ObjectStubSerializer
a:com.intellij.psi.stubs.StubBase
- com.intellij.psi.stubs.ObjectStubBase
- com.intellij.psi.stubs.StubElement
- p:<init>(com.intellij.psi.stubs.StubElement,com.intellij.psi.stubs.IStubElementType):V
- compareByOrderWith(com.intellij.psi.stubs.ObjectStubBase):I
- findChildStubByType(com.intellij.psi.stubs.IStubElementType):com.intellij.psi.stubs.StubElement
- getChildrenByType(com.intellij.psi.tree.IElementType,com.intellij.util.ArrayFactory):com.intellij.psi.PsiElement[]
- getChildrenByType(com.intellij.psi.tree.IElementType,com.intellij.psi.PsiElement[]):com.intellij.psi.PsiElement[]
- getChildrenByType(com.intellij.psi.tree.TokenSet,com.intellij.util.ArrayFactory):com.intellij.psi.PsiElement[]
- getChildrenByType(com.intellij.psi.tree.TokenSet,com.intellij.psi.PsiElement[]):com.intellij.psi.PsiElement[]
- getChildrenStubs():java.util.List
- getContainingFileStub():com.intellij.psi.stubs.PsiFileStub
- getParentStub():com.intellij.psi.stubs.StubElement
- getParentStubOfType(java.lang.Class):com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getPsi():com.intellij.psi.PsiElement
- getStubType():com.intellij.psi.stubs.IStubElementType
- printTree():java.lang.String
- setPsi(com.intellij.psi.PsiElement):V
com.intellij.psi.stubs.StubElement
- com.intellij.psi.stubs.Stub
- a:findChildStubByType(com.intellij.psi.stubs.IStubElementType):com.intellij.psi.stubs.StubElement
- a:getChildrenByType(com.intellij.psi.tree.IElementType,com.intellij.util.ArrayFactory):com.intellij.psi.PsiElement[]
- a:getChildrenByType(com.intellij.psi.tree.IElementType,com.intellij.psi.PsiElement[]):com.intellij.psi.PsiElement[]
- a:getChildrenByType(com.intellij.psi.tree.TokenSet,com.intellij.util.ArrayFactory):com.intellij.psi.PsiElement[]
- a:getChildrenByType(com.intellij.psi.tree.TokenSet,com.intellij.psi.PsiElement[]):com.intellij.psi.PsiElement[]
- a:getChildrenStubs():java.util.List
- a:getContainingFileStub():com.intellij.psi.stubs.PsiFileStub
- a:getParentStub():com.intellij.psi.stubs.StubElement
- a:getParentStubOfType(java.lang.Class):com.intellij.psi.PsiElement
- a:getPsi():com.intellij.psi.PsiElement
- a:getStubType():com.intellij.psi.stubs.IStubElementType
f:com.intellij.psi.stubs.StubElementTypeHolderEP
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- externalIdPrefix:java.lang.String
- holderClass:java.lang.String
- <init>():V
f:com.intellij.psi.stubs.StubIndexKey
- com.intellij.util.indexing.ID
- s:createIndexKey(java.lang.String):com.intellij.psi.stubs.StubIndexKey
c:com.intellij.psi.stubs.StubInputStream
- java.io.DataInputStream
- <init>(java.io.InputStream,com.intellij.util.io.AbstractStringEnumerator):V
- readName():com.intellij.util.io.StringRef
- readNameString():java.lang.String
- readUTFFast():java.lang.String
- readVarInt():I
c:com.intellij.psi.stubs.StubOutputStream
- com.intellij.util.io.DataOutputStream
- <init>(java.io.OutputStream,com.intellij.util.io.AbstractStringEnumerator):V
- writeName(java.lang.String):V
- writeUTFFast(java.lang.String):V
- writeVarInt(I):V
com.intellij.psi.stubs.StubSerializer
- com.intellij.psi.stubs.ObjectStubSerializer
c:com.intellij.psi.targets.AliasingPsiTarget
- com.intellij.psi.DelegatePsiTarget
- com.intellij.pom.PomRenameableTarget
- <init>(com.intellij.psi.PsiNamedElement):V
- getName():java.lang.String
- getNameAlias(java.lang.String):java.lang.String
- getTargetName(java.lang.String):java.lang.String
- isWritable():Z
- setAliasName(java.lang.String):com.intellij.psi.targets.AliasingPsiTarget
- setName(java.lang.String):com.intellij.psi.targets.AliasingPsiTarget
com.intellij.psi.targets.AliasingPsiTargetMapper
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getTargets(com.intellij.pom.PomTarget):java.util.Set
c:com.intellij.psi.targets.DecapitalizedAliasingPsiTarget
- com.intellij.psi.targets.AliasingPsiTarget
- <init>(com.intellij.psi.PsiNamedElement):V
- getNameAlias(java.lang.String):java.lang.String
- getTargetName(java.lang.String):java.lang.String
com.intellij.psi.templateLanguages.ITemplateDataElementType
com.intellij.psi.templateLanguages.OuterLanguageElement
- com.intellij.psi.PsiElement
com.intellij.psi.templateLanguages.TemplateLanguage
com.intellij.psi.templateLanguages.TemplateLanguageFileViewProvider
- com.intellij.psi.FileViewProvider
- a:getBaseLanguage():com.intellij.lang.Language
- a:getTemplateDataLanguage():com.intellij.lang.Language
f:com.intellij.psi.templateLanguages.TemplateLanguageUtil
- s:getBaseFile(com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- s:getSameLanguageTreeNext(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- s:getSameLanguageTreeNext(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getSameLanguageTreePrev(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- s:getSameLanguageTreePrev(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getTemplateFile(com.intellij.psi.PsiFile):com.intellij.psi.PsiFile
- s:isInsideTemplateFile(com.intellij.psi.PsiElement):Z
- s:isTemplateDataFile(com.intellij.psi.PsiFile):Z
com.intellij.psi.tree.CustomLanguageASTComparator
- sf:EXTENSION_POINT_NAME:com.intellij.lang.LanguageExtension
- a:compareAST(com.intellij.lang.ASTNode,com.intellij.lang.LighterASTNode,com.intellij.util.diff.FlyweightCapableTreeStructure):com.intellij.util.ThreeState
- s:getMatchingComparators(com.intellij.psi.PsiFile):java.util.List
a:com.intellij.psi.tree.CustomParsingType
- com.intellij.psi.tree.IElementType
- com.intellij.psi.tree.ICustomParsingType
- <init>(java.lang.String,com.intellij.lang.Language):V
com.intellij.psi.tree.ICompositeElementType
- a:createCompositeNode():com.intellij.lang.ASTNode
com.intellij.psi.tree.ICustomParsingType
- a:parse(java.lang.CharSequence,com.intellij.util.CharTable):com.intellij.lang.ASTNode
c:com.intellij.psi.tree.IElementType
- sf:ARRAY_FACTORY:com.intellij.util.ArrayFactory
- sf:EMPTY_ARRAY:com.intellij.psi.tree.IElementType[]
- sf:FIRST_TOKEN_INDEX:S
- sf:TRUE:com.intellij.psi.tree.IElementType$Predicate
- <init>(java.lang.String,com.intellij.lang.Language):V
- p:<init>(java.lang.String,com.intellij.lang.Language,Z):V
- s:enumerate(com.intellij.psi.tree.IElementType$Predicate):com.intellij.psi.tree.IElementType[]
- s:find(S):com.intellij.psi.tree.IElementType
- f:getIndex():S
- getLanguage():com.intellij.lang.Language
- hashCode():I
- isLeftBound():Z
com.intellij.psi.tree.IElementType$Predicate
- a:matches(com.intellij.psi.tree.IElementType):Z
c:com.intellij.psi.tree.IFileElementType
- com.intellij.psi.tree.ILazyParseableElementType
- <init>(com.intellij.lang.Language):V
- <init>(java.lang.String,com.intellij.lang.Language):V
- <init>(java.lang.String,com.intellij.lang.Language,Z):V
- parseContents(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
c:com.intellij.psi.tree.ILazyParseableElementType
- com.intellij.psi.tree.IElementType
- com.intellij.psi.tree.ILazyParseableElementTypeBase
- sf:LANGUAGE_KEY:com.intellij.openapi.util.Key
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.lang.Language):V
- <init>(java.lang.String,com.intellij.lang.Language,Z):V
- createNode(java.lang.CharSequence):com.intellij.lang.ASTNode
- p:doParseContents(com.intellij.lang.ASTNode,com.intellij.psi.PsiElement):com.intellij.lang.ASTNode
- p:getLanguageForParser(com.intellij.psi.PsiElement):com.intellij.lang.Language
- parseContents(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
com.intellij.psi.tree.ILazyParseableElementTypeBase
- a:parseContents(com.intellij.lang.ASTNode):com.intellij.lang.ASTNode
- reuseCollapsedTokens():Z
com.intellij.psi.tree.ILeafElementType
- a:createLeafNode(java.lang.CharSequence):com.intellij.lang.ASTNode
com.intellij.psi.tree.ILightLazyParseableElementType
- a:parseContents(com.intellij.lang.LighterLazyParseableNode):com.intellij.util.diff.FlyweightCapableTreeStructure
c:com.intellij.psi.tree.IReparseableElementType
- com.intellij.psi.tree.ILazyParseableElementType
- com.intellij.psi.tree.IReparseableElementTypeBase
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.lang.Language):V
- <init>(java.lang.String,com.intellij.lang.Language,Z):V
- isParsable(com.intellij.lang.ASTNode,java.lang.CharSequence,com.intellij.lang.Language,com.intellij.openapi.project.Project):Z
- isParsable(java.lang.CharSequence,com.intellij.lang.Language,com.intellij.openapi.project.Project):Z
com.intellij.psi.tree.IReparseableElementTypeBase
- com.intellij.psi.tree.ILazyParseableElementTypeBase
- isParsable(com.intellij.lang.ASTNode,java.lang.CharSequence,com.intellij.lang.Language,com.intellij.openapi.project.Project):Z
- isReparseable(com.intellij.lang.ASTNode,java.lang.CharSequence,com.intellij.lang.Language,com.intellij.openapi.project.Project):Z
- isValidReparse(com.intellij.lang.ASTNode,com.intellij.lang.ASTNode):Z
com.intellij.psi.tree.IReparseableLeafElementType
- a:reparseLeaf(com.intellij.lang.ASTNode,java.lang.CharSequence):com.intellij.lang.ASTNode
com.intellij.psi.tree.IStrongWhitespaceHolderElementType
f:com.intellij.psi.tree.ParentAwareTokenSet
- contains(com.intellij.psi.tree.IElementType):Z
- s:create(com.intellij.psi.tree.TokenSet):com.intellij.psi.tree.ParentAwareTokenSet
- s:create(java.util.Set):com.intellij.psi.tree.ParentAwareTokenSet
- s:create(com.intellij.psi.tree.IElementType[]):com.intellij.psi.tree.ParentAwareTokenSet
- s:orSet(com.intellij.psi.tree.ParentAwareTokenSet[]):com.intellij.psi.tree.ParentAwareTokenSet
com.intellij.psi.tree.ParentProviderElementType
- s:containsWithSourceParent(com.intellij.psi.tree.IElementType,com.intellij.psi.tree.TokenSet):Z
- a:getParents():java.util.Set
a:com.intellij.psi.tree.StubFileElementType
- com.intellij.psi.tree.IFileElementType
- com.intellij.psi.stubs.StubSerializer
- sf:DEFAULT_EXTERNAL_ID:java.lang.String
- <init>(com.intellij.lang.Language):V
- <init>(java.lang.String,com.intellij.lang.Language):V
f:com.intellij.psi.tree.TokenSet
- sf:ANY:com.intellij.psi.tree.TokenSet
- sf:EMPTY:com.intellij.psi.tree.TokenSet
- sf:WHITE_SPACE:com.intellij.psi.tree.TokenSet
- s:andNot(com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet):com.intellij.psi.tree.TokenSet
- s:andSet(com.intellij.psi.tree.TokenSet,com.intellij.psi.tree.TokenSet):com.intellij.psi.tree.TokenSet
- contains(com.intellij.psi.tree.IElementType):Z
- s:create(com.intellij.psi.tree.IElementType[]):com.intellij.psi.tree.TokenSet
- s:forAllMatching(com.intellij.psi.tree.IElementType$Predicate):com.intellij.psi.tree.TokenSet
- getTypes():com.intellij.psi.tree.IElementType[]
- s:orSet(com.intellij.psi.tree.TokenSet[]):com.intellij.psi.tree.TokenSet
com.intellij.psi.util.CachedValue
- a:getUpToDateOrNull():com.intellij.openapi.util.Getter
- a:getValue():java.lang.Object
- a:getValueProvider():com.intellij.psi.util.CachedValueProvider
- a:hasUpToDateValue():Z
com.intellij.psi.util.CachedValueProvider
- a:compute():com.intellij.psi.util.CachedValueProvider$Result
f:com.intellij.psi.util.CachedValueProvider$Result
- <init>(java.lang.Object,java.lang.Object[]):V
- s:create(java.lang.Object,java.util.Collection):com.intellij.psi.util.CachedValueProvider$Result
- s:create(java.lang.Object,java.lang.Object[]):com.intellij.psi.util.CachedValueProvider$Result
- s:createSingleDependency(java.lang.Object,java.lang.Object):com.intellij.psi.util.CachedValueProvider$Result
- getDependencyItems():java.lang.Object[]
- getValue():java.lang.Object
a:com.intellij.psi.util.CachedValuesManager
- <init>():V
- a:createCachedValue(com.intellij.openapi.util.UserDataHolder,com.intellij.psi.util.CachedValueProvider,Z):com.intellij.psi.util.CachedValue
- createCachedValue(com.intellij.psi.util.CachedValueProvider):com.intellij.psi.util.CachedValue
- a:createCachedValue(com.intellij.psi.util.CachedValueProvider,Z):com.intellij.psi.util.CachedValue
- pa:createParameterizedCachedValue(com.intellij.openapi.util.UserDataHolder,com.intellij.psi.util.ParameterizedCachedValueProvider,Z):com.intellij.psi.util.ParameterizedCachedValue
- a:createParameterizedCachedValue(com.intellij.psi.util.ParameterizedCachedValueProvider,Z):com.intellij.psi.util.ParameterizedCachedValue
- a:getCachedValue(com.intellij.openapi.util.UserDataHolder,com.intellij.openapi.util.Key,com.intellij.psi.util.CachedValueProvider,Z):java.lang.Object
- getCachedValue(com.intellij.openapi.util.UserDataHolder,com.intellij.psi.util.CachedValueProvider):java.lang.Object
- s:getCachedValue(com.intellij.psi.PsiElement,com.intellij.openapi.util.Key,com.intellij.psi.util.CachedValueProvider):java.lang.Object
- s:getCachedValue(com.intellij.psi.PsiElement,com.intellij.psi.util.CachedValueProvider):java.lang.Object
- getKeyForClass(java.lang.Class):com.intellij.openapi.util.Key
- s:getManager(com.intellij.openapi.project.Project):com.intellij.psi.util.CachedValuesManager
- getParameterizedCachedValue(com.intellij.openapi.util.UserDataHolder,com.intellij.openapi.util.Key,com.intellij.psi.util.ParameterizedCachedValueProvider,Z,java.lang.Object):java.lang.Object
- s:getProjectPsiDependentCache(com.intellij.psi.PsiElement,java.util.function.Function):java.lang.Object
com.intellij.psi.util.ParameterizedCachedValue
- a:getValue(java.lang.Object):java.lang.Object
- a:getValueProvider():com.intellij.psi.util.ParameterizedCachedValueProvider
- a:hasUpToDateValue():Z
com.intellij.psi.util.ParameterizedCachedValueProvider
- a:compute(java.lang.Object):com.intellij.psi.util.CachedValueProvider$Result
f:com.intellij.psi.util.PsiCacheKey
- com.intellij.openapi.util.Key
- s:create(java.lang.String,com.intellij.util.Function):com.intellij.psi.util.PsiCacheKey
- getCachedValueOrNull(com.intellij.psi.PsiElement):java.lang.Object
- getValue(com.intellij.psi.PsiElement):java.lang.Object
com.intellij.psi.util.PsiElementFilter
- a:isAccepted(com.intellij.psi.PsiElement):Z
a:com.intellij.psi.util.PsiFormatUtilBase
- sf:JAVADOC_MODIFIERS_ONLY:I
- sf:MAX_PARAMS_TO_SHOW:I
- sf:MODIFIERS_AFTER:I
- sf:SHOW_ANONYMOUS_CLASS_VERBOSE:I
- sf:SHOW_CONTAINING_CLASS:I
- sf:SHOW_EXTENDS_IMPLEMENTS:I
- sf:SHOW_FQ_CLASS_NAMES:I
- sf:SHOW_FQ_NAME:I
- sf:SHOW_INITIALIZER:I
- sf:SHOW_MODIFIERS:I
- sf:SHOW_NAME:I
- sf:SHOW_PACKAGE_LOCAL:I
- sf:SHOW_PARAMETERS:I
- sf:SHOW_RAW_NON_TOP_TYPE:I
- sf:SHOW_RAW_TYPE:I
- sf:SHOW_REDUNDANT_MODIFIERS:I
- sf:SHOW_THROWS:I
- sf:SHOW_TYPE:I
- sf:TYPE_AFTER:I
- sf:USE_INTERNAL_CANONICAL_TEXT:I
- <init>():V
- ps:appendSpaceIfNeeded(java.lang.StringBuilder):V
com.intellij.psi.util.PsiModificationTracker
- com.intellij.openapi.util.ModificationTracker
- sf:JAVA_STRUCTURE_MODIFICATION_COUNT:com.intellij.openapi.util.Key
- sf:MODIFICATION_COUNT:com.intellij.openapi.util.Key
- sf:TOPIC:com.intellij.util.messages.Topic
- a:forLanguage(com.intellij.lang.Language):com.intellij.openapi.util.ModificationTracker
- a:forLanguages(java.util.function.Predicate):com.intellij.openapi.util.ModificationTracker
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.util.PsiModificationTracker
- a:getJavaStructureModificationTracker():com.intellij.openapi.util.ModificationTracker
- a:getModificationCount():J
com.intellij.psi.util.PsiModificationTracker$Listener
- a:modificationCountChanged():V
f:com.intellij.psi.util.PsiModificationTracker$SERVICE
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.psi.util.PsiModificationTracker
Fc:com.intellij.psi.util.PsiTreeUtil
- <init>():V
- s:collectElements(com.intellij.psi.PsiElement,com.intellij.psi.util.PsiElementFilter):com.intellij.psi.PsiElement[]
- s:collectElementsOfType(com.intellij.psi.PsiElement,java.lang.Class[]):java.util.Collection
- s:collectParents(com.intellij.psi.PsiElement,java.lang.Class,Z,java.util.function.Predicate):java.util.List
- s:countChildrenOfType(com.intellij.psi.PsiElement,java.lang.Class):I
- s:filterAncestors(com.intellij.psi.PsiElement[]):com.intellij.psi.PsiElement[]
- s:findChildOfAnyType(com.intellij.psi.PsiElement,Z,java.lang.Class[]):com.intellij.psi.PsiElement
- s:findChildOfAnyType(com.intellij.psi.PsiElement,java.lang.Class[]):com.intellij.psi.PsiElement
- s:findChildOfType(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement
- s:findChildOfType(com.intellij.psi.PsiElement,java.lang.Class,Z):com.intellij.psi.PsiElement
- s:findChildOfType(com.intellij.psi.PsiElement,java.lang.Class,Z,java.lang.Class):com.intellij.psi.PsiElement
- s:findChildrenOfAnyType(com.intellij.psi.PsiElement,Z,java.lang.Class[]):java.util.Collection
- s:findChildrenOfAnyType(com.intellij.psi.PsiElement,java.lang.Class[]):java.util.Collection
- s:findChildrenOfType(com.intellij.psi.PsiElement,java.lang.Class):java.util.Collection
- s:findCommonContext(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:findCommonContext(java.util.Collection):com.intellij.psi.PsiElement
- s:findCommonParent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:findCommonParent(java.util.List):com.intellij.psi.PsiElement
- s:findCommonParent(com.intellij.psi.PsiElement[]):com.intellij.psi.PsiElement
- s:findElementOfClassAtOffset(com.intellij.psi.PsiFile,I,java.lang.Class,Z):com.intellij.psi.PsiElement
- s:findElementOfClassAtOffsetWithStopSet(com.intellij.psi.PsiFile,I,java.lang.Class,Z,java.lang.Class[]):com.intellij.psi.PsiElement
- s:findElementOfClassAtRange(com.intellij.psi.PsiFile,I,I,java.lang.Class):com.intellij.psi.PsiElement
- s:findFirstContext(com.intellij.psi.PsiElement,Z,com.intellij.openapi.util.Condition):com.intellij.psi.PsiElement
- s:findFirstParent(com.intellij.psi.PsiElement,com.intellij.openapi.util.Condition):com.intellij.psi.PsiElement
- s:findFirstParent(com.intellij.psi.PsiElement,Z,com.intellij.openapi.util.Condition):com.intellij.psi.PsiElement
- s:findPrevParent(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:findSameElementInCopy(com.intellij.psi.PsiElement,com.intellij.psi.PsiFile):com.intellij.psi.PsiElement
- s:findSiblingBackward(com.intellij.psi.PsiElement,com.intellij.psi.tree.IElementType,com.intellij.util.Consumer):com.intellij.psi.PsiElement
- s:findSiblingBackward(com.intellij.psi.PsiElement,com.intellij.psi.tree.IElementType,Z,com.intellij.util.Consumer):com.intellij.psi.PsiElement
- s:findSiblingForward(com.intellij.psi.PsiElement,com.intellij.psi.tree.IElementType,com.intellij.util.Consumer):com.intellij.psi.PsiElement
- s:findSiblingForward(com.intellij.psi.PsiElement,com.intellij.psi.tree.IElementType,Z,com.intellij.util.Consumer):com.intellij.psi.PsiElement
- s:firstChild(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getChildOfAnyType(com.intellij.psi.PsiElement,java.lang.Class[]):com.intellij.psi.PsiElement
- s:getChildOfType(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement
- s:getChildrenOfAnyType(com.intellij.psi.PsiElement,java.lang.Class[]):java.util.List
- s:getChildrenOfType(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement[]
- s:getChildrenOfTypeAsList(com.intellij.psi.PsiElement,java.lang.Class):java.util.List
- s:getContextOfType(com.intellij.psi.PsiElement,java.lang.Class,Z):com.intellij.psi.PsiElement
- s:getContextOfType(com.intellij.psi.PsiElement,java.lang.Class,Z,java.lang.Class[]):com.intellij.psi.PsiElement
- s:getContextOfType(com.intellij.psi.PsiElement,Z,java.lang.Class[]):com.intellij.psi.PsiElement
- s:getContextOfType(com.intellij.psi.PsiElement,java.lang.Class[]):com.intellij.psi.PsiElement
- s:getDeepestFirst(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getDeepestLast(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getDeepestVisibleFirst(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getDeepestVisibleLast(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getDepth(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):I
- s:getElementsOfRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):java.util.List
- s:getInjectedElements(com.intellij.psi.templateLanguages.OuterLanguageElement):java.util.List
- s:getNextSiblingOfType(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement
- s:getNonStrictParentOfType(com.intellij.psi.PsiElement,java.lang.Class[]):com.intellij.psi.PsiElement
- s:getParentOfType(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement
- s:getParentOfType(com.intellij.psi.PsiElement,java.lang.Class,Z):com.intellij.psi.PsiElement
- s:getParentOfType(com.intellij.psi.PsiElement,java.lang.Class,Z,I):com.intellij.psi.PsiElement
- s:getParentOfType(com.intellij.psi.PsiElement,java.lang.Class,Z,java.lang.Class[]):com.intellij.psi.PsiElement
- s:getParentOfType(com.intellij.psi.PsiElement,Z,java.lang.Class[]):com.intellij.psi.PsiElement
- s:getParentOfType(com.intellij.psi.PsiElement,java.lang.Class[]):com.intellij.psi.PsiElement
- s:getPrevSiblingOfType(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement
- s:getRequiredChildOfType(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement
- s:getStubChildOfType(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement
- s:getStubChildrenOfTypeAsList(com.intellij.psi.PsiElement,java.lang.Class):java.util.List
- s:getStubOrPsiParent(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:getStubOrPsiParentOfType(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement
- s:getTopmostParentOfType(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement
- s:hasErrorElements(com.intellij.psi.PsiElement):Z
- s:instanceOf(java.lang.Object,java.lang.Class[]):Z
- s:isAncestor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):Z
- s:isContextAncestor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):Z
- s:lastChild(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:mark(com.intellij.psi.PsiElement):java.lang.Object
- s:mark(com.intellij.psi.PsiElement,java.lang.Object):V
- s:nextCodeLeaf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:nextLeaf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:nextLeaf(com.intellij.psi.PsiElement,Z):com.intellij.psi.PsiElement
- s:nextVisibleLeaf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:prevCodeLeaf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:prevLeaf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:prevLeaf(com.intellij.psi.PsiElement,Z):com.intellij.psi.PsiElement
- s:prevVisibleLeaf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:processElements(com.intellij.psi.PsiElement,com.intellij.psi.search.PsiElementProcessor):Z
- s:processElements(com.intellij.psi.PsiElement,java.lang.Class,com.intellij.psi.search.PsiElementProcessor):Z
- s:processElements(com.intellij.psi.search.PsiElementProcessor,com.intellij.psi.PsiElement[]):Z
- s:releaseMark(com.intellij.psi.PsiElement,java.lang.Object):com.intellij.psi.PsiElement
- s:skipMatching(com.intellij.psi.PsiElement,java.util.function.Function,java.util.function.Predicate):com.intellij.psi.PsiElement
- s:skipParentsOfType(com.intellij.psi.PsiElement,java.lang.Class[]):com.intellij.psi.PsiElement
- s:skipSiblingsBackward(com.intellij.psi.PsiElement,java.lang.Class[]):com.intellij.psi.PsiElement
- s:skipSiblingsForward(com.intellij.psi.PsiElement,java.lang.Class[]):com.intellij.psi.PsiElement
- s:skipWhitespacesAndCommentsBackward(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:skipWhitespacesAndCommentsForward(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:skipWhitespacesBackward(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:skipWhitespacesForward(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- s:treeWalkUp(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.util.PairProcessor):Z
- s:treeWalkUp(com.intellij.psi.scope.PsiScopeProcessor,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.ResolveState):Z
f:com.intellij.psi.util.PsiTreeUtilKt
- sf:childLeafs(com.intellij.psi.PsiElement,Z):kotlin.sequences.Sequence
- bs:childLeafs$default(com.intellij.psi.PsiElement,Z,I,java.lang.Object):kotlin.sequences.Sequence
- sf:contextOfType(com.intellij.psi.PsiElement,kotlin.reflect.KClass[]):com.intellij.psi.PsiElement
- sf:contexts(com.intellij.psi.PsiElement,Z):kotlin.sequences.Sequence
- sf:descendants(com.intellij.psi.PsiElement,Z,kotlin.jvm.functions.Function1):kotlin.sequences.Sequence
- bs:descendants$default(com.intellij.psi.PsiElement,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):kotlin.sequences.Sequence
- sf:findParentInFile(com.intellij.psi.PsiElement,Z,kotlin.jvm.functions.Function1):com.intellij.psi.PsiElement
- bs:findParentInFile$default(com.intellij.psi.PsiElement,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.psi.PsiElement
- sf:findTopmostParentInFile(com.intellij.psi.PsiElement,Z,kotlin.jvm.functions.Function1):com.intellij.psi.PsiElement
- bs:findTopmostParentInFile$default(com.intellij.psi.PsiElement,Z,kotlin.jvm.functions.Function1,I,java.lang.Object):com.intellij.psi.PsiElement
- sf:firstLeaf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- sf:getChildLeafs(com.intellij.psi.PsiElement):kotlin.sequences.Sequence
- sf:getElementType(com.intellij.psi.PsiElement):com.intellij.psi.tree.IElementType
- sf:getEndOffset(com.intellij.psi.PsiElement):I
- sf:getFirstLeaf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- sf:getLastLeaf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- sf:getNextLeafs(com.intellij.psi.PsiElement):kotlin.sequences.Sequence
- sf:getParents(com.intellij.psi.PsiElement):kotlin.sequences.Sequence
- sf:getParentsWithSelf(com.intellij.psi.PsiElement):kotlin.sequences.Sequence
- sf:getPrevLeafs(com.intellij.psi.PsiElement):kotlin.sequences.Sequence
- sf:getStartOffset(com.intellij.psi.PsiElement):I
- sf:hasErrorElementInRange(com.intellij.psi.PsiFile,com.intellij.openapi.util.TextRange):Z
- sf:isAncestor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z):Z
- bs:isAncestor$default(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,Z,I,java.lang.Object):Z
- sf:lastLeaf(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- sf:nextLeaf(com.intellij.psi.PsiElement,kotlin.jvm.functions.Function1):com.intellij.psi.PsiElement
- sf:nextLeaf(com.intellij.psi.PsiElement,Z):com.intellij.psi.PsiElement
- bs:nextLeaf$default(com.intellij.psi.PsiElement,Z,I,java.lang.Object):com.intellij.psi.PsiElement
- sf:parentOfType(com.intellij.psi.PsiElement,kotlin.reflect.KClass[]):com.intellij.psi.PsiElement
- sf:parentOfTypes(com.intellij.psi.PsiElement,kotlin.reflect.KClass[],Z):com.intellij.psi.PsiElement
- bs:parentOfTypes$default(com.intellij.psi.PsiElement,kotlin.reflect.KClass[],Z,I,java.lang.Object):com.intellij.psi.PsiElement
- sf:parents(com.intellij.psi.PsiElement):kotlin.sequences.Sequence
- sf:parents(com.intellij.psi.PsiElement,Z):kotlin.sequences.Sequence
- bsf:parentsOfType(com.intellij.psi.PsiElement,java.lang.Class):kotlin.sequences.Sequence
- sf:parentsOfType(com.intellij.psi.PsiElement,java.lang.Class,Z):kotlin.sequences.Sequence
- bs:parentsOfType$default(com.intellij.psi.PsiElement,java.lang.Class,Z,I,java.lang.Object):kotlin.sequences.Sequence
- sf:prevLeaf(com.intellij.psi.PsiElement,kotlin.jvm.functions.Function1):com.intellij.psi.PsiElement
- sf:prevLeaf(com.intellij.psi.PsiElement,Z):com.intellij.psi.PsiElement
- bs:prevLeaf$default(com.intellij.psi.PsiElement,Z,I,java.lang.Object):com.intellij.psi.PsiElement
- bsf:siblings(com.intellij.psi.PsiElement,Z):kotlin.sequences.Sequence
- sf:siblings(com.intellij.psi.PsiElement,Z,Z):kotlin.sequences.Sequence
- bs:siblings$default(com.intellij.psi.PsiElement,Z,I,java.lang.Object):kotlin.sequences.Sequence
- bs:siblings$default(com.intellij.psi.PsiElement,Z,Z,I,java.lang.Object):kotlin.sequences.Sequence
- sf:skipTokens(kotlin.sequences.Sequence,com.intellij.psi.tree.TokenSet):kotlin.sequences.Sequence
- sf:startOffsetInAncestor(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):I
- sf:validOrNull(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
c:com.intellij.psi.util.PsiUtilCore
- sf:NULL_PSI_ELEMENT:com.intellij.psi.PsiElement
- sf:NULL_PSI_FILE:com.intellij.psi.PsiFile
- <init>():V
- s:compareElementsByPosition(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):I
- s:ensureValid(com.intellij.psi.PsiElement):V
- s:findFileSystemItem(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFileSystemItem
- s:findLanguageFromElement(com.intellij.psi.PsiElement):com.intellij.lang.Language
- s:getDialect(com.intellij.psi.PsiElement):com.intellij.lang.Language
- s:getElementAtOffset(com.intellij.psi.PsiFile,I):com.intellij.psi.PsiElement
- s:getElementType(com.intellij.lang.ASTNode):com.intellij.psi.tree.IElementType
- s:getElementType(com.intellij.psi.PsiElement):com.intellij.psi.tree.IElementType
- s:getLanguageAtOffset(com.intellij.psi.PsiFile,I):com.intellij.lang.Language
- s:getName(com.intellij.psi.PsiElement):java.lang.String
- s:getNotAnyLanguage(com.intellij.lang.ASTNode):com.intellij.lang.Language
- s:getOriginalElement(com.intellij.psi.PsiElement,java.lang.Class):com.intellij.psi.PsiElement
- s:getProjectInReadAction(com.intellij.psi.PsiElement):com.intellij.openapi.project.Project
- s:getPsiFile(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):com.intellij.psi.PsiFile
- s:getQualifiedNameAfterRename(java.lang.String,java.lang.String):java.lang.String
- s:getTemplateLanguageFile(com.intellij.psi.PsiElement):com.intellij.psi.PsiFile
- s:getVirtualFile(com.intellij.psi.PsiElement):com.intellij.openapi.vfs.VirtualFile
- s:hasErrorElementChild(com.intellij.psi.PsiElement):Z
- ps:narrowLanguage(com.intellij.lang.Language,com.intellij.lang.Language):com.intellij.lang.Language
- s:toPsiElementArray(java.util.Collection):com.intellij.psi.PsiElement[]
- s:toPsiFileArray(java.util.Collection):com.intellij.psi.PsiFile[]
- s:toPsiFiles(com.intellij.psi.PsiManager,java.util.Collection):java.util.List
pc:com.intellij.psi.util.PsiUtilCore$NullPsiElement
- com.intellij.psi.PsiElement
- p:<init>():V
- accept(com.intellij.psi.PsiElementVisitor):V
- acceptChildren(com.intellij.psi.PsiElementVisitor):V
- add(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeAfter(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- addRangeBefore(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- checkAdd(com.intellij.psi.PsiElement):V
- checkDelete():V
- copy():com.intellij.psi.PsiElement
- delete():V
- deleteChildRange(com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):V
- findElementAt(I):com.intellij.psi.PsiElement
- findReferenceAt(I):com.intellij.psi.PsiReference
- getChildren():com.intellij.psi.PsiElement[]
- getContainingFile():com.intellij.psi.PsiFile
- getContext():com.intellij.psi.PsiElement
- getCopyableUserData(com.intellij.openapi.util.Key):java.lang.Object
- getFirstChild():com.intellij.psi.PsiElement
- getIcon(I):javax.swing.Icon
- getLanguage():com.intellij.lang.Language
- getLastChild():com.intellij.psi.PsiElement
- getManager():com.intellij.psi.PsiManager
- getNavigationElement():com.intellij.psi.PsiElement
- getNextSibling():com.intellij.psi.PsiElement
- getNode():com.intellij.lang.ASTNode
- getOriginalElement():com.intellij.psi.PsiElement
- getParent():com.intellij.psi.PsiElement
- getPrevSibling():com.intellij.psi.PsiElement
- getProject():com.intellij.openapi.project.Project
- getReference():com.intellij.psi.PsiReference
- getReferences():com.intellij.psi.PsiReference[]
- getResolveScope():com.intellij.psi.search.GlobalSearchScope
- getStartOffsetInParent():I
- getText():java.lang.String
- getTextLength():I
- getTextOffset():I
- getTextRange():com.intellij.openapi.util.TextRange
- getUseScope():com.intellij.psi.search.SearchScope
- getUserData(com.intellij.openapi.util.Key):java.lang.Object
- isEquivalentTo(com.intellij.psi.PsiElement):Z
- isPhysical():Z
- isValid():Z
- isWritable():Z
- processDeclarations(com.intellij.psi.scope.PsiScopeProcessor,com.intellij.psi.ResolveState,com.intellij.psi.PsiElement,com.intellij.psi.PsiElement):Z
- putCopyableUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- putUserData(com.intellij.openapi.util.Key,java.lang.Object):V
- replace(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- textContains(C):Z
- textMatches(com.intellij.psi.PsiElement):Z
- textMatches(java.lang.CharSequence):Z
- textToCharArray():C[]
f:com.intellij.psi.util.QualifiedName
- java.lang.Comparable
- append(com.intellij.psi.util.QualifiedName):com.intellij.psi.util.QualifiedName
- append(java.lang.String):com.intellij.psi.util.QualifiedName
- compareTo(com.intellij.psi.util.QualifiedName):I
- s:deserialize(com.intellij.psi.stubs.StubInputStream):com.intellij.psi.util.QualifiedName
- endsWith(java.lang.String):Z
- equals(java.lang.Object):Z
- s:fromComponents(java.util.Collection):com.intellij.psi.util.QualifiedName
- s:fromComponents(java.lang.String[]):com.intellij.psi.util.QualifiedName
- s:fromDottedString(java.lang.String):com.intellij.psi.util.QualifiedName
- getComponentCount():I
- getComponents():java.util.List
- getFirstComponent():java.lang.String
- getLastComponent():java.lang.String
- hashCode():I
- join(java.lang.String):java.lang.String
- matches(java.lang.String[]):Z
- matchesPrefix(com.intellij.psi.util.QualifiedName):Z
- removeHead(I):com.intellij.psi.util.QualifiedName
- removeLastComponent():com.intellij.psi.util.QualifiedName
- removeTail(I):com.intellij.psi.util.QualifiedName
- s:serialize(com.intellij.psi.util.QualifiedName,com.intellij.psi.stubs.StubOutputStream):V
- subQualifiedName(I,I):com.intellij.psi.util.QualifiedName
c:com.intellij.psi.util.UnsupportedNodeElementTypeException
- com.intellij.util.IncorrectOperationException
- <init>(com.intellij.lang.ASTNode):V
f:com.intellij.serviceContainer.AlreadyDisposedException
- com.intellij.openapi.progress.ProcessCanceledException
- <init>(java.lang.String):V
a:com.intellij.serviceContainer.BaseKeyedLazyInstance
- com.intellij.serviceContainer.LazyExtensionInstance
- com.intellij.openapi.extensions.PluginAware
- p:<init>():V
- p:<init>(java.lang.Object):V
- pa:getImplementationClassName():java.lang.String
- f:getInstance():java.lang.Object
- getLoaderForClass():java.lang.ClassLoader
- f:getPluginDescriptor():com.intellij.openapi.extensions.PluginDescriptor
- f:setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
a:com.intellij.serviceContainer.LazyExtensionInstance
- p:<init>():V
- p:<init>(java.lang.Object):V
- createInstance(com.intellij.openapi.components.ComponentManager,com.intellij.openapi.extensions.PluginDescriptor):java.lang.Object
- pa:getImplementationClassName():java.lang.String
- f:getInstance(com.intellij.openapi.components.ComponentManager,com.intellij.openapi.extensions.PluginDescriptor):java.lang.Object
@:com.intellij.serviceContainer.NonInjectable
- java.lang.annotation.Annotation
c:com.intellij.testFramework.BinaryLightVirtualFile
- com.intellij.testFramework.LightVirtualFileBase
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.openapi.fileTypes.FileType,B[]):V
- <init>(java.lang.String,com.intellij.openapi.fileTypes.FileType,B[],J):V
- <init>(java.lang.String,B[]):V
- contentsToByteArray():B[]
- getContent():B[]
- getInputStream():java.io.InputStream
- getOutputStream(java.lang.Object,J,J):java.io.OutputStream
c:com.intellij.testFramework.LightVirtualFile
- com.intellij.testFramework.LightVirtualFileBase
- <init>():V
- <init>(com.intellij.openapi.vfs.VirtualFile,java.lang.CharSequence,J):V
- <init>(java.lang.String):V
- <init>(java.lang.String,com.intellij.lang.Language,java.lang.CharSequence):V
- <init>(java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence):V
- <init>(java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence,J):V
- <init>(java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence,java.nio.charset.Charset,J):V
- <init>(java.lang.String,java.lang.CharSequence):V
- contentsToByteArray():B[]
- getContent():java.lang.CharSequence
- getInputStream():java.io.InputStream
- getLanguage():com.intellij.lang.Language
- getLength():J
- getOutputStream(java.lang.Object,J,J):java.io.OutputStream
- isTooLargeForIntelligence():com.intellij.util.ThreeState
- setContent(java.lang.Object,java.lang.CharSequence,Z):V
- setLanguage(com.intellij.lang.Language):V
- shouldSkipEventSystem():Z
- s:shouldSkipEventSystem(com.intellij.openapi.vfs.VirtualFile):Z
- p:storeCharset(java.nio.charset.Charset):V
a:com.intellij.testFramework.LightVirtualFileBase
- com.intellij.openapi.vfs.VirtualFile
- <init>(java.lang.String,com.intellij.openapi.fileTypes.FileType,J):V
- createChildData(java.lang.Object,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- createChildDirectory(java.lang.Object,java.lang.String):com.intellij.openapi.vfs.VirtualFile
- delete(java.lang.Object):V
- getAssignedFileType():com.intellij.openapi.fileTypes.FileType
- getChildren():com.intellij.openapi.vfs.VirtualFile[]
- getFileSystem():com.intellij.openapi.vfs.VirtualFileSystem
- getLength():J
- getModificationStamp():J
- getName():java.lang.String
- getOriginalFile():com.intellij.openapi.vfs.VirtualFile
- getParent():com.intellij.openapi.vfs.VirtualFile
- getPath():java.lang.String
- getTimeStamp():J
- isDirectory():Z
- isValid():Z
- isWritable():Z
- move(java.lang.Object,com.intellij.openapi.vfs.VirtualFile):V
- refresh(Z,Z,java.lang.Runnable):V
- rename(java.lang.Object,java.lang.String):V
- setBinaryContent(B[],J,J):V
- setBinaryContent(B[],J,J,java.lang.Object):V
- setFileType(com.intellij.openapi.fileTypes.FileType):V
- p:setModificationStamp(J):V
- setOriginalFile(com.intellij.openapi.vfs.VirtualFile):V
- setValid(Z):V
- setWritable(Z):V
com.intellij.testFramework.ProfilerForTests
- a:startProfiling(java.nio.file.Path,java.lang.String):V
- a:stopProfiling():V
c:com.intellij.testFramework.ReadOnlyLightVirtualFile
- com.intellij.testFramework.LightVirtualFile
- <init>(java.lang.String,com.intellij.lang.Language,java.lang.CharSequence):V
- getOutputStream(java.lang.Object,J,J):java.io.OutputStream
- f:setContent(java.lang.Object,java.lang.CharSequence,Z):V
- f:setWritable(Z):V
com.intellij.testFramework.TestModeFlagListener
- a:testModeFlagChanged(com.intellij.openapi.util.Key,java.lang.Object):V
f:com.intellij.testFramework.TestModeFlags
- <init>():V
- s:addListener(com.intellij.testFramework.TestModeFlagListener):V
- s:get(com.intellij.openapi.util.Key):java.lang.Object
- s:is(com.intellij.openapi.util.Key):Z
- s:reset(com.intellij.openapi.util.Key):V
- s:set(com.intellij.openapi.util.Key,java.lang.Object):java.lang.Object
- s:set(com.intellij.openapi.util.Key,java.lang.Object,com.intellij.openapi.Disposable):V
com.intellij.testIntegration.TestFramework
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EXTENSION_NAME:com.intellij.openapi.extensions.ExtensionPointName
- findAfterClassMethod(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- findBeforeClassMethod(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:findOrCreateSetUpMethod(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:findSetUpMethod(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- a:findTearDownMethod(com.intellij.psi.PsiElement):com.intellij.psi.PsiElement
- getAfterClassMethodFileTemplateDescriptor():com.intellij.ide.fileTemplates.FileTemplateDescriptor
- getBeforeClassMethodFileTemplateDescriptor():com.intellij.ide.fileTemplates.FileTemplateDescriptor
- a:getDefaultSuperClass():java.lang.String
- a:getIcon():javax.swing.Icon
- a:getLanguage():com.intellij.lang.Language
- a:getLibraryPath():java.lang.String
- a:getName():java.lang.String
- a:getSetUpMethodFileTemplateDescriptor():com.intellij.ide.fileTemplates.FileTemplateDescriptor
- a:getTearDownMethodFileTemplateDescriptor():com.intellij.ide.fileTemplates.FileTemplateDescriptor
- a:getTestMethodFileTemplateDescriptor():com.intellij.ide.fileTemplates.FileTemplateDescriptor
- a:isIgnoredMethod(com.intellij.psi.PsiElement):Z
- a:isLibraryAttached(com.intellij.openapi.module.Module):Z
- a:isPotentialTestClass(com.intellij.psi.PsiElement):Z
- a:isTestClass(com.intellij.psi.PsiElement):Z
- a:isTestMethod(com.intellij.psi.PsiElement):Z
- isTestMethod(com.intellij.psi.PsiElement,Z):Z
com.intellij.ui.CoreAwareIconManager
- a:getIcon(com.intellij.openapi.vfs.VirtualFile,I,com.intellij.openapi.project.Project):javax.swing.Icon
- a:wakeUpNeo(java.lang.Object):java.lang.Runnable
c:com.intellij.usageView.UsageInfo
- sf:EMPTY_ARRAY:com.intellij.usageView.UsageInfo[]
- f:isNonCodeUsage:Z
- p:myDynamicUsage:Z
- <init>(com.intellij.psi.PsiElement):V
- <init>(com.intellij.psi.PsiElement,I,I):V
- <init>(com.intellij.psi.PsiElement,I,I,Z):V
- <init>(com.intellij.psi.PsiElement,com.intellij.openapi.util.TextRange,Z):V
- <init>(com.intellij.psi.PsiElement,Z):V
- <init>(com.intellij.psi.PsiFile):V
- <init>(com.intellij.psi.PsiQualifiedReferenceElement):V
- <init>(com.intellij.psi.PsiReference):V
- <init>(com.intellij.psi.SmartPsiElementPointer,com.intellij.psi.SmartPsiFileRange,Z,Z):V
- <init>(com.intellij.psi.SmartPsiElementPointer,com.intellij.psi.SmartPsiFileRange,Z,Z,java.lang.Class):V
- compareToByStartOffset(com.intellij.usageView.UsageInfo):I
- equals(java.lang.Object):Z
- getElement():com.intellij.psi.PsiElement
- getFile():com.intellij.psi.PsiFile
- getIcon():javax.swing.Icon
- getNavigationOffset():I
- getNavigationRange():com.intellij.openapi.util.Segment
- getProject():com.intellij.openapi.project.Project
- getPsiFileRange():com.intellij.psi.SmartPsiFileRange
- getRangeInElement():com.intellij.openapi.util.ProperTextRange
- getReference():com.intellij.psi.PsiReference
- getReferenceClass():java.lang.Class
- getSegment():com.intellij.openapi.util.Segment
- getSmartPointer():com.intellij.psi.SmartPsiElementPointer
- getTooltipText():java.lang.String
- getVirtualFile():com.intellij.openapi.vfs.VirtualFile
- hashCode():I
- isDynamicUsage():Z
- p:isFileOrBinary():Z
- isNonCodeUsage():Z
- isValid():Z
- f:isWritable():Z
- setDynamicUsage(Z):V
com.intellij.usageView.UsageInfoFactory
- a:createUsageInfo(com.intellij.psi.PsiElement,I,I):com.intellij.usageView.UsageInfo
a:com.intellij.util.AbstractQuery
- com.intellij.util.Query
- <init>():V
- allowParallelProcessing():com.intellij.util.Query
- ps:delegateProcessResults(com.intellij.util.Query,com.intellij.util.Processor):Z
- findAll():java.util.Collection
- findFirst():java.lang.Object
- forEach(com.intellij.util.Processor):Z
- iterator():java.util.Iterator
- pa:processResults(com.intellij.util.Processor):Z
- s:wrapInReadAction(com.intellij.util.Query):com.intellij.util.Query
f:com.intellij.util.AlwaysTrueFilter
- com.intellij.util.FilePatternFilter
- sf:INSTANCE:com.intellij.util.AlwaysTrueFilter
- pathMatches(java.lang.CharSequence):Z
c:com.intellij.util.ArrayQuery
- com.intellij.util.Query
- <init>(java.lang.Object[]):V
- findAll():java.util.Collection
- findFirst():java.lang.Object
- forEach(com.intellij.util.Processor):Z
f:com.intellij.util.AstLoadingFilter
- s:assertTreeLoadingAllowed(com.intellij.openapi.vfs.VirtualFile):V
- s:disallowTreeLoading(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- s:disallowTreeLoading(com.intellij.openapi.util.ThrowableComputable,java.util.function.Supplier):java.lang.Object
- s:disallowTreeLoading(com.intellij.util.ThrowableRunnable):V
- s:disallowTreeLoading(com.intellij.util.ThrowableRunnable,java.util.function.Supplier):V
- s:forceAllowTreeLoading(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- s:forceAllowTreeLoading(com.intellij.openapi.vfs.VirtualFile,com.intellij.util.ThrowableRunnable):V
- s:forceAllowTreeLoading(com.intellij.psi.PsiFile,com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- s:forceAllowTreeLoading(com.intellij.psi.PsiFile,com.intellij.util.ThrowableRunnable):V
@:com.intellij.util.AwaitCancellationAndInvoke
- java.lang.annotation.Annotation
com.intellij.util.CharTable
- sf:CHAR_TABLE_KEY:com.intellij.openapi.util.Key
- a:intern(java.lang.CharSequence):java.lang.CharSequence
- a:intern(java.lang.CharSequence,I,I):java.lang.CharSequence
c:com.intellij.util.CollectionQuery
- com.intellij.util.Query
- <init>(java.util.Collection):V
- findAll():java.util.Collection
- findFirst():java.lang.Object
- forEach(com.intellij.util.Processor):Z
f:com.intellij.util.CoroutinesKt
c:com.intellij.util.DisposeAwareRunnable
- java.lang.ref.WeakReference
- java.lang.Runnable
- pf:myDelegate:java.lang.Runnable
- s:create(java.lang.Runnable,com.intellij.openapi.module.Module):java.lang.Runnable
- s:create(java.lang.Runnable,com.intellij.openapi.project.Project):java.lang.Runnable
- s:create(java.lang.Runnable,com.intellij.psi.PsiElement):java.lang.Runnable
- run():V
c:com.intellij.util.EmptyQuery
- com.intellij.util.Query
- <init>():V
- findAll():java.util.Collection
- findFirst():java.lang.Object
- forEach(com.intellij.util.Processor):Z
- s:getEmptyQuery():com.intellij.util.Query
f:com.intellij.util.ExcludeFilePatternFilter
- com.intellij.util.FilePatternFilter
- <init>(java.lang.String,I):V
- pathMatches(java.lang.CharSequence):Z
f:com.intellij.util.ExecutorsQuery
- com.intellij.util.AbstractQuery
- <init>(java.lang.Object,java.util.List):V
f:com.intellij.util.FileContentUtilCore
- sf:FORCE_RELOAD_REQUESTOR:java.lang.String
- <init>():V
- s:reparseFiles(java.util.Collection):V
- s:reparseFiles(com.intellij.openapi.vfs.VirtualFile[]):V
com.intellij.util.FilePatternFilter
- sf:Companion:com.intellij.util.FilePatternFilter$Companion
- s:parseFilter(java.lang.CharSequence,java.lang.String,java.lang.String,I):com.intellij.util.FilePatternFilter
- a:pathMatches(java.lang.CharSequence):Z
f:com.intellij.util.FilePatternFilter$Companion
- f:parseFilter(java.lang.CharSequence,java.lang.String,java.lang.String,I):com.intellij.util.FilePatternFilter
- bs:parseFilter$default(com.intellij.util.FilePatternFilter$Companion,java.lang.CharSequence,java.lang.String,java.lang.String,I,I,java.lang.Object):com.intellij.util.FilePatternFilter
f:com.intellij.util.FileSearchUtil
- <init>():V
- s:findFileRecursively(com.intellij.openapi.vfs.VirtualFile,java.lang.String,I,J):com.intellij.util.Query
c:com.intellij.util.FilteredQuery
- com.intellij.util.AbstractQuery
- <init>(com.intellij.util.Query,com.intellij.openapi.util.Condition):V
- forEachAsync(com.intellij.util.Processor):com.intellij.concurrency.AsyncFuture
- p:processResults(com.intellij.util.Processor):Z
f:com.intellij.util.ForcefulReparseModificationTracker
- com.intellij.openapi.util.SimpleModificationTracker
- <init>():V
- s:getInstance():com.intellij.openapi.util.ModificationTracker
c:com.intellij.util.IncludeFilePatternFilter
- com.intellij.util.FilePatternFilter
- <init>(java.lang.String,I):V
- pathMatches(java.lang.CharSequence):Z
f:com.intellij.util.InjectionUtils
- <init>():V
- s:enableInjectLanguageAction(com.intellij.psi.PsiElement,Z):V
- s:isInjectLanguageActionEnabled(com.intellij.psi.PsiElement):Z
- s:setCollectLineMarkersForInjectedFiles(com.intellij.psi.PsiFile,Z):V
- s:setFormatOnlyInjectedCode(com.intellij.psi.FileViewProvider,Z):V
- s:setInspectInjectedFiles(com.intellij.psi.PsiFile,Z):V
- s:shouldCollectLineMarkersForInjectedFiles(com.intellij.psi.PsiFile):Z
- s:shouldFormatOnlyInjectedCode(com.intellij.psi.FileViewProvider):Z
- s:shouldInspectInjectedFiles(com.intellij.psi.PsiFile):Z
c:com.intellij.util.InstanceofQuery
- com.intellij.util.AbstractQuery
- <init>(com.intellij.util.Query,java.lang.Class[]):V
- forEachAsync(com.intellij.util.Processor):com.intellij.concurrency.AsyncFuture
- p:processResults(com.intellij.util.Processor):Z
f:com.intellij.util.IntersectionFilter
- com.intellij.util.FilePatternFilter
- <init>(java.util.List):V
- pathMatches(java.lang.CharSequence):Z
c:com.intellij.util.KeyedLazyInstanceEP
- com.intellij.serviceContainer.BaseKeyedLazyInstance
- com.intellij.util.KeyedLazyInstance
- implementationClass:java.lang.String
- key:java.lang.String
- <init>():V
- p:getImplementationClassName():java.lang.String
- getKey():java.lang.String
f:com.intellij.util.LocaleSensitiveApplicationCacheService
- com.intellij.openapi.Disposable
- <init>():V
- dispose():V
- getData(java.lang.Class,java.util.function.Supplier):java.lang.Object
- s:getInstance():com.intellij.util.LocaleSensitiveApplicationCacheService
f:com.intellij.util.ModalityUiUtil
- <init>():V
- s:invokeLaterIfNeeded(com.intellij.openapi.application.ModalityState,com.intellij.openapi.util.Condition,java.lang.Runnable):V
- s:invokeLaterIfNeeded(com.intellij.openapi.application.ModalityState,java.lang.Runnable):V
f:com.intellij.util.PathUtil
- s:driveLetterToLowerCase(java.lang.String):java.lang.String
- s:getCanonicalPath(java.lang.String):java.lang.String
- s:getFileExtension(java.lang.String):java.lang.String
- s:getFileName(java.lang.String):java.lang.String
- s:getJarPathForClass(java.lang.Class):java.lang.String
- s:getLocalPath(com.intellij.openapi.vfs.VirtualFile):java.lang.String
- s:getLocalPath(java.lang.String):java.lang.String
- s:getParentPath(java.lang.String):java.lang.String
- s:isValidFileName(java.lang.String):Z
- s:isValidFileName(java.lang.String,Z):Z
- s:makeFileName(java.lang.String,java.lang.String):java.lang.String
- s:suggestFileName(java.lang.String):java.lang.String
- s:suggestFileName(java.lang.String,Z,Z):java.lang.String
- s:toPresentableUrl(java.lang.String):java.lang.String
- s:toSystemDependentName(java.lang.String):java.lang.String
- s:toSystemIndependentName(java.lang.String):java.lang.String
f:com.intellij.util.PathsList
- <init>():V
- add(com.intellij.openapi.vfs.VirtualFile):V
- add(java.io.File):V
- add(java.lang.String):V
- addAll(java.util.List):V
- addAllFiles(java.util.List):V
- addAllFiles(java.io.File[]):V
- addFirst(java.io.File):V
- addFirst(java.lang.String):V
- addTail(java.lang.String):V
- addVirtualFiles(java.util.Collection):V
- addVirtualFiles(com.intellij.openapi.vfs.VirtualFile[]):V
- clear():V
- getPathList():java.util.List
- getPathsString():java.lang.String
- getRootDirs():java.util.List
- getVirtualFiles():java.util.List
- isEmpty():Z
- remove(com.intellij.openapi.vfs.VirtualFile):V
- remove(java.lang.String):V
f:com.intellij.util.Plow
- sf:Companion:com.intellij.util.Plow$Companion
- f:cancellable():com.intellij.util.Plow
- f:collectTo(java.util.Collection):java.util.Collection
- sf:concat(com.intellij.util.Plow[]):com.intellij.util.Plow
- sf:empty():com.intellij.util.Plow
- f:filter(kotlin.jvm.functions.Function1):com.intellij.util.Plow
- f:find(kotlin.jvm.functions.Function1):java.lang.Object
- f:findAny():java.lang.Object
- f:flatMap(kotlin.jvm.functions.Function1):com.intellij.util.Plow
- f:flatMapSeq(kotlin.jvm.functions.Function1):com.intellij.util.Plow
- f:limit(I):com.intellij.util.Plow
- f:map(kotlin.jvm.functions.Function1):com.intellij.util.Plow
- f:mapNotNull(kotlin.jvm.functions.Function1):com.intellij.util.Plow
- f:mapToProcessor(kotlin.jvm.functions.Function2):com.intellij.util.Plow
- sf:of(kotlin.jvm.functions.Function1):com.intellij.util.Plow
- sf:ofArray(java.lang.Object[]):com.intellij.util.Plow
- sf:ofIterable(java.lang.Iterable):com.intellij.util.Plow
- sf:ofSequence(kotlin.sequences.Sequence):com.intellij.util.Plow
- f:processWith(com.intellij.util.Processor):Z
- f:toArray(java.lang.Object[]):java.lang.Object[]
- f:toList():java.util.List
- f:toSet():java.util.Set
- f:transform(kotlin.jvm.functions.Function1):com.intellij.util.Plow
f:com.intellij.util.Plow$Companion
- f:concat(com.intellij.util.Plow[]):com.intellij.util.Plow
- f:empty():com.intellij.util.Plow
- f:of(kotlin.jvm.functions.Function1):com.intellij.util.Plow
- f:ofArray(java.lang.Object[]):com.intellij.util.Plow
- f:ofIterable(java.lang.Iterable):com.intellij.util.Plow
- f:ofSequence(kotlin.sequences.Sequence):com.intellij.util.Plow
f:com.intellij.util.Processors
- <init>():V
- s:cancelableCollectProcessor(java.util.Collection):com.intellij.util.Processor
- s:filter(com.intellij.util.Processor,java.util.function.Predicate):com.intellij.util.Processor
- s:map(com.intellij.util.Processor,com.intellij.util.Function):com.intellij.util.Processor
f:com.intellij.util.PsiIconUtil
- sf:INSTANCE:com.intellij.util.PsiIconUtil
- sf:getIconFromProviders(com.intellij.psi.PsiElement,I):javax.swing.Icon
- sf:getProvidersIcon(com.intellij.psi.PsiElement,I):javax.swing.Icon
f:com.intellij.util.QueriesKt
- sf:mappingNotNull(com.intellij.util.Query,kotlin.jvm.functions.Function1):com.intellij.util.Query
com.intellij.util.Query
- java.lang.Iterable
- allMatch(java.util.function.Predicate):Z
- allowParallelProcessing():com.intellij.util.Query
- anyMatch(java.util.function.Predicate):Z
- asIterable():java.lang.Iterable
- a:findAll():java.util.Collection
- a:findFirst():java.lang.Object
- a:forEach(com.intellij.util.Processor):Z
- forEach(java.util.function.Consumer):V
- forEachAsync(com.intellij.util.Processor):com.intellij.concurrency.AsyncFuture
- iterator():java.util.Iterator
- spliterator():java.util.Spliterator
- toArray(java.lang.Object[]):java.lang.Object[]
com.intellij.util.QueryExecutor
- a:execute(java.lang.Object,com.intellij.util.Processor):Z
c:com.intellij.util.QueryFactory
- <init>():V
- f:createQuery(java.lang.Object):com.intellij.util.Query
- f:createUniqueResultsQuery(java.lang.Object):com.intellij.util.Query
- f:createUniqueResultsQuery(java.lang.Object,com.intellij.util.Function):com.intellij.util.Query
- p:getExecutors():java.util.List
- hasAnyExecutors():Z
- registerExecutor(com.intellij.util.QueryExecutor):V
- unregisterExecutor(com.intellij.util.QueryExecutor):V
com.intellij.util.QueryParameters
- getProject():com.intellij.openapi.project.Project
- isQueryValid():Z
f:com.intellij.util.RunnableCallable
- java.util.concurrent.Callable
- <init>(java.lang.Runnable):V
- call():java.lang.Void
- getDelegate():java.lang.Runnable
f:com.intellij.util.SingletonInstancesCache
- s:getInstance(java.lang.String,java.lang.ClassLoader):java.lang.Object
f:com.intellij.util.SlowOperations
- sf:ACTION_PERFORM:java.lang.String
- sf:GENERIC:java.lang.String
- s:allowSlowOperations(com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- s:allowSlowOperations(com.intellij.util.ThrowableRunnable):V
- s:allowSlowOperations(java.lang.String):com.intellij.openapi.application.AccessToken
- s:assertNonCancelableSlowOperationsAreAllowed():V
- s:assertSlowOperationsAreAllowed():V
f:com.intellij.util.Suppressions
- sf:addSuppressed(java.lang.Throwable,java.lang.Throwable):java.lang.Throwable
- sf:runSuppressing(com.intellij.util.ThrowableRunnable[]):V
- sf:runSuppressing(kotlin.jvm.functions.Function0[]):V
f:com.intellij.util.UnionFilter
- com.intellij.util.FilePatternFilter
- <init>(java.util.List):V
- pathMatches(java.lang.CharSequence):Z
f:com.intellij.util.UniqueResultsQuery
- com.intellij.util.AbstractQuery
- <init>(com.intellij.util.Query):V
- <init>(com.intellij.util.Query,com.intellij.util.Function):V
- <init>(com.intellij.util.Query,com.intellij.util.containers.HashingStrategy):V
- forEachAsync(com.intellij.util.Processor):com.intellij.concurrency.AsyncFuture
f:com.intellij.util.concurrency.ThreadingAssertions
- s:assertBackgroundThread():V
- s:assertEventDispatchThread():V
- s:assertNoOwnReadAccess():V
- s:assertNoReadAccess():V
- s:assertReadAccess():V
- s:assertWriteAccess():V
- s:assertWriteIntentReadAccess():V
- s:softAssertBackgroundThread():V
- s:softAssertEventDispatchThread():V
- s:softAssertReadAccess():V
- s:throwWriteIntentReadAccess():V
@:com.intellij.util.concurrency.annotations.RequiresBackgroundThread
- java.lang.annotation.Annotation
- a:generateAssertion():Z
@:com.intellij.util.concurrency.annotations.RequiresEdt
- java.lang.annotation.Annotation
- a:generateAssertion():Z
@:com.intellij.util.concurrency.annotations.RequiresReadLock
- java.lang.annotation.Annotation
- a:generateAssertion():Z
@:com.intellij.util.concurrency.annotations.RequiresWriteLock
- java.lang.annotation.Annotation
- a:generateAssertion():Z
com.intellij.util.download.DownloadableFileDescription
- a:generateFileName(com.intellij.openapi.util.Condition):java.lang.String
- a:getDefaultFileName():java.lang.String
- a:getDownloadUrl():java.lang.String
- a:getPresentableDownloadUrl():java.lang.String
- a:getPresentableFileName():java.lang.String
com.intellij.util.download.DownloadableFileSetDescription
- a:getFiles():java.util.List
- a:getName():java.lang.String
- a:getVersionString():java.lang.String
a:com.intellij.util.graph.GraphAlgorithms
- <init>():V
- a:collectOutsRecursively(com.intellij.util.graph.Graph,java.lang.Object,java.util.Set):V
- a:computeSCCGraph(com.intellij.util.graph.Graph):com.intellij.util.graph.Graph
- a:computeStronglyConnectedComponents(com.intellij.util.graph.Graph):java.util.Collection
- a:findCycles(com.intellij.util.graph.Graph,java.lang.Object):java.util.Set
- a:findKShortestPaths(com.intellij.util.graph.Graph,java.lang.Object,java.lang.Object,I,com.intellij.openapi.progress.ProgressIndicator):java.util.List
- a:findNodeNeighbourhood(com.intellij.util.graph.Graph,java.lang.Object,I):java.util.Collection
- a:findNodesWhichBelongToAnyPathBetweenTwoNodes(com.intellij.util.graph.Graph,java.lang.Object,java.lang.Object):java.util.Collection
- a:findShortestPath(com.intellij.util.graph.InboundSemiGraph,java.lang.Object,java.lang.Object):java.util.List
- s:getInstance():com.intellij.util.graph.GraphAlgorithms
- a:invertEdgeDirections(com.intellij.util.graph.Graph):com.intellij.util.graph.Graph
- a:iterateOverAllSimpleCycles(com.intellij.util.graph.Graph,java.util.function.Consumer):V
- a:removePathsWithCycles(java.util.List):java.util.List
a:com.intellij.util.graph.GraphFactory
- <init>():V
- a:copyOf(com.intellij.util.graph.Network):com.intellij.util.graph.MutableNetwork
- a:directedNetwork():com.intellij.util.graph.NetworkBuilder
- a:emptyMutableNetwork():com.intellij.util.graph.MutableNetwork
- a:emptyNetwork():com.intellij.util.graph.Network
- s:getInstance():com.intellij.util.graph.GraphFactory
- a:newNetworkWithSameProperties(com.intellij.util.graph.Network):com.intellij.util.graph.NetworkBuilder
- a:toNetwork(com.intellij.util.graph.Graph):com.intellij.util.graph.MutableNetwork
- a:undirectedNetwork():com.intellij.util.graph.NetworkBuilder
com.intellij.util.indexing.FileContent
- com.intellij.util.indexing.IndexedFile
- a:getContent():B[]
- a:getContentAsText():java.lang.CharSequence
- a:getPsiFile():com.intellij.psi.PsiFile
c:com.intellij.util.indexing.ID
- com.intellij.util.indexing.IndexId
- s:create(java.lang.String):com.intellij.util.indexing.ID
- s:findByName(java.lang.String):com.intellij.util.indexing.ID
com.intellij.util.indexing.IndexedFile
- com.intellij.openapi.util.UserDataHolder
- a:getFile():com.intellij.openapi.vfs.VirtualFile
- a:getFileName():java.lang.String
- a:getFileType():com.intellij.openapi.fileTypes.FileType
- a:getProject():com.intellij.openapi.project.Project
com.intellij.util.indexing.PsiDependentFileContent
- com.intellij.util.indexing.FileContent
- a:getLighterAST():com.intellij.lang.LighterAST
- a:getPsiFile():com.intellij.psi.PsiFile
a:com.intellij.util.messages.MessageBusFactory
- <init>():V
- a:createMessageBus(com.intellij.util.messages.MessageBusOwner,com.intellij.util.messages.MessageBus):com.intellij.util.messages.MessageBus
- s:getInstance():com.intellij.util.messages.MessageBusFactory
- s:newMessageBus(com.intellij.util.messages.MessageBusOwner):com.intellij.util.messages.MessageBus
com.intellij.util.messages.MessageBusListener
- a:getListener():java.lang.Object
- a:getTopic():com.intellij.util.messages.Topic
com.intellij.util.messages.MessageBusOwner
f:com.intellij.util.messages.impl.MessageBusCoroutinesKt
- sf:subscribeAsFlow(com.intellij.util.messages.MessageBus,com.intellij.util.messages.Topic,kotlin.jvm.functions.Function2):kotlinx.coroutines.flow.Flow
f:com.intellij.util.messages.impl.MessageListenerList
- <init>(com.intellij.util.messages.MessageBus,com.intellij.util.messages.Topic):V
- add(java.lang.Object):V
- add(java.lang.Object,com.intellij.openapi.Disposable):V
- remove(java.lang.Object):V
f:com.intellij.util.progress.CancellationUtil
- sf:getCancellable(java.util.concurrent.CompletableFuture):java.lang.Object
- sf:getCancellable(java.util.concurrent.Future):java.lang.Object
- sf:getMaybeCancellable(java.util.concurrent.CompletableFuture):java.lang.Object
- sf:getMaybeCancellable(java.util.concurrent.Future):java.lang.Object
- sf:lockCancellable(java.util.concurrent.locks.Lock):V
- sf:lockMaybeCancellable(java.util.concurrent.locks.Lock):V
- sf:pollCancellable(kotlin.jvm.functions.Function0):V
- sf:sleepCancellable(J):V
- sf:waitForCancellable(com.intellij.util.concurrency.Semaphore):V
- sf:waitForMaybeCancellable(com.intellij.util.concurrency.Semaphore):V
- sf:withLockCancellable(java.util.concurrent.locks.Lock,java.lang.Runnable):V
- sf:withLockCancellable(java.util.concurrent.locks.Lock,kotlin.jvm.functions.Function0):java.lang.Object
- sf:withLockMaybeCancellable(java.util.concurrent.locks.Lock,java.lang.Runnable):V
- sf:withLockMaybeCancellable(java.util.concurrent.locks.Lock,kotlin.jvm.functions.Function0):java.lang.Object
com.intellij.util.ui.PresentableEnum
- a:getPresentableText():java.lang.String
@:org.jetbrains.annotations.CalledInAny
- java.lang.annotation.Annotation
@:org.jetbrains.annotations.SystemDependent
- java.lang.annotation.Annotation
@:org.jetbrains.annotations.SystemIndependent
- java.lang.annotation.Annotation
org.jetbrains.concurrency.CancellablePromise
- java.util.concurrent.Future
- org.jetbrains.concurrency.Promise
- a:cancel():V
- a:onError(java.util.function.Consumer):org.jetbrains.concurrency.CancellablePromise
- a:onProcessed(java.util.function.Consumer):org.jetbrains.concurrency.CancellablePromise
- a:onSuccess(java.util.function.Consumer):org.jetbrains.concurrency.CancellablePromise
org.jetbrains.concurrency.Promise
- blockingGet(I):java.lang.Object
- a:blockingGet(I,java.util.concurrent.TimeUnit):java.lang.Object
- a:getState():org.jetbrains.concurrency.Promise$State
- isSucceeded():Z
- a:onError(java.util.function.Consumer):org.jetbrains.concurrency.Promise
- a:onProcessed(java.util.function.Consumer):org.jetbrains.concurrency.Promise
- a:onSuccess(java.util.function.Consumer):org.jetbrains.concurrency.Promise
- a:processed(org.jetbrains.concurrency.Promise):org.jetbrains.concurrency.Promise
- a:then(com.intellij.util.Function):org.jetbrains.concurrency.Promise
- a:thenAsync(com.intellij.util.Function):org.jetbrains.concurrency.Promise
e:org.jetbrains.concurrency.Promise$State
- java.lang.Enum
- sf:PENDING:org.jetbrains.concurrency.Promise$State
- sf:REJECTED:org.jetbrains.concurrency.Promise$State
- sf:SUCCEEDED:org.jetbrains.concurrency.Promise$State
- s:valueOf(java.lang.String):org.jetbrains.concurrency.Promise$State
- s:values():org.jetbrains.concurrency.Promise$State[]
