a:com.intellij.diagnostic.PerformanceWatcher
- sf:Companion:com.intellij.diagnostic.PerformanceWatcher$Companion
- sf:DUMP_PREFIX:java.lang.String
- <init>():V
- a:clearFreezeStacktraces():V
- a:dumpThreads(java.lang.String,Z,Z):java.nio.file.Path
- sf:dumpThreadsToConsole(java.lang.String):V
- a:getDumpInterval():I
- sf:getInstance():com.intellij.diagnostic.PerformanceWatcher
- a:getJitProblem():java.lang.String
- a:getMaxDumpDuration():I
- a:getUnresponsiveInterval():I
- pa:newSnapshot():com.intellij.diagnostic.PerformanceWatcher$Snapshot
- sf:printStacktrace(java.lang.String,java.lang.Thread,java.lang.StackTraceElement[]):java.lang.String
- a:processUnfinishedFreeze(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation):java.lang.Object
- sf:takeSnapshot():com.intellij.diagnostic.PerformanceWatcher$Snapshot
f:com.intellij.diagnostic.PerformanceWatcher$Companion
- f:dumpThreadsToConsole(java.lang.String):V
- f:getInstance():com.intellij.diagnostic.PerformanceWatcher
- f:printStacktrace(java.lang.String,java.lang.Thread,java.lang.StackTraceElement[]):java.lang.String
- f:takeSnapshot():com.intellij.diagnostic.PerformanceWatcher$Snapshot
com.intellij.diagnostic.PerformanceWatcher$Snapshot
- a:getLogResponsivenessSinceCreationMessage(java.lang.String):java.lang.String
- a:getLogResponsivenessSinceCreationMessage(java.lang.String,java.lang.String):java.lang.String
- a:logResponsivenessSinceCreation(java.lang.String):V
- a:logResponsivenessSinceCreation(java.lang.String,java.lang.String):V
com.intellij.ide.fileTemplates.FileTemplate
- java.lang.Cloneable
- sf:ATTRIBUTE_CALL_SUPER:java.lang.String
- sf:ATTRIBUTE_CLASS_NAME:java.lang.String
- sf:ATTRIBUTE_DEFAULT_RETURN_VALUE:java.lang.String
- sf:ATTRIBUTE_DESCRIPTION:java.lang.String
- sf:ATTRIBUTE_DIR_PATH:java.lang.String
- sf:ATTRIBUTE_DISPLAY_NAME:java.lang.String
- sf:ATTRIBUTE_EXCEPTION:java.lang.String
- sf:ATTRIBUTE_EXCEPTION_TYPE:java.lang.String
- sf:ATTRIBUTE_EXPRESSION:java.lang.String
- sf:ATTRIBUTE_EXPRESSION_TYPE:java.lang.String
- sf:ATTRIBUTE_FILE_NAME:java.lang.String
- sf:ATTRIBUTE_FILE_PATH:java.lang.String
- sf:ATTRIBUTE_METHOD_NAME:java.lang.String
- sf:ATTRIBUTE_NAME:java.lang.String
- sf:ATTRIBUTE_PACKAGE_NAME:java.lang.String
- sf:ATTRIBUTE_PLAIN_CALL_SUPER:java.lang.String
- sf:ATTRIBUTE_RETURN_TYPE:java.lang.String
- sf:ATTRIBUTE_SIMPLE_CLASS_NAME:java.lang.String
- sf:EMPTY_ARRAY:com.intellij.ide.fileTemplates.FileTemplate[]
- sf:ourEncoding:java.lang.String
- a:clone():com.intellij.ide.fileTemplates.FileTemplate
- getChildren():com.intellij.ide.fileTemplates.FileTemplate[]
- a:getDescription():java.lang.String
- a:getExtension():java.lang.String
- getFileName():java.lang.String
- a:getName():java.lang.String
- a:getText():java.lang.String
- a:getText(java.util.Map):java.lang.String
- a:getText(java.util.Properties):java.lang.String
- a:getUnsetAttributes(java.util.Properties,com.intellij.openapi.project.Project):java.lang.String[]
- a:isDefault():Z
- a:isLiveTemplateEnabled():Z
- a:isReformatCode():Z
- a:isTemplateOfType(com.intellij.openapi.fileTypes.FileType):Z
- setChildren(com.intellij.ide.fileTemplates.FileTemplate[]):V
- a:setExtension(java.lang.String):V
- setFileName(java.lang.String):V
- a:setLiveTemplateEnabled(Z):V
- a:setName(java.lang.String):V
- a:setReformatCode(Z):V
- a:setText(java.lang.String):V
a:com.intellij.ide.fileTemplates.FileTemplateManager
- sf:CODE_TEMPLATES_CATEGORY:java.lang.String
- sf:DEFAULT_TEMPLATES_CATEGORY:java.lang.String
- sf:DEFAULT_TEMPLATE_PROPERTIES:com.intellij.openapi.util.Key
- sf:FILE_HEADER_TEMPLATE_NAME:java.lang.String
- sf:INCLUDES_TEMPLATES_CATEGORY:java.lang.String
- sf:INTERNAL_HTML5_TEMPLATE_NAME:java.lang.String
- sf:INTERNAL_TEMPLATES_CATEGORY:java.lang.String
- sf:J2EE_TEMPLATES_CATEGORY:java.lang.String
- sf:PROJECT_NAME_VARIABLE:java.lang.String
- sf:RECENT_TEMPLATES_SIZE:I
- <init>():V
- a:addRecentName(java.lang.String):V
- a:addTemplate(java.lang.String,java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- p:checkInitialized():com.intellij.ide.fileTemplates.FileTemplateManager
- a:findInternalTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- a:getAllCodeTemplates():com.intellij.ide.fileTemplates.FileTemplate[]
- a:getAllJ2eeTemplates():com.intellij.ide.fileTemplates.FileTemplate[]
- a:getAllPatterns():com.intellij.ide.fileTemplates.FileTemplate[]
- a:getAllTemplates():com.intellij.ide.fileTemplates.FileTemplate[]
- a:getCodeTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- a:getCurrentScheme():com.intellij.ide.fileTemplates.FileTemplatesScheme
- s:getDefaultInstance():com.intellij.ide.fileTemplates.FileTemplateManager
- a:getDefaultProperties():java.util.Properties
- getDefaultProperties(com.intellij.openapi.project.Project):java.util.Properties
- a:getDefaultTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- s:getInstance():com.intellij.ide.fileTemplates.FileTemplateManager
- s:getInstance(com.intellij.openapi.project.Project):com.intellij.ide.fileTemplates.FileTemplateManager
- a:getInternalTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- a:getInternalTemplates():com.intellij.ide.fileTemplates.FileTemplate[]
- a:getJ2eeTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- a:getPattern(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- a:getProjectScheme():com.intellij.ide.fileTemplates.FileTemplatesScheme
- a:getRecentNames():java.util.Collection
- a:getTemplate(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate
- a:getTemplates(java.lang.String):com.intellij.ide.fileTemplates.FileTemplate[]
- a:internalTemplateToSubject(java.lang.String):java.lang.String
- a:removeTemplate(com.intellij.ide.fileTemplates.FileTemplate):V
- a:saveAllTemplates():V
- a:setCurrentScheme(com.intellij.ide.fileTemplates.FileTemplatesScheme):V
- a:setTemplates(java.lang.String,java.util.Collection):V
f:com.intellij.ide.fileTemplates.FileTemplateParseException
- java.lang.Exception
- <init>(java.lang.Throwable):V
a:com.intellij.ide.fileTemplates.FileTemplatesScheme
- com.intellij.openapi.options.Scheme
- sf:DEFAULT:com.intellij.ide.fileTemplates.FileTemplatesScheme
- sf:TEMPLATES_DIR:java.lang.String
- <init>(java.lang.String):V
- getName():java.lang.String
- a:getProject():com.intellij.openapi.project.Project
- a:getTemplatesDir():java.lang.String
c:com.intellij.ide.impl.DataManagerImpl
- com.intellij.ide.DataManager
- <init>():V
- customizeDataContext(com.intellij.openapi.actionSystem.DataContext,java.lang.Object):com.intellij.openapi.actionSystem.DataContext
- getCustomizedData(java.lang.String,com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.DataProvider):java.lang.Object
- getDataContext():com.intellij.openapi.actionSystem.DataContext
- getDataContext(java.awt.Component):com.intellij.openapi.actionSystem.DataContext
- getDataContext(java.awt.Component,I,I):com.intellij.openapi.actionSystem.DataContext
- getDataContextFromFocusAsync():org.jetbrains.concurrency.Promise
- s:getDataProviderEx(java.lang.Object):com.intellij.openapi.actionSystem.DataProvider
- loadFromDataContext(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.util.Key):java.lang.Object
- saveInDataContext(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.util.Key,java.lang.Object):V
- s:validateEditor(com.intellij.openapi.editor.Editor,java.awt.Component):com.intellij.openapi.editor.Editor
f:com.intellij.ide.impl.OpenProjectTask
- sf:Companion:com.intellij.ide.impl.OpenProjectTask$Companion
- f:asNewProject():com.intellij.ide.impl.OpenProjectTask
- sf:build():com.intellij.ide.impl.OpenProjectTask
- f:component1():Z
- f:component10():I
- f:component11():I
- f:component12():Z
- f:component13():Z
- f:component14():Z
- f:component15():java.lang.String
- f:component16():Z
- f:component17():Z
- f:component18():kotlin.jvm.functions.Function1
- f:component19():kotlin.jvm.functions.Function2
- f:component2():Z
- f:component20():kotlin.jvm.functions.Function2
- f:component21():Z
- f:component22():kotlin.jvm.functions.Function1
- f:component23():java.lang.Object
- f:component3():com.intellij.openapi.project.Project
- f:component4():Z
- f:component5():Z
- f:component6():com.intellij.openapi.project.Project
- f:component7():java.lang.String
- f:component8():Z
- f:component9():com.intellij.projectImport.ProjectOpenedCallback
- f:copy(Z,Z,com.intellij.openapi.project.Project,Z,Z,com.intellij.openapi.project.Project,java.lang.String,Z,com.intellij.projectImport.ProjectOpenedCallback,I,I,Z,Z,Z,java.lang.String,Z,Z,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,Z,kotlin.jvm.functions.Function1,java.lang.Object):com.intellij.ide.impl.OpenProjectTask
- bs:copy$default(com.intellij.ide.impl.OpenProjectTask,Z,Z,com.intellij.openapi.project.Project,Z,Z,com.intellij.openapi.project.Project,java.lang.String,Z,com.intellij.projectImport.ProjectOpenedCallback,I,I,Z,Z,Z,java.lang.String,Z,Z,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,Z,kotlin.jvm.functions.Function1,java.lang.Object,I,java.lang.Object):com.intellij.ide.impl.OpenProjectTask
- equals(java.lang.Object):Z
- f:getBeforeInit():kotlin.jvm.functions.Function1
- f:getBeforeOpen():kotlin.jvm.functions.Function2
- f:getCallback():com.intellij.projectImport.ProjectOpenedCallback
- f:getColumn():I
- f:getForceOpenInNewFrame():Z
- f:getForceReuseFrame():Z
- f:getImplOptions():java.lang.Object
- f:getLine():I
- f:getPreloadServices():Z
- f:getPreparedToOpen():kotlin.jvm.functions.Function2
- f:getPreventIprLookup():Z
- f:getProcessorChooser():kotlin.jvm.functions.Function1
- f:getProject():com.intellij.openapi.project.Project
- f:getProjectName():java.lang.String
- f:getProjectToClose():com.intellij.openapi.project.Project
- f:getProjectWorkspaceId():java.lang.String
- f:getRunConfigurators():Z
- f:getRunConversionBeforeOpen():Z
- f:getShowWelcomeScreen():Z
- f:getUseDefaultProjectAsTemplate():Z
- hashCode():I
- f:isNewProject():Z
- f:isProjectCreatedWithWizard():Z
- f:isRefreshVfsNeeded():Z
- f:withForceOpenInNewFrame(Z):com.intellij.ide.impl.OpenProjectTask
- f:withProject(com.intellij.openapi.project.Project):com.intellij.ide.impl.OpenProjectTask
- f:withProjectName(java.lang.String):com.intellij.ide.impl.OpenProjectTask
- f:withProjectToClose(com.intellij.openapi.project.Project):com.intellij.ide.impl.OpenProjectTask
f:com.intellij.ide.impl.OpenProjectTask$Companion
- f:build():com.intellij.ide.impl.OpenProjectTask
f:com.intellij.ide.impl.OpenProjectTaskBuilder
- <init>():V
- f:build(kotlin.jvm.functions.Function1):com.intellij.ide.impl.OpenProjectTask
- f:getCallback():com.intellij.projectImport.ProjectOpenedCallback
- f:getColumn():I
- f:getForceOpenInNewFrame():Z
- f:getForceReuseFrame():Z
- f:getImplOptions():java.lang.Object
- f:getLine():I
- f:getPreloadServices():Z
- f:getPreparedToOpen():kotlin.jvm.functions.Function2
- f:getPreventIprLookup():Z
- f:getProject():com.intellij.openapi.project.Project
- f:getProjectName():java.lang.String
- f:getProjectToClose():com.intellij.openapi.project.Project
- f:getProjectWorkspaceId():java.lang.String
- f:getRunConfigurators():Z
- f:getRunConversionBeforeOpen():Z
- f:getShowWelcomeScreen():Z
- f:getUseDefaultProjectAsTemplate():java.lang.Boolean
- f:isNewProject():Z
- f:isProjectCreatedWithWizard():Z
- f:isRefreshVfsNeeded():Z
- f:setCallback(com.intellij.projectImport.ProjectOpenedCallback):V
- f:setColumn(I):V
- f:setForceOpenInNewFrame(Z):V
- f:setForceReuseFrame(Z):V
- f:setImplOptions(java.lang.Object):V
- f:setLine(I):V
- f:setNewProject(Z):V
- f:setPreloadServices(Z):V
- f:setPreparedToOpen(kotlin.jvm.functions.Function2):V
- f:setPreventIprLookup(Z):V
- f:setProject(com.intellij.openapi.project.Project):V
- f:setProjectCreatedWithWizard(Z):V
- f:setProjectName(java.lang.String):V
- f:setProjectToClose(com.intellij.openapi.project.Project):V
- f:setProjectWorkspaceId(java.lang.String):V
- f:setRefreshVfsNeeded(Z):V
- f:setRunConfigurators(Z):V
- f:setRunConversionBeforeOpen(Z):V
- f:setShowWelcomeScreen(Z):V
- f:setUseDefaultProjectAsTemplate(java.lang.Boolean):V
- f:withBeforeOpenCallback(java.util.function.Predicate):V
f:com.intellij.ide.impl.ProjectUtilCore
- <init>():V
- s:getOpenProjects():com.intellij.openapi.project.Project[]
- s:isValidProjectPath(java.nio.file.Path):Z
com.intellij.ide.impl.dataRules.GetDataRule
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getData(com.intellij.openapi.actionSystem.DataProvider):java.lang.Object
f:com.intellij.ide.nls.NlsMessages
- <init>():V
- s:formatAndList(java.util.Collection):java.lang.String
- s:formatDateLong(java.util.Date):java.lang.String
- s:formatDuration(J):java.lang.String
- s:formatDuration(J,I,Z):java.lang.String
- s:formatDurationApproximate(J):java.lang.String
- s:formatDurationApproximateNarrow(J):java.lang.String
- s:formatDurationPadded(J):java.lang.String
- s:formatNarrowAndList(java.util.Collection):java.lang.String
- s:formatOrList(java.util.Collection):java.lang.String
- s:joiningAnd():java.util.stream.Collector
- s:joiningNarrowAnd():java.util.stream.Collector
- s:joiningOr():java.util.stream.Collector
f:com.intellij.ide.nls.NlsMessages$NlsDurationFormatter
- <init>():V
- formatDuration(J):java.lang.String
- setDurationTimeUnit(java.util.concurrent.TimeUnit):com.intellij.ide.nls.NlsMessages$NlsDurationFormatter
- setMaxFragments(I):com.intellij.ide.nls.NlsMessages$NlsDurationFormatter
- setNarrow(Z):com.intellij.ide.nls.NlsMessages$NlsDurationFormatter
- setPadded(Z):com.intellij.ide.nls.NlsMessages$NlsDurationFormatter
c:com.intellij.ide.project.impl.BaseProjectDirectoriesImpl
- com.intellij.openapi.project.BaseProjectDirectories
- <init>(com.intellij.openapi.project.Project,kotlinx.coroutines.CoroutineScope):V
- p:collectRoots(com.intellij.platform.workspace.storage.ImmutableEntityStorage):kotlin.sequences.Sequence
- p:getBaseDirectories():java.util.Set
- getBaseDirectoryFor(com.intellij.openapi.vfs.VirtualFile):com.intellij.openapi.vfs.VirtualFile
- f:getProject():com.intellij.openapi.project.Project
- isProcessing():Z
- p:processChange(com.intellij.platform.workspace.storage.VersionedStorageChange,java.util.HashSet,java.util.HashSet):V
com.intellij.ide.script.IdeScriptEngine
- a:eval(java.lang.String):java.lang.Object
- a:getBinding(java.lang.String):java.lang.Object
- a:getFileExtensions():java.util.List
- a:getLanguage():java.lang.String
- a:getStdErr():java.io.Writer
- a:getStdIn():java.io.Reader
- a:getStdOut():java.io.Writer
- a:setBinding(java.lang.String,java.lang.Object):V
- a:setStdErr(java.io.Writer):V
- a:setStdIn(java.io.Reader):V
- a:setStdOut(java.io.Writer):V
a:com.intellij.ide.script.IdeScriptEngineManager
- <init>():V
- a:getEngine(com.intellij.ide.script.IdeScriptEngineManager$EngineInfo,java.lang.ClassLoader):com.intellij.ide.script.IdeScriptEngine
- a:getEngineByFileExtension(java.lang.String,java.lang.ClassLoader):com.intellij.ide.script.IdeScriptEngine
- a:getEngineByName(java.lang.String,java.lang.ClassLoader):com.intellij.ide.script.IdeScriptEngine
- a:getEngineInfos():java.util.List
- s:getInstance():com.intellij.ide.script.IdeScriptEngineManager
f:com.intellij.ide.script.IdeScriptEngineManager$EngineInfo
- f:engineName:java.lang.String
- f:engineVersion:java.lang.String
- f:factoryClass:java.lang.String
- f:fileExtensions:java.util.List
- f:languageName:java.lang.String
- f:languageVersion:java.lang.String
- f:plugin:com.intellij.openapi.extensions.PluginDescriptor
f:com.intellij.ide.script.IdeScriptException
- java.lang.Exception
- <init>():V
- <init>(java.lang.String):V
- <init>(java.lang.String,java.lang.Throwable):V
- <init>(java.lang.Throwable):V
f:com.intellij.notification.impl.NotificationGroupEP
- com.intellij.openapi.extensions.PluginAware
- bundle:java.lang.String
- displayType:com.intellij.notification.impl.NotificationGroupEP$DisplayType
- hideFromSettings:Z
- icon:java.lang.String
- id:java.lang.String
- isLogByDefault:Z
- key:java.lang.String
- notificationIds:java.util.List
- toolWindowId:java.lang.String
- <init>():V
- getDisplayName(com.intellij.openapi.extensions.PluginDescriptor):java.lang.String
- getDisplayType():com.intellij.notification.NotificationDisplayType
- setPluginDescriptor(com.intellij.openapi.extensions.PluginDescriptor):V
f:com.intellij.notification.impl.NotificationParentGroupBean
- id:java.lang.String
- parentId:java.lang.String
- title:java.lang.String
- titlePrefix:java.lang.String
f:com.intellij.openapi.actionSystem.impl.SimpleDataContext
- com.intellij.openapi.actionSystem.CustomizedDataContext
- s:builder():com.intellij.openapi.actionSystem.impl.SimpleDataContext$Builder
- s:getProjectContext(com.intellij.openapi.project.Project):com.intellij.openapi.actionSystem.DataContext
- s:getSimpleContext(com.intellij.openapi.actionSystem.DataKey,java.lang.Object):com.intellij.openapi.actionSystem.DataContext
- s:getSimpleContext(com.intellij.openapi.actionSystem.DataKey,java.lang.Object,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DataContext
- s:getSimpleContext(java.lang.String,java.lang.Object,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DataContext
- s:getSimpleContext(java.util.Map,com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.DataContext
f:com.intellij.openapi.actionSystem.impl.SimpleDataContext$Builder
- add(com.intellij.openapi.actionSystem.DataKey,java.lang.Object):com.intellij.openapi.actionSystem.impl.SimpleDataContext$Builder
- addAll(com.intellij.openapi.actionSystem.DataContext,com.intellij.openapi.actionSystem.DataKey[]):com.intellij.openapi.actionSystem.impl.SimpleDataContext$Builder
- addNull(com.intellij.openapi.actionSystem.DataKey):com.intellij.openapi.actionSystem.impl.SimpleDataContext$Builder
- build():com.intellij.openapi.actionSystem.DataContext
- setParent(com.intellij.openapi.actionSystem.DataContext):com.intellij.openapi.actionSystem.impl.SimpleDataContext$Builder
f:com.intellij.openapi.application.impl.AWTExceptionHandler
- <init>():V
- handle(java.lang.Throwable):V
- s:register():V
c:com.intellij.openapi.editor.ex.EditorSettingsExternalizable
- com.intellij.openapi.components.PersistentStateComponent
- sf:BLINKING_RANGE:com.intellij.ide.ui.UINumericRange
- sf:PROP_BREADCRUMBS_PER_LANGUAGE:java.lang.String
- sf:PROP_DOC_COMMENT_RENDERING:java.lang.String
- sf:PROP_VIRTUAL_SPACE:java.lang.String
- sf:STRIP_TRAILING_SPACES_CHANGED:java.lang.String
- sf:STRIP_TRAILING_SPACES_NONE:java.lang.String
- sf:STRIP_TRAILING_SPACES_WHOLE:java.lang.String
- sf:TOOLTIPS_DELAY_RANGE:com.intellij.ide.ui.UINumericRange
- <init>():V
- addCaretsOnDoubleCtrl():Z
- addPropertyChangeListener(java.beans.PropertyChangeListener,com.intellij.openapi.Disposable):V
- areGutterIconsShown():Z
- areStickyLinesShown():Z
- areStickyLinesShownFor(java.lang.String):Z
- p:firePropertyChange(java.lang.String,Z,Z):V
- getBlinkPeriod():I
- getBlockIndent():I
- getCustomSoftWrapIndent():I
- getHorizontalScrollJump():I
- getHorizontalScrollOffset():I
- s:getInstance():com.intellij.openapi.editor.ex.EditorSettingsExternalizable
- getLineNumeration():com.intellij.openapi.editor.EditorSettings$LineNumerationType
- getOptions():com.intellij.openapi.editor.ex.EditorSettingsExternalizable$OptionSet
- getQuickDocOnMouseOverElementDelayMillis():I
- getSoftWrapFileMasks():java.lang.String
- getState():com.intellij.openapi.editor.ex.EditorSettingsExternalizable$OptionSet
- getStickyLineLimit():I
- getStripTrailingSpaces():java.lang.String
- getTooltipsDelay():I
- getVerticalScrollJump():I
- getVerticalScrollOffset():I
- hasBreadcrumbSettings(java.lang.String):Z
- isAdditionalPageAtBottom():Z
- isAllSoftWrapsShown():Z
- isBlinkCaret():Z
- isBlockCursor():Z
- isBreadcrumbsAbove():Z
- isBreadcrumbsShown():Z
- isBreadcrumbsShownFor(java.lang.String):Z
- isCamelWords():Z
- isCaretInsideTabs():Z
- isCaretRowShown():Z
- isDndEnabled():Z
- isDocCommentRenderingEnabled():Z
- isEnsureNewLineAtEOF():Z
- isFocusMode():Z
- isFoldingEndingsShown():Z
- isFoldingOutlineShown():Z
- isFoldingOutlineShownOnlyOnHover():Z
- isFullLineHeightCursor():Z
- isHighlightSelectionOccurrences():Z
- isIndentGuidesShown():Z
- isInnerWhitespacesShown():Z
- isInsertParenthesesAutomatically():Z
- isKeepTrailingSpacesOnCaretLine():Z
- isLeadingWhitespacesShown():Z
- isLineNumbersShown():Z
- isMouseClickSelectionHonorsCamelWords():Z
- isPreselectRename():Z
- isRefrainFromScrolling():Z
- isRemoveTrailingBlankLines():Z
- isRightMarginShown():Z
- isSelectionWhitespacesShown():Z
- isShowInlineLocalDialog():Z
- isShowInspectionWidget():Z
- isShowIntentionBulb():Z
- isShowIntentionPreview():Z
- isShowNotificationAfterOptimizeImports():Z
- isShowNotificationAfterReformat():Z
- isShowQuickDocOnMouseOverElement():Z
- isSmartHome():Z
- isSmoothScrolling():Z
- isTrailingWhitespacesShown():Z
- isUseCustomSoftWrapIndent():Z
- isUseEditorFontInInlays():Z
- isUseSoftWraps():Z
- isUseSoftWraps(com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces):Z
- isVariableInplaceRenameEnabled():Z
- isVirtualSpace():Z
- isWheelFontChangeEnabled():Z
- isWheelFontChangePersistent():Z
- isWhitespacesShown():Z
- loadState(com.intellij.openapi.editor.ex.EditorSettingsExternalizable$OptionSet):V
- noStateLoaded():V
- resetDefaultBreadcrumbVisibility():V
- setAddCaretsOnDoubleCtrl(Z):V
- setAdditionalPageAtBottom(Z):V
- setAllSoftwrapsShown(Z):V
- setBlinkCaret(Z):V
- setBlinkPeriod(I):V
- setBlockCursor(Z):V
- setBlockIndent(I):V
- setBreadcrumbsAbove(Z):Z
- setBreadcrumbsShown(Z):Z
- setBreadcrumbsShownFor(java.lang.String,Z):Z
- setCamelWords(Z):V
- setCaretInsideTabs(Z):V
- setCustomSoftWrapIndent(I):V
- setDndEnabled(Z):V
- setDocCommentRenderingEnabled(Z):V
- setEnsureNewLineAtEOF(Z):V
- setFocusMode(Z):V
- setFoldingEndingsShown(Z):V
- setFoldingOutlineShown(Z):V
- setFoldingOutlineShownOnlyOnHover(Z):V
- setFullLineHeightCursor(Z):V
- setGutterIconsShown(Z):V
- setHighlightSelectionOccurrences(Z):V
- setHorizontalScrollJump(I):V
- setHorizontalScrollOffset(I):V
- setIndentGuidesShown(Z):V
- setInnerWhitespacesShown(Z):V
- setInsertParenthesesAutomatically(Z):V
- setKeepTrailingSpacesOnCaretLine(Z):V
- setLeadingWhitespacesShown(Z):V
- setLineNumbersShown(Z):V
- setLineNumeration(com.intellij.openapi.editor.EditorSettings$LineNumerationType):V
- setMouseClickSelectionHonorsCamelWords(Z):V
- setPreselectRename(Z):V
- setRefrainFromScrolling(Z):V
- setRemoveTrailingBlankLines(Z):V
- setRightMarginShown(Z):V
- setSelectionWhitespacesShown(Z):V
- setShowInlineLocalDialog(Z):V
- setShowInspectionWidget(Z):V
- setShowIntentionBulb(Z):V
- setShowIntentionPreview(Z):V
- setShowQuickDocOnMouseOverElement(Z):V
- setSmartHome(Z):V
- setSmoothScrolling(Z):V
- setSoftWrapFileMasks(java.lang.String):V
- setStickyLineLimit(I):V
- setStickyLinesShown(Z):Z
- setStickyLinesShownFor(java.lang.String,Z):Z
- setStripTrailingSpaces(java.lang.String):V
- setTooltipsDelay(I):V
- setTrailingWhitespacesShown(Z):V
- setUseCustomSoftWrapIndent(Z):V
- setUseEditorFontInInlays(Z):V
- setUseSoftWraps(Z):V
- setUseSoftWraps(Z,com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces):V
- setVariableInplaceRenameEnabled(Z):V
- setVerticalScrollJump(I):V
- setVerticalScrollOffset(I):V
- setVirtualSpace(Z):V
- setWheelFontChangeEnabled(Z):V
- setWheelFontChangePersistent(Z):V
- setWhitespacesShown(Z):V
f:com.intellij.openapi.editor.ex.EditorSettingsExternalizable$OptionSet
- ADDITIONAL_PAGE_AT_BOTTOM:Z
- ADD_CARETS_ON_DOUBLE_CTRL:Z
- ARE_GUTTER_ICONS_SHOWN:Z
- ARE_LINE_NUMBERS_SHOWN:Z
- CARET_BLINKING_PERIOD:I
- CUSTOM_SOFT_WRAP_INDENT:I
- ENABLE_RENDERED_DOC:Z
- HORIZONTAL_SCROLL_JUMP:I
- HORIZONTAL_SCROLL_OFFSET:I
- INSERT_PARENTHESES_AUTOMATICALLY:Z
- IS_ALL_SOFTWRAPS_SHOWN:Z
- IS_ANIMATED_SCROLLING:Z
- IS_BLOCK_CURSOR:Z
- IS_CAMEL_WORDS:Z
- IS_CARET_BLINKING:Z
- IS_CARET_INSIDE_TABS:Z
- IS_DND_ENABLED:Z
- IS_ENSURE_NEWLINE_AT_EOF:Z
- IS_FOCUS_MODE:Z
- IS_FOLDING_ENDINGS_SHOWN:Z
- IS_FOLDING_OUTLINE_SHOWN:Z
- IS_FOLDING_OUTLINE_SHOWN_ONLY_ON_HOVER:Z
- IS_FULL_LINE_HEIGHT_CURSOR:Z
- IS_HIGHLIGHT_SELECTION_OCCURRENCES:Z
- IS_INDENT_GUIDES_SHOWN:Z
- IS_INNER_WHITESPACES_SHOWN:Z
- IS_LEADING_WHITESPACES_SHOWN:Z
- IS_MOUSE_CLICK_SELECTION_HONORS_CAMEL_WORDS:Z
- IS_RIGHT_MARGIN_SHOWN:Z
- IS_SELECTION_WHITESPACES_SHOWN:Z
- IS_TRAILING_WHITESPACES_SHOWN:Z
- IS_VIRTUAL_SPACE:Z
- IS_WHEEL_FONTCHANGE_ENABLED:Z
- IS_WHEEL_FONTCHANGE_PERSISTENT:Z
- IS_WHITESPACES_SHOWN:Z
- KEEP_TRAILING_SPACE_ON_CARET_LINE:Z
- LINE_NUMERATION:com.intellij.openapi.editor.EditorSettings$LineNumerationType
- LINE_SEPARATOR:java.lang.String
- PRESELECT_RENAME:Z
- REFRAIN_FROM_SCROLLING:Z
- REMOVE_TRAILING_BLANK_LINES:Z
- RENAME_VARIABLES_INPLACE:Z
- SHOW_BREADCRUMBS:Z
- SHOW_BREADCRUMBS_ABOVE:Z
- SHOW_INLINE_DIALOG:Z
- SHOW_INSPECTION_WIDGET:Z
- SHOW_INTENTION_BULB:Z
- SHOW_INTENTION_PREVIEW:Z
- SHOW_PARAMETER_NAME_HINTS:Z
- SHOW_QUICK_DOC_ON_MOUSE_OVER_ELEMENT:Z
- SHOW_STICKY_LINES:Z
- SMART_HOME:Z
- SOFT_WRAP_FILE_MASKS:java.lang.String
- STICKY_LINES_LIMIT:I
- STRIP_TRAILING_SPACES:java.lang.String
- TOOLTIPS_DELAY_MS:I
- USE_CUSTOM_SOFT_WRAP_INDENT:Z
- USE_EDITOR_FONT_IN_INLAYS:Z
- USE_SOFT_WRAPS:java.lang.String
- VERTICAL_SCROLL_JUMP:I
- VERTICAL_SCROLL_OFFSET:I
- <init>():V
- getLanguageBreadcrumbsMap():java.util.Map
- getLanguageStickyLines():java.util.Map
- setLanguageBreadcrumbsMap(java.util.Map):V
- setLanguageStickyLines(java.util.Map):V
f:com.intellij.openapi.editor.ex.EditorSettingsExternalizable$PropNames
- sf:PROP_ADDITIONAL_PAGE_AT_BOTTOM:java.lang.String
- sf:PROP_ADD_CARETS_ON_DOUBLE_CTRL:java.lang.String
- sf:PROP_ARE_GUTTER_ICONS_SHOWN:java.lang.String
- sf:PROP_ARE_LINE_NUMBERS_AFTER_ICONS:java.lang.String
- sf:PROP_ARE_LINE_NUMBERS_SHOWN:java.lang.String
- sf:PROP_BIDI_TEXT_DIRECTION:java.lang.String
- sf:PROP_BREADCRUMBS_PER_LANGUAGE:java.lang.String
- sf:PROP_CARET_BLINKING_PERIOD:java.lang.String
- sf:PROP_CUSTOM_SOFT_WRAP_INDENT:java.lang.String
- sf:PROP_ENABLE_RENDERED_DOC:java.lang.String
- sf:PROP_HORIZONTAL_SCROLL_JUMP:java.lang.String
- sf:PROP_HORIZONTAL_SCROLL_OFFSET:java.lang.String
- sf:PROP_INSERT_PARENTHESES_AUTOMATICALLY:java.lang.String
- sf:PROP_IS_ALL_SOFTWRAPS_SHOWN:java.lang.String
- sf:PROP_IS_ANIMATED_SCROLLING:java.lang.String
- sf:PROP_IS_BLOCK_CURSOR:java.lang.String
- sf:PROP_IS_CAMEL_WORDS:java.lang.String
- sf:PROP_IS_CARET_BLINKING:java.lang.String
- sf:PROP_IS_CARET_INSIDE_TABS:java.lang.String
- sf:PROP_IS_DND_ENABLED:java.lang.String
- sf:PROP_IS_ENSURE_NEWLINE_AT_EOF:java.lang.String
- sf:PROP_IS_FOCUS_MODE:java.lang.String
- sf:PROP_IS_FOLDING_ENDINGS_SHOWN:java.lang.String
- sf:PROP_IS_FOLDING_OUTLINE_SHOWN:java.lang.String
- sf:PROP_IS_FOLDING_OUTLINE_SHOWN_ONLY_ON_HOVER:java.lang.String
- sf:PROP_IS_FULL_LINE_HEIGHT_CURSOR:java.lang.String
- sf:PROP_IS_HIGHLIGHT_SELECTION_OCCURRENCES:java.lang.String
- sf:PROP_IS_INDENT_GUIDES_SHOWN:java.lang.String
- sf:PROP_IS_INNER_WHITESPACES_SHOWN:java.lang.String
- sf:PROP_IS_LEADING_WHITESPACES_SHOWN:java.lang.String
- sf:PROP_IS_MOUSE_CLICK_SELECTION_HONORS_CAMEL_WORDS:java.lang.String
- sf:PROP_IS_RIGHT_MARGIN_SHOWN:java.lang.String
- sf:PROP_IS_SELECTION_WHITESPACES_SHOWN:java.lang.String
- sf:PROP_IS_TRAILING_WHITESPACES_SHOWN:java.lang.String
- sf:PROP_IS_VIRTUAL_SPACE:java.lang.String
- sf:PROP_IS_WHEEL_FONTCHANGE_ENABLED:java.lang.String
- sf:PROP_IS_WHEEL_FONTCHANGE_PERSISTENT:java.lang.String
- sf:PROP_IS_WHITESPACES_SHOWN:java.lang.String
- sf:PROP_KEEP_TRAILING_SPACE_ON_CARET_LINE:java.lang.String
- sf:PROP_LINE_NUMERATION:java.lang.String
- sf:PROP_PRESELECT_RENAME:java.lang.String
- sf:PROP_REFRAIN_FROM_SCROLLING:java.lang.String
- sf:PROP_REMOVE_TRAILING_BLANK_LINES:java.lang.String
- sf:PROP_RENAME_VARIABLES_INPLACE:java.lang.String
- sf:PROP_SHOW_BREADCRUMBS:java.lang.String
- sf:PROP_SHOW_BREADCRUMBS_ABOVE:java.lang.String
- sf:PROP_SHOW_INLINE_DIALOG:java.lang.String
- sf:PROP_SHOW_INSPECTION_WIDGET:java.lang.String
- sf:PROP_SHOW_INTENTION_BULB:java.lang.String
- sf:PROP_SHOW_INTENTION_PREVIEW:java.lang.String
- sf:PROP_SHOW_QUICK_DOC_ON_MOUSE_OVER_ELEMENT:java.lang.String
- sf:PROP_SHOW_STICKY_LINES:java.lang.String
- sf:PROP_SHOW_STICKY_LINES_PER_LANGUAGE:java.lang.String
- sf:PROP_SMART_HOME:java.lang.String
- sf:PROP_SOFT_WRAP_FILE_MASKS:java.lang.String
- sf:PROP_STICKY_LINES_LIMIT:java.lang.String
- sf:PROP_STRIP_TRAILING_SPACES:java.lang.String
- sf:PROP_TOOLTIPS_DELAY_MS:java.lang.String
- sf:PROP_USE_CUSTOM_SOFT_WRAP_INDENT:java.lang.String
- sf:PROP_USE_EDITOR_FONT_IN_INLAYS:java.lang.String
- sf:PROP_USE_SOFT_WRAPS:java.lang.String
- sf:PROP_VERTICAL_SCROLL_JUMP:java.lang.String
- sf:PROP_VERTICAL_SCROLL_OFFSET:java.lang.String
- <init>():V
@:com.intellij.openapi.editor.ex.EditorSettingsExternalizable$StripTrailingSpaces
- java.lang.annotation.Annotation
e:com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces
- java.lang.Enum
- sf:CONSOLE:com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces
- sf:MAIN_EDITOR:com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces
- sf:PREVIEW:com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces
- s:valueOf(java.lang.String):com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces
- s:values():com.intellij.openapi.editor.impl.softwrap.SoftWrapAppliancePlaces[]
com.intellij.openapi.fileEditor.impl.EditorTabColorProvider
- com.intellij.openapi.project.PossiblyDumbAware
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getEditorTabColor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- getProjectViewColor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.awt.Color
f:com.intellij.openapi.fileEditor.impl.EditorTabPresentationUtil
- sf:INSTANCE:com.intellij.openapi.fileEditor.impl.EditorTabPresentationUtil
- sf:getCustomEditorTabTitle(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- sf:getEditorTabBackgroundColor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- sf:getEditorTabTitle(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- sf:getFileBackgroundColor(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.awt.Color
- sf:getUniqueEditorTabTitle(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
com.intellij.openapi.fileEditor.impl.EditorTabTitleProvider
- com.intellij.openapi.project.DumbAware
- sf:Companion:com.intellij.openapi.fileEditor.impl.EditorTabTitleProvider$Companion
- a:getEditorTabTitle(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
- getEditorTabTooltipText(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
f:com.intellij.openapi.fileEditor.impl.EditorTabTitleProvider$Companion
com.intellij.openapi.fileEditor.impl.NonProjectFileWritingAccessExtension
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- isNotWritable(com.intellij.openapi.vfs.VirtualFile):Z
- isWritable(com.intellij.openapi.vfs.VirtualFile):Z
f:com.intellij.openapi.fileEditor.impl.NonProjectFileWritingAccessProvider
- com.intellij.openapi.vfs.WritingAccessProvider
- <init>(com.intellij.openapi.project.Project):V
- s:allowWriting(java.lang.Iterable):V
- s:allowWriting(com.intellij.openapi.vfs.VirtualFile[]):V
- s:disableChecksDuring(java.lang.Runnable):V
- s:enableChecksInTests(com.intellij.openapi.Disposable):V
- s:enableChecksInTests(java.lang.Boolean,com.intellij.openapi.Disposable):V
- s:isWriteAccessAllowed(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
- requestWriting(java.util.Collection):java.util.Collection
- s:setCustomUnlocker(com.intellij.util.NullableFunction):V
c:com.intellij.openapi.fileEditor.impl.UniqueNameEditorTabTitleProvider
- com.intellij.openapi.fileEditor.impl.EditorTabTitleProvider
- <init>():V
- getEditorTabTitle(com.intellij.openapi.project.Project,com.intellij.openapi.vfs.VirtualFile):java.lang.String
a:com.intellij.openapi.fileTypes.ex.FileTypeManagerEx
- com.intellij.openapi.fileTypes.FileTypeManager
- <init>():V
- a:fireBeforeFileTypesChanged():V
- a:fireFileTypesChanged():V
- a:freezeFileTypeTemporarilyIn(com.intellij.openapi.vfs.VirtualFile,java.lang.Runnable):V
- a:getExtension(java.lang.String):java.lang.String
- s:getInstanceEx():com.intellij.openapi.fileTypes.ex.FileTypeManagerEx
- a:isIgnoredFilesListEqualToCurrent(java.lang.String):Z
- a:makeFileTypesChange(java.lang.String,java.lang.Runnable):V
f:com.intellij.openapi.progress.util.BackgroundTaskUtil
- <init>():V
- s:computeInBackgroundAndTryWait(com.intellij.openapi.util.Computable,com.intellij.util.Consumer,J):java.lang.Object
- s:execute(java.util.concurrent.Executor,com.intellij.openapi.Disposable,java.lang.Runnable):com.intellij.openapi.progress.ProgressIndicator
- s:executeAndTryWait(com.intellij.util.Function,java.lang.Runnable):com.intellij.openapi.progress.ProgressIndicator
- s:executeAndTryWait(com.intellij.util.Function,java.lang.Runnable,J,Z):com.intellij.openapi.progress.ProgressIndicator
- s:executeOnPooledThread(com.intellij.openapi.Disposable,java.lang.Runnable):com.intellij.openapi.progress.ProgressIndicator
- s:runUnderDisposeAwareIndicator(com.intellij.openapi.Disposable,java.lang.Runnable):V
- s:runUnderDisposeAwareIndicator(com.intellij.openapi.Disposable,java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):V
- s:runUnderDisposeAwareIndicator(com.intellij.openapi.Disposable,java.util.function.Supplier):java.lang.Object
- s:runUnderDisposeAwareIndicator(com.intellij.openapi.Disposable,java.util.function.Supplier,com.intellij.openapi.progress.ProgressIndicator):java.lang.Object
- s:submitTask(com.intellij.openapi.Disposable,java.lang.Runnable):com.intellij.openapi.progress.util.BackgroundTaskUtil$BackgroundTask
- s:submitTask(java.util.concurrent.Executor,com.intellij.openapi.Disposable,com.intellij.openapi.util.Computable):com.intellij.openapi.progress.util.BackgroundTaskUtil$BackgroundTask
- s:submitTask(java.util.concurrent.Executor,com.intellij.openapi.Disposable,java.lang.Runnable):com.intellij.openapi.progress.util.BackgroundTaskUtil$BackgroundTask
- s:syncPublisher(com.intellij.openapi.project.Project,com.intellij.util.messages.Topic):java.lang.Object
- s:syncPublisher(com.intellij.util.messages.Topic):java.lang.Object
- s:tryComputeFast(com.intellij.util.Function,J):java.lang.Object
f:com.intellij.openapi.progress.util.BackgroundTaskUtil$BackgroundTask
- <init>(com.intellij.openapi.Disposable,com.intellij.openapi.progress.ProgressIndicator,java.util.concurrent.CompletableFuture):V
- awaitCompletion():V
- cancel():V
- getFuture():java.util.concurrent.CompletableFuture
- getIndicator():com.intellij.openapi.progress.ProgressIndicator
- getParent():com.intellij.openapi.Disposable
com.intellij.openapi.progress.util.PingProgress
- a:interact():V
- s:interactWithEdtProgress():V
f:com.intellij.openapi.progress.util.ProgressIndicatorUtils
- <init>():V
- s:awaitWithCheckCanceled(J):V
- s:awaitWithCheckCanceled(com.intellij.openapi.util.ThrowableComputable):V
- s:awaitWithCheckCanceled(com.intellij.util.concurrency.Semaphore,com.intellij.openapi.progress.ProgressIndicator):V
- s:awaitWithCheckCanceled(java.util.concurrent.CountDownLatch):V
- s:awaitWithCheckCanceled(java.util.concurrent.Future):java.lang.Object
- s:awaitWithCheckCanceled(java.util.concurrent.Future,com.intellij.openapi.progress.ProgressIndicator):java.lang.Object
- s:awaitWithCheckCanceled(java.util.concurrent.locks.Condition):V
- s:awaitWithCheckCanceled(java.util.concurrent.locks.Lock):V
- s:checkCancelledEvenWithPCEDisabled(com.intellij.openapi.progress.ProgressIndicator):V
- s:computeWithLockAndCheckingCanceled(java.util.concurrent.locks.Lock,I,java.util.concurrent.TimeUnit,com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- s:forceWriteActionPriority(com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.Disposable):com.intellij.openapi.progress.ProgressIndicator
- s:runInReadActionWithWriteActionPriority(java.lang.Runnable):Z
- s:runInReadActionWithWriteActionPriority(java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):Z
- s:runWithWriteActionPriority(java.lang.Runnable,com.intellij.openapi.progress.ProgressIndicator):Z
- s:scheduleWithWriteActionPriority(com.intellij.openapi.progress.ProgressIndicator,com.intellij.openapi.progress.util.ReadTask):java.util.concurrent.CompletableFuture
- s:scheduleWithWriteActionPriority(com.intellij.openapi.progress.ProgressIndicator,java.util.concurrent.Executor,com.intellij.openapi.progress.util.ReadTask):java.util.concurrent.CompletableFuture
- s:scheduleWithWriteActionPriority(com.intellij.openapi.progress.util.ReadTask):V
- s:withTimeout(J,com.intellij.openapi.util.Computable):java.lang.Object
- s:yieldToPendingWriteActions():V
- s:yieldToPendingWriteActions(com.intellij.openapi.progress.ProgressIndicator):V
a:com.intellij.openapi.progress.util.ReadTask
- <init>():V
- computeInReadAction(com.intellij.openapi.progress.ProgressIndicator):V
- a:onCanceled(com.intellij.openapi.progress.ProgressIndicator):V
- performInReadAction(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.progress.util.ReadTask$Continuation
- runBackgroundProcess(com.intellij.openapi.progress.ProgressIndicator):com.intellij.openapi.progress.util.ReadTask$Continuation
f:com.intellij.openapi.progress.util.ReadTask$Continuation
- <init>(java.lang.Runnable):V
- <init>(java.lang.Runnable,com.intellij.openapi.application.ModalityState):V
- getAction():java.lang.Runnable
- getModalityState():com.intellij.openapi.application.ModalityState
f:com.intellij.openapi.project.ex.PerProjectInstancePaths
- sf:Companion:com.intellij.openapi.project.ex.PerProjectInstancePaths$Companion
- <init>(java.nio.file.Path):V
- f:getConfigDir():java.nio.file.Path
- f:getLogDir():java.nio.file.Path
- f:getPluginsDir():java.nio.file.Path
- f:getSystemDir():java.nio.file.Path
f:com.intellij.openapi.project.ex.PerProjectInstancePaths$Companion
- f:getConfigDir(java.nio.file.Path,Z,kotlin.jvm.functions.Function0,java.nio.file.Path):java.nio.file.Path
- f:getLogDir(java.nio.file.Path,java.nio.file.Path,Z,kotlin.jvm.functions.Function0,java.nio.file.Path):java.nio.file.Path
- f:getPluginsDir(java.nio.file.Path,java.nio.file.Path,Z,kotlin.jvm.functions.Function0,java.nio.file.Path):java.nio.file.Path
- f:getSystemDir(java.nio.file.Path,Z,kotlin.jvm.functions.Function0,java.nio.file.Path):java.nio.file.Path
- bs:getSystemDir$default(com.intellij.openapi.project.ex.PerProjectInstancePaths$Companion,java.nio.file.Path,Z,kotlin.jvm.functions.Function0,java.nio.file.Path,I,java.lang.Object):java.nio.file.Path
com.intellij.openapi.project.ex.ProjectEx
- com.intellij.openapi.project.Project
- sf:NAME_FILE:java.lang.String
- getCreationTrace():java.lang.String
- isLight():Z
- a:setProjectName(java.lang.String):V
a:com.intellij.openapi.project.ex.ProjectManagerEx
- com.intellij.openapi.project.ProjectManager
- sf:Companion:com.intellij.openapi.project.ex.ProjectManagerEx$Companion
- sf:PER_PROJECT_OPTION_NAME:java.lang.String
- <init>():V
- a:canClose(com.intellij.openapi.project.Project):Z
- a:closeAndDisposeAllProjects(Z):Z
- a:forceCloseProject(com.intellij.openapi.project.Project,Z):Z
- sf:getInstanceEx():com.intellij.openapi.project.ex.ProjectManagerEx
- sf:getInstanceExIfCreated():com.intellij.openapi.project.ex.ProjectManagerEx
- a:isDefaultProjectInitialized():Z
- a:isProjectOpened(com.intellij.openapi.project.Project):Z
- f:newProject(java.lang.String,java.lang.String,Z,Z):com.intellij.openapi.project.Project
- a:newProject(java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask):com.intellij.openapi.project.Project
- a:openProject(java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask):com.intellij.openapi.project.Project
- a:openProjectAsync(java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask,kotlin.coroutines.Continuation):java.lang.Object
- bs:openProjectAsync$default(com.intellij.openapi.project.ex.ProjectManagerEx,java.nio.file.Path,com.intellij.ide.impl.OpenProjectTask,kotlin.coroutines.Continuation,I,java.lang.Object):java.lang.Object
f:com.intellij.openapi.project.ex.ProjectManagerEx$Companion
- f:getIS_CHILD_PROCESS():Z
- f:getInstanceEx():com.intellij.openapi.project.ex.ProjectManagerEx
- f:getInstanceExAsync(kotlin.coroutines.Continuation):java.lang.Object
- f:getInstanceExIfCreated():com.intellij.openapi.project.ex.ProjectManagerEx
e:com.intellij.openapi.project.ex.ProjectManagerEx$PerProjectState
- java.lang.Enum
- sf:DISABLED:com.intellij.openapi.project.ex.ProjectManagerEx$PerProjectState
- sf:ENABLED:com.intellij.openapi.project.ex.ProjectManagerEx$PerProjectState
- sf:READY:com.intellij.openapi.project.ex.ProjectManagerEx$PerProjectState
- s:getEntries():kotlin.enums.EnumEntries
- s:valueOf(java.lang.String):com.intellij.openapi.project.ex.ProjectManagerEx$PerProjectState
- s:values():com.intellij.openapi.project.ex.ProjectManagerEx$PerProjectState[]
com.intellij.openapi.project.ex.ProjectNameProvider
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
com.intellij.openapi.vfs.ex.temp.TempFileSystemMarker
com.intellij.openapi.vfs.local.FileWatcherNotificationSink
- a:notifyDirtyDirectory(java.lang.String):V
- a:notifyDirtyPath(java.lang.String):V
- a:notifyDirtyPathRecursive(java.lang.String):V
- notifyManualWatchRoots(com.intellij.openapi.vfs.local.PluggableFileWatcher,java.util.Collection):V
- a:notifyMapping(java.util.Collection):V
- a:notifyPathCreatedOrDeleted(java.lang.String):V
- a:notifyReset(java.lang.String):V
- a:notifyUserOnFailure(java.lang.String,com.intellij.notification.NotificationListener):V
a:com.intellij.openapi.vfs.local.PluggableFileWatcher
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- <init>():V
- a:dispose():V
- a:initialize(com.intellij.openapi.vfs.newvfs.ManagingFS,com.intellij.openapi.vfs.local.FileWatcherNotificationSink):V
- a:isOperational():Z
- a:isSettingRoots():Z
- resetChangedPaths():V
- a:setWatchRoots(java.util.List,java.util.List,Z):V
- a:shutdown():V
- a:startup():V
f:com.intellij.openapi.vfs.newvfs.VfsImplUtil
- s:extractRootFromPath(com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem,java.lang.String):com.intellij.openapi.vfs.newvfs.VfsImplUtil$PathFromRoot
- s:findCachedFileByPath(com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem,java.lang.String):com.intellij.openapi.util.Pair
- s:findFileByPath(com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem,java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- s:findFileByPathIfCached(com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem,java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- s:forceSyncRefresh(com.intellij.openapi.vfs.VirtualFile):V
- s:getHandler(com.intellij.openapi.vfs.newvfs.ArchiveFileSystem,com.intellij.openapi.vfs.VirtualFile,com.intellij.util.Function):com.intellij.openapi.vfs.impl.ArchiveHandler
- s:getJarInvalidationEvents(com.intellij.openapi.vfs.newvfs.events.VFileEvent,java.util.List):java.util.List
- s:refresh(com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem,Z):V
- s:refreshAndFindFileByPath(com.intellij.openapi.vfs.newvfs.NewVirtualFileSystem,java.lang.String):com.intellij.openapi.vfs.newvfs.NewVirtualFile
- s:releaseHandler(java.lang.String):V
f:com.intellij.openapi.vfs.newvfs.VfsImplUtil$PathFromRoot
- java.lang.Record
- <init>(com.intellij.openapi.vfs.newvfs.NewVirtualFile,java.lang.String):V
- f:equals(java.lang.Object):Z
- f:hashCode():I
- pathFromRoot():java.lang.String
- root():com.intellij.openapi.vfs.newvfs.NewVirtualFile
f:com.intellij.util.FlushingDaemon
- sf:INSTANCE:com.intellij.util.FlushingDaemon
- sf:NAME:java.lang.String
- sf:runPeriodically(java.lang.Runnable):java.util.concurrent.ScheduledFuture
f:com.intellij.util.UriUtil
- s:splitScheme(java.lang.String):com.intellij.openapi.util.Couple
- s:trimLeadingSlashes(java.lang.String):java.lang.String
- s:trimParameters(java.lang.String):java.lang.String
- s:trimTrailingSlashes(java.lang.String):java.lang.String
