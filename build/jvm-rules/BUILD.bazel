load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "int_flag")
load("@rules_java//java:defs.bzl", "java_import")
load("@rules_kotlin//kotlin:core.bzl", _kt_kotlinc_options = "kt_kotlinc_options")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_import")
load("//:jvm.bzl", "jvm_import", "jvm_provided_library", "kt_javac_options", "kt_kotlinc_options")

_kt_kotlinc_options(
    name = "rules_jvm_bootstrap_kotlinc_options",
    include_stdlibs = "none",
    jvm_target = "17",
    visibility = ["//visibility:public"],  # used by @community//:monorepo-jvm-builder (@community//fleet/compiler-plugins/expects:expects-compiler-plugin, etc.)
    x_jdk_release = "17",
)

# --@rules_jvm//:trace
bool_flag(
    name = "trace",
    build_setting_default = False,
)

# used by _jvm_builder_launcher attribute in jvm_library rule and _worker_launcher attribute in jvm_resources rule
exports_files(
    ["rules/impl/MemoryLauncher.java"],
    visibility = ["//visibility:private"],
)

# --@rules_jvm//:koltin_inc_threshold=100
int_flag(
    name = "koltin_inc_threshold",
    build_setting_default = -1,
)

int_flag(
    name = "java_inc_threshold",
    build_setting_default = -1,
)

jvm_import(
    name = "annotations_import",
    jar = "@annotations_http//file",
    source_jar = "@annotations-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "asm-all_import",
    jar = "@asm-all_http//file",
    source_jar = "@asm-all-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "caffeine_import",
    jar = "@caffeine_http//file",
    source_jar = "@caffeine-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "h2-mvstore_import",
    jar = "@h2-mvstore_http//file",
    source_jar = "@h2-mvstore-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "hash4j_import",
    jar = "@hash4j_http//file",
    source_jar = "@hash4j-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "intellij-deps-fastutil_import",
    jar = "@intellij-deps-fastutil_http//file",
    source_jar = "@intellij-deps-fastutil-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "jackson-core_import",
    jar = "@jackson-core_http//file",
    source_jar = "@jackson-core-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "javax-annotation-api_import",
    jar = "@javax_annotation-api_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "jps-javac-extension_import",
    jar = "@jps-javac-extension_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "kotlin-compiler-for-wasmjs_import",
    jar = "@kotlin-compiler-for-wasmjs_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "kotlin-compose-compiler-plugin_import",
    jar = "@kotlin-compose-compiler-plugin_http//file",
    source_jar = "@kotlin-compose-compiler-plugin-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "kotlin-metadata-jvm_import",
    jar = "@kotlin-metadata-jvm_http//file",
    source_jar = "@kotlin-metadata-jvm-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "kotlin-reflect_import",
    jar = "@kotlin-reflect_http//file",
    source_jar = "@kotlin-reflect-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "kotlin-serialization-compiler-plugin_import",
    jar = "@kotlin-serialization-compiler-plugin_http//file",
    source_jar = "@kotlin-serialization-compiler-plugin-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "kotlin-stdlib_import",
    jar = "@kotlin-stdlib_http//file",
    source_jar = "@kotlin-stdlib-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "kotlinx-coroutines-core_import",
    jar = "@kotlinx-coroutines-core-jvm_http//file",
    source_jar = "@kotlinx-coroutines-core-jvm-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "netty-buffer_import",
    jar = "@netty-buffer_http//file",
    source_jar = "@netty-buffer-sources_http//file",
    visibility = ["//visibility:public"],
    runtime_deps = [
        ":netty-common_import",
    ],
)

jvm_import(
    name = "netty-codec-jps",
    jar = "@netty-codec-jps_http//file",
    visibility = [
        "//jps-builders-6:__subpackages__",
    ],
)

jvm_import(
    name = "netty-common_import",
    jar = "@netty-common_http//file",
    source_jar = "@netty-common-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "netty-transport-jps_import",
    jar = "@netty-transport-jps_http//file",
    visibility = [
        "//jps-builders-6:__subpackages__",
    ],
)

jvm_import(
    name = "opentelemetry-api_import",
    jar = "@opentelemetry-api_http//file",
    source_jar = "@opentelemetry-api-sources_http//file",
    visibility = ["//visibility:public"],
    runtime_deps = [
        ":opentelemetry-context_import",
        ":opentelemetry-sdk-common_import",
        ":opentelemetry-sdk-extension-autoconfigure-spi_import",
        ":opentelemetry-sdk-logs_import",
        ":opentelemetry-sdk-metrics_import",
        ":opentelemetry-sdk-trace_import",
        ":opentelemetry-sdk_import",
    ],
)

jvm_import(
    name = "opentelemetry-context_import",
    jar = "@opentelemetry-context_http//file",
    source_jar = "@opentelemetry-context-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-exporter-common_import",
    jar = "@opentelemetry-exporter-common_http//file",
    source_jar = "@opentelemetry-exporter-common-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-exporter-logging-otlp_import",
    jar = "@opentelemetry-exporter-logging-otlp_http//file",
    source_jar = "@opentelemetry-exporter-logging-otlp-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-exporter-otlp_import",
    jar = "@opentelemetry-exporter-otlp_http//file",
    source_jar = "@opentelemetry-exporter-otlp-sources_http//file",
    visibility = ["//visibility:public"],
    runtime_deps = [
        ":opentelemetry-exporter-common_import",
        ":opentelemetry-exporter-otlp-common_import",
        ":opentelemetry-exporter-sender-jdk_import",
        ":opentelemetry-sdk-extension-autoconfigure-spi_import",
    ],
)

jvm_import(
    name = "opentelemetry-exporter-otlp-common_import",
    jar = "@opentelemetry-exporter-otlp-common_http//file",
    source_jar = "@opentelemetry-exporter-otlp-common-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-exporter-sender-jdk_import",
    jar = "@opentelemetry-exporter-sender-jdk_http//file",
    source_jar = "@opentelemetry-exporter-sender-jdk-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-sdk_import",
    jar = "@opentelemetry-sdk_http//file",
    source_jar = "@opentelemetry-sdk-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-sdk-common_import",
    jar = "@opentelemetry-sdk-common_http//file",
    source_jar = "@opentelemetry-sdk-common-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-sdk-extension-autoconfigure-spi_import",
    jar = "@opentelemetry-sdk-extension-autoconfigure-spi_http//file",
    source_jar = "@opentelemetry-sdk-extension-autoconfigure-spi-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-sdk-logs_import",
    jar = "@opentelemetry-sdk-logs_http//file",
    source_jar = "@opentelemetry-sdk-logs-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-sdk-metrics_import",
    jar = "@opentelemetry-sdk-metrics_http//file",
    source_jar = "@opentelemetry-sdk-metrics-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-sdk-trace_import",
    jar = "@opentelemetry-sdk-trace_http//file",
    source_jar = "@opentelemetry-sdk-trace-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "opentelemetry-semconv_import",
    jar = "@opentelemetry-semconv_http//file",
    source_jar = "@opentelemetry-semconv-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "protobuf-java_import",
    jar = "@protobuf-java_http//file",
    source_jar = "@protobuf-java-sources_http//file",
    visibility = ["//visibility:public"],
)

jvm_import(
    name = "qdox_import",
    jar = "@qdox_http//file",
    source_jar = "@qdox-sources_http//file",
    visibility = ["//visibility:public"],
)

kt_javac_options(
    name = "default-javac-opts-value",
    visibility = ["//visibility:public"],
)

kt_kotlinc_options(
    name = "default-kotlinc-opts-value",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "default-javac-opts",
    build_setting_default = ":default-javac-opts-value",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "default-kotlinc-opts",
    build_setting_default = ":default-kotlinc-opts-value",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "jvm-builder",
    build_setting_default = "//jvm-inc-builder:jvm-inc-builder_deploy.jar",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "jvm-builder-jvm_flags",
    build_setting_default = "//jvm-inc-builder:jvm-inc-builder-jvm_flags",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "resource-packager",
    build_setting_default = "//src/misc:worker-jvm_deploy.jar",
    visibility = ["//visibility:public"],
)

label_flag(
    name = "resource-packager-jvm_flags",
    build_setting_default = "//src/misc:worker-jvm-jvm_flags",
    visibility = ["//visibility:public"],
)
