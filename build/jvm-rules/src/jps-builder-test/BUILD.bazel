load("@rules_java//java:defs.bzl", "java_binary")
load("@rules_jvm//:jvm.bzl", "jvm_import")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")
load("//:src/jvm-args.bzl", "get_jvm_flags")

kt_jvm_library(
    name = "jps-builder-test-lib",
    srcs = glob(["*.kt"]),
    kotlinc_opts = "//:rules_jvm_bootstrap_kotlinc_options",
    deps = [
        "@lib//:kotlin-stdlib",
        "@lib//:assert_j",
        "//src/jps-builder:worker-lib",
    ],
)

java_binary(
    name = "jps-builder-test",
    runtime_deps = [":jps-builder-test-lib"],
    main_class = "org.jetbrains.bazel.jvm.jps.test.BuildStateTest",
    jvm_flags = get_jvm_flags([]),
)

java_binary(
    name = "output-jar-test",
    runtime_deps = [":jps-builder-test-lib"],
    main_class = "org.jetbrains.bazel.jvm.jps.test.TestOutputJar",
)

java_binary(
    name = "test-worker",
    runtime_deps = [":jps-builder-test-lib"],
    main_class = "org.jetbrains.bazel.jvm.jps.test.TestJpsBuildWorker",
    jvm_flags = get_jvm_flags([
        "-Djps.use.experimental.storage=true",
    ]),
)