load("@protobuf//bazel:java_proto_library.bzl", "java_proto_library")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")

java_proto_library(
    name = "worker_protocol_java_proto",
    deps = ["@bazel_worker_api//:worker_protocol_proto"],
)

kt_jvm_library(
    name = "worker-framework",
    srcs = glob(["*.kt"], exclude = ["*Test.kt"]),
    kotlinc_opts = "//:rules_jvm_bootstrap_kotlinc_options",
    deps = [
        "//:kotlin-stdlib",
        "//:opentelemetry-api",
        "//:opentelemetry-sdk",
        "//:opentelemetry-sdk-common",
        "//:opentelemetry-sdk-trace",
        "//:opentelemetry-context",
        "//:opentelemetry-semconv",
        "//:opentelemetry-exporter-otlp",
        "//:opentelemetry-exporter-logging-otlp",
        "//:kotlinx-coroutines-core",
        "//:protobuf-java",
        "//:netty-buffer",
        "//:netty-common",
        "//:annotations",
    ],
    runtime_deps = [
        "//:jackson-core",
    ],
    visibility = ["//visibility:public"],
)

kt_jvm_library(
    name = "worker_test_lib",
    srcs = ["WorkRequestHandlerTest.kt"],
    associates = [":worker-framework"],
    kotlinc_opts = "//:rules_jvm_bootstrap_kotlinc_options",
    deps = [
        ":worker_protocol_java_proto",
        "@junit_jupiter_api//jar",
        "@assertj//jar",
    ],
    runtime_deps = [
        "@junit_platform_commons//jar",
        "@opentest4j//jar",
        "@junit_jupiter_engine//jar",
        "@junit_platform_engine//jar",
        "@junit_platform_reporting//jar",
        "@junit_platform_launcher//jar",
    ],
)

# java_junit5_test(
#     name = "worker_test",
#     test_class = "org.jetbrains.bazel.jvm.WorkRequestHandlerTest",
#     runtime_deps = [":worker_test_lib"],
# )
