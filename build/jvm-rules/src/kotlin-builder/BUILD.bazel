load("@rules_java//java:defs.bzl", "java_binary")
load("@rules_jvm//:jvm.bzl", "jvm_import")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")
load("//:src/jvm-args.bzl", "get_jvm_flags")

kt_jvm_library(
    name = "worker-lib",
    srcs = glob(["**/*.kt"]),
    deps = [
        "//:kotlin-compiler",
        "//src/worker-framework",
        "//src/jar",
        "//src/kotlin-compiler",
        "//zip:build-zip",
        # we parse `jdeps` to support reduced classpath building and checking for unused deps
        # (both features are disabled by default for now)
        "@bazel_tools//src/main/protobuf:deps_java_proto",
        "//src/kotlin-plugins/jdeps",
        "//src/kotlin-plugins/abi",
    ],
    visibility = ["//visibility:public"],
)

java_binary(
    name = "worker-jvm",
    runtime_deps = [":worker-lib"],
    main_class = "org.jetbrains.bazel.jvm.kotlin.KotlinBuildWorker",
    jvm_flags = get_jvm_flags([]),
    visibility = ["//visibility:public"],
)

java_binary(
    name = "test-worker",
    runtime_deps = [":worker-lib"],
    main_class = "org.jetbrains.bazel.jvm.kotlin.TestKotlinBuildWorker",
    jvm_flags = get_jvm_flags([]),
)
