load("@rules_jvm//:jvm.bzl", "jvm_library")

# production intellij.platform.jps.build.dependencyGraph; cannot use @rules_jvm//dependency-graph:dependency-graph directly because it's mainly
# used to bootstrap jvm_library rule (from rules_jvm) via kt_jvm_library rule (from rules_kotlin) and @rules_jvm//:rules_jvm_bootstrap_kotlinc_options flags
jvm_library(
  name = "dependency-graph",
  module_name = "intellij.platform.jps.build.dependencyGraph",
  visibility = ["//visibility:public"],
  srcs = ["@rules_jvm//dependency-graph:dependency-graph_sources"],
  resources = ["@rules_jvm//dependency-graph:dependency-graph_resources"],
  kotlinc_opts = "@community//:k11",
  deps = [
    ":build-javac-rt",
    "@lib//:jetbrains-annotations",
    "@lib//:kotlin-metadata",
    "@lib//:caffeine",
    "@lib//:asm",
    "@community//libraries/hash4j:hash4j",
    "@lib//:fastutil-min",
    "@lib//:kotlin-stdlib-provided",
  ]
)

# production intellij.platform.jps.build.javac.rt; cannot use @rules_jvm//jps-builders-6:build-javac-rt directly because it's mainly
# used to bootstrap jvm_library rule (from rules_jvm) via kt_jvm_library rule (from rules_kotlin) and @rules_jvm//:rules_jvm_bootstrap_kotlinc_options flags
jvm_library(
  name = "build-javac-rt",
  module_name = "intellij.platform.jps.build.javac.rt",
  visibility = ["//visibility:public"],
  srcs = ["@rules_jvm//jps-builders-6:build-javac-rt_sources"],
  resources = ["@rules_jvm//jps-builders-6:build-javac-rt_resources"],
  kotlinc_opts = "@community//:k8",
  deps = [
    "@lib//:jetbrains-annotations",
    "@lib//:javax-annotation-api",
    "@lib//:jps-javac-extension",
    "@lib//:protobuf",
    "@lib//:netty-jps-provided",
  ]
)

# production intellij.idea.community.build.zip; cannot use @rules_jvm//zip:zip directly because it's mainly
# used to bootstrap jvm_library rule (from rules_jvm) via kt_jvm_library rule (from rules_kotlin) and @rules_jvm//:rules_jvm_bootstrap_kotlinc_options flags
jvm_library(
  name = "zip",
  module_name = "intellij.idea.community.build.zip",
  visibility = ["//visibility:public"],
  srcs = ["@rules_jvm//zip:zip_sources"],
  deps = [
    "@lib//:kotlin-stdlib",
    "@lib//:netty-buffer",
    "@lib//:fastutil-min",
    "@community//libraries/hash4j:hash4j",
  ]
)

### auto-generated section `build intellij.idea.community.build` start
load("@rules_jvm//:jvm.bzl", "jvm_library")

jvm_library(
  name = "build",
  module_name = "intellij.idea.community.build",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java", "src/**/*.form"], allow_empty = True),
  deps = [
    "//platform/build-scripts",
    "@lib//:kotlin-stdlib",
    "//platform/util",
    "//jps/model-api:model",
    "//build/deps:dependencies",
    "@lib//:kotlinx-collections-immutable",
    "//build/tasks",
    "@lib//:opentelemetry",
    "@lib//:opentelemetry-semconv",
    "@lib//:kotlinx-coroutines-core",
    "//platform/build-scripts/downloader",
    "@community//build:zip",
    "@lib//:maven-resolver-provider",
  ],
  exports = ["//platform/build-scripts"],
  runtime_deps = ["@lib//:test-discovery-plugin-base"]
)
### auto-generated section `build intellij.idea.community.build` end