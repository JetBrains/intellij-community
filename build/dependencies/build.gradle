// Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
buildscript {
  repositories {
    maven { url "http://repo.labs.intellij.net/plugins-gradle-org/" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "de.undercouch:gradle-download-task:3.4.2"
  }
}

allprojects {
  apply plugin: 'idea'
  idea {
    module {
      inheritOutputDirs true
    }
  }
}

apply plugin: "de.undercouch.download"
apply plugin: 'base'

group 'intellij.tools'
version '1.0'

try {
  project.ext.inJetBrainsNetwork = InetAddress.getByName("repo.labs.intellij.net").isReachable(1000)
  if (!project.ext.inJetBrainsNetwork && org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    project.ext.inJetBrainsNetwork = Runtime.getRuntime().exec("ping -n 1 repo.labs.intellij.net").waitFor() == 0
  }
  if (!project.ext.inJetBrainsNetwork) {
    logger.info('repo.labs.intellij.net is not reachable')
  }
}
catch (UnknownHostException e) {
  logger.info('repo.labs.intellij.net is not reachable', e)
  project.ext.inJetBrainsNetwork = false
}

apply from: 'setupJdk.gradle'
apply from: 'setupJbre.gradle'
apply from: 'setupKotlin.gradle'
apply from: 'setupJetSign.gradle'
apply from: 'setupAndroidSdk.gradle'
apply from: 'setupBuildScriptsDeps.gradle'

task setupDependencies(dependsOn: ['setupJdks', 'setupJbre', 'setupKotlinPlugin', 'setupJetSign'], group: 'dependencies')
clean.dependsOn('cleanSetupJdks', 'cleanSetupJbre', 'cleanSetupKotlinPlugin', 'cleanSetupJetSign')

task dependenciesFile() {
  description = 'Creates file with all dependencies version, even those that were overloaded by system or env properties'
  def outputFile = "$project.buildDir/dependencies.properties"
  outputs.upToDateWhen { false }
  outputs.file(outputFile)
  doFirst {
    def properties = new Properties()
    file('gradle.properties').withInputStream { properties.load(it) }
    file(outputFile).text = properties.stringPropertyNames().collect { "$it=${project.ext[it]}" }.join('\n')
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.3.1'
  distributionUrl = "https://cache-redirector.shared.aws.intellij.net/services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}