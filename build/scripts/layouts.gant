/*
 * Copyright 2000-2016 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import static org.jetbrains.jps.idea.IdeaProjectLoader.guessHome

includeTargets << new File("${guessHome(this)}/build/scripts/utils.gant")

def layoutJps(String home, String targetDir, String buildNumber, Closure additionalJars) {
  layout(targetDir) {
    zip("standalone-jps-${buildNumber}.zip") {
      jar("util.jar") {
        module("annotations-common")
        module("annotations")
        module("util-rt")
        module("util")
      }

      jar("jps-launcher.jar") {
        module("jps-launcher")
      }

      jar("jps-model.jar") {
        module("jps-model-api")
        module("jps-model-impl")
        module("jps-model-serialization")
      }
      jar("jps-builders.jar") {
        module("forms_rt")
        module("forms-compiler")
        module("instrumentation-util")
        module("instrumentation-util-8")
        module("javac-ref-scanner-8")
        module("jps-builders")
        module("jps-standalone-builder")
        module("java-runtime")
      }
      jar("jps-builders-6.jar") {
        module("jps-builders-6")
      }
      //layout of groovy jars must be consistent with GroovyBuilder.getGroovyRtRoots method
      jar("groovy-jps-plugin.jar") {
        module("groovy-jps-plugin")
      }
      jar("groovy_rt.jar") {
        module("groovy_rt")
      }
      jar("groovy-rt-constants.jar") {
        module("groovy-rt-constants")
      }
      jar("ui-designer-jps-plugin.jar") { module("ui-designer-jps-plugin") }


      jar("maven-jps-plugin.jar") { module("maven-jps-plugin") }
      jar("aether-dependency-resolver.jar") { module("aether-dependency-resolver") }
      fileset(dir: "$home/plugins/maven/lib") {
        include(name: "aether-*.jar")
        include(name: "maven-aether-provider-*.jar")
      }
      jar("gradle-jps-plugin.jar") { module("gradle-jps-plugin") }
      fileset(dir: "$home/plugins/maven/maven30-server-impl/lib/maven3/lib") {include(name: "plexus-utils-*.jar")}

      jar("eclipse-jps-plugin.jar") {
        module("common-eclipse-util")
        module("eclipse-jps-plugin")
      }
      jar("devkit-jps-plugin.jar") { module("devkit-jps-plugin") }
      jar("intellilang-jps-plugin.jar") { module("intellilang-jps-plugin") }
      fileset(dir: "$home/lib") {
        include(name: "jdom.jar")
        include(name: "jna.jar")
        include(name: "jna-platform.jar")
        include(name: "oromatcher.jar")
        include(name: "trove4j.jar")
        include(name: "asm-all.jar")
        include(name: "nanoxml-*.jar")
        include(name: "protobuf-*.jar")
        include(name: "cli-parser-*.jar")
        include(name: "log4j.jar")
        include(name: "jgoodies-forms.jar")
        include(name: "ecj*.jar")
        include(name: "netty-all-*.jar")
        include(name: "snappy-in-java-*.jar")
        include(name: "xercesImpl.jar")
      }
      fileset(dir: "$home/jps/lib") {
        include(name: "optimizedFileManager.jar")
      }
      jar("ant-jps-plugin.jar") { module("ant-jps-plugin") }
      additionalJars()
    }
    jar("jps-build-test-${buildNumber}.jar") {
      moduleTests("jps-builders")
      moduleTests("jps-model-tests")
      moduleTests("jps-serialization-tests")
    }
  }
}

def layout_core(String home, String target) {
  layout(target) {
    jar("intellij-core.jar") {
      module("util-rt")
      module("util")
      module("core-api")
      module("core-impl")
      module("extensions")
      module("java-psi-api")
      module("java-psi-impl")
    }

    jar("annotations.jar") {
      module("annotations-common")
      module("annotations")
    }

    jar("intellij-core-analysis.jar") {
      analysisApiModules.each { module it; }
      analysisImplModules.each { module it; }
    }

    fileset(dir: "$home/lib") {
      include(name: "asm-all.jar")
      include(name: "guava-19.0.jar")
      include(name: "picocontainer.jar")
      include(name: "trove4j.jar")
      include(name: "cli-parser-1.1.jar")
      include(name: "snappy-in-java-0.5.1.jar")
      include(name: "jayatana-1.2.4.jar")
      include(name: "imgscalr-lib-4.2.jar")
      include(name: "batik-all.jar")
      include(name: "xmlgraphics-commons-1.5.jar")
      include(name: "xml-apis-ext.jar")
    }
  }
}
