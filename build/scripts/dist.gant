/*
 * Copyright 2000-2015 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jetbrains.intellij.build.BuildOptions
import org.jetbrains.intellij.build.IdeaCommunityBuilder

import static org.jetbrains.jps.idea.IdeaProjectLoader.guessHome

includeTargets << new File("${guessHome(this)}/build/scripts/utils.gant")

requireProperty("out", "$home/out")

// "out" has to be canonical, otherwise the ant build fails
// with mysterious errors
String out = new File(out).getCanonicalPath()

target(compile: "Compile project") {
  def options = new BuildOptions()
  options.outputRootPath = out
  new IdeaCommunityBuilder(home, binding, options).compileModules()
}

target('default': 'The default target') {
  def options = new BuildOptions()
  options.outputRootPath = out
  options.buildNumber = null //we cannot provide consistent build number for IDEA Community if it's built separately so use *.SNAPSHOT number to avoid confusion
  new IdeaCommunityBuilder(home, binding, options).buildDistributions()
}

//todo[nik] do we really need this target? update.xml calls layout.gant directly
target('build-dist-jars' : 'Target to build jars from locally compiled classes') {
  def options = new BuildOptions()
  options.outputRootPath = out
  options.useCompiledClassesFromProjectOutput = true
  new IdeaCommunityBuilder(home, binding, options).buildDistJars()
}

target('update-from-sources': 'Update locally installed distribution from compiled classes') {
  def options = new BuildOptions()
  options.useCompiledClassesFromProjectOutput = true
  options.buildStepsToSkip << BuildOptions.SEARCHABLE_OPTIONS_INDEX_STEP
  options.buildStepsToSkip << BuildOptions.SOURCES_ARCHIVE_STEP
  //when IDEA CE is updated from IDEA UE sources project should be loaded from IDEA UE directory
  String projectHome = isDefined("devIdeaHome") ? devIdeaHome : home
  new IdeaCommunityBuilder(home, binding, options, projectHome).buildUnpackedDistribution(deploy)
}