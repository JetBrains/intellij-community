formatter.imports.panel.title=Imports

formatter.left.bracket = Left bracket
formatter.around.eq.in.named.parameter = Around = in named parameter
formatter.around.eq.in.keyword.argument = Around = in keyword argument
formatter.braces = Braces
formatter.before.backslash = Before '\\'
formatter.before.hash = Before '#'
formatter.after.hash = After '#'
formatter.around.top.level.imports = After top-level imports:
formatter.after.local.imports=After local imports:
formatter.before.first.method=Before the first method:
formatter.around.top.level.classes.and.function=Around top-level classes and functions:
formatter.around.multiplicative.operators=Multiplicative operators (*, @, /, %)
formatter.around.power.operator=Power operator (**)
formatter.single.clause.statements=Single-clause statements
formatter.multi.clause.statements=Multi-clause statements
formatter.force.new.line.after.colon=Force new line after colon
formatter.align.when.multiline=Align when multiline
formatter.collections.and.comprehensions=Collections and Comprehensions
formatter.from.import.statements="From" Import Statements
formatter.from.import.statements.force.parentheses.if.multiline=Force parentheses if multiline
formatter.dictionary.literals=Dictionary literals
formatter.hang.closing.brackets=Hang closing brackets
formatter.list.literals=List literals
formatter.set.literals=Set literals
formatter.parenthesized.tuples=Parenthesized tuple expressions

formatter.imports.panel.optimize.imports=Optimize Imports
formatter.imports.panel.sort.imports=Sort import statements
formatter.imports.panel.sort.names.in.from.imports=Sort imported names in "from" imports
formatter.imports.panel.from.imports.structure.title=Structure of "from" imports
formatter.imports.panel.from.imports.leave.as.is=Leave as is
formatter.imports.panel.from.imports.join.with.same.source=Join imports with the same source
formatter.imports.panel.from.imports.always.split=Always split imports
formatter.imports.panel.sort.by.type=Sort plain and "from" imports separately within a group
formatter.imports.panel.sort.case.insensitively=Sort case-insensitively

formatter.panel.dict.alignment.label=Dict alignment:
formatter.panel.add.trailing.line.feed=Add line feed at the end of file
formatter.panel.injected.fragments=Injected fragments:
formatter.panel.format.injected.fragments=Format injected fragments
formatter.panel.injected.fragments.use.continuation.indent=Add indent

formatter.panel.use.continuation.indent.for.title=Use continuation indent for
formatter.panel.use.continuation.indent.for.parameters=Method declaration parameters
formatter.panel.use.continuation.indent.for.arguments=Method call arguments
formatter.panel.use.continuation.indent.for.collection.literals=Collections and comprehensions
configurable.PyLanguageCodeStyleSettingsProvider.display.name=Python

formatter.force.trailing.comma.if.multiline=Force trailing comma if multiline

python.colors.python=Python
python.colors.type.annotation=Type annotation
python.colors.class.definition=Class definition
python.colors.decorator=Decorator
python.colors.built.in.name=Built-in name
python.colors.special.names.usage=Special names//Usage
python.colors.special.names.definition=Special names//Definition
python.colors.keyword.argument=Keyword argument
python.colors.parameters.self.parameter=Parameters//'self' parameter
python.colors.parameters.parameter=Parameters//Parameter
python.colors.functions.method.call=Functions//Method call
python.colors.functions.nested.function.definition=Functions//Nested function definition
python.colors.functions.function.call=Functions//Function call
python.colors.functions.function.definition=Functions//Function definition
python.colors.braces.and.operators.dot=Braces and Operators//Dot
python.colors.braces.and.operators.comma=Braces and Operators//Comma
python.colors.braces.and.operators.braces=Braces and Operators//Braces
python.colors.braces.and.operators.brackets=Braces and Operators//Brackets
python.colors.braces.and.operators.parentheses=Braces and Operators//Parentheses
python.colors.braces.and.operators.operation.sign=Braces and Operators//Operation sign
python.colors.docstring.tag=Docstring//Tag
python.colors.docstring.text=Docstring//Text
python.colors.string.f.string.format.specifier.start=String//f-string//Format specifier start
python.colors.string.f.string.type.conversion=String//f-string//Type conversion
python.colors.string.f.string.expression.braces=String//f-string//Expression braces
python.colors.string.escape.sequence.invalid=String//Escape sequence//Invalid
python.colors.string.escape.sequence.valid=String//Escape sequence//Valid
python.colors.string.text.unicode=String//Text (unicode)
python.colors.string.binary.bytes=String//Binary (bytes)
python.colors.line.comment=Line comment
python.colors.keyword=Keyword
python.colors.number=Number
python.colors.local.variables=Local variables
python.colors.type.parameters=Type parameters

