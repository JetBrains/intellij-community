import org.apache.tools.ant.taskdefs.condition.Os

plugins {
  id "com.jetbrains.python.envs" version "0.0.10"
}

envs {
  project.buildDir = new File(System.getenv().getOrDefault("PYCHARM_BUILD_DIR", buildDir))
  bootstrapDirectory = new File(buildDir, 'pythons')
  envsDirectory = new File(buildDir, 'envs')
  minicondaVersion = 'latest'
  packages = ["cython", "pip", "setuptools"]

  conda "py27_64", "2.7", ["wheel", "twine"], false
  conda "py34_64", "3.4", ["wheel", "twine"], false
  conda "py35_64", "3.5", ["wheel", "twine"], false
  conda "py36_64", "3.6", ["wheel", "twine"], false
  conda "py27_32", "2.7", ["wheel", "twine"], false
  conda "py34_32", "3.4", ["wheel", "twine"], false
  conda "py35_32", "3.5", ["wheel", "twine"], false
  conda "py36_32", "3.6", ["wheel", "twine"], false
}

task buildBinariesOnWindows(dependsOn: 'build_envs') << {
  exec {
    workingDir projectDir

    environment PYTHONPATH: projectDir,
                MINICONDA32_ENVS: envs.envsDirectory,
                MINICONDA64_ENVS: envs.envsDirectory

    commandLine "${envs.envsDirectory}/py27_32/python.exe", "build_tools/build_binaries_windows.py"
  }
}

task buildBinaries() {
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    dependsOn buildBinariesOnWindows
  }
  else if (Os.isFamily(Os.FAMILY_MAC)) {
    dependsOn buildOnMac
  }
}
