# Stubs for _operator (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

def _compare_digest(*args, **kwargs): ...
def abs(a): ...
def add(a, b): ...
def and_(a, b): ...
def concat(a, b): ...
def contains(a, b): ...
def countOf(a, b): ...
def delitem(a, b): ...
def eq(a, b): ...
def floordiv(a, b): ...
def ge(a, b): ...
def getitem(a, b): ...
def gt(a, b): ...
def iadd(*args, **kwargs): ...
def iand(*args, **kwargs): ...
def iconcat(*args, **kwargs): ...
def ifloordiv(*args, **kwargs): ...
def ilshift(*args, **kwargs): ...
def imatmul(*args, **kwargs): ...
def imod(*args, **kwargs): ...
def imul(*args, **kwargs): ...
def index(a): ...
def indexOf(a, b): ...
def inv(a): ...
def invert(a): ...
def ior(*args, **kwargs): ...
def ipow(*args, **kwargs): ...
def irshift(*args, **kwargs): ...
def is_(a, b): ...
def is_not(a, b): ...
def isub(*args, **kwargs): ...
def itruediv(*args, **kwargs): ...
def ixor(*args, **kwargs): ...
def le(a, b): ...
def length_hint(obj, default=0): ...
def lshift(a, b): ...
def lt(a, b): ...
def matmul(a, b): ...
def mod(a, b): ...
def mul(a, b): ...
def ne(a, b): ...
def neg(a): ...
def not_(a): ...
def or_(a, b): ...
def pos(a): ...
def pow(a, b): ...
def rshift(a, b): ...
def setitem(a, b, c): ...
def sub(a, b): ...
def truediv(a, b): ...
def truth(a): ...
def xor(a, b): ...

class attrgetter:
    def __init__(self, *args, **kwargs): ...
    def __call__(self, *args, **kwargs): ...
    def __reduce__(self): ...

class itemgetter:
    def __init__(self, *args, **kwargs): ...
    def __call__(self, *args, **kwargs): ...
    def __reduce__(self): ...

class methodcaller:
    def __init__(self, *args, **kwargs): ...
    def __call__(self, *args, **kwargs): ...
    def __reduce__(self): ...
