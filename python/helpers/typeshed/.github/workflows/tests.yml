name: Check stubs

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  file-consistency:
    name: Check file consistency
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install toml
      - run: ./tests/check_consistent.py

  flake8:
    name: Lint with flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install $(grep flake8 requirements-tests-py3.txt)
      - run: flake8

  black:
    name: Check formatting with black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install $(grep black requirements-tests-py3.txt)
      - run: black --check --diff stdlib stubs

  isort:
    name: Check imports with isort
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install $(grep isort requirements-tests-py3.txt)
      - run: isort --check-only --diff stdlib stubs

  pytype:
    name: Run pytype against the stubs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: pip install -r requirements-tests-py3.txt
      - run: ./tests/pytype_test.py

  mypy:
    name: Run mypy against the stubs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ["linux", "win32", "darwin"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install $(grep mypy== requirements-tests-py3.txt)
      - run: ./tests/mypy_test.py --platform=${{ matrix.platform }}

  pyright:
    name: Run pyright against the stubs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-platform: ["Linux", "Windows", "Darwin"]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
      fail-fast: false
    env:
      PYRIGHT_VERSION: 1.1.160 # Must match pyright_test.py.
    steps:
      - uses: actions/checkout@v2
      - uses: jakebailey/pyright-action@v1
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-platform: ${{ matrix.python-platform }}
          python-version: ${{ matrix.python-version }}
          no-comments: ${{ matrix.python-version != '3.9' || matrix.python-platform != 'Linux' }}  # Having each job create the same comment is too noisy.
          project: ./pyrightconfig.stricter.json
      - uses: jakebailey/pyright-action@v1
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-platform: ${{ matrix.python-platform }}
          python-version: ${{ matrix.python-version }}
          no-comments: ${{ matrix.python-version != '3.9' || matrix.python-platform != 'Linux' }}  # Having each job create the same comment is too noisy.

  stubtest-stdlib:
    name: Check stdlib with stubtest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10.0-rc.1"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install $(grep mypy== requirements-tests-py3.txt)
      - name: Run stubtest
        run: python tests/stubtest_stdlib.py --ignore-unused-allowlist

  stubtest-third-party:
    name: Check third party stubs with stubtest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard-index: [0, 1, 2, 3]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install toml
      - name: Run stubtest
        run: python tests/stubtest_third_party.py --num-shards 4 --shard-index ${{ matrix.shard-index }}
