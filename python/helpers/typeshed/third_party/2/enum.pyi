from typing import List, Any, TypeVar, Type

class Enum:
    def __new__(cls, value: Any) -> None: ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...
    def __dir__(self) -> List[str]: ...
    def __format__(self, format_spec: str) -> str: ...
    def __hash__(self) -> Any: ...
    def __reduce_ex__(self, proto: Any) -> Any: ...

    name = ...  # type: str
    value = ...  # type: Any

_T = TypeVar('_T')

class IntEnum(int, Enum):  # type: ignore
    def __new__(cls: Type[_T], value: Any) -> _T: ...

def unique(enumeration: _T) -> _T: ...
