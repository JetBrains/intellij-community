from .. import util
from .visitors import Visitable, VisitableType

class TypeEngine(Visitable):
    @property
    def python_type(self): ...
    def get_dbapi_type(self, dbapi): ...
    def literal_processor(self, dialect): ...
    def bind_processor(self, dialect): ...
    def result_processor(self, dialect, coltype): ...

class VisitableCheckKWArg(util.EnsureKWArgType, VisitableType): ...
# TODO: class UserDefinedType(util.with_metaclass(VisitableCheckKWArg, TypeEngine)):
class UserDefinedType(VisitableCheckKWArg, TypeEngine): ...
class TypeDecorator(TypeEngine): ...
class Variant(TypeDecorator): ...
