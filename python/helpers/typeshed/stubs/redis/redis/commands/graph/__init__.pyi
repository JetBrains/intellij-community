from typing import Any

from .commands import GraphCommands as GraphCommands
from .edge import Edge as Edge
from .node import Node as Node
from .path import Path as Path

class Graph(GraphCommands):
    NAME: Any
    client: Any
    execute_command: Any
    nodes: Any
    edges: Any
    version: int
    def __init__(self, client, name=...) -> None: ...
    @property
    def name(self): ...
    def get_label(self, idx): ...
    def get_relation(self, idx): ...
    def get_property(self, idx): ...
    def add_node(self, node) -> None: ...
    def add_edge(self, edge) -> None: ...
    def call_procedure(self, procedure, *args, read_only: bool = False, **kwagrs): ...
    def labels(self): ...
    def relationship_types(self): ...
    def property_keys(self): ...
