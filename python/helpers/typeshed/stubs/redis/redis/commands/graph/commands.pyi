from _typeshed import Incomplete
from typing import Any

class GraphCommands:
    def commit(self): ...
    version: Any
    def query(
        self,
        q,
        params: Incomplete | None = None,
        timeout: Incomplete | None = None,
        read_only: bool = False,
        profile: bool = False,
    ): ...
    def merge(self, pattern): ...
    def delete(self): ...
    nodes: Any
    edges: Any
    def flush(self) -> None: ...
    def explain(self, query, params: Incomplete | None = None): ...
    def bulk(self, **kwargs) -> None: ...
    def profile(self, query): ...
    def slowlog(self): ...
    def config(self, name, value: Incomplete | None = None, set: bool = False): ...
    def list_keys(self): ...
