from _typeshed import Incomplete
from collections.abc import Mapping as DictMixin

class LazyDict(DictMixin[Incomplete, Incomplete]):
    data: Incomplete
    def __getitem__(self, key): ...
    def __contains__(self, key): ...
    def __iter__(self): ...
    def __len__(self): ...
    def keys(self): ...

class LazyList(list[Incomplete]):
    def __new__(cls, fill_iter: Incomplete | None = ...): ...

class LazySet(set[Incomplete]):
    def __new__(cls, fill_iter: Incomplete | None = ...): ...
