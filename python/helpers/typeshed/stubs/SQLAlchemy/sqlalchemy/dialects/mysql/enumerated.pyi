from typing import Any

from ...sql import sqltypes
from .types import _StringType

class ENUM(sqltypes.NativeForEmulated, sqltypes.Enum, _StringType):  # type: ignore[misc]
    __visit_name__: str
    native_enum: bool
    def __init__(self, *enums, **kw) -> None: ...
    @classmethod
    def adapt_emulated_to_native(cls, impl, **kw): ...

class SET(_StringType):
    __visit_name__: str
    retrieve_as_bitwise: Any
    values: Any
    def __init__(self, *values, **kw) -> None: ...
    def column_expression(self, colexpr): ...
    def result_processor(self, dialect, coltype): ...
    def bind_processor(self, dialect): ...
    def adapt(self, impltype, **kw): ...
