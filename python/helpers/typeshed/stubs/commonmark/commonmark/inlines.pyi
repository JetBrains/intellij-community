import html
from typing import Any

HTMLunescape = html.unescape
ESCAPED_CHAR: Any
rePunctuation: Any
reLinkTitle: Any
reLinkDestinationBraces: Any
reEscapable: Any
reEntityHere: Any
reTicks: Any
reTicksHere: Any
reEllipses: Any
reDash: Any
reEmailAutolink: Any
reAutolink: Any
reSpnl: Any
reWhitespaceChar: Any
reWhitespace: Any
reUnicodeWhitespaceChar: Any
reFinalSpace: Any
reInitialSpace: Any
reSpaceAtEndOfLine: Any
reLinkLabel: Any
reMain: Any

def text(s): ...
def smart_dashes(chars): ...

class InlineParser:
    subject: str
    brackets: Any
    pos: int
    refmap: Any
    options: Any
    def __init__(self, options=...) -> None: ...
    def match(self, regexString): ...
    def peek(self): ...
    def spnl(self): ...
    def parseBackticks(self, block): ...
    def parseBackslash(self, block): ...
    def parseAutolink(self, block): ...
    def parseHtmlTag(self, block): ...
    def scanDelims(self, c): ...
    delimiters: Any
    def handleDelim(self, cc, block): ...
    def removeDelimiter(self, delim) -> None: ...
    @staticmethod
    def removeDelimitersBetween(bottom, top) -> None: ...
    def processEmphasis(self, stack_bottom) -> None: ...
    def parseLinkTitle(self): ...
    def parseLinkDestination(self): ...
    def parseLinkLabel(self): ...
    def parseOpenBracket(self, block): ...
    def parseBang(self, block): ...
    def parseCloseBracket(self, block): ...
    def addBracket(self, node, index, image) -> None: ...
    def removeBracket(self) -> None: ...
    def parseEntity(self, block): ...
    def parseString(self, block): ...
    def parseNewline(self, block): ...
    def parseReference(self, s, refmap): ...
    def parseInline(self, block): ...
    def parseInlines(self, block) -> None: ...
    parse: Any
