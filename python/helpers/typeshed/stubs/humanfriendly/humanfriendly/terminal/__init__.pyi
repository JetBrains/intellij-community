from _typeshed import Incomplete
from typing import Any

ANSI_CSI: str
ANSI_SGR: str
ANSI_ERASE_LINE: Any
ANSI_RESET: Any
ANSI_HIDE_CURSOR: Any
ANSI_SHOW_CURSOR: Any
ANSI_COLOR_CODES: Any
ANSI_TEXT_STYLES: Any
CLEAN_OUTPUT_PATTERN: Any
DEFAULT_LINES: int
DEFAULT_COLUMNS: int
DEFAULT_ENCODING: str
HIGHLIGHT_COLOR: Any

def ansi_strip(text, readline_hints: bool = True): ...
def ansi_style(**kw): ...
def ansi_width(text): ...
def ansi_wrap(text, **kw): ...
def auto_encode(stream, text, *args, **kw) -> None: ...
def clean_terminal_output(text): ...
def connected_to_terminal(stream: Incomplete | None = None): ...
def enable_ansi_support(): ...
def find_terminal_size(): ...
def find_terminal_size_using_ioctl(stream): ...
def find_terminal_size_using_stty(): ...
def get_pager_command(text: Incomplete | None = None): ...
def have_windows_native_ansi_support(): ...
def message(text, *args, **kw) -> None: ...
def output(text, *args, **kw) -> None: ...
def readline_strip(expr): ...
def readline_wrap(expr): ...
def show_pager(formatted_text, encoding="UTF-8") -> None: ...
def terminal_supports_colors(stream: Incomplete | None = None): ...
def usage(usage_text) -> None: ...
def warning(text, *args, **kw) -> None: ...
