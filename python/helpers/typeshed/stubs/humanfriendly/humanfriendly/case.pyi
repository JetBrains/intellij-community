import collections
from typing import Any

from humanfriendly.compat import unicode

class CaseInsensitiveDict(collections.OrderedDict):
    def __init__(self, other: Any | None = ..., **kw) -> None: ...
    def coerce_key(self, key): ...
    @classmethod
    def fromkeys(cls, iterable, value: Any | None = ...): ...
    def get(self, key, default: Any | None = ...): ...
    def pop(self, key, default: Any | None = ...): ...
    def setdefault(self, key, default: Any | None = ...): ...
    def update(self, other: Any | None = ..., **kw) -> None: ...  # type: ignore
    def __contains__(self, key): ...
    def __delitem__(self, key): ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, value): ...

class CaseInsensitiveKey(unicode):
    def __new__(cls, value): ...
    def __hash__(self): ...
    def __eq__(self, other): ...
