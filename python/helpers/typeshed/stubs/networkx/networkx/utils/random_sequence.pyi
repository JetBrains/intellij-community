from _typeshed import Incomplete

def powerlaw_sequence(n, exponent: float = 2.0, seed: Incomplete | None = None): ...
def zipf_rv(alpha, xmin: int = 1, seed: Incomplete | None = None): ...
def cumulative_distribution(distribution): ...
def discrete_sequence(
    n, distribution: Incomplete | None = None, cdistribution: Incomplete | None = None, seed: Incomplete | None = None
): ...
def random_weighted_sample(mapping, k, seed: Incomplete | None = None): ...
def weighted_choice(mapping, seed: Incomplete | None = None): ...
