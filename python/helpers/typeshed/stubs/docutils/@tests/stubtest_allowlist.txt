docutils.nodes.Element.__iter__ # doesn't exist at runtime, but the class is iterable due to __getitem__
docutils.nodes.Element.tagname  # class variable is overridden in __init__ method
docutils.nodes.NodeVisitor.depart_\w+ # Methods are discovered dynamically on commonly-used subclasses
docutils.nodes.NodeVisitor.visit_\w+  # Methods are discovered dynamically on commonly-used subclasses
docutils.nodes.NodeVisitor.__init__   # Argument "document" should be positional-only, but subclasses are not

# these methods take a rawsource parameter that has been deprecated and is completely ignored, so we omit it from the stub
docutils.nodes.Text.__new__
docutils.parsers.rst.directives.admonitions.BaseAdmonition.node_class  # must be overridden by base classes (pseudo-abstract)
docutils.statemachine.State.nested_sm  # is initialised in __init__
docutils.statemachine.State.nested_sm_kwargs  # is initialised in __init__
docutils.statemachine.ViewList.__iter__ # doesn't exist at runtime, but the class is iterable due to __getitem__
docutils.transforms.Transform.apply # method apply is not implemented
docutils.transforms.Transform.__getattr__
docutils.TransformSpec.unknown_reference_resolvers
docutils.writers.latex2e.PreambleCmds... contents

# Files that don't exist at runtime of stubtests, raises ImportError:
docutils.parsers.commonmark_wrapper
docutils.parsers.recommonmark_wrapper
docutils.writers.odf_odt.pygmentsformatter # import `pygments` third-party library

# `TYPE_CHECKING` variable is for internal use:
docutils.TYPE_CHECKING
docutils.core.TYPE_CHECKING
docutils.examples.TYPE_CHECKING
docutils.frontend.TYPE_CHECKING
docutils.io.TYPE_CHECKING
docutils.languages.TYPE_CHECKING
docutils.nodes.TYPE_CHECKING
docutils.parsers.TYPE_CHECKING
docutils.parsers.rst.directives.TYPE_CHECKING
docutils.parsers.rst.directives.misc.TYPE_CHECKING
docutils.parsers.rst.languages.TYPE_CHECKING
docutils.readers.TYPE_CHECKING
docutils.utils.TYPE_CHECKING
docutils.writers.TYPE_CHECKING
docutils.writers._html_base.TYPE_CHECKING
