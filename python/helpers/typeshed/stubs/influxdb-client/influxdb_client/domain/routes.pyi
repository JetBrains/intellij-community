from _typeshed import Incomplete

class Routes:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        authorizations: Incomplete | None = None,
        buckets: Incomplete | None = None,
        dashboards: Incomplete | None = None,
        external: Incomplete | None = None,
        variables: Incomplete | None = None,
        me: Incomplete | None = None,
        flags: Incomplete | None = None,
        orgs: Incomplete | None = None,
        query: Incomplete | None = None,
        setup: Incomplete | None = None,
        signin: Incomplete | None = None,
        signout: Incomplete | None = None,
        sources: Incomplete | None = None,
        system: Incomplete | None = None,
        tasks: Incomplete | None = None,
        telegrafs: Incomplete | None = None,
        users: Incomplete | None = None,
        write: Incomplete | None = None,
    ) -> None: ...
    @property
    def authorizations(self): ...
    @authorizations.setter
    def authorizations(self, authorizations) -> None: ...
    @property
    def buckets(self): ...
    @buckets.setter
    def buckets(self, buckets) -> None: ...
    @property
    def dashboards(self): ...
    @dashboards.setter
    def dashboards(self, dashboards) -> None: ...
    @property
    def external(self): ...
    @external.setter
    def external(self, external) -> None: ...
    @property
    def variables(self): ...
    @variables.setter
    def variables(self, variables) -> None: ...
    @property
    def me(self): ...
    @me.setter
    def me(self, me) -> None: ...
    @property
    def flags(self): ...
    @flags.setter
    def flags(self, flags) -> None: ...
    @property
    def orgs(self): ...
    @orgs.setter
    def orgs(self, orgs) -> None: ...
    @property
    def query(self): ...
    @query.setter
    def query(self, query) -> None: ...
    @property
    def setup(self): ...
    @setup.setter
    def setup(self, setup) -> None: ...
    @property
    def signin(self): ...
    @signin.setter
    def signin(self, signin) -> None: ...
    @property
    def signout(self): ...
    @signout.setter
    def signout(self, signout) -> None: ...
    @property
    def sources(self): ...
    @sources.setter
    def sources(self, sources) -> None: ...
    @property
    def system(self): ...
    @system.setter
    def system(self, system) -> None: ...
    @property
    def tasks(self): ...
    @tasks.setter
    def tasks(self, tasks) -> None: ...
    @property
    def telegrafs(self): ...
    @telegrafs.setter
    def telegrafs(self, telegrafs) -> None: ...
    @property
    def users(self): ...
    @users.setter
    def users(self, users) -> None: ...
    @property
    def write(self): ...
    @write.setter
    def write(self, write) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
