from _typeshed import Incomplete

class BucketRetentionRules:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self, type: str = "expire", every_seconds: int = 2592000, shard_group_duration_seconds: int | None = None
    ) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, type) -> None: ...
    every_seconds: int
    @property
    def shard_group_duration_seconds(self): ...
    @shard_group_duration_seconds.setter
    def shard_group_duration_seconds(self, shard_group_duration_seconds) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
