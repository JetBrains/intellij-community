from _typeshed import Incomplete

class File:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        type: Incomplete | None = None,
        name: Incomplete | None = None,
        package: Incomplete | None = None,
        imports: Incomplete | None = None,
        body: Incomplete | None = None,
    ) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, type) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name) -> None: ...
    @property
    def package(self): ...
    @package.setter
    def package(self, package) -> None: ...
    @property
    def imports(self): ...
    @imports.setter
    def imports(self, imports) -> None: ...
    @property
    def body(self): ...
    @body.setter
    def body(self, body) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
