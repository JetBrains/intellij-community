from _typeshed import Incomplete

class Axis:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        bounds: Incomplete | None = None,
        label: Incomplete | None = None,
        prefix: Incomplete | None = None,
        suffix: Incomplete | None = None,
        base: Incomplete | None = None,
        scale: Incomplete | None = None,
    ) -> None: ...
    @property
    def bounds(self): ...
    @bounds.setter
    def bounds(self, bounds) -> None: ...
    @property
    def label(self): ...
    @label.setter
    def label(self, label) -> None: ...
    @property
    def prefix(self): ...
    @prefix.setter
    def prefix(self, prefix) -> None: ...
    @property
    def suffix(self): ...
    @suffix.setter
    def suffix(self, suffix) -> None: ...
    @property
    def base(self): ...
    @base.setter
    def base(self, base) -> None: ...
    @property
    def scale(self): ...
    @scale.setter
    def scale(self, scale) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
