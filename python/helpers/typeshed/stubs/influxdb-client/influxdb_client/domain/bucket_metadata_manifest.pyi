from _typeshed import Incomplete

class BucketMetadataManifest:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        organization_id: Incomplete | None = None,
        organization_name: Incomplete | None = None,
        bucket_id: Incomplete | None = None,
        bucket_name: Incomplete | None = None,
        description: Incomplete | None = None,
        default_retention_policy: Incomplete | None = None,
        retention_policies: Incomplete | None = None,
    ) -> None: ...
    @property
    def organization_id(self): ...
    @organization_id.setter
    def organization_id(self, organization_id) -> None: ...
    @property
    def organization_name(self): ...
    @organization_name.setter
    def organization_name(self, organization_name) -> None: ...
    @property
    def bucket_id(self): ...
    @bucket_id.setter
    def bucket_id(self, bucket_id) -> None: ...
    @property
    def bucket_name(self): ...
    @bucket_name.setter
    def bucket_name(self, bucket_name) -> None: ...
    @property
    def description(self): ...
    @description.setter
    def description(self, description) -> None: ...
    @property
    def default_retention_policy(self): ...
    @default_retention_policy.setter
    def default_retention_policy(self, default_retention_policy) -> None: ...
    @property
    def retention_policies(self): ...
    @retention_policies.setter
    def retention_policies(self, retention_policies) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
