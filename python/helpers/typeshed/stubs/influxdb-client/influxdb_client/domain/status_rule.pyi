from _typeshed import Incomplete

class StatusRule:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        current_level: Incomplete | None = None,
        previous_level: Incomplete | None = None,
        count: Incomplete | None = None,
        period: Incomplete | None = None,
    ) -> None: ...
    @property
    def current_level(self): ...
    @current_level.setter
    def current_level(self, current_level) -> None: ...
    @property
    def previous_level(self): ...
    @previous_level.setter
    def previous_level(self, previous_level) -> None: ...
    @property
    def count(self): ...
    @count.setter
    def count(self, count) -> None: ...
    @property
    def period(self): ...
    @period.setter
    def period(self, period) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
