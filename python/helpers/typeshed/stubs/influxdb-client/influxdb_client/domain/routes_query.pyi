from _typeshed import Incomplete

class RoutesQuery:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        _self: Incomplete | None = None,
        ast: Incomplete | None = None,
        analyze: Incomplete | None = None,
        suggestions: Incomplete | None = None,
    ) -> None: ...
    @property
    def ast(self): ...
    @ast.setter
    def ast(self, ast) -> None: ...
    @property
    def analyze(self): ...
    @analyze.setter
    def analyze(self, analyze) -> None: ...
    @property
    def suggestions(self): ...
    @suggestions.setter
    def suggestions(self, suggestions) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
