from _typeshed import Incomplete

class TemplateSummaryDiffNotificationRulesNewOld:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        name: Incomplete | None = None,
        description: Incomplete | None = None,
        endpoint_name: Incomplete | None = None,
        endpoint_id: Incomplete | None = None,
        endpoint_type: Incomplete | None = None,
        every: Incomplete | None = None,
        offset: Incomplete | None = None,
        message_template: Incomplete | None = None,
        status: Incomplete | None = None,
        status_rules: Incomplete | None = None,
        tag_rules: Incomplete | None = None,
    ) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name) -> None: ...
    @property
    def description(self): ...
    @description.setter
    def description(self, description) -> None: ...
    @property
    def endpoint_name(self): ...
    @endpoint_name.setter
    def endpoint_name(self, endpoint_name) -> None: ...
    @property
    def endpoint_id(self): ...
    @endpoint_id.setter
    def endpoint_id(self, endpoint_id) -> None: ...
    @property
    def endpoint_type(self): ...
    @endpoint_type.setter
    def endpoint_type(self, endpoint_type) -> None: ...
    @property
    def every(self): ...
    @every.setter
    def every(self, every) -> None: ...
    @property
    def offset(self): ...
    @offset.setter
    def offset(self, offset) -> None: ...
    @property
    def message_template(self): ...
    @message_template.setter
    def message_template(self, message_template) -> None: ...
    @property
    def status(self): ...
    @status.setter
    def status(self, status) -> None: ...
    @property
    def status_rules(self): ...
    @status_rules.setter
    def status_rules(self, status_rules) -> None: ...
    @property
    def tag_rules(self): ...
    @tag_rules.setter
    def tag_rules(self, tag_rules) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
