from _typeshed import Incomplete

class OnboardingRequest:
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        username: Incomplete | None = None,
        password: Incomplete | None = None,
        org: Incomplete | None = None,
        bucket: Incomplete | None = None,
        retention_period_seconds: Incomplete | None = None,
        retention_period_hrs: Incomplete | None = None,
        token: Incomplete | None = None,
    ) -> None: ...
    @property
    def username(self): ...
    @username.setter
    def username(self, username) -> None: ...
    @property
    def password(self): ...
    @password.setter
    def password(self, password) -> None: ...
    @property
    def org(self): ...
    @org.setter
    def org(self, org) -> None: ...
    @property
    def bucket(self): ...
    @bucket.setter
    def bucket(self, bucket) -> None: ...
    @property
    def retention_period_seconds(self): ...
    @retention_period_seconds.setter
    def retention_period_seconds(self, retention_period_seconds) -> None: ...
    @property
    def retention_period_hrs(self): ...
    @retention_period_hrs.setter
    def retention_period_hrs(self, retention_period_hrs) -> None: ...
    @property
    def token(self): ...
    @token.setter
    def token(self, token) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
