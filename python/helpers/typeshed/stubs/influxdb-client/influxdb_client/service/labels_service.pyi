from _typeshed import Incomplete

from influxdb_client.service._base_service import _BaseService

class LabelsService(_BaseService):
    def __init__(self, api_client: Incomplete | None = None) -> None: ...
    def delete_labels_id(self, label_id, **kwargs): ...
    def delete_labels_id_with_http_info(self, label_id, **kwargs): ...
    async def delete_labels_id_async(self, label_id, **kwargs): ...
    def get_labels(self, **kwargs): ...
    def get_labels_with_http_info(self, **kwargs): ...
    async def get_labels_async(self, **kwargs): ...
    def get_labels_id(self, label_id, **kwargs): ...
    def get_labels_id_with_http_info(self, label_id, **kwargs): ...
    async def get_labels_id_async(self, label_id, **kwargs): ...
    def patch_labels_id(self, label_id, label_update, **kwargs): ...
    def patch_labels_id_with_http_info(self, label_id, label_update, **kwargs): ...
    async def patch_labels_id_async(self, label_id, label_update, **kwargs): ...
    def post_labels(self, label_create_request, **kwargs): ...
    def post_labels_with_http_info(self, label_create_request, **kwargs): ...
    async def post_labels_async(self, label_create_request, **kwargs): ...
