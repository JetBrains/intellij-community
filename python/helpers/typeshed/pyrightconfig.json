{
    "typeshedPath": ".",
    "include": [
        "stdlib",
        "stubs"
    ],
    "exclude": [
        // Python 2 only modules.
        "**/@python2",
        "stubs/enum34",
        "stubs/futures",
        "stubs/ipaddress"
    ],
    "typeCheckingMode": "basic",
    "strictListInference": true,
    "strictDictionaryInference": true,
    "strictParameterNoneValue": true,
    "reportFunctionMemberAccess": "error",
    "reportMissingModuleSource": "none",
    "reportMissingTypeStubs": "error",
    "reportUnusedImport": "error",
    "reportUnusedClass": "error",
    "reportUnusedFunction": "error",
    "reportUnusedVariable": "error",
    "reportDuplicateImport": "error",
    "reportOptionalSubscript": "error",
    "reportOptionalMemberAccess": "error",
    "reportOptionalCall": "error",
    "reportOptionalIterable": "error",
    "reportOptionalContextManager": "error",
    "reportOptionalOperand": "error",
    "reportUntypedFunctionDecorator": "error",
    "reportUntypedClassDecorator": "error",
    "reportUntypedBaseClass": "error",
    "reportUntypedNamedTuple": "error",
    "reportPrivateUsage": "none",
    "reportConstantRedefinition": "error",
    "reportIncompatibleMethodOverride": "error",
    "reportIncompatibleVariableOverride": "error",
    "reportInvalidStringEscapeSequence": "error",
    "reportUnknownArgumentType": "error",
    "reportUnknownLambdaType": "error",
    "reportMissingTypeArgument": "error",
    "reportUndefinedVariable": "error",
    "reportUnboundVariable": "error",
    "reportInvalidStubStatement": "error",
    "reportInvalidTypeVarUse": "error",
    "reportPropertyTypeMismatch": "error",
    "reportSelfClsParameterName": "error",
    // Overlapping overloads cannot be enabled at this time because
    // of the "factions.Fraction.__pow__" method and "tasks.gather" function.
    // Mypy's overlapping overload logic misses these issues (see mypy
    // issue #10143 and #10157).
    "reportOverlappingOverload": "none",
    // Several stubs refer to symbols in __all__ that are conditionally
    // declared based on platform or version checks.
    "reportUnsupportedDunderAll": "none",
}
