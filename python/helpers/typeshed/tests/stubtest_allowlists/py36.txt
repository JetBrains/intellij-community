_collections_abc.AsyncGenerator.ag_await
_collections_abc.AsyncGenerator.ag_code
_collections_abc.AsyncGenerator.ag_frame
_collections_abc.AsyncGenerator.ag_running
_dummy_threading
asyncio.Future.__init__  # Usually initialized from c object
asyncio.futures.Future.__init__  # Usually initialized from c object
asyncio.futures._TracebackLogger.__init__
asyncio.locks._ContextManagerMixin.__enter__  # Always raises; deliberately omitted from the stub
asyncio.locks._ContextManagerMixin.__exit__  # Always raises; deliberately omitted from the stub
builtins.float.__setformat__  # Internal method for CPython test suite
builtins.str.maketrans
cmath.log
collections.AsyncGenerator.ag_await
collections.AsyncGenerator.ag_code
collections.AsyncGenerator.ag_frame
collections.AsyncGenerator.ag_running
collections.Callable
collections.Mapping.__reversed__  # Set to None at runtime for a better error message
# Adding these reflected dunders to `typing.AbstractSet` causes a large number of false-positives. See #7414.
collections.Set.__rand__
collections.Set.__ror__
collections.Set.__rsub__
collections.Set.__rxor__
collections.UserString.maketrans
datetime.datetime_CAPI
distutils.command.bdist_wininst  # see #6523
distutils.cygwinccompiler.RE_VERSION
distutils.dist.command_re
distutils.fancy_getopt.longopt_re
distutils.fancy_getopt.neg_alias_re
dummy_threading.Condition.acquire
dummy_threading.Condition.release
dummy_threading.Event.isSet
dummy_threading.local.__new__
enum.Enum._generate_next_value_
fractions.Fraction.__new__  # overload is too complicated for stubtest to resolve
hmac.HMAC.__init__
io.StringIO.readline
ipaddress._BaseNetwork.__init__
json.loads
mmap.ACCESS_DEFAULT
(os|posix).utime
pyexpat.XMLParserType.ExternalEntityParserCreate  # C signature is wrong - function gets only positional args
random.Random.randrange  # missing undocumented arg _int
sched.Event.__doc__  # __slots__ is overridden
stringprep.unicodedata  # re-exported from unicodedata
sre_compile.dis
typing.AsyncGenerator.ag_await
typing.AsyncGenerator.ag_code
typing.AsyncGenerator.ag_frame
typing.AsyncGenerator.ag_running
typing.ChainMap.fromkeys
typing.Coroutine.cr_await
typing.Coroutine.cr_code
typing.Coroutine.cr_frame
typing.Coroutine.cr_running
typing.Generator.gi_code
typing.Generator.gi_frame
typing.Generator.gi_running
typing.Generator.gi_yieldfrom
typing.IO.closed  # Incorrect definition in CPython, fixed in bpo-39493
typing.Mapping.get
typing.NamedTuple._asdict
typing.NamedTuple._make
typing.NamedTuple._replace
typing.Sequence.index
typing.Text.maketrans
typing.runtime_checkable
typing\.\w+\.__new__
uuid.UUID.int
uuid.libname
xml.etree.ElementTree.TreeBuilder.start  # Discrepancy between Python and C modules, fixed in bpo-39495
xml.etree.cElementTree.TreeBuilder.start  # bpo-39495
xml.parsers.expat.XMLParserType.ExternalEntityParserCreate  # C signature is wrong - function gets only positional args
# These enums derive from (int, IntEnum) or (str, Enum). See comment in py3_common.txt
tkinter.EventType.__new__
tkinter.commondialog.[A-Z_]+
tkinter.commondialog.TclVersion
tkinter.commondialog.TkVersion
tkinter.commondialog.wantobjects
tkinter.dialog.[A-Z_]+
tkinter.dialog.TclVersion
tkinter.dialog.TkVersion
tkinter.dialog.wantobjects
tkinter.filedialog.[A-Z_]+
tkinter.filedialog.TclVersion
tkinter.filedialog.TkVersion
tkinter.filedialog.wantobjects
tkinter.simpledialog.wantobjects
tkinter.tix.wantobjects

builtins.memoryview.__iter__  # C type that implements __getitem__
builtins.memoryview.cast  # inspect.signature is incorrect about shape being kw-only
sqlite3.dbapi2.Binary.__iter__  # C type that implements __getitem__
sqlite3.dbapi2.Binary.cast  # inspect.signature is incorrect about shape being kw-only
sqlite3.Binary.__iter__  # C type that implements __getitem__
sqlite3.Binary.cast  # inspect.signature is incorrect about shape being kw-only

sqlite3.OptimizedUnicode.maketrans
sqlite3.dbapi2.OptimizedUnicode.maketrans

collections.Coroutine.cr_await
collections.Coroutine.cr_code
collections.Coroutine.cr_frame
collections.Coroutine.cr_running
collections.Generator.gi_code
collections.Generator.gi_frame
collections.Generator.gi_running
collections.Generator.gi_yieldfrom
collections.Mapping.get  # Adding None to the Union messed up mypy
collections.Sequence.index  # Supporting None in end is not mandatory

# Intentionally omitted because of syntax issues
asyncio.async
asyncio.tasks.async

# Exists at runtime, but missing from stubs
_bisect.bisect
_bisect.insort
asyncio.futures._TracebackLogger.loop
asyncio.futures._TracebackLogger.source_traceback
calendar.HTMLCalendar.cssclasses
distutils.cmd.install_misc
distutils.sysconfig.expand_makefile_vars
distutils.sysconfig.get_python_version
dummy_threading.Lock
dummy_threading.RLock
dummy_threading.stack_size
html.parser.HTMLParser.unescape
platform.popen
plistlib.Data.asBase64
plistlib.Data.fromBase64
ssl.SSLObject.verify_client_post_handshake
ssl.SSLSocket.verify_client_post_handshake
tempfile.SpooledTemporaryFile.softspace
tkinter.dnd.Icon
tkinter.dnd.Tester
tkinter.dnd.test
typing.[A-Z]\w*.__.*__  # many missing typing dunders in py36
xml.dom.xmlbuilder.DocumentLS.async
