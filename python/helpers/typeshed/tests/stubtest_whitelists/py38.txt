_collections_abc.AsyncGenerator.ag_await
_collections_abc.AsyncGenerator.ag_code
_collections_abc.AsyncGenerator.ag_frame
_collections_abc.AsyncGenerator.ag_running
_collections_abc.ItemsView.__reversed__
_collections_abc.KeysView.__reversed__
_collections_abc.ValuesView.__reversed__
ast.Bytes.__new__
ast.Ellipsis.__new__
ast.NameConstant.__new__
ast.Num.__new__
ast.Str.__new__
asyncio.compat  # removed in 3.7
asyncio.Future.__init__  # Usually initialized from c object
asyncio.Future._callbacks  # Usually initialized from c object
asyncio.futures.Future.__init__  # Usually initialized from c object
asyncio.futures.Future._callbacks  # Usually initialized from c object
asyncio.threads  # Added in Python 3.9
builtins.dict.get
collections.AsyncGenerator.ag_await
collections.AsyncGenerator.ag_code
collections.AsyncGenerator.ag_frame
collections.AsyncGenerator.ag_running
collections.Callable
collections.ItemsView.__reversed__
collections.KeysView.__reversed__
collections.ValuesView.__reversed__
collections.abc.AsyncGenerator.ag_await
collections.abc.AsyncGenerator.ag_code
collections.abc.AsyncGenerator.ag_frame
collections.abc.AsyncGenerator.ag_running
collections.abc.ItemsView.__reversed__
collections.abc.KeysView.__reversed__
collections.abc.ValuesView.__reversed__
contextlib.nullcontext  # not a function at runtime
contextvars.Context.__init__  # Default C __init__ signature is wrong
dataclasses.field
enum.Enum._generate_next_value_
fractions.Fraction.__new__  # overload is too complicated for stubtest to resolve
functools.partialmethod.__get__
functools.singledispatchmethod.__call__  # A lie to reflect that the descriptor get returns a callable
gettext.install  # codeset default value is ['unspecified'] so can't be specified
gettext.translation  # codeset default value is ['unspecified'] so can't be specified
hmac.new  # Stub is a white lie; see comments in the stub
http.server.SimpleHTTPRequestHandler.__init__  # *args is expanded
ipaddress.IPv4Interface.hostmask
ipaddress.IPv6Interface.hostmask
ipaddress._BaseNetwork.broadcast_address
ipaddress._BaseNetwork.hostmask
multiprocessing.spawn._main
pickle.Pickler.reducer_override  # implemented in C pickler
queue.SimpleQueue.__init__  # Default C __init__ signature is wrong
random.Random.randrange  # missing undocumented arg _int
random.randrange  # missing undocumented arg _int
sched.Event.__doc__  # __slots__ is overridden
ssl.PROTOCOL_SSLv3  # Depends on ssl compilation
ssl.RAND_egd  # Depends on openssl compilation
sys.UnraisableHookArgs  # Not exported from sys
types.ClassMethodDescriptorType.__get__
types.CodeType.replace
types.MethodDescriptorType.__get__
types.WrapperDescriptorType.__get__
typing.NamedTuple.__new__
typing.NamedTuple._asdict
typing.NamedTuple._make
typing.NamedTuple._replace
typing.SupportsAbs.__init__
typing.SupportsBytes.__init__
typing.SupportsComplex.__init__
typing.SupportsFloat.__init__
typing.SupportsIndex.__init__
typing.SupportsInt.__init__
typing.SupportsRound.__init__
typing._SpecialForm.__init__
typing._SpecialForm.__new__
uuid.getnode  # undocumented, unused parameter getters that was later removed
weakref.WeakValueDictionary.update
xml.etree.ElementTree.TreeBuilder.start  # Discrepancy between Python and C modules, fixed in bpo-39495
xml.etree.ElementTree.XMLParser.__init__  # Defined in C so has general signature
xml.etree.cElementTree.TreeBuilder.start  # bpo-39495
xml.etree.cElementTree.XMLParser.__init__  # Defined in C so has general signature
# These enums derive from (int, IntEnum) or (str, Enum). See comment in py3_common.txt
pstats.SortKey.__new__
tkinter.EventType.__new__

builtins.memoryview.__iter__  # C type that implements __getitem__
builtins.memoryview.cast  # inspect.signature is incorrect about shape being kw-only
collections.Coroutine.cr_await
collections.Coroutine.cr_code
collections.Coroutine.cr_frame
collections.Coroutine.cr_running
collections.Generator.gi_code
collections.Generator.gi_frame
collections.Generator.gi_running
collections.Generator.gi_yieldfrom
collections.Mapping.get  # Adding None to the Union messed up mypy
collections.Sequence.index  # Supporting None in end is not mandatory
