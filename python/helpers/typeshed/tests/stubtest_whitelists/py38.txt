_collections_abc.AsyncGenerator.ag_await
_collections_abc.AsyncGenerator.ag_code
_collections_abc.AsyncGenerator.ag_frame
_collections_abc.AsyncGenerator.ag_running
_collections_abc.ItemsView.__reversed__
_collections_abc.KeysView.__reversed__
_collections_abc.ValuesView.__reversed__
_thread.ExceptHookArgs
_thread._ExceptHookArgs
ast.Bytes.__new__
ast.Ellipsis.__new__
ast.NameConstant.__new__
ast.Num.__new__
ast.Str.__new__
asyncio.AbstractEventLoop.sock_sendfile
asyncio.compat  # removed in 3.7
asyncio.Future.__init__
asyncio.Future._callbacks
asyncio.events.AbstractEventLoop.sock_sendfile
asyncio.futures.Future.__init__
asyncio.futures.Future._callbacks
asyncio.proactor_events._ProactorBasePipeTransport.__del__
asyncio.run  # Bugfix involving this was backported to 3.8
asyncio.runners.run  # It just hasn't been released yet
asyncio.threads  # Added in Python 3.9
builtins.dict.get
collections.AsyncGenerator.ag_await
collections.AsyncGenerator.ag_code
collections.AsyncGenerator.ag_frame
collections.AsyncGenerator.ag_running
collections.ItemsView.__reversed__
collections.KeysView.__reversed__
collections.ValuesView.__reversed__
collections.abc.AsyncGenerator.ag_await
collections.abc.AsyncGenerator.ag_code
collections.abc.AsyncGenerator.ag_frame
collections.abc.AsyncGenerator.ag_running
collections.abc.ItemsView.__reversed__
collections.abc.KeysView.__reversed__
collections.abc.ValuesView.__reversed__
concurrent.futures.ProcessPoolExecutor.map
contextvars.Context.__init__
contextvars.Context.get
copy.PyStringMap
dataclasses.field
email.message.MIMEPart.as_string
enum.Enum._generate_next_value_
fractions.Fraction.__new__  # overload is too complicated for stubtest to resolve
functools.partialmethod.__get__
functools.singledispatchmethod.__call__  # A lie to reflect that the descriptor get returns a callable
gettext.install
gettext.translation
hmac.new  # Stub is a white lie; see comments in the stub
http.client.HTTPSConnection.__init__
http.cookiejar.DefaultCookiePolicy.__init__
http.server.SimpleHTTPRequestHandler.__init__
importlib.metadata.DistributionFinder.Context.pattern
importlib.metadata.EntryPointBase
ipaddress.IPv4Interface.hostmask
ipaddress.IPv6Interface.hostmask
ipaddress._BaseNetwork.broadcast_address
ipaddress._BaseNetwork.hostmask
macpath
macurl2path  # removed in 3.7
mmap.MADV_[A-Z_]+
multiprocessing.spawn._main
nntplib._NNTPBase.starttls
pickle.Pickler.reducer_override
platform.DEV_NULL
queue.SimpleQueue.__init__
random.Random.randrange  # missing undocumented arg _int
random.randrange  # missing undocumented arg _int
secrets.SystemRandom.getstate
select.epoll.register
smtplib.SMTP.sendmail
sre_constants.RANGE_IGNORE
ssl.PROTOCOL_SSLv3
ssl.RAND_egd
sys.UnraisableHookArgs
types.ClassMethodDescriptorType.__get__
types.CodeType.replace
types.MethodDescriptorType.__get__
types.WrapperDescriptorType.__get__
typing.NamedTuple.__new__
typing.NamedTuple._asdict
typing.NamedTuple._make
typing.NamedTuple._replace
typing.SupportsAbs.__init__
typing.SupportsBytes.__init__
typing.SupportsComplex.__init__
typing.SupportsFloat.__init__
typing.SupportsIndex.__init__
typing.SupportsInt.__init__
typing.SupportsRound.__init__
typing._SpecialForm.__init__
typing._SpecialForm.__new__
unittest.doModuleCleanups
uuid.getnode  # undocumented, unused parameter getters that was later removed
weakref.WeakValueDictionary.update
webbrowser.Opera.raise_opts
xml.etree.ElementTree.TreeBuilder.start  # Discrepancy between Python and C modules, fixed in bpo-39495
xml.etree.ElementTree.XMLParser.__init__
xml.etree.cElementTree.TreeBuilder.start  # bpo-39495
xml.etree.cElementTree.XMLParser.__init__
zipfile.Path.open
# These enums derive from (int, IntEnum) or (str, Enum). See comment in py3_common.txt
enum.IntFlag.__new__
pstats.SortKey.__new__
re.RegexFlag.__new__
socket.AddressInfo.__new__
socket.MsgFlag.__new__
ssl.Options.__new__
ssl.TLSVersion.__new__
ssl.VerifyFlags.__new__
ssl.VerifyMode.__new__
tkinter.EventType.__new__
