from argparse import ArgumentParser
from collections.abc import Sequence
from typing import Any

from django.core.management.base import BaseCommand

class TemplateCommand(BaseCommand):
    url_schemes: Sequence[str]
    rewrite_template_suffixes: Sequence[tuple[str, str]]
    app_or_project: str
    a_or_an: str
    paths_to_remove: Sequence[Any]
    verbosity: Any
    def add_arguments(self, parser: ArgumentParser) -> None: ...
    def handle(self, app_or_project: str, name: str, target: str | None = ..., **options: Any) -> None: ...
    def handle_template(self, template: str | None, subdir: str | None) -> str: ...
    def validate_name(self, name: str, name_or_dir: str = ...) -> None: ...
    def download(self, url: str) -> str: ...
    def splitext(self, the_path: str) -> tuple[str, str]: ...
    def extract(self, filename: str) -> str: ...
    def is_url(self, template: str) -> bool: ...
    def apply_umask(self, old_path: str, new_path: str) -> None: ...
    def make_writeable(self, filename: str) -> None: ...
