from typing import Any

from django.contrib.sessions.backends.base import SessionBase
from django.contrib.sessions.base_session import AbstractBaseSession
from django.utils.functional import cached_property

class SessionStore(SessionBase):
    def __init__(self, session_key: str | None = None) -> None: ...
    @classmethod
    def get_model_class(cls) -> type[AbstractBaseSession]: ...
    @cached_property
    def model(self) -> type[AbstractBaseSession]: ...
    def create_model_instance(self, data: dict[str, Any]) -> AbstractBaseSession: ...
    async def acreate_model_instance(self, data: dict[str, Any]) -> AbstractBaseSession: ...
