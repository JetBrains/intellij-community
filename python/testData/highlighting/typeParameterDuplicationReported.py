def foo[T, <error descr="Type parameter with name 'T' is already defined in this type parameter list">T</error>](): ...
class Clazz[T, <error descr="Type parameter with name 'T' is already defined in this type parameter list">T</error>](): ...
type myType[T, <error descr="Type parameter with name 'T' is already defined in this type parameter list">T</error>] = str
def foo[T, V, B, <error descr="Type parameter with name 'T' is already defined in this type parameter list">T</error>, <error descr="Type parameter with name 'V' is already defined in this type parameter list">V</error>](): ...
class Clazz[T, V, B, <error descr="Type parameter with name 'T' is already defined in this type parameter list">T</error>, <error descr="Type parameter with name 'V' is already defined in this type parameter list">V</error>](): ...
type myType[T, V, B, <error descr="Type parameter with name 'T' is already defined in this type parameter list">T</error>, <error descr="Type parameter with name 'V' is already defined in this type parameter list">V</error>] = str
def foo[T, *Ts, B, **P, V, **<error descr="Type parameter with name 'P' is already defined in this type parameter list">P</error>, *<error descr="Type parameter with name 'Ts' is already defined in this type parameter list">Ts</error>](): ...
class Clazz[T, *Ts, B, **P, V, **<error descr="Type parameter with name 'P' is already defined in this type parameter list">P</error>, *<error descr="Type parameter with name 'Ts' is already defined in this type parameter list">Ts</error>](): ...
type myType[T, *Ts, B, **P, V, **<error descr="Type parameter with name 'P' is already defined in this type parameter list">P</error>, *<error descr="Type parameter with name 'Ts' is already defined in this type parameter list">Ts</error>] = str