<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="FacetManager">
    <facet type="kotlin-language" name="Kotlin">
      <configuration version="5" platform="JVM 21" allPlatforms="JVM [21]" useProjectSettings="false">
        <compilerSettings>
          <option name="additionalArguments" value="-Xjvm-default=all -P plugin:androidx.compose.compiler.plugins.kotlin:generateFunctionKeyMetaAnnotations=true -XXLanguage:+AllowEagerSupertypeAccessibilityChecks -opt-in=kotlin.time.ExperimentalTime" />
        </compilerSettings>
        <compilerArguments>
          <stringArguments>
            <stringArg name="jvmTarget" arg="21" />
            <stringArg name="apiVersion" arg="2.2" />
            <stringArg name="languageVersion" arg="2.2" />
          </stringArguments>
          <arrayArguments>
            <arrayArg name="pluginClasspaths">
              <args>$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-compose-compiler-plugin/2.2.21-RC2/kotlin-compose-compiler-plugin-2.2.21-RC2.jar</args>
            </arrayArg>
          </arrayArguments>
        </compilerArguments>
      </configuration>
    </facet>
  </component>
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/resources" type="java-resource" />
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="kotlin-stdlib" level="project" />
    <orderEntry type="module" module-name="intellij.platform.ide" />
    <orderEntry type="module" module-name="intellij.platform.core" />
    <orderEntry type="module" module-name="intellij.libraries.skiko" />
    <orderEntry type="module" module-name="intellij.libraries.compose.foundation.desktop" />
    <orderEntry type="module" module-name="intellij.platform.jewel.foundation" />
    <orderEntry type="module" module-name="intellij.platform.jewel.ui" />
    <orderEntry type="module" module-name="intellij.platform.jewel.ideLafBridge" />
    <orderEntry type="module" module-name="intellij.platform.core.ui" />
    <orderEntry type="module" module-name="intellij.python.community.execService" />
    <orderEntry type="module" module-name="intellij.python.community" />
    <orderEntry type="module" module-name="intellij.platform.util.ui" />
    <orderEntry type="module" module-name="intellij.platform.editor.ui" />
    <orderEntry type="module" module-name="intellij.libraries.compose.foundation.desktop.junit" scope="TEST" />
    <orderEntry type="library" scope="TEST" name="kotlin-test" level="project" />
    <orderEntry type="library" scope="TEST" name="kotlin-test-assertions-core-jvm" level="project" />
    <orderEntry type="library" scope="TEST" name="kotlin-test-junit" level="project" />
    <orderEntry type="module" module-name="intellij.platform.jewel.intUi.standalone" scope="TEST" />
    <orderEntry type="module" module-name="intellij.platform.projectModel" />
    <orderEntry type="module" module-name="intellij.platform.execution.impl" />
    <orderEntry type="library" name="jediterm-core" level="project" />
    <orderEntry type="library" scope="TEST" name="io.mockk" level="project" />
    <orderEntry type="library" scope="TEST" name="io.mockk.jvm" level="project" />
    <orderEntry type="library" name="kotlin-reflect" level="project" />
    <orderEntry type="library" name="kotlinx-collections-immutable" level="project" />
    <orderEntry type="module" module-name="intellij.platform.testFramework.junit5" scope="TEST" />
    <orderEntry type="library" scope="TEST" name="JUnit5" level="project" />
    <orderEntry type="module" module-name="intellij.platform.testFramework.common" scope="TEST" />
    <orderEntry type="module" module-name="intellij.platform.statistics" />
    <orderEntry type="module" module-name="intellij.python.processOutput" />
  </component>
</module>