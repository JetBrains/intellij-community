<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <!-- Components and extensions declared in this file work ONLY in PyCharm, not in Python plugin.
       Both Community and Professional editions. -->

  <xi:include href="/META-INF/IdeTipsAndTricks.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/PlatformLangPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/XmlPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/JsonPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/ImagesPlugin.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/RegExpPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/SpellCheckerPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/RemoteServers.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/python-community-configure-ide.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <application-components>
    <component>
      <implementation-class>com.intellij.internal.statistic.updater.StatisticsJobsScheduler</implementation-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <implementation-class>com.jetbrains.python.PyModuleListener</implementation-class>
    </component>
  </project-components>

  <project-components>
    <component>
      <implementation-class>com.jetbrains.python.console.PythonConsoleToolWindow</implementation-class>
    </component>
  </project-components>




  <module value="com.intellij.modules.xml"/>

  <extensions defaultExtensionNs="com.intellij">
    <projectViewPane implementation="com.intellij.ide.projectView.impl.ProjectViewPane"/>

    <projectAttachProcessor implementation="com.intellij.platform.ModuleAttachProcessor"/>

    <projectConfigurable groupId="build"
                         id="com.jetbrains.python.buildout.BuildoutModulesConfigurable"
                         displayName="Buildout Support"
                         instance="com.jetbrains.python.buildout.BuildoutModulesConfigurable"/>

    <directoryProjectConfigurator implementation="com.jetbrains.python.PythonSdkConfigurator" id="sdk"
                                  order="after PlatformProjectConfigurator"/>
    <directoryProjectConfigurator implementation="com.jetbrains.python.PythonSourceRootConfigurator" id="sourceRoot"
                                  order="after sdk"/>
    <directoryProjectConfigurator implementation="com.jetbrains.python.buildout.BuildoutFacetConfigurator" id="buildout"
                                  order="after sourceRoot"/>
    <directoryProjectConfigurator implementation="com.intellij.platform.PlatformInspectionProfileConfigurator"/>

    <applicationService serviceInterface="com.intellij.openapi.module.ModuleTypeManager"
                        serviceImplementation="com.jetbrains.python.PythonModuleTypeManager"/>

    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.FileGroupingRuleProvider" order="first"/>
    <fileStructureGroupRuleProvider implementation="com.jetbrains.python.findUsages.PyClassGroupingRuleProvider"
                                    order="before py-function"/>
    <diffPreviewProvider implementation="com.jetbrains.python.configuration.PyDiffPreviewProvider"/>

    <applicationService serviceInterface="com.jetbrains.python.run.PyCommonOptionsFormFactory"
                        serviceImplementation="com.jetbrains.python.PyIdeCommonOptionsFormFactory"/>

    <optionsApplicabilityFilter implementation="com.jetbrains.python.PyOptionsApplicabilityFilter"/>

    <hectorComponentProvider implementation="com.intellij.codeInsight.daemon.impl.ImportPopupHectorComponentProvider"/>

    <usageFilteringRuleProvider implementation="com.intellij.usages.impl.ImportUsageFilteringRuleProvider"/>
    <applicationService serviceImplementation="com.intellij.usages.impl.ImportFilteringUsageViewSetting"/>

    <bundledColorScheme path="/colorSchemes/monokai"/>
    <bundledColorScheme path="/colorSchemes/twilight"/>
    <bundledColorScheme path="/colorSchemes/WarmNeon"/>
    <bundledColorScheme path="/colorSchemes/github"/>

    <renameHandler implementation="com.intellij.platform.renameProject.RenameProjectHandler"/>
    <renameHandler implementation="com.intellij.platform.renameProject.ProjectFolderRenameHandler"/>

    <!-- Console -->

    <toolWindow id="Python Console" anchor="bottom" icon="PythonIcons.Python.PythonConsoleToolWindow"
                factoryClass="com.jetbrains.python.console.PythonConsoleToolWindowFactory" secondary="false"/>



    <directoryIndexExcludePolicy implementation="com.jetbrains.python.PyDirectoryIndexExcludePolicy"/>

  </extensions>

  <actions>
    <group id="PlatformOpenProjectGroup">
      <action id="NewDirectoryProject" class="com.jetbrains.python.newProject.PyCharmNewProjectAction"/>
      <action id="NewElement" class="com.intellij.ide.actions.NewElementAction" />
      <reference ref="NewScratchFile" />
      <add-to-group group-id="FileOpenGroup" anchor="first"/>
    </group>

    <action id="SaveAs" class="com.intellij.ide.actions.SaveAsAction" text="Save As...">
      <add-to-group group-id="FileOpenGroup" anchor="after" relative-to-action="OpenFile"/>
    </action>

    <action id="RerunFailedTests" class="com.intellij.execution.testframework.actions.RerunFailedTestsAction"
            icon="AllIcons.RunConfigurations.RerunFailedTests"/>

    <group id="WelcomeScreen.Platform.NewProject">
      <action id="WelcomeScreen.CreateDirectoryProject" class="com.jetbrains.python.newProject.steps.PyCharmNewProjectStep"
              icon="AllIcons.Welcome.CreateNewProject"/>
      <action id="WelcomeScreen.OpenDirectoryProject" class="com.intellij.ide.actions.OpenFileAction" icon="AllIcons.Actions.Menu_open"/>

      <add-to-group group-id="WelcomeScreen.QuickStart" anchor="first"/>
    </group>

    <group>
      <action id="MarkSourceRoot" class="com.intellij.ide.projectView.actions.MarkJavaSourceRootAction"/>
      <action id="MarkExcludeRoot" class="com.intellij.ide.projectView.actions.MarkExcludeRootAction"/>
      <action id="MarkAsContentRoot" class="com.intellij.ide.projectView.actions.MarkAsContentRootAction"/>
      <action id="UnmarkRoot" class="com.intellij.ide.projectView.actions.UnmarkRootAction"/>
      <add-to-group group-id="MarkRootGroup"/>
    </group>

    <action overrides="true" id="ForceStepInto" class="com.intellij.openapi.actionSystem.EmptyAction"/>

    <group id="TypeHierarchyPopupMenu">
    </group>

    <action id="ReportProblem" class="com.jetbrains.python.ReportProblemAction" text="Report Problem...">
      <add-to-group group-id="HelpMenu" anchor="before" relative-to-action="TechnicalSupport"/>
    </action>

    <action id="RenameProject" class="com.intellij.platform.renameProject.RenameProjectAction">
      <add-to-group group-id="FileOpenGroup" anchor="after" relative-to-action="RenameFile"/>
    </action>
  </actions>
</idea-plugin>
