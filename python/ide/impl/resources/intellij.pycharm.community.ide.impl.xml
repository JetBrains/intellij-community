<idea-plugin package="com.intellij.pycharm.community.ide.impl">
  <!--Customization code for both Community and Pro PyCharms-->
  <dependencies>
    <module name="intellij.python.community.impl"/>
  </dependencies>

  <projectListeners>
    <listener class="com.intellij.pycharm.community.ide.impl.PyModuleListener" topic="com.intellij.openapi.project.ModuleListener"/>
    <listener class="com.intellij.pycharm.community.ide.impl.PySdkFromEnvironmentVariableConfigurator"
              topic="com.intellij.workspaceModel.ide.JpsProjectLoadedListener"/>
  </projectListeners>

  <extensions defaultExtensionNs="com.intellij">
    <applicationInitializedListener implementation="com.intellij.pycharm.community.ide.impl.PyCharmCorePluginConfigurator"/>
    <applicationService serviceInterface="com.intellij.lang.IdeLanguageCustomization"
                        serviceImplementation="com.intellij.pycharm.community.ide.impl.PyCharmPythonIdeLanguageCustomization"
                        overrides="true"/>

    <projectConfigurable groupId="project"
                         id="com.intellij.pycharm.community.ide.impl.configuration.PythonContentEntriesConfigurable"
                         bundle="messages.PyBundle"
                         key="configurable.PythonContentEntriesConfigurable.display.name"
                         provider="com.intellij.pycharm.community.ide.impl.configuration.PythonContentEntriesConfigurableProvider"/>
    <projectConfigurable groupId="project"
                         id="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable"
                         bundle="messages.PyBundle"
                         key="configurable.PyActiveSdkModuleConfigurable.python.interpreter.display.name"
                         instance="com.intellij.pycharm.community.ide.impl.PyCharmPyActiveSdkModuleConfigurable"
                         groupWeight="5"/> <!-- id is used in InterpreterSettingsQuickFix.showPythonInterpreterSettings -->
    <projectConfigurable groupId="project"
                         id="com.intellij.pycharm.community.ide.impl.configuration.PyDependenciesConfigurable"
                         bundle="messages.PyBundle"
                         key="configurable.PyDependenciesConfigurable.display.name"
                         provider="com.intellij.pycharm.community.ide.impl.configuration.PyDependenciesConfigurableProvider"/>

    <statusBarWidgetFactory id="pythonInterpreterWidget"
                            implementation="com.intellij.pycharm.community.ide.impl.configuration.PySdkStatusBarWidgetFactory"
                            order="after CodeStyleStatusBarWidget, before git, before hg, before Notifications"/>

    <directoryProjectConfigurator implementation="com.intellij.pycharm.community.ide.impl.PythonSdkConfigurator" id="sdk"
                                  order="after PlatformProjectConfigurator"/>
    <directoryProjectConfigurator implementation="com.intellij.pycharm.community.ide.impl.PythonSourceRootConfigurator" id="sourceRoot"
                                  order="after sdk"/>
    <directoryProjectConfigurator implementation="com.intellij.pycharm.community.ide.impl.PlatformInspectionProfileConfigurator"/>
    <directoryProjectConfigurator implementation="com.intellij.pycharm.community.ide.impl.newProject.welcome.PyWelcomeConfigurator"
                                  id="welcome" order="last"/>

    <applicationService serviceInterface="com.intellij.openapi.module.ModuleTypeManager"
                        serviceImplementation="com.intellij.pycharm.community.ide.impl.PythonModuleTypeManager"
                        overrides="true"/>

    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.FileGroupingRuleProvider" order="first"/>
    <fileStructureGroupRuleProvider implementation="com.intellij.pycharm.community.ide.impl.PyClassGroupingRuleProvider"
                                    order="before py-function"/>
    <diffPreviewProvider implementation="com.intellij.pycharm.community.ide.impl.configuration.PyDiffPreviewProvider"/>

    <optionsApplicabilityFilter implementation="com.intellij.pycharm.community.ide.impl.PyOptionsApplicabilityFilter"/>

    <applicationService serviceInterface="com.jetbrains.python.run.PyCommonOptionsFormFactory"
                        serviceImplementation="com.intellij.pycharm.community.ide.impl.PyIdeCommonOptionsFormFactory"/>

    <applicationService serviceInterface="com.jetbrains.python.run.PyCommonFragmentsBuilder"
                        serviceImplementation="com.intellij.pycharm.community.ide.impl.PyIdeCommonFragmentsBuilder"/>


    <directoryIndexExcludePolicy implementation="com.intellij.pycharm.community.ide.impl.PyDirectoryIndexExcludePolicy"/>

    <applicationService serviceImplementation="com.intellij.pycharm.community.ide.impl.newProject.welcome.PyWelcomeSettings"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.pycharm.community.ide.impl.newProject.welcome.PyWelcomeCollector"/>
    <notificationGroup id="PyCharm Professional Advertiser" displayType="STICKY_BALLOON" isLogByDefault="false"
                       bundle="messages.PyCharmCommunityCustomizationBundle" key="notification.group.pro.advertiser"/>

    <ignoredFileProvider implementation="com.intellij.pycharm.community.ide.impl.configuration.PyTemporarilyIgnoredFileProvider"/>

    <statistics.counterUsagesCollector
      implementationClass="com.intellij.pycharm.community.ide.impl.configuration.PySdkConfigurationCollector"/>
    <defaultToolWindowLayout implementation="com.intellij.pycharm.community.ide.impl.PyToolWindowLayoutProvider" order="last"/>
    <newUIConfigurable implementation="com.intellij.pycharm.community.ide.impl.configuration.PyExperimentalUIConfigurable"/>


  </extensions>

  <extensions defaultExtensionNs="Pythonid">
    <projectSdkConfigurationExtension
      implementation="com.intellij.pycharm.community.ide.impl.configuration.PyRequirementsTxtOrSetupPySdkConfiguration"
      id="requirementsTxtOrSetupPy"/>
    <projectSdkConfigurationExtension
      implementation="com.intellij.pycharm.community.ide.impl.configuration.PyEnvironmentYmlSdkConfiguration"
      id="environmentYml"/>
    <projectSdkConfigurationExtension implementation="com.intellij.pycharm.community.ide.impl.configuration.PyPipfileSdkConfiguration"
                                      id="pipfile" order="before requirementsTxtOrSetupPy"/>
    <projectSdkConfigurationExtension implementation="com.intellij.pycharm.community.ide.impl.configuration.PyPoetrySdkConfiguration"/>
  </extensions>

  <actions resource-bundle="messages.ActionsBundle">
    <action id="PySwitchSdkAction" class="com.intellij.pycharm.community.ide.impl.configuration.PySwitchSdkAction"/>
    <action id="NewDirectoryProject" class="com.intellij.pycharm.community.ide.impl.newProject.PyCharmNewProjectAction">
      <add-to-group group-id="NewProjectOrModuleGroup"/>
    </action>

    <group id="WelcomeScreen.Platform.NewProject">
      <action id="WelcomeScreen.CreateDirectoryProject"
              class="com.intellij.pycharm.community.ide.impl.newProject.steps.PyCharmNewProjectStep"/>
      <reference ref="WelcomeScreen.OpenDirectoryProject"/>

      <add-to-group group-id="WelcomeScreen.QuickStart" anchor="first"/>
    </group>
  </actions>
</idea-plugin>
