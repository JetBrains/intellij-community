import org.apache.tools.ant.taskdefs.condition.Os

plugins {
  id "com.jetbrains.python.envs" version "0.0.25"
}

ext {
  pydevDir = new File(projectDir, '/../../../helpers/pydev/')
}

envs {
  def customBuildDir = System.getenv().get("PYCHARM_BUILD_DIR")
  project.buildDir = customBuildDir? new File(customBuildDir): buildDir
  bootstrapDirectory = new File(buildDir, 'pythons')
  envsDirectory = new File(buildDir, 'envs')

  zipRepository = new URL("https://repo.labs.intellij.net/pycharm/python-archives-windows/")
  shouldUseZipsFromRepository = Os.isFamily(Os.FAMILY_WINDOWS)

  python "python27_64", "2.7.16", "64"
  virtualenv "py27_64", "python27_64", ["cython"]

  python "python35_64", "3.5.7", "64"
  virtualenv "py35_64", "python35_64", ["cython"]

  python "python36_64", "3.6.8", "64"
  virtualenv "py36_64", "python36_64", ["cython"]

  python "python37_64", "3.7.4", "64"
  virtualenv "py37_64", "python37_64", ["cython"]

  python "python38_64", "3.8.0", "64"
  virtualenv "py38_64", "python38_64", ["cython"]

  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    python "python27_32", "2.7.16", "32"
    virtualenv "py27_32", "python27_32", ["cython"]

    python "python35_32", "3.5.7", "32"
    virtualenv "py35_32", "python35_32", ["cython"]

    python "python36_32", "3.6.8", "32"
    virtualenv "py36_32", "python36_32", ["cython"]

    python "python37_32", "3.7.4", "32"
    virtualenv "py37_32", "python37_32", ["cython"]

    python "python38_32", "3.8.0", "32"
    virtualenv "py38_32", "python38_32", ["cython"]
  }
}

task buildBinariesOnWindows(dependsOn: 'build_envs') << {
  exec {
    workingDir pydevDir

    environment PYTHONPATH: pydevDir,
                MINICONDA32_ENVS: envs.envsDirectory,
                MINICONDA64_ENVS: envs.envsDirectory

    commandLine "${envs.envsDirectory}/py27_32/Scripts/python.exe", "build_tools/build_binaries_windows.py"
  }
}

task buildBinariesOnMac(dependsOn: 'build_envs') << {
  exec {
    workingDir pydevDir

    environment PYTHONPATH: pydevDir,
                MINICONDA64_ENVS: envs.envsDirectory

    commandLine "${envs.envsDirectory}/py37_64/bin/python", "build_tools/build_binaries_osx.py"
  }
}

task buildBinaries() {
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    dependsOn buildBinariesOnWindows
  }
  else if (Os.isFamily(Os.FAMILY_MAC)) {
    dependsOn buildBinariesOnMac
  }
}

task wrapper(type: Wrapper) << {
  gradleVersion = '4.2'
}