<!--
  ~ Copyright 2000-2014 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">

  <xi:include href="/META-INF/IdeTipsAndTricks.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/PlatformLangPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <module value="com.intellij.modules.all"/>

  <xi:include href="/META-INF/RemoteServers.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/RemoteServersJava.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/DesignerCorePlugin.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>

  <xi:include href="/META-INF/XmlPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/JsonPlugin.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/RegExpPlugin.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/ImagesPlugin.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/SpellCheckerPlugin.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>

  <xi:include href="/META-INF/structuralsearch.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/structuralsearch-java.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/coverage-common-plugin.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <module value="com.intellij.modules.externalSystem"/>
  <xi:include href="/componentSets/ExternalSystemComponents.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <extensionPoints>
    <xi:include href="/META-INF/ExternalSystemExtensionPoints.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>
  </extensionPoints>
  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/ExternalSystemExtensions.xml" xpointer="xpointer(/idea-plugin/extensions/*)"/>
  </extensions>
  <xi:include href="/idea/ExternalSystemActions.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <extensions defaultExtensionNs="com.intellij">
    <applicationInitializedListener implementation="com.intellij.internal.statistic.updater.StatisticsJobsScheduler"/>

    <projectViewPane implementation="com.intellij.ide.projectView.impl.ProjectViewPane"/>


    <gotoRelatedProvider implementation="com.intellij.testIntegration.GotoTestRelatedProvider"/>

    <applicationService serviceInterface="com.intellij.ide.RecentProjectsManager"
                        serviceImplementation="com.intellij.ide.RecentProjectsManagerBase"
                        overrides="true"/>

    <daemon.highlightInfoFilter implementation="com.intellij.codeInsight.daemon.impl.HighlightInfoFilterImpl"/>



    <projectConfigurable groupId="language" instance="com.intellij.psi.templateLanguages.TemplateDataLanguageConfigurable"
                         id="Template Data Languages" key="template.data.language.configurable" bundle="messages.LangBundle"
                         nonDefaultProject="true"/>


    <!-- Application Configurables -->

    <!-- Path Variables -->
    <!-- the implementation of this configurable is in intellij.platform.ide.impl but it's not registered in platform because
         it's only required in full IDEA -->
    <applicationConfigurable groupId="appearance" groupWeight="-10"
                             instance="com.intellij.application.options.pathMacros.PathMacroConfigurable" id="preferences.pathVariables"
                             key="title.path.variables" bundle="messages.ApplicationBundle"/>

    <editorNotificationProvider implementation="com.intellij.codeInsight.daemon.impl.SdkSetupNotificationProvider"/>

    <vcsAwareCheckoutListener implementation="com.intellij.openapi.vcs.checkout.RegisterMappingCheckoutListener"/>

    <projectTemplatesFactory implementation="com.intellij.platform.templates.ArchivedTemplatesFactory"/>
    <!--
    <projectTemplatesFactory implementation="com.intellij.platform.templates.RemoteTemplatesFactory"/>
    -->
    <applicationService serviceImplementation="com.intellij.platform.templates.ProjectTemplateExportable"/>
    <exportable serviceInterface="com.intellij.platform.templates.ProjectTemplateExportable"/>
    <projectTemplateFileProcessor implementation="com.intellij.platform.templates.SystemFileProcessor"/>

    <hectorComponentProvider implementation="com.intellij.codeInsight.daemon.impl.ImportPopupHectorComponentProvider"/>


    <usageFilteringRuleProvider implementation="com.intellij.usages.impl.ImportUsageFilteringRuleProvider"/>
    <applicationService serviceImplementation="com.intellij.usages.impl.ImportFilteringUsageViewSetting"/>

    <!-- this depends on TemplateLanguageConfigurable which isn't registered in LangExtensions, so it should go here as well -->
    <errorQuickFixProvider implementation="com.intellij.psi.templateLanguages.TemplateLanguageErrorQuickFixProvider"/>

    <fileTypeFactory implementation="com.intellij.openapi.file.exclude.EnforcedPlainTextFileTypeFactory"/>
    <applicationService serviceImplementation="com.intellij.openapi.file.exclude.EnforcedPlainTextFileTypeManager"/>
    <projectService serviceImplementation="com.intellij.openapi.file.exclude.ProjectPlainTextFileTypeManager"/>

    <moduleRendererFactory implementation="com.intellij.ide.util.DefaultModuleRendererFactory" order="last,before platform"/>


    <applicationService serviceInterface="com.intellij.openapi.application.IdeUrlTrackingParametersProvider"
                        serviceImplementation="com.intellij.ide.customization.UtmIdeUrlTrackingParametersProvider"
                        overrides="true"/>
    <applicationService serviceInterface="com.intellij.lang.IdeLanguageCustomization"
                        serviceImplementation="com.intellij.ide.java.IntelliJIdeaLanguageCustomization"
                        overrides="true"/>

    <moduleConfigurationEditorProvider implementation="com.intellij.openapi.module.WebModuleConfigurationEditorProvider"/>

    <applicationService serviceInterface="com.intellij.openapi.module.ModuleTypeManager"
                        serviceImplementation="com.intellij.openapi.module.impl.JavaAwareModuleTypeManagerImpl"
                        overrides="true"/>
  </extensions>

  <actions>
    <action id="NewElement" class="com.intellij.ide.actions.NewElementAction"/>

    <group id="OpenProjectGroup">
      <group id="NewElementInMenuGroup" class="com.intellij.ide.actions.NewActionGroup" text="New" popup="true"/>
      <add-to-group group-id="FileOpenGroup" anchor="first"/>
    </group>

    <group>
      <group id="MarkSourceRootGroup" class="com.intellij.ide.projectView.actions.MarkSourceRootActionGroup"/>
      <action id="MarkExcludeRoot" class="com.intellij.ide.projectView.actions.MarkExcludeRootAction"/>
      <action id="MarkAsContentRoot" class="com.intellij.ide.projectView.actions.MarkAsContentRootAction"/>
      <action id="UnmarkRoot" class="com.intellij.ide.projectView.actions.UnmarkRootAction"/>
      <add-to-group group-id="MarkRootGroup"/>
    </group>

    <group id="MarkGeneratedSourceRootGroup">
      <action id="MarkGeneratedSourceRoot" class="com.intellij.ide.projectView.actions.MarkGeneratedSourceRootAction"/>
      <action id="UnmarkGeneratedSourceRoot" class="com.intellij.ide.projectView.actions.UnmarkGeneratedSourceRootAction"/>
      <add-to-group group-id="MarkRootGroup" anchor="after" relative-to-action="MarkSourceRootGroup"/>
    </group>

    <group id="WelcomeScreen.QuickStart.IDEA">
      <action id="WelcomeScreen.CreateNewProject" class="com.intellij.ide.actions.NewProjectAction"
              icon="AllIcons.Welcome.CreateNewProject"/>
      <action id="WelcomeScreen.ImportProject" class="com.intellij.ide.actions.ImportProjectAction"
              icon="AllIcons.ToolbarDecorator.Import"/>
      <action id="WelcomeScreen.OpenProject" class="com.intellij.ide.actions.OpenFileAction" icon="AllIcons.Actions.Menu_open"/>
      <add-to-group group-id="WelcomeScreen.QuickStart" anchor="first"/>
    </group>

    <action id="RerunFailedTests" class="com.intellij.execution.testframework.actions.RerunFailedTestsAction"
            icon="AllIcons.RunConfigurations.RerunFailedTests"/>

    <group>
      <action class="com.intellij.platform.templates.SaveProjectAsTemplateAction" text="Save Project as Template..."/>
      <action id="ManageProjectTemplates" class="com.intellij.platform.templates.ManageProjectTemplatesAction"
              text="Manage Project Templates..."/>
      <add-to-group group-id="ToolsBasicGroup" anchor="after" relative-to-action="SaveFileAsTemplate"/>
    </group>

  </actions>

  <xi:include href="/META-INF/JavaPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
</idea-plugin>
