<!--
  ~ Copyright 2000-2014 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>com.intellij</id>
  <name>IDEA CORE</name>

  <xi:include href="/META-INF/IdeTipsAndTricks.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/idea/RichPlatformPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <module value="com.intellij.modules.java"/>
  <module value="com.intellij.modules.all"/>
  <xi:include href="/idea/JavaActions.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/JavaAnalysisPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/JvmAnalysisPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/JavaIndexingPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/JavaPsiPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/JavaPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/ExternalSystemExtensions.xml" xpointer="xpointer(/idea-plugin/extensions/*)"/>
  <xi:include href="/componentSets/Debugger.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/structuralsearch.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/structuralsearch-java.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/IntentionPowerPack.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/InspectionGadgets.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/ManifestSupport.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/TypeMigration.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/libraryJarUsage.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>

  <application-components>
    <component>
      <implementation-class>com.intellij.openapi.projectRoots.impl.DefaultJdkConfigurator</implementation-class>
      <headless-implementation-class/>
    </component>
  </application-components>

  <project-components>

    <component>
      <implementation-class>com.intellij.execution.testDiscovery.TestDiscoveryIndex</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.execution.scratch.JavaScratchCompilationSupport</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.compiler.CompilerReferenceService</interface-class>
      <implementation-class>com.intellij.compiler.backwardRefs.CompilerReferenceServiceImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.execution.testDiscovery.AffectedTestsInChangeListPainter</implementation-class>
    </component>
  </project-components>

  <extensionPoints>

    <extensionPoint name="junitPatcher"
                    interface="com.intellij.execution.JUnitPatcher"/>

    <extensionPoint name="junitRecognizer"
                    interface="com.intellij.execution.JUnitRecognizer"/>

    <extensionPoint name="unusedDeclarationFixProvider"
                    interface="com.intellij.codeInspection.reference.UnusedDeclarationFixProvider"/>

    <!-- RefMethod -->
    <extensionPoint name="canBeEmpty"
                    interface="com.intellij.openapi.util.Condition"/>

    <extensionPoint name="debugger.codeFragmentFactory"
                    interface="com.intellij.debugger.engine.evaluation.CodeFragmentFactory"/>

    <extensionPoint name="debugger.nodeRenderer"
                    interface="com.intellij.debugger.ui.tree.render.NodeRenderer"/>

    <extensionPoint name="debugger.javaDebugAware"
                    interface="com.intellij.debugger.engine.JavaDebugAware"/>

    <extensionPoint name="debugger.javaBreakpointHandlerFactory"
                    interface="com.intellij.debugger.engine.JavaBreakpointHandlerFactory"/>

    <extensionPoint name="debugger.positionManagerFactory"
                    interface="com.intellij.debugger.PositionManagerFactory"
                    area="IDEA_PROJECT"/>
    <extensionPoint name="debugger.jvmSmartStepIntoHandler"
                    interface="com.intellij.debugger.actions.JvmSmartStepIntoHandler"/>
    <extensionPoint name="debugger.jvmSteppingCommandProvider"
                    interface="com.intellij.debugger.impl.JvmSteppingCommandProvider"/>

    <extensionPoint name="debugger.frameExtraVarsProvider"
                    interface="com.intellij.debugger.engine.FrameExtraVariablesProvider"/>

    <extensionPoint name="debugger.asyncStackTraceProvider"
                    interface="com.intellij.debugger.engine.AsyncStackTraceProvider"/>

    <extensionPoint name="debugger.sourcePositionProvider"
                    interface="com.intellij.debugger.engine.SourcePositionProvider"/>

    <extensionPoint name="debugger.simplePropertyGetterProvider"
                    interface="com.intellij.debugger.engine.SimplePropertyGetterProvider"/>

    <extensionPoint name="debugger.syntheticProvider"
                    interface="com.intellij.debugger.engine.SyntheticTypeComponentProvider"/>

    <extensionPoint name="debugger.extraSteppingFilter"
                    interface="com.intellij.debugger.engine.ExtraSteppingFilter"/>

    <extensionPoint name="debugger.sourcePositionHighlighter"
                    interface="com.intellij.debugger.engine.SourcePositionHighlighter"/>

    <extensionPoint name="debugger.nodeNameAdjuster"
                    interface="com.intellij.debugger.ui.tree.NodeDescriptorNameAdjuster"/>


    <extensionPoint name="compiler.inspectionValidator"
                    interface="com.intellij.openapi.compiler.util.InspectionValidator"
                    area="IDEA_PROJECT"/>

    <extensionPoint name="debuggerEditorTextProvider" beanClass="com.intellij.lang.LanguageExtensionPoint" >
      <with attribute="implementationClass" implements="com.intellij.debugger.impl.EditorTextProvider"/>
    </extensionPoint>

    <!--<extensionPoint name="expectedTypesProvider" interface="com.intellij.codeInsight.ExpectedTypesProviderExtension"/>-->

    <extensionPoint name="library.javaSourceRootDetector" interface="com.intellij.openapi.roots.libraries.ui.RootDetector"/>

  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceInterface="com.intellij.openapi.application.IdeUrlTrackingParametersProvider"
                        serviceImplementation="com.intellij.ide.customization.UtmIdeUrlTrackingParametersProvider"
                        overrides="true"/>
    <applicationService serviceInterface="com.intellij.lang.IdeLanguageCustomization"
                        serviceImplementation="com.intellij.ide.java.IntelliJIdeaLanguageCustomization"
                        overrides="true"/>

    <!--<expectedTypesProvider implementation="com.intellij.codeInsight.JavaExpectedTypesProvider"/>-->

    <editorNotificationProvider implementation="com.intellij.execution.jshell.SnippetEditorDecorator"/>

    <applicationService serviceInterface="com.intellij.debugger.engine.DebuggerUtils"
                        serviceImplementation="com.intellij.debugger.impl.DebuggerUtilsImpl"/>

    <projectService serviceInterface="com.intellij.execution.testDiscovery.JavaAutoRunManager"
                    serviceImplementation="com.intellij.execution.testDiscovery.JavaAutoRunManager"/>

    <applicationService serviceInterface="com.intellij.framework.library.DownloadableLibraryService"
                        serviceImplementation="com.intellij.framework.library.impl.DownloadableLibraryServiceImpl"/>

    <moduleType id="WEB_MODULE" implementationClass="com.intellij.openapi.module.WebModuleType"/>
    <moduleConfigurationEditorProvider implementation="com.intellij.openapi.module.WebModuleConfigurationEditorProvider"/>

    <localInspection groupPath="Java" language="JAVA" shortName="FrequentlyUsedInheritorInspection"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.inheritance.issues" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.compiler.inspection.FrequentlyUsedInheritorInspection"
                     displayName="Class may extend a commonly used base class"/>

    <codeInsight.linkHandler prefix="#javaClass/" handlerClass="com.intellij.codeInsight.daemon.impl.JavaClassTooltipLinkHandler"/>

    <lang.psiStructureViewFactory language="JAVA" implementationClass="com.intellij.lang.java.JavaStructureViewBuilderFactory"/>

    <lang.smartEnterProcessor language="JSPX" implementationClass="com.intellij.codeInsight.completion.XmlSmartEnterProcessor"/>

    <iconProvider implementation="com.intellij.execution.testframework.TestIconProvider" id="testIcons"/>

    <stacktrace.fold substring="at java.awt.EventDispatchThread"/>
    <stacktrace.fold substring="at java.awt.Window.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.awt.Container.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.awt.LightweightDispatcher."/>
    <stacktrace.fold substring="at java.awt.Component.dispatchEvent("/>
    <stacktrace.fold substring="at java.awt.event.InvocationEvent.dispatch("/>
    <stacktrace.fold substring="at java.awt.EventQueue"/>
    <stacktrace.fold substring="at java.awt.Component.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.awt.Container.processEvent("/>
    <stacktrace.fold substring="at javax.swing.JComponent.processMouseEvent("/>
    <stacktrace.fold substring="at javax.swing.plaf.basic.BasicMenuItemUI"/>
    <stacktrace.fold substring="at java.awt.Component.processMouseEvent("/>
    <stacktrace.fold substring="at javax.swing.AbstractButton.doClick("/>
    <stacktrace.fold substring="at java.awt.Component.processEvent("/>
    <stacktrace.fold substring="at java.awt.Container.dispatchEventImpl("/>
    <stacktrace.fold substring="at javax.swing.DefaultButtonModel.fireActionPerformed("/>
    <stacktrace.fold substring="at javax.swing.DefaultButtonModel.setPressed("/>
    <stacktrace.fold substring="at javax.swing.AbstractButton.fireActionPerformed("/>
    <stacktrace.fold substring="at javax.swing.AbstractButton$Handler.actionPerformed("/>
    <stacktrace.fold substring="at java.security.AccessControlContext$1.doIntersectionPrivilege("/>
    <stacktrace.fold substring="at java.awt.EventQueue.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.security.AccessController.doPrivileged(Native Method)"/>
    <stacktrace.fold substring="at java.security.ProtectionDomain$1.doIntersectionPrivilege("/>
    <stacktrace.fold substring="at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege("/>
    <stacktrace.fold substring="at com.jgoodies.binding.beans.ExtendedPropertyChangeSupport.firePropertyChange0("/>
    <stacktrace.fold substring="at javax.swing.plaf.basic.BasicComboPopup$Handler.mouseReleased("/>

    <stacktrace.fold substring="at java.util.stream.ReferencePipeline$"/>
    <stacktrace.fold substring="at java.util.Spliterators$"/>
    <stacktrace.fold substring="at java.util.stream.AbstractPipeline.evaluate("/>
    <stacktrace.fold substring="at java.util.stream.AbstractPipeline.copyInto("/>
    <stacktrace.fold substring="at java.util.stream.AbstractPipeline.wrapAndCopyInto("/>
    <stacktrace.fold substring="at java.util.stream.ReduceOps$"/>

    <stacktrace.fold substring="java.lang.reflect.Method.invoke("/>
    <stacktrace.fold substring="java.lang.reflect.Constructor.newInstance("/>
    <stacktrace.fold substring="at java.base/jdk.internal"/>
    <stacktrace.fold substring="at sun.reflect."/>
    <stacktrace.fold substring="at java.rmi."/>
    <stacktrace.fold substring="at sun.rmi."/>
    <stacktrace.fold substring="at com.sun.proxy.$Proxy"/>
    <stacktrace.fold substring="at com.intellij.rt.execution."/>

    <debuggerEditorTextProvider language="JAVA" implementationClass="com.intellij.debugger.impl.JavaEditorTextProviderImpl"/>


    <structureViewBuilder key="CLASS" factoryClass="com.intellij.ide.highlighter.JavaClsStructureViewBuilderProvider"/>

    <patterns.patternClass className="com.intellij.patterns.PsiJavaPatterns" alias="java"/>

    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.UsageFavoriteNodeProvider"/>

    <configurationType implementation="com.intellij.execution.applet.AppletConfigurationType"/>
    <configurationProducer implementation="com.intellij.execution.applet.AppletConfigurationProducer"/>
    <configurationType implementation="com.intellij.execution.application.ApplicationConfigurationType"/>
    <configurationType implementation="com.intellij.execution.jar.JarApplicationConfigurationType"/>
    <configurationType implementation="com.intellij.execution.scratch.JavaScratchConfigurationType"/>
    <runConfigurationProducer implementation="com.intellij.execution.jar.JarApplicationConfigurationProducer"/>
    <runConfigurationProducer implementation="com.intellij.execution.application.ApplicationConfigurationProducer"/>
    <runConfigurationProducer implementation="com.intellij.execution.scratch.JavaScratchConfigurationProducer"/>
    <configurationType implementation="com.intellij.execution.remote.RemoteConfigurationType"/>

    <externalSystem.runConfigurationImporter implementation="com.intellij.execution.application.JavaApplicationRunConfigurationImporter"/>
    <externalSystem.runConfigurationImporter implementation="com.intellij.execution.remote.JavaRemoteDebugRunConfigurationImporter"/>

    <runLineMarkerContributor language="JVM"
                              order="before applicationRunLineMarkerProvider"
                              implementationClass="com.intellij.execution.application.JvmApplicationRunLineMarkerContributor"/>
    <runLineMarkerContributor language="JAVA" id="applicationRunLineMarkerProvider"
                              implementationClass="com.intellij.execution.application.ApplicationRunLineMarkerProvider"/>

    <javaExpressionSurrounder implementation="com.intellij.debugger.codeinsight.JavaWithRuntimeCastSurrounder"/>

    <exceptionFilter implementation="com.intellij.execution.filters.ExceptionBaseFilterFactory"/>
    <exceptionFilter implementation="com.intellij.execution.filters.ExceptionExFilterFactory"/>

    <internalFileTemplate name="Class"/>
    <internalFileTemplate name="Interface"/>
    <internalFileTemplate name="Enum"/>
    <internalFileTemplate name="AnnotationType" subject="@interface"/>
    <internalFileTemplate name="package-info"/>
    <internalFileTemplate name="module-info"/>

    <refactoring.copyHandler implementation="com.intellij.refactoring.copy.CopyFilesOrDirectoriesHandler" id="copyJavaFilesOrPackages"/>

    <applicationService serviceInterface="com.intellij.codeInsight.TargetElementUtil"
                        serviceImplementation="com.intellij.codeInsight.TargetElementUtil"/>

    <elementLookupRenderer implementation="com.intellij.codeInsight.lookup.impl.JavaElementLookupRenderer"/>

    <projectViewPane implementation="com.intellij.ide.projectView.impl.PackageViewPane"/>

    <resolveScopeEnlarger implementation="com.intellij.ide.scratch.ScratchResolveScopeEnlarger"/>

    <xdebugger.debuggerSupport implementation="com.intellij.debugger.ui.JavaDebuggerSupport"/>
    <xdebugger.settings implementation="com.intellij.debugger.settings.JavaDebuggerSettings"/>

    <projectConfigurable parentId="project.propDebugger" instance="com.intellij.debugger.settings.CaptureConfigurable"/>

    <xdebugger.localAttachDebuggerProvider implementation="com.intellij.debugger.impl.attach.JavaAttachDebuggerProvider"/>
    <xdebugger.localAttachDebuggerProvider implementation="com.intellij.debugger.impl.attach.JavaSAAttachDebuggerProvider"/>

    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaMethodBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaWildcardMethodBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaFieldBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaExceptionBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType"/>
    <debugger.jvmSmartStepIntoHandler implementation="com.intellij.debugger.actions.JavaSmartStepIntoHandler" order="last"/>
    <debugger.simplePropertyGetterProvider implementation="com.intellij.debugger.engine.JavaSimpleGetterProvider"/>
    <debugger.syntheticProvider implementation="com.intellij.debugger.engine.DefaultSyntheticProvider"/>
    <debugger.sourcePositionProvider implementation="com.intellij.debugger.engine.DefaultSourcePositionProvider" order="last"/>
    <debugger.sourcePositionHighlighter implementation="com.intellij.debugger.engine.JavaSourcePositionHighlighter"/>
    <java.elementFinder implementation="com.intellij.debugger.impl.AlternativeJreClassFinder" order="last"/>
    <additionalLibraryRootsProvider implementation="com.intellij.execution.AlternativeSdkRootsProvider"/>
    <debugger.asyncStackTraceProvider implementation="com.intellij.debugger.ui.breakpoints.StackCapturingLineBreakpoint$CaptureAsyncStackTraceProvider"/>

    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$BooleanRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$ByteRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$CharacterRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$ShortRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$IntegerRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$LongRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$FloatRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$DoubleRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.ColorObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.ImageObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.IconObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.GraphicsObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.BinaryRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.TimestampRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.ByteArrayAsStringRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.FileObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.StackTraceElementObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.ClassObjectRenderer"/>

    <debugger.nodeNameAdjuster implementation="com.intellij.debugger.ui.impl.watch.FieldOuterLocalNameAdjuster"/>

    <programRunner id="defaultDebugRunner" implementation="com.intellij.debugger.impl.GenericDebuggerRunner" order="last"/>
    <programRunner implementation="com.intellij.debugger.impl.attach.JavaAttachDebuggerProvider$ProcessAttachDebuggerRunner" order="last"/>
    <programRunner implementation="com.intellij.execution.jar.JarApplicationDebuggerRunner"/>

    <iconLayerProvider implementation="com.intellij.compiler.CompilerIconLayerProvider"/>
    <fileIconPatcher implementation="com.intellij.ide.JavaExcludedFileIconPatcher" order="after javaFileIconPatcher"/>
    <directoryIndexExcludePolicy implementation="com.intellij.openapi.roots.impl.ExcludeCompilerOutputPolicy"/>
    <problemFileHighlightFilter implementation="com.intellij.codeInsight.problems.DefaultProblemFileHighlightFilter"/>
    <macro implementation="com.intellij.ide.macro.OutputPathMacro"/>

    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.ProjectStructureConfigurable"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ui.configuration.ProjectSettingsService"
                    serviceImplementation="com.intellij.openapi.roots.ui.configuration.IdeaProjectSettingsService"/>

    <projectWizard.projectCategory implementation="com.intellij.ide.projectWizard.ModuleTypeCategory$JavaSE"/>

    <projectStructureDetector implementation="com.intellij.ide.util.projectWizard.importSources.impl.JavaProjectStructureDetector" order="first"/>

    <applicationService serviceImplementation="com.intellij.execution.JavaRunConfigurationExtensionManager"/>
    <runConfigurationExtension implementation="com.intellij.execution.testDiscovery.TestDiscoveryExtension"/>

    <completion.contributor language="JAVA" id="methodsChainsCompletionContributor" order="first"
                            implementationClass="com.intellij.compiler.chainsSearch.completion.MethodChainCompletionContributor"/>
    <weigher order="after mostUsed" key="completion" id="methodChains"
             implementationClass="com.intellij.compiler.chainsSearch.completion.MethodChainWeigher"/>

    <projectTemplate projectType="JAVA_MODULE" templatePath="resources/projectTemplates/Java/Command_Line_App.zip"/>
    <projectOpenProcessor implementation="com.intellij.platform.PlatformProjectOpenProcessor" order="last"/>
    <projectService serviceInterface="com.intellij.platform.ProjectBaseDirectory"
                    serviceImplementation="com.intellij.platform.ProjectBaseDirectory"/>

    <codeInsight.linkHandler prefix="#assignment/" handlerClass="com.intellij.codeInsight.intention.impl.config.AssignmentTooltipLinkHandler"/>
    <library.javaSourceRootDetector implementation="com.intellij.openapi.roots.ui.configuration.LibraryJavaSourceRootDetector"/>

    <importTestOutput implementation="com.intellij.execution.AntTestContentHandler$AntTestOutputExtension"/>

    <library.type implementation="com.intellij.jarRepository.RepositoryLibraryType"/>
    <postStartupActivity implementation="com.intellij.jarRepository.RepositoryLibrarySynchronizer"/>
    <projectConfigurable groupId="build" groupWeight="120" instance="com.intellij.jarRepository.settings.RemoteRepositoriesConfigurable" order="last"/>

    <scratch.rootType implementation="com.intellij.execution.jshell.JShellRootType"/>
    <scratch.creationHelper language="JAVA" implementationClass="com.intellij.ide.actions.JavaScratchFileCreationHelper" />

    <intentionAction>
      <className>com.intellij.testIntegration.createTest.GenerateMissedTestsAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.testIntegration.createTest.CreateTestAction</className>
      <category>Java/Declaration</category>
    </intentionAction>

    <applicationService serviceInterface="com.intellij.profile.codeInspection.InspectionProfileManager"
                        serviceImplementation="com.intellij.profile.codeInspection.JavaAwareInspectionProfileManager"/>
    <applicationService serviceInterface="com.intellij.psi.impl.source.codeStyle.IndentHelper"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.JavaIndentHelper"
                        overrides="true"/>
    <applicationService serviceInterface="com.intellij.openapi.module.ModuleTypeManager"
                        serviceImplementation="com.intellij.openapi.module.impl.JavaAwareModuleTypeManagerImpl"/>
    <projectService serviceInterface="com.intellij.ide.projectView.impl.nodes.ProjectViewDirectoryHelper"
                    serviceImplementation="com.intellij.ide.projectView.impl.JavaProjectViewDirectoryHelper"/>
    <projectService serviceInterface="com.intellij.usages.impl.rules.DirectoryGroupingRule"
                    serviceImplementation="com.intellij.usages.impl.rules.PackageGroupingRule"/>
    <projectService serviceInterface="com.intellij.psi.impl.file.PsiDirectoryFactory"
                    serviceImplementation="com.intellij.psi.impl.file.PsiJavaDirectoryFactory"/>
    <projectService serviceInterface="com.intellij.refactoring.RefactoringFactory"
                    serviceImplementation="com.intellij.refactoring.openapi.impl.JavaRefactoringFactoryImpl"/>
    <projectService serviceInterface="com.intellij.ide.todo.nodes.TodoTreeHelper"
                    serviceImplementation="com.intellij.ide.todo.nodes.TodoJavaTreeHelper"/>
  </extensions>

  <actions>
    <action id="ShowProjectStructureSettings" class="com.intellij.ide.actions.ShowStructureSettingsAction"
            icon="AllIcons.General.ProjectStructure">
      <add-to-group group-id="FileMainSettingsGroup" anchor="after" relative-to-action="ShowSettings"/>
      <add-to-group group-id="MainToolBarSettings" anchor="after" relative-to-action="ShowSettings"/>
      <add-to-group group-id="NavBarToolBar" anchor="last"/>
    </action>
    <action id="TemplateProjectStructure" class="com.intellij.ide.actions.TemplateProjectStructureAction">
      <add-to-group group-id="FileSettingsGroup" anchor="last"/>
    </action>
    <action id="ShowSiblings" class="com.intellij.codeInsight.hint.actions.ShowSiblingsAction">
      <add-to-group group-id="QuickActions" anchor="after" relative-to-action="QuickImplementations"/>
    </action>
    <action id="ShowRecentTests" class="com.intellij.testIntegration.ShowRecentTests">
      <keyboard-shortcut first-keystroke="control shift SEMICOLON" keymap="$default"/>
    </action>

    <action class="com.intellij.execution.testDiscovery.actions.ShowAffectedTestsAction" id="ShowDiscoveredTests" text="Show Affected Tests">
      <add-to-group group-id="RunMenu" anchor="before" relative-to-action="DebugMainMenu"/>
      <add-to-group group-id="ChangesViewPopupMenu" anchor="last"/>
    </action>

    <action class="com.intellij.execution.testDiscovery.actions.FindUnusedTestDataAction" id="FindUsedTestData"
            text="Find Unused Test Data" internal="true"/>

    <action id="JShell.Console"
            class="com.intellij.execution.jshell.LaunchJShellConsoleAction"
            text="JShell Console..." description="Launch JShell Console">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </action>

  </actions>

</idea-plugin>
