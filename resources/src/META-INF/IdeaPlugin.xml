<!--
  ~ Copyright 2000-2014 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin version="2" xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>com.intellij</id>
  <name>IDEA CORE</name>

  <xi:include href="/META-INF/IdeTipsAndTricks.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/idea/RichPlatformPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <module value="com.intellij.modules.java"/>
  <module value="com.intellij.modules.all"/>
  <xi:include href="/idea/JavaActions.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/ExternalSystemExtensions.xml" xpointer="xpointer(/idea-plugin/extensions/*)"/>
  <xi:include href="/componentSets/Debugger.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/structuralsearch.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/structuralsearch-java.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/IntentionPowerPack.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/InspectionGadgets.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/ManifestSupport.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/TypeMigration.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/libraryJarUsage.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>

  <application-components>
    <component>
      <interface-class>com.intellij.openapi.vfs.jrt.JrtFileSystem</interface-class>
      <implementation-class>com.intellij.openapi.vfs.impl.jrt.JrtFileSystemImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.util.xml.impl.JavaDomApplicationComponent</implementation-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <implementation-class>com.intellij.compiler.classFilesIndex.api.index.ClassFilesIndexFeaturesHolder</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.psi.RefResolveService</interface-class>
      <implementation-class>com.intellij.psi.refResolve.RefResolveServiceImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.execution.testDiscovery.TestDiscoveryIndex</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.execution.scratch.JavaScratchCompilationSupport</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.hints.ParameterHintsPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.compiler.CompilerReferenceService</interface-class>
      <implementation-class>com.intellij.compiler.backwardRefs.CompilerReferenceServiceImpl</implementation-class>
    </component>
  </project-components>

  <extensionPoints>
    <extensionPoint name="codeInsight.changeVariableTypeQuickFixProvider"
                    interface="com.intellij.codeInsight.quickfix.ChangeVariableTypeQuickFixProvider"/>
    <extensionPoint name="codeInsight.implementedAtRuntime"
                    interface="com.intellij.codeInspection.inheritance.ImplementedAtRuntimeCondition"/>
    <extensionPoint name="conversion.rule"
                    interface="com.intellij.refactoring.typeMigration.rules.TypeConversionRule"/>

    <extensionPoint name="overrideImplementsAnnotationsHandler"
                    interface="com.intellij.codeInsight.generation.OverrideImplementsAnnotationsHandler"/>
    <extensionPoint name="generateAccessorProvider"
                    interface="com.intellij.util.NotNullFunction"/>

    <extensionPoint name="junitPatcher"
                    interface="com.intellij.execution.JUnitPatcher"/>

    <extensionPoint name="junitRecognizer"
                    interface="com.intellij.execution.JUnitRecognizer"/>

    <extensionPoint name="i18nInspectionTool"
                    interface="com.intellij.codeInspection.FileCheckingInspection"/>
    <extensionPoint name="invalidPropertyKeyInspectionTool"
                    interface="com.intellij.codeInspection.FileCheckingInspection"/>
    <extensionPoint name="java15InspectionTool"
                    interface="com.intellij.codeInspection.FileCheckingInspection"/>

    <extensionPoint name="deadCode"
                    interface="com.intellij.codeInspection.reference.EntryPoint"/>
    <extensionPoint name="predefinedMigrationMapProvider"
                    interface="com.intellij.refactoring.migration.PredefinedMigrationProvider"/>
    <extensionPoint name="unusedDeclarationFixProvider"
                    interface="com.intellij.codeInspection.reference.UnusedDeclarationFixProvider"/>

    <extensionPoint name="canBeFinal"
                    interface="com.intellij.codeInspection.canBeFinal.CanBeFinalHandler"/>
    <!-- PsiMember -->
    <extensionPoint name="javaDocNotNecessary"
                    interface="com.intellij.openapi.util.Condition"/>

    <!-- RefMethod -->
    <extensionPoint name="canBeEmpty"
                    interface="com.intellij.openapi.util.Condition"/>

    <extensionPoint name="safeDelete.importSearcher"
                    interface="com.intellij.refactoring.safeDelete.ImportSearcher"/>

    <extensionPoint name="visibility"
                    interface="com.intellij.codeInspection.visibility.VisibilityExtension"/>

    <extensionPoint name="methodImplementor"
                    interface="com.intellij.codeInsight.MethodImplementor"/>

    <extensionPoint name="debugger.codeFragmentFactory"
                    interface="com.intellij.debugger.engine.evaluation.CodeFragmentFactory"/>

    <extensionPoint name="debugger.nodeRenderer"
                    interface="com.intellij.debugger.ui.tree.render.NodeRenderer"/>

    <extensionPoint name="debugger.javaDebugAware"
                    interface="com.intellij.debugger.engine.JavaDebugAware"/>

    <extensionPoint name="debugger.javaBreakpointHandlerFactory"
                    interface="com.intellij.debugger.engine.JavaBreakpointHandlerFactory"/>

    <extensionPoint name="debugger.positionManagerFactory"
                    interface="com.intellij.debugger.PositionManagerFactory"
                    area="IDEA_PROJECT"/>
    <extensionPoint name="debugger.jvmSmartStepIntoHandler"
                    interface="com.intellij.debugger.actions.JvmSmartStepIntoHandler"/>
    <extensionPoint name="debugger.jvmSteppingCommandProvider"
                    interface="com.intellij.debugger.impl.JvmSteppingCommandProvider"/>

    <extensionPoint name="debugger.frameExtraVarsProvider"
                    interface="com.intellij.debugger.engine.FrameExtraVariablesProvider"/>

    <extensionPoint name="debugger.sourcePositionProvider"
                    interface="com.intellij.debugger.engine.SourcePositionProvider"/>

    <extensionPoint name="debugger.simpleGetterProvider"
                    interface="com.intellij.debugger.engine.SimpleGetterProvider"/>

    <extensionPoint name="debugger.simplePropertyGetterProvider"
                    interface="com.intellij.debugger.engine.SimplePropertyGetterProvider"/>

    <extensionPoint name="debugger.syntheticProvider"
                    interface="com.intellij.debugger.engine.SyntheticTypeComponentProvider"/>

    <extensionPoint name="debugger.extraSteppingFilter"
                    interface="com.intellij.debugger.engine.ExtraSteppingFilter"/>

    <extensionPoint name="debugger.sourcePositionHighlighter"
                    interface="com.intellij.debugger.engine.SourcePositionHighlighter"/>

    <extensionPoint name="debugger.nodeNameAdjuster"
                    interface="com.intellij.debugger.ui.tree.NodeDescriptorNameAdjuster"/>


    <extensionPoint name="allOverridingMethodsSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="annotatedElementsSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="annotatedPackagesSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="classInheritorsSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="deepestSuperMethodsSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="directClassInheritorsSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="methodReferencesSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="overridingMethodsSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="superMethodsSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="allClassesSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="functionalExpressionSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="classesWithAnnotatedMembersSearch" interface="com.intellij.util.QueryExecutor"/>

    <extensionPoint name="hierarchy.indexer" interface="com.intellij.psi.stubsHierarchy.StubHierarchyIndexer"/>

    <extensionPoint name="compiler.inspectionValidator"
                    interface="com.intellij.openapi.compiler.util.InspectionValidator"
                    area="IDEA_PROJECT"/>

    <extensionPoint name="javaExpressionSurrounder"
                    interface="com.intellij.codeInsight.generation.surroundWith.JavaExpressionSurrounder"/>

    <extensionPoint name="customPropertyScopeProvider" interface="com.intellij.psi.impl.search.CustomPropertyScopeProvider"/>

    <extensionPoint name="testFramework" interface="com.intellij.testIntegration.TestFramework"/>

    <extensionPoint name="projectTaskRunner" interface="com.intellij.task.ProjectTaskRunner"/>

    <extensionPoint name="unscrambleSupport" interface="com.intellij.unscramble.UnscrambleSupport"/>

    <extensionPoint name="javaMainMethodProvider" interface="com.intellij.codeInsight.runner.JavaMainMethodProvider"/>

    <extensionPoint name="importFilter" interface="com.intellij.codeInsight.ImportFilter"/>

    <extensionPoint name="debuggerClassFilterProvider" interface="com.intellij.ui.classFilter.DebuggerClassFilterProvider"/>

    <extensionPoint name="debuggerEditorTextProvider" beanClass="com.intellij.lang.LanguageExtensionPoint" >
      <with attribute="implementationClass" implements="com.intellij.debugger.impl.EditorTextProvider"/>
    </extensionPoint>

    <extensionPoint name="codeStyle.ReferenceAdjuster" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.codeStyle.ReferenceAdjuster"/>
    </extensionPoint>

    <extensionPoint name="javadocTagInfo" area="IDEA_PROJECT" interface="com.intellij.psi.javadoc.JavadocTagInfo"/>
    <extensionPoint name="customJavadocTagProvider" interface="com.intellij.psi.javadoc.CustomJavadocTagProvider"/>

    <extensionPoint name="refactoring.introduceParameterMethodUsagesProcessor" interface="com.intellij.refactoring.introduceParameter.IntroduceParameterMethodUsagesProcessor"/>

    <extensionPoint name="annotationSupport" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.PsiAnnotationSupport"/>
    </extensionPoint>

    <extensionPoint name="constantExpressionEvaluator" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.impl.ConstantExpressionEvaluator"/>
    </extensionPoint>

    <extensionPoint name="expressionConverter" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.impl.ExpressionConverter"/>
    </extensionPoint>

    <extensionPoint name="refactoring.pullUpHelperFactory" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.memberPullUp.PullUpHelperFactory"/>
    </extensionPoint>

    <extensionPoint name="classTypePointerFactory" interface="com.intellij.psi.ClassTypePointerFactory"/>

    <!--<extensionPoint name="expectedTypesProvider" interface="com.intellij.codeInsight.ExpectedTypesProviderExtension"/>-->

    <extensionPoint name="java.elementFinder" area="IDEA_PROJECT" interface="com.intellij.psi.PsiElementFinder"/>
    <extensionPoint name="java.shortNamesCache" area="IDEA_PROJECT" interface="com.intellij.psi.search.PsiShortNamesCache"/>

    <extensionPoint name="allowedApiFilter" interface="com.intellij.psi.impl.AllowedApiFilterExtension"/>

    <extensionPoint name="generation.topLevelFactory" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.JVMElementFactoryProvider"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.createFieldFromUsageHelper" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.daemon.impl.quickfix.CreateFieldFromUsageHelper"/>
    </extensionPoint>

    <extensionPoint name="generation.toStringClassFilter" interface="org.jetbrains.generate.tostring.GenerateToStringClassFilter"/>

    <extensionPoint name="getterSetterProvider" interface="com.intellij.codeInsight.generation.GetterSetterPrototypeProvider"/>

    <extensionPoint name="library.dependencyScopeSuggester" interface="com.intellij.openapi.roots.LibraryDependencyScopeSuggester"/>
    <extensionPoint name="projectModelModifier" interface="com.intellij.openapi.roots.JavaProjectModelModifier"
                    area="IDEA_PROJECT"/>

    <extensionPoint name="refactoring.safeDelete.JavaSafeDeleteDelegate" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.safeDelete.JavaSafeDeleteDelegate"/>
    </extensionPoint>

    <extensionPoint name="constructorBodyGenerator"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.generation.ConstructorBodyGenerator"/>
    </extensionPoint>

    <extensionPoint name="refactoring.moveInnerHandler" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.move.moveInner.MoveInnerHandler"/>
    </extensionPoint>

    <extensionPoint name="refactoring.moveClassToInnerHandler"
                    interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveClassToInnerHandler"/>

    <extensionPoint name="refactoring.moveAllClassesInFileHandler"
                    interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveAllClassesInFileHandler"/>

    <extensionPoint name="refactoring.moveClassHandler" interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveClassHandler"/>

    <extensionPoint name="refactoring.moveMemberHandler" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.move.moveMembers.MoveMemberHandler"/>
    </extensionPoint>

    <extensionPoint name="testGenerator"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.testIntegration.createTest.TestGenerator"/>
    </extensionPoint>

    <extensionPoint name="encapsulateFields.Helper" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.encapsulateFields.EncapsulateFieldHelper"/>
    </extensionPoint>

    <extensionPoint name="psi.classFileDecompiler" interface="com.intellij.psi.compiled.ClassFileDecompilers$Decompiler"/>
    <!-- deprecated API -->
    <!--suppress DeprecatedClassUsageInspection -->
    <extensionPoint name="psi.clsCustomNavigationPolicy" interface="com.intellij.psi.impl.compiled.ClsCustomNavigationPolicy"/>

    <extensionPoint name="codeInsight.externalLibraryResolver" interface="com.intellij.codeInsight.daemon.quickFix.ExternalLibraryResolver"/>

    <extensionPoint name="vetoSPICondition" interface="com.intellij.openapi.util.Condition"/>

    <extensionPoint name="hierarchy.referenceProcessor" interface="com.intellij.ide.hierarchy.call.CallReferenceProcessor"/>

    <extensionPoint name="lang.psiAugmentProvider" interface="com.intellij.psi.augment.PsiAugmentProvider"/>
    <extensionPoint name="lang.psiTypeAnnotationModifier" interface="com.intellij.psi.augment.TypeAnnotationModifier"/>

    <extensionPoint name="custom.exception.handler" interface="com.intellij.codeInsight.CustomExceptionHandler"/>

    <extensionPoint name="refactoring.moveInnerClassUsagesHandler" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.move.moveInner.MoveInnerClassUsagesHandler"/>
    </extensionPoint>

    <extensionPoint name="library.javaSourceRootDetector" interface="com.intellij.openapi.roots.libraries.ui.RootDetector"/>

    <extensionPoint name="documentationDelegateProvider" interface="com.intellij.codeInsight.javadoc.DocumentationDelegateProvider"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <lang.syntaxHighlighterFactory language="JAVA" implementationClass="com.intellij.lang.java.JavaSyntaxHighlighterFactory"/>
    <syntaxHighlighter id="java.class" key="CLASS" factoryClass="com.intellij.lang.java.JavaSyntaxHighlighterFactory"/>

    <constantExpressionEvaluator language="JAVA" implementationClass="com.intellij.psi.impl.PsiExpressionEvaluator" />
    <annotationSupport language="JAVA" implementationClass="com.intellij.psi.impl.source.tree.java.JavaAnnotationSupport" />

    <codeInsight.unresolvedReferenceQuickFixProvider
        implementation="com.intellij.codeInsight.daemon.impl.quickfix.DefaultQuickFixProvider"/>

    <codeInsight.changeVariableTypeQuickFixProvider
        implementation="com.intellij.codeInsight.daemon.impl.quickfix.VariableTypeQuickFixProvider"/>

    <overrideImplementsAnnotationsHandler implementation="com.intellij.codeInsight.generation.OverrideImplementsAnnotationsHandlerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.module.ModuleTypeManager"
                        serviceImplementation="com.intellij.openapi.module.impl.JavaAwareModuleTypeManagerImpl"/>
    <errorOptionsProvider instance="com.intellij.profile.codeInspection.ui.JavaErrorOptionsProvider"/>
    <autoImportOptionsProvider instance="com.intellij.application.options.editor.JavaAutoImportOptions"/>
    <codeFoldingOptionsProvider instance="com.intellij.application.options.editor.JavaCodeFoldingOptionsProvider"/>

    <expressionConverter implementationClass="com.intellij.refactoring.introduceParameter.JavaExpressionConverter" language="JAVA"/>

    <codeInsight.createFieldFromUsageHelper language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.quickfix.JavaCreateFieldFromUsageHelper"/>

    <codeInsight.containerProvider implementation="com.intellij.codeInsight.JavaContainerProvider" id="JAVA"/>

    <!--<expectedTypesProvider implementation="com.intellij.codeInsight.JavaExpectedTypesProvider"/>-->

    <customPropertyScopeProvider implementation="com.intellij.psi.impl.search.SimpleAccessorScopeProvider"/>

    <referencesSearch implementation="com.intellij.psi.impl.search.PsiAnnotationMethodReferencesSearcher"/>
    <referencesSearch implementation="com.intellij.psi.impl.search.ConstructorReferencesSearcher"/>
    <referencesSearch implementation="com.intellij.psi.impl.search.SPIReferencesSearcher"/>
    <referencesSearch implementation="com.intellij.psi.impl.search.SimpleAccessorReferenceSearcher"/>
    <referencesSearch implementation="com.intellij.psi.impl.search.VariableInIncompleteCodeSearcher"/>

    <allClassesSearch implementation="com.intellij.psi.impl.search.AllClassesSearchExecutor"/>

    <superMethodsSearch implementation="com.intellij.psi.impl.search.MethodSuperSearcher"/>
    <annotatedElementsSearch implementation="com.intellij.psi.impl.search.AnnotatedElementsSearcher"/>
    <annotatedPackagesSearch implementation="com.intellij.psi.impl.search.AnnotatedPackagesSearcher"/>
    <directClassInheritorsSearch implementation="com.intellij.psi.impl.search.JavaDirectInheritorsSearcher"/>
    <directClassInheritorsSearch implementation="com.intellij.psi.impl.search.StubHierarchyInheritorSearcher"/>
    <classInheritorsSearch implementation="com.intellij.psi.impl.search.JavaClassInheritorsSearcher"/>
    <overridingMethodsSearch implementation="com.intellij.psi.impl.search.JavaOverridingMethodsSearcher"/>
    <allOverridingMethodsSearch implementation="com.intellij.psi.impl.search.JavaAllOverridingMethodsSearcher"/>
    <methodReferencesSearch implementation="com.intellij.psi.impl.search.MethodUsagesSearcher"/>
    <deepestSuperMethodsSearch implementation="com.intellij.psi.impl.search.MethodDeepestSuperSearcher"/>
    <classesWithAnnotatedMembersSearch implementation="com.intellij.psi.impl.search.ClassesWithAnnotatedMembersSearcher"/>

    <definitionsScopedSearch implementation="com.intellij.codeInsight.navigation.MethodImplementationsSearch"/>
    <definitionsScopedSearch implementation="com.intellij.codeInsight.navigation.ClassImplementationsSearch"/>

    <functionalExpressionSearch implementation="com.intellij.psi.impl.search.JavaFunctionalExpressionSearcher"/>

    <fileTypeFactory implementation="com.intellij.openapi.fileTypes.impl.JavaFileTypeFactory"/>

    <lookup.actionProvider implementation="com.intellij.codeInsight.completion.ImportStaticLookupActionProvider" id="importStatic"/>
    <lookup.actionProvider implementation="com.intellij.codeInsight.completion.ExcludeFromCompletionLookupActionProvider"
                           id="excludeFromCompletion" order="last"/>

    <completion.confidence language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaReferenceCompletionConfidence"/>
    <completion.confidence language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavadocCompletionConfidence" id="javadoc" order="before javaComments"/>
    <completion.confidence language="JAVA" implementationClass="com.intellij.codeInsight.completion.SkipAutopopupInComments" id="javaComments"/>
    <completion.confidence language="JAVA" implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.JavaReflectionCompletionConfidence" id="javaReflection" />
    <completion.confidence language="JAVA" implementationClass="com.intellij.codeInsight.completion.SkipAutopopupInStrings" id="javaSkipAutopopupInStrings"/>

    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.RefactoringCompletionContributor" id="javaRefactoring"
                            order="first"/>

    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaNoVariantsDelegator" id="javaBasic2ClassName"
                            order="before javaMemberName, before javaLegacy, after liveTemplates"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInspection.magicConstant.MagicCompletionContributor" id="magicCompletion"
                            order="after javaBasic2ClassName"/>
    <completion.contributor language="XML" implementationClass="com.intellij.codeInsight.completion.XmlBasicToClassNameDelegator" id="basic2ClassName"
                            order="after xml"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaCompletionContributor" id="javaLegacy"
                            order="last, before legacy, before default, before javaClassName"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.JavaClassReferenceCompletionContributor"
                            id="javaClassReference" order="before legacy"/>

    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.JavaMethodMergingContributor" id="methodMerger"
                            order="before javaLegacy, before default"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaMemberNameCompletionContributor" id="javaMemberName"
                            order="before javaOverride"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.JavaClassNameCompletionContributor" id="javaClassName"
                            order="last, before default"/>

    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaDocCompletionContributor" id="javadoc"
                            order="last, before javaLegacy, before wordCompletion"/>

    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.NullSmartCompletionContributor" id="smartNull"
                            order="last, before javaSmart"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaSmartCompletionContributor" id="javaSmart"
                            order="last, before default"/>

    <lookup.charFilter implementation="com.intellij.codeInsight.completion.JavaCharFilter" id="java"/>

    <lang.elementManipulator forClass="com.intellij.psi.PsiLiteralExpression"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.StringLiteralManipulator"/>
    <lang.elementManipulator forClass="com.intellij.psi.javadoc.PsiDocTag"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.PsiDocTagValueManipulator"/>

    <classTypePointerFactory implementation="com.intellij.psi.impl.smartPointers.PsiClassReferenceTypePointerFactory"/>

    <applicationService serviceInterface="com.intellij.util.xml.converters.values.ClassValueConverter"
                    serviceImplementation="com.intellij.util.xml.converters.ClassValueConverterImpl"/>

    <applicationService serviceInterface="com.intellij.util.xml.converters.values.ClassArrayConverter"
                    serviceImplementation="com.intellij.util.xml.converters.ClassArrayConverterImpl"/>

    <applicationService serviceInterface="com.intellij.debugger.engine.DebuggerUtils"
                        serviceImplementation="com.intellij.debugger.impl.DebuggerUtilsImpl"/>

    <applicationService serviceInterface="com.intellij.codeInspection.reference.RefJavaUtil"
                        serviceImplementation="com.intellij.codeInspection.reference.RefJavaUtilImpl"/>
    <applicationService serviceInterface="com.intellij.psi.EmptySubstitutor"
                        serviceImplementation="com.intellij.psi.impl.EmptySubstitutorImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.intention.QuickFixFactory"
                        serviceImplementation="com.intellij.codeInsight.intention.impl.config.QuickFixFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.psi.impl.source.codeStyle.IndentHelper"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.JavaIndentHelper"
                        overrides="true"/>

    <applicationService serviceInterface="com.intellij.codeInsight.TestFrameworks"
                        serviceImplementation="com.intellij.codeInsight.TestFrameworksImpl"/>

    <projectService serviceInterface="com.intellij.execution.testDiscovery.JavaAutoRunManager"
                    serviceImplementation="com.intellij.execution.testDiscovery.JavaAutoRunManager"/>

    <projectService serviceInterface="com.intellij.ide.util.TreeClassChooserFactory"
                    serviceImplementation="com.intellij.ide.util.TreeClassChooserFactoryImpl"/>
    <projectService serviceInterface="com.intellij.psi.JavaPsiFacade"
                    serviceImplementation="com.intellij.psi.impl.JavaPsiFacadeImpl"/>
    <projectService serviceInterface="com.intellij.psi.PsiNameHelper"
                    serviceImplementation="com.intellij.psi.impl.PsiNameHelperImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.file.impl.JavaFileManager"
                    serviceImplementation="com.intellij.psi.impl.file.impl.JavaFileManagerImpl"/>
    <projectService
                    serviceImplementation="com.intellij.psi.impl.search.HighlightingCaches"/>
    <projectService serviceInterface="com.intellij.codeInsight.guess.GuessManager"
                    serviceImplementation="com.intellij.codeInsight.guess.impl.GuessManagerImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.source.resolve.JavaResolveCache"
                    serviceImplementation="com.intellij.psi.impl.source.resolve.JavaResolveCache"/>
    <projectService serviceInterface="com.intellij.psi.PsiElementFactory"
                    serviceImplementation="com.intellij.psi.impl.PsiElementFactoryImpl"/>
    <projectService serviceInterface="com.intellij.psi.javadoc.JavadocManager"
                    serviceImplementation="com.intellij.psi.impl.source.javadoc.JavadocManagerImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.JavaPsiImplementationHelper"
                    serviceImplementation="com.intellij.psi.impl.JavaPsiImplementationHelperImpl"/>
    <projectService serviceInterface="com.intellij.psi.codeStyle.JavaCodeStyleSettingsFacade"
                    serviceImplementation="com.intellij.psi.codeStyle.JavaCodeStyleSettingsFacadeImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.JavaCodeInsightSettingsFacade"
                    serviceImplementation="com.intellij.codeInsight.JavaCodeInsightSettingsFacadeImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.migration.PsiMigrationManager"
                    serviceImplementation="com.intellij.psi.impl.migration.PsiMigrationManager"/>
    <projectService serviceInterface="com.intellij.psi.PsiResolveHelper"
                    serviceImplementation="com.intellij.psi.impl.source.resolve.PsiResolveHelperImpl"/>

    <projectService serviceInterface="com.intellij.psi.JavaCodeFragmentFactory"
                    serviceImplementation="com.intellij.psi.impl.JavaCodeFragmentFactoryImpl"/>

    <projectService serviceInterface="com.intellij.codeInsight.javadoc.JavaDocCodeStyle"
                    serviceImplementation="com.intellij.codeInsight.javadoc.JavaDocCodeStyleImpl"/>

    <applicationService serviceInterface="com.intellij.psi.JavaDirectoryService"
                        serviceImplementation="com.intellij.psi.impl.file.JavaDirectoryServiceImpl"/>

    <applicationService serviceInterface="com.intellij.psi.util.JavaClassSupers"
                        serviceImplementation="com.intellij.psi.impl.JavaClassSupersImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.projectRoots.JavaVersionService"
                        serviceImplementation="com.intellij.openapi.projectRoots.JavaVersionServiceImpl"/>

    <applicationService serviceInterface="com.intellij.refactoring.JavaRefactoringActionHandlerFactory"
                        serviceImplementation="com.intellij.refactoring.openapi.impl.JavaRefactoringActionHandlerFactoryImpl"/>
    <changeSignatureDetector language="JAVA" implementationClass="com.intellij.refactoring.changeSignature.JavaChangeSignatureDetector"/>

    <applicationService serviceInterface="com.intellij.refactoring.JavaRefactoringSettings"
                        serviceImplementation="com.intellij.refactoring.JavaRefactoringSettings"/>

    <applicationService serviceInterface="com.intellij.codeInsight.generation.OverrideImplementExploreUtil$MemberImplementorExplorersProvider"
                        serviceImplementation="com.intellij.codeInsight.generation.MemberImplementorExplorersProviderImpl"/>

    <projectService serviceInterface="com.intellij.refactoring.RefactoringManager"
                    serviceImplementation="com.intellij.refactoring.RefactoringManager"/>
    <projectService serviceInterface="com.intellij.refactoring.listeners.JavaRefactoringListenerManager"
                    serviceImplementation="com.intellij.refactoring.listeners.impl.JavaRefactoringListenerManagerImpl"/>
    <projectService serviceInterface="com.intellij.refactoring.RefactoringFactory"
                    serviceImplementation="com.intellij.refactoring.openapi.impl.JavaRefactoringFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.folding.JavaCodeFoldingSettings"
                        serviceImplementation="com.intellij.codeInsight.folding.impl.JavaCodeFoldingSettingsImpl"/>
    <exportable serviceInterface="com.intellij.codeInsight.folding.JavaCodeFoldingSettings"/>

    <projectService serviceInterface="com.intellij.psi.impl.source.tree.injected.JavaConcatenationInjectorManager"
                    serviceImplementation="com.intellij.psi.impl.source.tree.injected.JavaConcatenationInjectorManager"/>

    <multiHostInjector implementation="com.intellij.psi.impl.source.tree.injected.JavaConcatenationInjectorManager$Concatenation2InjectorAdapter" order="first"/>

    <projectService serviceInterface="com.intellij.psi.SmartTypePointerManager"
                    serviceImplementation="com.intellij.psi.impl.smartPointers.SmartTypePointerManagerImpl"/>
    <projectService serviceInterface="com.intellij.psi.codeStyle.JavaCodeStyleManager"
                    serviceImplementation="com.intellij.psi.impl.source.codeStyle.JavaCodeStyleManagerImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.ExpectedTypesProvider"
                    serviceImplementation="com.intellij.codeInsight.ExpectedTypesProvider"/>

    <projectService serviceInterface="com.intellij.psi.controlFlow.ControlFlowFactory"
                    serviceImplementation="com.intellij.psi.controlFlow.ControlFlowFactory"/>

    <applicationService serviceInterface="com.intellij.psi.CommonReferenceProviderTypes"
                    serviceImplementation="com.intellij.psi.impl.CommonReferenceProviderTypesImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.file.PsiDirectoryFactory"
                    serviceImplementation="com.intellij.psi.impl.file.PsiJavaDirectoryFactory"/>

    <projectService serviceInterface="com.intellij.openapi.roots.PackageIndex"
                    serviceImplementation="com.intellij.openapi.roots.impl.ProjectPackageIndexImpl"/>
    <moduleService serviceInterface="com.intellij.openapi.roots.ModulePackageIndex"
                   serviceImplementation="com.intellij.openapi.roots.impl.ModulePackageIndexImpl"/>

    <projectService serviceInterface="com.intellij.openapi.roots.JavaProjectModelModificationService"
                    serviceImplementation="com.intellij.openapi.roots.impl.JavaProjectModelModificationServiceImpl"/>
    <projectModelModifier implementation="com.intellij.openapi.roots.impl.IdeaProjectModelModifier" order="last"/>

    <projectService serviceInterface="com.intellij.usages.impl.rules.DirectoryGroupingRule"
                    serviceImplementation="com.intellij.usages.impl.rules.PackageGroupingRule"/>


    <projectService serviceInterface="com.intellij.codeInspection.ex.EntryPointsManager"
                    serviceImplementation="com.intellij.codeInspection.ex.EntryPointsManagerImpl"/>

    <projectService serviceInterface="com.intellij.codeInsight.NullableNotNullManager"
                    serviceImplementation="com.intellij.codeInsight.NullableNotNullManagerImpl"/>

    <lang.psiTypeAnnotationModifier implementation="com.intellij.codeInsight.NullityAnnotationModifier"/>

    <projectService serviceInterface="com.intellij.codeInsight.ConcurrencyAnnotationsManager"
                    serviceImplementation="com.intellij.codeInsight.ConcurrencyAnnotationsManager"/>

    <projectService serviceInterface="com.intellij.psi.search.PsiShortNamesCache"
                    serviceImplementation="com.intellij.psi.impl.CompositeShortNamesCache"/>

    <java.shortNamesCache implementation="com.intellij.psi.impl.PsiShortNamesCacheImpl"/>

    <psi.treeChangePreprocessor implementation="com.intellij.psi.impl.JavaCodeBlockModificationListener"/>

    <applicationService serviceInterface="com.intellij.framework.library.DownloadableLibraryService"
                        serviceImplementation="com.intellij.framework.library.impl.DownloadableLibraryServiceImpl"/>

    <projectService serviceImplementation="com.intellij.javadoc.JavadocGenerationManager"/>
    <projectService serviceImplementation="com.intellij.codeInsight.JavaProjectCodeInsightSettings"/>
    <applicationService serviceInterface="com.intellij.codeInsight.javadoc.JavaDocInfoGeneratorFactory"
                        serviceImplementation="com.intellij.codeInsight.javadoc.JavaDocInfoGeneratorFactory"/>

    <highlightVisitor implementation="com.intellij.codeInsight.daemon.impl.analysis.HighlightVisitorImpl"/>

    <lang.foldingBuilder language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.actions.SuppressWarningsFoldingBuilder" />
    <moduleType id="WEB_MODULE" implementationClass="com.intellij.openapi.module.WebModuleType"/>
    <moduleConfigurationEditorProvider implementation="com.intellij.openapi.module.WebModuleConfigurationEditorProvider"/>

    <externalProjectDataService implementation="com.intellij.externalSystem.JavaProjectDataService"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.deadCode.UnusedDeclarationInspectionMerger"/>

    <globalInspection groupPath="Java" language="JAVA" shortName="unused" displayName="Unused declaration" groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.deadCode.UnusedDeclarationInspection"
                     presentation="com.intellij.codeInspection.deadCode.UnusedDeclarationPresentation"/>
    <deadCode implementation="com.intellij.codeInspection.deadCode.DeprecatedEntryPoint"/>
    <globalInspection groupPath="Java" shortName="UnusedLibrary" bundle="messages.InspectionsBundle" key="unused.library.display.name"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.unusedLibraries.UnusedLibrariesInspection"/>
    <globalInspection groupPath="Java" shortName="InconsistentLanguageLevel" displayName="Inconsistent language level settings"
                     groupKey="group.names.modularization.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.inconsistentLanguageLevel.InconsistentLanguageLevelInspection"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="WeakerAccess" displayName="Declaration access can be weaker" groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle"
                      enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.visibility.VisibilityInspection"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="CanBeFinal" displayName="Declaration can have final modifier" groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle"
                      enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.canBeFinal.CanBeFinalInspection"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="SameParameterValue" bundle="messages.InspectionsBundle" key="inspection.same.parameter.display.name"
                      groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.sameParameterValue.SameParameterValueInspection"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="UnusedReturnValue" bundle="messages.InspectionsBundle" key="inspection.unused.return.value.display.name"
                      groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.unusedReturnValue.UnusedReturnValue"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="SameReturnValue" bundle="messages.InspectionsBundle" key="inspection.same.return.value.display.name"
                      groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.sameReturnValue.SameReturnValueInspection"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="EmptyMethod" displayName="Empty method" groupKey="group.names.declaration.redundancy" enabledByDefault="true" groupBundle="messages.InspectionsBundle"
                      level="WARNING" implementationClass="com.intellij.codeInspection.emptyMethod.EmptyMethodInspection"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="RedundantThrows" displayName="Redundant throws clause" groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle"
                      enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.unneededThrows.RedundantThrows"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ConstantConditions" bundle="messages.InspectionsBundle" key="inspection.data.flow.display.name"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.dataFlow.DataFlowInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Contract" bundle="messages.InspectionsBundle" key="inspection.contract.display.name"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.dataFlow.ContractInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="UnusedAssignment" displayName="Unused assignment" groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="true"
                     level="WARNING" implementationClass="com.intellij.codeInspection.defUse.DefUseInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="NumericOverflow" displayName="Numeric overflow" groupKey="group.names.numeric.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true"
                     level="WARNING" implementationClass="com.intellij.codeInspection.NumericOverflowInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantCast" displayName="Redundant type cast" groupKey="group.names.verbose.or.redundant.code.constructs" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING" cleanupTool="true"
                     implementationClass="com.intellij.codeInspection.redundantCast.RedundantCastInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantTypeArguments" bundle="messages.InspectionsBundle" key="inspection.redundant.type.display.name"
                     groupKey="group.names.verbose.or.redundant.code.constructs" enabledByDefault="true" level="WARNING"  cleanupTool="true"
                     implementationClass="com.intellij.codeInspection.miscGenerics.RedundantTypeArgsInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantArrayCreation" bundle="messages.InspectionsBundle"
                     key="inspection.redundant.array.creation.display.name" groupKey="group.names.verbose.or.redundant.code.constructs"
                     enabledByDefault="true" level="WARNING" cleanupTool="true"
                     implementationClass="com.intellij.codeInspection.miscGenerics.RedundantArrayForVarargsCallInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SuspiciousMethodCalls" bundle="messages.InspectionsBundle"
                     key="inspection.suspicious.collections.method.calls.display.name" groupKey="group.names.probable.bugs" enabledByDefault="true"
                     level="WARNING"
                     implementationClass="com.intellij.codeInspection.miscGenerics.SuspiciousCollectionsMethodCallsInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RawTypeCanBeGeneric" bundle="messages.InspectionsBundle"
                     key="inspection.raw.variable.type.can.be.generic.name" groupKey="group.names.code.style.issues"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.miscGenerics.RawTypeCanBeGenericInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="LocalCanBeFinal" bundle="messages.InspectionsBundle" key="inspection.local.can.be.final.display.name"
                     groupKey="group.names.code.style.issues" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.localCanBeFinal.LocalCanBeFinal"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ReturnSeparatedFromComputation" bundle="messages.InspectionsBundle"
                     key="inspection.return.separated.from.computation.name" groupKey="group.names.code.style.issues"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.intermediaryVariable.ReturnSeparatedFromComputationInspection"/>

    <localInspection groupPath="Java" language="JAVA" shortName="JavaDoc" bundle="messages.InspectionsBundle" key="inspection.javadoc.display.name"
                     groupKey="group.names.javadoc.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.javaDoc.JavaDocLocalInspection" alternativeId="javadoc"/>
    <localInspection groupPath="Java" language="JAVA" shortName="JavadocReference" bundle="messages.InspectionsBundle" key="inspection.javadoc.ref.display.name"
                     groupKey="group.names.javadoc.issues" enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.javaDoc.JavaDocReferenceInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="JavadocHtmlLint" bundle="messages.InspectionsBundle" key="inspection.javadoc.lint.display.name"
                     groupKey="group.names.javadoc.issues" enabledByDefault="false" level="ERROR" unfair="true"
                     implementationClass="com.intellij.codeInspection.javaDoc.JavadocHtmlLintInspection"/>
    <externalAnnotator language="JAVA" implementationClass="com.intellij.codeInspection.javaDoc.JavadocHtmlLintAnnotator"/>

    <localInspection groupPath="Java" language="JAVA" suppressId="deprecation" shortName="Deprecation" displayName="Deprecated API usage" groupKey="group.names.code.maturity.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.deprecation.DeprecationInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="DeprecatedIsStillUsed" displayName="Deprecated member is still used"
                     groupKey="group.names.code.maturity.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.DeprecatedIsStillUsedInspection" />
    <localInspection language="XML" shortName="DeprecatedClassUsageInspection" displayName="Deprecated API usage in XML" groupKey="group.names.xml" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING" implementationClass="com.intellij.codeInspection.xml.DeprecatedClassUsageInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="EqualsAndHashcode" bundle="messages.InspectionsBundle" key="inspection.equals.hashcode.display.name"
                     groupKey="group.names.probable.bugs" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.equalsAndHashcode.EqualsAndHashcode"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Since15" bundle="messages.InspectionsBundle" key="inspection.1.5.display.name"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.java15api.Java15APIUsageInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Dependency" displayName="Illegal package dependencies" groupKey="group.names.dependency.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.dependencyViolation.DependencyInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="FieldCanBeLocal" bundle="messages.InspectionsBundle" key="inspection.field.can.be.local.display.name"
                     groupKey="group.names.class.structure" enabledByDefault="true" level="WARNING" runForWholeFile="true"
                     implementationClass="com.intellij.codeInspection.varScopeCanBeNarrowed.FieldCanBeLocalInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ParameterCanBeLocal" key="inspection.parameter.can.be.local.display.name"
                     groupKey="group.names.class.structure" enabledByDefault="true" level="WARNING" bundle="messages.InspectionsBundle"
                     implementationClass="com.intellij.codeInspection.varScopeCanBeNarrowed.ParameterCanBeLocalInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="NullableProblems" bundle="messages.InspectionsBundle" key="inspection.nullable.problems.display.name"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.nullable.NullableStuffInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="TestOnlyProblems" bundle="messages.InspectionsBundle" key="inspection.test.only.problems.display.name"
                     groupKey="inspection.general.tools.group.name" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.testOnly.TestOnlyInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="WrongPackageStatement" bundle="messages.InspectionsBundle" key="wrong.package.statement" groupKey="group.names.probable.bugs"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.wrongPackageStatement.WrongPackageStatementInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="SillyAssignment" bundle="messages.InspectionsBundle" key="inspection.variable.assigned.to.itself.display.name" groupKey="group.names.declaration.redundancy"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.sillyAssignment.SillyAssignmentInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="DefaultAnnotationParam" bundle="messages.InspectionsBundle" key="inspection.default.annotation.param" groupKey="group.names.declaration.redundancy"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.DefaultAnnotationParamInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantThrowsDeclaration" bundle="messages.InspectionsBundle" key="redundant.throws.declaration"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="false" level="WARNING" cleanupTool="true"
                     implementationClass="com.intellij.codeInspection.unneededThrows.RedundantThrowsDeclaration" />
    <localInspection groupPath="Java" language="JAVA" shortName="AccessStaticViaInstance" bundle="messages.InspectionsBundle" key="access.static.via.instance" groupKey="group.names.declaration.redundancy"
                     enabledByDefault="true" level="WARNING" cleanupTool="true" alternativeId="static-access"
                     implementationClass="com.intellij.codeInspection.accessStaticViaInstance.AccessStaticViaInstance" />
    <localInspection shortName="DefaultFileTemplate" bundle="messages.InspectionsBundle" key="default.file.template.display.name"
                     groupKey="inspection.general.tools.group.name" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.defaultFileTemplateUsage.DefaultFileTemplateUsageInspection"/>
    <globalInspection groupPath="Java" shortName="UnnecessaryModuleDependencyInspection" bundle="messages.InspectionsBundle"
                      key="unnecessary.module.dependency.display.name" groupKey="group.names.declaration.redundancy" enabledByDefault="true"
                      level="WARNING"
                      implementationClass="com.intellij.codeInspection.unnecessaryModuleDependency.UnnecessaryModuleDependencyInspection"/>
    <globalInspection shortName="RedundantSuppression" bundle="messages.InspectionsBundle" key="inspection.redundant.suppression.name"
                      groupKey="inspection.general.tools.group.name" enabledByDefault="false" level="WARNING"
                      implementationClass="com.intellij.codeInspection.RedundantSuppressInspection"/>

    <localInspection groupPath="Java" language="JAVA" shortName="UNUSED_IMPORT" displayName="Unused import (editor light)" groupKey="group.names.imports" groupBundle="messages.InspectionsBundle" enabledByDefault="true"
                     level="WARNING" implementationClass="com.intellij.codeInspection.unusedImport.UnusedImportLocalInspection" unfair="true"/>

    <localInspection groupPath="Java" language="JAVA" suppressId="unchecked" shortName="UNCHECKED_WARNING" displayName="Unchecked warning" groupKey="group.names.compiler.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.uncheckedWarnings.UncheckedWarningLocalInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="SuspiciousNameCombination" bundle="messages.InspectionsBundle"
                     key="suspicious.name.combination.display.name" groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.suspiciousNameCombination.SuspiciousNameCombinationInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="DuplicateThrows" bundle="messages.InspectionsBundle" key="inspection.duplicate.throws.display.name"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING" cleanupTool="true"
                     implementationClass="com.intellij.codeInspection.duplicateThrows.DuplicateThrowsInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="FieldAccessNotGuarded" displayName="Unguarded field access" groupKey="group.names.concurrency.annotation.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.concurrencyAnnotations.FieldAccessNotGuardedInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="InstanceGuardedByStatic" displayName="Instance member guarded by static field"
                     groupKey="group.names.concurrency.annotation.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.concurrencyAnnotations.InstanceGuardedByStaticInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="NonFinalFieldInImmutable" displayName="Non-final field in @Immutable class"
                     groupKey="group.names.concurrency.annotation.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.concurrencyAnnotations.NonFinalFieldInImmutableInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="NonFinalGuard" displayName="Non-final @GuardedBy field" groupKey="group.names.concurrency.annotation.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.concurrencyAnnotations.NonFinalGuardInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="StaticGuardedByInstance" displayName="Static member guarded by instance field or this"
                     groupKey="group.names.concurrency.annotation.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.concurrencyAnnotations.StaticGuardedByInstanceInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="UnknownGuard" displayName="Unknown @GuardedBy field" groupKey="group.names.concurrency.annotation.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.concurrencyAnnotations.UnknownGuardInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="Convert2Diamond" displayName="Explicit type can be replaced with &lt;&gt;"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ExplicitTypeCanBeDiamondInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="Convert2Lambda" displayName="Anonymous type can be replaced with lambda"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.AnonymousCanBeLambdaInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="Convert2streamapi" displayName="Loop can be collapsed with Stream API"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.streamMigration.StreamApiMigrationInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Anonymous2MethodRef" displayName="Anonymous type can be replaced with method reference"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.AnonymousCanBeMethodReferenceInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="Convert2MethodRef" displayName="Lambda can be replaced with method reference"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.LambdaCanBeMethodReferenceInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="InvalidComparatorMethodReference" displayName="Invalid method reference used for Comparator"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.InvalidComparatorMethodReferenceInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="TrivialMethodReference" displayName="Method reference can be replaced with its qualifier"
                     groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.TrivialMethodReferenceInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="TrivialFunctionalExpressionUsage" displayName="Trivial usage of functional expression"
                     groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.TrivialFunctionalExpressionUsageInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="CodeBlock2Expr" displayName="Statement lambda can be replaced with expression lambda"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.RedundantLambdaCodeBlockInspection" />
    <localInspection groupPath="Java" language="JAVA" suppressId="unchecked" shortName="SafeVarargsDetector"
                     displayName="Possible heap pollution from parameterized vararg type" groupKey="group.names.language.level.specific.issues.and.migration.aids" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.PossibleHeapPollutionVarargsInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="JavacQuirks" bundle="messages.InspectionsBundle" key="inspection.compiler.javac.quirks.name"
                     groupKey="group.names.compiler.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.compiler.JavacQuirksInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="MagicConstant" displayName="Magic Constant"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.magicConstant.MagicConstantInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="SuperClassHasFrequentlyUsedInheritors"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.inheritance.issues" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.inheritance.SuperClassHasFrequentlyUsedInheritorsInspection"
                     displayName="Class may extend a commonly used base class instead of implementing interface"/>
    <localInspection groupPath="Java" language="JAVA" shortName="BlockMarkerComments"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.code.style.issues" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.BlockMarkerCommentsInspection"
                     displayName="Block marker comment"/>
    <localInspection groupPath="Java" language="JAVA" shortName="StaticPseudoFunctionalStyleMethod"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18StreamApi.StaticPseudoFunctionalStyleMethodInspection"
                     displayName="Pseudo functional expression using static class"/>
    <localInspection groupPath="Java" language="JAVA" shortName="StringTokenizerDelimiter"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.StringTokenizerDelimiterInspection"
                     displayName="Duplicated delimiters in java.util.StringTokenizer"/>
    <localInspection groupPath="Java" language="JAVA" shortName="CollectionAddAllCanBeReplacedWithConstructor"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.CollectionAddAllCanBeReplacedWithConstructorInspection"
                     displayName="Collection.addAll() can be replaced with parametrized constructor"/>
    <localInspection groupPath="Java" language="JAVA" shortName="AnonymousHasLambdaAlternative" displayName="Anonymous type can be replaced with lambda using factory method or special constructor"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.AnonymousHasLambdaAlternativeInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="Java8CollectionsApi"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.Java8CollectionsApiInspection"
                     displayName="Map.putIfAbsent() can be used"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Java8ListSort"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.Java8ListSortInspection"
                     displayName="Collections.sort() can be replaced with List.sort()"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Java8CollectionRemoveIf"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.Java8CollectionRemoveIfInspection"
                     displayName="Loop can be replaced with Collection.removeIf()"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Java8ReplaceMapGet"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.Java8ReplaceMapGetInspection"
                     displayName="Simplifiable conditional usage of Map.get()"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SimplifyStreamApiCallChains"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.SimplifyStreamApiCallChainsInspection"
                     displayName="Simplify stream API call chains"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ComparatorCombinators"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ComparatorCombinatorsInspection"
                     displayName="Use Comparator combinators"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ReplaceInefficientStreamCount"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ReplaceInefficientStreamCountInspection"
                     displayName="Replace inefficient Stream API call chains ending with count()"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantLambdaParameterType"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.lambda.RedundantLambdaParameterTypeInspection"
                     displayName="Remove redundant lambda parameter types"/>
    <localInspection groupPath="Java" language="JAVA" shortName="OptionalIsPresent"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.OptionalIsPresentInspection"
                     displayName="Replace Optional.isPresent() checks with functional-style expressions"/>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SplitIfAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SplitFilterAction</className>
      <category>Java/Streams</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.MergeFilterChainAction</className>
      <category>Java/Streams</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.InlineStreamMapAction</className>
      <category>Java/Streams</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.InvertIfConditionAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExtractIfConditionAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.RemoveRedundantElseAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddNotNullAnnotationIntention</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddDeprecationAnnotationIntention</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddNullableAnnotationIntention</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInspection.dataFlow.EditContractIntention</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>EditContractIntention</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.MakeInferredAnnotationExplicit</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>MakeInferredAnnotationExplicit</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.ToggleSourceInferredAnnotations</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>ToggleSourceInferredAnnotations</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.IterateOverIterableIntention</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.DeannotateIntentionAction</className>
      <category>Java/Annotations</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CreateSwitchIntention</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SwapIfStatementsIntentionAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertCompareToToEqualsIntention</className>
      <category>Java/Control Flow</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CreateFieldFromParameterAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AssignFieldFromParameterAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.BindFieldsFromParametersAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.CreateLocalVarFromInstanceofAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.CreateCastExpressionFromInstanceofAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.testIntegration.createTest.CreateTestAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.testIntegration.createTest.GenerateMissedTestsAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CreateSubclassAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ImplementAbstractMethodAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CopyAbstractMethodImplementationAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SplitDeclarationAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.JoinDeclarationAndAssignmentAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.PushConditionInCallAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.MoveInitializerToConstructorAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.testIntegration.intention.MoveInitializerToSetUpMethodAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.MoveFieldAssignmentToInitializerAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.AddRuntimeExceptionToThrowsAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.DefineParamsDefaultValueAction</className>
      <category>Java/Declaration</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.IntroduceVariableIntentionAction</className>
      <category>Java/Refactorings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.EncapsulateFieldAction</className>
      <category>Java/Refactorings</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SimplifyBooleanExpressionAction</className>
      <category>Java/Boolean</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConcatenationToMessageFormatAction</className>
      <category>Java/I18N</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertToBasicLatinAction</className>
      <category>Java/I18N</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddOnDemandStaticImportAction</className>
      <category>Java/Imports</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddSingleMemberStaticImportAction</className>
      <category>Java/Imports</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExpandStaticImportAction</className>
      <category>Java/Imports</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInspection.actions.UnimplementInterfaceAction</className>
      <category>Java/Declaration</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInspection.actions.ReplaceImplementsWithStaticImportAction</className>
      <category>Java/Declaration</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertColorRepresentationIntentionAction</className>
      <category>Java/Declaration</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddJavadocIntention</className>
      <category>Java/Declaration</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertAbsolutePathToRelativeIntentionAction</className>
      <category>Other</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertRelativePathToAbsoluteIntentionAction</className>
      <category>Other</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ReplaceCastWithVariableAction</className>
      <category>Java/Imports</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.BreakStringOnLineBreaksIntentionAction</className>
      <category>Java/Strings</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.RemoveLiteralUnderscoresAction</className>
      <category>Java/Numbers</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.InsertLiteralUnderscoresAction</className>
      <category>Java/Numbers</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.ConvertToStringLiteralAction</className>
      <category>Java/Strings</category>
    </intentionAction>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SurroundAutoCloseableAction</className>
      <category>Java/Try Statements</category>
    </intentionAction>

    <lang.parserDefinition language="JAVA" implementationClass="com.intellij.lang.java.JavaParserDefinition"/>

    <lang.refactoringSupport language="JAVA" implementationClass="com.intellij.lang.java.JavaRefactoringSupportProvider"/>
    <lang.refactoringSupport.classMembersRefactoringSupport language="JAVA" implementationClass="com.intellij.lang.java.JavaClassMembersRefactoringSupport"/>

    <encapsulateFields.Helper implementationClass="com.intellij.refactoring.encapsulateFields.JavaEncapsulateFieldHelper" language="JAVA"/>

    <lang.formatter language="JAVA" implementationClass="com.intellij.lang.java.JavaFormattingModelBuilder"/>
    <lang.whiteSpaceFormattingStrategy language="JAVA"
                                       implementationClass="com.intellij.psi.formatter.JavadocWhiteSpaceFormattingStrategy"/>
    <lang.rearranger language="JAVA" implementationClass="com.intellij.psi.codeStyle.arrangement.JavaRearranger"/>
    <lang.formatting.extractor language="JAVA" implementationClass="com.intellij.psi.codeStyle.extractor.differ.JavaExtractor"/>

    <lang.documentationProvider language="JAVA" implementationClass="com.intellij.lang.java.JavaDocumentationProvider"/>
    <documentationProvider implementation="com.intellij.lang.java.FileDocumentationProvider" order="last"/>
    <lang.documentationFixer language="JAVA" implementationClass="com.intellij.codeInsight.documentation.JavaDocCommentFixer"/>

    <lang.importOptimizer language="JAVA" implementationClass="com.intellij.lang.java.JavaImportOptimizer"/>

    <lang.psiElementExternalizer language="JAVA" implementationClass="com.intellij.lang.java.JavaPsiElementExternalizer"/>

    <lang.surroundDescriptor language="JAVA"
                             implementationClass="com.intellij.codeInsight.generation.surroundWith.JavaExpressionSurroundDescriptor"/>
    <lang.surroundDescriptor language="JAVA"
                             implementationClass="com.intellij.codeInsight.generation.surroundWith.JavaStatementsSurroundDescriptor"/>
    <lang.surroundDescriptor language="JAVA"
                             implementationClass="com.intellij.codeInsight.intention.impl.SurroundAutoCloseableAction$Template"/>
    <codeInsight.surroundWithRangeAdjuster
        implementation="com.intellij.codeInsight.generation.surroundWith.JavaSurroundWithStatementRangeAdjuster"/>

    <lang.unwrapDescriptor language="JAVA" implementationClass="com.intellij.codeInsight.unwrap.JavaUnwrapDescriptor"/>

    <lang.namesValidator language="JAVA" implementationClass="com.intellij.lang.refactoring.JavaNamesValidator"/>

    <lang.findUsagesProvider language="JAVA" implementationClass="com.intellij.lang.java.JavaFindUsagesProvider"/>
    <usageToPsiElementProvider implementation="com.intellij.lang.java.JavaUsageToPsiElementProvider" />
    <anonymousElementProvider implementation="com.intellij.lang.java.JavaAnonymousClassesProvider" />

    <lang.commenter language="JAVA" implementationClass="com.intellij.lang.java.JavaCommenter"/>

    <lang.braceMatcher language="JAVA" implementationClass="com.intellij.codeInsight.highlighting.JavaPairedBraceMatcher"/>

    <lang.foldingBuilder language="JAVA" implementationClass="com.intellij.codeInsight.folding.impl.JavaFoldingBuilder"/>

    <parameterHintsProvider language="JAVA" implementationClass="com.intellij.codeInsight.hints.JavaInlayParameterHintsProvider"/>
    <codeInsight.parameterInfo language="JAVA" implementationClass="com.intellij.codeInsight.hint.api.impls.MethodParameterInfoHandler"/>
    <codeInsight.parameterInfo language="JAVA" implementationClass="com.intellij.codeInsight.hint.api.impls.ReferenceParameterInfoHandler"/>
    <codeInsight.parameterInfo language="JAVA"
                               implementationClass="com.intellij.codeInsight.hint.api.impls.AnnotationParameterInfoHandler"/>
    <codeInsight.typeInfo language="JAVA" implementationClass="com.intellij.codeInsight.hint.JavaTypeProvider"/>

    <codeInsight.overrideMethod language="JAVA" implementationClass="com.intellij.codeInsight.generation.JavaOverrideMethodsHandler"/>
    <codeInsight.implementMethod language="JAVA" implementationClass="com.intellij.codeInsight.generation.JavaImplementMethodsHandler"/>
    <codeInsight.delegateMethods language="JAVA" implementationClass="com.intellij.codeInsight.generation.GenerateDelegateHandler"/>
    <codeInsight.gotoSuper language="JAVA" implementationClass="com.intellij.codeInsight.navigation.JavaGotoSuperHandler"/>
    <codeInsight.gotoSuper language="SPI" implementationClass="com.intellij.spi.SPIGotoSuperHandler"/>
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.JavaLineMarkerProvider"/>
    <codeInsight.linkHandler prefix="#javaClass/" handlerClass="com.intellij.codeInsight.daemon.impl.JavaClassTooltipLinkHandler"/>
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.RecursiveCallLineMarkerProvider"/>
    <colorProvider implementation="com.intellij.codeInsight.daemon.impl.JavaColorProvider" />
    <regExpModifierProvider language="JAVA" implementationClass="com.intellij.codeInsight.JavaRegExpModifierProvider" />

    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.IconLineMarkerProvider"/>
    <projectService serviceImplementation="com.intellij.psi.util.ProjectIconsAccessor"/>

    <annotator language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.JavaDocAnnotator"/>
    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.StatementMover" id="statement"
                          order="before declaration"/>
    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.DeclarationMover" id="declaration"
                          order="before xml"/>
    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.CaseBlockMover" id="caseBlock"
                          order="before statement"/>
    <moveLeftRightHandler language="JAVA" implementationClass="com.intellij.codeInsight.editorActions.moveLeftRight.JavaMoveLeftRightHandler"/>
    <flipCommaIntention.flipper language="JAVA" implementationClass="com.intellij.codeInsight.intention.impl.JavaFlipper"/>

    <fileType.fileViewProviderFactory filetype="CLASS" implementationClass="com.intellij.psi.ClassFileViewProviderFactory"/>

    <editorFileSwapper implementation="com.intellij.codeEditor.JavaEditorFileSwapper"/>

    <lang.psiStructureViewFactory language="JAVA" implementationClass="com.intellij.lang.java.JavaStructureViewBuilderFactory"/>
    <breadcrumbsInfoProvider implementation="com.intellij.lang.java.JavaBreadcrumbsInfoProvider"/>

    <lang.ast.factory language="JAVA" implementationClass="com.intellij.psi.impl.source.tree.JavaASTFactory"/>

    <lang.smartEnterProcessor language="JAVA"
                              implementationClass="com.intellij.codeInsight.editorActions.smartEnter.JavaSmartEnterProcessor"/>
    <lang.smartEnterProcessor language="JSPX" implementationClass="com.intellij.codeInsight.completion.XmlSmartEnterProcessor"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.JavaEnterAfterUnmatchedBraceHandler" order="before afterUnmatchedBrace"/>

    <codeStyle.ReferenceAdjuster language="JAVA" implementationClass="com.intellij.psi.impl.source.codeStyle.JavaReferenceAdjuster"/>

    <iconProvider implementation="com.intellij.psi.impl.JavaDirectoryIconProvider" id="javaDirectory"/>
    <iconProvider implementation="com.intellij.execution.testframework.TestIconProvider" id="testIcons"/>

    <codeStyleSettingsProvider implementation="com.intellij.application.options.JavaCodeStyleSettingsProvider"/>
    <codeStyleSettingsProvider implementation="com.intellij.application.options.GenerationSettingsProvider"/>

    <langCodeStyleSettingsProvider implementation="com.intellij.ide.JavaLanguageCodeStyleSettingsProvider"/>
    <lang.lineWrapStrategy language="JAVA" implementationClass="com.intellij.psi.formatter.java.JavaLineWrapPositionStrategy"/>

    <lang.sliceProvider language="JAVA" implementationClass="com.intellij.slicer.JavaSliceProvider"/>

    <stacktrace.fold substring="at java.awt.EventDispatchThread"/>
    <stacktrace.fold substring="at java.awt.Window.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.awt.Container.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.awt.LightweightDispatcher."/>
    <stacktrace.fold substring="at java.awt.Component.dispatchEvent("/>
    <stacktrace.fold substring="at java.awt.event.InvocationEvent.dispatch("/>
    <stacktrace.fold substring="at java.awt.EventQueue"/>
    <stacktrace.fold substring="at java.awt.Component.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.awt.Container.processEvent("/>
    <stacktrace.fold substring="at javax.swing.JComponent.processMouseEvent("/>
    <stacktrace.fold substring="at javax.swing.plaf.basic.BasicMenuItemUI"/>
    <stacktrace.fold substring="at java.awt.Component.processMouseEvent("/>
    <stacktrace.fold substring="at javax.swing.AbstractButton.doClick("/>
    <stacktrace.fold substring="at java.awt.Component.processEvent("/>
    <stacktrace.fold substring="at java.awt.Container.dispatchEventImpl("/>
    <stacktrace.fold substring="at javax.swing.DefaultButtonModel.fireActionPerformed("/>
    <stacktrace.fold substring="at javax.swing.DefaultButtonModel.setPressed("/>
    <stacktrace.fold substring="at javax.swing.AbstractButton.fireActionPerformed("/>
    <stacktrace.fold substring="at javax.swing.AbstractButton$Handler.actionPerformed("/>
    <stacktrace.fold substring="at java.security.AccessControlContext$1.doIntersectionPrivilege("/>
    <stacktrace.fold substring="at java.awt.EventQueue.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.security.AccessController.doPrivileged(Native Method)"/>
    <stacktrace.fold substring="at java.security.ProtectionDomain$1.doIntersectionPrivilege("/>
    <stacktrace.fold substring="at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege("/>
    <stacktrace.fold substring="at com.jgoodies.binding.beans.ExtendedPropertyChangeSupport.firePropertyChange0("/>
    <stacktrace.fold substring="at javax.swing.plaf.basic.BasicComboPopup$Handler.mouseReleased("/>

    <stacktrace.fold substring="at java.util.stream.ReferencePipeline$"/>
    <stacktrace.fold substring="at java.util.Spliterators$"/>
    <stacktrace.fold substring="at java.util.stream.AbstractPipeline.evaluate("/>
    <stacktrace.fold substring="at java.util.stream.AbstractPipeline.copyInto("/>
    <stacktrace.fold substring="at java.util.stream.AbstractPipeline.wrapAndCopyInto("/>
    <stacktrace.fold substring="at java.util.stream.ReduceOps$"/>

    <stacktrace.fold substring="at java.lang.reflect.Method.invoke("/>
    <stacktrace.fold substring="at java.lang.reflect.Constructor.newInstance("/>
    <stacktrace.fold substring="at sun.reflect."/>
    <stacktrace.fold substring="at java.rmi."/>
    <stacktrace.fold substring="at sun.rmi."/>
    <stacktrace.fold substring="at com.sun.proxy.$Proxy"/>
    <stacktrace.fold substring="at com.intellij.rt.execution."/>

    <debuggerEditorTextProvider language="JAVA" implementationClass="com.intellij.debugger.impl.JavaEditorTextProviderImpl"/>

    <constructorBodyGenerator language="JAVA" implementationClass="com.intellij.codeInsight.generation.NewJavaConstructorBodyWithSuperCallGenerator"/>

    <quoteHandler fileType="JAVA" className="com.intellij.codeInsight.editorActions.JavaQuoteHandler"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.JavaTypedHandler" id="java"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.JavadocTypedHandler" id="javadoc"/>

    <editorTypedHandler implementationClass="com.intellij.codeInsight.editorActions.AutoFormatTypedHandler"/>

    <editorSmartKeysConfigurable instance="com.intellij.application.options.JavadocOptionsProvider"
                                 id="editor.preferences.javadocOptions"
                                 key="javadoc.generate.message.title"
                                 bundle="messages.JavadocBundle"/>

    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.LiteralJoinLinesHandler"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.DeclarationJoinLinesHandler"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.BlockJoinLinesHandler"/>

    <filetype.decompiler filetype="CLASS" implementationClass="com.intellij.psi.impl.compiled.ClassFileDecompiler"/>
    <filetype.stubBuilder filetype="CLASS" implementationClass="com.intellij.psi.impl.compiled.ClassFileStubBuilder"/>

    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.ReferenceListWeigher" id="referenceList"
             order="before samePsiMember"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SamePsiMemberWeigher" id="samePsiMember"
             order="before explicitlyImported"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.ExplicitlyImportedWeigher" id="explicitlyImported"
             order="before openedInEditor"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.JavaInheritanceWeigher" id="javaInheritance"
             order="after explicitlyImported, before sameLogicalRoot"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.KnownElementWeigher" id="knownElement"
             order="after sameModule, before inResolveScope"/>

    <statistician key="proximity" implementationClass="com.intellij.codeInsight.completion.JavaProximityStatistician"/>
    <statistician key="completion" implementationClass="com.intellij.codeInsight.completion.JavaCompletionStatistician"/>

    <completion.skip implementation="com.intellij.codeInsight.completion.AbstractExpectedTypeSkipper" id="skipAbstract"/>


    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.LiteralSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.DocCommentSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.ListSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.VarargsSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.CodeBlockOrInitializerSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.FinallyBlockSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.MethodOrClassSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.FieldSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.ReferenceSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.DocTagSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.ForStatementHeaderSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.IfStatementSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.TypeCastSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.JavaTokenSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.StatementGroupSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.CaseStatementsSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.AntLikePropertySelectionHandler"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.MethodCallSelectioner"/>

    <structureViewBuilder key="CLASS" factoryClass="com.intellij.ide.highlighter.JavaClsStructureViewBuilderProvider"/>

    <getDataRule key="analysisScope" implementationClass="com.intellij.analysis.AnalysisScopeRule"/>

    <vcsSelectionProvider implementation="com.intellij.vcsUtil.JavaVcsSelectionProvider"/>

    <smartPointer.anchorProvider implementation="com.intellij.psi.impl.smartPointers.JavaAnchorProvider"/>

    <elementSignatureProvider implementation="com.intellij.codeInsight.folding.impl.JavaElementSignatureProvider"/>

    <preFormatProcessor implementation="com.intellij.psi.impl.source.codeStyle.FormatCommentsProcessor"/>
    <postFormatProcessor implementation="com.intellij.psi.impl.source.codeStyle.BracePostFormatProcessor"/>
    <postFormatProcessor implementation="com.intellij.psi.impl.source.codeStyle.ImportPostFormatProcessor"/>
    <postFormatProcessor implementation="com.intellij.psi.impl.source.codeStyle.TabPostFormatProcessor"/>
    <codeInspection.InspectionExtension implementation="com.intellij.codeInspection.ex.JavaInspectionExtensionsFactory"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ArrayVariableMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.VariableOfTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ComponentTypeOfMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SuggestVariableNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SuggestFirstVariableNameMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SuggestIndexNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.GuessElementTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ExpectedTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ExpressionTypeMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.AnnotatedMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.MethodNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.MethodParametersMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.MethodReturnTypeMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ClassNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.QualifiedClassNameMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentPackageMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.RightSideTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CastToLeftSideTypeMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.IterableVariableMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.IterableComponentTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.DescendantClassesEnumMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SubtypesMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.TypeOfVariableMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.GroovyScriptMacro"/>

    <copyPastePreProcessor implementation="com.intellij.codeInsight.editorActions.StringLiteralCopyPasteProcessor"/>
    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.JavaCopyPasteReferenceProcessor"/>


    <applicationService serviceInterface="com.intellij.codeInspection.SuppressManager"
                        serviceImplementation="com.intellij.codeInspection.SuppressManagerImpl"/>
    <applicationService serviceInterface="com.intellij.codeInspection.BatchSuppressManager"
                        serviceImplementation="com.intellij.codeInspection.BatchSuppressManagerImpl"/>

    <declarationRangeHandler key="com.intellij.psi.PsiMethod"
                             implementationClass="com.intellij.codeInsight.hint.MethodDeclarationRangeHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiLambdaExpression"
                             implementationClass="com.intellij.codeInsight.hint.LambdaDeclarationRangeHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiClass"
                             implementationClass="com.intellij.codeInsight.hint.ClassDeclarationRangeHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiClassInitializer"
                             implementationClass="com.intellij.codeInsight.hint.ClassInitializerDeclarationRangeHandler"/>

    <backspaceHandlerDelegate implementation="com.intellij.codeInsight.editorActions.JavaBackspaceHandler"/>
    <lineIndentProvider implementation="com.intellij.codeInsight.editorActions.JavaLineIndentProvider"/>

    <usageTargetProvider implementation="com.intellij.find.findUsages.ThrowsUsageTargetProvider"/>

    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Generic"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Statement"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Expression"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Declaration"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCommentContextType"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaStringContextType"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.SmartCompletionContextType"/>
    <projectExtension implementation="com.intellij.openapi.roots.impl.LanguageLevelProjectExtensionImpl$MyProjectExtension"/>
    <statistics.usagesCollector  implementation="com.intellij.openapi.roots.impl.LanguageLevelUsagesCollector"/>

    <moduleExtension implementation="com.intellij.openapi.roots.impl.CompilerModuleExtensionImpl"/>

    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightExceptionsHandlerFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightSuppressedWarningsFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightExitPointsHandlerFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightOverridingMethodsHandlerFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightImportedElementsHandlerFactory"/>

    <directoryIndexExcludePolicy implementation="com.intellij.openapi.roots.impl.ExcludeCompilerOutputPolicy"/>

    <patternDialectProvider implementation="com.intellij.packageDependencies.ui.PackagePatternProvider" id="package" order="before file" />
    <scopeDescriptorProvider implementation="com.intellij.ide.util.scopeChooser.HierarchyScopeDescriptorProvider"/>

    <patterns.patternClass className="com.intellij.patterns.PsiJavaPatterns" alias="java"/>

    <customScopesProvider implementation="com.intellij.analysis.PackagesScopesProvider"/>

    <highlightErrorFilter implementation="com.intellij.codeInsight.daemon.impl.analysis.JavadocErrorFilter"/>
    <daemon.changeLocalityDetector implementation="com.intellij.codeInsight.daemon.impl.JavaChangeLocalityDetector"/>

    <liveTemplateOptionalProcessor implementation="com.intellij.codeInsight.template.impl.ShortenToStaticImportProcessor"/>
    <liveTemplateOptionalProcessor implementation="com.intellij.codeInsight.template.impl.ShortenFQNamesProcessor"/>
    <liveTemplateOptionalProcessor implementation="com.intellij.codeInsight.template.impl.CodeBlockReformattingProcessor"/>
    <projectService serviceInterface="com.intellij.ide.todo.nodes.TodoTreeHelper"
                    serviceImplementation="com.intellij.ide.todo.nodes.TodoJavaTreeHelper"/>

    <createFromTemplateHandler implementation="com.intellij.ide.fileTemplates.JavaInternalTemplatesHandler"/>
    <createFromTemplateHandler implementation="com.intellij.ide.fileTemplates.JavaCreateFromTemplateHandler"/>

    <defaultTemplatePropertiesProvider implementation="com.intellij.ide.fileTemplates.TemplatePackagePropertyProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiClassFavoriteNodeProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiFieldFavoriteNodeProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiMethodFavoriteNodeProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiPackageFavoriteNodeProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.UsageFavoriteNodeProvider"/>

    <configurationType implementation="com.intellij.execution.applet.AppletConfigurationType"/>
    <configurationProducer implementation="com.intellij.execution.applet.AppletConfigurationProducer"/>
    <configurationType implementation="com.intellij.execution.application.ApplicationConfigurationType"/>
    <configurationType implementation="com.intellij.execution.jar.JarApplicationConfigurationType"/>
    <configurationType implementation="com.intellij.execution.scratch.JavaScratchConfigurationType"/>
    <runConfigurationProducer implementation="com.intellij.execution.jar.JarApplicationConfigurationProducer"/>
    <runConfigurationProducer implementation="com.intellij.execution.application.ApplicationConfigurationProducer"/>
    <runConfigurationProducer implementation="com.intellij.execution.scratch.JavaScratchConfigurationProducer"/>
    <configurationType implementation="com.intellij.execution.remote.RemoteConfigurationType"/>

    <runLineMarkerContributor language="JAVA" implementationClass="com.intellij.execution.application.ApplicationRunLineMarkerProvider"/>
    <pathMacroFilter implementation="com.intellij.execution.configuration.JavaRunConfigurationPathMacroFilter"/>

    <javaExpressionSurrounder implementation="com.intellij.debugger.codeinsight.JavaWithRuntimeCastSurrounder"/>

    <applicationService serviceInterface="com.intellij.packageDependencies.DependenciesVisitorFactory"
                        serviceImplementation="com.intellij.packageDependencies.JavaDependenciesVisitorFactory"/>
    <packageDependencies.visitor language="JAVA" implementationClass="com.intellij.packageDependencies.JavaDependencyVisitorFactory"/>

    <exceptionFilter implementation="com.intellij.execution.filters.ExceptionBaseFilterFactory"/>
    <exceptionFilter implementation="com.intellij.execution.filters.ExceptionExFilterFactory"/>
    <exceptionFilter implementation="com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotationExceptionFilterFactory"/>

    <internalFileTemplate name="Class"/>
    <internalFileTemplate name="Interface"/>
    <internalFileTemplate name="Enum"/>
    <internalFileTemplate name="AnnotationType" subject="@interface"/>
    <internalFileTemplate name="package-info"/>
    <internalFileTemplate name="module-info"/>

    <saveFileAsTemplateHandler implementation="com.intellij.ide.fileTemplates.SaveJavaAsTemplateHandler"/>

    <refactoring.copyHandler implementation="com.intellij.refactoring.copy.CopyClassesHandler" order="before copyJavaFilesOrPackages"/>
    <refactoring.copyHandler implementation="com.intellij.refactoring.copy.CopyFilesOrDirectoriesHandler" id="copyJavaFilesOrPackages"/>

    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.JavaMoveClassesOrPackagesHandler" order="before moveJavaFileOrDir"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveFilesOrDirectories.JavaMoveFilesOrDirectoriesHandler" id="moveJavaFileOrDir"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveMembers.MoveMembersHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveInstanceMethod.MoveInstanceMethodHandlerDelegate"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveInner.MoveInnerToUpperHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveInner.MoveInnerToUpperOrMembersHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.anonymousToInner.MoveAnonymousToInnerHandler"/>

    <refactoring.moveDirectoryWithClassesHelper implementation="com.intellij.refactoring.move.moveClassesOrPackages.JavaMoveDirectoryWithClassesHelper"/>

    <moveFileHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveJavaFileHandler" id="java"/>
    <refactoring.moveAllClassesInFileHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveJavaClassesInFileHandler" id="java"/>

    <refactoring.moveClassHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveJavaClassHandler" id="java"/>
    <refactoring.moveClassToInnerHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.JavaMoveClassToInnerHandler" id="java"/>
    <refactoring.moveMemberHandler language="JAVA" implementationClass="com.intellij.refactoring.move.moveMembers.MoveJavaMemberHandler" id="java"/>
    <refactoring.moveInnerHandler language="JAVA" implementationClass="com.intellij.refactoring.move.moveInner.MoveJavaInnerHandler" id="java"/>

    <refactoring.safeDeleteProcessor implementation="com.intellij.refactoring.safeDelete.JavaSafeDeleteProcessor" id="javaProcessor"/>
    <refactoring.safeDelete.JavaSafeDeleteDelegate implementationClass="com.intellij.refactoring.safeDelete.JavaSafeDeleteDelegateImpl" language="JAVA"/>
    <safeDelete.importSearcher implementation="com.intellij.refactoring.safeDelete.JavaImportSearcher"/>

    <refactoring.introduceParameterMethodUsagesProcessor implementation="com.intellij.refactoring.introduceParameter.JavaIntroduceParameterMethodUsagesProcessor"/>
    <refactoring.changeSignatureUsageProcessor implementation="com.intellij.refactoring.changeSignature.JavaChangeSignatureUsageProcessor" id="javaProcessor"/>

    <refactoring.helper implementation="com.intellij.refactoring.OptimizeImportsRefactoringHelper"/>

    <projectService serviceInterface="com.intellij.ide.projectView.impl.nodes.ProjectViewDirectoryHelper"
                    serviceImplementation="com.intellij.ide.projectView.impl.JavaProjectViewDirectoryHelper"/>

    <elementDescriptionProvider implementation="com.intellij.refactoring.util.JavaRefactoringElementDescriptionProvider"/>
    <elementDescriptionProvider implementation="com.intellij.refactoring.util.JavaNonCodeSearchElementDescriptionProvider"/>

    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.JavaColorSettingsPage"/>

    <scopeParserExtension implementation="com.intellij.psi.search.scope.packageSet.PatternPackageSetParserExtension"/>

    <macro implementation="com.intellij.ide.macro.ClasspathEntryMacro"/>
    <macro implementation="com.intellij.ide.macro.ClasspathMacro"/>
    <macro implementation="com.intellij.ide.macro.FileClassMacro"/>
    <macro implementation="com.intellij.ide.macro.FileFQPackage"/>
    <macro implementation="com.intellij.ide.macro.FilePackageMacro"/>
    <macro implementation="com.intellij.ide.macro.JavaDocPathMacro"/>
    <macro implementation="com.intellij.ide.macro.OutputPathMacro"/>

    <printOption implementation="com.intellij.codeEditor.printing.HyperlinksToClassesOption"/>

    <indexPatternBuilder implementation="com.intellij.psi.impl.search.JavaIndexPatternBuilder"/>
    <indexPatternBuilder implementation="com.intellij.psi.impl.search.JspIndexPatternBuilder"/>

    <applicationService serviceInterface="com.intellij.codeInsight.TargetElementUtil"
                        serviceImplementation="com.intellij.codeInsight.TargetElementUtil"/>
    <targetElementUtilExtender implementation="com.intellij.codeInsight.JavaTargetElementEvaluator"/>
    <targetElementEvaluator language="JAVA" implementationClass="com.intellij.codeInsight.JavaTargetElementEvaluator"/>

    <gotoClassContributor implementation="com.intellij.ide.util.gotoByName.DefaultClassNavigationContributor"/>
    <gotoSymbolContributor implementation="com.intellij.ide.util.gotoByName.DefaultSymbolNavigationContributor"/>
    <gotoSymbolContributor implementation="com.intellij.ide.util.gotoByName.JavaModuleNavigationContributor"/>
    <scopeTreeExpander implementation="com.intellij.ide.scopeView.ClassesScopeTreeStructureExpander"/>
    <lang.implementationTextSelectioner language="JAVA"
                                        implementationClass="com.intellij.codeInsight.hint.JavaImplementationTextSelectioner"/>
    <gotoDeclarationHandler implementation="com.intellij.codeInsight.navigation.actions.GotoBreakContinueHandler"/>
    <navbar implementation="com.intellij.ide.navigationToolbar.JavaNavBarExtension"/>
    <typeDeclarationProvider implementation="com.intellij.codeInsight.navigation.actions.JavaTypeDeclarationProvider"/>
    <gotoTargetRendererProvider implementation="com.intellij.codeInsight.navigation.JavaGotoTargetRendererProvider"/>

    <renameHandler implementation="com.intellij.refactoring.rename.DirectoryAsPackageRenameHandler"/>
    <renameHandler implementation="com.intellij.refactoring.rename.RenameWrongRefHandler"/>
    <rename.inplace.resolveSnapshotProvider language="JAVA"
                                            implementationClass="com.intellij.refactoring.rename.inplace.JavaResolveSnapshotProvider"/>
    <updateAddedFileProcessor implementation="com.intellij.psi.impl.file.JavaUpdateAddedFileProcessor"/>

    <findUsagesHandlerFactory implementation="com.intellij.find.findUsages.JavaFindUsagesHandlerFactory" id="java"
                              order="last, before default"/>
    <referenceProviderType key="Class Reference Provider"
                           implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.providers.JavaClassReferenceProvider"/>

    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiPackageProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiDirectoryProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaClassProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaMethodProcessor" id="javamethod"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaVariableProcessor" id="javaVariable"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameAliasingPomTargetProcessor"/>

    <renameInputValidator implementation="com.intellij.refactoring.rename.PsiPackageRenameValidator"/>
    <renameInputValidator implementation="com.intellij.refactoring.rename.JavaModuleRenameValidator"/>

    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticVariableRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticParametersRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticInheritorRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticTestRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.ConstructorParameterOnFieldRenameRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticOverloadsRenamerFactory"/>

    <nameSuggestionProvider implementation="com.intellij.refactoring.rename.JavaNameSuggestionProvider" id="java"/>

    <vetoRenameCondition implementation="com.intellij.refactoring.rename.JavaVetoRenameCondition"/>

    <readWriteAccessDetector implementation="com.intellij.codeInsight.highlighting.JavaReadWriteAccessDetector" id="java"/>
    <elementDescriptionProvider implementation="com.intellij.codeInsight.highlighting.JavaHighlightUsagesDescriptionProvider"/>

    <elementDescriptionProvider implementation="com.intellij.usageView.JavaUsageViewDescriptionProvider"/>

    <elementDescriptionProvider implementation="com.intellij.ide.util.JavaDeleteTypeDescriptionProvider"/>

    <referenceImporter implementation="com.intellij.codeInsight.daemon.impl.JavaReferenceImporter"/>

    <elementLookupRenderer implementation="com.intellij.codeInsight.lookup.impl.JavaElementLookupRenderer"/>

    <qualifiedNameProvider implementation="com.intellij.ide.actions.JavaQualifiedNameProvider"/>

    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.NonJavaFileGroupRuleProvider"/>
    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.JavaClassGroupRuleProvider"/>
    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.JavaMethodGroupRuleProvider"/>
    <usageTypeProvider implementation="com.intellij.usages.impl.rules.JavaUsageTypeProvider"/>
    <usageContextPanelProvider implementation="com.intellij.usageView.UsageContextDataflowToPanel$Provider"/>
    <usageContextPanelProvider implementation="com.intellij.usageView.UsageContextDataflowFromPanel$Provider"/>
    <importFilteringRule implementation="com.intellij.usages.impl.rules.ImportFilteringRule"/>

    <treeStructureProvider implementation="com.intellij.ide.projectView.impl.ClassesTreeStructureProvider" order="last"/>

    <defaultLiveTemplatesProvider implementation="com.intellij.codeInsight.template.impl.JavaDefaultLiveTemplatesProvider"/>
    <liveTemplateSubstitutor implementation="com.intellij.codeInsight.template.impl.JavaTemplateSubstitutor"/>

    <codeInsight.surroundWithRangeAdjuster implementation="com.intellij.codeInsight.generation.surroundWith.XmlSurroundWithRangeAdjuster"/>

    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaAnnotationIndex"/>
    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaAnonymousClassBaseRefOccurenceIndex"/>
    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaFieldNameIndex"/>
    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaFullClassNameIndex"/>
    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaMethodNameIndex"/>
    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaStaticMemberNameIndex"/>
    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaStaticMemberTypeIndex"/>
    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaShortClassNameIndex"/>
    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaSuperClassNameOccurenceIndex"/>
    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaMethodParameterTypesIndex"/>
    <stubIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaModuleNameIndex"/>

    <fileBasedIndex implementation="com.intellij.psi.impl.java.JavaFunctionalExpressionIndex"/>
    <fileBasedIndex implementation="com.intellij.codeInspection.bytecodeAnalysis.BytecodeAnalysisIndex"/>
    <fileBasedIndex implementation="com.intellij.psi.RefQueueIndex"/>
    <fileBasedIndex implementation="com.intellij.psi.impl.java.stubs.index.JavaAutoModuleNameIndex"/>

    <stubElementTypeHolder class="com.intellij.psi.impl.java.stubs.JavaStubElementTypes"/>

    <dom.customAnnotationChecker implementation="com.intellij.util.xml.impl.ExtendsClassChecker"/>

    <methodNavigationOffsetProvider implementation="com.intellij.codeInsight.navigation.JavaMethodNavigationOffsetProvider"/>

    <editorNavigation implementation="com.intellij.javadoc.JavadocNavigationDelegate"/>
    <enterHandlerDelegate implementation="com.intellij.javadoc.EnterInJavadocParamDescriptionHandler"/>

    <filePasteProvider implementation="com.intellij.ide.JavaFilePasteProvider" order="before fileList"/>

    <testFinder implementation="com.intellij.testIntegration.JavaTestFinder"/>
    <testCreator language="JAVA" implementationClass="com.intellij.testIntegration.JavaTestCreator"/>
    <testGenerator language="JAVA" implementationClass="com.intellij.testIntegration.createTest.JavaTestGenerator" />
    <runLineMarkerContributor language="JAVA" implementationClass="com.intellij.testIntegration.TestRunLineMarkerProvider"/>

    <callHierarchyProvider language="JAVA" implementationClass="com.intellij.ide.hierarchy.call.JavaCallHierarchyProvider"/>
    <methodHierarchyProvider language="JAVA" implementationClass="com.intellij.ide.hierarchy.method.JavaMethodHierarchyProvider"/>
    <typeHierarchyProvider language="JAVA" implementationClass="com.intellij.ide.hierarchy.type.JavaTypeHierarchyProvider"/>

    <optionsApplicabilityFilter implementation="com.intellij.application.options.JavaOptionsApplicabilityFilter"/>

    <templateCompletionProcessor implementation="com.intellij.codeInsight.template.macro.JavaTemplateCompletionProcessor"/>

    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.JavaWordSelectioner"/>
    <basicWordSelectionFilter implementation="com.intellij.codeInsight.editorActions.wordSelection.JavaBasicWordSelectionFilter"/>

    <fileIconPatcher implementation="com.intellij.ide.JavaFileIconPatcher"/>

    <idIndexer filetype="JAVA" implementationClass="com.intellij.psi.impl.cache.impl.idCache.JavaIdIndexer"/>
    <todoIndexer filetype="JAVA" implementationClass="com.intellij.psi.impl.cache.impl.idCache.JavaTodoIndexer"/>

    <bundledKeymapProvider implementation="com.intellij.openapi.keymap.JBuilderKeymapProvider"/>

    <problemFileHighlightFilter implementation="com.intellij.codeInsight.problems.DefaultProblemFileHighlightFilter"/>

    <problemHighlightFilter implementation="com.intellij.codeInsight.daemon.JavaProblemHighlightFilter"/>
    <highlightVisitor implementation="com.intellij.codeInsight.daemon.JavaRainbowVisitor"/>

    <projectViewPane implementation="com.intellij.ide.projectView.impl.PackageViewPane"/>

    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineParameterHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineToAnonymousClassHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inlineSuperClass.InlineSuperClassRefactoringHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineMethodHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineLocalHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineConstantFieldHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineStaticImportHandler"/>

    <previewHintProvider implementation="com.intellij.codeInsight.preview.JavaPreviewHintProvider"/>
    <filePropertyPusher implementation="com.intellij.openapi.roots.impl.JavaLanguageLevelPusher"/>

    <psiViewerExtension implementation="com.intellij.internal.psiView.PsiViewerMethodExtension"/>
    <psiViewerExtension implementation="com.intellij.internal.psiView.PsiViewerCodeFragmentExtension"/>
    <psiViewerExtension implementation="com.intellij.internal.psiView.PsiViewerExpressionExtension"/>

    <applicationService serviceInterface="com.intellij.profile.codeInspection.InspectionProfileManager"
                        serviceImplementation="com.intellij.profile.codeInspection.JavaAwareInspectionProfileManager"/>

    <resolveScopeProvider implementation="com.intellij.psi.impl.file.impl.JavaOutOfSourcesResolveScopeProvider"/>
    <resolveScopeEnlarger implementation="com.intellij.psi.NonClasspathResolveScopeEnlarger"/>
    <resolveScopeEnlarger implementation="com.intellij.ide.scratch.ScratchResolveScopeEnlarger"/>

    <xdebugger.debuggerSupport implementation="com.intellij.debugger.ui.JavaDebuggerSupport"/>
    <xdebugger.settings implementation="com.intellij.debugger.settings.JavaDebuggerSettings"/>
    <xdebugger.localAttachDebuggerProvider implementation="com.intellij.debugger.engine.JavaAttachDebuggerProvider"/>

    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaMethodBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaWildcardMethodBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaFieldBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaExceptionBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType"/>
    <debugger.jvmSmartStepIntoHandler implementation="com.intellij.debugger.actions.JavaSmartStepIntoHandler" order="last"/>
    <debugger.simplePropertyGetterProvider implementation="com.intellij.debugger.engine.JavaSimpleGetterProvider"/>
    <debugger.syntheticProvider implementation="com.intellij.debugger.engine.DefaultSyntheticProvider"/>
    <debugger.sourcePositionProvider implementation="com.intellij.debugger.engine.DefaultSourcePositionProvider" order="last"/>
    <debugger.sourcePositionHighlighter implementation="com.intellij.debugger.engine.JavaSourcePositionHighlighter"/>
    <java.elementFinder implementation="com.intellij.debugger.impl.AlternativeJreClassFinder" order="last"/>

    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.ColorObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.ImageObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.IconObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.GraphicsObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.BinaryRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.TimestampRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.ByteArrayAsStringRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.FileObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.StackTraceElementObjectRenderer"/>
    <debugger.nodeRenderer implementation="com.intellij.debugger.ui.tree.render.ClassObjectRenderer"/>

    <debugger.nodeNameAdjuster implementation="com.intellij.debugger.ui.impl.watch.FieldOuterLocalNameAdjuster"/>

    <dom.uiControlsProvider implementation="com.intellij.util.xml.impl.JavaDomApplicationComponent"/>

    <programRunner id="defaultDebugRunner" implementation="com.intellij.debugger.impl.GenericDebuggerRunner" order="last"/>
    <programRunner implementation="com.intellij.execution.jar.JarApplicationDebuggerRunner"/>

    <generation.topLevelFactory language="JAVA" implementationClass="com.intellij.psi.impl.JavaFactoryProvider"/>

    <itemPresentationProvider forClass="com.intellij.psi.PsiPackage"
                              implementationClass="com.intellij.psi.presentation.java.PackagePresentationProvider"/>
    <itemPresentationProvider forClass="com.intellij.psi.PsiClass"
                              implementationClass="com.intellij.psi.presentation.java.ClassPresentationProvider"/>
    <itemPresentationProvider forClass="com.intellij.psi.PsiMethod"
                              implementationClass="com.intellij.psi.presentation.java.MethodPresentationProvider"/>
    <itemPresentationProvider forClass="com.intellij.psi.PsiField"
                              implementationClass="com.intellij.psi.presentation.java.FieldPresentationProvider"/>
    <itemPresentationProvider forClass="com.intellij.psi.PsiLocalVariable"
                              implementationClass="com.intellij.psi.presentation.java.VariablePresentationProvider"/>
    <itemPresentationProvider forClass="com.intellij.psi.PsiParameter"
                              implementationClass="com.intellij.psi.presentation.java.VariablePresentationProvider"/>
    <itemPresentationProvider forClass="com.intellij.psi.PsiJavaModule"
                              implementationClass="com.intellij.psi.presentation.java.JavaModulePresentationProvider"/>

    <iconLayerProvider implementation="com.intellij.compiler.CompilerIconLayerProvider"/>

    <treeCopyHandler implementation="com.intellij.psi.impl.source.tree.JavaTreeCopyHandler"/>
    <treeGenerator implementation="com.intellij.psi.impl.source.tree.JavaTreeGenerator"/>

    <java.elementFinder implementation="com.intellij.psi.impl.PsiElementFinderImpl" id="java" order="first"/>
    <java.elementFinder implementation="com.intellij.psi.impl.PackagePrefixElementFinder"/>
    <java.elementFinder implementation="com.intellij.psi.impl.migration.MigrationElementFinder"/>

    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.ProjectStructureConfigurable"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ui.configuration.ProjectSettingsService"
                    serviceImplementation="com.intellij.openapi.roots.ui.configuration.IdeaProjectSettingsService"/>

    <projectTemplateParameterFactory implementation="com.intellij.openapi.module.BasePackageParameterFactory"/>
    <projectWizard.projectCategory implementation="com.intellij.ide.projectWizard.ModuleTypeCategory$JavaSE"/>
    <statistics.usagesCollector implementation="com.intellij.ide.projectWizard.ProjectCategoryUsagesCollector"/>
    <applicationService serviceImplementation="com.intellij.ide.projectWizard.ProjectCategoryUsagesCollector"/>

    <projectStructureDetector implementation="com.intellij.ide.util.projectWizard.importSources.impl.JavaProjectStructureDetector" order="first"/>

    <applicationService serviceImplementation="com.intellij.execution.JavaRunConfigurationExtensionManager"/>
    <runConfigurationExtension implementation="com.intellij.execution.testDiscovery.TestDiscoveryExtension"/>

    <regExpLanguageHost forClass="com.intellij.psi.impl.source.tree.java.PsiLiteralExpressionImpl"
                        implementationClass="com.intellij.psi.impl.JavaRegExpHost"/>

    <psi.referenceContributor language="JAVA" implementation="com.intellij.psi.impl.source.resolve.reference.impl.JavaReflectionReferenceContributor"/>

    <writingAccessProvider implementation="com.intellij.refactoring.util.ClsElementWritingAccessProvider"/>

    <fileTypeFactory implementation="com.intellij.spi.SPIFileTypeFactory"/>
    <lang.parserDefinition language="SPI" implementationClass="com.intellij.spi.parsing.SPIParserDefinition"/>
    <lang.commenter language="SPI" implementationClass="com.intellij.spi.SPICommenter"/>
    <annotator language="SPI" implementationClass="com.intellij.spi.SPIAnnotator"/>

    <gotoDeclarationHandler implementation="com.intellij.codeInsight.navigation.actions.GotoLambdaParameterHandler"/>

    <completion.contributor language="JAVA" id="methodsChainsCompletionContributor" order="first"
                            implementationClass="com.intellij.compiler.classFilesIndex.chainsSearch.completion.MethodsChainsCompletionContributor"/>
    <weigher order="first" key="completion" id="methodsChains"
             implementationClass="com.intellij.compiler.classFilesIndex.chainsSearch.completion.MethodsChainsWeigher"/>

    <applicationService serviceInterface="org.jetbrains.java.generate.template.toString.ToStringTemplatesManager"
                        serviceImplementation="org.jetbrains.java.generate.template.toString.ToStringTemplatesManager"/>
    <applicationService serviceInterface="com.intellij.codeInsight.generation.EqualsHashCodeTemplatesManager"
                        serviceImplementation="com.intellij.codeInsight.generation.EqualsHashCodeTemplatesManager"/>
    <applicationService serviceInterface="com.intellij.codeInsight.generation.GetterTemplatesManager"
                        serviceImplementation="com.intellij.codeInsight.generation.GetterTemplatesManager"/>
    <applicationService serviceInterface="com.intellij.codeInsight.generation.SetterTemplatesManager"
                        serviceImplementation="com.intellij.codeInsight.generation.SetterTemplatesManager"/>
    <applicationService serviceInterface="org.jetbrains.java.generate.GenerateToStringActionHandler"
                        serviceImplementation="org.jetbrains.java.generate.GenerateToStringActionHandlerImpl"/>
    <applicationService serviceInterface="org.jetbrains.java.generate.GenerateToStringContext"
                        serviceImplementation="org.jetbrains.java.generate.GenerateToStringContext"/>

    <localInspection groupPath="Java" language="JAVA" shortName="ClassHasNoToStringMethod" displayName="Class does not override 'toString()' method"
                     groupKey="group.names.toString.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="false" level="WARNING"
                     implementationClass="org.jetbrains.java.generate.inspection.ClassHasNoToStringMethodInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="FieldNotUsedInToString" displayName="Field not used in 'toString()' method" groupKey="group.names.toString.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="false" level="WARNING" runForWholeFile="true"
                     implementationClass="org.jetbrains.java.generate.inspection.FieldNotUsedInToStringInspection"/>
    <generation.toStringClassFilter implementation="org.jetbrains.generate.tostring.GenerateToStringInterfaceFilter" order="last"/>

    <codeInsight.unresolvedReferenceQuickFixProvider implementation="com.intellij.jarFinder.FindJarQuickFixProvider"/>
    <codeInsight.externalLibraryResolver
        implementation="com.intellij.codeInsight.daemon.impl.quickfix.JetBrainsAnnotationsExternalLibraryResolver"/>
    <codeInsight.externalLibraryResolver implementation="com.intellij.codeInspection.concurrencyAnnotations.JCiPExternalLibraryResolver"/>

    <refactoring.pullUpHelperFactory language="JAVA" implementationClass="com.intellij.refactoring.memberPullUp.JavaPullUpHelperFactory"/>
    <hierarchy.referenceProcessor implementation="com.intellij.ide.hierarchy.call.JavaCallReferenceProcessor"/>
    <projectTemplate projectType="JAVA_MODULE" templatePath="resources/projectTemplates/Java/Command_Line_App.zip"/>
    <generatedSourcesFilter implementation="com.intellij.openapi.roots.JavaGeneratedSourcesFilter"/>
    <outOfSourcesChecker implementation="com.intellij.openapi.projectRoots.JavaOutOfSourcesChecker"/>
    <refactoring.elementListenerProvider implementation="com.intellij.codeInspection.ex.AdditionalAnnotationsRefactoringElementListener"/>
    <projectOpenProcessor implementation="com.intellij.platform.PlatformProjectOpenProcessor" order="last"/>
    <projectService serviceInterface="com.intellij.platform.ProjectBaseDirectory"
                    serviceImplementation="com.intellij.platform.ProjectBaseDirectory"/>
    <projectService serviceInterface="com.intellij.codeInspection.bytecodeAnalysis.ProjectBytecodeAnalysis"
                    serviceImplementation="com.intellij.codeInspection.bytecodeAnalysis.ProjectBytecodeAnalysis"/>
    <projectService serviceInterface="com.intellij.psi.stubsHierarchy.HierarchyService"
                    serviceImplementation="com.intellij.psi.stubsHierarchy.impl.HierarchyServiceImpl"/>
    <fileBasedIndex implementation="com.intellij.psi.stubsHierarchy.impl.StubHierarchyIndex"/>
    <hierarchy.indexer implementation="com.intellij.psi.stubsHierarchy.impl.JavaStubIndexer"/>

    <spellchecker.support language="JAVA" implementationClass="com.intellij.spellchecker.JavaSpellcheckingStrategy"/>

    <codeInsight.template.postfixTemplateProvider language="JAVA"
                                                  implementationClass="com.intellij.codeInsight.template.postfix.templates.JavaPostfixTemplateProvider"/>
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.ExternalAnnotationsLineMarkerProvider"/>
    <codeInsight.linkHandler prefix="#assignment/" handlerClass="com.intellij.codeInsight.intention.impl.config.AssignmentTooltipLinkHandler"/>
    <nonProjectFileWritingAccessExtension
        implementation="com.intellij.codeInsight.ExternalAnnotationsNonProjectFileWritingAccessExtension"/>
    <lang.inspectionSuppressor language="JAVA" implementationClass="com.intellij.codeInspection.SuppressManagerImpl"/>
    <refactoring.moveInnerClassUsagesHandler language="JAVA" implementationClass="com.intellij.refactoring.move.moveInner.MoveInnerClassJavaUsagesHandler" id="java"/>
    <actionPromoter implementation="com.intellij.execution.testframework.TestTreeViewActionsPromoter"/>
    <refactoring.invertBoolean implementation="com.intellij.refactoring.invertBoolean.JavaInvertBooleanDelegate"/>
    <refactoring.introduceParameterObject language="JAVA"
                                          implementationClass="com.intellij.refactoring.introduceparameterobject.JavaIntroduceParameterObjectDelegate"/>
    <refactoring.pushDown language="JAVA" implementationClass="com.intellij.refactoring.memberPushDown.JavaPushDownDelegate" id="java"/>
    <library.javaSourceRootDetector implementation="com.intellij.openapi.roots.ui.configuration.LibraryJavaSourceRootDetector"/>

    <fileBasedIndex implementation="com.intellij.psi.impl.search.JavaNullMethodArgumentIndex"/>

    <codeUsageScopeOptimizer implementation="com.intellij.compiler.JavaCompilerReferencesCodeUsageScopeOptimizer"/>
  </extensions>

  <actions>
    <action id="ShowProjectStructureSettings" class="com.intellij.ide.actions.ShowStructureSettingsAction"
            icon="AllIcons.General.ProjectStructure">
      <add-to-group group-id="FileMainSettingsGroup" anchor="after" relative-to-action="ShowSettings"/>
      <add-to-group group-id="MainToolBarSettings" anchor="after" relative-to-action="ShowSettings"/>
      <add-to-group group-id="NavBarToolBar" anchor="last"/>
    </action>
    <action id="TemplateProjectStructure" class="com.intellij.ide.actions.TemplateProjectStructureAction">
      <add-to-group group-id="FileSettingsGroup" anchor="last"/>
    </action>
    <action id="ShowSiblings" class="com.intellij.codeInsight.hint.actions.ShowSiblingsAction">
      <add-to-group group-id="QuickActions" anchor="after" relative-to-action="QuickImplementations"/>
    </action>
    <action id="ShowRecentTests" class="com.intellij.testIntegration.ShowRecentTests">
      <keyboard-shortcut first-keystroke="control shift SEMICOLON" keymap="$default"/>
    </action>
    <action class="com.intellij.execution.testDiscovery.ConfigureTestDiscoveryAction" internal="true" id="TestDiscoveryIndexChooser" text="Choose external test discovery indices">
      <add-to-group group-id="Internal" anchor="last"/>
    </action>
  </actions>

</idea-plugin>
