package com.intellij.cce.actions

import org.junit.jupiter.api.Test
import org.junit.jupiter.api.Assertions.assertNotEquals

class AiPlatformDatasetParserTest {
    @Test
  fun parse() {
    // some lines from "BroadleafCommerce_BroadleafCommerce_86935362bc83608800eeb54262c4ade40a450642" dataset
    val content = """
{"suffix": "\n     * \u6267\u884c\u62e6\u622a\n     *\n     * @param joinPoint\n     * @param authCheck\n     * @return\n     */\n    @Around(\"@annotation(authCheck)\")\n    public Object doInterceptor(ProceedingJoinPoint joinPoint, AuthCheck authCheck) throws Throwable {\n        List<String> anyRole = Arrays.stream(authCheck.anyRole()).filter(StringUtils::isNotBlank).collect(Collectors.toList());\n        String mustRole = authCheck.mustRole();\n        RequestAttributes requestAttributes = RequestContextHolder.currentRequestAttributes();\n        HttpServletRequest request = ((ServletRequestAttributes) requestAttributes).getRequest();\n        // \u5f53\u524d\u767b\u5f55\u7528\u6237\n        User user = userService.getLoginUser(request);\n        // \u62e5\u6709\u4efb\u610f\u6743\u9650\u5373\u901a\u8fc7\n        if (CollectionUtils.isNotEmpty(anyRole)) {\n            String userRole = user.getUserRole();\n            if (!anyRole.contains(userRole)) {\n                throw new BusinessException(ErrorCode.NO_AUTH_ERROR);\n            }\n        }\n        // \u5fc5\u987b\u6709\u6240\u6709\u6743\u9650\u624d\u901a\u8fc7\n        if (StringUtils.isNotBlank(mustRole)) {\n            String userRole = user.getUserRole();\n            if (!mustRole.equals(userRole)) {\n                throw new BusinessException(ErrorCode.NO_AUTH_ERROR);\n            }\n        }\n        // \u901a\u8fc7\u6743\u9650\u6821\u9a8c\uff0c\u653e\u884c\n        return joinPoint.proceed();\n    }\n}\n\n", "golden": "@Aspect\n@Component\npublic class AuthInterceptor {\n\n    @Resource\n    private UserService userService;\n\n    // https://t.zsxq.com/0emozsIJh\n\n    /**", "metadata": {"context_limit": 1, "language": "Java", "path": "src/main/java/com/yupi/project/aop/AuthInterceptor.java", "source": "https://github.com/liyupi/yuapi-backend-public", "context_sorting_strategy": "first", "dataset_revision": "6667ee23c107d2f5126c2de6a5fa2cd4fc2b4a2f", "id": "part-00000-bf8b8190-4dd9-431b-a588-7e55ecff1457-c000.json#5516", "dataset_cutoff": null, "revision": "d28ee3fb4876588fd4e06b8be3447cd02d85d73f", "context_collection_strategy": "Directory", "dataset": "BB.backend.stars-Q1.prefix-1000.main.doc", "code_engine_version": "0.3.73"}, "prefix": "atisplus.core.toolkit.CollectionUtils;\nimport com.yupi.project.annotation.AuthCheck;\nimport com.yupi.project.common.ErrorCode;\nimport com.yupi.project.exception.BusinessException;\nimport com.yupi.project.service.UserService;\nimport com.yupi.yuapicommon.model.entity.User;\nimport org.apache.commons.lang3.StringUtils;\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.context.request.RequestAttributes;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\n\nimport javax.annotation.Resource;\nimport javax.servlet.http.HttpServletRequest;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n/**\n * \u6743\u9650\u6821\u9a8c AOP\n *\n * @author <a href=\"https://github.com/liyupi\">\u7a0b\u5e8f\u5458\u9c7c\u76ae</a>\n * @from <a href=\"https://yupi.icu\">\u7f16\u7a0b\u5bfc\u822a\u77e5\u8bc6\u661f\u7403</a>\n */\n", "contexts": []}
{"suffix": "\n    @Resource\n    public void setFieldInfoService(FieldInfoService fieldInfoService) {\n        TableSchemaBuilder.fieldInfoService = fieldInfoService;\n    }\n\n    /**\n     * \u65e5\u671f\u683c\u5f0f\n     */\n    private static final String[] DATE_PATTERNS = {\"yyyy-MM-dd\", \"yyyy\u5e74MM\u6708dd\u65e5\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy-MM-dd HH:mm\", \"yyyy/MM/dd\", \"yyyy/MM/dd HH:mm:ss\", \"yyyy/MM/dd HH:mm\", \"yyyyMMdd\"};\n\n    /**\n     * \u667a\u80fd\u6784\u5efa\n     *\n     * @param content\n     * @return\n     */\n    public static TableSchema buildFromAuto(String content) {\n        if (StringUtils.isBlank(content)) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR);\n        }\n        // \u5207\u5206\u5355\u8bcd\n        String[] words = content.split(\"[,\uff0c]\");\n        if (ArrayUtils.isEmpty(words) || words.length > 20) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR);\n        }\n        // \u6839\u636e\u5355\u8bcd\u53bb\u8bcd\u5e93\u91cc\u5339\u914d\u5217\u4fe1\u606f\uff0c\u672a\u5339\u914d\u5230\u7684\u4f7f\u7528\u9ed8\u8ba4\u503c\n        QueryWrapper<FieldInfo> queryWrapper = new QueryWrapper<>();\n        queryWrapper.in(\"name\", Arrays.asList(words)).or().in(\"fieldName\", Arrays.asList(words));\n        List<FieldInfo> fieldInfoList = fieldInfoService.list(queryWrapper);\n        // \u540d\u79f0 => \u5b57\u6bb5\u4fe1\u606f\n        Map<String, List<FieldInfo>> nameFieldInfoMap = fieldInfoList.stream().collect(Collectors.groupingBy(FieldInfo::getName));\n        // \u5b57\u6bb5\u540d\u79f0 => \u5b57\u6bb5\u4fe1\u606f\n        Map<String, List<FieldInfo>> fieldNameFieldInfoMap = fieldInfoList.stream().collect(Collectors.groupingBy(FieldInfo::getFieldName));\n        TableSchema tableSchema = new TableSchema();\n        tableSchema.setTableName(\"my_table\");\n        tableSchema.setTableComment(\"\u81ea\u52a8\u751f\u6210\u7684\u8868\");\n        List<Field> fieldList = new ArrayList<>();\n        for (String word : words) {\n            Field field;\n            List<FieldInfo> infoList = Optional.ofNullable(nameFieldInfoMap.get(word))\n                    .orElse(fieldNameFieldInfoMap.get(word));\n            if (CollectionUtils.isNotEmpty(infoList)) {\n                field = GSON.fromJson(infoList.get(0).getContent(), Field.class);\n            } else {\n ", "golden": "@Component\n@Slf4j\npublic class TableSchemaBuilder {\n\n    private final static Gson GSON = new Gson();\n\n    private static FieldInfoService fieldInfoService;\n\n    private static final MySQLDialect sqlDialect = new MySQLDialect();\n", "metadata": {"context_limit": 1, "language": "Java", "path": "src/main/java/com/yupi/sqlfather/core/schema/TableSchemaBuilder.java", "source": "https://github.com/liyupi/sql-father-backend-public", "context_sorting_strategy": "first", "dataset_revision": "6667ee23c107d2f5126c2de6a5fa2cd4fc2b4a2f", "id": "part-00000-bf8b8190-4dd9-431b-a588-7e55ecff1457-c000.json#103", "dataset_cutoff": null, "revision": "57a00afb82a9546385f7cb6fd60ae20f6db058f4", "context_collection_strategy": "Directory", "dataset": "BB.backend.stars-Q1.prefix-1000.main.doc", "code_engine_version": "0.3.73"}, "prefix": "t com.google.gson.Gson;\nimport com.yupi.sqlfather.common.ErrorCode;\nimport com.yupi.sqlfather.core.schema.TableSchema.Field;\nimport com.yupi.sqlfather.core.builder.sql.MySQLDialect;\nimport com.yupi.sqlfather.core.model.enums.FieldTypeEnum;\nimport com.yupi.sqlfather.core.model.enums.MockTypeEnum;\nimport com.yupi.sqlfather.exception.BusinessException;\nimport com.yupi.sqlfather.model.entity.FieldInfo;\nimport com.yupi.sqlfather.service.FieldInfoService;\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.commons.collections4.CollectionUtils;\nimport org.apache.commons.lang3.ArrayUtils;\nimport org.apache.commons.lang3.StringUtils;\nimport org.apache.commons.lang3.time.DateUtils;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport javax.annotation.Resource;\nimport java.util.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.util.stream.Collectors;\n\n/**\n * \u8868\u6982\u8981\u751f\u6210\u5668\n *\n * @author https://github.com/liyupi\n */\n", "contexts": [{"language": "Java", "origin": "Directory", "path": "src/main/java/com/yupi/sqlfather/core/schema/SchemaException.java", "content": "package com.yupi.sqlfather.core.schema;\n\n/**\n * SQL \u76f8\u5173\u5f02\u5e38\n *\n * @author https://github.com/liyupi\n */\npublic class SchemaException extends RuntimeException {\n\n    public SchemaException() {\n    }\n\n    public SchemaException(String message) {\n        super(message);\n    }\n\n    public SchemaException(String message, Throwable cause) {\n        super(message, cause);\n    }\n\n    public SchemaException(Throwable cause) {\n        super(cause);\n    }\n\n    public SchemaException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {\n        super(message, cause, enableSuppression, writableStackTrace);\n    }\n}\n"}]}
{"suffix": "\n        private String javaType;\n\n        /**\n         * \u6ce8\u91ca\uff08\u5b57\u6bb5\u4e2d\u6587\u540d\uff09\n         */\n        private String comment;\n    }\n\n}\n", "golden": "@Data\n    public static class FieldDTO {\n        /**\n         * \u5b57\u6bb5\u540d\n         */\n        private String fieldName;\n\n        /**\n         * Java \u7c7b\u578b\n         */", "metadata": {"context_limit": 1, "language": "Java", "path": "src/main/java/com/yupi/sqlfather/core/model/dto/JavaEntityGenerateDTO.java", "source": "https://github.com/liyupi/sql-father-backend-public", "context_sorting_strategy": "first", "dataset_revision": "6667ee23c107d2f5126c2de6a5fa2cd4fc2b4a2f", "id": "part-00000-bf8b8190-4dd9-431b-a588-7e55ecff1457-c000.json#30522", "dataset_cutoff": null, "revision": "57a00afb82a9546385f7cb6fd60ae20f6db058f4", "context_collection_strategy": "Directory", "dataset": "BB.backend.stars-Q1.prefix-1000.main.doc", "code_engine_version": "0.3.73"}, "prefix": "package com.yupi.sqlfather.core.model.dto;\n\nimport java.util.List;\nimport lombok.Data;\n\n/**\n * Java \u5b9e\u4f53\u751f\u6210\u5c01\u88c5\u7c7b\n *\n * @author https://github.com/liyupi\n */\n@Data\npublic class JavaEntityGenerateDTO {\n\n    /**\n     * \u7c7b\u540d\n     */\n    private String className;\n\n    /**\n     * \u7c7b\u6ce8\u91ca\n     */\n    private String classComment;\n\n    /**\n     * \u5217\u4fe1\u606f\u5217\u8868\n     */\n    private List<FieldDTO> fieldList;\n\n    /**\n     * \u5217\u4fe1\u606f\n     */\n    ", "contexts": [{"language": "Java", "origin": "Directory", "path": "src/main/java/com/yupi/sqlfather/core/model/dto/JavaObjectGenerateDTO.java", "content": "package com.yupi.sqlfather.core.model.dto;\n\nimport java.util.List;\nimport lombok.Data;\n\n/**\n * Java \u5bf9\u8c61\u751f\u6210\u5c01\u88c5\u7c7b\n *\n * @author https://github.com/liyupi\n */\n@Data\npublic class JavaObjectGenerateDTO {\n\n    /**\n     * \u7c7b\u540d\n     */\n    private String className;\n\n    /**\n     * \u5bf9\u8c61\u540d\n     */\n    private String objectName;\n\n    /**\n     * \u5217\u4fe1\u606f\u5217\u8868\n     */\n    private List<FieldDTO> fieldList;\n\n    /**\n     * \u5217\u4fe1\u606f\n     */\n    @Data\n    public static class FieldDTO {\n        /**\n         * set \u65b9\u6cd5\u540d\n         */\n        private String setMethod;\n\n        /**\n         * \u503c\n         */\n        private String value;\n    }\n\n}\n"}]}
{"suffix": "", "golden": "@Data\npublic class PostDoThumbRequest implements Serializable {\n\n    /**\n     * \u5e16\u5b50 id\n     */\n    private long postId;\n\n    private static final long serialVersionUID = 1L;\n}", "metadata": {"context_limit": 1, "language": "Java", "path": "src/main/java/com/yupi/project/model/dto/post/PostDoThumbRequest.java", "source": "https://github.com/liyupi/yuapi-backend-public", "context_sorting_strategy": "first", "dataset_revision": "6667ee23c107d2f5126c2de6a5fa2cd4fc2b4a2f", "id": "part-00000-bf8b8190-4dd9-431b-a588-7e55ecff1457-c000.json#34006", "dataset_cutoff": null, "revision": "d28ee3fb4876588fd4e06b8be3447cd02d85d73f", "context_collection_strategy": "Directory", "dataset": "BB.backend.stars-Q1.prefix-1000.main.doc", "code_engine_version": "0.3.73"}, "prefix": "package com.yupi.project.model.dto.post;\n\nimport lombok.Data;\n\nimport java.io.Serializable;\n\n/**\n * \u70b9\u8d5e / \u53d6\u6d88\u70b9\u8d5e\u8bf7\u6c42\n *\n * @author <a href=\"https://github.com/liyupi\">\u7a0b\u5e8f\u5458\u9c7c\u76ae</a>\n * @from <a href=\"https://yupi.icu\">\u7f16\u7a0b\u5bfc\u822a\u77e5\u8bc6\u661f\u7403</a>\n */\n", "contexts": [{"language": "Java", "origin": "Directory", "path": "src/main/java/com/yupi/project/model/dto/post/PostQueryRequest.java", "content": "package com.yupi.project.model.dto.post;\n\nimport com.yupi.project.common.PageRequest;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\nimport java.io.Serializable;\n\n/**\n * \u67e5\u8be2\u8bf7\u6c42\n *\n * @author <a href=\"https://github.com/liyupi\">\u7a0b\u5e8f\u5458\u9c7c\u76ae</a>\n * @from <a href=\"https://yupi.icu\">\u7f16\u7a0b\u5bfc\u822a\u77e5\u8bc6\u661f\u7403</a>\n */\n@EqualsAndHashCode(callSuper = true)\n@Data\npublic class PostQueryRequest extends PageRequest implements Serializable {\n\n    /**\n     * \u5e74\u9f84\n     */\n    private Integer age;\n\n    /**\n     * \u6027\u522b\uff080-\u7537, 1-\u5973\uff09\n     */\n    private Integer gender;\n\n    /**\n     * \u5b66\u5386\n     */\n    private String education;\n\n    /**\n     * \u5730\u70b9\n     */\n    private String place;\n\n    /**\n     * \u804c\u4e1a\n     */\n    private String job;\n\n    /**\n     * \u8054\u7cfb\u65b9\u5f0f\n     */\n    private String contact;\n\n    /**\n     * \u611f\u60c5\u7ecf\u5386\n     */\n    private String loveExp;\n\n    /**\n     * \u5185\u5bb9\uff08\u4e2a\u4eba\u4ecb\u7ecd\uff09\uff0c\u652f\u6301\u6a21\u7cca\u67e5\u8be2\n     */\n    private String content;\n\n    /**\n     * \u72b6\u6001\uff080-\u5f85\u5ba1\u6838, 1-\u901a\u8fc7, 2-\u62d2\u7edd\uff09\n     */\n    private Integer reviewStatus;\n\n    /**\n     * \u521b\u5efa\u7528\u6237 id\n     */\n    private Long userId;\n\n    private static final long serialVersionUID = 1L;\n}"}]}
{"suffix": "\n     */\n    private Integer gender;\n\n    /**\n     * \u5b66\u5386\n     */\n    private String education;\n\n    /**\n     * \u5730\u70b9\n     */\n    private String place;\n\n    /**\n     * \u804c\u4e1a\n     */\n    private String job;\n\n    /**\n     * \u8054\u7cfb\u65b9\u5f0f\n     */\n    private String contact;\n\n    /**\n     * \u611f\u60c5\u7ecf\u5386\n     */\n    private String loveExp;\n\n    /**\n     * \u5185\u5bb9\uff08\u4e2a\u4eba\u4ecb\u7ecd\uff09\uff0c\u652f\u6301\u6a21\u7cca\u67e5\u8be2\n     */\n    private String content;\n\n    /**\n     * \u72b6\u6001\uff080-\u5f85\u5ba1\u6838, 1-\u901a\u8fc7, 2-\u62d2\u7edd\uff09\n     */\n    private Integer reviewStatus;\n\n    /**\n     * \u521b\u5efa\u7528\u6237 id\n     */\n    private Long userId;\n\n    private static final long serialVersionUID = 1L;\n}", "golden": "@Data\npublic class PostQueryRequest extends PageRequest implements Serializable {\n\n    /**\n     * \u5e74\u9f84\n     */\n    private Integer age;\n\n    /**\n     * \u6027\u522b\uff080-\u7537, 1-\u5973\uff09", "metadata": {"context_limit": 1, "language": "Java", "path": "src/main/java/com/yupi/project/model/dto/post/PostQueryRequest.java", "source": "https://github.com/liyupi/yuapi-backend-public", "context_sorting_strategy": "first", "dataset_revision": "6667ee23c107d2f5126c2de6a5fa2cd4fc2b4a2f", "id": "part-00000-bf8b8190-4dd9-431b-a588-7e55ecff1457-c000.json#34129", "dataset_cutoff": null, "revision": "d28ee3fb4876588fd4e06b8be3447cd02d85d73f", "context_collection_strategy": "Directory", "dataset": "BB.backend.stars-Q1.prefix-1000.main.doc", "code_engine_version": "0.3.73"}, "prefix": "package com.yupi.project.model.dto.post;\n\nimport com.yupi.project.common.PageRequest;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\nimport java.io.Serializable;\n\n/**\n * \u67e5\u8be2\u8bf7\u6c42\n *\n * @author <a href=\"https://github.com/liyupi\">\u7a0b\u5e8f\u5458\u9c7c\u76ae</a>\n * @from <a href=\"https://yupi.icu\">\u7f16\u7a0b\u5bfc\u822a\u77e5\u8bc6\u661f\u7403</a>\n */\n@EqualsAndHashCode(callSuper = true)\n", "contexts": [{"language": "Java", "origin": "Directory", "path": "src/main/java/com/yupi/project/model/dto/post/PostDoThumbRequest.java", "content": "package com.yupi.project.model.dto.post;\n\nimport lombok.Data;\n\nimport java.io.Serializable;\n\n/**\n * \u70b9\u8d5e / \u53d6\u6d88\u70b9\u8d5e\u8bf7\u6c42\n *\n * @author <a href=\"https://github.com/liyupi\">\u7a0b\u5e8f\u5458\u9c7c\u76ae</a>\n * @from <a href=\"https://yupi.icu\">\u7f16\u7a0b\u5bfc\u822a\u77e5\u8bc6\u661f\u7403</a>\n */\n@Data\npublic class PostDoThumbRequest implements Serializable {\n\n    /**\n     * \u5e16\u5b50 id\n     */\n    private long postId;\n\n    private static final long serialVersionUID = 1L;\n}"}]}
{"suffix": "\n", "golden": "@Data\npublic class User {\n\n    private String username;\n}", "metadata": {"context_limit": 1, "language": "Java", "path": "yuapi-client-sdk/src/main/java/com/yupi/yuapiclientsdk/model/User.java", "source": "https://github.com/liyupi/yuapi-backend-public", "context_sorting_strategy": "first", "dataset_revision": "6667ee23c107d2f5126c2de6a5fa2cd4fc2b4a2f", "id": "part-00000-bf8b8190-4dd9-431b-a588-7e55ecff1457-c000.json#34670", "dataset_cutoff": null, "revision": "d28ee3fb4876588fd4e06b8be3447cd02d85d73f", "context_collection_strategy": "Directory", "dataset": "BB.backend.stars-Q1.prefix-1000.main.doc", "code_engine_version": "0.3.73"}, "prefix": "package com.yupi.yuapiclientsdk.model;\n\nimport lombok.Data;\n\n/**\n * \u7528\u6237\n *\n * @author <a href=\"https://github.com/liyupi\">\u7a0b\u5e8f\u5458\u9c7c\u76ae</a>\n * @from <a href=\"https://yupi.icu\">\u7f16\u7a0b\u5bfc\u822a\u77e5\u8bc6\u661f\u7403</a>\n */\n", "contexts": []}
{"suffix": "\n        }\n        QueryWrapper<InterfaceInfo> queryWrapper = new QueryWrapper<>();\n        queryWrapper.eq(\"url\", url);\n        queryWrapper.eq(\"method\", method);\n        return interfaceInfoMapper.selectOne(queryWrapper);\n    }\n\n    // [\u7f16\u7a0b\u77e5\u8bc6\u661f\u7403](https://yupi.icu) \u8fde\u63a5\u4e07\u540d\u7f16\u7a0b\u7231\u597d\u8005\uff0c\u4e00\u8d77\u4f18\u79c0\uff0120000+ \u5c0f\u4f19\u4f34\u4ea4\u6d41\u5206\u4eab\u3001100+ \u5404\u65b9\u5411\u7f16\u7a0b\u4ea4\u6d41\u7fa4\u300140+ \u5927\u5382\u5609\u5bbe\u4e00\u5bf9\u4e00\u7b54\u7591\u30014000+ \u7f16\u7a0b\u95ee\u7b54\u53c2\u8003\n}\n", "golden": "@DubboService\npublic class InnerInterfaceInfoServiceImpl implements InnerInterfaceInfoService {\n\n    @Resource\n    private InterfaceInfoMapper interfaceInfoMapper;\n\n    @Override\n    public InterfaceInfo getInterfaceInfo(String url, String method) {\n        if (StringUtils.isAnyBlank(url, method)) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR);", "metadata": {"context_limit": 1, "language": "Java", "path": "src/main/java/com/yupi/project/service/impl/inner/InnerInterfaceInfoServiceImpl.java", "source": "https://github.com/liyupi/yuapi-backend-public", "context_sorting_strategy": "first", "dataset_revision": "6667ee23c107d2f5126c2de6a5fa2cd4fc2b4a2f", "id": "part-00000-bf8b8190-4dd9-431b-a588-7e55ecff1457-c000.json#27593", "dataset_cutoff": null, "revision": "d28ee3fb4876588fd4e06b8be3447cd02d85d73f", "context_collection_strategy": "Directory", "dataset": "BB.backend.stars-Q1.prefix-1000.main.doc", "code_engine_version": "0.3.73"}, "prefix": "package com.yupi.project.service.impl.inner;\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.yupi.project.common.ErrorCode;\nimport com.yupi.project.exception.BusinessException;\nimport com.yupi.project.mapper.InterfaceInfoMapper;\nimport com.yupi.yuapicommon.model.entity.InterfaceInfo;\nimport com.yupi.yuapicommon.service.InnerInterfaceInfoService;\nimport org.apache.commons.lang3.StringUtils;\nimport org.apache.dubbo.config.annotation.DubboService;\n\nimport javax.annotation.Resource;\n\n/**\n * \u5185\u90e8\u63a5\u53e3\u670d\u52a1\u5b9e\u73b0\u7c7b\n *\n * @author <a href=\"https://github.com/liyupi\">\u7a0b\u5e8f\u5458\u9c7c\u76ae</a>\n * @from <a href=\"https://yupi.icu\">\u7f16\u7a0b\u5bfc\u822a\u77e5\u8bc6\u661f\u7403</a>\n */\n", "contexts": []}
{"suffix": "\n}", "golden": "@EqualsAndHashCode(callSuper = true)\n@Data\npublic class PostVO extends Post {\n\n    /**\n     * \u662f\u5426\u5df2\u70b9\u8d5e\n     */\n    private Boolean hasThumb;\n\n    private static final long serialVersionUID = 1L;", "metadata": {"context_limit": 1, "language": "Java", "path": "src/main/java/com/yupi/project/model/vo/PostVO.java", "source": "https://github.com/liyupi/yuapi-backend-public", "context_sorting_strategy": "first", "dataset_revision": "6667ee23c107d2f5126c2de6a5fa2cd4fc2b4a2f", "id": "part-00000-bf8b8190-4dd9-431b-a588-7e55ecff1457-c000.json#9708", "dataset_cutoff": null, "revision": "d28ee3fb4876588fd4e06b8be3447cd02d85d73f", "context_collection_strategy": "Directory", "dataset": "BB.backend.stars-Q1.prefix-1000.main.doc", "code_engine_version": "0.3.73"}, "prefix": "package com.yupi.project.model.vo;\n\nimport com.yupi.project.model.entity.Post;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n/**\n * \u5e16\u5b50\u89c6\u56fe\n *\n * @author <a href=\"https://github.com/liyupi\">\u7a0b\u5e8f\u5458\u9c7c\u76ae</a>\n * @from <a href=\"https://yupi.icu\">\u7f16\u7a0b\u5bfc\u822a\u77e5\u8bc6\u661f\u7403</a>\n * @TableName product\n */\n", "contexts": [{"language": "Java", "origin": "Directory", "path": "src/main/java/com/yupi/project/model/vo/UserVO.java", "content": "package com.yupi.project.model.vo;\n\nimport lombok.Data;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\n/**\n * \u7528\u6237\u89c6\u56fe\n *\n * @TableName user\n */\n@Data\npublic class UserVO implements Serializable {\n    /**\n     * id\n     */\n    private Long id;\n\n    /**\n     * \u7528\u6237\u6635\u79f0\n     */\n    private String userName;\n\n    /**\n     * \u8d26\u53f7\n     */\n    private String userAccount;\n\n    /**\n     * \u7528\u6237\u5934\u50cf\n     */\n    private String userAvatar;\n\n    /**\n     * \u6027\u522b\n     */\n    private Integer gender;\n\n    /**\n     * \u7528\u6237\u89d2\u8272: user, admin\n     */\n    private String userRole;\n\n    /**\n     * \u521b\u5efa\u65f6\u95f4\n     */\n    private Date createTime;\n\n    /**\n     * \u66f4\u65b0\u65f6\u95f4\n     */\n    private Date updateTime;\n\n    // [\u7f16\u7a0b\u5bfc\u822a\u5b66\u4e60\u5708](https://t.zsxq.com/0emozsIJh) \u96f6\u57fa\u7840\u5feb\u901f\u5165\u95e8\u7f16\u7a0b\uff0c\u4e0d\u8d70\u5f2f\u8def\uff0130+ \u539f\u521b\u5b66\u4e60\u8def\u7ebf\u548c\u4e13\u680f\u30011000+ \u7f16\u7a0b\u7cbe\u534e\u6587\u7ae0\u3001500+ \u7f16\u7a0b\u5b66\u4e60\u6307\u5357\u300120T+ \u7f16\u7a0b\u8d44\u6e90\u6c47\u603b\n\n    private static final long serialVersionUID = 1L;\n}"}]}
{"suffix": "\n}", "golden": "@EqualsAndHashCode(callSuper = true)\n@Data\npublic class PostVO extends Post {\n\n    /**\n     * \u662f\u5426\u5df2\u70b9\u8d5e\n     */\n    private Boolean hasThumb;\n\n    private static final long serialVersionUID = 1L;", "metadata": {"context_limit": 1, "language": "Java", "path": "yuapi-common/src/main/java/com/yupi/yuapicommon/model/vo/PostVO.java", "source": "https://github.com/liyupi/yuapi-backend-public", "context_sorting_strategy": "first", "dataset_revision": "6667ee23c107d2f5126c2de6a5fa2cd4fc2b4a2f", "id": "part-00000-bf8b8190-4dd9-431b-a588-7e55ecff1457-c000.json#9565", "dataset_cutoff": null, "revision": "d28ee3fb4876588fd4e06b8be3447cd02d85d73f", "context_collection_strategy": "Directory", "dataset": "BB.backend.stars-Q1.prefix-1000.main.doc", "code_engine_version": "0.3.73"}, "prefix": "package com.yupi.yuapicommon.model.vo;\n\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\nimport com.yupi.yuapicommon.model.entity.Post;\n\n/**\n * \u5e16\u5b50\u89c6\u56fe\n *\n * @author <a href=\"https://github.com/liyupi\">\u7a0b\u5e8f\u5458\u9c7c\u76ae</a>\n * @from <a href=\"https://yupi.icu\">\u7f16\u7a0b\u5bfc\u822a\u77e5\u8bc6\u661f\u7403</a>\n */\n", "contexts": []}
{"suffix": "\n     * \u4e3e\u62a5\u5b9e\u4f53\u7c7b\u578b\uff080-\u8bcd\u5e93\uff09\n     */\n    private Integer type;\n\n    /**\n     * \u88ab\u4e3e\u62a5\u5bf9\u8c61 id\n     */\n    private Long reportedId;\n\n    /**\n     * \u88ab\u4e3e\u62a5\u7528\u6237 id\n     */\n    private Long reportedUserId;\n\n    /**\n     * \u72b6\u6001\uff080-\u672a\u5904\u7406, 1-\u5df2\u5904\u7406\uff09\n     */\n    private Integer status;\n\n    /**\n     * \u521b\u5efa\u7528\u6237 id\n     */\n    private Long userId;\n\n    private static final long serialVersionUID = 1L;\n}", "golden": "@EqualsAndHashCode(callSuper = true)\n@Data\npublic class ReportQueryRequest extends PageRequest implements Serializable {\n\n    /**\n     * \u5185\u5bb9\n     */\n    private String content;\n\n    /**", "metadata": {"context_limit": 1, "language": "Java", "path": "src/main/java/com/yupi/sqlfather/model/dto/ReportQueryRequest.java", "source": "https://github.com/liyupi/sql-father-backend-public", "context_sorting_strategy": "first", "dataset_revision": "6667ee23c107d2f5126c2de6a5fa2cd4fc2b4a2f", "id": "part-00000-bf8b8190-4dd9-431b-a588-7e55ecff1457-c000.json#3099", "dataset_cutoff": null, "revision": "57a00afb82a9546385f7cb6fd60ae20f6db058f4", "context_collection_strategy": "Directory", "dataset": "BB.backend.stars-Q1.prefix-1000.main.doc", "code_engine_version": "0.3.73"}, "prefix": "package com.yupi.sqlfather.model.dto;\n\nimport com.yupi.sqlfather.common.PageRequest;\nimport java.io.Serializable;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n/**\n * \u67e5\u8be2\u8bf7\u6c42\n *\n * @author https://github.com/liyupi\n */\n", "contexts": [{"language": "Java", "origin": "Directory", "path": "src/main/java/com/yupi/sqlfather/model/dto/FieldInfoAddRequest.java", "content": "package com.yupi.sqlfather.model.dto;\n\nimport java.io.Serializable;\nimport lombok.Data;\n\n/**\n * \u521b\u5efa\u8bf7\u6c42\n *\n * @author https://github.com/liyupi\n */\n@Data\npublic class FieldInfoAddRequest implements Serializable {\n\n    /**\n     * \u540d\u79f0\n     */\n    private String name;\n\n    /**\n     * \u5185\u5bb9\n     */\n    private String content;\n\n    private static final long serialVersionUID = 1L;\n}"}]}
    """.trimIndent()

    AiPlatformDatasetParser().parse(content).forEach { it.validate() }
  }

  private fun AiPlatformDatasetItem.validate() {
    assertNotEquals(golden, "")
    assertNotEquals(prefix, "")
    assertNotEquals(metadata.path, "")
  }
}