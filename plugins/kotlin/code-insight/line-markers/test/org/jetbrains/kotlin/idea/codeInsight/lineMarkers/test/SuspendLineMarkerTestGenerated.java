// Copyright 2000-2022 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.codeInsight.lineMarkers.test;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("code-insight/line-markers")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/suspend")
public class SuspendLineMarkerTestGenerated extends AbstractSuspendLineMarkerTest {
    @TestMetadata("callChain.kt")
    public void testCallChain() throws Exception {
        performTest();
    }

    @TestMetadata("callableReference.kt")
    public void testCallableReference() throws Exception {
        performTest();
    }

    @TestMetadata("coroutineContext.kt")
    public void testCoroutineContext() throws Exception {
        performTest();
    }

    @TestMetadata("forLoop.kt")
    public void testForLoop() throws Exception {
        performTest();
    }

    @TestMetadata("implicitReceiver.kt")
    public void testImplicitReceiver() throws Exception {
        performTest();
    }

    @TestMetadata("import.kt")
    public void testImport() throws Exception {
        performTest();
    }

    @TestMetadata("infix.kt")
    public void testInfix() throws Exception {
        performTest();
    }

    @TestMetadata("insideSuspendLambda.kt")
    public void testInsideSuspendLambda() throws Exception {
        performTest();
    }

    @TestMetadata("notSuspend.kt")
    public void testNotSuspend() throws Exception {
        performTest();
    }

    @TestMetadata("parameter.kt")
    public void testParameter() throws Exception {
        performTest();
    }

    @TestMetadata("plusOperator.kt")
    public void testPlusOperator() throws Exception {
        performTest();
    }

    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        performTest();
    }

    @TestMetadata("variable.kt")
    public void testVariable() throws Exception {
        performTest();
    }
}
