// Copyright 2000-2025 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.k2.intentions.tests;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.base.plugin.KotlinPluginMode;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("code-insight/intentions-k2/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public abstract class K2MultiFileIntentionTestGenerated extends AbstractK2MultiFileIntentionTest {
    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../../idea/tests/testData/multiFileIntentions/moveDeclarationToSeparateFile")
    public static class MoveDeclarationToSeparateFile extends AbstractK2MultiFileIntentionTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("moveClassToExistingFile/moveClassToExistingFile.test")
        public void testMoveClassToExistingFile_MoveClassToExistingFile() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/moveDeclarationToSeparateFile/moveClassToExistingFile/moveClassToExistingFile.test");
        }

        @TestMetadata("moveClassToFileInDefaultPackage/moveClassToFileInDefaultPackage.test")
        public void testMoveClassToFileInDefaultPackage_MoveClassToFileInDefaultPackage() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/moveDeclarationToSeparateFile/moveClassToFileInDefaultPackage/moveClassToFileInDefaultPackage.test");
        }

        @TestMetadata("moveClassToFile/moveClassToFile.test")
        public void testMoveClassToFile_MoveClassToFile() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/moveDeclarationToSeparateFile/moveClassToFile/moveClassToFile.test");
        }

        @TestMetadata("moveSingleToFile/moveSingleToFile.test")
        public void testMoveSingleToFile_MoveSingleToFile() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/moveDeclarationToSeparateFile/moveSingleToFile/moveSingleToFile.test");
        }

        @TestMetadata("optimizeImports/optimizeImports.test")
        public void testOptimizeImports_OptimizeImports() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/moveDeclarationToSeparateFile/optimizeImports/optimizeImports.test");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../../idea/tests/testData/multiFileIntentions/implementAbstractMember")
    public static class ImplementAbstractMember extends AbstractK2MultiFileIntentionTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("implementFunctionInJava/implementAllInJava.test")
        public void testImplementFunctionInJava_ImplementAllInJava() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/implementAbstractMember/implementFunctionInJava/implementAllInJava.test");
        }

        @TestMetadata("implementValInJava/implementAllInJava.test")
        public void testImplementValInJava_ImplementAllInJava() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/implementAbstractMember/implementValInJava/implementAllInJava.test");
        }

        @TestMetadata("implementVarInJava/implementAllInJava.test")
        public void testImplementVarInJava_ImplementAllInJava() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/implementAbstractMember/implementVarInJava/implementAllInJava.test");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../../idea/tests/testData/multiFileIntentions/convertMemberToExtension")
    public static class ConvertMemberToExtension extends AbstractK2MultiFileIntentionTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("addImports/addImports.test")
        public void testAddImports_AddImports() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/convertMemberToExtension/addImports/addImports.test");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../../idea/tests/testData/multiFileIntentions/addJvmStatic")
    public static class AddJvmStatic extends AbstractK2MultiFileIntentionTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("toCompanionObjectFun/addJvmStaticToCompanionObjectFun.test")
        public void testToCompanionObjectFun_AddJvmStaticToCompanionObjectFun() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/addJvmStatic/toCompanionObjectFun/addJvmStaticToCompanionObjectFun.test");
        }

        @TestMetadata("toCompanionObjectProperty/addJvmStaticToCompanionObjectProperty.test")
        public void testToCompanionObjectProperty_AddJvmStaticToCompanionObjectProperty() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/addJvmStatic/toCompanionObjectProperty/addJvmStaticToCompanionObjectProperty.test");
        }

        @TestMetadata("toNamedCompanionObjectFun/addJvmStaticToNamedCompanionObjectFun.test")
        public void testToNamedCompanionObjectFun_AddJvmStaticToNamedCompanionObjectFun() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/addJvmStatic/toNamedCompanionObjectFun/addJvmStaticToNamedCompanionObjectFun.test");
        }

        @TestMetadata("toNamedCompanionObjectProperty/addJvmStaticToNamedCompanionObjectProperty.test")
        public void testToNamedCompanionObjectProperty_AddJvmStaticToNamedCompanionObjectProperty() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/addJvmStatic/toNamedCompanionObjectProperty/addJvmStaticToNamedCompanionObjectProperty.test");
        }

        @TestMetadata("toObjectFun/addJvmStaticToObjectFun.test")
        public void testToObjectFun_AddJvmStaticToObjectFun() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/addJvmStatic/toObjectFun/addJvmStaticToObjectFun.test");
        }

        @TestMetadata("toObjectProperty/addJvmStaticToObjectProperty.test")
        public void testToObjectProperty_AddJvmStaticToObjectProperty() throws Exception {
            runTest("../../../idea/tests/testData/multiFileIntentions/addJvmStatic/toObjectProperty/addJvmStaticToObjectProperty.test");
        }
    }
}
