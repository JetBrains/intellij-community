<idea-plugin package="org.jetbrains.kotlin.idea.codeInsight.inspections.shared">
  <extensions defaultExtensionNs="com.intellij">
    <applicationService
            serviceInterface="org.jetbrains.kotlin.idea.codeinsights.impl.base.KotlinInspectionFacade"
            serviceImplementation="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.KotlinInspectionFacadeImpl"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RemoveRedundantBackticksInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin" key="inspection.remove.redundant.backticks.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.SortModifiersInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     cleanupTool="true"
                     key="inspection.sort.modifiers.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.AmbiguousNonLocalJumpInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="ambiguous.non.local.break.or.continue.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.DataClassPrivateConstructorInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.data.class.private.constructor.display.name" bundle="messages.KotlinBundle"/>

    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RemoveEmptySecondaryConstructorBodyInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
            enabledByDefault="true"
            cleanupTool="true"
            level="WEAK WARNING"
            language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
            key="inspection.remove.empty.secondary.constructor.body.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RedundantEmptyInitializerBlockInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.other.problems"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.redundant.empty.initializer.block.display.name" bundle="messages.KotlinBundle"/>

    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.UnclearPrecedenceOfBinaryExpressionInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
            enabledByDefault="true"
            level="WARNING"
            language="kotlin"
            key="unclear.precedence.of.binary.expression.inspection.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RedundantGetterInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin" key="inspection.redundant.getter.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RemoveEmptyClassBodyInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.remove.empty.class.body.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RedundantReturnLabelInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.redundant.return.label.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RedundantSetterInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.setter.display.name" bundle="messages.KotlinBundle"/>

    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.SimplifyNegatedBinaryExpressionInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
            enabledByDefault="true"
            level="WEAK WARNING"
            language="kotlin"
            key="inspection.simplify.negated.binary.expression.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.TrailingCommaInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.trailing.comma.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RemoveCurlyBracesFromTemplateInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.remove.curly.braces.from.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RemoveSetterParameterTypeInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.remove.setter.parameter.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.WrapUnaryOperatorInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.wrap.unary.operator.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.DelegationToVarPropertyInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.delegation.to.var.property.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.JavaIoSerializableObjectMustHaveReadResolveInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.java.io.serializable.object.must.have.read.resolve.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.KDocUnresolvedReferenceInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.k.doc.unresolved.reference.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RedundantSemicolonInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING"
                     language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.redundant.semicolon.display.name" bundle="messages.KotlinBundle"/>

    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RemoveEmptyParenthesesFromLambdaCallInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
            enabledByDefault="true"
            cleanupTool="true"
            level="WEAK WARNING"
            language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
            key="inspection.remove.empty.parentheses.from.lambda.call.display.name" bundle="messages.KotlinBundle"/>

    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RedundantConstructorKeywordInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
            enabledByDefault="true"
            cleanupTool="true"
            level="WEAK WARNING"
            language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
            key="redundant.constructor.keyword" bundle="messages.KotlinBundle"/>

    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.inspections.EnumValuesSoftDeprecateInJavaInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.other.problems"
            enabledByDefault="true"
            cleanupTool="false"
            level="WARNING"
            language="JAVA"
            key="inspection.enum.values.method.soft.deprecate.in.java.display.name" bundle="messages.KotlinBundle"/>

    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.RedundantValueArgumentInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
            enabledByDefault="false"
            level="WEAK WARNING"
            language="kotlin"
            key="inspection.redundant.value.argument.display.name" bundle="messages.KotlinBundle"/>

    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.FilterIsInstanceCallWithClassLiteralArgumentInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
            enabledByDefault="true"
            cleanupTool="true"
            level="WEAK WARNING"
            language="kotlin"
            key="inspection.filter.is.instance.call.with.class.literal.argument.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.KotlinUnusedImportInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     runForWholeFile="true"
                     language="kotlin"
                     suppressId="UnusedImport" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.kotlin.unused.import.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.ClassNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.class.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.EnumEntryNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.enum.entry.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.TestFunctionNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.test.function.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.PropertyNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.property.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.ObjectPropertyNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.object.property.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.ObjectPrivatePropertyNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.object.private.property.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.PrivatePropertyNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.private.property.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.ConstPropertyNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.const.property.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.LocalVariableNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.local.variable.name.display.name" bundle="messages.KotlinBundle"/>

    <globalInspection implementationClass="org.jetbrains.kotlin.idea.codeInsight.inspections.shared.PackageNameInspection"
                      language="kotlin"
                      groupPath="Kotlin"
                      groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                      enabledByDefault="true"
                      level="WEAK WARNING" key="inspection.package.name.display.name" bundle="messages.KotlinBundle"/>

  </extensions>
</idea-plugin>
