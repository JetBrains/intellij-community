// Copyright 2000-2022 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.k2.intentions.tests;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("code-insight/inspections-k2/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("../../../idea/tests/testData/quickfix/redundantIf")
public class K2QuickFixTestGenerated extends AbstractK2QuickFixTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("assignExpression.kt")
    public void testAssignExpression() throws Exception {
        runTest("../../../idea/tests/testData/quickfix/redundantIf/assignExpression.kt");
    }

    @TestMetadata("assignment.kt")
    public void testAssignment() throws Exception {
        runTest("../../../idea/tests/testData/quickfix/redundantIf/assignment.kt");
    }

    @TestMetadata("assignmentFake.kt")
    public void testAssignmentFake() throws Exception {
        runTest("../../../idea/tests/testData/quickfix/redundantIf/assignmentFake.kt");
    }

    @TestMetadata("expression.kt")
    public void testExpression() throws Exception {
        runTest("../../../idea/tests/testData/quickfix/redundantIf/expression.kt");
    }

    @TestMetadata("expressionBody.kt")
    public void testExpressionBody() throws Exception {
        runTest("../../../idea/tests/testData/quickfix/redundantIf/expressionBody.kt");
    }

    @TestMetadata("labeledReturn.kt")
    public void testLabeledReturn() throws Exception {
        runTest("../../../idea/tests/testData/quickfix/redundantIf/labeledReturn.kt");
    }

    @TestMetadata("negate.kt")
    public void testNegate() throws Exception {
        runTest("../../../idea/tests/testData/quickfix/redundantIf/negate.kt");
    }

    @TestMetadata("negate2.kt")
    public void testNegate2() throws Exception {
        runTest("../../../idea/tests/testData/quickfix/redundantIf/negate2.kt");
    }

    @TestMetadata("negate3.kt")
    public void testNegate3() throws Exception {
        runTest("../../../idea/tests/testData/quickfix/redundantIf/negate3.kt");
    }

    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        runTest("../../../idea/tests/testData/quickfix/redundantIf/simple.kt");
    }
}
