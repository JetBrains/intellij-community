<idea-plugin package="org.jetbrains.kotlin.idea.k2.codeinsight.inspections">
  <dependencies>
    <module name="kotlin.code-insight.intentions-k2"/>
  </dependencies>
  <extensions defaultExtensionNs="com.intellij">
    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.declarations.RedundantUnitReturnTypeInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
            enabledByDefault="true"
            cleanupTool="true"
            level="WARNING" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
            language="kotlin"
            key="inspection.redundant.unit.return.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.diagnosticBased.RedundantVisibilityModifierInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
            enabledByDefault="true"
            cleanupTool="true"
            level="WARNING" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
            language="kotlin"
            key="inspection.redundant.visibility.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.diagnosticBased.RedundantModalityModifierInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     language="kotlin"
                     key="inspection.redundant.modality.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.KotlinUnusedImportInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     language="kotlin"
                     suppressId="UnusedImport"
                     key="inspection.kotlin.unused.import.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.diagnosticBased.UnusedVariableInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     language="kotlin"
                     key="inspection.kotlin.unused.variable.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.ImplicitThisInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.implicit.this.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.expressions.KotlinDoubleNegationInspection"
                     groupPath="Kotlin" groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     suppressId="DoubleNegation"
                     key="inspection.kotlin.double.negation.display.name" bundle="messages.KotlinBundle"/>

    <localInspection
            implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.RemoveSingleExpressionStringTemplateInspection"
            groupPath="Kotlin"
            groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
            enabledByDefault="true"
            level="WARNING"
            language="kotlin"
            key="inspection.remove.single.expression.string.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.ReplaceGetOrSetInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.get.or.set.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.NullableBooleanElvisInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.nullable.boolean.elvis.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.RedundantElvisReturnNullInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING"
                     language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.redundant.elvis.return.null.display.name"
                     bundle="messages.KotlinBundle" />

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.RedundantIfInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.if.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.declarations.MainFunctionReturnUnitInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.main.function.return.unit.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.expressions.ReplaceCollectionCountWithSizeInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.collection.count.with.size.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.RemoveToStringInStringTemplateInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.remove.to.string.in.string.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.declarations.DestructuringWrongNameInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.destructuring.wrong.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.EqualsOrHashCodeInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.equals.or.hash.code.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.expressions.ReplaceSizeCheckWithIsNotEmptyInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.size.check.with.is.not.empty.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.expressions.ReplaceSizeZeroCheckWithIsEmptyInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.size.zero.check.with.is.empty.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.LiftReturnOrAssignmentInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.lift.return.or.assignment.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.expressions.ReplaceCallWithBinaryOperatorInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.call.with.binary.operator.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.InconsistentCommentForJavaParameterInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.naming.conventions"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.inconsistent.comment.for.java.parameter.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.EnumValuesSoftDeprecateInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.other.problems"
                     enabledByDefault="true"
                     cleanupTool="false"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.enum.values.method.soft.deprecate.migration.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.expressions.WhenWithOnlyElseInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.when.with.only.else.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.ConvertToStringTemplateInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.convert.to.string.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.RemoveRedundantQualifierNameInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     cleanupTool="true" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     language="kotlin" key="inspection.remove.redundant.qualifier.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.k2.codeinsight.inspections.KotlinEqualsBetweenInconvertibleTypesInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     suppressId="EqualsBetweenInconvertibleTypes"
                     language="kotlin" key="inspection.kotlin.equals.between.inconvertible.types.display.name" bundle="messages.KotlinBundle"/>

  </extensions>
</idea-plugin>
