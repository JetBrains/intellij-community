### auto-generated section `build kotlin.code-insight.live-templates.shared` start
load("//build:compiler-options.bzl", "create_kotlinc_options")
load("@rules_jvm//:jvm.bzl", "jvm_library", "jvm_resources")

create_kotlinc_options(
  name = "custom",
  jvm_target = "17",
  context_receivers = True,
  opt_in = [
    "org.jetbrains.kotlin.utils.addToStdlib.UnsafeCastFunction",
    "org.jetbrains.kotlin.analysis.api.permissions.KaAllowProhibitedAnalyzeFromWriteAction",
  ]
)

jvm_resources(
  name = "kotlin-code-insight-live-templates-shared_resources",
  files = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "kotlin-code-insight-live-templates-shared",
  module_name = "kotlin.code-insight.live-templates.shared",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True),
  kotlinc_opts = ":custom",
  deps = [
    "@lib//:kotlin-stdlib",
    "@lib//:kotlinc_kotlin-compiler-common",
    "@lib//:kotlinc_analysis-api",
    "//plugins/kotlin/base/frontend-agnostic:kotlin-base-frontend-agnostic",
    "//plugins/kotlin/base/util:kotlin-base-util",
    "//plugins/kotlin/base/plugin:kotlin-base-plugin",
    "//plugins/kotlin/base/project-structure:kotlin-base-project-structure",
    "//plugins/kotlin/highlighting/highlighting-shared:kotlin-highlighting-shared",
    "//plugins/kotlin/base/analysis-api/analysis-api-utils:kotlin-base-analysis-api-utils",
    "//plugins/kotlin/base/code-insight:kotlin-base-code-insight",
    "//plugins/kotlin/code-insight/override-implement-shared:kotlin-code-insight-override-implement-shared",
    "//platform/core-impl",
    "//platform/analysis-api:analysis",
    "//java/java-impl:impl",
  ],
  runtime_deps = [":kotlin-code-insight-live-templates-shared_resources"]
)
### auto-generated section `build kotlin.code-insight.live-templates.shared` end