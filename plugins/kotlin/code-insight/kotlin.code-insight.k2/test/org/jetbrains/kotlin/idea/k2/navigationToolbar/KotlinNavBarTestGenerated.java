// Copyright 2000-2025 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.k2.navigationToolbar;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.base.plugin.KotlinPluginMode;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;
import org.jetbrains.kotlin.idea.navigationToolbar.AbstractKotlinNavBarTest;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("code-insight/kotlin.code-insight.k2")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("../../idea/tests/testData/navigationToolbar")
public class KotlinNavBarTestGenerated extends AbstractKotlinNavBarTest {
    @java.lang.Override
    @org.jetbrains.annotations.NotNull
    public final KotlinPluginMode getPluginMode() {
        return KotlinPluginMode.K2;
    }

    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("build1.gradle.kts")
    public void testBuild1_gradle() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/build1.gradle.kts");
    }

    @TestMetadata("build2.gradle.kts")
    public void testBuild2_gradle() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/build2.gradle.kts");
    }

    @TestMetadata("ClassProperty.kt")
    public void testClassProperty() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/ClassProperty.kt");
    }

    @TestMetadata("ConstructorParameter.kt")
    public void testConstructorParameter() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/ConstructorParameter.kt");
    }

    @TestMetadata("fileNameDoesntMatchClassName.kt")
    public void testFileNameDoesntMatchClassName() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/fileNameDoesntMatchClassName.kt");
    }

    @TestMetadata("MethodInClass.kt")
    public void testMethodInClass() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/MethodInClass.kt");
    }

    @TestMetadata("MethodInClassAndParameters.kt")
    public void testMethodInClassAndParameters() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/MethodInClassAndParameters.kt");
    }

    @TestMetadata("MethodParameter.kt")
    public void testMethodParameter() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/MethodParameter.kt");
    }

    @TestMetadata("SeveralClassesInFile.kt")
    public void testSeveralClassesInFile() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/SeveralClassesInFile.kt");
    }

    @TestMetadata("topLevelFunction.kt")
    public void testTopLevelFunction() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/topLevelFunction.kt");
    }

    @TestMetadata("topLevelProperty.kt")
    public void testTopLevelProperty() throws Exception {
        runTest("../../idea/tests/testData/navigationToolbar/topLevelProperty.kt");
    }
}
