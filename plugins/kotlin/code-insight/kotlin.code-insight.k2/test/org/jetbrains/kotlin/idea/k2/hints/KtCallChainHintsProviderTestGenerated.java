// Copyright 2000-2025 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.k2.hints;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.base.plugin.KotlinPluginMode;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("code-insight/kotlin.code-insight.k2")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("../../idea/tests/testData/codeInsight/hints/chainCall")
public class KtCallChainHintsProviderTestGenerated extends AbstractKtCallChainHintsProviderTest {
    @java.lang.Override
    @org.jetbrains.annotations.NotNull
    public final KotlinPluginMode getPluginMode() {
        return KotlinPluginMode.K2;
    }

    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("comments.kt")
    public void testComments() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/comments.kt");
    }

    @TestMetadata("duplicatedBuilder.kt")
    public void testDuplicatedBuilder() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/duplicatedBuilder.kt");
    }

    @TestMetadata("errorType.kt")
    public void testErrorType() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/errorType.kt");
    }

    @TestMetadata("multilineCalls.kt")
    public void testMultilineCalls() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/multilineCalls.kt");
    }

    @TestMetadata("nestedCallChains.kt")
    public void testNestedCallChains() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/nestedCallChains.kt");
    }

    @TestMetadata("nullableVsNonNullable.kt")
    public void testNullableVsNonNullable() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/nullableVsNonNullable.kt");
    }

    @TestMetadata("postfixOperator.kt")
    public void testPostfixOperator() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/postfixOperator.kt");
    }

    @TestMetadata("properties.kt")
    public void testProperties() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/properties.kt");
    }

    @TestMetadata("safeDereferences.kt")
    public void testSafeDereferences() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/safeDereferences.kt");
    }

    @TestMetadata("severalCallChains.kt")
    public void testSeveralCallChains() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/severalCallChains.kt");
    }

    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        runTest("../../idea/tests/testData/codeInsight/hints/chainCall/simple.kt");
    }
}
