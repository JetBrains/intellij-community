// WITH_DEFAULT_VALUE: false

import kotlin.reflect.KCallable


class ExampleClass

private var KCallable<*>.isAccessible: kotlin.Boolean
    get() {
        TODO()
    }
    set(value) {}

fun m1(callable: KCallable<*>) {
    val privateField = callable
}

fun m() {
    m1(
        ExampleClass::class.members
            .first()
            .apply { isAccessible = true })
}
