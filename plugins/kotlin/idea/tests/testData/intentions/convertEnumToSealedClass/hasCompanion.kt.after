sealed class Foo {

    companion object {
        fun foo() {
        }

        fun values(): Array<Foo> {
            return arrayOf(A, B)
        }

        fun valueOf(value: String): Foo {
            return when (value) {
                "A" -> A
                "B" -> B
                else -> throw IllegalArgumentException("No object Foo.$value")
            }
        }
    }

    data object A : Foo()
    data object B : Foo()
}