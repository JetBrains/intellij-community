open class Base<A, B, C>() {
    open val method : (A?) -> A = { it!! }
    open fun foo(value : B) : B = value
    open fun bar(value : () -> C) : (String) -> C = { value() }
}

class C : Base<String, C, Unit>() {
    override fun bar(value: () -> Unit): (String) -> Unit {
        <selection><caret>return super.bar(value)</selection>
    }

    override fun equals(other: Any?): Boolean {
        return super.equals(other)
    }

    override fun foo(value: C): C {
        return super.foo(value)
    }

    override fun hashCode(): Int {
        return super.hashCode()
    }

    override val method: (String?) -> String
        get() = super.method

    override fun toString(): String {
        return super.toString()
    }
}
