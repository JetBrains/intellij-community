// IntelliJ API Decompiler stub source generated from a class file
// Implementation of methods is not available

package kotlin.collections

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">public</symbolName> <symbolName descr="null">inline</symbolName> fun <<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>> kotlin.collections.<symbolName descr="null">Grouping</symbolName><<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>>.<symbolName descr="null">aggregate</symbolName>(<symbolName descr="null">operation</symbolName>: (<symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>?, <symbolName descr="null">T</symbolName>, kotlin.<symbolName descr="null">Boolean</symbolName>) -> <symbolName descr="null">R</symbolName>): kotlin.collections.<symbolName descr="null">Map</symbolName><<symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>> { /* compiled code */ }

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">public</symbolName> <symbolName descr="null">inline</symbolName> fun <<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>, <symbolName descr="null">M</symbolName> : kotlin.collections.<symbolName descr="null">MutableMap</symbolName><in <symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>>> kotlin.collections.<symbolName descr="null">Grouping</symbolName><<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>>.<symbolName descr="null">aggregateTo</symbolName>(<symbolName descr="null">destination</symbolName>: <symbolName descr="null">M</symbolName>, <symbolName descr="null">operation</symbolName>: (<symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>?, <symbolName descr="null">T</symbolName>, kotlin.<symbolName descr="null">Boolean</symbolName>) -> <symbolName descr="null">R</symbolName>): <symbolName descr="null">M</symbolName> { /* compiled code */ }

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">public</symbolName> fun <<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>, <symbolName descr="null">M</symbolName> : kotlin.collections.<symbolName descr="null">MutableMap</symbolName><in <symbolName descr="null">K</symbolName>, kotlin.<symbolName descr="null">Int</symbolName>>> kotlin.collections.<symbolName descr="null">Grouping</symbolName><<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>>.<symbolName descr="null">eachCountTo</symbolName>(<symbolName descr="null">destination</symbolName>: <symbolName descr="null">M</symbolName>): <symbolName descr="null">M</symbolName> { /* compiled code */ }

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">public</symbolName> <symbolName descr="null">inline</symbolName> fun <<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>> kotlin.collections.<symbolName descr="null">Grouping</symbolName><<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>>.<symbolName descr="null">fold</symbolName>(<symbolName descr="null">initialValueSelector</symbolName>: (<symbolName descr="null">K</symbolName>, <symbolName descr="null">T</symbolName>) -> <symbolName descr="null">R</symbolName>, <symbolName descr="null">operation</symbolName>: (<symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>, <symbolName descr="null">T</symbolName>) -> <symbolName descr="null">R</symbolName>): kotlin.collections.<symbolName descr="null">Map</symbolName><<symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>> { /* compiled code */ }

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">public</symbolName> <symbolName descr="null">inline</symbolName> fun <<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>> kotlin.collections.<symbolName descr="null">Grouping</symbolName><<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>>.<symbolName descr="null">fold</symbolName>(<symbolName descr="null">initialValue</symbolName>: <symbolName descr="null">R</symbolName>, <symbolName descr="null">operation</symbolName>: (<symbolName descr="null">R</symbolName>, <symbolName descr="null">T</symbolName>) -> <symbolName descr="null">R</symbolName>): kotlin.collections.<symbolName descr="null">Map</symbolName><<symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>> { /* compiled code */ }

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">public</symbolName> <symbolName descr="null">inline</symbolName> fun <<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>, <symbolName descr="null">M</symbolName> : kotlin.collections.<symbolName descr="null">MutableMap</symbolName><in <symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>>> kotlin.collections.<symbolName descr="null">Grouping</symbolName><<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>>.<symbolName descr="null">foldTo</symbolName>(<symbolName descr="null">destination</symbolName>: <symbolName descr="null">M</symbolName>, <symbolName descr="null">initialValueSelector</symbolName>: (<symbolName descr="null">K</symbolName>, <symbolName descr="null">T</symbolName>) -> <symbolName descr="null">R</symbolName>, <symbolName descr="null">operation</symbolName>: (<symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>, <symbolName descr="null">T</symbolName>) -> <symbolName descr="null">R</symbolName>): <symbolName descr="null">M</symbolName> { /* compiled code */ }

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">public</symbolName> <symbolName descr="null">inline</symbolName> fun <<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>, <symbolName descr="null">M</symbolName> : kotlin.collections.<symbolName descr="null">MutableMap</symbolName><in <symbolName descr="null">K</symbolName>, <symbolName descr="null">R</symbolName>>> kotlin.collections.<symbolName descr="null">Grouping</symbolName><<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>>.<symbolName descr="null">foldTo</symbolName>(<symbolName descr="null">destination</symbolName>: <symbolName descr="null">M</symbolName>, <symbolName descr="null">initialValue</symbolName>: <symbolName descr="null">R</symbolName>, <symbolName descr="null">operation</symbolName>: (<symbolName descr="null">R</symbolName>, <symbolName descr="null">T</symbolName>) -> <symbolName descr="null">R</symbolName>): <symbolName descr="null">M</symbolName> { /* compiled code */ }

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">public</symbolName> <symbolName descr="null">inline</symbolName> fun <<symbolName descr="null">S</symbolName>, <symbolName descr="null">T</symbolName> : <symbolName descr="null">S</symbolName>, <symbolName descr="null">K</symbolName>> kotlin.collections.<symbolName descr="null">Grouping</symbolName><<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>>.<symbolName descr="null">reduce</symbolName>(<symbolName descr="null">operation</symbolName>: (<symbolName descr="null">K</symbolName>, <symbolName descr="null">S</symbolName>, <symbolName descr="null">T</symbolName>) -> <symbolName descr="null">S</symbolName>): kotlin.collections.<symbolName descr="null">Map</symbolName><<symbolName descr="null">K</symbolName>, <symbolName descr="null">S</symbolName>> { /* compiled code */ }

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">public</symbolName> <symbolName descr="null">inline</symbolName> fun <<symbolName descr="null">S</symbolName>, <symbolName descr="null">T</symbolName> : <symbolName descr="null">S</symbolName>, <symbolName descr="null">K</symbolName>, <symbolName descr="null">M</symbolName> : kotlin.collections.<symbolName descr="null">MutableMap</symbolName><in <symbolName descr="null">K</symbolName>, <symbolName descr="null">S</symbolName>>> kotlin.collections.<symbolName descr="null">Grouping</symbolName><<symbolName descr="null">T</symbolName>, <symbolName descr="null">K</symbolName>>.<symbolName descr="null">reduceTo</symbolName>(<symbolName descr="null">destination</symbolName>: <symbolName descr="null">M</symbolName>, <symbolName descr="null">operation</symbolName>: (<symbolName descr="null">K</symbolName>, <symbolName descr="null">S</symbolName>, <symbolName descr="null">T</symbolName>) -> <symbolName descr="null">S</symbolName>): <symbolName descr="null">M</symbolName> { /* compiled code */ }

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">public</symbolName> interface <symbolName descr="null">Grouping</symbolName><<symbolName descr="null">T</symbolName>, <symbolName descr="null">out</symbolName> <symbolName descr="null">K</symbolName>> {
    <symbolName descr="null">public</symbolName> <symbolName descr="null">abstract</symbolName> fun <symbolName descr="null">keyOf</symbolName>(<symbolName descr="null">element</symbolName>: <symbolName descr="null">T</symbolName>): <symbolName descr="null">K</symbolName>

    <symbolName descr="null">public</symbolName> <symbolName descr="null">abstract</symbolName> fun <symbolName descr="null">sourceIterator</symbolName>(): kotlin.collections.<symbolName descr="null">Iterator</symbolName><<symbolName descr="null">T</symbolName>>
}

