// IntelliJ API Decompiler stub source generated from a class file
// Implementation of methods is not available

package kotlin.time

<symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">@kotlin.WasExperimental</symbolName> <symbolName descr="null">public</symbolName> interface <symbolName descr="null">TimeSource</symbolName> {
    <symbolName descr="null">public</symbolName> <symbolName descr="null">companion</symbolName> object {
    }

    <symbolName descr="null">public</symbolName> <symbolName descr="null">abstract</symbolName> fun <symbolName descr="null">markNow</symbolName>(): kotlin.time.<symbolName descr="null">TimeMark</symbolName>

    <symbolName descr="null">public</symbolName> object <symbolName descr="null">Monotonic</symbolName> : kotlin.time.<symbolName descr="null">TimeSource</symbolName>.<symbolName descr="null">WithComparableMarks</symbolName> {
        <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> fun <symbolName descr="null">markNow</symbolName>(): kotlin.time.<symbolName descr="null">TimeSource</symbolName>.<symbolName descr="null">Monotonic</symbolName>.<symbolName descr="null">ValueTimeMark</symbolName> { /* compiled code */ }

        <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> fun <symbolName descr="null">toString</symbolName>(): kotlin.<symbolName descr="null">String</symbolName> { /* compiled code */ }

        <symbolName descr="null">@kotlin.jvm.JvmInline</symbolName> <symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">@kotlin.WasExperimental</symbolName> <symbolName descr="null">public</symbolName> <symbolName descr="null">final</symbolName> <symbolName descr="null">value</symbolName> class <symbolName descr="null">ValueTimeMark</symbolName> <symbolName descr="null">internal</symbolName> <symbolName descr="null">constructor</symbolName>(<symbolName descr="null">reading</symbolName>: kotlin.time.<symbolName descr="null">ValueTimeMarkReading</symbolName> /* = kotlin.Long */) : kotlin.time.<symbolName descr="null">ComparableTimeMark</symbolName> {
            <symbolName descr="null">internal</symbolName> <symbolName descr="null">final</symbolName> val <symbolName descr="null">reading</symbolName>: kotlin.time.<symbolName descr="null">ValueTimeMarkReading</symbolName> /* = kotlin.Long */ /* compiled code */

            <symbolName descr="null">public</symbolName> <symbolName descr="null">final</symbolName> <symbolName descr="null">operator</symbolName> fun <symbolName descr="null">compareTo</symbolName>(<symbolName descr="null">other</symbolName>: kotlin.time.<symbolName descr="null">TimeSource</symbolName>.<symbolName descr="null">Monotonic</symbolName>.<symbolName descr="null">ValueTimeMark</symbolName>): kotlin.<symbolName descr="null">Int</symbolName> { /* compiled code */ }

            <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> fun <symbolName descr="null">elapsedNow</symbolName>(): kotlin.time.<symbolName descr="null">Duration</symbolName> { /* compiled code */ }

            <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> <symbolName descr="null">operator</symbolName> fun <symbolName descr="null">equals</symbolName>(<symbolName descr="null">other</symbolName>: kotlin.<symbolName descr="null">Any</symbolName>?): kotlin.<symbolName descr="null">Boolean</symbolName> { /* compiled code */ }

            <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> fun <symbolName descr="null">hasNotPassedNow</symbolName>(): kotlin.<symbolName descr="null">Boolean</symbolName> { /* compiled code */ }

            <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> fun <symbolName descr="null">hasPassedNow</symbolName>(): kotlin.<symbolName descr="null">Boolean</symbolName> { /* compiled code */ }

            <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> fun <symbolName descr="null">hashCode</symbolName>(): kotlin.<symbolName descr="null">Int</symbolName> { /* compiled code */ }

            <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> <symbolName descr="null">operator</symbolName> fun <symbolName descr="null">minus</symbolName>(<symbolName descr="null">other</symbolName>: kotlin.time.<symbolName descr="null">ComparableTimeMark</symbolName>): kotlin.time.<symbolName descr="null">Duration</symbolName> { /* compiled code */ }

            <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> <symbolName descr="null">operator</symbolName> fun <symbolName descr="null">minus</symbolName>(<symbolName descr="null">duration</symbolName>: kotlin.time.<symbolName descr="null">Duration</symbolName>): kotlin.time.<symbolName descr="null">TimeSource</symbolName>.<symbolName descr="null">Monotonic</symbolName>.<symbolName descr="null">ValueTimeMark</symbolName> { /* compiled code */ }

            <symbolName descr="null">public</symbolName> <symbolName descr="null">final</symbolName> <symbolName descr="null">operator</symbolName> fun <symbolName descr="null">minus</symbolName>(<symbolName descr="null">other</symbolName>: kotlin.time.<symbolName descr="null">TimeSource</symbolName>.<symbolName descr="null">Monotonic</symbolName>.<symbolName descr="null">ValueTimeMark</symbolName>): kotlin.time.<symbolName descr="null">Duration</symbolName> { /* compiled code */ }

            <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> <symbolName descr="null">operator</symbolName> fun <symbolName descr="null">plus</symbolName>(<symbolName descr="null">duration</symbolName>: kotlin.time.<symbolName descr="null">Duration</symbolName>): kotlin.time.<symbolName descr="null">TimeSource</symbolName>.<symbolName descr="null">Monotonic</symbolName>.<symbolName descr="null">ValueTimeMark</symbolName> { /* compiled code */ }

            <symbolName descr="null">public</symbolName> <symbolName descr="null">open</symbolName> fun <symbolName descr="null">toString</symbolName>(): kotlin.<symbolName descr="null">String</symbolName> { /* compiled code */ }
        }
    }

    <symbolName descr="null">@kotlin.SinceKotlin</symbolName> <symbolName descr="null">@kotlin.WasExperimental</symbolName> <symbolName descr="null">public</symbolName> interface <symbolName descr="null">WithComparableMarks</symbolName> : kotlin.time.<symbolName descr="null">TimeSource</symbolName> {
        <symbolName descr="null">public</symbolName> <symbolName descr="null">abstract</symbolName> fun <symbolName descr="null">markNow</symbolName>(): kotlin.time.<symbolName descr="null">ComparableTimeMark</symbolName>
    }
}

