package pkg

import kotlinx.coroutines.*

// stdlib
fun commonStdlibAndBuiltins() {
    listOf(1, 2, 3).map { it }
    val ea = emptyArray<String>()
    val unit = Unit
}

fun stdlibJvm(param: JvmRepeatable) {}

fun stdlibJs() {
    kotlin.js.console
}

@OptIn(kotlinx.cinterop.ExperimentalForeignApi::class)
fun stdlibNative(param: kotlinx.cinterop.CFunction<*>) {}

fun nativeDistPosix(param: platform.posix.DIR) {}

fun nativeDistFoundation(param: platform.Foundation.NSArray) {}

// coroutines
suspend fun commonCoroutines() {
    coroutineScope {
        launch {
            delay(1000)
        }
    }
}

fun concurrent() {
    runBlocking {}
}

fun jvm(param: ExecutorCoroutineDispatcher) {}

fun js(param: Deferred<String>) {
    param.asPromise()
}

// no natural native-specific API in coroutines
@Suppress("invisible_reference")
private fun native(param: WorkerDispatcher) {}

@Suppress("invisible_reference")
private fun darwin(param: DarwinGlobalQueueDispatcher) {}
