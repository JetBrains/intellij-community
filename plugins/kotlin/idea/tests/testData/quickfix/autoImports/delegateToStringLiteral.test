// FILE: first.before.kt
// "Import operator 'String.getValue'" "true"
// ERROR: Type 'String' has no method 'getValue(Nothing?, KProperty<*>)' and thus it cannot serve as a delegate

package b

val x: String by <caret>"literal"

// FILE: second.kt
package a

import kotlin.reflect.KProperty

operator fun String.getValue(x: Any?, y: KProperty<*>) = ""

// FILE: first.after.kt
// "Import operator 'String.getValue'" "true"
// ERROR: Type 'String' has no method 'getValue(Nothing?, KProperty<*>)' and thus it cannot serve as a delegate

package b

import a.getValue

val x: String by <caret>"literal"
