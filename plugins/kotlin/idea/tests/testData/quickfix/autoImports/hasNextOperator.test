// FILE: first.before.kt
// "Import operator 'MyIterator.hasNext'" "true"
// ERROR: hasNext() cannot be called on iterator() of type 'MyIterator'
// WITH_STDLIB
// IGNORE_K1

package bar

import foo.MyClass
import foo.iterator
import foo.next

fun foo(obj: MyClass) {
    for (item in <caret>obj) {}
}

// FILE: second.kt
package foo

class MyClass

operator fun MyClass.iterator(): MyIterator = MyIterator()

class MyIterator

operator fun MyIterator.hasNext(): Boolean = true
operator fun MyIterator.next(): String = "item"

// FILE: first.after.kt
// "Import operator 'MyIterator.hasNext'" "true"
// ERROR: hasNext() cannot be called on iterator() of type 'MyIterator'
// WITH_STDLIB
// IGNORE_K1

package bar

import foo.MyClass
import foo.hasNext
import foo.iterator
import foo.next

fun foo(obj: MyClass) {
    for (item in <caret>obj) {}
}