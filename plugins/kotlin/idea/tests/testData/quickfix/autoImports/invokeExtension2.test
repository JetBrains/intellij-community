// FILE: first.before.kt
// "Import operator 'A.invoke'" "true"
// ERROR: Expression 'a' of type 'A' cannot be invoked as a function. The function 'invoke()' is not found
/* IGNORE_FIR */

package b

import a.A

fun main() {
    val a = A()
    <caret>a()
}
//-----------------------


// FILE: second.kt
// "Import extension function 'A.invoke'" "true"
// ERROR: Expression 'a' of type 'A' cannot be invoked as a function. The function 'invoke()' is not found
/* IGNORE_FIR */

package a

class A
operator fun A.invoke() = 42
//-----------------------


// FILE: first.after.kt
// "Import operator 'A.invoke'" "true"
// ERROR: Expression 'a' of type 'A' cannot be invoked as a function. The function 'invoke()' is not found
/* IGNORE_FIR */

package b

import a.A
import a.invoke

fun main() {
    val a = A()
    <caret>a()
}
//-----------------------
