Class/object property type 5 var next: A? = A()
Function return types 18 fun getNextFun(): A? {
Function return types 39 fun Any.toA(): A? {
Local variable declaration 14 val aa: AAA = a
Nested class/object 10 AAA.foos()
Nested class/object 4 public class X(bar: String? = A.BAR) : A() {
Nested class/object 6 val myBar: String? = A.BAR
Nested class/object 9 A.BAR = ""
New instance creation 35 fun X.bar(a: A = A()) {
New instance creation 5 var next: A? = A()
Parameter type 13 fun foo(a: A) {
Parameter type 35 fun X.bar(a: A = A()) {
Super type qualifier 23 super<A>.foo()
Supertype 26 companion object : AAA() {
Supertype 31 object O : A() {
Supertype 4 public class X(bar: String? = A.BAR) : A() {
Target type of 'is' operation 40 return if (this is A) this as A else null
Usage in cast target type 40 return if (this is A) this as A else null
Usage in import 1 import AAA as A
Usage in import 2 import AAA
