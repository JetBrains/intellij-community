MyTest.class
public final class <1><5><9><12>MyTest public constructor() {
    public final fun <2><6><10><13>newBuilder(): testData.libraries.MyTest.Builder { /* compiled code */ }

    public final class Builder public constructor() {
        public final var cache: kotlin.String? /* compiled code */ /* hasBackingField: true */

        public final var m: kotlin.String? /* compiled code */ /* hasBackingField: true */

        public final var <11>n: kotlin.String? /* compiled code */ /* hasBackingField: true */

        public final var <14>o: kotlin.String? /* compiled code */ /* hasBackingField: true */
            @kotlin.jvm.JvmName public final get() {/* compiled code */ }

        public final fun <3>cache(cache: kotlin.String?): kotlin.Unit { /* compiled code */ }

        public final fun <7>m(): kotlin.String? { /* compiled code */ }
 String.class
public final class <4><8>String implements Serializable, Comparable<String>, CharSequence {
