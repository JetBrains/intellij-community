// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.editor.backspaceHandler;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("idea/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/editor/backspaceHandler")
public abstract class BackspaceHandlerTestGenerated extends AbstractBackspaceHandlerTest {
    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("testData/editor/backspaceHandler/stringTemplate")
    public static class StringTemplate extends AbstractBackspaceHandlerTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("escapedStringTemplate.kt")
        public void testEscapedStringTemplate() throws Exception {
            runTest("testData/editor/backspaceHandler/stringTemplate/escapedStringTemplate.kt");
        }

        @TestMetadata("stringTemplateBrackets.kt")
        public void testStringTemplateBrackets() throws Exception {
            runTest("testData/editor/backspaceHandler/stringTemplate/stringTemplateBrackets.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("testData/editor/backspaceHandler")
    public static class Uncategorized extends AbstractBackspaceHandlerTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("beforeUnpairedBrace.kt")
        public void testBeforeUnpairedBrace() throws Exception {
            runTest("testData/editor/backspaceHandler/beforeUnpairedBrace.kt");
        }

        @TestMetadata("betweenOpenBraceAndParenthesis.kt")
        public void testBetweenOpenBraceAndParenthesis() throws Exception {
            runTest("testData/editor/backspaceHandler/betweenOpenBraceAndParenthesis.kt");
        }

        @TestMetadata("FileStart.kt")
        public void testFileStart() throws Exception {
            runTest("testData/editor/backspaceHandler/FileStart.kt");
        }

        @TestMetadata("rawStringDelete.kt")
        public void testRawStringDelete() throws Exception {
            runTest("testData/editor/backspaceHandler/rawStringDelete.kt");
        }

        @TestMetadata("rawStringInCloseQuote.kt")
        public void testRawStringInCloseQuote() throws Exception {
            runTest("testData/editor/backspaceHandler/rawStringInCloseQuote.kt");
        }

        @TestMetadata("rawStringInOpenQuote.kt")
        public void testRawStringInOpenQuote() throws Exception {
            runTest("testData/editor/backspaceHandler/rawStringInOpenQuote.kt");
        }

        @TestMetadata("typeArguments.kt")
        public void testTypeArguments() throws Exception {
            runTest("testData/editor/backspaceHandler/typeArguments.kt");
        }
    }
}
