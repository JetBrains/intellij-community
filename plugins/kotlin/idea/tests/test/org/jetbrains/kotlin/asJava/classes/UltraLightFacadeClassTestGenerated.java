// Copyright 2000-2021 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.

package org.jetbrains.kotlin.asJava.classes;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.test.TestRoot;
import org.junit.runner.RunWith;

/*
 * This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("idea/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/compiler/asJava/ultraLightFacades")
public class UltraLightFacadeClassTestGenerated extends AbstractUltraLightFacadeClassTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("coroutines.kt")
    public void testCoroutines() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/coroutines.kt");
    }

    @TestMetadata("importAliases.kt")
    public void testImportAliases() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/importAliases.kt");
    }

    @TestMetadata("inlineOnly.kt")
    public void testInlineOnly() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/inlineOnly.kt");
    }

    @TestMetadata("jvmField.kt")
    public void testJvmField() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/jvmField.kt");
    }

    @TestMetadata("jvmName.kt")
    public void testJvmName() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/jvmName.kt");
    }

    @TestMetadata("jvmWildcardAnnotations.kt")
    public void testJvmWildcardAnnotations() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/jvmWildcardAnnotations.kt");
    }

    @TestMetadata("lateinitProperty.kt")
    public void testLateinitProperty() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/lateinitProperty.kt");
    }

    @TestMetadata("multifileFacade.kt")
    public void testMultifileFacade() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/multifileFacade.kt");
    }

    @TestMetadata("multifileFacadeJvmName.kt")
    public void testMultifileFacadeJvmName() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/multifileFacadeJvmName.kt");
    }

    @TestMetadata("properties.kt")
    public void testProperties() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/properties.kt");
    }

    @TestMetadata("simpleFunctions.kt")
    public void testSimpleFunctions() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/simpleFunctions.kt");
    }

    @TestMetadata("throwsAnnotation.kt")
    public void testThrowsAnnotation() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/throwsAnnotation.kt");
    }

    @TestMetadata("wildcardOptimization.kt")
    public void testWildcardOptimization() throws Exception {
        runTest("testData/compiler/asJava/ultraLightFacades/wildcardOptimization.kt");
    }
}
