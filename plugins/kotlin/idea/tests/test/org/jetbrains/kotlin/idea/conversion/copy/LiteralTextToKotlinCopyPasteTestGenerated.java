// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.conversion.copy;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("idea/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/copyPaste/plainTextLiteral")
public class LiteralTextToKotlinCopyPasteTestGenerated extends AbstractLiteralTextToKotlinCopyPasteTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("BrokenEntries.txt")
    public void testBrokenEntries() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/BrokenEntries.txt");
    }

    @TestMetadata("CustomTrimIndent.txt")
    public void testCustomTrimIndent() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/CustomTrimIndent.txt");
    }

    @TestMetadata("MultiLine.txt")
    public void testMultiLine() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/MultiLine.txt");
    }

    @TestMetadata("MultiLineToTripleQuotes.txt")
    public void testMultiLineToTripleQuotes() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/MultiLineToTripleQuotes.txt");
    }

    @TestMetadata("MultiQuotesToTripleQuotes.txt")
    public void testMultiQuotesToTripleQuotes() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/MultiQuotesToTripleQuotes.txt");
    }

    @TestMetadata("NoSpecialCharsToSingleQuote.txt")
    public void testNoSpecialCharsToSingleQuote() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/NoSpecialCharsToSingleQuote.txt");
    }

    @TestMetadata("TrailingLines.txt")
    public void testTrailingLines() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/TrailingLines.txt");
    }

    @TestMetadata("TrimIndent.txt")
    public void testTrimIndent() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/TrimIndent.txt");
    }

    @TestMetadata("TrimIndent2.txt")
    public void testTrimIndent2() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/TrimIndent2.txt");
    }

    @TestMetadata("TrimIndent3.txt")
    public void testTrimIndent3() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/TrimIndent3.txt");
    }

    @TestMetadata("TrimIndentAndDollarSign.txt")
    public void testTrimIndentAndDollarSign() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/TrimIndentAndDollarSign.txt");
    }

    @TestMetadata("TrimIndentAndDollarSign2.txt")
    public void testTrimIndentAndDollarSign2() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/TrimIndentAndDollarSign2.txt");
    }

    @TestMetadata("TrimIndentAndDollarSign3.txt")
    public void testTrimIndentAndDollarSign3() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/TrimIndentAndDollarSign3.txt");
    }

    @TestMetadata("TrimIndentAndDollarSign4.txt")
    public void testTrimIndentAndDollarSign4() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/TrimIndentAndDollarSign4.txt");
    }

    @TestMetadata("WithBackslashes.txt")
    public void testWithBackslashes() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/WithBackslashes.txt");
    }

    @TestMetadata("WithDollarSignToTripleQuotes.txt")
    public void testWithDollarSignToTripleQuotes() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/WithDollarSignToTripleQuotes.txt");
    }

    @TestMetadata("WithEntries.txt")
    public void testWithEntries() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/WithEntries.txt");
    }

    @TestMetadata("WithQuotes.txt")
    public void testWithQuotes() throws Exception {
        runTest("testData/copyPaste/plainTextLiteral/WithQuotes.txt");
    }
}
