// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.navigation;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("idea/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public abstract class KotlinGotoTestGenerated extends AbstractKotlinGotoTest {
    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("testData/navigation/gotoClass")
    public static class GotoClass extends AbstractKotlinGotoTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doClassTest, this, testDataFilePath);
        }

        @TestMetadata("builtInAny.kt")
        public void testBuiltInAny() throws Exception {
            runTest("testData/navigation/gotoClass/builtInAny.kt");
        }

        @TestMetadata("builtInInt.kt")
        public void testBuiltInInt() throws Exception {
            runTest("testData/navigation/gotoClass/builtInInt.kt");
        }

        @TestMetadata("enumEntries.kt")
        public void testEnumEntries() throws Exception {
            runTest("testData/navigation/gotoClass/enumEntries.kt");
        }

        @TestMetadata("inClassObject.kt")
        public void testInClassObject() throws Exception {
            runTest("testData/navigation/gotoClass/inClassObject.kt");
        }

        @TestMetadata("innerClass.kt")
        public void testInnerClass() throws Exception {
            runTest("testData/navigation/gotoClass/innerClass.kt");
        }

        @TestMetadata("interfaceWithFunImplement.kt")
        public void testInterfaceWithFunImplement() throws Exception {
            runTest("testData/navigation/gotoClass/interfaceWithFunImplement.kt");
        }

        @TestMetadata("localDeclarations.kt")
        public void testLocalDeclarations() throws Exception {
            runTest("testData/navigation/gotoClass/localDeclarations.kt");
        }

        @TestMetadata("noImplementationInterface.kt")
        public void testNoImplementationInterface() throws Exception {
            runTest("testData/navigation/gotoClass/noImplementationInterface.kt");
        }

        @TestMetadata("simpleClass.kt")
        public void testSimpleClass() throws Exception {
            runTest("testData/navigation/gotoClass/simpleClass.kt");
        }

        @TestMetadata("simpleObject.kt")
        public void testSimpleObject() throws Exception {
            runTest("testData/navigation/gotoClass/simpleObject.kt");
        }

        @TestMetadata("typealias.kt")
        public void testTypealias() throws Exception {
            runTest("testData/navigation/gotoClass/typealias.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("testData/navigation/gotoSymbol")
    public static class GotoSymbol extends AbstractKotlinGotoTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doSymbolTest, this, testDataFilePath);
        }

        @TestMetadata("builtInArrayOfNulls.kt")
        public void testBuiltInArrayOfNulls() throws Exception {
            runTest("testData/navigation/gotoSymbol/builtInArrayOfNulls.kt");
        }

        @TestMetadata("builtInInt.kt")
        public void testBuiltInInt() throws Exception {
            runTest("testData/navigation/gotoSymbol/builtInInt.kt");
        }

        @TestMetadata("enumConstants.kt")
        public void testEnumConstants() throws Exception {
            runTest("testData/navigation/gotoSymbol/enumConstants.kt");
        }

        @TestMetadata("functions.kt")
        public void testFunctions() throws Exception {
            runTest("testData/navigation/gotoSymbol/functions.kt");
        }

        @TestMetadata("javaMethods.kt")
        public void testJavaMethods() throws Exception {
            runTest("testData/navigation/gotoSymbol/javaMethods.kt");
        }

        @TestMetadata("jvmNameAnnotatedFile.kt")
        public void testJvmNameAnnotatedFile() throws Exception {
            runTest("testData/navigation/gotoSymbol/jvmNameAnnotatedFile.kt");
        }

        @TestMetadata("jvmNameAnnotatedFileMultiAnnotations.kt")
        public void testJvmNameAnnotatedFileMultiAnnotations() throws Exception {
            runTest("testData/navigation/gotoSymbol/jvmNameAnnotatedFileMultiAnnotations.kt");
        }

        @TestMetadata("jvmNameAnnotatedFilesKt.kt")
        public void testJvmNameAnnotatedFilesKt() throws Exception {
            runTest("testData/navigation/gotoSymbol/jvmNameAnnotatedFilesKt.kt");
        }

        @TestMetadata("jvmNameAnnotatedFunctions.kt")
        public void testJvmNameAnnotatedFunctions() throws Exception {
            runTest("testData/navigation/gotoSymbol/jvmNameAnnotatedFunctions.kt");
        }

        @TestMetadata("jvmNameAnnotatedProperties.kt")
        public void testJvmNameAnnotatedProperties() throws Exception {
            runTest("testData/navigation/gotoSymbol/jvmNameAnnotatedProperties.kt");
        }

        @TestMetadata("localFunction.kt")
        public void testLocalFunction() throws Exception {
            runTest("testData/navigation/gotoSymbol/localFunction.kt");
        }

        @TestMetadata("privateTopLevelDeclarations.kt")
        public void testPrivateTopLevelDeclarations() throws Exception {
            runTest("testData/navigation/gotoSymbol/privateTopLevelDeclarations.kt");
        }

        @TestMetadata("properties.kt")
        public void testProperties() throws Exception {
            runTest("testData/navigation/gotoSymbol/properties.kt");
        }

        @TestMetadata("stdLibArrayListOf.kt")
        public void testStdLibArrayListOf() throws Exception {
            runTest("testData/navigation/gotoSymbol/stdLibArrayListOf.kt");
        }

        @TestMetadata("stdLibArrayListOfNoSources.kt")
        public void testStdLibArrayListOfNoSources() throws Exception {
            runTest("testData/navigation/gotoSymbol/stdLibArrayListOfNoSources.kt");
        }

        @TestMetadata("stdLibJoinToString.kt")
        public void testStdLibJoinToString() throws Exception {
            runTest("testData/navigation/gotoSymbol/stdLibJoinToString.kt");
        }

        @TestMetadata("typealias.kt")
        public void testTypealias() throws Exception {
            runTest("testData/navigation/gotoSymbol/typealias.kt");
        }
    }
}
