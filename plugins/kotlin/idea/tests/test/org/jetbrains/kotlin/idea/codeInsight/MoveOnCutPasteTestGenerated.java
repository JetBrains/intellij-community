// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.codeInsight;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("idea/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/copyPaste/moveDeclarations")
public class MoveOnCutPasteTestGenerated extends AbstractMoveOnCutPasteTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("ChangePackage.kt")
    public void testChangePackage() throws Exception {
        runTest("testData/copyPaste/moveDeclarations/ChangePackage.kt");
    }

    @TestMetadata("Copy.kt")
    public void testCopy() throws Exception {
        runTest("testData/copyPaste/moveDeclarations/Copy.kt");
    }

    @TestMetadata("FromAnonymousObject.kt")
    public void testFromAnonymousObject() throws Exception {
        runTest("testData/copyPaste/moveDeclarations/FromAnonymousObject.kt");
    }

    @TestMetadata("FromCompanionObjectToTopLevel.kt")
    public void testFromCompanionObjectToTopLevel() throws Exception {
        runTest("testData/copyPaste/moveDeclarations/FromCompanionObjectToTopLevel.kt");
    }

    @TestMetadata("FromObjectToSameFile.kt")
    public void testFromObjectToSameFile() throws Exception {
        runTest("testData/copyPaste/moveDeclarations/FromObjectToSameFile.kt");
    }

    @TestMetadata("FromObjectToTopLevel.kt")
    public void testFromObjectToTopLevel() throws Exception {
        runTest("testData/copyPaste/moveDeclarations/FromObjectToTopLevel.kt");
    }

    @TestMetadata("OptimizeImportsAfterCut.kt")
    public void testOptimizeImportsAfterCut() throws Exception {
        runTest("testData/copyPaste/moveDeclarations/OptimizeImportsAfterCut.kt");
    }

    @TestMetadata("SamePackage.kt")
    public void testSamePackage() throws Exception {
        runTest("testData/copyPaste/moveDeclarations/SamePackage.kt");
    }
}
