// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.codeInsight;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("idea/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public abstract class LightTestRunLineMarkersTestGenerated extends AbstractLightTestRunLineMarkersTest {
    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("testData/codeInsight/lineMarker/runMarkers")
    public static class WithLightTestFramework extends AbstractLightTestRunLineMarkersTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doLightTest, this, testDataFilePath);
        }

        @TestMetadata("jUnit3TestFile.kt")
        public void testJUnit3TestFile() throws Exception {
            runTest("testData/codeInsight/lineMarker/runMarkers/jUnit3TestFile.kt");
        }

        @TestMetadata("jUnit3TestFileWithJUnit4.kt")
        public void testJUnit3TestFileWithJUnit4() throws Exception {
            runTest("testData/codeInsight/lineMarker/runMarkers/jUnit3TestFileWithJUnit4.kt");
        }

        @TestMetadata("jUnit4TestFile.kt")
        public void testJUnit4TestFile() throws Exception {
            runTest("testData/codeInsight/lineMarker/runMarkers/jUnit4TestFile.kt");
        }

        @TestMetadata("jUnitTestClassWithSubclasses.kt")
        public void testJUnitTestClassWithSubclasses() throws Exception {
            runTest("testData/codeInsight/lineMarker/runMarkers/jUnitTestClassWithSubclasses.kt");
        }

        @TestMetadata("testNGTestClassWithSubclasses.kt")
        public void testTestNGTestClassWithSubclasses() throws Exception {
            runTest("testData/codeInsight/lineMarker/runMarkers/testNGTestClassWithSubclasses.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("testData/codeInsight/lineMarker/runMarkers")
    public static class WithoutLightTestFramework extends AbstractLightTestRunLineMarkersTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doPureTest, this, testDataFilePath);
        }

        @TestMetadata("jUnit3TestFile.kt")
        public void testJUnit3TestFile() throws Exception {
            runTest("testData/codeInsight/lineMarker/runMarkers/jUnit3TestFile.kt");
        }

        @TestMetadata("jUnit3TestFileWithJUnit4.kt")
        public void testJUnit3TestFileWithJUnit4() throws Exception {
            runTest("testData/codeInsight/lineMarker/runMarkers/jUnit3TestFileWithJUnit4.kt");
        }

        @TestMetadata("jUnit4TestFile.kt")
        public void testJUnit4TestFile() throws Exception {
            runTest("testData/codeInsight/lineMarker/runMarkers/jUnit4TestFile.kt");
        }

        @TestMetadata("jUnitTestClassWithSubclasses.kt")
        public void testJUnitTestClassWithSubclasses() throws Exception {
            runTest("testData/codeInsight/lineMarker/runMarkers/jUnitTestClassWithSubclasses.kt");
        }

        @TestMetadata("testNGTestClassWithSubclasses.kt")
        public void testTestNGTestClassWithSubclasses() throws Exception {
            runTest("testData/codeInsight/lineMarker/runMarkers/testNGTestClassWithSubclasses.kt");
        }
    }
}
