// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.findUsages;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("idea/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/findUsages/similarity/grouping")
public class KotlinGroupUsagesBySimilarityTestGenerated extends AbstractKotlinGroupUsagesBySimilarityTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("blockHierarchy.kt")
    public void testBlockHierarchy() throws Exception {
        runTest("testData/findUsages/similarity/grouping/blockHierarchy.kt");
    }

    @TestMetadata("chainCalls.kt")
    public void testChainCalls() throws Exception {
        runTest("testData/findUsages/similarity/grouping/chainCalls.kt");
    }

    @TestMetadata("controlStatements.kt")
    public void testControlStatements() throws Exception {
        runTest("testData/findUsages/similarity/grouping/controlStatements.kt");
    }

    @TestMetadata("declaration.kt")
    public void testDeclaration() throws Exception {
        runTest("testData/findUsages/similarity/grouping/declaration.kt");
    }

    @TestMetadata("featuresForClassReferences.kt")
    public void testFeaturesForClassReferences() throws Exception {
        runTest("testData/findUsages/similarity/grouping/featuresForClassReferences.kt");
    }

    @TestMetadata("filter.kt")
    public void testFilter() throws Exception {
        runTest("testData/findUsages/similarity/grouping/filter.kt");
    }

    @TestMetadata("functionSignature.kt")
    public void testFunctionSignature() throws Exception {
        runTest("testData/findUsages/similarity/grouping/functionSignature.kt");
    }

    @TestMetadata("general.kt")
    public void testGeneral() throws Exception {
        runTest("testData/findUsages/similarity/grouping/general.kt");
    }

    @TestMetadata("import.kt")
    public void testImport() throws Exception {
        runTest("testData/findUsages/similarity/grouping/import.kt");
    }

    @TestMetadata("listAdd.kt")
    public void testListAdd() throws Exception {
        runTest("testData/findUsages/similarity/grouping/listAdd.kt");
    }

    @TestMetadata("noVariableNameFeatures.kt")
    public void testNoVariableNameFeatures() throws Exception {
        runTest("testData/findUsages/similarity/grouping/noVariableNameFeatures.kt");
    }

    @TestMetadata("typeReference.kt")
    public void testTypeReference() throws Exception {
        runTest("testData/findUsages/similarity/grouping/typeReference.kt");
    }
}
