// Copyright 2000-2024 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.codeInsight.generate;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.base.plugin.KotlinPluginMode;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("idea/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/codeInsight/generate/secondaryConstructors")
public class CodeInsightActionTestGenerated extends AbstractCodeInsightActionTest {
    @java.lang.Override
    @org.jetbrains.annotations.NotNull
    public final KotlinPluginMode getPluginMode() {
        return KotlinPluginMode.K1;
    }

    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("empty.kt")
    public void testEmpty() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/empty.kt");
    }

    @TestMetadata("emptyClass.kt")
    public void testEmptyClass() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/emptyClass.kt");
    }

    @TestMetadata("emptyClassWithComment.kt")
    public void testEmptyClassWithComment() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/emptyClassWithComment.kt");
    }

    @TestMetadata("emptyClassWithCommentAfter.kt")
    public void testEmptyClassWithCommentAfter() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/emptyClassWithCommentAfter.kt");
    }

    @TestMetadata("emptyExists.kt")
    public void testEmptyExists() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/emptyExists.kt");
    }

    @TestMetadata("enumClass.kt")
    public void testEnumClass() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/enumClass.kt");
    }

    @TestMetadata("javaSupers.kt")
    public void testJavaSupers() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/javaSupers.kt");
    }

    @TestMetadata("javaSupersWithGenerics.kt")
    public void testJavaSupersWithGenerics() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/javaSupersWithGenerics.kt");
    }

    @TestMetadata("javaSupersWithKeywords.kt")
    public void testJavaSupersWithKeywords() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/javaSupersWithKeywords.kt");
    }

    @TestMetadata("primaryExists.kt")
    public void testPrimaryExists() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/primaryExists.kt");
    }

    @TestMetadata("properties.kt")
    public void testProperties() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/properties.kt");
    }

    @TestMetadata("propertiesWithKeywords.kt")
    public void testPropertiesWithKeywords() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/propertiesWithKeywords.kt");
    }

    @TestMetadata("propertiesWithSupers.kt")
    public void testPropertiesWithSupers() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/propertiesWithSupers.kt");
    }

    @TestMetadata("superInvisible.kt")
    public void testSuperInvisible() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/superInvisible.kt");
    }

    @TestMetadata("supers.kt")
    public void testSupers() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/supers.kt");
    }

    @TestMetadata("supersAllExist.kt")
    public void testSupersAllExist() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/supersAllExist.kt");
    }

    @TestMetadata("supersSomeExist.kt")
    public void testSupersSomeExist() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/supersSomeExist.kt");
    }

    @TestMetadata("supersWithGenerics.kt")
    public void testSupersWithGenerics() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/supersWithGenerics.kt");
    }

    @TestMetadata("supersWithVarargs.kt")
    public void testSupersWithVarargs() throws Exception {
        runTest("testData/codeInsight/generate/secondaryConstructors/supersWithVarargs.kt");
    }
}
