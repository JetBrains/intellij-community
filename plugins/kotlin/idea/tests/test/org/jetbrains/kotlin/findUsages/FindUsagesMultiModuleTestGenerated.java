// Copyright 2000-2024 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.findUsages;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("idea/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/multiModuleFindUsages")
public class FindUsagesMultiModuleTestGenerated extends AbstractFindUsagesMultiModuleTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("findActualInterface")
    public void testFindActualInterface() throws Exception {
        runTest("testData/multiModuleFindUsages/findActualInterface/");
    }

    @TestMetadata("findClassConstructors")
    public void testFindClassConstructors() throws Exception {
        runTest("testData/multiModuleFindUsages/findClassConstructors/");
    }

    @TestMetadata("findClassUsagesWithoutConstructors")
    public void testFindClassUsagesWithoutConstructors() throws Exception {
        runTest("testData/multiModuleFindUsages/findClassUsagesWithoutConstructors/");
    }

    @TestMetadata("findCommonClassFromActual")
    public void testFindCommonClassFromActual() throws Exception {
        runTest("testData/multiModuleFindUsages/findCommonClassFromActual/");
    }

    @TestMetadata("findCommonFromActual")
    public void testFindCommonFromActual() throws Exception {
        runTest("testData/multiModuleFindUsages/findCommonFromActual/");
    }

    @TestMetadata("findCommonPropertyFromActual")
    public void testFindCommonPropertyFromActual() throws Exception {
        runTest("testData/multiModuleFindUsages/findCommonPropertyFromActual/");
    }

    @TestMetadata("findCommonSuperclass")
    public void testFindCommonSuperclass() throws Exception {
        runTest("testData/multiModuleFindUsages/findCommonSuperclass/");
    }

    @TestMetadata("findDataComponentInJs")
    public void testFindDataComponentInJs() throws Exception {
        runTest("testData/multiModuleFindUsages/findDataComponentInJs/");
    }

    @TestMetadata("findExpectAnnotationValue")
    public void testFindExpectAnnotationValue() throws Exception {
        runTest("testData/multiModuleFindUsages/findExpectAnnotationValue/");
    }

    @TestMetadata("findExpectClassInJvmNewCall")
    public void testFindExpectClassInJvmNewCall() throws Exception {
        runTest("testData/multiModuleFindUsages/findExpectClassInJvmNewCall/");
    }

    @TestMetadata("findExpectPrimaryClassConstructorInJvmNewCall")
    public void testFindExpectPrimaryClassConstructorInJvmNewCall() throws Exception {
        runTest("testData/multiModuleFindUsages/findExpectPrimaryClassConstructorInJvmNewCall/");
    }

    @TestMetadata("findExpectPropertyInJvm")
    public void testFindExpectPropertyInJvm() throws Exception {
        runTest("testData/multiModuleFindUsages/findExpectPropertyInJvm/");
    }

    @TestMetadata("findImplFromHeader")
    public void testFindImplFromHeader() throws Exception {
        runTest("testData/multiModuleFindUsages/findImplFromHeader/");
    }

    @TestMetadata("findImportAlias")
    public void testFindImportAlias() throws Exception {
        runTest("testData/multiModuleFindUsages/findImportAlias/");
    }

    @TestMetadata("findJvmFromActualJs")
    public void testFindJvmFromActualJs() throws Exception {
        runTest("testData/multiModuleFindUsages/findJvmFromActualJs/");
    }

    @TestMetadata("findParameterInOverride")
    public void testFindParameterInOverride() throws Exception {
        runTest("testData/multiModuleFindUsages/findParameterInOverride/");
    }
}
