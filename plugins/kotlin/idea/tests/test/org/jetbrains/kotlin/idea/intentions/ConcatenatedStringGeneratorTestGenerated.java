// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.intentions;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("idea/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/concatenatedStringGenerator")
public class ConcatenatedStringGeneratorTestGenerated extends AbstractConcatenatedStringGeneratorTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("constants.kt")
    public void testConstants() throws Exception {
        runTest("testData/concatenatedStringGenerator/constants.kt");
    }

    @TestMetadata("constants2.kt")
    public void testConstants2() throws Exception {
        runTest("testData/concatenatedStringGenerator/constants2.kt");
    }

    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        runTest("testData/concatenatedStringGenerator/simple.kt");
    }

    @TestMetadata("stringtemplate.kt")
    public void testStringtemplate() throws Exception {
        runTest("testData/concatenatedStringGenerator/stringtemplate.kt");
    }

    @TestMetadata("stringtemplateWithConstant.kt")
    public void testStringtemplateWithConstant() throws Exception {
        runTest("testData/concatenatedStringGenerator/stringtemplateWithConstant.kt");
    }

    @TestMetadata("variables.kt")
    public void testVariables() throws Exception {
        runTest("testData/concatenatedStringGenerator/variables.kt");
    }
}
