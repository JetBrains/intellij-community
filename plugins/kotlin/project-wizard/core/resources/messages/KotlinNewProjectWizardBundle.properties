buildsystem.type.gradle.groovy=Gradle Groovy
buildsystem.type.gradle.kotlin=Gradle Kotlin
buildsystem.type.intellij=IntelliJ
buildsystem.type.intellij.full=IntelliJ build system
buildsystem.type.maven=Maven

error.template.not.found=Template with the id {0} is not found
error.required.settings.are.not.present.0=The following required settings are not configured\n{0}
error.configurator.not.found=Module type {0} is not found
error.invalid.module.dependency=Invalid module dependency from module {0} to {1}${2}

module.configuration.group.android.native=Android Native
module.configuration.group.ios=iOS
module.configuration.group.linux=Linux
module.configuration.group.macos=macOS
module.configuration.group.windows.mingw=Windows (MinGW)

module.type=Module Type

module.kind.android.module=Android Module
module.kind.ios.module=iOS Module
module.kind.js.browser.module=JS Browser Module
module.kind.js.node.module=JS Node Module
module.kind.module=Module
module.kind.mpp.module=MPP Module
module.kind.target=Target

plugin.buildsystem.setting.type=Build system
plugin.buildsystem.setting.type.error.wrong.project.kind={0} project cannot be generated using {1}

plugin.kotlin.downloading.kotlin.versions=Downloading list of Kotlin versions
plugin.kotlin.setting.modules=Modules
plugin.kotlin.setting.modules.error.duplicated.modules=There are {0} modules with name {1}
plugin.kotlin.setting.modules.error.duplicated.targets=There are {0} targets with name {1}

plugin.kotlin.setting.project.kind=Project Kind

project.kind.android=Android
project.kind.kotlin.js=Kotlin/JS
project.kind.multiplatform=Multiplatform
project.kind.singleplatform=JVM
project.kind.kmm=Kotlin Multiplatform Mobile

project=Project

plugin.structure.setting.location=Location
plugin.structure.setting.location.error.is.not.empty=Directory is not empty
plugin.structure.setting.name=Name
plugin.structure.setting.group.id=Group ID
plugin.structure.setting.group.id.tooltip=The unique identifier of your organization \u2013 not applicable for the IntelliJ build system
plugin.structure.setting.artifact.id=Artifact ID
plugin.structure.setting.artifact.id.tooltip=The unique name of the primary artifact for this project \u2013 not applicable for the IntelliJ build system
plugin.structure.setting.version=Version
plugin.structure.setting.version.tooltip=The version of the primary artifact generated by the project \u2013 not applicable for the IntelliJ build system
plugin.templates.setting.template=Project template
plugin.templates.setting.template.tooltip=Defines the initial project structure. Depending on your purpose, select one of the following templates:

plugin.android.setting.sdk=Android SDK
plugin.android.setting.sdk.tooltip=The Android SDK that will be used for the current application


validation.should.not.be.blank=Specify {0}
validation.identifier={0} should consist only of letters, digits{1}
validation.identifier.additional.symbols=, and symbols: {0}
validation.file.should.exist=File for {0} should exist

version.error.bad.format=Incorrect version format for setting {0}
parse.error.no.value.for.key=No value was found for a key {0}

module.type.jvm=Kotlin/JVM
module.type.js=Kotlin/JS
module.type.common=Common
module.type.android=Android
module.type.native=Kotlin/Native
module.type.wasm=Kotlin/Wasm

module.name=Module name

module.configurator.simple.js.browser=JS for Browser
module.configurator.simple.js.node=JS for Node.JS

module.configurator.android=Android
module.configurator.android.setting.android.plugin=Android plugin
module.configurator.android.setting.android.plugin.tooltip=Android Gradle plugin that will be used for the current module
module.configurator.android.setting.android.plugin.application=com.android.application
module.configurator.android.setting.android.plugin.library=com.android.library

module.configurator.common=Common

module.configurator.jvm=JVM
module.configurator.jvm.setting.target.jvm.version=Target JVM version
module.configurator.jvm.setting.target.jvm.version.tooltip=The version of the JVM bytecode that will be produced as the result of compiling this module
module.configurator.jvm.setting.target.jvm.test.framework.tooltip=The framework that will be used for unit testing

module.configurator.mpp=Multiplatform
module.configurator.ios=IOS
module.configurator.ios.requires.xcode=Requires Xcode

module.configurator.js.browser=Browser
module.configurator.js.node=Node.js

module.configurator.wasm.simple=Wasm

module.configurator.js.target.settings.kind=Target kind
module.configurator.js.target.settings.compiler=Kotlin/JS Compiler
module.configurator.js.target.settings.compiler.tooltip=\u201CBoth\u201D compiles the project with both compiler backends: default and IR. This is mainly useful for authoring libraries that are compatible with both backends.
module.configurator.js.target.settings.use.js.legacy.title=Use deprecated JS legacy compiler
module.configurator.js.target.settings.use.js.ir.description=<html>Learn more about the features available in the new <a href="https://kotlinlang.org/docs/js-ir-compiler.html">Kotlin/JS IR compiler</a></html>
module.configurator.js.target.settings.kind.library=JavaScript library
module.configurator.js.target.settings.kind.application=JavaScript application
module.configurator.js.target.settings.kind.hint=The result of compiling the module

module.configurator.js.target.settings.compiler.ir=New JS IR compiler
module.configurator.js.target.settings.compiler.legacy=Default JS compiler
module.configurator.js.target.settings.compiler.both=Both

module.configurator.tests.setting.framework=Test framework
module.configurator.tests.setting.framework.junit4=JUnit 4
module.configurator.tests.setting.framework.junit5=JUnit 5
module.configurator.tests.setting.framework.test.ng=TestNG
module.configurator.tests.setting.framework.none=None
module.configurator.tests.setting.framework.kotlin.test=Kotlin Test

module.configurator.tests.setting.kotlin.test.title=Use kotlin.test
module.configurator.tests.setting.kotlin.test.desc=<html>Adds <a href="https://kotlinlang.org/api/latest/kotlin.test/">kotlin.test</a> annotations and assert functions for unit testing</html>

module.configurator.native.for.current.system=Your system

project.template.empty.jvm.console.title=Console Application
project.template.empty.jvm.console.description=Simple \u201CHello World!\u201D application with Kotlin/JVM

project.template.mpp.lib.title=Library
project.template.mpp.lib.description=Multiplatform library with common code for sharing across different platforms

project.template.full.stack.title=Full-Stack Web Application
project.template.full.stack.description=Web application with a Kotlin/JS web frontend, a Kotlin/JVM server backend, and common code shared between platforms

project.template.native.console.title=Native Application
project.template.native.console.description=Native application for a specific platform or several platforms that use Kotlin/Native

project.template.wasm.browser.title=Browser Application with Kotlin/Wasm
project.template.wasm.browser.description=Simple browser application with Kotlin/Wasm

project.template.browser.title=Browser Application
project.template.browser.description=Web frontend application with Kotlin/JS

project.template.react.title=React Application
project.template.react.description=Web frontend application using Kotlin/JS with the React UI framework

project.template.nodejs.title=Node.JS Application
project.template.nodejs.description=Application for the Node.js runtime with Kotlin/JS

project.template.mpp.mobile.title=Mobile Application
project.template.mpp.mobile.description=Mobile applications for iOS and Android with common code shared between platforms

module.template.console.jvm.title=Console Application
module.template.console.jvm.description=Simple "Hello World!" Kotlin/JVM application that works in the console

module.template.mpp.mobile.title=Mobile Application
module.template.mpp.mobile.description=Mobile applications for iOS and Android with Kotlin Multiplatform Mobile, which supports sharing common code between platforms.

module.template.ktor.server.title=Web server
module.template.ktor.server.description=Backend web server

module.template.native.console.title=Native Application
module.template.native.console.description=Simple Kotlin/Native application for your operating system

module.template.js.simple.title=Browser Application
module.template.js.simple.description=A blank application targeting the browser
module.template.js.simple.run.configuration.dev=BrowserDevelopmentRun in continuous mode
module.template.js.simple.run.configuration.prod=BrowserProductionRun in continuous mode
module.template.simple.use.kotlinx.html=Use kotlinx.html
module.template.simple.use.kotlinx.html.description=Type-safe Kotlin DSL for creating HTML elements and building DOM trees

module.template.js.react.title=React Application
module.template.js.react.description=React application targeting Browser
module.template.react.use.react.router.dom=Use react-router-dom
module.template.react.use.react.router.dom.description=Adds navigational components to keep your URLs and UIs synchronized
module.template.react.use.react.redux=Use react-redux
module.template.react.use.react.redux.description=Adds state containers powered by Redux

module.template.simple.nodejs.title=Node.JS Application
module.template.simple.nodejs.description=A blank application targeting Node.js
module.template.simple.nodejs.use.kotlinx.nodejs=Use experimental Node.js API (kotlinx-nodejs)
module.template.simple.nodejs.use.kotlinx.nodejs.description=Allows access to Node.js-specific features

module.template.wasm.browser.title=Browser Application with Kotlin/Wasm
module.template.wasm.browser.description=Simple browser application with Kotlin/Wasm

error.text.project.importing.error.kotlin.version.0.reason.1=Project importing error\nKotlin version: {0}\nReason: {1}
error.text.module.0.should.contain.at.least.one.ios.target=Module {0} should contain at least one iOS target
error.text.project.templates.is.not.supported.in.yaml.for.now=Project templates is not supported in yaml for now
configuration.name.run=Run
error.text.for.setting.0.one.of.1.was.expected.but.2.was.found=For setting `{0}` one of [{1}] was expected but `{2}` was found
error.text.expected.0.for.1.but.2.was.found=Expected {0} for `{1}` but {2} was found