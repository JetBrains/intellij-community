UFile (package = ) [public final class LambdaExpressionFunctionalInterfaceTypeKt {...]
    UClass (name = LambdaExpressionFunctionalInterfaceTypeKt) [public final class LambdaExpressionFunctionalInterfaceTypeKt {...}]
        UMethod (name = streamMap) [public static final fun streamMap() : void {...}]
            UBlockExpression [{...}] = external map({ var it: java.lang.Integer ->

    return it.toString()
})(Undetermined)
                UQualifiedReferenceExpression [java.util.stream.Stream.of(1, 2).map({ var it: java.lang.Integer ->...})] = external map({ var it: java.lang.Integer ->

    return it.toString()
})(Undetermined)
                    UQualifiedReferenceExpression [java.util.stream.Stream.of(1, 2)] = external of(1, 2)(1, 2)
                        UQualifiedReferenceExpression [java.util.stream.Stream] = external Stream()
                            UQualifiedReferenceExpression [java.util.stream] = external stream()
                                UQualifiedReferenceExpression [java.util] = external util()
                                    USimpleNameReferenceExpression (identifier = java) [java] = external java()
                                    USimpleNameReferenceExpression (identifier = util) [util] = external util()
                                USimpleNameReferenceExpression (identifier = stream) [stream] = external stream()
                            USimpleNameReferenceExpression (identifier = Stream) [Stream] = external Stream()
                        UCallExpression (kind = UastCallKind(name='method_call'), argCount = 2)) [of(1, 2)] = external of(1, 2)(1, 2)
                            UIdentifier (Identifier (of)) [UIdentifier (Identifier (of))]
                            USimpleNameReferenceExpression (identifier = of, resolvesTo = null) [of] = external of(1, 2)(1, 2)
                            ULiteralExpression (value = 1) [1] = 1
                            ULiteralExpression (value = 2) [2] = 2
                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [map({ var it: java.lang.Integer ->...})] = external map({ var it: java.lang.Integer ->

    return it.toString()
})(Undetermined)
                        UIdentifier (Identifier (map)) [UIdentifier (Identifier (map))]
                        USimpleNameReferenceExpression (identifier = map, resolvesTo = null) [map] = external map({ var it: java.lang.Integer ->

    return it.toString()
})(Undetermined)
                        ULambdaExpression [{ var it: java.lang.Integer ->...}] = Undetermined
                            UParameter (name = it) [var it: java.lang.Integer]
                            UBlockExpression [{...}] = Nothing
                                UReturnExpression [return it.toString()] = Nothing
                                    UQualifiedReferenceExpression [it.toString()] = external toString()()
                                        USimpleNameReferenceExpression (identifier = it) [it] = external it()
                                        UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [toString()] = external toString()()
                                            UIdentifier (Identifier (toString)) [UIdentifier (Identifier (toString))]
                                            USimpleNameReferenceExpression (identifier = toString, resolvesTo = null) [toString] = external toString()()
