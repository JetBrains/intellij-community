UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> CLASS: Int
UTypeReferenceExpression (name = Base) -> USimpleNameReferenceExpression (identifier = Base) -> KtUltraLightClass:interface Base {
    fun print()
}: Base
    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))(resolves to null) -> USimpleNameReferenceExpression (identifier = print) -> FUN: print
    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))(resolves to null) -> USimpleNameReferenceExpression (identifier = x) -> Light Parameter: x
UTypeReferenceExpression (name = Base) -> USimpleNameReferenceExpression (identifier = Base) -> KtUltraLightClass:interface Base {
    fun print()
}: Base
UTypeReferenceExpression (name = Base) -> USimpleNameReferenceExpression (identifier = Base) -> KtUltraLightClass:interface Base {
    fun print()
}: Base
UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))(resolves to KtUltraLightMethodForSourceDeclaration:createBase) -> USimpleNameReferenceExpression (identifier = createBase) -> KtUltraLightMethodForSourceDeclaration:createBase: createBase
UTypeReferenceExpression (name = java.lang.CharSequence) -> USimpleNameReferenceExpression (identifier = CharSequence) -> CLASS: CharSequence
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> CLASS: Int
UTypeReferenceExpression (name = Base) -> USimpleNameReferenceExpression (identifier = Base) -> KtUltraLightClass:interface Base {
    fun print()
}: Base
    UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1))(resolves to KtUltraLightMethodForSourceDeclaration:BaseImpl) -> USimpleNameReferenceExpression (identifier = BaseImpl) -> KtUltraLightMethodForSourceDeclaration:BaseImpl: BaseImpl
    UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1))(resolves to KtUltraLightMethodForSourceDeclaration:BaseImpl) -> USimpleNameReferenceExpression (identifier = i) -> Light Parameter: i
