UTypeReferenceExpression (name = java.lang.Object) -> USimpleNameReferenceExpression (identifier = Any) -> Decompiled_Class: Object
UTypeReferenceExpression (name = boolean) -> USimpleNameReferenceExpression (identifier = Boolean) -> Decompiled_Class: Boolean
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
UTypeReferenceExpression (name = AbstractBaseWithAbstractEquals) -> USimpleNameReferenceExpression (identifier = AbstractBaseWithAbstractEquals) -> Kotlin_Light_Class:abstract class AbstractBaseWithAbstractEquals {
    abstract override fun equals(other: Any?): Boolean
}: AbstractBaseWithAbstractEquals
UTypeReferenceExpression (name = java.lang.Object) -> USimpleNameReferenceExpression (identifier = Any) -> Decompiled_Class: Object
UTypeReferenceExpression (name = boolean) -> USimpleNameReferenceExpression (identifier = Boolean) -> Decompiled_Class: Boolean
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
UTypeReferenceExpression (name = AbstractBaseWithImplementedEquals) -> USimpleNameReferenceExpression (identifier = AbstractBaseWithImplementedEquals) -> Kotlin_Light_Class:abstract class AbstractBaseWithImplementedEquals {
    override fun equals(other: Any?): Boolean = true
}: AbstractBaseWithImplementedEquals
UTypeReferenceExpression (name = java.lang.Object) -> USimpleNameReferenceExpression (identifier = Any) -> Decompiled_Class: Object
UTypeReferenceExpression (name = boolean) -> USimpleNameReferenceExpression (identifier = Boolean) -> Decompiled_Class: Boolean
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
UTypeReferenceExpression (name = AbstractBaseWithFinalEquals) -> USimpleNameReferenceExpression (identifier = AbstractBaseWithFinalEquals) -> Kotlin_Light_Class:abstract class AbstractBaseWithFinalEquals {
    final override fun equals(other: Any?): Boolean = true
}: AbstractBaseWithFinalEquals
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
UTypeReferenceExpression (name = AbstractBaseWithNoEquals) -> USimpleNameReferenceExpression (identifier = AbstractBaseWithNoEquals) -> Kotlin_Light_Class:abstract class AbstractBaseWithNoEquals: AbstractBaseWithNoEquals
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
UTypeReferenceExpression (name = AbstractBaseWithNoEquals) -> USimpleNameReferenceExpression (identifier = AbstractBaseWithNoEquals) -> Kotlin_Light_Class:abstract class AbstractBaseWithNoEquals: AbstractBaseWithNoEquals
UTypeReferenceExpression (name = java.lang.Object) -> USimpleNameReferenceExpression (identifier = Any) -> Decompiled_Class: Object
UTypeReferenceExpression (name = boolean) -> USimpleNameReferenceExpression (identifier = Boolean) -> Decompiled_Class: Boolean
