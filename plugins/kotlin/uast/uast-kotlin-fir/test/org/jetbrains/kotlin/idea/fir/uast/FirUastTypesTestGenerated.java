// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.fir.uast;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("uast/uast-kotlin-fir")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/type")
public class FirUastTypesTestGenerated extends AbstractFirUastTypesTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("accessArrayOfInlineClass.kt")
    public void testAccessArrayOfInlineClass() throws Exception {
        runTest("testData/type/accessArrayOfInlineClass.kt");
    }

    @TestMetadata("arrayConstructorsSimple.kt")
    public void testArrayConstructorsSimple() throws Exception {
        runTest("testData/type/arrayConstructorsSimple.kt");
    }

    @TestMetadata("arrayGetAssignMultiIndex.kt")
    public void testArrayGetAssignMultiIndex() throws Exception {
        runTest("testData/type/arrayGetAssignMultiIndex.kt");
    }

    @TestMetadata("classLiteral.kt")
    public void testClassLiteral() throws Exception {
        runTest("testData/type/classLiteral.kt");
    }

    @TestMetadata("jvmInlineParameter.kt")
    public void testJvmInlineParameter() throws Exception {
        runTest("testData/type/jvmInlineParameter.kt");
    }

    @TestMetadata("nonNullCompanion.kt")
    public void testNonNullCompanion() throws Exception {
        runTest("testData/type/nonNullCompanion.kt");
    }

    @TestMetadata("nonNullablePair.kt")
    public void testNonNullablePair() throws Exception {
        runTest("testData/type/nonNullablePair.kt");
    }

    @TestMetadata("nullnessInVarargs.kt")
    public void testNullnessInVarargs() throws Exception {
        runTest("testData/type/nullnessInVarargs.kt");
    }

    @TestMetadata("objectLiteral.kt")
    public void testObjectLiteral() throws Exception {
        runTest("testData/type/objectLiteral.kt");
    }

    @TestMetadata("threadSafe.kt")
    public void testThreadSafe() throws Exception {
        runTest("testData/type/threadSafe.kt");
    }

    @TestMetadata("typeCast.kt")
    public void testTypeCast() throws Exception {
        runTest("testData/type/typeCast.kt");
    }

    @TestMetadata("typeCheck.kt")
    public void testTypeCheck() throws Exception {
        runTest("testData/type/typeCheck.kt");
    }

    @TestMetadata("unresolved.kt")
    public void testUnresolved() throws Exception {
        runTest("testData/type/unresolved.kt");
    }

    @TestMetadata("withGeneric.kt")
    public void testWithGeneric() throws Exception {
        runTest("testData/type/withGeneric.kt");
    }
}
