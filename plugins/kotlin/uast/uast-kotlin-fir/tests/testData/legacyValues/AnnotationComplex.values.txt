UFile (package = ) [public abstract annotation Annotation {...]
    UClass (name = Annotation) [public abstract annotation Annotation {...}]
        UAnnotationMethod (name = strings) [public abstract fun strings() : java.lang.String[] = UastEmptyExpression]
    UClass (name = A) [public final class A {...}]
        UAnnotation (fqName = Annotation) [@Annotation]
        UMethod (name = A) [public fun A() = UastEmptyExpression]
    UClass (name = AnnotationInner) [public abstract annotation AnnotationInner {...}]
        UAnnotationMethod (name = value) [public abstract fun value() : Annotation = UastEmptyExpression]
    UClass (name = B1) [public final class B1 {...}]
        UAnnotation (fqName = AnnotationArray) [@AnnotationArray(value = Annotation())]
            UNamedExpression (name = value) [value = Annotation()] = Undetermined
                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [Annotation()] = Undetermined
                    UIdentifier (Identifier (Annotation)) [UIdentifier (Identifier (Annotation))]
                    USimpleNameReferenceExpression (identifier = Annotation, resolvesTo = PsiClass: Annotation) [Annotation] = Undetermined
        UMethod (name = B1) [public fun B1() = UastEmptyExpression]
    UClass (name = B2) [public final class B2 {...}]
        UAnnotation (fqName = AnnotationArray) [@AnnotationArray(value = Annotation("sv1", "sv2"))]
            UNamedExpression (name = value) [value = Annotation("sv1", "sv2")] = Undetermined
                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 2)) [Annotation("sv1", "sv2")] = Undetermined
                    UIdentifier (Identifier (Annotation)) [UIdentifier (Identifier (Annotation))]
                    USimpleNameReferenceExpression (identifier = Annotation, resolvesTo = PsiClass: Annotation) [Annotation] = Undetermined
                    UPolyadicExpression (operator = +) ["sv1"] = Undetermined
                        ULiteralExpression (value = "sv1") ["sv1"] = Undetermined
                    UPolyadicExpression (operator = +) ["sv2"] = Undetermined
                        ULiteralExpression (value = "sv2") ["sv2"] = Undetermined
        UMethod (name = B2) [public fun B2() = UastEmptyExpression]
    UClass (name = AnnotationArray) [public abstract annotation AnnotationArray {...}]
        UAnnotationMethod (name = value) [public abstract fun value() : Annotation[] = UastEmptyExpression]
    UClass (name = C) [public final class C {...}]
        UAnnotation (fqName = AnnotationArray) [@AnnotationArray(value = Annotation(arrayOf("sar1", "sar2")))]
            UNamedExpression (name = value) [value = Annotation(arrayOf("sar1", "sar2"))] = Undetermined
                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) [Annotation(arrayOf("sar1", "sar2"))] = Undetermined
                    UIdentifier (Identifier (Annotation)) [UIdentifier (Identifier (Annotation))]
                    USimpleNameReferenceExpression (identifier = Annotation, resolvesTo = PsiClass: Annotation) [Annotation] = Undetermined
                    UCallExpression (kind = UastCallKind(name='array_initializer'), argCount = 2)) [arrayOf("sar1", "sar2")] = Undetermined
                        UIdentifier (Identifier (arrayOf)) [UIdentifier (Identifier (arrayOf))]
                        UPolyadicExpression (operator = +) ["sar1"] = Undetermined
                            ULiteralExpression (value = "sar1") ["sar1"] = Undetermined
                        UPolyadicExpression (operator = +) ["sar2"] = Undetermined
                            ULiteralExpression (value = "sar2") ["sar2"] = Undetermined
        UMethod (name = C) [public fun C() = UastEmptyExpression]
    UClass (name = C2) [public final class C2 {...}]
        UAnnotation (fqName = AnnotationArray) [@AnnotationArray(value = Annotation(collectionLiteral["[sar]1", "[sar]2"]))]
            UNamedExpression (name = value) [value = Annotation(collectionLiteral["[sar]1", "[sar]2"])] = Undetermined
                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) [Annotation(collectionLiteral["[sar]1", "[sar]2"])] = Undetermined
                    UIdentifier (Identifier (Annotation)) [UIdentifier (Identifier (Annotation))]
                    USimpleNameReferenceExpression (identifier = Annotation, resolvesTo = PsiClass: Annotation) [Annotation] = Undetermined
                    UCallExpression (kind = UastCallKind(name='array_initializer'), argCount = 2)) [collectionLiteral["[sar]1", "[sar]2"]] = Undetermined
                        UIdentifier (Identifier ([)) [UIdentifier (Identifier ([))]
                        UPolyadicExpression (operator = +) ["[sar]1"] = Undetermined
                            ULiteralExpression (value = "[sar]1") ["[sar]1"] = Undetermined
                        UPolyadicExpression (operator = +) ["[sar]2"] = Undetermined
                            ULiteralExpression (value = "[sar]2") ["[sar]2"] = Undetermined
        UMethod (name = C2) [public fun C2() = UastEmptyExpression]
