UFile (package = ) [public final class ObjectLiteralKt {...]
    UClass (name = ObjectLiteralKt) [public final class ObjectLiteralKt {...}]
        UMethod (name = box) [public static final fun box() : int {...}]
            UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() java.lang.Void
                UDeclarationsExpression [var o: java.lang.Object = anonymous object : I, A() {...    }]
                    ULocalVariable (name = o) [var o: java.lang.Object = anonymous object : I, A() {...    }]
                        UObjectLiteralExpression [anonymous object : I, A() {...    }] : A
                            UClass (name = null) [final class null : I, A {...}]
                                UMethod (name = foo) [public fun foo() : int {...}]
                                    UBlockExpression [{...}]
                                        UReturnExpression [return 42]
                                            ULiteralExpression (value = 42) [42] : int
                                UMethod (name = ) [private fun () {...}]
                                    UBlockExpression [{...}]
                                        UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [A()]
                                            UIdentifier (Identifier (A)) [UIdentifier (Identifier (A))]
                                            USimpleNameReferenceExpression (identifier = A, resolvesTo = PsiClass: A) [A]
                UReturnExpression [return o.foo()] : @org.jetbrains.annotations.NotNull() java.lang.Void
                    UQualifiedReferenceExpression [o.foo()] : int
                        USimpleNameReferenceExpression (identifier = o) [o] : @org.jetbrains.annotations.NotNull() java.lang.Object
                        UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [foo()] : int
                            UIdentifier (Identifier (foo)) [UIdentifier (Identifier (foo))]
    UClass (name = I) [public abstract interface I {...}]
        UMethod (name = foo) [public abstract fun foo() : int = UastEmptyExpression]
    UClass (name = A) [public final class A {...}]
        UMethod (name = A) [public fun A() = UastEmptyExpression]
