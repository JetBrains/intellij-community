UTypeReferenceExpression (name = long) -> USimpleNameReferenceExpression (identifier = Long) -> Decompiled_Class: Long
UTypeReferenceExpression (name = long) -> USimpleNameReferenceExpression (identifier = Long) -> Decompiled_Class: Long
UTypeReferenceExpression (name = int[]) -> USimpleNameReferenceExpression (identifier = IntArray) -> CLASS: IntArray
UTypeReferenceExpression (name = java.lang.String[]) -> USimpleNameReferenceExpression (identifier = Array) -> CLASS: Array
UTypeReferenceExpression (name = java.lang.String) -> USimpleNameReferenceExpression (identifier = String) -> Decompiled_Class: String
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
UTypeReferenceExpression (name = java.lang.String[]) -> USimpleNameReferenceExpression (identifier = String) -> Decompiled_Class: String
UAnnotation (fqName = RequiresPermission) -> USimpleNameReferenceExpression (identifier = RequiresPermission) -> Kotlin_Light_Class:AnnotationClass: RequiresPermission
null -> USimpleNameReferenceExpression (identifier = anyOf) -> Kotlin_Light_Method: anyOf
UCallExpression (kind = UastCallKind(name='array_initializer'), argCount = 3))(resolves to null) -> USimpleNameReferenceExpression (identifier = intArrayOf) -> null: null
UAnnotation (fqName = IntRange) -> USimpleNameReferenceExpression (identifier = IntRange) -> Kotlin_Light_Class:AnnotationClass: IntRange
null -> USimpleNameReferenceExpression (identifier = from) -> Kotlin_Light_Method: from
null -> USimpleNameReferenceExpression (identifier = to) -> Kotlin_Light_Method: to
UAnnotation (fqName = WithDefaultValue) -> USimpleNameReferenceExpression (identifier = WithDefaultValue) -> Kotlin_Light_Class:AnnotationClass: WithDefaultValue
UAnnotation (fqName = SuppressLint) -> USimpleNameReferenceExpression (identifier = SuppressLint) -> Kotlin_Light_Class:AnnotationClass: SuppressLint
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
UAnnotation (fqName = IntRange) -> USimpleNameReferenceExpression (identifier = IntRange) -> Kotlin_Light_Class:AnnotationClass: IntRange
UAnnotation (fqName = SuppressLint) -> USimpleNameReferenceExpression (identifier = SuppressLint) -> Kotlin_Light_Class:AnnotationClass: SuppressLint
UReturnExpression -> USimpleNameReferenceExpression (identifier = Unit) -> Decompiled_Class: Unit
UAnnotation (fqName = RequiresPermission) -> USimpleNameReferenceExpression (identifier = RequiresPermission) -> Kotlin_Light_Class:AnnotationClass: RequiresPermission
null -> USimpleNameReferenceExpression (identifier = anyOf) -> Kotlin_Light_Method: anyOf
UNamedExpression (name = anyOf) -> UCallExpression (kind = UastCallKind(name='array_initializer'), argCount = 3)) -> null:
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
UAnnotation (fqName = RequiresStrPermission) -> USimpleNameReferenceExpression (identifier = RequiresStrPermission) -> Kotlin_Light_Class:AnnotationClass: RequiresStrPermission
null -> USimpleNameReferenceExpression (identifier = strs) -> Kotlin_Light_Method: strs
UNamedExpression (name = strs) -> UCallExpression (kind = UastCallKind(name='array_initializer'), argCount = 3)) -> null:
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
