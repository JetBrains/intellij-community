UComment -> USimpleNameReferenceExpression (identifier = Margherita) -> CLASS: Margherita
UComment -> USimpleNameReferenceExpression (identifier = Pizza) -> CLASS: Pizza
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
UComment -> UQualifiedReferenceExpression -> Decompiled_Class: String
UQualifiedReferenceExpression -> UQualifiedReferenceExpression -> PsiPackage:java.lang: lang
UQualifiedReferenceExpression -> USimpleNameReferenceExpression (identifier = java) -> PsiPackage:java: java
UComment -> UQualifiedReferenceExpression -> Decompiled_Class: IllegalStateException
UQualifiedReferenceExpression -> UQualifiedReferenceExpression -> PsiPackage:java.lang: lang
UQualifiedReferenceExpression -> USimpleNameReferenceExpression (identifier = java) -> PsiPackage:java: java
UComment -> USimpleNameReferenceExpression (identifier = ClassCastException) -> TYPEALIAS: ClassCastException
UTypeReferenceExpression (name = java.lang.String) -> USimpleNameReferenceExpression (identifier = java) -> PsiPackage:java: java
UTypeReferenceExpression (name = java.lang.String) -> USimpleNameReferenceExpression (identifier = lang) -> PsiPackage:java.lang: lang
UTypeReferenceExpression (name = java.lang.String) -> USimpleNameReferenceExpression (identifier = String) -> Decompiled_Class: String
UComment -> UQualifiedReferenceExpression -> CLASS: Ingredient
UQualifiedReferenceExpression -> USimpleNameReferenceExpression (identifier = Pizza) -> CLASS: Pizza
UComment -> USimpleNameReferenceExpression (identifier = ingredient) -> VALUE_PARAMETER: ingredient
UComment -> UQualifiedReferenceExpression -> CLASS: NotImplementedError
UQualifiedReferenceExpression -> USimpleNameReferenceExpression (identifier = kotlin) -> PsiPackage:kotlin: kotlin
UComment -> UQualifiedReferenceExpression -> FUN: contains
UQualifiedReferenceExpression -> USimpleNameReferenceExpression (identifier = Margherita) -> CLASS: Margherita
UTypeReferenceExpression (name = Pizza.Ingredient) -> USimpleNameReferenceExpression (identifier = Ingredient) -> Kotlin_Light_Class:Interface: Ingredient
UTypeReferenceExpression (name = boolean) -> USimpleNameReferenceExpression (identifier = Boolean) -> Decompiled_Class: Boolean
UComment -> USimpleNameReferenceExpression (identifier = Pizza) -> CLASS: Pizza
UComment -> USimpleNameReferenceExpression (identifier = Pizza) -> CLASS: Pizza
UComment -> USimpleNameReferenceExpression (identifier = P) -> TYPE_PARAMETER: P
UComment -> USimpleNameReferenceExpression (identifier = self) -> FUN: self
UTypeReferenceExpression (name = Pizza.Builder<P>) -> USimpleNameReferenceExpression (identifier = Pizza) -> Kotlin_Light_Class:Interface: Pizza
UTypeReferenceExpression (name = Pizza.Builder<P>) -> USimpleNameReferenceExpression (identifier = Builder) -> Kotlin_Light_Class:ClassOrObject: Builder
UTypeReferenceExpression (name = P) -> USimpleNameReferenceExpression (identifier = P) -> Kotlin_Light_Type_Parameter: P
UTypeReferenceExpression (name = java.util.Set<Pizza.Ingredient>) -> USimpleNameReferenceExpression (identifier = MutableSet) -> Decompiled_Class: Set
UTypeReferenceExpression (name = Pizza.Ingredient) -> USimpleNameReferenceExpression (identifier = Pizza) -> Kotlin_Light_Class:Interface: Pizza
UTypeReferenceExpression (name = Pizza.Ingredient) -> USimpleNameReferenceExpression (identifier = Ingredient) -> Kotlin_Light_Class:Interface: Ingredient
UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0))(resolves to Decompiled_Method) -> USimpleNameReferenceExpression (identifier = mutableSetOf) -> Decompiled_Method: mutableSetOf
UComment -> USimpleNameReferenceExpression (identifier = ingredient) -> VALUE_PARAMETER: ingredient
UComment -> USimpleNameReferenceExpression (identifier = ingredients) -> PROPERTY: ingredients
UComment -> USimpleNameReferenceExpression (identifier = P) -> TYPE_PARAMETER: P
UTypeReferenceExpression (name = Pizza.Ingredient) -> USimpleNameReferenceExpression (identifier = Pizza) -> Kotlin_Light_Class:Interface: Pizza
UTypeReferenceExpression (name = Pizza.Ingredient) -> USimpleNameReferenceExpression (identifier = Ingredient) -> Kotlin_Light_Class:Interface: Ingredient
UTypeReferenceExpression (name = P) -> USimpleNameReferenceExpression (identifier = P) -> Kotlin_Light_Type_Parameter: P
UTypeReferenceExpression (name = Pizza) -> USimpleNameReferenceExpression (identifier = Pizza) -> Kotlin_Light_Class:Interface: Pizza
UTypeReferenceExpression (name = P) -> USimpleNameReferenceExpression (identifier = P) -> Kotlin_Light_Type_Parameter: P
UComment -> USimpleNameReferenceExpression (identifier = Pizza) -> CLASS: Pizza
UComment -> USimpleNameReferenceExpression (identifier = size) -> VALUE_PARAMETER: size
UComment -> USimpleNameReferenceExpression (identifier = Margherita) -> CLASS: Margherita
UTypeReferenceExpression (name = int) -> USimpleNameReferenceExpression (identifier = Int) -> Decompiled_Class: Integer
UTypeReferenceExpression (name = Pizza) -> USimpleNameReferenceExpression (identifier = Pizza) -> Kotlin_Light_Class:Interface: Pizza
UTypeReferenceExpression (name = java.lang.String) -> USimpleNameReferenceExpression (identifier = java) -> PsiPackage:java: java
UTypeReferenceExpression (name = java.lang.String) -> USimpleNameReferenceExpression (identifier = lang) -> PsiPackage:java.lang: lang
UTypeReferenceExpression (name = java.lang.String) -> USimpleNameReferenceExpression (identifier = String) -> Decompiled_Class: String
UReturnExpression -> UQualifiedReferenceExpression -> Decompiled_Method: String
UQualifiedReferenceExpression -> UQualifiedReferenceExpression -> PsiPackage:java.lang: lang
UQualifiedReferenceExpression -> USimpleNameReferenceExpression (identifier = java) -> PsiPackage:java: java
UQualifiedReferenceExpression -> USimpleNameReferenceExpression (identifier = lang) -> PsiPackage:java.lang: lang
UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1))(resolves to Decompiled_Method) -> USimpleNameReferenceExpression (identifier = String) -> Decompiled_Method: String
UComment -> UQualifiedReferenceExpression -> CLASS: Ingredient
UQualifiedReferenceExpression -> USimpleNameReferenceExpression (identifier = Pizza) -> CLASS: Pizza
UComment -> USimpleNameReferenceExpression (identifier = ingredient) -> VALUE_PARAMETER: ingredient
UComment -> UQualifiedReferenceExpression -> CLASS: Ingredient
UQualifiedReferenceExpression -> USimpleNameReferenceExpression (identifier = Pizza) -> CLASS: Pizza
UTypeReferenceExpression (name = Pizza.Ingredient) -> USimpleNameReferenceExpression (identifier = Pizza) -> Kotlin_Light_Class:Interface: Pizza
UTypeReferenceExpression (name = Pizza.Ingredient) -> USimpleNameReferenceExpression (identifier = Ingredient) -> Kotlin_Light_Class:Interface: Ingredient
UTypeReferenceExpression (name = boolean) -> USimpleNameReferenceExpression (identifier = Boolean) -> Decompiled_Class: Boolean
