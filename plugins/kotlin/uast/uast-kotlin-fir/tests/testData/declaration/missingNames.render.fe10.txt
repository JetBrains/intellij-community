public final class SimpleClass {
    public fun SimpleClass(@org.jetbrains.annotations.NotNull valOne: java.lang.String, @org.jetbrains.annotations.NotNull valTwo: int) = UastEmptyExpression
}

public final class Foo {
    @org.jetbrains.annotations.NotNull private final var name: java.lang.String
    public final fun getName() : java.lang.String = UastEmptyExpression
    public fun Foo(@org.jetbrains.annotations.NotNull name: java.lang.String, @org.jetbrains.annotations.NotNull : error.NonExistentClass) = UastEmptyExpression
}

public abstract interface Foo {
}

public final class MyClass {
    private final var value: T
    public final fun getValAsString() : T {
        return value.toString()
    }
    public final fun getValue() : T = UastEmptyExpression
    public fun MyClass(value: T) = UastEmptyExpression
}
