UFile (package = test.pkg)
    UClass (name = Anno)
    UClass (name = IntValue)
        UAnnotation (fqName = kotlin.jvm.JvmInline)
        UField (name = Companion)
            UAnnotation (fqName = null)
        UField (name = withValueClassTypeSpecified)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1))
                UIdentifier (Identifier (IntValue))
                USimpleNameReferenceExpression (identifier = IntValue, resolvesTo = PsiClass: IntValue)
                ULiteralExpression (value = 0)
        UField (name = withValueClassTypeUnspecified)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1))
                UIdentifier (Identifier (IntValue))
                USimpleNameReferenceExpression (identifier = IntValue, resolvesTo = PsiClass: IntValue)
                ULiteralExpression (value = 1)
        UField (name = withNonValueClassTypeSpecified)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
            ULiteralExpression (value = 2)
        UField (name = withNonValueClassTypeUnSpecified)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
            ULiteralExpression (value = 3)
        UField (name = value)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UMethod (name = getValue)
        UMethod (name = IntValue)
            UParameter (name = value)
                UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UClass (name = Companion)
            UMethod (name = getWithValueClassTypeSpecified)
            UMethod (name = getWithValueClassTypeUnspecified)
            UMethod (name = getWithNonValueClassTypeSpecified)
            UMethod (name = getWithNonValueClassTypeUnSpecified)
            UMethod (name = Companion)
