package test.pkg

public abstract class MyClass {
    @org.jetbrains.annotations.NotNull private final var firstConstructorProperty: int
    @org.jetbrains.annotations.NotNull private final var secondConstructorProperty: boolean
    @org.jetbrains.annotations.NotNull private final var nonConstructorProperty: java.lang.String = "PROP"
    public final fun getNonConstructorProperty() : java.lang.String = UastEmptyExpression
    public final fun getFirstConstructorProperty() : int = UastEmptyExpression
    public final fun getSecondConstructorProperty() : boolean = UastEmptyExpression
    protected fun MyClass(@org.jetbrains.annotations.NotNull firstConstructorProperty: int, @org.jetbrains.annotations.NotNull secondConstructorProperty: boolean) = UastEmptyExpression
}

public final class MyDataClass {
    @org.jetbrains.annotations.NotNull private final var constructorProperty: java.lang.String
    @org.jetbrains.annotations.NotNull private final var internalConstructorProperty: java.lang.String
    public final fun getConstructorProperty() : java.lang.String = UastEmptyExpression
    public final fun getInternalConstructorProperty$light_idea_test_case() : java.lang.String = UastEmptyExpression
    public fun MyDataClass(@org.jetbrains.annotations.NotNull constructorProperty: java.lang.String, @org.jetbrains.annotations.NotNull internalConstructorProperty: java.lang.String) = UastEmptyExpression
    public final fun component1() : java.lang.String = UastEmptyExpression
    public final fun component2() : java.lang.String = UastEmptyExpression
    public final fun copy(@org.jetbrains.annotations.NotNull constructorProperty: java.lang.String, @org.jetbrains.annotations.NotNull internalConstructorProperty: java.lang.String) : test.pkg.MyDataClass = UastEmptyExpression
    public fun toString() : java.lang.String = UastEmptyExpression
    public fun hashCode() : int = UastEmptyExpression
    public fun equals(@org.jetbrains.annotations.Nullable other: java.lang.Object) : boolean = UastEmptyExpression
}
