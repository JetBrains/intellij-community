public abstract class AbstractBaseWithAbstractEquals {
    public abstract fun equals(@org.jetbrains.annotations.Nullable other: java.lang.Object) : boolean = UastEmptyExpression
    public fun AbstractBaseWithAbstractEquals() = UastEmptyExpression
}

public final class Data1 : AbstractBaseWithAbstractEquals {
    @org.jetbrains.annotations.NotNull private final var a: int
    public final fun getA() : int = UastEmptyExpression
    public fun Data1(@org.jetbrains.annotations.NotNull a: int) {
        <init>()
    }
    public final fun component1() : int = UastEmptyExpression
    public final fun copy(@org.jetbrains.annotations.NotNull a: int) : Data1 = UastEmptyExpression
    public fun toString() : java.lang.String = UastEmptyExpression
    public fun hashCode() : int = UastEmptyExpression
    public abstract fun equals(@org.jetbrains.annotations.Nullable other: java.lang.Object) : boolean = UastEmptyExpression
}

public abstract class AbstractBaseWithImplementedEquals {
    public fun equals(@org.jetbrains.annotations.Nullable other: java.lang.Object) : boolean {
        return true
    }
    public fun AbstractBaseWithImplementedEquals() = UastEmptyExpression
}

public final class Data2 : AbstractBaseWithImplementedEquals {
    @org.jetbrains.annotations.NotNull private final var a: int
    public final fun getA() : int = UastEmptyExpression
    public fun Data2(@org.jetbrains.annotations.NotNull a: int) {
        <init>()
    }
    public final fun component1() : int = UastEmptyExpression
    public final fun copy(@org.jetbrains.annotations.NotNull a: int) : Data2 = UastEmptyExpression
    public fun toString() : java.lang.String = UastEmptyExpression
    public fun hashCode() : int = UastEmptyExpression
    public fun equals(@org.jetbrains.annotations.Nullable other: java.lang.Object) : boolean = UastEmptyExpression
}

public abstract class AbstractBaseWithFinalEquals {
    public final fun equals(@org.jetbrains.annotations.Nullable other: java.lang.Object) : boolean {
        return true
    }
    public fun AbstractBaseWithFinalEquals() = UastEmptyExpression
}

public final class Data3 : AbstractBaseWithFinalEquals {
    @org.jetbrains.annotations.NotNull private final var a: int
    public final fun getA() : int = UastEmptyExpression
    public fun Data3(@org.jetbrains.annotations.NotNull a: int) {
        <init>()
    }
    public final fun component1() : int = UastEmptyExpression
    public final fun copy(@org.jetbrains.annotations.NotNull a: int) : Data3 = UastEmptyExpression
    public fun toString() : java.lang.String = UastEmptyExpression
    public fun hashCode() : int = UastEmptyExpression
}

public abstract class AbstractBaseWithNoEquals {
    public fun AbstractBaseWithNoEquals() = UastEmptyExpression
}

public final class Data4 : AbstractBaseWithNoEquals {
    @org.jetbrains.annotations.NotNull private final var a: int
    public final fun getA() : int = UastEmptyExpression
    public fun Data4(@org.jetbrains.annotations.NotNull a: int) {
        <init>()
    }
    public final fun component1() : int = UastEmptyExpression
    public final fun copy(@org.jetbrains.annotations.NotNull a: int) : Data4 = UastEmptyExpression
    public fun toString() : java.lang.String = UastEmptyExpression
    public fun hashCode() : int = UastEmptyExpression
    public fun equals(@org.jetbrains.annotations.Nullable other: java.lang.Object) : boolean = UastEmptyExpression
}

public final class Data5 : AbstractBaseWithNoEquals {
    @org.jetbrains.annotations.NotNull private final var a: int
    public fun equals(@org.jetbrains.annotations.Nullable other: java.lang.Object) : boolean {
        return true
    }
    public final fun getA() : int = UastEmptyExpression
    public fun Data5(@org.jetbrains.annotations.NotNull a: int) {
        <init>()
    }
    public final fun component1() : int = UastEmptyExpression
    public final fun copy(@org.jetbrains.annotations.NotNull a: int) : Data5 = UastEmptyExpression
    public fun toString() : java.lang.String = UastEmptyExpression
    public fun hashCode() : int = UastEmptyExpression
}
