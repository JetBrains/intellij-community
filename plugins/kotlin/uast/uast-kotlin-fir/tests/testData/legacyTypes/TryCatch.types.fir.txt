UFile (package = ) [public final class TryCatch {...]
    UClass (name = TryCatch) [public final class TryCatch {...}]
        UMethod (name = catches) [public final fun catches() : void {...}]
            UBlockExpression [{...}] : void
                UTryExpression [try {...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                    UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                        UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [body()] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                            UIdentifier (Identifier (body)) [UIdentifier (Identifier (body))]
                    UCatchClause (e) [catch (@org.jetbrains.annotations.NotNull var e: java.lang.Throwable) {...}]
                        UParameter (name = e) [@org.jetbrains.annotations.NotNull var e: java.lang.Throwable]
                            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                        UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                            UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [catcher()] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                                UIdentifier (Identifier (catcher)) [UIdentifier (Identifier (catcher))]
                    UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                        UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [finalizer()] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                            UIdentifier (Identifier (finalizer)) [UIdentifier (Identifier (finalizer))]
        UMethod (name = body) [public final fun body() : void {...}]
            UBlockExpression [{...}] : void
        UMethod (name = catcher) [public final fun catcher() : void {...}]
            UBlockExpression [{...}] : void
        UMethod (name = finalizer) [public final fun finalizer() : void {...}]
            UBlockExpression [{...}] : void
        UMethod (name = TryCatch) [public fun TryCatch() = UastEmptyExpression]
    UClass (name = TryCatchAnnotations) [public final class TryCatchAnnotations {...}]
        UMethod (name = catches) [@java.lang.SuppressWarnings(value = "Something")...}]
            UAnnotation (fqName = java.lang.SuppressWarnings) [@java.lang.SuppressWarnings(value = "Something")]
                UNamedExpression (name = value) [value = "Something"]
                    UPolyadicExpression (operator = +) ["Something"] : java.lang.String
                        ULiteralExpression (value = "Something") ["Something"] : java.lang.String
            UBlockExpression [{...}] : void
                UTryExpression [try {...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                    UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                        UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [body()] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                            UIdentifier (Identifier (body)) [UIdentifier (Identifier (body))]
                    UCatchClause (e) [catch (@org.jetbrains.annotations.NotNull @java.lang.SuppressWarnings(value = "Something") var e: java.lang.Throwable) {...}]
                        UParameter (name = e) [@org.jetbrains.annotations.NotNull @java.lang.SuppressWarnings(value = "Something") var e: java.lang.Throwable]
                            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                            UAnnotation (fqName = java.lang.SuppressWarnings) [@java.lang.SuppressWarnings(value = "Something")]
                                UNamedExpression (name = value) [value = "Something"]
                                    UPolyadicExpression (operator = +) ["Something"] : java.lang.String
                                        ULiteralExpression (value = "Something") ["Something"] : java.lang.String
                        UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                            UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [catcher()] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                                UIdentifier (Identifier (catcher)) [UIdentifier (Identifier (catcher))]
                    UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                        UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [finalizer()] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                            UIdentifier (Identifier (finalizer)) [UIdentifier (Identifier (finalizer))]
        UMethod (name = body) [public final fun body() : void {...}]
            UBlockExpression [{...}] : void
        UMethod (name = catcher) [public final fun catcher() : void {...}]
            UBlockExpression [{...}] : void
        UMethod (name = finalizer) [public final fun finalizer() : void {...}]
            UBlockExpression [{...}] : void
        UMethod (name = TryCatchAnnotations) [public fun TryCatchAnnotations() = UastEmptyExpression]
