UFile (package = ) [public final class LambdaParametersKt {...]
    UClass (name = LambdaParametersKt) [public final class LambdaParametersKt {...}]
        UMethod (name = lambdaWithRecivier) [public static final fun lambdaWithRecivier() : void {...}]
            UBlockExpression [{...}] : java.lang.String
                UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [buildString({ ...})] : java.lang.String
                    UIdentifier (Identifier (buildString)) [UIdentifier (Identifier (buildString))]
                    ULambdaExpression [{ ...}] : kotlin.jvm.functions.Function1<? super java.lang.StringBuilder, ? extends kotlin.Unit>
                        UBlockExpression [{...}]
                            UReturnExpression [return append("a")]
                                UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [append("a")] : java.lang.StringBuilder
                                    UIdentifier (Identifier (append)) [UIdentifier (Identifier (append))]
                                    UPolyadicExpression (operator = +) ["a"] : java.lang.String
                                        ULiteralExpression (value = "a") ["a"] : java.lang.String
        UMethod (name = itParameter) [public static final fun itParameter() : void {...}]
            UBlockExpression [{...}] : int
                UQualifiedReferenceExpression [10.let({ var it: int ->...})] : int
                    ULiteralExpression (value = 10) [10] : int
                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [let({ var it: int ->...})] : int
                        UIdentifier (Identifier (let)) [UIdentifier (Identifier (let))]
                        ULambdaExpression [{ var it: int ->...}] : kotlin.jvm.functions.Function1<? super java.lang.Integer, ? extends java.lang.Integer>
                            UParameter (name = it) [var it: int]
                            UBlockExpression [{...}]
                                UReturnExpression [return it]
                                    USimpleNameReferenceExpression (identifier = it) [it] : int
