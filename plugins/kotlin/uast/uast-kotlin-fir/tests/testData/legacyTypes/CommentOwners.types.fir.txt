UFile (package = ) [public final class CommentOwnersKt {...]
    UClass (name = CommentOwnersKt) [public final class CommentOwnersKt {...}]
        UField (name = topLevelProperty) [@org.jetbrains.annotations.NotNull private static final var topLevelProperty: int = 42]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            ULiteralExpression (value = 42) [42] : int
        UMethod (name = getTopLevelProperty) [public static final fun getTopLevelProperty() : int = UastEmptyExpression]
        UMethod (name = topLevelFun) [public static final fun topLevelFun() : void {...}]
            UBlockExpression [{...}]
                UReturnExpression [return TODO()]
                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [TODO()] : @org.jetbrains.annotations.NotNull() java.lang.Void
                        UIdentifier (Identifier (TODO)) [UIdentifier (Identifier (TODO))]
        UMethod (name = funPlainCall) [public static final fun funPlainCall(@org.jetbrains.annotations.NotNull a: int) : void {...}]
            UParameter (name = a) [@org.jetbrains.annotations.NotNull var a: int]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UBlockExpression [{...}]
                UReturnExpression [return TODO()]
                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [TODO()] : @org.jetbrains.annotations.NotNull() java.lang.Void
                        UIdentifier (Identifier (TODO)) [UIdentifier (Identifier (TODO))]
        UMethod (name = funNamedArgumentsCall) [public static final fun funNamedArgumentsCall(@org.jetbrains.annotations.NotNull a: int) : void {...}]
            UParameter (name = a) [@org.jetbrains.annotations.NotNull var a: int]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UBlockExpression [{...}]
                UReturnExpression [return TODO()]
                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [TODO()] : @org.jetbrains.annotations.NotNull() java.lang.Void
                        UIdentifier (Identifier (TODO)) [UIdentifier (Identifier (TODO))]
        UMethod (name = func) [public static final fun func(@org.jetbrains.annotations.NotNull a: int) : void {...}]
            UParameter (name = a) [@org.jetbrains.annotations.NotNull var a: int]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UBlockExpression [{...}] : void
                UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [funPlainCall(42)] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                    UIdentifier (Identifier (funPlainCall)) [UIdentifier (Identifier (funPlainCall))]
                    ULiteralExpression (value = 42) [42] : int
                UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [funNamedArgumentsCall(42)] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                    UIdentifier (Identifier (funNamedArgumentsCall)) [UIdentifier (Identifier (funNamedArgumentsCall))]
                    ULiteralExpression (value = 42) [42] : int
                UWhileExpression [while (true) {...}]
                    ULiteralExpression (value = true) [true] : boolean
                    UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() java.lang.Void
                        UBreakExpression (label = null) [break]
                UIfExpression [if (true) {...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                    ULiteralExpression (value = true) [true] : boolean
                    UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                    UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                UDeclarationsExpression [var localValueDefinition: int = 42]
                    ULocalVariable (name = localValueDefinition) [var localValueDefinition: int = 42]
                        ULiteralExpression (value = 42) [42] : int
    UClass (name = TopLevelClass) [public final class TopLevelClass {...}]
        UField (name = classLevelProperty) [@org.jetbrains.annotations.NotNull private final var classLevelProperty: int = 42]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            ULiteralExpression (value = 42) [42] : int
        UMethod (name = getClassLevelProperty) [public final fun getClassLevelProperty() : int = UastEmptyExpression]
        UMethod (name = classLevelMethod) [public final fun classLevelMethod() : void {...}]
            UBlockExpression [{...}]
                UReturnExpression [return TODO()]
                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [TODO()] : @org.jetbrains.annotations.NotNull() java.lang.Void
                        UIdentifier (Identifier (TODO)) [UIdentifier (Identifier (TODO))]
        UMethod (name = TopLevelClass) [public fun TopLevelClass(@org.jetbrains.annotations.NotNull t: int) {...}]
            UParameter (name = t) [@org.jetbrains.annotations.NotNull var t: int]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UBlockExpression [{...}]
                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [Object()]
                    UIdentifier (Identifier ()) [UIdentifier (Identifier ())]
                    USimpleNameReferenceExpression (identifier = Object, resolvesTo = PsiClass: Object) [Object]
        UClass (name = NestedClass) [public static final class NestedClass {...}]
            UMethod (name = NestedClass) [public fun NestedClass() = UastEmptyExpression]
    UClass (name = MyBooleanEnum) [public final enum MyBooleanEnum {...}]
        UEnumConstant (name = TRUE) [@null TRUE]
            UAnnotation (fqName = null) [@null]
            USimpleNameReferenceExpression (identifier = MyBooleanEnum) [MyBooleanEnum]
        UEnumConstant (name = FALSE) [@null FALSE]
            UAnnotation (fqName = null) [@null]
            USimpleNameReferenceExpression (identifier = MyBooleanEnum) [MyBooleanEnum]
        UMethod (name = values) [public static fun values() : MyBooleanEnum[] = UastEmptyExpression]
        UMethod (name = valueOf) [public static fun valueOf(value: java.lang.String) : MyBooleanEnum = UastEmptyExpression]
            UParameter (name = value) [var value: java.lang.String]
        UMethod (name = getEntries) [public static fun getEntries() : kotlin.enums.EnumEntries<MyBooleanEnum> = UastEmptyExpression]
        UMethod (name = MyBooleanEnum) [private fun MyBooleanEnum() = UastEmptyExpression]
