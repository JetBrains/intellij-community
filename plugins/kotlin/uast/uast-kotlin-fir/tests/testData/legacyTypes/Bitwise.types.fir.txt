UFile (package = ) [public final class BitwiseKt {...]
    UClass (name = BitwiseKt) [public final class BitwiseKt {...}]
        UMethod (name = foo) [public static final fun foo() : int {...}]
            UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() java.lang.Void
                UDeclarationsExpression [var mask: int = 127]
                    ULocalVariable (name = mask) [var mask: int = 127]
                        ULiteralExpression (value = 127) [127] : int
                UDeclarationsExpression [var x: int = 715827882]
                    ULocalVariable (name = x) [var x: int = 715827882]
                        ULiteralExpression (value = 715827882) [715827882] : int
                UDeclarationsExpression [var pos: int = x & mask]
                    ULocalVariable (name = pos) [var pos: int = x & mask]
                        UBinaryExpression (operator = &) [x & mask] : int
                            USimpleNameReferenceExpression (identifier = x) [x] : int
                            USimpleNameReferenceExpression (identifier = mask) [mask] : int
                UDeclarationsExpression [var max: int = x | mask]
                    ULocalVariable (name = max) [var max: int = x | mask]
                        UBinaryExpression (operator = |) [x | mask] : int
                            USimpleNameReferenceExpression (identifier = x) [x] : int
                            USimpleNameReferenceExpression (identifier = mask) [mask] : int
                UDeclarationsExpression [var zebra: int = x ^ mask]
                    ULocalVariable (name = zebra) [var zebra: int = x ^ mask]
                        UBinaryExpression (operator = ^) [x ^ mask] : int
                            USimpleNameReferenceExpression (identifier = x) [x] : int
                            USimpleNameReferenceExpression (identifier = mask) [mask] : int
                UDeclarationsExpression [var signed: int = x >> 2]
                    ULocalVariable (name = signed) [var signed: int = x >> 2]
                        UBinaryExpression (operator = >>) [x >> 2] : int
                            USimpleNameReferenceExpression (identifier = x) [x] : int
                            ULiteralExpression (value = 2) [2] : int
                UDeclarationsExpression [var one: int = x >>> 29]
                    ULocalVariable (name = one) [var one: int = x >>> 29]
                        UBinaryExpression (operator = >>>) [x >>> 29] : int
                            USimpleNameReferenceExpression (identifier = x) [x] : int
                            ULiteralExpression (value = 29) [29] : int
                UDeclarationsExpression [var zero: int = x << 31]
                    ULocalVariable (name = zero) [var zero: int = x << 31]
                        UBinaryExpression (operator = <<) [x << 31] : int
                            USimpleNameReferenceExpression (identifier = x) [x] : int
                            ULiteralExpression (value = 31) [31] : int
                UReturnExpression [return pos + zero - zebra * signed / one] : @org.jetbrains.annotations.NotNull() java.lang.Void
                    UBinaryExpression (operator = -) [pos + zero - zebra * signed / one] : int
                        UBinaryExpression (operator = +) [pos + zero] : int
                            USimpleNameReferenceExpression (identifier = pos) [pos] : int
                            USimpleNameReferenceExpression (identifier = zero) [zero] : int
                        UBinaryExpression (operator = /) [zebra * signed / one] : int
                            UBinaryExpression (operator = *) [zebra * signed] : int
                                USimpleNameReferenceExpression (identifier = zebra) [zebra] : int
                                USimpleNameReferenceExpression (identifier = signed) [signed] : int
                            USimpleNameReferenceExpression (identifier = one) [one] : int
        UMethod (name = bar) [public static final fun bar() : long {...}]
            UBlockExpression [{...}] : @org.jetbrains.annotations.NotNull() java.lang.Void
                UDeclarationsExpression [var mask: long = 127]
                    ULocalVariable (name = mask) [var mask: long = 127]
                        ULiteralExpression (value = 127) [127] : long
                UDeclarationsExpression [var x: long = 3074457345618258602]
                    ULocalVariable (name = x) [var x: long = 3074457345618258602]
                        ULiteralExpression (value = 3074457345618258602) [3074457345618258602] : long
                UDeclarationsExpression [var pos: long = x & mask]
                    ULocalVariable (name = pos) [var pos: long = x & mask]
                        UBinaryExpression (operator = &) [x & mask] : long
                            USimpleNameReferenceExpression (identifier = x) [x] : long
                            USimpleNameReferenceExpression (identifier = mask) [mask] : long
                UDeclarationsExpression [var max: long = x | mask]
                    ULocalVariable (name = max) [var max: long = x | mask]
                        UBinaryExpression (operator = |) [x | mask] : long
                            USimpleNameReferenceExpression (identifier = x) [x] : long
                            USimpleNameReferenceExpression (identifier = mask) [mask] : long
                UDeclarationsExpression [var zebra: long = x ^ mask]
                    ULocalVariable (name = zebra) [var zebra: long = x ^ mask]
                        UBinaryExpression (operator = ^) [x ^ mask] : long
                            USimpleNameReferenceExpression (identifier = x) [x] : long
                            USimpleNameReferenceExpression (identifier = mask) [mask] : long
                UDeclarationsExpression [var signed: long = x >> 2]
                    ULocalVariable (name = signed) [var signed: long = x >> 2]
                        UBinaryExpression (operator = >>) [x >> 2] : long
                            USimpleNameReferenceExpression (identifier = x) [x] : long
                            ULiteralExpression (value = 2) [2] : int
                UDeclarationsExpression [var one: long = x >>> 61]
                    ULocalVariable (name = one) [var one: long = x >>> 61]
                        UBinaryExpression (operator = >>>) [x >>> 61] : long
                            USimpleNameReferenceExpression (identifier = x) [x] : long
                            ULiteralExpression (value = 61) [61] : int
                UDeclarationsExpression [var zero: long = x << 63]
                    ULocalVariable (name = zero) [var zero: long = x << 63]
                        UBinaryExpression (operator = <<) [x << 63] : long
                            USimpleNameReferenceExpression (identifier = x) [x] : long
                            ULiteralExpression (value = 63) [63] : int
                UReturnExpression [return pos + zero - zebra * signed / one] : @org.jetbrains.annotations.NotNull() java.lang.Void
                    UBinaryExpression (operator = -) [pos + zero - zebra * signed / one] : long
                        UBinaryExpression (operator = +) [pos + zero] : long
                            USimpleNameReferenceExpression (identifier = pos) [pos] : long
                            USimpleNameReferenceExpression (identifier = zero) [zero] : long
                        UBinaryExpression (operator = /) [zebra * signed / one] : long
                            UBinaryExpression (operator = *) [zebra * signed] : long
                                USimpleNameReferenceExpression (identifier = zebra) [zebra] : long
                                USimpleNameReferenceExpression (identifier = signed) [signed] : long
                            USimpleNameReferenceExpression (identifier = one) [one] : long
