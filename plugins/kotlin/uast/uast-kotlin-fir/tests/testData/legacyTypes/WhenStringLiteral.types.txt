UFile (package = ) [public final class WhenStringLiteralKt {...]
    UClass (name = WhenStringLiteralKt) [public final class WhenStringLiteralKt {...}]
        UField (name = a) [@org.jetbrains.annotations.Nullable private static final var a: java.lang.String = readLine()]
            UAnnotation (fqName = org.jetbrains.annotations.Nullable) [@org.jetbrains.annotations.Nullable]
            UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [readLine()] : java.lang.String
                UIdentifier (Identifier (readLine)) [UIdentifier (Identifier (readLine))]
        UField (name = b) [@org.jetbrains.annotations.NotNull private static final var b: int = switch (a)  {...]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            USwitchExpression [switch (a)  {...] : int
                USimpleNameReferenceExpression (identifier = a) [a] : java.lang.String
                UExpressionList (when) [    "abc" -> {...    ] : int
                    USwitchClauseExpressionWithBody ["abc" -> {...]
                        UPolyadicExpression (operator = +) ["abc"] : java.lang.String
                            ULiteralExpression (value = "abc") ["abc"] : java.lang.String
                        UExpressionList (when_entry) [{...]
                            UYieldExpression [yield 1]
                                ULiteralExpression (value = 1) [1] : int
                    USwitchClauseExpressionWithBody ["def", "ghi" -> {...]
                        UPolyadicExpression (operator = +) ["def"] : java.lang.String
                            ULiteralExpression (value = "def") ["def"] : java.lang.String
                        UPolyadicExpression (operator = +) ["ghi"] : java.lang.String
                            ULiteralExpression (value = "ghi") ["ghi"] : java.lang.String
                        UExpressionList (when_entry) [{...]
                            UYieldExpression [yield 2]
                                ULiteralExpression (value = 2) [2] : int
                    USwitchClauseExpressionWithBody [ -> {...]
                        UExpressionList (when_entry) [{...]
                            UYieldExpression [yield 3]
                                ULiteralExpression (value = 3) [3] : int
        UMethod (name = getA) [public static final fun getA() : java.lang.String = UastEmptyExpression]
        UMethod (name = getB) [public static final fun getB() : int = UastEmptyExpression]
