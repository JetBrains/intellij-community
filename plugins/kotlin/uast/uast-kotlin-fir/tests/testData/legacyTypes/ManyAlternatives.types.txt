UFile (package = ) [public final class ClassA {...]
    UClass (name = ClassA) [public final class ClassA {...}]
        UField (name = Companion) [@null public static final var Companion: ClassA.Companion]
            UAnnotation (fqName = null) [@null]
        UField (name = paramAndProp) [@org.jetbrains.annotations.NotNull private final var paramAndProp: java.lang.String]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
        UField (name = writebleProp) [@org.jetbrains.annotations.NotNull private var writebleProp: int = 0]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            ULiteralExpression (value = 0) [0] : PsiType:int
        UMethod (name = getWritebleProp) [public final fun getWritebleProp() : int = UastEmptyExpression]
        UMethod (name = setWritebleProp) [public final fun setWritebleProp(<set-?>: int) : void = UastEmptyExpression]
            UParameter (name = <set-?>) [var <set-?>: int]
        UMethod (name = getParamAndProp) [public final fun getParamAndProp() : java.lang.String = UastEmptyExpression]
        UMethod (name = ClassA) [public fun ClassA(@org.jetbrains.annotations.NotNull justParam: int, @org.jetbrains.annotations.NotNull paramAndProp: java.lang.String) = UastEmptyExpression]
            UParameter (name = justParam) [@org.jetbrains.annotations.NotNull var justParam: int]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UParameter (name = paramAndProp) [@org.jetbrains.annotations.NotNull var paramAndProp: java.lang.String]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
        UMethod (name = foo) [public static final fun foo() : void {...}]
            UBlockExpression [{...}] : PsiType:void
        UClass (name = Companion) [public static final class Companion {...}]
            UMethod (name = foo) [@kotlin.jvm.JvmStatic...}]
                UAnnotation (fqName = kotlin.jvm.JvmStatic) [@kotlin.jvm.JvmStatic]
                UBlockExpression [{...}] : PsiType:void
            UMethod (name = Companion) [private fun Companion() = UastEmptyExpression]
