UFile (package = ) [public final class TypeAliasConstructorReferenceKt {...]
    UClass (name = TypeAliasConstructorReferenceKt) [public final class TypeAliasConstructorReferenceKt {...}]
        UField (name = a) [@org.jetbrains.annotations.NotNull private static final var a: A = <init>("10")]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) [<init>("10")] : PsiType:A
                UIdentifier (Identifier (AA)) [UIdentifier (Identifier (AA))]
                USimpleNameReferenceExpression (identifier = <init>, resolvesTo = PsiClass: A) [<init>] : PsiType:A
                ULiteralExpression (value = "10") ["10"] : PsiType:String
        UField (name = b) [@org.jetbrains.annotations.NotNull private static final var b: A = <init>("10")]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) [<init>("10")] : PsiType:A
                UIdentifier (Identifier (A)) [UIdentifier (Identifier (A))]
                USimpleNameReferenceExpression (identifier = <init>, resolvesTo = PsiClass: A) [<init>] : PsiType:A
                ULiteralExpression (value = "10") ["10"] : PsiType:String
        UField (name = c) [@org.jetbrains.annotations.NotNull private static final var c: A = <init>("10")]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) [<init>("10")] : PsiType:A
                UIdentifier (Identifier (AAA)) [UIdentifier (Identifier (AAA))]
                USimpleNameReferenceExpression (identifier = <init>, resolvesTo = PsiClass: A) [<init>] : PsiType:A
                ULiteralExpression (value = "10") ["10"] : PsiType:String
        UMethod (name = getA) [public static final fun getA() : A = UastEmptyExpression]
        UMethod (name = getB) [public static final fun getB() : A = UastEmptyExpression]
        UMethod (name = getC) [public static final fun getC() : A = UastEmptyExpression]
    UClass (name = A) [public final class A {...}]
        UMethod (name = A) [public fun A(@org.jetbrains.annotations.NotNull param: java.lang.String) = UastEmptyExpression]
            UParameter (name = param) [@org.jetbrains.annotations.NotNull var param: java.lang.String]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]