UFile (package = ) [public final class StringTemplateComplexKt {...]
    UClass (name = StringTemplateComplexKt) [public final class StringTemplateComplexKt {...}]
        UField (name = muchRecur) [@org.jetbrains.annotations.NotNull private static final var muchRecur: java.lang.String = "abc"]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UPolyadicExpression (operator = +) ["abc"] : java.lang.String
                UPolyadicExpression (operator = +) ["abc"] : java.lang.String
                    UPolyadicExpression (operator = +) ["abc"] : java.lang.String
                        UPolyadicExpression (operator = +) ["abc"] : java.lang.String
                            ULiteralExpression (value = "abc") ["abc"] : java.lang.String
        UField (name = case4) [@org.jetbrains.annotations.NotNull private static final var case4: java.lang.String = "a " + "literal" + " z"]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UPolyadicExpression (operator = +) ["a " + "literal" + " z"] : java.lang.String
                ULiteralExpression (value = "a ") ["a "] : java.lang.String
                UPolyadicExpression (operator = +) ["literal"] : java.lang.String
                    ULiteralExpression (value = "literal") ["literal"] : java.lang.String
                ULiteralExpression (value = " z") [" z"] : java.lang.String
        UField (name = case5) [@org.jetbrains.annotations.NotNull private static final var case5: java.lang.String = "a " + "literal" + " " + "literal" + " z"]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UPolyadicExpression (operator = +) ["a " + "literal" + " " + "literal" + " z"] : java.lang.String
                ULiteralExpression (value = "a ") ["a "] : java.lang.String
                UPolyadicExpression (operator = +) ["literal"] : java.lang.String
                    ULiteralExpression (value = "literal") ["literal"] : java.lang.String
                ULiteralExpression (value = " ") [" "] : java.lang.String
                UPolyadicExpression (operator = +) ["literal"] : java.lang.String
                    ULiteralExpression (value = "literal") ["literal"] : java.lang.String
                ULiteralExpression (value = " z") [" z"] : java.lang.String
        UField (name = literalInLiteral) [@org.jetbrains.annotations.NotNull private static final var literalInLiteral: java.lang.String = "a " + "literal" + case4 + " z"]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UPolyadicExpression (operator = +) ["a " + "literal" + case4 + " z"] : java.lang.String
                ULiteralExpression (value = "a ") ["a "] : java.lang.String
                UPolyadicExpression (operator = +) ["literal" + case4] : java.lang.String
                    ULiteralExpression (value = "literal") ["literal"] : java.lang.String
                    USimpleNameReferenceExpression (identifier = case4) [case4] : java.lang.String
                ULiteralExpression (value = " z") [" z"] : java.lang.String
        UField (name = literalInLiteral2) [@org.jetbrains.annotations.NotNull private static final var literalInLiteral2: java.lang.String = "a " + "literal" + case4.repeat(4) + " z"]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UPolyadicExpression (operator = +) ["a " + "literal" + case4.repeat(4) + " z"] : java.lang.String
                ULiteralExpression (value = "a ") ["a "] : java.lang.String
                UQualifiedReferenceExpression ["literal" + case4.repeat(4)] : java.lang.String
                    UPolyadicExpression (operator = +) ["literal" + case4] : java.lang.String
                        ULiteralExpression (value = "literal") ["literal"] : java.lang.String
                        USimpleNameReferenceExpression (identifier = case4) [case4] : java.lang.String
                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [repeat(4)] : java.lang.String
                        UIdentifier (Identifier (repeat)) [UIdentifier (Identifier (repeat))]
                        ULiteralExpression (value = 4) [4] : int
                ULiteralExpression (value = " z") [" z"] : java.lang.String
        UField (name = empty) [@org.jetbrains.annotations.NotNull private static final var empty: java.lang.String = ""]
            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UPolyadicExpression (operator = +) [""] : java.lang.String
                ULiteralExpression (value = "") [""] : java.lang.String
        UMethod (name = getMuchRecur) [public static final fun getMuchRecur() : java.lang.String = UastEmptyExpression]
        UMethod (name = getCase4) [public static final fun getCase4() : java.lang.String = UastEmptyExpression]
        UMethod (name = getCase5) [public static final fun getCase5() : java.lang.String = UastEmptyExpression]
        UMethod (name = getLiteralInLiteral) [public static final fun getLiteralInLiteral() : java.lang.String = UastEmptyExpression]
        UMethod (name = getLiteralInLiteral2) [public static final fun getLiteralInLiteral2() : java.lang.String = UastEmptyExpression]
        UMethod (name = getEmpty) [public static final fun getEmpty() : java.lang.String = UastEmptyExpression]
        UMethod (name = simpleForTemplate) [public static final fun simpleForTemplate(@org.jetbrains.annotations.NotNull i: int) : java.lang.String {...}]
            UParameter (name = i) [@org.jetbrains.annotations.NotNull var i: int = 0]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                ULiteralExpression (value = 0) [0] : int
            UBlockExpression [{...}]
                UReturnExpression [return i]
                    UPolyadicExpression (operator = +) [i] : java.lang.String
                        USimpleNameReferenceExpression (identifier = i) [i] : int
        UMethod (name = foo) [public static final fun foo() : void {...}]
            UBlockExpression [{...}] : void
                UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [println(baz)] : @org.jetbrains.annotations.NotNull() kotlin.Unit
                    UIdentifier (Identifier (println)) [UIdentifier (Identifier (println))]
                    UPolyadicExpression (operator = +) [baz] : java.lang.String
                        USimpleNameReferenceExpression (identifier = baz) [baz]
                UDeclarationsExpression [var template1: java.lang.String = simpleForTemplate()]
                    ULocalVariable (name = template1) [var template1: java.lang.String = simpleForTemplate()]
                        UPolyadicExpression (operator = +) [simpleForTemplate()] : java.lang.String
                            UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [simpleForTemplate()] : java.lang.String
                                UIdentifier (Identifier (simpleForTemplate)) [UIdentifier (Identifier (simpleForTemplate))]
                UDeclarationsExpression [var template2: java.lang.String = "." + simpleForTemplate()]
                    ULocalVariable (name = template2) [var template2: java.lang.String = "." + simpleForTemplate()]
                        UPolyadicExpression (operator = +) ["." + simpleForTemplate()] : java.lang.String
                            ULiteralExpression (value = ".") ["."] : java.lang.String
                            UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [simpleForTemplate()] : java.lang.String
                                UIdentifier (Identifier (simpleForTemplate)) [UIdentifier (Identifier (simpleForTemplate))]
