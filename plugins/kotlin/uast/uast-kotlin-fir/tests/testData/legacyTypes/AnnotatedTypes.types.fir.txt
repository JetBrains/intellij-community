UFile (package = ) [public final class AnnotatedTypesKt {...]
    UClass (name = AnnotatedTypesKt) [public final class AnnotatedTypesKt {...}]
        UMethod (name = foo) [public static final fun foo(@org.jetbrains.annotations.NotNull list: java.util.List<java.lang.String>) : void {...}]
            UParameter (name = list) [@org.jetbrains.annotations.NotNull var list: java.util.List<java.lang.String>]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UBlockExpression [{...}] : PsiType:void
                UDeclarationsExpression [var a: java.lang.String = list[2]]
                    ULocalVariable (name = a) [var a: java.lang.String = list[2]]
                        UArrayAccessExpression [list[2]] : PsiType:String
                            USimpleNameReferenceExpression (identifier = list) [list] : PsiType:List<? extends String>
                            ULiteralExpression (value = 2) [2] : PsiType:int
                UDeclarationsExpression [var b: java.lang.String = "abc"]
                    ULocalVariable (name = b) [var b: java.lang.String = "abc"]
                        ULiteralExpression (value = "abc") ["abc"] : PsiType:String
                UDeclarationsExpression [var c: java.lang.String = b]
                    ULocalVariable (name = c) [var c: java.lang.String = b]
                        USimpleNameReferenceExpression (identifier = b) [b] : PsiType:String
                UDeclarationsExpression [var v: java.lang.String = "abc"]
                    ULocalVariable (name = v) [var v: java.lang.String = "abc"]
                        ULiteralExpression (value = "abc") ["abc"] : PsiType:String
    UClass (name = MyAnnotation) [public abstract annotation MyAnnotation {...}]
        UAnnotation (fqName = kotlin.annotation.Target) [@kotlin.annotation.Target(allowedTargets = AnnotationTarget.TYPE)]
            UNamedExpression (name = allowedTargets) [allowedTargets = AnnotationTarget.TYPE]
                UQualifiedReferenceExpression [AnnotationTarget.TYPE] : PsiType:AnnotationTarget
                    USimpleNameReferenceExpression (identifier = AnnotationTarget) [AnnotationTarget] : PsiType:Unit
                    USimpleNameReferenceExpression (identifier = TYPE) [TYPE] : PsiType:AnnotationTarget
        UAnnotationMethod (name = a) [public abstract fun a() : int = UastEmptyExpression]
        UAnnotationMethod (name = b) [public abstract fun b() : java.lang.String = UastEmptyExpression]
        UAnnotationMethod (name = c) [public abstract fun c() : kotlin.annotation.AnnotationTarget = UastEmptyExpression]
