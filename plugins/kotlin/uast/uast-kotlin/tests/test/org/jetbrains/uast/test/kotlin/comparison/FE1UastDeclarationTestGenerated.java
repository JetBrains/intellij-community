// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.uast.test.kotlin.comparison;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("uast/uast-kotlin/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("../../uast-kotlin-fir/testData/declaration")
public class FE1UastDeclarationTestGenerated extends AbstractFE1UastDeclarationTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("annotationOnElvis.kt")
    public void testAnnotationOnElvis() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/annotationOnElvis.kt");
    }

    @TestMetadata("commentsOnDataClass.kt")
    public void testCommentsOnDataClass() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/commentsOnDataClass.kt");
    }

    @TestMetadata("commentsOnProperties.kt")
    public void testCommentsOnProperties() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/commentsOnProperties.kt");
    }

    @TestMetadata("companionInAnnotation.kt")
    public void testCompanionInAnnotation() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/companionInAnnotation.kt");
    }

    @TestMetadata("constructorProperties.kt")
    public void testConstructorProperties() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/constructorProperties.kt");
    }

    @TestMetadata("constructorWithJvmOverloads.kt")
    public void testConstructorWithJvmOverloads() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/constructorWithJvmOverloads.kt");
    }

    @TestMetadata("doWhile.kt")
    public void testDoWhile() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/doWhile.kt");
    }

    @TestMetadata("facade.kt")
    public void testFacade() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/facade.kt");
    }

    @TestMetadata("if.kt")
    public void testIf() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/if.kt");
    }

    @TestMetadata("importOnDemand.kt")
    public void testImportOnDemand() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/importOnDemand.kt");
    }

    @TestMetadata("init.kt")
    public void testInit() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/init.kt");
    }

    @TestMetadata("interfaceCompanionObject.kt")
    public void testInterfaceCompanionObject() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/interfaceCompanionObject.kt");
    }

    @TestMetadata("labeledExpression.kt")
    public void testLabeledExpression() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/labeledExpression.kt");
    }

    @TestMetadata("mangling.kt")
    public void testMangling() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/mangling.kt");
    }

    @TestMetadata("objects.kt")
    public void testObjects() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/objects.kt");
    }

    @TestMetadata("overriddenYetDeprecated.kt")
    public void testOverriddenYetDeprecated() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/overriddenYetDeprecated.kt");
    }

    @TestMetadata("reflectKclassExperimental.kt")
    public void testReflectKclassExperimental() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/reflectKclassExperimental.kt");
    }

    @TestMetadata("retention.kt")
    public void testRetention() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/retention.kt");
    }

    @TestMetadata("returns.kt")
    public void testReturns() throws Exception {
        runTest("../../uast-kotlin-fir/testData/declaration/returns.kt");
    }
}
