org.jetbrains.kotlin.psi.KtDotQualifiedExpression: UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
org.jetbrains.kotlin.psi.KtDotQualifiedExpression: UQualifiedReferenceExpression <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = java) <- UQualifiedReferenceExpression <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (java)) <- USimpleNameReferenceExpression (identifier = java) <- UQualifiedReferenceExpression <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = io) <- UQualifiedReferenceExpression <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (io)) <- USimpleNameReferenceExpression (identifier = io) <- UQualifiedReferenceExpression <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = Closeable) <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (Closeable)) <- USimpleNameReferenceExpression (identifier = Closeable) <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
org.jetbrains.kotlin.psi.KtDotQualifiedExpression: UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
org.jetbrains.kotlin.psi.KtDotQualifiedExpression: UQualifiedReferenceExpression <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = java) <- UQualifiedReferenceExpression <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (java)) <- USimpleNameReferenceExpression (identifier = java) <- UQualifiedReferenceExpression <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = io) <- UQualifiedReferenceExpression <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (io)) <- USimpleNameReferenceExpression (identifier = io) <- UQualifiedReferenceExpression <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = InputStream) <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (InputStream)) <- USimpleNameReferenceExpression (identifier = InputStream) <- UQualifiedReferenceExpression <- UImportStatement (isOnDemand = false) <- UFile (package = )
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (foo)) <- UMethod (name = foo) <- UClass (name = AnonymousKt) <- UFile (package = )
org.jetbrains.kotlin.psi.KtParameterList: UDeclarationsExpression <- UReturnExpression <- UBlockExpression <- UMethod (name = foo) <- UClass (name = AnonymousKt)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (runnable)) <- ULocalVariable (name = runnable) <- UDeclarationsExpression <- UBlockExpression <- UMethod (name = foo)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (object)) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = runnable) <- UDeclarationsExpression
org.jetbrains.kotlin.psi.KtTypeReference: UTypeReferenceExpression (name = java.lang.Runnable)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = Runnable) <- UTypeReferenceExpression (name = java.lang.Runnable)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (Runnable)) <- USimpleNameReferenceExpression (identifier = Runnable) <- UTypeReferenceExpression (name = java.lang.Runnable)
org.jetbrains.kotlin.psi.KtClassBody: UExpressionList (class_body) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = runnable) <- UDeclarationsExpression
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (run)) <- UMethod (name = run) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = runnable)
org.jetbrains.kotlin.psi.KtParameterList: UDeclarationsExpression <- UReturnExpression <- UBlockExpression <- UMethod (name = run) <- UClass (name = null)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (runnable)) <- USimpleNameReferenceExpression (identifier = runnable) <- UQualifiedReferenceExpression <- UBlockExpression <- UMethod (name = foo)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = run) <- UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) <- UQualifiedReferenceExpression <- UBlockExpression <- UMethod (name = foo)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (runnable2)) <- ULocalVariable (name = runnable2) <- UDeclarationsExpression <- UBlockExpression <- UMethod (name = foo)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = Runnable) <- UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) <- ULocalVariable (name = runnable2) <- UDeclarationsExpression <- UBlockExpression
org.jetbrains.kotlin.psi.KtLambdaArgument: ULambdaExpression <- UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) <- ULocalVariable (name = runnable2) <- UDeclarationsExpression <- UBlockExpression
org.jetbrains.kotlin.psi.KtFunctionLiteral: ULambdaExpression <- UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) <- ULocalVariable (name = runnable2) <- UDeclarationsExpression <- UBlockExpression
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = println) <- UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) <- UBlockExpression <- ULambdaExpression <- UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1))
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (runnable2)) <- USimpleNameReferenceExpression (identifier = runnable2) <- UQualifiedReferenceExpression <- UBlockExpression <- UMethod (name = foo)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = run) <- UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) <- UQualifiedReferenceExpression <- UBlockExpression <- UMethod (name = foo)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (closeableRunnable)) <- ULocalVariable (name = closeableRunnable) <- UDeclarationsExpression <- UBlockExpression <- UMethod (name = foo)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (object)) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = closeableRunnable) <- UDeclarationsExpression
org.jetbrains.kotlin.psi.KtTypeReference: UTypeReferenceExpression (name = java.lang.Runnable)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = Runnable) <- UTypeReferenceExpression (name = java.lang.Runnable)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (Runnable)) <- USimpleNameReferenceExpression (identifier = Runnable) <- UTypeReferenceExpression (name = java.lang.Runnable)
org.jetbrains.kotlin.psi.KtTypeReference: UTypeReferenceExpression (name = java.io.Closeable)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = Closeable) <- UTypeReferenceExpression (name = java.io.Closeable)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (Closeable)) <- USimpleNameReferenceExpression (identifier = Closeable) <- UTypeReferenceExpression (name = java.io.Closeable)
org.jetbrains.kotlin.psi.KtClassBody: UExpressionList (class_body) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = closeableRunnable) <- UDeclarationsExpression
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (close)) <- UMethod (name = close) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = closeableRunnable)
org.jetbrains.kotlin.psi.KtParameterList: UDeclarationsExpression <- UReturnExpression <- UBlockExpression <- UMethod (name = close) <- UClass (name = null)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (run)) <- UMethod (name = run) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = closeableRunnable)
org.jetbrains.kotlin.psi.KtParameterList: UDeclarationsExpression <- UReturnExpression <- UBlockExpression <- UMethod (name = run) <- UClass (name = null)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (runnableIs)) <- ULocalVariable (name = runnableIs) <- UDeclarationsExpression <- UBlockExpression <- UMethod (name = foo)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (object)) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = runnableIs) <- UDeclarationsExpression
org.jetbrains.kotlin.psi.KtConstructorCalleeExpression: [!] UnknownKotlinExpression (CONSTRUCTOR_CALLEE) <- UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) <- UBlockExpression <- UMethod (name = ) <- UClass (name = null)
org.jetbrains.kotlin.psi.KtTypeReference: UTypeReferenceExpression (name = java.io.InputStream) <- [!] UnknownKotlinExpression (CONSTRUCTOR_CALLEE) <- UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) <- UBlockExpression <- UMethod (name = )
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = InputStream) <- UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) <- UBlockExpression <- UMethod (name = ) <- UClass (name = null)
org.jetbrains.kotlin.psi.KtTypeReference: UTypeReferenceExpression (name = java.lang.Runnable)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = Runnable) <- UTypeReferenceExpression (name = java.lang.Runnable)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (Runnable)) <- USimpleNameReferenceExpression (identifier = Runnable) <- UTypeReferenceExpression (name = java.lang.Runnable)
org.jetbrains.kotlin.psi.KtClassBody: UExpressionList (class_body) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = runnableIs) <- UDeclarationsExpression
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (read)) <- UMethod (name = read) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = runnableIs)
org.jetbrains.kotlin.psi.KtParameterList: UDeclarationsExpression <- UReturnExpression <- UBlockExpression <- UMethod (name = read) <- UClass (name = null)
org.jetbrains.kotlin.psi.KtTypeReference: UTypeReferenceExpression (name = int) <- UMethod (name = read) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = runnableIs)
org.jetbrains.kotlin.psi.KtNameReferenceExpression: USimpleNameReferenceExpression (identifier = Int) <- UTypeReferenceExpression (name = int) <- UMethod (name = read) <- UClass (name = null) <- UObjectLiteralExpression
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (Int)) <- USimpleNameReferenceExpression (identifier = Int) <- UTypeReferenceExpression (name = int) <- UMethod (name = read) <- UClass (name = null)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (run)) <- UMethod (name = run) <- UClass (name = null) <- UObjectLiteralExpression <- ULocalVariable (name = runnableIs)
org.jetbrains.kotlin.psi.KtParameterList: UDeclarationsExpression <- UReturnExpression <- UBlockExpression <- UMethod (name = run) <- UClass (name = null)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (withErr)) <- UMethod (name = withErr) <- UClass (name = AnonymousKt) <- UFile (package = )
org.jetbrains.kotlin.psi.KtParameterList: UDeclarationsExpression <- UReturnExpression <- UBlockExpression <- UMethod (name = withErr) <- UClass (name = AnonymousKt)
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (runnable)) <- ULocalVariable (name = runnable) <- UDeclarationsExpression <- UBlockExpression <- UMethod (name = withErr)
org.jetbrains.kotlin.psi.KtObjectDeclaration: UastEmptyExpression
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (object)) <- UastEmptyExpression
com.intellij.psi.impl.source.tree.LeafPsiElement: UIdentifier (Identifier (Runnable))
org.jetbrains.kotlin.psi.KtClassBody: UExpressionList (class_body) <- UastEmptyExpression
com.intellij.psi.impl.source.tree.PsiCommentImpl: UComment <- ULocalVariable (name = runnable) <- UDeclarationsExpression <- UBlockExpression <- UMethod (name = withErr)
