UClass (name = Regex)
    UField (name = Companion)
        UAnnotation (fqName = null)
    UField (name = nativePattern)
        UAnnotation (fqName = org.jetbrains.annotations.NotNull)
    UField (name = _options)
        UAnnotation (fqName = org.jetbrains.annotations.Nullable)
    UMethod (name = Regex)
        UParameter (name = nativePattern)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
    UMethod (name = Regex)
        UParameter (name = pattern)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UBlockExpression
            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0))
                UIdentifier (Identifier ())
    UMethod (name = Regex)
        UParameter (name = pattern)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = option)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UBlockExpression
            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0))
                UIdentifier (Identifier ())
    UMethod (name = Regex)
        UParameter (name = pattern)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = options)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UBlockExpression
            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0))
                UIdentifier (Identifier ())
    UMethod (name = getPattern)
    UMethod (name = getOptions)
    UMethod (name = matches)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UBlockExpression
    UMethod (name = containsMatchIn)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UBlockExpression
    UMethod (name = find)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = startIndex)
        UBlockExpression
    UMethod (name = findAll)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = startIndex)
        UBlockExpression
    UMethod (name = matchEntire)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UBlockExpression
    UMethod (name = matchAt)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = index)
        UBlockExpression
    UMethod (name = matchesAt)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = index)
        UBlockExpression
    UMethod (name = replace)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = replacement)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UBlockExpression
    UMethod (name = replace)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = transform)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UBlockExpression
    UMethod (name = replaceFirst)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = replacement)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UBlockExpression
    UMethod (name = split)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = limit)
        UBlockExpression
    UMethod (name = splitToSequence)
        UParameter (name = input)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UParameter (name = limit)
        UBlockExpression
    UMethod (name = toString)
        UBlockExpression
    UMethod (name = toPattern)
        UBlockExpression
    UMethod (name = writeReplace)
        UBlockExpression
    UMethod (name = findAll$lambda$1)
        UParameter (name = this$0)
        UParameter (name = $input)
        UParameter (name = $startIndex)
    UClass (name = Companion)
        UMethod (name = Companion)
        UMethod (name = fromLiteral)
            UParameter (name = literal)
                UAnnotation (fqName = org.jetbrains.annotations.NotNull)
            UBlockExpression
        UMethod (name = escape)
            UParameter (name = literal)
                UAnnotation (fqName = org.jetbrains.annotations.NotNull)
            UBlockExpression
        UMethod (name = escapeReplacement)
            UParameter (name = literal)
                UAnnotation (fqName = org.jetbrains.annotations.NotNull)
            UBlockExpression
        UMethod (name = ensureUnicodeCase)
            UParameter (name = flags)
            UBlockExpression
    UClass (name = Serialized)
        UField (name = Companion)
            UAnnotation (fqName = null)
        UField (name = pattern)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UField (name = flags)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
        UField (name = serialVersionUID)
            UAnnotation (fqName = org.jetbrains.annotations.NotNull)
            USimpleNameReferenceExpression (identifier = COMPILED_CODE)
        UMethod (name = Serialized)
            UParameter (name = pattern)
                UAnnotation (fqName = org.jetbrains.annotations.NotNull)
            UParameter (name = flags)
        UMethod (name = getPattern)
        UMethod (name = getFlags)
        UMethod (name = readResolve)
            UBlockExpression
        UClass (name = Companion)
            UMethod (name = Companion)
