<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude" version="2" url="http://kotlinlang.org" allow-bundled-update="true">
  <id>org.jetbrains.kotlin</id>

  <name>Kotlin FIR</name>
  <description><![CDATA[
The Kotlin FIR plugin provides language support in IntelliJ IDEA and Android Studio.
<br>
<a href="http://kotlinlang.org/docs/tutorials/getting-started.html">Getting Started in IntelliJ IDEA</a><br>
<a href="http://kotlinlang.org/docs/tutorials/kotlin-android.html">Getting Started in Android Studio</a><br>
<a href="http://slack.kotlinlang.org/">Public Slack</a><br>
<a href="https://youtrack.jetbrains.com/issues/KT">Issue tracker</a><br>
]]></description>
  <version>999-SNAPSHOT</version>
  <vendor url="http://www.jetbrains.com">JetBrains</vendor>

  <depends>com.intellij.modules.platform</depends>

  <depends optional="true" config-file="gradle.xml">com.intellij.gradle</depends>
<!--  <depends optional="true" config-file="gradle-java.xml">org.jetbrains.plugins.gradle</depends>-->
  <depends optional="true" config-file="dep-groovy.xml">org.intellij.groovy</depends>
  <depends optional="true" config-file="maven-common.xml">org.jetbrains.idea.maven</depends>
  <depends optional="true" config-file="dep-maven.xml">org.jetbrains.idea.maven</depends>
  <depends optional="true" config-file="dep-git.xml">Git4Idea</depends>
  <depends optional="true" config-file="dep-jvm-decompiler.xml">org.jetbrains.java.decompiler</depends>

  <!-- ULTIMATE-PLUGIN-PLACEHOLDER -->

  <depends>com.intellij.modules.idea</depends>
  <depends>com.intellij.modules.java</depends>
  <depends optional="true" config-file="dep-copyright.xml">com.intellij.copyright</depends>

  <xi:include href="navigation-common.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="highlighting-common.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="indices.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="file-types.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="language.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="formatter.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="jps.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="caches.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="kotlin-core.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="firInspections.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="firIntentions.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="fe10Binding.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="codeInsigts.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="analysisApiProviders.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="analysisProjectStructure.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="lowLevelApiFir.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="lightClasses.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <xi:include href="extensions.xml" xpointer="xpointer(/idea-plugin/*)"/>


  <!--  <xi:include href="jvm-common.xml" xpointer="xpointer(/idea-plugin/*)"/>-->
  <!--  <xi:include href="jvm.xml" xpointer="xpointer(/idea-plugin/*)"/>-->

  <!--  <xi:include href="extensions/ide.xml" xpointer="xpointer(/idea-plugin/*)"/>-->

  <!--  <xi:include href="kotlinx-serialization.xml" xpointer="xpointer(/idea-plugin/*)"/>-->

<!--    <xi:include href="scripting-support.xml" xpointer="xpointer(/idea-plugin/*)"/>-->


  <extensionPoints>
    <xi:include href="extensions/compiler.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>
  </extensionPoints>

  <!--  <xi:include href="plugin-kotlin-extensions.xml" xpointer="xpointer(/idea-plugin/*)"/>-->

  <!--  <extensions defaultExtensionNs="com.intellij.jvm">-->
  <!--    <declarationSearcher language="kotlin" implementationClass="org.jetbrains.kotlin.idea.jvm.KotlinDeclarationSearcher"/>-->
  <!--  </extensions>-->

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <beforeResolveHighlightingVisitor implementation="org.jetbrains.kotlin.idea.fir.highlighter.beforeResolve.DeclarationHighlightingExtension"/>
    <beforeResolveHighlightingVisitor implementation="org.jetbrains.kotlin.idea.fir.highlighter.beforeResolve.AnnotationsHighlightingExtension"/>

    <idePlatformKindTooling implementation="org.jetbrains.kotlin.idea.core.platform.impl.JvmIdePlatformKindTooling"/>
    <idePlatformKindTooling implementation="org.jetbrains.kotlin.idea.core.platform.impl.JsIdePlatformKindTooling"/>
    <idePlatformKindTooling implementation="org.jetbrains.kotlin.idea.core.platform.impl.CommonIdePlatformKindTooling"/>

  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.uast">
    <uastLanguagePlugin implementation="org.jetbrains.uast.kotlin.FirKotlinUastLanguagePlugin"/>
  </extensions>


  <extensions defaultExtensionNs="com.intellij">
    <!-- fir-specific -->
    <postStartupActivity implementation="org.jetbrains.kotlin.idea.fir.AndroidPluginIncompatibilityCheckerStartupActivity"/>

    <applicationService serviceInterface="org.jetbrains.kotlin.idea.base.plugin.KotlinPluginKindProvider"
                        serviceImplementation="org.jetbrains.kotlin.idea.fir.plugin.FirKotlinPluginKindProvider"/>

    <projectService serviceInterface="org.jetbrains.kotlin.analysis.api.KtAnalysisSessionProvider"
                        serviceImplementation="org.jetbrains.kotlin.analysis.api.fir.KtFirAnalysisSessionProvider"/>
    <applicationService serviceInterface="org.jetbrains.kotlin.idea.references.KotlinReferenceProviderContributor"
                        serviceImplementation="org.jetbrains.kotlin.idea.references.KotlinFirReferenceContributor"/>
    <statusBarWidgetFactory implementation="org.jetbrains.kotlin.idea.fir.FirStatusBarWidgetFactory"/>
    <highlightRangeExtension implementation="org.jetbrains.kotlin.idea.fir.highlighter.KotlinFirPsiChecker"/>
    <annotator language="kotlin" implementationClass="org.jetbrains.kotlin.idea.fir.highlighter.KotlinFirPsiChecker"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.LLFirResolveStateService"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.resolve.jvm.KotlinJavaPsiFacade"/>

    <projectService serviceInterface="org.jetbrains.kotlin.psi.KtFileClassProvider"
                    serviceImplementation="org.jetbrains.kotlin.idea.caches.resolve.KtFileClassProviderImpl"/>

    <applicationService serviceInterface="org.jetbrains.uast.kotlin.BaseKotlinUastResolveProviderService"
                    serviceImplementation="org.jetbrains.uast.kotlin.internal.FirIdeaKotlinUastResolveProviderService"/>
    <projectService serviceInterface="org.jetbrains.uast.kotlin.FirKotlinUastResolveProviderService"
                    serviceImplementation="org.jetbrains.uast.kotlin.internal.FirIdeaKotlinUastResolveProviderService"/>

    <registryKey key="kotlin.fir.uast.force.uinjectionhost"
                 description="Whether to convert `KtStringTemplateExpression` to `KotlinStringTemplateUPolyadicExpression` in all cases"
                 defaultValue="false"
                 restartRequired="false"/>

    <completion.contributor language="kotlin"
                            id="KotlinCompletionContributor"
                            order="first"
                            implementationClass="org.jetbrains.kotlin.idea.completion.KotlinFirCompletionContributor"/>
    <codeInsight.typeInfo language="kotlin"
                          implementationClass="org.jetbrains.kotlin.idea.codeInsight.KotlinHighLevelExpressionTypeProvider"/>
    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.fir.highlighter.KotlinDiagnosticHighlightingPassFactory"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.fir.api.impl.ResolveAllowanceServiceFirImpl"
                    serviceInterface="org.jetbrains.kotlin.idea.api.ResolveAllowanceService"/>

    <codeInsight.implementMethod language="kotlin" implementationClass="org.jetbrains.kotlin.idea.core.overrideImplement.KtImplementMembersHandler"/>
    <codeInsight.overrideMethod language="kotlin" implementationClass="org.jetbrains.kotlin.idea.core.overrideImplement.KtOverrideMembersHandler"/>

    <codeInsight.parameterInfo language="kotlin"
                               implementationClass="org.jetbrains.kotlin.idea.parameterInfo.KotlinHighLevelFunctionParameterInfoHandler"/>
    <codeInsight.parameterInfo language="kotlin"
                               implementationClass="org.jetbrains.kotlin.idea.parameterInfo.KotlinHighLevelLambdaParameterInfoHandler"/>
    <codeInsight.parameterInfo language="kotlin"
                               implementationClass="org.jetbrains.kotlin.idea.parameterInfo.KotlinHighLevelArrayAccessParameterInfoHandler"/>
    <codeInsight.parameterInfo language="kotlin"
                               implementationClass="org.jetbrains.kotlin.idea.parameterInfo.KotlinHighLevelClassTypeArgumentInfoHandler"/>
    <codeInsight.parameterInfo language="kotlin"
                               implementationClass="org.jetbrains.kotlin.idea.parameterInfo.KotlinHighLevelFunctionTypeArgumentInfoHandler"/>
  </extensions>

  <xi:include href="scripting-support.xml" xpointer="xpointer(/idea-plugin/*)"/>


  <extensionPoints>
    <extensionPoint qualifiedName="org.jetbrains.kotlin.resolveScopeEnlarger"
                    interface="org.jetbrains.kotlin.idea.caches.resolve.util.KotlinResolveScopeEnlarger"/>
  </extensionPoints>


  <extensions defaultExtensionNs="com.intellij">
    <library.type implementation="org.jetbrains.kotlin.idea.framework.JSLibraryType"/>

    <projectService serviceInterface="org.jetbrains.kotlin.idea.framework.LibraryEffectiveKindProvider"
                    serviceImplementation="org.jetbrains.kotlin.idea.framework.LibraryEffectiveKindProviderImpl"/>

    <applicationService
        serviceInterface="org.jetbrains.kotlin.platform.DefaultIdeTargetPlatformKindProvider"
        serviceImplementation="org.jetbrains.kotlin.platform.impl.IdeaDefaultIdeTargetPlatformKindProvider"/>

    <projectService serviceInterface="org.jetbrains.kotlin.resolve.jvm.modules.JavaModuleResolver"
                    serviceImplementation="org.jetbrains.kotlin.idea.modules.IdeJavaModuleResolver"/>
  </extensions>


  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceImplementation="org.jetbrains.kotlin.idea.completion.FirCompletionDummyIdentifierProviderService"
                        serviceInterface="org.jetbrains.kotlin.idea.completion.CompletionDummyIdentifierProviderService"/>

    <applicationService
            serviceInterface="org.jetbrains.kotlin.psi.KotlinReferenceProvidersService"
            serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.references.HLApiReferenceProviderService"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.PluginStartupService"/>

    <iconProvider implementation="org.jetbrains.kotlin.idea.KotlinIconProviderBase"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.caches.resolve.IdePackageOracleFactory"/>

    <projectService serviceInterface="org.jetbrains.kotlin.load.kotlin.MetadataFinderFactory"
                    serviceImplementation="org.jetbrains.kotlin.idea.vfilefinder.IDEVirtualFileFinderFactory"/>
    <projectService serviceInterface="org.jetbrains.kotlin.load.kotlin.VirtualFileFinderFactory"
                    serviceImplementation="org.jetbrains.kotlin.idea.vfilefinder.IDEVirtualFileFinderFactory"/>

    <postStartupActivity implementation="org.jetbrains.kotlin.idea.PluginStartupActivity"/>
    <postStartupActivity implementation="org.jetbrains.kotlin.idea.versions.KotlinUpdatePluginStartupActivity"/>

    <newProjectWizard.buildSystem.kotlin implementation="org.jetbrains.kotlin.tools.projectWizard.GradleKotlinBuildSystemType"/>
    <newProjectWizard.buildSystem.kotlin implementation="org.jetbrains.kotlin.tools.projectWizard.MavenKotlinBuildSystemType"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.completion.LookupCancelService"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.idea.migration.KotlinMigrationProjectService"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.project.KotlinLibraryToSourceAnalysisStateComponent"/>

    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.highlighter.KotlinBeforeResolveHighlightingPass$Registrar"/>

    <java.elementFinder implementation="org.jetbrains.kotlin.asJava.finder.JavaElementFinder"/>

    <elementDescriptionProvider
        implementation="org.jetbrains.kotlin.idea.findUsages.KotlinElementDescriptionProviderBase"
        order="first"/>

    <findUsagesHandlerFactory implementation="org.jetbrains.kotlin.idea.findUsages.KotlinFindUsagesHandlerFactory"/>
    <usageTypeProvider implementation="org.jetbrains.kotlin.idea.findUsages.KotlinUsageTypeProviderFirImpl"/>
    <projectService serviceInterface="org.jetbrains.kotlin.idea.findUsages.KotlinFindUsagesSupport"
                    serviceImplementation="org.jetbrains.kotlin.idea.findUsages.KotlinFindUsagesSupportFirImpl"/>
    <projectService serviceInterface="org.jetbrains.kotlin.idea.search.KotlinSearchUsagesSupport"
                    serviceImplementation="org.jetbrains.kotlin.idea.search.KotlinSearchUsagesSupportFirImpl"/>

    <targetElementEvaluator language="kotlin"
                            implementationClass="org.jetbrains.kotlin.idea.search.ideaExtensions.FirKotlinTargetElementEvaluator"/>
    <targetElementUtilExtender implementation="org.jetbrains.kotlin.idea.search.ideaExtensions.FirKotlinTargetElementEvaluator"/>

    <lang.findUsagesProvider language="kotlin" implementationClass="org.jetbrains.kotlin.idea.findUsages.KotlinFindUsagesProviderBase"/>
    <lang.elementManipulator forClass="org.jetbrains.kotlin.psi.KtStringTemplateExpression"
                             implementationClass="org.jetbrains.kotlin.psi.psiUtil.KtStringTemplateExpressionManipulator"/>

    <applicationService serviceInterface="org.jetbrains.kotlin.idea.references.ReadWriteAccessChecker"
                        serviceImplementation="org.jetbrains.kotlin.idea.references.ReadWriteAccessCheckerDescriptorsFirImpl"/>

    <projectService serviceInterface="org.jetbrains.kotlin.idea.util.FirPluginOracleService"
                    serviceImplementation="org.jetbrains.kotlin.idea.util.FirPluginOracleServiceFirImpl"/>

    <applicationService serviceImplementation="org.jetbrains.kotlin.idea.fir.api.fixes.KtQuickFixService"/>


    <lang.importOptimizer language="kotlin" implementationClass="org.jetbrains.kotlin.idea.imports.KotlinFirImportOptimizer"/>

    <applicationService
            serviceInterface="org.jetbrains.kotlin.analysis.decompiled.light.classes.origin.KotlinDeclarationInCompiledFileSearcher"
            serviceImplementation="org.jetbrains.kotlin.analysis.decompiled.light.classes.fe10.KotlinDeclarationInCompiledFileSearcherFE10Impl"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <compileServer.plugin classpath="jps/kotlin-jps-plugin.jar;kotlin-stdlib.jar;kotlin-stdlib-jdk7.jar;kotlin-stdlib-jdk8.jar;kotlin-reflect.jar;kotlin-plugin.jar;kotlin-jps-common.jar;kotlin-common.jar"/>
    <buildProcess.parametersProvider implementation="org.jetbrains.kotlin.idea.compiler.configuration.KotlinBuildProcessParametersProvider"/>

    <applicationService serviceInterface="org.jetbrains.kotlin.idea.run.KotlinMainFunctionLocatingService"
                        serviceImplementation="org.jetbrains.kotlin.idea.run.KotlinFirMainFunctionLocatingService"/>

    <configurationType implementation="org.jetbrains.kotlin.idea.run.KotlinRunConfigurationType"/>
    <configurationType implementation="org.jetbrains.kotlin.idea.run.script.standalone.KotlinStandaloneScriptRunConfigurationType"/>
    <runConfigurationProducer implementation="org.jetbrains.kotlin.idea.run.KotlinRunConfigurationProducer"/>
    <runConfigurationProducer implementation="org.jetbrains.kotlin.idea.run.script.standalone.KotlinStandaloneScriptRunConfigurationProducer"/>

    <runLineMarkerContributor language="kotlin" implementationClass="org.jetbrains.kotlin.idea.fir.highlighter.KotlinFirMainRunLineMarkerContributor"/>


  </extensions>
</idea-plugin>
