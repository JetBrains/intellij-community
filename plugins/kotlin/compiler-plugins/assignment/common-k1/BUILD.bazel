### auto-generated section `build kotlin.compiler-plugins.assignment.common.k1` start
load("//build:compiler-options.bzl", "create_kotlinc_options")
load("@rules_jvm//:jvm.bzl", "jvm_library", "resourcegroup")

create_kotlinc_options(
  name = "custom_kotlin-compiler-plugins-assignment-common-k1",
  opt_in = [
    "org.jetbrains.kotlin.idea.base.util.K1ModeProjectStructureApi",
    "com.intellij.openapi.util.IntellijInternalApi",
  ]
)

resourcegroup(
  name = "kotlin-compiler-plugins-assignment-common-k1_resources",
  srcs = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "kotlin-compiler-plugins-assignment-common-k1",
  module_name = "kotlin.compiler-plugins.assignment.common.k1",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java", "src/**/*.form"], allow_empty = True),
  resources = [":kotlin-compiler-plugins-assignment-common-k1_resources"],
  kotlinc_opts = ":custom_kotlin-compiler-plugins-assignment-common-k1",
  deps = [
    "@lib//:kotlin-stdlib",
    "@lib//:kotlinc-kotlin-compiler-common",
    "@lib//:kotlinc-kotlin-compiler-fe10",
    "@lib//:kotlinc-kotlin-scripting-compiler-impl",
    "@lib//:kotlinc-assignment-compiler-plugin",
    "//platform/analysis-api:analysis",
    "//platform/core-api:core",
    "//plugins/kotlin/base/util",
    "//plugins/kotlin/base/project-structure",
    "//plugins/kotlin/base/analysis",
    "//plugins/kotlin/compiler-plugins/compiler-plugin-support/common",
    "//platform/core-impl",
    "//java/java-psi-api:psi",
    "//plugins/kotlin/base/fe10/code-insight",
    "//plugins/kotlin/idea",
    "//plugins/kotlin/code-insight/api",
    "//plugins/kotlin/base/fe10/analysis",
    "//platform/lang-impl",
    "//plugins/kotlin/base/scripting/scripting.k1",
  ]
)
### auto-generated section `build kotlin.compiler-plugins.assignment.common.k1` end