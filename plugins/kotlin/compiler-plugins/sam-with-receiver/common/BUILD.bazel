### auto-generated section `build kotlin.compiler-plugins.sam-with-receiver.common` start
load("//build:compiler-options.bzl", "create_kotlinc_options")
load("@rules_jvm//:jvm.bzl", "jvm_library")

create_kotlinc_options(
  name = "custom",
  opt_in = [
    "org.jetbrains.kotlin.utils.addToStdlib.UnsafeCastFunction",
    "org.jetbrains.kotlin.analysis.api.KaIdeApi",
    "org.jetbrains.kotlin.analysis.api.KaNonPublicApi",
    "org.jetbrains.kotlin.idea.base.util.K1ModeProjectStructureApi",
  ]
)

jvm_library(
  name = "kotlin-compiler-plugins-sam-with-receiver-common",
  module_name = "kotlin.compiler-plugins.sam-with-receiver.common",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True),
  kotlinc_opts = ":custom",
  deps = [
    "@lib//:kotlin-stdlib",
    "@lib//:kotlinc-kotlin-compiler-common",
    "@lib//:kotlinc-kotlin-compiler-fe10",
    "@lib//:kotlinc-kotlin-scripting-compiler-impl",
    "@lib//:kotlinc-sam-with-receiver-compiler-plugin",
    "//plugins/kotlin/base/scripting:kotlin-base-scripting",
    "//plugins/kotlin/base/project-structure:kotlin-base-project-structure",
    "//plugins/kotlin/base/analysis:kotlin-base-analysis",
    "//platform/util",
    "//plugins/kotlin/compiler-plugins/compiler-plugin-support/common:kotlin-compiler-plugins-compiler-plugin-support-common",
    "//platform/core-api:core",
  ]
)
### auto-generated section `build kotlin.compiler-plugins.sam-with-receiver.common` end