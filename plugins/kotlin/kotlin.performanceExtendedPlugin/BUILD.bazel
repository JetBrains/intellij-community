### auto-generated section `build kotlin.performanceExtendedPlugin` start
load("@rules_jvm//:jvm.bzl", "jvm_resources")
load("@rules_jvm//:rules.bzl", "jvm_library")

jvm_resources(
  name = "performanceExtendedPlugin_resources",
  files = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "performanceExtendedPlugin",
  module_name = "kotlin.performanceExtendedPlugin",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True, exclude = ["**/module-info.java"]),
  javac_opts = "@rules_jvm//:j17",
  kotlinc_opts = "@rules_jvm//:k17",
  deps = [
    "@lib//:kotlin-stdlib",
    "//plugins/performanceTesting/core:performanceTesting",
    "//platform/platform-impl:ide-impl",
    "//plugins/kotlin/frontend-independent:fir-frontend-independent",
    "//plugins/kotlin/base/analysis:kotlin-base-analysis",
    "@lib//:kotlinc_analysis-api-platform-interface.provided",
    "@lib//:kotlinc_analysis-api.provided",
    "@lib//:opentelemetry",
    "@lib//:opentelemetry-semconv",
    "//plugins/kotlin/base/frontend-agnostic:kotlin-base-frontend-agnostic",
    "//plugins/kotlin/kotlin.searching/base",
    "//java/java-analysis-impl:analysis-impl",
    "//java/openapi:java",
    "//plugins/kotlin/base/resources:kotlin-base-resources",
    "//plugins/kotlin/base/util:kotlin-base-util",
    "//platform/diagnostic/telemetry",
    "//platform/diagnostic/telemetry-impl",
    "//plugins/kotlin/base/code-insight/minimal:kotlin-base-code-insight-minimal",
    "//plugins/kotlin/kotlin.ide:ide",
    "//platform/lang-impl",
    "//platform/core-ui",
    "//plugins/kotlin/base/compiler-configuration:kotlin-base-compiler-configuration",
    "//plugins/performanceTesting/vcs",
    "//plugins/kotlin/idea",
    "@lib//:kotlinc_kotlin-compiler-common",
    "//plugins/kotlin/base/project-structure:kotlin-base-project-structure",
  ],
  runtime_deps = [":performanceExtendedPlugin_resources"]
)
### auto-generated section `build kotlin.performanceExtendedPlugin` end