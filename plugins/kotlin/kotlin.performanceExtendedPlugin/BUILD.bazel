### auto-generated section `build kotlin.performanceExtendedPlugin` start
load("@rules_jvm//:jvm.bzl", "jvm_library", "resourcegroup")

resourcegroup(
  name = "performanceExtendedPlugin_resources",
  srcs = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "performanceExtendedPlugin",
  module_name = "kotlin.performanceExtendedPlugin",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java", "src/**/*.form"], allow_empty = True),
  resources = [":performanceExtendedPlugin_resources"],
  deps = [
    "@lib//:kotlin-stdlib",
    "//plugins/performanceTesting/core:performanceTesting",
    "//platform/analysis-api:analysis",
    "//platform/code-style-api:codeStyle",
    "//platform/util/concurrency",
    "//platform/core-api:core",
    "//platform/editor-ui-api:editor-ui",
    "//platform/platform-impl:ide-impl",
    "//platform/projectModel-api:projectModel",
    "//platform/refactoring",
    "//plugins/kotlin/frontend-independent",
    "//platform/ide-core-impl",
    "//plugins/kotlin/base/analysis",
    "@lib//:kotlinc-analysis-api-platform-interface-provided",
    "@lib//:kotlinc-analysis-api-provided",
    "@lib//:opentelemetry",
    "@lib//:opentelemetry-semconv",
    "//plugins/kotlin/base/frontend-agnostic",
    "//plugins/kotlin/kotlin.searching/base",
    "//java/java-analysis-impl:analysis-impl",
    "//java/openapi:java",
    "//plugins/kotlin/base/resources:kotlin-base-resources",
    "//plugins/kotlin/base/util",
    "//platform/diagnostic/telemetry",
    "//platform/diagnostic/telemetry-impl",
    "//plugins/kotlin/base/code-insight/minimal",
    "//plugins/kotlin/kotlin.ide:ide",
    "//platform/lang-impl",
    "//platform/core-ui",
    "//plugins/kotlin/base/compiler-configuration",
    "//plugins/performanceTesting/vcs",
    "//plugins/kotlin/idea",
    "@lib//:kotlinc-kotlin-compiler-common",
    "//plugins/kotlin/base/project-structure",
  ]
)
### auto-generated section `build kotlin.performanceExtendedPlugin` end