<idea-plugin package="org.jetbrains.kotlin.idea.gradle">
  <dependencies>
    <plugin id="com.intellij.gradle"/>
    <module name="kotlin.gradle.gradle-tooling"/>
  </dependencies>

  <extensionPoints>
    <extensionPoint qualifiedName="org.jetbrains.kotlin.gradleModelFacade"
                    interface="org.jetbrains.kotlin.idea.gradle.inspections.KotlinGradleModelFacade"
                    dynamic="true"/>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.kpm.moduleInitialize"
            interface="org.jetbrains.kotlin.idea.gradle.configuration.kpm.ModuleDataInitializer"
            dynamic="true"/>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.kpm.createRoots"
            interface="org.jetbrains.kotlin.idea.gradle.configuration.kpm.ContentRootsCreator"
            dynamic="true"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.idea.extrasSerialization"
            interface="org.jetbrains.kotlin.idea.gradle.configuration.serialize.KotlinExtrasSerializationService"
            dynamic="true"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.mppProjectResolve"
            interface="org.jetbrains.kotlin.idea.gradleJava.configuration.mpp.KotlinMppGradleProjectResolverExtension"
            dynamic="true"/>

  </extensionPoints>

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <scriptDiagnosticFixProvider implementation="org.jetbrains.kotlin.idea.gradle.scripting.GradleScriptDiagnosticFixProvider"/>

    <scripting.support.checker.provider id="GraldeScriptingSupportCheckerProvider"
            implementation="org.jetbrains.kotlin.idea.gradle.scripting.GradleScriptingSupportCheckerProvider"/>

    <failedToDownloadJpsMavenArtifactSuggestedSolutionsContributor
            implementation="org.jetbrains.kotlin.idea.gradle.GradleFailedToDownloadSuggestedSolutionsContributor"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <registryKey key="kotlin.mpp.tests.force.gradle"
                 description="Run multi-platform tests with Gradle runner even if the platform runner is used by default.
                     This setting currently affects only HMPP projects. You may need to delete existing test configurations for the change to take place."
                 defaultValue="true"
                 restartRequired="false"/>
    <registryKey key="kotlin.gradle.scripts.scriptConfigurationsNeedToBeUpdatedFloatingNotification"
                 description="Show floating notification in the editor when script configuration need to be updated"
                 defaultValue="true"
                 restartRequired="false"/>
    <registryKey key="kotlin.mpp.editTargetPlatformEnabled"
                 description="Enable manual editing of MPP target platforms"
                 defaultValue="false"
                 restartRequired="false"/>
    <registryKey key="kotlin.android.import.mpp.all.transitive"
                 description="Add all transitive dependencies on MPP modules when Android project is imported"
                 defaultValue="true"
                 restartRequired="false"/>
    <registryKey key="kotlin.gradle-run.enabled"
                 description="Enable delegation of app running to gradle"
                 defaultValue="false"
                 restartRequired="false"/>

    <applicationService
            serviceImplementation="org.jetbrains.kotlin.idea.gradle.configuration.state.DontShowAgainKotlinAdditionPluginSuggestionService"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.gradle.scripting.settings.StandaloneScriptsStorage"/>
    <projectService serviceInterface="org.jetbrains.kotlin.idea.base.platforms.StableModuleNameProvider"
                    serviceImplementation="org.jetbrains.kotlin.idea.gradle.configuration.mpp.ExternalSystemBasedStableModuleNameProvider"/>

    <backgroundPostStartupActivity implementation="org.jetbrains.kotlin.idea.gradle.statistics.KotlinGradleFUSLogger"/>
    <backgroundPostStartupActivity implementation="org.jetbrains.kotlin.idea.gradle.diagnostic.KotlinGradleBuildErrorsChecker"/>
    <statistics.counterUsagesCollector implementationClass="org.jetbrains.kotlin.idea.gradle.statistics.KotlinGradleFUSCollector"/>
  </extensions>

  <actions>
    <action id="Kotlin.Gradle.ShowDslLogs" class="org.jetbrains.kotlin.idea.gradle.actions.ShowKotlinGradleDslLogs">
    </action>
  </actions>
  <resource-bundle>messages.KotlinBundle</resource-bundle>
</idea-plugin>
