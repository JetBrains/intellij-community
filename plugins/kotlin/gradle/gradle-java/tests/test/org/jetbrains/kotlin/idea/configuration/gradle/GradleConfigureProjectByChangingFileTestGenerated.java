// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.configuration.gradle;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("gradle/gradle-java/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public abstract class GradleConfigureProjectByChangingFileTestGenerated extends AbstractGradleConfigureProjectByChangingFileTest {
    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../../idea/tests/testData/configuration/gradle")
    public static class Gradle extends AbstractGradleConfigureProjectByChangingFileTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTestGradle, this, testDataFilePath);
        }

        @TestMetadata("jreLib")
        public void testJreLib() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gradle/jreLib/");
        }

        @TestMetadata("libraryMissing")
        public void testLibraryMissing() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gradle/libraryMissing/");
        }

        @TestMetadata("pluginPresent")
        public void testPluginPresent() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gradle/pluginPresent/");
        }

        @TestMetadata("simpleProject")
        public void testSimpleProject() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gradle/simpleProject/");
        }

        @TestMetadata("simpleProjectBeta")
        public void testSimpleProjectBeta() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gradle/simpleProjectBeta/");
        }

        @TestMetadata("simpleProjectDev")
        public void testSimpleProjectDev() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gradle/simpleProjectDev/");
        }

        @TestMetadata("simpleProjectMilestone")
        public void testSimpleProjectMilestone() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gradle/simpleProjectMilestone/");
        }

        @TestMetadata("simpleProjectReleaseCandidate")
        public void testSimpleProjectReleaseCandidate() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gradle/simpleProjectReleaseCandidate/");
        }

        @TestMetadata("simpleProjectSnapshot")
        public void testSimpleProjectSnapshot() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gradle/simpleProjectSnapshot/");
        }

        @TestMetadata("withJava9ModuleInfo")
        public void testWithJava9ModuleInfo() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gradle/withJava9ModuleInfo/");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../../idea/tests/testData/configuration/gsk")
    public static class Gsk extends AbstractGradleConfigureProjectByChangingFileTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTestGradle, this, testDataFilePath);
        }

        @TestMetadata("libraryMissing")
        public void testLibraryMissing() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gsk/libraryMissing/");
        }

        @TestMetadata("pluginPresent")
        public void testPluginPresent() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gsk/pluginPresent/");
        }

        @TestMetadata("simpleProject")
        public void testSimpleProject() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gsk/simpleProject/");
        }

        @TestMetadata("simpleProjectBeta")
        public void testSimpleProjectBeta() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gsk/simpleProjectBeta/");
        }

        @TestMetadata("simpleProjectDev")
        public void testSimpleProjectDev() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gsk/simpleProjectDev/");
        }

        @TestMetadata("simpleProjectMilestone")
        public void testSimpleProjectMilestone() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gsk/simpleProjectMilestone/");
        }

        @TestMetadata("simpleProjectReleaseCandidate")
        public void testSimpleProjectReleaseCandidate() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gsk/simpleProjectReleaseCandidate/");
        }

        @TestMetadata("simpleProjectSnapshot")
        public void testSimpleProjectSnapshot() throws Exception {
            runTest("../../../idea/tests/testData/configuration/gsk/simpleProjectSnapshot/");
        }
    }
}
