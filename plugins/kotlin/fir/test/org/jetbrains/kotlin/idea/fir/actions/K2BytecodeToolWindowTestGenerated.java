// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.fir.actions;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("fir")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("../idea/tests/testData/internal/toolWindow")
public class K2BytecodeToolWindowTestGenerated extends AbstractK2BytecodeToolWindowTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTestWithIr, this, testDataFilePath);
    }

    @TestMetadata("companionObjectJvmField")
    public void testCompanionObjectJvmField() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/companionObjectJvmField/");
    }

    @TestMetadata("componentInlineFun")
    public void testComponentInlineFun() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/componentInlineFun/");
    }

    @TestMetadata("defaultMethod")
    public void testDefaultMethod() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/defaultMethod/");
    }

    @TestMetadata("defaultMethodCompatibility")
    public void testDefaultMethodCompatibility() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/defaultMethodCompatibility/");
    }

    @TestMetadata("inlineFunctionBodyResolve")
    public void testInlineFunctionBodyResolve() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/inlineFunctionBodyResolve/");
    }

    @TestMetadata("inlineFunctionDeep1")
    public void testInlineFunctionDeep1() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/inlineFunctionDeep1/");
    }

    @TestMetadata("inlineFunctionDeep2")
    public void testInlineFunctionDeep2() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/inlineFunctionDeep2/");
    }

    @TestMetadata("inlineFunctionInfixCall")
    public void testInlineFunctionInfixCall() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/inlineFunctionInfixCall/");
    }

    @TestMetadata("inlineFunctionReifiedParam")
    public void testInlineFunctionReifiedParam() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/inlineFunctionReifiedParam/");
    }

    @TestMetadata("inlineProperty")
    public void testInlineProperty() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/inlineProperty/");
    }

    @TestMetadata("iteratorFun")
    public void testIteratorFun() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/iteratorFun/");
    }

    @TestMetadata("jvmField")
    public void testJvmField() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/jvmField/");
    }

    @TestMetadata("jvmName")
    public void testJvmName() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/jvmName/");
    }

    @TestMetadata("jvmOverloads")
    public void testJvmOverloads() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/jvmOverloads/");
    }

    @TestMetadata("jvmStatic")
    public void testJvmStatic() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/jvmStatic/");
    }

    @TestMetadata("lateinitProp")
    public void testLateinitProp() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/lateinitProp/");
    }

    @TestMetadata("multipleInlineFunctionCalls")
    public void testMultipleInlineFunctionCalls() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/multipleInlineFunctionCalls/");
    }

    @TestMetadata("objectInInlineFun")
    public void testObjectInInlineFun() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/objectInInlineFun/");
    }

    @TestMetadata("variantGeneric")
    public void testVariantGeneric() throws Exception {
        runTest("../idea/tests/testData/internal/toolWindow/variantGeneric/");
    }
}
