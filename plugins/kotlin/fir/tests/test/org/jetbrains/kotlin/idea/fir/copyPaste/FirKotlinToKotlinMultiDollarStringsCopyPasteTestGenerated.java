// Copyright 2000-2025 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.fir.copyPaste;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.base.plugin.KotlinPluginMode;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("fir/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("../../idea/tests/testData/copyPaste/multiDollar")
public class FirKotlinToKotlinMultiDollarStringsCopyPasteTestGenerated extends AbstractFirKotlinToKotlinMultiDollarStringsCopyPasteTest {
    @java.lang.Override
    @org.jetbrains.annotations.NotNull
    public final KotlinPluginMode getPluginMode() {
        return KotlinPluginMode.K2;
    }

    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("EscapeDollarMultiQuoted.kt")
    public void testEscapeDollarMultiQuoted() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/EscapeDollarMultiQuoted.kt");
    }

    @TestMetadata("EscapeDollarSequenceMultiQuoted.kt")
    public void testEscapeDollarSequenceMultiQuoted() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/EscapeDollarSequenceMultiQuoted.kt");
    }

    @TestMetadata("EscapeDollarSequenceSingleQuoted.kt")
    public void testEscapeDollarSequenceSingleQuoted() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/EscapeDollarSequenceSingleQuoted.kt");
    }

    @TestMetadata("EscapeDollarSingleQuoted.kt")
    public void testEscapeDollarSingleQuoted() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/EscapeDollarSingleQuoted.kt");
    }

    @TestMetadata("EscapeNotIfNotBeforeIdentifierMultiQuoted.kt")
    public void testEscapeNotIfNotBeforeIdentifierMultiQuoted() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/EscapeNotIfNotBeforeIdentifierMultiQuoted.kt");
    }

    @TestMetadata("EscapeNotIfNotBeforeIdentifierSingleQuoted.kt")
    public void testEscapeNotIfNotBeforeIdentifierSingleQuoted() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/EscapeNotIfNotBeforeIdentifierSingleQuoted.kt");
    }

    @TestMetadata("EscapedCharsInSingleQuotedToMultiQuoted.kt")
    public void testEscapedCharsInSingleQuotedToMultiQuoted() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/EscapedCharsInSingleQuotedToMultiQuoted.kt");
    }

    @TestMetadata("FromPrefix2ToPrefix3EscapedLiterals.kt")
    public void testFromPrefix2ToPrefix3EscapedLiterals() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefix2ToPrefix3EscapedLiterals.kt");
    }

    @TestMetadata("FromPrefix2ToPrefix3LongTemplateEntry.kt")
    public void testFromPrefix2ToPrefix3LongTemplateEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefix2ToPrefix3LongTemplateEntry.kt");
    }

    @TestMetadata("FromPrefix2ToPrefix3PlainText.kt")
    public void testFromPrefix2ToPrefix3PlainText() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefix2ToPrefix3PlainText.kt");
    }

    @TestMetadata("FromPrefix2ToPrefix3ShortNameEntry.kt")
    public void testFromPrefix2ToPrefix3ShortNameEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefix2ToPrefix3ShortNameEntry.kt");
    }

    @TestMetadata("FromPrefix3ToPrefix2EscapedLiterals.kt")
    public void testFromPrefix3ToPrefix2EscapedLiterals() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefix3ToPrefix2EscapedLiterals.kt");
    }

    @TestMetadata("FromPrefix3ToPrefix2LongTemplateEntry.kt")
    public void testFromPrefix3ToPrefix2LongTemplateEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefix3ToPrefix2LongTemplateEntry.kt");
    }

    @TestMetadata("FromPrefix3ToPrefix2PlainText.kt")
    public void testFromPrefix3ToPrefix2PlainText() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefix3ToPrefix2PlainText.kt");
    }

    @TestMetadata("FromPrefix3ToPrefix2ShortNameEntry.kt")
    public void testFromPrefix3ToPrefix2ShortNameEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefix3ToPrefix2ShortNameEntry.kt");
    }

    @TestMetadata("FromPrefixedToPrefixedEscapedLiterals.kt")
    public void testFromPrefixedToPrefixedEscapedLiterals() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefixedToPrefixedEscapedLiterals.kt");
    }

    @TestMetadata("FromPrefixedToPrefixedLongTemplateEntry.kt")
    public void testFromPrefixedToPrefixedLongTemplateEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefixedToPrefixedLongTemplateEntry.kt");
    }

    @TestMetadata("FromPrefixedToPrefixedPlainText.kt")
    public void testFromPrefixedToPrefixedPlainText() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefixedToPrefixedPlainText.kt");
    }

    @TestMetadata("FromPrefixedToPrefixedShortNameEntry.kt")
    public void testFromPrefixedToPrefixedShortNameEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefixedToPrefixedShortNameEntry.kt");
    }

    @TestMetadata("FromPrefixedToSimpleDangerousDollar.kt")
    public void testFromPrefixedToSimpleDangerousDollar() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefixedToSimpleDangerousDollar.kt");
    }

    @TestMetadata("FromPrefixedToSimpleDangerousDollarLongPrefix.kt")
    public void testFromPrefixedToSimpleDangerousDollarLongPrefix() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefixedToSimpleDangerousDollarLongPrefix.kt");
    }

    @TestMetadata("FromPrefixedToSimpleEscapedLiterals.kt")
    public void testFromPrefixedToSimpleEscapedLiterals() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefixedToSimpleEscapedLiterals.kt");
    }

    @TestMetadata("FromPrefixedToSimpleLongTemplateEntry.kt")
    public void testFromPrefixedToSimpleLongTemplateEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefixedToSimpleLongTemplateEntry.kt");
    }

    @TestMetadata("FromPrefixedToSimplePlainText.kt")
    public void testFromPrefixedToSimplePlainText() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefixedToSimplePlainText.kt");
    }

    @TestMetadata("FromPrefixedToSimpleShortNameEntry.kt")
    public void testFromPrefixedToSimpleShortNameEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromPrefixedToSimpleShortNameEntry.kt");
    }

    @TestMetadata("FromSimpleToPrefixedEscapedLiterals.kt")
    public void testFromSimpleToPrefixedEscapedLiterals() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromSimpleToPrefixedEscapedLiterals.kt");
    }

    @TestMetadata("FromSimpleToPrefixedLongTemplateEntry.kt")
    public void testFromSimpleToPrefixedLongTemplateEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromSimpleToPrefixedLongTemplateEntry.kt");
    }

    @TestMetadata("FromSimpleToPrefixedPlainText.kt")
    public void testFromSimpleToPrefixedPlainText() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromSimpleToPrefixedPlainText.kt");
    }

    @TestMetadata("FromSimpleToPrefixedShortNameEntry.kt")
    public void testFromSimpleToPrefixedShortNameEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/FromSimpleToPrefixedShortNameEntry.kt");
    }

    @TestMetadata("PrefixedRawToSimpleEscapeNonEntry.kt")
    public void testPrefixedRawToSimpleEscapeNonEntry() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/PrefixedRawToSimpleEscapeNonEntry.kt");
    }

    @TestMetadata("UnescapeDollarSingleQuoteInsideSelection.kt")
    public void testUnescapeDollarSingleQuoteInsideSelection() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/UnescapeDollarSingleQuoteInsideSelection.kt");
    }

    @TestMetadata("UnescapeDollarSingleQuoteSelectionAfter.kt")
    public void testUnescapeDollarSingleQuoteSelectionAfter() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/UnescapeDollarSingleQuoteSelectionAfter.kt");
    }

    @TestMetadata("UnescapeDollarSingleQuoteSelectionBefore.kt")
    public void testUnescapeDollarSingleQuoteSelectionBefore() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/UnescapeDollarSingleQuoteSelectionBefore.kt");
    }

    @TestMetadata("UnescapeDollarSingleSelectionEndBreaksEscaping.kt")
    public void testUnescapeDollarSingleSelectionEndBreaksEscaping() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/UnescapeDollarSingleSelectionEndBreaksEscaping.kt");
    }

    @TestMetadata("UnescapeDollarSingleSelectionStartBreaksEscaping.kt")
    public void testUnescapeDollarSingleSelectionStartBreaksEscaping() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/UnescapeDollarSingleSelectionStartBreaksEscaping.kt");
    }

    @TestMetadata("UnescapeDollarTripleQuoteInsideSelection.kt")
    public void testUnescapeDollarTripleQuoteInsideSelection() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/UnescapeDollarTripleQuoteInsideSelection.kt");
    }

    @TestMetadata("UnescapeDollarTripleQuoteSelectionAfter.kt")
    public void testUnescapeDollarTripleQuoteSelectionAfter() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/UnescapeDollarTripleQuoteSelectionAfter.kt");
    }

    @TestMetadata("UnescapeDollarTripleQuoteSelectionBefore.kt")
    public void testUnescapeDollarTripleQuoteSelectionBefore() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/UnescapeDollarTripleQuoteSelectionBefore.kt");
    }

    @TestMetadata("UnescapeDollarTripleQuoteSelectionEndBreaksEscaping.kt")
    public void testUnescapeDollarTripleQuoteSelectionEndBreaksEscaping() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/UnescapeDollarTripleQuoteSelectionEndBreaksEscaping.kt");
    }

    @TestMetadata("UnescapeDollarTripleQuoteSelectionStartBreaksEscaping.kt")
    public void testUnescapeDollarTripleQuoteSelectionStartBreaksEscaping() throws Exception {
        runTest("../../idea/tests/testData/copyPaste/multiDollar/UnescapeDollarTripleQuoteSelectionStartBreaksEscaping.kt");
    }
}
