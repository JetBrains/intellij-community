// Copyright 2000-2025 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.fir.resolve;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.base.plugin.KotlinPluginMode;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("fir/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource")
public class FirReferenceToCompiledKotlinResolveInJavaTestGenerated extends AbstractFirReferenceToCompiledKotlinResolveInJavaTest {
    @java.lang.Override
    @org.jetbrains.annotations.NotNull
    public final KotlinPluginMode getPluginMode() {
        return KotlinPluginMode.K2;
    }

    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("Class.java")
    public void testClass() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/Class.java");
    }

    @TestMetadata("ClassCompanionJvmField.java")
    public void testClassCompanionJvmField() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ClassCompanionJvmField.java");
    }

    @TestMetadata("ClassFieldExplicit.java")
    public void testClassFieldExplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ClassFieldExplicit.java");
    }

    @TestMetadata("ClassJvmField.java")
    public void testClassJvmField() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ClassJvmField.java");
    }

    @TestMetadata("ClassJvmFieldCompanionExplicit.java")
    public void testClassJvmFieldCompanionExplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ClassJvmFieldCompanionExplicit.java");
    }

    @TestMetadata("ClassJvmFieldCompanionImplicit.java")
    public void testClassJvmFieldCompanionImplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ClassJvmFieldCompanionImplicit.java");
    }

    @TestMetadata("ClassObjectField.java")
    public void testClassObjectField() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ClassObjectField.java");
    }

    @TestMetadata("CompanionAndClassJvmFieldExplicit.java")
    public void testCompanionAndClassJvmFieldExplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/CompanionAndClassJvmFieldExplicit.java");
    }

    @TestMetadata("CompanionAndClassJvmFieldImplicit.java")
    public void testCompanionAndClassJvmFieldImplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/CompanionAndClassJvmFieldImplicit.java");
    }

    @TestMetadata("CompanionFieldExplicit.java")
    public void testCompanionFieldExplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/CompanionFieldExplicit.java");
    }

    @TestMetadata("CompanionFieldImplicit.java")
    public void testCompanionFieldImplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/CompanionFieldImplicit.java");
    }

    @TestMetadata("CompanionJvmFieldExplicit.java")
    public void testCompanionJvmFieldExplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/CompanionJvmFieldExplicit.java");
    }

    @TestMetadata("CompanionJvmFieldImplicit.java")
    public void testCompanionJvmFieldImplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/CompanionJvmFieldImplicit.java");
    }

    @TestMetadata("Constructor.java")
    public void testConstructor() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/Constructor.java");
    }

    @TestMetadata("EnumEntry.java")
    public void testEnumEntry() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/EnumEntry.java");
    }

    @TestMetadata("FacadeProperty.java")
    public void testFacadeProperty() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/FacadeProperty.java");
    }

    @TestMetadata("FacadePropertyJvmField.java")
    public void testFacadePropertyJvmField() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/FacadePropertyJvmField.java");
    }

    @TestMetadata("Field.java")
    public void testField() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/Field.java");
    }

    @TestMetadata("FileFacade.java")
    public void testFileFacade() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/FileFacade.java");
    }

    @TestMetadata("Getter.java")
    public void testGetter() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/Getter.java");
    }

    @TestMetadata("Method.java")
    public void testMethod() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/Method.java");
    }

    @TestMetadata("MethodOfDeeplyNested.java")
    public void testMethodOfDeeplyNested() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/MethodOfDeeplyNested.java");
    }

    @TestMetadata("MethodWithParameters.java")
    public void testMethodWithParameters() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/MethodWithParameters.java");
    }

    @TestMetadata("MultifileFacade1.java")
    public void testMultifileFacade1() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/MultifileFacade1.java");
    }

    @TestMetadata("MultifileFacade2.java")
    public void testMultifileFacade2() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/MultifileFacade2.java");
    }

    @TestMetadata("ObjectInstance.java")
    public void testObjectInstance() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ObjectInstance.java");
    }

    @TestMetadata("ObjectPropertyExplicit.java")
    public void testObjectPropertyExplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ObjectPropertyExplicit.java");
    }

    @TestMetadata("ObjectPropertyImplicit.java")
    public void testObjectPropertyImplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ObjectPropertyImplicit.java");
    }

    @TestMetadata("ObjectPropertyJvmFieldExplicit.java")
    public void testObjectPropertyJvmFieldExplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ObjectPropertyJvmFieldExplicit.java");
    }

    @TestMetadata("ObjectPropertyJvmFieldImplicit.java")
    public void testObjectPropertyJvmFieldImplicit() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/ObjectPropertyJvmFieldImplicit.java");
    }

    @TestMetadata("PlatformStaticFun.java")
    public void testPlatformStaticFun() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/PlatformStaticFun.java");
    }

    @TestMetadata("SingleFileMultifileFacade.java")
    public void testSingleFileMultifileFacade() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/SingleFileMultifileFacade.java");
    }

    @TestMetadata("TopLevelFunction.java")
    public void testTopLevelFunction() throws Exception {
        runTest("../../idea/tests/testData/resolve/referenceInJava/binaryAndSource/TopLevelFunction.java");
    }
}
