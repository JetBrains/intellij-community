// Copyright 2000-2024 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.fir.findUsages.kmpFindUsages;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.base.plugin.KotlinPluginMode;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;
import org.jetbrains.kotlin.idea.test.kmp.KMPTestPlatform;
import org.jetbrains.kotlin.idea.fir.findUsages.AbstractFindUsagesFirTest;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("fir/tests")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("../../idea/tests/testData/findUsages/kotlin")
public abstract class NativeLinuxFindUsagesFirTestGenerated extends AbstractFindUsagesFirTest {
    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/companionObject")
    public static class CompanionObject extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("inContainingClass.0.kt")
        public void testInContainingClass() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/companionObject/inContainingClass.0.kt");
        }

        @TestMetadata("inContainingClassNoErrors.0.kt")
        public void testInContainingClassNoErrors() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/companionObject/inContainingClassNoErrors.0.kt");
        }

        @TestMetadata("javaUsage.0.kt")
        public void testJavaUsage() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/companionObject/javaUsage.0.kt");
        }

        @TestMetadata("named.0.kt")
        public void testNamed() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/companionObject/named.0.kt");
        }

        @TestMetadata("namedWithInvoke.0.kt")
        public void testNamedWithInvoke() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/companionObject/namedWithInvoke.0.kt");
        }

        @TestMetadata("simple.0.kt")
        public void testSimple() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/companionObject/simple.0.kt");
        }

        @TestMetadata("withInvoke.0.kt")
        public void testWithInvoke() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/companionObject/withInvoke.0.kt");
        }

        @TestMetadata("withInvokeExtension.0.kt")
        public void testWithInvokeExtension() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/companionObject/withInvokeExtension.0.kt");
        }

        @TestMetadata("withInvokeFromParent.0.kt")
        public void testWithInvokeFromParent() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/companionObject/withInvokeFromParent.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/conventions")
    public abstract static class Conventions extends AbstractFindUsagesFirTest {
        @RunWith(JUnit3RunnerWithInners.class)
        @TestMetadata("../../idea/tests/testData/findUsages/kotlin/conventions/components")
        public static class Components extends AbstractFindUsagesFirTest {
            @java.lang.Override
            @org.jetbrains.annotations.NotNull
            public final KotlinPluginMode getPluginMode() {
                return KotlinPluginMode.K2;
            }

            @java.lang.Override
            public KMPTestPlatform getTestPlatform() {
                return KMPTestPlatform.NativeLinux;
            }

            private void runTest(String testDataFilePath) throws Exception {
                KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
            }

            @TestMetadata("callableReferences.0.kt")
            public void testCallableReferences() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/callableReferences.0.kt");
            }

            @TestMetadata("companionObjectAccess.0.kt")
            public void testCompanionObjectAccess() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/companionObjectAccess.0.kt");
            }

            @TestMetadata("componentFunForGenericType1.0.kt")
            public void testComponentFunForGenericType1() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/componentFunForGenericType1.0.kt");
            }

            @TestMetadata("componentFunForGenericType2.0.kt")
            public void testComponentFunForGenericType2() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/componentFunForGenericType2.0.kt");
            }

            @TestMetadata("dataClass.0.kt")
            public void testDataClass() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/dataClass.0.kt");
            }

            @TestMetadata("dataClassComponentByRef.0.kt")
            public void testDataClassComponentByRef() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/dataClassComponentByRef.0.kt");
            }

            @TestMetadata("dataClassComponentByRefLocal.0.kt")
            public void testDataClassComponentByRefLocal() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/dataClassComponentByRefLocal.0.kt");
            }

            @TestMetadata("dataClassFromStdlib.0.kt")
            public void testDataClassFromStdlib() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/dataClassFromStdlib.0.kt");
            }

            @TestMetadata("dataClassInsideDataClass.0.kt")
            public void testDataClassInsideDataClass() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/dataClassInsideDataClass.0.kt");
            }

            @TestMetadata("extensionComponentFun.0.kt")
            public void testExtensionComponentFun() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/extensionComponentFun.0.kt");
            }

            @TestMetadata("for.0.kt")
            public void testFor() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/for.0.kt");
            }

            @TestMetadata("isAndAs.0.kt")
            public void testIsAndAs() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/isAndAs.0.kt");
            }

            @TestMetadata("lambdas.0.kt")
            public void testLambdas() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/lambdas.0.kt");
            }

            @TestMetadata("mayTypeAffectAncestors.0.kt")
            public void testMayTypeAffectAncestors() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/mayTypeAffectAncestors.0.kt");
            }

            @TestMetadata("memberComponentFun.0.kt")
            public void testMemberComponentFun() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/memberComponentFun.0.kt");
            }

            @TestMetadata("operators.0.kt")
            public void testOperators() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/operators.0.kt");
            }

            @TestMetadata("propertyDelegate.0.kt")
            public void testPropertyDelegate() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/propertyDelegate.0.kt");
            }

            @TestMetadata("recursiveDataClass1.0.kt")
            public void testRecursiveDataClass1() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/recursiveDataClass1.0.kt");
            }

            @TestMetadata("recursiveDataClass2.0.kt")
            public void testRecursiveDataClass2() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/recursiveDataClass2.0.kt");
            }

            @TestMetadata("SAM.0.kt")
            public void testSAM() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/SAM.0.kt");
            }

            @TestMetadata("when.0.kt")
            public void testWhen() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/components/when.0.kt");
            }
        }

        @RunWith(JUnit3RunnerWithInners.class)
        @TestMetadata("../../idea/tests/testData/findUsages/kotlin/conventions/invoke")
        public static class Invoke extends AbstractFindUsagesFirTest {
            @java.lang.Override
            @org.jetbrains.annotations.NotNull
            public final KotlinPluginMode getPluginMode() {
                return KotlinPluginMode.K2;
            }

            @java.lang.Override
            public KMPTestPlatform getTestPlatform() {
                return KMPTestPlatform.NativeLinux;
            }

            private void runTest(String testDataFilePath) throws Exception {
                KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
            }

            @TestMetadata("invokeAsTypeParameterExtension.0.kt")
            public void testInvokeAsTypeParameterExtension() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/invoke/invokeAsTypeParameterExtension.0.kt");
            }

            @TestMetadata("invokeAsTypeParameterExtensionWithSmartCast.0.kt")
            public void testInvokeAsTypeParameterExtensionWithSmartCast() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/invoke/invokeAsTypeParameterExtensionWithSmartCast.0.kt");
            }

            @TestMetadata("invokeInObjectAsFunction.0.kt")
            public void testInvokeInObjectAsFunction() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/invoke/invokeInObjectAsFunction.0.kt");
            }

            @TestMetadata("suspendInvoke.0.kt")
            public void testSuspendInvoke() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/invoke/suspendInvoke.0.kt");
            }
        }

        @RunWith(JUnit3RunnerWithInners.class)
        @TestMetadata("../../idea/tests/testData/findUsages/kotlin/conventions")
        public static class Uncategorized extends AbstractFindUsagesFirTest {
            @java.lang.Override
            @org.jetbrains.annotations.NotNull
            public final KotlinPluginMode getPluginMode() {
                return KotlinPluginMode.K2;
            }

            @java.lang.Override
            public KMPTestPlatform getTestPlatform() {
                return KMPTestPlatform.NativeLinux;
            }

            private void runTest(String testDataFilePath) throws Exception {
                KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
            }

            @TestMetadata("compareTo.0.kt")
            public void testCompareTo() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/compareTo.0.kt");
            }

            @TestMetadata("contains.0.kt")
            public void testContains() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/contains.0.kt");
            }

            @TestMetadata("equals.0.kt")
            public void testEquals() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/equals.0.kt");
            }

            @TestMetadata("equalsNotAny.0.kt")
            public void testEqualsNotAny() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/equalsNotAny.0.kt");
            }

            @TestMetadata("forIteration.0.kt")
            public void testForIteration() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/forIteration.0.kt");
            }

            @TestMetadata("get.0.kt")
            public void testGet() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/get.0.kt");
            }

            @TestMetadata("getAsPropertyDelegate.0.kt")
            public void testGetAsPropertyDelegate() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/getAsPropertyDelegate.0.kt");
            }

            @TestMetadata("getInObject.0.kt")
            public void testGetInObject() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/getInObject.0.kt");
            }

            @TestMetadata("inc.0.kt")
            public void testInc() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/inc.0.kt");
            }

            @TestMetadata("invoke.0.kt")
            public void testInvoke() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/invoke.0.kt");
            }

            @TestMetadata("invokeExtension.0.kt")
            public void testInvokeExtension() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/invokeExtension.0.kt");
            }

            @TestMetadata("invokeInObject.0.kt")
            public void testInvokeInObject() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/invokeInObject.0.kt");
            }

            @TestMetadata("invokeInheritance.0.kt")
            public void testInvokeInheritance() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/invokeInheritance.0.kt");
            }

            @TestMetadata("invokeWithVarArg.0.kt")
            public void testInvokeWithVarArg() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/invokeWithVarArg.0.kt");
            }

            @TestMetadata("plus.0.kt")
            public void testPlus() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/plus.0.kt");
            }

            @TestMetadata("plusAssign.0.kt")
            public void testPlusAssign() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/plusAssign.0.kt");
            }

            @TestMetadata("recursive.0.kt")
            public void testRecursive() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/recursive.0.kt");
            }

            @TestMetadata("set.0.kt")
            public void testSet() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/set.0.kt");
            }

            @TestMetadata("set1.0.kt")
            public void testSet1() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/set1.0.kt");
            }

            @TestMetadata("setAsPropertyDelegate.0.kt")
            public void testSetAsPropertyDelegate() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/setAsPropertyDelegate.0.kt");
            }

            @TestMetadata("severalOperators.0.kt")
            public void testSeveralOperators() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/severalOperators.0.kt");
            }

            @TestMetadata("unaryMinus.0.kt")
            public void testUnaryMinus() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/conventions/unaryMinus.0.kt");
            }
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findClassUsages")
    public static class FindClassUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("classUsedInPlainText.0.kt")
        public void testClassUsedInPlainText() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/classUsedInPlainText.0.kt");
        }

        @TestMetadata("classUsedInTextAsRef.0.kt")
        public void testClassUsedInTextAsRef() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/classUsedInTextAsRef.0.kt");
        }

        @TestMetadata("javaClassAllUsages.0.kt")
        public void testJavaClassAllUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaClassAllUsages.0.kt");
        }

        @TestMetadata("javaClassConstructorUsages.0.kt")
        public void testJavaClassConstructorUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaClassConstructorUsages.0.kt");
        }

        @TestMetadata("javaClassFunctionUsages1.0.kt")
        public void testJavaClassFunctionUsages1() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaClassFunctionUsages1.0.kt");
        }

        @TestMetadata("javaClassFunctionUsages2.0.kt")
        public void testJavaClassFunctionUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaClassFunctionUsages2.0.kt");
        }

        @TestMetadata("javaClassNonConstructorUsages.0.kt")
        public void testJavaClassNonConstructorUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaClassNonConstructorUsages.0.kt");
        }

        @TestMetadata("javaClassPropertyUsages1.0.kt")
        public void testJavaClassPropertyUsages1() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaClassPropertyUsages1.0.kt");
        }

        @TestMetadata("javaClassPropertyUsages2.0.kt")
        public void testJavaClassPropertyUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaClassPropertyUsages2.0.kt");
        }

        @TestMetadata("javaClassSecondaryCtrUsages.0.kt")
        public void testJavaClassSecondaryCtrUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaClassSecondaryCtrUsages.0.kt");
        }

        @TestMetadata("javaDerivedClassUsages1.0.kt")
        public void testJavaDerivedClassUsages1() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaDerivedClassUsages1.0.kt");
        }

        @TestMetadata("javaDerivedClassUsages2.0.kt")
        public void testJavaDerivedClassUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaDerivedClassUsages2.0.kt");
        }

        @TestMetadata("javaDerivedInterfaceUsages1.0.kt")
        public void testJavaDerivedInterfaceUsages1() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaDerivedInterfaceUsages1.0.kt");
        }

        @TestMetadata("javaDerivedInterfaceUsages2.0.kt")
        public void testJavaDerivedInterfaceUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaDerivedInterfaceUsages2.0.kt");
        }

        @TestMetadata("javaInterfaceAllUsages.0.kt")
        public void testJavaInterfaceAllUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaInterfaceAllUsages.0.kt");
        }

        @TestMetadata("javaLambdaUsages.0.kt")
        public void testJavaLambdaUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/javaLambdaUsages.0.kt");
        }

        @TestMetadata("jvmClassNameInLiteral.0.kt")
        public void testJvmClassNameInLiteral() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/jvmClassNameInLiteral.0.kt");
        }

        @TestMetadata("kotlinAliasedClassAllUsages.0.kt")
        public void testKotlinAliasedClassAllUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinAliasedClassAllUsages.0.kt");
        }

        @TestMetadata("kotlinClassAllUsages.0.kt")
        public void testKotlinClassAllUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassAllUsages.0.kt");
        }

        @TestMetadata("kotlinClassAllUsages2.0.kt")
        public void testKotlinClassAllUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassAllUsages2.0.kt");
        }

        @TestMetadata("kotlinClassAllUsages3.0.kt")
        public void testKotlinClassAllUsages3() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassAllUsages3.0.kt");
        }

        @TestMetadata("kotlinClassAllUsagesNoImport.0.kt")
        public void testKotlinClassAllUsagesNoImport() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassAllUsagesNoImport.0.kt");
        }

        @TestMetadata("kotlinClassConstructorUsages.0.kt")
        public void testKotlinClassConstructorUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassConstructorUsages.0.kt");
        }

        @TestMetadata("kotlinClassDerivedAnonymousObjects.0.kt")
        public void testKotlinClassDerivedAnonymousObjects() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedAnonymousObjects.0.kt");
        }

        @TestMetadata("kotlinClassDerivedClasses.0.kt")
        public void testKotlinClassDerivedClasses() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedClasses.0.kt");
        }

        @TestMetadata("kotlinClassDerivedInnerClasses.0.kt")
        public void testKotlinClassDerivedInnerClasses() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedInnerClasses.0.kt");
        }

        @TestMetadata("kotlinClassDerivedInnerObjects.0.kt")
        public void testKotlinClassDerivedInnerObjects() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedInnerObjects.0.kt");
        }

        @TestMetadata("kotlinClassDerivedLocalClasses.0.kt")
        public void testKotlinClassDerivedLocalClasses() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedLocalClasses.0.kt");
        }

        @TestMetadata("kotlinClassDerivedLocalObjects.0.kt")
        public void testKotlinClassDerivedLocalObjects() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedLocalObjects.0.kt");
        }

        @TestMetadata("kotlinClassDerivedObjects.0.kt")
        public void testKotlinClassDerivedObjects() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedObjects.0.kt");
        }

        @TestMetadata("kotlinClassFunctionUsages1.0.kt")
        public void testKotlinClassFunctionUsages1() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassFunctionUsages1.0.kt");
        }

        @TestMetadata("kotlinClassFunctionUsages2.0.kt")
        public void testKotlinClassFunctionUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassFunctionUsages2.0.kt");
        }

        @TestMetadata("kotlinClassImportAliasAllUsages.0.kt")
        public void testKotlinClassImportAliasAllUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassImportAliasAllUsages.0.kt");
        }

        @TestMetadata("kotlinClassNonConstructorUsages.0.kt")
        public void testKotlinClassNonConstructorUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassNonConstructorUsages.0.kt");
        }

        @TestMetadata("kotlinClassPropertyUsages1.0.kt")
        public void testKotlinClassPropertyUsages1() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassPropertyUsages1.0.kt");
        }

        @TestMetadata("kotlinClassPropertyUsages2.0.kt")
        public void testKotlinClassPropertyUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassPropertyUsages2.0.kt");
        }

        @TestMetadata("kotlinClassSecondaryCtorUsages.0.kt")
        public void testKotlinClassSecondaryCtorUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinClassSecondaryCtorUsages.0.kt");
        }

        @TestMetadata("kotlinDeeplyNestedClassAllUsages.0.kt")
        public void testKotlinDeeplyNestedClassAllUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinDeeplyNestedClassAllUsages.0.kt");
        }

        @TestMetadata("kotlinInnerClassAllUsages.0.kt")
        public void testKotlinInnerClassAllUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinInnerClassAllUsages.0.kt");
        }

        @TestMetadata("kotlinInterfaceAllUsages.0.kt")
        public void testKotlinInterfaceAllUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinInterfaceAllUsages.0.kt");
        }

        @TestMetadata("kotlinInterfaceDerivedAnonymousObjects.0.kt")
        public void testKotlinInterfaceDerivedAnonymousObjects() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinInterfaceDerivedAnonymousObjects.0.kt");
        }

        @TestMetadata("kotlinInterfaceDerivedClasses.0.kt")
        public void testKotlinInterfaceDerivedClasses() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinInterfaceDerivedClasses.0.kt");
        }

        @TestMetadata("kotlinInterfaceDerivedInnerClasses.0.kt")
        public void testKotlinInterfaceDerivedInnerClasses() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinInterfaceDerivedInnerClasses.0.kt");
        }

        @TestMetadata("kotlinInterfaceDerivedInnerObjects.0.kt")
        public void testKotlinInterfaceDerivedInnerObjects() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinInterfaceDerivedInnerObjects.0.kt");
        }

        @TestMetadata("kotlinInterfaceDerivedInterfaces.0.kt")
        public void testKotlinInterfaceDerivedInterfaces() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinInterfaceDerivedInterfaces.0.kt");
        }

        @TestMetadata("kotlinInterfaceDerivedLocalClasses.0.kt")
        public void testKotlinInterfaceDerivedLocalClasses() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinInterfaceDerivedLocalClasses.0.kt");
        }

        @TestMetadata("kotlinInterfaceDerivedLocalObjects.0.kt")
        public void testKotlinInterfaceDerivedLocalObjects() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinInterfaceDerivedLocalObjects.0.kt");
        }

        @TestMetadata("kotlinInterfaceDerivedObjects.0.kt")
        public void testKotlinInterfaceDerivedObjects() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinInterfaceDerivedObjects.0.kt");
        }

        @TestMetadata("kotlinLocalClassDerivedAnonymousObjects.0.kt")
        public void testKotlinLocalClassDerivedAnonymousObjects() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassDerivedAnonymousObjects.0.kt");
        }

        @TestMetadata("kotlinLocalClassDerivedLocalClasses.0.kt")
        public void testKotlinLocalClassDerivedLocalClasses() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassDerivedLocalClasses.0.kt");
        }

        @TestMetadata("kotlinLocalClassDerivedLocalObjects.0.kt")
        public void testKotlinLocalClassDerivedLocalObjects() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassDerivedLocalObjects.0.kt");
        }

        @TestMetadata("kotlinLocalClassUsages1.0.kt")
        public void testKotlinLocalClassUsages1() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassUsages1.0.kt");
        }

        @TestMetadata("kotlinLocalClassUsages2.0.kt")
        public void testKotlinLocalClassUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassUsages2.0.kt");
        }

        @TestMetadata("kotlinNestedClassAllUsages.0.kt")
        public void testKotlinNestedClassAllUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinNestedClassAllUsages.0.kt");
        }

        @TestMetadata("kotlinPrivateClassUsages.0.kt")
        public void testKotlinPrivateClassUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/kotlinPrivateClassUsages.0.kt");
        }

        @TestMetadata("localAndNonLocalClass.0.kt")
        public void testLocalAndNonLocalClass() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/localAndNonLocalClass.0.kt");
        }

        @TestMetadata("primaryConstructorOfEnum.0.kt")
        public void testPrimaryConstructorOfEnum() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/primaryConstructorOfEnum.0.kt");
        }

        @TestMetadata("primaryConstructorWithDefaultParams.0.kt")
        public void testPrimaryConstructorWithDefaultParams() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/primaryConstructorWithDefaultParams.0.kt");
        }

        @TestMetadata("usageInTypeAlias.0.kt")
        public void testUsageInTypeAlias() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findClassUsages/usageInTypeAlias.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findEnumEntryUsages")
    public static class FindEnumEntryUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("enumEntry.0.kt")
        public void testEnumEntry() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findEnumEntryUsages/enumEntry.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages")
    public static class FindFunctionUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("dataClassComponent.0.kt")
        public void testDataClassComponent() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/dataClassComponent.0.kt");
        }

        @TestMetadata("enumFunctionUsages.0.kt")
        public void testEnumFunctionUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/enumFunctionUsages.0.kt");
        }

        @TestMetadata("enumValueOf.0.kt")
        public void testEnumValueOf() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/enumValueOf.0.kt");
        }

        @TestMetadata("functionCallWithinLambda.0.kt")
        public void testFunctionCallWithinLambda() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/functionCallWithinLambda.0.kt");
        }

        @TestMetadata("functionUsedInPlainText.0.kt")
        public void testFunctionUsedInPlainText() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/functionUsedInPlainText.0.kt");
        }

        @TestMetadata("highlightingOfSuperUsages.0.kt")
        public void testHighlightingOfSuperUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/highlightingOfSuperUsages.0.kt");
        }

        @TestMetadata("interfaceOverrides.0.kt")
        public void testInterfaceOverrides() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/interfaceOverrides.0.kt");
        }

        @TestMetadata("invokeFromClassCompanion.0.kt")
        public void testInvokeFromClassCompanion() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/invokeFromClassCompanion.0.kt");
        }

        @TestMetadata("invokeFromClassCompanionExtension.0.kt")
        public void testInvokeFromClassCompanionExtension() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/invokeFromClassCompanionExtension.0.kt");
        }

        @TestMetadata("invokeFromInterfaceCompanion.0.kt")
        public void testInvokeFromInterfaceCompanion() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/invokeFromInterfaceCompanion.0.kt");
        }

        @TestMetadata("invokeFromParentCompanionClass.0.kt")
        public void testInvokeFromParentCompanionClass() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/invokeFromParentCompanionClass.0.kt");
        }

        @TestMetadata("javaAndKotlinOverrides.0.kt")
        public void testJavaAndKotlinOverrides() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/javaAndKotlinOverrides.0.kt");
        }

        @TestMetadata("javaLambdaUsages.0.kt")
        public void testJavaLambdaUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/javaLambdaUsages.0.kt");
        }

        @TestMetadata("javaMethodUsages.0.kt")
        public void testJavaMethodUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/javaMethodUsages.0.kt");
        }

        @TestMetadata("jvmOverloaded.0.kt")
        public void testJvmOverloaded() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/jvmOverloaded.0.kt");
        }

        @TestMetadata("jvmStaticFun.0.kt")
        public void testJvmStaticFun() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/jvmStaticFun.0.kt");
        }

        @TestMetadata("jvmStaticJvmOverloadsFun.0.kt")
        public void testJvmStaticJvmOverloadsFun() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/jvmStaticJvmOverloadsFun.0.kt");
        }

        @TestMetadata("kotlinAliasedMethodUsages.0.kt")
        public void testKotlinAliasedMethodUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinAliasedMethodUsages.0.kt");
        }

        @TestMetadata("kotlinExtensionFunction.0.kt")
        public void testKotlinExtensionFunction() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinExtensionFunction.0.kt");
        }

        @TestMetadata("kotlinInterfaceImplThroughDelegate.0.kt")
        public void testKotlinInterfaceImplThroughDelegate() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinInterfaceImplThroughDelegate.0.kt");
        }

        @TestMetadata("kotlinInterfaceNoImplThroughDelegate.0.kt")
        public void testKotlinInterfaceNoImplThroughDelegate() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinInterfaceNoImplThroughDelegate.0.kt");
        }

        @TestMetadata("kotlinInternalMethodUsages.0.kt")
        public void testKotlinInternalMethodUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinInternalMethodUsages.0.kt");
        }

        @TestMetadata("kotlinLocalMethodUsages1.0.kt")
        public void testKotlinLocalMethodUsages1() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinLocalMethodUsages1.0.kt");
        }

        @TestMetadata("kotlinLocalMethodUsages2.0.kt")
        public void testKotlinLocalMethodUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinLocalMethodUsages2.0.kt");
        }

        @TestMetadata("kotlinMethodAliasedUsages.0.kt")
        public void testKotlinMethodAliasedUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinMethodAliasedUsages.0.kt");
        }

        @TestMetadata("kotlinMethodUsages.0.kt")
        public void testKotlinMethodUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinMethodUsages.0.kt");
        }

        @TestMetadata("kotlinMethodsAliasedUsages.0.kt")
        public void testKotlinMethodsAliasedUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinMethodsAliasedUsages.0.kt");
        }

        @TestMetadata("kotlinMultiRefInImport.0.kt")
        public void testKotlinMultiRefInImport() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinMultiRefInImport.0.kt");
        }

        @TestMetadata("kotlinNestedClassMethodUsages.0.kt")
        public void testKotlinNestedClassMethodUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinNestedClassMethodUsages.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsages.0.kt")
        public void testKotlinOverloadAndExtensionUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsages.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsages2.0.kt")
        public void testKotlinOverloadAndExtensionUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsages2.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsages3.0.kt")
        public void testKotlinOverloadAndExtensionUsages3() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsages3.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsages4.0.kt")
        public void testKotlinOverloadAndExtensionUsages4() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsages4.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsages5.0.kt")
        public void testKotlinOverloadAndExtensionUsages5() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsages5.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsagesSameClass.0.kt")
        public void testKotlinOverloadAndExtensionUsagesSameClass() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsagesSameClass.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsagesSuperClass.0.kt")
        public void testKotlinOverloadAndExtensionUsagesSuperClass() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsagesSuperClass.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsagesTopLevel.0.kt")
        public void testKotlinOverloadAndExtensionUsagesTopLevel() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsagesTopLevel.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsagesTopLevelDifferentFiles.0.kt")
        public void testKotlinOverloadAndExtensionUsagesTopLevelDifferentFiles() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsagesTopLevelDifferentFiles.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsagesTopLevelDifferentReceivers.0.kt")
        public void testKotlinOverloadAndExtensionUsagesTopLevelDifferentReceivers() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsagesTopLevelDifferentReceivers.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsagesTopLevelExtension.0.kt")
        public void testKotlinOverloadAndExtensionUsagesTopLevelExtension() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsagesTopLevelExtension.0.kt");
        }

        @TestMetadata("kotlinOverloadAndExtensionUsagesTopLevelVsInstance.0.kt")
        public void testKotlinOverloadAndExtensionUsagesTopLevelVsInstance() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsagesTopLevelVsInstance.0.kt");
        }

        @TestMetadata("kotlinPrivateMethodUsages.0.kt")
        public void testKotlinPrivateMethodUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinPrivateMethodUsages.0.kt");
        }

        @TestMetadata("kotlinTopLevelExternalFunction.0.kt")
        public void testKotlinTopLevelExternalFunction() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinTopLevelExternalFunction.0.kt");
        }

        @TestMetadata("kotlinTopLevelMethodUsages.0.kt")
        public void testKotlinTopLevelMethodUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinTopLevelMethodUsages.0.kt");
        }

        @TestMetadata("kotlinTopLevelMethodUsagesMultifile.0.kt")
        public void testKotlinTopLevelMethodUsagesMultifile() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinTopLevelMethodUsagesMultifile.0.kt");
        }

        @TestMetadata("kotlinTopLevelMethodUsagesNoImport.0.kt")
        public void testKotlinTopLevelMethodUsagesNoImport() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinTopLevelMethodUsagesNoImport.0.kt");
        }

        @TestMetadata("kotlinTopLevelMethodUsagesWithRenamedFile.0.kt")
        public void testKotlinTopLevelMethodUsagesWithRenamedFile() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/kotlinTopLevelMethodUsagesWithRenamedFile.0.kt");
        }

        @TestMetadata("labeledReturns.0.kt")
        public void testLabeledReturns() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/labeledReturns.0.kt");
        }

        @TestMetadata("localClassMember.0.kt")
        public void testLocalClassMember() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/localClassMember.0.kt");
        }

        @TestMetadata("nonBaseDeclarationFunctionAsPropName.0.kt")
        public void testNonBaseDeclarationFunctionAsPropName() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/nonBaseDeclarationFunctionAsPropName.0.kt");
        }

        @TestMetadata("objectExpressionDeepMember.0.kt")
        public void testObjectExpressionDeepMember() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/objectExpressionDeepMember.0.kt");
        }

        @TestMetadata("objectExpressionMember.0.kt")
        public void testObjectExpressionMember() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/objectExpressionMember.0.kt");
        }

        @TestMetadata("objectExpressionMember2.0.kt")
        public void testObjectExpressionMember2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/objectExpressionMember2.0.kt");
        }

        @TestMetadata("objectExpressionMemberInClass.0.kt")
        public void testObjectExpressionMemberInClass() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/objectExpressionMemberInClass.0.kt");
        }

        @TestMetadata("objectExpressionMemberInCompanion.0.kt")
        public void testObjectExpressionMemberInCompanion() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/objectExpressionMemberInCompanion.0.kt");
        }

        @TestMetadata("objectExpressionMemberInTopLevel.0.kt")
        public void testObjectExpressionMemberInTopLevel() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/objectExpressionMemberInTopLevel.0.kt");
        }

        @TestMetadata("overrides.0.kt")
        public void testOverrides() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/overrides.0.kt");
        }

        @TestMetadata("privateKotlinClass.0.kt")
        public void testPrivateKotlinClass() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/privateKotlinClass.0.kt");
        }

        @TestMetadata("privateKotlinObject.0.kt")
        public void testPrivateKotlinObject() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/privateKotlinObject.0.kt");
        }

        @TestMetadata("usagesOfBaseForFunction.0.kt")
        public void testUsagesOfBaseForFunction() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findFunctionUsages/usagesOfBaseForFunction.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findJavaPropertyUsages")
    public static class FindJavaPropertyUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("javaPropertyUsagesK.0.kt")
        public void testJavaPropertyUsagesK() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findJavaPropertyUsages/javaPropertyUsagesK.0.kt");
        }

        @TestMetadata("javaPropertyUsagesKJK.0.kt")
        public void testJavaPropertyUsagesKJK() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findJavaPropertyUsages/javaPropertyUsagesKJK.0.kt");
        }

        @TestMetadata("javaPropertyUsagesKK.0.kt")
        public void testJavaPropertyUsagesKK() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findJavaPropertyUsages/javaPropertyUsagesKK.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findObjectUsages")
    public static class FindObjectUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("javaObjectUsages.0.kt")
        public void testJavaObjectUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findObjectUsages/javaObjectUsages.0.kt");
        }

        @TestMetadata("kotlinImportedObjectUsages.0.kt")
        public void testKotlinImportedObjectUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findObjectUsages/kotlinImportedObjectUsages.0.kt");
        }

        @TestMetadata("kotlinLocalObjectUsages1.0.kt")
        public void testKotlinLocalObjectUsages1() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findObjectUsages/kotlinLocalObjectUsages1.0.kt");
        }

        @TestMetadata("kotlinLocalObjectUsages2.0.kt")
        public void testKotlinLocalObjectUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findObjectUsages/kotlinLocalObjectUsages2.0.kt");
        }

        @TestMetadata("kotlinNestedObjectUsages.0.kt")
        public void testKotlinNestedObjectUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findObjectUsages/kotlinNestedObjectUsages.0.kt");
        }

        @TestMetadata("kotlinObjectUsages.0.kt")
        public void testKotlinObjectUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findObjectUsages/kotlinObjectUsages.0.kt");
        }

        @TestMetadata("kotlinPrivateObjectUsages.0.kt")
        public void testKotlinPrivateObjectUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findObjectUsages/kotlinPrivateObjectUsages.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findPackageUsages")
    public static class FindPackageUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("kotlinPackageUsages.0.kt")
        public void testKotlinPackageUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPackageUsages/kotlinPackageUsages.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findParameterUsages")
    public static class FindParameterUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("kotlinAnnotationConstructorParameterUsages.0.kt")
        public void testKotlinAnnotationConstructorParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinAnnotationConstructorParameterUsages.0.kt");
        }

        @TestMetadata("kotlinComponentFunctionParameterUsages.0.kt")
        public void testKotlinComponentFunctionParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinComponentFunctionParameterUsages.0.kt");
        }

        @TestMetadata("kotlinConstructorParameterUsages.0.kt")
        public void testKotlinConstructorParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinConstructorParameterUsages.0.kt");
        }

        @TestMetadata("kotlinConstructorParameterUsagesOverrides.0.kt")
        public void testKotlinConstructorParameterUsagesOverrides() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinConstructorParameterUsagesOverrides.0.kt");
        }

        @TestMetadata("kotlinDefaultAnnotationParameterUsages.0.kt")
        public void testKotlinDefaultAnnotationParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinDefaultAnnotationParameterUsages.0.kt");
        }

        @TestMetadata("kotlinFunctionParameterUsages.0.kt")
        public void testKotlinFunctionParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinFunctionParameterUsages.0.kt");
        }

        @TestMetadata("kotlinFunctionTypeParameterUsages.0.kt")
        public void testKotlinFunctionTypeParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinFunctionTypeParameterUsages.0.kt");
        }

        @TestMetadata("kotlinHighlightParameterUsages.0.kt")
        public void testKotlinHighlightParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinHighlightParameterUsages.0.kt");
        }

        @TestMetadata("kotlinMemberFunctionMultipleParametersWithSearchInOverridings.0.kt")
        public void testKotlinMemberFunctionMultipleParametersWithSearchInOverridings() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinMemberFunctionMultipleParametersWithSearchInOverridings.0.kt");
        }

        @TestMetadata("kotlinMemberFunctionParameterUsages.0.kt")
        public void testKotlinMemberFunctionParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinMemberFunctionParameterUsages.0.kt");
        }

        @TestMetadata("kotlinMemberFunctionParameterUsagesWithSearchInOverridings.0.kt")
        public void testKotlinMemberFunctionParameterUsagesWithSearchInOverridings() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/kotlinMemberFunctionParameterUsagesWithSearchInOverridings.0.kt");
        }

        @TestMetadata("parameterNameInTextFile.0.kt")
        public void testParameterNameInTextFile() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/parameterNameInTextFile.0.kt");
        }

        @TestMetadata("parameterUsageInAnonymousInheritor.0.kt")
        public void testParameterUsageInAnonymousInheritor() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/parameterUsageInAnonymousInheritor.0.kt");
        }

        @TestMetadata("parameterUsageInAnonymousInheritorWithSearchInOverridings.0.kt")
        public void testParameterUsageInAnonymousInheritorWithSearchInOverridings() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findParameterUsages/parameterUsageInAnonymousInheritorWithSearchInOverridings.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages")
    public static class FindPrimaryConstructorUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("annotationConstructorCall.0.kt")
        public void testAnnotationConstructorCall() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/annotationConstructorCall.0.kt");
        }

        @TestMetadata("annotationEntry.0.kt")
        public void testAnnotationEntry() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/annotationEntry.0.kt");
        }

        @TestMetadata("constructorCall.0.kt")
        public void testConstructorCall() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/constructorCall.0.kt");
        }

        @TestMetadata("enumConstants.0.kt")
        public void testEnumConstants() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/enumConstants.0.kt");
        }

        @TestMetadata("jvmOverloaded.0.kt")
        public void testJvmOverloaded() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/jvmOverloaded.0.kt");
        }

        @TestMetadata("missingName.0.kt")
        public void testMissingName() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/missingName.0.kt");
        }

        @TestMetadata("primaryConstructorByRef.0.kt")
        public void testPrimaryConstructorByRef() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/primaryConstructorByRef.0.kt");
        }

        @TestMetadata("primaryConstructorNoKeyword.0.kt")
        public void testPrimaryConstructorNoKeyword() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/primaryConstructorNoKeyword.0.kt");
        }

        @TestMetadata("primaryConstructorOfEnum.0.kt")
        public void testPrimaryConstructorOfEnum() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/primaryConstructorOfEnum.0.kt");
        }

        @TestMetadata("primaryConstructorWithKeyword.0.kt")
        public void testPrimaryConstructorWithKeyword() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/primaryConstructorWithKeyword.0.kt");
        }

        @TestMetadata("primaryConstructorWithOverloadedOption.0.kt")
        public void testPrimaryConstructorWithOverloadedOption() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPrimaryConstructorUsages/primaryConstructorWithOverloadedOption.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages")
    public static class FindPropertyUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("baseAndOverridingPropertyInBodyUsages.0.kt")
        public void testBaseAndOverridingPropertyInBodyUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/baseAndOverridingPropertyInBodyUsages.0.kt");
        }

        @TestMetadata("baseAndOverridingPropertyInCtrUsages.0.kt")
        public void testBaseAndOverridingPropertyInCtrUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/baseAndOverridingPropertyInCtrUsages.0.kt");
        }

        @TestMetadata("extensionPropertyUsages.0.kt")
        public void testExtensionPropertyUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/extensionPropertyUsages.0.kt");
        }

        @TestMetadata("javaAndKotlinImplementations.0.kt")
        public void testJavaAndKotlinImplementations() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaAndKotlinImplementations.0.kt");
        }

        @TestMetadata("javaAndKotlinOverrides.0.kt")
        public void testJavaAndKotlinOverrides() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaAndKotlinOverrides.0.kt");
        }

        @TestMetadata("javaAndKotlinOverrides2.0.kt")
        public void testJavaAndKotlinOverrides2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaAndKotlinOverrides2.0.kt");
        }

        @TestMetadata("javaClassObjectPropertyUsages.0.kt")
        public void testJavaClassObjectPropertyUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaClassObjectPropertyUsages.0.kt");
        }

        @TestMetadata("javaClassObjectPropertyUsages2.0.kt")
        public void testJavaClassObjectPropertyUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaClassObjectPropertyUsages2.0.kt");
        }

        @TestMetadata("javaPropertyReadUsages.0.kt")
        public void testJavaPropertyReadUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaPropertyReadUsages.0.kt");
        }

        @TestMetadata("javaPropertyReadUsages2.0.kt")
        public void testJavaPropertyReadUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaPropertyReadUsages2.0.kt");
        }

        @TestMetadata("javaPropertyUsages.0.kt")
        public void testJavaPropertyUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaPropertyUsages.0.kt");
        }

        @TestMetadata("javaPropertyUsages2.0.kt")
        public void testJavaPropertyUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaPropertyUsages2.0.kt");
        }

        @TestMetadata("javaPropertyUsages3.0.kt")
        public void testJavaPropertyUsages3() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaPropertyUsages3.0.kt");
        }

        @TestMetadata("javaPropertyWriteUsages.0.kt")
        public void testJavaPropertyWriteUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaPropertyWriteUsages.0.kt");
        }

        @TestMetadata("javaPropertyWriteUsages2.0.kt")
        public void testJavaPropertyWriteUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/javaPropertyWriteUsages2.0.kt");
        }

        @TestMetadata("jvmFieldProperty.0.kt")
        public void testJvmFieldProperty() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/jvmFieldProperty.0.kt");
        }

        @TestMetadata("jvmStaticProperty.0.kt")
        public void testJvmStaticProperty() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/jvmStaticProperty.0.kt");
        }

        @TestMetadata("kotlinClassObjectPropertyUsage.0.kt")
        public void testKotlinClassObjectPropertyUsage() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinClassObjectPropertyUsage.0.kt");
        }

        @TestMetadata("kotlinLocalPropertyUsages1.0.kt")
        public void testKotlinLocalPropertyUsages1() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinLocalPropertyUsages1.0.kt");
        }

        @TestMetadata("kotlinLocalPropertyUsages2.0.kt")
        public void testKotlinLocalPropertyUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinLocalPropertyUsages2.0.kt");
        }

        @TestMetadata("kotlinMultiRefInImport.0.kt")
        public void testKotlinMultiRefInImport() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinMultiRefInImport.0.kt");
        }

        @TestMetadata("kotlinNestedClassPropertyUsages.0.kt")
        public void testKotlinNestedClassPropertyUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinNestedClassPropertyUsages.0.kt");
        }

        @TestMetadata("kotlinPrivatePropertyInClassObjectUsages.0.kt")
        public void testKotlinPrivatePropertyInClassObjectUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPrivatePropertyInClassObjectUsages.0.kt");
        }

        @TestMetadata("kotlinPrivatePropertyUsages.0.kt")
        public void testKotlinPrivatePropertyUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPrivatePropertyUsages.0.kt");
        }

        @TestMetadata("kotlinPrivatePropertyUsages2.0.kt")
        public void testKotlinPrivatePropertyUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPrivatePropertyUsages2.0.kt");
        }

        @TestMetadata("kotlinPrivatePropertyUsages3.0.kt")
        public void testKotlinPrivatePropertyUsages3() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPrivatePropertyUsages3.0.kt");
        }

        @TestMetadata("kotlinPrivatePropertyUsages4.0.kt")
        public void testKotlinPrivatePropertyUsages4() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPrivatePropertyUsages4.0.kt");
        }

        @TestMetadata("kotlinPropertyReadUsages.0.kt")
        public void testKotlinPropertyReadUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyReadUsages.0.kt");
        }

        @TestMetadata("kotlinPropertyReadUsages2.0.kt")
        public void testKotlinPropertyReadUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyReadUsages2.0.kt");
        }

        @TestMetadata("kotlinPropertySameNameAsMethodUsages.0.kt")
        public void testKotlinPropertySameNameAsMethodUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertySameNameAsMethodUsages.0.kt");
        }

        @TestMetadata("kotlinPropertyUsages.0.kt")
        public void testKotlinPropertyUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyUsages.0.kt");
        }

        @TestMetadata("kotlinPropertyUsages2.0.kt")
        public void testKotlinPropertyUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyUsages2.0.kt");
        }

        @TestMetadata("kotlinPropertyWriteUsages.0.kt")
        public void testKotlinPropertyWriteUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyWriteUsages.0.kt");
        }

        @TestMetadata("kotlinPropertyWriteUsages2.0.kt")
        public void testKotlinPropertyWriteUsages2() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyWriteUsages2.0.kt");
        }

        @TestMetadata("kotlinTopLevelPropertyUsages.0.kt")
        public void testKotlinTopLevelPropertyUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kotlinTopLevelPropertyUsages.0.kt");
        }

        @TestMetadata("kt7656.0.kt")
        public void testKt7656() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findPropertyUsages/kt7656.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findSecondaryConstructorUsages")
    public static class FindSecondaryConstructorUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("constructorCall.0.kt")
        public void testConstructorCall() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findSecondaryConstructorUsages/constructorCall.0.kt");
        }

        @TestMetadata("defaultSecondaryConstructor.0.kt")
        public void testDefaultSecondaryConstructor() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findSecondaryConstructorUsages/defaultSecondaryConstructor.0.kt");
        }

        @TestMetadata("jvmOverloaded.0.kt")
        public void testJvmOverloaded() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findSecondaryConstructorUsages/jvmOverloaded.0.kt");
        }

        @TestMetadata("secondaryConstructor.0.kt")
        public void testSecondaryConstructor() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findSecondaryConstructorUsages/secondaryConstructor.0.kt");
        }

        @TestMetadata("secondaryConstructorInMethodReference.0.kt")
        public void testSecondaryConstructorInMethodReference() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findSecondaryConstructorUsages/secondaryConstructorInMethodReference.0.kt");
        }

        @TestMetadata("secondaryConstructorWithOverloadedOption.0.kt")
        public void testSecondaryConstructorWithOverloadedOption() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findSecondaryConstructorUsages/secondaryConstructorWithOverloadedOption.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findTypeAliasUsages")
    public static class FindTypeAliasUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("classAlias.0.kt")
        public void testClassAlias() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findTypeAliasUsages/classAlias.0.kt");
        }

        @TestMetadata("objectAlias.0.kt")
        public void testObjectAlias() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findTypeAliasUsages/objectAlias.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findTypeParameterUsages")
    public static class FindTypeParameterUsages extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("kotlinClassTypeParameterUsages.0.kt")
        public void testKotlinClassTypeParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findTypeParameterUsages/kotlinClassTypeParameterUsages.0.kt");
        }

        @TestMetadata("kotlinFunctionTypeParameterUsages.0.kt")
        public void testKotlinFunctionTypeParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findTypeParameterUsages/kotlinFunctionTypeParameterUsages.0.kt");
        }

        @TestMetadata("kotlinReifiedTypeParameterUsages.0.kt")
        public void testKotlinReifiedTypeParameterUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findTypeParameterUsages/kotlinReifiedTypeParameterUsages.0.kt");
        }

        @TestMetadata("propertyWithTypeParameter.0.kt")
        public void testPropertyWithTypeParameter() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findTypeParameterUsages/propertyWithTypeParameter.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findWithFilteringImports")
    public static class FindWithFilteringImports extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("findWithFilteringImports.0.kt")
        public void testFindWithFilteringImports() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findWithFilteringImports/findWithFilteringImports.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/findWithStructuralGrouping")
    public static class FindWithStructuralGrouping extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("kotlinClassAllUsages.0.kt")
        public void testKotlinClassAllUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findWithStructuralGrouping/kotlinClassAllUsages.0.kt");
        }

        @TestMetadata("kotlinMethodUsages.0.kt")
        public void testKotlinMethodUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findWithStructuralGrouping/kotlinMethodUsages.0.kt");
        }

        @TestMetadata("kotlinPropertyUsages.0.kt")
        public void testKotlinPropertyUsages() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/findWithStructuralGrouping/kotlinPropertyUsages.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/internal")
    public abstract static class Internal extends AbstractFindUsagesFirTest {
        @RunWith(JUnit3RunnerWithInners.class)
        @TestMetadata("../../idea/tests/testData/findUsages/kotlin/internal/findFunctionUsages")
        public static class FindFunctionUsages extends AbstractFindUsagesFirTest {
            @java.lang.Override
            @org.jetbrains.annotations.NotNull
            public final KotlinPluginMode getPluginMode() {
                return KotlinPluginMode.K2;
            }

            @java.lang.Override
            public KMPTestPlatform getTestPlatform() {
                return KMPTestPlatform.NativeLinux;
            }

            private void runTest(String testDataFilePath) throws Exception {
                KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
            }

            @TestMetadata("enumFunctionUsages.0.kt")
            public void testEnumFunctionUsages() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findFunctionUsages/enumFunctionUsages.0.kt");
            }

            @TestMetadata("kotlinInterfaceImplThroughDelegate.0.kt")
            public void testKotlinInterfaceImplThroughDelegate() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findFunctionUsages/kotlinInterfaceImplThroughDelegate.0.kt");
            }

            @TestMetadata("kotlinMethodUsages.0.kt")
            public void testKotlinMethodUsages() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findFunctionUsages/kotlinMethodUsages.0.kt");
            }

            @TestMetadata("kotlinMultiRefInImport.0.kt")
            public void testKotlinMultiRefInImport() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findFunctionUsages/kotlinMultiRefInImport.0.kt");
            }

            @TestMetadata("kotlinOverloadAndExtensionUsages.0.kt")
            public void testKotlinOverloadAndExtensionUsages() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findFunctionUsages/kotlinOverloadAndExtensionUsages.0.kt");
            }

            @TestMetadata("kotlinTopLevelMethodUsages.0.kt")
            public void testKotlinTopLevelMethodUsages() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findFunctionUsages/kotlinTopLevelMethodUsages.0.kt");
            }

            @TestMetadata("usagesOfBaseForFunction.0.kt")
            public void testUsagesOfBaseForFunction() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findFunctionUsages/usagesOfBaseForFunction.0.kt");
            }
        }

        @RunWith(JUnit3RunnerWithInners.class)
        @TestMetadata("../../idea/tests/testData/findUsages/kotlin/internal/findPrimaryConstructorUsages")
        public static class FindPrimaryConstructorUsages extends AbstractFindUsagesFirTest {
            @java.lang.Override
            @org.jetbrains.annotations.NotNull
            public final KotlinPluginMode getPluginMode() {
                return KotlinPluginMode.K2;
            }

            @java.lang.Override
            public KMPTestPlatform getTestPlatform() {
                return KMPTestPlatform.NativeLinux;
            }

            private void runTest(String testDataFilePath) throws Exception {
                KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
            }

            @TestMetadata("constructorCall.0.kt")
            public void testConstructorCall() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findPrimaryConstructorUsages/constructorCall.0.kt");
            }

            @TestMetadata("primaryConstructorByRef.0.kt")
            public void testPrimaryConstructorByRef() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findPrimaryConstructorUsages/primaryConstructorByRef.0.kt");
            }
        }

        @RunWith(JUnit3RunnerWithInners.class)
        @TestMetadata("../../idea/tests/testData/findUsages/kotlin/internal/findPropertyUsages")
        public static class FindPropertyUsages extends AbstractFindUsagesFirTest {
            @java.lang.Override
            @org.jetbrains.annotations.NotNull
            public final KotlinPluginMode getPluginMode() {
                return KotlinPluginMode.K2;
            }

            @java.lang.Override
            public KMPTestPlatform getTestPlatform() {
                return KMPTestPlatform.NativeLinux;
            }

            private void runTest(String testDataFilePath) throws Exception {
                KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
            }

            @TestMetadata("kotlinClassObjectPropertyUsage.0.kt")
            public void testKotlinClassObjectPropertyUsage() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findPropertyUsages/kotlinClassObjectPropertyUsage.0.kt");
            }

            @TestMetadata("kotlinMultiRefInImport.0.kt")
            public void testKotlinMultiRefInImport() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findPropertyUsages/kotlinMultiRefInImport.0.kt");
            }

            @TestMetadata("kotlinPropertyUsages.0.kt")
            public void testKotlinPropertyUsages() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findPropertyUsages/kotlinPropertyUsages.0.kt");
            }

            @TestMetadata("kotlinTopLevelPropertyUsages.0.kt")
            public void testKotlinTopLevelPropertyUsages() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findPropertyUsages/kotlinTopLevelPropertyUsages.0.kt");
            }
        }

        @RunWith(JUnit3RunnerWithInners.class)
        @TestMetadata("../../idea/tests/testData/findUsages/kotlin/internal/findSecondaryConstructorUsages")
        public static class FindSecondaryConstructorUsages extends AbstractFindUsagesFirTest {
            @java.lang.Override
            @org.jetbrains.annotations.NotNull
            public final KotlinPluginMode getPluginMode() {
                return KotlinPluginMode.K2;
            }

            @java.lang.Override
            public KMPTestPlatform getTestPlatform() {
                return KMPTestPlatform.NativeLinux;
            }

            private void runTest(String testDataFilePath) throws Exception {
                KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
            }

            @TestMetadata("constructorCall.0.kt")
            public void testConstructorCall() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findSecondaryConstructorUsages/constructorCall.0.kt");
            }

            @TestMetadata("defaultSecondaryConstructor.0.kt")
            public void testDefaultSecondaryConstructor() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findSecondaryConstructorUsages/defaultSecondaryConstructor.0.kt");
            }

            @TestMetadata("secondaryConstructor.0.kt")
            public void testSecondaryConstructor() throws Exception {
                runTest("../../idea/tests/testData/findUsages/kotlin/internal/findSecondaryConstructorUsages/secondaryConstructor.0.kt");
            }
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/propertyFiles")
    public static class PropertyFiles extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("propertyFileUsagesByRef.0.kt")
        public void testPropertyFileUsagesByRef() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/propertyFiles/propertyFileUsagesByRef.0.kt");
        }

        @TestMetadata("propertyUsagesByRef.0.kt")
        public void testPropertyUsagesByRef() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/propertyFiles/propertyUsagesByRef.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/unresolvedAnnotation")
    public static class UnresolvedAnnotation extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("unresolvedAnnotation.0.kt")
        public void testUnresolvedAnnotation() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/unresolvedAnnotation/unresolvedAnnotation.0.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../../idea/tests/testData/findUsages/kotlin/variable")
    public static class Variable extends AbstractFindUsagesFirTest {
        @java.lang.Override
        @org.jetbrains.annotations.NotNull
        public final KotlinPluginMode getPluginMode() {
            return KotlinPluginMode.K2;
        }

        @java.lang.Override
        public KMPTestPlatform getTestPlatform() {
            return KMPTestPlatform.NativeLinux;
        }

        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("plusAssignFun.0.kt")
        public void testPlusAssignFun() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/variable/plusAssignFun.0.kt");
        }

        @TestMetadata("readAccess.0.kt")
        public void testReadAccess() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/variable/readAccess.0.kt");
        }

        @TestMetadata("varInDoWhile.0.kt")
        public void testVarInDoWhile() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/variable/varInDoWhile.0.kt");
        }

        @TestMetadata("writeAccess.0.kt")
        public void testWriteAccess() throws Exception {
            runTest("../../idea/tests/testData/findUsages/kotlin/variable/writeAccess.0.kt");
        }
    }
}
