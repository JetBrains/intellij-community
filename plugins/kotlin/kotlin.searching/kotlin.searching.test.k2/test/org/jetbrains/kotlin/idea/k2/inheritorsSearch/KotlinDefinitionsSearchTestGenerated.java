// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.k2.inheritorsSearch;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("kotlin.searching/kotlin.searching.test.k2")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public abstract class KotlinDefinitionsSearchTestGenerated extends AbstractKotlinDefinitionsSearchTest {
    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../testData/definitionsSearch/kotlinClass")
    public static class KotlinClass extends AbstractKotlinDefinitionsSearchTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTestKotlinClass, this, testDataFilePath);
        }

        @TestMetadata("simple.kt")
        public void testSimple() throws Exception {
            runTest("../testData/definitionsSearch/kotlinClass/simple.kt");
        }

        @TestMetadata("withJavaInheritor.kt")
        public void testWithJavaInheritor() throws Exception {
            runTest("../testData/definitionsSearch/kotlinClass/withJavaInheritor.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../testData/definitionsSearch/javaClass")
    public static class JavaClass extends AbstractKotlinDefinitionsSearchTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTestJavaClass, this, testDataFilePath);
        }

        @TestMetadata("fromJava.java")
        public void testFromJava() throws Exception {
            runTest("../testData/definitionsSearch/javaClass/fromJava.java");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../testData/definitionsSearch/kotlinFunction")
    public static class KotlinFunction extends AbstractKotlinDefinitionsSearchTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTestCallable, this, testDataFilePath);
        }

        @TestMetadata("simple.kt")
        public void testSimple() throws Exception {
            runTest("../testData/definitionsSearch/kotlinFunction/simple.kt");
        }

        @TestMetadata("withJavaInheritor.kt")
        public void testWithJavaInheritor() throws Exception {
            runTest("../testData/definitionsSearch/kotlinFunction/withJavaInheritor.kt");
        }

        @TestMetadata("withJavaInheritorTypeParameters.kt")
        public void testWithJavaInheritorTypeParameters() throws Exception {
            runTest("../testData/definitionsSearch/kotlinFunction/withJavaInheritorTypeParameters.kt");
        }
    }
}
