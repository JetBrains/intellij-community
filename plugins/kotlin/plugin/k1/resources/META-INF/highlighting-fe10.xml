<idea-plugin>
  <extensionPoints>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.highlighterExtension"
            interface="org.jetbrains.kotlin.idea.highlighter.KotlinHighlightingVisitorExtension"
            dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <projectService
            serviceInterface="org.jetbrains.kotlin.idea.references.KotlinReferenceProviderContributor"
            serviceImplementation="org.jetbrains.kotlin.references.fe10.base.KtFe10KotlinReferenceProviderContributor"/>
    <applicationService
            serviceInterface="org.jetbrains.kotlin.references.fe10.base.KtFe10ReferenceResolutionHelper"
            serviceImplementation="org.jetbrains.kotlin.idea.references.KtFe10ReferenceResolutionHelperImpl"/>
    <applicationService
            serviceInterface="org.jetbrains.kotlin.psi.KotlinDeclarationNavigationPolicy"
            serviceImplementation="org.jetbrains.kotlin.idea.decompiler.navigation.KotlinDeclarationNavigationPolicyImpl"/>
    <applicationService
            serviceInterface="org.jetbrains.kotlin.idea.base.analysis.KotlinSafeAnalysisWrapper"
            serviceImplementation="org.jetbrains.kotlin.base.fe10.analysis.Fe10KotlinSafeAnalysisWrapper"/>

    <syntaxHighlighter factoryClass="org.jetbrains.kotlin.idea.decompiler.builtIns.KotlinSyntaxHighlighterProviderForDecompiledBuiltIns"/>

    <highlightVisitor implementation="org.jetbrains.kotlin.idea.highlighter.KotlinHighlightVisitor"/>
    <highlightVisitor implementation="org.jetbrains.kotlin.idea.highlighter.KotlinRainbowVisitor"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.idea.base.fe10.highlighting.suspender.KotlinHighlightingSuspender"/>
    <editorNotificationProvider implementation="org.jetbrains.kotlin.idea.base.fe10.highlighting.suspender.KotlinHighlightingSuspendNotificationProvider"/>

    <registryKey key="kotlin.highlighting.suspended.timeout"
                 description="Timeout (in seconds) when highlighting is temporarily turned off in case of unexpected errors."
                 defaultValue="10"
                 restartRequired="true"/>

    <registryKey key="kotlin.highlighting.suppress.deprecated"
                 description="Suppress kotlin.Deprecated warning"
                 defaultValue="false"/>

    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.base.highlighting.KotlinBeforeResolveHighlightingPass$Registrar"/>
    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.highlighter.DebugInfoHighlightingPass$Registrar"/>
    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.highlighter.ScriptExternalHighlightingPass$Registrar"/>
    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.refactoring.cutPaste.MoveDeclarationsPassFactory$Registrar"/>

    <problemHighlightFilter implementation="org.jetbrains.kotlin.idea.highlighter.KotlinProblemHighlightFilter"/>
    <problemFileHighlightFilter implementation="org.jetbrains.kotlin.idea.highlighting.KotlinProblemFileHighlightFilter"/>

    <daemon.changeLocalityDetector implementation="org.jetbrains.kotlin.idea.base.highlighting.KotlinChangeLocalityDetector"/>

    <defaultHighlightingSettingProvider implementation="org.jetbrains.kotlin.idea.highlighter.KotlinDefaultHighlightingSettingsProvider"/>

    <annotator language="JAVA" implementationClass="org.jetbrains.kotlin.idea.java.UnimplementedKotlinInterfaceMemberAnnotator"/>

    <colorSettingsPage implementation="org.jetbrains.kotlin.idea.highlighter.KotlinColorSettingsPage"/>

    <registryKey
            key="kotlin.resolve.force.full.resolve.on.highlighting"
            description="Force to perform full resolve on highlighting"
            defaultValue="true"
            restartRequired="false"/>
  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <highlighterExtension implementation="org.jetbrains.kotlin.idea.highlighter.dsl.DslKotlinHighlightingVisitorExtension"/>
  </extensions>
</idea-plugin>
