<idea-plugin>
  <extensionPoints>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.declarationAttributeAltererExtension"
            interface="org.jetbrains.kotlin.extensions.DeclarationAttributeAltererExtension"
            area="IDEA_PROJECT"/>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.syntheticScopeProviderExtension"
            interface="org.jetbrains.kotlin.synthetic.SyntheticScopeProviderExtension"
            area="IDEA_PROJECT"/>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.resolveScopeEnlarger"
            interface="org.jetbrains.kotlin.idea.base.projectStructure.KotlinResolveScopeEnlarger"
            dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <projectService serviceImplementation="org.jetbrains.kotlin.base.fe10.analysis.DaemonCodeAnalyzerStatusService"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.idea.caches.resolve.IdePackageOracleFactory"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.idea.base.projectStructure.libraryToSourceAnalysis.KotlinLibraryToSourceAnalysisStateComponent"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.idea.base.projectStructure.libraryToSourceAnalysis.ResolutionAnchorCacheService"
            serviceImplementation="org.jetbrains.kotlin.idea.caches.resolve.ResolutionAnchorCacheServiceImpl"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.resolve.ResolutionAnchorProvider"
            serviceImplementation="org.jetbrains.kotlin.idea.caches.resolve.KotlinIdeResolutionAnchorService"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.idea.caches.trackers.ModuleDependencyProviderExtension"
            serviceImplementation="org.jetbrains.kotlin.idea.caches.project.ResolutionAnchorModuleDependencyProviderExtension"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.load.kotlin.MetadataFinderFactory"
            serviceImplementation="org.jetbrains.kotlin.idea.vfilefinder.IdeVirtualFileFinderFactory"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.load.kotlin.VirtualFileFinderFactory"
            serviceImplementation="org.jetbrains.kotlin.idea.vfilefinder.IdeVirtualFileFinderFactory"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.load.kotlin.ModuleVisibilityManager"
            serviceImplementation="org.jetbrains.kotlin.idea.util.IdeModuleVisibilityManagerImpl"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.resolve.jvm.modules.JavaModuleResolver"
            serviceImplementation="org.jetbrains.kotlin.idea.modules.IdeJavaModuleResolver"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.resolve.ModuleAnnotationsResolver"
            serviceImplementation="org.jetbrains.kotlin.idea.compiler.IdeModuleAnnotationsResolver"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.resolve.LanguageVersionSettingsProvider"
            serviceImplementation="org.jetbrains.kotlin.idea.compiler.IdeLanguageVersionSettingsProvider"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.resolve.CodeAnalyzerInitializer"
            serviceImplementation="org.jetbrains.kotlin.resolve.DummyCodeAnalyzerInitializer"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.idea.kdoc.KDocLinkResolutionService"
            serviceImplementation="org.jetbrains.kotlin.idea.kdoc.IdeKDocLinkResolutionService"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.resolve.lazy.ProbablyNothingCallableNames"
            serviceImplementation="org.jetbrains.kotlin.idea.project.ProbablyNothingCallableNamesImpl"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.resolve.lazy.ProbablyContractedCallableNames"
            serviceImplementation="org.jetbrains.kotlin.idea.project.ProbablyContractedCallableNamesImpl"/>

    <registryKey
            key="kotlin.dispatch.thread.resolve.check"
            description="Whether to enable the check for resolve activated from the write action"
            defaultValue="false"
            restartRequired="false"/>

    <resolveScopeEnlarger implementation="org.jetbrains.kotlin.idea.CommonModuleResolveScopeEnlarger"/>

    <project.converterProvider
            id="kotlin-non-jvm-source-roots"
            implementation="org.jetbrains.kotlin.idea.roots.KotlinNonJvmSourceRootConverterProvider"/>

    <orderEnumerationHandlerFactory implementation="org.jetbrains.kotlin.idea.roots.KotlinNonJvmOrderEnumerationHandler$Factory"/>
  </extensions>
</idea-plugin>