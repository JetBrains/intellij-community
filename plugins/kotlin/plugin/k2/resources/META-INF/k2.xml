<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <depends optional="true" config-file="gradle.xml">com.intellij.gradle</depends>
  <depends optional="true" config-file="dep-groovy.xml">org.intellij.groovy</depends>
  <depends optional="true" config-file="maven-common.xml">org.jetbrains.idea.maven</depends>
  <depends optional="true" config-file="dep-maven.xml">org.jetbrains.idea.maven</depends>
  <depends optional="true" config-file="dep-jvm-decompiler.xml">org.jetbrains.java.decompiler</depends>

  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.modules.java</depends>
  <depends>com.intellij.modules.java-capable</depends>

  <xi:include href="navigation.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="refactorings.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="highlighting.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="indices.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="file-types.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="language.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="formatter.xml" xpointer ="xpointer(/idea-plugin/*)"/>
  <xi:include href="jps.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="caches.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="kotlin-core.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="searching-base.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="codeInsights.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="lowLevelApiFir.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="light-classes.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="light-classes-fir.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="jvm-debugger.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="highlighting-k2.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="dep-spellchecker.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="scripting-base.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <xi:include href="extensions.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <extensionPoints>
    <xi:include href="extensions/compiler.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>
  </extensionPoints>

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <idePlatformKindTooling implementation="org.jetbrains.kotlin.idea.base.fir.codeInsight.tooling.FirJvmIdePlatformKindTooling"/>
    <idePlatformKindTooling implementation="org.jetbrains.kotlin.idea.base.fir.codeInsight.tooling.FirJsIdePlatformKindTooling"/>
    <idePlatformKindTooling implementation="org.jetbrains.kotlin.idea.base.fir.codeInsight.tooling.FirNativeIdePlatformKindTooling"/>
    <idePlatformKindTooling implementation="org.jetbrains.kotlin.idea.base.fir.codeInsight.tooling.FirCommonIdePlatformKindTooling"/>

  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.uast">
    <uastLanguagePlugin implementation="org.jetbrains.uast.kotlin.FirKotlinUastLanguagePlugin"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <projectService serviceImplementation="org.jetbrains.kotlin.idea.fir.extensions.KtCompilerPluginsProviderIdeImpl"
                    serviceInterface="org.jetbrains.kotlin.analysis.project.structure.KtCompilerPluginsProvider"/>
    <!-- fir-specific -->
    <postStartupActivity implementation="org.jetbrains.kotlin.idea.fir.AndroidPluginIncompatibilityCheckerStartupActivity"/>

    <applicationService serviceInterface="org.jetbrains.kotlin.idea.base.plugin.KotlinPluginKindProvider"
                        serviceImplementation="org.jetbrains.kotlin.idea.fir.plugin.FirKotlinPluginKindProvider"/>
    <applicationService serviceInterface="org.jetbrains.kotlin.idea.codeInsight.overrideImplement.OverrideImplementFacility"
                        serviceImplementation="org.jetbrains.kotlin.idea.core.overrideImplement.OverrideImplementFacilityImpl"/>

    <projectService serviceInterface="org.jetbrains.kotlin.analysis.api.session.KtAnalysisSessionProvider"
                    serviceImplementation="org.jetbrains.kotlin.analysis.api.fir.KtFirAnalysisSessionProvider"/>
    <projectService serviceInterface="org.jetbrains.kotlin.idea.references.KotlinReferenceProviderContributor"
                        serviceImplementation="org.jetbrains.kotlin.idea.references.KotlinFirReferenceContributor"/>
    <statusBarWidgetFactory id="kotlin.fir.ide" implementation="org.jetbrains.kotlin.idea.fir.FirStatusBarWidgetFactory"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.LLFirResolveSessionService"/>

    <applicationService serviceInterface="org.jetbrains.uast.kotlin.BaseKotlinUastResolveProviderService"
                        serviceImplementation="org.jetbrains.uast.kotlin.internal.FirIdeaKotlinUastResolveProviderService"/>
    <projectService serviceInterface="org.jetbrains.uast.kotlin.FirKotlinUastResolveProviderService"
                    serviceImplementation="org.jetbrains.uast.kotlin.internal.FirIdeaKotlinUastResolveProviderService"/>

    <registryKey key="kotlin.fir.uast.force.uinjectionhost"
                 description="Whether to convert `KtStringTemplateExpression` to `KotlinStringTemplateUPolyadicExpression` in all cases"
                 defaultValue="false"
                 restartRequired="false"/>

    <registryKey key="kotlin.k2.scripting.enabled"
                 description="Enable scripting support in the Kotlin K2 plugin"
                 defaultValue="false"
                 restartRequired="true"/>

    <registryKey key="kotlin.k2.only.bundled.compiler.plugins.enabled"
                 description="Allow only bundled K2 compiler plugins to be used"
                 defaultValue="true"
                 restartRequired="false"/>

    <completion.contributor language="kotlin"
                            id="KotlinCompletionContributor"
                            order="first"
                            implementationClass="org.jetbrains.kotlin.idea.completion.KotlinFirCompletionContributor"/>
    <lookup.charFilter implementation="org.jetbrains.kotlin.idea.completion.KotlinCompletionCharFilter"/>
    <codeInsight.typeInfo language="kotlin"
                          implementationClass="org.jetbrains.kotlin.idea.codeInsight.KotlinHighLevelExpressionTypeProvider"/>

    <codeInsight.implementMethod language="kotlin" implementationClass="org.jetbrains.kotlin.idea.core.overrideImplement.KtImplementMembersHandler"/>
    <codeInsight.overrideMethod language="kotlin" implementationClass="org.jetbrains.kotlin.idea.core.overrideImplement.KtOverrideMembersHandler"/>

    <codeInsight.parameterInfo language="kotlin"
                               implementationClass="org.jetbrains.kotlin.idea.parameterInfo.KotlinHighLevelFunctionParameterInfoHandler"/>
    <codeInsight.parameterInfo language="kotlin"
                               implementationClass="org.jetbrains.kotlin.idea.parameterInfo.KotlinHighLevelLambdaParameterInfoHandler"/>
    <codeInsight.parameterInfo language="kotlin"
                               implementationClass="org.jetbrains.kotlin.idea.parameterInfo.KotlinHighLevelArrayAccessParameterInfoHandler"/>
    <codeInsight.parameterInfo language="kotlin"
                               implementationClass="org.jetbrains.kotlin.idea.parameterInfo.KotlinHighLevelClassTypeArgumentInfoHandler"/>
    <codeInsight.parameterInfo language="kotlin"
                               implementationClass="org.jetbrains.kotlin.idea.parameterInfo.KotlinHighLevelFunctionTypeArgumentInfoHandler"/>
    <platform.backend.documentation.psiTargetProvider id="KotlinDocumentationTargetProvider"
                                                      implementation="org.jetbrains.kotlin.idea.quickDoc.KotlinPsiDocumentationTargetProvider"/>
    <platform.backend.documentation.linkHandler implementation="org.jetbrains.kotlin.idea.quickDoc.KotlinDocumentationLinkHandler"/>
    <platform.backend.documentation.targetProvider id="KotlinDocumentationTargetProvider"
                                                   implementation="org.jetbrains.kotlin.idea.quickDoc.KotlinDocumentationTargetProvider"/>
  </extensions>


  <extensionPoints>
    <extensionPoint qualifiedName="org.jetbrains.kotlin.resolveScopeEnlarger"
                    interface="org.jetbrains.kotlin.idea.base.projectStructure.KotlinResolveScopeEnlarger"/>
  </extensionPoints>


  <extensions defaultExtensionNs="com.intellij">
    <library.type implementation="org.jetbrains.kotlin.idea.base.platforms.library.JSLibraryType"/>

    <projectService serviceInterface="org.jetbrains.kotlin.resolve.jvm.modules.JavaModuleResolver"
                    serviceImplementation="org.jetbrains.kotlin.idea.modules.IdeJavaModuleResolver"/>
  </extensions>


  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceImplementation="org.jetbrains.kotlin.idea.completion.FirCompletionDummyIdentifierProviderService"
                        serviceInterface="org.jetbrains.kotlin.idea.completion.api.CompletionDummyIdentifierProviderService"/>

    <projectService
            serviceInterface="org.jetbrains.kotlin.psi.KotlinReferenceProvidersService"
            serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.references.HLApiReferenceProviderService"/>

    <iconProvider implementation="org.jetbrains.kotlin.idea.FirKotlinIconProvider"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.caches.resolve.IdePackageOracleFactory"/>

    <projectService serviceInterface="org.jetbrains.kotlin.load.kotlin.MetadataFinderFactory"
                    serviceImplementation="org.jetbrains.kotlin.idea.vfilefinder.IdeVirtualFileFinderFactory"/>
    <projectService serviceInterface="org.jetbrains.kotlin.load.kotlin.VirtualFileFinderFactory"
                    serviceImplementation="org.jetbrains.kotlin.idea.vfilefinder.IdeVirtualFileFinderFactory"/>

    <postStartupActivity implementation="org.jetbrains.kotlin.idea.PluginStartupActivity"/>
    <backgroundPostStartupActivity implementation="org.jetbrains.kotlin.idea.update.KotlinPluginUpdateCheckerStartActivity"/>

    <newProjectWizard.buildSystem.kotlin implementation="org.jetbrains.kotlin.tools.projectWizard.GradleKotlinBuildSystemType"/>
    <newProjectWizard.buildSystem.kotlin implementation="org.jetbrains.kotlin.tools.projectWizard.MavenKotlinBuildSystemType"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.completion.LookupCancelService"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.idea.migration.KotlinMigrationProjectService"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.base.projectStructure.libraryToSourceAnalysis.KotlinLibraryToSourceAnalysisStateComponent"/>

    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.base.highlighting.KotlinBeforeResolveHighlightingPass$Registrar"/>

    <targetElementEvaluator language="kotlin"
                            implementationClass="org.jetbrains.kotlin.idea.search.ideaExtensions.FirKotlinTargetElementEvaluator"/>
    <targetElementUtilExtender implementation="org.jetbrains.kotlin.idea.search.ideaExtensions.FirKotlinTargetElementEvaluator"/>

    <lang.elementManipulator forClass="org.jetbrains.kotlin.psi.KtStringTemplateExpression"
                             implementationClass="org.jetbrains.kotlin.psi.psiUtil.KtStringTemplateExpressionManipulator"/>

    <projectService serviceInterface="org.jetbrains.kotlin.idea.references.ReadWriteAccessChecker"
                    serviceImplementation="org.jetbrains.kotlin.idea.references.ReadWriteAccessCheckerDescriptorsFirImpl"/>

    <projectService serviceInterface="org.jetbrains.kotlin.idea.util.FirPluginOracleService"
                    serviceImplementation="org.jetbrains.kotlin.idea.util.FirPluginOracleServiceFirImpl"/>

    <applicationService serviceImplementation="org.jetbrains.kotlin.idea.codeinsight.api.applicators.fixes.KotlinQuickFixService"/>

    <lang.importOptimizer language="kotlin" implementationClass="org.jetbrains.kotlin.idea.imports.KotlinFirImportOptimizer"/>

    <applicationService
            serviceInterface="org.jetbrains.kotlin.analysis.decompiled.light.classes.origin.KotlinDeclarationInCompiledFileSearcher"
            serviceImplementation="org.jetbrains.kotlin.analysis.decompiled.light.classes.fe10.KotlinDeclarationInCompiledFileSearcherFE10Impl"/>

    <applicationService
            serviceInterface="org.jetbrains.kotlin.idea.inspections.suppress.KotlinSuppressionChecker"
            serviceImplementation="org.jetbrains.kotlin.idea.inspections.suppress.KotlinK2SuppressionChecker"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <buildProcess.parametersProvider implementation="org.jetbrains.kotlin.idea.compiler.configuration.KotlinBuildProcessParametersProvider"/>

    <applicationService serviceInterface="org.jetbrains.kotlin.idea.base.codeInsight.KotlinMainFunctionDetector"
                        serviceImplementation="org.jetbrains.kotlin.idea.base.fir.codeInsight.SymbolBasedKotlinMainFunctionDetector"/>

    <configurationType implementation="org.jetbrains.kotlin.idea.run.KotlinRunConfigurationType"/>
    <configurationType implementation="org.jetbrains.kotlin.idea.run.script.standalone.KotlinStandaloneScriptRunConfigurationType"/>
    <runConfigurationProducer implementation="org.jetbrains.kotlin.idea.run.KotlinRunConfigurationProducer"/>
    <runConfigurationProducer implementation="org.jetbrains.kotlin.idea.run.script.standalone.KotlinStandaloneScriptRunConfigurationProducer"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.configuration.ui.KotlinConfigurationCheckerService"/>

    <fileBasedIndex implementation="org.jetbrains.kotlin.idea.base.indices.names.KotlinTopLevelCallableByPackageShortNameIndex"/>
    <fileBasedIndex implementation="org.jetbrains.kotlin.idea.base.indices.names.KotlinTopLevelClassLikeDeclarationByPackageShortNameIndex"/>
  </extensions>

  <content>
    <module name="kotlin.base.analysis-api-providers"/>
    <module name="kotlin.base.fir.analysis-api-providers"/>
    <module name="kotlin.copyright"/>
    <module name="kotlin.coverage"/>
    <module name="kotlin.git"/>
    <module name="kotlin.grazie"/>
    <module name="kotlin.gradle.gradle-tooling"/>
    <module name="kotlin.maven"/>
    <module name="kotlin.ml-completion"/>
    <module name="kotlin.properties"/>
    <module name="kotlin.run-configurations.junit"/>
    <module name="kotlin.run-configurations.testng"/>
    <module name="kotlin.run-configurations.jvm"/>

    <module name="kotlin.gradle.gradle"/>
    <module name="kotlin.gradle.code-insight-common"/>
    <module name="kotlin.gradle.code-insight-groovy"/>
    <module name="kotlin.gradle.gradle-java"/>

    <module name="kotlin.project-wizard.idea"/>
    <module name="kotlin.project-wizard.gradle"/>
    <module name="kotlin.project-wizard.maven"/>
    <module name="kotlin.project-wizard.compose"/>

    <module name="kotlin.code-insight.intentions-shared"/>
    <module name="kotlin.code-insight.inspections-shared"/>
    <module name="kotlin.code-insight.live-templates-shared"/>
    <module name="kotlin.code-insight.intentions-k2"/>
    <module name="kotlin.code-insight.inspections-k2"/>
    <module name="kotlin.code-insight.k2"/>
    <module name="kotlin.code-insight.live-templates-k2"/>
    <module name="kotlin.code-insight.postfix-templates-k2"/>

    <module name="kotlin.searching.k2"/>
    <module name="kotlin.refactorings.k2"/>
    <module name="kotlin.refactorings.rename.k2"/>

    <module name="kotlin.navigation"/>
    <module name="kotlin.code-insight.line-markers-k2"/>
    <module name="kotlin.highlighting"/>

    <module name="kotlin.compiler-reference-index"/>
  </content>
</idea-plugin>
