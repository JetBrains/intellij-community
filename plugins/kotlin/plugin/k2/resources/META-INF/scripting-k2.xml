<idea-plugin>
  <applicationListeners>
    <listener class="org.jetbrains.kotlin.idea.core.script.k2.KotlinScriptDefinitionStatusBarWidgetListener"
              topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"/>
  </applicationListeners>

  <extensionPoints>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.kotlinScriptLazyResolveProhibitionCondition"
            interface="org.jetbrains.kotlin.idea.core.script.k2.KotlinScriptLazyResolveProhibitionCondition"
            area="IDEA_PROJECT"
            dynamic="true"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scriptDefinitionsSource"
            interface="org.jetbrains.kotlin.scripting.definitions.ScriptDefinitionsSource"
            area="IDEA_PROJECT"
            dynamic="true"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scriptConfigurationsSource"
            interface="org.jetbrains.kotlin.idea.core.script.k2.ScriptConfigurationsSource"
            area="IDEA_PROJECT"
            dynamic="true"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scriptDiagnosticFixProvider"
            interface="org.jetbrains.kotlin.idea.script.ScriptDiagnosticFixProvider"
            dynamic="true"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scripting.definitions.scriptDefinitionProvider"
            interface="org.jetbrains.kotlin.scripting.definitions.ScriptDefinitionProvider"
            area="IDEA_PROJECT"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scripting.idea.settings.provider"
            interface="org.jetbrains.kotlin.idea.script.configuration.ScriptingSupportSpecificSettingsProvider"
            dynamic="true"
            area="IDEA_PROJECT"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scriptAdditionalIdeaDependenciesProvider"
            interface="org.jetbrains.kotlin.idea.core.script.dependencies.ScriptAdditionalIdeaDependenciesProvider"
            area="IDEA_PROJECT"
            dynamic="true"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scripting.idea.scriptingSupport"
            interface="org.jetbrains.kotlin.idea.core.script.configuration.ScriptingSupport"
            area="IDEA_PROJECT"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scripting.idea.loader"
            interface="org.jetbrains.kotlin.idea.core.script.configuration.loader.ScriptConfigurationLoader"
            area="IDEA_PROJECT"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scripting.idea.listener"
            interface="org.jetbrains.kotlin.idea.core.script.configuration.listener.ScriptChangeListener"
            area="IDEA_PROJECT" dynamic="true"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.ideScriptConfigurationControlFacade"
            interface="kotlin.script.experimental.intellij.IdeScriptConfigurationControlFacade"
            area="IDEA_PROJECT"
            dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <statusBarWidgetFactory id="kotlin.script.definition"
                            implementation="org.jetbrains.kotlin.idea.core.script.k2.KotlinScriptDefinitionStatusBarWidgetFactory"
                            order="first"/>

    <projectConfigurable groupId="language"
                         bundle="messages.KotlinBundle"
                         key="kotlin.scripting.configurable"
                         id="preferences.language.Kotlin.scripting"
                         instance="org.jetbrains.kotlin.idea.script.k2.KotlinScriptingSettingsConfigurable"
                         parentId="preferences.language.Kotlin"/>

    <editorNotificationProvider implementation="org.jetbrains.kotlin.idea.script.k2.MainKtsScriptNotificationProvider"/>
    <editorNotificationProvider implementation="org.jetbrains.kotlin.idea.script.k2.ScriptingSupportChecker"/>

    <registryKey defaultValue="false"
                 key="kotlin.k2.scripting.show.modules"
                 description="Enable displaying Kotlin Script modules in 'Project Structure' | 'Modules' view "/>
    <registryKey
            key="kotlin.scripting.fs.roots.storage.enabled"
            description="Cache resolved dependencies paths across all scripts"
            defaultValue="false"
            restartRequired="true"/>

    <projectService serviceInterface="org.jetbrains.kotlin.scripting.definitions.ScriptDefinitionProvider"
                    serviceImplementation="org.jetbrains.kotlin.idea.core.script.k2.K2ScriptDefinitionProvider"/>

    <projectService serviceInterface="org.jetbrains.kotlin.idea.core.script.ScriptConfigurationManager"
                    serviceImplementation="org.jetbrains.kotlin.idea.core.script.configuration.CompositeScriptConfigurationManager"/>

    <projectService serviceInterface="org.jetbrains.kotlin.scripting.definitions.ScriptConfigurationsProvider"
                    serviceImplementation="org.jetbrains.kotlin.idea.core.script.k2.ScriptConfigurationsProviderImpl"/>

    <projectService serviceInterface="org.jetbrains.kotlin.scripting.resolve.ScriptReportSink"
                    serviceImplementation="org.jetbrains.kotlin.idea.core.script.KotlinScriptingReportsSink"/>

    <cachesInvalidator implementation="org.jetbrains.kotlin.idea.core.script.ucache.ScriptCacheDependenciesFileInvalidator"/>

    <trafficLightRendererContributor implementation="org.jetbrains.kotlin.idea.core.script.ScriptTrafficLightRendererContributor"/>

    <java.shortNamesCache
            implementation="org.jetbrains.kotlin.idea.core.script.dependencies.JavaClassesInScriptDependenciesShortNameCache"/>

    <psi.clsCustomNavigationPolicy
            implementation="org.jetbrains.kotlin.idea.core.script.dependencies.ScriptDependencySourceNavigationPolicyForJavaClasses"/>

    <resolveScopeProvider implementation="org.jetbrains.kotlin.idea.core.script.dependencies.KotlinScriptResolveScopeProvider"/>
    <resolveScopeProvider implementation="org.jetbrains.kotlin.idea.core.script.dependencies.ScriptDependenciesResolveScopeProvider"/>

    <workspaceModel.fileIndexContributor
            implementation="org.jetbrains.kotlin.idea.core.script.dependencies.KotlinScriptWorkspaceFileIndexContributor"/>

    <configuration.moduleStructureFilterExtension
            implementation="org.jetbrains.kotlin.idea.base.scripting.projectStructure.KotlinScriptsProjectStructureFilter"/>
  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <newFileHook implementation="org.jetbrains.kotlin.idea.script.k2.NewKotlinScriptHook"/>
    <ktModuleFactory implementation="org.jetbrains.kotlin.idea.base.scripting.projectStructure.ScriptingKaModuleFactory"/>

    <idea.base.platforms.targetPlatformDetector implementation="org.jetbrains.kotlin.idea.base.scripting.ScriptingTargetPlatformDetector"/>

    <idea.base.projectStructure.moduleInfoProviderExtension
            implementation="org.jetbrains.kotlin.idea.base.scripting.ScriptingModuleInfoProviderExtension"/>

    <scriptDefinitionsSource implementation="org.jetbrains.kotlin.idea.core.script.k2.MainKtsScriptDefinitionSource"/>
    <scriptConfigurationsSource implementation="org.jetbrains.kotlin.idea.core.script.k2.BundledScriptConfigurationsSource"/>
    <scriptConfigurationsSource implementation="org.jetbrains.kotlin.idea.core.script.k2.DependentScriptConfigurationsSource"/>

    <scriptDefinitionsSource implementation="org.jetbrains.kotlin.idea.core.script.BundledScriptDefinitionSource"/>

    <scriptDefinitionsSource implementation="org.jetbrains.kotlin.idea.script.k2.ScriptTemplatesFromDependenciesDefinitionSource"/>
  </extensions>

  <actions resource-bundle="messages.KotlinBaseScriptingBundle">
    <action id="LoadMainKtsConfiguration"
            class="org.jetbrains.kotlin.idea.script.k2.ReloadDependenciesScriptAction"
            icon="org.jetbrains.kotlin.idea.KotlinIcons.LOAD_SCRIPT_CONFIGURATION">
      <add-to-group group-id="EditorContextBarMenu"/>
    </action>
  </actions>
</idea-plugin>