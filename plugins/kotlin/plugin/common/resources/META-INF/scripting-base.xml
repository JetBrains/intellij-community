<idea-plugin>
  <extensionPoints>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scripting.idea.settings.provider"
            interface="org.jetbrains.kotlin.idea.script.configuration.ScriptingSupportSpecificSettingsProvider"
            dynamic="true"
            area="IDEA_PROJECT"/>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scriptAdditionalIdeaDependenciesProvider"
            interface="org.jetbrains.kotlin.idea.core.script.dependencies.ScriptAdditionalIdeaDependenciesProvider"
            area="IDEA_PROJECT"
            dynamic="true"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scripting.idea.scriptingSupport"
            interface="org.jetbrains.kotlin.idea.core.script.configuration.ScriptingSupport"
            area="IDEA_PROJECT"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scriptDiagnosticFixProvider"
            interface="org.jetbrains.kotlin.idea.script.ScriptDiagnosticFixProvider"
            dynamic="true"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scripting.idea.loader"
            interface="org.jetbrains.kotlin.idea.core.script.configuration.loader.ScriptConfigurationLoader"
            area="IDEA_PROJECT"/>

    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.scripting.idea.listener"
            interface="org.jetbrains.kotlin.idea.core.script.configuration.listener.ScriptChangeListener"
            area="IDEA_PROJECT" dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <projectService serviceInterface="org.jetbrains.kotlin.scripting.definitions.ScriptDefinitionProvider"
                    serviceImplementation="org.jetbrains.kotlin.idea.core.script.ScriptDefinitionsManager"/>

    <projectService serviceInterface="org.jetbrains.kotlin.idea.core.script.ScriptConfigurationManager"
                    serviceImplementation="org.jetbrains.kotlin.idea.core.script.configuration.CompositeScriptConfigurationManager"/>

    <projectService serviceInterface="org.jetbrains.kotlin.scripting.definitions.ScriptDependenciesProvider"
                    serviceImplementation="org.jetbrains.kotlin.idea.core.script.IdeScriptDependenciesProvider"/>

    <projectService serviceInterface="org.jetbrains.kotlin.scripting.resolve.ScriptReportSink"
                    serviceImplementation="org.jetbrains.kotlin.idea.core.script.IdeScriptReportSink"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.core.script.ScriptDependenciesModificationTracker"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.core.script.configuration.utils.ScriptClassRootsStorage"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.core.script.settings.KotlinScriptingSettings"/>

    <cachesInvalidator implementation="org.jetbrains.kotlin.idea.core.script.ucache.ScriptCacheDependenciesFileInvalidator"/>

    <trafficLightRendererContributor implementation="org.jetbrains.kotlin.idea.core.script.ScriptTrafficLightRendererContributor"/>

    <postStartupActivity implementation="org.jetbrains.kotlin.idea.core.script.LoadScriptDefinitionsStartupActivity" order="last"/>

    <java.elementFinder implementation="org.jetbrains.kotlin.idea.core.script.KotlinScriptDependenciesClassFinder" order="last"/>

    <java.shortNamesCache implementation="org.jetbrains.kotlin.idea.core.script.dependencies.JavaClassesInScriptDependenciesShortNameCache"/>

    <additionalLibraryRootsProvider implementation="org.jetbrains.kotlin.idea.core.script.dependencies.KotlinScriptDependenciesLibraryRootProvider"/>

    <psi.clsCustomNavigationPolicy implementation="org.jetbrains.kotlin.idea.core.script.dependencies.ScriptDependencySourceNavigationPolicyForJavaClasses"/>

    <resolveScopeProvider implementation="org.jetbrains.kotlin.idea.core.script.dependencies.KotlinScriptResolveScopeProvider"/>
    <resolveScopeProvider implementation="org.jetbrains.kotlin.idea.core.script.dependencies.ScriptDependenciesResolveScopeProvider"/>

    <workspaceModel.fileIndexContributor implementation="org.jetbrains.kotlin.idea.core.script.dependencies.KotlinScriptWorkspaceFileIndexContributor"/>
    <workspaceModel.cache.version implementation="org.jetbrains.kotlin.idea.core.script.ucache.KotlinScriptWorkspaceModelCacheVersion"/>

    <!--suppress PluginXmlValidity -->
    <customEntityProjectModelInfoProvider implementation="org.jetbrains.kotlin.idea.core.script.dependencies.KotlinScriptProjectModelInfoProvider"/>

    <indexableIteratorBuilderHandler implementation="org.jetbrains.kotlin.idea.core.script.ucache.KotlinScriptLibraryIndexableIteratorHandler"/>

    <!--suppress PluginXmlValidity -->
    <projectView.externalLibraries.workspaceModelNodesProvider implementation="org.jetbrains.kotlin.idea.core.script.KotlinScriptExternalLibrariesNodesProvider"/>

    <!--suppress PluginXmlValidity -->
    <indexableEntityProvider implementation="org.jetbrains.kotlin.idea.core.script.ucache.KotlinScriptDependencyIndexableEntityProvider"/>

    <registryKey
            key="kotlin.scripts.as.entities"
            description="Enables explicit script dependencies support"
            defaultValue="true"
            restartRequired="true"/>

    <registryKey
            key="kotlin.scripting.support.warning"
            description="Show Kotlin scripting support warning"
            defaultValue="true"
            restartRequired="false"/>

    <registryKey
            key="kotlin.resolve.scripting.limit.dependency.element.finder"
            description="Limit applicability of an element finder for scripting dependencies"
            defaultValue="true"
            restartRequired="true"/>

    <registryKey
            key="kotlin.scripting.fs.roots.storage.enabled"
            description="Cache resolved dependencies paths across all scripts"
            defaultValue="false"
            restartRequired="true"/>

    <registryKey
            key="kotlin.scripting.index.dependencies.sources"
            description="Index script dependencies sources eagerly (not deferred)"
            defaultValue="false"
            restartRequired="true"/>

    <registryKey
            key="kotlin.script.use.workspace.file.index.contributor.api"
            description="Use new WorkspaceFileIndexContributor API for custom entities. The flag is temporary, legacy API will be removed in the future."
            defaultValue="true"/>

    <fileType name="script-definition-marker" fieldName="INSTANCE"
              implementationClass="org.jetbrains.kotlin.idea.script.ScriptDefinitionMarkerFileType"/>
  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <ktModuleFactory implementation="org.jetbrains.kotlin.idea.base.scripting.projectStructure.ScriptingKtModuleFactory"/>

    <idea.base.platforms.targetPlatformDetector implementation="org.jetbrains.kotlin.idea.base.scripting.ScriptingTargetPlatformDetector"/>

    <idea.base.projectStructure.moduleInfoProviderExtension implementation="org.jetbrains.kotlin.idea.base.scripting.ScriptingModuleInfoProviderExtension"/>

    <scriptDefinitionContributor
            id="StandardScriptDefinitionContributor"
            order="last"
            implementation="org.jetbrains.kotlin.idea.core.script.StandardScriptDefinitionContributor"/>
  </extensions>
</idea-plugin>