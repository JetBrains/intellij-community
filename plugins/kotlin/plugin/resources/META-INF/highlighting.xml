<idea-plugin>
  <extensionPoints>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.highlighterExtension"
            interface="org.jetbrains.kotlin.idea.highlighter.HighlighterExtension"
            dynamic="true"/>
    <extensionPoint
            qualifiedName="org.jetbrains.kotlin.beforeResolveHighlightingVisitor"
            interface="org.jetbrains.kotlin.idea.highlighter.BeforeResolveHighlightingExtension"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <applicationService
            serviceInterface="org.jetbrains.kotlin.idea.references.KotlinReferenceProviderContributor"
            serviceImplementation="org.jetbrains.kotlin.idea.references.KotlinReferenceContributor"/>
    <applicationService
            serviceInterface="org.jetbrains.kotlin.psi.KotlinDeclarationNavigationPolicy"
            serviceImplementation="org.jetbrains.kotlin.idea.decompiler.navigation.KotlinDeclarationNavigationPolicyImpl"/>

    <lang.syntaxHighlighterFactory language="kotlin" implementationClass="org.jetbrains.kotlin.idea.highlighter.KotlinSyntaxHighlighterFactory"/>

    <syntaxHighlighter factoryClass="org.jetbrains.kotlin.idea.decompiler.builtIns.KotlinSyntaxHighlighterProviderForDecompiledBuiltIns"/>

    <lang.braceMatcher language="kotlin" implementationClass="org.jetbrains.kotlin.idea.KotlinPairMatcher"/>

    <lang.parserDefinition language="kotlin" implementationClass="org.jetbrains.kotlin.parsing.KotlinParserDefinition"/>

    <lang.commenter language="kotlin" implementationClass="org.jetbrains.kotlin.idea.KotlinCommenter"/>

    <highlightVisitor implementation="org.jetbrains.kotlin.idea.highlighter.KotlinHighlightVisitor"/>
    <highlightVisitor implementation="org.jetbrains.kotlin.idea.highlighter.KotlinRainbowVisitor"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.idea.highlighter.KotlinHighlightingSuspender"/>
    <editorNotificationProvider implementation="org.jetbrains.kotlin.idea.highlighter.KotlinHighlightingSuspendNotificationProvider"/>

    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.highlighter.KotlinBeforeResolveHighlightingPass$Registrar"/>
    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.highlighter.DebugInfoHighlightingPass$Registrar"/>
    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.highlighter.ScriptExternalHighlightingPass$Registrar"/>
    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.refactoring.cutPaste.MoveDeclarationsPassFactory$Registrar"/>

    <problemHighlightFilter implementation="org.jetbrains.kotlin.idea.highlighter.KotlinProblemHighlightFilter"/>
    <problemFileHighlightFilter implementation="org.jetbrains.kotlin.idea.projectView.KotlinProblemFileHighlightFilter"/>

    <daemon.changeLocalityDetector implementation="org.jetbrains.kotlin.idea.highlighter.KotlinChangeLocalityDetector"/>

    <defaultHighlightingSettingProvider implementation="org.jetbrains.kotlin.idea.highlighter.KotlinDefaultHighlightingSettingsProvider"/>

    <annotator language="JAVA" implementationClass="org.jetbrains.kotlin.idea.java.UnimplementedKotlinInterfaceMemberAnnotator"/>

    <colorSettingsPage implementation="org.jetbrains.kotlin.idea.highlighter.KotlinColorSettingsPage"/>

    <additionalTextAttributes scheme="Default" file="colorScheme/Default_Kotlin.xml"/>
    <additionalTextAttributes scheme="Darcula" file="colorScheme/Darcula_Kotlin.xml"/>

    <itemPresentationProvider
            implementationClass="org.jetbrains.kotlin.idea.presentation.KtFunctionPresenter"
            forClass="org.jetbrains.kotlin.psi.KtFunction"/>
    <itemPresentationProvider
            implementationClass="org.jetbrains.kotlin.idea.presentation.KtDefaultDeclarationPresenter"
            forClass="org.jetbrains.kotlin.psi.KtClass"/>
    <itemPresentationProvider
            implementationClass="org.jetbrains.kotlin.idea.presentation.KtDefaultDeclarationPresenter"
            forClass="org.jetbrains.kotlin.psi.KtObjectDeclaration"/>
    <itemPresentationProvider
            implementationClass="org.jetbrains.kotlin.idea.presentation.KtDefaultDeclarationPresenter"
            forClass="org.jetbrains.kotlin.psi.KtProperty"/>
    <itemPresentationProvider
            implementationClass="org.jetbrains.kotlin.idea.presentation.KtDefaultDeclarationPresenter"
            forClass="org.jetbrains.kotlin.psi.KtParameter"/>
    <itemPresentationProvider
            implementationClass="org.jetbrains.kotlin.idea.presentation.KtDefaultDeclarationPresenter"
            forClass="org.jetbrains.kotlin.psi.KtTypeAlias"/>
    <itemPresentationProvider
            implementationClass="org.jetbrains.kotlin.idea.presentation.KtJvmNameAnnotationPresenter"
            forClass="org.jetbrains.kotlin.psi.KtAnnotationEntry"/>

    <registryKey
            key="kotlin.resolve.force.full.resolve.on.highlighting"
            description="Force to perform full resolve on highlighting"
            defaultValue="true"
            restartRequired="false"/>
  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <highlighterExtension implementation="org.jetbrains.kotlin.idea.highlighter.dsl.DslHighlighterExtension"/>
  </extensions>
</idea-plugin>