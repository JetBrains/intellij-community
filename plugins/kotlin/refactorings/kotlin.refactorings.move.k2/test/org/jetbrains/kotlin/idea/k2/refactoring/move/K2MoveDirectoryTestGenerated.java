// Copyright 2000-2024 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.k2.refactoring.move;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.base.plugin.KotlinPluginMode;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("refactorings/kotlin.refactorings.move.k2")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("../../idea/tests/testData/refactoring/moveDirectory")
public class K2MoveDirectoryTestGenerated extends AbstractK2MoveDirectoryTest {
    @java.lang.Override
    @org.jetbrains.annotations.NotNull
    public final KotlinPluginMode getPluginMode() {
        return KotlinPluginMode.K2;
    }

    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("forLoop/forLoop.test")
    public void testForLoop_ForLoop() throws Exception {
        runTest("../../idea/tests/testData/refactoring/moveDirectory/forLoop/forLoop.test");
    }

    @TestMetadata("mixedJavaKotlinWithQuotation/mixedJavaKotlinWithQuotation.test")
    public void testMixedJavaKotlinWithQuotation_MixedJavaKotlinWithQuotation() throws Exception {
        runTest("../../idea/tests/testData/refactoring/moveDirectory/mixedJavaKotlinWithQuotation/mixedJavaKotlinWithQuotation.test");
    }

    @TestMetadata("mixedJavaKotlin/mixedJavaKotlin.test")
    public void testMixedJavaKotlin_MixedJavaKotlin() throws Exception {
        runTest("../../idea/tests/testData/refactoring/moveDirectory/mixedJavaKotlin/mixedJavaKotlin.test");
    }

    @TestMetadata("withTypeAliases/withTypeAliases.test")
    public void testWithTypeAliases_WithTypeAliases() throws Exception {
        runTest("../../idea/tests/testData/refactoring/moveDirectory/withTypeAliases/withTypeAliases.test");
    }
}
