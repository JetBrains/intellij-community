### auto-generated section `build kotlin.base.fir.scripting` start
load("//build:compiler-options.bzl", "create_kotlinc_options")
load("@rules_jvm//:jvm.bzl", "jvm_library", "jvm_resources")

create_kotlinc_options(
  name = "custom",
  opt_in = [
    "org.jetbrains.kotlin.analysis.api.KaExperimentalApi",
    "org.jetbrains.kotlin.analysis.api.KaPlatformInterface",
  ]
)

jvm_resources(
  name = "scripting_resources",
  files = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "scripting",
  module_name = "kotlin.base.fir.scripting",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True),
  kotlinc_opts = ":custom",
  deps = [
    "@lib//:kotlin-stdlib",
    "//platform/projectModel-api:projectModel",
    "//platform/workspace/storage",
    "//platform/backend/workspace",
    "//platform/core-api:core",
    "//plugins/kotlin/base/fir/analysis-api-platform",
    "//plugins/kotlin/base/project-structure",
    "//platform/projectModel-impl",
    "@lib//:kotlinc-analysis-api",
    "//platform/workspace/jps",
    "//java/java-impl:impl",
    "@lib//:kotlinc-analysis-api-platform-interface",
    "@lib//:kotlinc-kotlin-compiler-common",
    "//plugins/kotlin/base/util",
    "//plugins/kotlin/base/facet",
    "//plugins/kotlin/base/platforms",
    "@lib//:kotlinc-kotlin-jps-common",
    "@lib//:kotlinc-kotlin-script-runtime",
    "@lib//:kotlinc-kotlin-scripting-common",
    "@lib//:kotlinc-kotlin-scripting-jvm",
    "@lib//:kotlinc-kotlin-scripting-compiler-impl",
    "//plugins/kotlin/base/scripting",
    "//plugins/kotlin/base/fir/project-structure",
    "//plugins/kotlin/base/scripting.k2",
  ],
  runtime_deps = [":scripting_resources"]
)
### auto-generated section `build kotlin.base.fir.scripting` end