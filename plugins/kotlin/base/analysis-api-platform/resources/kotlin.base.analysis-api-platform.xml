<idea-plugin package="org.jetbrains.kotlin.idea.base.analysisApiPlatform">
  <extensions defaultExtensionNs="com.intellij">
    <applicationService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.permissions.KotlinAnalysisPermissionOptions"
            serviceImplementation="org.jetbrains.kotlin.analysis.api.platform.permissions.KotlinDefaultAnalysisPermissionOptions"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.KotlinPlatformSettings"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinPlatformSettings"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.lifetime.KotlinLifetimeTokenFactory"
            serviceImplementation="org.jetbrains.kotlin.analysis.api.platform.lifetime.KotlinReadActionConfinementLifetimeTokenFactory"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.declarations.KotlinDeclarationProviderFactory"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinDeclarationProviderFactory"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.declarations.KotlinDeclarationProviderMerger"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinDeclarationProviderMerger"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.declarations.KotlinAnnotationsResolverFactory"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinAnnotationsResolverFactory"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.packages.KotlinPackageProviderFactory"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinPackageProviderFactory"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.idea.base.analysisApiPlatform.KotlinModulePackageNamesProvider"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinModulePackageNamesProvider"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.packages.KotlinPackageProviderMerger"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinPackageProviderMerger"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.packages.KotlinPackagePartProviderFactory"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinPackagePartProviderFactory"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.projectStructure.KotlinResolutionScopeProvider"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinByModulesResolutionScopeProvider"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.projectStructure.KotlinGlobalSearchScopeMerger"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinGlobalSearchScopeMerger"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.statistics.KotlinOpenTelemetryProvider"
            serviceImplementation="org.jetbrains.kotlin.analysis.api.platform.statistics.KotlinGlobalOpenTelemetryProvider"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.projectStructure.KotlinModuleOutputProvider"
            serviceImplementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinModuleOutputProvider"/>

    <postStartupActivity
            implementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinStatisticsStartupActivity"/>
  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <kotlinResolutionScopeEnlarger implementation="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinResolveScopeEnlargerBridge"/>
  </extensions>

  <projectListeners>
    <listener
            class="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinModulePackageNamesProvider$ModuleStateModificationListener"
            topic="org.jetbrains.kotlin.analysis.api.platform.modification.KotlinModuleStateModificationListener"/>
    <listener
            class="org.jetbrains.kotlin.idea.base.analysisApiPlatform.IdeKotlinModulePackageNamesProvider$GlobalModuleStateModificationListener"
            topic="org.jetbrains.kotlin.analysis.api.platform.modification.KotlinGlobalModuleStateModificationListener"/>
  </projectListeners>
</idea-plugin>