facet.name.general=General

facet.column.name.options=Options
facet.column.name.plugin=Plugin

facet.name.compiler.plugins=Compiler Plugins
facet.text.following.options.are.not.correct=Following options are not correct:

facet.label.text.target.platform=Target platform:
facet.label.text.selected.target.platforms=Selected target platforms:
facet.label.text.the.project.is.imported.from.external.build.system.and.could.not.be.edited=The project is imported from external build system and could not be edited

facet.checkbox.text.use.project.settings=Use project settings

facet.label.text.project.settings.that.are.used.for.this.facet=Project settings that are used for this facet:

facet.text.multiplatform=Multiplatform

facet.link.text.edit.project.settings=Edit project settings

facet.error.text.at.least.one.target.platform.should.be.selected=At least one target platform should be selected

facet.text.following.arguments.are.redundant=Following arguments are redundant: {0}
facet.text.following.arguments.override.facet.settings=Following arguments override facet settings: {0}

facets.editor.general.tab.label.depends.on.0=Depends on: {0}.

configuration.description.plain.put.to.global.scope=Plain (put to global scope)

configuration.description.amd=AMD
configuration.description.commonjs=CommonJS
configuration.description.umd.detect.amd.or.commonjs.if.available.fallback.to.plain=UMD (detect AMD or CommonJS if available, fallback to plain)

configuration.description.always=Always
configuration.description.never=Never

configuration.description.when.inlining.a.function.from.other.module.with.embedded.sources=When inlining a function from other module with embedded sources

kotlin.compiler.js.option.output.prefix=File to &prepend to generated code:
configuration.title.kotlin.compiler.js.option.output.prefix.browse.title=Choose File to Prepend to Generated Code

kotlin.compiler.js.option.output.postfix=File to append to generated c&ode:
configuration.title.kotlin.compiler.js.option.output.postfix.browse.title=Choose File to Append to Generated Code

configuration.title.choose.output.directory=Choose Output Directory

configuration.warning.text.modules.override.project.settings={0} modules override project settings
configuration.warning.text.following.modules.override.project.settings=Following modules override project settings:
configuration.text.and=and
configuration.text.other.s=other(s)

loading.available.versions.from.maven=Loading available versions from Maven...
failed.fetching.all.available.versions.from.maven=Failed fetching all available versions from Maven

configuration.name.kotlin.compiler=Kotlin Compiler
configuration.text.bundled.0.jps.version=Bundled ({0})
configuration.text.0.unsupported.jps.version={0} (Unsupported)

deprecated.jvm.version=(deprecated)

configuration.warning.text.language.version.unsupported=Language version {0} is no longer supported
configuration.warning.text.api.version.unsupported=API version {0} is no longer supported

kotlin.compiler.option.generate.no.warnings=Report compiler &warnings
kotlin.compiler.option.additional.command.line.parameters=&Additional command line parameters:
additional.command.line.parameters=Additional command line parameters

kotlin.compiler.jvm.option.panel.title=Kotlin to JVM
kotlin.compiler.js.option.panel.title=Kotlin to JavaScript
kotlin.script.option.panel.title=Kotlin Script (Beta)

kotlin.compiler.js.option.generate.sourcemaps=Generate &source maps
embed.source.code.into.source.map=Embed source code into source map:

kotlin.compiler.js.option.output.copy.files=&Copy library runtime files

enable.incremental.compilation=Enable incremental compilation
keep.compiler.process.alive.between.invocations=Keep compiler process alive between invocations

module.kind=Module &kind:

destination.directory=&Destination directory
kotlin.compiler.lib=lib

kotlin.compiler.version=&Kotlin compiler version
target.jvm.version=Target &JVM version
language.version=&Language version
api.version=AP&I version