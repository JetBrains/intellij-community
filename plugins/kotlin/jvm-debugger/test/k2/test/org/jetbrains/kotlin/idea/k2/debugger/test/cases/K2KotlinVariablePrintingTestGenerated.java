// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.k2.debugger.test.cases;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("jvm-debugger/test/k2")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("../testData/variables")
public class K2KotlinVariablePrintingTestGenerated extends AbstractK2KotlinVariablePrintingTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("extractCapturesFromSuspendLambdas.kt")
    public void testExtractCapturesFromSuspendLambdas() throws Exception {
        runTest("../testData/variables/extractCapturesFromSuspendLambdas.kt");
    }

    @TestMetadata("nestedInlineFunctions.kt")
    public void testNestedInlineFunctions() throws Exception {
        runTest("../testData/variables/nestedInlineFunctions.kt");
    }

    @TestMetadata("optimisedVariablesInNestedFunctions.kt")
    public void testOptimisedVariablesInNestedFunctions() throws Exception {
        runTest("../testData/variables/optimisedVariablesInNestedFunctions.kt");
    }

    @TestMetadata("optimisedVariablesInSuspendContexts.kt")
    public void testOptimisedVariablesInSuspendContexts() throws Exception {
        runTest("../testData/variables/optimisedVariablesInSuspendContexts.kt");
    }

    @TestMetadata("optimisedVariablesInSuspendInline.kt")
    public void testOptimisedVariablesInSuspendInline() throws Exception {
        runTest("../testData/variables/optimisedVariablesInSuspendInline.kt");
    }

    @TestMetadata("optimisedVariablesWithLambdas.kt")
    public void testOptimisedVariablesWithLambdas() throws Exception {
        runTest("../testData/variables/optimisedVariablesWithLambdas.kt");
    }

    @TestMetadata("optimisedVariablesWithWhen.kt")
    public void testOptimisedVariablesWithWhen() throws Exception {
        runTest("../testData/variables/optimisedVariablesWithWhen.kt");
    }

    @TestMetadata("reentrantInlineFunctions.kt")
    public void testReentrantInlineFunctions() throws Exception {
        runTest("../testData/variables/reentrantInlineFunctions.kt");
    }
}
