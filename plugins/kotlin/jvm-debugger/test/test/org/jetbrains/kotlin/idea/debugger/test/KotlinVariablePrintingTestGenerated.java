// Copyright 2000-2021 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.

package org.jetbrains.kotlin.idea.debugger.test;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.test.TestRoot;
import org.junit.runner.RunWith;

/*
 * This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("jvm-debugger/test")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
@TestMetadata("testData/variables")
public class KotlinVariablePrintingTestGenerated extends AbstractKotlinVariablePrintingTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    @TestMetadata("optimisedVariablesInNestedFunctions.kt")
    public void testOptimisedVariablesInNestedFunctions() throws Exception {
        runTest("testData/variables/optimisedVariablesInNestedFunctions.kt");
    }

    @TestMetadata("optimisedVariablesInSuspendContexts.kt")
    public void testOptimisedVariablesInSuspendContexts() throws Exception {
        runTest("testData/variables/optimisedVariablesInSuspendContexts.kt");
    }

    @TestMetadata("optimisedVariablesInSuspendInline.kt")
    public void testOptimisedVariablesInSuspendInline() throws Exception {
        runTest("testData/variables/optimisedVariablesInSuspendInline.kt");
    }

    @TestMetadata("optimisedVariablesWithLambdas.kt")
    public void testOptimisedVariablesWithLambdas() throws Exception {
        runTest("testData/variables/optimisedVariablesWithLambdas.kt");
    }

    @TestMetadata("optimisedVariablesWithWhen.kt")
    public void testOptimisedVariablesWithWhen() throws Exception {
        runTest("testData/variables/optimisedVariablesWithWhen.kt");
    }
}
