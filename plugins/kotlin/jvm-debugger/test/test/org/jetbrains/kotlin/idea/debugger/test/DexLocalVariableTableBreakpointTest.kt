// Copyright 2000-2022 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.
package org.jetbrains.kotlin.idea.debugger.test

import org.jetbrains.kotlin.idea.debugger.test.mock.MockMethodInfo

@Suppress("SpellCheckingInspection")
class DexLocalVariableTableBreakpointTest : AbstractLocalVariableTableTest() {
    // ConeCapturedType.hashCode in ConeTypes.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/compiler/fir/cones/src/org/jetbrains/kotlin/fir/types/ConeTypes.kt#L223
    fun testConeCapturedTypeHashCode() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "hashCode",
                sourceNames = arrayOf(
                    "ConeTypes.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/fir/types/ConeCapturedType"
                ),
                variableNames = arrayOf(
                    "result:I",
                    "this:Lorg/jetbrains/kotlin/fir/types/ConeCapturedType;"
                ),
                allLineLocations = intArrayOf(
                    0,   223, 223, 0,
                    2,   224, 224, 0,
                    24,  225, 225, 0,
                    40,  226, 226, 0,
                    63,  226, 226, 0,
                    65,  227, 227, 0,
                    78,  228, 228, 0,
                    91,  229, 229, 0,
                ),
                localVariableTable = intArrayOf(
                    2,  91, 1,  0,
                    0,  93, 0,  1,
                ),
                kotlinDebugSegment = intArrayOf()
            ),
            dex = MockMethodInfo(
                name = "hashCode",
                sourceNames = arrayOf(
                    "ConeTypes.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/fir/types/ConeCapturedType"
                ),
                variableNames = arrayOf(
                    "result:I",
                    "this:Lorg/jetbrains/kotlin/fir/types/ConeCapturedType;"
                ),
                allLineLocations = intArrayOf(
                    0,   223, 223, 0,
                    2,   224, 224, 0,
                    24,  225, 225, 0,
                    40,  226, 226, 0,
                    63,  226, 226, 0,
                    65,  227, 227, 0,
                    78,  228, 228, 0,
                    91,  229, 229, 0,
                ),
                localVariableTable = intArrayOf(
                    2,  91, 1,  0,
                    0,  93, 0,  1,
                ),
                kotlinDebugSegment = intArrayOf()
            )
        )
    }

    // FastJarHandler.contentsToByteArray in FastJarHandler.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/compiler/cli/src/org/jetbrains/kotlin/cli/jvm/compiler/jarfs/FastJarHandler.kt#L97
    fun testFastJarHandlerContentsToByteArray() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "contentsToByteArray",
                sourceNames = arrayOf(
                    "FastJarHandler.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/cli/jvm/compiler/jarfs/FastJarHandler"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-synchronized-FastJarHandler\$contentsToByteArray\$1\$1:I",
                    "it:Lcom/intellij/util/io/FileAccessorCache\$Handle;",
                    "\$i\$a\$-use-FastJarHandler\$contentsToByteArray\$1:I",
                    "relativePath:Ljava/lang/CharSequence;",
                    "this:Lorg/jetbrains/kotlin/cli/jvm/compiler/jarfs/FastJarHandler;",
                    "zipEntryDescription:Lorg/jetbrains/kotlin/cli/jvm/compiler/jarfs/ZipEntryDescription;"
                ),
                allLineLocations = intArrayOf(
                    6,   97,  97,  0,
                    11,  98,  98,  0,
                    31,  98,  98,  0,
                    70,  99,  99,  0,
                    101, 100, 100, 0,
                    122, 101, 101, 0,
                    140, 100, 100, 0,
                    158, 99,  99,  0,
                    191, 99,  99,  0,
                ),
                localVariableTable = intArrayOf(
                    122, 18,  9,   0,
                    98,  60,  5,   1,
                    101, 57,  6,   2,
                    11,  181, 2,   3,
                    0,   192, 0,   4,
                    0,   192, 1,   5,
                ),
                kotlinDebugSegment = intArrayOf()
            ),
            dex = MockMethodInfo(
                name = "contentsToByteArray",
                sourceNames = arrayOf(
                    "FastJarHandler.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/cli/jvm/compiler/jarfs/FastJarHandler"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-synchronized-FastJarHandler\$contentsToByteArray\$1\$1:I",
                    "it:Lcom/intellij/util/io/FileAccessorCache\$Handle;",
                    "\$i\$a\$-use-FastJarHandler\$contentsToByteArray\$1:I",
                    "relativePath:Ljava/lang/CharSequence;",
                    "this:Lorg/jetbrains/kotlin/cli/jvm/compiler/jarfs/FastJarHandler;",
                    "zipEntryDescription:Lorg/jetbrains/kotlin/cli/jvm/compiler/jarfs/ZipEntryDescription;"
                ),
                allLineLocations = intArrayOf(
                    6,   97,  97,  0,
                    11,  98,  98,  0,
                    31,  98,  98,  0,
                    70,  99,  99,  0,
                    101, 100, 100, 0,
                    122, 101, 101, 0,
                    140, 100, 100, 0,
                    158, 99,  99,  0,
                    191, 99,  99,  0,
                ),
                localVariableTable = intArrayOf(
                    122, 18,  9,   0,
                    98,  60,  5,   1,
                    101, 57,  6,   2,
                    11,  181, 2,   3,
                    0,   192, 0,   4,
                    0,   192, 1,   5,
                ),
                kotlinDebugSegment = intArrayOf()
            )
        )
    }

    // K2JSDce.copyResource in K2JSDce.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/compiler/cli/cli-js/src/org/jetbrains/kotlin/cli/js/dce/K2JSDce.kt#L116
    fun testK2JSDceCopyResource() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "copyResource",
                sourceNames = arrayOf(
                    "K2JSDce.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/cli/js/dce/K2JSDce"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-use-K2JSDce\$copyResource\$1\$1:I",
                    "output:Ljava/io/FileOutputStream;",
                    "\$i\$a\$-use-K2JSDce\$copyResource\$1:I",
                    "input:Ljava/io/InputStream;",
                    "this:Lorg/jetbrains/kotlin/cli/js/dce/K2JSDce;",
                    "resource:Lorg/jetbrains/kotlin/js/dce/InputResource;",
                    "targetFile:Ljava/io/File;",
                    "overwriteOnlyOlderFiles:Z"
                ),
                allLineLocations = intArrayOf(
                    0,   116, 116, 0,
                    35,  118, 118, 0,
                    43,  119, 119, 0,
                    71,  120, 120, 0,
                    98,  121, 121, 0,
                    111, 120, 120, 0,
                    146, 120, 120, 0,
                    147, 119, 119, 0,
                    183, 124, 124, 0,
                ),
                localVariableTable = intArrayOf(
                    98,  13,  13,  0,
                    95,  16,  11,  1,
                    71,  76,  8,   2,
                    68,  79,  6,   3,
                    0,   184, 0,   4,
                    0,   184, 1,   5,
                    0,   184, 2,   6,
                    0,   184, 3,   7,
                ),
                kotlinDebugSegment = intArrayOf()
            ),
            dex = MockMethodInfo(
                name = "copyResource",
                sourceNames = arrayOf(
                    "K2JSDce.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/cli/js/dce/K2JSDce"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-use-K2JSDce\$copyResource\$1\$1:I",
                    "output:Ljava/io/FileOutputStream;",
                    "\$i\$a\$-use-K2JSDce\$copyResource\$1:I",
                    "input:Ljava/io/InputStream;",
                    "this:Lorg/jetbrains/kotlin/cli/js/dce/K2JSDce;",
                    "resource:Lorg/jetbrains/kotlin/js/dce/InputResource;",
                    "targetFile:Ljava/io/File;",
                    "overwriteOnlyOlderFiles:Z"
                ),
                allLineLocations = intArrayOf(
                    0,   116, 116, 0,
                    35,  118, 118, 0,
                    43,  119, 119, 0,
                    71,  120, 120, 0,
                    98,  121, 121, 0,
                    111, 120, 120, 0,
                    146, 120, 120, 0,
                    147, 119, 119, 0,
                    183, 124, 124, 0,
                ),
                localVariableTable = intArrayOf(
                    98,  13,  13,  0,
                    95,  16,  11,  1,
                    71,  76,  8,   2,
                    68,  79,  6,   3,
                    0,   184, 0,   4,
                    0,   184, 1,   5,
                    0,   184, 2,   6,
                    0,   184, 3,   7,
                ),
                kotlinDebugSegment = intArrayOf()
            )
        )
    }

    // NewResolutionOldInference.convertToOverloadResults in NewResolutionOldInference.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/compiler/frontend/src/org/jetbrains/kotlin/resolve/calls/tower/NewResolutionOldInference.kt#L276
    fun testNewResolutionOldInferenceConvertToOverloadResults() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "convertToOverloadResults",
                sourceNames = arrayOf(
                    "NewResolutionOldInference.kt",
                    "_Collections.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/resolve/calls/tower/NewResolutionOldInference",
                    "kotlin/collections/CollectionsKt___CollectionsKt"
                ),
                variableNames = arrayOf(
                    "error:Lorg/jetbrains/kotlin/resolve/calls/model/KotlinCallDiagnostic;",
                    "\$i\$a\$-map-NewResolutionOldInference\$convertToOverloadResults\$resolvedCalls\$1:I",
                    "diagnostics:Ljava/util/List;",
                    "resolvedCall:Lorg/jetbrains/kotlin/resolve/calls/model/MutableResolvedCall;",
                    "it:Lorg/jetbrains/kotlin/resolve/calls/tower/NewResolutionOldInference\$MyCandidate;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "resolvedCalls:Ljava/util/List;",
                    "this:Lorg/jetbrains/kotlin/resolve/calls/tower/NewResolutionOldInference;",
                    "candidates:Ljava/util/Collection;",
                    "tracing:Lorg/jetbrains/kotlin/resolve/calls/tasks/TracingStrategy;",
                    "basicCallContext:Lorg/jetbrains/kotlin/resolve/calls/context/BasicCallResolutionContext;"
                ),
                allLineLocations = intArrayOf(
                    0,    276,  276,  0,
                    9,    700,  1547, 1,
                    35,   701,  1618, 1,
                    63,   702,  1619, 1,
                    77,   277,  277,  0,
                    91,   278,  278,  0,
                    99,   280,  280,  0,
                    132,  281,  281,  0,
                    159,  283,  283,  0,
                    210,  285,  285,  0,
                    258,  288,  288,  0,
                    279,  289,  289,  0,
                    300,  292,  292,  0,
                    313,  293,  293,  0,
                    344,  294,  294,  0,
                    348,  295,  295,  0,
                    363,  296,  296,  0,
                    366,  297,  297,  0,
                    381,  298,  298,  0,
                    389,  296,  296,  0,
                    394,  298,  298,  0,
                    407,  295,  295,  0,
                    413,  302,  302,  0,
                    422,  303,  303,  0,
                    432,  304,  304,  0,
                    440,  305,  305,  0,
                    447,  302,  302,  0,
                    455,  308,  308,  0,
                    463,  313,  313,  0,
                    471,  315,  315,  0,
                    499,  316,  316,  0,
                    535,  314,  314,  0,
                    541,  324,  324,  0,
                    555,  703,  1620, 1,
                    560,  700,  1547, 1,
                    561,  276,  276,  0,
                    563,  327,  327,  0,
                ),
                localVariableTable = intArrayOf(
                    344, 194, 17,  0,
                    77,  466, 13,  1,
                    84,  459, 14,  2,
                    91,  452, 15,  3,
                    74,  469, 12,  4,
                    63,  489, 11,  5,
                    35,  522, 9,   6,
                    32,  525, 7,   7,
                    32,  525, 8,   8,
                    9,   552, 6,   9,
                    6,   555, 5,   10,
                    563, 29,  4,   11,
                    0,   592, 0,   12,
                    0,   592, 1,   13,
                    0,   592, 2,   14,
                    0,   592, 3,   15,
                ),
                kotlinDebugSegment = intArrayOf(
                    1,   276, 0,
                    2,   276, 0,
                    3,   276, 0,
                    33,  276, 0,
                    34,  276, 0,
                )
            ),
            dex = MockMethodInfo(
                name = "convertToOverloadResults",
                sourceNames = arrayOf(
                    "NewResolutionOldInference.kt",
                    "_Collections.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/resolve/calls/tower/NewResolutionOldInference",
                    "kotlin/collections/CollectionsKt___CollectionsKt"
                ),
                variableNames = arrayOf(
                    "error:Lorg/jetbrains/kotlin/resolve/calls/model/KotlinCallDiagnostic;",
                    "\$i\$a\$-map-NewResolutionOldInference\$convertToOverloadResults\$resolvedCalls\$1:I",
                    "diagnostics:Ljava/util/List;",
                    "resolvedCall:Lorg/jetbrains/kotlin/resolve/calls/model/MutableResolvedCall;",
                    "it:Lorg/jetbrains/kotlin/resolve/calls/tower/NewResolutionOldInference\$MyCandidate;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "resolvedCalls:Ljava/util/List;",
                    "this:Lorg/jetbrains/kotlin/resolve/calls/tower/NewResolutionOldInference;",
                    "candidates:Ljava/util/Collection;",
                    "tracing:Lorg/jetbrains/kotlin/resolve/calls/tasks/TracingStrategy;",
                    "basicCallContext:Lorg/jetbrains/kotlin/resolve/calls/context/BasicCallResolutionContext;"
                ),
                allLineLocations = intArrayOf(
                    0,    276,  276,  0,
                    9,    700,  1547, 1,
                    35,   701,  1618, 1,
                    63,   702,  1619, 1,
                    77,   277,  277,  0,
                    91,   278,  278,  0,
                    99,   280,  280,  0,
                    132,  281,  281,  0,
                    159,  283,  283,  0,
                    210,  285,  285,  0,
                    258,  288,  288,  0,
                    279,  289,  289,  0,
                    300,  292,  292,  0,
                    313,  293,  293,  0,
                    344,  294,  294,  0,
                    348,  295,  295,  0,
                    363,  296,  296,  0,
                    366,  297,  297,  0,
                    381,  298,  298,  0,
                    389,  296,  296,  0,
                    394,  298,  298,  0,
                    407,  295,  295,  0,
                    413,  302,  302,  0,
                    422,  303,  303,  0,
                    432,  304,  304,  0,
                    440,  305,  305,  0,
                    447,  302,  302,  0,
                    455,  308,  308,  0,
                    463,  313,  313,  0,
                    471,  315,  315,  0,
                    499,  316,  316,  0,
                    535,  314,  314,  0,
                    541,  324,  324,  0,
                    555,  703,  1620, 1,
                    560,  700,  1547, 1,
                    561,  276,  276,  0,
                    563,  327,  327,  0,
                ),
                localVariableTable = intArrayOf(
                    344, 194, 17,  0,
                    77,  466, 13,  1,
                    84,  459, 14,  2,
                    91,  452, 15,  3,
                    74,  469, 12,  4,
                    63,  489, 11,  5,
                    35,  522, 9,   6,
                    32,  525, 7,   7,
                    32,  525, 8,   8,
                    9,   552, 6,   9,
                    6,   555, 5,   10,
                    563, 29,  4,   11,
                    0,   592, 0,   12,
                    0,   592, 1,   13,
                    0,   592, 2,   14,
                    0,   592, 3,   15,
                ),
                kotlinDebugSegment = intArrayOf(
                    1,   276, 0,
                    2,   276, 0,
                    3,   276, 0,
                    33,  276, 0,
                    34,  276, 0,
                )
            )
        )
    }

    // DeprecationResolver.getDeprecationByVersionRequirement in DeprecationResolver.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/compiler/frontend/src/org/jetbrains/kotlin/resolve/deprecation/DeprecationResolver.kt#L283
    fun testDeprecationResolverGetDeprecationByVersionRequirement() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "getDeprecationByVersionRequirement",
                sourceNames = arrayOf(
                    "DeprecationResolver.kt",
                    "_Collections.kt",
                    "fake.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/resolve/deprecation/DeprecationResolver",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "kotlin/jvm/internal/FakeKt"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-let-DeprecationResolver\$getDeprecationByVersionRequirement\$1\$currentVersion\$1:I",
                    "p0:Ljava/lang/String;",
                    "\$i\$a\$-mapNotNull-DeprecationResolver\$getDeprecationByVersionRequirement\$1:I",
                    "requiredVersion:Lorg/jetbrains/kotlin/config/MavenComparableVersion;",
                    "currentVersion:Lorg/jetbrains/kotlin/config/MavenComparableVersion;",
                    "versionRequirement:Lorg/jetbrains/kotlin/metadata/deserialization/VersionRequirement;",
                    "\$i\$a\$-let-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$1\$iv\$iv:I",
                    "it\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$a\$-forEach-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$iv\$iv:I",
                    "element\$iv\$iv:Ljava/lang/Object;",
                    "element\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$forEach:I",
                    "\$this\$forEach\$iv\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$mapNotNullTo:I",
                    "\$this\$mapNotNullTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$mapNotNull:I",
                    "\$this\$mapNotNull\$iv:Ljava/lang/Iterable;",
                    "versionRequirements:Ljava/util/List;",
                    "this:Lorg/jetbrains/kotlin/resolve/deprecation/DeprecationResolver;",
                    "target:Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;"
                ),
                allLineLocations = intArrayOf(
                    0,    283,  283,  0,
                    28,   284,  284,  0,
                    54,   283,  283,  0,
                    56,   285,  285,  0,
                    60,   283,  283,  0,
                    60,   282,  282,  0,
                    61,   287,  287,  0,
                    69,   324,  1601, 1,
                    87,   332,  1609, 1,
                    94,   333,  1849, 1,
                    129,  332,  1609, 1,
                    139,  288,  288,  0,
                    152,  289,  289,  0,
                    192,  291,  291,  0,
                    214,  293,  293,  0,
                    229,  295,  295,  0,
                    262,  322,  1,    2,
                    265,  295,  295,  0,
                    270,  295,  295,  0,
                    273,  295,  295,  0,
                    278,  296,  296,  0,
                    279,  289,  289,  0,
                    281,  298,  298,  0,
                    296,  299,  299,  0,
                    309,  301,  301,  0,
                    310,  298,  298,  0,
                    317,  334,  1,    2,
                    320,  332,  1609, 1,
                    330,  332,  1609, 1,
                    333,  332,  1609, 1,
                    337,  335,  1850, 1,
                    338,  336,  1610, 1,
                    343,  324,  1601, 1,
                    344,  287,  287,  0,
                ),
                localVariableTable = intArrayOf(
                    265, 5,   19,  0,
                    262, 8,   18,  1,
                    139, 172, 15,  2,
                    152, 159, 16,  3,
                    281, 30,  20,  4,
                    136, 175, 14,  5,
                    320, 10,  22,  6,
                    317, 13,  21,  7,
                    129, 205, 13,  8,
                    126, 208, 12,  9,
                    122, 212, 11,  10,
                    94,  244, 9,   11,
                    91,  247, 8,   12,
                    87,  253, 7,   13,
                    84,  256, 5,   14,
                    84,  256, 6,   15,
                    69,  275, 4,   16,
                    66,  278, 3,   17,
                    61,  284, 2,   18,
                    0,   345, 0,   19,
                    0,   345, 1,   20,
                ),
                kotlinDebugSegment = intArrayOf(
                    7,   287, 0,
                    8,   287, 0,
                    9,   287, 0,
                    10,  287, 0,
                    26,  287, 0,
                    27,  287, 0,
                    28,  287, 0,
                    29,  287, 0,
                    30,  287, 0,
                    31,  287, 0,
                    32,  287, 0,
                )
            ),
            dex = MockMethodInfo(
                name = "getDeprecationByVersionRequirement",
                sourceNames = arrayOf(
                    "DeprecationResolver.kt",
                    "_Collections.kt",
                    "fake.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/resolve/deprecation/DeprecationResolver",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "kotlin/jvm/internal/FakeKt"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-let-DeprecationResolver\$getDeprecationByVersionRequirement\$1\$currentVersion\$1:I",
                    "p0:Ljava/lang/String;",
                    "\$i\$a\$-mapNotNull-DeprecationResolver\$getDeprecationByVersionRequirement\$1:I",
                    "requiredVersion:Lorg/jetbrains/kotlin/config/MavenComparableVersion;",
                    "currentVersion:Lorg/jetbrains/kotlin/config/MavenComparableVersion;",
                    "versionRequirement:Lorg/jetbrains/kotlin/metadata/deserialization/VersionRequirement;",
                    "\$i\$a\$-let-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$1\$iv\$iv:I",
                    "it\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$a\$-forEach-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$iv\$iv:I",
                    "element\$iv\$iv:Ljava/lang/Object;",
                    "element\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$forEach:I",
                    "\$this\$forEach\$iv\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$mapNotNullTo:I",
                    "\$this\$mapNotNullTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$mapNotNull:I",
                    "\$this\$mapNotNull\$iv:Ljava/lang/Iterable;",
                    "versionRequirements:Ljava/util/List;",
                    "this:Lorg/jetbrains/kotlin/resolve/deprecation/DeprecationResolver;",
                    "target:Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;"
                ),
                allLineLocations = intArrayOf(
                    0,    283,  283,  0,
                    28,   284,  284,  0,
                    54,   283,  283,  0,
                    56,   285,  285,  0,
                    60,   283,  283,  0,
                    60,   282,  282,  0,
                    61,   287,  287,  0,
                    69,   324,  1601, 1,
                    87,   332,  1609, 1,
                    94,   333,  1849, 1,
                    129,  332,  1609, 1,
                    139,  288,  288,  0,
                    152,  289,  289,  0,
                    192,  291,  291,  0,
                    214,  293,  293,  0,
                    229,  295,  295,  0,
                    262,  322,  1,    2,
                    265,  295,  295,  0,
                    270,  295,  295,  0,
                    273,  295,  295,  0,
                    278,  296,  296,  0,
                    279,  289,  289,  0,
                    281,  298,  298,  0,
                    296,  299,  299,  0,
                    309,  301,  301,  0,
                    310,  298,  298,  0,
                    317,  334,  1,    2,
                    320,  332,  1609, 1,
                    330,  332,  1609, 1,
                    333,  332,  1609, 1,
                    337,  335,  1850, 1,
                    338,  336,  1610, 1,
                    343,  324,  1601, 1,
                    344,  287,  287,  0,
                ),
                localVariableTable = intArrayOf(
                    265, 5,   19,  0,
                    262, 8,   18,  1,
                    139, 172, 15,  2,
                    152, 159, 16,  3,
                    281, 30,  20,  4,
                    136, 175, 14,  5,
                    320, 10,  22,  6,
                    317, 13,  21,  7,
                    129, 205, 13,  8,
                    126, 208, 12,  9,
                    122, 212, 11,  10,
                    94,  244, 9,   11,
                    91,  247, 8,   12,
                    87,  253, 7,   13,
                    84,  256, 5,   14,
                    84,  256, 6,   15,
                    69,  275, 4,   16,
                    66,  278, 3,   17,
                    61,  284, 2,   18,
                    0,   345, 0,   19,
                    0,   345, 1,   20,
                ),
                kotlinDebugSegment = intArrayOf(
                    7,   287, 0,
                    8,   287, 0,
                    9,   287, 0,
                    10,  287, 0,
                    26,  287, 0,
                    27,  287, 0,
                    28,  287, 0,
                    29,  287, 0,
                    30,  287, 0,
                    31,  287, 0,
                    32,  287, 0,
                )
            )
        )
    }

    // ClassTranslator.emitConstructors in ClassTranslator.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/js/js.translator/src/org/jetbrains/kotlin/js/translate/declaration/ClassTranslator.kt#L367
    fun testClassTranslatorEmitConstructors() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "emitConstructors",
                sourceNames = arrayOf(
                    "ClassTranslator.kt",
                    "_Collections.kt",
                    "Maps.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/js/translate/declaration/ClassTranslator",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "kotlin/collections/MapsKt__MapsKt"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-groupBy-ClassTranslator\$emitConstructors\$callSiteMap\$1:I",
                    "constructor:Lorg/jetbrains/kotlin/descriptors/ConstructorDescriptor;",
                    "result:Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;",
                    "it:Lorg/jetbrains/kotlin/js/translate/context/DeferredCallSite;",
                    "\$i\$a\$-getOrPut-CollectionsKt___CollectionsKt\$groupByTo\$list\$1\$iv\$iv:I",
                    "answer\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$getOrPut:I",
                    "value\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$this\$getOrPut\$iv\$iv\$iv:Ljava/util/Map;",
                    "key\$iv\$iv:Ljava/lang/Object;",
                    "list\$iv\$iv:Ljava/util/List;",
                    "element\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$groupByTo:I",
                    "\$this\$groupByTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Map;",
                    "\$i\$f\$groupBy:I",
                    "\$this\$groupBy\$iv:Ljava/lang/Iterable;",
                    "callee:Lorg/jetbrains/kotlin/js/translate/declaration/ClassTranslator\$ConstructorInfo;",
                    "resolvedCall:Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;",
                    "\$i\$a\$-map-ClassTranslator\$emitConstructors\$thisCalls\$1:I",
                    "set:Ljava/util/Set;",
                    "descriptor:Lorg/jetbrains/kotlin/descriptors/MemberDescriptor;",
                    "it:Lorg/jetbrains/kotlin/js/translate/declaration/ClassTranslator\$ConstructorInfo;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-forEach-ClassTranslator\$emitConstructors\$1:I",
                    "it:Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;",
                    "element\$iv:Ljava/lang/Object;",
                    "\$i\$f\$forEach:I",
                    "\$this\$forEach\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-flatMap-ClassTranslator\$emitConstructors\$closureArgs\$1:I",
                    "result:Ljava/util/List;",
                    "name:Lorg/jetbrains/kotlin/js/backend/ast/JsName;",
                    "list\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$flatMapTo:I",
                    "\$this\$flatMapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$flatMap:I",
                    "\$this\$flatMap\$iv:Ljava/lang/Iterable;",
                    "closureQualifier:Lorg/jetbrains/kotlin/js/backend/ast/JsExpression;",
                    "closureArgs:Ljava/util/List;",
                    "callSite:Lorg/jetbrains/kotlin/js/translate/context/DeferredCallSite;",
                    "nonConstructorUsageTracker:Lorg/jetbrains/kotlin/js/translate/context/UsageTracker;",
                    "usageTracker:Lorg/jetbrains/kotlin/js/translate/context/UsageTracker;",
                    "nonConstructorCapturedVars:Ljava/util/Set;",
                    "constructorCapturedVars:Ljava/util/Set;",
                    "capturedVars:Ljava/util/List;",
                    "classDescriptor:Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;",
                    "constructorCallSites:Ljava/util/List;",
                    "constructor:Lorg/jetbrains/kotlin/js/translate/declaration/ClassTranslator\$ConstructorInfo;",
                    "constructorMap:Ljava/util/Map;",
                    "callSiteMap:Ljava/util/Map;",
                    "thisCalls:Ljava/util/Map;",
                    "sortedConstructors:Ljava/util/List;",
                    "this:Lorg/jetbrains/kotlin/js/translate/declaration/ClassTranslator;",
                    "nonConstructorContext:Lorg/jetbrains/kotlin/js/translate/context/TranslationContext;",
                    "callSites:Ljava/util/List;"
                ),
                allLineLocations = intArrayOf(
                    0,    367,  367,  0,
                    17,   369,  369,  0,
                    26,   635,  1475, 1,
                    45,   636,  1500, 1,
                    73,   637,  1501, 1,
                    83,   370,  370,  0,
                    90,   371,  371,  0,
                    127,  372,  372,  0,
                    131,  638,  1502, 1,
                    138,  639,  357,  2,
                    149,  640,  358,  2,
                    154,  641,  359,  2,
                    157,  638,  1502, 1,
                    169,  642,  360,  2,
                    181,  643,  361,  2,
                    186,  645,  363,  2,
                    188,  640,  358,  2,
                    189,  638,  1502, 1,
                    194,  646,  1503, 1,
                    207,  648,  1505, 1,
                    209,  635,  1475, 1,
                    210,  369,  369,  0,
                    212,  375,  375,  0,
                    224,  649,  1547, 1,
                    250,  650,  1618, 1,
                    278,  651,  1619, 1,
                    292,  376,  376,  0,
                    302,  376,  376,  0,
                    304,  377,  377,  0,
                    311,  378,  378,  0,
                    319,  379,  379,  0,
                    336,  380,  380,  0,
                    341,  381,  381,  0,
                    359,  382,  382,  0,
                    364,  383,  383,  0,
                    377,  387,  387,  0,
                    400,  652,  1620, 1,
                    405,  649,  1547, 1,
                    409,  388,  388,  0,
                    412,  375,  375,  0,
                    414,  390,  390,  0,
                    446,  391,  391,  0,
                    477,  392,  392,  0,
                    488,  394,  394,  0,
                    494,  395,  395,  0,
                    508,  397,  397,  0,
                    530,  397,  397,  0,
                    532,  398,  398,  0,
                    539,  400,  400,  0,
                    557,  402,  402,  0,
                    564,  403,  403,  0,
                    584,  404,  404,  0,
                    592,  406,  406,  0,
                    615,  406,  406,  0,
                    617,  408,  408,  0,
                    648,  409,  409,  0,
                    675,  410,  410,  0,
                    685,  653,  1849, 1,
                    723,  410,  410,  0,
                    737,  654,  1850, 1,
                    738,  411,  411,  0,
                    748,  655,  1358, 1,
                    767,  656,  1444, 1,
                    795,  657,  1445, 1,
                    805,  412,  412,  0,
                    815,  412,  412,  0,
                    817,  413,  413,  0,
                    834,  414,  414,  0,
                    852,  415,  415,  0,
                    860,  416,  416,  0,
                    895,  418,  418,  0,
                    902,  658,  1446, 1,
                    913,  660,  1448, 1,
                    918,  655,  1358, 1,
                    919,  411,  411,  0,
                    921,  420,  420,  0,
                    941,  423,  423,  0,
                ),
                localVariableTable = intArrayOf(
                    83,  46,  13,  0,
                    90,  39,  14,  1,
                    127, 2,   15,  2,
                    80,  49,  12,  3,
                    157, 10,  20,  4,
                    169, 14,  20,  5,
                    138, 51,  18,  6,
                    149, 40,  19,  7,
                    135, 54,  17,  8,
                    131, 73,  16,  9,
                    194, 10,  12,  10,
                    73,  131, 11,  11,
                    45,  164, 9,   12,
                    42,  167, 7,   13,
                    42,  167, 8,   14,
                    26,  184, 6,   15,
                    23,  187, 5,   16,
                    359, 18,  18,  17,
                    336, 41,  17,  18,
                    292, 96,  14,  19,
                    304, 84,  15,  20,
                    311, 77,  16,  21,
                    289, 99,  13,  22,
                    278, 119, 12,  23,
                    250, 152, 10,  24,
                    247, 155, 8,   25,
                    247, 155, 9,   26,
                    224, 182, 7,   27,
                    221, 185, 6,   28,
                    723, 11,  25,  29,
                    720, 14,  24,  30,
                    713, 21,  23,  31,
                    685, 53,  21,  32,
                    682, 56,  20,  33,
                    805, 92,  29,  34,
                    817, 80,  30,  35,
                    834, 63,  31,  36,
                    802, 95,  28,  30,
                    902, 8,   28,  37,
                    795, 115, 27,  11,
                    767, 148, 25,  38,
                    764, 151, 23,  39,
                    764, 151, 24,  26,
                    748, 171, 22,  40,
                    745, 174, 21,  41,
                    675, 263, 19,  42,
                    921, 17,  20,  43,
                    648, 290, 18,  44,
                    494, 447, 9,   45,
                    508, 433, 10,  46,
                    532, 409, 11,  47,
                    539, 402, 12,  48,
                    557, 384, 13,  49,
                    564, 377, 14,  21,
                    584, 357, 15,  50,
                    617, 324, 16,  51,
                    477, 464, 8,   52,
                    17,  925, 3,   53,
                    212, 730, 4,   54,
                    414, 528, 5,   55,
                    446, 496, 6,   56,
                    0,   942, 0,   57,
                    0,   942, 1,   58,
                    0,   942, 2,   59,
                ),
                kotlinDebugSegment = intArrayOf(
                    2,   369, 0,
                    3,   369, 0,
                    4,   369, 0,
                    8,   369, 0,
                    9,   369, 0,
                    10,  369, 0,
                    11,  369, 0,
                    12,  369, 0,
                    13,  369, 0,
                    14,  369, 0,
                    15,  369, 0,
                    16,  369, 0,
                    17,  369, 0,
                    18,  369, 0,
                    19,  369, 0,
                    20,  369, 0,
                    23,  375, 0,
                    24,  375, 0,
                    25,  375, 0,
                    36,  375, 0,
                    37,  375, 0,
                    57,  410, 0,
                    59,  410, 0,
                    61,  411, 0,
                    62,  411, 0,
                    63,  411, 0,
                    71,  411, 0,
                    72,  411, 0,
                    73,  411, 0,
                )
            ),
            dex = MockMethodInfo(
                name = "emitConstructors",
                sourceNames = arrayOf(
                    "ClassTranslator.kt",
                    "_Collections.kt",
                    "Maps.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/js/translate/declaration/ClassTranslator",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "kotlin/collections/MapsKt__MapsKt"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-groupBy-ClassTranslator\$emitConstructors\$callSiteMap\$1:I",
                    "constructor:Lorg/jetbrains/kotlin/descriptors/ConstructorDescriptor;",
                    "result:Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;",
                    "it:Lorg/jetbrains/kotlin/js/translate/context/DeferredCallSite;",
                    "\$i\$a\$-getOrPut-CollectionsKt___CollectionsKt\$groupByTo\$list\$1\$iv\$iv:I",
                    "answer\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$getOrPut:I",
                    "value\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$this\$getOrPut\$iv\$iv\$iv:Ljava/util/Map;",
                    "key\$iv\$iv:Ljava/lang/Object;",
                    "list\$iv\$iv:Ljava/util/List;",
                    "element\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$groupByTo:I",
                    "\$this\$groupByTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Map;",
                    "\$i\$f\$groupBy:I",
                    "\$this\$groupBy\$iv:Ljava/lang/Iterable;",
                    "callee:Lorg/jetbrains/kotlin/js/translate/declaration/ClassTranslator\$ConstructorInfo;",
                    "resolvedCall:Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;",
                    "\$i\$a\$-map-ClassTranslator\$emitConstructors\$thisCalls\$1:I",
                    "set:Ljava/util/Set;",
                    "descriptor:Lorg/jetbrains/kotlin/descriptors/MemberDescriptor;",
                    "it:Lorg/jetbrains/kotlin/js/translate/declaration/ClassTranslator\$ConstructorInfo;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-forEach-ClassTranslator\$emitConstructors\$1:I",
                    "it:Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;",
                    "element\$iv:Ljava/lang/Object;",
                    "\$i\$f\$forEach:I",
                    "\$this\$forEach\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-flatMap-ClassTranslator\$emitConstructors\$closureArgs\$1:I",
                    "result:Ljava/util/List;",
                    "name:Lorg/jetbrains/kotlin/js/backend/ast/JsName;",
                    "list\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$flatMapTo:I",
                    "\$this\$flatMapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$flatMap:I",
                    "\$this\$flatMap\$iv:Ljava/lang/Iterable;",
                    "closureQualifier:Lorg/jetbrains/kotlin/js/backend/ast/JsExpression;",
                    "closureArgs:Ljava/util/List;",
                    "callSite:Lorg/jetbrains/kotlin/js/translate/context/DeferredCallSite;",
                    "nonConstructorUsageTracker:Lorg/jetbrains/kotlin/js/translate/context/UsageTracker;",
                    "usageTracker:Lorg/jetbrains/kotlin/js/translate/context/UsageTracker;",
                    "nonConstructorCapturedVars:Ljava/util/Set;",
                    "constructorCapturedVars:Ljava/util/Set;",
                    "capturedVars:Ljava/util/List;",
                    "classDescriptor:Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;",
                    "constructorCallSites:Ljava/util/List;",
                    "constructor:Lorg/jetbrains/kotlin/js/translate/declaration/ClassTranslator\$ConstructorInfo;",
                    "constructorMap:Ljava/util/Map;",
                    "callSiteMap:Ljava/util/Map;",
                    "thisCalls:Ljava/util/Map;",
                    "sortedConstructors:Ljava/util/List;",
                    "this:Lorg/jetbrains/kotlin/js/translate/declaration/ClassTranslator;",
                    "nonConstructorContext:Lorg/jetbrains/kotlin/js/translate/context/TranslationContext;",
                    "callSites:Ljava/util/List;"
                ),
                allLineLocations = intArrayOf(
                    0,    367,  367,  0,
                    17,   369,  369,  0,
                    26,   635,  1475, 1,
                    45,   636,  1500, 1,
                    73,   637,  1501, 1,
                    83,   370,  370,  0,
                    90,   371,  371,  0,
                    127,  372,  372,  0,
                    131,  638,  1502, 1,
                    138,  639,  357,  2,
                    149,  640,  358,  2,
                    154,  641,  359,  2,
                    157,  638,  1502, 1,
                    169,  642,  360,  2,
                    181,  643,  361,  2,
                    186,  645,  363,  2,
                    188,  640,  358,  2,
                    189,  638,  1502, 1,
                    194,  646,  1503, 1,
                    207,  648,  1505, 1,
                    209,  635,  1475, 1,
                    210,  369,  369,  0,
                    212,  375,  375,  0,
                    224,  649,  1547, 1,
                    250,  650,  1618, 1,
                    278,  651,  1619, 1,
                    292,  376,  376,  0,
                    302,  376,  376,  0,
                    304,  377,  377,  0,
                    311,  378,  378,  0,
                    319,  379,  379,  0,
                    336,  380,  380,  0,
                    341,  381,  381,  0,
                    359,  382,  382,  0,
                    364,  383,  383,  0,
                    377,  387,  387,  0,
                    400,  652,  1620, 1,
                    405,  649,  1547, 1,
                    409,  388,  388,  0,
                    412,  375,  375,  0,
                    414,  390,  390,  0,
                    446,  391,  391,  0,
                    477,  392,  392,  0,
                    488,  394,  394,  0,
                    494,  395,  395,  0,
                    508,  397,  397,  0,
                    530,  397,  397,  0,
                    532,  398,  398,  0,
                    539,  400,  400,  0,
                    557,  402,  402,  0,
                    564,  403,  403,  0,
                    584,  404,  404,  0,
                    592,  406,  406,  0,
                    615,  406,  406,  0,
                    617,  408,  408,  0,
                    648,  409,  409,  0,
                    675,  410,  410,  0,
                    685,  653,  1849, 1,
                    723,  410,  410,  0,
                    737,  654,  1850, 1,
                    738,  411,  411,  0,
                    748,  655,  1358, 1,
                    767,  656,  1444, 1,
                    795,  657,  1445, 1,
                    805,  412,  412,  0,
                    815,  412,  412,  0,
                    817,  413,  413,  0,
                    834,  414,  414,  0,
                    852,  415,  415,  0,
                    860,  416,  416,  0,
                    895,  418,  418,  0,
                    902,  658,  1446, 1,
                    913,  660,  1448, 1,
                    918,  655,  1358, 1,
                    919,  411,  411,  0,
                    921,  420,  420,  0,
                    941,  423,  423,  0,
                ),
                localVariableTable = intArrayOf(
                    83,  46,  13,  0,
                    90,  39,  14,  1,
                    127, 2,   15,  2,
                    80,  49,  12,  3,
                    157, 10,  20,  4,
                    169, 14,  20,  5,
                    138, 51,  18,  6,
                    149, 40,  19,  7,
                    135, 54,  17,  8,
                    131, 73,  16,  9,
                    194, 10,  12,  10,
                    73,  131, 11,  11,
                    45,  164, 9,   12,
                    42,  167, 7,   13,
                    42,  167, 8,   14,
                    26,  184, 6,   15,
                    23,  187, 5,   16,
                    359, 18,  18,  17,
                    336, 41,  17,  18,
                    292, 96,  14,  19,
                    304, 84,  15,  20,
                    311, 77,  16,  21,
                    289, 99,  13,  22,
                    278, 119, 12,  23,
                    250, 152, 10,  24,
                    247, 155, 8,   25,
                    247, 155, 9,   26,
                    224, 182, 7,   27,
                    221, 185, 6,   28,
                    723, 11,  25,  29,
                    720, 14,  24,  30,
                    713, 21,  23,  31,
                    685, 53,  21,  32,
                    682, 56,  20,  33,
                    805, 92,  29,  34,
                    817, 80,  30,  35,
                    834, 63,  31,  36,
                    802, 95,  28,  30,
                    902, 8,   28,  37,
                    795, 115, 27,  11,
                    767, 148, 25,  38,
                    764, 151, 23,  39,
                    764, 151, 24,  26,
                    748, 171, 22,  40,
                    745, 174, 21,  41,
                    675, 263, 19,  42,
                    921, 17,  20,  43,
                    648, 290, 18,  44,
                    494, 447, 9,   45,
                    508, 433, 10,  46,
                    532, 409, 11,  47,
                    539, 402, 12,  48,
                    557, 384, 13,  49,
                    564, 377, 14,  21,
                    584, 357, 15,  50,
                    617, 324, 16,  51,
                    477, 464, 8,   52,
                    17,  925, 3,   53,
                    212, 730, 4,   54,
                    414, 528, 5,   55,
                    446, 496, 6,   56,
                    0,   942, 0,   57,
                    0,   942, 1,   58,
                    0,   942, 2,   59,
                ),
                kotlinDebugSegment = intArrayOf(
                    2,   369, 0,
                    3,   369, 0,
                    4,   369, 0,
                    8,   369, 0,
                    9,   369, 0,
                    10,  369, 0,
                    11,  369, 0,
                    12,  369, 0,
                    13,  369, 0,
                    14,  369, 0,
                    15,  369, 0,
                    16,  369, 0,
                    17,  369, 0,
                    18,  369, 0,
                    19,  369, 0,
                    20,  369, 0,
                    23,  375, 0,
                    24,  375, 0,
                    25,  375, 0,
                    36,  375, 0,
                    37,  375, 0,
                    57,  410, 0,
                    59,  410, 0,
                    61,  411, 0,
                    62,  411, 0,
                    63,  411, 0,
                    71,  411, 0,
                    72,  411, 0,
                    73,  411, 0,
                )
            )
        )
    }

    // FirRepeatableAnnotationChecker.check in FirRepeatableAnnotationChecker.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/compiler/fir/checkers/checkers.jvm/src/org/jetbrains/kotlin/fir/analysis/jvm/checkers/declaration/FirRepeatableAnnotationChecker.kt#L43
    fun testFirRepeatableAnnotationCheckerCheck() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "check",
                sourceNames = arrayOf(
                    "FirRepeatableAnnotationChecker.kt",
                    "FirExpressionUtil.kt",
                    "Maps.kt",
                    "_Collections.kt",
                    "fake.kt",
                    "FirDiagnosticReportHelpers.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/fir/analysis/jvm/checkers/declaration/FirRepeatableAnnotationChecker",
                    "org/jetbrains/kotlin/fir/expressions/FirExpressionUtilKt",
                    "kotlin/collections/MapsKt__MapsKt",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "kotlin/jvm/internal/FakeKt",
                    "org/jetbrains/kotlin/fir/analysis/diagnostics/FirDiagnosticReportHelpersKt"
                ),
                variableNames = arrayOf(
                    "\$i\$f\$getConeClassLikeType:I",
                    "\$this\$coneClassLikeType\$iv\$iv:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "\$i\$f\$getClassId:I",
                    "\$this\$classId\$iv:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "\$i\$a\$-getOrPut-FirRepeatableAnnotationChecker\$check\$existingTargetsForAnnotation\$1:I",
                    "answer\$iv:Ljava/lang/Object;",
                    "\$i\$f\$getOrPut:I",
                    "value\$iv:Ljava/lang/Object;",
                    "\$this\$getOrPut\$iv:Ljava/util/Map;",
                    "key\$iv:Ljava/lang/Object;",
                    "\$i\$a\$-any-FirRepeatableAnnotationChecker\$check\$duplicateAnnotation\$1:I",
                    "it:Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationUseSiteTarget;",
                    "element\$iv:Ljava/lang/Object;",
                    "\$i\$f\$any:I",
                    "\$this\$any\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-any-FirRepeatableAnnotationChecker\$check\$1:I",
                    "it:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "explicitContainer:Lorg/jetbrains/kotlin/name/ClassId;",
                    "classId:Lorg/jetbrains/kotlin/name/ClassId;",
                    "annotationClassId:Lorg/jetbrains/kotlin/name/ClassId;",
                    "annotationClass:Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;",
                    "useSiteTarget:Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationUseSiteTarget;",
                    "existingTargetsForAnnotation:Ljava/util/List;",
                    "duplicateAnnotation:Z",
                    "annotation:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "\$i\$a\$-find-FirRepeatableAnnotationChecker\$check\$javaRepeatable\$1:I",
                    "\$i\$a\$-withSuppressedDiagnostics-FirRepeatableAnnotationChecker\$check\$2:I",
                    "it:Lorg/jetbrains/kotlin/fir/analysis/checkers/context/CheckerContext;",
                    "\$i\$f\$withSuppressedDiagnostics:I",
                    "arguments\$iv:Ljava/util/List;",
                    "\$i\$a\$-find-FirRepeatableAnnotationChecker\$check\$kotlinRepeatable\$1:I",
                    "\$i\$a\$-withSuppressedDiagnostics-FirRepeatableAnnotationChecker\$check\$3:I",
                    "kotlinRepeatable:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "javaRepeatable:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "annotations:Ljava/util/List;",
                    "annotationsMap:Ljava/util/HashMap;",
                    "session:Lorg/jetbrains/kotlin/fir/FirSession;",
                    "this:Lorg/jetbrains/kotlin/fir/analysis/jvm/checkers/declaration/FirRepeatableAnnotationChecker;",
                    "declaration:Lorg/jetbrains/kotlin/fir/declarations/FirDeclaration;",
                    "context:Lorg/jetbrains/kotlin/fir/analysis/checkers/context/CheckerContext;",
                    "reporter:Lorg/jetbrains/kotlin/diagnostics/DiagnosticReporter;"
                ),
                allLineLocations = intArrayOf(
                    18,   43,   43,   0,
                    24,   44,   44,   0,
                    35,   45,   45,   0,
                    42,   45,   45,   0,
                    44,   47,   47,   0,
                    50,   48,   48,   0,
                    81,   49,   49,   0,
                    88,   261,  34,   1,
                    95,   262,  31,   1,
                    150,  261,  34,   1,
                    169,  49,   49,   0,
                    179,  50,   50,   0,
                    194,  51,   51,   0,
                    202,  52,   52,   0,
                    222,  54,   54,   0,
                    229,  55,   55,   0,
                    249,  263,  357,  2,
                    260,  264,  358,  2,
                    265,  265,  359,  2,
                    268,  55,   55,   0,
                    278,  55,   55,   0,
                    281,  266,  360,  2,
                    293,  267,  361,  2,
                    298,  269,  363,  2,
                    300,  264,  358,  2,
                    301,  55,   55,   0,
                    306,  56,   56,   0,
                    318,  57,   57,   0,
                    328,  270,  1741, 3,
                    353,  271,  1742, 3,
                    391,  57,   57,   0,
                    426,  272,  1743, 3,
                    435,  56,   56,   0,
                    437,  59,   59,   0,
                    442,  60,   60,   0,
                    452,  61,   61,   0,
                    463,  63,   63,   0,
                    470,  64,   64,   0,
                    499,  65,   65,   0,
                    515,  69,   69,   0,
                    523,  70,   70,   0,
                    538,  273,  1741, 3,
                    563,  274,  1742, 3,
                    601,  70,   70,   0,
                    608,  275,  34,   1,
                    615,  276,  31,   1,
                    670,  275,  34,   1,
                    689,  70,   70,   0,
                    701,  277,  1743, 3,
                    702,  70,   70,   0,
                    705,  71,   71,   0,
                    706,  72,   72,   0,
                    714,  73,   73,   0,
                    720,  74,   74,   0,
                    722,  75,   75,   0,
                    724,  76,   76,   0,
                    728,  71,   71,   0,
                    738,  80,   80,   0,
                    764,  84,   84,   0,
                    777,  87,   87,   0,
                    784,  88,   88,   0,
                    826,  278,  1,    4,
                    829,  88,   88,   0,
                    836,  279,  34,   1,
                    843,  280,  31,   1,
                    898,  279,  34,   1,
                    917,  88,   88,   0,
                    926,  88,   88,   0,
                    935,  88,   88,   0,
                    940,  89,   89,   0,
                    945,  90,   90,   0,
                    948,  281,  82,   5,
                    961,  282,  83,   5,
                    966,  283,  84,   5,
                    966,  284,  85,   5,
                    970,  285,  86,   5,
                    975,  286,  87,   5,
                    984,  287,  88,   5,
                    994,  288,  89,   5,
                    1004, 284,  85,   5,
                    1028, 283,  84,   5,
                    1036, 91,   91,   0,
                    1050, 92,   92,   0,
                    1051, 291,  92,   5,
                    1054, 293,  94,   5,
                    1066, 91,   91,   0,
                    1080, 92,   92,   0,
                    1081, 294,  95,   5,
                    1085, 94,   94,   0,
                    1127, 278,  1,    4,
                    1130, 94,   94,   0,
                    1137, 295,  34,   1,
                    1144, 296,  31,   1,
                    1199, 295,  34,   1,
                    1218, 94,   94,   0,
                    1227, 94,   94,   0,
                    1236, 94,   94,   0,
                    1241, 95,   95,   0,
                    1246, 96,   96,   0,
                    1249, 297,  82,   5,
                    1262, 298,  83,   5,
                    1267, 299,  84,   5,
                    1267, 300,  85,   5,
                    1271, 301,  86,   5,
                    1276, 302,  87,   5,
                    1285, 303,  88,   5,
                    1295, 304,  89,   5,
                    1305, 300,  85,   5,
                    1329, 299,  84,   5,
                    1337, 97,   97,   0,
                    1351, 98,   98,   0,
                    1352, 307,  92,   5,
                    1355, 309,  94,   5,
                    1367, 97,   97,   0,
                    1381, 98,   98,   0,
                    1382, 310,  95,   5,
                    1383, 102,  102,  0,
                ),
                localVariableTable = intArrayOf(
                    95,   55,   14,   0,
                    92,   58,   13,   1,
                    88,   81,   12,   2,
                    85,   84,   11,   3,
                    268,  11,   18,   4,
                    281,  14,   18,   5,
                    249,  52,   16,   6,
                    260,  41,   17,   7,
                    246,  55,   14,   8,
                    246,  55,   15,   9,
                    391,  28,   20,   10,
                    388,  31,   19,   11,
                    381,  45,   18,   12,
                    328,  99,   16,   13,
                    325,  102,  15,   14,
                    615,  55,   25,   0,
                    612,  58,   24,   1,
                    608,  81,   23,   2,
                    605,  84,   22,   3,
                    601,  93,   21,   15,
                    598,  96,   20,   16,
                    591,  110,  19,   12,
                    538,  164,  17,   13,
                    535,  167,  16,   14,
                    523,  212,  15,   17,
                    179,  595,  9,    18,
                    194,  580,  10,   19,
                    222,  552,  11,   20,
                    229,  545,  12,   21,
                    306,  468,  13,   22,
                    437,  337,  14,   23,
                    81,   693,  8,    24,
                    843,  55,   17,   0,
                    840,  58,   16,   1,
                    836,  81,   15,   2,
                    833,  84,   14,   3,
                    829,  97,   13,   25,
                    826,  100,  12,   16,
                    1036, 15,   11,   26,
                    1033, 18,   10,   27,
                    1066, 15,   11,   26,
                    1063, 18,   10,   27,
                    948,  134,  8,    28,
                    961,  121,  9,    29,
                    1144, 55,   18,   0,
                    1141, 58,   17,   1,
                    1137, 81,   16,   2,
                    1134, 84,   15,   3,
                    1130, 97,   14,   30,
                    1127, 100,  13,   16,
                    1337, 15,   12,   31,
                    1334, 18,   11,   27,
                    1367, 15,   12,   31,
                    1364, 18,   11,   27,
                    1249, 134,  9,    28,
                    1262, 121,  10,   29,
                    1241, 142,  8,    32,
                    940,  443,  7,    33,
                    24,   1360, 4,    34,
                    44,   1340, 5,    35,
                    50,   1334, 6,    36,
                    0,    1384, 0,    37,
                    0,    1384, 1,    38,
                    0,    1384, 2,    39,
                    0,    1384, 3,    40,
                ),
                kotlinDebugSegment = intArrayOf(
                    7,   49,  0,
                    8,   49,  0,
                    9,   49,  0,
                    16,  55,  0,
                    17,  55,  0,
                    18,  55,  0,
                    21,  55,  0,
                    22,  55,  0,
                    23,  55,  0,
                    24,  55,  0,
                    28,  57,  0,
                    29,  57,  0,
                    31,  57,  0,
                    41,  70,  0,
                    42,  70,  0,
                    44,  70,  0,
                    45,  70,  0,
                    46,  70,  0,
                    48,  70,  0,
                    63,  88,  0,
                    64,  88,  0,
                    65,  88,  0,
                    71,  90,  0,
                    72,  90,  0,
                    73,  90,  0,
                    74,  90,  0,
                    75,  90,  0,
                    76,  90,  0,
                    77,  90,  0,
                    78,  90,  0,
                    79,  90,  0,
                    80,  90,  0,
                    83,  90,  0,
                    84,  90,  0,
                    87,  90,  0,
                    91,  94,  0,
                    92,  94,  0,
                    93,  94,  0,
                    99,  96,  0,
                    100, 96,  0,
                    101, 96,  0,
                    102, 96,  0,
                    103, 96,  0,
                    104, 96,  0,
                    105, 96,  0,
                    106, 96,  0,
                    107, 96,  0,
                    108, 96,  0,
                    111, 96,  0,
                    112, 96,  0,
                    115, 96,  0,
                )
            ),
            dex = MockMethodInfo(
                name = "check",
                sourceNames = arrayOf(
                    "FirRepeatableAnnotationChecker.kt",
                    "FirExpressionUtil.kt",
                    "Maps.kt",
                    "_Collections.kt",
                    "fake.kt",
                    "FirDiagnosticReportHelpers.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/fir/analysis/jvm/checkers/declaration/FirRepeatableAnnotationChecker",
                    "org/jetbrains/kotlin/fir/expressions/FirExpressionUtilKt",
                    "kotlin/collections/MapsKt__MapsKt",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "kotlin/jvm/internal/FakeKt",
                    "org/jetbrains/kotlin/fir/analysis/diagnostics/FirDiagnosticReportHelpersKt"
                ),
                variableNames = arrayOf(
                    "\$i\$f\$getConeClassLikeType:I",
                    "\$this\$coneClassLikeType\$iv\$iv:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "\$i\$f\$getClassId:I",
                    "\$this\$classId\$iv:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "\$i\$a\$-getOrPut-FirRepeatableAnnotationChecker\$check\$existingTargetsForAnnotation\$1:I",
                    "answer\$iv:Ljava/lang/Object;",
                    "\$i\$f\$getOrPut:I",
                    "value\$iv:Ljava/lang/Object;",
                    "\$this\$getOrPut\$iv:Ljava/util/Map;",
                    "key\$iv:Ljava/lang/Object;",
                    "\$i\$a\$-any-FirRepeatableAnnotationChecker\$check\$duplicateAnnotation\$1:I",
                    "it:Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationUseSiteTarget;",
                    "element\$iv:Ljava/lang/Object;",
                    "\$i\$f\$any:I",
                    "\$this\$any\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-any-FirRepeatableAnnotationChecker\$check\$1:I",
                    "it:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "explicitContainer:Lorg/jetbrains/kotlin/name/ClassId;",
                    "classId:Lorg/jetbrains/kotlin/name/ClassId;",
                    "annotationClassId:Lorg/jetbrains/kotlin/name/ClassId;",
                    "annotationClass:Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;",
                    "useSiteTarget:Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationUseSiteTarget;",
                    "existingTargetsForAnnotation:Ljava/util/List;",
                    "duplicateAnnotation:Z",
                    "annotation:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "\$i\$a\$-find-FirRepeatableAnnotationChecker\$check\$javaRepeatable\$1:I",
                    "\$i\$a\$-withSuppressedDiagnostics-FirRepeatableAnnotationChecker\$check\$2:I",
                    "it:Lorg/jetbrains/kotlin/fir/analysis/checkers/context/CheckerContext;",
                    "\$i\$f\$withSuppressedDiagnostics:I",
                    "arguments\$iv:Ljava/util/List;",
                    "\$i\$a\$-find-FirRepeatableAnnotationChecker\$check\$kotlinRepeatable\$1:I",
                    "\$i\$a\$-withSuppressedDiagnostics-FirRepeatableAnnotationChecker\$check\$3:I",
                    "kotlinRepeatable:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "javaRepeatable:Lorg/jetbrains/kotlin/fir/expressions/FirAnnotation;",
                    "annotations:Ljava/util/List;",
                    "annotationsMap:Ljava/util/HashMap;",
                    "session:Lorg/jetbrains/kotlin/fir/FirSession;",
                    "this:Lorg/jetbrains/kotlin/fir/analysis/jvm/checkers/declaration/FirRepeatableAnnotationChecker;",
                    "declaration:Lorg/jetbrains/kotlin/fir/declarations/FirDeclaration;",
                    "context:Lorg/jetbrains/kotlin/fir/analysis/checkers/context/CheckerContext;",
                    "reporter:Lorg/jetbrains/kotlin/diagnostics/DiagnosticReporter;"
                ),
                allLineLocations = intArrayOf(
                    18,   43,   43,   0,
                    24,   44,   44,   0,
                    35,   45,   45,   0,
                    42,   45,   45,   0,
                    44,   47,   47,   0,
                    50,   48,   48,   0,
                    81,   49,   49,   0,
                    88,   261,  34,   1,
                    95,   262,  31,   1,
                    150,  261,  34,   1,
                    169,  49,   49,   0,
                    179,  50,   50,   0,
                    194,  51,   51,   0,
                    202,  52,   52,   0,
                    222,  54,   54,   0,
                    229,  55,   55,   0,
                    249,  263,  357,  2,
                    260,  264,  358,  2,
                    265,  265,  359,  2,
                    268,  55,   55,   0,
                    278,  55,   55,   0,
                    281,  266,  360,  2,
                    293,  267,  361,  2,
                    298,  269,  363,  2,
                    300,  264,  358,  2,
                    301,  55,   55,   0,
                    306,  56,   56,   0,
                    318,  57,   57,   0,
                    328,  270,  1741, 3,
                    353,  271,  1742, 3,
                    391,  57,   57,   0,
                    426,  272,  1743, 3,
                    435,  56,   56,   0,
                    437,  59,   59,   0,
                    442,  60,   60,   0,
                    452,  61,   61,   0,
                    463,  63,   63,   0,
                    470,  64,   64,   0,
                    499,  65,   65,   0,
                    515,  69,   69,   0,
                    523,  70,   70,   0,
                    538,  273,  1741, 3,
                    563,  274,  1742, 3,
                    601,  70,   70,   0,
                    608,  275,  34,   1,
                    615,  276,  31,   1,
                    670,  275,  34,   1,
                    689,  70,   70,   0,
                    701,  277,  1743, 3,
                    702,  70,   70,   0,
                    705,  71,   71,   0,
                    706,  72,   72,   0,
                    714,  73,   73,   0,
                    720,  74,   74,   0,
                    722,  75,   75,   0,
                    724,  76,   76,   0,
                    728,  71,   71,   0,
                    738,  80,   80,   0,
                    764,  84,   84,   0,
                    777,  87,   87,   0,
                    784,  88,   88,   0,
                    826,  278,  1,    4,
                    829,  88,   88,   0,
                    836,  279,  34,   1,
                    843,  280,  31,   1,
                    898,  279,  34,   1,
                    917,  88,   88,   0,
                    926,  88,   88,   0,
                    935,  88,   88,   0,
                    940,  89,   89,   0,
                    945,  90,   90,   0,
                    948,  281,  82,   5,
                    961,  282,  83,   5,
                    966,  283,  84,   5,
                    966,  284,  85,   5,
                    970,  285,  86,   5,
                    975,  286,  87,   5,
                    984,  287,  88,   5,
                    994,  288,  89,   5,
                    1004, 284,  85,   5,
                    1028, 283,  84,   5,
                    1036, 91,   91,   0,
                    1050, 92,   92,   0,
                    1051, 291,  92,   5,
                    1054, 293,  94,   5,
                    1066, 91,   91,   0,
                    1080, 92,   92,   0,
                    1081, 294,  95,   5,
                    1085, 94,   94,   0,
                    1127, 278,  1,    4,
                    1130, 94,   94,   0,
                    1137, 295,  34,   1,
                    1144, 296,  31,   1,
                    1199, 295,  34,   1,
                    1218, 94,   94,   0,
                    1227, 94,   94,   0,
                    1236, 94,   94,   0,
                    1241, 95,   95,   0,
                    1246, 96,   96,   0,
                    1249, 297,  82,   5,
                    1262, 298,  83,   5,
                    1267, 299,  84,   5,
                    1267, 300,  85,   5,
                    1271, 301,  86,   5,
                    1276, 302,  87,   5,
                    1285, 303,  88,   5,
                    1295, 304,  89,   5,
                    1305, 300,  85,   5,
                    1329, 299,  84,   5,
                    1337, 97,   97,   0,
                    1351, 98,   98,   0,
                    1352, 307,  92,   5,
                    1355, 309,  94,   5,
                    1367, 97,   97,   0,
                    1381, 98,   98,   0,
                    1382, 310,  95,   5,
                    1383, 102,  102,  0,
                ),
                localVariableTable = intArrayOf(
                    95,   55,   14,   0,
                    92,   58,   13,   1,
                    88,   81,   12,   2,
                    85,   84,   11,   3,
                    268,  11,   18,   4,
                    281,  14,   18,   5,
                    249,  52,   16,   6,
                    260,  41,   17,   7,
                    246,  55,   14,   8,
                    246,  55,   15,   9,
                    391,  28,   20,   10,
                    388,  31,   19,   11,
                    381,  45,   18,   12,
                    328,  99,   16,   13,
                    325,  102,  15,   14,
                    615,  55,   25,   0,
                    612,  58,   24,   1,
                    608,  81,   23,   2,
                    605,  84,   22,   3,
                    601,  93,   21,   15,
                    598,  96,   20,   16,
                    591,  110,  19,   12,
                    538,  164,  17,   13,
                    535,  167,  16,   14,
                    523,  212,  15,   17,
                    179,  595,  9,    18,
                    194,  580,  10,   19,
                    222,  552,  11,   20,
                    229,  545,  12,   21,
                    306,  468,  13,   22,
                    437,  337,  14,   23,
                    81,   693,  8,    24,
                    843,  55,   17,   0,
                    840,  58,   16,   1,
                    836,  81,   15,   2,
                    833,  84,   14,   3,
                    829,  97,   13,   25,
                    826,  100,  12,   16,
                    1036, 15,   11,   26,
                    1033, 18,   10,   27,
                    1066, 15,   11,   26,
                    1063, 18,   10,   27,
                    948,  134,  8,    28,
                    961,  121,  9,    29,
                    1144, 55,   18,   0,
                    1141, 58,   17,   1,
                    1137, 81,   16,   2,
                    1134, 84,   15,   3,
                    1130, 97,   14,   30,
                    1127, 100,  13,   16,
                    1337, 15,   12,   31,
                    1334, 18,   11,   27,
                    1367, 15,   12,   31,
                    1364, 18,   11,   27,
                    1249, 134,  9,    28,
                    1262, 121,  10,   29,
                    1241, 142,  8,    32,
                    940,  443,  7,    33,
                    24,   1360, 4,    34,
                    44,   1340, 5,    35,
                    50,   1334, 6,    36,
                    0,    1384, 0,    37,
                    0,    1384, 1,    38,
                    0,    1384, 2,    39,
                    0,    1384, 3,    40,
                ),
                kotlinDebugSegment = intArrayOf(
                    7,   49,  0,
                    8,   49,  0,
                    9,   49,  0,
                    16,  55,  0,
                    17,  55,  0,
                    18,  55,  0,
                    21,  55,  0,
                    22,  55,  0,
                    23,  55,  0,
                    24,  55,  0,
                    28,  57,  0,
                    29,  57,  0,
                    31,  57,  0,
                    41,  70,  0,
                    42,  70,  0,
                    44,  70,  0,
                    45,  70,  0,
                    46,  70,  0,
                    48,  70,  0,
                    63,  88,  0,
                    64,  88,  0,
                    65,  88,  0,
                    71,  90,  0,
                    72,  90,  0,
                    73,  90,  0,
                    74,  90,  0,
                    75,  90,  0,
                    76,  90,  0,
                    77,  90,  0,
                    78,  90,  0,
                    79,  90,  0,
                    80,  90,  0,
                    83,  90,  0,
                    84,  90,  0,
                    87,  90,  0,
                    91,  94,  0,
                    92,  94,  0,
                    93,  94,  0,
                    99,  96,  0,
                    100, 96,  0,
                    101, 96,  0,
                    102, 96,  0,
                    103, 96,  0,
                    104, 96,  0,
                    105, 96,  0,
                    106, 96,  0,
                    107, 96,  0,
                    108, 96,  0,
                    111, 96,  0,
                    112, 96,  0,
                    115, 96,  0,
                )
            )
        )
    }

    // IrOverridingUtil.buildFakeOverridesForClassUsingOverriddenSymbols in IrOverridingUtil.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/compiler/ir/ir.tree/src/org/jetbrains/kotlin/ir/overrides/IrOverridingUtil.kt#L184
    fun testIrOverridingUtilBuildFakeOverridesForClassUsingOverriddenSymbols() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "buildFakeOverridesForClassUsingOverriddenSymbols",
                sourceNames = arrayOf(
                    "IrOverridingUtil.kt",
                    "_Collections.kt",
                    "Maps.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/ir/overrides/IrOverridingUtil",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "kotlin/collections/MapsKt__MapsKt"
                ),
                variableNames = arrayOf(
                    "element\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$filterIsInstanceTo:I",
                    "\$this\$filterIsInstanceTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$filterIsInstance:I",
                    "\$this\$filterIsInstance\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-map-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$overriddenMembers\$1\$1:I",
                    "it:Lorg/jetbrains/kotlin/ir/symbols/IrSymbol;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-flatMap-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$overriddenMembers\$1:I",
                    "member:Lorg/jetbrains/kotlin/ir/declarations/IrOverridableMember;",
                    "list\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$flatMapTo:I",
                    "\$this\$flatMapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$flatMap:I",
                    "\$this\$flatMap\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-filterNot-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$unoverriddenSuperMembers\$1\$1:I",
                    "it:Lorg/jetbrains/kotlin/ir/declarations/IrOverridableMember;",
                    "\$i\$f\$filterNotTo:I",
                    "\$this\$filterNotTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$filterNot:I",
                    "\$this\$filterNot\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-map-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$unoverriddenSuperMembers\$1\$2:I",
                    "fakeOverride:Lorg/jetbrains/kotlin/ir/declarations/IrOverridableMember;",
                    "overriddenMember:Lorg/jetbrains/kotlin/ir/declarations/IrOverridableMember;",
                    "\$i\$a\$-flatMap-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$unoverriddenSuperMembers\$1:I",
                    "superClass:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "superType:Lorg/jetbrains/kotlin/ir/types/IrType;",
                    "\$i\$a\$-groupBy-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$unoverriddenSuperMembersGroupedByName\$1:I",
                    "\$i\$a\$-getOrPut-CollectionsKt___CollectionsKt\$groupByTo\$list\$1\$iv\$iv:I",
                    "answer\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$getOrPut:I",
                    "value\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$this\$getOrPut\$iv\$iv\$iv:Ljava/util/Map;",
                    "key\$iv\$iv:Ljava/lang/Object;",
                    "list\$iv\$iv:Ljava/util/List;",
                    "\$i\$f\$groupByTo:I",
                    "\$this\$groupByTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Map;",
                    "\$i\$f\$groupBy:I",
                    "\$this\$groupBy\$iv:Ljava/lang/Iterable;",
                    "group:Ljava/util/List;",
                    "overriddenMembers:Ljava/util/Set;",
                    "unoverriddenSuperMembers:Ljava/util/List;",
                    "unoverriddenSuperMembersGroupedByName:Ljava/util/Map;",
                    "fakeOverrides:Ljava/util/List;",
                    "this:Lorg/jetbrains/kotlin/ir/overrides/IrOverridingUtil;",
                    "clazz:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "implementedMembers:Ljava/util/List;",
                    "compatibilityMode:Z"
                ),
                allLineLocations = intArrayOf(
                    13,   184,  184,  0,
                    25,   864,  798,  1,
                    44,   873,  807,  1,
                    93,   874,  808,  1,
                    98,   864,  798,  1,
                    102,  184,  184,  0,
                    114,  185,  185,  0,
                    118,  875,  1358, 1,
                    137,  876,  1444, 1,
                    165,  877,  1445, 1,
                    175,  185,  185,  0,
                    189,  878,  1547, 1,
                    215,  879,  1618, 1,
                    243,  880,  1619, 1,
                    257,  185,  185,  0,
                    276,  881,  1620, 1,
                    281,  878,  1547, 1,
                    282,  185,  185,  0,
                    288,  882,  1446, 1,
                    299,  884,  1448, 1,
                    304,  875,  1358, 1,
                    308,  186,  186,  0,
                    311,  184,  184,  0,
                    313,  188,  188,  0,
                    325,  885,  1358, 1,
                    344,  886,  1444, 1,
                    372,  887,  1445, 1,
                    382,  189,  189,  0,
                    425,  190,  190,  0,
                    435,  191,  191,  0,
                    439,  888,  798,  1,
                    458,  897,  807,  1,
                    507,  898,  808,  1,
                    512,  888,  798,  1,
                    518,  192,  192,  0,
                    522,  899,  817,  1,
                    541,  900,  845,  1,
                    579,  193,  193,  0,
                    634,  901,  846,  1,
                    639,  899,  817,  1,
                    645,  195,  195,  0,
                    649,  902,  1547, 1,
                    675,  903,  1618, 1,
                    703,  904,  1619, 1,
                    717,  196,  196,  0,
                    731,  197,  197,  0,
                    745,  198,  198,  0,
                    759,  199,  199,  0,
                    773,  905,  1620, 1,
                    778,  902,  1547, 1,
                    779,  195,  195,  0,
                    785,  906,  1446, 1,
                    796,  908,  1448, 1,
                    801,  885,  1358, 1,
                    802,  188,  188,  0,
                    804,  203,  203,  0,
                    814,  909,  1475, 1,
                    833,  910,  1500, 1,
                    861,  911,  1501, 1,
                    871,  203,  203,  0,
                    880,  912,  1502, 1,
                    887,  913,  357,  2,
                    898,  914,  358,  2,
                    903,  915,  359,  2,
                    906,  912,  1502, 1,
                    918,  916,  360,  2,
                    930,  917,  361,  2,
                    935,  919,  363,  2,
                    937,  914,  358,  2,
                    938,  912,  1502, 1,
                    943,  920,  1503, 1,
                    956,  922,  1505, 1,
                    958,  909,  1475, 1,
                    959,  203,  203,  0,
                    961,  204,  204,  0,
                    971,  204,  204,  0,
                    973,  205,  205,  0,
                    1009, 206,  206,  0,
                    1025, 208,  208,  0,
                ),
                localVariableTable = intArrayOf(
                    72,   18,   11,   0,
                    44,   51,   9,    1,
                    41,   54,   7,    2,
                    41,   54,   8,    3,
                    25,   74,   6,    4,
                    22,   77,   5,    5,
                    257,  7,    23,   6,
                    254,  10,   21,   7,
                    243,  30,   20,   8,
                    215,  63,   18,   9,
                    212,  66,   16,   10,
                    212,  66,   17,   3,
                    189,  93,   15,   11,
                    186,  96,   14,   12,
                    175,  108,  13,   13,
                    172,  111,  12,   14,
                    288,  8,    12,   15,
                    165,  131,  11,   0,
                    137,  164,  9,    16,
                    134,  167,  7,    17,
                    134,  167,  8,    3,
                    118,  187,  6,    18,
                    115,  190,  5,    19,
                    486,  18,   22,   0,
                    458,  51,   20,   1,
                    455,  54,   18,   2,
                    455,  54,   19,   3,
                    439,  74,   17,   4,
                    436,  77,   16,   5,
                    579,  39,   24,   20,
                    576,  42,   23,   21,
                    569,  62,   22,   0,
                    541,  95,   20,   22,
                    538,  98,   18,   23,
                    538,  98,   19,   3,
                    522,  118,  17,   24,
                    519,  121,  16,   25,
                    717,  44,   24,   26,
                    731,  30,   26,   27,
                    714,  47,   23,   28,
                    703,  67,   22,   8,
                    675,  100,  20,   9,
                    672,  103,  18,   10,
                    672,  103,  19,   3,
                    649,  130,  17,   11,
                    646,  133,  16,   12,
                    382,  398,  14,   29,
                    425,  355,  15,   30,
                    379,  401,  13,   31,
                    785,  8,    27,   15,
                    372,  421,  12,   0,
                    344,  454,  10,   16,
                    341,  457,  8,    17,
                    341,  457,  9,    3,
                    325,  477,  7,    18,
                    322,  480,  6,    19,
                    871,  7,    15,   32,
                    868,  10,   14,   21,
                    906,  10,   20,   33,
                    918,  14,   20,   34,
                    887,  51,   18,   35,
                    898,  40,   19,   36,
                    884,  54,   17,   37,
                    880,  73,   16,   38,
                    943,  10,   14,   39,
                    861,  92,   13,   0,
                    833,  125,  11,   40,
                    830,  128,  9,    41,
                    830,  128,  10,   42,
                    814,  145,  8,    43,
                    811,  148,  7,    44,
                    1009, 13,   9,    45,
                    313,  715,  4,    46,
                    804,  224,  5,    47,
                    961,  67,   6,    48,
                    973,  55,   7,    49,
                    0,    1028, 0,    50,
                    0,    1028, 1,    51,
                    0,    1028, 2,    52,
                    0,    1028, 3,    53,
                ),
                kotlinDebugSegment = intArrayOf(
                    1,   184, 0,
                    2,   184, 0,
                    3,   184, 0,
                    4,   184, 0,
                    7,   185, 0,
                    8,   185, 0,
                    9,   185, 0,
                    11,  185, 0,
                    12,  185, 0,
                    13,  185, 0,
                    15,  185, 0,
                    16,  185, 0,
                    18,  185, 0,
                    19,  185, 0,
                    20,  185, 0,
                    24,  188, 0,
                    25,  188, 0,
                    26,  188, 0,
                    30,  191, 0,
                    31,  191, 0,
                    32,  191, 0,
                    33,  191, 0,
                    35,  192, 0,
                    36,  192, 0,
                    38,  192, 0,
                    39,  192, 0,
                    41,  195, 0,
                    42,  195, 0,
                    43,  195, 0,
                    48,  195, 0,
                    49,  195, 0,
                    51,  188, 0,
                    52,  188, 0,
                    53,  188, 0,
                    56,  203, 0,
                    57,  203, 0,
                    58,  203, 0,
                    60,  203, 0,
                    61,  203, 0,
                    62,  203, 0,
                    63,  203, 0,
                    64,  203, 0,
                    65,  203, 0,
                    66,  203, 0,
                    67,  203, 0,
                    68,  203, 0,
                    69,  203, 0,
                    70,  203, 0,
                    71,  203, 0,
                    72,  203, 0,
                )
            ),
            dex = MockMethodInfo(
                name = "buildFakeOverridesForClassUsingOverriddenSymbols",
                sourceNames = arrayOf(
                    "IrOverridingUtil.kt",
                    "_Collections.kt",
                    "Maps.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/ir/overrides/IrOverridingUtil",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "kotlin/collections/MapsKt__MapsKt"
                ),
                variableNames = arrayOf(
                    "element\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$filterIsInstanceTo:I",
                    "\$this\$filterIsInstanceTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$filterIsInstance:I",
                    "\$this\$filterIsInstance\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-map-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$overriddenMembers\$1\$1:I",
                    "it:Lorg/jetbrains/kotlin/ir/symbols/IrSymbol;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-flatMap-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$overriddenMembers\$1:I",
                    "member:Lorg/jetbrains/kotlin/ir/declarations/IrOverridableMember;",
                    "list\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$flatMapTo:I",
                    "\$this\$flatMapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$flatMap:I",
                    "\$this\$flatMap\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-filterNot-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$unoverriddenSuperMembers\$1\$1:I",
                    "it:Lorg/jetbrains/kotlin/ir/declarations/IrOverridableMember;",
                    "\$i\$f\$filterNotTo:I",
                    "\$this\$filterNotTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$filterNot:I",
                    "\$this\$filterNot\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-map-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$unoverriddenSuperMembers\$1\$2:I",
                    "fakeOverride:Lorg/jetbrains/kotlin/ir/declarations/IrOverridableMember;",
                    "overriddenMember:Lorg/jetbrains/kotlin/ir/declarations/IrOverridableMember;",
                    "\$i\$a\$-flatMap-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$unoverriddenSuperMembers\$1:I",
                    "superClass:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "superType:Lorg/jetbrains/kotlin/ir/types/IrType;",
                    "\$i\$a\$-groupBy-IrOverridingUtil\$buildFakeOverridesForClassUsingOverriddenSymbols\$unoverriddenSuperMembersGroupedByName\$1:I",
                    "\$i\$a\$-getOrPut-CollectionsKt___CollectionsKt\$groupByTo\$list\$1\$iv\$iv:I",
                    "answer\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$getOrPut:I",
                    "value\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$this\$getOrPut\$iv\$iv\$iv:Ljava/util/Map;",
                    "key\$iv\$iv:Ljava/lang/Object;",
                    "list\$iv\$iv:Ljava/util/List;",
                    "\$i\$f\$groupByTo:I",
                    "\$this\$groupByTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Map;",
                    "\$i\$f\$groupBy:I",
                    "\$this\$groupBy\$iv:Ljava/lang/Iterable;",
                    "group:Ljava/util/List;",
                    "overriddenMembers:Ljava/util/Set;",
                    "unoverriddenSuperMembers:Ljava/util/List;",
                    "unoverriddenSuperMembersGroupedByName:Ljava/util/Map;",
                    "fakeOverrides:Ljava/util/List;",
                    "this:Lorg/jetbrains/kotlin/ir/overrides/IrOverridingUtil;",
                    "clazz:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "implementedMembers:Ljava/util/List;",
                    "compatibilityMode:Z"
                ),
                allLineLocations = intArrayOf(
                    13,   184,  184,  0,
                    25,   864,  798,  1,
                    44,   873,  807,  1,
                    93,   874,  808,  1,
                    98,   864,  798,  1,
                    102,  184,  184,  0,
                    114,  185,  185,  0,
                    118,  875,  1358, 1,
                    137,  876,  1444, 1,
                    165,  877,  1445, 1,
                    175,  185,  185,  0,
                    189,  878,  1547, 1,
                    215,  879,  1618, 1,
                    243,  880,  1619, 1,
                    257,  185,  185,  0,
                    276,  881,  1620, 1,
                    281,  878,  1547, 1,
                    282,  185,  185,  0,
                    288,  882,  1446, 1,
                    299,  884,  1448, 1,
                    304,  875,  1358, 1,
                    308,  186,  186,  0,
                    311,  184,  184,  0,
                    313,  188,  188,  0,
                    325,  885,  1358, 1,
                    344,  886,  1444, 1,
                    372,  887,  1445, 1,
                    382,  189,  189,  0,
                    425,  190,  190,  0,
                    435,  191,  191,  0,
                    439,  888,  798,  1,
                    458,  897,  807,  1,
                    507,  898,  808,  1,
                    512,  888,  798,  1,
                    518,  192,  192,  0,
                    522,  899,  817,  1,
                    541,  900,  845,  1,
                    579,  193,  193,  0,
                    634,  901,  846,  1,
                    639,  899,  817,  1,
                    645,  195,  195,  0,
                    649,  902,  1547, 1,
                    675,  903,  1618, 1,
                    703,  904,  1619, 1,
                    717,  196,  196,  0,
                    731,  197,  197,  0,
                    745,  198,  198,  0,
                    759,  199,  199,  0,
                    773,  905,  1620, 1,
                    778,  902,  1547, 1,
                    779,  195,  195,  0,
                    785,  906,  1446, 1,
                    796,  908,  1448, 1,
                    801,  885,  1358, 1,
                    802,  188,  188,  0,
                    804,  203,  203,  0,
                    814,  909,  1475, 1,
                    833,  910,  1500, 1,
                    861,  911,  1501, 1,
                    871,  203,  203,  0,
                    880,  912,  1502, 1,
                    887,  913,  357,  2,
                    898,  914,  358,  2,
                    903,  915,  359,  2,
                    906,  912,  1502, 1,
                    918,  916,  360,  2,
                    930,  917,  361,  2,
                    935,  919,  363,  2,
                    937,  914,  358,  2,
                    938,  912,  1502, 1,
                    943,  920,  1503, 1,
                    956,  922,  1505, 1,
                    958,  909,  1475, 1,
                    959,  203,  203,  0,
                    961,  204,  204,  0,
                    971,  204,  204,  0,
                    973,  205,  205,  0,
                    1009, 206,  206,  0,
                    1025, 208,  208,  0,
                ),
                localVariableTable = intArrayOf(
                    72,   18,   11,   0,
                    44,   51,   9,    1,
                    41,   54,   7,    2,
                    41,   54,   8,    3,
                    25,   74,   6,    4,
                    22,   77,   5,    5,
                    257,  7,    23,   6,
                    254,  10,   21,   7,
                    243,  30,   20,   8,
                    215,  63,   18,   9,
                    212,  66,   16,   10,
                    212,  66,   17,   3,
                    189,  93,   15,   11,
                    186,  96,   14,   12,
                    175,  108,  13,   13,
                    172,  111,  12,   14,
                    288,  8,    12,   15,
                    165,  131,  11,   0,
                    137,  164,  9,    16,
                    134,  167,  7,    17,
                    134,  167,  8,    3,
                    118,  187,  6,    18,
                    115,  190,  5,    19,
                    486,  18,   22,   0,
                    458,  51,   20,   1,
                    455,  54,   18,   2,
                    455,  54,   19,   3,
                    439,  74,   17,   4,
                    436,  77,   16,   5,
                    579,  39,   24,   20,
                    576,  42,   23,   21,
                    569,  62,   22,   0,
                    541,  95,   20,   22,
                    538,  98,   18,   23,
                    538,  98,   19,   3,
                    522,  118,  17,   24,
                    519,  121,  16,   25,
                    717,  44,   24,   26,
                    731,  30,   26,   27,
                    714,  47,   23,   28,
                    703,  67,   22,   8,
                    675,  100,  20,   9,
                    672,  103,  18,   10,
                    672,  103,  19,   3,
                    649,  130,  17,   11,
                    646,  133,  16,   12,
                    382,  398,  14,   29,
                    425,  355,  15,   30,
                    379,  401,  13,   31,
                    785,  8,    27,   15,
                    372,  421,  12,   0,
                    344,  454,  10,   16,
                    341,  457,  8,    17,
                    341,  457,  9,    3,
                    325,  477,  7,    18,
                    322,  480,  6,    19,
                    871,  7,    15,   32,
                    868,  10,   14,   21,
                    906,  10,   20,   33,
                    918,  14,   20,   34,
                    887,  51,   18,   35,
                    898,  40,   19,   36,
                    884,  54,   17,   37,
                    880,  73,   16,   38,
                    943,  10,   14,   39,
                    861,  92,   13,   0,
                    833,  125,  11,   40,
                    830,  128,  9,    41,
                    830,  128,  10,   42,
                    814,  145,  8,    43,
                    811,  148,  7,    44,
                    1009, 13,   9,    45,
                    313,  715,  4,    46,
                    804,  224,  5,    47,
                    961,  67,   6,    48,
                    973,  55,   7,    49,
                    0,    1028, 0,    50,
                    0,    1028, 1,    51,
                    0,    1028, 2,    52,
                    0,    1028, 3,    53,
                ),
                kotlinDebugSegment = intArrayOf(
                    1,   184, 0,
                    2,   184, 0,
                    3,   184, 0,
                    4,   184, 0,
                    7,   185, 0,
                    8,   185, 0,
                    9,   185, 0,
                    11,  185, 0,
                    12,  185, 0,
                    13,  185, 0,
                    15,  185, 0,
                    16,  185, 0,
                    18,  185, 0,
                    19,  185, 0,
                    20,  185, 0,
                    24,  188, 0,
                    25,  188, 0,
                    26,  188, 0,
                    30,  191, 0,
                    31,  191, 0,
                    32,  191, 0,
                    33,  191, 0,
                    35,  192, 0,
                    36,  192, 0,
                    38,  192, 0,
                    39,  192, 0,
                    41,  195, 0,
                    42,  195, 0,
                    43,  195, 0,
                    48,  195, 0,
                    49,  195, 0,
                    51,  188, 0,
                    52,  188, 0,
                    53,  188, 0,
                    56,  203, 0,
                    57,  203, 0,
                    58,  203, 0,
                    60,  203, 0,
                    61,  203, 0,
                    62,  203, 0,
                    63,  203, 0,
                    64,  203, 0,
                    65,  203, 0,
                    66,  203, 0,
                    67,  203, 0,
                    68,  203, 0,
                    69,  203, 0,
                    70,  203, 0,
                    71,  203, 0,
                    72,  203, 0,
                )
            )
        )
    }

    // FunctionDescriptorResolver.initializeFunctionDescriptorAndExplicitReturnType in FunctionDescriptorResolver.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/compiler/frontend/src/org/jetbrains/kotlin/resolve/FunctionDescriptorResolver.kt#L184
    fun testFunctionDescriptorResolverInitializeFunctionDescriptorAndExplicitReturnType() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "initializeFunctionDescriptorAndExplicitReturnType",
                sourceNames = arrayOf(
                    "FunctionDescriptorResolver.kt",
                    "_Collections.kt",
                    "fake.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/resolve/FunctionDescriptorResolver",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "kotlin/jvm/internal/FakeKt"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-mapNotNull-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$contextReceiverTypes\$1:I",
                    "it:Lorg/jetbrains/kotlin/psi/KtContextReceiver;",
                    "\$i\$a\$-let-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$1\$iv\$iv:I",
                    "it\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$a\$-forEach-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$iv\$iv:I",
                    "element\$iv\$iv:Ljava/lang/Object;",
                    "element\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$forEach:I",
                    "\$this\$forEach\$iv\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$mapNotNullTo:I",
                    "\$this\$mapNotNullTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$mapNotNull:I",
                    "\$this\$mapNotNull\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-map-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$contextReceiverTypes\$2:I",
                    "it:Lorg/jetbrains/kotlin/psi/KtTypeReference;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-let-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$returnType\$1:I",
                    "\$i\$a\$-apply-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$userData\$1:I",
                    "\$this\$initializeFunctionDescriptorAndExplicitReturnType_u24lambda_u2d4:Ljava/util/Map;",
                    "\$i\$a\$-let-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$extensionReceiver\$1:I",
                    "splitter:Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationSplitter;",
                    "it:Lorg/jetbrains/kotlin/types/KotlinType;",
                    "\$i\$a\$-mapNotNull-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$contextReceiverDescriptors\$1:I",
                    "\$i\$a\$-let-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$1:I",
                    "it:Ljava/lang/String;",
                    "\$i\$a\$-let-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$2\$1:I",
                    "\$i\$a\$-forEach-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$2:I",
                    "contextReceiverDescriptor:Lorg/jetbrains/kotlin/descriptors/ReceiverParameterDescriptor;",
                    "i:I",
                    "element\$iv:Ljava/lang/Object;",
                    "\$this\$forEach\$iv:Ljava/lang/Iterable;",
                    "labelNameToReceiverMap:Lcom/google/common/collect/HashMultimap;",
                    "\$i\$a\$-takeIf-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$3:I",
                    "it:Ljava/util/Map;",
                    "\$i\$a\$-let-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$4:I",
                    "valueParameterDescriptor:Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;",
                    "headerScope:Lorg/jetbrains/kotlin/resolve/scopes/LexicalWritableScope;",
                    "typeParameterDescriptors:Ljava/util/List;",
                    "receiverTypeRef:Lorg/jetbrains/kotlin/psi/KtTypeReference;",
                    "receiverType:Lorg/jetbrains/kotlin/types/KotlinType;",
                    "contextReceivers:Ljava/util/List;",
                    "contextReceiverTypes:Ljava/util/List;",
                    "valueParameterDescriptors:Ljava/util/List;",
                    "returnType:Lorg/jetbrains/kotlin/types/KotlinType;",
                    "visibility:Lorg/jetbrains/kotlin/descriptors/DescriptorVisibility;",
                    "modality:Lorg/jetbrains/kotlin/descriptors/Modality;",
                    "contractProvider:Lorg/jetbrains/kotlin/contracts/description/LazyContractProvider;",
                    "userData:Ljava/util/Map;",
                    "extensionReceiver:Lorg/jetbrains/kotlin/descriptors/ReceiverParameterDescriptor;",
                    "contextReceiverDescriptors:Ljava/util/List;",
                    "this:Lorg/jetbrains/kotlin/resolve/FunctionDescriptorResolver;",
                    "container:Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;",
                    "scope:Lorg/jetbrains/kotlin/resolve/scopes/LexicalScope;",
                    "function:Lorg/jetbrains/kotlin/psi/KtFunction;",
                    "functionDescriptor:Lorg/jetbrains/kotlin/descriptors/impl/SimpleFunctionDescriptorImpl;",
                    "trace:Lorg/jetbrains/kotlin/resolve/BindingTrace;",
                    "expectedFunctionType:Lorg/jetbrains/kotlin/types/KotlinType;",
                    "dataFlowInfo:Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowInfo;",
                    "inferenceSession:Lorg/jetbrains/kotlin/resolve/calls/components/InferenceSession;"
                ),
                allLineLocations = intArrayOf(
                    48,   184,  184,  0,
                    52,   185,  185,  0,
                    59,   186,  186,  0,
                    78,   184,  184,  0,
                    83,   190,  190,  0,
                    106,  189,  189,  0,
                    108,  191,  191,  0,
                    133,  193,  193,  0,
                    141,  195,  195,  0,
                    146,  196,  196,  0,
                    166,  198,  198,  0,
                    183,  195,  195,  0,
                    183,  194,  194,  0,
                    185,  201,  201,  0,
                    200,  203,  203,  0,
                    216,  204,  204,  0,
                    223,  205,  205,  0,
                    227,  520,  1601, 1,
                    246,  528,  1609, 1,
                    253,  529,  1849, 1,
                    288,  528,  1609, 1,
                    298,  205,  205,  0,
                    309,  530,  1,    2,
                    312,  528,  1609, 1,
                    322,  528,  1609, 1,
                    325,  528,  1609, 1,
                    329,  531,  1850, 1,
                    330,  532,  1610, 1,
                    335,  520,  1601, 1,
                    341,  206,  206,  0,
                    345,  533,  1547, 1,
                    371,  534,  1618, 1,
                    399,  535,  1619, 1,
                    413,  206,  206,  0,
                    442,  536,  1620, 1,
                    447,  533,  1547, 1,
                    448,  203,  203,  0,
                    448,  202,  202,  0,
                    450,  209,  209,  0,
                    465,  208,  208,  0,
                    467,  211,  211,  0,
                    472,  213,  213,  0,
                    484,  537,  1,    2,
                    487,  213,  213,  0,
                    504,  213,  213,  0,
                    507,  213,  213,  0,
                    511,  215,  215,  0,
                    535,  217,  217,  0,
                    551,  218,  218,  0,
                    559,  216,  216,  0,
                    571,  221,  221,  0,
                    587,  222,  222,  0,
                    599,  222,  222,  0,
                    606,  223,  223,  0,
                    611,  224,  224,  0,
                    624,  227,  227,  0,
                    651,  228,  228,  0,
                    667,  230,  230,  0,
                    671,  222,  222,  0,
                    674,  222,  222,  0,
                    676,  232,  232,  0,
                    687,  233,  233,  0,
                    724,  235,  235,  0,
                    739,  234,  234,  0,
                    742,  232,  232,  0,
                    745,  232,  232,  0,
                    749,  238,  238,  0,
                    759,  538,  1601, 1,
                    778,  546,  1609, 1,
                    785,  547,  1849, 1,
                    820,  546,  1609, 1,
                    830,  239,  239,  0,
                    867,  241,  241,  0,
                    882,  240,  240,  0,
                    891,  548,  1,    2,
                    894,  546,  1609, 1,
                    904,  546,  1609, 1,
                    907,  546,  1609, 1,
                    911,  549,  1850, 1,
                    912,  550,  1610, 1,
                    917,  538,  1601, 1,
                    918,  238,  238,  0,
                    920,  245,  245,  0,
                    935,  246,  246,  0,
                    940,  247,  247,  0,
                    950,  248,  248,  0,
                    964,  249,  249,  0,
                    976,  248,  248,  0,
                    979,  248,  248,  0,
                    982,  252,  252,  0,
                    1015, 253,  253,  0,
                    1019, 551,  1849, 1,
                    1057, 253,  253,  0,
                    1080, 254,  254,  0,
                    1104, 255,  255,  0,
                    1114, 256,  256,  0,
                    1118, 254,  254,  0,
                    1125, 254,  254,  0,
                    1128, 257,  257,  0,
                    1132, 552,  1850, 1,
                    1133, 259,  259,  0,
                    1147, 262,  262,  0,
                    1149, 263,  263,  0,
                    1151, 264,  264,  0,
                    1155, 265,  265,  0,
                    1157, 266,  266,  0,
                    1159, 267,  267,  0,
                    1161, 268,  268,  0,
                    1163, 269,  269,  0,
                    1165, 270,  270,  0,
                    1167, 271,  271,  0,
                    1175, 553,  1,    2,
                    1196, 271,  271,  0,
                    1211, 271,  271,  0,
                    1234, 271,  271,  0,
                    1243, 262,  262,  0,
                    1247, 274,  274,  0,
                    1261, 275,  275,  0,
                    1275, 276,  276,  0,
                    1289, 277,  277,  0,
                    1303, 278,  278,  0,
                    1317, 279,  279,  0,
                    1331, 280,  280,  0,
                    1350, 281,  281,  0,
                    1374, 280,  280,  0,
                    1377, 282,  282,  0,
                    1389, 284,  284,  0,
                    1397, 553,  1,    2,
                    1400, 284,  284,  0,
                    1411, 284,  284,  0,
                    1418, 284,  284,  0,
                    1421, 285,  285,  0,
                    1452, 286,  286,  0,
                    1468, 288,  288,  0,
                ),
                localVariableTable = intArrayOf(
                    298,  5,    27,   0,
                    295,  8,    26,   1,
                    312,  10,   29,   2,
                    309,  13,   28,   3,
                    288,  38,   25,   4,
                    285,  41,   24,   5,
                    281,  45,   23,   6,
                    253,  77,   21,   7,
                    250,  80,   20,   8,
                    246,  86,   19,   9,
                    243,  89,   17,   10,
                    243,  89,   18,   11,
                    227,  109,  16,   12,
                    224,  112,  15,   13,
                    413,  17,   23,   14,
                    410,  20,   22,   15,
                    399,  40,   21,   16,
                    371,  73,   19,   17,
                    368,  76,   17,   18,
                    368,  76,   18,   11,
                    345,  103,  16,   19,
                    342,  106,  15,   20,
                    487,  17,   20,   21,
                    484,  20,   19,   15,
                    606,  62,   23,   22,
                    603,  65,   22,   23,
                    687,  55,   24,   24,
                    724,  18,   25,   25,
                    684,  58,   23,   26,
                    830,  55,   35,   27,
                    867,  18,   36,   25,
                    827,  58,   34,   26,
                    894,  10,   38,   2,
                    891,  13,   37,   3,
                    820,  88,   33,   4,
                    817,  91,   32,   5,
                    813,  95,   31,   6,
                    785,  127,  29,   7,
                    782,  130,  28,   8,
                    778,  136,  27,   9,
                    775,  139,  25,   10,
                    775,  139,  26,   11,
                    759,  159,  24,   12,
                    756,  162,  23,   13,
                    964,  9,    27,   28,
                    961,  12,   26,   29,
                    1104, 11,   33,   30,
                    1101, 14,   32,   29,
                    1057, 72,   29,   31,
                    1067, 62,   30,   32,
                    1080, 49,   31,   33,
                    1047, 82,   27,   34,
                    1019, 114,  25,   7,
                    1016, 117,  24,   35,
                    940,  207,  23,   36,
                    1196, 16,   25,   37,
                    1193, 19,   24,   38,
                    1400, 8,    25,   39,
                    1397, 11,   24,   26,
                    1452, 13,   24,   40,
                    83,   1386, 9,    41,
                    108,  1361, 10,   42,
                    141,  1328, 11,   43,
                    185,  1284, 12,   44,
                    200,  1269, 13,   45,
                    450,  1019, 14,   46,
                    467,  1002, 15,   47,
                    511,  958,  16,   48,
                    535,  934,  17,   49,
                    571,  898,  18,   50,
                    587,  882,  19,   51,
                    676,  793,  20,   52,
                    749,  720,  21,   53,
                    920,  549,  22,   54,
                    0,    1469, 0,    55,
                    0,    1469, 1,    56,
                    0,    1469, 2,    57,
                    0,    1469, 3,    58,
                    0,    1469, 4,    59,
                    0,    1469, 5,    60,
                    0,    1469, 6,    61,
                    0,    1469, 7,    62,
                    0,    1469, 8,    63,
                ),
                kotlinDebugSegment = intArrayOf(
                    17,  205, 0,
                    18,  205, 0,
                    19,  205, 0,
                    20,  205, 0,
                    22,  205, 0,
                    23,  205, 0,
                    24,  205, 0,
                    25,  205, 0,
                    26,  205, 0,
                    27,  205, 0,
                    28,  205, 0,
                    30,  206, 0,
                    31,  206, 0,
                    32,  206, 0,
                    34,  206, 0,
                    35,  206, 0,
                    67,  238, 0,
                    68,  238, 0,
                    69,  238, 0,
                    70,  238, 0,
                    74,  238, 0,
                    75,  238, 0,
                    76,  238, 0,
                    77,  238, 0,
                    78,  238, 0,
                    79,  238, 0,
                    80,  238, 0,
                    91,  253, 0,
                    99,  253, 0,
                )
            ),
            dex = MockMethodInfo(
                name = "initializeFunctionDescriptorAndExplicitReturnType",
                sourceNames = arrayOf(
                    "FunctionDescriptorResolver.kt",
                    "_Collections.kt",
                    "fake.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/resolve/FunctionDescriptorResolver",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "kotlin/jvm/internal/FakeKt"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-mapNotNull-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$contextReceiverTypes\$1:I",
                    "it:Lorg/jetbrains/kotlin/psi/KtContextReceiver;",
                    "\$i\$a\$-let-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$1\$iv\$iv:I",
                    "it\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$a\$-forEach-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$iv\$iv:I",
                    "element\$iv\$iv:Ljava/lang/Object;",
                    "element\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$forEach:I",
                    "\$this\$forEach\$iv\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$mapNotNullTo:I",
                    "\$this\$mapNotNullTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$mapNotNull:I",
                    "\$this\$mapNotNull\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-map-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$contextReceiverTypes\$2:I",
                    "it:Lorg/jetbrains/kotlin/psi/KtTypeReference;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-let-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$returnType\$1:I",
                    "\$i\$a\$-apply-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$userData\$1:I",
                    "\$this\$initializeFunctionDescriptorAndExplicitReturnType_u24lambda_u2d4:Ljava/util/Map;",
                    "\$i\$a\$-let-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$extensionReceiver\$1:I",
                    "splitter:Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationSplitter;",
                    "it:Lorg/jetbrains/kotlin/types/KotlinType;",
                    "\$i\$a\$-mapNotNull-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$contextReceiverDescriptors\$1:I",
                    "\$i\$a\$-let-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$1:I",
                    "it:Ljava/lang/String;",
                    "\$i\$a\$-let-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$2\$1:I",
                    "\$i\$a\$-forEach-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$2:I",
                    "contextReceiverDescriptor:Lorg/jetbrains/kotlin/descriptors/ReceiverParameterDescriptor;",
                    "i:I",
                    "element\$iv:Ljava/lang/Object;",
                    "\$this\$forEach\$iv:Ljava/lang/Iterable;",
                    "labelNameToReceiverMap:Lcom/google/common/collect/HashMultimap;",
                    "\$i\$a\$-takeIf-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$3:I",
                    "it:Ljava/util/Map;",
                    "\$i\$a\$-let-FunctionDescriptorResolver\$initializeFunctionDescriptorAndExplicitReturnType\$4:I",
                    "valueParameterDescriptor:Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;",
                    "headerScope:Lorg/jetbrains/kotlin/resolve/scopes/LexicalWritableScope;",
                    "typeParameterDescriptors:Ljava/util/List;",
                    "receiverTypeRef:Lorg/jetbrains/kotlin/psi/KtTypeReference;",
                    "receiverType:Lorg/jetbrains/kotlin/types/KotlinType;",
                    "contextReceivers:Ljava/util/List;",
                    "contextReceiverTypes:Ljava/util/List;",
                    "valueParameterDescriptors:Ljava/util/List;",
                    "returnType:Lorg/jetbrains/kotlin/types/KotlinType;",
                    "visibility:Lorg/jetbrains/kotlin/descriptors/DescriptorVisibility;",
                    "modality:Lorg/jetbrains/kotlin/descriptors/Modality;",
                    "contractProvider:Lorg/jetbrains/kotlin/contracts/description/LazyContractProvider;",
                    "userData:Ljava/util/Map;",
                    "extensionReceiver:Lorg/jetbrains/kotlin/descriptors/ReceiverParameterDescriptor;",
                    "contextReceiverDescriptors:Ljava/util/List;",
                    "this:Lorg/jetbrains/kotlin/resolve/FunctionDescriptorResolver;",
                    "container:Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;",
                    "scope:Lorg/jetbrains/kotlin/resolve/scopes/LexicalScope;",
                    "function:Lorg/jetbrains/kotlin/psi/KtFunction;",
                    "functionDescriptor:Lorg/jetbrains/kotlin/descriptors/impl/SimpleFunctionDescriptorImpl;",
                    "trace:Lorg/jetbrains/kotlin/resolve/BindingTrace;",
                    "expectedFunctionType:Lorg/jetbrains/kotlin/types/KotlinType;",
                    "dataFlowInfo:Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowInfo;",
                    "inferenceSession:Lorg/jetbrains/kotlin/resolve/calls/components/InferenceSession;"
                ),
                allLineLocations = intArrayOf(
                    48,   184,  184,  0,
                    52,   185,  185,  0,
                    59,   186,  186,  0,
                    78,   184,  184,  0,
                    83,   190,  190,  0,
                    106,  189,  189,  0,
                    108,  191,  191,  0,
                    133,  193,  193,  0,
                    141,  195,  195,  0,
                    146,  196,  196,  0,
                    166,  198,  198,  0,
                    183,  195,  195,  0,
                    183,  194,  194,  0,
                    185,  201,  201,  0,
                    200,  203,  203,  0,
                    216,  204,  204,  0,
                    223,  205,  205,  0,
                    227,  520,  1601, 1,
                    246,  528,  1609, 1,
                    253,  529,  1849, 1,
                    288,  528,  1609, 1,
                    298,  205,  205,  0,
                    309,  530,  1,    2,
                    312,  528,  1609, 1,
                    322,  528,  1609, 1,
                    325,  528,  1609, 1,
                    329,  531,  1850, 1,
                    330,  532,  1610, 1,
                    335,  520,  1601, 1,
                    341,  206,  206,  0,
                    345,  533,  1547, 1,
                    371,  534,  1618, 1,
                    399,  535,  1619, 1,
                    413,  206,  206,  0,
                    442,  536,  1620, 1,
                    447,  533,  1547, 1,
                    448,  203,  203,  0,
                    448,  202,  202,  0,
                    450,  209,  209,  0,
                    465,  208,  208,  0,
                    467,  211,  211,  0,
                    472,  213,  213,  0,
                    484,  537,  1,    2,
                    487,  213,  213,  0,
                    504,  213,  213,  0,
                    507,  213,  213,  0,
                    511,  215,  215,  0,
                    535,  217,  217,  0,
                    551,  218,  218,  0,
                    559,  216,  216,  0,
                    571,  221,  221,  0,
                    587,  222,  222,  0,
                    599,  222,  222,  0,
                    606,  223,  223,  0,
                    611,  224,  224,  0,
                    624,  227,  227,  0,
                    651,  228,  228,  0,
                    667,  230,  230,  0,
                    671,  222,  222,  0,
                    674,  222,  222,  0,
                    676,  232,  232,  0,
                    687,  233,  233,  0,
                    724,  235,  235,  0,
                    739,  234,  234,  0,
                    742,  232,  232,  0,
                    745,  232,  232,  0,
                    749,  238,  238,  0,
                    759,  538,  1601, 1,
                    778,  546,  1609, 1,
                    785,  547,  1849, 1,
                    820,  546,  1609, 1,
                    830,  239,  239,  0,
                    867,  241,  241,  0,
                    882,  240,  240,  0,
                    891,  548,  1,    2,
                    894,  546,  1609, 1,
                    904,  546,  1609, 1,
                    907,  546,  1609, 1,
                    911,  549,  1850, 1,
                    912,  550,  1610, 1,
                    917,  538,  1601, 1,
                    918,  238,  238,  0,
                    920,  245,  245,  0,
                    935,  246,  246,  0,
                    940,  247,  247,  0,
                    950,  248,  248,  0,
                    964,  249,  249,  0,
                    976,  248,  248,  0,
                    979,  248,  248,  0,
                    982,  252,  252,  0,
                    1015, 253,  253,  0,
                    1019, 551,  1849, 1,
                    1057, 253,  253,  0,
                    1080, 254,  254,  0,
                    1104, 255,  255,  0,
                    1114, 256,  256,  0,
                    1118, 254,  254,  0,
                    1125, 254,  254,  0,
                    1128, 257,  257,  0,
                    1132, 552,  1850, 1,
                    1133, 259,  259,  0,
                    1147, 262,  262,  0,
                    1149, 263,  263,  0,
                    1151, 264,  264,  0,
                    1155, 265,  265,  0,
                    1157, 266,  266,  0,
                    1159, 267,  267,  0,
                    1161, 268,  268,  0,
                    1163, 269,  269,  0,
                    1165, 270,  270,  0,
                    1167, 271,  271,  0,
                    1175, 553,  1,    2,
                    1196, 271,  271,  0,
                    1211, 271,  271,  0,
                    1234, 271,  271,  0,
                    1243, 262,  262,  0,
                    1247, 274,  274,  0,
                    1261, 275,  275,  0,
                    1275, 276,  276,  0,
                    1289, 277,  277,  0,
                    1303, 278,  278,  0,
                    1317, 279,  279,  0,
                    1331, 280,  280,  0,
                    1350, 281,  281,  0,
                    1374, 280,  280,  0,
                    1377, 282,  282,  0,
                    1389, 284,  284,  0,
                    1397, 553,  1,    2,
                    1400, 284,  284,  0,
                    1411, 284,  284,  0,
                    1418, 284,  284,  0,
                    1421, 285,  285,  0,
                    1452, 286,  286,  0,
                    1468, 288,  288,  0,
                ),
                localVariableTable = intArrayOf(
                    298,  5,    27,   0,
                    295,  8,    26,   1,
                    312,  10,   29,   2,
                    309,  13,   28,   3,
                    288,  38,   25,   4,
                    285,  41,   24,   5,
                    281,  45,   23,   6,
                    253,  77,   21,   7,
                    250,  80,   20,   8,
                    246,  86,   19,   9,
                    243,  89,   17,   10,
                    243,  89,   18,   11,
                    227,  109,  16,   12,
                    224,  112,  15,   13,
                    413,  17,   23,   14,
                    410,  20,   22,   15,
                    399,  40,   21,   16,
                    371,  73,   19,   17,
                    368,  76,   17,   18,
                    368,  76,   18,   11,
                    345,  103,  16,   19,
                    342,  106,  15,   20,
                    487,  17,   20,   21,
                    484,  20,   19,   15,
                    606,  62,   23,   22,
                    603,  65,   22,   23,
                    687,  55,   24,   24,
                    724,  18,   25,   25,
                    684,  58,   23,   26,
                    830,  55,   35,   27,
                    867,  18,   36,   25,
                    827,  58,   34,   26,
                    894,  10,   38,   2,
                    891,  13,   37,   3,
                    820,  88,   33,   4,
                    817,  91,   32,   5,
                    813,  95,   31,   6,
                    785,  127,  29,   7,
                    782,  130,  28,   8,
                    778,  136,  27,   9,
                    775,  139,  25,   10,
                    775,  139,  26,   11,
                    759,  159,  24,   12,
                    756,  162,  23,   13,
                    964,  9,    27,   28,
                    961,  12,   26,   29,
                    1104, 11,   33,   30,
                    1101, 14,   32,   29,
                    1057, 72,   29,   31,
                    1067, 62,   30,   32,
                    1080, 49,   31,   33,
                    1047, 82,   27,   34,
                    1019, 114,  25,   7,
                    1016, 117,  24,   35,
                    940,  207,  23,   36,
                    1196, 16,   25,   37,
                    1193, 19,   24,   38,
                    1400, 8,    25,   39,
                    1397, 11,   24,   26,
                    1452, 13,   24,   40,
                    83,   1386, 9,    41,
                    108,  1361, 10,   42,
                    141,  1328, 11,   43,
                    185,  1284, 12,   44,
                    200,  1269, 13,   45,
                    450,  1019, 14,   46,
                    467,  1002, 15,   47,
                    511,  958,  16,   48,
                    535,  934,  17,   49,
                    571,  898,  18,   50,
                    587,  882,  19,   51,
                    676,  793,  20,   52,
                    749,  720,  21,   53,
                    920,  549,  22,   54,
                    0,    1469, 0,    55,
                    0,    1469, 1,    56,
                    0,    1469, 2,    57,
                    0,    1469, 3,    58,
                    0,    1469, 4,    59,
                    0,    1469, 5,    60,
                    0,    1469, 6,    61,
                    0,    1469, 7,    62,
                    0,    1469, 8,    63,
                ),
                kotlinDebugSegment = intArrayOf(
                    17,  205, 0,
                    18,  205, 0,
                    19,  205, 0,
                    20,  205, 0,
                    22,  205, 0,
                    23,  205, 0,
                    24,  205, 0,
                    25,  205, 0,
                    26,  205, 0,
                    27,  205, 0,
                    28,  205, 0,
                    30,  206, 0,
                    31,  206, 0,
                    32,  206, 0,
                    34,  206, 0,
                    35,  206, 0,
                    67,  238, 0,
                    68,  238, 0,
                    69,  238, 0,
                    70,  238, 0,
                    74,  238, 0,
                    75,  238, 0,
                    76,  238, 0,
                    77,  238, 0,
                    78,  238, 0,
                    79,  238, 0,
                    80,  238, 0,
                    91,  253, 0,
                    99,  253, 0,
                )
            )
        )
    }

    // FirJavaFacade.createFirJavaClass in FirJavaFacade.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/compiler/fir/java/src/org/jetbrains/kotlin/fir/java/FirJavaFacade.kt#L213
    fun testFirJavaFacadeCreateFirJavaClass() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "createFirJavaClass",
                sourceNames = arrayOf(
                    "FirJavaFacade.kt",
                    "FirJavaClass.kt",
                    "KtSourceElement.kt",
                    "FirCacheWithPostCompute.kt",
                    "FirStatusUtils.kt",
                    "_Collections.kt",
                    "FirOuterClassTypeParameterRefBuilder.kt",
                    "FirResolvedTypeRefBuilder.kt",
                    "ArrayIntrinsics.kt",
                    "fake.kt",
                    "FirJavaFacade.kt",
                    "_Maps.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/fir/java/FirJavaFacade",
                    "org/jetbrains/kotlin/fir/java/declarations/FirJavaClassKt",
                    "org/jetbrains/kotlin/KtSourceElementKt",
                    "org/jetbrains/kotlin/fir/caches/FirCacheWithPostComputeKt",
                    "org/jetbrains/kotlin/fir/declarations/utils/FirStatusUtilsKt",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "org/jetbrains/kotlin/fir/declarations/builder/FirOuterClassTypeParameterRefBuilderKt",
                    "org/jetbrains/kotlin/fir/types/builder/FirResolvedTypeRefBuilderKt",
                    "kotlin/ArrayIntrinsicsKt",
                    "kotlin/jvm/internal/FakeKt",
                    "org/jetbrains/kotlin/fir/java/FirJavaFacade\$ValueParametersForAnnotationConstructor",
                    "kotlin/collections/MapsKt___MapsKt"
                ),
                variableNames = arrayOf(
                    "\$i\$f\$toKtPsiSourceElement:I",
                    "\$this\$toKtPsiSourceElement_u24default\$iv:Lcom/intellij/psi/PsiElement;",
                    "kind\$iv:Lorg/jetbrains/kotlin/KtSourceElementKind;",
                    "\$i\$f\$getValue:I",
                    "\$this\$getValue\$iv:Lorg/jetbrains/kotlin/fir/caches/FirCache;",
                    "key\$iv:Ljava/lang/Object;",
                    "\$i\$f\$getEffectiveVisibility:I",
                    "\$this\$effectiveVisibility\$iv:Lorg/jetbrains/kotlin/fir/declarations/FirMemberDeclaration;",
                    "\$i\$a\$-let-FirJavaFacade\$createFirJavaClass\$1\$parentEffectiveVisibility\$1:I",
                    "it:Lorg/jetbrains/kotlin/fir/symbols/impl/FirRegularClassSymbol;",
                    "\$i\$a\$-buildOuterClassTypeParameterRef-FirJavaFacade\$createFirJavaClass\$1\$1\$1:I",
                    "\$this\$createFirJavaClass_u24lambda_u2d25_u24lambda_u2d20_u24lambda_u2d19:Lorg/jetbrains/kotlin/fir/declarations/builder/FirOuterClassTypeParameterRefBuilder;",
                    "\$i\$f\$buildOuterClassTypeParameterRef:I",
                    "\$i\$a\$-map-FirJavaFacade\$createFirJavaClass\$1\$1:I",
                    "it:Lorg/jetbrains/kotlin/fir/declarations/FirTypeParameterRef;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-mapTo-FirJavaFacade\$createFirJavaClass\$1\$2:I",
                    "it:Lorg/jetbrains/kotlin/load/java/structure/JavaClassifierType;",
                    "item\$iv:Ljava/lang/Object;",
                    "\$this\$mapTo\$iv:Ljava/lang/Iterable;",
                    "destination\$iv:Ljava/util/Collection;",
                    "\$i\$f\$emptyArray:I",
                    "\$i\$a\$-buildResolvedTypeRef-FirJavaFacade\$createFirJavaClass\$1\$3:I",
                    "\$this\$createFirJavaClass_u24lambda_u2d25_u24lambda_u2d22:Lorg/jetbrains/kotlin/fir/types/builder/FirResolvedTypeRefBuilder;",
                    "\$i\$f\$buildResolvedTypeRef:I",
                    "\$i\$a\$-map-FirJavaFacade\$createFirJavaClass\$1\$dispatchReceiver\$1:I",
                    "\$i\$a\$-apply-FirJavaFacade\$createFirJavaClass\$1\$4:I",
                    "\$this\$createFirJavaClass_u24lambda_u2d25_u24lambda_u2d24:Lorg/jetbrains/kotlin/fir/declarations/impl/FirResolvedDeclarationStatusImpl;",
                    "javaField:Lorg/jetbrains/kotlin/load/java/structure/JavaField;",
                    "parameterForAnnotationConstructor:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaValueParameter;",
                    "firJavaMethod:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaMethod;",
                    "javaMethod:Lorg/jetbrains/kotlin/load/java/structure/JavaMethod;",
                    "javaConstructor:Lorg/jetbrains/kotlin/load/java/structure/JavaConstructor;",
                    "\$this\$toKtPsiSourceElement\$iv:Lcom/intellij/psi/PsiElement;",
                    "\$i\$a\$-buildJavaClass-FirJavaFacade\$createFirJavaClass\$1:I",
                    "visibility:Lorg/jetbrains/kotlin/descriptors/Visibility;",
                    "selfEffectiveVisibility:Lorg/jetbrains/kotlin/descriptors/EffectiveVisibility;",
                    "parentEffectiveVisibility:Lorg/jetbrains/kotlin/descriptors/EffectiveVisibility;",
                    "effectiveVisibility:Lorg/jetbrains/kotlin/descriptors/EffectiveVisibility;",
                    "classTypeParameters:Ljava/util/List;",
                    "dispatchReceiver:Lorg/jetbrains/kotlin/fir/types/ConeClassLikeType;",
                    "javaClassDeclaredConstructors:Ljava/util/Collection;",
                    "constructorId:Lorg/jetbrains/kotlin/name/CallableId;",
                    "\$this\$createFirJavaClass_u24lambda_u2d25:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaClassBuilder;",
                    "\$i\$f\$buildJavaClass:I",
                    "\$i\$f\$getModality:I",
                    "\$this\$modality\$iv:Lorg/jetbrains/kotlin/fir/declarations/FirMemberDeclaration;",
                    "\$i\$a\$-let-FirJavaFacade\$createFirJavaClass\$2\$inheritors\$1\$1:I",
                    "it:Lorg/jetbrains/kotlin/load/java/structure/JavaClass;",
                    "\$i\$a\$-mapNotNull-FirJavaFacade\$createFirJavaClass\$2\$inheritors\$1:I",
                    "classifier:Lorg/jetbrains/kotlin/load/java/structure/JavaClass;",
                    "classifierType:Lorg/jetbrains/kotlin/load/java/structure/JavaClassifierType;",
                    "\$i\$a\$-let-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$1\$iv\$iv:I",
                    "it\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$a\$-forEach-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$iv\$iv:I",
                    "element\$iv\$iv:Ljava/lang/Object;",
                    "element\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$forEach:I",
                    "\$this\$forEach\$iv\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$mapNotNullTo:I",
                    "\$this\$mapNotNullTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$mapNotNull:I",
                    "\$this\$mapNotNull\$iv:Ljava/lang/Iterable;",
                    "inheritors:Ljava/util/List;",
                    "\$i\$a\$-let-FirJavaFacade\$createFirJavaClass\$2\$1\$1:I",
                    "javaDefaultValue:Lorg/jetbrains/kotlin/load/java/structure/JavaAnnotationArgument;",
                    "\$i\$a\$-forEach-FirJavaFacade\$createFirJavaClass\$2\$1:I",
                    "firValueParameter:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaValueParameter;",
                    "\$i\$a\$-let-FirJavaFacade\$ValueParametersForAnnotationConstructor\$forEach\$1\$iv:I",
                    "javaMethod\$iv:Lorg/jetbrains/kotlin/load/java/structure/JavaMethod;",
                    "firJavaValueParameter\$iv:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaValueParameter;",
                    "\$i\$a\$-forEach-FirJavaFacade\$ValueParametersForAnnotationConstructor\$forEach\$2\$iv:I",
                    "element\$iv\$iv:Ljava/util/Map\$Entry;",
                    "\$this\$forEach\$iv\$iv:Ljava/util/Map;",
                    "this_\$iv:Lorg/jetbrains/kotlin/fir/java/FirJavaFacade\$ValueParametersForAnnotationConstructor;",
                    "\$i\$a\$-apply-FirJavaFacade\$createFirJavaClass\$2:I",
                    "\$this\$createFirJavaClass_u24lambda_u2d30:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaClass;",
                    "valueParametersForAnnotationConstructor:Lorg/jetbrains/kotlin/fir/java/FirJavaFacade\$ValueParametersForAnnotationConstructor;",
                    "classIsAnnotation:Z",
                    "this:Lorg/jetbrains/kotlin/fir/java/FirJavaFacade;",
                    "javaClass:Lorg/jetbrains/kotlin/load/java/structure/JavaClass;",
                    "classSymbol:Lorg/jetbrains/kotlin/fir/symbols/impl/FirRegularClassSymbol;",
                    "parentClassSymbol:Lorg/jetbrains/kotlin/fir/symbols/impl/FirRegularClassSymbol;",
                    "classId:Lorg/jetbrains/kotlin/name/ClassId;",
                    "javaTypeParameterStack:Lorg/jetbrains/kotlin/fir/java/JavaTypeParameterStack;"
                ),
                allLineLocations = intArrayOf(
                    0,    213,  213,  0,
                    9,    214,  214,  0,
                    26,   215,  215,  0,
                    29,   626,  176,  1,
                    45,   216,  216,  0,
                    87,   627,  427,  2,
                    98,   627,  427,  2,
                    102,  628,  428,  2,
                    125,  629,  429,  2,
                    161,  630,  430,  2,
                    165,  216,  216,  0,
                    173,  217,  217,  0,
                    182,  218,  218,  0,
                    188,  219,  219,  0,
                    199,  220,  220,  0,
                    207,  221,  221,  0,
                    214,  222,  222,  0,
                    223,  223,  223,  0,
                    260,  224,  224,  0,
                    278,  225,  225,  0,
                    289,  226,  226,  0,
                    309,  631,  15,   3,
                    320,  226,  226,  0,
                    323,  227,  227,  0,
                    330,  228,  228,  0,
                    351,  229,  229,  0,
                    362,  231,  231,  0,
                    386,  232,  232,  0,
                    396,  233,  233,  0,
                    428,  632,  28,   4,
                    472,  233,  233,  0,
                    473,  232,  232,  0,
                    474,  232,  232,  0,
                    479,  234,  234,  0,
                    485,  232,  232,  0,
                    487,  235,  235,  0,
                    506,  236,  236,  0,
                    519,  238,  238,  0,
                    533,  239,  239,  0,
                    550,  240,  240,  0,
                    562,  241,  241,  0,
                    590,  633,  1547, 5,
                    616,  634,  1618, 5,
                    644,  635,  1619, 5,
                    658,  242,  242,  0,
                    661,  636,  40,   6,
                    662,  639,  43,   6,
                    678,  242,  242,  0,
                    692,  639,  43,   6,
                    695,  242,  242,  0,
                    708,  640,  1620, 5,
                    713,  633,  1547, 5,
                    719,  241,  241,  0,
                    727,  245,  245,  0,
                    751,  641,  1618, 5,
                    779,  642,  1619, 5,
                    793,  245,  245,  0,
                    819,  643,  1620, 5,
                    822,  246,  246,  0,
                    835,  247,  247,  0,
                    840,  248,  248,  0,
                    843,  644,  46,   7,
                    844,  647,  49,   7,
                    862,  249,  249,  0,
                    873,  648,  26,   8,
                    883,  249,  249,  0,
                    896,  250,  250,  0,
                    901,  647,  49,   7,
                    904,  247,  247,  0,
                    910,  254,  254,  0,
                    927,  649,  1547, 5,
                    953,  650,  1618, 5,
                    981,  651,  1619, 5,
                    995,  254,  254,  0,
                    1014, 652,  1620, 5,
                    1019, 649,  1547, 5,
                    1023, 254,  254,  0,
                    1028, 256,  256,  0,
                    1034, 257,  257,  0,
                    1036, 258,  258,  0,
                    1045, 259,  259,  0,
                    1047, 256,  256,  0,
                    1052, 260,  260,  0,
                    1061, 261,  261,  0,
                    1087, 262,  262,  0,
                    1093, 263,  263,  0,
                    1099, 264,  264,  0,
                    1105, 265,  265,  0,
                    1126, 266,  266,  0,
                    1132, 260,  260,  0,
                    1138, 256,  256,  0,
                    1141, 269,  269,  0,
                    1176, 270,  270,  0,
                    1205, 273,  273,  0,
                    1240, 274,  274,  0,
                    1251, 275,  275,  0,
                    1252, 276,  276,  0,
                    1254, 277,  277,  0,
                    1256, 278,  278,  0,
                    1258, 279,  279,  0,
                    1260, 275,  275,  0,
                    1265, 281,  281,  0,
                    1281, 283,  283,  0,
                    1286, 284,  284,  0,
                    1296, 285,  285,  0,
                    1312, 286,  286,  0,
                    1327, 288,  288,  0,
                    1345, 292,  292,  0,
                    1353, 293,  293,  0,
                    1395, 295,  295,  0,
                    1405, 296,  296,  0,
                    1415, 297,  297,  0,
                    1424, 299,  299,  0,
                    1433, 300,  300,  0,
                    1434, 301,  301,  0,
                    1436, 302,  302,  0,
                    1437, 303,  303,  0,
                    1439, 304,  304,  0,
                    1441, 305,  305,  0,
                    1443, 306,  306,  0,
                    1444, 299,  299,  0,
                    1453, 309,  309,  0,
                    1484, 310,  310,  0,
                    1493, 311,  311,  0,
                    1495, 312,  312,  0,
                    1497, 313,  313,  0,
                    1498, 314,  314,  0,
                    1500, 315,  315,  0,
                    1502, 316,  316,  0,
                    1504, 317,  317,  0,
                    1505, 310,  310,  0,
                    1517, 321,  321,  0,
                    1528, 322,  322,  0,
                    1533, 323,  323,  0,
                    1537, 324,  324,  0,
                    1549, 325,  325,  0,
                    1560, 322,  322,  0,
                    1567, 327,  327,  0,
                    1606, 329,  329,  0,
                    1611, 330,  330,  0,
                    1621, 331,  331,  0,
                    1622, 332,  332,  0,
                    1673, 653,  427,  2,
                    1677, 654,  428,  2,
                    1700, 655,  429,  2,
                    1736, 656,  430,  2,
                    1740, 332,  332,  0,
                    1761, 333,  333,  0,
                    1763, 334,  334,  0,
                    1765, 335,  335,  0,
                    1767, 331,  331,  0,
                    1772, 330,  330,  0,
                    1782, 338,  338,  0,
                    1785, 626,  176,  1,
                    1790, 338,  338,  0,
                    1797, 339,  339,  0,
                    1807, 657,  11,   4,
                    1817, 339,  339,  0,
                    1823, 340,  340,  0,
                    1837, 658,  1601, 5,
                    1856, 666,  1609, 5,
                    1863, 667,  1849, 5,
                    1898, 666,  1609, 5,
                    1908, 341,  341,  0,
                    1936, 342,  342,  0,
                    1944, 583,  1,    9,
                    1947, 342,  342,  0,
                    1964, 342,  342,  0,
                    1967, 342,  342,  0,
                    1975, 668,  1,    9,
                    1978, 666,  1609, 5,
                    1988, 666,  1609, 5,
                    1991, 666,  1609, 5,
                    1995, 669,  1850, 5,
                    1996, 670,  1610, 5,
                    2001, 658,  1601, 5,
                    2002, 340,  340,  0,
                    2004, 344,  344,  0,
                    2014, 347,  347,  0,
                    2019, 349,  349,  0,
                    2026, 671,  127,  10,
                    2037, 672,  1,    9,
                    2040, 671,  127,  10,
                    2071, 350,  350,  0,
                    2087, 351,  351,  0,
                    2089, 352,  352,  0,
                    2105, 351,  351,  0,
                    2108, 353,  353,  0,
                    2112, 350,  350,  0,
                    2119, 350,  350,  0,
                    2122, 354,  354,  0,
                    2126, 671,  127,  10,
                    2133, 671,  127,  10,
                    2136, 673,  128,  10,
                    2146, 674,  211,  11,
                    2158, 674,  211,  11,
                    2189, 673,  128,  10,
                    2196, 673,  128,  10,
                    2208, 673,  128,  10,
                    2224, 350,  350,  0,
                    2240, 351,  351,  0,
                    2242, 352,  352,  0,
                    2258, 351,  351,  0,
                    2261, 353,  353,  0,
                    2265, 350,  350,  0,
                    2272, 350,  350,  0,
                    2275, 354,  354,  0,
                    2279, 675,  212,  11,
                    2280, 676,  129,  10,
                    2281, 356,  356,  0,
                    2285, 338,  338,  0,
                    2288, 215,  215,  0,
                ),
                localVariableTable = intArrayOf(
                    98,   64,   15,   0,
                    87,   75,   13,   1,
                    95,   67,   14,   2,
                    309,  8,    14,   3,
                    306,  11,   12,   4,
                    306,  11,   13,   5,
                    428,  44,   20,   6,
                    425,  47,   19,   7,
                    396,  77,   18,   8,
                    393,  80,   16,   9,
                    678,  12,   31,   10,
                    675,  15,   30,   11,
                    661,  34,   28,   12,
                    658,  38,   27,   13,
                    655,  41,   25,   14,
                    644,  61,   24,   15,
                    616,  94,   22,   16,
                    613,  97,   20,   17,
                    613,  97,   21,   18,
                    590,  124,  19,   19,
                    587,  127,  18,   20,
                    793,  14,   23,   21,
                    790,  17,   22,   22,
                    779,  37,   21,   23,
                    751,  70,   19,   16,
                    748,  73,   16,   24,
                    748,  73,   18,   25,
                    873,  7,    21,   26,
                    862,  35,   20,   27,
                    859,  38,   19,   28,
                    843,  61,   16,   29,
                    995,  7,    27,   30,
                    992,  10,   25,   14,
                    981,  30,   24,   15,
                    953,  63,   22,   16,
                    950,  66,   20,   17,
                    950,  66,   21,   18,
                    927,  93,   19,   19,
                    924,  96,   18,   20,
                    1061, 66,   20,   31,
                    1058, 69,   19,   32,
                    1176, 26,   19,   33,
                    1296, 46,   21,   34,
                    1265, 77,   20,   35,
                    1240, 102,  19,   36,
                    1484, 30,   21,   37,
                    1673, 64,   27,   0,
                    1670, 67,   24,   38,
                    1670, 67,   25,   2,
                    45,   1738, 11,   39,
                    207,  1576, 17,   40,
                    386,  1397, 12,   41,
                    487,  1296, 13,   42,
                    506,  1277, 14,   43,
                    533,  1250, 15,   44,
                    1028, 755,  16,   45,
                    1353, 430,  18,   46,
                    1395, 388,  19,   47,
                    42,   1741, 10,   48,
                    29,   1759, 8,    49,
                    1807, 10,   12,   50,
                    1804, 13,   11,   51,
                    1947, 17,   28,   52,
                    1944, 20,   27,   53,
                    1908, 61,   24,   54,
                    1936, 33,   26,   55,
                    1905, 64,   23,   56,
                    1978, 10,   30,   57,
                    1975, 13,   29,   58,
                    1898, 94,   22,   59,
                    1895, 97,   21,   60,
                    1891, 101,  20,   61,
                    1863, 133,  18,   62,
                    1860, 136,  17,   63,
                    1856, 142,  16,   64,
                    1853, 145,  14,   65,
                    1853, 145,  15,   18,
                    1837, 165,  13,   66,
                    1834, 168,  12,   67,
                    2004, 10,   11,   68,
                    2087, 22,   21,   69,
                    2084, 25,   20,   70,
                    2071, 52,   19,   71,
                    2068, 55,   18,   36,
                    2068, 55,   17,   72,
                    2240, 22,   21,   69,
                    2237, 25,   20,   70,
                    2224, 52,   19,   71,
                    2221, 55,   18,   36,
                    2221, 55,   17,   72,
                    2040, 83,   14,   73,
                    2050, 73,   15,   74,
                    2060, 63,   16,   75,
                    2189, 87,   16,   76,
                    2201, 75,   24,   74,
                    2213, 63,   25,   75,
                    2182, 94,   14,   77,
                    2146, 134,  23,   62,
                    2143, 137,  22,   78,
                    2026, 255,  12,   62,
                    2023, 258,  11,   79,
                    1797, 485,  10,   80,
                    1794, 488,  9,    81,
                    9,    2280, 6,    82,
                    26,   2263, 7,    83,
                    0,    2289, 0,    84,
                    0,    2289, 1,    85,
                    0,    2289, 2,    86,
                    0,    2289, 3,    87,
                    0,    2289, 4,    88,
                    0,    2289, 5,    89,
                ),
                kotlinDebugSegment = intArrayOf(
                    3,   215, 0,
                    5,   216, 0,
                    6,   216, 0,
                    7,   216, 0,
                    8,   216, 0,
                    9,   216, 0,
                    21,  226, 0,
                    29,  233, 0,
                    41,  241, 0,
                    42,  241, 0,
                    43,  241, 0,
                    45,  242, 0,
                    46,  242, 0,
                    48,  242, 0,
                    50,  241, 0,
                    51,  241, 0,
                    54,  245, 0,
                    55,  245, 0,
                    57,  245, 0,
                    61,  248, 0,
                    62,  248, 0,
                    64,  249, 0,
                    67,  248, 0,
                    70,  254, 0,
                    71,  254, 0,
                    72,  254, 0,
                    74,  254, 0,
                    75,  254, 0,
                    142, 332, 0,
                    143, 332, 0,
                    144, 332, 0,
                    145, 332, 0,
                    153, 215, 0,
                    156, 339, 0,
                    159, 340, 0,
                    160, 340, 0,
                    161, 340, 0,
                    162, 340, 0,
                    169, 340, 0,
                    170, 340, 0,
                    171, 340, 0,
                    172, 340, 0,
                    173, 340, 0,
                    174, 340, 0,
                    175, 340, 0,
                    180, 349, 0,
                    181, 349, 0,
                    182, 349, 0,
                    191, 349, 0,
                    192, 349, 0,
                    193, 349, 0,
                    194, 349, 0,
                    195, 349, 0,
                    196, 349, 0,
                    197, 349, 0,
                    198, 349, 0,
                    207, 349, 0,
                    208, 349, 0,
                )
            ),
            dex = MockMethodInfo(
                name = "createFirJavaClass",
                sourceNames = arrayOf(
                    "FirJavaFacade.kt",
                    "FirJavaClass.kt",
                    "KtSourceElement.kt",
                    "FirCacheWithPostCompute.kt",
                    "FirStatusUtils.kt",
                    "_Collections.kt",
                    "FirOuterClassTypeParameterRefBuilder.kt",
                    "FirResolvedTypeRefBuilder.kt",
                    "ArrayIntrinsics.kt",
                    "fake.kt",
                    "FirJavaFacade.kt",
                    "_Maps.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/fir/java/FirJavaFacade",
                    "org/jetbrains/kotlin/fir/java/declarations/FirJavaClassKt",
                    "org/jetbrains/kotlin/KtSourceElementKt",
                    "org/jetbrains/kotlin/fir/caches/FirCacheWithPostComputeKt",
                    "org/jetbrains/kotlin/fir/declarations/utils/FirStatusUtilsKt",
                    "kotlin/collections/CollectionsKt___CollectionsKt",
                    "org/jetbrains/kotlin/fir/declarations/builder/FirOuterClassTypeParameterRefBuilderKt",
                    "org/jetbrains/kotlin/fir/types/builder/FirResolvedTypeRefBuilderKt",
                    "kotlin/ArrayIntrinsicsKt",
                    "kotlin/jvm/internal/FakeKt",
                    "org/jetbrains/kotlin/fir/java/FirJavaFacade\$ValueParametersForAnnotationConstructor",
                    "kotlin/collections/MapsKt___MapsKt"
                ),
                variableNames = arrayOf(
                    "\$i\$f\$toKtPsiSourceElement:I",
                    "\$this\$toKtPsiSourceElement_u24default\$iv:Lcom/intellij/psi/PsiElement;",
                    "kind\$iv:Lorg/jetbrains/kotlin/KtSourceElementKind;",
                    "\$i\$f\$getValue:I",
                    "\$this\$getValue\$iv:Lorg/jetbrains/kotlin/fir/caches/FirCache;",
                    "key\$iv:Ljava/lang/Object;",
                    "\$i\$f\$getEffectiveVisibility:I",
                    "\$this\$effectiveVisibility\$iv:Lorg/jetbrains/kotlin/fir/declarations/FirMemberDeclaration;",
                    "\$i\$a\$-let-FirJavaFacade\$createFirJavaClass\$1\$parentEffectiveVisibility\$1:I",
                    "it:Lorg/jetbrains/kotlin/fir/symbols/impl/FirRegularClassSymbol;",
                    "\$i\$a\$-buildOuterClassTypeParameterRef-FirJavaFacade\$createFirJavaClass\$1\$1\$1:I",
                    "\$this\$createFirJavaClass_u24lambda_u2d25_u24lambda_u2d20_u24lambda_u2d19:Lorg/jetbrains/kotlin/fir/declarations/builder/FirOuterClassTypeParameterRefBuilder;",
                    "\$i\$f\$buildOuterClassTypeParameterRef:I",
                    "\$i\$a\$-map-FirJavaFacade\$createFirJavaClass\$1\$1:I",
                    "it:Lorg/jetbrains/kotlin/fir/declarations/FirTypeParameterRef;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-mapTo-FirJavaFacade\$createFirJavaClass\$1\$2:I",
                    "it:Lorg/jetbrains/kotlin/load/java/structure/JavaClassifierType;",
                    "item\$iv:Ljava/lang/Object;",
                    "\$this\$mapTo\$iv:Ljava/lang/Iterable;",
                    "destination\$iv:Ljava/util/Collection;",
                    "\$i\$f\$emptyArray:I",
                    "\$i\$a\$-buildResolvedTypeRef-FirJavaFacade\$createFirJavaClass\$1\$3:I",
                    "\$this\$createFirJavaClass_u24lambda_u2d25_u24lambda_u2d22:Lorg/jetbrains/kotlin/fir/types/builder/FirResolvedTypeRefBuilder;",
                    "\$i\$f\$buildResolvedTypeRef:I",
                    "\$i\$a\$-map-FirJavaFacade\$createFirJavaClass\$1\$dispatchReceiver\$1:I",
                    "\$i\$a\$-apply-FirJavaFacade\$createFirJavaClass\$1\$4:I",
                    "\$this\$createFirJavaClass_u24lambda_u2d25_u24lambda_u2d24:Lorg/jetbrains/kotlin/fir/declarations/impl/FirResolvedDeclarationStatusImpl;",
                    "javaField:Lorg/jetbrains/kotlin/load/java/structure/JavaField;",
                    "parameterForAnnotationConstructor:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaValueParameter;",
                    "firJavaMethod:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaMethod;",
                    "javaMethod:Lorg/jetbrains/kotlin/load/java/structure/JavaMethod;",
                    "javaConstructor:Lorg/jetbrains/kotlin/load/java/structure/JavaConstructor;",
                    "\$this\$toKtPsiSourceElement\$iv:Lcom/intellij/psi/PsiElement;",
                    "\$i\$a\$-buildJavaClass-FirJavaFacade\$createFirJavaClass\$1:I",
                    "visibility:Lorg/jetbrains/kotlin/descriptors/Visibility;",
                    "selfEffectiveVisibility:Lorg/jetbrains/kotlin/descriptors/EffectiveVisibility;",
                    "parentEffectiveVisibility:Lorg/jetbrains/kotlin/descriptors/EffectiveVisibility;",
                    "effectiveVisibility:Lorg/jetbrains/kotlin/descriptors/EffectiveVisibility;",
                    "classTypeParameters:Ljava/util/List;",
                    "dispatchReceiver:Lorg/jetbrains/kotlin/fir/types/ConeClassLikeType;",
                    "javaClassDeclaredConstructors:Ljava/util/Collection;",
                    "constructorId:Lorg/jetbrains/kotlin/name/CallableId;",
                    "\$this\$createFirJavaClass_u24lambda_u2d25:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaClassBuilder;",
                    "\$i\$f\$buildJavaClass:I",
                    "\$i\$f\$getModality:I",
                    "\$this\$modality\$iv:Lorg/jetbrains/kotlin/fir/declarations/FirMemberDeclaration;",
                    "\$i\$a\$-let-FirJavaFacade\$createFirJavaClass\$2\$inheritors\$1\$1:I",
                    "it:Lorg/jetbrains/kotlin/load/java/structure/JavaClass;",
                    "\$i\$a\$-mapNotNull-FirJavaFacade\$createFirJavaClass\$2\$inheritors\$1:I",
                    "classifier:Lorg/jetbrains/kotlin/load/java/structure/JavaClass;",
                    "classifierType:Lorg/jetbrains/kotlin/load/java/structure/JavaClassifierType;",
                    "\$i\$a\$-let-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$1\$iv\$iv:I",
                    "it\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$a\$-forEach-CollectionsKt___CollectionsKt\$mapNotNullTo\$1\$iv\$iv:I",
                    "element\$iv\$iv:Ljava/lang/Object;",
                    "element\$iv\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$forEach:I",
                    "\$this\$forEach\$iv\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$mapNotNullTo:I",
                    "\$this\$mapNotNullTo\$iv\$iv:Ljava/lang/Iterable;",
                    "\$i\$f\$mapNotNull:I",
                    "\$this\$mapNotNull\$iv:Ljava/lang/Iterable;",
                    "inheritors:Ljava/util/List;",
                    "\$i\$a\$-let-FirJavaFacade\$createFirJavaClass\$2\$1\$1:I",
                    "javaDefaultValue:Lorg/jetbrains/kotlin/load/java/structure/JavaAnnotationArgument;",
                    "\$i\$a\$-forEach-FirJavaFacade\$createFirJavaClass\$2\$1:I",
                    "firValueParameter:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaValueParameter;",
                    "\$i\$a\$-let-FirJavaFacade\$ValueParametersForAnnotationConstructor\$forEach\$1\$iv:I",
                    "javaMethod\$iv:Lorg/jetbrains/kotlin/load/java/structure/JavaMethod;",
                    "firJavaValueParameter\$iv:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaValueParameter;",
                    "\$i\$a\$-forEach-FirJavaFacade\$ValueParametersForAnnotationConstructor\$forEach\$2\$iv:I",
                    "element\$iv\$iv:Ljava/util/Map\$Entry;",
                    "\$this\$forEach\$iv\$iv:Ljava/util/Map;",
                    "this_\$iv:Lorg/jetbrains/kotlin/fir/java/FirJavaFacade\$ValueParametersForAnnotationConstructor;",
                    "\$i\$a\$-apply-FirJavaFacade\$createFirJavaClass\$2:I",
                    "\$this\$createFirJavaClass_u24lambda_u2d30:Lorg/jetbrains/kotlin/fir/java/declarations/FirJavaClass;",
                    "valueParametersForAnnotationConstructor:Lorg/jetbrains/kotlin/fir/java/FirJavaFacade\$ValueParametersForAnnotationConstructor;",
                    "classIsAnnotation:Z",
                    "this:Lorg/jetbrains/kotlin/fir/java/FirJavaFacade;",
                    "javaClass:Lorg/jetbrains/kotlin/load/java/structure/JavaClass;",
                    "classSymbol:Lorg/jetbrains/kotlin/fir/symbols/impl/FirRegularClassSymbol;",
                    "parentClassSymbol:Lorg/jetbrains/kotlin/fir/symbols/impl/FirRegularClassSymbol;",
                    "classId:Lorg/jetbrains/kotlin/name/ClassId;",
                    "javaTypeParameterStack:Lorg/jetbrains/kotlin/fir/java/JavaTypeParameterStack;"
                ),
                allLineLocations = intArrayOf(
                    0,    213,  213,  0,
                    9,    214,  214,  0,
                    26,   215,  215,  0,
                    29,   626,  176,  1,
                    45,   216,  216,  0,
                    87,   627,  427,  2,
                    98,   627,  427,  2,
                    102,  628,  428,  2,
                    125,  629,  429,  2,
                    161,  630,  430,  2,
                    165,  216,  216,  0,
                    173,  217,  217,  0,
                    182,  218,  218,  0,
                    188,  219,  219,  0,
                    199,  220,  220,  0,
                    207,  221,  221,  0,
                    214,  222,  222,  0,
                    223,  223,  223,  0,
                    260,  224,  224,  0,
                    278,  225,  225,  0,
                    289,  226,  226,  0,
                    309,  631,  15,   3,
                    320,  226,  226,  0,
                    323,  227,  227,  0,
                    330,  228,  228,  0,
                    351,  229,  229,  0,
                    362,  231,  231,  0,
                    386,  232,  232,  0,
                    396,  233,  233,  0,
                    428,  632,  28,   4,
                    472,  233,  233,  0,
                    473,  232,  232,  0,
                    474,  232,  232,  0,
                    479,  234,  234,  0,
                    485,  232,  232,  0,
                    487,  235,  235,  0,
                    506,  236,  236,  0,
                    519,  238,  238,  0,
                    533,  239,  239,  0,
                    550,  240,  240,  0,
                    562,  241,  241,  0,
                    590,  633,  1547, 5,
                    616,  634,  1618, 5,
                    644,  635,  1619, 5,
                    658,  242,  242,  0,
                    661,  636,  40,   6,
                    662,  639,  43,   6,
                    678,  242,  242,  0,
                    692,  639,  43,   6,
                    695,  242,  242,  0,
                    708,  640,  1620, 5,
                    713,  633,  1547, 5,
                    719,  241,  241,  0,
                    727,  245,  245,  0,
                    751,  641,  1618, 5,
                    779,  642,  1619, 5,
                    793,  245,  245,  0,
                    819,  643,  1620, 5,
                    822,  246,  246,  0,
                    835,  247,  247,  0,
                    840,  248,  248,  0,
                    843,  644,  46,   7,
                    844,  647,  49,   7,
                    862,  249,  249,  0,
                    873,  648,  26,   8,
                    883,  249,  249,  0,
                    896,  250,  250,  0,
                    901,  647,  49,   7,
                    904,  247,  247,  0,
                    910,  254,  254,  0,
                    927,  649,  1547, 5,
                    953,  650,  1618, 5,
                    981,  651,  1619, 5,
                    995,  254,  254,  0,
                    1014, 652,  1620, 5,
                    1019, 649,  1547, 5,
                    1023, 254,  254,  0,
                    1028, 256,  256,  0,
                    1034, 257,  257,  0,
                    1036, 258,  258,  0,
                    1045, 259,  259,  0,
                    1047, 256,  256,  0,
                    1052, 260,  260,  0,
                    1061, 261,  261,  0,
                    1087, 262,  262,  0,
                    1093, 263,  263,  0,
                    1099, 264,  264,  0,
                    1105, 265,  265,  0,
                    1126, 266,  266,  0,
                    1132, 260,  260,  0,
                    1138, 256,  256,  0,
                    1141, 269,  269,  0,
                    1176, 270,  270,  0,
                    1205, 273,  273,  0,
                    1240, 274,  274,  0,
                    1251, 275,  275,  0,
                    1252, 276,  276,  0,
                    1254, 277,  277,  0,
                    1256, 278,  278,  0,
                    1258, 279,  279,  0,
                    1260, 275,  275,  0,
                    1265, 281,  281,  0,
                    1281, 283,  283,  0,
                    1286, 284,  284,  0,
                    1296, 285,  285,  0,
                    1312, 286,  286,  0,
                    1327, 288,  288,  0,
                    1345, 292,  292,  0,
                    1353, 293,  293,  0,
                    1395, 295,  295,  0,
                    1405, 296,  296,  0,
                    1415, 297,  297,  0,
                    1424, 299,  299,  0,
                    1433, 300,  300,  0,
                    1434, 301,  301,  0,
                    1436, 302,  302,  0,
                    1437, 303,  303,  0,
                    1439, 304,  304,  0,
                    1441, 305,  305,  0,
                    1443, 306,  306,  0,
                    1444, 299,  299,  0,
                    1453, 309,  309,  0,
                    1484, 310,  310,  0,
                    1493, 311,  311,  0,
                    1495, 312,  312,  0,
                    1497, 313,  313,  0,
                    1498, 314,  314,  0,
                    1500, 315,  315,  0,
                    1502, 316,  316,  0,
                    1504, 317,  317,  0,
                    1505, 310,  310,  0,
                    1517, 321,  321,  0,
                    1528, 322,  322,  0,
                    1533, 323,  323,  0,
                    1537, 324,  324,  0,
                    1549, 325,  325,  0,
                    1560, 322,  322,  0,
                    1567, 327,  327,  0,
                    1606, 329,  329,  0,
                    1611, 330,  330,  0,
                    1621, 331,  331,  0,
                    1622, 332,  332,  0,
                    1673, 653,  427,  2,
                    1677, 654,  428,  2,
                    1700, 655,  429,  2,
                    1736, 656,  430,  2,
                    1740, 332,  332,  0,
                    1761, 333,  333,  0,
                    1763, 334,  334,  0,
                    1765, 335,  335,  0,
                    1767, 331,  331,  0,
                    1772, 330,  330,  0,
                    1782, 338,  338,  0,
                    1785, 626,  176,  1,
                    1790, 338,  338,  0,
                    1797, 339,  339,  0,
                    1807, 657,  11,   4,
                    1817, 339,  339,  0,
                    1823, 340,  340,  0,
                    1837, 658,  1601, 5,
                    1856, 666,  1609, 5,
                    1863, 667,  1849, 5,
                    1898, 666,  1609, 5,
                    1908, 341,  341,  0,
                    1936, 342,  342,  0,
                    1944, 583,  1,    9,
                    1947, 342,  342,  0,
                    1964, 342,  342,  0,
                    1967, 342,  342,  0,
                    1975, 668,  1,    9,
                    1978, 666,  1609, 5,
                    1988, 666,  1609, 5,
                    1991, 666,  1609, 5,
                    1995, 669,  1850, 5,
                    1996, 670,  1610, 5,
                    2001, 658,  1601, 5,
                    2002, 340,  340,  0,
                    2004, 344,  344,  0,
                    2014, 347,  347,  0,
                    2019, 349,  349,  0,
                    2026, 671,  127,  10,
                    2037, 672,  1,    9,
                    2040, 671,  127,  10,
                    2071, 350,  350,  0,
                    2087, 351,  351,  0,
                    2089, 352,  352,  0,
                    2105, 351,  351,  0,
                    2108, 353,  353,  0,
                    2112, 350,  350,  0,
                    2119, 350,  350,  0,
                    2122, 354,  354,  0,
                    2126, 671,  127,  10,
                    2133, 671,  127,  10,
                    2136, 673,  128,  10,
                    2146, 674,  211,  11,
                    2158, 674,  211,  11,
                    2189, 673,  128,  10,
                    2196, 673,  128,  10,
                    2208, 673,  128,  10,
                    2224, 350,  350,  0,
                    2240, 351,  351,  0,
                    2242, 352,  352,  0,
                    2258, 351,  351,  0,
                    2261, 353,  353,  0,
                    2265, 350,  350,  0,
                    2272, 350,  350,  0,
                    2275, 354,  354,  0,
                    2279, 675,  212,  11,
                    2280, 676,  129,  10,
                    2281, 356,  356,  0,
                    2285, 338,  338,  0,
                    2288, 215,  215,  0,
                ),
                localVariableTable = intArrayOf(
                    98,   64,   15,   0,
                    87,   75,   13,   1,
                    95,   67,   14,   2,
                    309,  8,    14,   3,
                    306,  11,   12,   4,
                    306,  11,   13,   5,
                    428,  44,   20,   6,
                    425,  47,   19,   7,
                    396,  77,   18,   8,
                    393,  80,   16,   9,
                    678,  12,   31,   10,
                    675,  15,   30,   11,
                    661,  34,   28,   12,
                    658,  38,   27,   13,
                    655,  41,   25,   14,
                    644,  61,   24,   15,
                    616,  94,   22,   16,
                    613,  97,   20,   17,
                    613,  97,   21,   18,
                    590,  124,  19,   19,
                    587,  127,  18,   20,
                    793,  14,   23,   21,
                    790,  17,   22,   22,
                    779,  37,   21,   23,
                    751,  70,   19,   16,
                    748,  73,   16,   24,
                    748,  73,   18,   25,
                    873,  7,    21,   26,
                    862,  35,   20,   27,
                    859,  38,   19,   28,
                    843,  61,   16,   29,
                    995,  7,    27,   30,
                    992,  10,   25,   14,
                    981,  30,   24,   15,
                    953,  63,   22,   16,
                    950,  66,   20,   17,
                    950,  66,   21,   18,
                    927,  93,   19,   19,
                    924,  96,   18,   20,
                    1061, 66,   20,   31,
                    1058, 69,   19,   32,
                    1176, 26,   19,   33,
                    1296, 46,   21,   34,
                    1265, 77,   20,   35,
                    1240, 102,  19,   36,
                    1484, 30,   21,   37,
                    1673, 64,   27,   0,
                    1670, 67,   24,   38,
                    1670, 67,   25,   2,
                    45,   1738, 11,   39,
                    207,  1576, 17,   40,
                    386,  1397, 12,   41,
                    487,  1296, 13,   42,
                    506,  1277, 14,   43,
                    533,  1250, 15,   44,
                    1028, 755,  16,   45,
                    1353, 430,  18,   46,
                    1395, 388,  19,   47,
                    42,   1741, 10,   48,
                    29,   1759, 8,    49,
                    1807, 10,   12,   50,
                    1804, 13,   11,   51,
                    1947, 17,   28,   52,
                    1944, 20,   27,   53,
                    1908, 61,   24,   54,
                    1936, 33,   26,   55,
                    1905, 64,   23,   56,
                    1978, 10,   30,   57,
                    1975, 13,   29,   58,
                    1898, 94,   22,   59,
                    1895, 97,   21,   60,
                    1891, 101,  20,   61,
                    1863, 133,  18,   62,
                    1860, 136,  17,   63,
                    1856, 142,  16,   64,
                    1853, 145,  14,   65,
                    1853, 145,  15,   18,
                    1837, 165,  13,   66,
                    1834, 168,  12,   67,
                    2004, 10,   11,   68,
                    2087, 22,   21,   69,
                    2084, 25,   20,   70,
                    2071, 52,   19,   71,
                    2068, 55,   18,   36,
                    2068, 55,   17,   72,
                    2240, 22,   21,   69,
                    2237, 25,   20,   70,
                    2224, 52,   19,   71,
                    2221, 55,   18,   36,
                    2221, 55,   17,   72,
                    2040, 83,   14,   73,
                    2050, 73,   15,   74,
                    2060, 63,   16,   75,
                    2189, 87,   16,   76,
                    2201, 75,   24,   74,
                    2213, 63,   25,   75,
                    2182, 94,   14,   77,
                    2146, 134,  23,   62,
                    2143, 137,  22,   78,
                    2026, 255,  12,   62,
                    2023, 258,  11,   79,
                    1797, 485,  10,   80,
                    1794, 488,  9,    81,
                    9,    2280, 6,    82,
                    26,   2263, 7,    83,
                    0,    2289, 0,    84,
                    0,    2289, 1,    85,
                    0,    2289, 2,    86,
                    0,    2289, 3,    87,
                    0,    2289, 4,    88,
                    0,    2289, 5,    89,
                ),
                kotlinDebugSegment = intArrayOf(
                    3,   215, 0,
                    5,   216, 0,
                    6,   216, 0,
                    7,   216, 0,
                    8,   216, 0,
                    9,   216, 0,
                    21,  226, 0,
                    29,  233, 0,
                    41,  241, 0,
                    42,  241, 0,
                    43,  241, 0,
                    45,  242, 0,
                    46,  242, 0,
                    48,  242, 0,
                    50,  241, 0,
                    51,  241, 0,
                    54,  245, 0,
                    55,  245, 0,
                    57,  245, 0,
                    61,  248, 0,
                    62,  248, 0,
                    64,  249, 0,
                    67,  248, 0,
                    70,  254, 0,
                    71,  254, 0,
                    72,  254, 0,
                    74,  254, 0,
                    75,  254, 0,
                    142, 332, 0,
                    143, 332, 0,
                    144, 332, 0,
                    145, 332, 0,
                    153, 215, 0,
                    156, 339, 0,
                    159, 340, 0,
                    160, 340, 0,
                    161, 340, 0,
                    162, 340, 0,
                    169, 340, 0,
                    170, 340, 0,
                    171, 340, 0,
                    172, 340, 0,
                    173, 340, 0,
                    174, 340, 0,
                    175, 340, 0,
                    180, 349, 0,
                    181, 349, 0,
                    182, 349, 0,
                    191, 349, 0,
                    192, 349, 0,
                    193, 349, 0,
                    194, 349, 0,
                    195, 349, 0,
                    196, 349, 0,
                    197, 349, 0,
                    198, 349, 0,
                    207, 349, 0,
                    208, 349, 0,
                )
            )
        )
    }

    // SingleAbstractMethodLowering.createObjectProxy in SingleAbstractMethodLowering.kt
    // https://github.com/JetBrains/kotlin/blob/ed3967eb585b63acdc7339726908bc0f2e6d8101/compiler/ir/backend.common/src/org/jetbrains/kotlin/backend/common/lower/SingleAbstractMethodLowering.kt#L154
    fun testSingleAbstractMethodLoweringCreateObjectProxy() {
        doLocalVariableTableBreakpointComparisonTest(
            jvm = MockMethodInfo(
                name = "createObjectProxy",
                sourceNames = arrayOf(
                    "SingleAbstractMethodLowering.kt",
                    "fake.kt",
                    "_Sequences.kt",
                    "declarationBuilders.kt",
                    "ExpressionHelpers.kt",
                    "IrBuilder.kt",
                    "_Collections.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/backend/common/lower/SingleAbstractMethodLowering",
                    "kotlin/jvm/internal/FakeKt",
                    "kotlin/sequences/SequencesKt___SequencesKt",
                    "org/jetbrains/kotlin/ir/builders/declarations/DeclarationBuildersKt",
                    "org/jetbrains/kotlin/ir/builders/ExpressionHelpersKt",
                    "org/jetbrains/kotlin/ir/builders/IrBlockBodyBuilder",
                    "kotlin/collections/CollectionsKt___CollectionsKt"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-assert-SingleAbstractMethodLowering\$createObjectProxy\$1:I",
                    "\$i\$a\$-single-SingleAbstractMethodLowering\$createObjectProxy\$superMethod\$1:I",
                    "it:Lorg/jetbrains/kotlin/ir/declarations/IrSimpleFunction;",
                    "element\$iv:Ljava/lang/Object;",
                    "\$i\$f\$single:I",
                    "single\$iv:Ljava/lang/Object;",
                    "found\$iv:Z",
                    "\$this\$single\$iv:Lkotlin/sequences/Sequence;",
                    "\$i\$a\$-buildClass-SingleAbstractMethodLowering\$createObjectProxy\$subclass\$1:I",
                    "\$this\$createObjectProxy_u24lambda_u2d11:Lorg/jetbrains/kotlin/ir/builders/declarations/IrClassBuilder;",
                    "\$i\$a\$-run-DeclarationBuildersKt\$buildClass\$2\$iv:I",
                    "\$this\$buildClass_u24lambda_u2d1\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrClassBuilder;",
                    "\$i\$f\$buildClass:I",
                    "\$this\$buildClass\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFactory;",
                    "\$i\$a\$-apply-SingleAbstractMethodLowering\$createObjectProxy\$subclass\$2:I",
                    "\$this\$createObjectProxy_u24lambda_u2d12:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "\$i\$a\$-addField-SingleAbstractMethodLowering\$createObjectProxy\$field\$1:I",
                    "\$this\$createObjectProxy_u24lambda_u2d13:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFieldBuilder;",
                    "\$i\$a\$-run-DeclarationBuildersKt\$buildField\$2\$iv\$iv:I",
                    "\$this\$buildField_u24lambda_u2d4\$iv\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFieldBuilder;",
                    "\$i\$f\$buildField:I",
                    "\$this\$buildField\$iv\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFactory;",
                    "\$i\$a\$-also-DeclarationBuildersKt\$addField\$1\$iv:I",
                    "field\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrField;",
                    "\$i\$f\$addField:I",
                    "\$this\$addField\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "\$i\$a\$-addConstructor-SingleAbstractMethodLowering\$createObjectProxy\$2:I",
                    "\$this\$createObjectProxy_u24lambda_u2d14:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFunctionBuilder;",
                    "\$i\$a\$-buildConstructor-DeclarationBuildersKt\$addConstructor\$2\$iv:I",
                    "\$this\$addConstructor_u24lambda_u2d21\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFunctionBuilder;",
                    "\$i\$a\$-run-DeclarationBuildersKt\$buildConstructor\$2\$iv\$iv:I",
                    "\$this\$buildConstructor_u24lambda_u2d20\$iv\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFunctionBuilder;",
                    "\$i\$f\$buildConstructor:I",
                    "\$this\$buildConstructor\$iv\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFactory;",
                    "\$i\$a\$-also-DeclarationBuildersKt\$addConstructor\$3\$iv:I",
                    "constructor\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrConstructor;",
                    "\$i\$f\$addConstructor:I",
                    "\$this\$addConstructor\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "\$i\$a\$-addValueParameter-SingleAbstractMethodLowering\$createObjectProxy\$3\$parameter\$1:I",
                    "\$this\$createObjectProxy_u24lambda_u2d17_u24lambda_u2d15:Lorg/jetbrains/kotlin/ir/builders/declarations/IrValueParameterBuilder;",
                    "\$i\$a\$-also-DeclarationBuildersKt\$addValueParameter\$1\$1\$iv:I",
                    "valueParameter\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrValueParameter;",
                    "\$i\$a\$-run-DeclarationBuildersKt\$addValueParameter\$1\$iv:I",
                    "\$this\$addValueParameter_u24lambda_u2d28\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrValueParameterBuilder;",
                    "\$i\$f\$addValueParameter:I",
                    "\$this\$addValueParameter\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFunction;",
                    "\$i\$a\$-irBlockBody-SingleAbstractMethodLowering\$createObjectProxy\$3\$1:I",
                    "\$this\$createObjectProxy_u24lambda_u2d17_u24lambda_u2d16:Lorg/jetbrains/kotlin/ir/builders/IrBlockBodyBuilder;",
                    "\$i\$f\$blockBody:I",
                    "this_\$iv\$iv:Lorg/jetbrains/kotlin/ir/builders/IrBlockBodyBuilder;",
                    "\$i\$f\$irBlockBody:I",
                    "\$this\$irBlockBody\$iv:Lorg/jetbrains/kotlin/ir/builders/IrBuilderWithScope;",
                    "startOffset\$iv:I",
                    "endOffset\$iv:I",
                    "\$i\$a\$-apply-SingleAbstractMethodLowering\$createObjectProxy\$3:I",
                    "parameter:Lorg/jetbrains/kotlin/ir/declarations/IrValueParameter;",
                    "\$this\$createObjectProxy_u24lambda_u2d17:Lorg/jetbrains/kotlin/ir/declarations/IrConstructor;",
                    "\$i\$a\$-addFunction-SingleAbstractMethodLowering\$createObjectProxy\$4:I",
                    "\$this\$createObjectProxy_u24lambda_u2d18:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFunctionBuilder;",
                    "\$i\$a\$-run-DeclarationBuildersKt\$buildFun\$1\$iv\$iv\$iv:I",
                    "\$this\$buildFun_u24lambda_u2d16\$iv\$iv\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFunctionBuilder;",
                    "\$i\$f\$buildFun:I",
                    "\$this\$buildFun\$iv\$iv\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFactory;",
                    "\$i\$a\$-also-DeclarationBuildersKt\$addFunction\$1\$iv\$iv:I",
                    "function\$iv\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrSimpleFunction;",
                    "\$i\$f\$addFunction:I",
                    "\$this\$addFunction\$iv\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFactory;",
                    "\$this\$addFunction\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "\$i\$a\$-map-SingleAbstractMethodLowering\$createObjectProxy\$5\$1:I",
                    "it:Lorg/jetbrains/kotlin/ir/declarations/IrValueParameter;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-single-SingleAbstractMethodLowering\$createObjectProxy\$5\$2\$1:I",
                    "\$i\$a\$-let-SingleAbstractMethodLowering\$createObjectProxy\$5\$2\$2\$1:I",
                    "\$i\$a\$-forEachIndexed-SingleAbstractMethodLowering\$createObjectProxy\$5\$2\$2\$2:I",
                    "i:I",
                    "item\$iv:Ljava/lang/Object;",
                    "\$i\$f\$forEachIndexed:I",
                    "index\$iv:I",
                    "\$this\$forEachIndexed\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-apply-SingleAbstractMethodLowering\$createObjectProxy\$5\$2\$2:I",
                    "\$this\$createObjectProxy_u24lambda_u2d25_u24lambda_u2d24_u24lambda_u2d23:Lorg/jetbrains/kotlin/ir/expressions/IrCall;",
                    "\$i\$a\$-irBlockBody\$default-SingleAbstractMethodLowering\$createObjectProxy\$5\$2:I",
                    "\$this\$createObjectProxy_u24lambda_u2d25_u24lambda_u2d24:Lorg/jetbrains/kotlin/ir/builders/IrBlockBodyBuilder;",
                    "\$this\$irBlockBody_u24default\$iv:Lorg/jetbrains/kotlin/ir/builders/IrBuilderWithScope;",
                    "\$i\$a\$-apply-SingleAbstractMethodLowering\$createObjectProxy\$5:I",
                    "\$this\$createObjectProxy_u24lambda_u2d25:Lorg/jetbrains/kotlin/ir/declarations/IrSimpleFunction;",
                    "superClass:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "superFqName:Ljava/lang/String;",
                    "inlinePrefix:Ljava/lang/String;",
                    "wrapperName:Lorg/jetbrains/kotlin/name/Name;",
                    "superMethod:Lorg/jetbrains/kotlin/ir/declarations/IrSimpleFunction;",
                    "extensionReceiversCount:I",
                    "wrappedFunctionClass:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "wrappedFunctionType:Lorg/jetbrains/kotlin/ir/types/IrType;",
                    "subclass:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "field:Lorg/jetbrains/kotlin/ir/declarations/IrField;",
                    "this:Lorg/jetbrains/kotlin/backend/common/lower/SingleAbstractMethodLowering;",
                    "superType:Lorg/jetbrains/kotlin/ir/types/IrType;",
                    "wrapperVisibility:Lorg/jetbrains/kotlin/descriptors/DescriptorVisibility;",
                    "createFor:Lorg/jetbrains/kotlin/ir/IrElement;"
                ),
                allLineLocations = intArrayOf(
                    0,    154,  154,  0,
                    14,   157,  157,  0,
                    43,   353,  1,    1,
                    46,   157,  157,  0,
                    49,   157,  157,  0,
                    61,   159,  159,  0,
                    95,   160,  160,  0,
                    116,  161,  161,  0,
                    166,  162,  162,  0,
                    176,  379,  345,  2,
                    179,  380,  346,  2,
                    182,  381,  347,  2,
                    210,  382,  348,  2,
                    220,  162,  162,  0,
                    239,  383,  349,  2,
                    255,  384,  350,  2,
                    259,  385,  351,  2,
                    265,  388,  354,  2,
                    281,  390,  356,  2,
                    283,  162,  162,  0,
                    288,  163,  163,  0,
                    303,  167,  167,  0,
                    311,  168,  168,  0,
                    350,  170,  170,  0,
                    386,  167,  167,  0,
                    386,  166,  166,  0,
                    388,  171,  171,  0,
                    396,  173,  173,  0,
                    410,  391,  39,   3,
                    422,  392,  40,   3,
                    429,  174,  174,  0,
                    436,  175,  175,  0,
                    447,  176,  176,  0,
                    453,  177,  177,  0,
                    462,  178,  178,  0,
                    463,  393,  41,   3,
                    470,  391,  39,   3,
                    471,  394,  42,   3,
                    474,  178,  178,  0,
                    481,  179,  179,  0,
                    486,  180,  180,  0,
                    509,  181,  181,  0,
                    525,  182,  182,  0,
                    529,  178,  178,  0,
                    532,  178,  178,  0,
                    532,  173,  173,  0,
                    534,  184,  184,  0,
                    541,  395,  62,   3,
                    551,  396,  56,   3,
                    563,  397,  57,   3,
                    570,  185,  185,  0,
                    589,  186,  186,  0,
                    596,  187,  187,  0,
                    607,  188,  188,  0,
                    622,  189,  189,  0,
                    628,  190,  190,  0,
                    637,  191,  191,  0,
                    638,  398,  58,   3,
                    645,  396,  56,   3,
                    646,  399,  59,   3,
                    649,  395,  62,   3,
                    656,  403,  63,   3,
                    666,  404,  64,   3,
                    679,  405,  65,   3,
                    683,  395,  62,   3,
                    686,  405,  65,   3,
                    687,  184,  184,  0,
                    689,  193,  193,  0,
                    696,  406,  218,  3,
                    706,  407,  212,  3,
                    718,  408,  213,  3,
                    725,  414,  219,  3,
                    732,  194,  194,  0,
                    743,  195,  195,  0,
                    749,  196,  196,  0,
                    755,  197,  197,  0,
                    762,  198,  198,  0,
                    763,  415,  220,  3,
                    776,  416,  221,  3,
                    777,  409,  214,  3,
                    784,  407,  212,  3,
                    785,  410,  215,  3,
                    788,  416,  221,  3,
                    795,  417,  222,  3,
                    808,  418,  223,  3,
                    818,  419,  224,  3,
                    822,  416,  221,  3,
                    825,  419,  224,  3,
                    828,  198,  198,  0,
                    835,  199,  199,  0,
                    845,  420,  264,  3,
                    857,  421,  265,  3,
                    864,  200,  200,  0,
                    874,  201,  201,  0,
                    884,  202,  202,  0,
                    894,  203,  203,  0,
                    895,  422,  266,  3,
                    904,  423,  267,  3,
                    919,  425,  269,  3,
                    943,  426,  270,  3,
                    961,  427,  271,  3,
                    965,  425,  269,  3,
                    968,  425,  269,  3,
                    969,  420,  264,  3,
                    970,  428,  272,  3,
                    971,  199,  199,  0,
                    973,  205,  205,  0,
                    1020, 429,  380,  4,
                    1024, 430,  381,  4,
                    1034, 431,  382,  4,
                    1036, 432,  383,  4,
                    1038, 429,  380,  4,
                    1043, 433,  384,  4,
                    1047, 434,  67,   5,
                    1056, 206,  206,  0,
                    1102, 207,  207,  0,
                    1163, 208,  208,  0,
                    1206, 209,  209,  0,
                    1209, 435,  68,   5,
                    1214, 433,  384,  4,
                    1218, 205,  205,  0,
                    1221, 210,  210,  0,
                    1225, 198,  198,  0,
                    1229, 212,  212,  0,
                    1236, 436,  180,  3,
                    1246, 437,  174,  3,
                    1253, 438,  168,  3,
                    1265, 439,  169,  3,
                    1272, 213,  213,  0,
                    1282, 214,  214,  0,
                    1292, 215,  215,  0,
                    1302, 216,  216,  0,
                    1310, 217,  217,  0,
                    1321, 218,  218,  0,
                    1331, 219,  219,  0,
                    1340, 220,  220,  0,
                    1341, 440,  170,  3,
                    1348, 438,  168,  3,
                    1349, 441,  171,  3,
                    1352, 437,  174,  3,
                    1359, 445,  175,  3,
                    1377, 446,  176,  3,
                    1390, 447,  177,  3,
                    1394, 437,  174,  3,
                    1397, 447,  177,  3,
                    1398, 436,  180,  3,
                    1401, 220,  220,  0,
                    1408, 221,  221,  0,
                    1421, 222,  222,  0,
                    1459, 223,  223,  0,
                    1502, 224,  224,  0,
                    1519, 448,  1547, 6,
                    1545, 449,  1618, 6,
                    1573, 450,  1619, 6,
                    1587, 224,  224,  0,
                    1625, 451,  1620, 6,
                    1630, 448,  1547, 6,
                    1634, 224,  224,  0,
                    1637, 225,  225,  0,
                    1667, 452,  375,  4,
                    1667, 453,  376,  4,
                    1674, 452,  375,  4,
                    1674, 454,  377,  4,
                    1681, 452,  375,  4,
                    1684, 457,  380,  4,
                    1688, 458,  381,  4,
                    1698, 459,  382,  4,
                    1700, 460,  383,  4,
                    1702, 457,  380,  4,
                    1707, 461,  384,  4,
                    1711, 462,  67,   5,
                    1720, 226,  226,  0,
                    1727, 227,  227,  0,
                    1732, 228,  228,  0,
                    1748, 463,  345,  2,
                    1751, 464,  346,  2,
                    1754, 465,  347,  2,
                    1782, 466,  348,  2,
                    1792, 228,  228,  0,
                    1806, 467,  349,  2,
                    1822, 468,  350,  2,
                    1826, 469,  351,  2,
                    1832, 472,  354,  2,
                    1848, 474,  356,  2,
                    1863, 228,  228,  0,
                    1866, 229,  229,  0,
                    1871, 227,  227,  0,
                    1882, 230,  230,  0,
                    1893, 231,  231,  0,
                    1934, 232,  232,  0,
                    1945, 353,  1,    1,
                    1948, 232,  232,  0,
                    1973, 232,  232,  0,
                    1980, 232,  232,  0,
                    1983, 233,  233,  0,
                    1996, 475,  1858, 6,
                    1999, 476,  1859, 6,
                    2044, 476,  1859, 6,
                    2056, 233,  233,  0,
                    2085, 477,  1860, 6,
                    2086, 234,  234,  0,
                    2098, 230,  230,  0,
                    2104, 226,  226,  0,
                    2113, 235,  235,  0,
                    2116, 478,  68,   5,
                    2121, 461,  384,  4,
                    2125, 225,  225,  0,
                    2128, 236,  236,  0,
                    2132, 220,  220,  0,
                    2136, 238,  238,  0,
                    2144, 239,  239,  0,
                    2153, 241,  241,  0,
                    2170, 243,  243,  0,
                ),
                localVariableTable = intArrayOf(
                    46,   3,    6,    0,
                    220,  16,   16,   1,
                    217,  19,   15,   2,
                    210,  52,   14,   3,
                    176,  107,  10,   4,
                    179,  104,  11,   5,
                    182,  101,  12,   6,
                    173,  110,  9,    7,
                    429,  34,   18,   8,
                    426,  37,   17,   9,
                    422,  48,   16,   10,
                    419,  51,   15,   11,
                    410,  62,   14,   12,
                    407,  65,   13,   13,
                    481,  45,   15,   14,
                    478,  48,   14,   15,
                    570,  68,   21,   16,
                    567,  71,   20,   17,
                    563,  82,   19,   18,
                    560,  85,   18,   19,
                    551,  96,   17,   20,
                    548,  99,   16,   21,
                    656,  24,   18,   22,
                    653,  27,   17,   23,
                    541,  146,  15,   24,
                    538,  149,  14,   25,
                    732,  31,   23,   26,
                    729,  34,   22,   27,
                    725,  52,   21,   28,
                    722,  55,   20,   29,
                    718,  66,   19,   30,
                    715,  69,   18,   31,
                    706,  80,   17,   32,
                    703,  83,   16,   33,
                    795,  24,   18,   34,
                    792,  27,   17,   35,
                    696,  130,  15,   36,
                    693,  133,  14,   37,
                    864,  31,   22,   38,
                    861,  34,   21,   39,
                    943,  19,   25,   40,
                    940,  22,   24,   41,
                    857,  112,  20,   42,
                    854,  115,  19,   43,
                    845,  126,  18,   44,
                    842,  129,  17,   45,
                    1056, 151,  24,   46,
                    1053, 154,  23,   47,
                    1047, 167,  22,   48,
                    1044, 170,  21,   49,
                    1020, 195,  20,   50,
                    1017, 198,  17,   51,
                    1017, 198,  18,   52,
                    1017, 198,  19,   53,
                    835,  387,  16,   54,
                    973,  249,  26,   55,
                    832,  390,  15,   56,
                    1272, 69,   23,   57,
                    1269, 72,   22,   58,
                    1265, 83,   21,   59,
                    1262, 86,   20,   60,
                    1253, 97,   19,   61,
                    1250, 100,  18,   62,
                    1359, 32,   20,   63,
                    1356, 35,   19,   64,
                    1246, 152,  17,   65,
                    1243, 155,  16,   66,
                    1236, 163,  15,   65,
                    1233, 166,  14,   67,
                    1587, 26,   27,   68,
                    1584, 29,   25,   69,
                    1573, 49,   24,   70,
                    1545, 82,   22,   71,
                    1542, 85,   20,   72,
                    1542, 85,   21,   73,
                    1519, 112,  19,   74,
                    1516, 115,  17,   75,
                    1792, 11,   37,   76,
                    1789, 14,   36,   2,
                    1782, 47,   35,   3,
                    1748, 102,  31,   4,
                    1751, 99,   32,   5,
                    1754, 96,   33,   6,
                    1745, 105,  27,   7,
                    1948, 22,   34,   77,
                    1945, 25,   33,   69,
                    2056, 26,   42,   78,
                    2053, 29,   41,   79,
                    2053, 29,   40,   55,
                    2027, 55,   37,   80,
                    1996, 90,   36,   81,
                    1999, 87,   33,   82,
                    1993, 93,   35,   83,
                    1893, 194,  32,   84,
                    1890, 197,  31,   85,
                    1720, 394,  25,   86,
                    1717, 397,  24,   87,
                    1711, 410,  23,   48,
                    1708, 413,  22,   49,
                    1684, 438,  21,   50,
                    1667, 455,  17,   88,
                    1674, 448,  19,   52,
                    1681, 441,  20,   53,
                    1408, 721,  16,   89,
                    1405, 724,  15,   90,
                    14,   2159, 4,    91,
                    95,   2078, 5,    92,
                    116,  2057, 6,    93,
                    166,  2007, 7,    94,
                    288,  1885, 8,    95,
                    303,  1870, 9,    96,
                    388,  1785, 10,   97,
                    396,  1777, 11,   98,
                    534,  1639, 12,   99,
                    689,  1484, 13,   100,
                    0,    2173, 0,    101,
                    0,    2173, 1,    102,
                    0,    2173, 2,    103,
                    0,    2173, 3,    104,
                ),
                kotlinDebugSegment = intArrayOf(
                    9,   162, 0,
                    10,  162, 0,
                    11,  162, 0,
                    12,  162, 0,
                    14,  162, 0,
                    15,  162, 0,
                    16,  162, 0,
                    17,  162, 0,
                    18,  162, 0,
                    28,  173, 0,
                    29,  173, 0,
                    35,  173, 0,
                    36,  173, 0,
                    37,  173, 0,
                    47,  184, 0,
                    48,  184, 0,
                    49,  184, 0,
                    57,  184, 0,
                    58,  184, 0,
                    59,  184, 0,
                    60,  184, 0,
                    61,  184, 0,
                    62,  184, 0,
                    63,  184, 0,
                    64,  184, 0,
                    65,  184, 0,
                    68,  193, 0,
                    69,  193, 0,
                    70,  193, 0,
                    71,  193, 0,
                    77,  193, 0,
                    78,  193, 0,
                    79,  193, 0,
                    80,  193, 0,
                    81,  193, 0,
                    82,  193, 0,
                    83,  193, 0,
                    84,  193, 0,
                    85,  193, 0,
                    86,  193, 0,
                    87,  193, 0,
                    90,  199, 0,
                    91,  199, 0,
                    96,  199, 0,
                    97,  199, 0,
                    98,  199, 0,
                    99,  199, 0,
                    100, 199, 0,
                    101, 199, 0,
                    102, 199, 0,
                    103, 199, 0,
                    104, 199, 0,
                    107, 205, 0,
                    108, 205, 0,
                    109, 205, 0,
                    110, 205, 0,
                    111, 205, 0,
                    112, 205, 0,
                    113, 205, 0,
                    118, 205, 0,
                    119, 205, 0,
                    124, 212, 0,
                    125, 212, 0,
                    126, 212, 0,
                    127, 212, 0,
                    136, 212, 0,
                    137, 212, 0,
                    138, 212, 0,
                    139, 212, 0,
                    140, 212, 0,
                    141, 212, 0,
                    142, 212, 0,
                    143, 212, 0,
                    144, 212, 0,
                    145, 212, 0,
                    151, 224, 0,
                    152, 224, 0,
                    153, 224, 0,
                    155, 224, 0,
                    156, 224, 0,
                    159, 225, 0,
                    160, 225, 0,
                    161, 225, 0,
                    162, 225, 0,
                    163, 225, 0,
                    164, 225, 0,
                    165, 225, 0,
                    166, 225, 0,
                    167, 225, 0,
                    168, 225, 0,
                    169, 225, 0,
                    170, 225, 0,
                    174, 228, 0,
                    175, 228, 0,
                    176, 228, 0,
                    177, 228, 0,
                    179, 228, 0,
                    180, 228, 0,
                    181, 228, 0,
                    182, 228, 0,
                    183, 228, 0,
                    195, 233, 0,
                    196, 233, 0,
                    197, 233, 0,
                    199, 233, 0,
                    204, 225, 0,
                    205, 225, 0,
                )
            ),
            dex = MockMethodInfo(
                name = "createObjectProxy",
                sourceNames = arrayOf(
                    "SingleAbstractMethodLowering.kt",
                    "fake.kt",
                    "_Sequences.kt",
                    "declarationBuilders.kt",
                    "ExpressionHelpers.kt",
                    "IrBuilder.kt",
                    "_Collections.kt"
                ),
                sourcePaths = arrayOf(
                    "org/jetbrains/kotlin/backend/common/lower/SingleAbstractMethodLowering",
                    "kotlin/jvm/internal/FakeKt",
                    "kotlin/sequences/SequencesKt___SequencesKt",
                    "org/jetbrains/kotlin/ir/builders/declarations/DeclarationBuildersKt",
                    "org/jetbrains/kotlin/ir/builders/ExpressionHelpersKt",
                    "org/jetbrains/kotlin/ir/builders/IrBlockBodyBuilder",
                    "kotlin/collections/CollectionsKt___CollectionsKt"
                ),
                variableNames = arrayOf(
                    "\$i\$a\$-assert-SingleAbstractMethodLowering\$createObjectProxy\$1:I",
                    "\$i\$a\$-single-SingleAbstractMethodLowering\$createObjectProxy\$superMethod\$1:I",
                    "it:Lorg/jetbrains/kotlin/ir/declarations/IrSimpleFunction;",
                    "element\$iv:Ljava/lang/Object;",
                    "\$i\$f\$single:I",
                    "single\$iv:Ljava/lang/Object;",
                    "found\$iv:Z",
                    "\$this\$single\$iv:Lkotlin/sequences/Sequence;",
                    "\$i\$a\$-buildClass-SingleAbstractMethodLowering\$createObjectProxy\$subclass\$1:I",
                    "\$this\$createObjectProxy_u24lambda_u2d11:Lorg/jetbrains/kotlin/ir/builders/declarations/IrClassBuilder;",
                    "\$i\$a\$-run-DeclarationBuildersKt\$buildClass\$2\$iv:I",
                    "\$this\$buildClass_u24lambda_u2d1\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrClassBuilder;",
                    "\$i\$f\$buildClass:I",
                    "\$this\$buildClass\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFactory;",
                    "\$i\$a\$-apply-SingleAbstractMethodLowering\$createObjectProxy\$subclass\$2:I",
                    "\$this\$createObjectProxy_u24lambda_u2d12:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "\$i\$a\$-addField-SingleAbstractMethodLowering\$createObjectProxy\$field\$1:I",
                    "\$this\$createObjectProxy_u24lambda_u2d13:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFieldBuilder;",
                    "\$i\$a\$-run-DeclarationBuildersKt\$buildField\$2\$iv\$iv:I",
                    "\$this\$buildField_u24lambda_u2d4\$iv\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFieldBuilder;",
                    "\$i\$f\$buildField:I",
                    "\$this\$buildField\$iv\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFactory;",
                    "\$i\$a\$-also-DeclarationBuildersKt\$addField\$1\$iv:I",
                    "field\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrField;",
                    "\$i\$f\$addField:I",
                    "\$this\$addField\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "\$i\$a\$-addConstructor-SingleAbstractMethodLowering\$createObjectProxy\$2:I",
                    "\$this\$createObjectProxy_u24lambda_u2d14:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFunctionBuilder;",
                    "\$i\$a\$-buildConstructor-DeclarationBuildersKt\$addConstructor\$2\$iv:I",
                    "\$this\$addConstructor_u24lambda_u2d21\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFunctionBuilder;",
                    "\$i\$a\$-run-DeclarationBuildersKt\$buildConstructor\$2\$iv\$iv:I",
                    "\$this\$buildConstructor_u24lambda_u2d20\$iv\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFunctionBuilder;",
                    "\$i\$f\$buildConstructor:I",
                    "\$this\$buildConstructor\$iv\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFactory;",
                    "\$i\$a\$-also-DeclarationBuildersKt\$addConstructor\$3\$iv:I",
                    "constructor\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrConstructor;",
                    "\$i\$f\$addConstructor:I",
                    "\$this\$addConstructor\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "\$i\$a\$-addValueParameter-SingleAbstractMethodLowering\$createObjectProxy\$3\$parameter\$1:I",
                    "\$this\$createObjectProxy_u24lambda_u2d17_u24lambda_u2d15:Lorg/jetbrains/kotlin/ir/builders/declarations/IrValueParameterBuilder;",
                    "\$i\$a\$-also-DeclarationBuildersKt\$addValueParameter\$1\$1\$iv:I",
                    "valueParameter\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrValueParameter;",
                    "\$i\$a\$-run-DeclarationBuildersKt\$addValueParameter\$1\$iv:I",
                    "\$this\$addValueParameter_u24lambda_u2d28\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrValueParameterBuilder;",
                    "\$i\$f\$addValueParameter:I",
                    "\$this\$addValueParameter\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFunction;",
                    "\$i\$a\$-irBlockBody-SingleAbstractMethodLowering\$createObjectProxy\$3\$1:I",
                    "\$this\$createObjectProxy_u24lambda_u2d17_u24lambda_u2d16:Lorg/jetbrains/kotlin/ir/builders/IrBlockBodyBuilder;",
                    "\$i\$f\$blockBody:I",
                    "this_\$iv\$iv:Lorg/jetbrains/kotlin/ir/builders/IrBlockBodyBuilder;",
                    "\$i\$f\$irBlockBody:I",
                    "\$this\$irBlockBody\$iv:Lorg/jetbrains/kotlin/ir/builders/IrBuilderWithScope;",
                    "startOffset\$iv:I",
                    "endOffset\$iv:I",
                    "\$i\$a\$-apply-SingleAbstractMethodLowering\$createObjectProxy\$3:I",
                    "parameter:Lorg/jetbrains/kotlin/ir/declarations/IrValueParameter;",
                    "\$this\$createObjectProxy_u24lambda_u2d17:Lorg/jetbrains/kotlin/ir/declarations/IrConstructor;",
                    "\$i\$a\$-addFunction-SingleAbstractMethodLowering\$createObjectProxy\$4:I",
                    "\$this\$createObjectProxy_u24lambda_u2d18:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFunctionBuilder;",
                    "\$i\$a\$-run-DeclarationBuildersKt\$buildFun\$1\$iv\$iv\$iv:I",
                    "\$this\$buildFun_u24lambda_u2d16\$iv\$iv\$iv:Lorg/jetbrains/kotlin/ir/builders/declarations/IrFunctionBuilder;",
                    "\$i\$f\$buildFun:I",
                    "\$this\$buildFun\$iv\$iv\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFactory;",
                    "\$i\$a\$-also-DeclarationBuildersKt\$addFunction\$1\$iv\$iv:I",
                    "function\$iv\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrSimpleFunction;",
                    "\$i\$f\$addFunction:I",
                    "\$this\$addFunction\$iv\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrFactory;",
                    "\$this\$addFunction\$iv:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "\$i\$a\$-map-SingleAbstractMethodLowering\$createObjectProxy\$5\$1:I",
                    "it:Lorg/jetbrains/kotlin/ir/declarations/IrValueParameter;",
                    "item\$iv\$iv:Ljava/lang/Object;",
                    "\$i\$f\$mapTo:I",
                    "\$this\$mapTo\$iv\$iv:Ljava/lang/Iterable;",
                    "destination\$iv\$iv:Ljava/util/Collection;",
                    "\$i\$f\$map:I",
                    "\$this\$map\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-single-SingleAbstractMethodLowering\$createObjectProxy\$5\$2\$1:I",
                    "\$i\$a\$-let-SingleAbstractMethodLowering\$createObjectProxy\$5\$2\$2\$1:I",
                    "\$i\$a\$-forEachIndexed-SingleAbstractMethodLowering\$createObjectProxy\$5\$2\$2\$2:I",
                    "i:I",
                    "item\$iv:Ljava/lang/Object;",
                    "\$i\$f\$forEachIndexed:I",
                    "index\$iv:I",
                    "\$this\$forEachIndexed\$iv:Ljava/lang/Iterable;",
                    "\$i\$a\$-apply-SingleAbstractMethodLowering\$createObjectProxy\$5\$2\$2:I",
                    "\$this\$createObjectProxy_u24lambda_u2d25_u24lambda_u2d24_u24lambda_u2d23:Lorg/jetbrains/kotlin/ir/expressions/IrCall;",
                    "\$i\$a\$-irBlockBody\$default-SingleAbstractMethodLowering\$createObjectProxy\$5\$2:I",
                    "\$this\$createObjectProxy_u24lambda_u2d25_u24lambda_u2d24:Lorg/jetbrains/kotlin/ir/builders/IrBlockBodyBuilder;",
                    "\$this\$irBlockBody_u24default\$iv:Lorg/jetbrains/kotlin/ir/builders/IrBuilderWithScope;",
                    "\$i\$a\$-apply-SingleAbstractMethodLowering\$createObjectProxy\$5:I",
                    "\$this\$createObjectProxy_u24lambda_u2d25:Lorg/jetbrains/kotlin/ir/declarations/IrSimpleFunction;",
                    "superClass:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "superFqName:Ljava/lang/String;",
                    "inlinePrefix:Ljava/lang/String;",
                    "wrapperName:Lorg/jetbrains/kotlin/name/Name;",
                    "superMethod:Lorg/jetbrains/kotlin/ir/declarations/IrSimpleFunction;",
                    "extensionReceiversCount:I",
                    "wrappedFunctionClass:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "wrappedFunctionType:Lorg/jetbrains/kotlin/ir/types/IrType;",
                    "subclass:Lorg/jetbrains/kotlin/ir/declarations/IrClass;",
                    "field:Lorg/jetbrains/kotlin/ir/declarations/IrField;",
                    "this:Lorg/jetbrains/kotlin/backend/common/lower/SingleAbstractMethodLowering;",
                    "superType:Lorg/jetbrains/kotlin/ir/types/IrType;",
                    "wrapperVisibility:Lorg/jetbrains/kotlin/descriptors/DescriptorVisibility;",
                    "createFor:Lorg/jetbrains/kotlin/ir/IrElement;"
                ),
                allLineLocations = intArrayOf(
                    0,    154,  154,  0,
                    14,   157,  157,  0,
                    43,   353,  1,    1,
                    46,   157,  157,  0,
                    49,   157,  157,  0,
                    61,   159,  159,  0,
                    95,   160,  160,  0,
                    116,  161,  161,  0,
                    166,  162,  162,  0,
                    176,  379,  345,  2,
                    179,  380,  346,  2,
                    182,  381,  347,  2,
                    210,  382,  348,  2,
                    220,  162,  162,  0,
                    239,  383,  349,  2,
                    255,  384,  350,  2,
                    259,  385,  351,  2,
                    265,  388,  354,  2,
                    281,  390,  356,  2,
                    283,  162,  162,  0,
                    288,  163,  163,  0,
                    303,  167,  167,  0,
                    311,  168,  168,  0,
                    350,  170,  170,  0,
                    386,  167,  167,  0,
                    386,  166,  166,  0,
                    388,  171,  171,  0,
                    396,  173,  173,  0,
                    410,  391,  39,   3,
                    422,  392,  40,   3,
                    429,  174,  174,  0,
                    436,  175,  175,  0,
                    447,  176,  176,  0,
                    453,  177,  177,  0,
                    462,  178,  178,  0,
                    463,  393,  41,   3,
                    470,  391,  39,   3,
                    471,  394,  42,   3,
                    474,  178,  178,  0,
                    481,  179,  179,  0,
                    486,  180,  180,  0,
                    509,  181,  181,  0,
                    525,  182,  182,  0,
                    529,  178,  178,  0,
                    532,  178,  178,  0,
                    532,  173,  173,  0,
                    534,  184,  184,  0,
                    541,  395,  62,   3,
                    551,  396,  56,   3,
                    563,  397,  57,   3,
                    570,  185,  185,  0,
                    589,  186,  186,  0,
                    596,  187,  187,  0,
                    607,  188,  188,  0,
                    622,  189,  189,  0,
                    628,  190,  190,  0,
                    637,  191,  191,  0,
                    638,  398,  58,   3,
                    645,  396,  56,   3,
                    646,  399,  59,   3,
                    649,  395,  62,   3,
                    656,  403,  63,   3,
                    666,  404,  64,   3,
                    679,  405,  65,   3,
                    683,  395,  62,   3,
                    686,  405,  65,   3,
                    687,  184,  184,  0,
                    689,  193,  193,  0,
                    696,  406,  218,  3,
                    706,  407,  212,  3,
                    718,  408,  213,  3,
                    725,  414,  219,  3,
                    732,  194,  194,  0,
                    743,  195,  195,  0,
                    749,  196,  196,  0,
                    755,  197,  197,  0,
                    762,  198,  198,  0,
                    763,  415,  220,  3,
                    776,  416,  221,  3,
                    777,  409,  214,  3,
                    784,  407,  212,  3,
                    785,  410,  215,  3,
                    788,  416,  221,  3,
                    795,  417,  222,  3,
                    808,  418,  223,  3,
                    818,  419,  224,  3,
                    822,  416,  221,  3,
                    825,  419,  224,  3,
                    828,  198,  198,  0,
                    835,  199,  199,  0,
                    845,  420,  264,  3,
                    857,  421,  265,  3,
                    864,  200,  200,  0,
                    874,  201,  201,  0,
                    884,  202,  202,  0,
                    894,  203,  203,  0,
                    895,  422,  266,  3,
                    904,  423,  267,  3,
                    919,  425,  269,  3,
                    943,  426,  270,  3,
                    961,  427,  271,  3,
                    965,  425,  269,  3,
                    968,  425,  269,  3,
                    969,  420,  264,  3,
                    970,  428,  272,  3,
                    971,  199,  199,  0,
                    973,  205,  205,  0,
                    1020, 429,  380,  4,
                    1024, 430,  381,  4,
                    1034, 431,  382,  4,
                    1036, 432,  383,  4,
                    1038, 429,  380,  4,
                    1043, 433,  384,  4,
                    1047, 434,  67,   5,
                    1056, 206,  206,  0,
                    1102, 207,  207,  0,
                    1163, 208,  208,  0,
                    1206, 209,  209,  0,
                    1209, 435,  68,   5,
                    1214, 433,  384,  4,
                    1218, 205,  205,  0,
                    1221, 210,  210,  0,
                    1225, 198,  198,  0,
                    1229, 212,  212,  0,
                    1236, 436,  180,  3,
                    1246, 437,  174,  3,
                    1253, 438,  168,  3,
                    1265, 439,  169,  3,
                    1272, 213,  213,  0,
                    1282, 214,  214,  0,
                    1292, 215,  215,  0,
                    1302, 216,  216,  0,
                    1310, 217,  217,  0,
                    1321, 218,  218,  0,
                    1331, 219,  219,  0,
                    1340, 220,  220,  0,
                    1341, 440,  170,  3,
                    1348, 438,  168,  3,
                    1349, 441,  171,  3,
                    1352, 437,  174,  3,
                    1359, 445,  175,  3,
                    1377, 446,  176,  3,
                    1390, 447,  177,  3,
                    1394, 437,  174,  3,
                    1397, 447,  177,  3,
                    1398, 436,  180,  3,
                    1401, 220,  220,  0,
                    1408, 221,  221,  0,
                    1421, 222,  222,  0,
                    1459, 223,  223,  0,
                    1502, 224,  224,  0,
                    1519, 448,  1547, 6,
                    1545, 449,  1618, 6,
                    1573, 450,  1619, 6,
                    1587, 224,  224,  0,
                    1625, 451,  1620, 6,
                    1630, 448,  1547, 6,
                    1634, 224,  224,  0,
                    1637, 225,  225,  0,
                    1667, 452,  375,  4,
                    1667, 453,  376,  4,
                    1674, 452,  375,  4,
                    1674, 454,  377,  4,
                    1681, 452,  375,  4,
                    1684, 457,  380,  4,
                    1688, 458,  381,  4,
                    1698, 459,  382,  4,
                    1700, 460,  383,  4,
                    1702, 457,  380,  4,
                    1707, 461,  384,  4,
                    1711, 462,  67,   5,
                    1720, 226,  226,  0,
                    1727, 227,  227,  0,
                    1732, 228,  228,  0,
                    1748, 463,  345,  2,
                    1751, 464,  346,  2,
                    1754, 465,  347,  2,
                    1782, 466,  348,  2,
                    1792, 228,  228,  0,
                    1806, 467,  349,  2,
                    1822, 468,  350,  2,
                    1826, 469,  351,  2,
                    1832, 472,  354,  2,
                    1848, 474,  356,  2,
                    1863, 228,  228,  0,
                    1866, 229,  229,  0,
                    1871, 227,  227,  0,
                    1882, 230,  230,  0,
                    1893, 231,  231,  0,
                    1934, 232,  232,  0,
                    1945, 353,  1,    1,
                    1948, 232,  232,  0,
                    1973, 232,  232,  0,
                    1980, 232,  232,  0,
                    1983, 233,  233,  0,
                    1996, 475,  1858, 6,
                    1999, 476,  1859, 6,
                    2044, 476,  1859, 6,
                    2056, 233,  233,  0,
                    2085, 477,  1860, 6,
                    2086, 234,  234,  0,
                    2098, 230,  230,  0,
                    2104, 226,  226,  0,
                    2113, 235,  235,  0,
                    2116, 478,  68,   5,
                    2121, 461,  384,  4,
                    2125, 225,  225,  0,
                    2128, 236,  236,  0,
                    2132, 220,  220,  0,
                    2136, 238,  238,  0,
                    2144, 239,  239,  0,
                    2153, 241,  241,  0,
                    2170, 243,  243,  0,
                ),
                localVariableTable = intArrayOf(
                    46,   3,    6,    0,
                    220,  16,   16,   1,
                    217,  19,   15,   2,
                    210,  52,   14,   3,
                    176,  107,  10,   4,
                    179,  104,  11,   5,
                    182,  101,  12,   6,
                    173,  110,  9,    7,
                    429,  34,   18,   8,
                    426,  37,   17,   9,
                    422,  48,   16,   10,
                    419,  51,   15,   11,
                    410,  62,   14,   12,
                    407,  65,   13,   13,
                    481,  45,   15,   14,
                    478,  48,   14,   15,
                    570,  68,   21,   16,
                    567,  71,   20,   17,
                    563,  82,   19,   18,
                    560,  85,   18,   19,
                    551,  96,   17,   20,
                    548,  99,   16,   21,
                    656,  24,   18,   22,
                    653,  27,   17,   23,
                    541,  146,  15,   24,
                    538,  149,  14,   25,
                    732,  31,   23,   26,
                    729,  34,   22,   27,
                    725,  52,   21,   28,
                    722,  55,   20,   29,
                    718,  66,   19,   30,
                    715,  69,   18,   31,
                    706,  80,   17,   32,
                    703,  83,   16,   33,
                    795,  24,   18,   34,
                    792,  27,   17,   35,
                    696,  130,  15,   36,
                    693,  133,  14,   37,
                    864,  31,   22,   38,
                    861,  34,   21,   39,
                    943,  19,   25,   40,
                    940,  22,   24,   41,
                    857,  112,  20,   42,
                    854,  115,  19,   43,
                    845,  126,  18,   44,
                    842,  129,  17,   45,
                    1056, 151,  24,   46,
                    1053, 154,  23,   47,
                    1047, 167,  22,   48,
                    1044, 170,  21,   49,
                    1020, 195,  20,   50,
                    1017, 198,  17,   51,
                    1017, 198,  18,   52,
                    1017, 198,  19,   53,
                    835,  387,  16,   54,
                    973,  249,  26,   55,
                    832,  390,  15,   56,
                    1272, 69,   23,   57,
                    1269, 72,   22,   58,
                    1265, 83,   21,   59,
                    1262, 86,   20,   60,
                    1253, 97,   19,   61,
                    1250, 100,  18,   62,
                    1359, 32,   20,   63,
                    1356, 35,   19,   64,
                    1246, 152,  17,   65,
                    1243, 155,  16,   66,
                    1236, 163,  15,   65,
                    1233, 166,  14,   67,
                    1587, 26,   27,   68,
                    1584, 29,   25,   69,
                    1573, 49,   24,   70,
                    1545, 82,   22,   71,
                    1542, 85,   20,   72,
                    1542, 85,   21,   73,
                    1519, 112,  19,   74,
                    1516, 115,  17,   75,
                    1792, 11,   37,   76,
                    1789, 14,   36,   2,
                    1782, 47,   35,   3,
                    1748, 102,  31,   4,
                    1751, 99,   32,   5,
                    1754, 96,   33,   6,
                    1745, 105,  27,   7,
                    1948, 22,   34,   77,
                    1945, 25,   33,   69,
                    2056, 26,   42,   78,
                    2053, 29,   41,   79,
                    2053, 29,   40,   55,
                    2027, 55,   37,   80,
                    1996, 90,   36,   81,
                    1999, 87,   33,   82,
                    1993, 93,   35,   83,
                    1893, 194,  32,   84,
                    1890, 197,  31,   85,
                    1720, 394,  25,   86,
                    1717, 397,  24,   87,
                    1711, 410,  23,   48,
                    1708, 413,  22,   49,
                    1684, 438,  21,   50,
                    1667, 455,  17,   88,
                    1674, 448,  19,   52,
                    1681, 441,  20,   53,
                    1408, 721,  16,   89,
                    1405, 724,  15,   90,
                    14,   2159, 4,    91,
                    95,   2078, 5,    92,
                    116,  2057, 6,    93,
                    166,  2007, 7,    94,
                    288,  1885, 8,    95,
                    303,  1870, 9,    96,
                    388,  1785, 10,   97,
                    396,  1777, 11,   98,
                    534,  1639, 12,   99,
                    689,  1484, 13,   100,
                    0,    2173, 0,    101,
                    0,    2173, 1,    102,
                    0,    2173, 2,    103,
                    0,    2173, 3,    104,
                ),
                kotlinDebugSegment = intArrayOf(
                    9,   162, 0,
                    10,  162, 0,
                    11,  162, 0,
                    12,  162, 0,
                    14,  162, 0,
                    15,  162, 0,
                    16,  162, 0,
                    17,  162, 0,
                    18,  162, 0,
                    28,  173, 0,
                    29,  173, 0,
                    35,  173, 0,
                    36,  173, 0,
                    37,  173, 0,
                    47,  184, 0,
                    48,  184, 0,
                    49,  184, 0,
                    57,  184, 0,
                    58,  184, 0,
                    59,  184, 0,
                    60,  184, 0,
                    61,  184, 0,
                    62,  184, 0,
                    63,  184, 0,
                    64,  184, 0,
                    65,  184, 0,
                    68,  193, 0,
                    69,  193, 0,
                    70,  193, 0,
                    71,  193, 0,
                    77,  193, 0,
                    78,  193, 0,
                    79,  193, 0,
                    80,  193, 0,
                    81,  193, 0,
                    82,  193, 0,
                    83,  193, 0,
                    84,  193, 0,
                    85,  193, 0,
                    86,  193, 0,
                    87,  193, 0,
                    90,  199, 0,
                    91,  199, 0,
                    96,  199, 0,
                    97,  199, 0,
                    98,  199, 0,
                    99,  199, 0,
                    100, 199, 0,
                    101, 199, 0,
                    102, 199, 0,
                    103, 199, 0,
                    104, 199, 0,
                    107, 205, 0,
                    108, 205, 0,
                    109, 205, 0,
                    110, 205, 0,
                    111, 205, 0,
                    112, 205, 0,
                    113, 205, 0,
                    118, 205, 0,
                    119, 205, 0,
                    124, 212, 0,
                    125, 212, 0,
                    126, 212, 0,
                    127, 212, 0,
                    136, 212, 0,
                    137, 212, 0,
                    138, 212, 0,
                    139, 212, 0,
                    140, 212, 0,
                    141, 212, 0,
                    142, 212, 0,
                    143, 212, 0,
                    144, 212, 0,
                    145, 212, 0,
                    151, 224, 0,
                    152, 224, 0,
                    153, 224, 0,
                    155, 224, 0,
                    156, 224, 0,
                    159, 225, 0,
                    160, 225, 0,
                    161, 225, 0,
                    162, 225, 0,
                    163, 225, 0,
                    164, 225, 0,
                    165, 225, 0,
                    166, 225, 0,
                    167, 225, 0,
                    168, 225, 0,
                    169, 225, 0,
                    170, 225, 0,
                    174, 228, 0,
                    175, 228, 0,
                    176, 228, 0,
                    177, 228, 0,
                    179, 228, 0,
                    180, 228, 0,
                    181, 228, 0,
                    182, 228, 0,
                    183, 228, 0,
                    195, 233, 0,
                    196, 233, 0,
                    197, 233, 0,
                    199, 233, 0,
                    204, 225, 0,
                    205, 225, 0,
                )
            )
        )
    }
}
