<idea-plugin>
  <extensions defaultExtensionNs="com.intellij">

    <projectService serviceInterface="org.jetbrains.kotlin.caches.resolve.KotlinCacheService"
                    serviceImplementation="org.jetbrains.kotlin.idea.fir.fe10.KtSymbolBasedKotlinCacheServiceImpl"/>

    <!--  Supported Intentions -->
    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.conventionNameCalls.ReplaceContainsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.conventionNameCalls.ReplaceInvokeIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.conventionNameCalls.ReplaceCallWithUnaryOperatorIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertSecondaryConstructorToPrimaryIntention</className>
      <bundleName>messages.KotlinBundle</bundleName>
      <categoryKey>group.names.kotlin</categoryKey>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToStringTemplateIntention</className>
      <bundleName>messages.KotlinBundle</bundleName>
      <categoryKey>group.names.kotlin</categoryKey>
    </intentionAction>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.AddOperatorModifierInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.add.operator.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.AddVarianceModifierInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.add.variance.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.BooleanLiteralArgumentInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.boolean.literal.argument.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CanBePrimaryConstructorPropertyInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.can.be.primary.constructor.property.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CanSealedSubClassBeObjectInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.can.sealed.sub.class.be.object.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CascadeIfInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.cascade.if.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.collections.ConvertCallChainIntoSequenceInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.convert.call.chain.into.sequence.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ConvertNaNEqualityInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.convert.na.n.equality.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ConvertPairConstructorToToFunctionInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.convert.pair.constructor.to.to.function.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertSecondaryConstructorToPrimaryInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.convert.secondary.constructor.to.primary.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertToStringTemplateInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.convert.to.string.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertTryFinallyToUseCallInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.convert.try.finally.to.use.call.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CopyWithoutNamedArgumentsInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.copy.without.named.arguments.display.name" bundle="messages.KotlinBundle"/>



  </extensions>
</idea-plugin>