<idea-plugin>
  <extensions defaultExtensionNs="com.intellij">

    <projectService serviceInterface="org.jetbrains.kotlin.caches.resolve.KotlinCacheService"
                    serviceImplementation="org.jetbrains.kotlin.idea.fir.fe10.KtSymbolBasedKotlinCacheServiceImpl"/>

    <!--  Supported Intentions -->
    <intentionAction>
      <language>kotlin</language>
      <className>org.jetbrains.kotlin.idea.intentions.conventionNameCalls.ReplaceContainsIntention</className>
      <bundleName>messages.KotlinBundle</bundleName>
      <categoryKey>group.names.kotlin</categoryKey>
    </intentionAction>

    <intentionAction>
      <language>kotlin</language>
      <className>org.jetbrains.kotlin.idea.intentions.conventionNameCalls.ReplaceInvokeIntention</className>
      <bundleName>messages.KotlinBundle</bundleName>
      <categoryKey>group.names.kotlin</categoryKey>
    </intentionAction>

    <intentionAction>
      <language>kotlin</language>
      <className>org.jetbrains.kotlin.idea.intentions.conventionNameCalls.ReplaceCallWithUnaryOperatorIntention</className>
      <bundleName>messages.KotlinBundle</bundleName>
      <categoryKey>group.names.kotlin</categoryKey>
    </intentionAction>

    <intentionAction>
      <language>kotlin</language>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertSecondaryConstructorToPrimaryIntention</className>
      <bundleName>messages.KotlinBundle</bundleName>
      <categoryKey>group.names.kotlin</categoryKey>
    </intentionAction>

    <intentionAction>
      <language>kotlin</language>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToStringTemplateIntention</className>
      <bundleName>messages.KotlinBundle</bundleName>
      <categoryKey>group.names.kotlin</categoryKey>
    </intentionAction>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.AddOperatorModifierInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.add.operator.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.AddVarianceModifierInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.add.variance.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.BooleanLiteralArgumentInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.boolean.literal.argument.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CanBePrimaryConstructorPropertyInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.can.be.primary.constructor.property.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CanSealedSubClassBeObjectInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.can.sealed.subclass.be.object.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CascadeIfInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.cascade.if.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.collections.ConvertCallChainIntoSequenceInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.convert.call.chain.into.sequence.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ConvertNaNEqualityInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.convert.na.n.equality.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ConvertPairConstructorToToFunctionInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.convert.pair.constructor.to.to.function.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertSecondaryConstructorToPrimaryInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.convert.secondary.constructor.to.primary.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertToStringTemplateInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.convert.to.string.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertTryFinallyToUseCallInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.convert.try.finally.to.use.call.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CopyWithoutNamedArgumentsInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.copy.without.named.arguments.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.branchedTransformations.IntroduceWhenSubjectInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.introduce.when.subject.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.kdoc.KDocMissingDocumentationInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.other.problems"
                     enabledByDefault="false"
                     level="WARNING"
                     language="kotlin"
                     runForWholeFile="true"
                     key="inspection.k.doc.missing.documentation.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ForEachParameterNotUsedInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.for.each.parameter.not.used.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.KotlinCovariantEqualsInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     suppressId="CovariantEquals"
                     key="inspection.kotlin.covariant.equals.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.LateinitVarOverridesLateinitVarInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.lateinit.var.overrides.lateinit.var.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.FoldInitializerAndIfToElvisInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.fold.initializer.and.if.to.elvis.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.MapGetWithNotNullAssertionOperatorInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.map.get.with.not.null.assertion.operator.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.MemberVisibilityCanBePrivateInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     runForWholeFile="true"
                     key="inspection.member.visibility.can.be.private.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantObjectTypeCheckInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.redundant.object.type.check.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantSuspendModifierInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.redundant.suspend.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantExplicitTypeInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.redundant.explicit.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.RemoveRedundantCallsOfConversionMethodsInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.redundant.constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin" editorAttributes="NOT_USED_ELEMENT_ATTRIBUTES"
                     key="inspection.remove.redundant.calls.of.conversion.methods.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceArrayEqualityOpWithArraysEqualsInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.replace.array.equality.op.with.arrays.equals.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceAssociateFunctionInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.associate.function.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceIsEmptyWithIfEmptyInspection"
                     groupPath="Kotlin"
                     groupBundle="messages.KotlinBundle" groupKey="group.names.style.issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.isempty.with.ifempty.display.name" bundle="messages.KotlinBundle"/>

  </extensions>
</idea-plugin>