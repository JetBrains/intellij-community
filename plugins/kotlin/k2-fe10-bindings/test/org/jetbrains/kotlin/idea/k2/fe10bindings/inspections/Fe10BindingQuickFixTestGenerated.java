// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

package org.jetbrains.kotlin.idea.k2.fe10bindings.inspections;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.idea.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.idea.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.idea.base.test.TestRoot;
import org.junit.runner.RunWith;

/**
 * This class is generated by {@link org.jetbrains.kotlin.testGenerator.generator.TestGenerator}.
 * DO NOT MODIFY MANUALLY.
 */
@SuppressWarnings("all")
@TestRoot("k2-fe10-bindings")
@TestDataPath("$CONTENT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public abstract class Fe10BindingQuickFixTestGenerated extends AbstractFe10BindingQuickFixTest {
    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../idea/tests/testData/quickfix/addVarianceModifier")
    public static class AddVarianceModifier extends AbstractFe10BindingQuickFixTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("abstractIn.kt")
        public void testAbstractIn() throws Exception {
            runTest("../idea/tests/testData/quickfix/addVarianceModifier/abstractIn.kt");
        }

        @TestMetadata("abstractOut.kt")
        public void testAbstractOut() throws Exception {
            runTest("../idea/tests/testData/quickfix/addVarianceModifier/abstractOut.kt");
        }

        @TestMetadata("emptyTest.kt")
        public void testEmptyTest() throws Exception {
            runTest("../idea/tests/testData/quickfix/addVarianceModifier/emptyTest.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../idea/tests/testData/quickfix/canBePrimaryConstructorProperty")
    public static class CanBePrimaryConstructorProperty extends AbstractFe10BindingQuickFixTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("commentAfter.kt")
        public void testCommentAfter() throws Exception {
            runTest("../idea/tests/testData/quickfix/canBePrimaryConstructorProperty/commentAfter.kt");
        }

        @TestMetadata("commentAhead.kt")
        public void testCommentAhead() throws Exception {
            runTest("../idea/tests/testData/quickfix/canBePrimaryConstructorProperty/commentAhead.kt");
        }

        @TestMetadata("protectedOpenVar.kt")
        public void testProtectedOpenVar() throws Exception {
            runTest("../idea/tests/testData/quickfix/canBePrimaryConstructorProperty/protectedOpenVar.kt");
        }

        @TestMetadata("simple.kt")
        public void testSimple() throws Exception {
            runTest("../idea/tests/testData/quickfix/canBePrimaryConstructorProperty/simple.kt");
        }

        @TestMetadata("vararg.kt")
        public void testVararg() throws Exception {
            runTest("../idea/tests/testData/quickfix/canBePrimaryConstructorProperty/vararg.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../idea/tests/testData/quickfix/kdocMissingDocumentation")
    public static class KdocMissingDocumentation extends AbstractFe10BindingQuickFixTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("simple.kt")
        public void testSimple() throws Exception {
            runTest("../idea/tests/testData/quickfix/kdocMissingDocumentation/simple.kt");
        }

        @TestMetadata("withIndentation.kt")
        public void testWithIndentation() throws Exception {
            runTest("../idea/tests/testData/quickfix/kdocMissingDocumentation/withIndentation.kt");
        }
    }

    @RunWith(JUnit3RunnerWithInners.class)
    @TestMetadata("../idea/tests/testData/quickfix/memberVisibilityCanBePrivate")
    public static class MemberVisibilityCanBePrivate extends AbstractFe10BindingQuickFixTest {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
        }

        @TestMetadata("constructorParam.kt")
        public void testConstructorParam() throws Exception {
            runTest("../idea/tests/testData/quickfix/memberVisibilityCanBePrivate/constructorParam.kt");
        }

        @TestMetadata("internal.kt")
        public void testInternal() throws Exception {
            runTest("../idea/tests/testData/quickfix/memberVisibilityCanBePrivate/internal.kt");
        }

        @TestMetadata("noModifier.kt")
        public void testNoModifier() throws Exception {
            runTest("../idea/tests/testData/quickfix/memberVisibilityCanBePrivate/noModifier.kt");
        }

        @TestMetadata("protected.kt")
        public void testProtected() throws Exception {
            runTest("../idea/tests/testData/quickfix/memberVisibilityCanBePrivate/protected.kt");
        }

        @TestMetadata("public.kt")
        public void testPublic() throws Exception {
            runTest("../idea/tests/testData/quickfix/memberVisibilityCanBePrivate/public.kt");
        }
    }
}
