$ ('$')
{ ('{')
word ('parameter')
parameter_expansion_body (':-')
OPEN_BACKQUOTE ('`')
word ('printf')
WHITE_SPACE (' ')
OPEN_QUOTE ('"')
STRING_CONTENT ('default value')
CLOSE_QUOTE ('"')
CLOSE_BACKQUOTE ('`')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
parameter_expansion_body ('-')
OPEN_BACKQUOTE ('`')
word ('printf')
WHITE_SPACE (' ')
OPEN_QUOTE ('"')
STRING_CONTENT ('default value')
CLOSE_QUOTE ('"')
CLOSE_BACKQUOTE ('`')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
parameter_expansion_body (':-')
$ ('$')
( ('(')
word ('printf')
WHITE_SPACE (' ')
OPEN_QUOTE ('"')
STRING_CONTENT ('default value')
CLOSE_QUOTE ('"')
) (')')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
parameter_expansion_body ('-')
$ ('$')
( ('(')
word ('printf')
WHITE_SPACE (' ')
OPEN_QUOTE ('"')
STRING_CONTENT ('default value')
CLOSE_QUOTE ('"')
) (')')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
parameter_expansion_body (':-')
$ ('$')
(( ('((')
int ('2')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
int ('40')
)) ('))')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
parameter_expansion_body ('-')
$ ('$')
(( ('((')
int ('2')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
int ('40')
)) ('))')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
parameter_expansion_body (':-')
ARITH_SQUARE_LEFT ('$[')
int ('2')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
int ('40')
ARITH_SQUARE_RIGHT (']')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
parameter_expansion_body ('-')
ARITH_SQUARE_LEFT ('$[')
int ('2')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
int ('40')
ARITH_SQUARE_RIGHT (']')
} ('}')
\n ('\n')
\n ('\n')
Comment ('# default value with chars, which may follow a $, needs to be lexed as body token')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
parameter_expansion_body ('-')
parameter_expansion_body ('(')
parameter_expansion_body ('){')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
parameter_expansion_body ('-\{\}\(\)')
} ('}')