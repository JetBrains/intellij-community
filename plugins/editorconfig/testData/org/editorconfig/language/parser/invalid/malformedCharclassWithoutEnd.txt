EditorConfig file
  EditorConfigSectionImpl(SECTION)
    EditorConfigHeaderImpl(HEADER)
      PsiElement(EditorConfigTokenType.L_BRACKET)('[')
      EditorConfigConcatenatedPatternImpl(CONCATENATED_PATTERN)
        EditorConfigFlatPatternImpl(FLAT_PATTERN)
          PsiElement(EditorConfigTokenType.PATTERN_IDENTIFIER)('onetwo')
        EditorConfigCharClassPatternImpl(CHAR_CLASS_PATTERN)
          PsiElement(EditorConfigTokenType.L_BRACKET)('[')
          EditorConfigCharClassLetterImpl(CHAR_CLASS_LETTER)
            PsiElement(EditorConfigTokenType.CHARCLASS_LETTER)('t')
          EditorConfigCharClassLetterImpl(CHAR_CLASS_LETTER)
            PsiElement(EditorConfigTokenType.CHARCLASS_LETTER)('h')
          EditorConfigCharClassLetterImpl(CHAR_CLASS_LETTER)
            PsiElement(EditorConfigTokenType.CHARCLASS_LETTER)('r')
          EditorConfigCharClassLetterImpl(CHAR_CLASS_LETTER)
            PsiElement(EditorConfigTokenType.CHARCLASS_LETTER)('e')
          EditorConfigCharClassLetterImpl(CHAR_CLASS_LETTER)
            PsiElement(EditorConfigTokenType.CHARCLASS_LETTER)('e')
          PsiElement(EditorConfigTokenType.R_BRACKET)(']')
        EditorConfigFlatPatternImpl(FLAT_PATTERN)
          PsiElement(EditorConfigTokenType.PATTERN_WHITE_SPACE)('\n')
          PsiElement(EditorConfigTokenType.PATTERN_IDENTIFIER)('hello')
      PsiErrorElement:<flat pattern>, EditorConfigTokenType.ASTERISK, EditorConfigTokenType.DOUBLE_ASTERISK, EditorConfigTokenType.L_BRACKET, EditorConfigTokenType.L_CURLY, EditorConfigTokenType.PATTERN_IDENTIFIER, EditorConfigTokenType.PATTERN_WHITE_SPACE, EditorConfigTokenType.QUESTION or EditorConfigTokenType.R_BRACKET expected, got '='
        PsiElement(EditorConfigTokenType.SEPARATOR)('=')
    world
      world
        PsiElement(EditorConfigTokenType.IDENTIFIER)('world')
    PsiWhiteSpace('\n')
    one=two
      one
        PsiElement(EditorConfigTokenType.IDENTIFIER)('one')
      PsiElement(EditorConfigTokenType.SEPARATOR)('=')
      two
        PsiElement(EditorConfigTokenType.IDENTIFIER)('two')