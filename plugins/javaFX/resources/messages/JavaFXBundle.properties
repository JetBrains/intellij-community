inspection.javafx.color.component.out.of.range.problem=Color component has to be a number between 0.0 and 1.0, inclusively
inspection.javafx.default.tag.could.be.removed=Default property tag could be removed
inspection.javafx.default.tag.unwrap.tag.fix.family.name=Unwrap tag
inspection.javafx.default.tag.unwrap.tag.fix.name=Unwrap ''{0}''
inspection.javafx.event.handler.ambiguous.problem=Ambiguous event handler name: more than one matching method found
inspection.javafx.event.handler.change.parameter.type=Change parameter type of event handler method
inspection.javafx.event.handler.create.options.panel=Detect event handler method having non-void return type
inspection.javafx.event.handler.incompatible.generic.parameter.problem=Incompatible generic parameter of event handler argument: {0} is not assignable from {1}
inspection.javafx.event.handler.incompatible.handler.argument=Incompatible event handler argument: {0} is not assignable from {1}
inspection.javafx.event.handler.return.type.problem=Return type of event handler should be void
inspection.javafx.redundant.property.values.problem=Attribute is redundant because it contains default value
inspection.javafx.redundant.property.values.redundant.tag.problem=Tag is redundant because it contains default value
inspection.javafx.unresolved.fx.id.reference.problem=Unresolved fx:id reference
inspection.javafx.unused.imports.problem=Unused import

javafx.annotator.duplicate.child.added=Duplicate child added
javafx.annotator.page.language.not.specified=Page language not specified.
javafx.annotator.property.is.read.only=Property ''{0}'' is read-only
javafx.annotator.should.be.public=\ should be public
javafx.annotator.should.be.public.or.fxml.annotated=\ should be public or annotated with @FXML
javafx.annotator.value.not.found={0} not found

javafx.app.dialog.linux.icon=&Linux Icon
javafx.app.dialog.mac.icon=&Mac Icon
javafx.app.dialog.windows.icon=&Windows Icon

javafx.application.icons.choose.icons=Choose Application Icons
javafx.application.icons.file.should.be.inside.project.content={0} icon file should be inside the project content
javafx.application.icons.icon.file.should.exist={0} icon file should exist
javafx.application.icons.select.icon.file.description=Select icon file (*.{0}) for the resulting application
javafx.application.icons.select.icon.file.title=Choose Icon File

javafx.artifact.properties.editor.application.class=A&pplication class:
javafx.artifact.properties.editor.application.icon=Application icon
javafx.artifact.properties.editor.application.parameters=Application Pa&rameters:
javafx.artifact.properties.editor.build.output.level=Build output level:
javafx.artifact.properties.editor.choose.file.run.in.browser.description=Parameters for the resulting application to run in the browser.
javafx.artifact.properties.editor.choose.file.run.in.browser.title=Choose Properties File
javafx.artifact.properties.editor.choose.file.standalone.description=Parameters for the resulting application to run standalone.
javafx.artifact.properties.editor.choose.file.standalone.title=Choose Properties File
javafx.artifact.properties.editor.choose.html.file.description=HTML template for application entry point to run in browser
javafx.artifact.properties.editor.choose.html.file.title=Choose HTML File
javafx.artifact.properties.editor.convert.css.to.bin.option=Convert css to bin
javafx.artifact.properties.editor.custom.manifest.attributes=Custom manifest attributes
javafx.artifact.properties.editor.description=&Description:
javafx.artifact.properties.editor.edit.attributes.button=Edit  &Attributes
javafx.artifact.properties.editor.edit.certificates.button=Edit &Certificates
javafx.artifact.properties.editor.edit.custom.manifest.attributes=Edit Custom Manifest Attributes
javafx.artifact.properties.editor.edit.icons.button=Edit Ico&ns
javafx.artifact.properties.editor.height=&Height:
javafx.artifact.properties.editor.html.parameters=HTM&L Parameters:
javafx.artifact.properties.editor.html.placeholder.id=HTML Placeh&older Id:
javafx.artifact.properties.editor.html.template=HT&ML Template:
javafx.artifact.properties.editor.native.bundle=Nat&ive bundle:
javafx.artifact.properties.editor.signing.option=Enable &signing
javafx.artifact.properties.editor.title=&Title:
javafx.artifact.properties.editor.update.in.background.option=Update in &background
javafx.artifact.properties.editor.vendor=&Vendor:
javafx.artifact.properties.editor.version=V&ersion:
javafx.artifact.properties.editor.width=&Width:

javafx.certificates.dialog.alias.should.be.non.empty.error=Alias should be non-empty
javafx.certificates.dialog.choose.certificate.title=Choose Certificate
javafx.certificates.dialog.keystore.file.should.exist.error=Keystore file should exist
javafx.certificates.dialog.passwords.should.be.set.error=Passwords should be set
javafx.certificates.dialog.path.to.keystore.file.error=Path to the keystore file should be set
javafx.certificates.dialog.select.file.with.generated.keys=Select file containing generated keys

javafx.collapse.subtag.to.attribute.intention=Collapse tag ''{0}'' to attribute
javafx.collapse.subtag.to.attribute.intention.family.name=Collapse tag to attribute
javafx.create.new.fxml.file.description=Create new FXML file
javafx.create.new.fxml.file.title=FXML File
javafx.create.new.application.title=JavaFX Application
javafx.create.new.application.description=Create JavaFX application class
javafx.edit.certificates.dialog.alias=&Alias:
javafx.edit.certificates.dialog.keypass=K&eypass:
javafx.edit.certificates.dialog.keystore=Ke&ystore:
javafx.edit.certificates.dialog.self.signed.radio=&Self signed
javafx.edit.certificates.dialog.signed.by.key.radio=Signed by &key
javafx.edit.certificates.dialog.signed.storepass=Store&pass:
javafx.entry.point.javafx.app=JavaFX Applications
javafx.expand.attribute.to.tag.intention=Expand ''{0}'' to tag
javafx.expand.attribute.to.tag.intention.family.name=Expand attribute to tag
javafx.failed.to.start.scene.builder.error=Failed to start SceneBuilder: {0}
javafx.field.to.property.intention.search.for.usages=Searching for Usages of ''{0}''
javafx.inject.page.language.intention.family.name=Specify page language
javafx.preloader.artifact.properties.editor.preloader.class=&Preloader class:
javafx.project.sdk.setup.validator.runtime.not.configured.error=The JavaFX runtime is not configured. Either use a JDK that has the JavaFX built in, or add a JavaFX library to the classpath
javafx.property.rename.handler.error.message=Cannot rename built-in property
javafx.property.rename.handler.error.title=Cannot rename
javafx.refactoring.property.element.type.name=property
javafx.root.tag.descriptor.cannot.resolve.class=Cannot resolve class {0}

javafx.scene.builder.editor.download.scene.builder.kit=Download Scene Builder Kit
javafx.scene.builder.editor.download.javafx=Download JavaFX
javafx.scene.builder.editor.failed.to.download.kit.error=Failed to download Scene Builder Kit
javafx.scene.builder.editor.failed.to.open.file.error=Failed to open the file in the Scene Builder. 
javafx.scene.builder.editor.scene.builder.edit.operation=JavaFX Scene Builder edit operation

javafx.settings.configurable.path.to.scenebuilder=&Path to SceneBuilder:
javafx.settings.configurable.scene.builder.configuration.description=Select path to SceneBuilder executable
javafx.settings.configurable.scene.builder.configuration.title=SceneBuilder Configuration

javafx.wrap.id.with.fx.define.intention=Wrap \"{0}\" with fx:define
javafx.wrap.with.fx.define.intention.family.name=Wrap with fx:define
inspection.java.fx.event.handler.display.name=Event handler method signature problems
inspection.java.fx.color.rgb.display.name=Color component is out of range
inspection.java.fx.redundant.property.value.display.name=JavaFX redundant property values
inspection.java.fx.unused.imports.display.name=JavaFX unused imports
inspection.java.fx.unresolved.fx.id.reference.display.name=Unresolved fx:id attribute reference
inspection.java.fx.default.tag.display.name=Unnecessary default tag
action.OpenInSceneBuilder.text=Open In SceneBuilder
javafx.application.title=JavaFx application
javafx.preloader.title=JavaFx preloader
intention.family.name.convert.to.javafx.property=Convert to JavaFX property
command.name.convert.to.javafx.property=Convert ''{0}'' to JavaFX Property
popup.title.choose.component.with.fx.id=<html>Choose component with fx:id <b>{0}<b></html>
intention.name.change.parameter.type.to=Change parameter type of ''{0}'' to {1}
conversion.between.unrelated.types.error=Conversion between unrelated types, {0} to {1}
unable.to.coerce.error=Unable to coerce {0} to {1}
inspection.message.copy.constructor.not.found=Copy constructor not found for ''{0}''
inspection.message.fx.controller.can.only.be.applied.to.root.element='fx:controller' can only be applied to a root element
unable.to.instantiate=Unable to instantiate
spaces.not.allowed.before.property.or.expression=Spaces aren't allowed before a property or an expression
invalid.value.unable.to.coerce=Invalid value: unable to coerce to {0}
no.controller.specified.for.top.level.element=No controller is specified for the top-level element
incorrect.expression.syntax=Incorrect expression syntax
unable.to.coerce=Unable to coerce to {0}
invalid.enumerated.value=Invalid enumerated value
inspection.message.fx.root.valid.only.as.root.node.fxml.document='<fx:root>' is valid only as the root node of an FXML document
label.selected.module.output.would.to.be.included.in.artifact=The selected module output will be included in the artifact
dialog.title.select.module.for.artifact=Select Module
action.from.module.artifact.text=From Module...
action.from.modules.artifact.text=From Module ''{0}''
dialog.title.choose.preloader.class=Choose Preloader Class
dialog.title.choose.application.class=Choose Application Class
column.name.artifact.manifest.property.name=Name
column.name.artifact.manifest.property.value=Value
java.fx.artifacts.tab.name=JavaFX
javafx.preloader.tab.name=JavaFX Preloader
scene.builder.editor.tab.name=Scene Builder
constant.not.found=Constant ''{0}'' is not found
cannot.class.name.to.field.name=Cannot set {0} to field ''{1}''
enum.constant.not.found=No enum constant ''{0}'' in {1}
group.name.javafx=JavaFX
inspection.java.fx.resource.property.value.display.name=The value from properties file is incompatible with the attribute type
java.version.7.or.higher.is.required.to.build.javafx.package=Java version 7 or higher is required to build JavaFX package
javafx.migration.description=Fix imports of JavaFX API classes according to JEP 253. Note that a few classes are no longer public.
javafx.module.builder.description=Desktop application with <b>JavaFX</b> toolkit.
javafx.module.additional.libraries=Additional libraries:
library.controlsfx.description=High quality UI controls and other tools to complement the core JavaFX distribution.
library.formsfx.description=Enables the developer to create forms with ease and creates well-designed and user-friendly forms by default.
library.validatorfx.description=Validation library for JavaFX inspired by ControlsFX that tries to overcome its shortcomings.
library.ikonli.description=Icon packs that can be used in Java applications.
library.bootstrapfx.description=Provides a CSS stylesheet that closely resembles the Twitter Bootstrap while being custom tailored for JavaFX\u2019s unique CSS flavor.
library.tilesfx.description=A JavaFX library containing tiles for Dashboards.
library.fxgl.description=JavaFX game development framework.

needs.at.least.jdk.14.containing.the.jpackage.tool=Needs at least JDK 14 containing the jpackage tool
platform.specific.package=Platform specific package
label.description=Description
label.vendor=Vendor
label.copyright=Copyright
label.version=Version
label.main.class=Main class
show.verbose.output.when.building.the.platform.specific.package=Show verbose output when building the platform specific package
packaging.artifact.tab.name=Packaging