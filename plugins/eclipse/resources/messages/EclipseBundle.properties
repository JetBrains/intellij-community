eclipse.name=Eclipse
eclipse.import.operation=Import
eclipse.import.label.select.workspace=&Select Eclipse projects directory:
eclipse.import.title.select.workspace=Select Eclipse projects directory
eclipse.import.title.module.dir=Select directory for IntelliJ IDEA project and module files
eclipse.import.modules.location=Create module files in:
eclipse.import.modules.colocated=&Eclipse projects directories
eclipse.import.modules.dedicated=&Dedicated directory:
eclipse.import.link=&Link created IntelliJ IDEA modules to Eclipse project files
eclipse.import.projects.list=Eclipse projects to be imported
eclipse.import.action.skip=No action
eclipse.import.error.duplicate.name=Error: duplicate name
eclipse.import.action.convert=.iml will be created
eclipse.import.action.link=.iml will be created and linked to .classpath
eclipse.import.warning.undefinded.libraries=Imported project refers to unknown global libraries
eclipse.import.count.undefined.libraries= ({0} more...)
eclipse.import.converting=Converting Eclipse Projects
eclipse.import.scanning=Scanning Eclipse projects
eclipse.export.dialog.title=Export to Eclipse
eclipse.export.operation=Export
eclipse.export.title=Exporting Eclipse projects
eclipse.export.modules.list.title=_Select modules
eclipse.export.nothing.to.do=No modules can be exported. You cannot export modules which:\n\
  1) have no content roots\n\
  2) have multiple content roots\n\
  3) have been already converted to Eclipse-compatible format
eclipse.switch.modules.to.eclipse=Switch selected modules to _Eclipse-compatible format
eclipse.export.reading.modules=Reading modules data
eclipse.export.converting.projects=Converting modules to Eclipse projects
eclipse.export.saving.projects=Saving Eclipse projects
eclipse.export.nested.error=Error: nested project
eclipse.export.action.skip=No action
eclipse.export.action.redundant=Export is redundant (already linked)
eclipse.export.action.link=.classpath will be created and linked from .iml
eclipse.export.action.convert=.classpath will be created
eclipse.export.too.many.content.roots=Module {0} uses the Eclipse format which supports one content root only
eclipse.export.incompatible=incompatible (multiple or no content roots)
eclipse.classpath.storage.description=Eclipse (.classpath)
eclipse.title.modules.to.rename=Module name mismatch
eclipse.message.renamed.module=''{0}'' to ''{1}''\n
eclipse.message.modules.to.rename=Eclipse projects linked to following modules seem to be renamed:\n\n\
{0}\nThis is likely to cause unresolved module dependencies.\nWould you like to rename IDEA modules to match Eclipse projects?
eclipse.title.rename.failed=Duplicate module names
eclipse.message.rename.failed=Following modules could not be renamed because of duplicate module names:\n\n{0}
eclipse.title.unresolved.projects=Unresolved module references
eclipse.message.unresolved.projects=Some modules contain unresolved Eclipse-style project-relative library references:\n\n{0}
eclipse.file.type.descr=Eclipse project
eclipse.create.library.title=Locate Eclipse Installation
eclipse.create.library.description=<html>Some of the projects you are importing depend on Eclipse platform.<br>\
IntelliJ IDEA will create a global library named {0} containing Eclipse libraries.</html>
eclipse.import.code.style.default.option=Use default project code style
eclipse.import.code.style.import.option=Import code style from Eclipse project
eclipse.import.code.style.default.hint=Settings | Editor | Code Style
eclipse.import.code.style.import.hint=<html>One code style per project is supported. Not all Eclipse code style settings can be mapped to\
  Intellij IDEA settings,<br>so the best possible approximation will be used.
eclipse.import.code.style.organize.imports.box=Import "Organize Imports" settings
list.empty.text.code.styles.not.found=Code styles not found
border.text.choose.project.code.style=Choose project code style
button.browse.dialog.description.locate.user.libraries.file=Locate .userlibraries file where project libraries would be exported
button.browse.dialog.title.locate.user.libraries=Locate .userlibraries
dialog.message.incompatible.modules.found=<html><body>Eclipse incompatible modules found:<ul><br><li>{0}</ul><br>Would you like to proceed and possibly lose your configurations?</body></html>
dialog.title.module.files.found=Module Files Found
dialog.message.0.module.files.found.1.would.you.like.to.reuse.them={0} module files found:\n{1}.\n Would you like to reuse them?
notification.content.imported.projects.contain.unknown.natures=Imported projects contain unknown natures:<br>{0}<br>Some settings may be lost after import.