<idea-plugin>
  <name>GitHub</name>
  <id>org.jetbrains.plugins.github</id>
  <vendor>JetBrains</vendor>
  <category>Version Controls</category>
  <description>
    <![CDATA[
      Provides integration with <a href="http://github.com/">GitHub</a>.
        <ul>
        <li>Specify your GitHub account to access all of your repositories from the IDE.</li>
        <li>Clone repositories, create and review pull requests, create gists, and much more.</li>
        </ul>
        <p>To configure, open <b>Settings / Preferences</b> and go to Version Control | GitHub.</p>
        <p>Requires the Git plugin.</p>
      ]]>
  </description>

  <resource-bundle>messages.GithubBundle</resource-bundle>

  <depends>com.intellij.modules.lang</depends>
  <depends>Git4Idea</depends>
  <depends optional="true" config-file="github-tracker.xml">com.intellij.tasks</depends>

  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceImplementation="org.jetbrains.plugins.github.util.GithubSettings"/>
    <projectService serviceImplementation="org.jetbrains.plugins.github.pullrequest.config.GithubPullRequestsProjectUISettings"/>

    <applicationService serviceImplementation="org.jetbrains.plugins.github.authentication.accounts.GithubAccountManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.authentication.GithubAuthenticationManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.api.GithubApiRequestExecutor$Factory"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.api.GithubApiRequestExecutorManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.authentication.accounts.GithubAccountInformationProvider"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.util.GithubAccountsMigrationHelper"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.util.CachingGithubUserAvatarLoader"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.util.GithubImageResizer"/>

    <projectService serviceImplementation="org.jetbrains.plugins.github.extensions.GithubAccountGitAuthenticationFailureManager"/>
    <projectService serviceImplementation="org.jetbrains.plugins.github.util.GithubProjectSettings"/>
    <projectService serviceImplementation="org.jetbrains.plugins.github.util.GithubSharedProjectSettings"/>
    <projectService serviceImplementation="org.jetbrains.plugins.github.authentication.accounts.GithubProjectDefaultAccountHolder"/>

    <vcsAnnotationGutterActionProvider implementation="org.jetbrains.plugins.github.extensions.GHAnnotationGutterActionProvider"/>
    <projectConfigurable parentId="project.propVCSSupport.Mappings" groupWeight="-500"
                         instance="org.jetbrains.plugins.github.ui.GithubSettingsConfigurable"/>
    <statistics.applicationUsagesCollector
      implementation="org.jetbrains.plugins.github.authentication.accounts.GithubAccountsStatisticsCollector"/>

    <diff.DiffExtension implementation="org.jetbrains.plugins.github.pullrequest.comment.GHPRReviewThreadsDiffExtension"/>
    <openapi.vcs.ui.cloneDialog.VcsCloneDialogExtension
      implementation="org.jetbrains.plugins.github.ui.cloneDialog.GHCloneDialogExtension"/>

    <fileType name="GithubPullRequest" implementationClass="org.jetbrains.plugins.github.pullrequest.GHPRFileType"/>
    <fileEditorProvider implementation="org.jetbrains.plugins.github.pullrequest.GHPREditorProvider"/>

    <toolWindow id="Pull Requests" icon="GithubIcons.PullRequestsToolWindow"
                anchor="left" canCloseContents="true" doNotActivateOnStart="true"
                factoryClass="org.jetbrains.plugins.github.pullrequest.GHPRToolWindowFactory"/>
  </extensions>

  <applicationListeners>
    <listener class="org.jetbrains.plugins.github.authentication.accounts.GithubAccountManager$PasswordStorageClearedListener"
              topic="com.intellij.credentialStore.PasswordSafeSettingsListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>

    <listener class="org.jetbrains.plugins.github.api.GithubApiRequestExecutorManager"
              topic="org.jetbrains.plugins.github.authentication.accounts.AccountTokenChangedListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>

    <listener class="org.jetbrains.plugins.github.authentication.accounts.GithubAccountInformationProvider$AccountTokenListener"
              topic="org.jetbrains.plugins.github.authentication.accounts.AccountTokenChangedListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>

    <listener class="org.jetbrains.plugins.github.pullrequest.GHPRToolWindowTabsManager$AccountsListener"
              topic="org.jetbrains.plugins.github.authentication.accounts.AccountRemovedListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="org.jetbrains.plugins.github.pullrequest.GHPRToolWindowTabsManager$AccountsListener"
              topic="org.jetbrains.plugins.github.authentication.accounts.AccountTokenChangedListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="org.jetbrains.plugins.github.pullrequest.GHPRToolWindowTabsManager$BeforeProjectCloseListener"
              topic="com.intellij.openapi.project.ProjectManagerListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>
  </applicationListeners>

  <projectListeners>
    <listener class="org.jetbrains.plugins.github.authentication.accounts.GithubProjectDefaultAccountHolder$RemovalListener"
              topic="org.jetbrains.plugins.github.authentication.accounts.AccountRemovedListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="org.jetbrains.plugins.github.extensions.GithubAccountGitAuthenticationFailureManager$AccountTokenListener"
              topic="org.jetbrains.plugins.github.authentication.accounts.AccountTokenChangedListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>

    <listener class="org.jetbrains.plugins.github.pullrequest.GHPRToolWindowTabsManager$RemoteUrlsListener"
              topic="com.intellij.dvcs.repo.VcsRepositoryMappingListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="org.jetbrains.plugins.github.pullrequest.GHPRToolWindowTabsManager$RemoteUrlsListener"
              topic="git4idea.repo.GitRepositoryChangeListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="org.jetbrains.plugins.github.pullrequest.GHPRToolWindowTabsManager$BeforePluginUnloadListener"
              topic="com.intellij.ide.plugins.DynamicPluginListener"
              activeInHeadlessMode="false" activeInTestMode="false"/>
  </projectListeners>

  <extensions defaultExtensionNs="Git4Idea">
    <GitHttpAuthDataProvider implementation="org.jetbrains.plugins.github.extensions.GithubHttpAuthDataProvider"/>
    <gitRepositoryHostingService implementation="org.jetbrains.plugins.github.extensions.GithubRepositoryHostingService"/>
  </extensions>

  <actions>
    <action id="Github.Share" class="org.jetbrains.plugins.github.GithubShareAction">
      <add-to-group group-id="Vcs.Import"/>
    </action>
    <action id="Github.Rebase" class="org.jetbrains.plugins.github.GithubRebaseAction">
      <add-to-group group-id="Git.Menu"/>
    </action>
    <action id="Github.Create.Pull.Request" class="org.jetbrains.plugins.github.GithubCreatePullRequestAction">
      <add-to-group group-id="Git.Menu"/>
    </action>
    <action id="Github.View.Pull.Request" class="org.jetbrains.plugins.github.GithubViewPullRequestsAction">
      <add-to-group group-id="Git.Menu"/>
    </action>
    <action id="Github.Open.In.Browser" class="org.jetbrains.plugins.github.GHOpenInBrowserActionGroup">
      <add-to-group group-id="EditorPopupMenu"/>
      <add-to-group group-id="ProjectViewPopupMenu"/>
      <add-to-group group-id="EditorTabPopupMenu"/>
      <add-to-group group-id="Vcs.Log.ContextMenu" anchor="last"/>
      <add-to-group group-id="VcsHistoryActionsGroup" anchor="last"/>
      <add-to-group group-id="VcsHistoryActionsGroup.Toolbar"/>
      <add-to-group group-id="VcsSelectionHistoryDialog.Popup" anchor="last"/>
    </action>
    <action id="Github.Create.Gist" class="org.jetbrains.plugins.github.GithubCreateGistAction">
      <add-to-group group-id="EditorPopupMenu"/>
      <add-to-group group-id="ProjectViewPopupMenu"/>
      <add-to-group group-id="EditorTabPopupMenu"/>
      <add-to-group group-id="ConsoleEditorPopupMenu"/>
    </action>
    <group id="Github.PullRequest.ToolWindow.List.Popup">
      <action id="Github.PullRequest.Show"
              class="org.jetbrains.plugins.github.pullrequest.action.GHPROpenPullRequestAction"/>
      <reference id="Github.Open.In.Browser"/>
      <action id="Github.PullRequest.List.Reload"
              class="org.jetbrains.plugins.github.pullrequest.action.GHPRReloadListAction" use-shortcut-of="Refresh"/>
    </group>
    <group id="Github.PullRequest.Details.Popup">
      <action id="Github.PullRequest.Timeline.Show"
              class="org.jetbrains.plugins.github.pullrequest.action.GHPROpenPullRequestTimelineAction"/>
      <action id="Github.PullRequest.Branch.Create"
              class="org.jetbrains.plugins.github.pullrequest.action.GHPRCreateBranchAction"/>
      <action id="Github.PullRequest.Details.Reload"
              class="org.jetbrains.plugins.github.pullrequest.action.GHPRReloadDetailsAction" use-shortcut-of="Refresh"/>
    </group>
    <action id="Github.PullRequest.Changes.Reload"
            class="org.jetbrains.plugins.github.pullrequest.action.GHPRReloadChangesAction" use-shortcut-of="Refresh"/>
    <action id="Github.PullRequest.Comments.Reload"
            class="org.jetbrains.plugins.github.pullrequest.action.GHPRReloadCommentsAction" use-shortcut-of="Refresh"/>
    <group id="Github.PullRequest.Timeline.Popup">
      <action id="Github.PullRequest.Timeline.Update"
              class="org.jetbrains.plugins.github.pullrequest.action.GHPRUpdateTimelineAction" use-shortcut-of="Refresh"/>
    </group>

    <action id="Github.Break.Api.Requests" internal="true"
            class="org.jetbrains.plugins.github.api.GHRequestExecutorBreaker$Action"/>
  </actions>
</idea-plugin>