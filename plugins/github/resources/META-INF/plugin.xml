<idea-plugin>
  <name>GitHub</name>
  <id>org.jetbrains.plugins.github</id>
  <vendor>JetBrains</vendor>
  <description>
    <![CDATA[
      Allows working with <a href="http://github.com/">GitHub</a>.
      The following features are available:
        <ul>
        <li>Dedicated page under the Version Control node in the Settings/Preferences dialog.</li>
        <li>Ability to browse, check out sources from and import into the available Git repositories, when GitHub is not enabled.</li>
        <li>When GitHub is enabled, the GitHub node appears on the VCS menu, and on the context menu of the editor.
        </ul>
      ]]>
  </description>

  <depends>com.intellij.modules.lang</depends>
  <depends>Git4Idea</depends>
  <depends optional="true" config-file="github-tracker.xml">com.intellij.tasks</depends>

  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceImplementation="org.jetbrains.plugins.github.util.GithubSettings"/>
    <projectService serviceImplementation="org.jetbrains.plugins.github.pullrequest.config.GithubPullRequestsProjectUISettings"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.authentication.accounts.GithubAccountManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.authentication.GithubAuthenticationManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.api.GithubApiRequestExecutor$Factory"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.api.GithubApiRequestExecutorManager"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.authentication.accounts.GithubAccountInformationProvider"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.util.GithubGitHelper"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.util.GithubAccountsMigrationHelper"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.util.CachingGithubUserAvatarLoader"/>
    <applicationService serviceImplementation="org.jetbrains.plugins.github.util.GithubImageResizer"/>

    <projectService serviceImplementation="org.jetbrains.plugins.github.extensions.GithubAccountGitAuthenticationFailureManager"/>
    <projectService serviceInterface="org.jetbrains.plugins.github.util.GithubProjectSettings"
                    serviceImplementation="org.jetbrains.plugins.github.util.GithubProjectSettings"/>
    <projectService serviceImplementation="org.jetbrains.plugins.github.util.GithubSharedProjectSettings"/>
    <projectService serviceImplementation="org.jetbrains.plugins.github.authentication.accounts.GithubProjectDefaultAccountHolder"/>
    <projectService serviceImplementation="org.jetbrains.plugins.github.pullrequest.GithubPullRequestsToolWindowManager"/>
    <projectService serviceImplementation="org.jetbrains.plugins.github.pullrequest.GithubPullRequestsComponentFactory"/>

    <vcsAnnotationGutterActionProvider implementation="org.jetbrains.plugins.github.extensions.GithubAnnotationGutterActionProvider"/>
    <projectConfigurable parentId="project.propVCSSupport.Mappings" groupWeight="-500" instance="org.jetbrains.plugins.github.ui.GithubSettingsConfigurable"/>
    <statistics.applicationUsagesCollector
        implementation="org.jetbrains.plugins.github.authentication.accounts.GithubAccountsStatisticsCollector"/>
  </extensions>

  <extensions defaultExtensionNs="Git4Idea">
    <GitHttpAuthDataProvider implementation="org.jetbrains.plugins.github.extensions.GithubHttpAuthDataProvider"/>
    <gitRepositoryHostingService implementation="org.jetbrains.plugins.github.extensions.GithubRepositoryHostingService"/>
  </extensions>

  <actions>
    <action id="Github.Share" class="org.jetbrains.plugins.github.GithubShareAction">
      <add-to-group group-id="Vcs.Import"/>
    </action>
    <action id="Github.Rebase" class="org.jetbrains.plugins.github.GithubRebaseAction">
      <add-to-group group-id="Git.Menu"/>
    </action>
    <action id="Github.Create.Pull.Request" class="org.jetbrains.plugins.github.GithubCreatePullRequestAction">
      <add-to-group group-id="Git.Menu"/>
    </action>
    <action id="Github.View.Pull.Request" class="org.jetbrains.plugins.github.GithubViewPullRequestsAction">
      <add-to-group group-id="Git.Menu"/>
    </action>
    <action id="Github.Open.In.Browser" class="org.jetbrains.plugins.github.GithubOpenInBrowserActionGroup">
      <add-to-group group-id="EditorPopupMenu"/>
      <add-to-group group-id="ProjectViewPopupMenu"/>
      <add-to-group group-id="EditorTabPopupMenu"/>
      <add-to-group group-id="Vcs.Log.ContextMenu" anchor="last"/>
      <add-to-group group-id="VcsHistoryActionsGroup" anchor="last"/>
      <add-to-group group-id="VcsHistoryActionsGroup.Toolbar"/>
    </action>
    <action id="Github.Create.Gist" class="org.jetbrains.plugins.github.GithubCreateGistAction">
      <add-to-group group-id="EditorPopupMenu"/>
      <add-to-group group-id="ProjectViewPopupMenu"/>
      <add-to-group group-id="EditorTabPopupMenu"/>
      <add-to-group group-id="ConsoleEditorPopupMenu"/>
    </action>
    <group id="Github.PullRequest.ToolWindow.List.Popup">
      <action id="Github.PullRequest.Branch.Create"
              class="org.jetbrains.plugins.github.pullrequest.action.GithubPullRequestCreateBranchAction"/>
      <reference id="Github.Open.In.Browser"/>
      <action id="Github.PullRequest.List.Refresh"
              class="org.jetbrains.plugins.github.pullrequest.action.GithubPullRequestRefreshListAction"/>
    </group>
    <action id="Github.PullRequest.Preview.Refresh"
            class="org.jetbrains.plugins.github.pullrequest.action.GithubPullRequestRefreshDetailsAction"
            internal="true"/>

    <group>
      <action id="Github.PullRequest.Zip.Commits.Toggle"
              class="org.jetbrains.plugins.github.pullrequest.ui.GithubPullRequestChangesComponent$ToggleZipCommitsAction"/>

      <add-to-group group-id="ChangesView.GroupBy" anchor="last"/>
    </group>
  </actions>
</idea-plugin>