package pkg;

public class TestSwitchSimpleReferencesJavac {
   private static void testString(String r2) {
      switch (r2) {// 6
         case "first":
            System.out.println("1");// 8
            break;// 9
         case "second":
            System.out.println("2");// 11
         case "third":
            System.out.println("3");// 13
            break;// 14
         case null:
         default:
            System.out.println("default null");// 16
      }

   }// 18

   private static void testString2(String r2) {
      switch (r2) {// 21
         case "first" -> System.out.println("1");// 23
         case "second" -> System.out.println("2");// 26
         default -> System.out.println(r2);// 29
      }

   }// 31

   private static void testString3(String r2) {
      switch (r2) {// 34
         case null -> System.out.println("null");// 42
         case "first" -> System.out.println("1");// 36
         case "second" -> System.out.println("2");// 39
         default -> System.out.println(r2);// 45
      }

   }// 47

   private static void testByte(Byte r2) {
      switch (r2) {// 51
         case 1:
            break;
         case 2:
            System.out.println("2");// 55
            break;// 56
         case null:
         default:
            System.out.println("default, null");// 59
      }

   }// 61

   private static void testChar(Character r2) {
      switch (r2) {// 64
         case '1':
         case '2':
            System.out.println("2");// 67
            break;// 68
         case null:
         default:
            System.out.println("default, null");// 71
      }

   }// 73

   private static void testInt(Integer r2) {
      switch (r2) {// 77
         case 1:
            break;
         case 3:
            System.out.println("2");// 81
            break;// 82
         case null:
         default:
            System.out.println("default, null");// 85
      }

   }// 87

   private static void testInt2(Integer r2) {
      switch (r2) {// 90
         case 1 -> { }
         case 3 -> System.out.println("2");// 94
         default -> System.out.println("default");// 97
      }

   }// 99

   private static void testEnum(Numbers r2) {
      switch (r2) {// 106
         case null -> System.out.println("null");// 113
         case FIRST -> { }
         case SECOND -> System.out.println("2");// 110
         default -> throw new MatchException((String)null, (Throwable)null);
      }

   }// 115

   private static void testEnum2(Numbers r2) {
      switch (r2) {// 118
         case null -> System.out.println("null");// 125
         case FIRST -> { }
         case SECOND -> System.out.println("2");// 122
         default -> throw new MatchException((String)null, (Throwable)null);
      }

   }// 127

   private static void testEnum3(Numbers r2) {
      switch (r2) {// 130
         case null -> System.out.println("null");// 137
         case FIRST -> { }
         case SECOND -> System.out.println("2");// 134
         default -> System.out.println(r2);// 140
      }

   }// 142

   private static void testEnum4(Numbers r2) {
      switch (r2.ordinal()) {// 145
         case 0 -> { }
         case 1 -> System.out.println("2");// 149
         default -> System.out.println("default");// 152
      }

   }// 154

   private static void testEnum5(Numbers r2) {
      switch (r2) {// 157
         case SECOND:
            System.out.println("2");// 159
            break;// 160
         case null:
         default:
            System.out.println("default");// 162
      }

   }// 164

   static enum Numbers {
      FIRST,
      SECOND;
   }
}

class 'pkg/TestSwitchSimpleReferencesJavac' {
   method 'testString (Ljava/lang/String;)V' {
      0      4
      b      4
      28      6
      29      6
      2a      6
      2b      6
      2c      6
      2d      6
      30      7
      33      9
      34      9
      35      9
      36      9
      37      9
      38      9
      3b      11
      3c      11
      3d      11
      3e      11
      3f      11
      40      11
      43      12
      46      15
      47      15
      48      15
      49      15
      4a      15
      4b      15
      4e      18
   }

   method 'testString2 (Ljava/lang/String;)V' {
      0      21
      10      21
      2c      22
      2d      22
      2e      22
      2f      22
      30      22
      31      22
      37      23
      38      23
      39      23
      3a      23
      3b      23
      3c      23
      44      24
      45      24
      46      24
      48      24
      4b      27
   }

   method 'testString3 (Ljava/lang/String;)V' {
      0      30
      b      30
      24      32
      25      32
      26      32
      27      32
      28      32
      29      32
      2f      33
      30      33
      31      33
      32      33
      33      33
      34      33
      3a      31
      3b      31
      3c      31
      3d      31
      3e      31
      3f      31
      47      34
      48      34
      49      34
      4b      34
      4e      37
   }

   method 'testByte (Ljava/lang/Byte;)V' {
      0      40
      b      40
      27      44
      28      44
      29      44
      2a      44
      2b      44
      2c      44
      2f      45
      32      48
      33      48
      34      48
      35      48
      36      48
      37      48
      3a      51
   }

   method 'testChar (Ljava/lang/Character;)V' {
      0      54
      b      54
      24      57
      25      57
      26      57
      27      57
      28      57
      29      57
      2c      58
      2f      61
      30      61
      31      61
      32      61
      33      61
      34      61
      37      64
   }

   method 'testInt (Ljava/lang/Integer;)V' {
      0      67
      b      67
      27      71
      28      71
      29      71
      2a      71
      2b      71
      2c      71
      2f      72
      32      75
      33      75
      34      75
      35      75
      36      75
      37      75
      3a      78
   }

   method 'testInt2 (Ljava/lang/Integer;)V' {
      0      81
      1      81
      2      81
      3      81
      4      81
      23      83
      24      83
      25      83
      26      83
      27      83
      28      83
      2e      84
      2f      84
      30      84
      31      84
      32      84
      33      84
      36      87
   }

   method 'testEnum (Lpkg/TestSwitchSimpleReferencesJavac$Numbers;)V' {
      0      90
      b      90
      28      94
      29      94
      2d      94
      31      93
      32      93
      33      93
      34      93
      35      93
      36      93
      3c      91
      3d      91
      3e      91
      3f      91
      40      91
      41      91
      44      97
   }

   method 'testEnum2 (Lpkg/TestSwitchSimpleReferencesJavac$Numbers;)V' {
      0      100
      b      100
      28      104
      29      104
      2d      104
      31      103
      32      103
      33      103
      34      103
      35      103
      36      103
      3c      101
      3d      101
      3e      101
      3f      101
      40      101
      41      101
      44      107
   }

   method 'testEnum3 (Lpkg/TestSwitchSimpleReferencesJavac$Numbers;)V' {
      0      110
      b      110
      27      113
      28      113
      29      113
      2a      113
      2b      113
      2c      113
      32      111
      33      111
      34      111
      35      111
      36      111
      37      111
      3f      114
      40      114
      41      114
      43      114
      46      117
   }

   method 'testEnum4 (Lpkg/TestSwitchSimpleReferencesJavac$Numbers;)V' {
      0      120
      1      120
      2      120
      3      120
      4      120
      23      122
      24      122
      25      122
      26      122
      27      122
      28      122
      2e      123
      2f      123
      30      123
      31      123
      32      123
      33      123
      36      126
   }

   method 'testEnum5 (Lpkg/TestSwitchSimpleReferencesJavac$Numbers;)V' {
      0      129
      b      129
      24      131
      25      131
      26      131
      27      131
      28      131
      29      131
      2c      132
      2f      135
      30      135
      31      135
      32      135
      33      135
      34      135
      37      138
   }
}

Lines mapping:
6 <-> 5
8 <-> 7
9 <-> 8
11 <-> 10
13 <-> 12
14 <-> 13
16 <-> 16
18 <-> 19
21 <-> 22
23 <-> 23
26 <-> 24
29 <-> 25
31 <-> 28
34 <-> 31
36 <-> 33
39 <-> 34
42 <-> 32
45 <-> 35
47 <-> 38
51 <-> 41
55 <-> 45
56 <-> 46
59 <-> 49
61 <-> 52
64 <-> 55
67 <-> 58
68 <-> 59
71 <-> 62
73 <-> 65
77 <-> 68
81 <-> 72
82 <-> 73
85 <-> 76
87 <-> 79
90 <-> 82
94 <-> 84
97 <-> 85
99 <-> 88
106 <-> 91
110 <-> 94
113 <-> 92
115 <-> 98
118 <-> 101
122 <-> 104
125 <-> 102
127 <-> 108
130 <-> 111
134 <-> 114
137 <-> 112
140 <-> 115
142 <-> 118
145 <-> 121
149 <-> 123
152 <-> 124
154 <-> 127
157 <-> 130
159 <-> 132
160 <-> 133
162 <-> 136
164 <-> 139
Not mapped:
24
27
28
37
40
43
44
53
79
92
95
108
111
120
123
132
135
138
139
147
150
