package pkg;

public class TestConstType {
   private char lineBreak = '\n';
   private char zero = 0;

   public void setLineBreak(char os) {
      switch (os) {// 8
         case 'u':
            this.lineBreak = '\r';// 10
            break;// 11
         case 'w':
            this.lineBreak = '\n';// 14
      }

   }// 17

   public void init() {
      this.setLineBreak('w');// 20
   }// 21

   public String convertIndentation(String text) {
      if (text.charAt(0) == '\t') {// 24
         text = text.replace('\t', ' ');// 25
      }

      return text;// 27
   }

   public void printalot() {
      System.out.println('a');// 31
      System.out.println('\t');// 32
      System.out.println(0);// 34
      System.out.println(65);// 35
      System.out.println(120);// 36
      System.out.println(32760);// 37
      System.out.println(32761);// 38
      System.out.println(35000);// 39
      System.out.println(50000);// 40
      System.out.println(128000);// 41
      System.out.println(60793);// 42
      System.out.println(60737);// 43
      System.out.println(60777);// 44
      System.out.println(60785);// 45
      System.out.println(60835);// 46
      System.out.println(60843);// 47
      System.out.println(60851);// 48
      System.out.println(60859);// 49
      System.out.println(1048576);// 50
      System.out.println(49152);// 51
      System.out.println(44100);// 52
      System.out.println(44101);// 53
      System.out.println(44102);// 54
      System.out.println(44103);// 55
      System.out.println(60000);// 56
      System.out.println(64000);// 57
      System.out.println(65000);// 58
      System.out.println(45000);// 59
   }// 60

   public char guessType(int val) {
      if (0 <= val && val <= 127) {// 63
         return 'X';// 64
      } else if (-128 <= val && val <= 127) {// 66
         return 'B';// 67
      } else if (128 <= val && val <= 32767) {// 69
         return 'Y';// 70
      } else if (-32768 <= val && val <= 32767) {// 72
         return 'S';// 73
      } else {
         return (char)(32768 <= val && val <= 65535 ? 'C' : 'I');// 75 76 79
      }
   }

   public int getTypeMaxValue(char type) {
      int maxValue;
      switch (type) {// 85
         case 'B':
            maxValue = 127;// 90
            break;// 91
         case 'C':
            maxValue = 65535;// 99
            break;// 100
         case 'S':
            maxValue = 32767;// 96
            break;// 97
         case 'X':
            maxValue = 128;// 87
            break;// 88
         case 'Y':
            maxValue = 32768;// 93
            break;// 94
         default:
            maxValue = 2147483647;// 102
      }

      return maxValue;// 104
   }
}

class 'pkg/TestConstType' {
   method 'setLineBreak (C)V' {
      0      7
      1      7
      1c      9
      1d      9
      1e      9
      1f      9
      22      10
      25      12
      26      12
      27      12
      28      12
      2b      15
   }

   method 'init ()V' {
      0      18
      1      18
      2      18
      3      18
      4      18
      5      18
      6      19
   }

   method 'convertIndentation (Ljava/lang/String;)Ljava/lang/String;' {
      0      22
      1      22
      2      22
      3      22
      4      22
      5      22
      6      22
      7      22
      a      23
      b      23
      c      23
      d      23
      e      23
      f      23
      10      23
      11      23
      12      23
      13      26
      14      26
   }

   method 'printalot ()V' {
      0      30
      1      30
      2      30
      3      30
      4      30
      5      30
      6      30
      7      30
      8      31
      9      31
      a      31
      b      31
      c      31
      d      31
      e      31
      f      31
      10      32
      11      32
      12      32
      13      32
      14      32
      15      32
      16      32
      17      33
      18      33
      19      33
      1a      33
      1b      33
      1c      33
      1d      33
      1e      33
      1f      34
      20      34
      21      34
      22      34
      23      34
      24      34
      25      34
      26      34
      27      35
      28      35
      29      35
      2a      35
      2b      35
      2c      35
      2d      35
      2e      35
      2f      35
      30      36
      31      36
      32      36
      33      36
      34      36
      35      36
      36      36
      37      36
      38      36
      39      37
      3a      37
      3b      37
      3c      37
      3d      37
      3e      37
      3f      37
      40      37
      41      38
      42      38
      43      38
      44      38
      45      38
      46      38
      47      38
      48      38
      49      39
      4a      39
      4b      39
      4c      39
      4d      39
      4e      39
      4f      39
      50      39
      51      40
      52      40
      53      40
      54      40
      55      40
      56      40
      57      40
      58      40
      59      41
      5a      41
      5b      41
      5c      41
      5d      41
      5e      41
      5f      41
      60      41
      61      42
      62      42
      63      42
      64      42
      65      42
      66      42
      67      42
      68      42
      69      43
      6a      43
      6b      43
      6c      43
      6d      43
      6e      43
      6f      43
      70      43
      71      44
      72      44
      73      44
      74      44
      75      44
      76      44
      77      44
      78      44
      79      45
      7a      45
      7b      45
      7c      45
      7d      45
      7e      45
      7f      45
      80      45
      81      46
      82      46
      83      46
      84      46
      85      46
      86      46
      87      46
      88      46
      89      47
      8a      47
      8b      47
      8c      47
      8d      47
      8e      47
      8f      47
      90      47
      91      48
      92      48
      93      48
      94      48
      95      48
      96      48
      97      48
      98      48
      99      49
      9a      49
      9b      49
      9c      49
      9d      49
      9e      49
      9f      49
      a0      49
      a1      50
      a2      50
      a3      50
      a4      50
      a5      50
      a6      50
      a7      50
      a8      50
      a9      51
      aa      51
      ab      51
      ac      51
      ad      51
      ae      51
      af      51
      b0      51
      b1      52
      b2      52
      b3      52
      b4      52
      b5      52
      b6      52
      b7      52
      b8      52
      b9      53
      ba      53
      bb      53
      bc      53
      bd      53
      be      53
      bf      53
      c0      53
      c1      54
      c2      54
      c3      54
      c4      54
      c5      54
      c6      54
      c7      54
      c8      54
      c9      55
      ca      55
      cb      55
      cc      55
      cd      55
      ce      55
      cf      55
      d0      55
      d1      56
      d2      56
      d3      56
      d4      56
      d5      56
      d6      56
      d7      56
      d8      56
      d9      57
      da      57
      db      57
      dc      57
      dd      57
      de      57
      df      57
      e0      57
      e1      58
   }

   method 'guessType (I)C' {
      0      61
      1      61
      2      61
      5      61
      6      61
      7      61
      8      61
      b      62
      c      62
      d      62
      e      63
      f      63
      10      63
      11      63
      14      63
      15      63
      16      63
      17      63
      1a      64
      1b      64
      1c      64
      1d      65
      1e      65
      1f      65
      20      65
      21      65
      24      65
      25      65
      26      65
      27      65
      28      65
      2b      66
      2c      66
      2d      66
      2e      67
      2f      67
      30      67
      31      67
      32      67
      35      67
      36      67
      37      67
      38      67
      39      67
      3c      68
      3d      68
      3e      68
      3f      70
      40      70
      41      70
      42      70
      45      70
      46      70
      47      70
      48      70
      4b      70
      4c      70
      4e      70
      4f      70
   }

   method 'getTypeMaxValue (C)I' {
      0      76
      1      76
      34      87
      35      87
      36      87
      37      87
      38      88
      3b      78
      3c      78
      3d      78
      3e      79
      41      90
      42      90
      43      90
      44      91
      47      84
      48      84
      49      84
      4a      84
      4b      85
      4e      81
      4f      81
      50      81
      51      82
      54      93
      55      93
      56      93
      57      96
      58      96
   }
}

Lines mapping:
8 <-> 8
10 <-> 10
11 <-> 11
14 <-> 13
17 <-> 16
20 <-> 19
21 <-> 20
24 <-> 23
25 <-> 24
27 <-> 27
31 <-> 31
32 <-> 32
34 <-> 33
35 <-> 34
36 <-> 35
37 <-> 36
38 <-> 37
39 <-> 38
40 <-> 39
41 <-> 40
42 <-> 41
43 <-> 42
44 <-> 43
45 <-> 44
46 <-> 45
47 <-> 46
48 <-> 47
49 <-> 48
50 <-> 49
51 <-> 50
52 <-> 51
53 <-> 52
54 <-> 53
55 <-> 54
56 <-> 55
57 <-> 56
58 <-> 57
59 <-> 58
60 <-> 59
63 <-> 62
64 <-> 63
66 <-> 64
67 <-> 65
69 <-> 66
70 <-> 67
72 <-> 68
73 <-> 69
75 <-> 71
76 <-> 71
79 <-> 71
85 <-> 77
87 <-> 88
88 <-> 89
90 <-> 79
91 <-> 80
93 <-> 91
94 <-> 92
96 <-> 85
97 <-> 86
99 <-> 82
100 <-> 83
102 <-> 94
104 <-> 97
