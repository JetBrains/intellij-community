package typeAnnotations;

import java.io.IOException;
import java.io.Serializable;
import java.util.function.Consumer;

public class MemberDeclarationTypeAnnotations<@A P extends @B Number & @F Serializable> {
   @L String s1 = "";
   @B int f1 = 0;
   Consumer<String> c = (@A String s) -> System.out.println(s);// 12
   SomeFunInterface<String, String> sf = (String s1, @B String s2) -> System.out.println(s1);// 14

   @K
   public @L @A MemberDeclarationTypeAnnotations() {
   }// 18

   @K
   public <@A T extends @B Number & @F Serializable> @L @C Number foo(@D T @E [] a) {
      return 0;// 22
   }

   @K
   public <T> @C Number bar(@D T @E [] a) throws @A IOException, @B IllegalStateException {
      return 0;// 27
   }

   public void fooBar(@L @A String param1, @K @L @B String param2) {
   }// 30
}

class 'typeAnnotations/MemberDeclarationTypeAnnotations' {
   method 'lambda$new$0 (Ljava/lang/String;)V' {
      0      9
      1      9
      2      9
      3      9
      4      9
      5      9
      6      9
      7      9
   }

   method 'lambda$new$1 (Ljava/lang/String;Ljava/lang/String;)V' {
      0      10
      1      10
      2      10
      3      10
      4      10
      5      10
      6      10
      7      10
   }

   method '<init> ()V' {
      21      14
   }

   method 'foo ([Ljava/lang/Number;)Ljava/lang/Number;' {
      0      18
      1      18
      2      18
      3      18
      4      18
   }

   method 'bar ([Ljava/lang/Object;)Ljava/lang/Number;' {
      0      23
      1      23
      2      23
      3      23
      4      23
   }

   method 'fooBar (Ljava/lang/String;Ljava/lang/String;)V' {
      0      27
   }
}

Lines mapping:
12 <-> 10
14 <-> 11
18 <-> 15
22 <-> 19
27 <-> 24
30 <-> 28
Not mapped:
8
10
17
