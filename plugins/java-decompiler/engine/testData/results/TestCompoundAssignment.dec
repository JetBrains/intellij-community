package pkg;

public class TestCompoundAssignment {
   public int testSimple(int i, int j) {
      i += j;// 5
      i -= j;// 6
      i *= j;// 7
      i /= j;// 8
      i &= j;// 9
      i |= j;// 10
      i ^= j;// 11
      i >>= j;// 12
      i <<= j;// 13
      i >>>= j;// 14
      return i;// 16
   }

   public int testComplex(int i, int j, int k) {
      i += j + k;// 20
      i -= j + k;// 21
      i *= j + k;// 22
      i /= j + k;// 23
      i &= j + k;// 24
      i |= j + k;// 25
      i ^= j + k;// 26
      i >>= j + k;// 27
      i <<= j + k;// 28
      i >>>= j + k;// 29
      return i;// 31
   }

   public int testComplexParens(int i, int j, int k, int m) {
      i += (j + k) * m;// 35
      i -= (j + k) * m;// 36
      i *= (j + k) * m;// 37
      i /= (j + k) * m;// 38
      i &= (j + k) * m;// 39
      i |= (j + k) * m;// 40
      i ^= (j + k) * m;// 41
      i >>= (j + k) * m;// 42
      i <<= (j + k) * m;// 43
      i >>>= (j + k) * m;// 44
      return i;// 46
   }

   public int testComplexTernary(int i, int j, int k, int m, boolean b) {
      i += b ? j : k * m;// 50
      i -= b ? j : k * m;// 51
      i *= b ? j : k * m;// 52
      i /= b ? j : k * m;// 53
      i &= b ? j : k * m;// 54
      i |= b ? j : k * m;// 55
      i ^= b ? j : k * m;// 56
      i >>= b ? j : k * m;// 57
      i <<= b ? j : k * m;// 58
      i >>>= b ? j : k * m;// 59
      return i;// 61
   }

   public int testArrayOp(int i, int j, int[] a, int b) {
      i += a[b] = j;// 65
      i -= a[b] = j;// 66
      i *= a[b] = j;// 67
      i /= a[b] = j;// 68
      i &= a[b] = j;// 69
      i |= a[b] = j;// 70
      i ^= a[b] = j;// 71
      i >>= a[b] = j;// 72
      i <<= a[b] = j;// 73
      i >>>= a[b] = j;// 74
      return i;// 76
   }
}

class 'pkg/TestCompoundAssignment' {
   method 'testSimple (II)I' {
      1      4
      3      4
      5      5
      7      5
      9      6
      b      6
      d      7
      f      7
      11      8
      13      8
      15      9
      17      9
      19      10
      1b      10
      1d      11
      1f      11
      21      12
      23      12
      25      13
      27      13
      28      14
      29      14
   }

   method 'testComplex (III)I' {
      1      18
      2      18
      3      18
      5      18
      7      19
      8      19
      9      19
      b      19
      d      20
      e      20
      f      20
      11      20
      13      21
      14      21
      15      21
      17      21
      19      22
      1a      22
      1b      22
      1d      22
      1f      23
      20      23
      21      23
      23      23
      25      24
      26      24
      27      24
      29      24
      2b      25
      2c      25
      2d      25
      2f      25
      31      26
      32      26
      33      26
      35      26
      37      27
      38      27
      39      27
      3b      27
      3c      28
      3d      28
   }

   method 'testComplexParens (IIII)I' {
      1      32
      2      32
      3      32
      4      32
      5      32
      6      32
      8      32
      a      33
      b      33
      c      33
      d      33
      e      33
      f      33
      11      33
      13      34
      14      34
      15      34
      16      34
      17      34
      18      34
      1a      34
      1c      35
      1d      35
      1e      35
      1f      35
      20      35
      21      35
      23      35
      25      36
      26      36
      27      36
      28      36
      29      36
      2a      36
      2c      36
      2e      37
      2f      37
      30      37
      31      37
      32      37
      33      37
      35      37
      37      38
      38      38
      39      38
      3a      38
      3b      38
      3c      38
      3e      38
      40      39
      41      39
      42      39
      43      39
      44      39
      45      39
      47      39
      49      40
      4a      40
      4b      40
      4c      40
      4d      40
      4e      40
      50      40
      52      41
      53      41
      54      41
      55      41
      56      41
      57      41
      59      41
      5a      42
      5b      42
   }

   method 'testComplexTernary (IIIIZ)I' {
      1      46
      2      46
      3      46
      6      46
      a      46
      b      46
      c      46
      d      46
      f      46
      11      47
      12      47
      13      47
      16      47
      1a      47
      1b      47
      1c      47
      1d      47
      1f      47
      21      48
      22      48
      23      48
      26      48
      2a      48
      2b      48
      2c      48
      2d      48
      2f      48
      31      49
      32      49
      33      49
      36      49
      3a      49
      3b      49
      3c      49
      3d      49
      3f      49
      41      50
      42      50
      43      50
      46      50
      4a      50
      4b      50
      4c      50
      4d      50
      4f      50
      51      51
      52      51
      53      51
      56      51
      5a      51
      5b      51
      5c      51
      5d      51
      5f      51
      61      52
      62      52
      63      52
      66      52
      6a      52
      6b      52
      6c      52
      6d      52
      6f      52
      71      53
      72      53
      73      53
      76      53
      7a      53
      7b      53
      7c      53
      7d      53
      7f      53
      81      54
      82      54
      83      54
      86      54
      8a      54
      8b      54
      8c      54
      8d      54
      8f      54
      91      55
      92      55
      93      55
      96      55
      9a      55
      9b      55
      9c      55
      9d      55
      9f      55
      a0      56
      a1      56
   }

   method 'testArrayOp (II[II)I' {
      1      60
      2      60
      3      60
      4      60
      6      60
      8      60
      a      61
      b      61
      c      61
      d      61
      f      61
      11      61
      13      62
      14      62
      15      62
      16      62
      18      62
      1a      62
      1c      63
      1d      63
      1e      63
      1f      63
      21      63
      23      63
      25      64
      26      64
      27      64
      28      64
      2a      64
      2c      64
      2e      65
      2f      65
      30      65
      31      65
      33      65
      35      65
      37      66
      38      66
      39      66
      3a      66
      3c      66
      3e      66
      40      67
      41      67
      42      67
      43      67
      45      67
      47      67
      49      68
      4a      68
      4b      68
      4c      68
      4e      68
      50      68
      52      69
      53      69
      54      69
      55      69
      57      69
      59      69
      5a      70
      5b      70
   }
}

Lines mapping:
5 <-> 5
6 <-> 6
7 <-> 7
8 <-> 8
9 <-> 9
10 <-> 10
11 <-> 11
12 <-> 12
13 <-> 13
14 <-> 14
16 <-> 15
20 <-> 19
21 <-> 20
22 <-> 21
23 <-> 22
24 <-> 23
25 <-> 24
26 <-> 25
27 <-> 26
28 <-> 27
29 <-> 28
31 <-> 29
35 <-> 33
36 <-> 34
37 <-> 35
38 <-> 36
39 <-> 37
40 <-> 38
41 <-> 39
42 <-> 40
43 <-> 41
44 <-> 42
46 <-> 43
50 <-> 47
51 <-> 48
52 <-> 49
53 <-> 50
54 <-> 51
55 <-> 52
56 <-> 53
57 <-> 54
58 <-> 55
59 <-> 56
61 <-> 57
65 <-> 61
66 <-> 62
67 <-> 63
68 <-> 64
69 <-> 65
70 <-> 66
71 <-> 67
72 <-> 68
73 <-> 69
74 <-> 70
76 <-> 71
