package pkg;

public class TestPrimitives {
   public void printAll() {
      this.printBoolean(true);// 6
      this.printByte((byte)123);// 7
      this.printShort((short)257);// 8
      this.printInt(123);// 9
      this.printLong(123L);// 10
      this.printFloat(1.23F);// 11
      this.printDouble(1.23D);// 12
      this.printChar('Z');// 13
      String.format("%b, %d, %d, %d, %c", true, 1, 213, 40000, 'c', 42L);// 15
      System.out.println(String.format("%b, %d, %d, %d", this.getBoolean(), this.getByte(), this.getShort(), this.getInt()));// 16
   }// 17

   public void printBoolean(boolean b) {
      System.out.println(String.format("%b", b));// 20
   }// 21

   public void printByte(byte b) {
      System.out.println(String.format("%d", b));// 24
   }// 25

   public void printShort(short s) {
      System.out.println(String.format("%d", s));// 28
   }// 29

   public void printInt(int i) {
      System.out.println(String.format("%d", i));// 32
   }// 33

   public void printLong(long l) {
      System.out.println(String.format("%d", l));// 36
   }// 37

   public void printFloat(float f) {
      System.out.println(String.format("%f", f));// 40
   }// 41

   public void printDouble(double d) {
      System.out.println(String.format("%f", d));// 44
   }// 45

   public void printChar(char c) {
      System.out.println(String.format("%c", c));// 48
   }// 49

   public boolean getBoolean() {
      return false;// 53
   }

   public byte getByte() {
      return -128;// 57
   }

   public short getShort() {
      return -32768;// 61
   }

   public int getInt() {
      return 42;// 65
   }

   public void printNarrowed() {
      this.printByte((byte)this.getInt());// 69
      this.printShort((short)this.getInt());// 70
   }// 71

   public void constructor() {
      new Byte((byte)1);// 74
   }// 75

   private boolean compare(char c) {
      boolean res = c > -1;// 78
      res = c > 0;// 79
      res = c > 1;// 80
      res = c > '\b';// 81
      res = c > '\t';// 82
      res = c > '\n';// 83
      res = c > '\f';// 84
      res = c > '\r';// 85
      res = c > ' ';// 86
      res = c > 'a';// 87
      res = c > 'Z';// 88
      res = c > 127;// 89
      res = c > 255;// 90
      return res;// 91
   }
}

class 'pkg/TestPrimitives' {
   method 'printAll ()V' {
      1      4
      2      4
      6      5
      8      5
      c      6
      f      6
      13      7
      15      7
      19      8
      1c      8
      20      9
      22      9
      26      10
      29      10
      2d      11
      2f      11
      32      12
      3b      12
      3c      12
      42      12
      43      12
      49      12
      4c      12
      52      12
      54      12
      5a      12
      5c      12
      62      12
      65      12
      69      12
      6d      13
      70      13
      79      13
      7c      13
      83      13
      86      13
      8d      13
      90      13
      97      13
      9a      13
      9e      13
      a1      13
      a4      14
   }

   method 'printBoolean (Z)V' {
      0      17
      3      17
      c      17
      10      17
      13      17
      16      18
   }

   method 'printByte (B)V' {
      0      21
      3      21
      c      21
      10      21
      13      21
      16      22
   }

   method 'printShort (S)V' {
      0      25
      3      25
      c      25
      10      25
      13      25
      16      26
   }

   method 'printInt (I)V' {
      0      29
      3      29
      c      29
      10      29
      13      29
      16      30
   }

   method 'printLong (J)V' {
      0      33
      3      33
      c      33
      10      33
      13      33
      16      34
   }

   method 'printFloat (F)V' {
      0      37
      3      37
      c      37
      10      37
      13      37
      16      38
   }

   method 'printDouble (D)V' {
      0      41
      3      41
      c      41
      10      41
      13      41
      16      42
   }

   method 'printChar (C)V' {
      0      45
      3      45
      c      45
      10      45
      13      45
      16      46
   }

   method 'getBoolean ()Z' {
      0      49
      1      49
   }

   method 'getByte ()B' {
      0      53
      2      53
   }

   method 'getShort ()S' {
      0      57
      3      57
   }

   method 'getInt ()I' {
      0      61
      2      61
   }

   method 'printNarrowed ()V' {
      2      65
      5      65
      6      65
      b      66
      e      66
      f      66
      12      67
   }

   method 'constructor ()V' {
      4      70
      9      71
   }

   method 'compare (C)Z' {
      1      74
      2      74
      a      74
      c      75
      14      75
      16      76
      17      76
      1f      76
      21      77
      23      77
      2b      77
      2d      78
      2f      78
      37      78
      39      79
      3b      79
      43      79
      45      80
      47      80
      4f      80
      51      81
      53      81
      5b      81
      5d      82
      5f      82
      67      82
      69      83
      6b      83
      73      83
      75      84
      77      84
      7f      84
      81      85
      83      85
      8b      85
      8d      86
      90      86
      98      86
      9a      87
   }
}

Lines mapping:
6 <-> 5
7 <-> 6
8 <-> 7
9 <-> 8
10 <-> 9
11 <-> 10
12 <-> 11
13 <-> 12
15 <-> 13
16 <-> 14
17 <-> 15
20 <-> 18
21 <-> 19
24 <-> 22
25 <-> 23
28 <-> 26
29 <-> 27
32 <-> 30
33 <-> 31
36 <-> 34
37 <-> 35
40 <-> 38
41 <-> 39
44 <-> 42
45 <-> 43
48 <-> 46
49 <-> 47
53 <-> 50
57 <-> 54
61 <-> 58
65 <-> 62
69 <-> 66
70 <-> 67
71 <-> 68
74 <-> 71
75 <-> 72
78 <-> 75
79 <-> 76
80 <-> 77
81 <-> 78
82 <-> 79
83 <-> 80
84 <-> 81
85 <-> 82
86 <-> 83
87 <-> 84
88 <-> 85
89 <-> 86
90 <-> 87
91 <-> 88
