<idea-plugin>
  <name>YAML</name>
  <id>org.jetbrains.plugins.yaml</id>
  <vendor>JetBrains</vendor>
  <description>YAML support</description>

  <depends>com.intellij.modules.lang</depends>

  <extensions defaultExtensionNs="com.intellij">
    <!-- YAML -->
    <additionalTextAttributes scheme="Default" file="colorSchemes/YAMLDefault.xml"/>
    <additionalTextAttributes scheme="Darcula" file="colorSchemes/YAMLDarcula.xml"/>

    <lang.formatter language="yaml" implementationClass="org.jetbrains.yaml.formatter.YAMLFormattingModelBuilder"/>
    <enterHandlerDelegate implementation="org.jetbrains.yaml.formatter.YAMLEnterAtIndentHandler" order="first"/>
    <typedHandler implementation="org.jetbrains.yaml.formatter.YAMLHyphenTypedHandler"/>
    <copyPastePreProcessor implementation="org.jetbrains.yaml.formatter.YAMLCopyPasteProcessor"/>
    <lang.parserDefinition language="yaml" implementationClass="org.jetbrains.yaml.YAMLParserDefinition"/>
    <lang.commenter language="yaml" implementationClass="org.jetbrains.yaml.YAMLCommenter"/>
    <lang.syntaxHighlighterFactory language="yaml" implementationClass="org.jetbrains.yaml.YAMLSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="org.jetbrains.yaml.YAMLColorsPage"/>
    <lang.braceMatcher language="yaml" implementationClass="org.jetbrains.yaml.YAMLPairedBraceMatcher"/>
    <lang.findUsagesProvider language="yaml" id="yamlFindUsagesProvider" implementationClass="org.jetbrains.yaml.YAMLFindUsagesProvider"/>
    <lang.foldingBuilder language="yaml" id="YAMLFoldingBuilder" implementationClass="org.jetbrains.yaml.folding.YAMLFoldingBuilder"/>
    <fileTypeFactory implementation="org.jetbrains.yaml.YAMLFileTypeLoader" id="yamlFileTypeLoader"/>
    <editor.backspaceModeOverride language="yaml" implementationClass="com.intellij.codeInsight.editorActions.SmartBackspaceDisabler"/>
    <lang.psiStructureViewFactory language="yaml" implementationClass="org.jetbrains.yaml.structureView.YAMLStructureViewFactory"/>
    <langCodeStyleSettingsProvider implementation="org.jetbrains.yaml.YAMLLanguageCodeStyleSettingsProvider"/>
    <codeStyleSettingsProvider implementation="org.jetbrains.yaml.YAMLCodeStyleSettingsProvider"/>
    <qualifiedNameProvider implementation="org.jetbrains.yaml.navigation.YAMLQualifiedNameProvider"/>
    <pom.declarationSearcher implementation="org.jetbrains.yaml.navigation.YAMLScalarKeyDeclarationSearcher"/>
    <fileBasedIndex implementation="org.jetbrains.yaml.navigation.YAMLKeysIndex"/>
    <searchEverywhereContributor implementation="org.jetbrains.yaml.navigation.YAMLKeysSearchEverywhereContributor$Factory"/>

    <psi.treeChangePreprocessor implementation="org.jetbrains.yaml.psi.YAMLPsiManager"/>

    <projectService serviceImplementation="org.jetbrains.yaml.YAMLElementGenerator"/>

    <completion.contributor order="first" language="yaml"
                            implementationClass="org.jetbrains.yaml.schema.YamlJsonSchemaCompletionContributor"/>
    <lang.documentationProvider language="yaml" implementationClass="org.jetbrains.yaml.schema.YamlJsonSchemaDocumentationProvider" order="first"/>
    <gotoDeclarationHandler implementation="org.jetbrains.yaml.schema.YamlJsonSchemaGotoDeclarationHandler" order="last"/>
    <lang.elementManipulator forClass="org.jetbrains.yaml.psi.impl.YAMLScalarImpl"
                             implementationClass="org.jetbrains.yaml.psi.impl.YAMLScalarElementManipulator"/>
    <breadcrumbsInfoProvider implementation="org.jetbrains.yaml.breadcrumbs.YAMLBreadcrumbsInfoProvider"/>
    <elementDescriptionProvider implementation="org.jetbrains.yaml.psi.impl.YAMLElementDescriptionProvider"/>
    <readWriteAccessDetector implementation="org.jetbrains.yaml.resolve.YAMLAnchorReadWriteAccessDetector"/>
    <renameInputValidator implementation="org.jetbrains.yaml.refactoring.rename.YamlKeyValueRenameInputValidator" order="first"/>
    <renameInputValidator implementation="org.jetbrains.yaml.resolve.YAMLAnchorRenameInputValidator" order="first"/>
    <lang.refactoringSupport language="yaml" implementationClass="org.jetbrains.yaml.resolve.YAMLRefactoringSupportProvider"/>
    <renamePsiElementProcessor implementation="org.jetbrains.yaml.resolve.YAMLRenamePsiElementProcessor"/>
    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLUnresolvedAlias"
                     key="inspections.unresolved.alias.name" level="ERROR"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="org.jetbrains.yaml.inspections.YAMLUnresolvedAliasInspection"/>
    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLRecursiveAlias"
                     key="inspections.recursive.alias.name" level="ERROR"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="org.jetbrains.yaml.inspections.YAMLRecursiveAliasInspection"/>
    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLDuplicatedKeys" level="ERROR"
                     key="inspections.duplicated.keys.name"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="org.jetbrains.yaml.inspections.YAMLDuplicatedKeysInspection"/>
    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLUnusedAnchor"
                     key="inspections.unused.anchor.name" level="WARNING"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="org.jetbrains.yaml.inspections.YAMLUnusedAnchorInspection"/>

    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLSchemaValidation"
                     key="inspections.schema.validation.name"
                     groupKey="inspections.group.name"
                     enabledByDefault="true"
                     level="WARNING"
                     implementationClass="org.jetbrains.yaml.schema.YamlJsonSchemaHighlightingInspection"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij.json">
    <jsonLikePsiWalkerFactory implementation="org.jetbrains.yaml.schema.YamlJsonLikePsiWalkerFactory"/>
    <jsonSchemaEnabler implementation="org.jetbrains.yaml.schema.YamlJsonEnabler" />
  </extensions>

  <extensions defaultExtensionNs="com.intellij.spellchecker">
    <support language="yaml" implementationClass="org.jetbrains.yaml.YAMLSpellcheckerStrategy"/>
  </extensions>

  <extensionPoints>
    <extensionPoint qualifiedName="com.intellij.yaml.customStructureViewFactory"
                    interface="org.jetbrains.yaml.structureView.YAMLCustomStructureViewFactory">
    </extensionPoint>
  </extensionPoints>

</idea-plugin>