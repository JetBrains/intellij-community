scalar key ('key1')
: (':')
whitespace (' ')
text ('start')
Eol ('\n')
indent ('  ')
text ('- minus should be a continue of plain scalar')
Eol ('\n')
scalar key ('key2')
: (':')
whitespace (' ')
text ('start')
Eol ('\n')
indent ('  ')
text ('{ continue')
Eol ('\n')
scalar key ('key3')
: (':')
whitespace (' ')
text ('start')
Eol ('\n')
indent ('  ')
text ('' it should be a continue of plain scalar '')
Eol ('\n')
scalar key ('key4')
: (':')
whitespace (' ')
text ('start')
Eol ('\n')
indent ('  ')
text ('" it should be a continue of plain scalar "')
Eol ('\n')
Eol ('\n')
scalar dstring ('"Without parent indent it is a string (syntax parser error here should be)"')
Eol ('\n')
scalar string (''Without parent indent it is a string (syntax parser error here should be)'')
Eol ('\n')
Eol ('\n')
{ ('{')
whitespace (' ')
scalar key ('brackets')
: (':')
whitespace (' ')
text ('ok')
whitespace (' ')
} ('}')
