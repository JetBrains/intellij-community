<idea-plugin>
  <dependencies>
    <plugin id="com.intellij.modules.lang"/>
    <plugin id="com.intellij.modules.json"/>
    <plugin id="com.intellij.platform.experimental.backend"/>
    <module name="intellij.yaml"/>
  </dependencies>
  
  <extensions defaultExtensionNs="com.intellij">

    <!--Remdev backend only-->
    <virtualFileCustomDataProvider implementation="org.jetbrains.yaml.editing.YamlCodeStyleSettingsCustomDataSynchronizer"/>
    <!-- YAML -->
    <additionalTextAttributes scheme="Default" file="colorSchemes/YAMLDefault.xml"/>
    <additionalTextAttributes scheme="Darcula" file="colorSchemes/YAMLDarcula.xml"/>

    <registryKey key="yaml.injection.async.indent" defaultValue="true"
                 description="Performs asynchronous indent when typing 'enter' in code injected into YAML"/>
    <lang.findUsagesProvider language="yaml" id="yamlFindUsagesProvider" implementationClass="org.jetbrains.yaml.YAMLFindUsagesProvider"/>
    <editor.backspaceModeOverride language="yaml" implementationClass="com.intellij.codeInsight.editorActions.SmartBackspaceDisabler"/>
    <lang.psiStructureViewFactory language="yaml" implementationClass="org.jetbrains.yaml.structureView.YAMLStructureViewFactory"/>
    <qualifiedNameProvider implementation="org.jetbrains.yaml.navigation.YAMLQualifiedNameProvider"/>
    <pom.declarationSearcher implementation="org.jetbrains.yaml.navigation.YAMLScalarKeyDeclarationSearcher"/>
    <searchEverywhereContributor implementation="org.jetbrains.yaml.navigation.YAMLKeysSearchEverywhereContributor$Factory"/>
    <enterHandlerDelegate implementation="org.jetbrains.yaml.smart.YAMLInjectedElementEnterHandler" order="last"/>

    <completion.contributor language="yaml"
                            implementationClass="org.jetbrains.yaml.completion.YamlStructuralKeysCompletionContributor"/>
    <codeInsight.wordCompletionFilter language="yaml" implementationClass="org.jetbrains.yaml.completion.YamlWordCompletionFilter"/>
    <completion.contributor order="after InplaceRename" language="yaml" id="YamlJsonSchema"
                            implementationClass="org.jetbrains.yaml.schema.YamlJsonSchemaCompletionContributor"/>
    <lang.documentationProvider language="yaml" implementationClass="org.jetbrains.yaml.schema.YamlJsonSchemaDocumentationProvider"
                                id="YamlJsonSchemaDocumentationProvider"/>
    <gotoDeclarationHandler implementation="org.jetbrains.yaml.schema.YamlJsonSchemaGotoDeclarationHandler" order="last"/>
    <breadcrumbsInfoProvider implementation="org.jetbrains.yaml.breadcrumbs.YAMLBreadcrumbsInfoProvider"/>
    <readWriteAccessDetector implementation="org.jetbrains.yaml.resolve.YAMLAnchorReadWriteAccessDetector"/>
    <renameInputValidator implementation="org.jetbrains.yaml.resolve.YAMLAnchorRenameInputValidator" order="first"/>
    <lang.refactoringSupport language="yaml" implementationClass="org.jetbrains.yaml.resolve.YAMLRefactoringSupportProvider"/>
    <renamePsiElementProcessor implementation="org.jetbrains.yaml.resolve.YAMLRenamePsiElementProcessor"/>
    <languageInjectionContributor implementationClass="org.jetbrains.yaml.schema.YamlJsonSchemaLanguageInjector" language="yaml"
                                  id="yamlJsonSchemaLanguageInjector"/>
    <languageInjectionPerformer implementationClass="org.jetbrains.yaml.YamlLanguageInjectionPerformer" language="yaml"
                                id="yamlLanguageInjectionPerformer"/>
    <lang.inspectionSuppressor language="yaml" implementationClass="org.jetbrains.yaml.YAMLlInspectionSuppressor"/>
    <annotator language="yaml" implementationClass="org.jetbrains.yaml.annotator.YAMLInvalidBlockChildrenErrorAnnotator"/>

    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLUnresolvedAlias"
                     key="inspections.unresolved.alias.name" level="ERROR"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="org.jetbrains.yaml.inspections.YAMLUnresolvedAliasInspection"/>
    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLRecursiveAlias"
                     key="inspections.recursive.alias.name" level="ERROR"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="org.jetbrains.yaml.inspections.YAMLRecursiveAliasInspection"/>
    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLDuplicatedKeys" level="ERROR"
                     key="inspections.duplicated.keys.name"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="org.jetbrains.yaml.inspections.YAMLDuplicatedKeysInspection"/>
    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLUnusedAnchor"
                     key="inspections.unused.anchor.name" level="WARNING"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="org.jetbrains.yaml.inspections.YAMLUnusedAnchorInspection"/>

    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLIncompatibleTypes"
                     key="inspections.types.mismatch.name" level="WARNING"
                     groupKey="inspections.group.name" enabledByDefault="true"
                     implementationClass="org.jetbrains.yaml.inspections.YAMLIncompatibleTypesInspection"/>

    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLSchemaValidation"
                     key="inspections.schema.validation.name"
                     groupKey="inspections.group.name"
                     enabledByDefault="true"
                     level="WARNING"
                     implementationClass="org.jetbrains.yaml.schema.YamlJsonSchemaHighlightingInspection"/>
    <localInspection language="yaml" bundle="messages.YAMLBundle"
                     shortName="YAMLSchemaDeprecation"
                     key="inspections.schema.deprecation.name"
                     groupKey="inspections.group.name"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     implementationClass="org.jetbrains.yaml.schema.YamlJsonSchemaDeprecationInspection"/>

    <psi.referenceContributor language="yaml" implementation="org.jetbrains.yaml.YAMLWebReferenceContributor"/>
    <psi.referenceContributor language="yaml" implementation="org.jetbrains.yaml.YAMLJsonSchemaIdReferenceContributor"/>
    <completion.contributor language="yaml" implementationClass="org.jetbrains.yaml.YAMLJsonSchemaInCommentCompletionContributor"/>

    <lang.floatingToolbar language="yaml" minimal="true"/>

    <pluginSuggestionProvider implementation="org.jetbrains.yaml.swagger.OpenApiSuggestionProvider"/>
    <intentionAction>
      <language>yaml</language>
      <className>org.jetbrains.yaml.intentions.YAMLAddOptionalPropertiesIntention</className>
      <bundleName>messages.YAMLBundle</bundleName>
      <categoryKey>yaml.intention.category.name</categoryKey>
    </intentionAction>
    <intentionAction>
      <language>yaml</language>
      <className>org.jetbrains.yaml.refactoring.inlineExpandConversion.YAMLExpandCollectionIntentionAction</className>
      <bundleName>messages.YAMLBundle</bundleName>
      <categoryKey>yaml.intention.category.name</categoryKey>
    </intentionAction>
    <intentionAction>
      <language>yaml</language>
      <className>org.jetbrains.yaml.refactoring.inlineExpandConversion.YAMLExpandAllCollectionsInsideIntentionAction</className>
      <bundleName>messages.YAMLBundle</bundleName>
      <categoryKey>yaml.intention.category.name</categoryKey>
    </intentionAction>
    <intentionAction>
      <language>yaml</language>
      <className>org.jetbrains.yaml.refactoring.inlineExpandConversion.YAMLInlineCollectionIntentionAction</className>
      <bundleName>messages.YAMLBundle</bundleName>
      <categoryKey>yaml.intention.category.name</categoryKey>
    </intentionAction>

    <fileTypeUsageSchemaDescriptor schema="kubernetes" implementationClass="org.jetbrains.yaml.K8sFileTypeUsageDescriptor"/>
    <fileTypeUsageSchemaDescriptor schema="openapi" implementationClass="org.jetbrains.yaml.OpenapiFileTypeUsageDescriptor"/>
    <fileTypeUsageSchemaDescriptor schema="swagger" implementationClass="org.jetbrains.yaml.SwaggerFileTypeUsageDescriptor"/>
    <fileTypeUsageSchemaDescriptor schema="docker-compose" implementationClass="org.jetbrains.yaml.DockerComposeFileTypeUsageDescriptor"/>
    <fileTypeUsageSchemaDescriptor schema="cloudformation" implementationClass="org.jetbrains.yaml.CloudFormationFileTypeUsageDescriptor"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij.json">
    <jsonLikePsiWalkerFactory implementation="org.jetbrains.yaml.schema.YamlJsonLikePsiWalkerFactory"/>
    <jsonSchemaEnabler implementation="org.jetbrains.yaml.schema.YamlJsonEnabler"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij.spellchecker">
    <support language="yaml" implementationClass="org.jetbrains.yaml.YAMLSpellcheckerStrategy"/>
  </extensions>

  <extensionPoints>
    <extensionPoint qualifiedName="com.intellij.yaml.tagRecogniser"
                    interface="org.jetbrains.yaml.psi.YamlTagRecogniser"
                    dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.yaml.customStructureViewFactory"
                    interface="org.jetbrains.yaml.structureView.YAMLCustomStructureViewFactory"
                    dynamic="true">
    </extensionPoint>
  </extensionPoints>
</idea-plugin>