// Copyright 2000-2021 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
package org.jetbrains.plugins.gradle.service.project

import org.jetbrains.plugins.gradle.importing.GradleSettingScriptBuilder.Companion.settingsScript
import org.jetbrains.plugins.gradle.importing.TestGradleBuildScriptBuilder.Companion.buildscript
import org.junit.Test

class GradleTasksIndicesTest : GradleTasksIndicesTestCase() {
  @Test
  fun `test task finding`() {
    createProjectSubFile("build.gradle", buildscript { withJavaPlugin() })
    createProjectSubFile("settings.gradle", settingsScript("saucy-griffin") {
      withModule("plucky-bigfoot")
      withModule("plucky-bigfoot:morose-megalodon")
      withBuild("affectionate-dragon")
      withBuild("../courageous-kobold")
    })
    createProjectSubFile("plucky-bigfoot/build.gradle", buildscript { withJavaPlugin() })
    createProjectSubFile("plucky-bigfoot/morose-megalodon/build.gradle", buildscript { withJavaPlugin() })
    createProjectSubFile("affectionate-dragon/build.gradle", buildscript { withJavaPlugin() })
    createProjectSubFile("affectionate-dragon/sulky-ogre/build.gradle", buildscript { withJavaPlugin() })
    createProjectSubFile("affectionate-dragon/settings.gradle", settingsScript("affectionate-dragon") { withModule("sulky-ogre") })
    createProjectSubFile("../courageous-kobold/build.gradle", buildscript { withJavaPlugin() })
    createProjectSubFile("../courageous-kobold/settings.gradle", settingsScript("courageous-kobold") {})
    importProject()

    findTasks(".", "test").assertTasks(":test", ":plucky-bigfoot:test", ":plucky-bigfoot:morose-megalodon:test")
    findTasks(".", ":test").assertTasks(":test")
    findTasks(".", "megalodon:test").assertTasks()
    findTasks(".", "morose-megalodon:test").assertTasks(":plucky-bigfoot:morose-megalodon:test")
    findTasks(".", ":morose-megalodon:test").assertTasks()
    findTasks(".", "plucky-bigfoot:morose-megalodon:test").assertTasks(":plucky-bigfoot:morose-megalodon:test")
    findTasks(".", ":plucky-bigfoot:morose-megalodon:test").assertTasks(":plucky-bigfoot:morose-megalodon:test")
    findTasks("plucky-bigfoot", "test").assertTasks(":plucky-bigfoot:test", ":plucky-bigfoot:morose-megalodon:test")
    findTasks("plucky-bigfoot", ":test").assertTasks(":plucky-bigfoot:test")
    findTasks("plucky-bigfoot", "megalodon:test").assertTasks()
    findTasks("plucky-bigfoot", "morose-megalodon:test").assertTasks(":plucky-bigfoot:morose-megalodon:test")
    findTasks("plucky-bigfoot", ":morose-megalodon:test").assertTasks(":plucky-bigfoot:morose-megalodon:test")
    findTasks("plucky-bigfoot", "plucky-bigfoot:morose-megalodon:test").assertTasks()
    findTasks("plucky-bigfoot", ":plucky-bigfoot:morose-megalodon:test").assertTasks()
    findTasks("plucky-bigfoot/morose-megalodon", "test").assertTasks(":plucky-bigfoot:morose-megalodon:test")
    findTasks("plucky-bigfoot/morose-megalodon", ":test").assertTasks(":plucky-bigfoot:morose-megalodon:test")
    findTasks("plucky-bigfoot/morose-megalodon", "megalodon:test").assertTasks()
    findTasks("plucky-bigfoot/morose-megalodon", "morose-megalodon:test").assertTasks()
    findTasks("plucky-bigfoot/morose-megalodon", ":morose-megalodon:test").assertTasks()
    findTasks("plucky-bigfoot/morose-megalodon", "plucky-bigfoot:morose-megalodon:test").assertTasks()
    findTasks("plucky-bigfoot/morose-megalodon", ":plucky-bigfoot:morose-megalodon:test").assertTasks()

    findTasks(".", "dragon:test").assertTasks()
    findTasks(".", ":dragon:test").assertTasks()
    findTasks(".", "affectionate-dragon:test").assertTasks()
    findTasks(".", ":affectionate-dragon:test").assertTasks(":affectionate-dragon:test")
    findTasks(".", "ogre:test").assertTasks()
    findTasks(".", ":ogre:test").assertTasks()
    findTasks(".", "sulky-ogre:test").assertTasks()
    findTasks(".", ":sulky-ogre:test").assertTasks()
    findTasks(".", "affectionate-dragon:sulky-ogre:test").assertTasks()
    findTasks(".", ":affectionate-dragon:sulky-ogre:test").assertTasks(":affectionate-dragon:sulky-ogre:test")
    findTasks("affectionate-dragon", "test").assertTasks(":affectionate-dragon:test", ":affectionate-dragon:sulky-ogre:test")
    findTasks("affectionate-dragon", ":test").assertTasks(":affectionate-dragon:test")
    findTasks("affectionate-dragon", "dragon:test").assertTasks()
    findTasks("affectionate-dragon", ":dragon:test").assertTasks()
    findTasks("affectionate-dragon", "affectionate-dragon:test").assertTasks()
    findTasks("affectionate-dragon", ":affectionate-dragon:test").assertTasks()
    findTasks("affectionate-dragon", "ogre:test").assertTasks()
    findTasks("affectionate-dragon", ":ogre:test").assertTasks()
    findTasks("affectionate-dragon", "sulky-ogre:test").assertTasks(":affectionate-dragon:sulky-ogre:test")
    findTasks("affectionate-dragon", ":sulky-ogre:test").assertTasks(":affectionate-dragon:sulky-ogre:test")
    findTasks("affectionate-dragon/sulky-ogre", "test").assertTasks(":affectionate-dragon:sulky-ogre:test")
    findTasks("affectionate-dragon/sulky-ogre", ":test").assertTasks(":affectionate-dragon:sulky-ogre:test")
    findTasks("affectionate-dragon/sulky-ogre", "ogre:test").assertTasks()
    findTasks("affectionate-dragon/sulky-ogre", ":ogre:test").assertTasks()
    findTasks("affectionate-dragon/sulky-ogre", "sulky-ogre:test").assertTasks()
    findTasks("affectionate-dragon/sulky-ogre", ":sulky-ogre:test").assertTasks()

    findTasks(".", "kobold:test").assertTasks()
    findTasks(".", ":kobold:test").assertTasks()
    findTasks(".", "courageous-kobold:test").assertTasks()
    findTasks(".", ":courageous-kobold:test").assertTasks(":courageous-kobold:test")
    findTasks("../courageous-kobold", "test").assertTasks(":courageous-kobold:test")
    findTasks("../courageous-kobold", ":test").assertTasks(":courageous-kobold:test")
    findTasks("../courageous-kobold", "kobold:test").assertTasks()
    findTasks("../courageous-kobold", ":kobold:test").assertTasks()
    findTasks("../courageous-kobold", "courageous-kobold:test").assertTasks()
    findTasks("../courageous-kobold", ":courageous-kobold:test").assertTasks()
  }
}