# suppress inspection "UnusedProperty" for whole file
## Language plugins
## used in org.jetbrains.plugins.gradle.documentation.GradleDocumentationProvider.findDoc
gradle.documentation.org.gradle.api.Project.apply.plugin.java.non-html=\
  Adds Java compilation, testing and bundling capabilities to a project.\
   It serves as the basis for many of the other Gradle plugins.
gradle.documentation.org.gradle.api.Project.apply.plugin.java=\
  <p>Adds Java compilation, testing and bundling capabilities to a project.\
   It serves as the basis for many of the other Gradle plugins. \
  See also <a class="xref" href="http://www.gradle.org/docs/current/userguide/tutorial_java_projects.html">Chapter 7, <i>Java Quickstart</i></a>.\
  </p>\
  <p>Automatically applies: java-base</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.groovy.non-html=\
  Adds support for building Groovy projects.
gradle.documentation.org.gradle.api.Project.apply.plugin.groovy=\
  <p>Adds support for building Groovy projects. \
  See also <a class="xref" href="http://www.gradle.org/docs/current/userguide/tutorial_groovy_projects.html">Chapter 9, <i>Groovy Quickstart</i></a>.</p>\
  <p>Automatically applies: java, groovy-base</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.scala.non-html=\
  Adds support for building Scala projects.
gradle.documentation.org.gradle.api.Project.apply.plugin.scala=\
  <p>Adds support for building Scala projects.</p>\
  <p>Automatically applies: java, scala-base</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.antlr.non-html=\
  Adds support for generating parsers using Antlr
gradle.documentation.org.gradle.api.Project.apply.plugin.antlr=\
  <p>Adds support for generating parsers using <a class="ulink" href="http://www.antlr.org/" target="_top">Antlr</a>.</p>\
  <p>Automatically applies: java</p>

## Integration plugins
gradle.documentation.org.gradle.api.Project.apply.plugin.application.non-html=\
  Adds tasks for running and bundling a Java project as a command-line application.
gradle.documentation.org.gradle.api.Project.apply.plugin.application=\
  <p>Adds tasks for running and bundling a Java project as a command-line application.</p>\
  <p>Automatically applies: java</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.ear.non-html=\
  Adds support for building J2EE applications.
gradle.documentation.org.gradle.api.Project.apply.plugin.ear=\
  <p>Adds support for building J2EE applications.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.jetty.non-html=\
  Deploys your web application to a Jetty web container embedded in the build.
gradle.documentation.org.gradle.api.Project.apply.plugin.jetty=\
  <p>Deploys your web application to a Jetty web container embedded in the build. \
  See also <a class="xref" href="http://www.gradle.org/docs/current/userguide/web_project_tutorial.html">Chapter 10, <i>Web Application Quickstart</i></a>.</p>\
  <p>Automatically applies: war</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.maven.non-html=\
  Adds support for publishing artifacts to Maven repositories.
gradle.documentation.org.gradle.api.Project.apply.plugin.maven=\
  <p>Adds support for publishing artifacts to Maven repositories.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.osgi.non-html=\
  Adds support for building OSGi bundles.
gradle.documentation.org.gradle.api.Project.apply.plugin.osgi=\
  <p>Adds support for building OSGi bundles.</p>\
  <p>Automatically applies: java-base</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.war.non-html=\
  Adds support for assembling web application WAR files.
gradle.documentation.org.gradle.api.Project.apply.plugin.war=\
  <p>Adds support for assembling web application WAR files. \
  See also <a class="xref" href="http://www.gradle.org/docs/current/userguide/web_project_tutorial.html">Chapter 10, <i>Web Application Quickstart</i></a>.</p>\
  <p>Automatically applies: java</p>

## Software development plugins
gradle.documentation.org.gradle.api.Project.apply.plugin.announce.non-html=\
  Publish messages to your favourite platforms, such as Twitter or Growl.
gradle.documentation.org.gradle.api.Project.apply.plugin.announce=\
  <p>Publish messages to your favourite platforms, such as Twitter or Growl.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.build-announcements.non-html=\
  Sends local announcements to your desktop about interesting events in the build lifecycle.
gradle.documentation.org.gradle.api.Project.apply.plugin.build-announcements=\
  <p>Sends local announcements to your desktop about interesting events in the build lifecycle.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.checkstyle.non-html=\
  Performs quality checks on your project's Java source files using Checkstyle and generates reports from these checks.
gradle.documentation.org.gradle.api.Project.apply.plugin.checkstyle=\
  <p>Performs quality checks on your project's Java source files using \
      <a class="ulink" href="http://checkstyle.sourceforge.net/index.html" target="_top">Checkstyle</a> \
      and generates reports from these checks.\
  </p>
gradle.documentation.org.gradle.api.Project.apply.plugin.codenarc.non-html=\
  Performs quality checks on your project's Groovy source files using CodeNarc and generates reports from these checks.
gradle.documentation.org.gradle.api.Project.apply.plugin.codenarc=\
  <p>Performs quality checks on your project's Groovy source files using \
      <a class="ulink" href="http://codenarc.sourceforge.net/index.html" target="_top">CodeNarc</a> \
      and generates reports from these checks.\
  </p>
gradle.documentation.org.gradle.api.Project.apply.plugin.eclipse.non-html=\
  Generates files that are used by Eclipse IDE, thus making \
      it possible to import the project into Eclipse.
gradle.documentation.org.gradle.api.Project.apply.plugin.eclipse=\
  <p>Generates files that are used by <a class="ulink" href="http://eclipse.org" target="_top">Eclipse IDE</a>, thus making \
      it possible to import the project into Eclipse. \
  See also <a class="xref" href="http://www.gradle.org/docs/current/userguide/tutorial_java_projects.html">Chapter 7, <i>Java Quickstart</i></a>.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.eclipse-wtp.non-html=\
  Does the same as the eclipse plugin plus generates eclipse WTP (Web Tools Platform) configuration files. \
  After importing to eclipse your war/ear projects should be configured to work with WTP.
gradle.documentation.org.gradle.api.Project.apply.plugin.eclipse-wtp=\
  <p>Does the same as the eclipse plugin plus generates eclipse WTP (Web Tools Platform) configuration files. \
      After importing to eclipse your war/ear projects should be configured to work with WTP.\
      See also <a class="xref" href="http://www.gradle.org/docs/current/userguide/tutorial_java_projects.html">Chapter 7, <i>Java Quickstart</i></a>. \
  </p>
gradle.documentation.org.gradle.api.Project.apply.plugin.findbugs.non-html=\
  Performs quality checks on your project's Java source files using FindBugs and generates reports from these checks.
gradle.documentation.org.gradle.api.Project.apply.plugin.findbugs=\
  <p>Performs quality checks on your project's Java source files using \
      <a class="ulink" href="http://findbugs.sourceforge.net" target="_top">FindBugs</a> \
      and generates reports from these checks.\
  </p>
gradle.documentation.org.gradle.api.Project.apply.plugin.idea.non-html=\
  Generates files and applies IDEA specific customizations that are used by Intellij IDEA IDE thus making it possible to import the project into IDEA.
gradle.documentation.org.gradle.api.Project.apply.plugin.idea=\
  <p>Generates files and applies IDEA specific customizations that are used by <a class="ulink" href="https://www.jetbrains.com/idea/index.html" target="_top">Intellij IDEA IDE</a>, \
      thus making it possible to import the project into IDEA.\
  </p>
gradle.documentation.org.gradle.api.Project.apply.plugin.jdepend.non-html=\
  Performs quality checks on your project's source files using JDepend and generates reports from these checks.
gradle.documentation.org.gradle.api.Project.apply.plugin.jdepend=\
  <p>Performs quality checks on your project's source files using \
      <a class="ulink" href="http://clarkware.com/software/JDepend.html" target="_top">JDepend</a> \
      and generates reports from these checks.\
  </p>
gradle.documentation.org.gradle.api.Project.apply.plugin.pmd.non-html=\
  Performs quality checks on your project's Java source files using PMD and generates reports from these checks.
gradle.documentation.org.gradle.api.Project.apply.plugin.pmd=\
  <p>Performs quality checks on your project's Java source files using \
      <a class="ulink" href="http://pmd.sourceforge.net" target="_top">PMD</a> \
      and generates reports from these checks.\
  </p>
gradle.documentation.org.gradle.api.Project.apply.plugin.project-report.non-html=\
  Generates reports containing useful information about your Gradle build.
gradle.documentation.org.gradle.api.Project.apply.plugin.project-report=\
  <p>Generates reports containing useful information about your Gradle build.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.signing.non-html=\
  Adds the ability to digitally sign built files and artifacts.
gradle.documentation.org.gradle.api.Project.apply.plugin.signing=\
  <p>Adds the ability to digitally sign built files and artifacts.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.sonar.non-html=\
  Provides integration with the Sonar  code quality platform. Superceeded by the sonar-runner plugin.
gradle.documentation.org.gradle.api.Project.apply.plugin.sonar=\
  <p>Provides integration with the \
    <a class="ulink" href="http://www.sonarsource.org" target="_top">Sonar</a> \
    code quality platform. Superceeded by the <a class="link" href="http://www.gradle.org/docs/current/userguide/sonar_runner_plugin.html"> \
  <code class="literal">sonar-runner</code></a> plugin.\
  </p>

gradle.documentation.groovy.initial.value.got.during.last.import=Initial value has been got during last import
gradle.documentation.groovy.gradle.property=Gradle Property: {0}


gradle.cmd.option.help=Shows the help message.
gradle.cmd.option.version=Print version info.
gradle.cmd.option.build.file=Specify the build file.
gradle.cmd.option.settings.file=Specify the settings file.

gradle.cmd.option.full.stacktrace=Print out the full (very verbose) stacktrace for all exceptions.
gradle.cmd.option.stacktrace=Print out the stacktrace for all exceptions.
gradle.cmd.option.scan=Creates a build scan. Gradle will emit a warning if the build scan plugin has not been applied.
gradle.cmd.option.no.scan=Disables the creation of a build scan.

gradle.cmd.option.build.cache=Enables the Gradle build cache. Gradle will try to reuse outputs from previous builds.
gradle.cmd.option.no.build.cache=Disables the Gradle build cache.
gradle.cmd.option.configuration.cache=Enables the configuration cache. Gradle will try to reuse the build configuration from previous builds.
gradle.cmd.option.no.configuration.cache=Disables the configuration cache.
gradle.cmd.option.configuration.cache.problems=Configures how the configuration cache handles problems (fail or warn). Defaults to fail.
gradle.cmd.option.configure.on.demand=Configure necessary projects only. Gradle will attempt to reduce configuration time for large multi-project builds.
gradle.cmd.option.no.configure.on.demand=Disables the use of configuration on demand.
gradle.cmd.option.max.workers=Configure the number of concurrent workers Gradle is allowed to use.
gradle.cmd.option.parallel=Build projects in parallel. Gradle will attempt to determine the optimal number of executor threads to use.
gradle.cmd.option.no.parallel=Disables parallel execution to build projects.
gradle.cmd.option.priority=Specifies the scheduling priority for the Gradle daemon and all processes launched by it. Values are 'normal' (default) or 'low'.
gradle.cmd.option.profile=Profile build execution time and generates a report in the <build_dir>/reports/profile directory.
gradle.cmd.option.watch.fs=Enables watching the file system for changes, allowing data about the file system to be re-used for the next build.
gradle.cmd.option.no.watch.fs=Disables watching the file system.

gradle.cmd.option.quiet=Log errors only.
gradle.cmd.option.warn=Set log level to warning.
gradle.cmd.option.info=Set log level to information.
gradle.cmd.option.debug=Log in debug mode (includes normal stacktrace).
gradle.cmd.option.console=Specifies which type of console output to generate. Values are 'plain', 'auto' (default), 'rich' or 'verbose'.
gradle.cmd.option.warning.mode=Specifies which mode of warnings to generate. Values are 'all', 'fail', 'summary'(default) or 'none'.

gradle.cmd.option.include.build=Include the specified build in the composite.
gradle.cmd.option.offline=Execute the build without accessing network resources.
gradle.cmd.option.refresh.dependencies=Refresh the state of dependencies.
gradle.cmd.option.dry.run=Run the builds with all task actions disabled.
gradle.cmd.option.write.locks=Persists dependency resolution for locked configurations, ignoring existing locking information if it exists.
gradle.cmd.option.update.locks=Perform a partial update of the dependency lock, letting passed in module notations change version.
gradle.cmd.option.no.rebuild=Do not rebuild project dependencies.

gradle.cmd.option.gradle.user.home=Specifies the gradle user home directory.
gradle.cmd.option.project.dir=Specifies the start directory for Gradle. Defaults to current directory.
gradle.cmd.option.project.cache.dir=Specify the project-specific cache directory. Defaults to .gradle in the root project directory.
gradle.cmd.option.system.prop=Set system property of the JVM (e.g. -Dmyprop=myvalue).
gradle.cmd.option.init.script=Specify an initialization script.
gradle.cmd.option.project.prop=Set project property for the build script (e.g. -Pmyprop=myvalue).

gradle.cmd.option.exclude.task=Specify a task to be excluded from execution.
gradle.cmd.option.rerun.tasks=Ignore previously cached task results.
gradle.cmd.option.continue=Continue task execution after a task failure.
gradle.cmd.option.continuous=Continuous Build allows you to automatically re-execute the requested tasks when task inputs change.

gradle.cmd.option.export.keys=Exports the public keys used for dependency verification.
gradle.cmd.option.refresh.keys=Refresh the public keys used for dependency verification.
gradle.cmd.option.dependency.verification=Configures the dependency verification mode (strict, lenient or off)
gradle.cmd.option.write.verification.metadata=Generates checksums for dependencies used in the project (comma-separated list).

gradle.cmd.option.daemon=Uses the Gradle Daemon to run the build. Starts the Daemon if not running.
gradle.cmd.option.no.daemon=Do not use the Gradle daemon to run the build. Useful occasionally if you have configured Gradle to always run with the daemon by default.
gradle.cmd.option.status=Shows status of running and recently stopped Gradle Daemon(s).
gradle.cmd.option.stop=Stops the Gradle Daemon if it is running.
gradle.cmd.option.foreground=Starts the Gradle Daemon in the foreground.