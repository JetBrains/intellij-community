action.description.new.line.0=New line ({0})
action.text.mark.as.nonnls=Mark as NonNls
action.text.unmark.as.nonnls=Unmark as NonNls
comment.if.the.resource.bundle.is.invalid.either.declare.it.as.an.object=If the resource bundle is invalid, either declare it as an object of the java.util.ResourceBundle class in the source code, or edit the internationalization template to point to the method of your custom resource bundle class.
dissociate.resource.bundle.quick.fix.name=Dissociate resource bundle
dissociate.resource.bundle.quick.fix.options.label=Additional language codes\:
error.hint.property.has.no.usages=Property has no usages
error.hint.property.has.non.method.usages=Property has non-method usages
i18n.quickfix.code.panel.resource.bundle.expression.label=Resource bundle &expression:
i18n.quickfix.code.panel.title=Java Code Info
i18n.quickfix.preview.panel.title=Preview
i18nize.dialog.error.jdk.message=Class 'java.util.ResourceBundle' cannot be found.\nPlease setup correct JDK.
i18nize.dialog.error.jdk.title=Class Not Found
i18nize.dialog.template.link.label=Edit I18n template
i18nize.error.message=You can only i18nize Java string literal or substring thereof.\nPlease point the caret inside Java string literal or select part of it.
i18nize.error.title=Cannot I18nize Selection
i18nize.jsp.error=Please select JSP text to I18nize.\nMake sure you have not selected any scriptlets, custom tags or other foreign languages elements.\nAlso, HTML tags inside selection must be balanced.
inconsistent.bundle.property.error=Inconsistent property ''{0}''. Must be defined in the parent file ''{1}''.
inconsistent.bundle.property.inconsistent.end=Inconsistent property value end ''{0}''
inconsistent.bundle.property.inconsistent.end.parent.end.from.check.symbols=Inconsistent property value end ''{0}'' but found ''{1}'' in ''{2}''
inconsistent.bundle.property.inconsistent.placeholders=Inconsistent count of placeholders: found {0} in ''{1}''
inconsistent.bundle.property.inherited.with.the.same.value=Property inherited from the ''{0}'' file with the same value
inconsistent.bundle.report.duplicate.properties.values=Report properties &overridden with the same value
inconsistent.bundle.report.inconsistent.properties=Report &inconsistent properties
inconsistent.bundle.report.inconsistent.properties.ends=Report properties with inconsistent &ends
inconsistent.bundle.report.inconsistent.properties.placeholders=Report properties with inconsistent &placeholders
inconsistent.bundle.report.missing.translations=Report &missing translations
inconsistent.bundle.untranslated.property.error=Untranslated property ''{0}''. Should be overridden in the ''{1}''.
inconsistent.resource.bundle.display.name=Inconsistent resource bundle
inline.property.confirmation=Inline property ''{0}'' with value ''{1}''?
inline.property.refactoring=Inline Property
inspection.duplicates.display.name=Duplicate string literal
inspection.duplicates.message=<html><body>Duplicate string literal found in<br>{0}</body></html>
inspection.duplicates.message.in.this.file=(in this file)
inspection.duplicates.message.more=... ({0} more)
inspection.duplicates.navigate.to.occurrences=Navigate to occurrences
inspection.duplicates.occurrences.view.title=Duplicates for ''{0}''
inspection.duplicates.option=&Min string length:
inspection.duplicates.option.report.propertykey.expressions=&Ignore @PropertyKey expressions
inspection.duplicates.replace.family.quickfix=Replace
inspection.duplicates.replace.quickfix=Replace with ''{0}''
inspection.error.dialog.title=Error
inspection.i18n.display.name=Hardcoded strings
inspection.i18n.expression.is.invalid.error.message=The I18nized Expression template is not a valid expression
inspection.i18n.message.general.with.value=Hardcoded string literal: {0}
inspection.i18n.message.non.localized.passed.to.localized=Reference to non-localized string is used where localized string is expected
inspection.i18n.option.ignore.assert=Ignore for assert statement arguments
inspection.i18n.option.ignore.assigned.to.constants=Ignore literals assigned to constants
inspection.i18n.option.ignore.comment.pattern=Ignore lines containing this comment (regular expression):
inspection.i18n.option.ignore.comment.title=Non-Nls Comment Pattern
inspection.i18n.option.ignore.string.pattern=Ignore lines whose content matches this regular expression:
inspection.i18n.option.ignore.string.title=Non-Nls String Pattern
inspection.i18n.option.ignore.enum=Ignore enum constants
inspection.i18n.option.ignore.for.exception.constructor.arguments=Ignore for exception constructor arguments:
inspection.i18n.option.ignore.for.junit.assert.arguments=Ignore for JUnit assert arguments
inspection.i18n.option.ignore.for.specified.exception.constructor.arguments=Ignore for Specified Exception Constructor Arguments
inspection.i18n.option.ignore.nls=Ignore if target is not annotated with @Nls
inspection.i18n.option.report.unannotated.refs=Report unannotated references
inspection.i18n.option.ignore.nonalphanumerics=Ignore literals which do not contain alphabetic characters
inspection.i18n.option.ignore.property.keys=Ignore literals which have value equal to existing property key
inspection.i18n.option.ignore.qualified.class.names=Ignore literals which have value equal to existing qualified class name
inspection.i18n.option.ignore.tostring=Ignore contents of toString() method
inspection.i18n.quickfix=I18nize hardcoded string literal
inspection.invalid.resource.bundle.reference=Invalid resource bundle reference ''{0}''
inspection.title.capitalization.mix.description=The string is used in both title and sentence capitalization contexts
inspection.title.capitalization.mismatch.description=The {0} capitalization is provided where {1} capitalization is required
inspection.title.capitalization.description=String ''{0}'' is not properly capitalized. It should have {1} capitalization
inspection.unresolved.property.key.reference.message=''{0}'' doesn''t appear to be a valid property key
inspection.unresolved.property.key.reference.name=Invalid property key
intention.family.annotate.capitalization.type=Annotate capitalization type
intention.text.edit.property.value=Edit property value
intention.text.suppress.with.0.comment=Suppress with ''{0}'' comment
introduce.constant.across.the.project=Introduce Constant Across the Project
progress.title.searching.for.duplicates.of.0=Searching for Duplicates of ''{0}''
property.file=Property file:
property.has.more.parameters.than.passed=Property ''{0}'' expected {1} {1, choice, 1#parameter|2#parameters}, passed {2}
quickfix.family.title.capitalization.fix=Properly capitalize
quickfix.i18n.concatentation=I18nize concatenation
quickfix.i18n.concatentation.error=String concatenation not found
quickfix.text.title.capitalization=Properly capitalize ''{0}''
rename.prefix.based.property.key.error.message=Could not rename property key ''{1}'' based on prefix ''{0}'' by name ''{2}'', change prefix first
resource.bundle.contains.locales.with.suspicious.locale.languages.desciptor=Resource bundle contains locales with suspicious locale languages
unused.message.format.parameter.display.name=Missing message format parameter
unused.message.format.parameter.problem.descriptor=Using parameter {0} without using parameter {1} in <code>#ref<code> #loc
intention.family.name.mark.as.nlssafe=Mark as @NlsSafe
capitalization.kind.title=title
capitalization.kind.sentence=sentence
value.column.name=Value
key.column.name=Key
command.name.edit.property.value=Edit Property Value
# suppress inspection "DevKitPropertiesQuotesValidation"
checkbox.fold.to.context=Fold '{0}', '{1}', ... placeholders to corresponding context expressions from Java/Kotlin code
inspection.dialog.title.capitalization.display.name=Incorrect string capitalization
inspection.suspicious.locales.languages.display.name=Suspicious resource bundle locale languages
inspection.non.basic.latin.character.display.name=Non-Basic Latin character
inspection.non.basic.latin.character.quickfix=Convert to Basic Latin
i18n.quickfix.preview.description=Extracts into the *.properties file the following string:
inspection.duplicates.navigate.to.occurrences.preview=Lists the {0} occurrences of {1} in the project.
inspection.duplicates.navigate.to.many.occurrences.preview=Lists {0}+ occurrences of {1} in the project.
