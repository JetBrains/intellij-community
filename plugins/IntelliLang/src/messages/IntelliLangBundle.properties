intelliLang.inject.language.action.text=Inject language or reference
intelliLang.inject.language.action.preview=Treat "<code>{0}</code>" as code of the chosen language or text of the reference.
intelliLang.uninject.language.action.text=Uninject language or reference
intelliLang.uninject.language.action.preview=Removes the language injection if it is configurable.
intelliLang.suggest.insert.annotation=Do you want to insert annotation?
intelliLang.suggest.insert.comment=Do you want to insert comment?
intelliLang.temporary.injected={0} was temporarily injected.
configurable.AdvancedSettingsUI.display.name=Advanced
configurable.InjectionsSettingsUI.display.name=Language Injections
settings.annotation.classes=Annotation Classes
settings.language.annotation.class=&Language annotation class
settings.pattern.annotation.class=&Pattern annotation class
settings.substitution.annotation.class=&Substitution annotation class
settings.runtime.pattern.validation=Runtime Pattern Validation
settings.no.runtime.instrumentation=&No runtime instrumentation
settings.instrument.with.assertions=&Instrument with assertions
settings.instrument.with.illegal.argument.exception=Instrument &with IllegalArgumentException
settings.performance=Performance
settings.do.not.analyze.anything=&Do not analyze anything (fast)
settings.analyze.references=Analyze &references
settings.look.for.variable.assignments=Look for &variable assignments
settings.use.dataflow.analysis=&Use dataflow analysis (slow)
settings.convert.undefined.operands.to.text=Convert undefined operands to &text in concatenations
settings.add.language.annotation.or.comment=Add @Language annotation or comment if needed
action.XmlLanguageInjectionSupport.Anonymous.xml.tag.injection=XML Tag Injection
action.XmlLanguageInjectionSupport.Anonymous.xml.attribute.injection=XML Attribute Injection
action.AnActionButton.text.duplicate=Duplicate
action.AnActionButton.description.duplicate=Duplicate
action.AnActionButton.text.enable.selected.injections=Enable Selected Injections
action.AnActionButton.description.enable.selected.injections=Enable Selected Injections
action.AnActionButton.text.disable.selected.injections=Disable Selected Injections
action.AnActionButton.description.disable.selected.injections=Disable Selected Injections
action.AnActionButton.text.move.to.ide.scope=Move to IDE Scope
action.AnActionButton.text.import=Import
action.AnActionButton.description.import=Import
action.AnActionButton.text.export=Export
action.AnActionButton.description.export=Export
inspections.language.injection.group.name=Language injection
inspections.pattern.validation.group.name=Pattern validation
inspection.pattern.validator.description=Unsubstituted expression
flag.non.compile.time.constant.expressions=Flag non compile-time constant expressions
inspection.unknown.language.ID.description=Unknown language ''{0}''
inspection.pattern.overridden.by.non.annotated.method.description=Non-annotated Method overrides @Pattern Method
java.parameter=Java Parameter
inspection.language.problem.description=Language problem: Found non-annotated reference where ''{0}'' is expected
inspection.language.mismatch.description=Language mismatch: Expected ''{0}'', got ''{1}''
inspection.injected.references.display.name=Injected references
inspection.unknown.language.display.name=Unknown Language ID
inspection.language.mismatch.display.name=Language mismatch
inspection.injection.not.applicable.display.name=Injection Annotation not applicable
inspection.pattern.validation.display.name=Validate annotated patterns
inspection.pattern.not.applicable.display.name=Pattern Annotation not applicable
inspection.pattern.overridden.by.non.annotated.method.display.name=Non-annotated Method overrides @Pattern Method
inspection.message.pattern.annotation.only.applicable.to.elements.type.string=Pattern Annotation is only applicable to elements of type String
inspection.message.language.injection.only.applicable.to.elements.type.string=Language Injection is only applicable to elements of type String
inspection.message.expression.does.not.match.pattern=Expression ''{0}'' doesn''t match ''{1}'' pattern: {2}
inspection.message.expression.does.not.match.pattern2=Expression ''{0}'' doesn''t match pattern: {1}
flag.usages.of.non.annotated.elements=Report in implied language context
flag.usages.of.non.annotated.elements.description=Flags usages of non-annotated elements where the usage context implies a certain language
intention.family.name.edit.injection.settings=Edit injection settings
dialog.title.select.class=Select Class
dialog.title.select.annotation.class=Select Annotation Class
dialog.title.import.failed=Import Failed
dialog.title.import=Import
dialog.message.no.new.entries.have.been.imported=No new entries have been imported
dialog.title.import.successful=Import Successful
dialog.message.one.entry.has.been.successfully.imported=One entry has been successfully imported
dialog.message.0.entries.have.been.successfully.imported={0} entries have been successfully imported
dialog.title.nothing.to.import=Nothing to Import
dialog.message.the.selected.file=The selected file does not contain any importable configuration.
dialog.file.chooser.title.import.configuration=Import Configuration
dialog.file.chooser.description.please.select.the.configuration.file=Please select the configuration file (usually named IntelliLang.xml) to import.
column.info.scope=Scope
column.info.language=Language
column.info.name=Name
label.text.no.injections.configured=no injections configured
label.text.0.injection.1.2.of.3.place.4.enabled={0} {0,choice,0#injections|1#injection|2#injections} ({1} of {2} {2,choice,0#places|1#place|2#places} enabled)
dialog.title.export.failed=Export Failed
dialog.title.export.selected.injections.to.file=Export Selected Injections to File...
label.text.move.to.project.scope=Move to Project Scope
label.text.move.to.ide.scope=Move to IDE Scope
table.empty.text.no.injections.configured2=No injections configured
annotation.message.the.pattern=The pattern should contain exactly one capturing group
command.name.language.injection.configuration.update=Language Injection Configuration Update
dialog.title.unable.to.save=Unable to Save
action.text.generic.0=Generic {0}
reference.injection.display.name.file.reference=File Reference
new.language.name.injection=New {0} Injection
language.injection.settings.title=Language Injection Settings
intention.name.language.injection.settings=Language injection settings
method.param.injection.unnamed.placeholder=<unnamed>

# UI Form files
advanced.panel.xpath.condition=&XPath condition:
advanced.panel.tooltip.regular.expression.html=<html>Enter a regular expression that selects the parts of the tag's or attribute's value the language should be injected into.<br>The pattern should contain exactly one capturing group.</html>
advanced.panel.tooltip.xpath.expression.html=<html>Enter an XPath expression that the tag/attribute must match additionally to the name-condition specified above.<br>This requires the XPathView plugin to be installed</html>
advanced.panel.title=Advanced
language.label.prefix=&Prefix:
language.label.suffix=&Suffix:
language.title=Language
language.label.id=&ID:
checkbox.single.file=&Single file
label.value.pattern=&Value pattern:
tooltip.regular.expression.html=<html>Enter a regular expression that selects the parts of the tag's or attribute's value the language should be injected into.<br>The pattern should contain exactly one capturing group.</html>
advanced.xml.panel.title=Advanced
base.injection.panel.label.name=&Name:
base.injection.panel.title=Places Patterns
method.parameter.panel.class.methods=Class Methods
tag.panel.local.name=&Local name:
tag.panel.namespace=&Namespace:
tag.panel.sub.tags=Sub-&tags
tag.panel.title=XML Tag
xml.attribute.panel.label.name=&Name:
xml.attribute.panel.label.local.name=L&ocal name:
xml.attribute.panel.label.namespace=Na&mespace:
xml.attribute.panel.tooltip.regular.expression=Regular expression to match the attribute name, e.g. "on.*"
xml.attribute.panel.title=XML Attribute
xml.tag.panel.label.name=&Name:
progress.looking.for=Looking for ''{0}''