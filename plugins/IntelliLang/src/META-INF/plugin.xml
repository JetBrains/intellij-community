<idea-plugin>
  <name>IntelliLang</name>
  <id>org.intellij.intelliLang</id>
  <category>Other Tools</category>
  <vendor>JetBrains</vendor>
  <description>
      <![CDATA[
      Enables user configurable language injection support (originally developed by Sascha Weinreuter sascha.weinreuter@cit.de)
        The following features are available:
        <ul>
        <li>Language injection</li>
        <li>Pattern validation</li>
        <li>Regular expression support</li>
        <li>Language Injections page in the Settings/Preferences dialog.</li>
        <li>Ability to edit injected code in the special scratch-pad editor.</l>
        </ul>
      ]]>
   </description>

  <depends optional="true" config-file="intellilang-xpath-support.xml">XPathView</depends>
  <depends optional="true" config-file="intellilang-java-support.xml">com.intellij.modules.java</depends>
  <depends optional="true" config-file="intellilang-xml-support.xml">com.intellij.modules.xml</depends>

  <extensionPoints>
    <extensionPoint name="languageSupport" interface="org.intellij.plugins.intelliLang.inject.LanguageInjectionSupport" dynamic="true"/>
    <extensionPoint name="injectionConfig" beanClass="org.intellij.plugins.intelliLang.inject.LanguageInjectionConfigBean" dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <intentionAction>
      <className>org.intellij.plugins.intelliLang.inject.InjectLanguageAction</className>
      <category>Language injection</category>
    </intentionAction>
    <intentionAction>
      <className>org.intellij.plugins.intelliLang.inject.UnInjectLanguageAction</className>
      <category>Language injection</category>
    </intentionAction>
    <intentionAction>
      <className>org.intellij.plugins.intelliLang.inject.EditInjectionSettingsAction</className>
      <category>Language injection</category>
    </intentionAction>

    <highlightErrorFilter implementation="org.intellij.plugins.intelliLang.inject.FrankensteinErrorFilter"/>
    <daemon.highlightInfoFilter implementation="org.intellij.plugins.intelliLang.inject.FrankensteinErrorFilter"/>

    <projectConfigurable groupId="editor" bundle="messages.IntelliLangBundle" key="configurable.InjectionsSettingsUI.display.name"
                         dynamic="true" id="IntelliLang.Configuration" instance="org.intellij.plugins.intelliLang.InjectionsSettingsUI"
                         nonDefaultProject="true"/>

    <multiHostInjector id="TemporaryPlacesInjector" implementation="org.intellij.plugins.intelliLang.inject.TemporaryPlacesInjector" order="first"/>
    <multiHostInjector id ="CommentLanguageInjector" implementation="org.intellij.plugins.intelliLang.inject.CommentLanguageInjector" order="after TemporaryPlacesInjector"/>
    <multiHostInjector implementation="org.intellij.plugins.intelliLang.inject.DefaultLanguageInjector" order="last"/>

    <applicationService serviceInterface="org.intellij.plugins.intelliLang.Configuration"
                    serviceImplementation="org.intellij.plugins.intelliLang.Configuration$App"/>
    <projectService serviceInterface="org.intellij.plugins.intelliLang.Configuration"
                    serviceImplementation="org.intellij.plugins.intelliLang.Configuration$Prj"/>
    <compileServer.plugin classpath="intellilang-jps-plugin.jar"/>

    <psi.referenceContributor implementation="org.intellij.plugins.intelliLang.references.InjectedReferencesContributor"/>
    <referenceInjector implementation="org.intellij.plugins.intelliLang.references.FileReferenceInjector"/>
    <localInspection implementationClass="org.intellij.plugins.intelliLang.references.InjectedReferencesInspection"
                     enabledByDefault="true" level="ERROR"
                     displayName="Injected references" groupBundle="messages.InspectionsBundle" groupKey="inspection.general.tools.group.name"/>
  </extensions>

</idea-plugin>
