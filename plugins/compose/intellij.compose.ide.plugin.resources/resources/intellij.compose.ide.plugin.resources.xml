<idea-plugin package="com.intellij.compose.ide.plugin.resources">
  <dependencies>
    <plugin id="com.intellij.gradle"/>
    <module name="intellij.compose.ide.plugin.shared"/>
    <module name="intellij.compose.ide.plugin.gradleTooling.rt"/>
    <module name="kotlin.gradle.gradle-tooling"/>
  </dependencies>
  <extensions defaultExtensionNs="com.intellij">
    <gotoDeclarationHandler implementation="com.intellij.compose.ide.plugin.resources.ComposeResourcesGotoDeclarationHandler"/>
    <renamePsiElementProcessor id="ComposeResources"
                               implementation="com.intellij.compose.ide.plugin.resources.rename.ComposeResourcesRenameProcessor"
                               order="first, before KotlinProperty"/>
    <renamePsiElementProcessor id="ComposeResourcesXml"
                               implementation="com.intellij.compose.ide.plugin.resources.rename.ComposeResourcesXmlRenameProcessor"
                               order="first, before ResourceReference"/>
    <postStartupActivity
      implementation="com.intellij.compose.ide.plugin.resources.ComposeResourcesGenerationService$ComposeResourcesWatcherActivity"/>
    <externalProjectDataService implementation="com.intellij.compose.ide.plugin.resources.ComposeResourcesDataService"/>
    <usageTypeProvider implementation="com.intellij.compose.ide.plugin.resources.ComposeResourcesUsageTypeProvider" order="first"/>
  </extensions>

  <projectListeners>
    <listener class="com.intellij.compose.ide.plugin.resources.ComposeResourcesManager$ComposeResourcesProjectDataImportListener"
              topic="com.intellij.openapi.externalSystem.service.project.manage.ProjectDataImportListener"/>
  </projectListeners>

  <extensions defaultExtensionNs="org.jetbrains.plugins.gradle">
    <projectResolve implementation="com.intellij.compose.ide.plugin.resources.ComposeResourcesProjectResolver"/>
  </extensions>
</idea-plugin>