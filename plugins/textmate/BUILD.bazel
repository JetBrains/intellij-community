### auto-generated section `build intellij.textmate` start
load("@rules_jvm//:jvm.bzl", "jvm_resources")
load("@rules_jvm//:rules.bzl", "jvm_library")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_test")

jvm_resources(
  name = "textmate_resources",
  files = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "textmate",
  module_name = "intellij.textmate",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True, exclude = ["**/module-info.java"]),
  javac_opts = "@rules_jvm//:j17",
  kotlinc_opts = "@rules_jvm//:k17",
  plugins = ["@lib//:serialization_plugin"],
  deps = [
    "//platform/lang-impl",
    "//spellchecker",
    "//platform/diff-api:diff",
    "//plugins/textmate/core",
    "@lib//:fastutil-min",
    "//platform/core-ui",
    "@lib//:jackson",
    "@lib//:jackson-databind",
    "@lib//:kotlinx-serialization-core",
    "//platform/code-style-impl:codeStyle-impl",
  ],
  exports = ["//plugins/textmate/core"],
  runtime_deps = [":textmate_resources"]
)

kt_jvm_test(
  name = "textmate_test",
  visibility = ["//visibility:public"],
  srcs = glob(["tests/**/*.kt", "tests/**/*.java"], allow_empty = True, exclude = ["**/module-info.java"]),
  javac_opts = "@rules_jvm//:j17",
  kotlinc_opts = "@rules_jvm//:k17",
  associates = [":textmate"],
  plugins = ["@lib//:serialization_plugin"],
  deps = [
    "//platform/lang-impl",
    "//platform/testFramework",
    "//platform/testFramework:testFramework_test",
    "//spellchecker",
    "//platform/diff-api:diff",
    "//plugins/textmate/core",
    "@lib//:fastutil-min",
    "//platform/core-ui",
    "@lib//:jackson",
    "@lib//:jackson-databind",
    "@lib//:kotlinx-serialization-core",
    "//platform/code-style-impl:codeStyle-impl",
    "//tools/intellij.tools.ide.metrics.benchmark:ide-metrics-benchmark",
    "//tools/intellij.tools.ide.metrics.benchmark:ide-metrics-benchmark_test",
  ],
  runtime_deps = [":textmate_resources"]
)
### auto-generated section `build intellij.textmate` end