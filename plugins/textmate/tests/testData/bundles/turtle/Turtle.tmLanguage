<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ttl</string>
		<string>turtle</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~T</string>
	<key>name</key>
	<string>Turtle</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#turtleDoc</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>ANON</key>
		<dict>
			<key>match</key>
			<string>\[[\u20\u9\uD\uA]*\]</string>
			<key>name</key>
			<string>meta.spec.ANON.turtle</string>
		</dict>
		<key>BLANK_NODE_LABEL</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.BLANK_NODE_LABEL.turtle</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.BLANK_NODE_LABEL.turtle</string>
				</dict>
			</dict>
			<key>match</key>
			<string></string>
			<key>name</key>
			<string>meta.spec.BLANK_NODE_LABEL.turtle</string>
		</dict>
		<key>BlankNode</key>
		<dict>
			<key>name</key>
			<string>meta.spec.BlankNode.turtle</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#BLANK_NODE_LABEL</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ANON</string>
				</dict>
			</array>
		</dict>
		<key>IRIREF</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.begin.turtle</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.end.turtle</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x) (\&lt;) (?:[^\x00-\x20\&lt;\&gt;\\\"\{\}\|\^`] | (?:\\u[0-9A-Fa-f]{4}|\\U[0-9A-Fa-f]{8}))* (\&gt;)</string>
			<key>name</key>
			<string>entity.name.type.IRIREF.turtle</string>
		</dict>
		<key>PNAME_LN</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>PNAME_NS</key>
				<dict>
					<key>name</key>
					<string>variable.other.PNAME_NS.turtle</string>
				</dict>
				<key>PN_LOCAL</key>
				<dict>
					<key>name</key>
					<string>support.variable.PN_LOCAL.turtle</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
				(?&lt;PNAME_NS&gt; (?: (?: [\p{L}\p{M}] (?:(?:[\p{L}\p{M}_.\-0-9\u00B7\u0300-\u036F\u203F-\u2040])* [\p{L}\p{M}_\-0-9\u00B7\u0300-\u036F\u203F-\u2040] )? )? | _) \: )
				(?&lt;PN_LOCAL&gt;
					(?# Should I include \p{M}?)
					(?:
						(?: [\p{L}_] | [:0-9] | %[0-9A-Fa-f]{2} | \\[_~\-!$&amp;'\(\)*+=/?#@%.,;] )
						(?:
							(?: [\p{L}_\-0-9\u00B7\u0300-\u036F\u203F-\u2040] | [:.] | \%[0-9A-Fa-f]{2} | \\ [_~\-!$&amp;'\(\)*+=/?#@%.,;] )*
							(?: [\p{L}_\-0-9\u00B7\u0300-\u036F\u203F-\u2040] | : | \%[0-9A-Fa-f]{2} | \\ [_~\-!$&amp;'\(\)*+=/?#@%.,;] )
						)
					)?
				)
			</string>
			<key>name</key>
			<string>meta.spec.PNAME_LN.turtle</string>
		</dict>
		<key>PNAME_NS</key>
		<dict>
			<key>match</key>
			<string>(?x)((?&lt;=\s|^|_)(?:[\p{L}\p{M}] (?:(?:[\p{L}\p{M}_.\-0-9\u00B7\u0300-\u036F\u203F-\u2040])* [\p{L}\p{M}_\-0-9\u00B7\u0300-\u036F\u203F-\u2040] )? )? : )</string>
			<key>name</key>
			<string>variable.other.PNAME_NS.turtle</string>
		</dict>
		<key>PN_LOCAL</key>
		<dict>
			<key>match</key>
			<string>(?x)(
				(?: [\p{L}\p{M}] | [:0-9] | %[0-9A-Fa-f]{2} | \\[_~\-!$&amp;'\(\)*+=/?#@%.,;] )
				(?: 
					(?:[\p{L}\p{M}_\-0-9\u00B7\u0300-\u036F\u203F-\u2040] | [:.] | %[0-9A-Fa-f]{2} | \\[_~\-!$&amp;'\(\)*+=/?#@%.,;] )* 
					(?:[\p{L}\p{M}_\-0-9\u00B7\u0300-\u036F\u203F-\u2040] | : | %[0-9A-Fa-f]{2} | \\[_~\-!$&amp;'\(\)*+=/?#@%.,;] )
				)				
			)?</string>
			<key>name</key>
			<string>support.variable.PN_LOCAL.turtle</string>
		</dict>
		<key>PrefixedName</key>
		<dict>
			<key>name</key>
			<string>meta.spec.PrefixedName.turtle</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#PNAME_LN</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#PNAME_NS</string>
				</dict>
			</array>
		</dict>
		<key>blankNodePropertyList</key>
		<dict>
			<key>begin</key>
			<string>\b(\[)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.blankNodePropertyList.turtle</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(\])(?=\b|\s|[.;,])</string>
			<key>name</key>
			<string>meta.spec.blankNodePropertyList.turtle</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>((?&lt;=\s)[.;,](?=\b))</string>
					<key>name</key>
					<string>punctuation.terminator.stmt.turtle</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blankNodePropertyList</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#iri</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#BlankNode</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#collection</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=[ ])(a)(?=[ ])</string>
					<key>name</key>
					<string>keyword.other.typeOf.turtle</string>
				</dict>
			</array>
		</dict>
		<key>collection</key>
		<dict>
			<key>begin</key>
			<string>(\b\(\b)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.collection.turtle</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>TODO: Make match patterns more stable</string>
			<key>end</key>
			<string>(\b\)\b)</string>
			<key>name</key>
			<string>meta.spec.collection.turtle</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#iri</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#BlankNode</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#collection</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=[ ])(a)(?=[ ])</string>
					<key>name</key>
					<string>keyword.other.typeOf.turtle</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blankNodePropertyList</string>
				</dict>
			</array>
		</dict>
		<key>directive</key>
		<dict>
			<key>begin</key>
			<string>(?i)(^(?=@prefix|@base|PREFIX|BASE))</string>
			<key>end</key>
			<string>($)</string>
			<key>name</key>
			<string>meta.spec.directive.turtle</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^(@prefix)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.prefix.turtle</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\.?)$</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.directive.turtle</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.spec.prefixID.turtle</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#IRIREF</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#PNAME_NS</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(@base)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.base.turtle</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\.?)$</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.directive.turtle</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.spec.base.turtle</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#IRIREF</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(?i)(PREFIX)(?=\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.sparqlPrefix.turtle</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.spec.sparqlPrefix.turtle</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#IRIREF</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#PNAME_NS</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(?i)(BASE)(?=\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.sparqlBase.turtle</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.spec.sparqlBase.turtle</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#IRIREF</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>iri</key>
		<dict>
			<key>name</key>
			<string>meta.spec.iri.turtle</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#IRIREF</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#PrefixedName</string>
				</dict>
			</array>
		</dict>
		<key>literal</key>
		<dict>
			<key>name</key>
			<string>meta.spec.literal.turtle</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)
						(?&lt;=\s)[+-]?						
						( (?: \d+?\.?\d*[eE][+-]?\d+) | \d*\.\d+ | \d+)
						(?=[ ]*[,.;]?)
					</string>
					<key>name</key>
					<string>constant.numeric.turtle</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\s)(true|false)(?=[ ]*[,.;]?)</string>
					<key>name</key>
					<string>constant.language.boolean.turtle</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.spec.RDFLiteral.turtle</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#literal_triple</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#literal_double</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#literal_single</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>literal_double</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.turtle</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.turtle</string>
				</dict>
				<key>dt</key>
				<dict>
					<key>name</key>
					<string>storage.type.datatype.turtle</string>
				</dict>
				<key>lang</key>
				<dict>
					<key>name</key>
					<string>constant.language.language_tag.turtle</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
				(")[^"\\]*(?:\\.[^"\\]*)*(")
				(?&lt;lang&gt;@(?:[a-z]{2}(?:-[a-z0-9]{2})*)?)?
				(?&lt;dt&gt;\^\^\w*:\w*|\&lt;[^\&gt;]+\&gt;)?
			</string>
			<key>name</key>
			<string>string.quoted.double.turtle</string>
		</dict>
		<key>literal_single</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.turtle</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.turtle</string>
				</dict>
				<key>dt</key>
				<dict>
					<key>name</key>
					<string>storage.type.datatype.turtle</string>
				</dict>
				<key>lang</key>
				<dict>
					<key>name</key>
					<string>constant.language.language_tag.turtle</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
				(')[^'\\]*(?:\.[^'\\]*)*(')
				(?&lt;lang&gt;@(?:[a-z]{2}(?:-[a-z0-9]{2})*)?)?
				(?&lt;dt&gt;\^\^\w*:\w*|\&lt;[^\&gt;]+\&gt;)?
			</string>
			<key>name</key>
			<string>string.quoted.single.turtle</string>
		</dict>
		<key>literal_triple</key>
		<dict>
			<key>begin</key>
			<string>(['"]{3})</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.turtle</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?x)
				(\1)
				(?&lt;lang&gt;@(?:[a-z]{2}(?:-[a-z0-9]{2})*)?)?
				(?&lt;dt&gt;\^\^\w*:\w*|\&lt;[^\&gt;]+\&gt;)?
				(?=[ ]*[.;,]?)
			</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.turtle</string>
				</dict>
				<key>dt</key>
				<dict>
					<key>name</key>
					<string>storage.type.datatype.turtle</string>
				</dict>
				<key>lang</key>
				<dict>
					<key>name</key>
					<string>constant.language.language_tag.turtle</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.triple.turtle</string>
		</dict>
		<key>sparqlFilterFns</key>
		<dict>
			<key>match</key>
			<string>(?x)(
				(?# Builtin callables )
				STR|LANG|LANGMATCHES|DATATYPE|BOUND|IRI|URI|BNODE|RAND|ABS|CEIL|FLOOR|ROUND|CONCAT|STRLEN|UCASE|LCASE|ENCODE_FOR_URI|CONTAINS|STRSTARTS|STRENDS|STRBEFORE|STRAFTER|YEAR|MONTH|DAY|HOURS|MINUTES|SECONDS|TIMEZONE|TZ|NOW|UUID|STRUUID|MD5|SHA1|SHA256|SHA384|SHA512|COALESCE|IF|STRLANG|STRDT|sameTerm|isIRI|isURI|isBLANK|isLITERAL|isNUMERIC|COUNT|SUM|MIN|MAX|AVG|SAMPLE|GROUP_CONCAT|
				BOUND|COALESCE|NOT EXISTS|EXISTS|REGEX|SUBSTR|REPLACE
			)</string>
			<key>name</key>
			<string>support.function.sparql.turtle</string>
		</dict>
		<key>sparqlKeywords</key>
		<dict>
			<key>match</key>
			<string>(?x)(
					(?# SPARQL )
					SELECT|ASK|CONSTRUCT|DESCRIBE|FROM[ ]+NAMED|FROM|WHERE|GRAPH|
					DISTINCT|REDUCED|AS|GROUP|BY|ASC|DESC|LIMIT|
					UNION|FILTER|HAVING|VALUES|
					OPTIONAL|SERVICE|			 
					(?# SPARUL )					
					ADD|MOVE|COPY|
					INSERT[ ]+DATA|INSERT|
					DELETE[ ]+DATA|DELETE|
					LOAD[ ]+SILENT|LOAD|
					INTO[ ]+GRAPH|
					CLEAR[ ]+SILENT[ ]+GRAPH|[ ]+GRAPH|
					CLEAR[ ]+SILENT[ ]+DEFAULT|CLEAR[ ]+DEFAULT|
					CLEAR[ ]+SILENT[ ]+NAMED|CLEAR[ ]+NAMED|
					CLEAR[ ]+SILENT[ ]+ALL|CLEAR[ ]+ALL|
					CREATE[ ]+SILENT[ ]+GRAPH|CREATE[ ]+GRAPH|
					DROP[ ]+SILENT[ ]+GRAPH|DROP[ ]+GRAPH|
					DROP[ ]+SILENT[ ]+DEFAULT|DROP[ ]+DEFAULT|
					DROP[ ]+SILENT[ ]+NAMED|DROP[ ]+NAMED|
					DROP[ ]+SILENT[ ]+ALL|DROP[ ]+ALL|
					WITH|USING
				)</string>
			<key>name</key>
			<string>keyword.control.sparql.turtle</string>
		</dict>
		<key>sparqlLangConsts</key>
		<dict>
			<key>match</key>
			<string>(true|false)</string>
			<key>name</key>
			<string>constant.language.sparql.turtle</string>
		</dict>
		<key>triples</key>
		<dict>
			<key>begin</key>
			<string>(?i)^(?!@|\#|PREFIX|BASE)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.spec.triples.turtle</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([.;,]?)$</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.triple.turtle</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.spec.triples.turtle</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.turtle</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Allow inline comments</string>
					<key>match</key>
					<string>(#.+$)</string>
					<key>name</key>
					<string>comment.line.number-sign.turtle</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Trying to eat up terminators before anything else (seems to work)</string>
					<key>match</key>
					<string>[.;,](?=\s|\b)</string>
					<key>name</key>
					<string>punctuation.terminator.stmt.turtle</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Argh!</string>
					<key>match</key>
					<string>(\?\w+|\*)</string>
					<key>name</key>
					<string>constant.variable.sparql.turtle</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sparqlKeywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sparqlFilterFns</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sparqlLangConsts</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blankNodePropertyList</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#iri</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#BlankNode</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#collection</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(a)(?=[ ])</string>
					<key>name</key>
					<string>keyword.other.typeOf.turtle</string>
				</dict>
			</array>
		</dict>
		<key>turtleDoc</key>
		<dict>
			<key>begin</key>
			<string>^</string>
			<key>end</key>
			<string>\z</string>
			<key>name</key>
			<string>meta.spec.turtleDoc.turtle</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.turtle</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Allow comment lines</string>
					<key>match</key>
					<string>^(#).+$</string>
					<key>name</key>
					<string>comment.line.number-sign.turtle</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sparqlKeywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sparqlFilterFns</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sparqlLangConsts</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Argh!</string>
					<key>match</key>
					<string>(\?\w+|\*)</string>
					<key>name</key>
					<string>constant.variable.sparql.turtle</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#triples</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.turtle</string>
	<key>uuid</key>
	<string>3EB8C7E3-67FD-41FF-A257-6466443C6503</string>
</dict>
</plist>
