account.not.unique=Account {0} already exists
account.token.invalid=Invalid access token
account.token.missing=Missing access token
title.merge.requests=Merge Requests
view.merge.requests.button=View Merge Requests

# Merge request list
merge.request.list.empty.state.clear.filters=Clear filters
merge.request.list.empty.state.loading=Loading\u2026
merge.request.list.empty.state.matching.nothing.with.filters=No merge requests matching filters.
merge.request.list.empty.state.matching.nothing=No merge requests in {0}

merge.request.list.error=Failed to load merge requests.

merge.request.list.filter.category.assignee=Assignee
merge.request.list.filter.category.author=Author
merge.request.list.filter.category.label=Label
merge.request.list.filter.category.reviewer=Reviewer
merge.request.list.filter.category.state=State
merge.request.list.filter.quick.closed=Closed
merge.request.list.filter.quick.me.assignee=Assigned to me
merge.request.list.filter.quick.me.author=Includes my changes
merge.request.list.filter.quick.me.reviewer=Needs my review
merge.request.list.filter.quick.open=Open
merge.request.list.filter.state.closed=Closed
merge.request.list.filter.state.merged=Merged
merge.request.list.filter.state.open=Open

merge.request.list.renderer.merge.conflict.tooltip=Merge request cannot be merged
merge.request.list.renderer.state.closed=CLOSED
merge.request.list.renderer.state.draft=DRAFT
merge.request.list.renderer.state.merged=MERGED
merge.request.list.renderer.user.assignees={0, choice, 1#Assignee|2#Assignees}
merge.request.list.renderer.user.reviewers={0, choice, 1#Reviewer|2#Reviewers}