#module type
module.title=IntelliJ Platform Plugin
module.description=Plugin modules are used for developing plugins for <b>IntelliJ Platform</b>-based IDEs.<br>\
  They provide <b>IntelliJ Platform Plugin SDK</b> and <b>Run Configuration</b> for running and debugging plugins inside an IDE.
plugin.descriptor=IntelliJ Platform Plugin Descriptor

#Module Editor - Deployment
deployment.title=Plugin Deployment
deployment.cleanup=Clean up {0} directory
deployment.directory.location=Select {0} Directory Location
deployment.view.select=Select {0}
manifest.settings=Manifest Settings
manifest.selection=Selected {0} will be included in resulting distribution
manifest.use.user.defined=Use user manifest:
deployment.view.delete=Delete {0}?
deployment.view.meta-inf.label=Path to {0}
suggest.to.delete=Do you want to delete ''{0}''?
vm.parameters=&VM Options
program.parameters=&Program Arguments

#Prepare for deployment action
select.plugin.modules.title=Select modules
select.plugin.modules.description=Select modules to be prepared for deployment
prepare.for.deployment.common=Preparing For Deployment
prepare.for.deployment=Prepare Plugin Module ''{0}'' For Deployment
prepare.for.deployment.all=Prepare All Plugin Modules For Deployment
saved.message.common={0} will be saved in selected directory
saved.message= {0, choice, 1#Zip|2#Jar} for module ''{1}'' was saved to {2}
success.deployment.message=Plugin Module ''{0}'' Successfully Prepared For Deployment
success.deployment.message.all=All Plugins Successfully Prepared For Deployment

##Idea Sdk
sdk.title=IntelliJ Platform Plugin SDK
sandbox.specification=Please configure the sandbox
sandbox.home=Sandbox Home
sandbox.home.label=Sandbox Home:
sandbox.no.configured=No sandbox specified for idea jdk
sandbox.purpose=Browse folder to put config, system and plugins for target IDEA

#errors
error.occurred=Error Occurred
jdk.no.specified=No jdk specified for plugin module ''{0}''
jdk.type.incorrect=Wrong jdk type for plugin module ''{0}''.
jdk.type.incorrect.common=Wrong jdk type for plugin module
incorrect.dependency.non-plugin-module=The non-plugin module ''{0}'' cannot depend on plugin module ''{1}''.
incorrect.dependency.not-declared=The plugin module ''{0}'' doesn''t declare the dependency on ''{1}'' in its plugin.xml.
error.file.not.found=File not found
error.file.not.found.message=File ''{0}'' not found
error.no.plugin.xml=No plugin.xml file found
error.plugin.xml.readonly=The plugin.xml file is read-only

#run configurations
run.configuration.classpath.from.module.choose=Use Classpath and JDK from Module:
run.configuration.no.module.specified=No plugin module specified for configuration
run.configuration.title=Plugin
run.configuration.type.description=Plugin Sandbox Environment
idea.log.tab.title=IDEA LOG

#Misc
info.message=Info
create.smth=Create {0}
show.smth=&Show {0}
presentable.plugin.module.name=Plugin Module ''{0}''

action.MakeJarAction.text=Prepare To Deploy
action.MakeAllJarsAction.text=Prepare All Plugins To Deploy

dont.add.idea.libs.to.classpath=IDEA-related libraries ({0}) must not be added to the module classpath. Please add them to the IDEA-JDK instead.
new.action.id=&Action ID:
new.action.description=&Description:
new.action.class.name=&Class Name:
new.action.text=&Name:
new.action.add.to.group=Add to Group
new.action.group.actions=Act&ions:
new.action.group.anchor=Anchor:
new.action.group.anchor.first=&First
new.action.group.anchor.=&Last
new.action.group.anchor.before=&Before
new.action.group.anchor.after=Af&ter
new.action.group.groups=&Groups:
new.action.keyboard.shortcuts=Keyboard Shortcuts
new.action.keyboard.first=First:
new.action.keyboard.second=Second:
new.action.keyboard.clear=X
new.action.keyboard.clear.tooltip=Clear shortcut
command.implement.externalizable=Implement Externalizable
new.menu.action.text=Action
new.menu.action.description=Create New Action
new.action.error=Cannot create action
new.action.command=Create Action
new.action.action.name=Creating new action: {0}.{1}
new.action.dialog.title=New Action
new.menu.application.component.text=Application Component
new.menu.application.component.description=Create New Application Component
new.application.component.error=Cannot create application component
new.application.component.command=Create Application Component
new.application.component.prompt.title=New Application Component
new.application.component.prompt=Enter new application component name:
new.application.component.action.name=Creating new application component: {0}.{1}
new.menu.module.component.text=Module Component
new.menu.module.component.description=Create New Module Component
new.module.component.error=Cannot create module component
new.module.component.command=Create Module Component
new.module.component.prompt.title=New Module Component
new.module.component.prompt=Enter new module component name:
new.module.component.action.name=Creating new module component: {0}.{1}
new.menu.project.component.text=Project Component
new.menu.project.component.description=Create New Project Component
new.project.component.error=Cannot create project component
new.project.component.command=Create Project Component
new.project.component.prompt.title=New Project Component
new.project.component.prompt=Enter new project component name:
new.project.component.action.name=Creating new project component: {0}.{1}

select.plugin.modules.to.patch=Select Plugin Modules to Patch

keyword.extend=extend
keyword.implement=implement
class.action=action
class.interface=interface
class.implementation=implementation

inspections.group.name=Plugin DevKit
inspections.registration.problems.name=Component type mismatch
inspections.registration.problems.option.check.plugin.xml=Check Plugin Descriptor (plugin.xml)
inspections.registration.problems.option.check.java.actions=Check Java Actions
inspections.registration.problems.option.check.java.code=Check Java Code
inspections.registration.problems.quickfix.read-only=Class ''{0}'' is read-only
inspections.registration.problems.quickfix.make.public=Make {0} public
inspections.registration.problems.quickfix.create.constructor=Create no-argument constructor

inspections.registration.problems.incompatible.message=According to its registration in plugin.xml, the class should {0} ''{1}''
inspections.registration.problems.abstract=Plugin component class must not be abstract
inspections.registration.problems.missing.noarg.ctor=Action class must have a no-argument constructor

inspections.registration.problems.missing.implementation.class=Missing implementation-class
inspections.registration.problems.cannot.resolve.class=Cannot resolve {0} class
inspections.registration.problems.component.should.implement=Component class must implement ''{0}''
inspections.registration.problems.component.incompatible.interface=Component class is not assignable to its interface-class ''{0}''
inspections.registration.problems.component.duplicate.interface=Multiple components with the same interface-class are not allowed
inspections.registration.problems.action.incompatible.class=Action class must extend ''{0}''

inspections.component.not.registered.name=Component/Action not registered
inspections.component.not.registered.message={0} is not registered in plugin.xml
inspections.component.not.registered.option.check.actions=Check Actions
inspections.component.not.registered.option.ignore.non.public=Ignore non-public classes
inspections.component.not.registered.quickfix.family=Register Component
inspections.component.not.registered.quickfix.name=Register {0}
inspections.component.not.registered.quickfix.error=Cannot Register {0}
InspectionUseGrayColor=Use Gray
ant.build.jar.comment=Build archive for plugin ''{0}''
ant.build.jar.description=Build plugin archive for module ''{0}''
project.title=Plugin Project
no.java.sdk.for.idea.sdk.found=No Java SDK of appropriate version found. In addition to the IDEA Plugin SDK, you need to define a JDK with the same Java version ({0}).
no.idea.sdk.version.found=Failed to detect JDK version required for IDEA Plugin SDK.
group.PluginDeployActions.text=Plugin Deployment Actions

error.cannot.resolve.plugin=Cannot resolve plugin {0}
create.description.file=Create Description File
select.target.location.of.description=Select target location of {0}
