<idea-plugin package="org.jetbrains.idea.devkit.kotlin">
  <dependencies>
    <module name="intellij.devkit.core"/>
    <plugin id="org.jetbrains.kotlin"/>
  </dependencies>

  <resource-bundle>messages.DevKitKotlinBundle</resource-bundle>

  <extensions defaultExtensionNs="com.intellij">
    <localInspection language="XML" applyToDialects="false" id="KotlinObjectExtensionRegistrationInspection"
                     projectType="INTELLIJ_PLUGIN"
                     groupBundle="messages.DevKitBundle"
                     groupPathKey="inspections.group.path" groupKey="inspections.group.descriptor"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KotlinObjectExtensionRegistrationInspection"
                     key="inspections.plugin.extension.registers.kotlin.object"/>

    <localInspection language="kotlin" id="KotlinObjectRegisteredAsExtensionInspection"
                     projectType="INTELLIJ_PLUGIN"
                     groupBundle="messages.DevKitBundle"
                     groupPathKey="inspections.group.path" groupKey="inspections.group.code"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KotlinObjectRegisteredAsExtensionInspection"
                     key="inspections.plugin.kotlin.object.registered.as.extension"/>

    <localInspection language="kotlin" id="ForbiddenInSuspectContextMethodInspection"
                     projectType="INTELLIJ_PLUGIN"
                     groupBundle="messages.DevKitBundle"
                     groupPathKey="inspections.group.path" groupKey="inspections.group.code"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.ForbiddenInSuspectContextMethodInspection"
                     key="inspections.forbidden.method.in.suspend.context"/>

    <localInspection language="kotlin" id="CompanionObjectInExtensionInspection"
                     projectType="INTELLIJ_PLUGIN"
                     groupBundle="messages.DevKitBundle"
                     groupPathKey="inspections.group.path" groupKey="inspections.group.code"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.CompanionObjectInExtensionInspection"
                     key="inspections.companion.object.in.extension"/>

    <localInspection language="kotlin"
                     projectType="INTELLIJ_PLUGIN"
                     groupBundle="messages.DevKitBundle"
                     groupPathKey="inspections.group.path" groupKey="inspections.group.code"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.UsePlatformProcessAwaitExitInspection"
                     key="inspection.use.platform.process.await.exit.display.name"/>

    <iconProvider implementation="org.jetbrains.idea.devkit.kotlin.driver.RemoteIconProvider" order="first"/>

    <annotator language="kotlin" implementationClass="org.jetbrains.idea.devkit.kotlin.compose.ComposeColorAnnotator"/>
  </extensions>

  <extensions defaultExtensionNs="DevKit.lang">
    <cancellationCheckProvider
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KtCancellationCheckProvider"/>
    <cancellationCheckInLoopsFixProvider
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KtCancellationCheckInLoopsFixProvider"/>
    <visitorProviderForRBCInspection
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KtCallingFunctionShouldBeRequiresBlockingContextVisitorProvider"/>
    <extensionClassShouldNotBePublicProvider
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.ExtensionClassShouldNotBePublicProviderForKotlin"/>
    <extensionClassShouldBeFinalErrorMessageProvider
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.ExtensionClassShouldNotBeOpenErrorMessageProvider"/>
    <serviceLevelExtractor
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.ServiceLevelExtractorForKotlin"/>
    <lightServiceMustBeFinalErrorMessageProvider
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.LightServiceMustNotBeOpenErrorMessageProvider"/>
    <appServiceAsStaticFinalFieldOrPropertyVisitorProvider
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KtAppServiceAsStaticFinalFieldOrPropertyVisitorProvider"/>
    <uElementAsPsiCheckProvider
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KtUElementAsPsiCheckProvider"/>
    <staticInitializationInExtensionsVisitorProvider language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KtStaticInitializationInExtensionsVisitorProvider"/>
    <methodNameProvider
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KtMethodNameProvider"/>
    <addServiceAnnotationProvider
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KotlinAddServiceAnnotationProvider"/>
    <cancellationExceptionHandlingChecker
      language="kotlin"
      implementationClass="org.jetbrains.idea.devkit.kotlin.inspections.KtCancellationExceptionHandlingChecker"/>
  </extensions>
</idea-plugin>
