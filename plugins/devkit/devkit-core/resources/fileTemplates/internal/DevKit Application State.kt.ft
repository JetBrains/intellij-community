#set($lowercasedName = $NAME.toLowerCase())
#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != "")package ${PACKAGE_NAME}

#end
import com.intellij.openapi.components.*

#parse("File Header.java")
@Service
@State(name = "${NAME}", storages = [Storage("${lowercasedName}.xml")])
internal class ${NAME}: SerializablePersistentStateComponent<${NAME}State>(${NAME}State()) {
    companion object {
        fun getInstance(): ${NAME} = service()
    }

    var value: String?
        get() = state.storeValue
        set(value) {
            updateState {
                it.copy(storeValue = value)
            }
        }
}

internal data class ${NAME}State(
    @JvmField val storeValue: String? = null
)