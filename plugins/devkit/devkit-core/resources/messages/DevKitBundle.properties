#module type
module.title=IntelliJ Platform Plugin
module.description=Plugin modules are used for developing plugins for <b>IntelliJ Platform</b>-based IDEs.<br>\
  They provide <b>IntelliJ Platform Plugin SDK</b> and <b>Run Configuration</b> for running and debugging plugins inside an IDE.
plugin.descriptor=IntelliJ Platform Plugin Descriptor

#Gradle wizard
module.wizard.gradle.presentable.name=IntelliJ Platform Plugin
module.wizard.gradle.learn.title=Learn how to <a>build plugins with Gradle</a>

module.wizard.devkit.simple.plugin.label=This project type is recommended for simple plugins, such as a custom UI theme. For more complex plugins, a Gradle-based project is <a>recommended</a>.

convert.devkit.to.gradle.notification=Migrate DevKit plugin to Gradle
convert.devkit.to.gradle.notification.content=Gradle-based setup is recommended for this project.
convert.devkit.to.gradle.notification.link.title=Migration guide
convert.devkit.to.gradle.notification.do.not.show.again=Do not show again

group.PluginDeployActions.text=Plugin Deployment Actions

#Module Editor - Deployment
deployment.title=Plugin Deployment
deployment.cleanup=Clean Up {0} Directory
deployment.directory.location=Select {0} Directory Location
deployment.view.select=Select {0}
manifest.settings=Manifest Settings
manifest.selection=Selected {0} will be included in resulting distribution
manifest.use.user.defined=Use user manifest:
deployment.view.delete=Delete {0}?
deployment.view.meta-inf.label=Path to {0}
suggest.to.delete=Do you want to delete ''{0}''?
vm.parameters=&VM Options
program.parameters=&Program Arguments

#Prepare for deployment action
action.MakeJarAction.text=Prepare To Deploy
action.MakeAllJarsAction.text=Prepare All Plugins To Deploy
select.plugin.modules.title=Select modules
select.plugin.modules.description=Select modules to be prepared for deployment
prepare.for.deployment.task=Prepare plugin module ''{0}'' for deployment
prepare.for.deployment.task.progress=Preparing for deployment
prepare.for.deployment=Prepare Plugin Module ''{0}'' For Deployment
prepare.for.deployment.all=Prepare All Plugin Modules For Deployment
saved.message.common={0} will be saved in selected directory
saved.message= {0, choice, 1#Zip|2#JAR} for module ''{1}'' was saved to {2}
success.deployment.message=Plugin Module ''{0}'' Successfully Prepared For Deployment
success.deployment.message.all=All Plugins Successfully Prepared For Deployment

##Idea Sdk
sdk.title=IntelliJ Platform Plugin SDK
sdk.select.java.sdk=Select Java SDK to be used for IntelliJ Platform Plugin SDK
sdk.select.java.sdk.label=Internal Java Platform:
sdk.select.java.sdk.title=Select Internal Java Platform
sdk.no.java.sdk.for.idea.sdk.found=No Java SDK of appropriate version found. In addition to the IntelliJ Platform Plugin SDK, you need to define a JDK with the same Java version ({0}).
sdk.no.idea.sdk.version.found=Failed to detect JDK version required for IntelliJ Platform Plugin SDK.
sdk.no.java.sdk.for.idea.sdk.found.title=No Java SDK Found
sdk.from.sources.scanning.roots=Scanning for Roots

sandbox.specification=Please configure the sandbox
sandbox.home=Sandbox Home
sandbox.home.label=Sandbox Home:
sandbox.no.configured=No sandbox specified for IntelliJ Platform Plugin SDK
sandbox.no.sdk=Please configure SDK
sandbox.purpose=Browse folder to put config, system and plugins for target IDE

#errors
error.occurred=Error Occurred
sdk.no.specified=No SDK specified for plugin module ''{0}''
sdk.type.incorrect=Wrong SDK type for plugin module ''{0}''.
sdk.type.incorrect.common=Wrong SDK type for plugin module
error.file.not.found=File not Found
error.file.not.found.message=File ''{0}'' not found
error.no.plugin.xml=No plugin.xml file found
error.plugin.xml.readonly=Read-only plugin.xml file cannot be processed: {0}
error.plugin.xml.tag.invalid=<Invalid>
error.cannot.process.plugin.xml=Cannot process plugin descriptor file: {0}
error.cannot.create.service.class=Cannot Create Service Class

#run configurations
run.configuration.no.module.specified=No plugin module specified for configuration
run.configuration.title=Plugin
run.configuration.type.description=Plugin Sandbox Environment

#Test Data
testdata.create.dialog.title=Create Testdata File
testdata.file.doesn.not.exist=<html>The referenced testdata file {0} does not exist. Would you like to create it?</html>
testdata.create.missing.files=Create Missing Files
testdata.confirm.create.missing.files.dialog.message=The following testdata files will be created:\n{0}
testdata.searching=Searching for Testdata Files
testdata.goto.test.data.action.text=Go to {0}
testdata.notification.no.test.datafiles.title=Found no test data files
testdata.notification.no.test.datafiles.content=Cannot find test data files for class
testdata.progress.text.searching.for.test.data.files=Searching for ''{0}'' test data files...

#Misc
info.message=Info
new.action.id=&Action ID:
new.action.description=&Description:
new.action.class.name=&Class Name:
new.action.text=&Name:
new.action.add.to.group=Add to Group
new.action.group.actions=Act&ions:
new.action.group.anchor=Anchor:
new.action.group.anchor.first=&First
new.action.group.anchor.=&Last
new.action.group.anchor.before=&Before
new.action.group.anchor.after=Af&ter
new.action.group.groups=&Groups:
new.action.keyboard.shortcuts=Keyboard Shortcuts
new.action.keyboard.first=First:
new.action.keyboard.second=Second:
new.action.keyboard.clear=X
new.action.keyboard.clear.tooltip=Clear shortcut
new.action.invalid.id=Action ID must not be empty
new.action.invalid.class.name=Action Class Name is not a valid Java qualified name
new.action.invalid.name=Action Name must not be empty
new.action.cannot.create.class=Cannot create action class

command.implement.externalizable=Implement Externalizable

new.menu.action.text=Action
new.action.error=Cannot create action
new.action.action.name=Creating new action: {0}.{1}
new.action.dialog.title=New Action

action.DevKit.NewMessageBundle.action.name.create.new.message.bundle=Create new message bundle ''{0}''
action.DevKit.NewMessageBundle.error.title.cannot.create.new.message.bundle=Cannot create new message bundle
action.DevKit.NewMessageBundle.text=Message Bundle
action.DevKit.NewMessageBundle.description=Creates a new message bundle class and corresponding properties file
action.DevKit.NewMessageBundle.title.create.new.message.bundle=Create New Message Bundle
action.DevKit.NewMessageBundle.label.bundle.name=Bundle name:
action.DevKit.NewMessageBundle.error.message.do.not.put.bundle.to.impl.module=Currently it's not recommended to create a separate bundle for .impl module, use the bundle from the corresponding API module instead
action.DevKit.NewMessageBundle.notification.content.cannot.create.resources.root.for.properties.file=Cannot create resources root for properties file: {0}


## theming
theme.highlighting.unresolved.key=Unresolved key ''{0}''
theme.highlighting.deprecated.key=Deprecated key ''{0}''
theme.choose.color.tooltip=Choose color
theme.choose.color.dialog.title=Choose Color

new.theme.dialog.title=Create New Theme
new.theme.dialog.name.text.field.text=Name:
new.theme.dialog.is.dark.checkbox.text=Dark theme
new.theme.dialog.name.empty=Theme Name must not be empty


new.menu.application.component.text=Application Component
new.menu.module.component.text=Module Component
new.menu.project.component.text=Project Component

new.service.class.action.name=Creating New Service
new.service.dialog.interface=Service &interface:
new.service.dialog.implementation=Service i&mplementation:
new.service.dialog.class=Service &class:
new.service.dialog.separate=&Separate interface from implementation
new.service.dialog.invalid.name=Service Name is not a valid Java qualified name
new.service.dialog.invalid.interface=Service Interface is not a valid Java qualified name
new.service.dialog.invalid.implementation=Service Implementation is not a valid Java qualified name

new.application.service.dialog.title=Create Application Service
new.project.service.dialog.title=Create Project Service
new.module.service.dialog.title=Create New Module Service

select.plugin.module.to.patch=Select Plugin Module to Patch

keyword.extend=extend
keyword.implement=implement
class.action=action
class.interface=interface
class.implementation=implementation

structure.sort.alphabetically.in.groups=Sort Alphabetically in Groups

inspections.group.name=Plugin DevKit
inspections.group.descriptor=Plugin descriptor
inspections.group.description.file=Description file
inspections.group.code=Code
inspections.group.path=Plugin DevKit
inspections.plugin.xml.inner.class.must.be.separated.with.dollar=Inner class must be separated with '$'
inspections.plugin.xml.plugin.should.have.jetbrains.vendor=Plugin developed as a part of IntelliJ IDEA project should specify 'JetBrains' as its vendor
inspections.plugin.xml.plugin.jetbrains.vendor.no.url=Plugin developed as a part of IntelliJ IDEA project shouldn''t specify ''{0}'' as url
inspections.plugin.xml.plugin.jetbrains.vendor.no.email=Plugin developed as a part of IntelliJ IDEA project shouldn't specify email
inspections.plugin.xml.plugin.jetbrains.no.version=Plugin developed as a part of IntelliJ IDEA project shouldn't specify version
inspections.plugin.xml.plugin.jetbrains.no.idea.version=Plugin developed as a part of IntelliJ IDEA project shouldn't specify idea-version as it is generated by build scripts automatically
inspections.plugin.xml.plugin.jetbrains.no.change.notes=Plugin developed as a part of IntelliJ IDEA project shouldn't specify change-notes
inspections.plugin.xml.plugin.jetbrains.no.generic.plugin.url=Plugin developed as a part of IntelliJ IDEA project shouldn't specify generic plugin url
inspections.plugin.xml.ep.qualifiedName.superfluous=Unnecessary declaration via 'qualifiedName'
inspections.plugin.xml.ep.qualifiedName.superfluous.fix=Declare via 'name'
inspections.plugin.xml.ep.doesnt.have.with=<extensionPoint> does not have <with> tags to specify the types of class fields
inspections.plugin.xml.ep.both.beanClass.and.interface=<extensionPoint> must not specify both 'interface' and 'beanClass' attributes
inspections.plugin.xml.ep.missing.beanClass.and.interface=<extensionPoint> must specify either 'interface' or 'beanClass' attribute
inspections.plugin.xml.ep.both.name.and.qualifiedName=<extensionPoint> must not specify both 'name' and 'qualifiedName' attributes
inspections.plugin.xml.ep.missing.name.and.qualifiedName=<extensionPoint> must specify either 'name' or 'qualifiedName' attribute
inspections.plugin.xml.use.defaultExtensionNs=Use defaultExtensionNs instead
inspections.plugin.xml.specify.defaultExtensionNs.explicitly=Specify defaultExtensionNs="{0}" explicitly
inspections.plugin.xml.invalid.build.number=<html>Invalid build number ''{0}'' (<a href="http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html">Documentation</a>)</html>
inspections.plugin.xml.until.build.use.asterisk.instead.of.big.number=Don''t use ''{0}'' in ''until-build'', use ''*'' instead
inspections.plugin.xml.until.build.misleading.plain.number=Plain numbers in ''until-build'' attribute may be misleading. ''{0}'' means the same as ''{0}.0'', so the plugin won''t be compatible with {0}.* builds. It''s better to specify ''{1}'' instead.
inspections.plugin.xml.until.build.must.be.greater.than.since.build="until-build" must be greater than "since-build"
inspections.plugin.xml.dependency.superfluous.optional=Superfluous declaration
inspections.plugin.xml.dependency.specify.config.file=Must specify 'config-file'
inspections.plugin.xml.deprecated.ep=Deprecated EP ''{0}''
inspections.plugin.xml.no.need.to.specify.itnReporter=Exceptions from plugins developed by JetBrains are reported via ITNReporter automatically, there is no need to specify it explicitly
inspections.plugin.xml.third.party.plugins.must.not.use.itnReporter='com.intellij.diagnostic.ITNReporter' reports errors for internal processing at JetBrains, it should not be used for third-party plugins
inspections.plugin.xml.deprecated.attribute=Deprecated attribute ''{0}''
inspections.plugin.xml.deprecated.helpset=Helpset is not used anymore, use 'com.intellij.openapi.help.WebHelpProvider' instead
inspections.plugin.xml.attribute.not.used.anymore=Attribute ''{0}'' not used anymore
inspections.plugin.xml.anchor.must.have.relative-to-action='anchor' must be specified with 'relative-to-action'
inspections.plugin.xml.must.use.after.before.with.relative-to-action=Must use ''{0}''|''{1}'' with ''relative-to-action''
inspections.plugin.xml.skipForDefaultProject.deprecated='skipForDefaultProject' is deprecated; project components are not loaded in the default project by default
inspections.plugin.xml.invalid.ep.name.description=Invalid EP {0} ''{1}'', must contain only latin characters, digits and dots, must not start/end with dot, each fragment must start with lowercase character, last fragment words must not repeat any previous fragment
inspections.plugin.xml.invalid.ep.name=name
inspections.plugin.xml.invalid.ep.qualifiedName=qualified name
inspections.plugin.xml.ignore.classes.title=Registration check ignore class list:
inspections.plugin.xml.add.ignored.class.title=Specify Class to Ignore
inspections.plugin.xml.plugin.modules.label=Modules of multi-module plugins:
inspections.plugin.xml.plugin.modules.description=Each line specifies comma-separated list of module names which are included into a single plugin.
inspections.plugin.xml.version.must.be.specified=<version> must be specified
inspections.plugin.xml.vendor.must.be.specified=<vendor> must be specified
inspections.plugin.xml.do.not.use.template.text=Do not use template text ''{0}''
inspections.plugin.xml.must.not.contain.template.text=Must not contain template text ''{0}''
inspections.plugin.xml.value.exceeds.max.length=Value exceeds maximum length {0}
inspections.plugin.xml.value.must.have.minimum.length=Value must have minimum length of {0}
inspections.plugin.xml.product.descriptor.invalid.date=Date must be a YYYYMMDD integer, or a placeholder (e.g. __DATE__)
inspections.plugin.xml.product.descriptor.invalid.version=Version must be an integer, or a placeholder (e.g. __VERSION__)
inspections.plugin.xml.no.plugin.icon.svg.file=<html>Plugin should provide ''{0}'' (<a href="https://www.jetbrains.org/intellij/sdk/docs/basics/plugin_structure/plugin_icon_file.html">Documentation</a>)</html>
inspections.plugin.xml.component.interface.class.redundant=Redundant tag 'interfaceClass'
inspections.plugin.xml.service.interface.class.redundant=Redundant attribute 'serviceInterface'
inspections.plugin.xml.duplicated.dependency=Duplicate dependency configuration file ''{0}''
inspections.plugin.xml.ComponentModuleRegistrationChecker.element.registered.wrong.module=Element should be registered in ''{0}'' module where its class ''{1}'' is defined
inspections.plugin.xml.ComponentModuleRegistrationChecker.fix.move.registration.name=Move registration to {0}
inspections.plugin.xml.ComponentModuleRegistrationChecker.fix.move.registration.family.name=Move registration to correct module
inspections.plugin.xml.fix.extension.point.add.with.tag=Add <with> tag
inspections.plugin.xml.listener.does.not.inherit=''{0}'' does not inherit from ''{1}''
inspections.plugin.xml.since.build.could.not.locate.main.descriptor=Could not locate main plugin.xml file to determine required <idea-version> 'since-build'
inspections.plugin.xml.since.build.must.be.specified=Must specify <idea-version> 'since-build'
inspections.plugin.xml.since.build.could.not.determine.platform.version=Could not determine target platform version, please check project setup
inspections.plugin.xml.since.build.listeners.os.attribute=Attribute ''os'' available in platform version {0} or later only, but specified ''since-build'' platform is ''{1}''
inspections.plugin.xml.since.build.listeners.not.available=Feature available in platform version {0} or later only, but specified ''since-build'' platform is ''{1}''
inspections.plugin.xml.action.group.id.required='id' should be specified
inspections.plugin.xml.action.class.required.with.use.shortcut.of='class' must be specified with 'use-shortcut-of'
inspections.plugin.xml.action.must.override.method.with.use.shortcut.of=Must override {0} with ''use-shortcut-of''
inspections.plugin.xml.usage.of.experimental.api=Usage of API marked with @{0}. Such API may be changed or removed in future IDE versions causing compatibility problems.
inspections.plugin.xml.vendor.specify.jetbrains=Specify JetBrains as vendor
inspections.plugin.xml.change.until.build.name=Change ''until-build'' to ''{0}''
inspections.plugin.xml.change.until.build.family.name=Correct 'until-build' attribute
inspections.plugin.xml.deprecated=Deprecated
inspections.plugin.xml.add.version.tag=Add <version>
inspections.plugin.xml.add.vendor.tag=Add <vendor>


inspections.registration.problems.name=Component type mismatch
inspections.registration.problems.option.check.plugin.xml=Check Plugin Descriptor (plugin.xml)
inspections.registration.problems.option.check.java.actions=Check Java Actions
inspections.registration.problems.option.check.java.code=Check Java Code
inspections.registration.problems.quickfix.read-only=Class ''{0}'' is read-only
inspections.registration.problems.quickfix.create.constructor=Create no-argument constructor
inspections.registration.problems.fix.implement.extend.family.name=Implement/Extend required base class
inspections.registration.problems.fix.implement.name=Implement ''{0}''
inspections.registration.problems.fix.extend.name=Extend ''{0}''
inspections.registration.problems.fix.implement.invalid=Invalid

inspections.registration.problems.incompatible.message=According to its registration in plugin.xml, the class should {0} ''{1}''
inspections.registration.problems.abstract=Plugin component class must not be abstract
inspections.registration.problems.missing.noarg.ctor=Action class must have a no-argument constructor

inspections.registration.problems.missing.implementation.class=Missing implementation-class
inspections.registration.problems.cannot.resolve.class=Cannot resolve {0} class
inspections.registration.problems.component.incompatible.interface=Component class is not assignable to its interface-class ''{0}''
inspections.registration.problems.component.duplicate.interface=Multiple components with the same interface-class are not allowed
inspections.registration.problems.action.incompatible.class=Action class must extend ''{0}''

inspections.component.not.registered.name=Component/Action not registered
inspections.component.not.registered.message={0} is not registered in plugin.xml
inspections.component.not.registered.option.check.actions=Check Actions
inspections.component.not.registered.option.ignore.non.public=Ignore non-public classes
inspections.component.not.registered.quickfix.family=Register {0}
inspections.component.not.registered.quickfix.name=Register {0}
inspections.component.not.registered.quickfix.error=Cannot Register {0}

inspections.component.postfix.template.not.found.description.name=Postfix template description checker

inspections.presentation.cannot.resolve.icon=Cannot resolve icon ''{0}''
inspections.plugin.xml.invalid.order.attribute=Invalid 'order' attribute value
invalid.order.attribute.part=Invalid ''order'' attribute value part: ''{0}'', must be ''first'', ''last'', ''before <id>'' or ''after <id>''

inspections.unregistered.named.color=<html>Named color key ''{0}'' is not registered in <code>*.themeMetadata.json</code> (<a href="https://www.jetbrains.org/intellij/sdk/docs/reference_guide/ui_themes/themes_metadata.html">Documentation</a>)</html>

inspections.inspection.description.optional.short.name=Inspection does not have a description{0}

inspections.inspection.mapping.consistency.specify.bundle=Bundle should be specified
inspections.inspection.mapping.consistency.fix.insert.attribute=Insert ''{0}'' attribute
inspections.inspection.mapping.consistency.specify.displayName.or.key=displayName or key should be specified
inspections.inspection.mapping.consistency.specify.groupName.or.groupKey=groupName or groupKey should be specified

inspections.intention.description.not.found=Intention does not have a description
inspections.intention.description.no.before.after.template=Intention must have 'before.*.template' and 'after.*.template' beside 'description.html'

inspections.postfix.description.not.found=Postfix template does not have a description
inspections.postfix.description.no.before.after.template=Postfix template must have 'before.*.template' and 'after.*.template' beside 'description.html'

inspections.plugin.xml.capitalization.missing.resource.bundle.key=Missing resource bundle key ''{0}''
inspections.plugin.xml.capitalization.error=String ''{0}'' is not properly capitalized. It should have {1} capitalization
inspections.plugin.xml.capitalization.fix.properly.capitalize=Properly capitalize ''{0}''
inspections.plugin.xml.capitalization.fix.properly.capitalize.family.name=Properly capitalize

inspections.quick.fix.family.name=QuickFix's getFamilyName() implementation must not depend on a specific context

inspections.unique.toolbar.id=Specify unique toolbar id

inspections.dont.use.new.pair=Replace with 'Pair.create()'
inspections.dont.use.new.pair.change.to.pair.fix=Replace with ''Pair.create()''

inspections.psi.element.concat.psi.element=Suspicious conversion of PsiElement to string
inspections.psi.element.concat.psi.type=Suspicious conversion of PsiType to string
inspections.psi.element.concat.add.get.text.family.name=Call text representation retrieval method
inspections.psi.element.concat.add.get.text.name=Use ''{0}'' call


inspections.plugin.xml.dynamic.plugin.component.usage=Non-dynamic plugin due to using components.
inspections.plugin.xml.dynamic.plugin.component.usage.docs.link.title=Migration Guide
inspections.plugin.xml.dynamic.plugin.option.highlight.usages.ep=Highlight usage of non-dynamic extension points
inspections.plugin.xml.dynamic.plugin.extension.point=Non-dynamic extension point ''{0}''
inspections.plugin.xml.dynamic.plugin.explicit.non.dynamic.extension.point=Explicit non-dynamic extension point ''{0}''
inspections.plugin.xml.dynamic.plugin.id.required.for.group='id' must be specified for <group>
inspections.plugin.xml.dynamic.plugin.usage.of.non.dynamic.extension.point=Usage of non-dynamic extension point ''{0}''
inspections.plugin.xml.dynamic.plugin.analyze.extension.point={0} for ''{1}''

inspections.stateful.extension.point.leak.psi.element=Potential memory leak: don't hold PsiElement, use SmartPsiElementPointer instead
inspections.stateful.extension.point.leak.psi.element.quick.fix=See also LocalQuickFixOnPsiElement
inspections.stateful.extension.point.do.not.use.in.quick.fix=Do not use {0} as a field in quick fix
inspections.stateful.extension.point.do.not.use.in.extension=Do not use {0} as a field in extension

inspections.file.equals.method=Do not use File.equals/hashCode/compareTo as they don't honor case-sensitivity on macOS. Please use FileUtil.filesEquals/fileHashCode/compareFiles instead.

inspections.undesirable.class.use.instead=Please use ''{0}'' instead

inspections.unsafe.vfs.recursion=VirtualFile.getChildren() is called from a recursive method. This may cause an endless loop on cyclic symlinks. Please use VfsUtilCore.visitChildrenRecursively() instead.

inspections.use.couple.of=Replace with 'Couple.of()'
inspections.use.couple.type=Replace with ''Couple<{0}>''
inspections.use.couple.family.name=Replace 'Pair' with 'Couple'

inspections.use.dpi.aware.insets=Replace with JBUI.insets(...)
inspections.use.dpi.aware.insets.family.name=Convert to JBUI.insets(...)

inspections.use.primitive.types=Primitive types should be compared by equals()

inspections.use.virtual.file.equals=VirtualFile objects should be compared by equals(), not ==

inspections.unsafe.return.insert.family.name=Skip anonymous/local classes
inspections.unsafe.return.insert.visit.lambda.expression=Insert visitLambdaExpression method
inspections.unsafe.return.insert.visit.class.method=Insert visitClass method
inspections.unsafe.return.insert.visit.lambda.expression.and.class.methods=Insert visitLambdaExpression/visitClass methods
inspections.unsafe.return.message=Recursive visitors which visit return statements most probably should specifically process anonymous/local classes as well as lambda expressions

inspections.use.jb.color.change.to.JBColor=Change to JBColor.{0}
inspections.use.jb.color.replace.with.JBColor=Replace with JBColor
inspections.use.jb.color.fix=Convert to JBColor.{0}
inspections.use.jb.color.fix.family.name=Use JBColor constant
inspections.use.jb.color.new.color.fix.family.name=Convert to JBColor


error.cannot.resolve.plugin=Cannot resolve plugin {0}
create.description.file=Create description file {0}
create.description.file.family.name=Create description file
select.target.location.of.description=Select Target Location of {0}
implemented.at.runtime.dom=DOM Element implemented at runtime
implemented.at.runtime.jamElement=JAM Element implemented at runtime

line.marker.tooltip.extension.declaration=<a href="#navigation/{0}:{1}">{2}</a> declaration in {3}
line.marker.tooltip.extension.point.declaration=<a href="#navigation/{0}:{1}">{2}</a> EP declaration in {3}
inspections.usage.uelement.as.psi=Usage of UElement as PsiElement is not recommended

inspections.missing.recent.api.common.message=''{0}'' is available only since {1} but the module is targeted for {2}. It may lead to compatibility problems with IDEs prior to {1}.
inspections.missing.recent.api.class.message=''{0}'' is available only since {1} but the module is targeted for {2}. It may lead to compatibility problems with IDEs prior to {1}. Note that this type might have had a different fully qualified name in the previous IDEs.
inspections.missing.recent.api.method.message=''{0}'' is available only since {1} but the module is targeted for {2}. It may lead to compatibility problems with IDEs prior to {1}. Note that this method might have had a different full signature in the previous IDEs.
inspections.missing.recent.api.field.message=''{0}'' is available only since {1} but the module is targeted for {2}. It may lead to compatibility problems with IDEs prior to {1}. Note that this field might have had a different full signature in the previous IDEs.
inspections.missing.recent.api.default.constructor.message=Default constructor of ''{0}'' is available only since {1} but the module is targeted for {2}. It may lead to compatibility problems with IDEs prior to {1}.
inspections.missing.recent.api.overriding=Overrides method in ''{0}'' that is available only since {1} but the module is targeted for {2}. It may lead to compatibility problems with IDEs prior to {1}. Note that the overridden method might have had a different signature in the previous IDEs.
inspections.missing.recent.api.settings.range=Plugin compatibility range
inspections.missing.recent.api.settings.since=since
inspections.missing.recent.api.settings.until=until

inspection.renamer.dialog.title=Rename Inspection Description File and Change Short Name
inspection.renamer.option.name=Rename inspection description file and change short name
inspection.renamer.dialog.description=<html>Do you want to also rename inspection description file and change short name?<br/><b>Warning: it may break existing inspection profiles and suppression comments.</b></html>
inspection.renamer.entity.name=Element

intellij.api.annotations.update.title=Update IntelliJ API Annotations {0}
intellij.api.annotations.update.task.title=Updating IntelliJ API Annotations {0}
intellij.api.annotations.update.confirmation.content=<html>Inspection that verifies API usages of {0} needs to update the external annotations, which will be downloaded from the Maven repository. <br><br>Would you like to update those annotations to have additional IDE assistance during the plugin development?</html>
intellij.api.annotations.update.confirmation.update.button=Update
intellij.api.annotations.update.confirmation.disable.inspection.button=Disable inspection
intellij.api.annotations.update.successfully.updated=IntelliJ API external annotations for {0} have been successfully updated.
intellij.api.annotations.update.successfully.updated.but.not.latest.version=IntelliJ API external annotations for {0} have been updated to version {1}, which is the latest available in the Maven repository. Probably annotations for {0} haven''t been published yet. We will suggest updating the annotations again later.
intellij.api.annotations.update.failed=Failed to update IntelliJ API external annotations: {0}
intellij.api.annotations.update.failed.no.annotations.found=No external annotations found for {0} in the Maven repository.

inspections.plugin.xml.i18n.name=Extract text/description for i18n
inspections.plugin.xml.i18n.inspection.tag.family.name=Extract {0} for i18n
inspections.plugin.xml.i18n.choose.bundle.4inspections.title=Choose Bundle
inspections.plugin.xml.i18n.key=Extract text for i18n

inspections.leakable.map.key.name=Map key may leak
inspections.leakable.map.key.text=Consider using ''String'' instead of ''{0}'' as the map key
inspections.leakable.map.key.quick.fix.name=Parameterize with ''{0}''

inspections.use.gray.convert=Convert to Gray._{0}
inspections.use.gray.convert.family.name=Convert to Gray

line.marker.related.property.title=Related Property
line.marker.related.property.description=Related property

action.DevKit.EditThemeEditorColorScheme.text=Edit Editor Color Scheme
action.DevKit.RollbackTheme.text=Stop Theme Preview
action.DevKit.ApplyTheme.text=Preview Theme
action.DevKit.OpenThemeReferenceDocs.text=Open UI Themes Reference Documentation
action.AnalyzeEPUsageIgnoreSafeClasses.text=Analyze EP Usage (Do not Follow Safe Types)
action.AnalyzeEPUsage.text=Analyze EP Usage

action.AnalyzeUnloadablePlugins.text=Analyze Unloadable Plugins
action.AnalyzeUnloadablePlugins.progress.title=Analyzing Plugins ({0})

action.DumpCleanTestData.text=Dump Highlighting-Markup-Free Data
action.DumpCleanTestData.file.chooser.title=Choose Directory
action.DumpCleanTestData.file.chooser.source.description=Directory containing highlighting test data
action.DumpCleanTestData.file.chooser.destination.description=Directory where highlighting-markup-free copies would be placed
action.DumpCleanTestData.error.source.destination.must.differ=Source and destination roots should differ

action.ShowHelpPageById.text=Show Help Page by ID
action.ShowHelpPageById.dialog.enter.help.id=Enter Help ID:
action.ShowHelpPageById.dialog.title=Show Help Page

action.GenerateDomModel.text=Generate DOM Model...

action.ShowSerializedXml.text=Show Serialized XML for Class
action.ShowSerializedXml.message.cannot.find.class=Cannot find class ''{0}''
action.ShowSerializedXml.message.cannot.generate.class=Cannot generate class ''{0}'': {1}
action.ShowSerializedXml.dialog.title=Serialized XML for ''{0}''

action.ShuffleNamesAction.text=Shuffle/Scramble/Anonymize/Permute Names
action.ToggleHighlightingMarkup.text=Toggle Expected Highlighting Markup
group.Internal.DevKit.text=DevKit
action.GenerateExternalization.text=Generate Externalization
action.DevKit.NewTheme.text=Theme
action.NewModuleService.text=Module Service
action.NewModuleService.description=Create new module service
action.NewProjectService.text=Project Service
action.NewProjectService.description=Create new project service
action.NewApplicationService.text=Application Service
action.NewApplicationService.description=Create new application service
action.NewAction.text=Action
action.NewAction.description=Create new action
group.DevkitNewActions.text=Plugin DevKit
action.Anonymous.text.choose.color=Choose Color...
inspection.serializable.constructor.message=Non-default ctor should be annotated with @PropertyMapping
inspection.message.wrong.quotes.around.parameter.reference=Parameter won''t be substituted, the string would contain {0}

cached.value.profiler.file.description=Cached value profiling snapshot
cached.value.profiler.column.total.life.time=Total Life Time
cached.value.profiler.column.total.use.count=Total Use Count
cached.value.profiler.column.created=Created
cached.value.profiler.column.total.use.count.created=Total Use Count / Created
cached.value.profiler.column.origin=Origin

action.TestData.Navigate.text=Navigate to Test Data
testdata.popup.navigation.title=Test Data
testdata.related.navigation.group=Test Data
testdata.related.navigation.title=Test data

# UI Form converter
convert.form.dialog.title=Convert Form to UI DSL
convert.form.dialog.label.target.class.name=Target class name:
convert.form.dialog.label.bound.instance.type=Bound instance type:
convert.form.dialog.label.bound.instance.expression=Bound instance expression
convert.form.dialog.label.checkbox.generate.descriptors.for.search.everywhere=Generate descriptors for Search Everywhere
convert.form.dialog.base.class.separator=Base class
convert.form.dialog.base.class.none=None
convert.form.dialog.base.class.configurable=Configurable
convert.form.editor.notification.label=The use of UI Designer in IntelliJ project is now discouraged
convert.form.editor.notification.link.convert=Convert to UI DSL
convert.form.hint.caret.not.in.form.bound.class=Please put a caret inside a Java class bound to a form
convert.form.hint.class.not.bound.to.form=Can''t find a form bound to {0}

# UpdateFromSources
action.UpdateIdeFromSourcesAction.update.show.settings.text=Update IDE from Sources Settings...
action.UpdateIdeFromSourcesAction.update.text=Update IDE from Sources...
action.UpdateIdeFromSourcesAction.update.description=Builds an installation of IntelliJ IDEA from the currently opened sources and replace the current installation by it.
action.UpdateIdeFromSourcesAction.task.title=Updating from Sources
action.UpdateIdeFromSourcesAction.task.failed.title=Update from Sources Failed
action.UpdateIdeFromSourcesAction.task.failed.content=Build script finished with {0}: {1}
action.UpdateIdeFromSourcesAction.task.success.title=Update from Sources
action.UpdateIdeFromSourcesAction.task.success.content=New installation is prepared from sources. <a href="#">Restart</a>?
action.UpdateIdeFromSourcesAction.notification.title=Update from Sources
action.UpdateIdeFromSourcesAction.notification.content=New installation is prepared at {0}.
action.UpdateIdeFromSourcesAction.settings.ok.button=Update
action.UpdateIdeFromSourcesAction.settings.row.ide.installation=IDE installation:
action.UpdateIdeFromSourcesAction.settings.installation.choose.ide.directory.title=Choose IDE Installation Directory
action.UpdateIdeFromSourcesAction.settings.enabled.plugins.only=Build enabled plugins only
inspections.IncorrectParentDisposableInspection.do.not.use.as.disposable=Don''t use {0} as disposable in plugin code
inspections.IncorrectParentDisposableInspection.documentation.link.title=Choosing a Disposable Parent

extension.point.documentation.field.required.suffix=(required)
extension.point.documentation.implementation.section=Extension Point Implementation

gutter.related.option.description=Description
gutter.related.option.before.after.templates=Before/After templates
gutter.related.option.name=Description / Before|After templates
gutter.related.navigation.popup.template.title=Select Template
gutter.related.navigation.popup.template.tooltip=Before/After Templates
gutter.related.extension.declaration=Declaration
gutter.related.navigation.popup.description.tooltip=Description
gutter.related.navigation.choose.extension=Choose Extension
gutter.related.navigation.choose.extension.point=Choose Extension Point

# plugin.xml resolving
plugin.xml.convert.action.or.group.cannot.resolve=Cannot resolve {0} ''{1}''
plugin.xml.convert.action.or.group.type.action.or.group=action or group
plugin.xml.convert.action.or.group.type.action=action
plugin.xml.convert.action.or.group.type.group=group

plugin.xml.convert.enum.cannot.resolve=Cannot resolve ''{0}'' in {1}
plugin.xml.convert.extension.order.cannot.resolve=Cannot resolve '''''{'0'}''''' {0}extension
plugin.xml.convert.extension.property.cannot.resolve=Cannot resolve extension point property ''{0}''
plugin.xml.convert.property.bundle.cannot.resolve=Cannot resolve property bundle
plugin.xml.convert.keymap.cannot.resolve=Cannot resolve keymap ''{0}''
plugin.xml.convert.language.id.cannot.resolve=Cannot resolve language with id ''''{0}''''

# code resolving
code.convert.experimental.feature.id.cannot.resolve=Cannot resolve feature ''{0}''
code.convert.registry.key.cannot.resolve=Cannot resolve registry key ''{0}''
inspections.unregistered.named.color.fix.navigate.theme.metadata.file=Navigate to Theme metadata file
inspections.unregistered.named.color.fix.navigate.theme.metadata.file.popup.title=Theme Metadata Files


plugin.xml.scopes.display.name=Plugin Descriptor Files
plugin.xml.scopes.production.display.name=All Production Plugin Descriptor Files

# registry.properties
registry.properties.annotator.plugin.keys.use.ep=Plugin specific keys should be registered via 'com.intellij.registryKey' EP
registry.properties.annotator.key.no.description.key=Key ''{0}'' does not have description key
registry.properties.annotator.show.ep.family.name=Show EP declaration
registry.properties.annotator.show.ep.name=Show EP declaration for ''{0}
registry.properties.annotator.show.ep.message=Copy this declaration into your plugin descriptor XML
registry.properties.annotator.show.ep.title=EP declaration
registry.properties.annotator.add.description.text=Add description key for ''{0}''
registry.properties.annotator.add.description.family.name=Add description key
action.darcula.hidpi.theme.text=Darcula HiDPI
action.darcula.theme.text=Darcula
action.default.hidpi.theme.text=Default HiDPI
action.default.theme.text=Default

# DOM model Generator
dom.generator.dialog.title=Generate DOM Model From XSD or DTD
dom.generator.generate.button=Generate
dom.generator.dialog.choose.scheme.label=Choose XSD or DTD Schema
dom.generator.dialog.folder.browser.description=Make sure there are only necessary schemes in directory where your XSD or DTD schema is located
dom.generator.dialog.folder.output=Select Output Directory For Generated Files
dom.generator.dialog.error.schema.not.exist=Schema location doesn't exist
dom.generator.dialog.error.output.not.exist=Output dir doesn't exist
inspections.use.dpi.aware.empty.border.simplify=Simplify
inspections.use.dpi.aware.empty.border.family.name=Simplify
inspections.use.dpi.aware.empty.border.replace=Replace with JBUI.Borders.empty(...)
inspections.use.dpi.aware.empty.border.convert.fix.family.name=Convert to JBUI.Borders.empty(...)


plugin.descriptor.chooser.cannot.find=Cannot find plugin descriptor
plugin.descriptor.chooser.popup.title=Choose Plugin Descriptor

register.extension.fix.name=Register extension
register.extension.fix.popup.title=Choose Extension Point
register.inspection.fix.family.name=Register inspection
register.inspection.fix.name=Register inspection ''{0}''

inspections.non.default.warning.and.suffix.message={0} should not have constructor with parameters {1}
inspections.non.default.warning.suffix.project.or.module=(except Project or Module if requested on corresponding level)
inspections.non.default.warning.suffix.project=(except Project)
inspections.non.default.warning.suffix.module=(except Module)

extension.point.analyzer.not.extension.point.name=Not an ExtensionPointName reference
extension.point.analyzer.analyze.title=Analyzing EP usages
extension.point.analyzer.analyze.no.usages=No usages found
extension.point.analyzer.analyze.usage.all.safe=All usages are dynamic-safe
extension.point.analyzer.analyze.xml.not.extension.point=Not an <extensionPoint>
extension.point.analyzer.analyze.xml.cannot.resolve.ep.class=Can't resolve class for EP
extension.point.analyzer.analyze.xml.no.implementation.language.extension.point=Can't find implementation class for LanguageExtensionPoint
extension.point.analyzer.analyze.xml.batch.not.extension.points=Not an <extensionPoints>
extension.point.analyzer.analyze.xml.batch.title=Analyzing extension points
extension.point.analyzer.analyze.xml.no.extension.point.name.field=Can't find ExtensionPointName field
extension.point.analyzer.reason.no.ep.field=No EP field
extension.point.analyzer.reason.unknown.usage=Unknown usage of ExtensionPoint
extension.point.analyzer.reason.call.not.loop.value=Call is not loop's iterated value
extension.point.analyzer.reason.impure.method={0} passed to impure method, side-effect is possible (annotate as ''@Contract(pure = true)'' if this should not be so)
extension.point.analyzer.reason.unresolved.method.call=Unresolved method call
extension.point.analyzer.reason.too.many.visited.objects=Too many visited objects, search stopped
extension.point.analyzer.reason.get.instance.method.skipped=Returned from 'getInstance' method (too expensive to search call sites)
extension.point.analyzer.reason.leak.returned.from.method={0}: returned from method ''{1}'' and leaks after that
extension.point.analyzer.reason.unknown.usage.text={0}: Unknown usage
extension.point.analyzer.reason.uast.no.source.psi={0}: UVariable has no source PSI

