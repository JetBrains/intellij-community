action.text.show.all.submitted=Show all files changed by this commit
add.action.name=Add
add.adding=Adding files...
annotate.action.name=Annotate
changes.retrieving=Retrieving changes for revision {0}
checking.out=Checkout {0}
commit.action.name=Comm&it
commit.author.diffs=<html>Author differs from default</html>
commit.author=&Author:
commit.partial.merge.message=Partial commit during a {0} is not allowed.\n\
  The following files are not included in commit.\n\
  Perform commit with all files included?
commit.partial.merge.title=Partial Merge Commit
common.current.branch.tooltip=The currently checked out branch.
common.current.branch=Current Branch:
common.git.root.tooltip=Select Git VCS root
common.git.root=Git &Root:
common.no.active.branch=<no active branch>
common.refreshing=Refreshing Files
computing.annotation=Computing annotation for {0}
diff.find.error=Finding revision for diff: {0}
error.dialog.title=Error
error.list.title={0} Error:
error.occurred.during=Error occurred during ''{0}''
errors.message.item=\n   {0}
errors.message=The Git operation ended with multiple errors:{0}

# suppress inspection "UnusedProperty": used by 3-party plugins
find.git.unsupported.message=<html><tt>{0}</tt><br>This version is unsupported, and some plugin functionality could fail to work.<br>The minimal supported version is <em>{1}</em>.</html>

git.error.exit=The Git process exited with the code {0}
git.running=Running: {0}

init.destination.directory.description=Select directory where the new Git repository will be created.
init.destination.directory.title=Create Git Repository
init.warning.already.under.git=<html>The selected directory <tt>{0}</tt> is already under Git.<br/>Are you sure that you want to create a new VCS root?</html>
init.warning.title=Git Init
initializing.title=Initializing repository...
merge.action.name=Merge
merge.add.log.information.tooltip=Add log information to the commit message (\"--log\" option)
merge.add.log.information=Add &log information
merge.branch.button=Merge
merge.branch.title=Merge Branches
merge.branches.tooltip=<html>The chooser for branches. Select one or more branches to merge (already merged branches are not shown)</html>.
merge.branches=&Branches to merge:
merge.commit.message.tooltip=The message for the merge commit in case one is created (\"-m\" option).
merge.commit.message=Commit &Message
merge.default.strategy=<default>
merge.no.commit.tooltip=Force no commit for merge (the \"--no-commit\" option)
merge.no.commit=No &commit
merge.no.fast.forward.tooltip=Disable fast forward (\"--no-ff\" option)
merge.no.fast.forward=No &fast forward
merge.retrieving.branches=Retrieving unmerged branches
merge.squash.commit=S&quash commit
merge.squash.tooltip=Squash all changes into the single commit (\"--squash\" option)
merge.strategy.tooltip=The merge strategy to use (\"-s\" option)
merge.strategy=&Strategy:
merge.tool.column.status.deleted=Deleted
merge.tool.column.status.modified=Modified
merge.tool.column.theirs.status=Theirs
merge.tool.column.yours.status=Yours
merging.title=Merging changes to {0}
paths.affected.title=Paths affected in commit {0}
pull.action.name=Pull
pull.button=Pull
pull.get.branches.tooltip=Get branch names from remote repository. Otherwise a locally cached information is used.
pull.getting.remote.branches=Getting Remote Branches...
pull.remote.tooltip=Registered remote name or URL.
pull.remote=Re&mote:
pull.title=Pull Changes
pulling.title=Pulling changes from {0}
operation.action.message=Multiple Git roots have unfinished {0} process, please select root to perform action on.
rebase.branch.tooltip=Select branch to rebase (if branch is different from the current branch, it will be checked out first)
rebase.branch=&Branch:
rebase.button=Rebase
rebase.editor.action.column=Action
rebase.editor.button=Start Rebasing
rebase.editor.comment.column=Comment
rebase.editor.commit.column=Commit
rebase.editor.invalid.entryset=No commits found to rebase
rebase.editor.invalid.squash=The first non-skip commit can''t be marked as {0} since it merges commit with the previous commit.
rebase.editor.discard.modifications.message=Discard changes and cancel rebase anyway?
rebase.editor.title=Rebasing Commits
rebase.from.tooltip=Specify actual base for the branch. Leave blank to onto.
rebase.from=&From:
rebase.in.progress=Interactive rebase has been already started for this Git root.
rebase.interactive.tooltip=If selected, the interactive rebase will be performed.
rebase.interactive=&Interactive
rebase.invalid.from=\"From\" reference expression is invalid.
rebase.invalid.onto=\"Onto\" reference expression is invalid.
rebase.onto.tooltip=The reference that will become a new base for selected branch.
rebase.onto.validate=&Validate
rebase.onto=&Onto:
rebase.preserve.merges.tooltip=Preserve merges during rebase instead of squashing them.
rebase.preserve.merges=&Preserve Merges
rebase.show.tags.tooltip=Show tags in \"from\" and \"onto\" comboboxes.
rebase.title=Rebase Branch
rebase.valdate.onto.tooltip=Validate "onto" reference.
rebase.validate.from.tooltip=Validate \"from\" reference
rebase.validate.from=Va&lidate
regase.show.tags=Show &tags
remove.removing=Removing files...
repository.action.missing.roots.misconfigured=None of configured Git roots are under Git. The configured directory must have ".git" directory in it.
repository.action.missing.roots.title=No Git Roots
repository.action.missing.roots.unconfigured.message=No Git roots are configured for the project.
reset.action.name=Reset Head ...
reset.button=Reset
reset.commit.invalid=The specified commit expression did not pass validation.
reset.commit.label=To &Commit:
reset.commit.tooltip=The commit that will become the current HEAD\n as result of reset operation.
reset.title=Reset Head
reset.type.hard=Hard
reset.type.mixed=Mixed
reset.type.soft=Soft
reset.type.tooltip=<html>The reset type (see also <code>git reset</code> man page):<ul><li><b>Mixed</b> resets index but not working tree</li><li><b>Soft</b> leaves index and working tree, just moves head pointer</li><li><b>Hard</b> resets index and working tree.<em>Changes in the working tree will be lost</em></li></ul></html>
reset.type=Reset &Type:
reset.validate=&Validate
resetting.title=Resetting HEAD...
ssh.ask.passphrase.title=SSH Key Passphrase
ssh.ask.passphrase.message=Password for the SSH key "{0}":
ssh.changed.host.key=<html>The server host key for the host {0}:{1} has changed to {2} (type {3}).\nDo you want to accept the changed key?</html>
ssh.confirm.key.titile=Confirm SSH Server Key
ssh.error.title=Authentication Error
ssh.keyboard.interactive.title=SSH Keyboard Interactive
ssh.keyboard.interactive.username=Username:
ssh.new.host.key=<html>Connecting to a new host {0}:{1,number,#} that has the key {2} (type {3}).\nDo you want to add this host to known hosts database?</html>
ssh.password.message=Password for user {0}:
ssh.password.title=SSH Password Login
stash.action.name=Stash
stash.button=Create Stash
stash.keep.index.tooltip=If this checkbox is selected, indexed changes are kept in the index.
stash.keep.index=Keep &index
stash.message.tooltip=Enter stash message here.
stash.message=&Message:
stash.title=Stash
stashing.title=Stashing Changes...
tag.action.name=Tag
tag.button=Create Tag
tag.commit.label=&Commit:
tag.commit.tooltip=Enter name of commit or object to tag or leave blank to use HEAD.
tag.error.creating.message.file.message=Unable to create message file: {0}
tag.error.invalid.commit=The commit or object name is invalid.
tag.error.tag.exists=The tag with the same name exists.
tag.force.tooltip=Force creation of the tag even if another tag with such name already exists.
tag.force=&Force
tag.getting.existing.tags=Getting Existing Tags...
tag.message.label=&Message:
tag.message.tooltip=If the message is not empty, an annotated tag is created.
tag.name.label=Tag &Name:
tag.name.tooltip=Enter the new tag name here.
tag.title=Tag
tag.validate.tooltip=Click this button to validate the commit to be tagged
tag.validate=&Validate
unstash.action.name=UnStash
unstash.branch.label\:=As new &branch:
unstash.branch.tooltip=If non-empty name is entered, the stash is checked out as a new branch.
unstash.button.apply=Apply Stash
unstash.button.branch=Branch
unstash.button.pop=Pop Stash
unstash.clear.tooltip=Delete all stashes in the repository.
unstash.clear=&Clear
unstash.clearing.stashes=Clearing Stashes...
unstash.drop.tooltip=Delete selected stash
unstash.drop=&Drop
unstash.pop.stash.tooltip=If selected the stash is dropped after it is applied.
unstash.pop.stash=&Pop stash
unstash.reinstate.index.tooltip=Attempt to reinstate index as well as working tree changes.
unstash.reinstate.index=Reinstate &index
unstash.stashes=&Stashes:
unstash.title=UnStash Changes
unstash.unstashing=Unstashing...
unstash.view.tooltip=View selected stash
unstash.view=&View
update.options.display.name=Git Update Settings
update.options.save.before.update=Clean working tree before update
update.options.save.shelve.tooltip=Use {0}''s Shelve to save changes (the files will be restored after update)
update.options.save.shelve=Using She&lve
update.options.save.stash.tooltip=Use Git Stash to save changes (the files will be restored after update)
update.options.save.stash=Using S&tash
update.options.type.default.tooltip=Use branch default update strategy for all updated Git VCS roots
update.options.type.default=Branch &Default
update.options.type.merge.tooltip=Use merge update strategy for all Git VCS roots
update.options.type.merge=&Merge
update.options.type.rebase.tooltip=Use rebase update strategy for all Git VCS roots
update.options.type.rebase=&Rebase
update.options.type=Update Type
util.remote.renderer.none=<html><i>None</i></html>
util.remote.renderer.self=<html><i>Current repository</i></html>
vfs.listener.add.single.prompt=Do you want to add the following file to Git?\n{0}\n\nIf you choose Cancel, you can still add it later manually.
vfs.listener.add.single.title=Add File to Git
vfs.listener.add.title=Add Files to Git
vfs.listener.checking.ignored=Checking for Ignored Files...
vfs.listener.delete.single.prompt=Do you want to delete the following file from Git?\n{0}\n\nIf you choose Cancel, you can still delete it later manually.
vfs.listener.delete.single.title=Delete File from Git
vfs.listener.delete.title=Delete Files from Git

git.commit.message.empty=Please specify commit message
git.commit.message.empty.title=Commit Message Is Empty

git.executable.version.progress.title=Identifying Git Version
git.executable.version.success.title=Git Executed Successfully
git.executable.version.is=Git version is {0}

git.executable.validation.error.start.title=Cannot Run Git
git.executable.validation.error.version.title=Unsupported Git Version {0}
git.executable.validation.error.version.message=At least {0} is required
git.executable.validation.error.xcode.title=Accept XCode/iOS License to Run Git
git.executable.validation.error.xcode.message=Run \u201Csudo xcodebuild -license\u201D and retry (admin rights required)
git.executable.validation.error.action.setting=Configure...
git.executable.validation.error.action.download=Download
git.executable.validation.error.action.download.link=https://git-scm.com/download

git.executable.notification.title=Can't start Git
git.executable.notification.description=The path to Git executable is probably not valid.
git.unstash.clear.confirmation.message=Remove all stashes? This cannot be undone.
git.unstash.clear.confirmation.title=Remove All Stashes?
git.unstash.drop.confirmation.message=<html>Do you want to remove {0}?<br/>"{1}"</html>
git.unstash.drop.confirmation.title=Remove Stash {0}?
vcs.history.action.gitlog=Show in Git Log

# suppress inspection "UnusedProperty": used by ExportSettingsActionKt
exportable.Git.Application.Settings.presentable.name=Git

confirmation.message.force.add.dir=The following directory may contain ignored files. Do you want to force add it?\n{0}
confirmation.title.force.add.dir=Confirm Force Add Directory
confirmation.title.force.add.dirs=Confirm Force Add Directories