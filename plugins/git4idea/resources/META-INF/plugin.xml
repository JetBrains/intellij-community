<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <name>Git Integration</name>
  <id>Git4Idea</id>
  <description>
      <![CDATA[
      Allows working with <a href="http://git-scm.com/">Git version control system</a>.
      The following features are available:
        <ul>
        <li>Dedicated page under the Version Control node in the Settings/Preferences dialog.</li>
        <li>Ability to browse, check out sources from and import into the available Git repositories, when Git is not enabled.</li>
        <li>When Git is enabled, the Git node appears on the VCS menu, and on the context menu of the editor.</li>
        </ul>
         <p>Numerous plugins depend on the Git Integration plugin.</p>
      ]]>
   </description>
  <category>VCS Integration</category>
  <vendor>JetBrains</vendor>

  <resource-bundle>git4idea.i18n.GitBundle</resource-bundle>

  <depends>com.intellij.modules.vcs</depends>
  <xi:include href="/META-INF/remote-servers-git.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/remote-servers-git-java.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>

  <actions>

    <action id="Git.Init" class="git4idea.actions.GitInit" text="Create Git Repository...">
      <add-to-group group-id="Vcs.Import"/>
      <add-to-group group-id="Vcs.Operations.Popup.NonVcsAware" relative-to-action="Start.Use.Vcs" anchor="before"/>
    </action>

    <action id="Git.Log" class="git4idea.log.GitShowExternalLogAction" text="Show Git Repository Log...">
      <add-to-group group-id="Vcs.Browse"/>
    </action>

    <action class="git4idea.log.GitShowCommitInLogAction" id="Git.SelectInGitLog"/>
    <action class="git4idea.log.GitBrowseRepoAtRevisionAction" id="Git.BrowseRepoAtRevision"/>

    <action class="git4idea.actions.GitCheckoutRevisionAction" id="Git.CheckoutRevision" text="Checkout Revision"/>
    <group class="git4idea.ui.branch.GitLogBranchOperationsActionGroup" id="Git.BranchOperationGroup"/>
    <action class="git4idea.actions.GitCreateNewBranchAction" id="Git.CreateNewBranch" text="New Branch..."
            description="Create new branch starting from the selected commit"/>
    <action class="git4idea.actions.GitCreateTagAction" id="Git.CreateNewTag" text="New Tag..."
            description="Create new tag pointing to this commit"/>
    <action id="Git.Reset.In.Log" class="git4idea.reset.GitResetAction" text="Reset Current Branch to Here..." icon="AllIcons.Actions.Rollback"/>
    <action id="Git.Revert.In.Log" class="git4idea.revert.GitRevertAction" text="Revert Commit"
            description="Produce a new commit, which reverts the changes made in the original commit"/>
    <action id="Git.Uncommit" class="git4idea.reset.GitUncommitAction" text="Undo Commit..."
            description="Undo last commit and put its changes into selected changelist"/>
    <action id="Git.Reword.Commit" class="git4idea.rebase.GitRewordAction" text="Reword..."
            description="Change commit message" />
    <action id="Git.Fixup.To.Commit" class="git4idea.rebase.GitCommitFixupBySubjectAction" text="Fixup..."
            description="Create a fixup commit"/>
    <action id="Git.Squash.Into.Commit" class="git4idea.rebase.GitCommitSquashBySubjectAction" text="Squash Into..."
            description="Create a squash commit"/>
    <action id="Git.Interactive.Rebase" class="git4idea.rebase.GitInteractiveRebaseAction" text="Interactively Rebase from Here..."
            description="Show the dialog for interactive rebase which allows to squash, fixup, reorder, remove and reword commits" />
    <action id="Git.Commit.And.Push.Executor" class="git4idea.actions.GitCommitAndPushExecutorAction" text="Commit and &amp;Push...">
      <add-to-group group-id="Vcs.CommitExecutor.Actions"/>
      <keyboard-shortcut first-keystroke="control alt K" keymap="$default"/>
    </action>

    <group id="GitFileActions">
      <reference ref="CheckinFiles"/>
      <action id="Git.Add" class="git4idea.actions.GitAdd" text="Add" icon="AllIcons.General.Add" use-shortcut-of="ChangesView.AddUnversioned" />
      <separator/>
      <reference ref="Annotate"/>
      <reference ref="Show.Current.Revision"/>
      <reference ref="Compare.SameVersion"/>
      <reference ref="Compare.Selected"/>
      <action id="Git.CompareWithBranch" class="git4idea.actions.GitCompareWithBranchAction" text="Compare with Branch..." />
      <reference ref="Vcs.ShowTabbedFileHistory"/>
      <reference id="Vcs.ShowHistoryForBlock"/>
      <separator/>
      <reference id="ChangesView.Revert" />
      <action id="Git.ResolveConflicts" class="git4idea.actions.GitResolveConflictsAction" text="Resolve Conflicts..."/>
    </group>

    <group id="GitRepositoryActions">
      <action id="Git.Branches" class="git4idea.ui.branch.GitBranchesAction" text="_Branches..." icon="AllIcons.Vcs.Branch">
        <keyboard-shortcut first-keystroke="control shift BACK_QUOTE" keymap="$default" />
        <keyboard-shortcut first-keystroke="meta shift BACK_QUOTE" keymap="Mac OS X" remove="true" />
        <keyboard-shortcut first-keystroke="meta shift BACK_QUOTE" keymap="Mac OS X 10.5+" remove="true" />
      </action>
      <action id="Git.Tag" class="git4idea.actions.GitTag" text="Tag..."/>
      <action id="Git.Merge" class="git4idea.actions.GitMerge" text="Merge Changes..." icon="AllIcons.Actions.ShowAsTree"/>
      <action id="Git.Stash" class="git4idea.actions.GitStash" text="Stash Changes..."/>
      <action id="Git.Unstash" class="git4idea.actions.GitUnstash" text="UnStash Changes..."/>
      <action id="Git.Reset" class="git4idea.actions.GitResetHead" text="Reset HEAD..." icon="AllIcons.Actions.Rollback"/>
      <separator/>
      <action id="Git.Configure.Remotes" class="git4idea.remote.GitConfigureRemotesAction" text="Remotes..." />
      <action id="Git.Clone" class="git4idea.actions.GitCloneAction" text="Clone..." />
      <action id="Git.Fetch" class="git4idea.actions.GitFetch" text="Fetch"/>
      <action id="Git.Pull" class="git4idea.actions.GitPull" text="Pull..." icon="AllIcons.Actions.CheckOut"/>
      <reference ref="Vcs.Push"/>
      <separator/>
      <action id="Git.Rebase" class="git4idea.actions.GitRebase" text="Rebase..."/>
      <action id="Git.Rebase.Abort" class="git4idea.actions.GitRebaseAbort" text="Abort Rebase"/>
      <action id="Git.Rebase.Continue" class="git4idea.actions.GitRebaseContinue" text="Continue Rebase"/>
      <action id="Git.Rebase.Skip" class="git4idea.actions.GitRebaseSkip" text="Skip Commit"/>
    </group>

    <group id="Git.Menu" class="git4idea.actions.GitMenu" popup="true" text="_Git">
      <reference ref="GitFileActions"/>
      <separator/>
      <reference ref="GitRepositoryActions"/>

      <add-to-group group-id="VcsGlobalGroup" anchor="after" relative-to-action="Vcs.Specific"/>
    </group>

    <group id="Git.ContextMenu" class="git4idea.actions.GitMenu" popup="true" text="_Git">
      <reference ref="GitFileActions"/>
      <separator/>
      <group id="Git.RepositoryContextMenu" popup="true" text="_Repository">
        <reference ref="GitRepositoryActions"/>
      </group>
      <add-to-group group-id="VcsGroup" anchor="last"/>
    </group>

    <group id="Git.LogContextMenu">
      <separator/>
    </group>

    <group id="Git.FileHistory.ContextMenu">
      <reference id="Git.SelectInGitLog"/>
      <separator/>
      <reference id="Git.Revert.In.Log" />
      <separator/>
      <add-to-group group-id="Vcs.FileHistory.ContextMenu" relative-to-action="VcsHistoryActionsGroup" anchor="before"/>
    </group>

    <group id="Git.Log.ContextMenu">
      <separator/>
      <reference id="Git.CheckoutRevision"/>
      <reference id="Git.BrowseRepoAtRevision"/>
      <separator/>
      <reference id="Git.Reset.In.Log"/>
      <reference id="Git.Revert.In.Log"/>
      <reference id="Git.Uncommit"/>
      <separator/>
      <reference id="Git.Reword.Commit"/>
      <reference id="Git.Fixup.To.Commit" />
      <reference id="Git.Squash.Into.Commit" />
      <reference id="Git.Interactive.Rebase"/>
      <separator/>
      <reference id="Git.BranchOperationGroup"/>
      <reference id="Git.CreateNewBranch"/>
      <reference id="Git.CreateNewTag"/>
      <separator/>

      <add-to-group group-id="Vcs.Log.ContextMenu"/>
    </group>

    <group id="Git.Log.Toolbar">
      <action id="Git.Log.DeepCompare" class="git4idea.branch.DeepCompareAction" text="Non-Picked Commits"
              description="Dims those commits which have equivalent changes in the current branch"/>
      <add-to-group group-id="Vcs.Log.PresentationSettings" relative-to-action="Vcs.Log.HighlightersActionGroup" anchor="after"/>
    </group>


  </actions>

  <extensions defaultExtensionNs="com.intellij">
    <search.topHitProvider implementation="git4idea.config.GitOptionsTopHitProvider"/>
    <vcs name="Git" vcsClass="git4idea.GitVcs" displayName="Git" administrativeAreaName=".git"/>
    <checkoutProvider implementation="git4idea.checkout.GitCheckoutProvider"/>
    <vcs.checkoutProcessor implementation="git4idea.checkout.GitCheckoutProcessor"/>
    <vcsRootChecker implementation="git4idea.roots.GitRootChecker"/>
    <vcsIgnoreChecker implementation="git4idea.ignore.GitIgnoreChecker"/>
    <vcsRepositoryCreator implementation="git4idea.repo.GitRepositoryCreator"/>
    <vcsPopupProvider implementation="git4idea.actions.GitQuickListContentProvider"/>
    <vcsCheckinHandlerFactory implementation="git4idea.checkin.GitCheckinHandlerFactory"/>
    <vcsCheckinHandlerFactory implementation="git4idea.rebase.GitRebaseCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="git4idea.checkin.GitSkipHooksCommitHandlerFactory" order="last"/>
    <unresolvedMergeCheckProvider implementation="git4idea.checkin.GitUnresolvedMergeCheckProvider"/>
    <logProvider implementation="git4idea.log.GitLogProvider"/>
    <vcsChangesViewRefresher implementation="git4idea.changes.GitChangesViewRefresher" />
    <vcs.branchStateProvider implementation="git4idea.branch.GitBranchStateProvider"/>
    <pushSupport implementation="git4idea.push.GitPushSupport"/>
    <cherryPicker implementation="git4idea.cherrypick.GitCherryPicker"/>
    <vcsAnnotationGutterActionProvider implementation="git4idea.actions.GitToggleAnnotationOptionsActionProvider" />
    <vcsAnnotationGutterActionProvider implementation="git4idea.actions.GitShowCommitInLogAnnotationGutterActionProvider" />
    <statistics.projectUsagesCollector implementation="git4idea.GitStatisticsCollector"/>
    <statistics.projectUsagesCollector implementation="git4idea.GitProjectMigrationStatisticsCollector"/>
    <vcsRepositoryInitializer implementation="git4idea.repo.GitRepositoryInitializer"/>
    <openapi.vcs.changes.actions.diff.ChangeDiffRequestProvider
        implementation="git4idea.diff.GitSubmoduleDiffRequestProvider"/>
    <vcsChangesViewRefresher implementation="git4idea.ignore.GitIgnoredFilesHolder$Provider"/>
    <vcs.ignoredFilesHolder implementation="git4idea.ignore.GitIgnoredFilesHolder$Provider"/>

    <projectService serviceImplementation="git4idea.repo.GitRepositoryManager"/>
    <projectService serviceImplementation="git4idea.ui.branch.GitBranchManager"/>
    <projectService serviceImplementation="git4idea.branch.GitBranchIncomingOutgoingManager"/>
    <projectService
        serviceInterface="git4idea.annotate.GitAnnotationProvider"
        serviceImplementation="git4idea.annotate.GitAnnotationProvider"/>
    <projectService
        serviceInterface="git4idea.diff.GitDiffProvider"
        serviceImplementation="git4idea.diff.GitDiffProvider"/>
    <projectService
        serviceInterface="git4idea.checkin.GitCheckinEnvironment"
        serviceImplementation="git4idea.checkin.GitCheckinEnvironment"/>
    <projectService
        serviceInterface="git4idea.status.GitChangeProvider"
        serviceImplementation="git4idea.status.GitChangeProvider"/>
    <projectService
        serviceInterface="git4idea.history.GitHistoryProvider"
        serviceImplementation="git4idea.history.GitHistoryProvider"/>
    <projectService
        serviceInterface="git4idea.rollback.GitRollbackEnvironment"
        serviceImplementation="git4idea.rollback.GitRollbackEnvironment"/>
    <projectService
        serviceInterface="git4idea.config.GitVcsSettings"
        serviceImplementation="git4idea.config.GitVcsSettings"/>
    <projectService serviceImplementation="git4idea.config.GitRebaseSettings"/>
    <projectService serviceImplementation="git4idea.config.GitSharedSettings" />
    <projectService
        serviceInterface="git4idea.config.GitExecutableValidator"
        serviceImplementation="git4idea.config.GitExecutableValidator"/>
    <projectService serviceImplementation="git4idea.util.GitVcsConsoleWriter"/>
    <projectService serviceInterface="git4idea.branch.GitBrancher"
                    serviceImplementation="git4idea.branch.GitBrancherImpl"/>
    <projectService serviceImplementation="git4idea.GitUserRegistry" />
    <projectService serviceImplementation="git4idea.branch.DeepComparatorHolder"/>
    <projectService serviceInterface="git4idea.config.GitExecutableProblemsNotifier"
                    serviceImplementation="git4idea.config.GitExecutableProblemsNotifier"/>
    <projectService serviceInterface="git4idea.fetch.GitFetchSupport" serviceImplementation="git4idea.fetch.GitFetchSupportImpl" />

    <applicationService serviceInterface="git4idea.config.GitVcsApplicationSettings"
                        serviceImplementation="git4idea.config.GitVcsApplicationSettings"/>
    <applicationService serviceInterface="org.jetbrains.git4idea.ssh.GitXmlRpcSshService"
                        serviceImplementation="org.jetbrains.git4idea.ssh.GitXmlRpcSshService"/>
    <applicationService serviceInterface="org.jetbrains.git4idea.ssh.GitXmlRpcNativeSshService"
                        serviceImplementation="org.jetbrains.git4idea.ssh.GitXmlRpcNativeSshService"/>
    <applicationService serviceInterface="git4idea.commands.GitHttpAuthService"
                        serviceImplementation="git4idea.commands.GitHttpAuthServiceImpl" />
    <applicationService serviceInterface="git4idea.rebase.GitRebaseEditorService"
                        serviceImplementation="git4idea.rebase.GitRebaseEditorService"/>
    <applicationService serviceInterface="git4idea.config.SSHConnectionSettings"
                        serviceImplementation="git4idea.config.SSHConnectionSettings"/>
    <applicationService serviceInterface="git4idea.remote.GitRememberedInputs"
                        serviceImplementation="git4idea.remote.GitRememberedInputs"/>
    <applicationService serviceInterface="git4idea.commands.Git"
                        serviceImplementation="git4idea.commands.GitImpl"/>
    <applicationService serviceImplementation="git4idea.config.GitExecutableManager"/>
    <applicationService serviceInterface="git4idea.GitPlatformFacade"
                        serviceImplementation="git4idea.GitPlatformFacadeImpl" />
    <applicationService serviceInterface="git4idea.DialogManager"
                        serviceImplementation="git4idea.DialogManager" />
    <applicationService serviceImplementation="git4idea.log.GitExternalLogTabsProperties"/>

    <fileTypeFactory implementation="git4idea.vfs.GitFileTypeFactory"/>
    <vcs.taskHandler implementation="git4idea.GitTaskHandler"/>

    <logHighlighterFactory implementation="git4idea.branch.DeepComparator$Factory"/>

    <ignoredFileContentProvider implementation="git4idea.ignore.GitIgnoredFileContentProvider"/>
    <openapi.vcs.changes.vcsPreservingExecutor implementation="git4idea.util.GitPreservingExecutor"/>
    <actionPromoter implementation="git4idea.actions.GitActionPromoter"/>
  </extensions>

  <extensionPoints>
    <extensionPoint qualifiedName="Git4Idea.GitHttpAuthDataProvider" interface="git4idea.remote.GitHttpAuthDataProvider"/>
    <extensionPoint qualifiedName="Git4Idea.gitRepositoryHostingService" interface="git4idea.remote.GitRepositoryHostingService"/>
    <extensionPoint qualifiedName="com.intellij.vcs.git.pushCustomizationFactory"
                    interface="git4idea.push.GitPushProcessCustomizationFactory" />
    <extensionPoint qualifiedName="Git4Idea.GitCheckinExplicitMovementProvider" interface="git4idea.checkin.GitCheckinExplicitMovementProvider"/>
  </extensionPoints>
</idea-plugin>
