<root>
  <item name='org.eclipse.jgit.api.CheckoutCommand org.eclipse.jgit.api.CheckoutCommand setAllPaths(boolean)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.CheckoutCommand org.eclipse.jgit.api.CheckoutCommand setCreateBranch(boolean)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.CheckoutCommand org.eclipse.jgit.api.CheckoutCommand setName(java.lang.String)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.CheckoutCommand org.eclipse.jgit.api.CheckoutCommand setStartPoint(java.lang.String)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.CheckoutCommand org.eclipse.jgit.api.CheckoutResult getResult()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.CloneCommand org.eclipse.jgit.api.CloneCommand setURI(java.lang.String) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.CommitCommand org.eclipse.jgit.api.CommitCommand setAuthor(org.eclipse.jgit.lib.PersonIdent)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.CommitCommand org.eclipse.jgit.api.CommitCommand setCommitter(org.eclipse.jgit.lib.PersonIdent)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.CommitCommand org.eclipse.jgit.api.CommitCommand setMessage(java.lang.String)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.CommitCommand org.eclipse.jgit.api.CommitCommand setMessage(java.lang.String) 0'>
    <annotation name='org.jetbrains.annotations.Nullable'/>
  </item>
  <item name='org.eclipse.jgit.api.CommitCommand org.eclipse.jgit.api.CommitCommand setReflogComment(java.lang.String)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.CommitCommand org.eclipse.jgit.revwalk.RevCommit call()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.Git org.eclipse.jgit.api.CheckoutCommand checkout()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.Git org.eclipse.jgit.api.CommitCommand commit()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.Git org.eclipse.jgit.api.ResetCommand reset()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.Git org.eclipse.jgit.api.TagCommand tag()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.Git org.eclipse.jgit.lib.Repository getRepository()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item
      name='org.eclipse.jgit.api.MergeResult MergeResult(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.api.MergeResult.MergeStatus, org.eclipse.jgit.merge.MergeStrategy, java.util.Map&lt;java.lang.String,org.eclipse.jgit.merge.MergeResult&lt;?&gt;&gt;)'>
    <annotation name='kotlin.jvm.KotlinSignature'>
      <val name="value"
           val="&quot;fun MergeResult(newHead: ObjectId?, base: ObjectId?, mergedCommits: Array&lt;out ObjectId?&gt;?, mergeStatus: MergeResult.MergeStatus?, mergeStrategy: MergeStrategy?, lowLevelResults: Map&lt;String, MergeResult&lt;out Sequence?&gt;&gt;?)&quot;"/>
    </annotation>
  </item>
  <item
      name='org.eclipse.jgit.api.MergeResult MergeResult(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.api.MergeResult.MergeStatus, org.eclipse.jgit.merge.MergeStrategy, java.util.Map&lt;java.lang.String,org.eclipse.jgit.merge.MergeResult&lt;?&gt;&gt;) 2'>
    <annotation name='org.jetbrains.annotations.Nullable'/>
  </item>
  <item name='org.eclipse.jgit.api.MergeResult org.eclipse.jgit.api.MergeResult.MergeStatus getMergeStatus()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.MergeResult org.eclipse.jgit.lib.ObjectId[] getMergedCommits()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.ResetCommand org.eclipse.jgit.api.ResetCommand setMode(org.eclipse.jgit.api.ResetCommand.ResetType)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.ResetCommand org.eclipse.jgit.api.ResetCommand setMode(org.eclipse.jgit.api.ResetCommand.ResetType) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.ResetCommand org.eclipse.jgit.lib.Ref call()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.api.TransportCommand C setCredentialsProvider(org.eclipse.jgit.transport.CredentialsProvider) 0'>
    <annotation name='org.jetbrains.annotations.Nullable'/>
  </item>
</root>
