<root>
  <item name='org.eclipse.jgit.transport.CredentialsProvider boolean get(org.eclipse.jgit.transport.URIish, java.util.List&lt;org.eclipse.jgit.transport.CredentialItem&gt;) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.transport.CredentialsProvider boolean get(org.eclipse.jgit.transport.URIish, java.util.List&lt;org.eclipse.jgit.transport.CredentialItem&gt;) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.transport.CredentialsProvider boolean get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)'>
    <annotation name='kotlin.jvm.KotlinSignature'>
      <val name="value" val="&quot;fun get(uri: URIish, vararg items: CredentialItem): Boolean&quot;"/>
    </annotation>
  </item>
  <item name='org.eclipse.jgit.transport.CredentialsProvider boolean get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.transport.CredentialsProvider boolean supports(org.eclipse.jgit.transport.CredentialItem...)'>
    <annotation name='kotlin.jvm.KotlinSignature'>
      <val name="value" val="&quot;fun supports(vararg items: CredentialItem): Boolean&quot;"/>
    </annotation>
  </item>
  <item name='org.eclipse.jgit.transport.CredentialsProvider boolean supports(org.eclipse.jgit.transport.CredentialItem...) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.transport.CredentialsProvider void reset(org.eclipse.jgit.transport.URIish) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.transport.OperationResult java.util.Collection&lt;org.eclipse.jgit.transport.TrackingRefUpdate&gt; getTrackingRefUpdates()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.transport.PushResult java.util.Collection&lt;org.eclipse.jgit.transport.RemoteRefUpdate&gt; getRemoteUpdates()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.transport.RemoteConfig java.util.List&lt;org.eclipse.jgit.transport.RefSpec&gt; getFetchRefSpecs()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.transport.RemoteConfig java.util.List&lt;org.eclipse.jgit.transport.RefSpec&gt; getPushRefSpecs()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item
      name='org.eclipse.jgit.transport.Transport java.util.List&lt;org.eclipse.jgit.transport.Transport&gt; openAll(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item
      name='org.eclipse.jgit.transport.Transport org.eclipse.jgit.transport.FetchResult fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection&lt;org.eclipse.jgit.transport.RefSpec&gt;)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item
      name='org.eclipse.jgit.transport.Transport org.eclipse.jgit.transport.PushResult push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection&lt;org.eclipse.jgit.transport.RemoteRefUpdate&gt;)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.transport.Transport org.eclipse.jgit.transport.Transport open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='org.eclipse.jgit.transport.URIish java.lang.String getHost()'>
    <annotation name='org.jetbrains.annotations.Nullable'/>
  </item>
  <item name='org.eclipse.jgit.transport.URIish java.lang.String toPrivateString()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
</root>
