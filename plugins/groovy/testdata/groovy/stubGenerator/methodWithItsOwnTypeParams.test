interface I<S> {
    def <T> void foo(List<T> a);
}

class Foo implements I {
    @Delegate private I list
}
-----
public interface I<S> {
public abstract <T> void foo(java.util.List<T> a) ;

}
---
public class Foo extends groovy.lang.GroovyObjectSupport implements I, groovy.lang.GroovyObject {
public void foo(java.util.List a) {
return ;
}

public java.lang.Object getProperty(java.lang.String property) {
return null;
}

public void setProperty(java.lang.String property, java.lang.Object newValue) {
return ;
}

public java.lang.Object invokeMethod(java.lang.String name, java.lang.Object args) {
return null;
}

public groovy.lang.MetaClass getMetaClass() {
return null;
}

public void setMetaClass(groovy.lang.MetaClass metaClass) {
return ;
}

private I list = null;
}
---