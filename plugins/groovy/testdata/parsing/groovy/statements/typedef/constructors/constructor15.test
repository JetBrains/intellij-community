class LogPipeBuilder {
    LogPipeBuilder(Closure<T> transformer==) {
    }
}
-----
Groovy script
  Class definition
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('LogPipeBuilder')
    Extends clause
      <empty list>
    Implements clause
      <empty list>
    Permits clause
      <empty list>
    PsiWhiteSpace(' ')
    Type definition body
      PsiElement({)('{')
      PsiWhiteSpace('\n    ')
      Constructor
        Modifiers
          <empty list>
        PsiElement(identifier)('LogPipeBuilder')
        Parameter list
          PsiElement(()('(')
          Parameter
            Modifiers
              <empty list>
            Type element
              Reference element
                PsiElement(identifier)('Closure')
                Type arguments
                  PsiElement(<)('<')
                  Type element
                    Reference element
                      PsiElement(identifier)('T')
                  PsiElement(>)('>')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('transformer')
          PsiErrorElement:'==' unexpected
            PsiElement(==)('==')
          PsiElement())(')')
        Throw clause
          <empty list>
        PsiWhiteSpace(' ')
        Open block
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          PsiElement(})('}')
      PsiElement(new line)('\n')
      PsiElement(})('}')