def result = switch(a) {
        case 7:
        case 6, 9 : yield 'a'
        case 10:
        case 11: {
                def x = 1
                yield 'c' + x
            }
        default: yield 'b'
    }
-----
Groovy script
  Variable definitions
    Modifiers
      PsiElement(def)('def')
    PsiWhiteSpace(' ')
    Variable
      PsiElement(identifier)('result')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      Switch expression
        PsiElement(switch)('switch')
        PsiElement(()('(')
        Reference expression
          PsiElement(identifier)('a')
        PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        PsiWhiteSpace('\n        ')
        Case section
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Expression list
            Literal
              PsiElement(Integer)('7')
          PsiElement(:)(':')
          PsiElement(new line)('\n        ')
        Case section
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Expression list
            Literal
              PsiElement(Integer)('6')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            Literal
              PsiElement(Integer)('9')
          PsiWhiteSpace(' ')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          YIELD statement
            PsiElement(yield)('yield')
            PsiWhiteSpace(' ')
            Literal
              PsiElement(single quoted string)(''a'')
          PsiElement(new line)('\n        ')
        Case section
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Expression list
            Literal
              PsiElement(Integer)('10')
          PsiElement(:)(':')
          PsiElement(new line)('\n        ')
        Case section
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          Expression list
            Literal
              PsiElement(Integer)('11')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          Block statement
            Open block
              PsiElement({)('{')
              PsiWhiteSpace('\n                ')
              Variable definitions
                Modifiers
                  PsiElement(def)('def')
                PsiWhiteSpace(' ')
                Variable
                  PsiElement(identifier)('x')
                  PsiWhiteSpace(' ')
                  PsiElement(=)('=')
                  PsiWhiteSpace(' ')
                  Literal
                    PsiElement(Integer)('1')
              PsiElement(new line)('\n                ')
              YIELD statement
                PsiElement(yield)('yield')
                PsiWhiteSpace(' ')
                Additive expression
                  Literal
                    PsiElement(single quoted string)(''c'')
                  PsiWhiteSpace(' ')
                  PsiElement(+)('+')
                  PsiWhiteSpace(' ')
                  Reference expression
                    PsiElement(identifier)('x')
              PsiElement(new line)('\n            ')
              PsiElement(})('}')
          PsiElement(new line)('\n        ')
        Case section
          PsiElement(default)('default')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          YIELD statement
            PsiElement(yield)('yield')
            PsiWhiteSpace(' ')
            Literal
              PsiElement(single quoted string)(''b'')
          PsiElement(new line)('\n    ')
        PsiElement(})('}')