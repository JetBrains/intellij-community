<idea-plugin>
  <extensionPoints>
    <extensionPoint qualifiedName="com.intellij.codeInsight.blockingMethodChecker"
                    interface="com.intellij.codeInspection.blockingCallsDetection.BlockingMethodChecker" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.codeInsight.nonBlockingContextChecker"
                    interface="com.intellij.codeInspection.blockingCallsDetection.NonBlockingContextChecker" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.codeInspection.sourceToSinkProvider"
                    dynamic="true"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInspection.sourceToSink.SourceToSinkProvider"/>
    </extensionPoint>

  </extensionPoints>
  <extensions defaultExtensionNs="com.intellij">
    <!--Test frameworks-->
    <psi.referenceContributor language="UAST" implementation="com.intellij.codeInspection.test.junit.references.JUnitReferenceContributor"/>
    <localInspection language="UAST" enabledByDefault="true" level="WARNING" shortName="AssertBetweenInconvertibleTypes"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="assertequals.between.inconvertible.types.display.name"
                     implementationClass="com.intellij.codeInspection.test.AssertBetweenInconvertibleTypesInspection"/>
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" shortName="TestOnlyProblems"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.testonly.display.name"
                     implementationClass="com.intellij.codeInspection.test.TestOnlyInspection"/>
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" shortName="TestMethodWithoutAssertion"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.test.method.without.assertion.display.name"
                     implementationClass="com.intellij.codeInspection.test.TestMethodWithoutAssertionInspection"/>
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" shortName="TestCaseWithConstructor"
                     suppressId="JUnitTestCaseWithNonTrivialConstructors"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.test.case.with.constructor.display.name"
                     implementationClass="com.intellij.codeInspection.test.TestCaseWithConstructorInspection"/>
    <localInspection language="UAST" enabledByDefault="true" level="WARNING" shortName="TestFailedLine"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspection.test.failed.line.display.name"
                     implementationClass="com.intellij.codeInspection.test.TestFailedLineInspection"/>
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" shortName="MigrateAssertToMatcherAssert"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.migrate.assertion.name"
                     implementationClass="com.intellij.codeInspection.test.junit.HamcrestAssertionsConverterInspection"/>
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" shortName="TestInProductSource"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.test.case.in.product.source.display.name"
                     implementationClass="com.intellij.codeInspection.test.TestInProductSourceInspection"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.test.TestInProductSourceInspectionMerger"/>

    <!--JUnit framework-->
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" shortName="SuperTearDownInFinally"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.junit3.super.teardown.display.name"
                     implementationClass="com.intellij.codeInspection.test.junit.JUnit3SuperTearDownInspection"/>
    <localInspection language="JVM" enabledByDefault="true" level="WARNING" shortName="JUnitMixedFramework"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.junit.mixed.annotations.name"
                     implementationClass="com.intellij.codeInspection.test.junit.JUnitMixedFrameworkInspection"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.test.junit.JUnitMixedFrameworkInspectionMerger"/>
    <localInspection language="UAST" enabledByDefault="true" level="INFORMATION" shortName="Junit4Converter"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.junit4.converter.display.name"
                     implementationClass="com.intellij.codeInspection.test.junit.JUnit4ConverterInspection"/>
    <localInspection language="UAST" enabledByDefault="true" level="WARNING" shortName="JUnit5AssertionsConverter"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.junit5.assertions.converter.display.name"
                     implementationClass="com.intellij.codeInspection.test.junit.JUnit5AssertionsConverterInspection"/>
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" shortName="JUnit5Converter"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.junit5.converter.display.name"
                     implementationClass="com.intellij.codeInspection.test.junit.JUnit5ConverterInspection"/>
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" shortName="IgnoredJUnitTest"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.junit.ignored.test.display.name"
                     implementationClass="com.intellij.codeInspection.test.junit.JUnitIgnoredTestInspection"/>
    <localInspection language="UAST" enabledByDefault="false" cleanupTool="true" level="WARNING" shortName="AssertEqualsCalledOnArray"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.junit.assertequals.on.array.display.name"
                     implementationClass="com.intellij.codeInspection.test.junit.JUnitAssertEqualsOnArrayInspection"/>
    <localInspection language="UAST" enabledByDefault="false" cleanupTool="true" level="WARNING" shortName="AssertEqualsMayBeAssertSame"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.junit.assertequals.may.be.assertsame.display.name"
                     implementationClass="com.intellij.codeInspection.test.junit.JUnitAssertEqualsMayBeAssertSameInspection"/>
    <localInspection language="UAST" enabledByDefault="true" level="ERROR" shortName="JUnitMalformedDeclaration"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.test.frameworks.group.name"
                     key="jvm.inspections.junit.malformed.declaration.name"
                     implementationClass="com.intellij.codeInspection.test.junit.JUnitMalformedDeclarationInspection"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.test.junit.JUnitMalformedDeclarationInspectionMerger"/>

    <!--logging-->
    <localInspection language="UAST" enabledByDefault="true" level="WARNING" shortName="LoggingStringTemplateAsArgument"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.logging.frameworks.group.name"
                     key="jvm.inspection.logging.string.template.as.argument.display.name"
                     implementationClass="com.intellij.codeInspection.logging.LoggingStringTemplateAsArgumentInspection"/>
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" shortName="LoggingConditionDisagreesWithLogLevelStatement"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.logging.frameworks.group.name"
                     key="jvm.inspection.logging.condition.disagrees.with.log.statement.display.name"
                     implementationClass="com.intellij.codeInspection.logging.LoggingConditionDisagreesWithLogLevelStatementInspection"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.logging.LoggingConditionDisagreesWithLogLevelStatementInspectionMerger"/>
    <localInspection language="UAST" enabledByDefault="true" level="WARNING" shortName="LoggingPlaceholderCountMatchesArgumentCount"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupPathKey="jvm.inspections.group.name" groupKey="jvm.inspections.logging.frameworks.group.name"
                     key="jvm.inspection.logging.placeholder.count.matches.argument.count.display.name"
                     implementationClass="com.intellij.codeInspection.logging.LoggingPlaceholderCountMatchesArgumentCountInspection"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.logging.LoggingPlaceholderCountMatchesArgumentCountInspectionMerger"/>

    <!-- Performance -->
    <localInspection language="UAST" enabledByDefault="true" level="WARNING" shortName="UrlHashCode"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.equals.hashcode.called.on.url.display.name"
                     implementationClass="com.intellij.codeInspection.performance.UrlHashCodeInspection"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.performance.UrlHashCodeInspectionMerger"/>


    <localInspection language="UAST" enabledByDefault="true" level="WARNING" shortName="UnstableApiUsage"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.unstable.api.usage.display.name"
                     implementationClass="com.intellij.codeInspection.UnstableApiUsageInspection"/>
    <localInspection language="UAST" enabledByDefault="true" level="TEXT ATTRIBUTES" shortName="UsagesOfObsoleteApi"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.usages.of.obsolete.api.display.name"
                     implementationClass="com.intellij.codeInspection.ObsoleteApiUsageInspection"/>
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" shortName="UnstableTypeUsedInSignature"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.unstable.type.used.in.signature.display.name"
                     implementationClass="com.intellij.codeInspection.UnstableTypeUsedInSignatureInspection"/>
    <localInspection language="UAST" shortName="BlockingMethodInNonBlockingContext"
                     groupBundle="messages.JvmAnalysisBundle" groupKey="jvm.inspections.group.name"
                     enabledByDefault="true" level="WARNING"
                     key="jvm.inspections.blocking.method.display.name" bundle="messages.JvmAnalysisBundle"
                     implementationClass="com.intellij.codeInspection.blockingCallsDetection.BlockingMethodInNonBlockingContextInspection"/>
    <localInspection language="UAST" shortName="SourceToSinkFlow"  suppressId="tainting"
                     groupBundle="messages.JvmAnalysisBundle" groupKey="jvm.inspections.group.name"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.sourceToSink.SourceToSinkFlowInspection"
                     key="jvm.inspections.source.to.sink.flow.display.name" bundle="messages.JvmAnalysisBundle"/>
    <localInspection language="UAST" enabledByDefault="true" level="WARNING" shortName="NonExtendableApiUsage"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.api.no.extension.display.name"
                     implementationClass="com.intellij.codeInspection.NonExtendableApiUsageInspection"/>
    <localInspection language="UAST" enabledByDefault="true" level="WARNING" shortName="OverrideOnly"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.api.override.only.display.name"
                     implementationClass="com.intellij.codeInspection.OverrideOnlyInspection"/>
    <localInspection language="UAST" enabledByDefault="true" level="ERROR" shortName="MissingDeprecatedAnnotationOnScheduledForRemovalApi"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name"
                     key="jvm.inspections.missing.deprecated.annotation.on.scheduled.for.removal.api.display.name"
                     implementationClass="com.intellij.codeInspection.MissingDeprecatedAnnotationOnScheduledForRemovalApiInspection"/>
    <localInspection language="UAST" enabledByDefault="true" level="ERROR" shortName="MustAlreadyBeRemovedApi"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.must.already.be.removed.api.display.name"
                     implementationClass="com.intellij.codeInspection.MustAlreadyBeRemovedApiInspection"/>
    <localInspection language="UAST" enabledByDefault="true" level="ERROR" shortName="Dependency"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.dependency.display.name"
                     implementationClass="com.intellij.codeInspection.DependencyInspection"/>
    <localInspection language="JVM" enabledByDefault="false" level="ERROR" shortName="IllegalDependencyOnInternalPackage"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.dependency.on.internal.display.name"
                     implementationClass="com.intellij.codeInspection.IllegalDependencyOnInternalPackageInspection"/>
    <localInspection language="UAST" enabledByDefault="true" level="WARNING" suppressId="CallToThreadRun" shortName="ThreadRun"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.thread.run.display.name"
                     implementationClass="com.intellij.codeInspection.ThreadRunInspection"/>
    <localInspection language="UAST" enabledByDefault="false" level="WARNING" suppressId="serial" alternativeId="serial"
                     shortName="SerializableHasSerialVersionUIDField"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.serializable.class.without.serialversionuid.display.name"
                     implementationClass="com.intellij.codeInspection.SerializableHasSerialVersionUidFieldInspection"/>
    <localInspection language="UAST" enabledByDefault="true" level="ERROR" shortName="Since15"
                     groupBundle="messages.JvmAnalysisBundle" bundle="messages.JvmAnalysisBundle"
                     groupKey="jvm.inspections.group.name" key="jvm.inspections.api.display.name"
                     implementationClass="com.intellij.codeInspection.JavaApiUsageInspection"/>
    <notificationGroup id="UAST" displayType="BALLOON" hideFromSettings="true"/>
    <projectService serviceInterface="com.intellij.codeInsight.AnnotationCacheOwnerNormalizer"
                    serviceImplementation="com.intellij.psi.UastAnnotationCacheOwnerNormalizer"/>
    <inspectionCustomComponent implementation="com.intellij.codeInsight.options.JavaInspectionButtons"/>
  </extensions>
  <extensions defaultExtensionNs="com.intellij.codeInsight">
    <blockingMethodChecker implementation="com.intellij.codeInspection.blockingCallsDetection.ThrowsTypeBlockingMethodChecker"/>
  </extensions>
  <extensions defaultExtensionNs="com.intellij.codeInspection">
    <sourceToSinkProvider language="JAVA" implementationClass="com.intellij.codeInspection.sourceToSink.JavaSourceToSinkProvider"/>
  </extensions>
  <actions>
    <group id="UastInternal" text="UAST" internal="true" popup="true">
      <action id="DumpUastLog" internal="true" class="com.intellij.analysis.internal.DumpUastTreeAction" text="Dump UAST Tree"/>
      <action id="DumpUastLogByElement" internal="true" class="com.intellij.analysis.internal.DumpUastTreeActionByEach"
              text="Dump UAST Tree By Each PsiElement"/>
      <add-to-group group-id="Internal" anchor="last"/>
    </group>
  </actions>
</idea-plugin>

