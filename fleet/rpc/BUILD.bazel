### auto-generated section `build fleet.rpc` start
load("@rules_jvm//:compiler-options.bzl", "create_kotlinc_options")
load("@rules_jvm//:rules.bzl", "jvm_library")

create_kotlinc_options(
  name = "custom",
  jvm_target = "17",
  opt_in = [
    "kotlinx.coroutines.ExperimentalCoroutinesApi",
    "kotlin.ExperimentalStdlibApi",
  ]
)

jvm_library(
  name = "rpc",
  module_name = "fleet.rpc",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True, exclude = ["**/module-info.java"]),
  javac_opts = "@rules_jvm//:j17",
  kotlinc_opts = ":custom",
  plugins = ["@lib//:serialization_plugin"],
  deps = [
    "//fleet/reporting/api:fleet-reporting-api",
    "//fleet/preferences",
    "@lib//:kotlin-reflect",
    "@lib//:kotlinx-serialization-core",
    "@lib//:kotlinx-serialization-json",
    "@lib//:kotlin-stdlib",
    "@lib//:jetbrains-annotations",
    "@lib//:kotlinx-coroutines-slf4j",
    "@lib//:kotlinx-coroutines-core",
    "@lib//:rpc-compiler-plugin.provided",
    "//fleet/util/core:fleet-util-core",
    "@lib//:opentelemetry",
    "@lib//:opentelemetry-semconv",
  ]
)
### auto-generated section `build fleet.rpc` end