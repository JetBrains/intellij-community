<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name='java.util.zip.DeflaterOutputStream DeflaterOutputStream(java.io.OutputStream) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.DeflaterOutputStream DeflaterOutputStream(java.io.OutputStream, boolean) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.DeflaterOutputStream DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.DeflaterOutputStream DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.DeflaterOutputStream DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater, boolean) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.DeflaterOutputStream DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater, boolean) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.DeflaterOutputStream DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.DeflaterOutputStream DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater, int) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.DeflaterOutputStream DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater, int, boolean) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.DeflaterOutputStream DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater, int, boolean) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.DeflaterOutputStream void write(byte[], int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipEntry ZipEntry(java.lang.String) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipEntry ZipEntry(java.util.zip.ZipEntry) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipEntry boolean isDirectory()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry byte[] getExtra()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.zip.ZipEntry int getMethod()">
    <annotation name="org.intellij.lang.annotations.MagicConstant">
      <val name="valuesFromClass" val="java.util.zip.ZipEntry.class" />
    </annotation>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry int hashCode()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.lang.Object clone()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipEntry java.lang.String getComment()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.lang.String getName()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.lang.String toString()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.nio.file.attribute.FileTime getCreationTime()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.nio.file.attribute.FileTime getLastAccessTime()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.nio.file.attribute.FileTime getLastModifiedTime()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.time.LocalDateTime getTimeLocal()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.util.zip.ZipEntry setCreationTime(java.nio.file.attribute.FileTime)'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="value" val="&quot;_ -&gt; this&quot;"/>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.util.zip.ZipEntry setCreationTime(java.nio.file.attribute.FileTime) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipEntry java.util.zip.ZipEntry setLastAccessTime(java.nio.file.attribute.FileTime)'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="value" val="&quot;_ -&gt; this&quot;"/>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.util.zip.ZipEntry setLastAccessTime(java.nio.file.attribute.FileTime) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipEntry java.util.zip.ZipEntry setLastModifiedTime(java.nio.file.attribute.FileTime)'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="value" val="&quot;_ -&gt; this&quot;"/>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry java.util.zip.ZipEntry setLastModifiedTime(java.nio.file.attribute.FileTime) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipEntry long getCompressedSize()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry long getCrc()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry long getSize()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry long getTime()'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry void setComment(java.lang.String)'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry void setCompressedSize(long)'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry void setCrc(long)'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry void setExtra(byte[])'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry void setMethod(int)'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name="java.util.zip.ZipEntry void setMethod(int) 0">
    <annotation name="org.intellij.lang.annotations.MagicConstant">
      <val name="valuesFromClass" val="java.util.zip.ZipEntry.class" />
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry void setSize(long)'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry void setTime(long)'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry void setTimeLocal(java.time.LocalDateTime)'>
    <annotation name='org.jetbrains.annotations.Contract'>
      <val name="mutates" val="&quot;this&quot;"/>
    </annotation>
  </item>
  <item name='java.util.zip.ZipEntry void setTimeLocal(java.time.LocalDateTime) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile ZipFile(java.io.File) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile ZipFile(java.io.File, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile ZipFile(java.io.File, int, java.nio.charset.Charset) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile ZipFile(java.io.File, int, java.nio.charset.Charset) 2'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile ZipFile(java.io.File, java.nio.charset.Charset) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile ZipFile(java.io.File, java.nio.charset.Charset) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile ZipFile(java.lang.String) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
    <annotation name='org.jetbrains.annotations.NonNls'/>
  </item>
  <item name='java.util.zip.ZipFile ZipFile(java.lang.String, java.nio.charset.Charset) 0'>
    <annotation name='org.jetbrains.annotations.NonNls'/>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile ZipFile(java.lang.String, java.nio.charset.Charset) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile java.io.InputStream getInputStream(java.util.zip.ZipEntry) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile java.lang.String getComment()'>
    <annotation name='org.jetbrains.annotations.Nullable'/>
  </item>
  <item name='java.util.zip.ZipFile java.lang.String getName()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile java.util.Enumeration&lt;? extends java.util.zip.ZipEntry&gt; entries()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile java.util.stream.Stream&lt;? extends java.util.zip.ZipEntry&gt; stream()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipFile java.util.zip.ZipEntry getEntry(java.lang.String) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipInputStream ZipInputStream(java.io.InputStream) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipInputStream ZipInputStream(java.io.InputStream, java.nio.charset.Charset) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipInputStream ZipInputStream(java.io.InputStream, java.nio.charset.Charset) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipInputStream int read(byte[], int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipInputStream java.util.zip.ZipEntry getNextEntry()'>
    <annotation name='org.jetbrains.annotations.Nullable'/>
  </item>
  <item name='java.util.zip.ZipOutputStream ZipOutputStream(java.io.OutputStream) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipOutputStream ZipOutputStream(java.io.OutputStream, java.nio.charset.Charset) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipOutputStream ZipOutputStream(java.io.OutputStream, java.nio.charset.Charset) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipOutputStream void putNextEntry(java.util.zip.ZipEntry) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.util.zip.ZipOutputStream void write(byte[], int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
</root>

