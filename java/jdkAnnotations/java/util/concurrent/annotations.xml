<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="java.util.concurrent.BlockingQueue E poll(long, java.util.concurrent.TimeUnit) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name='java.util.concurrent.BlockingQueue boolean offer(E) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name="java.util.concurrent.BlockingQueue boolean offer(E, long, java.util.concurrent.TimeUnit) 2">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.BlockingQueue int drainTo(java.util.Collection&lt;? super E&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.BlockingQueue int drainTo(java.util.Collection&lt;? super E&gt;, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.CompletionService java.util.concurrent.Future&lt;V&gt; poll(long, java.util.concurrent.TimeUnit) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.CompletionService java.util.concurrent.Future&lt;V&gt; submit(java.lang.Runnable, V)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.CompletionService java.util.concurrent.Future&lt;V&gt; submit(java.lang.Runnable, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.CompletionService java.util.concurrent.Future&lt;V&gt; submit(java.util.concurrent.Callable&lt;V&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.CompletionService java.util.concurrent.Future&lt;V&gt; submit(java.util.concurrent.Callable&lt;V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ConcurrentMap V putIfAbsent(K, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ConcurrentMap V replace(K, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ConcurrentMap V replace(K, V) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ConcurrentMap boolean remove(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ConcurrentMap boolean replace(K, V, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ConcurrentMap boolean replace(K, V, V) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ConcurrentMap boolean replace(K, V, V) 2">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name='java.util.concurrent.ConcurrentSkipListSet ConcurrentSkipListSet(java.util.Collection&lt;? extends E&gt;) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
    <annotation name='org.intellij.lang.annotations.Flow'>
      <val name="sourceIsContainer" val="true"/>
      <val name="targetIsContainer" val="true"/>
    </annotation>
  </item>
  <item name='java.util.concurrent.ConcurrentSkipListSet ConcurrentSkipListSet(java.util.SortedSet&lt;E&gt;) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
    <annotation name='org.intellij.lang.annotations.Flow'>
      <val name="sourceIsContainer" val="true"/>
      <val name="targetIsContainer" val="true"/>
    </annotation>
  </item>
  <item name='java.util.concurrent.CopyOnWriteArrayList CopyOnWriteArrayList(E[]) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
    <annotation name='org.intellij.lang.annotations.Flow'>
      <val name="sourceIsContainer" val="true"/>
      <val name="targetIsContainer" val="true"/>
    </annotation>
  </item>
  <item name='java.util.concurrent.CopyOnWriteArrayList CopyOnWriteArrayList(java.util.Collection&lt;? extends E&gt;) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
    <annotation name='org.intellij.lang.annotations.Flow'>
      <val name="sourceIsContainer" val="true"/>
      <val name="targetIsContainer" val="true"/>
    </annotation>
  </item>
  <item name="java.util.concurrent.CountDownLatch boolean await(long, java.util.concurrent.TimeUnit) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Delayed long getDelay(java.util.concurrent.TimeUnit) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executor void execute(java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService T invokeAny(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService T invokeAny(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService T invokeAny(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;, long, java.util.concurrent.TimeUnit) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService T invokeAny(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;, long, java.util.concurrent.TimeUnit) 2">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService boolean awaitTermination(long, java.util.concurrent.TimeUnit) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name='java.util.concurrent.ExecutorService java.util.List&lt;java.lang.Runnable&gt; shutdownNow()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt; invokeAll(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt; invokeAll(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt; invokeAll(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;, long, java.util.concurrent.TimeUnit)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt; invokeAll(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;, long, java.util.concurrent.TimeUnit) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt; invokeAll(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;, long, java.util.concurrent.TimeUnit) 2">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.concurrent.Future&lt;?&gt; submit(java.lang.Runnable)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.concurrent.Future&lt;?&gt; submit(java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.concurrent.Future&lt;T&gt; submit(java.lang.Runnable, T)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.concurrent.Future&lt;T&gt; submit(java.lang.Runnable, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.concurrent.Future&lt;T&gt; submit(java.util.concurrent.Callable&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ExecutorService java.util.concurrent.Future&lt;T&gt; submit(java.util.concurrent.Callable&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;T&gt; callable(java.lang.Runnable, T)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;T&gt; callable(java.lang.Runnable, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;T&gt; privilegedCallable(java.util.concurrent.Callable&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;T&gt; privilegedCallable(java.util.concurrent.Callable&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;T&gt; privilegedCallableUsingCurrentClassLoader(java.util.concurrent.Callable&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;T&gt; privilegedCallableUsingCurrentClassLoader(java.util.concurrent.Callable&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;java.lang.Object&gt; callable(java.lang.Runnable)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;java.lang.Object&gt; callable(java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;java.lang.Object&gt; callable(java.security.PrivilegedAction&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;java.lang.Object&gt; callable(java.security.PrivilegedAction&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;java.lang.Object&gt; callable(java.security.PrivilegedExceptionAction&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.Callable&lt;java.lang.Object&gt; callable(java.security.PrivilegedExceptionAction&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ExecutorService newCachedThreadPool()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ExecutorService newFixedThreadPool(int, java.util.concurrent.ThreadFactory)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ExecutorService newSingleThreadExecutor()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ExecutorService unconfigurableExecutorService(java.util.concurrent.ExecutorService)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ExecutorService unconfigurableExecutorService(java.util.concurrent.ExecutorService) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int, java.util.concurrent.ThreadFactory)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ScheduledExecutorService unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ScheduledExecutorService unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ThreadFactory defaultThreadFactory()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Executors java.util.concurrent.ThreadFactory privilegedThreadFactory()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.Future V get(long, java.util.concurrent.TimeUnit) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.FutureTask FutureTask(java.lang.Runnable, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.FutureTask FutureTask(java.util.concurrent.Callable&lt;V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.FutureTask V get(long, java.util.concurrent.TimeUnit) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name='java.util.concurrent.LinkedBlockingQueue boolean offer(E) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;?&gt; schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;?&gt; schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;?&gt; schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit) 2">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;?&gt; scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;?&gt; scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;?&gt; scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit) 3">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;?&gt; scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;?&gt; scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;?&gt; scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit) 3">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;V&gt; schedule(java.util.concurrent.Callable&lt;V&gt;, long, java.util.concurrent.TimeUnit)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;V&gt; schedule(java.util.concurrent.Callable&lt;V&gt;, long, java.util.concurrent.TimeUnit) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ScheduledExecutorService java.util.concurrent.ScheduledFuture&lt;V&gt; schedule(java.util.concurrent.Callable&lt;V&gt;, long, java.util.concurrent.TimeUnit) 2">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.ThreadFactory java.lang.Thread newThread(java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.TransferQueue boolean tryTransfer(E) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.TransferQueue boolean tryTransfer(E, long, java.util.concurrent.TimeUnit) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.TransferQueue boolean tryTransfer(E, long, java.util.concurrent.TimeUnit) 2">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.util.concurrent.TransferQueue void transfer(E) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
</root>

