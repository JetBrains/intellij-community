
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

package pkg;

public @interface MoreAnnotations {
    @pkg.MoreAnnotations(intValue = 1, byteValue = 1, floatValue = 1.0f, doubleValue = 1.0, booleanValue = true, shortValue = 1, longValue = 1L, charValue = '\n', enumValue = pkg.MoreAnnotations.TestEnum.FirstValue, annotationValue = @pkg.MoreAnnotations.NestedAnnotation("a"), stringValue = "", classValue = java.lang.String.class)
    java.lang.String annotatedWithValues = "";
    @pkg.MoreAnnotations(intArray = {}, byteArray = {}, floatArray = {}, doubleArray = {}, booleanArray = {}, shortArray = {}, longArray = {}, charArray = {}, enumArray = {}, annotationArray = {}, stringArray = {}, classArray = {})
    java.lang.String annotatedWithEmptyArrays = "";
    @pkg.MoreAnnotations(intArray = {1, 0, 2147483647, -2147483648}, byteArray = {1, 0, 127, -128}, floatArray = {1.0f, 0.0f, 3.4028235E38f, 1.4E-45f, 0.0f / 0.0, 1.0f / 0.0, -1.0f / 0.0}, doubleArray = {1.0, 0.0, 1.7976931348623157E308, 4.9E-324, 0.0d / 0.0, 1.0 / 0.0, -1.0 / 0.0}, booleanArray = {true, false}, shortArray = {1, 0, 32767, -32768}, longArray = {1L, 0L, 9223372036854775807L, -9223372036854775808L}, charArray = {'a', '\n', '\u0001', '\u0000', '\uFFFF', '\u0000'}, enumArray = {pkg.MoreAnnotations.TestEnum.FirstValue, pkg.MoreAnnotations.TestEnum.SecondValue}, annotationArray = {@pkg.MoreAnnotations.NestedAnnotation("a"), @pkg.MoreAnnotations.NestedAnnotation("b")}, stringArray = {"first", "second", ""}, classArray = {java.lang.CharSequence.class, java.lang.String.class, java.lang.StringBuilder.class})
    java.lang.String annotatedWithArrays = "";

    int intValue() default 1;

    byte byteValue() default 1;

    float floatValue() default 1.0f / 0.0;

    double doubleValue() default 0.0d / 0.0;

    boolean booleanValue() default true;

    short shortValue() default 1;

    long longValue() default 1L;

    char charValue() default '0';

    pkg.MoreAnnotations.TestEnum enumValue() default pkg.MoreAnnotations.TestEnum.FirstValue;

    pkg.MoreAnnotations.NestedAnnotation annotationValue() default @pkg.MoreAnnotations.NestedAnnotation;

    java.lang.String stringValue() default "default";

    java.lang.Class<? extends java.lang.CharSequence> classValue() default java.lang.CharSequence.class;

    int[] intArray() default {1, 0, 2147483647, -2147483648};

    byte[] byteArray() default {1, 0, 127, -128};

    float[] floatArray() default {1.0f, 0.0f, 3.4028235E38f, 1.4E-45f, 0.0f / 0.0, 1.0f / 0.0, -1.0f / 0.0};

    double[] doubleArray() default {1.0, 0.0, 1.7976931348623157E308, 4.9E-324, 0.0d / 0.0, 1.0 / 0.0, -1.0 / 0.0};

    boolean[] booleanArray() default {true, false};

    short[] shortArray() default {1, 0, 32767, -32768};

    long[] longArray() default {1L, 0L, 9223372036854775807L, -9223372036854775808L};

    char[] charArray() default {'\u0001', '\u0000', '\uFFFF', '\u0000'};

    pkg.MoreAnnotations.TestEnum[] enumArray() default {pkg.MoreAnnotations.TestEnum.FirstValue};

    pkg.MoreAnnotations.NestedAnnotation[] annotationArray() default {@pkg.MoreAnnotations.NestedAnnotation};

    java.lang.String[] stringArray() default {"first", "second", ""};

    java.lang.Class<? extends java.lang.CharSequence>[] classArray() default {java.lang.CharSequence.class, java.lang.String.class, java.lang.StringBuilder.class};

    static enum TestEnum {
        FirstValue, SecondValue;

        private TestEnum() { /* compiled code */ }
    }

    static @interface NestedAnnotation {
        java.lang.String value() default "MyString";
    }
}