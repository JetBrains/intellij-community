
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

package java.util.concurrent;

public enum TimeUnit {
    NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS;

    private static final long NANO_SCALE = 1L;
    private static final long MICRO_SCALE = 1000L;
    private static final long MILLI_SCALE = 1000000L;
    private static final long SECOND_SCALE = 1000000000L;
    private static final long MINUTE_SCALE = 60000000000L;
    private static final long HOUR_SCALE = 3600000000000L;
    private static final long DAY_SCALE = 86400000000000L;
    private final long scale;
    private final long maxNanos;
    private final long maxMicros;
    private final long maxMillis;
    private final long maxSecs;
    private final long microRatio;
    private final int milliRatio;
    private final int secRatio;

    private TimeUnit(long s) { /* compiled code */ }

    private static long cvt(long d, long dst, long src) { /* compiled code */ }

    public long convert(long sourceDuration, java.util.concurrent.TimeUnit sourceUnit) { /* compiled code */ }

    public long convert(java.time.Duration duration) { /* compiled code */ }

    public long toNanos(long duration) { /* compiled code */ }

    public long toMicros(long duration) { /* compiled code */ }

    public long toMillis(long duration) { /* compiled code */ }

    public long toSeconds(long duration) { /* compiled code */ }

    public long toMinutes(long duration) { /* compiled code */ }

    public long toHours(long duration) { /* compiled code */ }

    public long toDays(long duration) { /* compiled code */ }

    private int excessNanos(long d, long m) { /* compiled code */ }

    public void timedWait(java.lang.Object obj, long timeout) throws java.lang.InterruptedException { /* compiled code */ }

    public void timedJoin(java.lang.Thread thread, long timeout) throws java.lang.InterruptedException { /* compiled code */ }

    public void sleep(long timeout) throws java.lang.InterruptedException { /* compiled code */ }

    public java.time.temporal.ChronoUnit toChronoUnit() { /* compiled code */ }

    public static java.util.concurrent.TimeUnit of(java.time.temporal.ChronoUnit chronoUnit) { /* compiled code */ }
}