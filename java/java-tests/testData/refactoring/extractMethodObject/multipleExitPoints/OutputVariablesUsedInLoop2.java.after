class Test {

  public static class Node {
    public int x;
    public boolean condition;
    public Node next;
  }

  public static int test(Node cur) {
    Node prev = null;
    int total = 0;
    while (cur != null) {
      if (cur.condition) {
        if (prev != null) {
          total += prev.x;
        }
        prev = cur;
        cur = cur.next;
      } else {
          Inner inner = new Inner(cur, prev, total).invoke();
          cur = inner.getCur();
          total = inner.getTotal();
          return cur != null ? total + cur.x : total;
      }
    }
    return total;
  }

    private static class Inner {
        private Node cur;
        private Node prev;
        private int total;

        public Inner(Node cur, Node prev, int total) {
            this.cur = cur;
            this.prev = prev;
            this.total = total;
        }

        public Node getCur() {
            return cur;
        }

        public int getTotal() {
            return total;
        }

        public Inner invoke() {
            if (prev != null) {
              total += prev.x;
            }
            prev = cur;
            cur = cur.next;
            return this;
        }
    }
}