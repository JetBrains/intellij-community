<root>
    <item name='javax.swing.AbstractButton boolean getHideActionText()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton boolean isBorderPainted()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton boolean isContentAreaFilled()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton boolean isFocusPainted()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton boolean isListener(java.lang.Class, java.awt.event.ActionListener) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton boolean isListener(java.lang.Class, java.awt.event.ActionListener) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton boolean isRolloverEnabled()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton boolean shouldUpdateSelectedStateFromAction()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton int checkHorizontalKey(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton int checkVerticalKey(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton int getDisplayedMnemonicIndex()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton int getHorizontalAlignment()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton int getHorizontalTextPosition()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton int getIconTextGap()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton int getMnemonic()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton int getVerticalAlignment()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton int getVerticalTextPosition()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton java.awt.event.ActionListener createActionListener()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton java.lang.Object[] getSelectedObjects()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton java.lang.String getText()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton javax.swing.AbstractButton.Handler getHandler()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton javax.swing.Icon getIcon()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton javax.swing.Icon getPressedIcon()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton javax.swing.Icon getRolloverIcon()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton javax.swing.Icon getRolloverSelectedIcon()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton javax.swing.Icon getSelectedIcon()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton long getMultiClickThreshhold()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton void clientPropertyChanged(java.lang.Object, java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton void clientPropertyChanged(java.lang.Object, java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton void clientPropertyChanged(java.lang.Object, java.lang.Object, java.lang.Object) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton void init(java.lang.String, javax.swing.Icon) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton void init(java.lang.String, javax.swing.Icon) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton void setMultiClickThreshhold(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton void setUIProperty(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton void updateDisplayedMnemonicIndex(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton void updateUI()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton boolean setCurrentAccessibleValue(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;!null-&gt;true;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton boolean setCurrentAccessibleValue(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton int getAccessibleActionCount()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton int getCaretPosition()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton int getSelectionEnd()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton int getSelectionStart()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton java.lang.Number getMaximumAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton java.lang.Number getMinimumAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton java.lang.String getAccessibleActionDescription(int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton java.lang.String getAfterIndex(int, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton java.lang.String getAtIndex(int, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton java.lang.String getBeforeIndex(int, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton java.lang.String getSelectedText()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton java.lang.String getText(int, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton java.lang.String getTitledBorderText()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton.ButtonKeyBinding ButtonKeyBinding(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton.ButtonKeyBinding int getAccessibleKeyBindingCount()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.ButtonChangeListener ButtonChangeListener()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.AbstractButton.Handler Handler()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JButton boolean isDefaultCapable()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JButton java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JButton java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JButton void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent boolean alwaysOnTop()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean checkIfChildObscuredBySibling()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean getAutoscrolls()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean getCreatedDoubleBuffer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean getFlag(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean getInheritsPopupMenu()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean getVerifyInputWhenFocusTarget()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean isComponentObtainingGraphicsFrom(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean isComponentObtainingGraphicsFrom(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent boolean isDoubleBuffered()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean isLightweightComponent(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent boolean isManagingFocus()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean isOpaque()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean isOptimizedDrawingEnabled()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean isPaintingForPrint()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean isPaintingOrigin()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean isPaintingTile()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean isRequestFocusEnabled()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent boolean isValidateRoot()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent byte getWriteObjCounter(javax.swing.JComponent)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent byte getWriteObjCounter(javax.swing.JComponent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.awt.Container getTopLevelAncestor()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent java.awt.Dimension getSize(java.awt.Dimension)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.awt.Dimension getSize(java.awt.Dimension) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent java.lang.Object getClientProperty(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent void clientPropertyChanged(java.lang.Object, java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void clientPropertyChanged(java.lang.Object, java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent void clientPropertyChanged(java.lang.Object, java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent void clientPropertyChanged(java.lang.Object, java.lang.Object, java.lang.Object) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent void dndDone()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent void registerNextFocusableComponent(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent void setAlignmentX(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void setAlignmentY(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void setCreatedDoubleBuffer(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void setDoubleBuffered(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void setFlag(int, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void setPaintingChild(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void setRequestFocusEnabled(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void setUIProperty(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent void setWriteObjCounter(javax.swing.JComponent, byte)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;param1&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void setWriteObjCounter(javax.swing.JComponent, byte) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent void updateUI()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent.AccessibleJComponent java.lang.String getTitledBorderText()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent.AccessibleJComponent.AccessibleContainerHandler AccessibleContainerHandler()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent.AccessibleJComponent.AccessibleFocusHandler AccessibleFocusHandler()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent.ActionStandin ActionStandin(java.awt.event.ActionListener, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent.ActionStandin java.lang.Object getValue(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent.ActionStandin java.lang.Object getValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent.ActionStandin void putValue(java.lang.String, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent.ActionStandin void putValue(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent.ActionStandin void putValue(java.lang.String, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JComponent.ActionStandin void setEnabled(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent.IntVector IntVector()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent.IntVector int elementAt(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent.IntVector int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JComponent.KeyboardState KeyboardState()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JDialog JDialog(java.awt.Frame) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JDialog JDialog(java.awt.Frame, boolean) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JDialog JDialog(java.awt.Frame, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JDialog JDialog(java.awt.Frame, java.lang.String, boolean) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JDialog boolean isRootPaneCheckingEnabled()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JDialog int getDefaultCloseOperation()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JDialog java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JDialog void setRootPaneCheckingEnabled(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JFrame boolean isRootPaneCheckingEnabled()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JFrame int getDefaultCloseOperation()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JFrame java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFrame void setRootPaneCheckingEnabled(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel int checkHorizontalKey(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel int checkVerticalKey(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel int getDisplayedMnemonic()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel int getDisplayedMnemonicIndex()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel int getHorizontalAlignment()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel int getHorizontalTextPosition()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel int getIconTextGap()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel int getVerticalAlignment()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel int getVerticalTextPosition()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel java.awt.Component getLabelFor()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel java.lang.String getText()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLabel java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLabel javax.swing.Icon getIcon()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel int getCaretPosition()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel int getSelectionEnd()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel int getSelectionStart()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel java.lang.String getAfterIndex(int, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel java.lang.String getAtIndex(int, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel java.lang.String getBeforeIndex(int, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel java.lang.String getSelectedText()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel java.lang.String getText(int, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel java.lang.String getTitledBorderText()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel.LabelKeyBinding LabelKeyBinding(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel.LabelKeyBinding int getAccessibleKeyBindingCount()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JPanel java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPanel java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPanel void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane JScrollPane(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JScrollPane JScrollPane(java.awt.Component, int, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JScrollPane boolean isValidateRoot()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JScrollPane boolean isWheelScrollingEnabled()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JScrollPane int getHorizontalScrollBarPolicy()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JScrollPane int getVerticalScrollBarPolicy()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JScrollPane java.awt.Component getCorner(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JScrollPane java.awt.Component getCorner(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane void setCorner(java.lang.String, java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable JTable(javax.swing.table.TableModel) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable boolean getAutoCreateColumnsFromModel()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable boolean getAutoCreateRowSorter()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable boolean getDragEnabled()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable boolean getFillsViewportHeight()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable boolean getRowSelectionAllowed()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable boolean getScrollableTracksViewportWidth()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable boolean getShowHorizontalLines()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable boolean getShowVerticalLines()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable boolean getSurrendersFocusOnKeystroke()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable boolean getUpdateSelectionOnSort()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable boolean isEditing()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable int convertRowIndexToView(int, javax.swing.JTable.ModelChange) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable int getAutoResizeMode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable int getEditingColumn()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable int getEditingRow()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable int getRowHeight()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable int getRowMargin()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable int limit(int, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable int[] getSelectedRows()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable java.awt.Component getEditorComponent()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable java.awt.Dimension getIntercellSpacing()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable java.awt.Dimension getPreferredScrollableViewportSize()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable javax.swing.JScrollPane createScrollPaneForTable(javax.swing.JTable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable javax.swing.JScrollPane createScrollPaneForTable(javax.swing.JTable) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable javax.swing.JTable.DropLocation getDropLocation()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable javax.swing.table.TableModel createDefaultDataModel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable javax.swing.table.TableModel getModel()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable void adjustSizes(long, javax.swing.JTable.Resizable2, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable void adjustSizes(long, javax.swing.JTable.Resizable3, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable void notifySorter(javax.swing.JTable.ModelChange) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable void repaintSortedRows(javax.swing.JTable.ModelChange) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable void restoreSortingSelection(int[], int, javax.swing.JTable.ModelChange) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable void restoreSortingSelection(int[], int, javax.swing.JTable.ModelChange) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable void setEditingColumn(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable void setEditingRow(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable void setIntercellSpacing(java.awt.Dimension) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable void setLazyValue(java.util.Hashtable, java.lang.Class, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable void setModel(javax.swing.table.TableModel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable void setPreferredScrollableViewportSize(java.awt.Dimension)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable void setSurrendersFocusOnKeystroke(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable void setUIProperty(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable int getAccessibleColumnExtentAt(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable int getAccessibleRowExtentAt(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableCell int getAccessibleIndexInParent()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableCell java.awt.Dimension getSize()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableCell java.util.Locale getLocale()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableHeaderCell int getAccessibleIndexInParent()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableHeaderCell java.awt.Component getCurrentComponent()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableHeaderCell java.awt.Dimension getSize()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableHeaderCell java.lang.String getAccessibleName()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableHeaderCell java.util.Locale getLocale()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableModelChange AccessibleJTableModelChange(int, int, int, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableModelChange int getFirstColumn()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableModelChange int getFirstRow()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableModelChange int getLastColumn()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableModelChange int getLastRow()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableModelChange int getType()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader boolean isAccessibleColumnSelected(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader boolean isAccessibleRowSelected(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader boolean isAccessibleSelected(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader int getAccessibleColumnExtentAt(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader int getAccessibleRowCount()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader int getAccessibleRowExtentAt(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader int[] getSelectedAccessibleColumns()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader int[] getSelectedAccessibleRows()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.BooleanRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_,_,_,_-&gt;this&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.BooleanRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.BooleanRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable.DateRenderer void setValue(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable.DoubleRenderer void setValue(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable.DropLocation boolean isInsertColumn()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.DropLocation boolean isInsertRow()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.DropLocation int getColumn()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.DropLocation int getRow()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.DropLocation java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.GenericEditor java.awt.Component getTableCellEditorComponent(javax.swing.JTable, java.lang.Object, boolean, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null,_,_,_,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable.GenericEditor java.lang.Object getCellEditorValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.IconRenderer void setValue(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.JTable.SortManager void allChanged()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.JTable.SortManager void restoreSelection(javax.swing.JTable.ModelChange) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities SwingUtilities()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='javax.swing.SwingUtilities boolean isDescendingFrom(java.awt.Component, java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null,_-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='javax.swing.SwingUtilities boolean isDescendingFrom(java.awt.Component, java.awt.Component) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities boolean isLeftToRight(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities int findDisplayedMnemonicIndex(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities int getAccessibleChildrenCount(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities int getAccessibleIndexInParent(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Component findFocusOwner(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Component findFocusOwner(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Component getDeepestComponentAt(java.awt.Component, int, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Component getDeepestComponentAt(java.awt.Component, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Component getRoot(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Component getRoot(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Container getAncestorNamed(java.lang.String, java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,null-&gt;null;null,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Container getAncestorNamed(java.lang.String, java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Container getAncestorNamed(java.lang.String, java.awt.Component) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Container getAncestorOfClass(java.lang.Class&lt;?&gt;, java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,null-&gt;null;null,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Container getAncestorOfClass(java.lang.Class&lt;?&gt;, java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Container getAncestorOfClass(java.lang.Class&lt;?&gt;, java.awt.Component) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Container getUnwrappedParent(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Container getValidateRoot(java.awt.Container, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Container getValidateRoot(java.awt.Container, boolean) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Window getWindowAncestor(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Window getWindowAncestor(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Window windowForComponent(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Window windowForComponent(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities javax.swing.JComponent getPaintingOrigin(javax.swing.JComponent)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities javax.swing.JComponent getPaintingOrigin(javax.swing.JComponent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities void updateComponentTreeUI(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities void updateComponentTreeUI0(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities void updateRendererOrEditorUI(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='javax.swing.SwingUtilities.SharedOwnerFrame void show()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
</root>