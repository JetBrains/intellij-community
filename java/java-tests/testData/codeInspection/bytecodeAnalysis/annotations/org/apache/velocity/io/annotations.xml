<root>
    <item name='org.apache.velocity.io.UnicodeInputStream UTF16BE_BOM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream UTF16LE_BOM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream UTF32BE_BOM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream UTF32LE_BOM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream UTF8_BOM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream boolean isSkipBOM()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream java.lang.String getEncodingFromStream()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream java.lang.String readEncoding()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream org.apache.velocity.io.UnicodeInputStream.UnicodeBOM match(org.apache.velocity.io.UnicodeInputStream.UnicodeBOM, org.apache.velocity.io.UnicodeInputStream.UnicodeBOM) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream void pushback(org.apache.velocity.io.UnicodeInputStream.UnicodeBOM) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream.UnicodeBOM UnicodeBOM(java.lang.String, byte[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream.UnicodeBOM byte[] getBytes()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.UnicodeInputStream.UnicodeBOM java.lang.String getEncoding()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter VelocityWriter(int, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter VelocityWriter(java.io.Writer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter VelocityWriter(java.io.Writer, int, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter boolean isAutoFlush()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter int getBufferSize()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter int getRemaining()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter int min(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter void bufferOverflow()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter void clear()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter void recycle(java.io.Writer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter void write(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.velocity.io.VelocityWriter void write(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
</root>