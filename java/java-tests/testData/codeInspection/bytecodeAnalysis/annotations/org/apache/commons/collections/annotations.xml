<root>
    <item name='org.apache.commons.collections.ArrayStack ArrayStack()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ArrayStack ArrayStack(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ArrayStack int search(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ArrayStack java.lang.Object push(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BagUtils BagUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag predicatedBag(org.apache.commons.collections.Bag, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag predicatedBag(org.apache.commons.collections.Bag, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag predicatedBag(org.apache.commons.collections.Bag, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag synchronizedBag(org.apache.commons.collections.Bag)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag synchronizedBag(org.apache.commons.collections.Bag) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag transformedBag(org.apache.commons.collections.Bag, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag transformedBag(org.apache.commons.collections.Bag, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag transformedBag(org.apache.commons.collections.Bag, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag typedBag(org.apache.commons.collections.Bag, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag typedBag(org.apache.commons.collections.Bag, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag typedBag(org.apache.commons.collections.Bag, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag unmodifiableBag(org.apache.commons.collections.Bag)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.Bag unmodifiableBag(org.apache.commons.collections.Bag) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag predicatedSortedBag(org.apache.commons.collections.SortedBag, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag predicatedSortedBag(org.apache.commons.collections.SortedBag, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag predicatedSortedBag(org.apache.commons.collections.SortedBag, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag synchronizedSortedBag(org.apache.commons.collections.SortedBag)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag synchronizedSortedBag(org.apache.commons.collections.SortedBag) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag transformedSortedBag(org.apache.commons.collections.SortedBag, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag transformedSortedBag(org.apache.commons.collections.SortedBag, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag transformedSortedBag(org.apache.commons.collections.SortedBag, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag typedSortedBag(org.apache.commons.collections.SortedBag, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag typedSortedBag(org.apache.commons.collections.SortedBag, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag typedSortedBag(org.apache.commons.collections.SortedBag, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag unmodifiableSortedBag(org.apache.commons.collections.SortedBag)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BagUtils org.apache.commons.collections.SortedBag unmodifiableSortedBag(org.apache.commons.collections.SortedBag) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap NULL_ARGUMENTS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap boolean containsValue(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap java.lang.Object convertType(java.lang.Class, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap java.lang.Object get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap java.lang.Object getBean()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BeanMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap java.util.Iterator entryIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap java.util.Iterator keyIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BeanMap java.util.Iterator valueIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BeanMap void firePropertyChange(java.lang.Object, java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BeanMap void firePropertyChange(java.lang.Object, java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap void firePropertyChange(java.lang.Object, java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap void firePropertyChange(java.lang.Object, java.lang.Object, java.lang.Object) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap void logInfo(java.lang.Exception) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap void logWarn(java.lang.Exception) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap void putAllWriteable(org.apache.commons.collections.BeanMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BeanMap.MyMapEntry MyMapEntry(org.apache.commons.collections.BeanMap, java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap BinaryHeap()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap BinaryHeap(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap BinaryHeap(boolean, java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap BinaryHeap(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap BinaryHeap(int, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap BinaryHeap(int, boolean, java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap BinaryHeap(int, java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap BinaryHeap(java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap boolean add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap boolean isEmpty()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap boolean isFull()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap java.lang.Object peek()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap void clear()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BinaryHeap void grow()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BoundedFifoBuffer BoundedFifoBuffer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BoundedFifoBuffer BoundedFifoBuffer(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BoundedFifoBuffer BoundedFifoBuffer(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BoundedFifoBuffer boolean add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BoundedFifoBuffer int decrement(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BoundedFifoBuffer int increment(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BoundedFifoBuffer int maxSize()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BoundedFifoBuffer int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BoundedFifoBuffer java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferOverflowException BufferOverflowException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BufferOverflowException BufferOverflowException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BufferOverflowException BufferOverflowException(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BufferOverflowException java.lang.Throwable getCause()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BufferUnderflowException BufferUnderflowException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BufferUnderflowException BufferUnderflowException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BufferUnderflowException BufferUnderflowException(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BufferUnderflowException java.lang.Throwable getCause()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BufferUtils BufferUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer blockingBuffer(org.apache.commons.collections.Buffer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer blockingBuffer(org.apache.commons.collections.Buffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer blockingBuffer(org.apache.commons.collections.Buffer, long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer blockingBuffer(org.apache.commons.collections.Buffer, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer boundedBuffer(org.apache.commons.collections.Buffer, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer boundedBuffer(org.apache.commons.collections.Buffer, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer boundedBuffer(org.apache.commons.collections.Buffer, int, long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer boundedBuffer(org.apache.commons.collections.Buffer, int, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer predicatedBuffer(org.apache.commons.collections.Buffer, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer predicatedBuffer(org.apache.commons.collections.Buffer, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer predicatedBuffer(org.apache.commons.collections.Buffer, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer synchronizedBuffer(org.apache.commons.collections.Buffer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer synchronizedBuffer(org.apache.commons.collections.Buffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer transformedBuffer(org.apache.commons.collections.Buffer, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer transformedBuffer(org.apache.commons.collections.Buffer, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer transformedBuffer(org.apache.commons.collections.Buffer, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer typedBuffer(org.apache.commons.collections.Buffer, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer typedBuffer(org.apache.commons.collections.Buffer, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer typedBuffer(org.apache.commons.collections.Buffer, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer unmodifiableBuffer(org.apache.commons.collections.Buffer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.BufferUtils org.apache.commons.collections.Buffer unmodifiableBuffer(org.apache.commons.collections.Buffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils ClosureUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure asClosure(org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure asClosure(org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure chainedClosure(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure chainedClosure(org.apache.commons.collections.Closure, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure chainedClosure(org.apache.commons.collections.Closure, org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure chainedClosure(org.apache.commons.collections.Closure, org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure chainedClosure(org.apache.commons.collections.Closure[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure doWhileClosure(org.apache.commons.collections.Closure, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure doWhileClosure(org.apache.commons.collections.Closure, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure doWhileClosure(org.apache.commons.collections.Closure, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure exceptionClosure()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure forClosure(int, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure forClosure(int, org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure ifClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure ifClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure ifClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure ifClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure ifClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure ifClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure ifClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure invokerClosure(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure invokerClosure(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure invokerClosure(java.lang.String, java.lang.Class[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure nopClosure()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure switchClosure(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure switchClosure(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure switchClosure(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure switchClosure(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[], org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,!null-&gt;!null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure switchClosure(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[], org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure switchClosure(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[], org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure switchClosure(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[], org.apache.commons.collections.Closure) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure switchMapClosure(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure whileClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure whileClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ClosureUtils org.apache.commons.collections.Closure whileClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils CollectionUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean addIgnoreNull(java.util.Collection, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean addIgnoreNull(java.util.Collection, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean containsAny(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean containsAny(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean exists(java.util.Collection, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean exists(java.util.Collection, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean exists(java.util.Collection, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isEmpty(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isEmpty(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isEqualCollection(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isEqualCollection(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isFull(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isNotEmpty(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isNotEmpty(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isProperSubCollection(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isProperSubCollection(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isSubCollection(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean isSubCollection(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils boolean sizeIsEmpty(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils int cardinality(java.lang.Object, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils int countMatches(java.util.Collection, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils int countMatches(java.util.Collection, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils int getFreq(java.lang.Object, java.util.Map) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils int maxSize(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils int size(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.lang.Object find(java.util.Collection, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,null-&gt;null;null,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.lang.Object find(java.util.Collection, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.lang.Object find(java.util.Collection, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.lang.Object get(java.lang.Object, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.lang.Object index(java.lang.Object, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null,_-&gt;null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.lang.Object index(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null,_-&gt;null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.lang.Object index(java.util.Iterator, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;param1&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.lang.Object index(java.util.Iterator, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Collection, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Collection, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Collection, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Collection, org.apache.commons.collections.Transformer, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,!null-&gt;!null;_,_,null-&gt;null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Collection, org.apache.commons.collections.Transformer, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Collection, org.apache.commons.collections.Transformer, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Iterator, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Iterator, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Iterator, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Iterator, org.apache.commons.collections.Transformer, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;param3&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Iterator, org.apache.commons.collections.Transformer, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection collect(java.util.Iterator, org.apache.commons.collections.Transformer, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection disjunction(java.util.Collection, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection disjunction(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection disjunction(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection intersection(java.util.Collection, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection intersection(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection intersection(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection predicatedCollection(java.util.Collection, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection predicatedCollection(java.util.Collection, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection predicatedCollection(java.util.Collection, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection removeAll(java.util.Collection, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection removeAll(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection removeAll(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection retainAll(java.util.Collection, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection retainAll(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection retainAll(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection select(java.util.Collection, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection select(java.util.Collection, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection select(java.util.Collection, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection selectRejected(java.util.Collection, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection selectRejected(java.util.Collection, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection selectRejected(java.util.Collection, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection subtract(java.util.Collection, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection subtract(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection subtract(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection synchronizedCollection(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection synchronizedCollection(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection transformedCollection(java.util.Collection, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection transformedCollection(java.util.Collection, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection transformedCollection(java.util.Collection, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection typedCollection(java.util.Collection, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection typedCollection(java.util.Collection, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection typedCollection(java.util.Collection, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection union(java.util.Collection, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection union(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection union(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection unmodifiableCollection(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Collection unmodifiableCollection(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Map getCardinalityMap(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils java.util.Map getCardinalityMap(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void addAll(java.util.Collection, java.lang.Object[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void addAll(java.util.Collection, java.util.Enumeration) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void addAll(java.util.Collection, java.util.Iterator) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void filter(java.util.Collection, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void filter(java.util.Collection, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void forAllDo(java.util.Collection, org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void forAllDo(java.util.Collection, org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void reverseArray(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;param1&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void reverseArray(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void select(java.util.Collection, org.apache.commons.collections.Predicate, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void select(java.util.Collection, org.apache.commons.collections.Predicate, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void selectRejected(java.util.Collection, org.apache.commons.collections.Predicate, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void selectRejected(java.util.Collection, org.apache.commons.collections.Predicate, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void transform(java.util.Collection, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CollectionUtils void transform(java.util.Collection, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils ComparatorUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.lang.Object max(java.lang.Object, java.lang.Object, java.util.Comparator) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.lang.Object min(java.lang.Object, java.lang.Object, java.util.Comparator) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator booleanComparator(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator chainedComparator(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator chainedComparator(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator chainedComparator(java.util.Comparator, java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator chainedComparator(java.util.Comparator[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator chainedComparator(java.util.Comparator[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator naturalComparator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator nullHighComparator(java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator nullHighComparator(java.util.Comparator) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator nullLowComparator(java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator nullLowComparator(java.util.Comparator) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator reversedComparator(java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator reversedComparator(java.util.Comparator) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator transformedComparator(java.util.Comparator, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ComparatorUtils java.util.Comparator transformedComparator(java.util.Comparator, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList CursorableLinkedList()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean addAll(int, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean addAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean addFirst(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean addLast(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean containsAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean isEmpty()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList boolean removeAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList java.lang.Object[] toArray(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList java.util.List subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList java.util.ListIterator listIterator(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList org.apache.commons.collections.CursorableLinkedList.Cursor cursor()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList org.apache.commons.collections.CursorableLinkedList.Cursor cursor(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList org.apache.commons.collections.CursorableLinkedList.Listable insertListable(org.apache.commons.collections.CursorableLinkedList.Listable, org.apache.commons.collections.CursorableLinkedList.Listable, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList void removeListable(org.apache.commons.collections.CursorableLinkedList.Listable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList void unregisterCursor(org.apache.commons.collections.CursorableLinkedList.Cursor) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Cursor Cursor(int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Cursor int nextIndex()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Cursor int previousIndex()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Cursor void checkForComod()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Cursor void invalidate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Cursor void listableChanged(org.apache.commons.collections.CursorableLinkedList.Listable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Cursor void listableChanged(org.apache.commons.collections.CursorableLinkedList.Listable) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Cursor void listableInserted(org.apache.commons.collections.CursorableLinkedList.Listable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.ListIter ListIter(int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.ListIter void checkForComod()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Listable Listable(org.apache.commons.collections.CursorableLinkedList.Listable, org.apache.commons.collections.CursorableLinkedList.Listable, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Listable java.lang.Object setValue(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Listable java.lang.Object value()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Listable org.apache.commons.collections.CursorableLinkedList.Listable next()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Listable org.apache.commons.collections.CursorableLinkedList.Listable prev()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Listable void setNext(org.apache.commons.collections.CursorableLinkedList.Listable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableLinkedList.Listable void setPrev(org.apache.commons.collections.CursorableLinkedList.Listable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList CursorableSubList(org.apache.commons.collections.CursorableLinkedList, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList boolean add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList boolean addAll(int, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList boolean addAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList boolean addFirst(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList boolean addLast(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList boolean containsAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList boolean removeAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList java.lang.Object[] toArray(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList java.util.List subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList java.util.ListIterator listIterator(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.CursorableSubList void checkForComod()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag DefaultMapBag()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag boolean addAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag boolean containsAll(org.apache.commons.collections.Bag) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag boolean removeAll(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag boolean removeAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag int modCount()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag java.util.List extractList()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag java.util.Map getMap()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag void setMap(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag.BagIterator BagIterator(org.apache.commons.collections.DefaultMapBag, java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag.BagIterator BagIterator(org.apache.commons.collections.DefaultMapBag, java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapBag.BagIterator boolean hasNext()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapEntry DefaultMapEntry()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapEntry DefaultMapEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapEntry DefaultMapEntry(java.util.Map.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapEntry boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapEntry java.lang.Object getKey()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapEntry java.lang.Object getValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapEntry java.lang.Object setValue(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DefaultMapEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DefaultMapEntry void setKey(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap DoubleOrderedMap()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap boolean containsKey(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap boolean containsValue(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap boolean isBlack(org.apache.commons.collections.DoubleOrderedMap.Node, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null,_-&gt;true&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap boolean isBlack(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap boolean isLeftChild(org.apache.commons.collections.DoubleOrderedMap.Node, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null,_-&gt;true&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap boolean isLeftChild(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap boolean isRed(org.apache.commons.collections.DoubleOrderedMap.Node, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null,_-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap boolean isRed(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap boolean isRightChild(org.apache.commons.collections.DoubleOrderedMap.Node, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null,_-&gt;true&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap boolean isRightChild(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap int compare(java.lang.Comparable, java.lang.Comparable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap int oppositeIndex(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object doGet(java.lang.Comparable, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object doGet(java.lang.Comparable, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object doRemove(java.lang.Comparable, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object getKeyForValue(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object getKeyForValue(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap java.lang.Object removeValue(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node getGrandParent(org.apache.commons.collections.DoubleOrderedMap.Node, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node getGrandParent(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node getLeftChild(org.apache.commons.collections.DoubleOrderedMap.Node, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null,_-&gt;null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node getLeftChild(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node getParent(org.apache.commons.collections.DoubleOrderedMap.Node, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null,_-&gt;null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node getParent(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node getRightChild(org.apache.commons.collections.DoubleOrderedMap.Node, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null,_-&gt;null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node getRightChild(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node leastNode(org.apache.commons.collections.DoubleOrderedMap.Node, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null,_-&gt;null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node lookup(java.lang.Comparable, int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node nextGreater(org.apache.commons.collections.DoubleOrderedMap.Node, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null,_-&gt;null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap org.apache.commons.collections.DoubleOrderedMap.Node nextGreater(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void checkKey(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void checkKeyAndValue(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,null-&gt;fail;null,_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void checkNonNullComparable(java.lang.Object, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null,_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void checkValue(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void copyColor(org.apache.commons.collections.DoubleOrderedMap.Node, org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void copyColor(org.apache.commons.collections.DoubleOrderedMap.Node, org.apache.commons.collections.DoubleOrderedMap.Node, int) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void doRedBlackDeleteFixup(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void doRedBlackInsert(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void grow()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void insertValue(org.apache.commons.collections.DoubleOrderedMap.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void makeBlack(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void makeRed(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void modify()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void rotateLeft(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void rotateRight(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap void shrink()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.DoubleOrderedMapIterator DoubleOrderedMapIterator(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.DoubleOrderedMapIterator DoubleOrderedMapIterator(int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.DoubleOrderedMapIterator boolean hasNext()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node Node(java.lang.Comparable, java.lang.Comparable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node boolean isBlack(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node boolean isRed(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node java.lang.Comparable getData(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node java.lang.Object getKey()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node java.lang.Object getValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node java.lang.Object setValue(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node java.lang.Object setValue(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node org.apache.commons.collections.DoubleOrderedMap.Node getLeft(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node org.apache.commons.collections.DoubleOrderedMap.Node getParent(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node org.apache.commons.collections.DoubleOrderedMap.Node getRight(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node void copyColor(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.DoubleOrderedMap.Node void swapColors(org.apache.commons.collections.DoubleOrderedMap.Node, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.EnumerationUtils EnumerationUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.EnumerationUtils java.util.List toList(java.util.Enumeration)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties ExtendedProperties(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties ExtendedProperties(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties ExtendedProperties(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties boolean endsWithSlash(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties boolean isInitialized()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.lang.String escape(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.lang.String escape(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.lang.String getInclude()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.lang.String interpolate(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.lang.String interpolateHelper(java.lang.String, java.util.List)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;!null,_-&gt;!null;null,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.lang.String interpolateHelper(java.lang.String, java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.lang.String testBoolean(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.lang.String testBoolean(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.lang.String unescape(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.lang.String unescape(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.util.Iterator getKeys()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.util.Iterator getKeys(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties java.util.Properties getProperties(java.lang.String, java.util.Properties)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties org.apache.commons.collections.ExtendedProperties convertProperties(java.util.Properties)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties org.apache.commons.collections.ExtendedProperties convertProperties(java.util.Properties) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties org.apache.commons.collections.ExtendedProperties subset(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties void combine(org.apache.commons.collections.ExtendedProperties) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties void save(java.io.OutputStream, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties void save(java.io.OutputStream, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties void setInclude(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties.PropertiesReader java.lang.String readProperty()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ExtendedProperties.PropertiesTokenizer java.lang.String nextToken()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils FactoryUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils org.apache.commons.collections.Factory constantFactory(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils org.apache.commons.collections.Factory constantFactory(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils org.apache.commons.collections.Factory exceptionFactory()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils org.apache.commons.collections.Factory instantiateFactory(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils org.apache.commons.collections.Factory instantiateFactory(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils org.apache.commons.collections.Factory instantiateFactory(java.lang.Class, java.lang.Class[], java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils org.apache.commons.collections.Factory instantiateFactory(java.lang.Class, java.lang.Class[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils org.apache.commons.collections.Factory nullFactory()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils org.apache.commons.collections.Factory prototypeFactory(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;!null-&gt;!null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FactoryUtils org.apache.commons.collections.Factory prototypeFactory(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList FastArrayList()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastArrayList FastArrayList(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastArrayList FastArrayList(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList boolean getFast()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastArrayList java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastArrayList void setFast(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.ListIter ListIter(int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.ListIter java.util.List get()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.ListIter void checkMod()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.SubList SubList(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.SubList SubList(int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.SubList java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.SubList java.util.List get(java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.SubList java.util.List subList(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.SubList java.util.ListIterator listIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.SubList java.util.ListIterator listIterator(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.SubList.SubListIter SubListIter(int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastArrayList.SubList.SubListIter void checkMod()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap FastHashMap(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap boolean getFast()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap void setFast(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.CollectionView CollectionView()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.CollectionView boolean add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.CollectionView boolean add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.CollectionView boolean addAll(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.CollectionView boolean addAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.CollectionView java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.CollectionView.CollectionViewIterator boolean hasNext()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.EntrySet EntrySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.EntrySet java.lang.Object iteratorNext(java.util.Map.Entry)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;param1&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.EntrySet java.util.Collection get(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.KeySet KeySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.KeySet java.lang.Object iteratorNext(java.util.Map.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.KeySet java.util.Collection get(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.Values Values()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.Values java.lang.Object iteratorNext(java.util.Map.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastHashMap.Values java.util.Collection get(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap FastTreeMap()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap FastTreeMap(java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap FastTreeMap(java.util.SortedMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap boolean getFast()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap void setFast(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.CollectionView CollectionView()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.CollectionView boolean add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.CollectionView boolean add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.CollectionView boolean addAll(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.CollectionView boolean addAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.CollectionView java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.CollectionView.CollectionViewIterator boolean hasNext()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.EntrySet EntrySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.EntrySet java.lang.Object iteratorNext(java.util.Map.Entry)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;param1&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.EntrySet java.util.Collection get(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.KeySet KeySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.KeySet java.lang.Object iteratorNext(java.util.Map.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.KeySet java.util.Collection get(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.Values Values()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.Values java.lang.Object iteratorNext(java.util.Map.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FastTreeMap.Values java.util.Collection get(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.FunctorException FunctorException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FunctorException FunctorException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FunctorException FunctorException(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FunctorException java.lang.Throwable getCause()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.FunctorException void printStackTrace(java.io.PrintStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils IteratorUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.lang.Object[] toArray(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.lang.Object[] toArray(java.util.Iterator, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.lang.Object[] toArray(java.util.Iterator, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Enumeration asEnumeration(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Enumeration asEnumeration(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator asIterator(java.util.Enumeration)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator asIterator(java.util.Enumeration) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator asIterator(java.util.Enumeration, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator asIterator(java.util.Enumeration, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator asIterator(java.util.Enumeration, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator chainedIterator(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator chainedIterator(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator chainedIterator(java.util.Iterator, java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator chainedIterator(java.util.Iterator[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator chainedIterator(java.util.Iterator[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator collatedIterator(java.util.Comparator, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator collatedIterator(java.util.Comparator, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator collatedIterator(java.util.Comparator, java.util.Iterator, java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator collatedIterator(java.util.Comparator, java.util.Iterator[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator collatedIterator(java.util.Comparator, java.util.Iterator[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator filteredIterator(java.util.Iterator, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator filteredIterator(java.util.Iterator, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator filteredIterator(java.util.Iterator, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator getIterator(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator objectGraphIterator(java.lang.Object, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator transformedIterator(java.util.Iterator, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator transformedIterator(java.util.Iterator, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator transformedIterator(java.util.Iterator, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator unmodifiableIterator(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.Iterator unmodifiableIterator(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.List toList(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.List toList(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.List toList(java.util.Iterator, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.List toList(java.util.Iterator, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.ListIterator filteredListIterator(java.util.ListIterator, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.ListIterator filteredListIterator(java.util.ListIterator, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.ListIterator filteredListIterator(java.util.ListIterator, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.ListIterator singletonListIterator(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.ListIterator toListIterator(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.ListIterator toListIterator(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.ListIterator unmodifiableListIterator(java.util.ListIterator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils java.util.ListIterator unmodifiableListIterator(java.util.ListIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.MapIterator emptyMapIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.MapIterator unmodifiableMapIterator(org.apache.commons.collections.MapIterator)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.MapIterator unmodifiableMapIterator(org.apache.commons.collections.MapIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.OrderedIterator emptyOrderedIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.OrderedMapIterator emptyOrderedMapIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object[], int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object[], int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator emptyIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator loopingIterator(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator loopingIterator(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableIterator singletonIterator(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object[], int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object[], int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator emptyListIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator loopingListIterator(java.util.List)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.IteratorUtils org.apache.commons.collections.ResettableListIterator loopingListIterator(java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.LRUMap int getMaximumSize()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.LRUMap java.lang.Object get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.LRUMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.LRUMap void processRemovedLRU(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.LRUMap void processRemovedLRU(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.LRUMap void processRemovedLRU(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.LRUMap void readExternal(java.io.ObjectInput) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.LRUMap void writeExternal(java.io.ObjectOutput) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils ListUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ListUtils boolean isEqualList(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils boolean isEqualList(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils int hashCodeForList(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List fixedSizeList(java.util.List)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List fixedSizeList(java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List intersection(java.util.List, java.util.List)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List intersection(java.util.List, java.util.List) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List lazyList(java.util.List, org.apache.commons.collections.Factory)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List lazyList(java.util.List, org.apache.commons.collections.Factory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List lazyList(java.util.List, org.apache.commons.collections.Factory) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List predicatedList(java.util.List, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List predicatedList(java.util.List, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List predicatedList(java.util.List, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List removeAll(java.util.Collection, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List removeAll(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List retainAll(java.util.Collection, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List retainAll(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List retainAll(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List subtract(java.util.List, java.util.List)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List subtract(java.util.List, java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List subtract(java.util.List, java.util.List) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List sum(java.util.List, java.util.List)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List sum(java.util.List, java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List sum(java.util.List, java.util.List) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List synchronizedList(java.util.List)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List synchronizedList(java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List transformedList(java.util.List, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List transformedList(java.util.List, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List transformedList(java.util.List, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List typedList(java.util.List, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List typedList(java.util.List, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List typedList(java.util.List, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List union(java.util.List, java.util.List)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List union(java.util.List, java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List unmodifiableList(java.util.List)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ListUtils java.util.List unmodifiableList(java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils MapUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.MapUtils boolean getBooleanValue(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils boolean getBooleanValue(java.util.Map, java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils boolean isEmpty(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.MapUtils boolean isEmpty(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils boolean isNotEmpty(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.MapUtils boolean isNotEmpty(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils byte getByteValue(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils byte getByteValue(java.util.Map, java.lang.Object, byte) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils double getDoubleValue(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils double getDoubleValue(java.util.Map, java.lang.Object, double) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils float getFloatValue(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils float getFloatValue(java.util.Map, java.lang.Object, float) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils int getIntValue(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils int getIntValue(java.util.Map, java.lang.Object, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Boolean getBoolean(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Boolean getBoolean(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Boolean getBoolean(java.util.Map, java.lang.Object, java.lang.Boolean) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Byte getByte(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Byte getByte(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Byte getByte(java.util.Map, java.lang.Object, java.lang.Byte) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Double getDouble(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Double getDouble(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Double getDouble(java.util.Map, java.lang.Object, java.lang.Double) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Float getFloat(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Float getFloat(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Float getFloat(java.util.Map, java.lang.Object, java.lang.Float) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Integer getInteger(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Integer getInteger(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Integer getInteger(java.util.Map, java.lang.Object, java.lang.Integer) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Long getLong(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Long getLong(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Long getLong(java.util.Map, java.lang.Object, java.lang.Long) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Number getNumber(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Number getNumber(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Number getNumber(java.util.Map, java.lang.Object, java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Object getObject(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Object getObject(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Object getObject(java.util.Map, java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Short getShort(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Short getShort(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.Short getShort(java.util.Map, java.lang.Object, java.lang.Short) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.String getString(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.String getString(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.lang.String getString(java.util.Map, java.lang.Object, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map fixedSizeMap(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map fixedSizeMap(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map getMap(java.util.Map, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null,_-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map getMap(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map getMap(java.util.Map, java.lang.Object, java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map invertMap(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map invertMap(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map lazyMap(java.util.Map, org.apache.commons.collections.Factory)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map lazyMap(java.util.Map, org.apache.commons.collections.Factory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map lazyMap(java.util.Map, org.apache.commons.collections.Factory) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map lazyMap(java.util.Map, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map lazyMap(java.util.Map, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map lazyMap(java.util.Map, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map multiValueMap(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map multiValueMap(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map multiValueMap(java.util.Map, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map multiValueMap(java.util.Map, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map multiValueMap(java.util.Map, org.apache.commons.collections.Factory)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map multiValueMap(java.util.Map, org.apache.commons.collections.Factory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map multiValueMap(java.util.Map, org.apache.commons.collections.Factory) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map orderedMap(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map orderedMap(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map predicatedMap(java.util.Map, org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map predicatedMap(java.util.Map, org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map putAll(java.util.Map, java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;param1&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map putAll(java.util.Map, java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map putAll(java.util.Map, java.lang.Object[]) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map synchronizedMap(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map synchronizedMap(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map synchronizedSortedMap(java.util.SortedMap)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map synchronizedSortedMap(java.util.SortedMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map transformedMap(java.util.Map, org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map transformedMap(java.util.Map, org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map typedMap(java.util.Map, java.lang.Class, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map typedMap(java.util.Map, java.lang.Class, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map typedMap(java.util.Map, java.lang.Class, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map typedMap(java.util.Map, java.lang.Class, java.lang.Class) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map unmodifiableMap(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map unmodifiableMap(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map unmodifiableSortedMap(java.util.SortedMap)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Map unmodifiableSortedMap(java.util.SortedMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Properties toProperties(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.Properties toProperties(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap fixedSizeSortedMap(java.util.SortedMap)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap fixedSizeSortedMap(java.util.SortedMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap lazySortedMap(java.util.SortedMap, org.apache.commons.collections.Factory)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap lazySortedMap(java.util.SortedMap, org.apache.commons.collections.Factory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap lazySortedMap(java.util.SortedMap, org.apache.commons.collections.Factory) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap lazySortedMap(java.util.SortedMap, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap lazySortedMap(java.util.SortedMap, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap lazySortedMap(java.util.SortedMap, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap predicatedSortedMap(java.util.SortedMap, org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap predicatedSortedMap(java.util.SortedMap, org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap transformedSortedMap(java.util.SortedMap, org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap transformedSortedMap(java.util.SortedMap, org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap typedSortedMap(java.util.SortedMap, java.lang.Class, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap typedSortedMap(java.util.SortedMap, java.lang.Class, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap typedSortedMap(java.util.SortedMap, java.lang.Class, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils java.util.SortedMap typedSortedMap(java.util.SortedMap, java.lang.Class, java.lang.Class) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils long getLongValue(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils long getLongValue(java.util.Map, java.lang.Object, long) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils short getShortValue(java.util.Map, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils short getShortValue(java.util.Map, java.lang.Object, short) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void debugPrint(java.io.PrintStream, java.lang.Object, java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void debugPrint(java.io.PrintStream, java.lang.Object, java.util.Map) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void debugPrint(java.io.PrintStream, java.lang.Object, java.util.Map) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void logInfo(java.lang.Exception) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void safeAddToMap(java.util.Map, java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void safeAddToMap(java.util.Map, java.lang.Object, java.lang.Object) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void verbosePrint(java.io.PrintStream, java.lang.Object, java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void verbosePrint(java.io.PrintStream, java.lang.Object, java.util.Map) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void verbosePrint(java.io.PrintStream, java.lang.Object, java.util.Map) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map, org.apache.commons.collections.ArrayStack, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map, org.apache.commons.collections.ArrayStack, boolean) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map, org.apache.commons.collections.ArrayStack, boolean) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MapUtils void verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map, org.apache.commons.collections.ArrayStack, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap MultiHashMap(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap boolean putAll(java.lang.Object, java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap boolean putAll(java.lang.Object, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap java.lang.Object remove(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap java.util.Collection createCollection(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap java.util.Collection createCollection(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap java.util.Iterator superValuesIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap void putAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap.Values Values()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.MultiHashMap.Values java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils PredicateUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate allPredicate(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate allPredicate(org.apache.commons.collections.Predicate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate andPredicate(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate andPredicate(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate andPredicate(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate anyPredicate(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate anyPredicate(org.apache.commons.collections.Predicate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate asPredicate(org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate asPredicate(org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate equalPredicate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate equalPredicate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate exceptionPredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate falsePredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate identityPredicate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate identityPredicate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate instanceofPredicate(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate instanceofPredicate(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate invokerPredicate(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate invokerPredicate(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate invokerPredicate(java.lang.String, java.lang.Class[], java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate invokerPredicate(java.lang.String, java.lang.Class[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate nonePredicate(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate nonePredicate(org.apache.commons.collections.Predicate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate notNullPredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate notPredicate(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate notPredicate(org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate nullIsExceptionPredicate(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate nullIsExceptionPredicate(org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate nullIsFalsePredicate(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate nullIsFalsePredicate(org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate nullIsTruePredicate(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate nullIsTruePredicate(org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate nullPredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate onePredicate(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate onePredicate(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate onePredicate(org.apache.commons.collections.Predicate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate orPredicate(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate orPredicate(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate orPredicate(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate transformedPredicate(org.apache.commons.collections.Transformer, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate transformedPredicate(org.apache.commons.collections.Transformer, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate transformedPredicate(org.apache.commons.collections.Transformer, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate truePredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.PredicateUtils org.apache.commons.collections.Predicate uniquePredicate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ProxyMap ProxyMap(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap boolean containsKey(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap int indexFor(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.lang.Object get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.lang.Object get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.lang.Object put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.lang.Object put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.lang.Object remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.lang.Object toReference(int, java.lang.Object, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,!null,_-&gt;!null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap org.apache.commons.collections.ReferenceMap.Entry getEntry(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap org.apache.commons.collections.ReferenceMap.Entry getEntry(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap void verify(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap void verify(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap.Entry Entry(java.lang.Object, int, java.lang.Object, org.apache.commons.collections.ReferenceMap.Entry)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap.Entry boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap.Entry boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap.Entry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap.EntryIterator boolean nextNull()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap.SoftRef int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.ReferenceMap.WeakRef int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap boolean containsValue(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap boolean isEmpty()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.lang.Object get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.lang.Object remove(int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.util.Map.Entry getEntry(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.util.Map.Entry getFirst()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.util.Map.Entry getLast()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap org.apache.commons.collections.SequencedHashMap.Entry createSentinel()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap org.apache.commons.collections.SequencedHashMap.Entry removeImpl(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap void insertEntry(org.apache.commons.collections.SequencedHashMap.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap void putAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap void readExternal(java.io.ObjectInput) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap void removeEntry(org.apache.commons.collections.SequencedHashMap.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap void writeExternal(java.io.ObjectOutput) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap.Entry Entry(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap.Entry boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap.Entry boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap.Entry java.lang.Object getKey()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap.Entry java.lang.Object getValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap.Entry java.lang.Object setValue(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap.Entry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap.OrderedIterator OrderedIterator(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SequencedHashMap.OrderedIterator boolean hasNext()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SetUtils SetUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SetUtils boolean isEqualSet(java.util.Collection, java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils boolean isEqualSet(java.util.Collection, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils int hashCodeForSet(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set orderedSet(java.util.Set)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set orderedSet(java.util.Set) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set predicatedSet(java.util.Set, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set predicatedSet(java.util.Set, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set predicatedSet(java.util.Set, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set synchronizedSet(java.util.Set)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set synchronizedSet(java.util.Set) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set transformedSet(java.util.Set, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set transformedSet(java.util.Set, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set transformedSet(java.util.Set, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set typedSet(java.util.Set, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set typedSet(java.util.Set, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set typedSet(java.util.Set, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set unmodifiableSet(java.util.Set)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.Set unmodifiableSet(java.util.Set) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet predicatedSortedSet(java.util.SortedSet, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet predicatedSortedSet(java.util.SortedSet, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet predicatedSortedSet(java.util.SortedSet, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet synchronizedSortedSet(java.util.SortedSet)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet synchronizedSortedSet(java.util.SortedSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet transformedSortedSet(java.util.SortedSet, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet transformedSortedSet(java.util.SortedSet, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet transformedSortedSet(java.util.SortedSet, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet typedSortedSet(java.util.SortedSet, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet typedSortedSet(java.util.SortedSet, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet typedSortedSet(java.util.SortedSet, java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SetUtils java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap boolean isEmpty()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap int getHash(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap java.lang.Object get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap void atomic(java.lang.Runnable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap void putAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.EntryIterator EntryIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.EntrySet EntrySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.EntrySet boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.EntrySet boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.EntrySet int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.EntrySet java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.KeyIterator KeyIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.KeySet KeySet()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.KeySet int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.KeySet java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.Lock Lock()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.Node Node()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.Node boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.Node boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.Node java.lang.Object getKey()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.Node java.lang.Object getValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.Node java.lang.Object setValue(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.ValueIterator ValueIterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.Values Values()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.Values int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.StaticBucketMap.Values java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.SynchronizedPriorityQueue SynchronizedPriorityQueue(org.apache.commons.collections.PriorityQueue)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.SynchronizedPriorityQueue java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils TransformerUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer asTransformer(org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer asTransformer(org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer asTransformer(org.apache.commons.collections.Factory)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer asTransformer(org.apache.commons.collections.Factory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer asTransformer(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer asTransformer(org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer chainedTransformer(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer chainedTransformer(org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer chainedTransformer(org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer chainedTransformer(org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer chainedTransformer(org.apache.commons.collections.Transformer[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer cloneTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer constantTransformer(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer constantTransformer(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer exceptionTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer instantiateTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer invokerTransformer(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer invokerTransformer(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer invokerTransformer(java.lang.String, java.lang.Class[], java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer invokerTransformer(java.lang.String, java.lang.Class[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer mapTransformer(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer mapTransformer(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer nopTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer nullTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer stringValueTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer switchMapTransformer(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer switchTransformer(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer switchTransformer(org.apache.commons.collections.Predicate, org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,!null-&gt;!null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer switchTransformer(org.apache.commons.collections.Predicate, org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer switchTransformer(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer switchTransformer(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer switchTransformer(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[], org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,!null-&gt;!null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer switchTransformer(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[], org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer switchTransformer(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[], org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.TransformerUtils org.apache.commons.collections.Transformer switchTransformer(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[], org.apache.commons.collections.Transformer) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.UnboundedFifoBuffer UnboundedFifoBuffer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.UnboundedFifoBuffer UnboundedFifoBuffer(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.UnboundedFifoBuffer boolean add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.UnboundedFifoBuffer boolean add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.UnboundedFifoBuffer int decrement(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.UnboundedFifoBuffer int increment(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.UnboundedFifoBuffer int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.UnboundedFifoBuffer java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>