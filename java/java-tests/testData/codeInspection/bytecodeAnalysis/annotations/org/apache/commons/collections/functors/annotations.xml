<root>
    <item name='org.apache.commons.collections.functors.AllPredicate AllPredicate(org.apache.commons.collections.Predicate[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.AllPredicate org.apache.commons.collections.Predicate getInstance(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.AllPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.AllPredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.AndPredicate AndPredicate(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.AndPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.AndPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.AndPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.AndPredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.AnyPredicate AnyPredicate(org.apache.commons.collections.Predicate[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.AnyPredicate org.apache.commons.collections.Predicate getInstance(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.AnyPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.AnyPredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedClosure ChainedClosure(org.apache.commons.collections.Closure[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedClosure org.apache.commons.collections.Closure getInstance(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Closure, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Closure, org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Closure, org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Closure[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedClosure org.apache.commons.collections.Closure[] getClosures()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedTransformer ChainedTransformer(org.apache.commons.collections.Transformer[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedTransformer org.apache.commons.collections.Transformer getInstance(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Transformer[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ChainedTransformer org.apache.commons.collections.Transformer[] getTransformers()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.CloneTransformer CloneTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.CloneTransformer INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.CloneTransformer java.lang.Object transform(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.CloneTransformer java.lang.Object transform(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.CloneTransformer org.apache.commons.collections.Transformer getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ClosureTransformer ClosureTransformer(org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ClosureTransformer java.lang.Object transform(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;param1&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ClosureTransformer org.apache.commons.collections.Closure getClosure()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ClosureTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ClosureTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantFactory ConstantFactory(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantFactory NULL_INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantFactory java.lang.Object create()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantFactory java.lang.Object getConstant()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantFactory org.apache.commons.collections.Factory getInstance(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantFactory org.apache.commons.collections.Factory getInstance(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantTransformer ConstantTransformer(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantTransformer NULL_INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantTransformer java.lang.Object getConstant()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantTransformer java.lang.Object transform(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantTransformer java.lang.Object transform(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantTransformer org.apache.commons.collections.Transformer getInstance(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ConstantTransformer org.apache.commons.collections.Transformer getInstance(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.EqualPredicate EqualPredicate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.EqualPredicate java.lang.Object getValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.EqualPredicate org.apache.commons.collections.Predicate getInstance(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.EqualPredicate org.apache.commons.collections.Predicate getInstance(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionClosure ExceptionClosure()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionClosure INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionClosure org.apache.commons.collections.Closure getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionClosure void execute(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionClosure void execute(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionFactory ExceptionFactory()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionFactory INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionFactory java.lang.Object create()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionFactory org.apache.commons.collections.Factory getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionPredicate ExceptionPredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionPredicate INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionPredicate boolean evaluate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionPredicate boolean evaluate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionPredicate org.apache.commons.collections.Predicate getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionTransformer ExceptionTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionTransformer INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionTransformer java.lang.Object transform(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionTransformer java.lang.Object transform(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.ExceptionTransformer org.apache.commons.collections.Transformer getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.FactoryTransformer FactoryTransformer(org.apache.commons.collections.Factory)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.FactoryTransformer java.lang.Object transform(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.FactoryTransformer org.apache.commons.collections.Factory getFactory()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.FactoryTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Factory)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.FactoryTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Factory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.FalsePredicate FalsePredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.FalsePredicate INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.FalsePredicate boolean evaluate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.FalsePredicate boolean evaluate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.FalsePredicate org.apache.commons.collections.Predicate getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ForClosure ForClosure(int, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ForClosure int getCount()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ForClosure org.apache.commons.collections.Closure getClosure()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ForClosure org.apache.commons.collections.Closure getInstance(int, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.ForClosure org.apache.commons.collections.Closure getInstance(int, org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils FunctorUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils org.apache.commons.collections.Closure[] copy(org.apache.commons.collections.Closure[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils org.apache.commons.collections.Closure[] copy(org.apache.commons.collections.Closure[]) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils org.apache.commons.collections.Predicate[] copy(org.apache.commons.collections.Predicate[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils org.apache.commons.collections.Predicate[] copy(org.apache.commons.collections.Predicate[]) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils org.apache.commons.collections.Predicate[] validate(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils org.apache.commons.collections.Predicate[] validate(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils org.apache.commons.collections.Transformer[] copy(org.apache.commons.collections.Transformer[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils org.apache.commons.collections.Transformer[] copy(org.apache.commons.collections.Transformer[]) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils void validate(org.apache.commons.collections.Closure[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils void validate(org.apache.commons.collections.Predicate[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.FunctorUtils void validate(org.apache.commons.collections.Transformer[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.IdentityPredicate IdentityPredicate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.IdentityPredicate boolean evaluate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.IdentityPredicate boolean evaluate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.IdentityPredicate java.lang.Object getValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.IdentityPredicate org.apache.commons.collections.Predicate getInstance(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.IdentityPredicate org.apache.commons.collections.Predicate getInstance(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure IfClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure IfClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure org.apache.commons.collections.Closure getFalseClosure()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure org.apache.commons.collections.Closure getTrueClosure()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.IfClosure org.apache.commons.collections.Predicate getPredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.InstanceofPredicate InstanceofPredicate(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.InstanceofPredicate java.lang.Class getType()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.InstanceofPredicate org.apache.commons.collections.Predicate getInstance(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.InstanceofPredicate org.apache.commons.collections.Predicate getInstance(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.InstantiateFactory org.apache.commons.collections.Factory getInstance(java.lang.Class, java.lang.Class[], java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.InstantiateFactory org.apache.commons.collections.Factory getInstance(java.lang.Class, java.lang.Class[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.InstantiateTransformer InstantiateTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.InstantiateTransformer InstantiateTransformer(java.lang.Class[], java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.InstantiateTransformer NO_ARG_INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.InstantiateTransformer java.lang.Object transform(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.InvokerTransformer InvokerTransformer(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.InvokerTransformer InvokerTransformer(java.lang.String, java.lang.Class[], java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.InvokerTransformer java.lang.Object transform(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.InvokerTransformer java.lang.Object transform(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.InvokerTransformer org.apache.commons.collections.Transformer getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.InvokerTransformer org.apache.commons.collections.Transformer getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.InvokerTransformer org.apache.commons.collections.Transformer getInstance(java.lang.String, java.lang.Class[], java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.InvokerTransformer org.apache.commons.collections.Transformer getInstance(java.lang.String, java.lang.Class[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.MapTransformer MapTransformer(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.MapTransformer java.util.Map getMap()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.MapTransformer org.apache.commons.collections.Transformer getInstance(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.MapTransformer org.apache.commons.collections.Transformer getInstance(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.NOPClosure INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NOPClosure NOPClosure()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NOPClosure org.apache.commons.collections.Closure getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NOPClosure void execute(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NOPClosure void execute(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.NOPTransformer INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NOPTransformer NOPTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NOPTransformer java.lang.Object transform(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;param1&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NOPTransformer org.apache.commons.collections.Transformer getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NonePredicate NonePredicate(org.apache.commons.collections.Predicate[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NonePredicate org.apache.commons.collections.Predicate getInstance(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NonePredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NonePredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NotNullPredicate INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NotNullPredicate NotNullPredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NotNullPredicate boolean evaluate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;true;null-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NotNullPredicate boolean evaluate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.NotNullPredicate org.apache.commons.collections.Predicate getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NotPredicate NotPredicate(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NotPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NotPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NotPredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsExceptionPredicate NullIsExceptionPredicate(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsExceptionPredicate boolean evaluate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsExceptionPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsExceptionPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsExceptionPredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsFalsePredicate NullIsFalsePredicate(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsFalsePredicate boolean evaluate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsFalsePredicate boolean evaluate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsFalsePredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsFalsePredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsFalsePredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsTruePredicate NullIsTruePredicate(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsTruePredicate boolean evaluate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsTruePredicate boolean evaluate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsTruePredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsTruePredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullIsTruePredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullPredicate INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullPredicate NullPredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NullPredicate boolean evaluate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;false;null-&gt;true&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.NullPredicate boolean evaluate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.NullPredicate org.apache.commons.collections.Predicate getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.OnePredicate OnePredicate(org.apache.commons.collections.Predicate[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.OnePredicate org.apache.commons.collections.Predicate getInstance(java.util.Collection)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.OnePredicate org.apache.commons.collections.Predicate getInstance(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.OnePredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.OnePredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.OrPredicate OrPredicate(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.OrPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.OrPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.OrPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.OrPredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.PredicateTransformer PredicateTransformer(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.PredicateTransformer org.apache.commons.collections.Predicate getPredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.PredicateTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.PredicateTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.PrototypeFactory PrototypeFactory()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.PrototypeFactory org.apache.commons.collections.Factory getInstance(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;!null-&gt;!null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.PrototypeFactory org.apache.commons.collections.Factory getInstance(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.PrototypeFactory.PrototypeSerializationFactory PrototypeSerializationFactory(java.io.Serializable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.PrototypeFactory.PrototypeSerializationFactory java.lang.Object create()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.StringValueTransformer INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.StringValueTransformer StringValueTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.StringValueTransformer java.lang.Object transform(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.StringValueTransformer java.lang.Object transform(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.StringValueTransformer org.apache.commons.collections.Transformer getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchClosure SwitchClosure(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[], org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchClosure SwitchClosure(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[], org.apache.commons.collections.Closure) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchClosure org.apache.commons.collections.Closure getDefaultClosure()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchClosure org.apache.commons.collections.Closure getInstance(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[], org.apache.commons.collections.Closure)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,!null-&gt;!null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[], org.apache.commons.collections.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[], org.apache.commons.collections.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Closure[], org.apache.commons.collections.Closure) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchClosure org.apache.commons.collections.Closure[] getClosures()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchClosure org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchTransformer SwitchTransformer(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[], org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchTransformer SwitchTransformer(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[], org.apache.commons.collections.Transformer) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchTransformer org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchTransformer org.apache.commons.collections.Transformer getDefaultTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchTransformer org.apache.commons.collections.Transformer getInstance(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[], org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,!null-&gt;!null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[], org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[], org.apache.commons.collections.Transformer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchTransformer org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Predicate[], org.apache.commons.collections.Transformer[], org.apache.commons.collections.Transformer) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.SwitchTransformer org.apache.commons.collections.Transformer[] getTransformers()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.TransformedPredicate TransformedPredicate(org.apache.commons.collections.Transformer, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.TransformedPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Transformer, org.apache.commons.collections.Predicate)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.TransformedPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Transformer, org.apache.commons.collections.Predicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.TransformedPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Transformer, org.apache.commons.collections.Predicate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.TransformedPredicate org.apache.commons.collections.Predicate[] getPredicates()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.TransformedPredicate org.apache.commons.collections.Transformer getTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.TransformerClosure TransformerClosure(org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.TransformerClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;!null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.TransformerClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.TransformerClosure org.apache.commons.collections.Transformer getTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.TransformerPredicate TransformerPredicate(org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.TransformerPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Transformer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.TransformerPredicate org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Transformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.TransformerPredicate org.apache.commons.collections.Transformer getTransformer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.TruePredicate INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.TruePredicate TruePredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.TruePredicate boolean evaluate(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;true&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.TruePredicate boolean evaluate(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.collections.functors.TruePredicate org.apache.commons.collections.Predicate getInstance()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.UniquePredicate org.apache.commons.collections.Predicate getInstance()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.WhileClosure WhileClosure(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.WhileClosure boolean isDoLoop()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.WhileClosure org.apache.commons.collections.Closure getClosure()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.collections.functors.WhileClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.WhileClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.WhileClosure org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.collections.functors.WhileClosure org.apache.commons.collections.Predicate getPredicate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
</root>