<root>
    <item name='org.apache.commons.lang.math.DoubleRange DoubleRange(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange DoubleRange(double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange DoubleRange(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange DoubleRange(java.lang.Number, java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange DoubleRange(java.lang.Number, java.lang.Number) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange boolean containsDouble(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange boolean containsNumber(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange boolean containsNumber(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange boolean containsRange(org.apache.commons.lang.math.Range)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange boolean containsRange(org.apache.commons.lang.math.Range) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange boolean overlapsRange(org.apache.commons.lang.math.Range)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange boolean overlapsRange(org.apache.commons.lang.math.Range) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange double getMaximumDouble()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange double getMinimumDouble()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange float getMaximumFloat()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange float getMinimumFloat()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange int getMaximumInteger()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange int getMinimumInteger()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange java.lang.Number getMaximumNumber()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange java.lang.Number getMinimumNumber()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange long getMaximumLong()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.DoubleRange long getMinimumLong()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange FloatRange(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange FloatRange(float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange FloatRange(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange FloatRange(java.lang.Number, java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange FloatRange(java.lang.Number, java.lang.Number) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange boolean containsFloat(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange boolean containsNumber(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange boolean containsNumber(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange boolean containsRange(org.apache.commons.lang.math.Range)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange boolean containsRange(org.apache.commons.lang.math.Range) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange boolean overlapsRange(org.apache.commons.lang.math.Range)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange boolean overlapsRange(org.apache.commons.lang.math.Range) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange double getMaximumDouble()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange double getMinimumDouble()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange float getMaximumFloat()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange float getMinimumFloat()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange int getMaximumInteger()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange int getMinimumInteger()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange java.lang.Number getMaximumNumber()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange java.lang.Number getMinimumNumber()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange long getMaximumLong()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.FloatRange long getMinimumLong()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction FOUR_FIFTHS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction Fraction(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction ONE_FIFTH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction ONE_HALF'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction ONE_QUARTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction ONE_THIRD'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction THREE_FIFTHS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction THREE_QUARTERS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction TWO_FIFTHS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction TWO_QUARTERS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction TWO_THIRDS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction ZERO'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction double doubleValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction float floatValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int addAndCheck(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int compareTo(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int getDenominator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int getNumerator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int getProperNumerator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int getProperWhole()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int greatestCommonDivisor(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int intValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int mulAndCheck(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int mulPosAndCheck(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction int subAndCheck(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction java.lang.String toProperString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction long longValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction abs()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction add(org.apache.commons.lang.math.Fraction) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction addSub(org.apache.commons.lang.math.Fraction, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,false-&gt;!null&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction addSub(org.apache.commons.lang.math.Fraction, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction divideBy(org.apache.commons.lang.math.Fraction)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction divideBy(org.apache.commons.lang.math.Fraction) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction getFraction(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction getFraction(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction getFraction(int, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_,_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction getFraction(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction getReducedFraction(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction invert()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction multiplyBy(org.apache.commons.lang.math.Fraction)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction multiplyBy(org.apache.commons.lang.math.Fraction) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction negate()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction reduce()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction subtract(org.apache.commons.lang.math.Fraction) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils IEEE754rUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils double max(double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils double max(double, double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils double max(double[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils double max(double[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils double min(double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils double min(double, double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils double min(double[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils double min(double[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils float max(float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils float max(float, float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils float max(float[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils float max(float[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils float min(float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils float min(float, float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils float min(float[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IEEE754rUtils float min(float[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.IntRange IntRange(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange IntRange(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange IntRange(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.IntRange IntRange(java.lang.Number, java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.IntRange IntRange(java.lang.Number, java.lang.Number) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.IntRange boolean containsInteger(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange boolean containsNumber(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange boolean containsNumber(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.IntRange boolean containsRange(org.apache.commons.lang.math.Range)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange boolean containsRange(org.apache.commons.lang.math.Range) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.IntRange boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.IntRange boolean overlapsRange(org.apache.commons.lang.math.Range)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange boolean overlapsRange(org.apache.commons.lang.math.Range) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.IntRange double getMaximumDouble()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange double getMinimumDouble()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange float getMaximumFloat()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange float getMinimumFloat()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange int getMaximumInteger()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange int getMinimumInteger()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange int[] toArray()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange java.lang.Number getMaximumNumber()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange java.lang.Number getMinimumNumber()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange long getMaximumLong()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.IntRange long getMinimumLong()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.JVMRandom double nextGaussian()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.JVMRandom void nextBytes(byte[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.JVMRandom void nextBytes(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.JVMRandom void setSeed(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange LongRange(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.LongRange LongRange(java.lang.Number, java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.LongRange LongRange(java.lang.Number, java.lang.Number) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.LongRange LongRange(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange LongRange(long, long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange boolean containsLong(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange boolean containsNumber(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange boolean containsNumber(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.LongRange boolean containsRange(org.apache.commons.lang.math.Range)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange boolean containsRange(org.apache.commons.lang.math.Range) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.LongRange boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.LongRange boolean overlapsRange(org.apache.commons.lang.math.Range)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange boolean overlapsRange(org.apache.commons.lang.math.Range) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.LongRange double getMaximumDouble()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange double getMinimumDouble()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange float getMaximumFloat()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange float getMinimumFloat()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange int getMaximumInteger()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange int getMinimumInteger()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange java.lang.Number getMaximumNumber()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange java.lang.Number getMinimumNumber()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange long getMaximumLong()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange long getMinimumLong()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.LongRange long[] toArray()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberRange NumberRange(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberRange NumberRange(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberRange NumberRange(java.lang.Number, java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberRange NumberRange(java.lang.Number, java.lang.Number) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberRange boolean containsNumber(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberRange boolean containsNumber(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberRange boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberRange java.lang.Number getMaximumNumber()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberRange java.lang.Number getMinimumNumber()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberRange java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils BYTE_MINUS_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils BYTE_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils BYTE_ZERO'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils DOUBLE_MINUS_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils DOUBLE_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils DOUBLE_ZERO'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils FLOAT_MINUS_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils FLOAT_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils FLOAT_ZERO'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils INTEGER_MINUS_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils INTEGER_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils INTEGER_ZERO'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils LONG_MINUS_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils LONG_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils LONG_ZERO'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils NumberUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils SHORT_MINUS_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils SHORT_ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils SHORT_ZERO'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils boolean isAllZeros(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils boolean isAllZeros(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils boolean isDigits(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils boolean isNumber(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils byte max(byte, byte, byte)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils byte max(byte[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils byte max(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils byte min(byte, byte, byte)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils byte min(byte[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils byte min(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils double max(double, double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils double max(double[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils double max(double[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils double min(double, double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils double min(double[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils double min(double[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils double toDouble(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils double toDouble(java.lang.String, double) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils float max(float, float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils float max(float[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils float max(float[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils float min(float, float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils float min(float[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils float min(float[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils float toFloat(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils float toFloat(java.lang.String, float) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int compare(double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int compare(float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int max(int, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int max(int[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int max(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int min(int, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int min(int[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int min(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int stringToInt(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int stringToInt(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int toInt(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils int toInt(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils java.lang.Double createDouble(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils java.lang.Double createDouble(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils java.lang.Float createFloat(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils java.lang.Float createFloat(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils java.lang.Integer createInteger(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils java.lang.Integer createInteger(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils java.lang.Long createLong(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils java.lang.Long createLong(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils java.lang.Number createNumber(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils java.lang.Number createNumber(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils long max(long, long, long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils long max(long[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils long max(long[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils long min(long, long, long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils long min(long[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils long min(long[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils long toLong(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils long toLong(java.lang.String, long) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils short max(short, short, short)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils short max(short[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils short max(short[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils short min(short, short, short)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils short min(short[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.NumberUtils short min(short[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.RandomUtils JVM_RANDOM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.RandomUtils RandomUtils()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.RandomUtils boolean nextBoolean(java.util.Random) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.RandomUtils double nextDouble(java.util.Random) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.RandomUtils float nextFloat(java.util.Random) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.RandomUtils int nextInt(java.util.Random) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.RandomUtils int nextInt(java.util.Random, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.RandomUtils long nextLong(java.util.Random) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang.math.Range Range()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean containsDouble(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean containsDouble(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean containsFloat(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean containsFloat(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean containsInteger(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean containsInteger(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean containsLong(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean containsLong(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean containsRange(org.apache.commons.lang.math.Range)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean containsRange(org.apache.commons.lang.math.Range) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean overlapsRange(org.apache.commons.lang.math.Range)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='org.apache.commons.lang.math.Range boolean overlapsRange(org.apache.commons.lang.math.Range) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='org.apache.commons.lang.math.Range java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>