<root>
    <item name='java.io.BufferedInputStream boolean markSupported()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.BufferedInputStream int read(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.BufferedInputStream java.io.InputStream getInIfOpen()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.BufferedInputStream void mark(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.BufferedOutputStream BufferedOutputStream(java.io.OutputStream)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.BufferedOutputStream BufferedOutputStream(java.io.OutputStream, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.BufferedReader BufferedReader(java.io.Reader)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.BufferedReader BufferedReader(java.io.Reader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.BufferedReader BufferedReader(java.io.Reader, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.BufferedReader BufferedReader(java.io.Reader, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.BufferedReader boolean markSupported()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.BufferedReader int read(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.BufferedReader java.lang.String readLine()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.BufferedReader java.lang.String readLine(boolean)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.BufferedReader void ensureOpen()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.BufferedReader void mark(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.BufferedReader void reset()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.BufferedWriter BufferedWriter(java.io.Writer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.BufferedWriter BufferedWriter(java.io.Writer, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.BufferedWriter int min(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.BufferedWriter void ensureOpen()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.BufferedWriter void write(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ByteArrayInputStream ByteArrayInputStream(byte[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayInputStream ByteArrayInputStream(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ByteArrayInputStream ByteArrayInputStream(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayInputStream ByteArrayInputStream(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ByteArrayInputStream boolean markSupported()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayInputStream int available()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayInputStream int read()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayInputStream int read(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this,param1&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayInputStream int read(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ByteArrayInputStream long skip(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayInputStream void close()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayInputStream void mark(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayInputStream void reset()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayOutputStream ByteArrayOutputStream()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayOutputStream ByteArrayOutputStream(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayOutputStream byte[] toByteArray()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ByteArrayOutputStream int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayOutputStream java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ByteArrayOutputStream java.lang.String toString(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ByteArrayOutputStream java.lang.String toString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ByteArrayOutputStream java.lang.String toString(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ByteArrayOutputStream void close()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayOutputStream void reset()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ByteArrayOutputStream void write(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ByteArrayOutputStream void writeTo(java.io.OutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.DataInputStream int read(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.DataInputStream java.lang.String readLine()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.DataInputStream java.lang.String readUTF()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.DataInputStream void readFully(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.EOFException EOFException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.EOFException EOFException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.File File(java.io.File, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File File(java.io.File, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File File(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File File(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.File File(java.lang.String, java.io.File) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File File(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File File(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File File(java.net.URI) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='java.io.File boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File boolean isInvalid()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.File boolean renameTo(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File int getPrefixLength()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.File java.io.File createTempFile(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File java.io.File createTempFile(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File java.io.File createTempFile(java.lang.String, java.lang.String, java.io.File)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File java.io.File createTempFile(java.lang.String, java.lang.String, java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File java.io.File getAbsoluteFile()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File java.io.File getCanonicalFile()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File java.io.File getParentFile()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File java.io.File[] listFiles()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File java.io.File[] listFiles(java.io.FilenameFilter)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File java.io.File[] listFiles(java.io.FilenameFilter) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File java.lang.String getParent()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File java.lang.String getPath()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.File java.lang.String slashify(java.lang.String, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.File java.lang.String slashify(java.lang.String, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.File java.lang.String[] list()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File java.lang.String[] list(java.io.FilenameFilter) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File java.net.URI toURI()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File java.net.URL toURL()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File.TempDirectory TempDirectory()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.File.TempDirectory java.io.File generateFile(java.lang.String, java.lang.String, java.io.File)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File.TempDirectory java.io.File generateFile(java.lang.String, java.lang.String, java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.File.TempDirectory java.io.File generateFile(java.lang.String, java.lang.String, java.io.File) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File.TempDirectory java.io.File generateFile(java.lang.String, java.lang.String, java.io.File) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.File.TempDirectory java.io.File location()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.FileInputStream FileInputStream(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.FileInputStream int read(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.FileNotFoundException FileNotFoundException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.FileNotFoundException FileNotFoundException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.FileNotFoundException FileNotFoundException(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.FileNotFoundException FileNotFoundException(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.FileNotFoundException FileNotFoundException(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.FileOutputStream FileOutputStream(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.FileOutputStream FileOutputStream(java.io.File, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.FileOutputStream void write(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.FileReader FileReader(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.FileWriter FileWriter(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.FileWriter FileWriter(java.io.File, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.FilterOutputStream FilterOutputStream(java.io.OutputStream)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.FilterOutputStream void write(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.FilterOutputStream void write(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.IOException IOException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.IOException IOException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.IOException IOException(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.IOException IOException(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.InputStream InputStream()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.InputStream boolean markSupported()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.InputStream int available()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.InputStream int read(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.InputStream int read(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.InputStream void close()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.InputStream void mark(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.InputStream void reset()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.InputStreamReader InputStreamReader(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.InputStreamReader InputStreamReader(java.io.InputStream, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.InputStreamReader InputStreamReader(java.io.InputStream, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream int read(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream java.io.ObjectInputStream.GetField readFields()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Class&lt;?&gt; resolveProxyClass(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Enum readEnum(boolean)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Object cloneArray(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;new&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Object cloneArray(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Object readArray(boolean)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Object readNull()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Object readObject()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Object readObject0(boolean)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Object readObjectOverride()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Object readUnshared()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream java.lang.Object resolveObject(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;param1&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream void readFully(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream void readFully(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream.BlockDataInputStream boolean getBlockDataMode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.BlockDataInputStream boolean setBlockDataMode(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.BlockDataInputStream int currentBlockRemaining()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.BlockDataInputStream int readUTFChar(java.lang.StringBuilder, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream.BlockDataInputStream java.lang.String readLine()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream.BlockDataInputStream java.lang.String readLongUTF()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream.BlockDataInputStream java.lang.String readUTF()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream.BlockDataInputStream java.lang.String readUTFBody(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream.BlockDataInputStream long readUTFSpan(java.lang.StringBuilder, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream.BlockDataInputStream void readFully(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectInputStream.Caches Caches()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.FilterValues FilterValues(java.lang.Class&lt;?&gt;, long, long, long, long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.FilterValues java.lang.Class&lt;?&gt; serialClass()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.FilterValues long arrayLength()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.FilterValues long depth()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.FilterValues long references()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.FilterValues long streamBytes()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.GetField GetField()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.GetFieldImpl java.lang.Object get(java.lang.String, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream.HandleTable HandleTable(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.HandleTable int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.HandleTable java.lang.ClassNotFoundException lookupException(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream.HandleTable java.lang.Object lookupObject(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectInputStream.HandleTable void grow()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.HandleTable.HandleList HandleList()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.HandleTable.HandleList int get(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.HandleTable.HandleList int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.Logging Logging()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.PeekInputStream PeekInputStream(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.PeekInputStream long getBytesRead()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.ValidationList ValidationList()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectInputStream.ValidationList void clear()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream int getProtocolVersion()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream java.lang.Object replaceObject(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;param1&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream void annotateClass(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream void annotateClass(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectOutputStream void annotateProxyClass(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream void annotateProxyClass(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectOutputStream void write(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream void write(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream void writeExternalData(java.io.Externalizable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream void writeObjectOverride(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream void writeObjectOverride(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectOutputStream void writeTypeString(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectOutputStream.BlockDataOutputStream boolean getBlockDataMode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream.BlockDataOutputStream long getUTFLength(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream.BlockDataOutputStream void write(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream.BlockDataOutputStream void writeBytes(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream.BlockDataOutputStream void writeChars(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream.BlockDataOutputStream void writeLongUTF(java.lang.String, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream.BlockDataOutputStream void writeUTF(java.lang.String, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream.BlockDataOutputStream void writeUTFBody(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream.Caches Caches()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream.DebugTraceInfoStack DebugTraceInfoStack()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream.DebugTraceInfoStack java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream.DebugTraceInfoStack void push(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.ObjectOutputStream.HandleTable int size()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream.HandleTable void growEntries()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream.PutField PutField()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectOutputStream.PutFieldImpl void write(java.io.ObjectOutput) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.ObjectOutputStream.ReplaceTable void grow()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.ObjectStreamException ObjectStreamException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.ObjectStreamException ObjectStreamException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.OutputStream OutputStream()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.OutputStream void close()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.OutputStream void flush()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.OutputStream void write(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.OutputStream void write(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.OutputStreamWriter OutputStreamWriter(java.io.OutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.OutputStreamWriter OutputStreamWriter(java.io.OutputStream, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.OutputStreamWriter OutputStreamWriter(java.io.OutputStream, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream PrintStream(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream PrintStream(java.io.File, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream PrintStream(java.io.File, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream PrintStream(java.io.OutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream PrintStream(java.io.OutputStream, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream PrintStream(java.io.OutputStream, boolean, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream PrintStream(java.io.OutputStream, boolean, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream PrintStream(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream T requireNonNull(T, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_,_-&gt;param1&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.PrintStream T requireNonNull(T, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream java.io.PrintStream append(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;this&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream java.io.PrintStream append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;this&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream java.io.PrintStream append(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.PrintStream java.io.PrintStream append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;this&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream java.io.PrintStream append(java.lang.CharSequence, int, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.PrintStream java.io.PrintStream format(java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_-&gt;this&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream java.io.PrintStream format(java.util.Locale, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;this&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.PrintStream void clearError()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.PrintStream void ensureOpen()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.PrintStream void print(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.PrintStream void print(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.PrintStream void println(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.PrintStream void setError()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="mutates" val="&quot;this&quot;"/>
        </annotation>
    </item>
    <item name='java.io.RandomAccessFile RandomAccessFile(java.io.File, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.RandomAccessFile RandomAccessFile(java.io.File, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.RandomAccessFile RandomAccessFile(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.RandomAccessFile int read(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.RandomAccessFile java.lang.String readLine()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.RandomAccessFile java.lang.String readUTF()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;new&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.RandomAccessFile void readFully(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.RandomAccessFile void write(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.RandomAccessFile void writeBytes(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.RandomAccessFile void writeChars(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.Reader Reader()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.Reader Reader(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.Reader Reader(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.Reader boolean markSupported()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.Reader boolean ready()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.Reader int read(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.Reader void mark(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.Reader void reset()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.Writer Writer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.Writer Writer(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.io.Writer Writer(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.Writer java.io.Writer append(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;this&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.Writer java.io.Writer append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;this&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.Writer java.io.Writer append(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.Writer java.io.Writer append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,_-&gt;this&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.Writer java.io.Writer append(java.lang.CharSequence, int, int) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.io.Writer void write(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.Writer void write(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.io.Writer void write(java.lang.String, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>