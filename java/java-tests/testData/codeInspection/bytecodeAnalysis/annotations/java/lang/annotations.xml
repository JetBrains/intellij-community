<root>
    <item name='java.lang.AbstractStringBuilder AbstractStringBuilder()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AbstractStringBuilder AbstractStringBuilder(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AbstractStringBuilder char[] getValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AbstractStringBuilder int capacity()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AbstractStringBuilder int codePointCount(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AbstractStringBuilder int indexOf(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AbstractStringBuilder int indexOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder int lastIndexOf(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AbstractStringBuilder int lastIndexOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder int length()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AbstractStringBuilder int offsetByCodePoints(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.StringBuffer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;!null-&gt;!null&quot;"/>
        </annotation>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.StringBuffer) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder appendCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder delete(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder deleteCharAt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.String substring(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ArithmeticException ArithmeticException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ArithmeticException ArithmeticException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ArrayIndexOutOfBoundsException ArrayIndexOutOfBoundsException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ArrayIndexOutOfBoundsException ArrayIndexOutOfBoundsException(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ArrayIndexOutOfBoundsException ArrayIndexOutOfBoundsException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ArrayStoreException ArrayStoreException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ArrayStoreException ArrayStoreException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AssertionError AssertionError()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AssertionError AssertionError(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AssertionError AssertionError(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AssertionError AssertionError(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AssertionError AssertionError(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AssertionError AssertionError(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AssertionError AssertionError(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.AssertionError AssertionError(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AssertionError AssertionError(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.AssertionError AssertionError(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Boolean Boolean(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Boolean Boolean(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Boolean boolean booleanValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Boolean boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Boolean boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Boolean boolean parseBoolean(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='java.lang.Boolean boolean parseBoolean(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Boolean boolean toBoolean(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='java.lang.Boolean boolean toBoolean(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Boolean int compare(boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Boolean int compareTo(java.lang.Boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Boolean int compareTo(java.lang.Boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Boolean int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Boolean java.lang.Boolean valueOf(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Boolean java.lang.Boolean valueOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Boolean java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Boolean java.lang.String toString(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte Byte(byte)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte Byte(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Byte byte byteValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte byte parseByte(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte byte parseByte(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte double doubleValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte float floatValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte int compare(byte, byte)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte int compareTo(java.lang.Byte)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte int compareTo(java.lang.Byte) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte int intValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte java.lang.Byte decode(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte java.lang.Byte valueOf(byte)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte java.lang.Byte valueOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte java.lang.Byte valueOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte java.lang.String toString(byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte long longValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte short shortValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Byte.ByteCache ByteCache()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.CharSequence java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character Character(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Character boolean isBmpCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean isHighSurrogate(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean isISOControl(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean isISOControl(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean isLowSurrogate(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean isSpace(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean isSupplementaryCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean isSurrogate(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean isSurrogatePair(char, char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character boolean isValidCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character char charValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character char forDigit(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character char highSurrogate(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character char lowSurrogate(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character char reverseBytes(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character char[] toChars(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int charCount(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int codePointAt(char[], int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int codePointAt(char[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int codePointAt(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int codePointAt(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int codePointAt(java.lang.CharSequence, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int codePointAtImpl(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int codePointAtImpl(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int codePointBefore(char[], int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int codePointBefore(char[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int codePointBefore(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int codePointBefore(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int codePointBefore(java.lang.CharSequence, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int codePointBeforeImpl(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int codePointBeforeImpl(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int codePointCount(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int codePointCount(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int codePointCount(java.lang.CharSequence, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int codePointCountImpl(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int compare(char, char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int compareTo(java.lang.Character)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int compareTo(java.lang.Character) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int offsetByCodePoints(char[], int, int, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int offsetByCodePoints(char[], int, int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int offsetByCodePoints(java.lang.CharSequence, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int offsetByCodePointsImpl(char[], int, int, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character int toChars(int, char[], int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character int toCodePoint(char, char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character java.lang.Character valueOf(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character java.lang.String getName(int)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Character java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character java.lang.String toString(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character void toSurrogates(int, char[], int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character.CharacterCache CharacterCache()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character.Subset Subset(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character.Subset Subset(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character.Subset boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character.Subset boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Character.Subset int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character.Subset java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character.UnicodeBlock UnicodeBlock(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character.UnicodeBlock UnicodeBlock(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character.UnicodeBlock UnicodeBlock(java.lang.String, java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character.UnicodeBlock UnicodeBlock(java.lang.String, java.lang.String...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character.UnicodeBlock java.lang.Character.UnicodeBlock forName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character.UnicodeBlock java.lang.Character.UnicodeBlock of(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character.UnicodeBlock java.lang.Character.UnicodeBlock of(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Character.UnicodeScript java.lang.Character.UnicodeScript forName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class A getAnnotation(java.lang.Class&lt;A&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class Class(java.lang.ClassLoader)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class T cast(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
        </annotation>
    </item>
    <item name='java.lang.Class T newInstance()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class T[] getEnumConstants()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class T[] getEnumConstantsShared()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class boolean arrayContentsEq(java.lang.Object[], java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class boolean arrayContentsEq(java.lang.Object[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class boolean arrayContentsEq(java.lang.Object[], java.lang.Object[]) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class boolean isAnnotationPresent(java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class boolean isAsciiDigit(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class java.io.InputStream getResourceAsStream(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class java.lang.Class.EnclosingMethodInfo getEnclosingMethodInfo()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class java.lang.Class.ReflectionData&lt;T&gt; reflectionData()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class java.lang.Class&lt;? extends U&gt; asSubclass(java.lang.Class&lt;U&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.Class&lt;? extends U&gt; asSubclass(java.lang.Class&lt;U&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.Class&lt;?&gt; getComponentType()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class java.lang.ClassLoader getClassLoader()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class java.lang.ClassLoader getClassLoader0()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class java.lang.String argumentTypesToString(java.lang.Class&lt;?&gt;[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.String argumentTypesToString(java.lang.Class&lt;?&gt;[]) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class java.lang.String cannotCastMsg(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.String cannotCastMsg(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.String getCanonicalName()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class java.lang.String getSimpleBinaryName()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class java.lang.String getSimpleName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.String resolveName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
        </annotation>
    </item>
    <item name='java.lang.Class java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.net.URL getResource(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class void checkMemberAccess(int, java.lang.Class&lt;?&gt;, boolean) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Class.Atomic Atomic()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class.EnclosingMethodInfo EnclosingMethodInfo(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class.EnclosingMethodInfo boolean isConstructor()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class.EnclosingMethodInfo boolean isMethod()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class.EnclosingMethodInfo boolean isPartial()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class.EnclosingMethodInfo java.lang.Class&lt;?&gt; getEnclosingClass()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class.EnclosingMethodInfo java.lang.String getDescriptor()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class.EnclosingMethodInfo java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class.MethodArray MethodArray()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class.MethodArray int length()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Class.MethodArray void addAll(java.lang.Class.MethodArray) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class.MethodArray void addAllIfNotPresent(java.lang.Class.MethodArray) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class.ReflectionData ReflectionData(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassCastException ClassCastException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassCastException ClassCastException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassLoader ClassLoader(java.lang.Void, java.lang.ClassLoader) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader boolean checkName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;null-&gt;true&quot;"/>
        </annotation>
    </item>
    <item name='java.lang.ClassLoader boolean checkName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader boolean isAncestor(java.lang.ClassLoader)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassLoader boolean isAncestor(java.lang.ClassLoader) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader boolean loadLibrary1(java.lang.Class, java.io.File)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,null-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='java.lang.ClassLoader boolean needsClassLoaderPermissionCheck(java.lang.ClassLoader, java.lang.ClassLoader)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
        </annotation>
    </item>
    <item name='java.lang.ClassLoader boolean needsClassLoaderPermissionCheck(java.lang.ClassLoader, java.lang.ClassLoader) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.io.InputStream getResourceAsStream(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.io.InputStream getSystemResourceAsStream(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.Class findBootstrapClassOrNull(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.Class&lt;?&gt; findClass(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassLoader java.lang.Class&lt;?&gt; findLoadedClass(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.ClassLoader getClassLoader(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.ClassLoader getClassLoader(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.ClassLoader getParent()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.ClassLoader getSystemClassLoader()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.String findLibrary(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.String findLibrary(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.String[] initializePath(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.Void checkCreateClassLoader()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.net.URL findResource(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.net.URL findResource(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.net.URL getBootstrapResource(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.net.URL getSystemResource(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; findResources(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; findResources(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; getBootstrapResources(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; getResources(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader void checkClassLoaderPermission(java.lang.ClassLoader, java.lang.Class&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ClassLoader void setSigners(java.lang.Class&lt;?&gt;, java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader.NativeLibrary NativeLibrary(java.lang.Class, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassLoader.ParallelLoaders ParallelLoaders()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassLoader.ParallelLoaders boolean register(java.lang.Class&lt;? extends java.lang.ClassLoader&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassNotFoundException ClassNotFoundException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassNotFoundException ClassNotFoundException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassNotFoundException ClassNotFoundException(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassNotFoundException java.lang.Throwable getCause()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ClassNotFoundException java.lang.Throwable getException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.CloneNotSupportedException CloneNotSupportedException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.CloneNotSupportedException CloneNotSupportedException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double Double(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Double boolean isInfinite()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double boolean isInfinite(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double boolean isNaN()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double boolean isNaN(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double byte byteValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double double doubleValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double double longBitsToDouble(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double float floatValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double int compare(double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double int compareTo(java.lang.Double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double int compareTo(java.lang.Double) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Double int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double int intValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double java.lang.Double valueOf(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Double java.lang.Double valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Double java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double long doubleToLongBits(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double long doubleToRawLongBits(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double long longValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Double short shortValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Enum Enum(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Enum T valueOf(java.lang.Class&lt;T&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Enum boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Enum boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Enum int compareTo(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Enum int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Enum int ordinal()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Enum java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Enum java.lang.String name()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Enum java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Enum void finalize()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Enum void readObject(java.io.ObjectInputStream)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_-&gt;fail&quot;"/>
        </annotation>
    </item>
    <item name='java.lang.Enum void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Enum void readObjectNoData()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;-&gt;fail&quot;"/>
        </annotation>
    </item>
    <item name='java.lang.Error Error()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Error Error(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Error Error(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Error Error(java.lang.String, java.lang.Throwable, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Error Error(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Exception Exception()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Exception Exception(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Exception Exception(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Exception Exception(java.lang.String, java.lang.Throwable, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Exception Exception(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float Float(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float Float(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Float boolean isInfinite()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float boolean isInfinite(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float boolean isNaN()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float boolean isNaN(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float byte byteValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float double doubleValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float float floatValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float float intBitsToFloat(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float int compare(float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float int compareTo(java.lang.Float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float int compareTo(java.lang.Float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Float int floatToIntBits(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float int floatToRawIntBits(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float int intValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float java.lang.Float valueOf(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Float java.lang.Float valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Float java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float long longValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Float short shortValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IllegalAccessException IllegalAccessException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IllegalAccessException IllegalAccessException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IllegalArgumentException IllegalArgumentException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IllegalArgumentException IllegalArgumentException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IllegalArgumentException IllegalArgumentException(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IllegalArgumentException IllegalArgumentException(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IllegalStateException IllegalStateException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IllegalStateException IllegalStateException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IllegalStateException IllegalStateException(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IllegalStateException IllegalStateException(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IndexOutOfBoundsException IndexOutOfBoundsException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.IndexOutOfBoundsException IndexOutOfBoundsException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer Integer(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer Integer(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Integer byte byteValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer double doubleValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer float floatValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int bitCount(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int compare(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int compareTo(java.lang.Integer)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int compareTo(java.lang.Integer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int highestOneBit(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int intValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int lowestOneBit(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int numberOfLeadingZeros(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int numberOfTrailingZeros(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int parseInt(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer int parseInt(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer int reverse(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int reverseBytes(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int rotateLeft(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int rotateRight(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int signum(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer int stringSize(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer java.lang.Integer decode(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.Integer valueOf(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer java.lang.Integer valueOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.Integer valueOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toBinaryString(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toHexString(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toOctalString(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toString(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toString(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toUnsignedString(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer long longValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer short shortValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Integer void getChars(int, int, char[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer.IntegerCache IntegerCache()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.InterruptedException InterruptedException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.InterruptedException InterruptedException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Iterable java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long Long(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long Long(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Long byte byteValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long double doubleValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long float floatValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long int bitCount(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long int compare(long, long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long int compareTo(java.lang.Long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long int compareTo(java.lang.Long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long int intValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long int numberOfLeadingZeros(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long int numberOfTrailingZeros(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long int signum(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long int stringSize(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long java.lang.Long decode(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.Long valueOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.Long valueOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.Long valueOf(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long java.lang.String toBinaryString(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toHexString(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toOctalString(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toString(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toString(long, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toUnsignedString(long, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long long highestOneBit(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long long longValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long long lowestOneBit(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long long parseLong(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long long parseLong(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long long reverse(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long long reverseBytes(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long long rotateLeft(long, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long long rotateRight(long, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long short shortValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Long void getChars(long, int, char[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long.LongCache LongCache()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math Math()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math double abs(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math double max(double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math double min(double, double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math double toDegrees(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math double toRadians(double)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math float abs(float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math float max(float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math float min(float, float)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math int abs(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math int max(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math int min(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math long abs(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math long max(long, long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Math long min(long, long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.NegativeArraySizeException NegativeArraySizeException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.NegativeArraySizeException NegativeArraySizeException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.NoSuchFieldException NoSuchFieldException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.NoSuchFieldException NoSuchFieldException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.NullPointerException NullPointerException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.NullPointerException NullPointerException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Number Number()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.NumberFormatException NumberFormatException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.NumberFormatException NumberFormatException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.NumberFormatException java.lang.NumberFormatException forInputString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.NumberFormatException java.lang.NumberFormatException forInputString(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Object Object()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Object boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Object boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Object int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Object java.lang.Class&lt;?&gt; getClass()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Object java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Object void finalize()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ReflectiveOperationException ReflectiveOperationException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ReflectiveOperationException ReflectiveOperationException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ReflectiveOperationException ReflectiveOperationException(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ReflectiveOperationException ReflectiveOperationException(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.RuntimeException RuntimeException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.RuntimeException RuntimeException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.RuntimeException RuntimeException(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.RuntimeException RuntimeException(java.lang.String, java.lang.Throwable, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.RuntimeException RuntimeException(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short Short(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short Short(short)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;false&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Short byte byteValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short double doubleValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short float floatValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short int compare(short, short)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short int compareTo(java.lang.Short)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short int compareTo(java.lang.Short) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short int intValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short java.lang.Short decode(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short java.lang.Short valueOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short java.lang.Short valueOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short java.lang.Short valueOf(short)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short java.lang.String toString(short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short long longValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short short parseShort(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short short parseShort(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short short reverseBytes(short)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short short shortValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Short.ShortCache ShortCache()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String String()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String String(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(byte[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(byte[], int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(byte[], int, int, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(byte[], int, int, java.lang.String) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(byte[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(byte[], java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(char[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String String(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(char[], boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String String(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(int, int, char[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(int[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String String(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(java.lang.StringBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String String(java.lang.StringBuilder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String boolean contains(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String boolean contains(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String boolean contentEquals(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String boolean contentEquals(java.lang.StringBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String boolean endsWith(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String boolean endsWith(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String boolean equals(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.String boolean equalsIgnoreCase(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.String boolean isEmpty()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String boolean regionMatches(boolean, int, java.lang.String, int, int) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String boolean regionMatches(int, java.lang.String, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String boolean regionMatches(int, java.lang.String, int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String boolean startsWith(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String boolean startsWith(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String boolean startsWith(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String boolean startsWith(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String byte[] getBytes(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String char[] toCharArray()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String int codePointCount(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int compareTo(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int compareTo(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String int indexOf(char[], int, int, char[], int, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int indexOf(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int indexOf(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int indexOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int indexOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String int indexOf(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int indexOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String int indexOfSupplementary(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int lastIndexOf(char[], int, int, char[], int, int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int lastIndexOf(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int lastIndexOf(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int lastIndexOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int lastIndexOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String int lastIndexOf(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int lastIndexOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String int lastIndexOfSupplementary(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int length()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String int offsetByCodePoints(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String concat(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String concat(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String copyValueOf(char[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String copyValueOf(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String copyValueOf(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String copyValueOf(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String replace(char, char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String substring(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String substring(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toLowerCase()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toLowerCase(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toLowerCase(java.util.Locale) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toUpperCase()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toUpperCase(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toUpperCase(java.util.Locale) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String trim()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(char)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(char[])'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;!null&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String java.lang.String valueOf(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(long)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String[] split(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String[] split(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String void checkBounds(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String.CaseInsensitiveComparator CaseInsensitiveComparator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.String.CaseInsensitiveComparator int compare(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String.CaseInsensitiveComparator int compare(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer StringBuffer()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer StringBuffer(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer StringBuffer(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer StringBuffer(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer StringBuffer(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer int capacity()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer int codePointCount(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer int indexOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer int indexOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer int indexOf(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer int indexOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer int lastIndexOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer int lastIndexOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer int lastIndexOf(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer int lastIndexOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer int length()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer int offsetByCodePoints(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuffer java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.String substring(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.String substring(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.StringBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.StringBuffer) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer appendCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer delete(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer deleteCharAt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, char[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, char[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.CharSequence) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer replace(int, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer replace(int, int, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder StringBuilder()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuilder StringBuilder(int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuilder StringBuilder(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder StringBuilder(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuilder StringBuilder(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder int indexOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuilder int indexOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder int indexOf(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuilder int indexOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder int lastIndexOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuilder int lastIndexOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder int lastIndexOf(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.StringBuilder int lastIndexOf(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuffer) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuilder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuilder) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder appendCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder delete(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder deleteCharAt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, char[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, char[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.CharSequence) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder replace(int, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder replace(int, int, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.System System()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.System java.lang.String clearProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.System java.lang.String getProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.System java.lang.String getProperty(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.System java.lang.String lineSeparator()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.System java.lang.String setProperty(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.System void checkKey(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;null-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.System void checkKey(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.System void setProperties(java.util.Properties) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Thread Thread(java.lang.Runnable, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Thread Thread(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Thread boolean isDaemon()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Thread int getPriority()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Thread java.lang.ClassLoader getContextClassLoader()'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Thread java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Thread java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Thread java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Thread java.lang.Thread.UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Thread java.lang.Thread.UncaughtExceptionHandler getUncaughtExceptionHandler()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Thread long getId()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Thread void setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Thread void setName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Thread void stop(java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Thread.Caches Caches()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Thread.WeakClassKey boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Thread.WeakClassKey int hashCode()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ThreadLocal T childValue(T)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="value" val="&quot;_-&gt;fail&quot;"/>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ThreadLocal T childValue(T) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ThreadLocal T initialValue()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ThreadLocal java.lang.ThreadLocal.ThreadLocalMap createInheritedMap(java.lang.ThreadLocal.ThreadLocalMap)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ThreadLocal java.lang.ThreadLocal.ThreadLocalMap createInheritedMap(java.lang.ThreadLocal.ThreadLocalMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ThreadLocal java.lang.ThreadLocal.ThreadLocalMap getMap(java.lang.Thread)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ThreadLocal java.lang.ThreadLocal.ThreadLocalMap getMap(java.lang.Thread) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ThreadLocal void createMap(java.lang.Thread, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap ThreadLocalMap(java.lang.ThreadLocal, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap ThreadLocalMap(java.lang.ThreadLocal.ThreadLocalMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap int nextIndex(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap int prevIndex(int, int)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntry(java.lang.ThreadLocal)'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntry(java.lang.ThreadLocal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntryAfterMiss(java.lang.ThreadLocal, int, java.lang.ThreadLocal.ThreadLocalMap.Entry)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val val="&quot;_,_,null-&gt;null&quot;"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntryAfterMiss(java.lang.ThreadLocal, int, java.lang.ThreadLocal.ThreadLocalMap.Entry) 0'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntryAfterMiss(java.lang.ThreadLocal, int, java.lang.ThreadLocal.ThreadLocalMap.Entry) 2'>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap void remove(java.lang.ThreadLocal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ThreadLocal.ThreadLocalMap void set(java.lang.ThreadLocal, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Throwable Throwable()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable Throwable(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable Throwable(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable Throwable(java.lang.String, java.lang.Throwable, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable Throwable(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable java.lang.Throwable fillInStackTrace()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Throwable java.lang.Throwable getCause()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
        <annotation name='org.jetbrains.annotations.Nullable'/>
    </item>
    <item name='java.lang.Throwable java.lang.Throwable initCause(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Throwable void addSuppressed(java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Throwable void printStackTrace(java.lang.Throwable.PrintStreamOrWriter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Throwable void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Throwable void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Throwable.PrintStreamOrWriter PrintStreamOrWriter()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable.SentinelHolder SentinelHolder()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable.WrappedPrintStream WrappedPrintStream(java.io.PrintStream)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable.WrappedPrintStream java.lang.Object lock()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Throwable.WrappedPrintWriter java.lang.Object lock()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.UnsupportedOperationException UnsupportedOperationException()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.UnsupportedOperationException UnsupportedOperationException(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.UnsupportedOperationException UnsupportedOperationException(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.UnsupportedOperationException UnsupportedOperationException(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
    <item name='java.lang.Void Void()'>
        <annotation name='org.jetbrains.annotations.Contract'>
            <val name="pure" val="true"/>
        </annotation>
    </item>
</root>