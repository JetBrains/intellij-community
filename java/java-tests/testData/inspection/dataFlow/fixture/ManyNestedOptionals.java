import java.util.Optional;

class App {
  public static void main(String[] args) {
    Optional.of("foo")
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x))
      .map(x -> Optional.of(x));
  }
}