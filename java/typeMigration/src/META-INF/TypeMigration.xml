<idea-plugin>
  <extensions defaultExtensionNs="com.intellij">
    <codeInsight.changeVariableTypeQuickFixProvider
        implementation="com.intellij.refactoring.typeMigration.TypeMigrationVariableTypeFixProvider"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.ListArrayConversionRule"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.AtomicConversionRule"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.BoxingTypeConversionRule"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.ElementToArrayConversionRule"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.ThreadLocalConversionRule"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.LongAdderConversionRule"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.VoidConversionRule"/>

    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.guava.GuavaOptionalConversionRule"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.guava.GuavaFluentIterableConversionRule"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.guava.GuavaLambdaConversionRule$Function"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.guava.GuavaLambdaConversionRule$Supplier"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.guava.GuavaPredicateConversionRule"/>
    <conversion.rule implementation="com.intellij.refactoring.typeMigration.rules.guava.IterableStreamConversionRule"/>
    <intentionAction>
      <language>JAVA</language>
      <className>com.intellij.refactoring.typeMigration.intentions.ConvertFieldToAtomicIntention</className>
      <bundleName>messages.JavaBundle</bundleName>
       <categoryKey>intention.category.concurrency</categoryKey>
    </intentionAction>
    <intentionAction>
      <language>JAVA</language>
      <className>com.intellij.refactoring.typeMigration.intentions.ConvertFieldToThreadLocalIntention</className>
      <bundleName>messages.JavaBundle</bundleName>
      <categoryKey>intention.category.concurrency</categoryKey>
    </intentionAction>
    <intentionAction>
      <language>JAVA</language>
      <className>com.intellij.refactoring.typeMigration.intentions.ChangeClassParametersIntention</className>
      <bundleName>messages.JavaBundle</bundleName>
      <categoryKey>intention.category.declaration</categoryKey>
    </intentionAction>
    <intentionAction>
      <language>JAVA</language>
      <className>com.intellij.refactoring.typeMigration.intentions.ConvertAtomicToLongAdderIntention</className>
      <bundleName>messages.JavaBundle</bundleName>
      <categoryKey>intention.category.concurrency</categoryKey>
    </intentionAction>

    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" 
                     language="JAVA" shortName="Guava" groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.refactoring.typeMigration.inspections.GuavaInspection"
                     bundle="messages.TypeMigrationBundle" key="inspection.guava.name"/>
    <java.error.fix errorCode="lambda.variable.must.be.final" implementationClass="com.intellij.refactoring.typeMigration.intentions.ConvertFieldToAtomicIntention$ConvertNonFinalLocalToAtomicFix"/>
  </extensions>
</idea-plugin>
