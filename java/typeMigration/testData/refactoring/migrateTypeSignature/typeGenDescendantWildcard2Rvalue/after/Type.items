Types:
PsiField:myField : java.util.Set<? super Subject>
PsiLocalVariable:ancestorExtends : java.util.Set<? super Subject>
PsiLocalVariable:descendantExtends : java.util.Set<? super Subject>
PsiLocalVariable:descendantSupers : java.util.Set<? super Subject>
PsiLocalVariable:descendants : java.util.Set<? super Subject>
PsiLocalVariable:subjectExtends : java.util.Set<? super Subject>
PsiReferenceExpression:ancestorExtends : java.util.Set<? super Subject>
PsiReferenceExpression:descendantExtends : java.util.Set<? super Subject>
PsiReferenceExpression:descendantSupers : java.util.Set<? super Subject>
PsiReferenceExpression:descendants : java.util.Set<? super Subject>
PsiReferenceExpression:myField : java.util.Set<? super Subject>
PsiReferenceExpression:myField : java.util.Set<? super Subject>
PsiReferenceExpression:myField : java.util.Set<? super Subject>
PsiReferenceExpression:myField : java.util.Set<? super Subject>
PsiReferenceExpression:myField : java.util.Set<? super Subject>
PsiReferenceExpression:myField : java.util.Set<? super Subject>
PsiReferenceExpression:myField : java.util.Set<? super Subject>
PsiReferenceExpression:myField : java.util.Set<? super Subject>
PsiReferenceExpression:myField : java.util.Set<? super Subject>
PsiReferenceExpression:myField : java.util.Set<? super Subject>
PsiReferenceExpression:subjectExtends : java.util.Set<? super Subject>

Conversions:
ancestorSupers -> $
ancestors -> $
set -> $
subjectSupers -> $
subjects -> $

New expression type changes:
Fails:
