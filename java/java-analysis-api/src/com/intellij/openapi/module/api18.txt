javax.xml.xpath.XPathFactory#setProperty(java.lang.String;java.lang.String;)
javax.xml.xpath.XPathFactory#getProperty(java.lang.String;)
sun.nio.ch.ChannelOutputStream
java.io.PrintStream#charset()
java.net.spi.InetAddressResolver.LookupPolicy
java.net.spi.InetAddressResolver
java.net.spi.InetAddressResolverProvider
java.nio.charset.Charset#forName(java.lang.String;java.nio.charset.Charset;)
java.lang.Math#divideExact(int;int;)
java.lang.Math#divideExact(long;long;)
java.lang.Math#floorDivExact(int;int;)
java.lang.Math#floorDivExact(long;long;)
java.lang.Math#ceilDivExact(int;int;)
java.lang.Math#ceilDivExact(long;long;)
java.lang.Math#unsignedMultiplyHigh(long;long;)
java.lang.Math#ceilDiv(int;int;)
java.lang.Math#ceilDiv(long;int;)
java.lang.Math#ceilDiv(long;long;)
java.lang.Math#ceilMod(int;int;)
java.lang.Math#ceilMod(long;int;)
java.lang.Math#ceilMod(long;long;)
java.lang.StrictMath#divideExact(int;int;)
java.lang.StrictMath#divideExact(long;long;)
java.lang.StrictMath#floorDivExact(int;int;)
java.lang.StrictMath#floorDivExact(long;long;)
java.lang.StrictMath#ceilDivExact(int;int;)
java.lang.StrictMath#ceilDivExact(long;long;)
java.lang.StrictMath#unsignedMultiplyHigh(long;long;)
java.lang.StrictMath#ceilDiv(int;int;)
java.lang.StrictMath#ceilDiv(long;int;)
java.lang.StrictMath#ceilDiv(long;long;)
java.lang.StrictMath#ceilMod(int;int;)
java.lang.StrictMath#ceilMod(long;int;)
java.lang.StrictMath#ceilMod(long;long;)
java.time.Duration#isPositive()
java.security.KeyStore#getAttributes(java.lang.String;)
java.security.KeyStoreSpi#engineGetAttributes(java.lang.String;)
javax.security.auth.Subject#current()
javax.security.auth.Subject#callAs(javax.security.auth.Subject;java.util.concurrent.Callable<T>;)
jdk.javadoc.doclet.Reporter#print(Diagnostic.Kind;DocTreePath;int;int;int;java.lang.String;)
com.sun.source.util.DocTreeFactory#newSnippetTree(java.util.List<? extends DocTree>;TextTree;)
com.sun.source.util.DocTreeScanner#visitSnippet(SnippetTree;P;)
com.sun.source.util.SimpleDocTreeVisitor#visitSnippet(SnippetTree;P;)
com.sun.source.doctree.DocTree.Kind#SNIPPET
com.sun.source.doctree.SnippetTree
com.sun.source.doctree.DocTreeVisitor#visitSnippet(SnippetTree;P;)
javax.lang.model.util.Elements#getOutermostTypeElement(Element;)
javax.lang.model.util.Elements#getFileObjectOf(Element;)
javax.lang.model.SourceVersion#RELEASE_18
javax.lang.model.SourceVersion#valueOf(java.lang.Runtime.Version;)
javax.lang.model.SourceVersion#runtimeVersion()
javax.tools.JavaFileManager#getJavaFileForOutputForOriginatingFiles(javax.tools.JavaFileManager.Location;java.lang.String;Kind;FileObject[];)
javax.tools.JavaFileManager#getFileForOutputForOriginatingFiles(javax.tools.JavaFileManager.Location;java.lang.String;java.lang.String;FileObject[];)
javax.annotation.processing.Messager#printError(java.lang.CharSequence;)
javax.annotation.processing.Messager#printError(java.lang.CharSequence;Element;)
javax.annotation.processing.Messager#printWarning(java.lang.CharSequence;)
javax.annotation.processing.Messager#printWarning(java.lang.CharSequence;Element;)
javax.annotation.processing.Messager#printNote(java.lang.CharSequence;)
javax.annotation.processing.Messager#printNote(java.lang.CharSequence;Element;)
java.net.http.HttpRequest.Builder#HEAD()
com.sun.net.httpserver.Filter#adaptRequest(java.lang.String;java.util.function.UnaryOperator<Request>;)
com.sun.net.httpserver.Headers#Headers(java.util.Map<java.lang.String,java.util.List<java.lang.String>>;)
com.sun.net.httpserver.Headers#of(java.lang.String[];)
com.sun.net.httpserver.Headers#of(java.util.Map<java.lang.String,java.util.List<java.lang.String>>;)
com.sun.net.httpserver.Request
com.sun.net.httpserver.HttpServer#create(InetSocketAddress;int;java.lang.String;HttpHandler;Filter[];)
com.sun.net.httpserver.HttpsServer#create(InetSocketAddress;int;java.lang.String;HttpHandler;Filter[];)
com.sun.net.httpserver.HttpHandlers
com.sun.net.httpserver.SimpleFileServer.OutputLevel
com.sun.net.httpserver.SimpleFileServer
sun.security.pkcs11.P11KeyWrapCipher
