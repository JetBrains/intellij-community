<!--
  ~ Copyright 2000-2017 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin>

  <application-components>
    <component>
      <interface-class>com.intellij.openapi.vfs.jrt.JrtFileSystem</interface-class>
      <implementation-class>com.intellij.openapi.vfs.impl.jrt.JrtFileSystemImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.util.xml.impl.JavaDomApplicationComponent</implementation-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <interface-class>com.intellij.psi.RefResolveService</interface-class>
      <implementation-class>com.intellij.psi.refResolve.RefResolveServiceImpl</implementation-class>
    </component>
  </project-components>

  <actions>
    <action id="MethodOverloadSwitchUp" class="com.intellij.codeInsight.editorActions.JavaMethodOverloadSwitchUpAction"/>
    <action id="MethodOverloadSwitchDown" class="com.intellij.codeInsight.editorActions.JavaMethodOverloadSwitchDownAction" />
  </actions>

  <extensionPoints>
    <extensionPoint qualifiedName="com.intellij.methodImplementor"
                    interface="com.intellij.codeInsight.MethodImplementor"/>

    <extensionPoint qualifiedName="com.intellij.javaExpressionSurrounder"
                    interface="com.intellij.codeInsight.generation.surroundWith.JavaExpressionSurrounder"/>

    <extensionPoint qualifiedName="com.intellij.unscrambleSupport" interface="com.intellij.unscramble.UnscrambleSupport"/>

    <extensionPoint qualifiedName="com.intellij.java.refactoring.chainCallExtractor" interface="com.intellij.refactoring.chainCall.ChainCallExtractor"/>
    <extensionPoint qualifiedName="com.intellij.java.inspection.bulkMethodInfo" interface="com.intellij.codeInspection.bulkOperation.BulkMethodInfoProvider"/>
    <extensionPoint qualifiedName="com.intellij.documentationDelegateProvider" interface="com.intellij.codeInsight.javadoc.DocumentationDelegateProvider"/>
    <extensionPoint qualifiedName="com.intellij.codeInsight.externalLibraryResolver" interface="com.intellij.codeInsight.daemon.quickFix.ExternalLibraryResolver"/>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveClassHandler" interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveClassHandler"/>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveAllClassesInFileHandler"
                    interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveAllClassesInFileHandler"/>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveClassToInnerHandler"
                    interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveClassToInnerHandler"/>
    <extensionPoint qualifiedName="com.intellij.projectModelModifier" interface="com.intellij.openapi.roots.JavaProjectModelModifier"
                    area="IDEA_PROJECT"/>
    <extensionPoint qualifiedName="com.intellij.library.dependencyScopeSuggester" interface="com.intellij.openapi.roots.LibraryDependencyScopeSuggester"/>
    <extensionPoint qualifiedName="com.intellij.getterSetterProvider" interface="com.intellij.codeInsight.generation.GetterSetterPrototypeProvider"/>
    <extensionPoint qualifiedName="com.intellij.generation.toStringClassFilter" interface="org.jetbrains.generate.tostring.GenerateToStringClassFilter"/>
    <extensionPoint qualifiedName="com.intellij.refactoring.introduceParameterMethodUsagesProcessor" interface="com.intellij.refactoring.introduceParameter.IntroduceParameterMethodUsagesProcessor"/>
    <extensionPoint qualifiedName="com.intellij.safeDelete.importSearcher"
                    interface="com.intellij.refactoring.safeDelete.ImportSearcher"/>
    <extensionPoint qualifiedName="com.intellij.predefinedMigrationMapProvider"
                    interface="com.intellij.refactoring.migration.PredefinedMigrationProvider"/>
    <extensionPoint qualifiedName="com.intellij.generateAccessorProvider"
                    interface="com.intellij.util.NotNullFunction"/>
    <extensionPoint qualifiedName="com.intellij.overrideImplementsAnnotationsHandler"
                    interface="com.intellij.codeInsight.generation.OverrideImplementsAnnotationsHandler"/>
    <extensionPoint qualifiedName="com.intellij.conversion.rule"
                    interface="com.intellij.refactoring.typeMigration.rules.TypeConversionRule"/>
    <extensionPoint qualifiedName="com.intellij.repositoryLibrary" beanClass="com.intellij.jarRepository.RepositoryLibraryDefinition"/>

    <extensionPoint qualifiedName="com.intellij.encapsulateFields.Helper" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.encapsulateFields.EncapsulateFieldHelper"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveInnerClassUsagesHandler" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.move.moveInner.MoveInnerClassUsagesHandler"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.testGenerator"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.testIntegration.createTest.TestGenerator"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveMemberHandler" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.move.moveMembers.MoveMemberHandler"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveInnerHandler" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.move.moveInner.MoveInnerHandler"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.constructorBodyGenerator"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.generation.ConstructorBodyGenerator"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.codeInsight.createFieldFromUsageHelper" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.daemon.impl.quickfix.CreateFieldFromUsageHelper"/>
    </extensionPoint>

    <extensionPoint qualifiedName="com.intellij.hierarchy.referenceProcessor" interface="com.intellij.ide.hierarchy.call.CallReferenceProcessor"/>
    <extensionPoint qualifiedName="com.intellij.refactoring.pullUpHelperFactory" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.memberPullUp.PullUpHelperFactory"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.refactoring.safeDelete.JavaSafeDeleteDelegate" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.safeDelete.JavaSafeDeleteDelegate"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.debuggerClassFilterProvider" interface="com.intellij.ui.classFilter.DebuggerClassFilterProvider"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <javaModuleSystem implementation="com.intellij.psi.impl.JavaPlatformModuleSystem"/>
    <java.error.fix errorCode="lambda.variable.must.be.final" implementationClass="com.intellij.codeInspection.streamMigration.SimplifyForEachInspection$ForEachNonFinalFix"/>
    <lang.jvm.actions.jvmElementActionsFactory implementation="com.intellij.codeInsight.intention.impl.UastJvmElementFactory"/>
    <lang.jvm.actions.jvmElementActionsFactory implementation="com.intellij.codeInsight.intention.impl.JavaElementActionsFactory"/>
    <longLineInspectionPolicy implementation="com.intellij.codeInspection.JavaLongLineInspectionPolicy"/>
    <projectService serviceImplementation="com.intellij.jarRepository.RemoteRepositoriesConfiguration"/>
    <projectService serviceImplementation="com.intellij.jarRepository.services.MavenRepositoryServicesManager"/>
    <library.dependencyScopeSuggester implementation="com.intellij.jarRepository.RepositoryLibraryDependencyScopeSuggester"/>
    <diff.lang.DiffIgnoredRangeProvider implementation="com.intellij.diff.lang.JavaDiffIgnoredRangeProvider"/>
    <java.refactoring.chainCallExtractor implementation="com.intellij.refactoring.chainCall.OptionalChainCallExtractor"/>
    <java.refactoring.chainCallExtractor implementation="com.intellij.refactoring.chainCall.GuavaFluentIterableChainCallExtractor"/>
    <java.refactoring.chainCallExtractor implementation="com.intellij.refactoring.chainCall.CompletionStageChainCallExtractor"/>
    <java.refactoring.chainCallExtractor implementation="com.intellij.refactoring.chainCall.CollectionChainCallExtractor"/>
    <java.refactoring.chainCallExtractor implementation="com.intellij.refactoring.chainCall.StreamChainCallExtractor"/>
    <java.inspection.bulkMethodInfo implementation="com.intellij.codeInspection.bulkOperation.JdkBulkMethodInfoProvider"/>
    <refactoring.pushDown language="JAVA" implementationClass="com.intellij.refactoring.memberPushDown.JavaPushDownDelegate" id="java"/>
    <refactoring.introduceParameterObject language="JAVA"
                                          implementationClass="com.intellij.refactoring.introduceparameterobject.JavaIntroduceParameterObjectDelegate"/>
    <refactoring.invertBoolean implementation="com.intellij.refactoring.invertBoolean.JavaInvertBooleanDelegate"/>
    <refactoring.moveInnerClassUsagesHandler language="JAVA" implementationClass="com.intellij.refactoring.move.moveInner.MoveInnerClassJavaUsagesHandler" id="java"/>
    <refactoring.elementListenerProvider implementation="com.intellij.codeInsight.ExternalAnnotationsRefactoringListenerProvider"/>
    <nonProjectFileWritingAccessExtension
        implementation="com.intellij.codeInsight.ExternalAnnotationsNonProjectFileWritingAccessExtension"/>
    <codeInsight.template.postfixTemplateProvider language="JAVA"
                                                  implementationClass="com.intellij.codeInsight.template.postfix.templates.JavaPostfixTemplateProvider"/>
    <codeInsight.folding.collapseBlockHandler language="JAVA"
                                              implementationClass="com.intellij.codeInsight.folding.impl.JavaCollapseBlockHandler"/>
    <spellchecker.support language="JAVA" implementationClass="com.intellij.spellchecker.JavaSpellcheckingStrategy"/>
    <hierarchy.indexer implementation="com.intellij.psi.stubsHierarchy.impl.JavaStubIndexer"/>
    <fileBasedIndex implementation="com.intellij.psi.stubsHierarchy.impl.StubHierarchyIndex"/>
    <refactoring.elementListenerProvider implementation="com.intellij.codeInspection.ex.AdditionalAnnotationsRefactoringElementListener"/>
    <outOfSourcesChecker implementation="com.intellij.openapi.projectRoots.JavaOutOfSourcesChecker"/>
    <hierarchy.referenceProcessor implementation="com.intellij.ide.hierarchy.call.JavaCallReferenceProcessor"/>
    <refactoring.pullUpHelperFactory language="JAVA" implementationClass="com.intellij.refactoring.memberPullUp.JavaPullUpHelperFactory"/>
    <codeInsight.externalLibraryResolver implementation="com.intellij.codeInspection.concurrencyAnnotations.JCiPExternalLibraryResolver"/>
    <codeInsight.externalLibraryResolver
        implementation="com.intellij.codeInsight.daemon.impl.quickfix.JetBrainsAnnotationsExternalLibraryResolver"/>
    <codeInsight.unresolvedReferenceQuickFixProvider implementation="com.intellij.jarFinder.FindJarQuickFixProvider"/>
    <generation.toStringClassFilter implementation="org.jetbrains.generate.tostring.GenerateToStringInterfaceFilter" order="last"/>
    <applicationService serviceInterface="com.intellij.codeInsight.generation.SetterTemplatesManager"
                        serviceImplementation="com.intellij.codeInsight.generation.SetterTemplatesManager"/>
    <applicationService serviceInterface="com.intellij.codeInsight.generation.GetterTemplatesManager"
                        serviceImplementation="com.intellij.codeInsight.generation.GetterTemplatesManager"/>
    <applicationService serviceInterface="com.intellij.codeInsight.generation.EqualsHashCodeTemplatesManager"
                        serviceImplementation="com.intellij.codeInsight.generation.EqualsHashCodeTemplatesManager"/>
    <applicationService serviceInterface="org.jetbrains.java.generate.template.toString.ToStringTemplatesManager"
                        serviceImplementation="org.jetbrains.java.generate.template.toString.ToStringTemplatesManager"/>
    <gotoDeclarationHandler implementation="com.intellij.codeInsight.navigation.actions.GotoLambdaParameterHandler"/>
    <gotoDeclarationHandler implementation="com.intellij.codeInsight.navigation.actions.GotoVarTypeHandler"/>
    <annotator language="SPI" implementationClass="com.intellij.spi.SPIAnnotator"/>
    <lang.commenter language="SPI" implementationClass="com.intellij.spi.SPICommenter"/>
    <lang.parserDefinition language="SPI" implementationClass="com.intellij.spi.parsing.SPIParserDefinition"/>
    <fileTypeFactory implementation="com.intellij.spi.SPIFileTypeFactory"/>
    <writingAccessProvider implementation="com.intellij.refactoring.util.ClsElementWritingAccessProvider"/>
    <psi.referenceContributor language="JAVA" implementation="com.intellij.psi.impl.source.resolve.reference.impl.JavaReflectionReferenceContributor"/>
    <projectTemplateParameterFactory implementation="com.intellij.openapi.module.BasePackageParameterFactory"/>
    <java.elementFinder implementation="com.intellij.psi.impl.migration.MigrationElementFinder"/>
    <java.elementFinder implementation="com.intellij.psi.impl.PackagePrefixElementFinder"/>
    <treeCopyHandler implementation="com.intellij.psi.impl.source.tree.JavaTreeCopyHandler"/>
    <generation.topLevelFactory language="JAVA" implementationClass="com.intellij.psi.impl.JavaFactoryProvider"/>
    <dom.uiControlsProvider implementation="com.intellij.util.xml.impl.JavaDomApplicationComponent"/>
    <resolveScopeEnlarger implementation="com.intellij.psi.NonClasspathResolveScopeEnlarger"/>
    <psiViewerExtension implementation="com.intellij.internal.psiView.PsiViewerExpressionExtension"/>
    <psiViewerExtension implementation="com.intellij.internal.psiView.PsiViewerCodeFragmentExtension"/>
    <psiViewerExtension implementation="com.intellij.internal.psiView.PsiViewerMethodExtension"/>
    <previewHintProvider implementation="com.intellij.codeInsight.preview.JavaPreviewHintProvider"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineStaticImportHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineConstantFieldHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineLocalHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineMethodHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inlineSuperClass.InlineSuperClassRefactoringHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineToAnonymousClassHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineParameterHandler"/>
    <projectViewPane implementation="com.intellij.ide.projectView.impl.PackageViewPane"/>
    <highlightVisitor implementation="com.intellij.codeInsight.daemon.JavaRainbowVisitor"/>
    <problemHighlightFilter implementation="com.intellij.codeInsight.daemon.JavaProblemHighlightFilter"/>
    <bundledKeymapProvider implementation="com.intellij.openapi.keymap.JBuilderKeymapProvider"/>
    <todoIndexer filetype="JAVA" implementationClass="com.intellij.psi.impl.cache.impl.idCache.JavaTodoIndexer"/>
    <idIndexer filetype="JAVA" implementationClass="com.intellij.psi.impl.cache.impl.idCache.JavaIdIndexer"/>
    <fileIconPatcher id="javaFileIconPatcher" implementation="com.intellij.ide.JavaFileIconPatcher"/>
    <basicWordSelectionFilter implementation="com.intellij.codeInsight.editorActions.wordSelection.JavaBasicWordSelectionFilter"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.JavaWordSelectioner"/>
    <templateCompletionProcessor implementation="com.intellij.codeInsight.template.macro.JavaTemplateCompletionProcessor"/>
    <optionsApplicabilityFilter implementation="com.intellij.application.options.JavaOptionsApplicabilityFilter"/>
    <typeHierarchyProvider language="JAVA" implementationClass="com.intellij.ide.hierarchy.type.JavaTypeHierarchyProvider"/>
    <methodHierarchyProvider language="JAVA" implementationClass="com.intellij.ide.hierarchy.method.JavaMethodHierarchyProvider"/>
    <callHierarchyProvider language="JAVA" implementationClass="com.intellij.ide.hierarchy.call.JavaCallHierarchyProvider"/>
    <runLineMarkerContributor language="JAVA" order="after applicationRunLineMarkerProvider"
                              implementationClass="com.intellij.testIntegration.TestRunLineMarkerProvider"/>
    <testGenerator language="JAVA" implementationClass="com.intellij.testIntegration.createTest.JavaTestGenerator" />
    <testCreator language="JAVA" implementationClass="com.intellij.testIntegration.JavaTestCreator"/>
    <testFinder implementation="com.intellij.testIntegration.JavaTestFinder"/>
    <filePasteProvider implementation="com.intellij.ide.JavaFilePasteProvider" order="before fileList"/>
    <enterHandlerDelegate implementation="com.intellij.javadoc.EnterInJavadocParamDescriptionHandler"/>
    <editorNavigation implementation="com.intellij.javadoc.JavadocNavigationDelegate"/>
    <methodNavigationOffsetProvider implementation="com.intellij.codeInsight.navigation.JavaMethodNavigationOffsetProvider"/>
    <dom.customAnnotationChecker implementation="com.intellij.util.xml.impl.ExtendsClassChecker"/>
    <fileBasedIndex implementation="com.intellij.psi.RefQueueIndex"/>
    <codeInsight.surroundWithRangeAdjuster implementation="com.intellij.codeInsight.generation.surroundWith.XmlSurroundWithRangeAdjuster"/>
    <liveTemplateSubstitutor implementation="com.intellij.codeInsight.template.impl.JavaTemplateSubstitutor"/>
    <defaultLiveTemplatesProvider implementation="com.intellij.codeInsight.template.impl.JavaDefaultLiveTemplatesProvider"/>
    <treeStructureProvider implementation="com.intellij.ide.projectView.impl.ClassesTreeStructureProvider" order="last"/>
    <importFilteringRule implementation="com.intellij.usages.impl.rules.ImportFilteringRule"/>
    <usageContextPanelProvider implementation="com.intellij.usageView.UsageContextDataflowFromPanel$Provider"/>
    <usageContextPanelProvider implementation="com.intellij.usageView.UsageContextDataflowToPanel$Provider"/>
    <usageTypeProvider implementation="com.intellij.usages.impl.rules.JavaUsageTypeProvider"/>
    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.JavaClassGroupRuleProvider"/>
    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.JavaMethodGroupRuleProvider"/>
    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.NonJavaFileGroupRuleProvider"/>
    <qualifiedNameProvider implementation="com.intellij.ide.actions.JavaQualifiedNameProvider"/>
    <referenceImporter implementation="com.intellij.codeInsight.daemon.impl.JavaReferenceImporter"/>
    <elementDescriptionProvider implementation="com.intellij.ide.util.JavaDeleteTypeDescriptionProvider"/>
    <elementDescriptionProvider implementation="com.intellij.usageView.JavaUsageViewDescriptionProvider"/>
    <renameFileActionProvider implementation="com.intellij.refactoring.actions.ClassAwareRenameFileProvider"/>
    <vetoRenameCondition implementation="com.intellij.refactoring.rename.JavaVetoRenameCondition"/>
    <nameSuggestionProvider implementation="com.intellij.refactoring.rename.JavaNameSuggestionProvider" id="java"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticOverloadsRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.ConstructorParameterOnFieldRenameRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticTestRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticInheritorRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticParametersRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticVariableRenamerFactory"/>
    <renameInputValidator implementation="com.intellij.refactoring.rename.PsiPackageRenameValidator"/>
    <renameInputValidator implementation="com.intellij.refactoring.rename.JavaModuleRenameValidator"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiPackageProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiDirectoryProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaClassProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaMethodProcessor" id="javamethod"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaVariableProcessor" id="javaVariable"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaModuleProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameAliasingPomTargetProcessor"/>
    <referenceProviderType key="Class Reference Provider"
                           implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.providers.JavaClassReferenceProvider"/>
    <findUsagesHandlerFactory implementation="com.intellij.find.findUsages.JavaFindUsagesHandlerFactory" id="java"
                              order="last, before default"/>
    <updateAddedFileProcessor implementation="com.intellij.psi.impl.file.JavaUpdateAddedFileProcessor"/>
    <rename.inplace.resolveSnapshotProvider language="JAVA"
                                            implementationClass="com.intellij.refactoring.rename.inplace.JavaResolveSnapshotProvider"/>
    <renameHandler implementation="com.intellij.refactoring.rename.DirectoryAsPackageRenameHandler"/>
    <renameHandler implementation="com.intellij.refactoring.rename.RenameWrongRefHandler"/>
    <gotoTargetRendererProvider implementation="com.intellij.codeInsight.navigation.JavaGotoTargetRendererProvider"/>
    <typeDeclarationProvider implementation="com.intellij.codeInsight.navigation.actions.JavaTypeDeclarationProvider"/>
    <navbar implementation="com.intellij.ide.navigationToolbar.JavaNavBarExtension"/>
    <gotoDeclarationHandler implementation="com.intellij.codeInsight.navigation.actions.GotoBreakContinueHandler"/>
    <lang.implementationTextSelectioner language="JAVA"
                                        implementationClass="com.intellij.codeInsight.hint.JavaImplementationTextSelectioner"/>
    <scopeTreeExpander implementation="com.intellij.ide.scopeView.ClassesScopeTreeStructureExpander"/>
    <gotoSymbolContributor implementation="com.intellij.ide.util.gotoByName.JavaModuleNavigationContributor"/>
    <gotoSymbolContributor implementation="com.intellij.ide.util.gotoByName.DefaultSymbolNavigationContributor"/>
    <gotoClassContributor implementation="com.intellij.ide.util.gotoByName.DefaultClassNavigationContributor"/>
    <targetElementEvaluator language="JAVA" implementationClass="com.intellij.codeInsight.JavaTargetElementEvaluator"/>
    <targetElementUtilExtender implementation="com.intellij.codeInsight.JavaTargetElementEvaluator"/>
    <indexPatternBuilder implementation="com.intellij.psi.impl.search.JspIndexPatternBuilder"/>
    <indexPatternBuilder implementation="com.intellij.psi.impl.search.JavaIndexPatternBuilder"/>
    <printOption implementation="com.intellij.codeEditor.printing.HyperlinksToClassesOption"/>
    <macro implementation="com.intellij.ide.macro.JavaDocPathMacro"/>
    <macro implementation="com.intellij.ide.macro.FilePackageMacro"/>
    <macro implementation="com.intellij.ide.macro.FileFQPackage"/>
    <macro implementation="com.intellij.ide.macro.FileClassMacro"/>
    <macro implementation="com.intellij.ide.macro.ClasspathMacro"/>
    <macro implementation="com.intellij.ide.macro.ClasspathEntryMacro"/>
    <scopeParserExtension implementation="com.intellij.psi.search.scope.packageSet.PatternPackageSetParserExtension"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.JavaColorSettingsPage"/>
    <elementDescriptionProvider implementation="com.intellij.refactoring.util.JavaNonCodeSearchElementDescriptionProvider"/>
    <elementDescriptionProvider implementation="com.intellij.refactoring.util.JavaRefactoringElementDescriptionProvider"/>
    <refactoring.helper implementation="com.intellij.refactoring.OptimizeImportsRefactoringHelper"/>
    <refactoring.changeSignatureUsageProcessor implementation="com.intellij.refactoring.changeSignature.JavaChangeSignatureUsageProcessor" id="javaProcessor"/>
    <refactoring.introduceParameterMethodUsagesProcessor implementation="com.intellij.refactoring.introduceParameter.JavaIntroduceParameterMethodUsagesProcessor"/>
    <safeDelete.importSearcher implementation="com.intellij.refactoring.safeDelete.JavaImportSearcher"/>
    <refactoring.safeDelete.JavaSafeDeleteDelegate implementationClass="com.intellij.refactoring.safeDelete.JavaSafeDeleteDelegateImpl" language="JAVA"/>
    <refactoring.safeDeleteProcessor implementation="com.intellij.refactoring.safeDelete.JavaSafeDeleteProcessor" id="javaProcessor"/>
    <refactoring.moveInnerHandler language="JAVA" implementationClass="com.intellij.refactoring.move.moveInner.MoveJavaInnerHandler" id="java"/>
    <refactoring.moveMemberHandler language="JAVA" implementationClass="com.intellij.refactoring.move.moveMembers.MoveJavaMemberHandler" id="java"/>
    <refactoring.moveClassToInnerHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.JavaMoveClassToInnerHandler" id="java"/>
    <refactoring.moveClassHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveJavaClassHandler" id="java"/>
    <refactoring.moveAllClassesInFileHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveJavaClassesInFileHandler" id="java"/>
    <moveFileHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveJavaFileHandler" id="java"/>
    <refactoring.moveDirectoryWithClassesHelper implementation="com.intellij.refactoring.move.moveClassesOrPackages.JavaMoveDirectoryWithClassesHelper"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.anonymousToInner.MoveAnonymousToInnerHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveInner.MoveInnerToUpperOrMembersHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveInner.MoveInnerToUpperHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveInstanceMethod.MoveInstanceMethodHandlerDelegate"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveMembers.MoveMembersHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveFilesOrDirectories.JavaMoveFilesOrDirectoriesHandler" id="moveJavaFileOrDir"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.JavaMoveClassesOrPackagesHandler" order="before moveJavaFileOrDir"/>
    <refactoring.copyHandler implementation="com.intellij.refactoring.copy.CopyClassesHandler" order="before copyJavaFilesOrPackages"/>
    <saveFileAsTemplateHandler implementation="com.intellij.ide.fileTemplates.SaveJavaAsTemplateHandler"/>
    <exceptionFilter implementation="com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotationExceptionFilterFactory"/>
    <packageDependencies.visitor language="JAVA" implementationClass="com.intellij.packageDependencies.JavaDependencyVisitorFactory"/>
    <pathMacroFilter implementation="com.intellij.execution.configuration.JavaRunConfigurationPathMacroFilter"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiPackageFavoriteNodeProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiMethodFavoriteNodeProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiFieldFavoriteNodeProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiClassFavoriteNodeProvider"/>
    <defaultTemplatePropertiesProvider implementation="com.intellij.ide.fileTemplates.TemplatePackagePropertyProvider"/>
    <createFromTemplateHandler implementation="com.intellij.ide.fileTemplates.JavaCreateFromTemplateHandler"/>
    <createFromTemplateHandler implementation="com.intellij.ide.fileTemplates.JavaInternalTemplatesHandler"/>
    <liveTemplateOptionalProcessor implementation="com.intellij.codeInsight.template.impl.ShortenToStaticImportProcessor"/>
    <liveTemplateOptionalProcessor implementation="com.intellij.codeInsight.template.impl.ShortenFQNamesProcessor"/>
    <liveTemplateOptionalProcessor implementation="com.intellij.codeInsight.template.impl.CodeBlockReformattingProcessor"/>
    <scopeDescriptorProvider implementation="com.intellij.ide.util.scopeChooser.HierarchyScopeDescriptorProvider"/>
    <patternDialectProvider implementation="com.intellij.packageDependencies.ui.PackagePatternProvider" id="package" order="before file" />
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightImportedElementsHandlerFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightOverridingMethodsHandlerFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightExitPointsHandlerFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightSuppressedWarningsFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightExceptionsHandlerFactory"/>
    <moduleExtension implementation="com.intellij.openapi.roots.impl.CompilerModuleExtensionImpl"/>
    <statistics.usagesCollector implementation="com.intellij.openapi.roots.impl.LanguageLevelUsagesCollector"/>
    <projectExtension implementation="com.intellij.openapi.roots.impl.LanguageLevelProjectExtensionImpl$MyProjectExtension"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Generic"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Statement"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Expression"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Declaration"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCommentContextType"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaStringContextType"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.SmartCompletionContextType"/>
    <usageTargetProvider implementation="com.intellij.find.findUsages.ThrowsUsageTargetProvider"/>
    <lineIndentProvider implementation="com.intellij.codeInsight.editorActions.JavaLineIndentProvider"/>
    <backspaceHandlerDelegate implementation="com.intellij.codeInsight.editorActions.JavaBackspaceHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiClassInitializer"
                             implementationClass="com.intellij.codeInsight.hint.ClassInitializerDeclarationRangeHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiClass"
                             implementationClass="com.intellij.codeInsight.hint.ClassDeclarationRangeHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiLambdaExpression"
                             implementationClass="com.intellij.codeInsight.hint.LambdaDeclarationRangeHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiMethod"
                             implementationClass="com.intellij.codeInsight.hint.MethodDeclarationRangeHandler"/>
    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.JavaCopyPasteReferenceProcessor"/>
    <copyPastePreProcessor implementation="com.intellij.codeInsight.editorActions.JavadocCopyPastePreProcessor"/>
    <copyPastePreProcessor implementation="com.intellij.codeInsight.editorActions.StringLiteralCopyPasteProcessor"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ArrayVariableMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.VariableOfTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ComponentTypeOfMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SuggestVariableNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SuggestFirstVariableNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SuggestIndexNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.GuessElementTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ExpectedTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ExpressionTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.AnnotatedMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.MethodNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.MethodParametersMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.MethodReturnTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ClassNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.QualifiedClassNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentPackageMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.RightSideTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CastToLeftSideTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.IterableVariableMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.IterableComponentTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.DescendantClassesEnumMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SubtypesMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.TypeOfVariableMacro"/>
    <codeInspection.InspectionExtension implementation="com.intellij.codeInspection.ex.JavaInspectionExtensionsFactory"/>
    <postFormatProcessor implementation="com.intellij.psi.impl.source.codeStyle.ImportPostFormatProcessor"/>
    <postFormatProcessor implementation="com.intellij.psi.impl.source.codeStyle.BracePostFormatProcessor"/>
    <preFormatProcessor implementation="com.intellij.psi.impl.source.codeStyle.FormatCommentsProcessor"/>
    <elementSignatureProvider implementation="com.intellij.codeInsight.folding.impl.JavaElementSignatureProvider"/>
    <smartPointer.anchorProvider implementation="com.intellij.psi.impl.smartPointers.JavaAnchorProvider"/>
    <vcsSelectionProvider implementation="com.intellij.vcsUtil.JavaVcsSelectionProvider"/>
    <getDataRule key="analysisScope" implementationClass="com.intellij.analysis.AnalysisScopeRule"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.MethodCallSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.AntLikePropertySelectionHandler"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.CaseStatementsSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.StatementGroupSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.JavaTokenSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.TypeCastSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.IfStatementSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.ForStatementHeaderSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.DocTagSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.ReferenceSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.FieldSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.MethodOrClassSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.FinallyBlockSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.CodeBlockOrInitializerSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.VarargsSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.ListSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.DocCommentSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.LiteralSelectioner"/>
    <completion.skip implementation="com.intellij.codeInsight.completion.AbstractExpectedTypeSkipper" id="skipAbstract"/>
    <completion.skip implementation="com.intellij.codeInsight.completion.DeprecatedSkipper" id="skipDeprecated"/>
    <statistician key="completion" implementationClass="com.intellij.codeInsight.completion.JavaCompletionStatistician"/>
    <statistician key="proximity" implementationClass="com.intellij.codeInsight.completion.JavaProximityStatistician"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.KnownElementWeigher" id="knownElement"
             order="after sameModule, before inResolveScope"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.JavaInheritanceWeigher" id="javaInheritance"
             order="after explicitlyImported, before sameLogicalRoot"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.ExplicitlyImportedWeigher" id="explicitlyImported"
             order="before openedInEditor"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SamePsiMemberWeigher" id="samePsiMember"
             order="before explicitlyImported"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.ReferenceListWeigher" id="referenceList"
             order="before samePsiMember"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.BlockJoinLinesHandler"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.DeclarationJoinLinesHandler"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.LiteralJoinLinesHandler"/>
    <editorSmartKeysConfigurable instance="com.intellij.application.options.JavadocOptionsProvider"
                                 id="editor.preferences.javadocOptions"
                                 key="javadoc.generate.message.title"
                                 bundle="messages.JavadocBundle"/>

    <editorActionHandler action="PrevParameter" implementationClass="com.intellij.codeInsight.editorActions.JavaVarArgPrevParameterHandler"/>
    <editorActionHandler action="NextParameter" implementationClass="com.intellij.codeInsight.editorActions.JavaVarArgNextParameterHandler"/>
    <editorActionHandler action="EditorLineStart" implementationClass="com.intellij.codeInsight.editorActions.JavadocLineStartHandler"/>
    <editorTypedHandler implementationClass="com.intellij.codeInsight.editorActions.AutoFormatTypedHandler"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.JavadocTypedHandler" id="javadoc"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.JavaTypedHandler" id="java"/>
    <quoteHandler fileType="JAVA" className="com.intellij.codeInsight.editorActions.JavaQuoteHandler"/>
    <constructorBodyGenerator language="JAVA" implementationClass="com.intellij.codeInsight.generation.NewJavaConstructorBodyWithSuperCallGenerator"/>
    <lang.sliceProvider language="JAVA" implementationClass="com.intellij.slicer.JavaSliceProvider"/>
    <lang.lineWrapStrategy language="JAVA" implementationClass="com.intellij.psi.formatter.java.JavaLineWrapPositionStrategy"/>
    <langCodeStyleSettingsProvider implementation="com.intellij.ide.JavaLanguageCodeStyleSettingsProvider"/>
    <codeStyleSettingsProvider implementation="com.intellij.application.options.GenerationSettingsProvider"/>
    <codeStyleSettingsProvider implementation="com.intellij.application.options.JavaCodeStyleSettingsProvider"/>
    <iconProvider implementation="com.intellij.psi.impl.JavaDirectoryIconProvider" id="javaDirectory"/>
    <codeStyle.ReferenceAdjuster language="JAVA" implementationClass="com.intellij.psi.impl.source.codeStyle.JavaReferenceAdjuster"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.JavaEnterAfterUnmatchedBraceHandler" order="before afterUnmatchedBrace"/>
    <lang.smartEnterProcessor language="JAVA"
                              implementationClass="com.intellij.codeInsight.editorActions.smartEnter.JavaSmartEnterProcessor"/>
    <lang.ast.factory language="JAVA" implementationClass="com.intellij.psi.impl.source.tree.JavaASTFactory"/>
    <breadcrumbsInfoProvider implementation="com.intellij.lang.java.JavaBreadcrumbsInfoProvider"/>
    <editorFileSwapper implementation="com.intellij.codeEditor.JavaEditorFileSwapper"/>
    <flipCommaIntention.flipper language="JAVA" implementationClass="com.intellij.codeInsight.intention.impl.JavaFlipper"/>
    <moveLeftRightHandler language="JAVA" implementationClass="com.intellij.codeInsight.editorActions.moveLeftRight.JavaMoveLeftRightHandler"/>
    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.DeclarationMover" id="declaration" order="before xml"/>
    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.StatementMover" id="statement" order="before declaration"/>
    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.CaseBlockMover" id="caseBlock" order="before statement"/>
    <projectService serviceImplementation="com.intellij.psi.util.ProjectIconsAccessor"/>
    <regExpModifierProvider language="JAVA" implementationClass="com.intellij.codeInsight.JavaRegExpModifierProvider" />
    <colorProvider implementation="com.intellij.codeInsight.daemon.impl.JavaColorProvider" />
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.JavaLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="JAVA"
                                    implementationClass="com.intellij.codeInsight.daemon.impl.RecursiveCallLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="UAST" implementationClass="com.intellij.codeInsight.daemon.impl.IconLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.ExternalAnnotationsLineMarkerProvider"/>
    <codeInsight.gotoSuper language="SPI" implementationClass="com.intellij.spi.SPIGotoSuperHandler"/>
    <codeInsight.gotoSuper language="JAVA" implementationClass="com.intellij.codeInsight.navigation.JavaGotoSuperHandler"/>
    <codeInsight.delegateMethods language="JAVA" implementationClass="com.intellij.codeInsight.generation.GenerateDelegateHandler"/>
    <codeInsight.implementMethod language="JAVA" implementationClass="com.intellij.codeInsight.generation.JavaImplementMethodsHandler"/>
    <codeInsight.overrideMethod language="JAVA" implementationClass="com.intellij.codeInsight.generation.JavaOverrideMethodsHandler"/>
    <codeInsight.typeInfo language="JAVA" implementationClass="com.intellij.codeInsight.hint.JavaTypeProvider"/>
    <codeInsight.parameterInfo language="JAVA"
                               implementationClass="com.intellij.codeInsight.hint.api.impls.AnnotationParameterInfoHandler"/>
    <codeInsight.parameterInfo language="JAVA" implementationClass="com.intellij.codeInsight.hint.api.impls.ReferenceParameterInfoHandler"/>
    <codeInsight.parameterInfo language="JAVA" implementationClass="com.intellij.codeInsight.hint.api.impls.MethodParameterInfoHandler"/>
    <codeInsight.parameterNameHints language="JAVA" implementationClass="com.intellij.codeInsight.hints.JavaInlayParameterHintsProvider"/>
    <lang.foldingBuilder language="JAVA" implementationClass="com.intellij.codeInsight.folding.impl.JavaFoldingBuilder"/>
    <lang.braceMatcher language="JAVA" implementationClass="com.intellij.codeInsight.highlighting.JavaPairedBraceMatcher"/>
    <anonymousElementProvider implementation="com.intellij.lang.java.JavaAnonymousClassesProvider" />
    <usageToPsiElementProvider implementation="com.intellij.lang.java.JavaUsageToPsiElementProvider" />
    <lang.findUsagesProvider language="JAVA" implementationClass="com.intellij.lang.java.JavaFindUsagesProvider"/>
    <lang.unwrapDescriptor language="JAVA" implementationClass="com.intellij.codeInsight.unwrap.JavaUnwrapDescriptor"/>
    <codeInsight.surroundWithRangeAdjuster
        implementation="com.intellij.codeInsight.generation.surroundWith.JavaSurroundWithStatementRangeAdjuster"/>
    <lang.surroundDescriptor language="JAVA"
                             implementationClass="com.intellij.codeInsight.generation.surroundWith.JavaExpressionSurroundDescriptor"/>
    <lang.surroundDescriptor language="JAVA"
                             implementationClass="com.intellij.codeInsight.generation.surroundWith.JavaStatementsSurroundDescriptor"/>
    <lang.surroundDescriptor language="JAVA"
                             implementationClass="com.intellij.codeInsight.intention.impl.SurroundAutoCloseableAction$Template"/>
    <lang.psiElementExternalizer language="JAVA" implementationClass="com.intellij.lang.java.JavaPsiElementExternalizer"/>
    <lang.importOptimizer language="JAVA" implementationClass="com.intellij.lang.java.JavaImportOptimizer"/>
    <lang.documentationFixer language="JAVA" implementationClass="com.intellij.codeInsight.documentation.JavaDocCommentFixer"/>
    <documentationProvider implementation="com.intellij.lang.java.FileDocumentationProvider" order="last"/>
    <lang.documentationProvider language="JAVA" implementationClass="com.intellij.lang.java.JavaDocumentationProvider"/>
    <lang.formatting.extractor language="JAVA" implementationClass="com.intellij.psi.codeStyle.extractor.differ.JavaExtractor"/>
    <lang.rearranger language="JAVA" implementationClass="com.intellij.psi.codeStyle.arrangement.JavaRearranger"/>
    <lang.whiteSpaceFormattingStrategy language="JAVA"
                                       implementationClass="com.intellij.psi.formatter.JavadocWhiteSpaceFormattingStrategy"/>
    <lang.formatter language="JAVA" implementationClass="com.intellij.lang.java.JavaFormattingModelBuilder"/>
    <encapsulateFields.Helper implementationClass="com.intellij.refactoring.encapsulateFields.JavaEncapsulateFieldHelper" language="JAVA"/>
    <lang.refactoringSupport.classMembersRefactoringSupport language="JAVA" implementationClass="com.intellij.lang.java.JavaClassMembersRefactoringSupport"/>
    <lang.refactoringSupport language="JAVA" implementationClass="com.intellij.lang.java.JavaRefactoringSupportProvider"/>
    <languageLightRefAdapter implementation="com.intellij.compiler.backwardRefs.JavaLightUsageAdapter"/>
    <localInspection language="JAVA" shortName="MoveFieldAssignmentToInitializer" enabledByDefault="true" level="INFORMATION"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.code.style.issues"
                     displayName="Field assignment can be moved to initializer"
                     implementationClass="com.intellij.codeInspection.MoveFieldAssignmentToInitializerInspection"/>
    <localInspection language="JAVA" shortName="IdempotentLoopBody" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.control.flow.issues"
                     bundle="messages.InspectionsBundle" key="inspection.idempotent.loop.body"
                     implementationClass="com.intellij.codeInspection.IdempotentLoopBodyInspection"/>
    <localInspection language="JAVA" shortName="MoveConditionToLoop" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.control.flow.issues"
                     bundle="messages.InspectionsBundle" key="inspection.move.condition.to.loop"
                     implementationClass="com.intellij.codeInspection.MoveConditionToLoopInspection"/>
    <localInspection language="JAVA" shortName="JavaReflectionMemberAccess" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.reflective.access.issues"
                     bundle="messages.InspectionsBundle" key="inspection.reflection.member.access.name"
                     implementationClass="com.intellij.codeInspection.reflectiveAccess.JavaReflectionMemberAccessInspection"/>
    <localInspection language="JAVA" shortName="JavaReflectionInvocation" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.reflective.access.issues"
                     bundle="messages.InspectionsBundle" key="inspection.reflection.invocation.name"
                     implementationClass="com.intellij.codeInspection.reflectiveAccess.JavaReflectionInvocationInspection"/>
    <localInspection language="JAVA" shortName="Java9ReflectionClassVisibility" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.reflective.access.issues"
                     bundle="messages.InspectionsBundle" key="inspection.reflection.visibility.name"
                     implementationClass="com.intellij.codeInspection.reflectiveAccess.Java9ReflectionClassVisibilityInspection"/>
    <localInspection language="JAVA" shortName="JavaLangInvokeHandleSignature" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.reflective.access.issues"
                     bundle="messages.InspectionsBundle" key="inspection.handle.signature.name"
                     implementationClass="com.intellij.codeInspection.reflectiveAccess.JavaLangInvokeHandleSignatureInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="OptionalAssignedToNull"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.code.style.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.OptionalAssignedToNullInspection"
                     displayName="Null value for Optional type"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="ReplaceNullCheck"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids9" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ReplaceNullCheckInspection"
                     bundle="messages.InspectionsBundle"
                     key="inspection.require.non.null.description"/>
    <localInspection groupPath="Java" language="JAVA" shortName="OptionalIsPresent"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.code.style.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.OptionalIsPresentInspection"
                     displayName="Replace Optional.isPresent() checks with functional-style expressions"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantLambdaParameterType"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.lambda.RedundantLambdaParameterTypeInspection"
                     displayName="Remove redundant lambda parameter types"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ReplaceInefficientStreamCount"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ReplaceInefficientStreamCountInspection"
                     displayName="Replace inefficient Stream API call chains ending with count()"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="ComparatorCombinators"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ComparatorCombinatorsInspection"
                     displayName="Use Comparator combinators"/>
    <localInspection groupPath="Java" language="JAVA" shortName="UseBulkOperation"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.bulkOperation.UseBulkOperationInspection"
                     displayName="Use bulk operation instead of iteration"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SimplifyCollector"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.SimplifyCollectorInspection"
                     displayName="Collector can be simplified"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SimplifyOptionalCallChains"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.SimplifyOptionalCallChainsInspection"
                     displayName="Simplify Optional call chains"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SimplifyStreamApiCallChains"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.SimplifyStreamApiCallChainsInspection"
                     displayName="Simplify stream API call chains"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ObviousNullCheck"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ObviousNullCheckInspection"
                     displayName="Null-check method is called with obviously non-null argument"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantStreamOptionalCall"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.RedundantStreamOptionalCallInspection"
                     displayName="Redundant step in Stream or Optional call chain"/>
    <localInspection groupPath="Java" language="JAVA" shortName="EndlessStream"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.EndlessStreamInspection"
                     displayName="Non-short-circuit operation consumes the infinite stream"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ExcessiveLambdaUsage"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.verbose.or.redundant.code.constructs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ExcessiveLambdaUsageInspection"
                     displayName="Excessive lambda usage"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="Java9CollectionFactory"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids9" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java19api.Java9CollectionFactoryInspection"
                     displayName="Immutable collection creation can be replaced with collection factory call"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="Java8MapForEach"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.Java8MapForEachInspection"
                     displayName="Replace with Map.forEach"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="Java8MapApi"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.Java8MapApiInspection"
                     displayName="Replace with single Map method"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="Java8CollectionRemoveIf"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.Java8CollectionRemoveIfInspection"
                     displayName="Loop can be replaced with Collection.removeIf()"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="Java8ArraySetAll"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.java18api.Java8ArraySetAllInspection"
                     displayName="Loop can be replaced with Arrays.setAll()"/>
    <localInspection groupPath="Java" language="JAVA" shortName="CollectionAddAllCanBeReplacedWithConstructor"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.CollectionAddAllCanBeReplacedWithConstructorInspection"
                     displayName="Redundant 'Collection.addAll()' call"/>
    <localInspection groupPath="Java" language="JAVA" shortName="OverwrittenKey"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.OverwrittenKeyInspection"
                     displayName="Overwritten Map key or Set element"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="StaticPseudoFunctionalStyleMethod"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18StreamApi.StaticPseudoFunctionalStyleMethodInspection"
                     displayName="Pseudo functional expression using static class"/>
    <localInspection groupPath="Java" language="JAVA" shortName="MagicConstant" displayName="Magic Constant"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.magicConstant.MagicConstantInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="TrivialFunctionalExpressionUsage" displayName="Trivial usage of functional expression"
                     groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.TrivialFunctionalExpressionUsageInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="FunctionalExpressionCanBeFolded" displayName="Functional expression can be folded"
                     groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.FunctionalExpressionCanBeFoldedInspection"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="LambdaCanBeMethodCall" displayName="Lambda can be replaced with method call"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.LambdaCanBeMethodCallInspection" />
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="Convert2MethodRef" displayName="Lambda can be replaced with method reference"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.LambdaCanBeMethodReferenceInspection" />
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="Anonymous2MethodRef" displayName="Anonymous type can be replaced with method reference"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.AnonymousCanBeMethodReferenceInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="StreamToLoop" displayName="Stream API call chain can be replaced with loop"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.streamToLoop.StreamToLoopInspection"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="Convert2streamapi" displayName="Loop can be collapsed with Stream API"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.streamMigration.StreamApiMigrationInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="FuseStreamOperations"
                     bundle="messages.InspectionsBundle" key="inspection.fuse.stream.operations.display.name"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.streamMigration.FuseStreamOperationsInspection"/>
    <localInspection groupPath="Java,Java language level migration aids" language="JAVA" shortName="SimplifyForEach" displayName="forEach call can be simplified"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.streamMigration.SimplifyForEachInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ComparatorResultComparison"
                     bundle="messages.InspectionsBundle" key="inspection.comparator.result.comparison.display.name"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ComparatorResultComparisonInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="SuspiciousNameCombination" bundle="messages.InspectionsBundle"
                     key="suspicious.name.combination.display.name" groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.suspiciousNameCombination.SuspiciousNameCombinationInspection" />
    <localInspection groupPath="Java" language="JAVA" suppressId="unchecked" shortName="UNCHECKED_WARNING" displayName="Unchecked warning" groupKey="group.names.compiler.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.uncheckedWarnings.UncheckedWarningLocalInspection" />
    <localInspection shortName="DefaultFileTemplate" bundle="messages.InspectionsBundle" key="default.file.template.display.name"
                     groupKey="inspection.general.tools.group.name" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.defaultFileTemplateUsage.DefaultFileTemplateUsageInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="AccessStaticViaInstance" bundle="messages.InspectionsBundle" key="access.static.via.instance" groupKey="group.names.declaration.redundancy"
                     enabledByDefault="true" level="WARNING" cleanupTool="true" alternativeId="static-access"
                     implementationClass="com.intellij.codeInspection.accessStaticViaInstance.AccessStaticViaInstance" />
    <localInspection groupPath="Java" language="JAVA" shortName="DefaultAnnotationParam" bundle="messages.InspectionsBundle" key="inspection.default.annotation.param" groupKey="group.names.declaration.redundancy"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.DefaultAnnotationParamInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="SillyAssignment" bundle="messages.InspectionsBundle" key="inspection.variable.assigned.to.itself.display.name" groupKey="group.names.declaration.redundancy"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.sillyAssignment.SillyAssignmentInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="WrongPackageStatement" bundle="messages.InspectionsBundle" key="wrong.package.statement" groupKey="group.names.probable.bugs"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.wrongPackageStatement.WrongPackageStatementInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="NullableProblems" bundle="messages.InspectionsBundle" key="inspection.nullable.problems.display.name"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.nullable.NullableStuffInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="ParameterCanBeLocal" key="inspection.parameter.can.be.local.display.name"
                     groupKey="group.names.class.structure" enabledByDefault="true" level="WARNING" bundle="messages.InspectionsBundle"
                     implementationClass="com.intellij.codeInspection.varScopeCanBeNarrowed.ParameterCanBeLocalInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="FieldCanBeLocal" bundle="messages.InspectionsBundle" key="inspection.field.can.be.local.display.name"
                     groupKey="group.names.class.structure" enabledByDefault="true" level="WARNING" runForWholeFile="true"
                     implementationClass="com.intellij.codeInspection.varScopeCanBeNarrowed.FieldCanBeLocalInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Dependency" displayName="Illegal package dependencies" groupKey="group.names.dependency.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.dependencyViolation.DependencyInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Since15" bundle="messages.InspectionsBundle" key="inspection.1.5.display.name"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.java15api.Java15APIUsageInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="EqualsAndHashcode" bundle="messages.InspectionsBundle" key="inspection.equals.hashcode.display.name"
                     groupKey="group.names.probable.bugs" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.equalsAndHashcode.EqualsAndHashcode"/>
    <externalAnnotator language="JAVA" implementationClass="com.intellij.codeInspection.javaDoc.JavadocHtmlLintAnnotator"/>
    <localInspection groupPath="Java" language="JAVA" shortName="JavadocHtmlLint" bundle="messages.InspectionsBundle" key="inspection.javadoc.lint.display.name"
                     groupKey="group.names.javadoc.issues" enabledByDefault="false" level="ERROR" unfair="true"
                     implementationClass="com.intellij.codeInspection.javaDoc.JavadocHtmlLintInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="JavadocReference" bundle="messages.InspectionsBundle" key="inspection.javadoc.ref.display.name"
                     groupKey="group.names.javadoc.issues" enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.javaDoc.JavaDocReferenceInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="JavaDoc" bundle="messages.InspectionsBundle" key="inspection.javadoc.display.name"
                     groupKey="group.names.javadoc.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.javaDoc.JavaDocLocalInspection" alternativeId="javadoc"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ReturnSeparatedFromComputation" bundle="messages.InspectionsBundle"
                     key="inspection.return.separated.from.computation.name" groupKey="group.names.code.style.issues"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.intermediaryVariable.ReturnSeparatedFromComputationInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RawTypeCanBeGeneric" bundle="messages.InspectionsBundle"
                     key="inspection.raw.variable.type.can.be.generic.name" groupKey="group.names.code.style.issues"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.miscGenerics.RawTypeCanBeGenericInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantArrayCreation" bundle="messages.InspectionsBundle"
                     key="inspection.redundant.array.creation.display.name" groupKey="group.names.verbose.or.redundant.code.constructs"
                     enabledByDefault="true" level="WARNING" cleanupTool="true"
                     implementationClass="com.intellij.codeInspection.miscGenerics.RedundantArrayForVarargsCallInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="UnusedAssignment" displayName="Unused assignment" groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="true"
                     level="WARNING" implementationClass="com.intellij.codeInspection.defUse.DefUseInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ConstantConditions" bundle="messages.InspectionsBundle" key="inspection.data.flow.display.name"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.dataFlow.DataFlowInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Java9UndeclaredServiceUsage"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.visibility.issues"
                     enabledByDefault="true" level="WARNING"
                     key="inspection.undeclared.service.usage.name" bundle="messages.InspectionsBundle"
                     implementationClass="com.intellij.codeInspection.java19api.Java9UndeclaredServiceUsageInspection"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="EmptyMethod" displayName="Empty method" groupKey="group.names.declaration.redundancy" enabledByDefault="true" groupBundle="messages.InspectionsBundle"
                      level="WARNING" implementationClass="com.intellij.codeInspection.emptyMethod.EmptyMethodInspection"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="UnusedReturnValue" bundle="messages.InspectionsBundle" key="inspection.unused.return.value.display.name"
                      groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.unusedReturnValue.UnusedReturnValue"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="SameParameterValue" bundle="messages.InspectionsBundle" key="inspection.same.parameter.display.name"
                      groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.sameParameterValue.SameParameterValueInspection"/>
    <deadCode implementation="com.intellij.codeInspection.deadCode.DeprecatedEntryPoint"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="unused" displayName="Unused declaration" groupBundle="messages.InspectionsBundle"
                      groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.deadCode.UnusedDeclarationInspection"
                      presentation="com.intellij.codeInspection.deadCode.UnusedDeclarationPresentation"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.java18api.Java8MapApiInspectionMerger"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.deadCode.UnusedDeclarationInspectionMerger"/>
    <externalProjectDataService implementation="com.intellij.externalSystem.JavaProjectDataService"/>
    <applicationService serviceInterface="com.intellij.codeInsight.javadoc.JavaDocInfoGeneratorFactory"
                        serviceImplementation="com.intellij.codeInsight.javadoc.JavaDocInfoGeneratorFactory"/>
    <projectService serviceImplementation="com.intellij.codeInsight.JavaProjectCodeInsightSettings"/>
    <projectService serviceImplementation="com.intellij.javadoc.JavadocGenerationManager"/>
    <psi.treeChangePreprocessor implementation="com.intellij.psi.impl.JavaCodeBlockModificationListener"/>
    <projectService serviceInterface="com.intellij.codeInspection.ex.EntryPointsManager"
                    serviceImplementation="com.intellij.codeInspection.ex.EntryPointsManagerImpl"/>
    <projectModelModifier implementation="com.intellij.openapi.roots.impl.IdeaProjectModelModifier" order="last"/>
    <projectService serviceInterface="com.intellij.openapi.roots.JavaProjectModelModificationService"
                    serviceImplementation="com.intellij.openapi.roots.impl.JavaProjectModelModificationServiceImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.ExpectedTypesProvider"
                    serviceImplementation="com.intellij.codeInsight.ExpectedTypesProvider"/>
    <multiHostInjector implementation="com.intellij.psi.impl.source.tree.injected.JavaConcatenationInjectorManager$Concatenation2InjectorAdapter" order="first"/>
    <projectService serviceInterface="com.intellij.psi.impl.source.tree.injected.JavaConcatenationInjectorManager"
                    serviceImplementation="com.intellij.psi.impl.source.tree.injected.JavaConcatenationInjectorManager"/>
    <projectService serviceInterface="com.intellij.refactoring.listeners.JavaRefactoringListenerManager"
                    serviceImplementation="com.intellij.refactoring.listeners.impl.JavaRefactoringListenerManagerImpl"/>
    <projectService serviceInterface="com.intellij.refactoring.RefactoringManager"
                    serviceImplementation="com.intellij.refactoring.RefactoringManager"/>
    <applicationService serviceInterface="com.intellij.refactoring.JavaRefactoringSettings"
                        serviceImplementation="com.intellij.refactoring.JavaRefactoringSettings"/>
    <changeSignatureDetector language="JAVA" implementationClass="com.intellij.refactoring.changeSignature.JavaChangeSignatureDetector"/>
    <applicationService serviceInterface="com.intellij.refactoring.JavaRefactoringActionHandlerFactory"
                        serviceImplementation="com.intellij.refactoring.openapi.impl.JavaRefactoringActionHandlerFactoryImpl"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.intention.impl.JavaElementRenderer"/>
    <projectService serviceInterface="com.intellij.psi.impl.migration.PsiMigrationManager"
                    serviceImplementation="com.intellij.psi.impl.migration.PsiMigrationManager"/>
    <projectService serviceInterface="com.intellij.ide.util.TreeClassChooserFactory"
                    serviceImplementation="com.intellij.ide.util.TreeClassChooserFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.util.xml.converters.values.ClassArrayConverter"
                        serviceImplementation="com.intellij.util.xml.converters.ClassArrayConverterImpl"/>
    <applicationService serviceInterface="com.intellij.util.xml.converters.values.ClassValueConverter"
                        serviceImplementation="com.intellij.util.xml.converters.ClassValueConverterImpl"/>
    <lookup.charFilter implementation="com.intellij.codeInsight.completion.JavaCharFilter" id="java"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.JavaMethodHandleCompletionContributor" id="javaMethodHandle"
                            order="last, before javaLegacy"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.JavaReflectionCompletionContributor" id="javaReflection"
                            order="last, before javaLegacy"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaSmartCompletionContributor" id="javaSmart"
                            order="last, before default"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.NullSmartCompletionContributor" id="smartNull"
                            order="last, before javaSmart"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaDocCompletionContributor" id="javadoc"
                            order="last, before javaLegacy, before wordCompletion"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.JavaClassNameCompletionContributor" id="javaClassName"
                            order="last, before default"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaMemberNameCompletionContributor" id="javaMemberName"
                            order="before javaOverride"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.JavaMethodMergingContributor" id="methodMerger"
                            order="before javaLegacy, before default"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.JavaClassReferenceCompletionContributor"
                            id="javaClassReference" order="before legacy"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaCompletionContributor" id="javaLegacy"
                            order="last, before legacy, before default, before javaClassName"/>
    <completion.contributor language="XML" implementationClass="com.intellij.codeInsight.completion.XmlBasicToClassNameDelegator" id="basic2ClassName"
                            order="after xml"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInspection.magicConstant.MagicCompletionContributor" id="magicCompletion"
                            order="after javaBasic2ClassName"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavaNoVariantsDelegator" id="javaBasic2ClassName"
                            order="before javaMemberName, before javaLegacy, after liveTemplates"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.RefactoringCompletionContributor" id="javaRefactoring"
                            order="first"/>
    <completion.confidence language="JAVA" implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.JavaReflectionCompletionConfidence" id="javaReflection" />
    <completion.confidence language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavadocCompletionConfidence" id="javadoc" order="before javaComments"/>
    <lookup.actionProvider implementation="com.intellij.codeInsight.completion.ExcludeFromCompletionLookupActionProvider"
                           id="excludeFromCompletion" order="last"/>
    <lookup.actionProvider implementation="com.intellij.codeInsight.completion.ImportStaticLookupActionProvider" id="importStatic"/>
    <fileTypeFactory implementation="com.intellij.openapi.fileTypes.impl.JavaFileTypeFactory"/>
    <completion.contributor language="JAVA" implementationClass="com.intellij.codeInsight.completion.JShellCompletionContributor" order="before javaLegacy"/>
    <customPropertyScopeProvider implementation="com.intellij.psi.impl.search.SimpleAccessorScopeProvider"/>
    <codeInsight.createFieldFromUsageHelper language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.quickfix.JavaCreateFieldFromUsageHelper"/>
    <expressionConverter implementationClass="com.intellij.refactoring.introduceParameter.JavaExpressionConverter" language="JAVA"/>
    <codeFoldingOptionsProvider instance="com.intellij.application.options.editor.JavaCodeFoldingOptionsProvider"/>
    <autoImportOptionsProvider instance="com.intellij.application.options.editor.JavaAutoImportOptions"/>
    <errorOptionsProvider instance="com.intellij.profile.codeInspection.ui.JavaErrorOptionsProvider"/>
    <overrideImplementsAnnotationsHandler implementation="com.intellij.codeInsight.generation.OverrideImplementsAnnotationsHandlerImpl"/>
    <codeInsight.changeVariableTypeQuickFixProvider
        implementation="com.intellij.codeInsight.daemon.impl.quickfix.VariableTypeQuickFixProvider"/>
    <codeInsight.unresolvedReferenceQuickFixProvider
        implementation="com.intellij.codeInsight.daemon.impl.quickfix.DefaultQuickFixProvider"/>
    <annotationSupport language="JAVA" implementationClass="com.intellij.psi.impl.source.tree.java.JavaAnnotationSupport" />
    <projectService serviceInterface="com.intellij.psi.impl.JavaPsiImplementationHelper"
                    serviceImplementation="com.intellij.psi.impl.JavaPsiImplementationHelperImpl"/>
    <projectService serviceInterface="com.intellij.psi.codeStyle.JavaCodeStyleSettingsFacade"
                    serviceImplementation="com.intellij.psi.codeStyle.JavaCodeStyleSettingsFacadeImpl"/>
    <projectService serviceInterface="com.intellij.psi.JavaCodeFragmentFactory"
                    serviceImplementation="com.intellij.psi.impl.JavaCodeFragmentFactoryImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.javadoc.JavaDocCodeStyle"
                    serviceImplementation="com.intellij.codeInsight.javadoc.JavaDocCodeStyleImpl"/>
    <projectService serviceInterface="com.intellij.openapi.roots.LanguageLevelProjectExtension"
                    serviceImplementation="com.intellij.openapi.roots.impl.LanguageLevelProjectExtensionImpl"/>
    <applicationService serviceInterface="com.intellij.psi.JavaDirectoryService"
                        serviceImplementation="com.intellij.psi.impl.file.JavaDirectoryServiceImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.projectRoots.JavaVersionService"
                        serviceImplementation="com.intellij.openapi.projectRoots.JavaVersionServiceImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.generation.OverrideImplementExploreUtil$MemberImplementorExplorersProvider"
                        serviceImplementation="com.intellij.codeInsight.generation.MemberImplementorExplorersProviderImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.folding.JavaCodeFoldingSettings"
                        serviceImplementation="com.intellij.codeInsight.folding.impl.JavaCodeFoldingSettingsImpl"/>
    <projectService serviceInterface="com.intellij.psi.codeStyle.JavaCodeStyleManager"
                    serviceImplementation="com.intellij.psi.impl.source.codeStyle.JavaCodeStyleManagerImpl"/>
    <applicationService serviceInterface="com.intellij.psi.CommonReferenceProviderTypes"
                        serviceImplementation="com.intellij.psi.impl.CommonReferenceProviderTypesImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.NullableNotNullManager"
                    serviceImplementation="com.intellij.codeInsight.NullableNotNullManagerImpl"/>
    <regExpLanguageHost forClass="com.intellij.psi.impl.source.tree.java.PsiLiteralExpressionImpl"
                        implementationClass="com.intellij.psi.impl.JavaRegExpHost"/>
    <applicationService serviceInterface="com.intellij.psi.impl.file.PsiPackageImplementationHelper"
                        serviceImplementation="com.intellij.psi.impl.file.PsiPackageImplementationHelperImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.ExternalAnnotationsManager"
                    serviceImplementation="com.intellij.codeInsight.ExternalAnnotationsManagerImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.InferredAnnotationsManager"
                    serviceImplementation="com.intellij.codeInsight.InferredAnnotationsManagerImpl"/>

    <moduleExtension implementation="com.intellij.openapi.roots.impl.JavaModuleExternalPathsImpl"/>

    <orderRootType implementation="com.intellij.openapi.roots.AnnotationOrderRootType"/>
    <orderRootType implementation="com.intellij.openapi.roots.JavadocOrderRootType"/>

    <lang.namesValidator language="JAVA" implementationClass="com.intellij.lang.refactoring.JavaNamesValidator"/>

    <completion.confidence language="JAVA" implementationClass="com.intellij.codeInsight.completion.SkipAutopopupInComments" id="javaComments"/>
    <completion.confidence language="JAVA" implementationClass="com.intellij.codeInsight.completion.SkipAutopopupInStrings" id="javaSkipAutopopupInStrings"/>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SplitIfAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExtractSetFromComparisonChainAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SurroundAutoCloseableAction</className>
      <category>Java/Try Statements</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.ConvertToStringLiteralAction</className>
      <category>Java/Strings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.InsertLiteralUnderscoresAction</className>
      <category>Java/Numbers</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.RemoveLiteralUnderscoresAction</className>
      <category>Java/Numbers</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.BreakStringOnLineBreaksIntentionAction</className>
      <category>Java/Strings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ReplaceCastWithVariableAction</className>
      <category>Java/Imports</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertRelativePathToAbsoluteIntentionAction</className>
      <category>Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SortContentAction</className>
      <category>Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertAbsolutePathToRelativeIntentionAction</className>
      <category>Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddJavadocIntention</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertColorRepresentationIntentionAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInspection.actions.ReplaceImplementsWithStaticImportAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInspection.actions.UnimplementInterfaceAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExpandStaticImportAction</className>
      <category>Java/Imports</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddExplicitTypeArgumentsIntention</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddSingleMemberStaticImportAction</className>
      <category>Java/Imports</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddOnDemandStaticImportAction</className>
      <category>Java/Imports</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertToBasicLatinAction</className>
      <category>Java/I18N</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConcatenationToMessageFormatAction</className>
      <category>Java/I18N</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SimplifyBooleanExpressionAction</className>
      <category>Java/Boolean</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.EncapsulateFieldAction</className>
      <category>Java/Refactorings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.IntroduceVariableIntentionAction</className>
      <category>Java/Refactorings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.DefineParamsDefaultValueAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.AddRuntimeExceptionToThrowsAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.testIntegration.intention.MoveInitializerToSetUpMethodAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.MoveInitializerToConstructorAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.JoinDeclarationAndAssignmentAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SplitDeclarationAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CopyAbstractMethodImplementationAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ImplementAbstractMethodAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CreateSubclassAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.testIntegration.createTest.GenerateMissedTestsAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.testIntegration.createTest.CreateTestAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.CreateCastExpressionFromInstanceofAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.CreateLocalVarFromInstanceofAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.BindFieldsFromParametersAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AssignFieldFromParameterAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CreateFieldFromParameterAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.UnwrapElseBranchAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertCompareToToEqualsIntention</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SwapIfStatementsIntentionAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CreateSwitchIntention</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.DeannotateIntentionAction</className>
      <category>Java/Annotations</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.IterateOverIterableIntention</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.ToggleSourceInferredAnnotations</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>ToggleSourceInferredAnnotations</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.MakeAnnotationExternal</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>MakeAnnotationExternal</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.MakeExternalAnnotationExplicit</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>MakeExternalAnnotationExplicit</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.MakeInferredAnnotationExplicit</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>MakeInferredAnnotationExplicit</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInspection.dataFlow.EditContractIntention</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>EditContractIntention</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddNullableAnnotationIntention</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddDeprecationAnnotationIntention</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddNotNullAnnotationIntention</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExtractIfConditionAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.UnrollLoopAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.InvertIfConditionAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ComposeFunctionChainAction</className>
      <category>Java/Refactorings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExtractChainedMapAction</className>
      <category>Java/Streams</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.InlineStreamMapAction</className>
      <category>Java/Streams</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.MergeFilterChainAction</className>
      <category>Java/Streams</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SplitFilterAction</className>
      <category>Java/Streams</category>
    </intentionAction>
  </extensions>
</idea-plugin>
