<!--
  ~ Copyright 2000-2017 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <module value="com.intellij.modules.java"/>

  <depends optional="true" config-file="images-integration.xml">com.intellij.platform.images</depends>

  <xi:include href="/idea/JavaActions.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <xi:include href="/META-INF/JavaAnalysisPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/JvmAnalysisPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/JavaIndexingPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/JavaPsiPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/IntentionPowerPack.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/InspectionGadgets.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/ManifestSupport.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/TypeMigration.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>
  <xi:include href="/META-INF/libraryJarUsage.xml" xpointer="xpointer(/idea-plugin/*)">
    <xi:fallback/>
  </xi:include>

  <project-components>
    <component>
      <implementation-class>com.intellij.framework.detection.impl.FrameworkDetectionManager</implementation-class>
    </component>
  </project-components>

  <projectListeners>
    <listener class="com.intellij.lang.java.JavaModuleRenameListener" topic="com.intellij.openapi.project.ModuleListener"/>
    <listener class="com.intellij.debugger.impl.DebuggerManagerImpl$DebuggerRunContentWithExecutorListener" topic="com.intellij.execution.ui.RunContentWithExecutorListener"/>
    <listener class="com.intellij.debugger.impl.HotSwapManager$HotSwapDebuggerManagerListener" topic="com.intellij.debugger.impl.DebuggerManagerListener"/>
    <listener class="com.intellij.debugger.ui.HotSwapUIImpl$HotSwapDebuggerManagerListener" topic="com.intellij.debugger.impl.DebuggerManagerListener"/>
  </projectListeners>

  <extensionPoints>
    <extensionPoint qualifiedName="com.intellij.methodImplementor" interface="com.intellij.codeInsight.MethodImplementor" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.javaExpressionSurrounder" interface="com.intellij.codeInsight.generation.surroundWith.JavaExpressionSurrounder" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.unscrambleSupport" interface="com.intellij.unscramble.UnscrambleSupport" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.java.refactoring.chainCallExtractor" interface="com.intellij.refactoring.chainCall.ChainCallExtractor" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.java.inspection.bulkMethodInfo" interface="com.intellij.codeInspection.bulkOperation.BulkMethodInfoProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.java.externalAnnotation" interface="com.intellij.codeInsight.externalAnnotation.AnnotationProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.documentationDelegateProvider" interface="com.intellij.codeInsight.javadoc.DocumentationDelegateProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.codeInsight.externalLibraryResolver" interface="com.intellij.codeInsight.daemon.quickFix.ExternalLibraryResolver" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveClassHandler" interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveClassHandler" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveAllClassesInFileHandler" interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveAllClassesInFileHandler" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveClassToInnerHandler" interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveClassToInnerHandler" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.projectModelModifier" interface="com.intellij.openapi.roots.JavaProjectModelModifier" area="IDEA_PROJECT" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.library.dependencyScopeSuggester" interface="com.intellij.openapi.roots.LibraryDependencyScopeSuggester" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.getterSetterProvider" interface="com.intellij.codeInsight.generation.GetterSetterPrototypeProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.generation.toStringClassFilter" interface="org.jetbrains.generate.tostring.GenerateToStringClassFilter" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.refactoring.introduceParameterMethodUsagesProcessor" interface="com.intellij.refactoring.introduceParameter.IntroduceParameterMethodUsagesProcessor" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.safeDelete.importSearcher" interface="com.intellij.refactoring.safeDelete.ImportSearcher" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.predefinedMigrationMapProvider" interface="com.intellij.refactoring.migration.PredefinedMigrationProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.generateAccessorProvider" interface="com.intellij.util.NotNullFunction" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.overrideImplementsAnnotationsHandler" interface="com.intellij.codeInsight.generation.OverrideImplementsAnnotationsHandler" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.conversion.rule" interface="com.intellij.refactoring.typeMigration.rules.TypeConversionRule" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.repositoryLibrary" beanClass="com.intellij.jarRepository.RepositoryLibraryDefinition" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.encapsulateFields.Helper" beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.refactoring.encapsulateFields.EncapsulateFieldHelper"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveInnerClassUsagesHandler" beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.refactoring.move.moveInner.MoveInnerClassUsagesHandler"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.testGenerator" beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.testIntegration.createTest.TestGenerator"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveMemberHandler" beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.refactoring.move.moveMembers.MoveMemberHandler"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.refactoring.moveInnerHandler" beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.refactoring.move.moveInner.MoveInnerHandler"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.constructorBodyGenerator" beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.generation.ConstructorBodyGenerator"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.codeInsight.createFieldFromUsageHelper" beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.daemon.impl.quickfix.CreateFieldFromUsageHelper"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.hierarchy.referenceProcessor" interface="com.intellij.ide.hierarchy.call.CallReferenceProcessor" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.refactoring.pullUpHelperFactory" beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.refactoring.memberPullUp.PullUpHelperFactory"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.refactoring.safeDelete.JavaSafeDeleteDelegate" beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.refactoring.safeDelete.JavaSafeDeleteDelegate"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.externalAnnotationsArtifactsResolver"
                    interface="com.intellij.codeInsight.ExternalAnnotationsArtifactsResolver" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.java.externalAnnotation.locationProvider"
                    interface="com.intellij.codeInsight.externalAnnotation.location.AnnotationsLocationProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.languageCompilerRefAdapter" interface="com.intellij.compiler.backwardRefs.LanguageCompilerRefAdapter" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.framework.type" interface="com.intellij.framework.FrameworkTypeEx" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.runConfigurationExtension" interface="com.intellij.execution.RunConfigurationExtension" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.moduleConfigurable"
                    beanClass="com.intellij.openapi.options.ModuleConfigurableEP"
                    area="IDEA_MODULE"
                    dynamic="true">
      <with attribute="instance" implements="com.intellij.openapi.roots.ui.configuration.projectRoot.ModuleConfigurable"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.variableTypeCalculator" interface="com.intellij.codeInsight.template.macro.VariableTypeCalculator" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.jreProvider" interface="com.intellij.execution.ui.JreProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.sdkEditorAdditionalOptionsProvider" interface="com.intellij.openapi.SdkEditorAdditionalOptionsProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.exceptionFilter" interface="com.intellij.execution.filters.ExceptionFilterFactory" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.compiler.buildTargetScopeProvider"
                    interface="com.intellij.compiler.impl.BuildTargetScopeProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.compiler.optionsManager"
                    interface="com.intellij.compiler.options.CompilerOptionsFilter" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.java.programPatcher"
                    interface="com.intellij.execution.runners.JavaProgramPatcher" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.OrderRootTypeUI"
                    beanClass="com.intellij.openapi.extensions.KeyedFactoryEPBean"
                    dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.openapi.roots.ui.OrderRootTypeUIFactory"/>
    </extensionPoint>

    <extensionPoint qualifiedName="com.intellij.packaging.elementType" interface="com.intellij.packaging.elements.PackagingElementType" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.packaging.artifactPropertiesProvider" interface="com.intellij.packaging.artifacts.ArtifactPropertiesProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.packaging.sourceItemProvider" interface="com.intellij.packaging.ui.PackagingSourceItemsProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.packaging.sourceItemFilter" interface="com.intellij.packaging.ui.PackagingSourceItemFilter" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.packaging.artifactType" interface="com.intellij.packaging.artifacts.ArtifactType" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.frameworkSupport" interface="com.intellij.ide.util.frameworkSupport.FrameworkSupportProvider"
                    dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.frameworkSupportCommunicator"
                    interface="com.intellij.ide.util.newProjectWizard.impl.FrameworkSupportCommunicator" dynamic="true"/>

    <!--new project wizard-->
    <extensionPoint qualifiedName="com.intellij.projectWizard.projectCategory" interface="com.intellij.ide.projectWizard.ProjectCategory" dynamic="true"/>

    <!-- both EP implementation classes requires constructor injection (our plugins fixed, but 3rd-party not) -->
    <extensionPoint qualifiedName="com.intellij.projectImportProvider" interface="com.intellij.projectImport.ProjectImportProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.projectImportBuilder" interface="com.intellij.projectImport.ProjectImportBuilder" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.projectStructureDetector" interface="com.intellij.ide.util.projectWizard.importSources.ProjectStructureDetector" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.projectStructureConfigurableFilter"
                    interface="com.intellij.openapi.roots.ui.configuration.ProjectStructureConfigurableFilter" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.compiler" area="IDEA_PROJECT" interface="com.intellij.openapi.compiler.Compiler" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.compilerFactory" area="IDEA_PROJECT" interface="com.intellij.openapi.compiler.CompilerFactory" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.compilableFileTypesProvider" area="IDEA_PROJECT" interface="com.intellij.openapi.compiler.CompilableFileTypesProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.compiler.task" area="IDEA_PROJECT" beanClass="com.intellij.compiler.CompileTaskBean" dynamic="true">
      <with attribute="implementation" implements="com.intellij.openapi.compiler.CompileTask"/>
    </extensionPoint>
    <extensionPoint qualifiedName="com.intellij.compileServer.plugin" beanClass="com.intellij.compiler.server.CompileServerPlugin" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.buildProcess.parametersProvider" area="IDEA_PROJECT"
                    interface="com.intellij.compiler.server.BuildProcessParametersProvider" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.compiler.buildIssueContributor" dynamic="true" interface="com.intellij.compiler.progress.BuildIssueContributor"/>

    <extensionPoint qualifiedName="com.intellij.attachSourcesProvider" interface="com.intellij.codeInsight.AttachSourcesProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.java.compiler" area="IDEA_PROJECT"
                    interface="com.intellij.compiler.impl.javaCompiler.BackendCompiler" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.configuration.ModuleStructureExtension" dynamic="true"
                    interface="com.intellij.openapi.roots.ui.configuration.projectRoot.ModuleStructureExtension"/>

    <extensionPoint qualifiedName="com.intellij.projectStructureValidator"
                    interface="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureValidator" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.compiler.updateResourcesBuildContributor" interface="com.intellij.compiler.impl.UpdateResourcesBuildContributor" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.junitPatcher"
                    interface="com.intellij.execution.JUnitPatcher" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.junitRecognizer"
                    interface="com.intellij.execution.JUnitRecognizer" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.unusedDeclarationFixProvider"
                    interface="com.intellij.codeInspection.reference.UnusedDeclarationFixProvider" dynamic="true"/>

    <!-- RefMethod -->
    <extensionPoint qualifiedName="com.intellij.canBeEmpty"
                    interface="com.intellij.openapi.util.Condition" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debuggerClassFilterProvider"
                    interface="com.intellij.ui.classFilter.DebuggerClassFilterProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.codeFragmentFactory"
                    interface="com.intellij.debugger.engine.evaluation.CodeFragmentFactory" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.nodeRenderer"
                    interface="com.intellij.debugger.ui.tree.render.NodeRenderer" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.compoundRendererProvider"
                    interface="com.intellij.debugger.ui.tree.render.CompoundRendererProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.javaDebugAware"
                    interface="com.intellij.debugger.engine.JavaDebugAware" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.javaBreakpointHandlerFactory"
                    interface="com.intellij.debugger.engine.JavaBreakpointHandlerFactory" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.positionManagerFactory"
                    interface="com.intellij.debugger.PositionManagerFactory"
                    area="IDEA_PROJECT" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.debugger.jvmSmartStepIntoHandler"
                    interface="com.intellij.debugger.actions.JvmSmartStepIntoHandler" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.debugger.jvmSteppingCommandProvider"
                    interface="com.intellij.debugger.impl.JvmSteppingCommandProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.frameExtraVarsProvider"
                    interface="com.intellij.debugger.engine.FrameExtraVariablesProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.asyncStackTraceProvider"
                    interface="com.intellij.debugger.engine.AsyncStackTraceProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.sourcePositionProvider"
                    interface="com.intellij.debugger.engine.SourcePositionProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.simplePropertyGetterProvider"
                    interface="com.intellij.debugger.engine.SimplePropertyGetterProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.syntheticProvider"
                    interface="com.intellij.debugger.engine.SyntheticTypeComponentProvider" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.extraSteppingFilter"
                    interface="com.intellij.debugger.engine.ExtraSteppingFilter" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.sourcePositionHighlighter"
                    interface="com.intellij.debugger.engine.SourcePositionHighlighter" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debugger.nodeNameAdjuster"
                    interface="com.intellij.debugger.ui.tree.NodeDescriptorNameAdjuster" dynamic="true"/>


    <extensionPoint qualifiedName="com.intellij.compiler.inspectionValidator"
                    interface="com.intellij.openapi.compiler.util.InspectionValidator"
                    area="IDEA_PROJECT" dynamic="true"/>

    <extensionPoint qualifiedName="com.intellij.debuggerEditorTextProvider" beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.debugger.impl.EditorTextProvider"/>
    </extensionPoint>

    <!--<extensionPoint qualifiedName="com.intellij.expectedTypesProvider" interface="com.intellij.codeInsight.ExpectedTypesProviderExtension"/>-->

    <extensionPoint qualifiedName="com.intellij.refactoring.overrideMethodProcessor" interface="com.intellij.refactoring.OverrideMethodsProcessor" dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.library.javaSourceRootDetector" interface="com.intellij.openapi.roots.libraries.ui.RootDetector" dynamic="true"/>

    <!-- See com.intellij.execution.filters.ExceptionFilter -->
    <extensionPoint qualifiedName="com.intellij.jvm.exceptionFilter" interface="com.intellij.execution.filters.JvmExceptionOccurrenceFilter" dynamic="true"/>

    <!-- See com.intellij.codeInspection.javaDoc.JavaDocLocalInspection -->
    <extensionPoint qualifiedName="com.intellij.javaDocNotNecessary" interface="com.intellij.openapi.util.Condition" dynamic="true"/>

  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">

    <notificationGroup id="jps configuration error"
                       toolWindowId="Build"
                       displayType="TOOL_WINDOW"
                       bundle="messages.JavaCompilerBundle"
                       key="notification.group.title.jps.cannot.start.compiler" />

    <registryKey key="ide.jps.use.build.tool.window" defaultValue="true" description="Enables 'Build' toolwindow for JPS compilation messages"/>
    <applicationService serviceImplementation="com.intellij.compiler.server.BuildManager" preload="true"/>
    <compilableFileTypesProvider implementation="com.intellij.compiler.impl.javaCompiler.JavaCompilableFileTypesProvider" />
    <postStartupActivity implementation="com.intellij.compiler.server.BuildManager$BuildManagerStartupActivity"/>
    <postStartupActivity implementation="com.intellij.ide.SetupJavaProjectFromSourcesActivity" />

    <projectService serviceInterface="com.intellij.packaging.artifacts.ArtifactManager" serviceImplementation="com.intellij.packaging.impl.artifacts.ArtifactManagerImpl" preload="await"/>
    <backgroundPostStartupActivity implementation="com.intellij.packaging.impl.artifacts.ArtifactTypeFeatureCollector"/>
    <projectService serviceInterface="com.intellij.compiler.CompilerConfiguration" serviceImplementation="com.intellij.compiler.CompilerConfigurationImpl" preload="await"/>
    <projectService serviceInterface="com.intellij.compiler.ProblemsView" serviceImplementation="com.intellij.compiler.impl.ProblemsViewImpl"/>
    <projectService serviceInterface="com.intellij.compiler.CompilerReferenceService" serviceImplementation="com.intellij.compiler.backwardRefs.CompilerReferenceServiceImpl"/>
    <postStartupActivity implementation="com.intellij.compiler.backwardRefs.CompilerReferenceServiceImpl$InitializationActivity"/>

    <javaCompilerConfigurationProxy implementation="com.intellij.compiler.JavaCompilerConfiguration"/>
    <projectService serviceImplementation="com.intellij.compiler.server.impl.BuildProcessCustomPluginsConfiguration"/>
    <buildProcess.parametersProvider implementation="com.intellij.compiler.server.impl.CustomBuildProcessPluginsClasspathProvider"/>
    <vfs.asyncListener implementation="com.intellij.compiler.impl.TranslatingCompilerFilesMonitor"/>

    <editorFactoryDocumentListener implementation="com.intellij.compiler.server.BuildManager$MyDocumentListener"/>

    <highlightingPassFactory implementation="com.intellij.framework.detection.impl.FrameworkDetectionManager$FrameworkDetectionHighlightingPassFactory"/>

    <virtualFileSystem implementationClass="com.intellij.openapi.vfs.impl.jrt.JrtFileSystemImpl" key="jrt" physical="true"/>

    <registryKey key="use.jdk.vendor.in.suggested.jdk.name" defaultValue="true" description="Include Vendor name in suggested SDK names"/>

    <sdkType implementation="com.intellij.openapi.projectRoots.impl.JavaSdkImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.module.WebModuleTypeRegistrar" preload="true"/>

    <projectService serviceImplementation="com.intellij.openapi.vcs.impl.ModuleVcsDetector" preload="notHeadless"/>
    <postStartupActivity implementation="com.intellij.openapi.vcs.impl.ModuleVcsDetector$MyPostStartUpActivity"/>

    <postStartupActivity implementation="com.intellij.execution.testDiscovery.TestDiscoveryIndex$MyPostStartUpActivity"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.generation.SetterTemplatesManager"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.generation.GetterTemplatesManager"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.generation.EqualsHashCodeTemplatesManager"/>
    <applicationService serviceImplementation="org.jetbrains.java.generate.template.toString.ToStringTemplatesManager"/>
    <applicationService serviceImplementation="com.intellij.codeInsight.javadoc.JavaDocInfoGeneratorFactory"/>
    <applicationService serviceImplementation="com.intellij.pom.java.AcceptedLanguageLevelsSettings"/>
    <applicationService serviceImplementation="com.intellij.refactoring.JavaRefactoringSettings"/>
    <applicationService serviceInterface="com.intellij.refactoring.JavaRefactoringActionHandlerFactory"
                        serviceImplementation="com.intellij.refactoring.openapi.impl.JavaRefactoringActionHandlerFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.util.xml.converters.values.ClassArrayConverter"
                        serviceImplementation="com.intellij.util.xml.converters.ClassArrayConverterImpl"/>
    <applicationService serviceInterface="com.intellij.util.xml.converters.values.ClassValueConverter"
                        serviceImplementation="com.intellij.util.xml.converters.ClassValueConverterImpl"/>
    <applicationService serviceInterface="com.intellij.psi.JavaDirectoryService"
                        serviceImplementation="com.intellij.psi.impl.file.JavaDirectoryServiceImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.projectRoots.JavaVersionService"
                        serviceImplementation="com.intellij.openapi.projectRoots.JavaVersionServiceImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.generation.OverrideImplementExploreUtil$MemberImplementorExplorersProvider"
                        serviceImplementation="com.intellij.codeInsight.generation.MemberImplementorExplorersProviderImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.folding.JavaCodeFoldingSettings"
                        serviceImplementation="com.intellij.codeInsight.folding.impl.JavaCodeFoldingSettingsImpl"/>
    <applicationService serviceInterface="com.intellij.psi.CommonReferenceProviderTypes"
                        serviceImplementation="com.intellij.psi.impl.CommonReferenceProviderTypesImpl"/>
    <applicationService serviceInterface="com.intellij.psi.impl.file.PsiPackageImplementationHelper"
                        serviceImplementation="com.intellij.psi.impl.file.PsiPackageImplementationHelperImpl"/>
    <applicationService serviceInterface="com.intellij.psi.codeStyle.JavaFileCodeStyleFacadeFactory"
                        serviceImplementation="com.intellij.psi.codeStyle.JavaFileCodeStyleFacadeImpl$Factory"/>

    <projectService serviceImplementation="com.intellij.jarRepository.RemoteRepositoriesConfiguration"/>
    <projectService serviceImplementation="com.intellij.jarRepository.services.MavenRepositoryServicesManager"/>
    <projectService serviceImplementation="com.intellij.psi.util.ProjectIconsAccessor"/>
    <projectService serviceImplementation="com.intellij.testIntegration.TestFailedLineManager"/>
    <projectService serviceImplementation="com.intellij.codeInsight.JavaProjectCodeInsightSettings"/>
    <projectService serviceImplementation="com.intellij.javadoc.JavadocGenerationManager"/>
    <projectService serviceInterface="com.intellij.codeInspection.ex.EntryPointsManager"
                    serviceImplementation="com.intellij.codeInspection.ex.EntryPointsManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.roots.JavaProjectModelModificationService"
                    serviceImplementation="com.intellij.openapi.roots.impl.JavaProjectModelModificationServiceImpl"/>
    <projectService serviceImplementation="com.intellij.codeInsight.ExpectedTypesProvider"/>
    <projectService serviceInterface="com.intellij.refactoring.listeners.JavaRefactoringListenerManager"
                    serviceImplementation="com.intellij.refactoring.listeners.impl.JavaRefactoringListenerManagerImpl"/>
    <projectService serviceImplementation="com.intellij.refactoring.RefactoringManager"/>
    <projectService serviceInterface="com.intellij.ide.util.TreeClassChooserFactory"
                    serviceImplementation="com.intellij.ide.util.TreeClassChooserFactoryImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.JavaPsiImplementationHelper"
                    serviceImplementation="com.intellij.psi.impl.JavaPsiImplementationHelperImpl"/>
    <projectService serviceInterface="com.intellij.psi.codeStyle.JavaCodeStyleSettingsFacade"
                    serviceImplementation="com.intellij.psi.codeStyle.JavaCodeStyleSettingsFacadeImpl"/>
    <projectService serviceInterface="com.intellij.psi.JavaCodeFragmentFactory"
                    serviceImplementation="com.intellij.psi.impl.JavaCodeFragmentFactoryImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.javadoc.JavaDocCodeStyle"
                    serviceImplementation="com.intellij.codeInsight.javadoc.JavaDocCodeStyleImpl"/>
    <projectService serviceInterface="com.intellij.openapi.roots.LanguageLevelProjectExtension"
                    serviceImplementation="com.intellij.openapi.roots.impl.LanguageLevelProjectExtensionImpl"/>
    <projectService serviceInterface="com.intellij.psi.codeStyle.JavaCodeStyleManager"
                    serviceImplementation="com.intellij.psi.impl.source.codeStyle.JavaCodeStyleManagerImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.NullableNotNullManager"
                    serviceImplementation="com.intellij.codeInsight.NullableNotNullManagerImpl"/>
    <projectService serviceInterface="com.intellij.codeInsight.ExternalAnnotationsManager"
                    serviceImplementation="com.intellij.codeInsight.ExternalAnnotationsManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.roots.CompilerProjectExtension"
                    serviceImplementation="com.intellij.openapi.roots.impl.CompilerProjectExtensionImpl"/>

    <renameHandler implementation="com.intellij.ide.projectView.impl.RenameModuleHandler"/>
    <renameHandler implementation="com.intellij.refactoring.rename.RenameModuleAndDirectoryHandler"/>
    <renameHandler implementation="com.intellij.openapi.roots.impl.libraries.RenameLibraryHandler"/>
    <packaging.sourceItemProvider
        implementation="com.intellij.openapi.roots.ui.configuration.artifacts.sourceItems.ModulesAndLibrariesSourceItemsProvider"/>
    <packaging.sourceItemProvider
        implementation="com.intellij.openapi.roots.ui.configuration.artifacts.sourceItems.ArtifactsSourceItemsProvider"/>
    <packaging.artifactType implementation="com.intellij.packaging.impl.artifacts.JarArtifactType" order="first"/>
    <packaging.artifactType implementation="com.intellij.packaging.impl.artifacts.PlainArtifactType" order="last"/>
    <compiler.buildTargetScopeProvider implementation="com.intellij.packaging.impl.compiler.ArtifactBuildTargetScopeProvider"/>

    <projectTaskRunner implementation="com.intellij.task.impl.JpsProjectTaskRunner" id="jps" order="last"/>

    <applicationService serviceInterface="com.intellij.util.descriptors.ConfigFileFactory"
                        serviceImplementation="com.intellij.util.descriptors.impl.ConfigFileFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.configuration.DefaultModuleConfigurationEditorFactory"
                        serviceImplementation="com.intellij.openapi.roots.ui.configuration.DefaultModuleConfigurationEditorFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ide.util.projectWizard.ProjectWizardStepFactory"
                        serviceImplementation="com.intellij.ide.util.projectWizard.ProjectWizardStepFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.deployment.DeploymentUtil"
                        serviceImplementation="com.intellij.openapi.deployment.DeploymentUtilImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibrariesHelper"
                        serviceImplementation="com.intellij.openapi.roots.libraries.LibrariesHelperImpl"/>

    <projectService serviceInterface="com.intellij.facet.impl.ui.FacetEditorsStateManager"
                    serviceImplementation="com.intellij.facet.impl.ui.FacetEditorsStateManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.projectRoots.DefaultJdkConfigurator"
                        serviceImplementation="com.intellij.openapi.projectRoots.impl.DefaultJdkConfiguratorImpl"/>

    <applicationService serviceInterface="com.intellij.facet.ui.FacetEditorsFactory"
                        serviceImplementation="com.intellij.facet.impl.ui.FacetEditorsFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.projectRoots.ProjectJdkTable"
                        serviceImplementation="com.intellij.openapi.projectRoots.impl.JavaAwareProjectJdkTableImpl"
                        overrides="true"/>

    <applicationService serviceInterface="com.intellij.execution.runners.ProcessProxyFactory"
                        serviceImplementation="com.intellij.execution.runners.ProcessProxyFactoryImpl"/>

    <applicationService serviceImplementation="com.intellij.debugger.settings.NodeRendererSettings"/>
    <applicationService serviceImplementation="com.intellij.debugger.settings.ViewsGeneralSettings"/>
    <applicationService serviceImplementation="com.intellij.debugger.settings.DebuggerSettings"/>
    <projectService serviceImplementation="com.intellij.debugger.settings.DebuggerProjectSettings"/>
    <applicationService serviceImplementation="com.intellij.debugger.settings.ThreadsViewSettings"/>
    <applicationService serviceImplementation="com.intellij.debugger.settings.TraceSettings"/>
    <projectService serviceInterface="com.intellij.debugger.ui.HotSwapUI" serviceImplementation="com.intellij.debugger.ui.HotSwapUIImpl"/>
    <projectService serviceInterface="com.intellij.debugger.DebuggerManager" serviceImplementation="com.intellij.debugger.impl.DebuggerManagerImpl"/>

    <statistics.counterUsagesCollector groupId="java.find.usages" version="2"/>
    <statistics.counterUsagesCollector groupId="java.extract.method" version="2"/>
    <statistics.counterUsagesCollector implementationClass="com.intellij.refactoring.extractMethod.newImpl.inplace.InplaceExtractMethodCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.debugger.settings.DebuggerSettingsStatisticsCollector"/>
    <statistics.applicationUsagesCollector implementation="com.intellij.refactoring.JavaRefactoringUsageCollector"/>

    <applicationService serviceInterface="com.intellij.packaging.elements.PackagingElementFactory"
                        serviceImplementation="com.intellij.packaging.impl.elements.PackagingElementFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.OrderEntryAppearanceService"
                        serviceImplementation="com.intellij.openapi.roots.ui.OrderEntryAppearanceServiceImpl"/>

    <projectService serviceInterface="com.intellij.packaging.artifacts.ArtifactPointerManager"
                    serviceImplementation="com.intellij.packaging.impl.artifacts.ArtifactPointerManagerImpl"/>
    <projectService serviceInterface="com.intellij.packaging.impl.artifacts.ArtifactBySourceFileFinder"
                    serviceImplementation="com.intellij.packaging.impl.artifacts.ArtifactBySourceFileFinderImpl"/>

    <projectService serviceInterface="com.intellij.openapi.compiler.CompilerManager"
                    serviceImplementation="com.intellij.compiler.CompilerManagerImpl"/>
    <projectService serviceImplementation="com.intellij.compiler.options.ValidationConfiguration"/>
    <projectService serviceImplementation="com.intellij.compiler.options.ValidationConfiguration$ExcludedFromValidationConfiguration"/>
    <projectService serviceInterface="com.intellij.compiler.CompilerEncodingService"
                    serviceImplementation="com.intellij.compiler.impl.CompilerEncodingServiceImpl"/>

    <projectService serviceImplementation="com.intellij.packaging.impl.compiler.ArtifactsWorkspaceSettings"/>

    <projectService serviceImplementation="com.intellij.compiler.CompilerWorkspaceConfiguration"/>
    <projectService serviceImplementation="com.intellij.compiler.CompilerConfigurationSettings" configurationSchemaKey="compiler"/>
    <projectService
      serviceInterface="com.intellij.build.BuildWorkspaceConfiguration"
      serviceImplementation="com.intellij.compiler.CompilerWorkspaceConfiguration$JavaBuildWorkspaceConfiguration"
      overrides="true"/>
    <statistics.projectUsagesCollector implementation="com.intellij.compiler.CompilerSettingsCollector"/>
    <statistics.projectUsagesCollector implementation="com.intellij.pom.java.JavaLanguageVersionsCollector"/>

    <changesGroupingPolicy key="module" id="module"
                           implementationClass="com.intellij.openapi.vcs.changes.ui.ModuleChangesGroupingPolicy$Factory"/>
    <vcs.changeListDecorator implementation="com.intellij.execution.testDiscovery.AffectedTestsInChangeListPainter"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.impl.VcsPathPresenter"
                    serviceImplementation="com.intellij.openapi.vcs.impl.ModuleVcsPathPresenter"
                    overrides="true"/>

    <projectService serviceImplementation="com.intellij.compiler.impl.javaCompiler.javac.JavacConfiguration"/>
    <projectService serviceImplementation="com.intellij.compiler.impl.javaCompiler.eclipse.EclipseCompilerConfiguration"/>
    <projectService serviceImplementation="com.intellij.compiler.impl.rmiCompiler.RmicConfiguration"/>
    <pathMacroFilter implementation="com.intellij.compiler.impl.javaCompiler.javac.JavacConfigurationMacroFilter"/>
    <pathMacroFilter implementation="com.intellij.compiler.impl.KotlinCompilerArgumentsMacroFilter"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.configuration.libraries.LibraryPresentationManager"
                        serviceImplementation="com.intellij.openapi.roots.ui.configuration.libraries.impl.LibraryPresentationManagerImpl"/>

    <daemon.highlightInfoFilter implementation="com.intellij.debugger.engine.evaluation.DebuggerHighlightFilter"/>

    <!-- Compiler -->
    <projectConfigurable groupId="build" groupWeight="130" instance="com.intellij.compiler.options.CompilerConfigurable"
                         id="project.propCompiler" order="after project"
                         key="compiler.configurable.display.name" bundle="messages.JavaCompilerBundle"
                         childrenEPName="com.intellij.compilerSettingsFactory">
      <configurable instance="com.intellij.openapi.compiler.options.ExcludedEntriesConfigurable"
                    id="reference.projectsettings.compiler.excludes"
                    key="reference.projectsettings.compiler.excludes"
                    bundle="messages.JavaCompilerBundle"/>
      <configurable instance="com.intellij.compiler.options.JavaCompilersTab" id="reference.projectsettings.compiler.javacompiler"
                    key="java.compiler.description" bundle="messages.JavaCompilerBundle"/>
      <configurable instance="com.intellij.compiler.options.AnnotationProcessorsConfigurable"
                    id="reference.projectsettings.compiler.annotationProcessors"
                    key="reference.projectsettings.compiler.annotationProcessors"
                    bundle="messages.JavaCompilerBundle"/>
      <configurable instance="com.intellij.compiler.options.ValidationConfigurable" id="project.validation" key="validation.display.name"
                    bundle="messages.JavaCompilerBundle"/>
      <configurable instance="com.intellij.compiler.options.RmicConfigurable" id="reference.projectsettings.compiler.rmicompiler"
                    key="rmi.compiler.description" bundle="messages.JavaCompilerBundle"/>
    </projectConfigurable>

    <editorNotificationProvider implementation="com.intellij.codeInsight.daemon.impl.AttachSourcesNotificationProvider"/>
    <editorNotificationProvider implementation="com.intellij.codeInsight.daemon.impl.LibrarySourceNotificationProvider"/>

    <projectSdkSetupValidator id="javaSdk" implementation="com.intellij.codeInsight.daemon.impl.JavaProjectSdkSetupValidator"/>
    <editorNotificationProvider implementation="com.intellij.debugger.ui.AlternativeSourceNotificationProvider"/>

    <attachSourcesProvider implementation="com.intellij.jarFinder.InternetAttachSourceProvider"/>
    <attachSourcesProvider implementation="com.intellij.jarFinder.IvyAttachSourceProvider"/>

    <!-- new project wizard -->
    <projectImportProvider implementation="com.intellij.ide.util.projectWizard.ModuleImportProvider"/>
    <projectImportProvider implementation="com.intellij.ide.util.projectWizard.ImportFromSourcesProvider"/>

    <projectStructureDetector implementation="com.intellij.ide.util.projectWizard.importSources.DefaultProjectStructureDetector"
                              order="last"/>

    <applicationService serviceImplementation="com.intellij.ide.util.newProjectWizard.SelectTemplateSettings"/>

    <consoleFilterProvider implementation="com.intellij.execution.filters.DefaultConsoleFiltersProvider"/>

    <selectInTarget implementation="com.intellij.ide.impl.ProjectStructureSelectInTarget"/>

    <OrderRootTypeUI key="JAVADOC"
                     implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.JavadocOrderRootTypeUIFactory"/>
    <OrderRootTypeUI key="ANNOTATIONS"
                     implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.AnnotationsOrderRootTypeUIFactory"/>
    <OrderRootTypeUI key="NATIVE"
                     implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.NativeLibraryOrderRootTypeUIFactory"/>
    <OrderRootTypeUI key="CLASSES"
                     implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.ClassesOrderRootTypeUIFactory"/>
    <OrderRootTypeUI key="SOURCES"
                     implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.SourcesOrderRootTypeUIFactory"/>
    <OrderRootTypeUI key="DOCUMENTATION"
                     implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.DocumentationOrderRootTypeUIFactory"/>

    <moduleConfigurationEditorProvider implementation="com.intellij.openapi.roots.ui.configuration.DefaultModuleEditorsProvider"
                                       order="first"/>

    <postStartupActivity implementation="com.intellij.codeInsight.daemon.problems.pass.ProjectProblemFileSelectionListener$MyStartupActivity"/>

    <bundledKeymap file="Visual Studio.xml"/>
    <bundledKeymap file="Eclipse.xml"/>
    <bundledKeymap file="Eclipse (Mac OS X).xml"/>
    <bundledKeymap file="NetBeans 6.5.xml"/>
    <keymapExtension implementation="com.intellij.debugger.actions.DebuggerKeymapExtension"/>

    <moduleExtension implementation="com.intellij.openapi.roots.LanguageLevelModuleExtensionImpl"/>

    <orderRootType implementation="com.intellij.openapi.roots.NativeLibraryOrderRootType"/>

    <codeUsageScopeOptimizer implementation="com.intellij.compiler.JavaCompilerReferencesCodeUsageScopeOptimizer"/>


    <stepsBeforeRunProvider implementation="com.intellij.compiler.options.CompileStepBeforeRun" id="compileBeforeRun"/>
    <stepsBeforeRunProvider implementation="com.intellij.compiler.options.MakeProjectStepBeforeRun" id="makeProjectBeforeRun"/>
    <stepsBeforeRunProvider implementation="com.intellij.compiler.options.CompileStepBeforeRunNoErrorCheck"
                            id="compileBeforeRunNoErrorCheck" order="after compileBeforeRun"/>
    <stepsBeforeRunProvider implementation="com.intellij.packaging.impl.run.BuildArtifactsBeforeRunTaskProvider"
                            order="after compileBeforeRunNoErrorCheck"/>
    <externalSystem.beforeRunTaskImporter implementation="com.intellij.compiler.options.CompileStepBeforeRunImporter"/>
    <externalSystemConfigurationHandler
        implementation="com.intellij.openapi.externalSystem.service.project.settings.CompilerConfigurationHandler"/>
    <externalSystem.beforeRunTaskImporter implementation="com.intellij.openapi.externalSystem.service.project.settings.BuildArtifactsTaskImporter"/>
    <externalSystemConfigurationHandler implementation="com.intellij.openapi.externalSystem.service.project.settings.ArtifactsImporter"/>
    <externalSystem.moduleDataServiceExtension implementation="com.intellij.openapi.externalSystem.service.project.ModuleDataServiceJavaExtension"/>
    <externalSystem.runConfigurationExtension implementation="com.intellij.execution.ExternalSystemRunConfigurationJavaExtension"/>
    <applicationService serviceInterface="com.intellij.openapi.externalSystem.service.execution.ExternalSystemJdkProvider"
                        serviceImplementation="com.intellij.openapi.externalSystem.service.execution.ExternalSystemJavaSdkProvider"
                        overrides="true"/>
    <programRunner implementation="com.intellij.openapi.externalSystem.service.execution.ExternalSystemTaskDebugRunner"/>

    <programRunner id="defaultRunRunner" implementation="com.intellij.execution.impl.DefaultJavaProgramRunner"/>

    <checkinHandlerFactory implementation="com.intellij.compiler.impl.vcs.UnloadedModulesCompilationCheckinHandler$Factory"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ModifiableModelsProvider"
                        serviceImplementation="com.intellij.openapi.roots.IdeaModifiableModelsProvider"
                        overrides="true"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureProblemsSettings"
                    serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureProblemsSettingsImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureProblemsSettings"
                        serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.GlobalProjectStructureProblemsSettings"/>

    <projectStructure.sourceRootEditHandler implementation="com.intellij.openapi.roots.ui.configuration.JavaResourceRootEditHandler"/>
    <projectStructure.sourceRootEditHandler implementation="com.intellij.openapi.roots.ui.configuration.JavaTestResourceRootEditHandler"/>

    <buildProcess.parametersProvider implementation="com.intellij.compiler.CompilerReferenceIndexBuildParametersProvider"/>
    <editorActionHandler action="EditorChooseLookupItemReplace"
                         implementationClass="com.intellij.codeInsight.hint.NextParameterAfterCompletionHandler"/>
    <compiler.updateResourcesBuildContributor implementation="com.intellij.compiler.impl.JavaResourcesBuildContributor"/>

    <!--<expectedTypesProvider implementation="com.intellij.codeInsight.JavaExpectedTypesProvider"/>-->

    <editorNotificationProvider implementation="com.intellij.execution.jshell.SnippetEditorDecorator"/>

    <applicationService serviceInterface="com.intellij.debugger.engine.DebuggerUtils"
                        serviceImplementation="com.intellij.debugger.impl.DebuggerUtilsImpl"/>

    <projectService serviceImplementation="com.intellij.execution.testDiscovery.JavaAutoRunManager"/>

    <applicationService serviceInterface="com.intellij.framework.library.DownloadableLibraryService"
                        serviceImplementation="com.intellij.framework.library.impl.DownloadableLibraryServiceImpl"/>

    <localInspection groupPath="Java" language="JAVA" shortName="FrequentlyUsedInheritorInspection"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.inheritance.issues" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.compiler.inspection.FrequentlyUsedInheritorInspection"
                     key="inspection.frequently.used.inheritor.inspection.display.name" bundle="messages.JavaBundle"/>

    <codeInsight.linkHandler prefix="#javaClass/" handlerClass="com.intellij.codeInsight.daemon.impl.JavaClassTooltipLinkHandler"/>

    <lang.psiStructureViewFactory language="JAVA" implementationClass="com.intellij.lang.java.JavaStructureViewBuilderFactory"/>

    <lang.smartEnterProcessor language="JSPX" implementationClass="com.intellij.codeInsight.completion.XmlSmartEnterProcessor"/>

    <iconProvider implementation="com.intellij.execution.testframework.TestIconProvider" id="testIcons"/>
    <stacktrace.fold.line.modifier implementation="com.intellij.execution.JavaModuleNameStacktraceModifier"/>
    <stacktrace.fold substring="at java.awt.EventDispatchThread"/>
    <stacktrace.fold substring="at java.awt.Window.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.awt.Container.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.awt.LightweightDispatcher."/>
    <stacktrace.fold substring="at java.awt.Component.dispatchEvent("/>
    <stacktrace.fold substring="at java.awt.event.InvocationEvent.dispatch("/>
    <stacktrace.fold substring="at java.awt.EventQueue"/>
    <stacktrace.fold substring="at java.awt.Component.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.awt.Container.processEvent("/>
    <stacktrace.fold substring="at javax.swing.JComponent.processMouseEvent("/>
    <stacktrace.fold substring="at javax.swing.plaf.basic.BasicMenuItemUI"/>
    <stacktrace.fold substring="at java.awt.Component.processMouseEvent("/>
    <stacktrace.fold substring="at javax.swing.AbstractButton.doClick("/>
    <stacktrace.fold substring="at java.awt.Component.processEvent("/>
    <stacktrace.fold substring="at java.awt.Container.dispatchEventImpl("/>
    <stacktrace.fold substring="at javax.swing.DefaultButtonModel.fireActionPerformed("/>
    <stacktrace.fold substring="at javax.swing.DefaultButtonModel.setPressed("/>
    <stacktrace.fold substring="at javax.swing.AbstractButton.fireActionPerformed("/>
    <stacktrace.fold substring="at javax.swing.AbstractButton$Handler.actionPerformed("/>
    <stacktrace.fold substring="at java.security.AccessControlContext$1.doIntersectionPrivilege("/>
    <stacktrace.fold substring="at java.awt.EventQueue.dispatchEventImpl("/>
    <stacktrace.fold substring="at java.security.AccessController.doPrivileged(Native Method)"/>
    <stacktrace.fold substring="at java.security.ProtectionDomain$1.doIntersectionPrivilege("/>
    <stacktrace.fold substring="at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege("/>
    <stacktrace.fold substring="at com.jgoodies.binding.beans.ExtendedPropertyChangeSupport.firePropertyChange0("/>
    <stacktrace.fold substring="at javax.swing.plaf.basic.BasicComboPopup$Handler.mouseReleased("/>

    <stacktrace.fold substring="at java.util.stream.ReferencePipeline$"/>
    <stacktrace.fold substring="at java.util.Spliterators$"/>
    <stacktrace.fold substring="at java.util.stream.AbstractPipeline.evaluate("/>
    <stacktrace.fold substring="at java.util.stream.AbstractPipeline.copyInto("/>
    <stacktrace.fold substring="at java.util.stream.AbstractPipeline.wrapAndCopyInto("/>
    <stacktrace.fold substring="at java.util.stream.ReduceOps$"/>

    <stacktrace.fold substring="at java.util.concurrent.Executors$"/>
    <stacktrace.fold substring="at java.util.concurrent.ThreadPoolExecutor"/> <!-- methods and inner classes -->
    <stacktrace.fold substring="at java.util.concurrent.FutureTask."/>
    <stacktrace.fold substring="at java.util.concurrent.CompletableFuture$AsyncSupply.run("/>

    <stacktrace.fold substring="java.lang.Thread.run("/>

    <stacktrace.fold substring="java.lang.reflect.Method.invoke("/>
    <stacktrace.fold substring="java.lang.reflect.Constructor.newInstance("/>
    <stacktrace.fold substring="at java.base/jdk.internal"/>
    <stacktrace.fold substring="at java.security.AccessController.doPrivileged("/>
    <stacktrace.fold substring="at sun.reflect."/>
    <stacktrace.fold substring="at java.rmi."/>
    <stacktrace.fold substring="at sun.rmi."/>
    <stacktrace.fold substring="at com.sun.proxy.$Proxy"/>
    <stacktrace.fold substring="at com.intellij.rt.execution."/>

    <debuggerEditorTextProvider language="JAVA" implementationClass="com.intellij.debugger.impl.JavaEditorTextProviderImpl"/>


    <structureViewBuilder key="CLASS" factoryClass="com.intellij.ide.highlighter.JavaClsStructureViewBuilderProvider"/>

    <patterns.patternClass className="com.intellij.patterns.PsiJavaPatterns" alias="java"/>

    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.UsageFavoriteNodeProvider"/>

    <configurationType implementation="com.intellij.execution.application.ApplicationConfigurationType"/>
    <configurationType implementation="com.intellij.execution.jar.JarApplicationConfigurationType"/>
    <configurationType implementation="com.intellij.execution.scratch.JavaScratchConfigurationType"/>
    <runConfigurationProducer implementation="com.intellij.execution.jar.JarApplicationConfigurationProducer"/>
    <runConfigurationProducer implementation="com.intellij.execution.application.ApplicationConfigurationProducer"/>
    <runConfigurationProducer implementation="com.intellij.execution.scratch.JavaScratchConfigurationProducer"/>
    <configurationType implementation="com.intellij.execution.remote.RemoteConfigurationType"/>

    <executionTargetLanguageRuntimeType implementation="com.intellij.execution.target.java.JavaLanguageRuntimeType" />
    <applicationService serviceInterface="com.intellij.execution.target.java.JavaLanguageRuntimeUIFactory"
                        serviceImplementation="com.intellij.execution.target.java.JavaLanguageRuntimeUIFactoryImpl"/>

    <externalSystem.runConfigurationImporter implementation="com.intellij.execution.application.JavaApplicationRunConfigurationImporter"/>
    <externalSystem.runConfigurationImporter implementation="com.intellij.execution.remote.JavaRemoteDebugRunConfigurationImporter"/>
    <externalSystem.modifiableModelsProvider implementation="com.intellij.openapi.externalSystem.service.project.PackagingModifiableModelProvider"/>
    <externalSystem.runConfigurationImporter implementation="com.intellij.execution.jar.JarApplicationRunConfigurationImporter" />
    <configuration.ModuleStructureExtension
        implementation="com.intellij.openapi.externalSystem.service.project.ExternalModuleStructureExtension"/>

    <runLineMarkerContributor language="JVM"
                              order="before applicationRunLineMarkerProvider"
                              implementationClass="com.intellij.execution.application.JvmApplicationRunLineMarkerContributor"/>
    <runLineMarkerContributor language="JAVA" id="applicationRunLineMarkerProvider"
                              implementationClass="com.intellij.execution.application.ApplicationRunLineMarkerProvider"/>

    <runDashboardCustomizer implementation="com.intellij.execution.CommonJavaRunDashboardCustomizer" id="commonJavaCustomizer"/>

    <javaExpressionSurrounder implementation="com.intellij.debugger.codeinsight.JavaWithRuntimeCastSurrounder"/>

    <exceptionFilter implementation="com.intellij.execution.filters.ExceptionBaseFilterFactory"/>
    <exceptionFilter implementation="com.intellij.execution.filters.ExceptionExFilterFactory"/>

    <internalFileTemplate name="Class"/>
    <internalFileTemplate name="Interface"/>
    <internalFileTemplate name="Enum"/>
    <internalFileTemplate name="Record"/>
    <internalFileTemplate name="AnnotationType" subject="@interface"/>
    <internalFileTemplate name="package-info"/>
    <internalFileTemplate name="module-info"/>

    <elementLookupRenderer implementation="com.intellij.codeInsight.lookup.impl.JavaElementLookupRenderer"/>

    <projectViewPane implementation="com.intellij.ide.projectView.impl.PackageViewPane"/>

    <resolveScopeEnlarger implementation="com.intellij.ide.scratch.ScratchResolveScopeEnlarger"/>

    <xdebugger.debuggerSupport implementation="com.intellij.debugger.ui.JavaDebuggerSupport"/>
    <xdebugger.settings implementation="com.intellij.debugger.settings.JavaDebuggerSettings"/>

    <projectConfigurable parentId="project.propDebugger" instance="com.intellij.debugger.settings.CaptureConfigurable"/>

    <xdebugger.localAttachDebuggerProvider implementation="com.intellij.debugger.impl.attach.JavaAttachDebuggerProvider"/>
    <xdebugger.localAttachDebuggerProvider implementation="com.intellij.debugger.impl.attach.JavaSAAttachDebuggerProvider"/>

    <consoleFilterProvider implementation="com.intellij.debugger.impl.attach.JavaDebuggerConsoleFilterProvider"/>
    <jvm.exceptionFilter implementation="com.intellij.debugger.impl.attach.JavaDebuggerAddExceptionBreakpointFilter"/>
    <jvm.exceptionFilter implementation="com.intellij.execution.filters.NavigateToExceptionClassFilter"/>

    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaMethodBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaWildcardMethodBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaFieldBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaExceptionBreakpointType"/>
    <xdebugger.breakpointType implementation="com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType"/>
    <debugger.jvmSmartStepIntoHandler implementation="com.intellij.debugger.actions.JavaSmartStepIntoHandler" order="last"/>
    <debugger.simplePropertyGetterProvider implementation="com.intellij.debugger.engine.JavaSimpleGetterProvider"/>
    <debugger.syntheticProvider implementation="com.intellij.debugger.engine.DefaultSyntheticProvider"/>
    <debugger.sourcePositionProvider implementation="com.intellij.debugger.engine.DefaultSourcePositionProvider" order="last"/>
    <debugger.sourcePositionHighlighter implementation="com.intellij.debugger.engine.JavaSourcePositionHighlighter"/>
    <java.elementFinder implementation="com.intellij.debugger.impl.AlternativeJreClassFinder" order="last"/>
    <additionalLibraryRootsProvider implementation="com.intellij.execution.AlternativeSdkRootsProvider"/>
    <jdkUpdateCheckContributor implementation="com.intellij.execution.AlternativeSdkRootsProviderForJdkUpdate"/>
    <registryKey key="java.refactoring.extractMethod.newImplementation"
                 defaultValue="true"
                 description="Enable experimental extract method implementation"/>
    <registryKey key="java.refactoring.extractMethod.inplace"
                 defaultValue="true"
                 description="Enable experimental extract method inplace mode"/>
    <debugger.asyncStackTraceProvider
        implementation="com.intellij.debugger.ui.breakpoints.StackCapturingLineBreakpoint$CaptureAsyncStackTraceProvider"/>

    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$BooleanRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$ByteRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$CharacterRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$ShortRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$IntegerRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$LongRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$FloatRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.UnboxableTypeRenderer$DoubleRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.ColorObjectRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.IconObjectRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.GraphicsObjectRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.BinaryRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.TimestampRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.ByteArrayAsStringRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.FileObjectRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.StackTraceElementObjectRenderer"/>
    <debugger.compoundRendererProvider implementation="com.intellij.debugger.ui.tree.render.ClassObjectRenderer"/>

    <debugger.nodeNameAdjuster implementation="com.intellij.debugger.ui.impl.watch.FieldOuterLocalNameAdjuster"/>

    <programRunner implementation="com.intellij.debugger.impl.attach.JavaAttachDebuggerProvider$ProcessAttachDebuggerRunner" order="last"/>
    <programRunner implementation="com.intellij.execution.jar.JarApplicationDebuggerRunner"/>

    <iconLayerProvider implementation="com.intellij.compiler.CompilerIconLayerProvider"/>
    <fileIconPatcher implementation="com.intellij.ide.JavaExcludedFileIconPatcher" order="after javaFileIconPatcher"/>
    <editorTabTitleProvider implementation="com.intellij.ui.JavaEditorTabTitleProvider"/>
    <directoryIndexExcludePolicy implementation="com.intellij.openapi.roots.impl.ExcludeCompilerOutputPolicy"/>
    <problemFileHighlightFilter implementation="com.intellij.codeInsight.problems.DefaultProblemFileHighlightFilter"/>
    <macro implementation="com.intellij.ide.macro.OutputPathMacro"/>

    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.ProjectStructureConfigurable"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ui.configuration.ProjectSettingsService"
                    serviceImplementation="com.intellij.openapi.roots.ui.configuration.IdeaProjectSettingsService"
                    overrides="true"/>

    <projectWizard.projectCategory implementation="com.intellij.ide.projectWizard.ModuleTypeCategory$JavaSE"/>

    <projectStructureDetector implementation="com.intellij.ide.util.projectWizard.importSources.impl.JavaProjectStructureDetector"
                              order="first"/>

    <runConfigurationExtension implementation="com.intellij.execution.testDiscovery.TestDiscoveryExtension"/>

    <completion.contributor language="JAVA" id="methodsChainsCompletionContributor" order="first"
                            implementationClass="com.intellij.compiler.chainsSearch.completion.MethodChainCompletionContributor"/>
    <weigher order="after mostUsed" key="completion" id="methodChains"
             implementationClass="com.intellij.compiler.chainsSearch.completion.MethodChainWeigher"/>

    <projectTemplate projectType="JAVA_MODULE" templatePath="resources/projectTemplates/Java/Command_Line_App.zip"/>

    <codeInsight.linkHandler prefix="#assignment/"
                             handlerClass="com.intellij.codeInsight.intention.impl.config.AssignmentTooltipLinkHandler"/>
    <library.javaSourceRootDetector implementation="com.intellij.openapi.roots.ui.configuration.LibraryJavaSourceRootDetector"/>

    <importTestOutput implementation="com.intellij.execution.AntTestContentHandler$AntTestOutputExtension"/>

    <library.type implementation="com.intellij.jarRepository.RepositoryLibraryType"/>
    <postStartupActivity implementation="com.intellij.jarRepository.RepositoryLibrarySynchronizer"/>
    <projectConfigurable groupId="build" groupWeight="120" instance="com.intellij.jarRepository.settings.RemoteRepositoriesConfigurable"
                         order="last"/>

    <scratch.rootType implementation="com.intellij.execution.jshell.JShellRootType"/>
    <scratch.creationHelper language="JAVA" implementationClass="com.intellij.ide.actions.JavaScratchFileCreationHelper"/>

    <intentionAction>
      <className>com.intellij.testIntegration.createTest.GenerateMissedTestsAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.testIntegration.createTest.CreateTestAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <applicationService serviceInterface="com.intellij.profile.codeInspection.InspectionProfileManager"
                        serviceImplementation="com.intellij.profile.codeInspection.JavaAwareInspectionProfileManager"
                        overrides="true"/>
    <applicationService serviceInterface="com.intellij.psi.impl.source.codeStyle.IndentHelper"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.JavaIndentHelper"
                        overrides="true"/>
    <projectService serviceInterface="com.intellij.ide.projectView.impl.nodes.ProjectViewDirectoryHelper"
                    serviceImplementation="com.intellij.ide.projectView.impl.JavaProjectViewDirectoryHelper"
                    overrides="true"/>
    <projectService serviceInterface="com.intellij.usages.impl.rules.DirectoryGroupingRule"
                    serviceImplementation="com.intellij.usages.impl.rules.PackageGroupingRule"
                    overrides="true"/>
    <projectService serviceInterface="com.intellij.psi.impl.file.PsiDirectoryFactory"
                    serviceImplementation="com.intellij.psi.impl.file.PsiJavaDirectoryFactory"
                    overrides="true"/>
    <projectService serviceInterface="com.intellij.refactoring.RefactoringFactory"
                    serviceImplementation="com.intellij.refactoring.openapi.impl.JavaRefactoringFactoryImpl"
                    overrides="true"/>
    <projectService serviceInterface="com.intellij.ide.todo.nodes.TodoTreeHelper"
                    serviceImplementation="com.intellij.ide.todo.nodes.TodoJavaTreeHelper"
                    overrides="true"/>

    <programRunner id="defaultDebugRunner" implementation="com.intellij.debugger.impl.GenericDebuggerRunner" order="last"/>


    <javaModuleSystem implementation="com.intellij.psi.impl.JavaPlatformModuleSystem"/>
    <java.error.fix errorCode="lambda.variable.must.be.final" implementationClass="com.intellij.codeInspection.streamMigration.SimplifyForEachInspection$ForEachNonFinalFix"/>
    <lang.jvm.actions.jvmElementActionsFactory implementation="com.intellij.codeInsight.intention.impl.JavaElementActionsFactory"/>
    <longLineInspectionPolicy implementation="com.intellij.codeInspection.JavaLongLineInspectionPolicy"/>
    <library.dependencyScopeSuggester implementation="com.intellij.jarRepository.RepositoryLibraryDependencyScopeSuggester"/>
    <diff.lang.DiffIgnoredRangeProvider implementation="com.intellij.diff.lang.JavaDiffIgnoredRangeProvider"/>
    <java.refactoring.chainCallExtractor implementation="com.intellij.refactoring.chainCall.OptionalChainCallExtractor"/>
    <java.refactoring.chainCallExtractor implementation="com.intellij.refactoring.chainCall.GuavaFluentIterableChainCallExtractor"/>
    <java.refactoring.chainCallExtractor implementation="com.intellij.refactoring.chainCall.CompletionStageChainCallExtractor"/>
    <java.refactoring.chainCallExtractor implementation="com.intellij.refactoring.chainCall.CollectionChainCallExtractor"/>
    <java.refactoring.chainCallExtractor implementation="com.intellij.refactoring.chainCall.StreamChainCallExtractor"/>
    <java.inspection.bulkMethodInfo implementation="com.intellij.codeInspection.bulkOperation.JdkBulkMethodInfoProvider"/>
    <java.externalAnnotation implementation="com.intellij.codeInsight.externalAnnotation.DeprecationAnnotationProvider"/>
    <java.externalAnnotation implementation="com.intellij.codeInsight.externalAnnotation.NonNlsAnnotationProvider"/>
    <java.externalAnnotation implementation="com.intellij.codeInsight.externalAnnotation.NotNullAnnotationProvider"/>
    <java.externalAnnotation implementation="com.intellij.codeInsight.externalAnnotation.NullableAnnotationProvider"/>
    <java.externalAnnotation implementation="com.intellij.codeInsight.externalAnnotation.UnmodifiableAnnotationProvider"/>
    <java.externalAnnotation implementation="com.intellij.codeInsight.externalAnnotation.UnmodifiableViewAnnotationProvider"/>
    <java.externalAnnotation implementation="com.intellij.codeInsight.externalAnnotation.BlockingMethodAnnotationProvider"/>
    <java.externalAnnotation implementation="com.intellij.codeInsight.externalAnnotation.NonblockingMethodAnnotationProvider"/>
    <refactoring.pushDown language="JAVA" implementationClass="com.intellij.refactoring.memberPushDown.JavaPushDownDelegate" id="java"/>
    <refactoring.introduceParameterObject language="JAVA" implementationClass="com.intellij.refactoring.introduceparameterobject.JavaIntroduceParameterObjectDelegate"/>
    <refactoring.invertBoolean implementation="com.intellij.refactoring.invertBoolean.JavaInvertBooleanDelegate"/>
    <refactoring.moveInnerClassUsagesHandler language="JAVA" implementationClass="com.intellij.refactoring.move.moveInner.MoveInnerClassJavaUsagesHandler" id="java"/>
    <refactoring.elementListenerProvider implementation="com.intellij.codeInsight.ExternalAnnotationsRefactoringListenerProvider"/>
    <nonProjectFileWritingAccessExtension implementation="com.intellij.codeInsight.ExternalAnnotationsNonProjectFileWritingAccessExtension"/>
    <codeInsight.template.postfixTemplateProvider language="JAVA" implementationClass="com.intellij.codeInsight.template.postfix.templates.JavaPostfixTemplateProvider"/>
    <codeInsight.folding.collapseBlockHandler language="JAVA" implementationClass="com.intellij.codeInsight.folding.impl.JavaCollapseBlockHandler"/>
    <spellchecker.support language="JAVA" implementationClass="com.intellij.spellchecker.JavaSpellcheckingStrategy"/>
    <refactoring.elementListenerProvider implementation="com.intellij.codeInspection.ex.AdditionalAnnotationsRefactoringElementListener"/>
    <outOfSourcesChecker implementation="com.intellij.openapi.projectRoots.JavaOutOfSourcesChecker"/>
    <hierarchy.referenceProcessor implementation="com.intellij.ide.hierarchy.call.JavaCallReferenceProcessor"/>
    <refactoring.pullUpHelperFactory language="JAVA" implementationClass="com.intellij.refactoring.memberPullUp.JavaPullUpHelperFactory"/>
    <codeInsight.externalLibraryResolver implementation="com.intellij.codeInspection.concurrencyAnnotations.JCiPExternalLibraryResolver"/>
    <codeInsight.externalLibraryResolver implementation="com.intellij.codeInsight.daemon.impl.quickfix.JetBrainsAnnotationsExternalLibraryResolver"/>
    <codeInsight.unresolvedReferenceQuickFixProvider implementation="com.intellij.jarFinder.FindJarQuickFixProvider"/>
    <generation.toStringClassFilter implementation="org.jetbrains.generate.tostring.GenerateToStringInterfaceFilter" order="last"/>
    <gotoDeclarationHandler implementation="com.intellij.codeInsight.navigation.actions.GotoVarTypeHandler"/>
    <annotator language="SPI" implementationClass="com.intellij.spi.SPIAnnotator"/>
    <lang.commenter language="SPI" implementationClass="com.intellij.spi.SPICommenter"/>
    <lang.parserDefinition language="SPI" implementationClass="com.intellij.spi.parsing.SPIParserDefinition"/>
    <fileType name="SPI" implementationClass="com.intellij.spi.SPIFileType" fieldName="INSTANCE" language="SPI"/>
    <writingAccessProvider implementation="com.intellij.refactoring.util.ClsElementWritingAccessProvider"/>
    <psi.referenceContributor language="JAVA" implementation="com.intellij.psi.impl.source.resolve.reference.impl.JavaReflectionReferenceContributor"/>
    <implicitUsageProvider implementation="com.intellij.psi.impl.source.resolve.reference.impl.AtomicReferenceImplicitUsageProvider"/>
    <projectTemplateParameterFactory implementation="com.intellij.openapi.module.BasePackageParameterFactory"/>
    <projectTemplateParameterFactory implementation="com.intellij.openapi.module.LanguageLevelParameterFactory"/>
    <java.elementFinder implementation="com.intellij.psi.impl.migration.MigrationElementFinder"/>
    <java.elementFinder implementation="com.intellij.psi.impl.PackagePrefixElementFinder"/>
    <treeCopyHandler implementation="com.intellij.psi.impl.source.tree.JavaTreeCopyHandler"/>
    <lang.treePatcher language="JAVA" implementationClass="com.intellij.psi.templateLanguages.MiddleTreePatcher"/>
    <generation.topLevelFactory language="JAVA" implementationClass="com.intellij.psi.impl.JavaFactoryProvider"/>
    <dom.uiControlsProvider implementation="com.intellij.util.xml.impl.JavaDomUiControlProvider"/>
    <dom.converter interfaceClass="com.intellij.util.xml.JvmPsiTypeConverter"
                   implementationClass="com.intellij.util.xml.JvmPsiTypeConverterImpl"/>
    <dom.converter interfaceClass="com.intellij.util.xml.CanonicalPsiTypeConverter"
                   implementationClass="com.intellij.util.xml.CanonicalPsiTypeConverterImpl"/>
    <dom.converter interfaceClass="com.intellij.util.xml.converters.values.ClassValueConverter"
                   implementationClass="com.intellij.util.xml.converters.ClassValueConverterImpl"/>
    <dom.converter interfaceClass="com.intellij.util.xml.converters.values.ClassArrayConverter"
                   implementationClass="com.intellij.util.xml.converters.ClassArrayConverterImpl"/>

    <resolveScopeEnlarger implementation="com.intellij.psi.NonClasspathResolveScopeEnlarger"/>
    <psiViewerExtension implementation="com.intellij.internal.psiView.PsiViewerExpressionExtension"/>
    <psiViewerExtension implementation="com.intellij.internal.psiView.PsiViewerCodeFragmentExtension"/>
    <psiViewerExtension implementation="com.intellij.internal.psiView.PsiViewerMethodExtension"/>
    <previewHintProvider implementation="com.intellij.codeInsight.preview.JavaPreviewHintProvider"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineStaticImportHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineConstantFieldHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineLocalHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineMethodHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inlineSuperClass.InlineSuperClassRefactoringHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineToAnonymousClassHandler"/>
    <inlineActionHandler implementation="com.intellij.refactoring.inline.InlineParameterHandler"/>
    <generateAccessorProvider implementation="com.intellij.codeInsight.generation.JavaGenerateAccessorProvider"/>
    <suggestedRefactoringSupport language="JAVA" implementationClass="com.intellij.java.refactoring.suggested.JavaSuggestedRefactoringSupport"/>
    <highlightVisitor implementation="com.intellij.codeInsight.daemon.JavaRainbowVisitor"/>
    <problemHighlightFilter implementation="com.intellij.codeInsight.daemon.JavaProblemHighlightFilter"/>
    <todoIndexer filetype="JAVA" implementationClass="com.intellij.psi.impl.cache.impl.idCache.JavaTodoIndexer"/>
    <idIndexer filetype="JAVA" implementationClass="com.intellij.psi.impl.cache.impl.idCache.JavaIdIndexer"/>
    <fileIconPatcher id="javaFileIconPatcher" implementation="com.intellij.ide.JavaFileIconPatcher"/>
    <basicWordSelectionFilter implementation="com.intellij.codeInsight.editorActions.wordSelection.JavaBasicWordSelectionFilter"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.JavaWordSelectioner"/>
    <templateCompletionProcessor implementation="com.intellij.codeInsight.template.macro.JavaTemplateCompletionProcessor"/>
    <optionsApplicabilityFilter implementation="com.intellij.application.options.JavaOptionsApplicabilityFilter"/>
    <typeHierarchyProvider language="JAVA" implementationClass="com.intellij.ide.hierarchy.type.JavaTypeHierarchyProvider"/>
    <methodHierarchyProvider language="JAVA" implementationClass="com.intellij.ide.hierarchy.method.JavaMethodHierarchyProvider"/>
    <callHierarchyProvider language="JAVA" implementationClass="com.intellij.ide.hierarchy.call.JavaCallHierarchyProvider"/>
    <runLineMarkerContributor language="JAVA" order="after applicationRunLineMarkerProvider" implementationClass="com.intellij.testIntegration.TestRunLineMarkerProvider"/>
    <testGenerator language="JAVA" implementationClass="com.intellij.testIntegration.createTest.JavaTestGenerator" />
    <testCreator language="JAVA" implementationClass="com.intellij.testIntegration.JavaTestCreator"/>
    <testFinder implementation="com.intellij.testIntegration.JavaTestFinder"/>
    <filePasteProvider implementation="com.intellij.ide.JavaFilePasteProvider" order="before fileList"/>
    <enterHandlerDelegate implementation="com.intellij.javadoc.EnterInJavadocParamDescriptionHandler"/>
    <editorNavigation implementation="com.intellij.javadoc.JavadocNavigationDelegate"/>
    <methodNavigationOffsetProvider implementation="com.intellij.codeInsight.navigation.JavaMethodNavigationOffsetProvider"/>
    <dom.customAnnotationChecker implementation="com.intellij.util.xml.impl.ExtendsClassChecker"/>
    <codeInsight.surroundWithRangeAdjuster implementation="com.intellij.codeInsight.generation.surroundWith.XmlSurroundWithRangeAdjuster"/>
    <liveTemplateSubstitutor implementation="com.intellij.codeInsight.template.impl.JavaTemplateSubstitutor"/>
    <defaultLiveTemplates file="liveTemplates/Java"/>
    <treeStructureProvider implementation="com.intellij.ide.projectView.impl.ClassesTreeStructureProvider" order="last"/>
    <importFilteringRule implementation="com.intellij.usages.impl.rules.ImportFilteringRule"/>
    <usageContextPanelProvider implementation="com.intellij.usageView.UsageContextDataflowFromPanel$Provider"/>
    <usageContextPanelProvider implementation="com.intellij.usageView.UsageContextDataflowToPanel$Provider"/>
    <usageTypeProvider implementation="com.intellij.usages.impl.rules.JavaUsageTypeProvider"/>
    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.JavaClassGroupRuleProvider"/>
    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.JavaMethodGroupRuleProvider"/>
    <fileStructureGroupRuleProvider implementation="com.intellij.usages.impl.rules.NonJavaFileGroupRuleProvider"/>
    <qualifiedNameProvider implementation="com.intellij.ide.actions.JavaQualifiedNameProvider"/>
    <virtualFileQualifiedNameProvider implementation="com.intellij.ide.actions.JavaVirtualFileQualifiedNameProvider"/>
    <referenceImporter implementation="com.intellij.codeInsight.daemon.impl.JavaReferenceImporter"/>
    <elementDescriptionProvider implementation="com.intellij.ide.util.JavaDeleteTypeDescriptionProvider"/>
    <elementDescriptionProvider implementation="com.intellij.usageView.JavaUsageViewDescriptionProvider"/>
    <renameFileActionProvider implementation="com.intellij.refactoring.actions.ClassAwareRenameFileProvider"/>
    <vetoRenameCondition implementation="com.intellij.refactoring.rename.JavaVetoRenameCondition"/>
    <nameSuggestionProvider implementation="com.intellij.refactoring.rename.JavaNameSuggestionProvider" id="java"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticOverloadsRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.ConstructorParameterOnFieldRenameRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticTestRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticInheritorRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticParametersRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticVariableRenamerFactory"/>
    <automaticRenamerFactory implementation="com.intellij.refactoring.rename.naming.AutomaticGetterSetterRenamerFactory"/>
    <renameInputValidator implementation="com.intellij.refactoring.rename.PsiPackageRenameValidator"/>
    <renameInputValidator implementation="com.intellij.refactoring.rename.JavaModuleRenameValidator"/>
    <renameInputValidator implementation="com.intellij.refactoring.rename.JavaTypeRenameValidator"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiPackageProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiDirectoryProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaClassProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaMethodProcessor" id="javamethod"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaVariableProcessor" id="javaVariable"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameJavaModuleProcessor"/>
    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenameAliasingPomTargetProcessor"/>
    <findUsagesHandlerFactory implementation="com.intellij.find.findUsages.JavaFindUsagesHandlerFactory" id="java" order="last, before default"/>
    <updateAddedFileProcessor implementation="com.intellij.psi.impl.file.JavaUpdateAddedFileProcessor"/>
    <rename.inplace.resolveSnapshotProvider language="JAVA" implementationClass="com.intellij.refactoring.rename.inplace.JavaResolveSnapshotProvider"/>
    <renameHandler implementation="com.intellij.refactoring.rename.DirectoryAsPackageRenameHandler"/>
    <renameHandler implementation="com.intellij.refactoring.rename.RenameWrongRefHandler"/>
    <gotoTargetRendererProvider implementation="com.intellij.codeInsight.navigation.JavaGotoTargetRendererProvider"/>
    <typeDeclarationProvider implementation="com.intellij.codeInsight.navigation.actions.JavaTypeDeclarationProvider"/>
    <navbar implementation="com.intellij.ide.navigationToolbar.JavaNavBarExtension"/>
    <gotoDeclarationHandler implementation="com.intellij.codeInsight.navigation.actions.GotoBreakContinueHandler"/>
    <gotoDeclarationHandler implementation="com.intellij.codeInsight.navigation.actions.GotoMethodInAnonymousClassHandler"/>
    <lang.implementationTextSelectioner language="JAVA" implementationClass="com.intellij.codeInsight.hint.JavaImplementationTextSelectioner"/>
    <gotoSymbolContributor implementation="com.intellij.ide.util.gotoByName.JavaModuleNavigationContributor"/>
    <gotoSymbolContributor implementation="com.intellij.ide.util.gotoByName.DefaultSymbolNavigationContributor"/>
    <gotoSymbolContributor implementation="com.intellij.ide.util.gotoByName.DefaultSymbolNavigationContributor$JavadocSeparatorContributor"/>
    <gotoClassContributor implementation="com.intellij.ide.util.gotoByName.DefaultClassNavigationContributor"/>
    <psi.implicitReferenceProvider implementation="com.intellij.codeInsight.JavaImplicitReferenceProvider"/>
    <targetElementEvaluator language="JAVA" implementationClass="com.intellij.codeInsight.JavaTargetElementEvaluator"/>
    <targetElementUtilExtender implementation="com.intellij.codeInsight.JavaTargetElementEvaluator"/>
    <indexPatternBuilder implementation="com.intellij.psi.impl.search.JavaIndexPatternBuilder"/>
    <printOption implementation="com.intellij.codeEditor.printing.HyperlinksToClassesOption"/>
    <macro implementation="com.intellij.ide.macro.JavaDocPathMacro"/>
    <macro implementation="com.intellij.ide.macro.FilePackageMacro"/>
    <macro implementation="com.intellij.ide.macro.FileFQPackage"/>
    <macro implementation="com.intellij.ide.macro.FileClassMacro"/>
    <macro implementation="com.intellij.ide.macro.ClasspathMacro"/>
    <macro implementation="com.intellij.ide.macro.ClasspathEntryMacro"/>
    <scopeParserExtension implementation="com.intellij.psi.search.scope.packageSet.PatternPackageSetParserExtension"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.JavaColorSettingsPage"/>
    <elementDescriptionProvider implementation="com.intellij.refactoring.util.JavaNonCodeSearchElementDescriptionProvider"/>
    <elementDescriptionProvider implementation="com.intellij.refactoring.util.JavaRefactoringElementDescriptionProvider"/>
    <refactoring.helper implementation="com.intellij.refactoring.OptimizeImportsRefactoringHelper"/>
    <refactoring.changeSignatureUsageProcessor implementation="com.intellij.refactoring.changeSignature.JavaChangeSignatureUsageProcessor" id="javaProcessor"/>
    <refactoring.introduceParameterMethodUsagesProcessor implementation="com.intellij.refactoring.introduceParameter.JavaIntroduceParameterMethodUsagesProcessor"/>
    <refactoring.overrideMethodProcessor implementation="com.intellij.refactoring.JavaOverrideMethodsProcessor"/>
    <safeDelete.importSearcher implementation="com.intellij.refactoring.safeDelete.JavaImportSearcher"/>
    <refactoring.safeDelete.JavaSafeDeleteDelegate implementationClass="com.intellij.refactoring.safeDelete.JavaSafeDeleteDelegateImpl" language="JAVA"/>
    <refactoring.safeDeleteProcessor implementation="com.intellij.refactoring.safeDelete.JavaSafeDeleteProcessor" id="javaProcessor"/>
    <refactoring.moveInnerHandler language="JAVA" implementationClass="com.intellij.refactoring.move.moveInner.MoveJavaInnerHandler" id="java"/>
    <refactoring.moveMemberHandler language="JAVA" implementationClass="com.intellij.refactoring.move.moveMembers.MoveJavaMemberHandler" id="java"/>
    <refactoring.moveClassToInnerHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.JavaMoveClassToInnerHandler" id="java"/>
    <refactoring.moveClassHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveJavaClassHandler" id="java"/>
    <refactoring.moveAllClassesInFileHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveJavaClassesInFileHandler" id="java"/>
    <moveFileHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveJavaFileHandler" id="java"/>
    <refactoring.moveDirectoryWithClassesHelper implementation="com.intellij.refactoring.move.moveClassesOrPackages.JavaMoveDirectoryWithClassesHelper"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.anonymousToInner.MoveAnonymousToInnerHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveInner.MoveInnerToUpperOrMembersHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveInner.MoveInnerToUpperHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveInstanceMethod.MoveInstanceMethodHandlerDelegate"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveMembers.MoveMembersHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveFilesOrDirectories.JavaMoveFilesOrDirectoriesHandler" id="moveJavaFileOrDir" order="before moveFileOrDir"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveClassesOrPackages.JavaMoveClassesOrPackagesHandler" order="before moveJavaFileOrDir"/>
    <refactoring.copyHandler implementation="com.intellij.refactoring.copy.CopyClassesHandler" order="before copyFilesOrDirectories"/>
    <saveFileAsTemplateHandler implementation="com.intellij.ide.fileTemplates.SaveJavaAsTemplateHandler"/>
    <exceptionFilter implementation="com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotationExceptionFilterFactory"/>
    <packageDependencies.visitor language="JAVA" implementationClass="com.intellij.packageDependencies.JavaDependencyVisitorFactory"/>
    <pathMacroFilter implementation="com.intellij.execution.configuration.JavaRunConfigurationPathMacroFilter"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiPackageFavoriteNodeProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiMethodFavoriteNodeProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiFieldFavoriteNodeProvider"/>
    <favoriteNodeProvider implementation="com.intellij.ide.favoritesTreeView.PsiClassFavoriteNodeProvider"/>
    <defaultTemplatePropertiesProvider implementation="com.intellij.ide.fileTemplates.TemplatePackagePropertyProvider"/>
    <createFromTemplateHandler implementation="com.intellij.ide.fileTemplates.JavaCreateFromTemplateHandler" id="java"/>
    <createFromTemplateHandler implementation="com.intellij.ide.fileTemplates.JavaInternalTemplatesHandler" order="after java"/>
    <liveTemplateOptionalProcessor implementation="com.intellij.codeInsight.template.impl.ShortenToStaticImportProcessor"/>
    <liveTemplateOptionalProcessor implementation="com.intellij.codeInsight.template.impl.ShortenFQNamesProcessor"/>
    <liveTemplateOptionalProcessor implementation="com.intellij.codeInsight.template.impl.CodeBlockReformattingProcessor"/>
    <scopeDescriptorProvider implementation="com.intellij.ide.util.scopeChooser.HierarchyScopeDescriptorProvider"/>
    <patternDialectProvider implementation="com.intellij.packageDependencies.ui.PackagePatternProvider" id="package" order="before file" />
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightImportedElementsHandlerFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightOverridingMethodsHandlerFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightExitPointsHandlerFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightSuppressedWarningsFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightExceptionsHandlerFactory"/>
    <highlightUsagesHandlerFactory implementation="com.intellij.codeInsight.highlighting.HighlightRecordComponentsRecordFactory"/>
    <moduleExtension implementation="com.intellij.openapi.roots.impl.CompilerModuleExtensionImpl"/>
    <projectExtension implementation="com.intellij.openapi.roots.impl.LanguageLevelProjectExtensionImpl$MyProjectExtension"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Generic"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Statement"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$ConsumerFunction"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Expression"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCodeContextType$Declaration"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaCommentContextType"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.JavaStringContextType"/>
    <liveTemplateContext implementation="com.intellij.codeInsight.template.SmartCompletionContextType"/>
    <usageTargetProvider implementation="com.intellij.find.findUsages.ThrowsUsageTargetProvider"/>
    <lineIndentProvider implementation="com.intellij.codeInsight.editorActions.JavaLineIndentProvider"/>
    <backspaceHandlerDelegate implementation="com.intellij.codeInsight.editorActions.JavaBackspaceHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiClassInitializer" implementationClass="com.intellij.codeInsight.hint.ClassInitializerDeclarationRangeHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiClass" implementationClass="com.intellij.codeInsight.hint.ClassDeclarationRangeHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiLambdaExpression" implementationClass="com.intellij.codeInsight.hint.LambdaDeclarationRangeHandler"/>
    <declarationRangeHandler key="com.intellij.psi.PsiMethod" implementationClass="com.intellij.codeInsight.hint.MethodDeclarationRangeHandler"/>
    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.JavaCopyPasteReferenceProcessor"/>
    <copyPastePreProcessor implementation="com.intellij.codeInsight.editorActions.JavadocCopyPastePreProcessor"/>
    <copyPastePreProcessor implementation="com.intellij.codeInsight.editorActions.StringLiteralCopyPasteProcessor"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ArrayVariableMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.VariableOfTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ComponentTypeOfMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SuggestVariableNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SuggestFirstVariableNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SuggestIndexNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.GuessElementTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ExpectedTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ExpressionTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.AnnotatedMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.MethodNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.MethodParametersMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.MethodParameterTypesMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.MethodReturnTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ClassNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.QualifiedClassNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentPackageMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.RightSideTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CastToLeftSideTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.IterableVariableMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.IterableComponentTypeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.DescendantClassesEnumMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.SubtypesMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.TypeOfVariableMacro"/>
    <codeInspection.InspectionExtension implementation="com.intellij.codeInspection.ex.JavaInspectionExtensionsFactory"/>
    <postFormatProcessor implementation="com.intellij.psi.impl.source.codeStyle.ImportPostFormatProcessor"/>
    <postFormatProcessor implementation="com.intellij.psi.impl.source.codeStyle.BracePostFormatProcessor"/>
    <preFormatProcessor implementation="com.intellij.psi.impl.source.codeStyle.FormatCommentsProcessor"/>
    <elementSignatureProvider implementation="com.intellij.codeInsight.folding.impl.JavaElementSignatureProvider"/>
    <smartPointer.anchorProvider implementation="com.intellij.psi.impl.smartPointers.JavaAnchorProvider"/>
    <vcsSelectionProvider implementation="com.intellij.vcsUtil.JavaVcsSelectionProvider"/>
    <getDataRule key="analysisScope" implementationClass="com.intellij.analysis.AnalysisScopeRule"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.MethodCallSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.AntLikePropertySelectionHandler"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.CaseStatementsSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.StatementGroupSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.JavaTokenSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.TypeCastSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.IfStatementSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.ForStatementHeaderSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.DocTagSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.ReferenceSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.FieldSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.MethodOrClassSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.FinallyBlockSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.CodeBlockOrInitializerSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.VarargsSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.ListSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.DocCommentSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.LiteralSelectioner"/>
    <completion.skip implementation="com.intellij.codeInsight.completion.AbstractExpectedTypeSkipper" id="skipAbstract"/>
    <completion.skip implementation="com.intellij.codeInsight.completion.DeprecatedSkipper" id="skipDeprecated"/>
    <statistician key="completion" implementationClass="com.intellij.codeInsight.completion.JavaCompletionStatistician"/>
    <statistician key="proximity" implementationClass="com.intellij.codeInsight.completion.JavaProximityStatistician"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.KnownElementWeigher" id="knownElement"
             order="after sameModule, before inResolveScope"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.JavaInheritanceWeigher" id="javaInheritance"
             order="after explicitlyImported, before sameLogicalRoot"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.ExplicitlyImportedWeigher" id="explicitlyImported"
             order="before openedInEditor"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SamePsiMemberWeigher" id="samePsiMember"
             order="before explicitlyImported"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.ReferenceListWeigher" id="referenceList"
             order="before samePsiMember"/>
    <completion.ml.contextFeatures language="JAVA" implementationClass="com.intellij.codeInsight.completion.ml.JavaContextFeaturesProvider"/>
    <completion.ml.elementFeatures language="JAVA" implementationClass="com.intellij.codeInsight.completion.ml.JavaElementFeaturesProvider"/>
    <completion.ml.model implementation="com.intellij.codeInsight.completion.ml.JavaMLRankingProvider"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.NestedIfJoinLinesHandler"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.BlockJoinLinesHandler"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.ChainCallJoinLinesHandler"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.AssignmentSequenceJoinLinesHandler"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.DeclarationJoinLinesHandler"/>
    <joinLinesHandler implementation="com.intellij.codeInsight.editorActions.LiteralJoinLinesHandler"/>
    <editorSmartKeysConfigurable instance="com.intellij.application.options.JavadocOptionsProvider" id="editor.preferences.javadocOptions"/>
    <wordBoundaryFilter language="JAVA" implementationClass="com.intellij.codeInsight.editorActions.JavaWordBoundaryFilter"/>
    <editorActionHandler action="PrevParameter" implementationClass="com.intellij.codeInsight.editorActions.JavaPrevParameterHandler"/>
    <editorActionHandler action="NextParameter" implementationClass="com.intellij.codeInsight.editorActions.JavaNextParameterHandler"/>
    <editorActionHandler action="EditorLineStart" implementationClass="com.intellij.codeInsight.editorActions.JavadocLineStartHandler"/>
    <editorActionHandler action="EditorLineStartWithSelection" implementationClass="com.intellij.codeInsight.editorActions.JavadocLineStartWithSelectionHandler"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.AutoFormatTypedHandler"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.JavadocTypedHandler" id="javadoc"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.JavaTypedHandler" id="java"/>
    <quoteHandler fileType="JAVA" className="com.intellij.codeInsight.editorActions.JavaQuoteHandler"/>
    <constructorBodyGenerator language="JAVA" implementationClass="com.intellij.codeInsight.generation.JavaConstructorBodyWithSuperCallGenerator"/>
    <lang.sliceProvider language="JAVA" implementationClass="com.intellij.slicer.JavaSliceProvider"/>
    <lang.lineWrapStrategy language="JAVA" implementationClass="com.intellij.psi.formatter.java.JavaLineWrapPositionStrategy"/>
    <langCodeStyleSettingsProvider implementation="com.intellij.ide.JavaLanguageCodeStyleSettingsProvider"/>
    <codeStyleSettingsProvider implementation="com.intellij.application.options.GenerationSettingsProvider"/>
    <codeCompletionConfigurable instance="com.intellij.application.options.JavaCompletionConfigurable" order="first"/>
    <iconProvider implementation="com.intellij.psi.impl.JavaDirectoryIconProvider" id="javaDirectory"/>
    <codeStyle.ReferenceAdjuster language="JAVA" implementationClass="com.intellij.psi.impl.source.codeStyle.JavaReferenceAdjuster"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.JavaEnterAfterUnmatchedBraceHandler" order="before afterUnmatchedBrace"/>
    <lang.smartEnterProcessor language="JAVA" implementationClass="com.intellij.codeInsight.editorActions.smartEnter.JavaSmartEnterProcessor"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.JavaEnterInTextBlockHandler"/>
    <breadcrumbsInfoProvider implementation="com.intellij.lang.java.JavaBreadcrumbsInfoProvider"/>
    <editorFileSwapper implementation="com.intellij.codeEditor.JavaEditorFileSwapper"/>
    <flipCommaIntention.flipper language="JAVA" implementationClass="com.intellij.codeInsight.intention.impl.JavaFlipper"/>
    <moveLeftRightHandler language="JAVA" implementationClass="com.intellij.codeInsight.editorActions.moveLeftRight.JavaMoveLeftRightHandler"/>
    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.DeclarationMover" id="declaration" order="before xml"/>
    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.StatementMover" id="statement" order="before declaration"/>
    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.CaseBlockMover" id="caseBlock" order="before statement"/>
    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.CatchBlockMover" id="catchBlock" order="before statement"/>
    <regExpModifierProvider language="JAVA" implementationClass="com.intellij.codeInsight.JavaRegExpModifierProvider" />
    <colorProvider implementation="com.intellij.codeInsight.daemon.impl.JavaColorProvider" />
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.JavaLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.RecursiveCallLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="UAST" implementationClass="com.intellij.codeInsight.daemon.impl.IconLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.ExternalAnnotationLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.InferredNullabilityAnnotationsLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.codeInsight.InferredContractAnnotationsLineMarkerProvider"/>
    <codeInsight.gotoSuper language="SPI" implementationClass="com.intellij.spi.SPIGotoSuperHandler"/>
    <codeInsight.gotoSuper language="JAVA" implementationClass="com.intellij.codeInsight.navigation.JavaGotoSuperHandler"/>
    <codeInsight.delegateMethods language="JAVA" implementationClass="com.intellij.codeInsight.generation.GenerateDelegateHandler"/>
    <codeInsight.implementMethod language="JAVA" implementationClass="com.intellij.codeInsight.generation.JavaImplementMethodsHandler"/>
    <codeInsight.overrideMethod language="JAVA" implementationClass="com.intellij.codeInsight.generation.JavaOverrideMethodsHandler"/>
    <codeInsight.typeInfo language="JAVA" implementationClass="com.intellij.codeInsight.hint.JavaTypeProvider"/>
    <codeInsight.parameterInfo language="JAVA" implementationClass="com.intellij.codeInsight.hint.api.impls.AnnotationParameterInfoHandler"/>
    <codeInsight.parameterInfo language="JAVA" implementationClass="com.intellij.codeInsight.hint.api.impls.ReferenceParameterInfoHandler"/>
    <codeInsight.parameterInfo language="JAVA" implementationClass="com.intellij.codeInsight.hint.api.impls.MethodParameterInfoHandler"/>
    <codeInsight.parameterNameHints language="JAVA" implementationClass="com.intellij.codeInsight.hints.JavaInlayParameterHintsProvider"/>
    <codeInsight.inlayProvider language="JAVA" implementationClass="com.intellij.codeInsight.hints.MethodChainsInlayProvider"/>
    <codeInsight.inlayProvider language="JAVA" implementationClass="com.intellij.codeInsight.hints.ImplicitTypeInlayProvider"/>
    <codeInsight.inlayProvider language="JAVA" implementationClass="com.intellij.codeInsight.hints.AnnotationInlayProvider"/>
    <lang.foldingBuilder language="JAVA" implementationClass="com.intellij.codeInsight.folding.impl.JavaFoldingBuilder"/>
    <lang.braceMatcher language="JAVA" implementationClass="com.intellij.codeInsight.highlighting.JavaPairedBraceMatcher"/>
    <anonymousElementProvider implementation="com.intellij.lang.java.JavaAnonymousClassesProvider" />
    <usageToPsiElementProvider implementation="com.intellij.lang.java.JavaUsageToPsiElementProvider" />
    <focusModeProvider language="JAVA" implementationClass="com.intellij.lang.java.JavaFocusModeProvider" />
    <lang.findUsagesProvider language="JAVA" implementationClass="com.intellij.lang.java.JavaFindUsagesProvider"/>
    <lang.unwrapDescriptor language="JAVA" implementationClass="com.intellij.codeInsight.unwrap.JavaUnwrapDescriptor"/>
    <codeInsight.surroundWithRangeAdjuster implementation="com.intellij.codeInsight.generation.surroundWith.JavaSurroundWithStatementRangeAdjuster"/>
    <lang.surroundDescriptor language="JAVA" implementationClass="com.intellij.codeInsight.generation.surroundWith.JavaExpressionSurroundDescriptor"/>
    <lang.surroundDescriptor language="JAVA" implementationClass="com.intellij.codeInsight.generation.surroundWith.JavaStatementsSurroundDescriptor"/>
    <lang.surroundDescriptor language="JAVA" implementationClass="com.intellij.codeInsight.intention.impl.SurroundAutoCloseableAction$Template"/>
    <lang.psiElementExternalizer language="JAVA" implementationClass="com.intellij.lang.java.JavaPsiElementExternalizer"/>
    <lang.importOptimizer language="JAVA" implementationClass="com.intellij.lang.java.JavaImportOptimizer"/>
    <lang.documentationFixer language="JAVA" implementationClass="com.intellij.codeInsight.documentation.JavaDocCommentFixer"/>
    <lang.documentationProvider language="JAVA" implementationClass="com.intellij.lang.java.JavaDocumentationProvider"/>
    <lang.formatting.extractor language="JAVA" implementationClass="com.intellij.psi.codeStyle.extractor.differ.JavaExtractor"/>
    <lang.rearranger language="JAVA" implementationClass="com.intellij.psi.codeStyle.arrangement.JavaRearranger"/>
    <lang.whiteSpaceFormattingStrategy language="JAVA" implementationClass="com.intellij.psi.formatter.JavadocWhiteSpaceFormattingStrategy"/>
    <lang.formatter language="JAVA" implementationClass="com.intellij.lang.java.JavaFormattingModelBuilder"/>
    <encapsulateFields.Helper implementationClass="com.intellij.refactoring.encapsulateFields.JavaEncapsulateFieldHelper" language="JAVA"/>
    <lang.refactoringSupport.classMembersRefactoringSupport language="JAVA" implementationClass="com.intellij.lang.java.JavaClassMembersRefactoringSupport"/>
    <lang.refactoringSupport language="JAVA" implementationClass="com.intellij.lang.java.JavaRefactoringSupportProvider"/>
    <languageCompilerRefAdapter implementation="com.intellij.compiler.backwardRefs.JavaCompilerRefAdapter"/>
    <editor.injectedFileChangesHandlerProvider language="JAVA" implementationClass="com.intellij.psi.impl.source.tree.injected.JavaInjectedFileChangesHandlerProvider"/>
    <registryKey key="injections.java.fragment.editor.new" defaultValue="true" restartRequired="false"
                 description="Using new optimised JavaInjectedFileChangesHandler when editing code injected to Java in the fragment editor"/>
    <registryKey key="java.jspecify.annotations.available" defaultValue="false" restartRequired="true"
                 description="Experimental support for experimental annotations"/>
    <deadCode implementation="com.intellij.codeInspection.deadCode.DeprecatedEntryPoint"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.java18api.Java8MapApiInspectionMerger"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.deadCode.UnusedDeclarationInspectionMerger"/>
    <inspectionElementsMerger implementation="com.intellij.codeInspection.ExplicitArrayFillingInspectionMerger"/>
    <externalProjectDataService implementation="com.intellij.externalSystem.JavaProjectDataService"/>
    <externalProjectDataService implementation="com.intellij.externalSystem.JavaModuleDataService"/>
    <postStartupActivity implementation="com.intellij.pom.java.AcceptedLanguageLevelsSettings"/>
    <projectModelModifier implementation="com.intellij.openapi.roots.impl.IdeaProjectModelModifier" order="last"/>
    <multiHostInjector implementation="com.intellij.psi.impl.source.tree.injected.JavaConcatenationToInjectorAdapter" order="first"/>
    <changeSignatureDetector language="JAVA" implementationClass="com.intellij.refactoring.changeSignature.JavaChangeSignatureDetector"/>
    <lookup.charFilter implementation="com.intellij.codeInsight.completion.JavaCharFilter" id="java"/>
    <completion.contributor language="JAVA" id="javaMethodHandle" order="last, before javaLegacy"
                            implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.JavaMethodHandleCompletionContributor"/>
    <completion.contributor language="JAVA" id="javaReflection" order="before javaLegacy, before javaClassReference"
                            implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.JavaReflectionCompletionContributor"/>
    <completion.contributor language="JAVA" id="javadoc" order="last, before javaLegacy, before wordCompletion"
                            implementationClass="com.intellij.codeInsight.completion.JavaDocCompletionContributor"/>
    <completion.contributor language="JVM" id="javaClassName" order="last, before default"
                            implementationClass="com.intellij.codeInsight.completion.JavaClassNameCompletionContributor"/>
    <completion.contributor language="JAVA" id="javaMemberName" order="before javaOverride"
                            implementationClass="com.intellij.codeInsight.completion.JavaMemberNameCompletionContributor"/>
    <completion.contributor language="any" id="methodMerger" order="before javaLegacy, before default"
                            implementationClass="com.intellij.codeInsight.completion.JavaMethodMergingContributor"/>
    <completion.contributor language="any" id="javaClassReference" order="before legacy"
                            implementationClass="com.intellij.codeInsight.completion.JavaClassReferenceCompletionContributor"/>
    <completion.contributor language="JAVA" id="javaLegacy" order="last, before legacy, before default, before javaClassName"
                            implementationClass="com.intellij.codeInsight.completion.JavaCompletionContributor"/>
    <completion.contributor language="XML" id="basic2ClassName" order="after xml"
                            implementationClass="com.intellij.codeInsight.completion.XmlBasicToClassNameDelegator"/>
    <completion.contributor language="JAVA" id="magicCompletion" order="after javaBasic2ClassName"
                            implementationClass="com.intellij.codeInspection.magicConstant.MagicCompletionContributor"/>
    <completion.contributor language="JAVA" id="javaBasic2ClassName" order="before javaMemberName, before javaLegacy, after liveTemplates"
                            implementationClass="com.intellij.codeInsight.completion.JavaNoVariantsDelegator"/>
    <completion.contributor language="JAVA" id="javaRefactoring" order="first"
                            implementationClass="com.intellij.codeInsight.completion.RefactoringCompletionContributor"/>
    <completion.contributor language="JAVA" id="JShell" order="before javaLegacy"
                            implementationClass="com.intellij.codeInsight.completion.JShellCompletionContributor"/>
    <completion.confidence language="JAVA" implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.JavaReflectionCompletionConfidence" id="javaReflection" />
    <completion.confidence language="JAVA" implementationClass="com.intellij.codeInsight.completion.JavadocCompletionConfidence" id="javadoc" order="before javaComments"/>
    <completion.confidence language="JAVA" implementationClass="com.intellij.codeInsight.completion.SkipAutopopupInComments" id="javaComments"/>
    <completion.confidence language="JAVA" implementationClass="com.intellij.codeInsight.completion.SkipAutopopupInStrings" id="javaSkipAutopopupInStrings"/>
    <completion.plainTextSymbol language="JAVA" implementationClass="com.intellij.codeInsight.completion.JvmPlainTextSymbolCompletionContributor"/>
    <codeInsight.wordCompletionFilter language="JAVA"
                                      implementationClass="com.intellij.lang.java.JavaWordCompletionFilter"/>
    <lookup.actionProvider implementation="com.intellij.codeInsight.completion.ExcludeFromCompletionLookupActionProvider" id="excludeFromCompletion" order="last"/>
    <lookup.actionProvider implementation="com.intellij.codeInsight.completion.ImportStaticLookupActionProvider" id="importStatic"/>
    <fileType extensions="java" hashBangs="java" name="JAVA" language="JAVA" fieldName="INSTANCE" implementationClass="com.intellij.ide.highlighter.JavaFileType"/>
    <fileType extensions="class" name="CLASS" fieldName="INSTANCE" implementationClass="com.intellij.ide.highlighter.JavaClassFileType"/>
    <fileType extensions="snippet" name="JSHELL" language="JShellLanguage" fieldName="INSTANCE" implementationClass="com.intellij.ide.highlighter.JShellFileType"/>
    <customPropertyScopeProvider implementation="com.intellij.psi.impl.search.SimpleAccessorScopeProvider"/>
    <codeInsight.createFieldFromUsageHelper language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.quickfix.JavaCreateFieldFromUsageHelper"/>
    <expressionConverter implementationClass="com.intellij.refactoring.introduceParameter.JavaExpressionConverter" language="JAVA"/>
    <codeFoldingOptionsProvider instance="com.intellij.application.options.editor.JavaCodeFoldingOptionsProvider"/>
    <autoImportOptionsProvider instance="com.intellij.application.options.editor.JavaAutoImportOptions"/>
    <errorOptionsProvider instance="com.intellij.profile.codeInspection.ui.JavaErrorOptionsProvider"/>
    <overrideImplementsAnnotationsHandler implementation="com.intellij.codeInsight.generation.OverrideImplementsAnnotationsHandlerImpl"/>
    <codeInsight.changeVariableTypeQuickFixProvider implementation="com.intellij.codeInsight.daemon.impl.quickfix.VariableTypeQuickFixProvider"/>
    <codeInsight.unresolvedReferenceQuickFixProvider implementation="com.intellij.codeInsight.daemon.impl.quickfix.DefaultQuickFixProvider"/>
    <annotationSupport language="JAVA" implementationClass="com.intellij.psi.impl.source.tree.java.JavaAnnotationSupport" />
    <regExpLanguageHost forClass="com.intellij.psi.impl.source.tree.java.PsiLiteralExpressionImpl" implementationClass="com.intellij.psi.impl.JavaRegExpHost"/>
    <diff.DiffExtension implementation="com.intellij.refactoring.extractMethod.preview.ExtractMethodDiffViewerCustomizer"/>
    <projectExtension implementation="com.intellij.openapi.roots.impl.CompilerProjectExtensionImpl$MyProjectExtension"/>
    <roots.watchedRootsProvider implementation="com.intellij.openapi.roots.impl.CompilerProjectExtensionImpl$MyWatchedRootsProvider"/>
    <orderRootType implementation="com.intellij.openapi.roots.AnnotationOrderRootType"/>
    <orderRootType implementation="com.intellij.openapi.roots.JavadocOrderRootType"/>
    <lang.namesValidator language="JAVA" implementationClass="com.intellij.lang.refactoring.JavaNamesValidator"/>
    <actionPromoter implementation="com.intellij.codeInsight.editorActions.JavaMethodOverloadSwitchActionPromoter"/>
    <actionPromoter implementation="com.intellij.codeInsight.editorActions.JavaNextParameterActionPromoter"/>
    <java.error.fix errorCode="lambda.variable.must.be.final" implementationClass="com.intellij.codeInsight.daemon.impl.quickfix.VariableAccessFromInnerClassJava10Fix"/>
    <stripTrailingSpacesFilterFactory implementation="com.intellij.codeEditor.JavaStripTrailingSpacesFilterFactory"/>

    <localInspection groupPath="Java" language="JAVA" shortName="TestFailedLine"
                     enabledByDefault="true" level="WARNING"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.junit.issues"
                     implementationClass="com.intellij.execution.testframework.TestFailedLineInspection"
                     key="inspection.test.failed.line.display.name" bundle="messages.JavaBundle"/>
    <localInspection language="JAVA" shortName="MoveFieldAssignmentToInitializer" enabledByDefault="true" level="INFORMATION"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.code.style.issues"
                     implementationClass="com.intellij.codeInspection.MoveFieldAssignmentToInitializerInspection"
                     key="inspection.move.field.assignment.to.initializer.display.name" bundle="messages.JavaBundle"/>
    <localInspection language="JAVA" shortName="ConditionCoveredByFurtherCondition" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.verbose.or.redundant.code.constructs"
                     implementationClass="com.siyeh.ig.controlflow.ConditionCoveredByFurtherConditionInspection"
                     key="inspection.condition.covered.by.further.condition.display.name" bundle="messages.JavaBundle"/>
    <localInspection language="JAVA" shortName="ExcessiveRangeCheck" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.verbose.or.redundant.code.constructs"
                     implementationClass="com.siyeh.ig.controlflow.ExcessiveRangeCheckInspection"
                     key="inspection.excessive.range.check.display.name" bundle="messages.JavaBundle"/>
    <localInspection language="JAVA" shortName="IdempotentLoopBody" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.control.flow.issues"
                     bundle="messages.JavaBundle" key="inspection.idempotent.loop.body"
                     implementationClass="com.intellij.codeInspection.IdempotentLoopBodyInspection"/>
    <localInspection language="JAVA" shortName="IterableUsedAsVararg" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.probable.bugs"
                     bundle="messages.JavaBundle" key="inspection.collection.used.as.vararg.display.name"
                     implementationClass="com.intellij.codeInspection.miscGenerics.IterableUsedAsVarargInspection"/>
    <localInspection language="JAVA" shortName="ConditionalBreakInInfiniteLoop" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.control.flow.issues"
                     bundle="messages.JavaBundle" key="inspection.conditional.break.in.infinite.loop.description"
                     implementationClass="com.intellij.codeInspection.ConditionalBreakInInfiniteLoopInspection"/>
    <localInspection language="JAVA" shortName="JavaReflectionMemberAccess" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.reflective.access.issues"
                     bundle="messages.JavaBundle" key="inspection.reflection.member.access.name"
                     implementationClass="com.intellij.codeInspection.reflectiveAccess.JavaReflectionMemberAccessInspection"/>
    <localInspection language="JAVA" shortName="JavaReflectionInvocation" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.reflective.access.issues"
                     bundle="messages.JavaBundle" key="inspection.reflection.invocation.name"
                     implementationClass="com.intellij.codeInspection.reflectiveAccess.JavaReflectionInvocationInspection"/>
    <localInspection language="JAVA" shortName="Java9ReflectionClassVisibility" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.reflective.access.issues"
                     bundle="messages.JavaBundle" key="inspection.reflection.visibility.name"
                     implementationClass="com.intellij.codeInspection.reflectiveAccess.Java9ReflectionClassVisibilityInspection"/>
    <localInspection language="JAVA" shortName="JavaLangInvokeHandleSignature" enabledByDefault="true" level="WARNING"
                     groupPath="Java" groupBundle="messages.InspectionsBundle" groupKey="group.names.reflective.access.issues"
                     bundle="messages.JavaBundle" key="inspection.handle.signature.name"
                     implementationClass="com.intellij.codeInspection.reflectiveAccess.JavaLangInvokeHandleSignatureInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="OptionalAssignedToNull"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.code.style.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.OptionalAssignedToNullInspection"
                     key="inspection.optional.assigned.to.null.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ConditionalCanBeOptional"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.code.style.issues" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.ConditionalCanBeOptionalInspection"
                     key="inspection.conditional.can.be.optional.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="ReplaceNullCheck"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids9" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ReplaceNullCheckInspection"
                     bundle="messages.JavaBundle"
                     key="inspection.require.non.null.description"/>
    <localInspection groupPath="Java" language="JAVA" shortName="OptionalIsPresent"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.code.style.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.OptionalIsPresentInspection"
                     key="inspection.optional.is.present.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="OptionalGetWithoutIsPresent"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.OptionalGetWithoutIsPresentInspection"
                     key="inspection.optional.get.without.is.present.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantExplicitClose"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     bundle="messages.JavaBundle"
                     key="inspection.redundant.explicit.close"
                     implementationClass="com.intellij.codeInspection.RedundantExplicitCloseInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SuspiciousTernaryOperatorInVarargsCall"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     bundle="messages.JavaBundle"
                     key="inspection.suspicious.ternary.in.varargs.display.name"
                     implementationClass="com.intellij.codeInspection.SuspiciousTernaryOperatorInVarargsCallInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantFileCreation"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.verbose.or.redundant.code.constructs" enabledByDefault="true" level="WARNING"
                     bundle="messages.JavaBundle"
                     key="inspection.redundant.file.creation.display.name"
                     implementationClass="com.intellij.codeInspection.RedundantFileCreationInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SlowAbstractSetRemoveAll"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="true" level="WARNING"
                     bundle="messages.JavaBundle"
                     key="inspection.slow.abstract.set.remove.all.description"
                     implementationClass="com.intellij.codeInspection.SlowAbstractSetRemoveAllInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantUnmodifiable"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.verbose.or.redundant.code.constructs" enabledByDefault="true" level="WARNING"
                     bundle="messages.JavaBundle"
                     key="inspection.redundant.unmodifiable.call.description"
                     implementationClass="com.intellij.codeInspection.RedundantUnmodifiableInspection"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="TextBlockMigration"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids15" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.TextBlockMigrationInspection"
                     bundle="messages.JavaBundle"
                     key="inspection.text.block.migration.name"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="TextBlockBackwardMigration"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids15" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.TextBlockBackwardMigrationInspection"
                     bundle="messages.JavaBundle"
                     key="inspection.text.block.backward.migration.name"/>
    <localInspection groupPath="Java" language="JAVA" shortName="WrapperTypeMayBePrimitive"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.WrapperTypeMayBePrimitiveInspection"
                     key="inspection.wrapper.type.may.be.primitive.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantLambdaParameterType"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.lambda.RedundantLambdaParameterTypeInspection"
                     key="inspection.redundant.lambda.parameter.type.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ReplaceInefficientStreamCount"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ReplaceInefficientStreamCountInspection"
                     key="inspection.replace.inefficient.stream.count.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="ComparatorCombinators"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ComparatorCombinatorsInspection"
                     key="inspection.comparator.combinators.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="UseBulkOperation"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.bulkOperation.UseBulkOperationInspection"
                     key="inspection.use.bulk.operation.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="InconsistentTextBlockIndent"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids15" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.InconsistentTextBlockIndentInspection"
                     bundle="messages.JavaBundle"
                     key="inspection.inconsistent.text.block.indent.name"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SimplifyCollector"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.SimplifyCollectorInspection"
                     key="inspection.simplify.collector.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="TrailingWhitespacesInTextBlock"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids15" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.TrailingWhitespacesInTextBlockInspection"
                     bundle="messages.JavaBundle"
                     key="inspection.trailing.whitespaces.in.text.block.name"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SimplifyOptionalCallChains"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.SimplifyOptionalCallChainsInspection"
                     key="inspection.simplify.optional.call.chains.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SimplifyStreamApiCallChains"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.SimplifyStreamApiCallChainsInspection"
                     key="inspection.simplify.stream.api.call.chains.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ObviousNullCheck"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ObviousNullCheckInspection"
                     key="inspection.obvious.null.check.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantStreamOptionalCall"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.RedundantStreamOptionalCallInspection"
                     key="inspection.redundant.stream.optional.call.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantRecordConstructor" enabledByDefault="true" level="WARNING"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.declaration.redundancy"
                     bundle="messages.JavaBundle" key="inspection.redundant.record.constructor.description"
                     implementationClass="com.intellij.codeInspection.RedundantRecordConstructorInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="MeaninglessRecordAnnotationInspection" enabledByDefault="true" level="WARNING"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.probable.bugs"
                     bundle="messages.JavaBundle" key="inspection.meaningless.record.annotation.description"
                     implementationClass="com.intellij.codeInspection.MeaninglessRecordAnnotationInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RecordCanBeClass" enabledByDefault="true" level="INFORMATION"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.code.style.issues"
                     bundle="messages.JavaBundle" key="inspection.message.record.can.be.converted.to.class"
                     implementationClass="com.intellij.codeInspection.RecordCanBeClassInspection"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" 
                     shortName="ClassCanBeRecord" enabledByDefault="true" level="WEAK WARNING"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.language.level.specific.issues.and.migration.aids15"
                     bundle="messages.JavaBundle" key="class.can.be.record.display.name"
                     implementationClass="com.intellij.codeInspection.classCanBeRecord.ClassCanBeRecordInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="EndlessStream"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.EndlessStreamInspection"
                     bundle="messages.JavaBundle" key="inspection.endless.stream.description"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ExcessiveLambdaUsage"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.verbose.or.redundant.code.constructs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.lambdaToExplicit.ExcessiveLambdaUsageInspection"
                     key="inspection.excessive.lambda.usage.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ExplicitArgumentCanBeLambda"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.lambdaToExplicit.ExplicitArgumentCanBeLambdaInspection"
                     key="inspection.explicit.argument.can.be.lambda.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="Java9CollectionFactory"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids9" enabledByDefault="true" level="WEAK WARNING"
                     implementationClass="com.intellij.codeInspection.java19api.Java9CollectionFactoryInspection"
                     key="inspection.java.9.collection.factory.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="ReadWriteStringCanBeUsed"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids11" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ReadWriteStringCanBeUsedInspection"
                     key="inspection.read.write.string.can.be.used.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="StringRepeatCanBeUsed"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids11" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.StringRepeatCanBeUsedInspection"
                     key="inspection.string.repeat.can.be.used.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="Java8MapForEach"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.Java8MapForEachInspection"
                     bundle="messages.JavaBundle" key="inspection.map.foreach.display.name"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="Java8MapApi"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.Java8MapApiInspection"
                     key="inspection.java.8.map.api.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="Java8CollectionRemoveIf"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18api.Java8CollectionRemoveIfInspection"
                     key="inspection.java.8.collection.remove.if.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ExplicitArrayFilling"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.verbose.or.redundant.code.constructs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ExplicitArrayFillingInspection"
                     key="inspection.explicit.array.filling.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ManualMinMaxCalculation"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.verbose.or.redundant.code.constructs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ManualMinMaxCalculationInspection"
                     key="inspection.manual.min.max.calculation.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="CollectionAddAllCanBeReplacedWithConstructor"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.performance.issues" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.CollectionAddAllCanBeReplacedWithConstructorInspection"
                     key="inspection.collection.add.all.can.be.replaced.with.constructor.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="CapturingCleaner"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.CapturingCleanerInspection"
                     bundle="messages.JavaBundle"
                     key="inspection.capturing.cleaner.description"/>
    <localInspection groupPath="Java" language="JAVA" shortName="OverwrittenKey"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.probable.bugs" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.OverwrittenKeyInspection"
                     key="inspection.overwritten.key.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="StaticPseudoFunctionalStyleMethod"
                     groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.java18StreamApi.StaticPseudoFunctionalStyleMethodInspection"
                     key="inspection.static.pseudo.functional.style.method.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="MagicConstant"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.magicConstant.MagicConstantInspection"
                     key="inspection.magic.constant.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="TrivialFunctionalExpressionUsage"
                     groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.TrivialFunctionalExpressionUsageInspection"
                     key="inspection.trivial.functional.expression.usage.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="FunctionalExpressionCanBeFolded"
                     groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.FunctionalExpressionCanBeFoldedInspection"
                     key="inspection.functional.expression.can.be.folded.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="LambdaCanBeMethodCall"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.LambdaCanBeMethodCallInspection"
                     key="inspection.lambda.can.be.method.call.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="Convert2MethodRef"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.LambdaCanBeMethodReferenceInspection"
                     key="inspection.convert.2.method.ref.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="Anonymous2MethodRef"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.AnonymousCanBeMethodReferenceInspection"
                     key="inspection.anonymous.2.method.ref.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="StreamToLoop"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.streamToLoop.StreamToLoopInspection"
                     key="inspection.stream.to.loop.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="OptionalToIf"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.optionalToIf.OptionalToIfInspection"
                     key="inspection.optional.to.if.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="Convert2streamapi"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.streamMigration.StreamApiMigrationInspection"
                     key="inspection.convert.2.streamapi.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="FuseStreamOperations"
                     bundle="messages.JavaBundle" key="inspection.fuse.stream.operations.display.name"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.streamMigration.FuseStreamOperationsInspection"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="SimplifyForEach" bundle="messages.JavaBundle" key="inspection.simplify.foreach.display.name"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids8" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.streamMigration.SimplifyForEachInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ComparatorResultComparison"
                     bundle="messages.JavaBundle" key="inspection.comparator.result.comparison.display.name"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.ComparatorResultComparisonInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="SuspiciousNameCombination" bundle="messages.AnalysisBundle"
                     key="suspicious.name.combination.display.name"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.suspiciousNameCombination.SuspiciousNameCombinationInspection" />
    <localInspection groupPath="Java" language="JAVA" suppressId="unchecked" shortName="UNCHECKED_WARNING" groupKey="group.names.compiler.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.uncheckedWarnings.UncheckedWarningLocalInspection"
                     key="inspection.unchecked.warning.display.name" bundle="messages.JavaBundle"/>
    <localInspection shortName="DefaultFileTemplate" bundle="messages.JavaBundle" key="default.file.template.display.name"
                     groupKey="inspection.general.tools.group.name" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.defaultFileTemplateUsage.DefaultFileTemplateUsageInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="AccessStaticViaInstance" bundle="messages.JavaBundle" key="access.static.via.instance"
                     groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING" cleanupTool="true" alternativeId="static-access"
                     implementationClass="com.intellij.codeInspection.accessStaticViaInstance.AccessStaticViaInstance" />
    <localInspection groupPath="Java" language="JAVA" shortName="DefaultAnnotationParam" bundle="messages.JavaBundle" key="inspection.default.annotation.param"
                     groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.DefaultAnnotationParamInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="ConvertToBasicLatin" bundle="messages.JavaBundle" key="inspection.convert.to.basic.latin"
                     groupKey="group.names.i18n" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.ConvertToBasicLatinInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="SillyAssignment" bundle="messages.JavaBundle" key="inspection.variable.assigned.to.itself.display.name"
                     groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.sillyAssignment.SillyAssignmentInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="WrongPackageStatement" bundle="messages.JavaBundle" key="wrong.package.statement"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.wrongPackageStatement.WrongPackageStatementInspection" />
    <localInspection groupPathKey="group.path.names.probable.bugs" language="JAVA" shortName="NullableProblems" bundle="messages.JavaBundle" key="inspection.nullable.problems.display.name"
                     groupKey="group.names.nullability.problems" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.nullable.NullableStuffInspection" />
    <localInspection groupPathKey="group.path.names.probable.bugs" language="JAVA" shortName="NotNullFieldNotInitialized" bundle="messages.JavaBundle" key="inspection.notnull.field.not.initialized.display.name"
                     groupKey="group.names.nullability.problems" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.nullable.NotNullFieldNotInitializedInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="ParameterCanBeLocal" key="inspection.parameter.can.be.local.display.name"
                     groupKey="group.names.class.structure" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING" bundle="messages.JavaBundle"
                     implementationClass="com.intellij.codeInspection.varScopeCanBeNarrowed.ParameterCanBeLocalInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="FieldCanBeLocal" bundle="messages.JavaBundle" key="inspection.field.can.be.local.display.name"
                     groupKey="group.names.class.structure" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING" runForWholeFile="true"
                     implementationClass="com.intellij.codeInspection.varScopeCanBeNarrowed.FieldCanBeLocalInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Since15" bundle="messages.JavaBundle" key="inspection.1.5.display.name"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.java15api.Java15APIUsageInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="EqualsAndHashcode" bundle="messages.JavaBundle" key="inspection.equals.hashcode.display.name"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.equalsAndHashcode.EqualsAndHashcode"/>
    <externalAnnotator language="JAVA" implementationClass="com.intellij.codeInspection.javaDoc.JavadocHtmlLintAnnotator"/>
    <localInspection groupPath="Java" language="JAVA" shortName="JavadocHtmlLint" bundle="messages.JavaBundle" key="inspection.javadoc.lint.display.name"
                     groupKey="group.names.javadoc.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="false" level="ERROR" unfair="true"
                     implementationClass="com.intellij.codeInspection.javaDoc.JavadocHtmlLintInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="JavadocReference" bundle="messages.JavaBundle" key="inspection.javadoc.ref.display.name"
                     groupKey="group.names.javadoc.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="ERROR"
                     implementationClass="com.intellij.codeInspection.javaDoc.JavaDocReferenceInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="JavaDoc" bundle="messages.JavaBundle" key="inspection.javadoc.display.name"
                     groupKey="group.names.javadoc.issues" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.javaDoc.JavaDocLocalInspection" alternativeId="javadoc"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ReturnSeparatedFromComputation" bundle="messages.JavaBundle"
                     key="inspection.return.separated.from.computation.name"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.intermediaryVariable.ReturnSeparatedFromComputationInspection"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" suppressId="rawtypes" alternativeId="RawUseOfParameterized" shortName="RawUseOfParameterizedType" bundle="messages.InspectionGadgetsBundle"
                     key="raw.use.of.parameterized.type.display.name" groupBundle="messages.InspectionsBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids5" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.miscGenerics.RawUseOfParameterizedTypeInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantArrayCreation" bundle="messages.JavaBundle"
                     key="inspection.redundant.array.creation.display.name"
                     groupKey="group.names.verbose.or.redundant.code.constructs" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING" cleanupTool="true"
                     implementationClass="com.intellij.codeInspection.miscGenerics.RedundantArrayForVarargsCallInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="CharsetObjectCanBeUsed" bundle="messages.JavaBundle"
                     key="inspection.charset.object.can.be.used.display.name"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING" cleanupTool="true"
                     implementationClass="com.intellij.codeInspection.CharsetObjectCanBeUsedInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="UnusedAssignment" groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="true"
                     level="WARNING" implementationClass="com.intellij.codeInspection.defUse.DefUseInspection"
                     key="inspection.unused.assignment.display.name" bundle="messages.JavaBundle"/>
    <localInspection groupPath="Java" language="JAVA" shortName="ConstantConditions" bundle="messages.JavaBundle" key="inspection.data.flow.display.name"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.dataFlow.DataFlowInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Java9UndeclaredServiceUsage"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.visibility.issues"
                     enabledByDefault="true" level="WARNING"
                     key="inspection.undeclared.service.usage.name" bundle="messages.JavaBundle"
                     implementationClass="com.intellij.codeInspection.java19api.Java9UndeclaredServiceUsageInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantComparatorComparing"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.verbose.or.redundant.code.constructs"
                     enabledByDefault="true" level="WARNING"
                     key="inspection.simplifiable.comparator.display.name" bundle="messages.JavaBundle"
                     implementationClass="com.intellij.codeInspection.RedundantComparatorComparingInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="SuspiciousListRemoveInLoop"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.probable.bugs"
                     enabledByDefault="true" level="WARNING"
                     key="inspection.suspicious.list.remove.display.name" bundle="messages.JavaBundle"
                     implementationClass="com.intellij.codeInspection.SuspiciousListRemoveInLoopInspection"/>
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="FoldExpressionIntoStream"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.language.level.specific.issues.and.migration.aids8"
                     enabledByDefault="true" level="INFORMATION"
                     key="inspection.fold.expression.into.stream.display.name" bundle="messages.JavaBundle"
                     implementationClass="com.intellij.codeInspection.streamMigration.FoldExpressionIntoStreamInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="DuplicateExpressions"
                     key="inspection.duplicate.expressions.display.name" bundle="messages.JavaBundle"
                     groupKey="group.names.verbose.or.redundant.code.constructs" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WEAK WARNING"
                     implementationClass="com.intellij.codeInspection.duplicateExpressions.DuplicateExpressionsInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="DuplicateBranchesInSwitch"
                     key="inspection.duplicate.branches.in.switch.display.name" bundle="messages.JavaBundle"
                     groupKey="group.names.verbose.or.redundant.code.constructs" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WEAK WARNING"
                     implementationClass="com.intellij.codeInspection.DuplicateBranchesInSwitchInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="SortedCollectionWithNonComparableKeys"
                     key="inspection.sorted.collection.with.non.comparable.keys.display.name" bundle="messages.JavaBundle"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.siyeh.ig.bugs.SortedCollectionWithNonComparableKeysInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="JoinDeclarationAndAssignmentJava"
                     key="inspection.join.declaration.and.assignment.display.name" bundle="messages.JavaBundle"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.JoinDeclarationAndAssignmentJavaInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="CastCanBeRemovedNarrowingVariableType"
                     groupBundle="messages.InspectionsBundle" groupKey="group.names.verbose.or.redundant.code.constructs"
                     enabledByDefault="true" level="WARNING"
                     key="inspection.cast.can.be.removed.narrowing.variable.type.name" bundle="messages.JavaBundle"
                     implementationClass="com.intellij.codeInspection.redundantCast.CastCanBeRemovedNarrowingVariableTypeInspection"/>
    <localInspection groupPath="Java" language="JAVA" shortName="OverflowingLoopIndex"
                     key="inspection.overflowing.loop.index.inspection.name" bundle="messages.JavaBundle"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.OverflowingLoopIndexInspection" />
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="EnhancedSwitchMigration"
                     key="inspection.switch.expression.migration.inspection.name" bundle="messages.JavaBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids14" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.EnhancedSwitchMigrationInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantLabeledSwitchRuleCodeBlock"
                     key="inspection.labeled.switch.rule.redundant.code.block.display.name" bundle="messages.JavaBundle"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.enhancedSwitch.RedundantLabeledSwitchRuleCodeBlockInspection" />
    <localInspection groupPathKey="group.path.names.java.language.level.specific.issues.and.migration.aids" language="JAVA" shortName="EnhancedSwitchBackwardMigration"
                     key="inspection.switch.expression.backward.migration.inspection.name" bundle="messages.JavaBundle"
                     groupKey="group.names.language.level.specific.issues.and.migration.aids14" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.EnhancedSwitchBackwardMigrationInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="SwitchLabeledRuleCanBeCodeBlock"
                     key="inspection.switch.labeled.rule.can.be.code.block.display.name" bundle="messages.JavaBundle"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.enhancedSwitch.SwitchLabeledRuleCanBeCodeBlockInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="RedundantOperationOnEmptyContainer"
                     key="inspection.redundant.operation.on.empty.container.display.name" bundle="messages.JavaBundle"
                     groupKey="group.names.probable.bugs" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.siyeh.ig.redundancy.RedundantOperationOnEmptyContainerInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="InsertLiteralUnderscores"
                     key="inspection.insert.literal.underscores.display.name" bundle="messages.JavaBundle"
                     groupKey="group.names.numeric.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.numeric.InsertLiteralUnderscoresInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="RemoveLiteralUnderscores"
                     key="inspection.remove.literal.underscores.display.name" bundle="messages.JavaBundle"
                     groupKey="group.names.numeric.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.numeric.RemoveLiteralUnderscoresInspection" />
    <localInspection groupPath="Java" language="JAVA" shortName="FillPermitsList"
                     key="inspection.fill.permits.list.display.name" bundle="messages.JavaBundle"
                     groupKey="group.names.code.style.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="INFORMATION"
                     implementationClass="com.intellij.codeInspection.FillPermitsListInspection"/>
    <localInspection groupPath="Java" language="JAVA" suppressId="synchronization" shortName="SynchronizeOnValueBasedClass"
                     key="inspection.value.based.warnings" bundle="messages.JavaBundle"
                     groupKey="group.names.compiler.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.valuebased.SynchronizeOnValueBasedClassInspection"/>
    <localInspection groupPath="Java" language="JAVA" suppressId="preview" shortName="PreviewFeature"
                     key="inspection.preview.feature" bundle="messages.JavaBundle"
                     groupKey="group.names.compiler.issues" groupBundle="messages.InspectionsBundle"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.intellij.codeInspection.preview.PreviewFeatureInspection"/>

    <globalInspection groupPath="Java" language="JAVA" shortName="EmptyMethod" groupKey="group.names.declaration.redundancy" enabledByDefault="true" groupBundle="messages.InspectionsBundle"
                      level="WARNING" implementationClass="com.intellij.codeInspection.emptyMethod.EmptyMethodInspection"
                      key="inspection.empty.method.display.name" bundle="messages.JavaBundle"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="UnusedReturnValue" bundle="messages.JavaBundle" key="inspection.unused.return.value.display.name"
                      groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.unusedReturnValue.UnusedReturnValue"/>
    <globalInspection groupPath="Java" language="UAST" shortName="SameParameterValue" bundle="messages.JavaBundle" key="inspection.same.parameter.display.name"
                      groupKey="group.names.declaration.redundancy" groupBundle="messages.InspectionsBundle" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.sameParameterValue.SameParameterValueInspection"/>
    <globalInspection groupPath="Java" language="JAVA" shortName="unused" groupBundle="messages.InspectionsBundle"
                      groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
                      implementationClass="com.intellij.codeInspection.deadCode.UnusedDeclarationInspection"
                      presentation="com.intellij.codeInspection.deadCode.UnusedDeclarationPresentation" key="inspection.unused.display.name"
                      bundle="messages.JavaBundle"/>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SplitIfAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExtractSetFromComparisonChainAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SurroundAutoCloseableAction</className>
      <category>Java/Try Statements</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.ConvertToStringLiteralAction</className>
      <category>Java/Strings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.BreakStringOnLineBreaksIntentionAction</className>
      <category>Java/Strings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ReplaceCastWithVariableAction</className>
      <category>Java/Imports</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertRelativePathToAbsoluteIntentionAction</className>
      <category>Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SortContentAction</className>
      <category>Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertAbsolutePathToRelativeIntentionAction</className>
      <category>Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddJavadocIntention</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertColorRepresentationIntentionAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInspection.actions.ReplaceImplementsWithStaticImportAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInspection.actions.UnimplementInterfaceAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExpandStaticImportAction</className>
      <category>Java/Imports</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddExplicitTypeArgumentsIntention</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddSingleMemberStaticImportAction</className>
      <category>Java/Imports</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AddOnDemandStaticImportAction</className>
      <category>Java/Imports</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConcatenationToMessageFormatAction</className>
      <category>Java/I18N</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SimplifyBooleanExpressionAction</className>
      <category>Java/Boolean</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.EncapsulateFieldAction</className>
      <category>Java/Refactorings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.IntroduceVariableIntentionAction</className>
      <category>Java/Refactorings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExtractMethodIntentionAction</className>
      <category>Java/Refactorings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.DefineParamsDefaultValueAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.AddRuntimeExceptionToThrowsAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.testIntegration.intention.MoveInitializerToSetUpMethodAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.MoveInitializerToConstructorAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SplitDeclarationAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CopyAbstractMethodImplementationAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ImplementAbstractMethodAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CreateSubclassAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.CreateCastExpressionFromInstanceofAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.CreateLocalVarFromInstanceofAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.BindFieldsFromParametersAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AssignFieldFromParameterAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CreateFieldFromParameterAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SealClassAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.UnwrapElseBranchAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertCompareToToEqualsIntention</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SwapIfStatementsIntentionAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CreateSwitchIntention</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.DeannotateIntentionAction</className>
      <category>Java/Annotations</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.daemon.impl.quickfix.IterateOverIterableIntention</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.MakeAnnotationExternal</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>MakeAnnotationExternal</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.MakeExternalAnnotationExplicit</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>MakeExternalAnnotationExplicit</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.MakeInferredAnnotationExplicit</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>MakeInferredAnnotationExplicit</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInspection.dataFlow.EditContractIntention</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>EditContractIntention</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInspection.dataFlow.EditRangeIntention</className>
      <category>Java/Annotations</category>
      <descriptionDirectoryName>EditRangeIntention</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.AnnotateIntentionAction</className>
      <category>Java/Annotations</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExtractIfConditionAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.UnrollLoopAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.CollapseIntoLoopAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.MoveIntoIfBranchesAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.InvertIfConditionAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ComposeFunctionChainAction</className>
      <category>Java/Refactorings</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ExtractChainedMapAction</className>
      <category>Java/Streams</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.InlineStreamMapAction</className>
      <category>Java/Streams</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.MergeFilterChainAction</className>
      <category>Java/Streams</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SplitFilterAction</className>
      <category>Java/Streams</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ChangeUIDAction</className>
      <category>Serialization</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.SplitSwitchBranchWithSeveralCaseValuesAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.singlereturn.ConvertToSingleReturnAction</className>
      <category>Java/Control Flow</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.WrapWithUnmodifiableAction</className>
      <category>Java/Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.lists.JavaChopParametersAction</className>
      <category>Java/Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.lists.JavaChopArgumentsAction</className>
      <category>Java/Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.lists.JavaJoinParametersAction</className>
      <category>Java/Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.lists.JavaJoinArgumentsAction</className>
      <category>Java/Other</category>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.ConvertCompactConstructorToCanonicalAction</className>
      <category>Java/Declaration</category>
    </intentionAction>
    <externalAnnotationsArtifactsResolver implementation="com.intellij.jarRepository.ExternalAnnotationsRepositoryResolver"/>
    <errorQuickFixProvider implementation="com.intellij.codeInsight.daemon.impl.analysis.JavaErrorQuickFixProvider"/>

    <searchEverywhereResultsEqualityProvider implementation="com.intellij.ide.JavaClassAndFileEqualityProvider"/>

    <applicationService serviceInterface="com.intellij.util.xml.ConverterManager"
                        serviceImplementation="com.intellij.util.xml.impl.JavaDomConverterManagerImpl"
                        overrides="true"/>

    <java.externalAnnotation.locationProvider
        implementation="com.intellij.codeInsight.externalAnnotation.location.JBBundledAnnotationsProvider"/>
    <jreProvider implementation="com.intellij.execution.ui.BundledJreProvider"/>
    <registryKey key="ide.java.show.bundled.runtime" defaultValue="true" description="Enables using bundled JetBrains Runtime for execution"/>
    <codeInsight.inlayProvider language="JAVA" implementationClass="com.intellij.codeInsight.daemon.impl.JavaCodeVisionProvider"/>
    <codeInsight.inlayProvider language="JAVA" implementationClass="com.intellij.codeInsight.daemon.problems.pass.ProjectProblemHintProvider"/>
    <statistics.counterUsagesCollector groupId="java.lens" version="2"/>
    <notificationGroup id="Clean artifact" displayType="BALLOON"/>
    <notificationGroup id="Compiler" displayType="NONE"/>
    <notificationGroup id="Build Profiler" displayType="STICKY_BALLOON"/>
    <notificationGroup id="Analyze thread dump" displayType="TOOL_WINDOW" toolWindowId="Run" isLogByDefault="false"/>
    <notificationGroup id="JSHELL_NOTIFICATIONS" displayType="BALLOON"/>
    <notificationGroup id="Repository" displayType="BALLOON"/>
    <notificationGroup id="HotSwap" displayType="TOOL_WINDOW" toolWindowId="Debug"/>
    <notificationGroup id="Source searcher" displayType="BALLOON"/>
    <notificationGroup id="Accepted language levels" displayType="STICKY_BALLOON"/>
    <notificationGroup id="Quarantine Cleaner" displayType="BALLOON" bundle="messages.JavaUiBundle" key="quarantine.cleaner"/>
    <notificationGroup id="Build Script Found" displayType="STICKY_BALLOON"/>
    <notificationGroup id="Java Preview Features" displayType="BALLOON"/>
    <notificationGroup id="Remove redundant exports/opens" displayType="BALLOON"/>

    <compiler.task implementation="com.intellij.execution.scratch.JavaScratchCompilationSupport"/>
    <registryKey key="load.maven.dependencies.timeout" defaultValue="120" description="How long (in minutes) idea will wait for results of synchronized maven dependencies resolution"/>
    <readerModeProvider implementation="com.intellij.ide.impl.JavaInlaysReaderModeProvider"/>
    <referenceInjector implementation="com.intellij.java.JvmMethodNameReferenceInjector"/>
  </extensions>

  <extensions defaultExtensionNs="org.jetbrains">
    <webServerRootsProvider implementation="org.jetbrains.builtInWebServer.ArtifactWebServerRootsProvider" order="last"/>
  </extensions>

</idea-plugin>