<technologies>
  <technology class="scalaz.Scalaz$" name="scalaz"/>
  <technology class="org.scalamock.scalatest.MockFactory" name="scalamock"/>
  <technology class="org.scalacheck.Gen" name="scalacheck"/>
  <technology class="org.specs2.Specification" name="specs2"/>
  <technology class="utest.TestSuite" name="utest"/>
  <technology class="munit.FunSuite" name="munit"/>
  <technology class="zio.test.Spec" name="zio-test"/>
  <technology class="akka.http.scaladsl.Http" name="akka-http"/>
  <technology class="io.netty.channel.AbstractChannel" name="netty"/>
  <technology class="org.scalatra.ScalatraServlet" name="scalatra"/>
  <technology class="unfiltered.response.ResponseString" name="unfiltered"/>
  <technology class="sttp.client3.Response" name="sttp"/>
  <technology class="org.http4s.Http" name="http4s"/>
  <technology class="com.twitter.util.Future" name="twitter-util"/>
  <technology class="shapeless.HList" name="shapeless"/>
  <technology class="com.twitter.finagle.Client" name="finagle"/>
  <technology class="cats.Functor" name="cats"/>
  <technology class="breeze.linalg.DenseVector" name="breeze"/>
  <technology class="slick.sql.SqlAction" name="slick"/>
  <technology class="fs2.Stream" name="fs2"/>
  <technology class="monix.reactive.Observable" name="monix"/>
  <technology class="zio.ZIO" name="zio"/>
  <technology class="io.micronaut.http.server.HttpServerConfiguration" name="micronaut"/>
  <technology class="akka.actor.Actor" name="akka-java"/>
  <technology class="io.vertx.core.Vertx" name="vertx"/>
  <technology class="spark.Spark" name="spark-java"/>
  <technology class="io.dropwizard.Application" name="dropwizard"/>
  <technology class="io.helidon.webserver.WebServer" name="helidon"/>
  <technology class="io.quarkus.runtime.Application" name="quarkus"/>
  <technology class="okhttp3.Request" name="ok3-http"/>
  <technology class="org.apache.http.HttpEntity" name="apache-http"/>
  <technology class="kong.unirest.Client" name="unirest"/>
  <technology class="retrofit2.Retrofit" name="retrofit"/>
  <technology class="org.springframework.cloud.client.SpringCloudApplication" name="spring-cloud"/>
  <technology class="org.springframework.web.reactive.HandlerResult" name="spring-webflux"/>
  <technology class="reactor.core.publisher.Mono" name="reactor"/>
  <technology class="reactor.kotlin.core.publisher.FluxExtensionsKt" name="reactor-kotlin-ext"/>
  <technology class="io.reactivex.Flowable" name="rx-java"/>
  <technology class="com.google.inject.Provider" name="guice"/>
  <technology class="org.drools.core.spi.KnowledgeHelper" name="drools"/>
  <technology class="io.ktor.application.Application" name="ktor"/>
  <technology class="io.cucumber.java.Before" name="cucumber"/>
  <technology class="org.openqa.selenium.WebDriver" name="selenium"/>
  <technology class="com.codeborne.selenide.Selenide" name="selenide"/>
  <technology class="net.thucydides.core.annotations.Step" name="serenity"/>
  <technology class="io.appium.java_client.MobileElement" name="appium"/>
  <technology class="io.qameta.allure.Step" name="allure2"/>
  <technology class="ru.yandex.qatools.allure.annotations.Step" name="allure1"/>
  <technology class="com.epam.jdi.light.elements.pageobjects.annotations.locators.UI" name="jdi-light"/>
  <technology class="ru.yandex.qatools.htmlelements.annotations.Name" name="htmlelements"/>
  <technology class="io.qameta.atlas.core.Atlas" name="atlas"/>
  <technology class="geb.Browser" name="geb"/>
  <technology class="org.testingisdocumenting.webtau.http.Http" name="webtau-http"/>
  <technology class="org.testingisdocumenting.webtau.browser.Browser" name="webtau-browser"/>
  <technology class="org.jbehave.core.annotations.Then" name="jbehave"/>
  <technology class="org.robotframework.javalib.annotation.RobotKeyword" name="robotframework"/>
  <technology class="io.restassured.RestAssured" name="restassured"/>
  <technology class="com.intuit.karate.Runner" name="karate"/>
  <technology class="com.consol.citrus.Citrus" name="citrus"/>
  <technology class="org.springframework.integration.channel.DirectChannel" name="spring-integration"/>
  <technology class="org.springframework.integration.amqp.channel.AbstractAmqpChannel" name="spring-integration-amqp"/>
  <technology class="org.springframework.amqp.core.Message" name="spring-amqp"/>
  <technology class="org.springframework.webflow.execution.Action" name="spring-webflow"/>
  <technology class="org.springframework.osgi.OsgiException" name="spring-osgi"/>
  <technology class="org.springframework.data.repository.Repository" name="spring-data-commons"/>
  <technology class="org.springframework.data.jpa.repository.Query" name="spring-data-jpa"/>
  <technology class="org.springframework.data.mongodb.MongoDbFactory" name="spring-data-mongo"/>
  <technology class="org.springframework.data.neo4j.config.Neo4jConfiguration" name="spring-data-neo4j"/>
  <technology class="org.springframework.data.solr.core.SolrTemplate" name="spring-data-solr"/>
  <technology class="org.springframework.data.hadoop.HadoopException" name="spring-data-hadoop"/>
  <technology class="org.springframework.data.jdbc.support.DatabaseType" name="spring-data-jdbc-ext"/>
  <technology class="org.springframework.context.ApplicationContext" name="spring-core"/>
  <technology class="org.springframework.boot.SpringApplication" name="spring-boot"/>
  <technology class="org.springframework.ws.WebServiceException" name="spring-ws"/>
  <technology class="org.springframework.web.context.WebApplicationContext" name="spring-mvc"/>
  <technology class="org.springframework.security.config.BeanIds" name="spring-security"/>
  <technology class="org.springframework.batch.core.Job" name="spring-batch"/>
  <technology class="org.springframework.security.oauth2.provider.OAuth2Authentication" name="spring-security-oauth2"/>
  <technology class="org.springframework.security.oauth.config.OAuthSecurityNamespaceHandler" name="spring-security-oauth"/>
  <technology class="org.apache.tiles.definition.DefinitionsFactory" name="apache-tiles"/>
  <technology class="org.thymeleaf.dialect.IDialect" name="thymeleaf"/>
  <technology class="org.apache.velocity.Template" name="velocity"/>
  <technology class="freemarker.template.Template" name="freemarker"/>
  <technology class="org.springframework.config.java.annotation.Bean" name="springOldJavaConfig"/>
  <technology class="org.springframework.cloud.client.SpringCloudApplication" name="spring-cloud-commons"/>
  <technology class="org.springframework.amqp.core.AbstractExchange" name="spring-amqp"/>
  <technology class="org.grails.datastore.gorm.GormInstanceApi" name="gorm"/>
  <technology class="groovy.lang.GroovyObject" name="groovy"/>
  <technology class="grails.core.GrailsClass" name="grails"/>
  <technology class="com.netflix.discovery.EurekaClient" name="eureka"/>
  <technology class="com.ecwid.consul.v1.ConsulClient" name="consul"/>
  <technology class="org.apache.zookeeper.ZooKeeper" name="zookeeper"/>
  <technology class="com.netflix.zuul.FilterFactory" name="zuul"/>
  <technology class="com.netflix.hystrix.HystrixCommand" name="hystrix"/>
  <technology class="org.apache.dubbo.config.ServiceConfig" name="apache-dubbo"/>
  <technology class="io.grpc.ManagedChannel" name="grpc"/>
  <technology class="org.apache.thrift.transport.TTransport" name="apache-thrift"/>
  <technology class="io.javalin.Javalin" name="javalin"/>
  <technology class="com.linecorp.armeria.server.Server" name="armeria"/>
  <technology class="org.apache.ibatis.annotations.Select" name="mybatis"/>
  <technology class="org.jooq.DSLContext" name="jooq"/>
  <technology class="org.junit.Test" name="junit4"/>
  <technology class="org.junit.jupiter.api.Test" name="junit5"/>
  <technology class="org.testng.annotations.Test" name="testng"/>
  <technology class="org.apache.kafka.clients.consumer.Consumer" name="kafka-client"/>
  <technology class="org.apache.activemq.ActiveMQConnection" name="activemq-client"/>
  <technology class="com.rabbitmq.client.Channel" name="rabbitmq-client"/>
  <technology class="com.amazonaws.services.sqs.AmazonSQS" name="amazon-sqs"/>
  <technology class="org.apache.tapestry5.modules.TapestryModule" name="tapestry5"/>
  <technology class="com.google.gwt.core.client.EntryPoint" name="gwt"/>
  <technology class="org.apache.struts2.StrutsConstants" name="struts2"/>
  <technology class="javax.faces.bean.ManagedBean" name="jsf"/>
  <technology class="com.vaadin.flow.component.Component" name="vaadin-flow"/>
  <technology class="feign.RequestLine" name="openfeign"/>
  <technology class="io.github.jhipster.config.JHipsterProperties" name="jhipster"/>
  <technology class="org.apache.spark.SparkConf" name="apache-spark"/>
  <technology class="org.apache.flink.util.Collector" name="apache-flink"/>
  <technology class="org.fluentlenium.core.annotation.Page" name="fluentlenium"/>
  <technology class="org.testcontainers.containers.Container" name="testcontainers"/>
  <technology class="com.blade.Blade" name="blade"/>
  <technology class="kotlin.reflect.KClass" name="kotlin"/>
  <technology class="org.eclipse.microprofile.config.Config" name="microprofile-config"/>
  <technology class="javax.enterprise.context.ApplicationScoped" name="javax-cdi"/>
  <technology class="jakarta.enterprise.context.ApplicationScoped" name="jakarta-cdi"/>
  <technology class="javax.jms.Connection" name="javax-jms"/>
  <technology class="jakarta.jms.Connection" name="jakarta-jms"/>
  <technology class="javax.persistence.Entity" name="javax-jpa"/>
  <technology class="jakarta.persistence.Entity" name="jakarta-jpa"/>
  <technology class="javax.ws.rs.Path" name="javax-rs"/>
  <technology class="jakarta.ws.rs.Path" name="jakarta-rs"/>
  <technology class="io.r2dbc.spi.Connection" name="r2dbc"/>
  <technology class="org.osgi.framework.BundleActivator" name="osgi"/>
  <technology class="org.kodein.di.Kodein" name="kodein"/>
  <technology class="org.http4k.core.Uri" name="http4k"/>
  <technology class="io.reactivex.rxjava3.kotlin.Singles" name="rxkotlin"/>
  <technology class="scala.App" name="scala"/>
  <technology class="play.api.mvc.AbstractController" name="play2"/>
  <technology class="com.lightbend.lagom.javadsl.api.Service" name="lagom-java"/>
  <technology class="com.lightbend.lagom.scaladsl.api.Service" name="lagom-scala"/>
  <technology class="io.kotless.HttpMethod" name="kotless"/>
  <technology class="org.jetbrains.spek.api.Spek" name="spek"/>
  <technology class="org.koin.core.Koin" name="koin"/>
  <technology class="com.thoughtworks.gauge.Step" name="gauge-java"/>
  <technology class="org.apache.deltaspike.core.api.config.DeltaSpikeConfig" name="apache-deltaspike"/>
  <technology class="org.apache.deltaspike.data.api.EntityRepository" name="apache-deltaspike-data"/>
  <technology class="graphql.GraphQL" name="graphql-java"/>
  <technology class="com.hexagonkt.http.Path" name="hexagonkt"/>
  <technology class="org.jdbi.v3.core.Jdbi" name="jdbi"/>
  <technology class="org.jooby.Jooby" name="jooby"/>
  <technology class="org.optaplanner.core.api.solver.Solver" name="optaplanner"/>
  <technology class="org.flowable.engine.repository.Model" name="flowable-bpm"/>
  <technology class="org.activiti.engine.repository.Model" name="activiti-bpm"/>
  <technology class="org.camunda.bpm.model.bpmn.Bpmn" name="camunda-bpm"/>
  <technology class="org.kie.api.runtime.manager.RuntimeEngine" name="jbpm"/>
  <technology class="org.apache.ignite.Ignite" name="apache-ignite"/>
  <technology class="com.hazelcast.config.Config" name="hazelcast"/>
  <technology class="com.hazelcast.jet.pipeline.Pipeline" name="hazelcast-jet"/>
  <technology class="com.oracle.coherence.persistence.PersistentStore" name="coherence"/>
  <technology class="io.debezium.engine.ChangeEvent" name="debezium"/>
  <technology class="one.util.streamex.StreamEx" name="streamex"/>
  <technology class="com.jayway.jsonpath.JsonPath" name="json-path"/>
  <technology class="org.hibernate.Hibernate" name="hibernate"/>
  <technology class="org.eclipse.persistence.jpa.PersistenceProvider" name="eclipselink-jpa"/>
  <technology class="org.jboss.arquillian.container.test.api.Deployment" name="arquillian"/>
  <technology class="org.flywaydb.core.Flyway" name="flyway"/>
  <technology class="liquibase.Liquibase" name="liquibase"/>
  <technology class="jodd.db.DbQuery" name="jodd-db"/>
  <technology class="com.querydsl.core.Query" name="querydsl"/>
  <technology class="org.apache.camel.Processor" name="apache-camel"/>
  <technology class="io.rsocket.RSocket" name="rsocket-java"/>
  <technology class="com.google.api.client.http.HttpResponse" name="google-http-java-client"/>
  <technology class="com.google.cloud.pubsub.v1.MessageReceiver" name="google-cloud-pubsub"/>
  <technology class="springfox.documentation.oas.annotations.EnableOpenApi" name="springfox"/>
  <technology class="org.apache.rocketmq.common.BrokerConfig" name="apache-rocketmq"/>
  <technology class="io.opentracing.Tracer" name="opentracing"/>
  <technology class="zipkin2.Span" name="zipkin2"/>
  <technology class="io.jaegertracing.Configuration" name="jaeger"/>
  <technology class="lombok.Getter" name="lombok"/>
  <technology class="org.jboss.weld.Container" name="weld"/>
  <technology class="jakarta.faces.view.ViewScoped" name="jakarta-jsf"/>
  <technology class="javax.ejb.EJB" name="javax-ejb"/>
  <technology class="jakarta.ejb.EJB" name="jakarta-ejb"/>
  <technology class="javax.websocket.server.ServerEndpoint" name="javax-websocket"/>
  <technology class="jakarta.websocket.server.ServerEndpoint" name="jakarta-websocket"/>
  <technology class="jakarta.jws.WebService" name="jakarta-ws"/>
  <technology class="javax.batch.api.BatchProperty" name="javax-batch"/>
  <technology class="jakarta.batch.api.BatchProperty" name="jakarta-batch"/>
  <technology class="javax.validation.Constraint" name="javax-validation"/>
  <technology class="jakarta.validation.Constraint" name="jakarta-validation"/>
  <technology class="io.kotest.core.annotation.Tags" name="kotest"/>
  <technology class="org.datanucleus.api.jpa.PersistenceProviderImpl" name="datanucleus-jpa"/>
  <technology class="org.apache.openjpa.persistence.PersistenceProviderImpl" name="openjpa"/>
  <technology class="com.github.tomakehurst.wiremock.WireMockServer" name="wiremock"/>
  <technology class="org.easymock.Mock" name="easymock"/>
  <technology class="mockit.Mock" name="jmockit"/>
  <technology class="org.mockito.Mock" name="mockito"/>
  <technology class="spock.mock.MockingApi" name="spock"/>
  <technology class="org.hibernate.validator.HibernateValidator" name="hibernate-validator"/>
  <technology class="org.apache.bval.jsr.ApacheValidationProvider" name="apache-bval"/>
  <technology class="org.springframework.kafka.core.KafkaTemplate" name="spring-kafka"/>
  <technology class="org.springframework.amqp.rabbit.core.RabbitTemplate" name="spring-rabbitmq"/>
  <technology class="org.springframework.session.Session" name="spring-session"/>
  <technology class="com.fasterxml.jackson.core.JsonParser" name="jackson"/>
  <technology class="com.google.gson.Gson" name="gson"/>
  <technology class="io.micrometer.core.annotation.Timed" name="micrometer"/>
  <technology class="org.mapstruct.Mapping" name="mapstruct"/>
  <technology class="io.swagger.annotations.Api" name="swagger-v2"/>
  <technology class="io.swagger.v3.oas.annotations.Operation" name="swagger-v3"/>
  <technology class="org.apache.shiro.authc.AuthenticationInfo" name="apache-shiro"/>
  <technology class="arrow.core.Either" name="arrowkt"/>
  <technology class="org.scalatest.Assertions" name="scalatest"/>
  <technology class="org.jetbrains.annotations.Contract" name="jetbrains-annotations"/>
  <technology class="com.microsoft.playwright.Playwright" name="playwright-java"/>
  <technology class="kotlinx.coroutines.CoroutineDispatcher" name="kotlinx-coroutines"/>
  <technology class="kotlinx.serialization.KSerializer" name="kotlinx-serialization"/>
  <technology class="org.jetbrains.exposed.sql.Query" name="exposed"/>
  <technology class="org.ktorm.entity.Entity" name="ktorm"/>
  <technology class="tornadofx.App" name="tornadofx"/>
  <technology class="javafx.scene.Scene" name="javafx"/>
  <technology class="org.mockserver.model.Body" name="mockserver"/>
  <technology class="kotlinx.datetime.Instant" name="kotlinx-datetime"/>
  <technology class="org.springframework.cloud.gateway.route.RouteDefinition" name="spring-cloud-gateway"/>
  <technology class="org.springframework.data.r2dbc.repository.R2dbcRepository" name="spring-data-r2dbc"/>
  <technology class="io.rsocket.RSocket" name="rsocket"/>
  <technology class="io.quarkus.qute.Engine" name="quarkus-qute"/>
  <technology class="io.smallrye.mutiny.Uni" name="smallrye-mutiny"/>
  <technology class="io.opentelemetry.api.OpenTelemetry" name="opentelemetry"/>
  <technology class="javafx.css.Size" name="openjfx"/>
  <technology class="com.google.protobuf.Message" name="protobuf"/>
  <technology class="org.springframework.data.rest.core.annotation.RepositoryRestResource" name="spring-data-rest"/>
  <technology class="org.hibernate.reactive.session.ReactiveSession" name="hibernate-reactive"/>
  <technology class="org.hibernate.envers.Audited" name="hibernate-envers"/>
  <technology class="io.reactivex.rxjava3.core.Flowable" name="rx-java3"/>
  <technology class="org.springframework.cloud.kubernetes.commons.ConditionalOnKubernetesEnabled" name="spring-cloud-kubernetes"/>
  <technology class="org.springframework.cloud.openfeign.FeignClient" name="spring-cloud-openfeign"/>
  <technology class="org.springframework.cloud.square.retrofit.core.RetrofitClient" name="spring-cloud-retrofit"/>
  <technology class="org.springframework.cloud.stream.binder.Binding" name="spring-cloud-stream"/>
  <technology class="org.springframework.web.socket.WebSocketMessage" name="spring-websocket"/>
  <technology class="org.springframework.graphql.data.GraphQlRepository" name="spring-graphql"/>
  <technology class="jakarta.nosql.mapping.Column" name="jakarta-nosql"/>
  <technology class="org.aspectj.lang.annotation.Aspect" name="aspectj"/>
  <technology class="org.axonframework.commandhandling.CommandHandler" name="axonframework"/>
</technologies>