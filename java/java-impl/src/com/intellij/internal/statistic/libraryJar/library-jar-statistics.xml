<technologies>
  <technology name="activemq" class="org.apache.activemq.ActiveMQConnection"/>
  <technology name="activiti-bpm" class="org.activiti.engine.repository.Model"/>
  <technology name="akka-http" class="akka.http.scaladsl.Http"/>
  <technology name="akka-java" class="akka.actor.Actor"/>
  <technology name="allure1" class="ru.yandex.qatools.allure.annotations.Step"/>
  <technology name="allure2" class="io.qameta.allure.Step"/>
  <technology name="apache-bval" class="org.apache.bval.jsr.ApacheValidationProvider"/>
  <technology name="apache-camel" class="org.apache.camel.Processor"/>
  <technology name="apache-deltaspike" class="org.apache.deltaspike.core.api.config.DeltaSpikeConfig"/>
  <technology name="apache-deltaspike-data" class="org.apache.deltaspike.data.api.EntityRepository"/>
  <technology name="apache-dubbo" class="org.apache.dubbo.config.ServiceConfig"/>
  <technology name="apache-flink" class="org.apache.flink.util.Collector"/>
  <technology name="apache-http" class="org.apache.http.HttpEntity"/>
  <technology name="apache-ignite" class="org.apache.ignite.Ignite"/>
  <technology name="apache-rocketmq" class="org.apache.rocketmq.common.BrokerConfig"/>
  <technology name="apache-shiro" class="org.apache.shiro.authc.AuthenticationInfo"/>
  <technology name="apache-spark" class="org.apache.spark.SparkConf"/>
  <technology name="apache-thrift" class="org.apache.thrift.transport.TTransport"/>
  <technology name="apache-tiles" class="org.apache.tiles.definition.DefinitionsFactory"/>
  <technology name="appium" class="io.appium.java_client.MobileElement"/>
  <technology name="armeria" class="com.linecorp.armeria.server.Server"/>
  <technology name="arquillian" class="org.jboss.arquillian.container.test.api.Deployment"/>
  <technology name="arrowkt" class="arrow.core.Either"/>
  <technology name="aspectj" class="org.aspectj.lang.annotation.Aspect"/>
  <technology name="atlas" class="io.qameta.atlas.core.Atlas"/>
  <technology name="aws-sqs" class="com.amazonaws.services.sqs.AmazonSQS"/>
  <technology name="axonframework" class="org.axonframework.commandhandling.CommandHandler"/>
  <technology name="blade" class="com.blade.Blade"/>
  <technology name="breeze" class="breeze.linalg.DenseVector"/>
  <technology name="camunda-bpm" class="org.camunda.bpm.model.bpmn.Bpmn"/>
  <technology name="cats" class="cats.Functor"/>
  <technology name="citrus" class="com.consol.citrus.Citrus"/>
  <technology name="coherence" class="com.oracle.coherence.persistence.PersistentStore"/>
  <technology name="consul" class="com.ecwid.consul.v1.ConsulClient"/>
  <technology name="cucumber" class="io.cucumber.java.Before"/>
  <technology name="datanucleus-jpa" class="org.datanucleus.api.jpa.PersistenceProviderImpl"/>
  <technology name="debezium" class="io.debezium.engine.ChangeEvent"/>
  <technology name="drools" class="org.drools.core.spi.KnowledgeHelper"/>
  <technology name="dropwizard" class="io.dropwizard.Application"/>
  <technology name="easymock" class="org.easymock.Mock"/>
  <technology name="eclipselink-jpa" class="org.eclipse.persistence.jpa.PersistenceProvider"/>
  <technology name="eureka" class="com.netflix.discovery.EurekaClient"/>
  <technology name="exposed" class="org.jetbrains.exposed.sql.Query"/>
  <technology name="finagle" class="com.twitter.finagle.Client"/>
  <technology name="flowable-bpm" class="org.flowable.engine.repository.Model"/>
  <technology name="fluentlenium" class="org.fluentlenium.core.annotation.Page"/>
  <technology name="flyway" class="org.flywaydb.core.Flyway"/>
  <technology name="freemarker" class="freemarker.template.Template"/>
  <technology name="fs2" class="fs2.Stream"/>
  <technology name="gauge-java" class="com.thoughtworks.gauge.Step"/>
  <technology name="geb" class="geb.Browser"/>
  <technology name="google-cloud-pubsub" class="com.google.cloud.pubsub.v1.MessageReceiver"/>
  <technology name="google-http-java-client" class="com.google.api.client.http.HttpResponse"/>
  <technology name="gorm" class="org.grails.datastore.gorm.GormInstanceApi"/>
  <technology name="grails" class="grails.core.GrailsClass"/>
  <technology name="graphql-java" class="graphql.GraphQL"/>
  <technology name="groovy" class="groovy.lang.GroovyObject"/>
  <technology name="grpc" class="io.grpc.ManagedChannel"/>
  <technology name="gson" class="com.google.gson.Gson"/>
  <technology name="guice" class="com.google.inject.Provider"/>
  <technology name="gwt" class="com.google.gwt.core.client.EntryPoint"/>
  <technology name="hazelcast" class="com.hazelcast.config.Config"/>
  <technology name="hazelcast-jet" class="com.hazelcast.jet.pipeline.Pipeline"/>
  <technology name="helidon" class="io.helidon.webserver.WebServer"/>
  <technology name="hexagonkt" class="com.hexagonkt.http.Path"/>
  <technology name="hibernate" class="org.hibernate.Hibernate"/>
  <technology name="hibernate-envers" class="org.hibernate.envers.Audited"/>
  <technology name="hibernate-reactive" class="org.hibernate.reactive.session.ReactiveSession"/>
  <technology name="hibernate-validator" class="org.hibernate.validator.HibernateValidator"/>
  <technology name="htmlelements" class="ru.yandex.qatools.htmlelements.annotations.Name"/>
  <technology name="http4k" class="org.http4k.core.Uri"/>
  <technology name="http4s" class="org.http4s.Http"/>
  <technology name="hystrix" class="com.netflix.hystrix.HystrixCommand"/>
  <technology name="jackson" class="com.fasterxml.jackson.core.JsonParser"/>
  <technology name="jaeger" class="io.jaegertracing.Configuration"/>
  <technology name="jakarta-batch" class="jakarta.batch.api.BatchProperty"/>
  <technology name="jakarta-cdi" class="jakarta.enterprise.context.ApplicationScoped"/>
  <technology name="jakarta-ejb" class="jakarta.ejb.EJB"/>
  <technology name="jakarta-jms" class="jakarta.jms.Connection"/>
  <technology name="jakarta-jpa" class="jakarta.persistence.Entity"/>
  <technology name="jakarta-jsf" class="jakarta.faces.view.ViewScoped"/>
  <technology name="jakarta-nosql" class="jakarta.nosql.mapping.Column"/>
  <technology name="jakarta-rs" class="jakarta.ws.rs.Path"/>
  <technology name="jakarta-validation" class="jakarta.validation.Constraint"/>
  <technology name="jakarta-websocket" class="jakarta.websocket.server.ServerEndpoint"/>
  <technology name="jakarta-ws" class="jakarta.jws.WebService"/>
  <technology name="javafx" class="javafx.scene.Scene"/>
  <technology name="javalin" class="io.javalin.Javalin"/>
  <technology name="javax-batch" class="javax.batch.api.BatchProperty"/>
  <technology name="javax-cdi" class="javax.enterprise.context.ApplicationScoped"/>
  <technology name="javax-ejb" class="javax.ejb.EJB"/>
  <technology name="javax-jms" class="javax.jms.Connection"/>
  <technology name="javax-jpa" class="javax.persistence.Entity"/>
  <technology name="javax-jsf" class="javax.faces.bean.ManagedBean"/>
  <technology name="javax-rs" class="javax.ws.rs.Path"/>
  <technology name="javax-validation" class="javax.validation.Constraint"/>
  <technology name="javax-websocket" class="javax.websocket.server.ServerEndpoint"/>
  <technology name="jbehave" class="org.jbehave.core.annotations.Then"/>
  <technology name="jbpm" class="org.kie.api.runtime.manager.RuntimeEngine"/>
  <technology name="jdbi" class="org.jdbi.v3.core.Jdbi"/>
  <technology name="jdi-light" class="com.epam.jdi.light.elements.pageobjects.annotations.locators.UI"/>
  <technology name="jetbrains-annotations" class="org.jetbrains.annotations.Contract"/>
  <technology name="jhipster" class="io.github.jhipster.config.JHipsterProperties"/>
  <technology name="jmockit" class="mockit.Mock"/>
  <technology name="jodd-db" class="jodd.db.DbQuery"/>
  <technology name="jooby" class="org.jooby.Jooby"/>
  <technology name="jooq" class="org.jooq.DSLContext"/>
  <technology name="json-path" class="com.jayway.jsonpath.JsonPath"/>
  <technology name="junit4" class="org.junit.Test"/>
  <technology name="junit5" class="org.junit.jupiter.api.Test"/>
  <technology name="kafka" class="org.apache.kafka.clients.consumer.Consumer"/>
  <technology name="karate" class="com.intuit.karate.Runner"/>
  <technology name="kodein" class="org.kodein.di.Kodein"/>
  <technology name="koin" class="org.koin.core.Koin"/>
  <technology name="kotest" class="io.kotest.core.annotation.Tags"/>
  <technology name="kotless" class="io.kotless.HttpMethod"/>
  <technology name="kotlin" class="kotlin.reflect.KClass"/>
  <technology name="kotlinx-coroutines" class="kotlinx.coroutines.CoroutineDispatcher"/>
  <technology name="kotlinx-datetime" class="kotlinx.datetime.Instant"/>
  <technology name="kotlinx-serialization" class="kotlinx.serialization.KSerializer"/>
  <technology name="ktor" class="io.ktor.application.Application"/>
  <technology name="ktorm" class="org.ktorm.entity.Entity"/>
  <technology name="lagom-java" class="com.lightbend.lagom.javadsl.api.Service"/>
  <technology name="lagom-scala" class="com.lightbend.lagom.scaladsl.api.Service"/>
  <technology name="liquibase" class="liquibase.Liquibase"/>
  <technology name="lombok" class="lombok.Getter"/>
  <technology name="mapstruct" class="org.mapstruct.Mapping"/>
  <technology name="micrometer" class="io.micrometer.core.annotation.Timed"/>
  <technology name="micronaut" class="io.micronaut.http.server.HttpServerConfiguration"/>
  <technology name="microprofile" class="org.eclipse.microprofile.config.Config"/>
  <technology name="mockito" class="org.mockito.Mock"/>
  <technology name="mockserver" class="org.mockserver.model.Body"/>
  <technology name="monix" class="monix.reactive.Observable"/>
  <technology name="munit" class="munit.FunSuite"/>
  <technology name="mybatis" class="org.apache.ibatis.annotations.Select"/>
  <technology name="netty" class="io.netty.channel.AbstractChannel"/>
  <technology name="okhttp3" class="okhttp3.Request"/>
  <technology name="openfeign" class="feign.RequestLine"/>
  <technology name="openjfx" class="javafx.css.Size"/>
  <technology name="openjpa" class="org.apache.openjpa.persistence.PersistenceProviderImpl"/>
  <technology name="opentelemetry" class="io.opentelemetry.api.OpenTelemetry"/>
  <technology name="opentracing" class="io.opentracing.Tracer"/>
  <technology name="optaplanner" class="org.optaplanner.core.api.solver.Solver"/>
  <technology name="osgi" class="org.osgi.framework.BundleActivator"/>
  <technology name="play2" class="play.api.mvc.AbstractController"/>
  <technology name="playwright-java" class="com.microsoft.playwright.Playwright"/>
  <technology name="protobuf" class="com.google.protobuf.Message"/>
  <technology name="quarkus" class="io.quarkus.runtime.Application"/>
  <technology name="quarkus-qute" class="io.quarkus.qute.Engine"/>
  <technology name="querydsl" class="com.querydsl.core.Query"/>
  <technology name="r2dbc" class="io.r2dbc.spi.Connection"/>
  <technology name="rabbitmq" class="com.rabbitmq.client.Channel"/>
  <technology name="reactor" class="reactor.core.publisher.Mono"/>
  <technology name="reactor-kotlin-ext" class="reactor.kotlin.core.publisher.FluxExtensionsKt"/>
  <technology name="restassured" class="io.restassured.RestAssured"/>
  <technology name="retrofit2" class="retrofit2.Retrofit"/>
  <technology name="robotframework" class="org.robotframework.javalib.annotation.RobotKeyword"/>
  <technology name="rsocket" class="io.rsocket.RSocket"/>
  <technology name="rsocket-java" class="io.rsocket.RSocket"/>
  <technology name="rxjava" class="io.reactivex.Flowable"/>
  <technology name="rxjava3" class="io.reactivex.rxjava3.core.Flowable"/>
  <technology name="rxkotlin" class="io.reactivex.rxjava3.kotlin.Singles"/>
  <technology name="scala" class="scala.App"/>
  <technology name="scalacheck" class="org.scalacheck.Gen"/>
  <technology name="scalamock" class="org.scalamock.scalatest.MockFactory"/>
  <technology name="scalatest" class="org.scalatest.Assertions"/>
  <technology name="scalatra" class="org.scalatra.ScalatraServlet"/>
  <technology name="scalaz" class="scalaz.Scalaz$"/>
  <technology name="selenide" class="com.codeborne.selenide.Selenide"/>
  <technology name="selenium" class="org.openqa.selenium.WebDriver"/>
  <technology name="serenity" class="net.thucydides.core.annotations.Step"/>
  <technology name="shapeless" class="shapeless.HList"/>
  <technology name="slick" class="slick.sql.SqlAction"/>
  <technology name="smallrye-mutiny" class="io.smallrye.mutiny.Uni"/>
  <technology name="spark-java" class="spark.Spark"/>
  <technology name="specs2" class="org.specs2.Specification"/>
  <technology name="spek" class="org.jetbrains.spek.api.Spek"/>
  <technology name="sphinx" class="org.axonframework.commandhandling.CommandHandler"/>
  <technology name="spock" class="spock.mock.MockingApi"/>
  <technology name="spring-amqp" class="org.springframework.amqp.core.AbstractExchange"/>
  <technology name="spring-amqp" class="org.springframework.amqp.core.Message"/>
  <technology name="spring-batch" class="org.springframework.batch.core.Job"/>
  <technology name="spring-boot" class="org.springframework.boot.SpringApplication"/>
  <technology name="spring-cloud" class="org.springframework.cloud.client.SpringCloudApplication"/>
  <technology name="spring-cloud-gateway" class="org.springframework.cloud.gateway.route.RouteDefinition"/>
  <technology name="spring-cloud-kubernetes" class="org.springframework.cloud.kubernetes.commons.ConditionalOnKubernetesEnabled"/>
  <technology name="spring-cloud-openfeign" class="org.springframework.cloud.openfeign.FeignClient"/>
  <technology name="spring-cloud-retrofit" class="org.springframework.cloud.square.retrofit.core.RetrofitClient"/>
  <technology name="spring-cloud-stream" class="org.springframework.cloud.stream.binder.Binding"/>
  <technology name="spring-core" class="org.springframework.context.ApplicationContext"/>
  <technology name="spring-data-commons" class="org.springframework.data.repository.Repository"/>
  <technology name="spring-data-hadoop" class="org.springframework.data.hadoop.HadoopException"/>
  <technology name="spring-data-jdbc-ext" class="org.springframework.data.jdbc.support.DatabaseType"/>
  <technology name="spring-data-jpa" class="org.springframework.data.jpa.repository.Query"/>
  <technology name="spring-data-mongo" class="org.springframework.data.mongodb.MongoDbFactory"/>
  <technology name="spring-data-neo4j" class="org.springframework.data.neo4j.config.Neo4jConfiguration"/>
  <technology name="spring-data-r2dbc" class="org.springframework.data.r2dbc.repository.R2dbcRepository"/>
  <technology name="spring-data-rest" class="org.springframework.data.rest.core.annotation.RepositoryRestResource"/>
  <technology name="spring-data-solr" class="org.springframework.data.solr.core.SolrTemplate"/>
  <technology name="spring-graphql" class="org.springframework.graphql.data.GraphQlRepository"/>
  <technology name="spring-integration" class="org.springframework.integration.channel.DirectChannel"/>
  <technology name="spring-integration-amqp" class="org.springframework.integration.amqp.channel.AbstractAmqpChannel"/>
  <technology name="spring-kafka" class="org.springframework.kafka.core.KafkaTemplate"/>
  <technology name="spring-mvc" class="org.springframework.web.context.WebApplicationContext"/>
  <technology name="spring-osgi" class="org.springframework.osgi.OsgiException"/>
  <technology name="spring-rabbitmq" class="org.springframework.amqp.rabbit.core.RabbitTemplate"/>
  <technology name="spring-security" class="org.springframework.security.config.BeanIds"/>
  <technology name="spring-security-oauth2" class="org.springframework.security.oauth2.provider.OAuth2Authentication"/>
  <technology name="spring-session" class="org.springframework.session.Session"/>
  <technology name="spring-webflow" class="org.springframework.webflow.execution.Action"/>
  <technology name="spring-webflux" class="org.springframework.web.reactive.HandlerResult"/>
  <technology name="spring-websocket" class="org.springframework.web.socket.WebSocketMessage"/>
  <technology name="spring-ws" class="org.springframework.ws.WebServiceException"/>
  <technology name="springOldJavaConfig" class="org.springframework.config.java.annotation.Bean"/>
  <technology name="springfox" class="springfox.documentation.oas.annotations.EnableOpenApi"/>
  <technology name="streamex" class="one.util.streamex.StreamEx"/>
  <technology name="struts2" class="org.apache.struts2.StrutsConstants"/>
  <technology name="sttp" class="sttp.client3.Response"/>
  <technology name="swagger-v2" class="io.swagger.annotations.Api"/>
  <technology name="swagger-v3" class="io.swagger.v3.oas.annotations.Operation"/>
  <technology name="tapestry5" class="org.apache.tapestry5.modules.TapestryModule"/>
  <technology name="testcontainers" class="org.testcontainers.containers.Container"/>
  <technology name="testng" class="org.testng.annotations.Test"/>
  <technology name="thymeleaf" class="org.thymeleaf.dialect.IDialect"/>
  <technology name="tornadofx" class="tornadofx.App"/>
  <technology name="twitter-util" class="com.twitter.util.Future"/>
  <technology name="unfiltered" class="unfiltered.response.ResponseString"/>
  <technology name="unirest" class="kong.unirest.Client"/>
  <technology name="utest" class="utest.TestSuite"/>
  <technology name="vaadin-flow" class="com.vaadin.flow.component.Component"/>
  <technology name="velocity" class="org.apache.velocity.Template"/>
  <technology name="vertx" class="io.vertx.core.Vertx"/>
  <technology name="webtau-browser" class="org.testingisdocumenting.webtau.browser.Browser"/>
  <technology name="webtau-http" class="org.testingisdocumenting.webtau.http.Http"/>
  <technology name="weld" class="org.jboss.weld.Container"/>
  <technology name="wiremock" class="com.github.tomakehurst.wiremock.WireMockServer"/>
  <technology name="zio" class="zio.ZIO"/>
  <technology name="zio-test" class="zio.test.Spec"/>
  <technology name="zipkin2" class="zipkin2.Span"/>
  <technology name="zookeeper" class="org.apache.zookeeper.ZooKeeper"/>
  <technology name="zuul" class="com.netflix.zuul.FilterFactory"/>
</technologies>