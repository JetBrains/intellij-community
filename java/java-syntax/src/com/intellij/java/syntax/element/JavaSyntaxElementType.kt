// Copyright 2000-2025 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.
package com.intellij.java.syntax.element

import com.intellij.platform.syntax.SyntaxElementType
import kotlin.jvm.JvmField

/**
 * @see com.intellij.psi.impl.source.tree.JavaElementType
 */
object JavaSyntaxElementType {
  @JvmField val JAVA_FILE: SyntaxElementType = SyntaxElementType("JAVA_FILE")
  @JvmField val CLASS: SyntaxElementType = SyntaxElementType("CLASS")
  @JvmField val IMPLICIT_CLASS: SyntaxElementType = SyntaxElementType("IMPLICIT_CLASS")
  @JvmField val ANONYMOUS_CLASS: SyntaxElementType = SyntaxElementType("ANONYMOUS_CLASS")
  @JvmField val ENUM_CONSTANT_INITIALIZER: SyntaxElementType = SyntaxElementType("ENUM_CONSTANT_INITIALIZER")
  @JvmField val TYPE_PARAMETER_LIST: SyntaxElementType = SyntaxElementType("TYPE_PARAMETER_LIST")
  @JvmField val TYPE_PARAMETER: SyntaxElementType = SyntaxElementType("TYPE_PARAMETER")
  @JvmField val IMPORT_LIST: SyntaxElementType = SyntaxElementType("IMPORT_LIST")
  @JvmField val IMPORT_STATEMENT: SyntaxElementType = SyntaxElementType("IMPORT_STATEMENT")
  @JvmField val IMPORT_STATIC_STATEMENT: SyntaxElementType = SyntaxElementType("IMPORT_STATIC_STATEMENT")
  @JvmField val IMPORT_MODULE_STATEMENT: SyntaxElementType = SyntaxElementType("IMPORT_MODULE_STATEMENT")
  @JvmField val MODIFIER_LIST: SyntaxElementType = SyntaxElementType("MODIFIER_LIST")
  @JvmField val ANNOTATION: SyntaxElementType = SyntaxElementType("ANNOTATION")
  @JvmField val NAME_VALUE_PAIR: SyntaxElementType = SyntaxElementType("NAME_VALUE_PAIR")
  @JvmField val LITERAL_EXPRESSION: SyntaxElementType = SyntaxElementType("LITERAL_EXPRESSION")
  @JvmField val ANNOTATION_PARAMETER_LIST: SyntaxElementType = SyntaxElementType("ANNOTATION_PARAMETER_LIST")
  @JvmField val EXTENDS_LIST: SyntaxElementType = SyntaxElementType("EXTENDS_LIST")
  @JvmField val IMPLEMENTS_LIST: SyntaxElementType = SyntaxElementType("IMPLEMENTS_LIST")
  @JvmField val FIELD: SyntaxElementType = SyntaxElementType("FIELD")
  @JvmField val ENUM_CONSTANT: SyntaxElementType = SyntaxElementType("ENUM_CONSTANT")
  @JvmField val METHOD: SyntaxElementType = SyntaxElementType("METHOD")
  @JvmField val ANNOTATION_METHOD: SyntaxElementType = SyntaxElementType("ANNOTATION_METHOD")
  @JvmField val CLASS_INITIALIZER: SyntaxElementType = SyntaxElementType("CLASS_INITIALIZER")
  @JvmField val PARAMETER: SyntaxElementType = SyntaxElementType("PARAMETER")
  @JvmField val PARAMETER_LIST: SyntaxElementType = SyntaxElementType("PARAMETER_LIST")
  @JvmField val EXTENDS_BOUND_LIST: SyntaxElementType = SyntaxElementType("EXTENDS_BOUND_LIST")
  @JvmField val THROWS_LIST: SyntaxElementType = SyntaxElementType("THROWS_LIST")
  @JvmField val LAMBDA_EXPRESSION: SyntaxElementType = SyntaxElementType("LAMBDA_EXPRESSION")
  @JvmField val METHOD_REF_EXPRESSION: SyntaxElementType = SyntaxElementType("METHOD_REF_EXPRESSION")
  @JvmField val MODULE: SyntaxElementType = SyntaxElementType("MODULE")
  @JvmField val REQUIRES_STATEMENT: SyntaxElementType = SyntaxElementType("REQUIRES_STATEMENT")
  @JvmField val EXPORTS_STATEMENT: SyntaxElementType = SyntaxElementType("EXPORTS_STATEMENT")
  @JvmField val OPENS_STATEMENT: SyntaxElementType = SyntaxElementType("OPENS_STATEMENT")
  @JvmField val USES_STATEMENT: SyntaxElementType = SyntaxElementType("USES_STATEMENT")
  @JvmField val PROVIDES_STATEMENT: SyntaxElementType = SyntaxElementType("PROVIDES_STATEMENT")
  @JvmField val PROVIDES_WITH_LIST: SyntaxElementType = SyntaxElementType("PROVIDES_WITH_LIST")
  @JvmField val RECORD_COMPONENT: SyntaxElementType = SyntaxElementType("RECORD_COMPONENT")
  @JvmField val RECORD_HEADER: SyntaxElementType = SyntaxElementType("RECORD_HEADER")
  @JvmField val PERMITS_LIST: SyntaxElementType = SyntaxElementType("PERMITS_LIST")

  @JvmField val IMPORT_STATIC_REFERENCE: SyntaxElementType = SyntaxElementType("IMPORT_STATIC_REFERENCE")
  @JvmField val TYPE: SyntaxElementType = SyntaxElementType("TYPE")
  @JvmField val DIAMOND_TYPE: SyntaxElementType = SyntaxElementType("DIAMOND_TYPE")
  @JvmField val REFERENCE_PARAMETER_LIST: SyntaxElementType = SyntaxElementType("REFERENCE_PARAMETER_LIST")
  @JvmField val JAVA_CODE_REFERENCE: SyntaxElementType = SyntaxElementType("JAVA_CODE_REFERENCE")
  @JvmField val PACKAGE_STATEMENT: SyntaxElementType = SyntaxElementType("PACKAGE_STATEMENT")
  @JvmField val LOCAL_VARIABLE: SyntaxElementType = SyntaxElementType("LOCAL_VARIABLE")
  @JvmField val REFERENCE_EXPRESSION: SyntaxElementType = SyntaxElementType("REFERENCE_EXPRESSION")
  @JvmField val THIS_EXPRESSION: SyntaxElementType = SyntaxElementType("THIS_EXPRESSION")
  @JvmField val SUPER_EXPRESSION: SyntaxElementType = SyntaxElementType("SUPER_EXPRESSION")
  @JvmField val PARENTH_EXPRESSION: SyntaxElementType = SyntaxElementType("PARENTH_EXPRESSION")
  @JvmField val METHOD_CALL_EXPRESSION: SyntaxElementType = SyntaxElementType("METHOD_CALL_EXPRESSION")
  @JvmField val TYPE_CAST_EXPRESSION: SyntaxElementType = SyntaxElementType("TYPE_CAST_EXPRESSION")
  @JvmField val PREFIX_EXPRESSION: SyntaxElementType = SyntaxElementType("PREFIX_EXPRESSION")
  @JvmField val POSTFIX_EXPRESSION: SyntaxElementType = SyntaxElementType("POSTFIX_EXPRESSION")
  @JvmField val BINARY_EXPRESSION: SyntaxElementType = SyntaxElementType("BINARY_EXPRESSION")
  @JvmField val POLYADIC_EXPRESSION: SyntaxElementType = SyntaxElementType("POLYADIC_EXPRESSION")
  @JvmField val CONDITIONAL_EXPRESSION: SyntaxElementType = SyntaxElementType("CONDITIONAL_EXPRESSION")
  @JvmField val ASSIGNMENT_EXPRESSION: SyntaxElementType = SyntaxElementType("ASSIGNMENT_EXPRESSION")
  @JvmField val NEW_EXPRESSION: SyntaxElementType = SyntaxElementType("NEW_EXPRESSION")
  @JvmField val ARRAY_ACCESS_EXPRESSION: SyntaxElementType = SyntaxElementType("ARRAY_ACCESS_EXPRESSION")
  @JvmField val ARRAY_INITIALIZER_EXPRESSION: SyntaxElementType = SyntaxElementType("ARRAY_INITIALIZER_EXPRESSION")
  @JvmField val INSTANCE_OF_EXPRESSION: SyntaxElementType = SyntaxElementType("INSTANCE_OF_EXPRESSION")
  @JvmField val CLASS_OBJECT_ACCESS_EXPRESSION: SyntaxElementType = SyntaxElementType("CLASS_OBJECT_ACCESS_EXPRESSION")

  @JvmField val TEMPLATE_EXPRESSION: SyntaxElementType = SyntaxElementType("TEMPLATE_EXPRESSION")

  @JvmField val TEMPLATE: SyntaxElementType = SyntaxElementType("TEMPLATE")

  @JvmField val EMPTY_EXPRESSION: SyntaxElementType = SyntaxElementType("EMPTY_EXPRESSION")
  @JvmField val EXPRESSION_LIST: SyntaxElementType = SyntaxElementType("EXPRESSION_LIST")
  @JvmField val EMPTY_STATEMENT: SyntaxElementType = SyntaxElementType("EMPTY_STATEMENT")
  @JvmField val BLOCK_STATEMENT: SyntaxElementType = SyntaxElementType("BLOCK_STATEMENT")
  @JvmField val EXPRESSION_STATEMENT: SyntaxElementType = SyntaxElementType("EXPRESSION_STATEMENT")
  @JvmField val EXPRESSION_LIST_STATEMENT: SyntaxElementType = SyntaxElementType("EXPRESSION_LIST_STATEMENT")
  @JvmField val DECLARATION_STATEMENT: SyntaxElementType = SyntaxElementType("DECLARATION_STATEMENT")
  @JvmField val IF_STATEMENT: SyntaxElementType = SyntaxElementType("IF_STATEMENT")
  @JvmField val WHILE_STATEMENT: SyntaxElementType = SyntaxElementType("WHILE_STATEMENT")
  @JvmField val FOR_STATEMENT: SyntaxElementType = SyntaxElementType("FOR_STATEMENT")
  @JvmField val FOREACH_STATEMENT: SyntaxElementType = SyntaxElementType("FOREACH_STATEMENT")
  @JvmField val FOREACH_PATTERN_STATEMENT: SyntaxElementType = SyntaxElementType("FOREACH_PATTERN_STATEMENT")
  @JvmField val DO_WHILE_STATEMENT: SyntaxElementType = SyntaxElementType("DO_WHILE_STATEMENT")
  @JvmField val SWITCH_STATEMENT: SyntaxElementType = SyntaxElementType("SWITCH_STATEMENT")
  @JvmField val SWITCH_EXPRESSION: SyntaxElementType = SyntaxElementType("SWITCH_EXPRESSION")
  @JvmField val SWITCH_LABEL_STATEMENT: SyntaxElementType = SyntaxElementType("SWITCH_LABEL_STATEMENT")
  @JvmField val SWITCH_LABELED_RULE: SyntaxElementType = SyntaxElementType("SWITCH_LABELED_RULE")
  @JvmField val BREAK_STATEMENT: SyntaxElementType = SyntaxElementType("BREAK_STATEMENT")
  @JvmField val YIELD_STATEMENT: SyntaxElementType = SyntaxElementType("YIELD_STATEMENT")
  @JvmField val CONTINUE_STATEMENT: SyntaxElementType = SyntaxElementType("CONTINUE_STATEMENT")
  @JvmField val RETURN_STATEMENT: SyntaxElementType = SyntaxElementType("RETURN_STATEMENT")
  @JvmField val THROW_STATEMENT: SyntaxElementType = SyntaxElementType("THROW_STATEMENT")
  @JvmField val SYNCHRONIZED_STATEMENT: SyntaxElementType = SyntaxElementType("SYNCHRONIZED_STATEMENT")
  @JvmField val TRY_STATEMENT: SyntaxElementType = SyntaxElementType("TRY_STATEMENT")
  @JvmField val RESOURCE_LIST: SyntaxElementType = SyntaxElementType("RESOURCE_LIST")
  @JvmField val RESOURCE_VARIABLE: SyntaxElementType = SyntaxElementType("RESOURCE_VARIABLE")
  @JvmField val RESOURCE_EXPRESSION: SyntaxElementType = SyntaxElementType("RESOURCE_EXPRESSION")
  @JvmField val CATCH_SECTION: SyntaxElementType = SyntaxElementType("CATCH_SECTION")
  @JvmField val LABELED_STATEMENT: SyntaxElementType = SyntaxElementType("LABELED_STATEMENT")
  @JvmField val ASSERT_STATEMENT: SyntaxElementType = SyntaxElementType("ASSERT_STATEMENT")
  @JvmField val ANNOTATION_ARRAY_INITIALIZER: SyntaxElementType = SyntaxElementType("ANNOTATION_ARRAY_INITIALIZER")
  @JvmField val RECEIVER_PARAMETER: SyntaxElementType = SyntaxElementType("RECEIVER")
  @JvmField val MODULE_REFERENCE: SyntaxElementType = SyntaxElementType("MODULE_REFERENCE")
  @JvmField val TYPE_TEST_PATTERN: SyntaxElementType = SyntaxElementType("TYPE_TEST_PATTERN")
  @JvmField val UNNAMED_PATTERN: SyntaxElementType = SyntaxElementType("UNNAMED_PATTERN")
  @JvmField val PATTERN_VARIABLE: SyntaxElementType = SyntaxElementType("PATTERN_VARIABLE")
  @JvmField val DECONSTRUCTION_PATTERN: SyntaxElementType = SyntaxElementType("DECONSTRUCTION_PATTERN")
  @JvmField val DECONSTRUCTION_LIST: SyntaxElementType = SyntaxElementType("DECONSTRUCTION_LIST")
  @JvmField val DECONSTRUCTION_PATTERN_VARIABLE: SyntaxElementType = SyntaxElementType("DECONSTRUCTION_PATTERN_VARIABLE")
  @JvmField val DEFAULT_CASE_LABEL_ELEMENT: SyntaxElementType = SyntaxElementType("DEFAULT_CASE_LABEL_ELEMENT")
  @JvmField val CASE_LABEL_ELEMENT_LIST: SyntaxElementType = SyntaxElementType("CASE_LABEL_ELEMENT_LIST")

  @JvmField val CODE_BLOCK: SyntaxElementType = SyntaxElementType("CODE_BLOCK")

  @JvmField val MEMBERS: SyntaxElementType = SyntaxElementType("MEMBERS")

  @JvmField val STATEMENTS: SyntaxElementType = SyntaxElementType("STATEMENTS")
  @JvmField val EXPRESSION_TEXT: SyntaxElementType = SyntaxElementType("EXPRESSION_TEXT")
  @JvmField val REFERENCE_TEXT: SyntaxElementType = SyntaxElementType("REFERENCE_TEXT")
  @JvmField val TYPE_WITH_DISJUNCTIONS_TEXT: SyntaxElementType = SyntaxElementType("TYPE_WITH_DISJUNCTIONS_TEXT")
  @JvmField val TYPE_WITH_CONJUNCTIONS_TEXT: SyntaxElementType = SyntaxElementType("TYPE_WITH_CONJUNCTIONS_TEXT")
  @JvmField val DUMMY_ELEMENT: SyntaxElementType = SyntaxElementType("DUMMY_ELEMENT")
}