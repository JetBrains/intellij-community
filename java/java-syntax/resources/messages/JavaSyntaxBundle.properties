annotation.name.is.missing=Annotation attribute of the form 'name=value' expected
bound.not.expected=Unexpected bound
catch.without.try='catch' without 'try'
class.literal.expected=.class expected

feature.assertions=Assertions
feature.enums=Enums
feature.generics=Generics
feature.annotations=Annotations
feature.override.interface=@Override in interfaces
feature.static.imports=Static imports
feature.for.each=For-each loops
feature.varargs=Variable arity methods
feature.hex.fp.literals=Hexadecimal floating point literals
feature.diamond.types=Diamond types
feature.multi.catch=Multi-catches
feature.try.with.resources=Try-with-resources
feature.binary.literals=Binary literals
feature.underscores.in.literals=Underscores in literals
feature.string.switch=Strings in 'switch' statements
feature.objects.class=java.util.Objects API
feature.stream.and.optional.api=Stream and Optional API
feature.advanced.collection.api=Lambda methods in collections
feature.with.initial=ThreadLocal.withInitial()
feature.extension.methods=Extension methods
feature.method.references=Method references
feature.lambda.expressions=Lambda expressions
feature.type.annotations=Type annotations
feature.repeating.annotations=Repeating annotations
feature.type.receivers=Receiver parameters
feature.intersections.in.casts=Intersection types in casts
feature.static.interface.calls=Static interface method calls
feature.effectively.final=Effectively final variables
feature.try.with.resources.refs=Resource references
feature.modules=Modules
feature.auto.root.modules=All API-exporting modules are implicitly root modules
feature.private.interface.methods=Private interface methods
feature.utf8.property.files=Property files in UTF-8 encoding
feature.collection.factories=Collection factory methods
feature.lvti=Local variable type inference
feature.var.lambda.parameter='var' in lambda parameters
feature.nestmates=Nest-based access control
feature.text.blocks=Text block literals
feature.text.block.escape.sequences='\\s' escape sequences
feature.enhanced.switch=Enhanced 'switch' blocks
feature.switch.expressions='switch' expressions
feature.serial.annotation=@Serial annotation
feature.records=Records
feature.patterns.instanceof=Patterns in 'instanceof'
feature.sealed.classes=Sealed classes
feature.strictfp=Always-strict floating point semantics
feature.no.this.capture=Inner classes don't capture 'this'
feature.local.interfaces=Local interfaces
feature.local.enums=Local enums
feature.inner.statics=Static declarations in inner classes
feature.patterns.in.switch=Patterns in switch
feature.javadoc.snippets=@snippet in Javadoc
feature.pattern.guard.and.record.patterns=Pattern guards and record patterns
feature.record.patterns.in.for.each=Record patterns in for-each loops
feature.primitive.types.in.patterns=Primitive types in patterns, instanceof and switch
feature.implicit.import.in.implicit.classes=Implicit import in implicitly declared classes
feature.enum.qualified.name.in.switch=Qualified enum as a constant in switch
feature.string.templates=String templates
feature.unnamed.vars=Unnamed patterns and variables
feature.implicit.classes=Implicitly declared classes
feature.instance.main.method=Instance main method
feature.inherited.static.main.method=Inherited static main method
feature.scoped.values=Scoped Values
feature.structured.concurrency=Structured Concurrency
feature.sequenced.collections=Sequenced Collections
feature.classfile.api=ClassFile API
feature.stream.gatherers=Stream Gatherers
feature.foreign.functions=Foreign Function & Memory API
feature.virtual.threads=Virtual Threads
feature.statements.before.super=Statements before super()
feature.module.import.declarations=Module Import Declarations
feature.package.import.shadow.module.import=Import-on-demand over module import
feature.package.transitive.dependency.on.java.base=Transitive dependency on java.base module
feature.valhalla.value.classes=Valhalla value classes
feature.markdown.comment=Markdown Documentation Comments

else.without.if='else' without 'if'
expected.array.initializer=Array initializer expected
expected.boolean.expression=Boolean expression expected
expected.catch.or.finally='catch' or 'finally' expected
expected.class.or.interface='class' or 'interface' expected
expected.class.reference=Class reference expected
expected.colon=':' expected
expected.colon.or.arrow=':' or '->' expected
expected.comma=',' expected
expected.comma.or.rparen=',' or ')' expected
expected.comma.or.semicolon=',' or ';' expected
expected.dot='.' expected
expected.eq='=' expected
expected.expression=Expression expected
expected.case.label.element=Expression, pattern, 'default' or 'null' expected
expected.template.fragment=Template fragment expected
expected.gt='>' expected.
expected.gt.or.comma='>' or ',' expected
expected.identifier=Identifier expected
expected.identifier.or.type=Identifier or type expected
expected.lbrace='{' expected
expected.lbrace.or.semicolon='{' or ';' expected
expected.lbracket='[' expected
expected.lparen='(' expected
expected.lparen.or.lbracket='(' or '[' expected
expected.lt.or.lparen='<' or '(' expected
expected.module.declaration=Module declaration expected
expected.module.statement=Module directive expected
expected.package.reference=Package reference expected
expected.parameter=Parameter expected
expected.parameter.or.rparen=Annotation attribute or ')' expected
expected.rbrace='}' expected
expected.rbracket=']' expected
expected.resource=Resource definition expected
expected.rparen=')' expected
expected.semicolon=';' expected
expected.identifier.or.semicolon=Identifier or ';' expected
expected.statement=Statement expected
expected.switch.label='case', 'default' or '}' expected
expected.switch.rule=Expression, block or throw statement expected
expected.type=Type expected
expected.type.parameter=Type parameter expected
expected.value=Value expected
expected.while='while' expected
expected.with='with' expected
expected.pattern=Pattern expected
finally.without.try='finally' without 'try'
import.statement.identifier.or.asterisk.expected.=Identifier or '*' expected
unexpected.identifier=Unexpected identifier
unexpected.token=Unexpected token
unexpected.tokens=Unexpected tokens
error.message.wildcard.not.expected=Unexpected wildcard

jdk.1.3.language.level.description=1.3 - Plain old Java
jdk.1.4.language.level.description=1.4 - 'assert' keyword
jdk.1.5.language.level.description=5 - 'enum' keyword, generics, autoboxing, etc.
jdk.1.6.language.level.description=6 - @Override in interfaces
jdk.1.7.language.level.description=7 - Diamonds, ARM, multi-catch, etc.
jdk.1.8.language.level.description=8 - Lambdas, type annotations, etc.
jdk.1.9.language.level.description=9 - Modules, private methods in interfaces, etc.
jdk.10.language.level.description=10 - Local variable type inference
jdk.11.language.level.description=11 - Local variable syntax for lambda parameters
jdk.12.language.level.description=12 - No new language features
jdk.13.language.level.description=13 - No new language features
jdk.14.language.level.description=14 - Switch expressions
jdk.15.language.level.description=15 - Text blocks
jdk.16.language.level.description=16 - Records, patterns, local enums and interfaces
jdk.17.language.level.description=17 - Sealed types, always-strict floating-point semantics
jdk.18.language.level.description=18 - JavaDoc snippets
jdk.19.language.level.description=19 - No new language features
jdk.20.language.level.description=20 - No new language features
jdk.21.language.level.description=21 - Record patterns, pattern matching for switch
jdk.21.preview.language.level.description=21 (Preview) - String templates, unnamed classes and instance main methods, etc.
jdk.22.language.level.description=22 - Unnamed variables and patterns
jdk.22.preview.language.level.description=22 (Preview) - Statements before super(), string templates (2nd preview), etc.
jdk.23.language.level.description=23 - Markdown documentation comments
jdk.23.preview.language.level.description=23 (Preview) - Primitive types in patterns, implicitly declared classes, etc.
jdk.24.language.level.description=24 - Stream gatherers
jdk.24.preview.language.level.description=24 (Preview) - Flexible constructor bodies, simple source files, etc.
jdk.X.language.level.description=X - Experimental features
jdk.unsupported.preview.language.level.description={0} (Preview) - Unsupported
