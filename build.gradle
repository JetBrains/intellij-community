/*
 Copyright 2019 Thomas Rosenau

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

plugins {
    id 'idea'
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.2'
    id 'org.jetbrains.grammarkit' version '2018.3'
}

apply from: 'publish.gradle'

group 'de.thomasrosenau'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

wrapper {
    gradleVersion = '5.2'
}

def genSrcPath = 'src/main/generated-java'
File genSrc = file(genSrcPath)
sourceSets.main.java.srcDir genSrc
idea.module.generatedSourceDirs += genSrc

def namespacePath = 'de/thomasrosenau/diffplugin'

task generateDiffLexer(type: GenerateLexer) {
    source 'src/main/java/' + namespacePath + '/lexer/Diff.flex'
    targetDir genSrcPath + '/' + namespacePath
    targetClass 'DiffLexer'
    purgeOldFiles true
}

task generateDiffParser(type: GenerateParser) {
    source 'src/main/java/' + namespacePath + '/parser/Diff.bnf'
    targetRoot genSrcPath
    pathToParser 'DiffParser.java'
    pathToPsiRoot namespacePath + '/psi'
    purgeOldFiles true
}
