dtd.parser.message.left.paren.or.entityref.or.empty.or.any.expected=( or entity ref or EMPTY or ANY expected
dtd.parser.message.literal.public.system.expected=Literal, PUBLIC or SYSTEM expected
dtd.parser.message.name.expected=XML name expected
dtd.parser.message.name.or.entity.ref.expected=XML name or entity ref expected
dtd.parser.message.rparen.expected=) expected
dtd.parser.message.whitespace.expected=Whitespace expected
dtd.parser.message.expected.prologue.tag.termination.expected='?>' expected

xml.parsing.absent.root.tag=Valid XML document must have a root tag
xml.parsing.attribute.value.expected=Attribute value expected
xml.parsing.bad.character=Bad character
xml.parsing.closing.tag.is.not.done=Closing tag is not valid
xml.parsing.closing.tag.matches.nothing=Closing tag matches nothing
xml.parsing.closing.tag.name.missing=Closing tag name is missing
xml.parsing.expected.attribute.eq.sign== expected
xml.parsing.named.element.is.not.closed=Element {0} is not closed
xml.parsing.multiple.root.tags=Multiple root tags
xml.parsing.processing.instruction.name.expected=Processing instruction name expected
xml.parsing.tag.name.expected=Tag name expected
xml.parsing.tag.start.is.not.closed=Tag start is not closed
xml.parsing.top.level.element.is.not.completed=Top level element is not completed
xml.parsing.unclosed.attribute.value=Attribute value is not closed
xml.parsing.unescaped.ampersand.or.nonterminated.character.entity.reference=Unescaped \\& or nonterminated character/entity reference
xml.parsing.unexpected.end.of.file=Unexpected end of file
xml.parsing.unexpected.token=Unexpected token
xml.parsing.unexpected.tokens=Unexpected tokens
xml.parsing.unterminated.processing.instruction=Processing instruction not terminated
xml.parsing.way.too.unbalanced=Way too unbalanced. Stopping attempt to balance tags properly at this point
