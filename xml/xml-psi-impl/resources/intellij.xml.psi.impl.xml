<idea-plugin>
  <dependencies>
    <module name="intellij.platform.backend"/>
    <module name="intellij.xml.psi"/>
    <module name="intellij.xml.parser"/>
    <module name="intellij.xml.frontback.impl"/>
  </dependencies>

  <projectListeners>
    <listener class="com.intellij.polySymbols.html.HtmlPolyContextChangeListener"
              topic="com.intellij.polySymbols.context.PolyContextChangeListener"/>
  </projectListeners>

  <extensionPoints>
    <extensionPoint name="xml.startTagEndToken" interface="com.intellij.psi.xml.StartTagEndTokenProvider" dynamic="true"/>
    <extensionPoint name="xml.xmlExtension" interface="com.intellij.xml.XmlExtension" dynamic="true"/>
    <extensionPoint name="xml.attributeDescriptorsProvider" interface="com.intellij.xml.XmlAttributeDescriptorsProvider" dynamic="true"/>
    <extensionPoint name="xml.elementDescriptorProvider" interface="com.intellij.psi.impl.source.xml.XmlElementDescriptorProvider" dynamic="true"/>
    <extensionPoint name="xml.idContributor" interface="com.intellij.xml.util.XmlIdContributor" dynamic="true"/>
    <extensionPoint name="xml.implicitNamespaceDescriptorProvider" interface="com.intellij.javaee.ImplicitNamespaceDescriptorProvider" dynamic="true"/>
    <extensionPoint name="html.attributeValueProvider" interface="com.intellij.html.impl.providers.HtmlAttributeValueProvider" dynamic="true"/>
    <extensionPoint name="xml.psiPolicy"
                    beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">
      <with attribute="implementationClass" implements="com.intellij.psi.impl.source.xml.XmlPsiPolicy"/>
    </extensionPoint>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceInterface="com.intellij.lang.xml.BasicXmlElementFactory"
                        serviceImplementation="com.intellij.lang.xml.BackendXmlElementFactory"/>
    <applicationService serviceInterface="com.intellij.lang.html.BasicHtmlElementFactory"
                        serviceImplementation="com.intellij.lang.html.BackendHtmlElementFactory"/>
    <applicationService serviceInterface="com.intellij.html.embedding.BasicHtmlRawTextElementFactory"
                        serviceImplementation="com.intellij.lang.html.BackendHtmlElementFactory"/>

    <lang.elementManipulator forClass="com.intellij.psi.xml.XmlAttributeValue"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.XmlAttributeValueManipulator"/>
    <lang.elementManipulator forClass="com.intellij.psi.xml.XmlAttribute"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.XmlAttributeManipulator"/>
    <lang.elementManipulator forClass="com.intellij.psi.xml.XmlToken"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.XmlTokenManipulator"/>
    <lang.elementManipulator forClass="com.intellij.psi.xml.XmlTag"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.XmlTagManipulator"/>
    <lang.elementManipulator forClass="com.intellij.psi.xml.XmlText"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.XmlTextManipulator"/>
    <lang.elementManipulator forClass="com.intellij.psi.xml.XmlProcessingInstruction"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.XmlProcessingInstructionManipulator"/>

    <standardResourceProvider implementation="com.intellij.javaee.InternalResourceProvider"/>

    <projectService serviceInterface="com.intellij.javaee.ExternalResourceManagerExBase" serviceImplementation="com.intellij.javaee.ProjectResources"/>

    <projectService serviceInterface="com.intellij.psi.XmlElementFactory" serviceImplementation="com.intellij.psi.XmlElementFactoryImpl"/>

    <lang.treePatcher language="HTML" implementationClass="com.intellij.lang.xml.XmlTemplateTreePatcher"/>
    <lang.treePatcher language="XML" implementationClass="com.intellij.lang.xml.XmlTemplateTreePatcher"/>

    <documentationCssProvider implementation="com.intellij.documentation.mdn.MdnDocumentationCssProvider"/>

    <lang.ast.factory language="XML" implementationClass="com.intellij.lang.xml.XmlASTFactory"/>
    <lang.ast.factory language="DTD" implementationClass="com.intellij.lang.xml.XmlASTFactory"/>
    <lang.ast.factory language="HTML" implementationClass="com.intellij.lang.xml.XmlASTFactory"/>
    <lang.ast.factory language="XHTML" implementationClass="com.intellij.lang.xml.XmlASTFactory"/>
    <lang.ast.factory language="JAVA_HOLDER_METHOD_TREE" implementationClass="com.intellij.lang.xml.XmlASTFactory"/>

    <lang.parserDefinition language="XsdRegExp" implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.providers.XsdRegExpParserDefinition"/>

    <readWriteAccessDetector implementation="com.intellij.codeInsight.highlighting.XmlReadWriteAccessDetector"/>

    <iconProvider implementation="com.intellij.xml.util.XmlIconProvider"/>

    <metaDataContributor implementation="com.intellij.xml.util.XmlApplicationComponent"/>

    <html.scriptContentProvider language="HTML" implementationClass="com.intellij.psi.impl.source.html.TemplateHtmlScriptContentProvider"/>

    <xml.psiPolicy language="HTML" implementationClass="com.intellij.psi.impl.source.xml.behavior.HtmlPsiPolicy"/>
    <xml.psiPolicy language="XHTML" implementationClass="com.intellij.psi.impl.source.xml.behavior.EncodeEachSymbolPolicy"/>

    <xml.fileNSInfoProvider implementation="com.intellij.xml.util.HtmlFileNSInfoProvider"/>

    <xml.xmlExtension implementation="com.intellij.xml.HtmlXmlExtension" id="html"/>

    <polySymbols.queryScopeContributor
      implementation="com.intellij.polySymbols.html.HtmlSymbolQueryScopeContributor"/>
    <xml.attributeDescriptorsProvider id="html-default"
      implementation="com.intellij.polySymbols.html.attributes.HtmlAttributeSymbolDescriptorsProvider"/>
    <xml.elementDescriptorProvider
      implementation="com.intellij.polySymbols.html.elements.HtmlElementSymbolDescriptorsProvider"/>
    <vetoRenameCondition implementation="com.intellij.polySymbols.html.HtmlSymbolRenameHandlerVeto"/>
    <xml.xmlExtension implementation="com.intellij.polySymbols.html.HtmlSymbolsXmlExtension" id="poly-symbols"
                      order="before html, after react"/>
  </extensions>
</idea-plugin>