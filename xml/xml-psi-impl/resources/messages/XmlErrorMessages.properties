plugin.reference.message.problem=Reference with class ''{0}'' provides invalid message pattern ''{1}''
unknown.html.tag=Unknown html tag {0}
unescaped.ampersand=Unescaped \\&
escape.ampersand.quickfix=Escape ampersand
rename.start.tag.name.intention=Rename start tag ''{0}'' to ''{1}''
rename.end.tag.name.intention=Rename end tag ''{0}'' to ''{1}''
extra.closing.tag.for.empty.element=Closing tag is redundant
wrong.closing.tag.name=Wrong closing tag name
tag.has.wrong.closing.tag.name=Start tag has wrong closing tag
element.is.not.allowed.here=Element {0} is not allowed here
element.must.be.declared=Element {0} must be declared
element.doesnt.have.required.attribute=Element {0} doesn''t have required attribute {1}
wrong.root.element=Wrong root element
unbound.namespace=Namespace ''{0}'' is not bound
unbound.namespace.no.param=Namespace is not bound
attribute.is.not.allowed.here=Attribute {0} is not allowed here
attribute.is.not.boolean=Attribute {0} is not boolean
empty.attribute.is.not.allowed=Empty attribute {0} is not allowed
duplicate.attribute=Duplicate attribute {0}
duplicate.id.reference=Duplicate id reference
invalid.id.reference=Invalid id reference
uri.is.not.registered=URI is not registered (Settings | Languages \\& Frameworks | Schemas and DTDs)
registered.resource.is.not.recognized=Resource registered by this uri is not recognized (Settings | Languages \\& Frameworks | Schemas and DTDs)
should.have.fixed.value={0} should have fixed value {1}

#quickfixes
insert.required.attribute.quickfix.text=Insert required attribute {0}
insert.required.attribute.quickfix.family=Insert required attribute
remove.attribute.quickfix.text=Remove attribute {0}
remove.attribute.quickfix.family=Remove attribute
remove.tag.quickfix.text=Remove tag {0}
remove.tag.quickfix.family=Remove tag
add.attribute.value.quickfix.text=Add attribute value
remove.extra.closing.tag.quickfix=Remove extra closing tag
create.namespace.declaration.quickfix=Create {0} declaration
select.namespace.title={0} To Import
select.namespace.location.title=Select Namespace Location
declare.id.in.comment.quickfix=Declare invalid id in comment annotation
switch.to.html5.quickfix.text=Switch to HTML5 language level

element.is.not.closed=Element is not closed
named.element.is.not.closed=Element {0} is not closed
top.level.element.is.not.completed=Top level element is not completed
expected.attribute.eq.sign='=' expected
tag.start.is.not.closed=Tag start is not closed
unescaped.ampersand.or.nonterminated.character.entity.reference=Unescaped \\& or nonterminated character/entity reference
expected.prologue.tag.termination.expected='?>' expected
expected.whitespace=Whitespace expected
wrong.value=Wrong {0} value
way.too.unbalanced=Way too unbalanced. Stopping attempt to balance tags properly at this point

cannot.resolve.taglib.uri=Cannot resolve taglib with uri {0}
jsp.unparseable.content=Unparseable content
jsp.directive.end.expected=Directive end expected
attribute.value.expected=Attribute value expected
quote.expected=Quote expected
looking.in.tlds=Looking in available tag libraries
finding.acceptable.uri=Finding Acceptable URIs
looking.in.schemas=Looking in registered xml schemas

# parsing errors
xml.parsing.absent.root.tag=Valid XML document must have a root tag
xml.parsing.unexpected.tokens=Unexpected tokens
xml.parsing.unexpected.end.of.file=Unexpected end of file
xml.parsing.unexpected.token=Unexpected token
xml.parsing.multiple.root.tags=Multiple root tags
xml.parsing.tag.name.expected=Tag name expected
xml.parsing.bad.character=Bad character
xml.parsing.unclosed.attribute.value=Attribute value is not closed
xml.parsing.attribute.value.expected=Attribute value expected
xml.parsing.processing.instruction.name.expected=Processing instruction name expected
xml.parsing.unterminated.processing.instruction=Processing instruction not terminated
xml.parsing.closing.tag.matches.nothing=Closing tag matches nothing
xml.parsing.closing.tag.name.missing=Closing tag name missing
xml.parsing.closing.tag.is.not.done=Closing tag is not done
attribute.should.be.preceded.with.space=There should be a space between attribute and previous attribute
cdata.end.should.not.appear.in.content.unless.to.mark.end.of.cdata.section=Character sequence ']]>' must not appear in content unless used to mark the end of a CDATA section
xml.declaration.should.precede.all.document.content=Xml declaration should precede all document content

dtd.parser.message.whitespace.expected=Whitespace expected
dtd.parser.message.left.paren.or.entityref.or.empty.or.any.expected=( or entity ref or EMPTY or ANY expected
dtd.parser.message.name.expected=XML name expected
dtd.parser.message.literal.public.system.expected=Literal, PUBLIC or SYSTEM expected
dtd.parser.message.name.or.entity.ref.expected=XML name or entity ref expected
dtd.parser.message.rbrace.expected=) expected

duplicate.declaration=Non-unique declaration name {0}
xml.validate.external.resource.is.not.registered=External resource {0} is not registered

xml.schema.validation.attr.not.allowed.with.ref=Attribute {0} is not allowed here when element reference is used
xml.schema.validation.max.occurs.should.be.not.less.than.min.occurs=maxOccurs value should be greater than minOccurs value
xml.schema.validation.name.or.ref.should.present=Either 'name' or 'ref' attribute should present
xml.schema.validation.default.or.fixed.should.be.specified.but.not.both='default' and 'fixed' attributes should not be present in the same time
