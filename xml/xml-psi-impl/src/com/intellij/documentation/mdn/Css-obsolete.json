{
  "license": {
    "name": "CC-BY-SA 2.5",
    "url": "https://creativecommons.org/licenses/by-sa/2.5/"
  },
  "author": {
    "name": "Mozzila Contributors",
    "url": "https://github.com/mdn/content"
  },
  "lang": "en-us",
  "atRules": {
    "viewport": {
      "url": "$MDN_URL$/web/CSS/@viewport",
      "status": [
        "Obsolete"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard note\">\n<p><strong>Note:</strong> See <a href=\"https://github.com/w3c/csswg-drafts/issues/4766\" class=\"external\" rel=\" noopener\">https://github.com/w3c/csswg-drafts/issues/4766</a> for discussion around @viewport's removal from the standards track.</p>\n</div>\n<p>The <strong><code>@viewport</code></strong> <a href=\"$MDN_URL$/Web/CSS\" data-flaw=\"link1\">CSS</a> <a href=\"$MDN_URL$/Web/CSS/At-rule\" data-flaw=\"link2\">at-rule</a> lets you configure the <a href=\"$MDN_URL$/Glossary/Viewport\">viewport</a> through which the document is viewed. It's primarily used for mobile devices, but is also used by desktop browsers that support features like \"snap to edge\" (such as Microsoft Edge).</p>\n<p>Lengths specified as percentages are calculated relative to the <strong>initial viewport</strong>, which is the viewport before any user agent or authored styles have had an opportunity to adjust the viewport. This is typically based on the size of the window on desktop browsers that aren't in full screen mode.</p>\n<p>On mobile devices (or desktop devices that are in full screen mode), the initial viewport is usually the portion of a device's screen that is available for application use. This may be either the full screen or the full screen area minus areas controlled by the operating system (such as a taskbar) or the application-available screen area (either the full screen or the screen minus any areas owned by the operating system or other applications).</p>\n<div class=\"code-example\"><pre class=\"brush: css no-line-numbers notranslate\"><code>@viewport {\n  width: 100vw; /*Sets the width of the actual viewport to the device width*/\n}\n</code></pre></div>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The use of <code>&lt;meta name=\"viewport\"&gt;</code> tag overrides <code>@viewport</code></p>\n</div>"
    }
  },
  "dataTypes": {},
  "functions": {},
  "properties": {
    "ime-mode": {
      "url": "$MDN_URL$/web/CSS/ime-mode",
      "status": [
        "Obsolete"
      ],
      "compatibility": {
        "Firefox": "3"
      },
      "doc": "The <strong><code>ime-mode</code></strong> <a href=\"$MDN_URL$/Web/CSS\">CSS</a> property controls the state of the input method editor (IME) for text fields. This property is obsolete.</p>\n<div class=\"code-example\"><pre class=\"brush:css no-line-numbers notranslate\"><code>/* Keyword values */\nime-mode: auto;\nime-mode: normal;\nime-mode: active;\nime-mode: inactive;\nime-mode: disabled;\n/* Global values */\nime-mode: inherit;\nime-mode: initial;\nime-mode: revert;\nime-mode: unset;\n</code></pre></div>\n<p>The <code>ime-mode</code> property is only partially and inconsistently implemented in browsers. It was introduced by Microsoft with Internet Explorer 5 as a proprietary extension: <a href=\"https://msdn.microsoft.com/library/ms530767(VS.85).aspx\" class=\"external\" rel=\" noopener\">-ms-ime-mode Attribute | imeMode Property</a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> In general, it's not appropriate for a public web site to change the IME mode. This property should only be used for private web applications or to undo the property if it was previously set by legacy code.</p>\n</div>",
      "formalSyntax": "auto | normal | active | inactive | disabled",
      "values": {
        "auto": "No change is made to the current input method editor state. This is the default.",
        "normal": "The IME state should be normal; this value can be used in a user style sheet to override the page's setting. <em>This value is not supported by Internet Explorer.</em>",
        "active": "The input method editor is initially active; text entry is performed through it unless the user specifically dismisses it. <em>Not supported on Linux.</em>",
        "inactive": "The input method editor is initially inactive, but the user may activate it if they wish. <em>Not supported on Linux.</em>",
        "disabled": "The input method editor is disabled and may not be activated by the user."
      }
    },
    "scroll-snap-coordinate": {
      "url": "$MDN_URL$/web/CSS/scroll-snap-coordinate",
      "status": [
        "Obsolete"
      ],
      "compatibility": {},
      "doc": "The <strong><code>scroll-snap-coordinate</code></strong> <a href=\"$MDN_URL$/Web/CSS\">CSS</a> property defines the x and y coordinate positions within an element that will align with its nearest ancestor scroll container's <a href=\"$MDN_URL$/Web/CSS/scroll-snap-destination\"><code>scroll-snap-destination</code></a> for each respective axis.</p>\n<div class=\"code-example\"><pre class=\"brush:css no-line-numbers notranslate\"><code>/* Keyword value */\nscroll-snap-coordinate: none;\n/* &lt;position&gt; values */\nscroll-snap-coordinate: 50px 50px;                   /* Single coordinate */\nscroll-snap-coordinate: 100px 100px, 100px bottom;   /* Multiple coordinates */\n/* Global values */\nscroll-snap-coordinate: inherit;\nscroll-snap-coordinate: initial;\nscroll-snap-coordinate: unset;</code></pre></div>\n<p>If the element has been transformed, the snap coordinates are likewise transformed, thus aligning the snap points with the element as it is displayed.</p>",
      "formalSyntax": "none | &lt;position&gt;#\n  &lt;position&gt; = [ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | &lt;length-percentage&gt; ] [ top | center | bottom | &lt;length-percentage&gt; ]? | [ [ left | right ] &lt;length-percentage&gt; ] &amp;&amp; [ [ top | bottom ] &lt;length-percentage&gt; ] ]\n    &lt;length-percentage&gt; = &lt;length&gt; | &lt;percentage&gt;",
      "values": {
        "none": "Specifies that the element does not contribute to a snap point.",
        "&lt;position&gt;": "Specifies the offset of the snap coordinates from the start edge of the element’s border box. For each pairing, the first value gives the x coordinate of the snap coordinate, the second value its y coordinate."
      }
    },
    "scroll-snap-destination": {
      "url": "$MDN_URL$/web/CSS/scroll-snap-destination",
      "status": [
        "Obsolete"
      ],
      "compatibility": {},
      "doc": "The <strong><code>scroll-snap-destination</code></strong> <a href=\"$MDN_URL$/Web/CSS\">CSS</a> property defines the position in x and y coordinates within the scroll container's visual <a href=\"$MDN_URL$/Glossary/Viewport\">viewport</a> which element snap points align with.</p>\n<div class=\"code-example\"><pre class=\"brush:css no-line-numbers notranslate\"><code>/* &lt;position&gt; value */\nscroll-snap-destination: 400px 600px;\n/* Global values */\nscroll-snap-destination: inherit;\nscroll-snap-destination: initial;\nscroll-snap-destination: unset;\n</code></pre></div>",
      "formalSyntax": "&lt;position&gt;\n  &lt;position&gt; = [ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | &lt;length-percentage&gt; ] [ top | center | bottom | &lt;length-percentage&gt; ]? | [ [ left | right ] &lt;length-percentage&gt; ] &amp;&amp; [ [ top | bottom ] &lt;length-percentage&gt; ] ]\n    &lt;length-percentage&gt; = &lt;length&gt; | &lt;percentage&gt;",
      "values": {
        "&lt;position&gt;": "Specifies the offset of the snap destination from the start edge of the scroll container’s visual viewport. The first value gives the x coordinate of the snap destination, the second value its y coordinate."
      }
    },
    "scroll-snap-points-x": {
      "url": "$MDN_URL$/web/CSS/scroll-snap-points-x",
      "status": [
        "Obsolete"
      ],
      "compatibility": {},
      "doc": "The <strong><code>scroll-snap-points-x</code></strong> <a href=\"$MDN_URL$/Web/CSS\">CSS</a> property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.</p>\n<div class=\"code-example\"><pre class=\"brush:css no-line-numbers notranslate\"><code>/* Keyword value */\nscroll-snap-points-x: none;\n/* Repeating snap points */\nscroll-snap-points-x: repeat(400px);\n/* Global values */\nscroll-snap-points-x: inherit;\nscroll-snap-points-x: initial;\nscroll-snap-points-x: unset;\n</code></pre></div>",
      "formalSyntax": "none | repeat( &lt;length-percentage&gt; )\n  &lt;length-percentage&gt; = &lt;length&gt; | &lt;percentage&gt;",
      "values": {
        "none": "The scroll container does not define any snap points. Elements within the scroll container may still define snap points on behalf of the scroll container.",
        "repeat(&lt;length-percentage&gt;)": "Defines an interval at which snap points are defined, starting from the container's relevant start edge. Only positive lengths are allowed. Percentages refer to the width of the container."
      }
    },
    "scroll-snap-points-y": {
      "url": "$MDN_URL$/web/CSS/scroll-snap-points-y",
      "status": [
        "Obsolete"
      ],
      "compatibility": {},
      "doc": "The <strong><code>scroll-snap-points-y</code></strong> <a href=\"$MDN_URL$/Web/CSS\">CSS</a> property defines the vertical positioning of snap points within the content of the scroll container they are applied to.</p>\n<div class=\"code-example\"><pre class=\"brush:css no-line-numbers notranslate\"><code>/* Keyword value */\nscroll-snap-points-y: none;\n/* Repeated snap points */\nscroll-snap-points-y: repeat(400px);\n/* Global values */\nscroll-snap-points-y: inherit;\nscroll-snap-points-y: initial;\nscroll-snap-points-y: unset;\n</code></pre></div>",
      "formalSyntax": "none | repeat( &lt;length-percentage&gt; )\n  &lt;length-percentage&gt; = &lt;length&gt; | &lt;percentage&gt;",
      "values": {
        "none": "The scroll container does not define any snap points. Elements within the scroll container may still define snap points on behalf of the scroll container.",
        "repeat(&lt;length-percentage&gt;)": "Defines an interval at which snap points are defined, starting from the container's relevant start edge. Only positive lengths are allowed. Percentages refer to the width of the container."
      }
    },
    "scroll-snap-type-x": {
      "url": "$MDN_URL$/web/CSS/scroll-snap-type-x",
      "status": [
        "Obsolete"
      ],
      "compatibility": {
        "Safari": "9",
        "SafariIOS": "9"
      },
      "doc": "The <strong><code>scroll-snap-type-x</code></strong> <a href=\"$MDN_URL$/Web/CSS\">CSS</a> property defines how strictly snap points are enforced on the horizontal axis of the scroll container in case there is one.</p>\n<p>Specifying any precise animations or physics used to enforce those snap points is not covered by this property but instead left up to the user agent.</p>\n<div class=\"code-example\"><pre class=\"brush: css no-line-numbers notranslate\"><code>/* Keyword values */\nscroll-snap-type-x: none;\nscroll-snap-type-x: mandatory;\nscroll-snap-type-x: proximity;\n/* Global values */\nscroll-snap-type-x: inherit;\nscroll-snap-type-x: initial;\nscroll-snap-type-x: unset;\n</code></pre></div>",
      "formalSyntax": "none | mandatory | proximity",
      "values": {
        "none": "When the visual <a href=\"$MDN_URL$/Glossary/Viewport\">viewport</a> of this scroll container is scrolled horizontally, it must ignore snap points.",
        "mandatory": "The visual viewport of this scroll container will rest on a snap point if it isn't currently scrolled horizontally. That means it snaps on that point when the scroll action finished, if possible. If content is added, moved, deleted or resized the scroll offset will be adjusted to maintain the resting on that snap point.",
        "proximity": "The visual viewport of this scroll container may come to rest on a snap point if it isn't currently scrolled horizontally considering the user agent's scroll parameters. If content is added, moved, deleted or resized the scroll offset may be adjusted to maintain the resting on that snap point."
      }
    },
    "scroll-snap-type-y": {
      "url": "$MDN_URL$/web/CSS/scroll-snap-type-y",
      "status": [
        "Obsolete"
      ],
      "compatibility": {},
      "doc": "The <strong><code>scroll-snap-type-y</code></strong> <a href=\"$MDN_URL$/Web/CSS\">CSS</a> property defines how strictly snap points are enforced on the vertical axis of the scroll container in case there is one.</p>\n<p>Specifying any precise animations or physics used to enforce those snap points is not covered by this property but instead left up to the user agent.</p>\n<div class=\"code-example\"><pre class=\"brush: css no-line-numbers notranslate\"><code>/* Keyword values */\nscroll-snap-type-y: none;\nscroll-snap-type-y: mandatory;\nscroll-snap-type-y: proximity;\n/* Global values */\nscroll-snap-type-y: inherit;\nscroll-snap-type-y: initial;\nscroll-snap-type-y: unset;\n</code></pre></div>",
      "formalSyntax": "none | mandatory | proximity",
      "values": {
        "none": "When the visual <a href=\"$MDN_URL$/Glossary/Viewport\">viewport</a> of this scroll container is scrolled vertically, it must ignore snap points.",
        "mandatory": "The visual viewport of this scroll container will rest on a snap point if it isn't currently scrolled vertically. That means it snaps on that point when the scroll action finished, if possible. If content is added, moved, deleted or resized the scroll offset will be adjusted to maintain the resting on that snap point.",
        "proximity": "The visual viewport of this scroll container may come to rest on a snap point if it isn't currently scrolled vertically considering the user agent's scroll parameters. If content is added, moved, deleted or resized the scroll offset may be adjusted to maintain the resting on that snap point."
      }
    }
  },
  "pseudoClasses": {},
  "pseudoElements": {}
}